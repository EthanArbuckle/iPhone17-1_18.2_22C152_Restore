uint64_t AsyncSequence<>.buffer(policy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v6 = *(void *)(a2 - 8);
  v7 = MEMORY[0x270FA5388](a1);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void *)v7;
  v11 = *(unsigned char *)(v7 + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v3, a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a3, v9, a2);
  result = type metadata accessor for AsyncBufferSequence();
  v13 = a3 + *(int *)(result + 36);
  *(void *)v13 = v10;
  *(unsigned char *)(v13 + 8) = v11;
  return result;
}

uint64_t static AsyncBufferSequencePolicy.bounded(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25921C090(a1, 0, a2);
}

void static AsyncBufferSequencePolicy.unbounded.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 3;
}

uint64_t static AsyncBufferSequencePolicy.bufferingLatest(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25921C090(a1, 1, a2);
}

uint64_t static AsyncBufferSequencePolicy.bufferingOldest(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25921C090(a1, 2, a2);
}

uint64_t sub_25921C090@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    *(void *)a3 = result;
    *(unsigned char *)(a3 + 8) = a2;
  }
  return result;
}

uint64_t AsyncBufferSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AsyncBufferSequence.StorageType();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  v12 = (uint64_t *)((char *)&v19 - v11);
  uint64_t v13 = v2 + *(int *)(a1 + 36);
  uint64_t v14 = *(void *)v13;
  switch(*(unsigned char *)(v13 + 8))
  {
    case 1:
      if (v14 < 1) {
        goto LABEL_9;
      }
      type metadata accessor for UnboundedBufferStorage();
      uint64_t v15 = v2;
      uint64_t v16 = v14;
      int v17 = 0;
      goto LABEL_8;
    case 2:
      if (v14 <= 0) {
        goto LABEL_9;
      }
      type metadata accessor for UnboundedBufferStorage();
      uint64_t v15 = v2;
      uint64_t v16 = v14;
      int v17 = 1;
LABEL_8:
      void *v12 = sub_259236F28(v15, v16, v17);
      break;
    case 3:
      type metadata accessor for UnboundedBufferStorage();
      void *v12 = sub_259236F28(v2, 0, 2);
      break;
    default:
      if (v14 < 1)
      {
LABEL_9:
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2, v5);
        sub_259309F80();
      }
      else
      {
        type metadata accessor for BoundedBufferStorage();
        void *v12 = sub_25922C8C4(v2, v14);
      }
      break;
  }
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v10 + 32))(a2, v12, v9);
}

uint64_t type metadata accessor for AsyncBufferSequence.StorageType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t AsyncBufferSequence.Iterator.next()(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = v2;
  v3[4] = *(void *)(a2 + 24);
  v3[5] = *(void *)(a2 + 16);
  v3[6] = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  v3[7] = sub_25930A920();
  uint64_t v4 = sub_25930A240();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  uint64_t v5 = sub_25930A240();
  v3[12] = v5;
  v3[13] = *(void *)(v5 - 8);
  v3[14] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[15] = AssociatedTypeWitness;
  v3[16] = *(void *)(AssociatedTypeWitness - 8);
  v3[17] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for AsyncBufferSequence.StorageType();
  v3[18] = v7;
  v3[19] = *(void *)(v7 - 8);
  v3[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25921C5E4, 0, 0);
}

uint64_t sub_25921C5E4()
{
  (*(void (**)(void, void, void))(v0[19] + 16))(v0[20], v0[3], v0[18]);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v0[25] = *(void *)v0[20];
      uint64_t v2 = (void *)swift_task_alloc();
      v0[26] = v2;
      *uint64_t v2 = v0;
      v2[1] = sub_25921CA48;
      uint64_t v3 = v0[11];
      return sub_259229ADC(v3);
    }
    else
    {
      v0[27] = *(void *)v0[20];
      uint64_t v14 = (void *)swift_task_alloc();
      v0[28] = v14;
      *uint64_t v14 = v0;
      v14[1] = sub_25921CD90;
      uint64_t v15 = v0[10];
      return sub_259234810(v15);
    }
  }
  else
  {
    uint64_t v5 = v0[20];
    uint64_t v7 = v0[16];
    uint64_t v6 = v0[17];
    uint64_t v8 = v0[15];
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    v0[21] = v9;
    v0[22] = (v7 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v9(v6, v5, v8);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[23] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_25921C814;
    uint64_t v12 = v0[14];
    uint64_t v13 = v0[15];
    return MEMORY[0x270FA1E80](v12, v13, AssociatedConformanceWitness);
  }
}

uint64_t sub_25921C814()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25921D0D8;
  }
  else {
    uint64_t v2 = sub_25921C928;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25921C928()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[21];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v10 = v0[14];
  uint64_t v5 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v7 = v0[2];
  uint64_t v6 = v0[3];
  (*(void (**)(uint64_t, void))(v0[19] + 8))(v6, v0[18]);
  v1(v6, v2, v3);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v7, v10, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_25921CA48()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25921CB44, 0, 0);
}

uint64_t sub_25921CB44()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[7];
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[8];
    uint64_t v5 = v0[9];
    uint64_t v6 = v0[6];
    uint64_t v7 = v0[2];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v7, 1, 1, v6);
  }
  else
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_259243B1C(v2, WitnessTable);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    (*(void (**)(void, void, uint64_t, void))(*(void *)(v0[6] - 8) + 56))(v0[2], 0, 1, v0[6]);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_25921CD90()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25921CE8C, 0, 0);
}

uint64_t sub_25921CE8C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[8];
    uint64_t v5 = v0[9];
    uint64_t v6 = v0[6];
    uint64_t v7 = v0[2];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v7, 1, 1, v6);
  }
  else
  {
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_259243B1C(v2, WitnessTable);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    (*(void (**)(void, void, uint64_t, void))(*(void *)(v0[6] - 8) + 56))(v0[2], 0, 1, v0[6]);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_25921D0D8()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25921D190(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25921D238;
  return AsyncBufferSequence.Iterator.next()(a1, a2);
}

uint64_t sub_25921D238()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25921D32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[3] = AssociatedTypeWitness;
  v6[4] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = swift_task_alloc();
  v6[5] = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  v6[6] = v14;
  *uint64_t v14 = v6;
  v14[1] = sub_25921D47C;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v13);
}

uint64_t sub_25921D47C()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0) {
    (*(void (**)(void, void, void))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  }
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v3[1];
  return v4();
}

uint64_t sub_25921D5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  AsyncBufferSequence.makeAsyncIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t default argument 1 of DatabaseConnection.query<A>(sql:bindings:step:)()
{
  return MEMORY[0x263F8EE78];
}

uint64_t default argument 0 of PhotosFaceDatabase.init(location:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_259309250();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_259309300();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2F3790 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v6, (uint64_t)qword_26B2F3778);
  sub_259309290();
  v12[0] = 0x6146736F746F6850;
  v12[1] = 0xEA00000000006563;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F06E50], v2);
  sub_25921DB48();
  sub_2593092F0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 0, 1, v10);
}

uint64_t default argument 1 of PhotosFaceDatabase.queryPhotos(sql:bindings:)()
{
  return MEMORY[0x263F8EE78];
}

uint64_t default argument 1 of PhotosFaceDatabase.queryPhotos<A>(sql:bindings:extraReading:)()
{
  return MEMORY[0x263F8EE78];
}

unint64_t sub_25921D8B4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C998);
  uint64_t v2 = (void *)sub_25930A610();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_25925E538(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t default argument 1 of DatabaseConnection.queryUnique<A>(sql:bindings:step:)()
{
  return MEMORY[0x263F8EE78];
}

uint64_t default argument 4 of SyncedPhotosFace.init(id:day:uncached:cached:complete:)()
{
  return 1;
}

uint64_t default argument 1 of LazyData.init(filename:isTempFile:)()
{
  return 0;
}

unint64_t default argument 1 of MessageBody.init(metadata:files:version:)()
{
  return sub_25921D8B4(MEMORY[0x263F8EE78]);
}

unint64_t default argument 1 of MessageBody.init(data:files:version:)()
{
  return sub_25921D8B4(MEMORY[0x263F8EE78]);
}

uint64_t default argument 2 of Message.init(operation:data:files:complete:)()
{
  return MEMORY[0x263F8EE80];
}

uint64_t default argument 0 of MessageDemultiplexer.init(timeout:logTag:)()
{
  return sub_259264E74(0xD000000000000015, 0x800000025930B4C0, 0x86AC351052600000);
}

unint64_t default argument 1 of MessageDemultiplexer.init(timeout:logTag:)()
{
  return 0xD000000000000010;
}

uint64_t default argument 0 of Collection<>.parallelForEach(parallelism:block:)()
{
  return 5;
}

uint64_t default argument 0 of Collection<>.parallelMap<A>(parallelism:transform:)()
{
  return 5;
}

uint64_t default argument 0 of Collection<>.parallelFilter(parallelism:predicate:)()
{
  return 5;
}

uint64_t default argument 0 of SeedableRandom.init(bits:)()
{
  return 64;
}

uint64_t default argument 1 of SeedableRandom.init(seed:bits:)()
{
  return 64;
}

void *sub_25921DA98@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_25921DAA8(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_25921DAB4(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_25921DB48()
{
  unint64_t result = qword_26B2F3D30;
  if (!qword_26B2F3D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2F3D30);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_25921DBE0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_25921DC80()
{
  return swift_getWitnessTable();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for AsyncBufferSequencePolicy()
{
  return &type metadata for AsyncBufferSequencePolicy;
}

uint64_t sub_25921DCCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_25921DCD4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25921DD6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    char v11 = *(unsigned char *)(v10 + 8);
    unint64_t v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v12 = *(void *)v10;
    *(unsigned char *)(v12 + 8) = v11;
  }
  return v4;
}

uint64_t sub_25921DE6C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_25921DE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_25921DF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_25921DFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_25921E024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_25921E0A8(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFC) {
    unsigned int v7 = 252;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25921E208);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xFC) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v17 = *(unsigned __int8 *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 > 3) {
    return (v17 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_25921E21C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFC) {
    unsigned int v8 = 252;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_46;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 < 0xFC)
            {
              unint64_t v21 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
              if (a2 > 0xFC)
              {
                *(unsigned char *)(v21 + 8) = 0;
                *(void *)unint64_t v21 = a2 - 253;
              }
              else
              {
                *(unsigned char *)(v21 + 8) = -(char)a2;
              }
            }
            else
            {
              v20 = *(void (**)(void))(v6 + 56);
              v20();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = (~(_BYTE)v8 + a2);
  if (v10 < 4) {
    int v18 = (v16 >> v11) + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 >= 4) {
    unsigned int v19 = v16;
  }
  else {
    unsigned int v19 = v17;
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v19;
  }
  else {
    *(_DWORD *)a1 = v19;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x25921E434);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for AsyncBufferSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25921E474()
{
  uint64_t result = type metadata accessor for AsyncBufferSequence.StorageType();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_25921E508(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v3 <= 8) {
    unint64_t v3 = 8;
  }
  unsigned int v4 = a1[v3];
  unsigned int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        int v8 = (v7 | (v5 << (8 * v3))) + 3;
        unsigned int v4 = v7 + 3;
        if (v3 < 4) {
          unsigned int v4 = v8;
        }
        break;
      default:
        break;
    }
  }
  if (v4 == 2 || v4 == 1)
  {
    return swift_release();
  }
  else
  {
    size_t v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
    return v10(a1, AssociatedTypeWitness);
  }
}

void *sub_25921E678(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 3;
        unsigned int v6 = v9 + 3;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 2)
  {
    *a1 = *(void *)a2;
    char v11 = 2;
  }
  else
  {
    if (v6 != 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v5) = 0;
      return a1;
    }
    *a1 = *(void *)a2;
    char v11 = 1;
  }
  *((unsigned char *)a1 + v5) = v11;
  swift_retain();
  return a1;
}

unsigned __int8 *sub_25921E7F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    if (*(void *)(v5 + 64) <= 8uLL) {
      uint64_t v6 = 8;
    }
    else {
      uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    }
    unsigned int v7 = a1[v6];
    unsigned int v8 = v7 - 3;
    if (v7 >= 3)
    {
      if (v6 <= 3) {
        uint64_t v9 = v6;
      }
      else {
        uint64_t v9 = 4;
      }
      switch(v9)
      {
        case 1:
          int v10 = *a1;
          goto LABEL_14;
        case 2:
          int v10 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v10 = *(_DWORD *)a1;
LABEL_14:
          int v11 = (v10 | (v8 << (8 * v6))) + 3;
          unsigned int v7 = v10 + 3;
          if (v6 < 4) {
            unsigned int v7 = v11;
          }
          break;
        default:
          break;
      }
    }
    if (v7 == 2 || v7 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    unsigned int v12 = a2[v6];
    unsigned int v13 = v12 - 3;
    if (v12 >= 3)
    {
      if (v6 <= 3) {
        uint64_t v14 = v6;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a2;
          goto LABEL_29;
        case 2:
          int v15 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v15 = *(_DWORD *)a2;
LABEL_29:
          int v16 = (v15 | (v13 << (8 * v6))) + 3;
          unsigned int v12 = v15 + 3;
          if (v6 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    if (v12 == 2)
    {
      *(void *)a1 = *(void *)a2;
      char v17 = 2;
    }
    else
    {
      if (v12 != 1)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        a1[v6] = 0;
        return a1;
      }
      *(void *)a1 = *(void *)a2;
      char v17 = 1;
    }
    a1[v6] = v17;
    swift_retain();
  }
  return a1;
}

void *sub_25921EA50(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 3;
        unsigned int v6 = v9 + 3;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 2)
  {
    *a1 = *(void *)a2;
    char v11 = 2;
  }
  else if (v6 == 1)
  {
    *a1 = *(void *)a2;
    char v11 = 1;
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v5) = v11;
  return a1;
}

unsigned __int8 *sub_25921EBCC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    if (*(void *)(v5 + 64) <= 8uLL) {
      uint64_t v6 = 8;
    }
    else {
      uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    }
    unsigned int v7 = a1[v6];
    unsigned int v8 = v7 - 3;
    if (v7 >= 3)
    {
      if (v6 <= 3) {
        uint64_t v9 = v6;
      }
      else {
        uint64_t v9 = 4;
      }
      switch(v9)
      {
        case 1:
          int v10 = *a1;
          goto LABEL_14;
        case 2:
          int v10 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v10 = *(_DWORD *)a1;
LABEL_14:
          int v11 = (v10 | (v8 << (8 * v6))) + 3;
          unsigned int v7 = v10 + 3;
          if (v6 < 4) {
            unsigned int v7 = v11;
          }
          break;
        default:
          break;
      }
    }
    if (v7 == 2 || v7 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    unsigned int v12 = a2[v6];
    unsigned int v13 = v12 - 3;
    if (v12 >= 3)
    {
      if (v6 <= 3) {
        uint64_t v14 = v6;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a2;
          goto LABEL_29;
        case 2:
          int v15 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v15 = *(_DWORD *)a2;
LABEL_29:
          int v16 = (v15 | (v13 << (8 * v6))) + 3;
          unsigned int v12 = v15 + 3;
          if (v6 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    if (v12 == 2)
    {
      *(void *)a1 = *(void *)a2;
      char v17 = 2;
    }
    else if (v12 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v17 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      char v17 = 0;
    }
    a1[v6] = v17;
  }
  return a1;
}

uint64_t sub_25921EE20(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = 8;
  if (v4 > 8) {
    uint64_t v5 = v4;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v10 < 2)
    {
LABEL_22:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 3) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_22;
  }
LABEL_14:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 254;
}

void sub_25921EF8C(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  size_t v7 = v6 + 1;
  if (a3 < 0xFE)
  {
    int v8 = 0;
  }
  else if (v7 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << (8 * v7)) - 253) >> (8 * v7)) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v9 = a2 - 254;
    if (v7 < 4)
    {
      int v10 = (v9 >> (8 * v7)) + 1;
      if (v6 != -1)
      {
        int v12 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if (v7 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v7 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v7] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v7] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x25921F174);
      case 4:
        *(_DWORD *)&a1[v7] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v7] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v6] = -(char)a2;
        break;
    }
  }
}

uint64_t type metadata accessor for AsyncBufferSequence.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t getEnumTagSinglePayload for Message.Operation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Message.Operation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25921F240(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_25921F25C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AsyncBufferSequencePolicy._Policy()
{
  return &type metadata for AsyncBufferSequencePolicy._Policy;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for PFCTimePosition(uint64_t a1)
{
}

void sub_25921F2AC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_25921F2F4()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_25921F3A0(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (unint64_t)(v6 + 1) > 0x18)
  {
    uint64_t v9 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    unsigned int v10 = a2[v6];
    unsigned int v11 = v10 - 3;
    if (v10 >= 3)
    {
      if (v6 <= 3) {
        uint64_t v12 = v6;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a2;
          goto LABEL_19;
        case 2:
          int v13 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v13 = *(_DWORD *)a2;
LABEL_19:
          int v14 = (v13 | (v11 << (8 * v6))) + 3;
          unsigned int v10 = v13 + 3;
          if (v6 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 2)
    {
      *a1 = *(void *)a2;
      char v15 = 2;
    }
    else
    {
      if (v10 != 1)
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        *((unsigned char *)a1 + v6) = 0;
        return a1;
      }
      *a1 = *(void *)a2;
      char v15 = 1;
    }
    *((unsigned char *)a1 + v6) = v15;
  }
  swift_retain();
  return a1;
}

uint64_t sub_25921F55C(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v3 <= 8) {
    unint64_t v3 = 8;
  }
  unsigned int v4 = a1[v3];
  unsigned int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        int v8 = (v7 | (v5 << (8 * v3))) + 3;
        unsigned int v4 = v7 + 3;
        if (v3 < 4) {
          unsigned int v4 = v8;
        }
        break;
      default:
        break;
    }
  }
  if (v4 == 2 || v4 == 1)
  {
    return swift_release();
  }
  else
  {
    unsigned int v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
    return v10(a1, AssociatedTypeWitness);
  }
}

void *sub_25921F6CC(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 3;
        unsigned int v6 = v9 + 3;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 2)
  {
    *a1 = *(void *)a2;
    char v11 = 2;
  }
  else
  {
    if (v6 != 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v5) = 0;
      return a1;
    }
    *a1 = *(void *)a2;
    char v11 = 1;
  }
  *((unsigned char *)a1 + v5) = v11;
  swift_retain();
  return a1;
}

unsigned __int8 *sub_25921F84C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    if (*(void *)(v5 + 64) <= 8uLL) {
      uint64_t v6 = 8;
    }
    else {
      uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    }
    unsigned int v7 = a1[v6];
    unsigned int v8 = v7 - 3;
    if (v7 >= 3)
    {
      if (v6 <= 3) {
        uint64_t v9 = v6;
      }
      else {
        uint64_t v9 = 4;
      }
      switch(v9)
      {
        case 1:
          int v10 = *a1;
          goto LABEL_14;
        case 2:
          int v10 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v10 = *(_DWORD *)a1;
LABEL_14:
          int v11 = (v10 | (v8 << (8 * v6))) + 3;
          unsigned int v7 = v10 + 3;
          if (v6 < 4) {
            unsigned int v7 = v11;
          }
          break;
        default:
          break;
      }
    }
    if (v7 == 2 || v7 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    unsigned int v12 = a2[v6];
    unsigned int v13 = v12 - 3;
    if (v12 >= 3)
    {
      if (v6 <= 3) {
        uint64_t v14 = v6;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a2;
          goto LABEL_29;
        case 2:
          int v15 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v15 = *(_DWORD *)a2;
LABEL_29:
          int v16 = (v15 | (v13 << (8 * v6))) + 3;
          unsigned int v12 = v15 + 3;
          if (v6 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    if (v12 == 2)
    {
      *(void *)a1 = *(void *)a2;
      char v17 = 2;
    }
    else
    {
      if (v12 != 1)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        a1[v6] = 0;
        return a1;
      }
      *(void *)a1 = *(void *)a2;
      char v17 = 1;
    }
    a1[v6] = v17;
    swift_retain();
  }
  return a1;
}

void *sub_25921FAA4(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 3;
        unsigned int v6 = v9 + 3;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 2)
  {
    *a1 = *(void *)a2;
    char v11 = 2;
  }
  else if (v6 == 1)
  {
    *a1 = *(void *)a2;
    char v11 = 1;
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v5) = v11;
  return a1;
}

unsigned __int8 *sub_25921FC20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    if (*(void *)(v5 + 64) <= 8uLL) {
      uint64_t v6 = 8;
    }
    else {
      uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    }
    unsigned int v7 = a1[v6];
    unsigned int v8 = v7 - 3;
    if (v7 >= 3)
    {
      if (v6 <= 3) {
        uint64_t v9 = v6;
      }
      else {
        uint64_t v9 = 4;
      }
      switch(v9)
      {
        case 1:
          int v10 = *a1;
          goto LABEL_14;
        case 2:
          int v10 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v10 = *(_DWORD *)a1;
LABEL_14:
          int v11 = (v10 | (v8 << (8 * v6))) + 3;
          unsigned int v7 = v10 + 3;
          if (v6 < 4) {
            unsigned int v7 = v11;
          }
          break;
        default:
          break;
      }
    }
    if (v7 == 2 || v7 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    unsigned int v12 = a2[v6];
    unsigned int v13 = v12 - 3;
    if (v12 >= 3)
    {
      if (v6 <= 3) {
        uint64_t v14 = v6;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a2;
          goto LABEL_29;
        case 2:
          int v15 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v15 = *(_DWORD *)a2;
LABEL_29:
          int v16 = (v15 | (v13 << (8 * v6))) + 3;
          unsigned int v12 = v15 + 3;
          if (v6 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    if (v12 == 2)
    {
      *(void *)a1 = *(void *)a2;
      char v17 = 2;
    }
    else if (v12 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v17 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      char v17 = 0;
    }
    a1[v6] = v17;
  }
  return a1;
}

uint64_t sub_25921FE74(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = 8;
  if (v4 > 8) {
    uint64_t v5 = v4;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v10 < 2)
    {
LABEL_22:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 3) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_22;
  }
LABEL_14:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 254;
}

void sub_25921FFE0(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  size_t v7 = v6 + 1;
  if (a3 < 0xFE)
  {
    int v8 = 0;
  }
  else if (v7 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << (8 * v7)) - 253) >> (8 * v7)) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v9 = a2 - 254;
    if (v7 < 4)
    {
      int v10 = (v9 >> (8 * v7)) + 1;
      if (v6 != -1)
      {
        int v12 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if (v7 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v7 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v7] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v7] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x2592201C8);
      case 4:
        *(_DWORD *)&a1[v7] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v7] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v6] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_2592201F0(unsigned __int8 *a1)
{
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  uint64_t result = a1[v2];
  if (result >= 3)
  {
    if (v2 <= 3) {
      uint64_t v4 = v2;
    }
    else {
      uint64_t v4 = 4;
    }
    switch(v4)
    {
      case 1:
        int v5 = *a1;
        goto LABEL_12;
      case 2:
        int v5 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v5 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v5 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v6 = (v5 | ((result - 3) << (8 * v2))) + 3;
        unsigned int v7 = v5 + 3;
        if (v2 >= 4) {
          uint64_t result = v7;
        }
        else {
          uint64_t result = v6;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_2592202DC(unsigned char *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= 8) {
    size_t v5 = 8;
  }
  else {
    size_t v5 = v4;
  }
  if (a2 > 2)
  {
    unsigned int v6 = a2 - 3;
    if (v5 < 4)
    {
      unsigned int v7 = v6 >> (8 * v5);
      int v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 3;
      bzero(a1, v5);
      if (v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if (v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 3;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

unint64_t sub_2592203D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C9A0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  size_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26A37C9A8);
    unsigned int v7 = (void *)sub_25930A610();
    uint64_t v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_2592207A0(v9, (uint64_t)v5, &qword_26A37C9A0);
      uint64_t v11 = *v5;
      unint64_t result = sub_25925E388(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for StoredPhotoLayout(0);
      unint64_t result = sub_259220804(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_259220580(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F3D78);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  size_t v5 = (unsigned int *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C988);
    unsigned int v7 = (void *)sub_25930A610();
    uint64_t v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_2592207A0(v9, (uint64_t)v5, &qword_26B2F3D78);
      unsigned int v11 = *v5;
      unint64_t result = sub_25925E5B0(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v7[6] + 4 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C990);
      unint64_t result = sub_259220738(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_259220738(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2592207A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_259220804(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoredPhotoLayout(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25922089C()
{
  uint64_t result = type metadata accessor for BoundedBufferStateMachine.State();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_259220938(unsigned char *__dst, void *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v5 + 64) <= 0x20uLL) {
    uint64_t v6 = 32;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *__src;
    *uint64_t v4 = *__src;
    uint64_t v4 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v10 = *((unsigned __int8 *)__src + v6);
    unsigned int v11 = v10 - 3;
    if (v10 >= 3)
    {
      if (v6 <= 3) {
        uint64_t v12 = v6;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *(unsigned __int8 *)__src;
          goto LABEL_19;
        case 2:
          int v13 = *(unsigned __int16 *)__src;
          goto LABEL_19;
        case 3:
          int v13 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_19;
        case 4:
          int v13 = *(_DWORD *)__src;
LABEL_19:
          int v14 = (v13 | (v11 << (8 * v6))) + 3;
          unsigned int v10 = v13 + 3;
          if (v6 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 2)
    {
      *(void *)__dst = *__src;
      __dst[v6] = 2;
      swift_retain();
    }
    else if (v10 == 1)
    {
      uint64_t v15 = __src[1];
      *(void *)__dst = *__src;
      *((void *)__dst + 1) = v15;
      *((_OWORD *)__dst + 1) = *((_OWORD *)__src + 1);
      __dst[v6] = 1;
      swift_retain();
      swift_retain();
    }
    else if (v10)
    {
      memcpy(__dst, __src, v6 + 1);
    }
    else
    {
      (*(void (**)(unsigned char *, void *))(v5 + 16))(__dst, __src);
      *((unsigned char *)v4 + v6) = 0;
    }
    *(void *)(((unint64_t)v4 + v6 + 8) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)__src + v6 + 8) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

unsigned char *sub_259220B30(unsigned char *__dst, void *__src, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x20uLL) {
    uint64_t v5 = 32;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)__src + v5);
  unsigned int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *(unsigned __int8 *)__src;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)__src;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 3;
        unsigned int v6 = v9 + 3;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 2)
  {
    *(void *)__dst = *__src;
    __dst[v5] = 2;
    swift_retain();
  }
  else if (v6 == 1)
  {
    uint64_t v11 = __src[1];
    *(void *)__dst = *__src;
    *((void *)__dst + 1) = v11;
    *((_OWORD *)__dst + 1) = *((_OWORD *)__src + 1);
    __dst[v5] = 1;
    swift_retain();
    swift_retain();
  }
  else if (v6)
  {
    memcpy(__dst, __src, v5 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst, __src);
    __dst[v5] = 0;
  }
  *(void *)((unint64_t)&__dst[v5 + 8] & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)__src + v5 + 8) & 0xFFFFFFFFFFFFFFF8);
  return __dst;
}

unsigned __int8 *sub_259220CE0(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (__dst == __src) {
    goto LABEL_41;
  }
  if (*(void *)(v6 + 64) <= 0x20uLL) {
    uint64_t v7 = 32;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  unsigned int v8 = __dst[v7];
  unsigned int v9 = v8 - 3;
  if (v8 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__dst;
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)__dst;
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_14;
      case 4:
        int v11 = *(_DWORD *)__dst;
LABEL_14:
        int v12 = (v11 | (v9 << (8 * v7))) + 3;
        unsigned int v8 = v11 + 3;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 != 2)
  {
    if (v8 != 1)
    {
      if (!v8) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      }
      goto LABEL_23;
    }
    swift_release();
  }
  swift_release();
LABEL_23:
  unsigned int v13 = __src[v7];
  unsigned int v14 = v13 - 3;
  if (v13 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v15 = v7;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *__src;
        goto LABEL_32;
      case 2:
        int v16 = *(unsigned __int16 *)__src;
        goto LABEL_32;
      case 3:
        int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_32;
      case 4:
        int v16 = *(_DWORD *)__src;
LABEL_32:
        int v17 = (v16 | (v14 << (8 * v7))) + 3;
        unsigned int v13 = v16 + 3;
        if (v7 < 4) {
          unsigned int v13 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 2)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v7] = 2;
    swift_retain();
  }
  else if (v13 == 1)
  {
    *(void *)__dst = *(void *)__src;
    *((void *)__dst + 1) = *((void *)__src + 1);
    *((void *)__dst + 2) = *((void *)__src + 2);
    *((void *)__dst + 3) = *((void *)__src + 3);
    __dst[v7] = 1;
    swift_retain();
    swift_retain();
  }
  else if (v13)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
    __dst[v7] = 0;
  }
LABEL_41:
  unint64_t v18 = *(void *)(v6 + 64);
  if (v18 <= 0x20) {
    unint64_t v18 = 32;
  }
  *(void *)((unint64_t)&__dst[v18 + 8] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v18 + 8] & 0xFFFFFFFFFFFFFFF8);
  return __dst;
}

unsigned char *sub_259220FB4(unsigned char *__dst, _OWORD *__src, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x20uLL) {
    uint64_t v5 = 32;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)__src + v5);
  unsigned int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *(unsigned __int8 *)__src;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)__src;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 3;
        unsigned int v6 = v9 + 3;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 2)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v5] = 2;
  }
  else if (v6 == 1)
  {
    long long v11 = __src[1];
    *(_OWORD *)__dst = *__src;
    *((_OWORD *)__dst + 1) = v11;
    __dst[v5] = 1;
  }
  else if (v6)
  {
    memcpy(__dst, __src, v5 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, _OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst, __src);
    __dst[v5] = 0;
  }
  *(void *)((unint64_t)&__dst[v5 + 8] & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)__src + v5 + 8) & 0xFFFFFFFFFFFFFFF8);
  return __dst;
}

unsigned __int8 *sub_25922114C(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (__dst == __src) {
    goto LABEL_41;
  }
  if (*(void *)(v6 + 64) <= 0x20uLL) {
    uint64_t v7 = 32;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  unsigned int v8 = __dst[v7];
  unsigned int v9 = v8 - 3;
  if (v8 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__dst;
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)__dst;
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_14;
      case 4:
        int v11 = *(_DWORD *)__dst;
LABEL_14:
        int v12 = (v11 | (v9 << (8 * v7))) + 3;
        unsigned int v8 = v11 + 3;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 != 2)
  {
    if (v8 != 1)
    {
      if (!v8) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      }
      goto LABEL_23;
    }
    swift_release();
  }
  swift_release();
LABEL_23:
  unsigned int v13 = __src[v7];
  unsigned int v14 = v13 - 3;
  if (v13 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v15 = v7;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *__src;
        goto LABEL_32;
      case 2:
        int v16 = *(unsigned __int16 *)__src;
        goto LABEL_32;
      case 3:
        int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_32;
      case 4:
        int v16 = *(_DWORD *)__src;
LABEL_32:
        int v17 = (v16 | (v14 << (8 * v7))) + 3;
        unsigned int v13 = v16 + 3;
        if (v7 < 4) {
          unsigned int v13 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 2)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v7] = 2;
  }
  else if (v13 == 1)
  {
    long long v18 = *((_OWORD *)__src + 1);
    *(_OWORD *)__dst = *(_OWORD *)__src;
    *((_OWORD *)__dst + 1) = v18;
    __dst[v7] = 1;
  }
  else if (v13)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
    __dst[v7] = 0;
  }
LABEL_41:
  unint64_t v19 = *(void *)(v6 + 64);
  if (v19 <= 0x20) {
    unint64_t v19 = 32;
  }
  *(void *)((unint64_t)&__dst[v19 + 8] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v19 + 8] & 0xFFFFFFFFFFFFFFF8);
  return __dst;
}

uint64_t sub_2592213F8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v3 <= 0x20) {
    unint64_t v3 = 32;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_23;
  }
  unint64_t v4 = (v3 & 0xFFFFFFFFFFFFFFF8) + 16;
  unsigned int v5 = a2 - 251;
  uint64_t v6 = v4 & 0xFFFFFFF8;
  if ((v4 & 0xFFFFFFF8) != 0) {
    unsigned int v5 = 2;
  }
  if (v5 >= 0x10000) {
    int v7 = 4;
  }
  else {
    int v7 = 2;
  }
  if (v5 < 0x100) {
    int v8 = 1;
  }
  else {
    int v8 = v7;
  }
  if (v8 == 4)
  {
    int v9 = *(_DWORD *)((char *)a1 + v4);
    if (!v9) {
      goto LABEL_23;
    }
  }
  else if (v8 == 2)
  {
    int v9 = *(unsigned __int16 *)((char *)a1 + v4);
    if (!v9)
    {
LABEL_23:
      unsigned int v12 = *((unsigned __int8 *)a1 + v3);
      if (v12 >= 4) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  else
  {
    int v9 = *((unsigned __int8 *)a1 + v4);
    if (!v9) {
      goto LABEL_23;
    }
  }
  int v11 = v9 - 1;
  if (v6)
  {
    int v11 = 0;
    LODWORD(v6) = *a1;
  }
  return (v6 | v11) + 253;
}

void sub_2592214BC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x20) {
    unint64_t v5 = 32;
  }
  unint64_t v6 = (v5 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (a3 < 0xFD)
  {
    int v9 = 0;
    int v10 = a2 - 252;
    if (a2 > 0xFC) {
      goto LABEL_13;
    }
  }
  else
  {
    unsigned int v7 = a3 - 251;
    if ((v5 & 0xFFFFFFF8) != 0xFFFFFFF0) {
      unsigned int v7 = 2;
    }
    if (v7 >= 0x10000) {
      int v8 = 4;
    }
    else {
      int v8 = 2;
    }
    if (v7 < 0x100) {
      int v9 = 1;
    }
    else {
      int v9 = v8;
    }
    int v10 = a2 - 252;
    if (a2 > 0xFC)
    {
LABEL_13:
      if ((v5 & 0xFFFFFFF8) == 0xFFFFFFF0) {
        int v11 = v10;
      }
      else {
        int v11 = 1;
      }
      if ((v5 & 0xFFFFFFF8) != 0xFFFFFFF0)
      {
        unsigned int v12 = a2 - 253;
        bzero(a1, (v5 & 0xFFFFFFFFFFFFFFF8) + 16);
        *(_DWORD *)a1 = v12;
      }
      switch(v9)
      {
        case 1:
          a1[v6] = v11;
          return;
        case 2:
          *(_WORD *)&a1[v6] = v11;
          return;
        case 3:
          goto LABEL_32;
        case 4:
          *(_DWORD *)&a1[v6] = v11;
          return;
        default:
          return;
      }
    }
  }
  switch(v9)
  {
    case 1:
      a1[v6] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v6] = 0;
      goto LABEL_26;
    case 3:
LABEL_32:
      __break(1u);
      JUMPOUT(0x259221604);
    case 4:
      *(_DWORD *)&a1[v6] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    default:
LABEL_26:
      if (a2) {
LABEL_27:
      }
        a1[v5] = -(char)a2;
      return;
  }
}

uint64_t type metadata accessor for BoundedBufferStateMachine()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for BoundedBufferStateMachine.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25922165C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_259221700(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x20uLL) {
    uint64_t v5 = 32;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    void *v3 = *(void *)a2;
    unint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_10:
    swift_retain();
    return v3;
  }
  unsigned int v10 = a2[v5];
  unsigned int v11 = v10 - 3;
  if (v10 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v12 = v5;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_21;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_21;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_21;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_21:
        int v14 = (v13 | (v11 << (8 * v5))) + 3;
        unsigned int v10 = v13 + 3;
        if (v5 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  if (v10 == 2)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v5] = 2;
    goto LABEL_10;
  }
  if (v10 == 1)
  {
    uint64_t v15 = *((void *)a2 + 1);
    *(void *)__dst = *(void *)a2;
    *((void *)__dst + 1) = v15;
    *((_OWORD *)__dst + 1) = *((_OWORD *)a2 + 1);
    __dst[v5] = 1;
    swift_retain();
    goto LABEL_10;
  }
  if (v10)
  {
    memcpy(__dst, a2, v5 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(v4 + 16))(__dst);
    *((unsigned char *)v3 + v5) = 0;
  }
  return v3;
}

unsigned __int8 *sub_2592218C0(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x20) {
    unint64_t v2 = 32;
  }
  unsigned int v3 = result[v2];
  unsigned int v4 = v3 - 3;
  if (v3 >= 3)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *result;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)result;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 3;
        unsigned int v3 = v6 + 3;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 != 2)
  {
    if (v3 != 1)
    {
      if (!v3)
      {
        uint64_t v8 = *(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
        return (unsigned __int8 *)v8();
      }
      return result;
    }
    swift_release();
  }
  return (unsigned __int8 *)swift_release();
}

unsigned char *sub_259221A30(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x20uLL) {
    uint64_t v4 = 32;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 3;
        unsigned int v5 = v8 + 3;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 2)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 2;
    swift_retain();
  }
  else if (v5 == 1)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *(void *)__dst = *(void *)a2;
    *((void *)__dst + 1) = v10;
    *((_OWORD *)__dst + 1) = *((_OWORD *)a2 + 1);
    __dst[v4] = 1;
    swift_retain();
    swift_retain();
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_259221BB8(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 0x20uLL) {
    uint64_t v7 = 32;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  unsigned int v8 = __dst[v7];
  unsigned int v9 = v8 - 3;
  if (v8 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__dst;
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)__dst;
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_14;
      case 4:
        int v11 = *(_DWORD *)__dst;
LABEL_14:
        int v12 = (v11 | (v9 << (8 * v7))) + 3;
        unsigned int v8 = v11 + 3;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 != 2)
  {
    if (v8 != 1)
    {
      if (!v8) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      }
      goto LABEL_23;
    }
    swift_release();
  }
  swift_release();
LABEL_23:
  unsigned int v13 = __src[v7];
  unsigned int v14 = v13 - 3;
  if (v13 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v15 = v7;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *__src;
        goto LABEL_32;
      case 2:
        int v16 = *(unsigned __int16 *)__src;
        goto LABEL_32;
      case 3:
        int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_32;
      case 4:
        int v16 = *(_DWORD *)__src;
LABEL_32:
        int v17 = (v16 | (v14 << (8 * v7))) + 3;
        unsigned int v13 = v16 + 3;
        if (v7 < 4) {
          unsigned int v13 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 2)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v7] = 2;
    swift_retain();
  }
  else if (v13 == 1)
  {
    *(void *)__dst = *(void *)__src;
    *((void *)__dst + 1) = *((void *)__src + 1);
    *((void *)__dst + 2) = *((void *)__src + 2);
    *((void *)__dst + 3) = *((void *)__src + 3);
    __dst[v7] = 1;
    swift_retain();
    swift_retain();
  }
  else if (v13)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned char *sub_259221E48(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x20uLL) {
    uint64_t v4 = 32;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 3;
        unsigned int v5 = v8 + 3;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 2)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 2;
  }
  else if (v5 == 1)
  {
    long long v10 = *((_OWORD *)a2 + 1);
    *(_OWORD *)__dst = *(_OWORD *)a2;
    *((_OWORD *)__dst + 1) = v10;
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_259221FB0(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 0x20uLL) {
    uint64_t v7 = 32;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  unsigned int v8 = __dst[v7];
  unsigned int v9 = v8 - 3;
  if (v8 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__dst;
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)__dst;
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_14;
      case 4:
        int v11 = *(_DWORD *)__dst;
LABEL_14:
        int v12 = (v11 | (v9 << (8 * v7))) + 3;
        unsigned int v8 = v11 + 3;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 != 2)
  {
    if (v8 != 1)
    {
      if (!v8) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      }
      goto LABEL_23;
    }
    swift_release();
  }
  swift_release();
LABEL_23:
  unsigned int v13 = __src[v7];
  unsigned int v14 = v13 - 3;
  if (v13 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v15 = v7;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *__src;
        goto LABEL_32;
      case 2:
        int v16 = *(unsigned __int16 *)__src;
        goto LABEL_32;
      case 3:
        int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_32;
      case 4:
        int v16 = *(_DWORD *)__src;
LABEL_32:
        int v17 = (v16 | (v14 << (8 * v7))) + 3;
        unsigned int v13 = v16 + 3;
        if (v7 < 4) {
          unsigned int v13 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 2)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v7] = 2;
  }
  else if (v13 == 1)
  {
    long long v18 = *((_OWORD *)__src + 1);
    *(_OWORD *)__dst = *(_OWORD *)__src;
    *((_OWORD *)__dst + 1) = v18;
    __dst[v7] = 1;
  }
  else if (v13)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
    __dst[v7] = 0;
  }
  return __dst;
}

uint64_t sub_259222218(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 32;
  if (*(void *)(v3 + 64) > 0x20uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 252) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 4) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 253;
}

void sub_25922234C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x20) {
    unint64_t v5 = 32;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFD)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 252) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFC)
  {
    unsigned int v8 = a2 - 253;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x259222514);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_25922253C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 32;
  if (*(void *)(v2 + 64) > 0x20uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 3;
        LODWORD(v4) = v7 + 3;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_2592225F4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x20uLL) {
    size_t v4 = 32;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 2)
  {
    unsigned int v5 = a2 - 3;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_2592226CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  type metadata accessor for BoundedBufferStateMachine.State();
  swift_storeEnumTagMultiPayload();
  uint64_t result = type metadata accessor for BoundedBufferStateMachine();
  *(void *)(a4 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t sub_259222768(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = type metadata accessor for BoundedBufferStateMachine.State();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  int v9 = (void *)((char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  int v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v14 - v10, v2, v5);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 0:
      swift_getAssociatedTypeWitness();
      type metadata accessor for UnsafeTransfer();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_25930A920();
      v14[1] = sub_259309DF0();
      sub_259309E70();
      swift_getWitnessTable();
      uint64_t v13 = sub_259309580();
      *int v9 = a1;
      v9[1] = v13;
      v9[2] = 0;
      v9[3] = 0;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void *, uint64_t))(v6 + 40))(v2, v9, v5);
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v11, v4);
    case 1:
      goto LABEL_6;
    case 2:
      __break(1u);
LABEL_6:
      __break(1u);
      break;
  }
  __break(1u);
  return result;
}

BOOL sub_2592229B4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BoundedBufferStateMachine.State();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (void *)((char *)v13 - v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v13 - v4, v1, v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = v5[1];
      uint64_t v9 = v5[2];
      uint64_t v8 = v5[3];
      swift_release();
      if (v9) {
        goto LABEL_9;
      }
      if (v8)
      {
LABEL_4:
        swift_release();
        return 0;
      }
      else
      {
        swift_getAssociatedTypeWitness();
        type metadata accessor for UnsafeTransfer();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
        uint64_t v11 = sub_25930A920();
        sub_25922514C((uint64_t)sub_259225140, 0, v7, MEMORY[0x263F331F0], v11, MEMORY[0x263F8E628], MEMORY[0x263F8D6C8], MEMORY[0x263F8E658], v12);
        swift_release();
        return v13[1] >= *(void *)(v1 + *(int *)(a1 + 36));
      }
    case 2u:
      goto LABEL_4;
    case 3u:
      goto LABEL_8;
    default:
      __break(1u);
LABEL_8:
      __break(1u);
LABEL_9:
      __break(1u);
      JUMPOUT(0x259222BBCLL);
  }
}

BOOL sub_259222BCC(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_259222BDC()
{
  return sub_25930A8D0();
}

uint64_t sub_259222C04()
{
  return sub_25930A910();
}

BOOL sub_259222C4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_259222BCC(*a1, *a2);
}

uint64_t sub_259222C58()
{
  return sub_259222C04();
}

uint64_t sub_259222C60()
{
  return sub_259222BDC();
}

uint64_t sub_259222C68()
{
  return sub_25930A910();
}

uint64_t sub_259222CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for BoundedBufferStateMachine.State();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v15 - v7);
  (*(void (**)(char *, void *, uint64_t))(v6 + 16))((char *)&v15 - v7, v2, v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (v8[2]) {
        goto LABEL_14;
      }
      uint64_t v10 = *v8;
      uint64_t v9 = v8[1];
      if (v8[3])
      {
        swift_release();
        uint64_t v16 = v9;
        swift_getAssociatedTypeWitness();
        type metadata accessor for UnsafeTransfer();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
        sub_25930A920();
        sub_259309570();
        swift_getWitnessTable();
        char v11 = sub_25930A150();
        swift_release();
        if (v11) {
          return 1;
        }
        __break(1u);
LABEL_6:
        swift_release();
        return 1;
      }
      swift_getAssociatedTypeWitness();
      type metadata accessor for UnsafeTransfer();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      uint64_t v13 = sub_25930A920();
      sub_25922514C((uint64_t)sub_259225140, 0, v9, MEMORY[0x263F331F0], v13, MEMORY[0x263F8E628], MEMORY[0x263F8D6C8], MEMORY[0x263F8E658], v14);
      if (v16 < *(void *)((char *)v2 + *(int *)(a2 + 36)))
      {
        swift_release();
        goto LABEL_6;
      }
      (*(void (**)(void *, uint64_t))(v6 + 8))(v2, v5);
      *uint64_t v2 = v10;
      v2[1] = v9;
      v2[2] = a1;
      v2[3] = 0;
      swift_storeEnumTagMultiPayload();
      return 0;
    case 2u:
      goto LABEL_6;
    case 3u:
      goto LABEL_13;
    default:
      __break(1u);
LABEL_13:
      __break(1u);
LABEL_14:
      __break(1u);
      JUMPOUT(0x259222FA4);
  }
}

uint64_t sub_259222FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v30 = a1;
  v32 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v26 - v7;
  type metadata accessor for UnsafeTransfer();
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v9 = sub_25930A920();
  uint64_t v28 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v26 - v10;
  uint64_t v12 = type metadata accessor for BoundedBufferStateMachine.State();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t *)((char *)&v26 - v14);
  (*(void (**)(char *, void *, uint64_t))(v13 + 16))((char *)&v26 - v14, v4, v12);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = v15[1];
      if (v15[2]) {
        goto LABEL_15;
      }
      uint64_t v27 = *v15;
      if (v15[3])
      {
        uint64_t v17 = v15[3];
        uint64_t v34 = v16;
        sub_259309570();
        swift_getWitnessTable();
        if (sub_25930A150())
        {
          (*(void (**)(void *, uint64_t))(v13 + 8))(v4, v12);
          *uint64_t v4 = v27;
          v4[1] = v16;
          v4[2] = 0;
          v4[3] = 0;
          swift_storeEnumTagMultiPayload();
          sub_25930A920();
          sub_25930A240();
          sub_259309F50();
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          unint64_t v19 = v32;
          uint64_t v20 = (char *)v32 + *(int *)(TupleTypeMetadata2 + 48);
          void *v32 = v17;
          (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v20, v30, AssociatedTypeWitness);
          swift_storeEnumTagMultiPayload();
          return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8)
                                                                               + 56))(v19, 0, 1, TupleTypeMetadata2);
        }
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        swift_release();
        __break(1u);
        JUMPOUT(0x259223578);
      }
      uint64_t v34 = v16;
      swift_retain();
      sub_25922514C((uint64_t)sub_259225140, 0, v16, MEMORY[0x263F331F0], v9, MEMORY[0x263F8E628], MEMORY[0x263F8D6C8], MEMORY[0x263F8E658], v25);
      swift_release();
      if (v33 >= *(void *)((char *)v4 + *(int *)(a2 + 36))) {
        goto LABEL_12;
      }
      v22 = *(void (**)(void *, uint64_t))(v13 + 8);
      v22(v4, v12);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v8, v30, AssociatedTypeWitness);
      _s10PhotosFace20MakeThrowingSequenceVyACyxGxcfC_0((uint64_t)v8, AssociatedTypeWitness, (uint64_t)v11);
      swift_storeEnumTagMultiPayload();
      sub_259309570();
      sub_259309550();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
      v22(v4, v12);
      uint64_t v23 = v34;
      *uint64_t v4 = v27;
      v4[1] = v23;
      v4[2] = 0;
      v4[3] = 0;
      swift_storeEnumTagMultiPayload();
LABEL_9:
      sub_25930A920();
      sub_25930A240();
      sub_259309F50();
      uint64_t v24 = swift_getTupleTypeMetadata2();
      return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v32, 1, 1, v24);
    case 2u:
      swift_release();
      goto LABEL_9;
    case 3u:
      goto LABEL_14;
    default:
      goto LABEL_13;
  }
}

uint64_t sub_259223588(void *a1)
{
  uint64_t v2 = v1;
  swift_getAssociatedTypeWitness();
  type metadata accessor for UnsafeTransfer();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v4 = sub_25930A920();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v21 - v6);
  uint64_t v8 = type metadata accessor for BoundedBufferStateMachine.State();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (uint64_t *)((char *)&v21 - v13);
  (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 16))((char *)&v21 - v13, v1, v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = v5;
      uint64_t v15 = v14[1];
      uint64_t v16 = v14[2];
      uint64_t v17 = v14[3];
      swift_release();
      if (v16) {
        goto LABEL_15;
      }
      if (v17)
      {
        uint64_t v22 = v15;
        sub_259309570();
        swift_getWitnessTable();
        if ((sub_25930A150() & 1) == 0)
        {
          __break(1u);
LABEL_13:
          __break(1u);
LABEL_14:
          __break(1u);
LABEL_15:
          swift_release();
          __break(1u);
          JUMPOUT(0x25922392CLL);
        }
        uint64_t v22 = sub_259309DF0();
        sub_259309E70();
        swift_getWitnessTable();
        uint64_t v18 = sub_259309580();
        swift_release();
        uint64_t *v12 = v18;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 40))(v2, v12, v8);
      }
      else
      {
        uint64_t v22 = v15;
        if (a1)
        {
          *uint64_t v7 = a1;
          swift_storeEnumTagMultiPayload();
          id v19 = a1;
          sub_259309570();
          sub_259309550();
          (*(void (**)(void *, uint64_t))(v21 + 8))(v7, v4);
        }
        (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v2, v8);
        *uint64_t v2 = v22;
        swift_storeEnumTagMultiPayload();
        return 1;
      }
      return v17;
    case 2u:
      swift_release();
      return 1;
    case 3u:
      goto LABEL_14;
    default:
      goto LABEL_13;
  }
}

uint64_t sub_25922393C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  v51 = a2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for UnsafeTransfer();
  v47 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v6 = sub_25930A920();
  uint64_t v7 = sub_25930A240();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v41 - v17;
  uint64_t v50 = v4;
  uint64_t v19 = type metadata accessor for BoundedBufferStateMachine.State();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (uint64_t *)((char *)&v41 - v21);
  (*(void (**)(char *, void *, uint64_t))(v20 + 16))((char *)&v41 - v21, v3, v19);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v23 = v22[1];
      if (v22[3]) {
        goto LABEL_15;
      }
      uint64_t v46 = *v22;
      uint64_t v44 = v22[2];
      if (v44 || (uint64_t v52 = v23, sub_259309570(), swift_getWitnessTable(), (sub_25930A150() & 1) == 0))
      {
        uint64_t v45 = v5;
        uint64_t v52 = v23;
        uint64_t v27 = *(void (**)(void *, uint64_t))(v20 + 8);
        v27(v3, v19);
        swift_storeEnumTagMultiPayload();
        sub_259309570();
        sub_259309560();
        uint64_t v28 = v49;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v13, 1, v6) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v18, v13, v6);
          v27(v3, v19);
          uint64_t v29 = v52;
          uint64_t v43 = v52;
          void *v3 = v46;
          v3[1] = v29;
          v3[2] = 0;
          v3[3] = 0;
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
          uint64_t v30 = sub_25930A920();
          sub_25930A240();
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          v47 = &v41;
          v42 = (char *)v51 + *(int *)(TupleTypeMetadata2 + 48);
          uint64_t v32 = (uint64_t)v42;
          void *v51 = v44;
          MEMORY[0x270FA5388](TupleTypeMetadata2);
          uint64_t v33 = v50;
          *(&v41 - 2) = v45;
          *(&v41 - 1) = v33;
          swift_retain();
          swift_retain();
          sub_2592241F8((void (*)(char *))sub_25922513C, v6, v32);
          swift_release();
          (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v6);
          swift_release();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v42, 0, 1, v30);
          type metadata accessor for BoundedBufferStateMachine.NextAction();
          return swift_storeEnumTagMultiPayload();
        }
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
        JUMPOUT(0x2592241E8);
      }
      swift_release();
      swift_release();
      type metadata accessor for BoundedBufferStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
    case 2u:
      uint64_t v24 = *v22;
      uint64_t v52 = *v22;
      sub_259309570();
      swift_getWitnessTable();
      if (sub_25930A150())
      {
        swift_release();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
        uint64_t v25 = sub_25930A920();
        sub_25930A240();
        uint64_t v26 = (char *)v51 + *(int *)(swift_getTupleTypeMetadata2() + 48);
        void *v51 = 0;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v26, 1, 1, v25);
        type metadata accessor for BoundedBufferStateMachine.NextAction();
        return swift_storeEnumTagMultiPayload();
      }
      uint64_t v45 = v5;
      uint64_t v52 = v24;
      uint64_t v34 = *(void (**)(void *, uint64_t))(v20 + 8);
      v34(v3, v19);
      swift_storeEnumTagMultiPayload();
      sub_259309560();
      uint64_t v35 = v49;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v10, 1, v6) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v16, v10, v6);
        v34(v3, v19);
        void *v3 = v52;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
        uint64_t v36 = sub_25930A920();
        sub_25930A240();
        uint64_t v37 = swift_getTupleTypeMetadata2();
        v47 = &v41;
        uint64_t v38 = (uint64_t)v51 + *(int *)(v37 + 48);
        void *v51 = 0;
        MEMORY[0x270FA5388](v37);
        uint64_t v39 = v50;
        *(&v41 - 2) = v45;
        *(&v41 - 1) = v39;
        swift_retain();
        sub_2592241F8((void (*)(char *))sub_25922513C, v6, v38);
        (*(void (**)(char *, uint64_t))(v49 + 8))(v16, v6);
        swift_release();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v38, 0, 1, v36);
        type metadata accessor for BoundedBufferStateMachine.NextAction();
        return swift_storeEnumTagMultiPayload();
      }
      goto LABEL_17;
    case 3u:
      __break(1u);
LABEL_15:
      swift_release();
      __break(1u);
      goto LABEL_16;
    default:
      (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 32))(v51, v22, v5);
      type metadata accessor for BoundedBufferStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_2592241F8@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, char *, void))(*(void *)(*(void *)(a2 + 24) - 8) + 32))(a3, v12, *(void *)(a2 + 24));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    a1(v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  sub_25930A920();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_25922440C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v48 = a1;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for UnsafeTransfer();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v9 = sub_25930A920();
  uint64_t v10 = sub_25930A240();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  v53 = (char *)&v47 - v20;
  uint64_t v50 = v7;
  uint64_t v51 = v6;
  uint64_t v21 = type metadata accessor for BoundedBufferStateMachine.State();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (uint64_t *)((char *)&v47 - v23);
  (*(void (**)(char *, void *, uint64_t))(v22 + 16))((char *)&v47 - v23, v4, v21);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v54 = (uint64_t *)v8;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v49 = a3;
      uint64_t v26 = v24[1];
      if (v24[3]) {
        goto LABEL_17;
      }
      uint64_t v27 = *v24;
      uint64_t v47 = v24[2];
      if (v47) {
        goto LABEL_11;
      }
      uint64_t v56 = v26;
      sub_259309570();
      swift_retain();
      swift_retain();
      swift_getWitnessTable();
      if (sub_25930A150())
      {
        swift_release();
        swift_release();
        (*(void (**)(void *, uint64_t))(v22 + 8))(v4, v21);
        *uint64_t v4 = v27;
        v4[1] = v26;
        uint64_t v28 = v48;
        v4[2] = 0;
        v4[3] = v28;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
        sub_25930A920();
        sub_25930A240();
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8)
                                                                              + 56))(v49, 1, 1, TupleTypeMetadata2);
      }
      swift_release();
      swift_release();
LABEL_11:
      uint64_t v48 = v27;
      uint64_t v56 = v26;
      v42 = *(void (**)(void *, uint64_t))(v22 + 8);
      v42(v4, v21);
      swift_storeEnumTagMultiPayload();
      sub_259309570();
      sub_259309560();
      uint64_t v43 = v52;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v16, 1, v9) == 1)
      {
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        JUMPOUT(0x259224CF4);
      }
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v53, v16, v9);
      v42(v4, v21);
      uint64_t v44 = v56;
      *uint64_t v4 = v48;
      v4[1] = v44;
      v4[2] = 0;
      v4[3] = 0;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
      uint64_t v37 = sub_25930A920();
      sub_25930A240();
      uint64_t v38 = swift_getTupleTypeMetadata2();
      v54 = &v47;
      uint64_t v39 = v49;
      uint64_t v40 = (uint64_t)v49 + *(int *)(v38 + 48);
      *uint64_t v49 = v47;
      MEMORY[0x270FA5388](v38);
      uint64_t v45 = v51;
      *(&v47 - 2) = v50;
      *(&v47 - 1) = v45;
      swift_retain();
      swift_retain();
      uint64_t v46 = v53;
      sub_2592241F8((void (*)(char *))sub_25922513C, v9, v40);
      swift_release();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v9);
      break;
    case 2:
      uint64_t v31 = *v24;
      uint64_t v56 = *v24;
      sub_259309570();
      swift_getWitnessTable();
      if (sub_25930A150())
      {
        swift_release();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
        uint64_t v32 = sub_25930A920();
        sub_25930A240();
        uint64_t v33 = swift_getTupleTypeMetadata2();
        uint64_t v34 = (char *)a3 + *(int *)(v33 + 48);
        *a3 = 0;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v34, 1, 1, v32);
        return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a3, 0, 1, v33);
      }
      uint64_t v49 = a3;
      uint64_t v56 = v31;
      uint64_t v35 = *(void (**)(void *, uint64_t))(v22 + 8);
      v35(v4, v21);
      swift_storeEnumTagMultiPayload();
      sub_259309560();
      uint64_t v36 = v52;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v13, 1, v9) == 1) {
        goto LABEL_19;
      }
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v19, v13, v9);
      v35(v4, v21);
      *uint64_t v4 = v56;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
      uint64_t v37 = sub_25930A920();
      sub_25930A240();
      uint64_t v38 = swift_getTupleTypeMetadata2();
      v54 = &v47;
      uint64_t v39 = v49;
      uint64_t v40 = (uint64_t)v49 + *(int *)(v38 + 48);
      *uint64_t v49 = 0;
      MEMORY[0x270FA5388](v38);
      uint64_t v41 = v51;
      *(&v47 - 2) = v50;
      *(&v47 - 1) = v41;
      swift_retain();
      sub_2592241F8((void (*)(char *))sub_25922513C, v9, v40);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v9);
      break;
    case 3:
      goto LABEL_16;
    default:
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      swift_release();
      __break(1u);
      goto LABEL_18;
  }
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v40, 0, 1, v37);
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v39, 0, 1, v38);
}

uint64_t sub_259224D04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = type metadata accessor for BoundedBufferStateMachine.State();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (uint64_t *)((char *)&v12 - v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v12 - v8, v1, v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = *v9;
      swift_release();
      swift_getAssociatedTypeWitness();
      type metadata accessor for UnsafeTransfer();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_25930A920();
      uint64_t v13 = sub_259309DF0();
      sub_259309E70();
      swift_getWitnessTable();
      *uint64_t v7 = sub_259309580();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v4 + 40))(v1, v7, v3);
      return v10;
    case 2u:
      swift_release();
      swift_getAssociatedTypeWitness();
      type metadata accessor for UnsafeTransfer();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_25930A920();
      uint64_t v13 = sub_259309DF0();
      sub_259309E70();
      swift_getWitnessTable();
      *uint64_t v7 = sub_259309580();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v4 + 40))(v1, v7, v3);
      return 0;
    case 3u:
      __break(1u);
      JUMPOUT(0x25922512CLL);
    default:
      swift_getAssociatedTypeWitness();
      type metadata accessor for UnsafeTransfer();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_25930A920();
      uint64_t v13 = sub_259309DF0();
      sub_259309E70();
      swift_getWitnessTable();
      *uint64_t v7 = sub_259309580();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v4 + 40))(v1, v7, v3);
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v2 - 8) + 8))(v9, v2);
      return 0;
  }
}

uint64_t sub_259225140@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 8);
  return result;
}

uint64_t sub_25922514C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v15+ ((*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80)), v13);
  if (v9) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a9, v13, a6);
  }
  return result;
}

uint64_t type metadata accessor for BoundedBufferStateMachine.NextAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259225268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v5(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_2592252F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Platform(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_259225394(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259225460);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_259225488(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_259225490(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

uint64_t type metadata accessor for BoundedBufferStateMachine.ProducerSuspendedAction()
{
  return __swift_instantiateGenericMetadata();
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_2592254C0(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_25922551C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_259225578(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_25922559C(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    a2 -= 0x7FFFFFFF;
    goto LABEL_5;
  }
  if (a2) {
LABEL_5:
  }
    *uint64_t result = a2;
  return result;
}

uint64_t type metadata accessor for BoundedBufferStateMachine.FinishAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2592255DC()
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t result = sub_25930A920();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_2592256AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7 & 0xF8 | 7;
  uint64_t v9 = ~v8;
  size_t v10 = v6 + (((v7 & 0xF8) + 15) & ~v8) + 1;
  if ((v7 & 0x1000F8) != 0 || v10 > 0x18)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v8 + 16) & v9));
    swift_retain();
  }
  else if ((unint64_t)*a2 < 0xFFFFFFFF)
  {
    memcpy(a1, a2, v10);
  }
  else
  {
    *a1 = *a2;
    uint64_t v13 = (void *)(((unint64_t)a1 + 15) & v9);
    uint64_t v14 = (unsigned __int8 *)(((unint64_t)a2 + 15) & v9);
    unsigned int v15 = v14[v6];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v17 = v6;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *v14;
          goto LABEL_21;
        case 2:
          int v18 = *(unsigned __int16 *)v14;
          goto LABEL_21;
        case 3:
          int v18 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_21;
        case 4:
          int v18 = *(_DWORD *)v14;
LABEL_21:
          int v19 = (v18 | (v16 << (8 * v6))) + 2;
          unsigned int v15 = v18 + 2;
          if (v6 < 4) {
            unsigned int v15 = v19;
          }
          break;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
      uint64_t v20 = *(void *)v14;
      id v21 = *(id *)v14;
      *uint64_t v13 = v20;
      *((unsigned char *)v13 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v5 + 16))(v13);
      *((unsigned char *)v13 + v6) = 0;
    }
  }
  return a1;
}

void sub_25922589C(void *a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 <= 8) {
    unint64_t v3 = 8;
  }
  if (*a1 >= 0xFFFFFFFFuLL)
  {
    uint64_t v4 = *(_DWORD *)(v2 + 80) & 0xF8 | 7;
    uint64_t v5 = (unsigned __int8 *)(((unint64_t)a1 + v4 + 8) & ~v4);
    unsigned int v6 = v5[v3];
    unsigned int v7 = v6 - 2;
    if (v6 >= 2)
    {
      if (v3 <= 3) {
        uint64_t v8 = v3;
      }
      else {
        uint64_t v8 = 4;
      }
      switch(v8)
      {
        case 1:
          int v9 = *v5;
          goto LABEL_14;
        case 2:
          int v9 = *(unsigned __int16 *)v5;
          goto LABEL_14;
        case 3:
          int v9 = *(unsigned __int16 *)v5 | (v5[2] << 16);
          goto LABEL_14;
        case 4:
          int v9 = *(_DWORD *)v5;
LABEL_14:
          int v10 = (v9 | (v7 << (8 * v3))) + 2;
          unsigned int v6 = v9 + 2;
          if (v3 < 4) {
            unsigned int v6 = v10;
          }
          break;
        default:
          break;
      }
    }
    if (v6 == 1)
    {
      uint64_t v11 = *(void **)v5;
    }
    else
    {
      uint64_t v12 = *(void (**)(void))(v2 + 8);
      v12();
    }
  }
}

void *sub_259225A34(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  uint64_t v8 = ~v7;
  if (*a2 < 0xFFFFFFFFuLL)
  {
    memcpy(a1, a2, v6 + ((v7 + 8) & v8) + 1);
  }
  else
  {
    *a1 = *a2;
    int v9 = (char *)a1 + v7;
    int v10 = (char *)a2 + v7;
    uint64_t v11 = (void *)((unint64_t)(v9 + 8) & v8);
    uint64_t v12 = (unsigned __int8 *)((unint64_t)(v10 + 8) & v8);
    unsigned int v13 = v12[v6];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v15 = v6;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *v12;
          goto LABEL_15;
        case 2:
          int v16 = *(unsigned __int16 *)v12;
          goto LABEL_15;
        case 3:
          int v16 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_15;
        case 4:
          int v16 = *(_DWORD *)v12;
LABEL_15:
          int v17 = (v16 | (v14 << (8 * v6))) + 2;
          unsigned int v13 = v16 + 2;
          if (v6 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *(void *)v12;
      id v19 = *(id *)v12;
      *uint64_t v11 = v18;
      *((unsigned char *)v11 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v5 + 16))(v11);
      *((unsigned char *)v11 + v6) = 0;
    }
  }
  return a1;
}

unint64_t *sub_259225BF8(unint64_t *a1, unint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v8 = v7 | 7;
  uint64_t v9 = ~(v7 | 7);
  size_t v10 = v6 + ((v7 + 15) & v9) + 1;
  unint64_t v11 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v11 >= 0xFFFFFFFF)
    {
      *a1 = v11;
      uint64_t v20 = (char *)a1 + v8;
      id v21 = (char *)a2 + v8;
      unsigned int v14 = (unsigned __int8 *)((unint64_t)(v20 + 8) & v9);
      uint64_t v22 = (unsigned __int8 *)((unint64_t)(v21 + 8) & v9);
      unsigned int v23 = v22[v6];
      unsigned int v24 = v23 - 2;
      if (v23 >= 2)
      {
        if (v6 <= 3) {
          uint64_t v25 = v6;
        }
        else {
          uint64_t v25 = 4;
        }
        switch(v25)
        {
          case 1:
            int v26 = *v22;
            goto LABEL_29;
          case 2:
            int v26 = *(unsigned __int16 *)v22;
            goto LABEL_29;
          case 3:
            int v26 = *(unsigned __int16 *)v22 | (v22[2] << 16);
            goto LABEL_29;
          case 4:
            int v26 = *(_DWORD *)v22;
LABEL_29:
            int v32 = (v26 | (v24 << (8 * v6))) + 2;
            unsigned int v23 = v26 + 2;
            if (v6 < 4) {
              unsigned int v23 = v32;
            }
            break;
          default:
            break;
        }
      }
      if (v23 == 1)
      {
        uint64_t v33 = *(void **)v22;
LABEL_64:
        id v41 = v33;
        *(void *)unsigned int v14 = v33;
        v14[v6] = 1;
        return a1;
      }
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(v14, v22, AssociatedTypeWitness);
LABEL_66:
      v14[v6] = 0;
      return a1;
    }
    goto LABEL_42;
  }
  if (v11 < 0xFFFFFFFF)
  {
    uint64_t v27 = (unsigned __int8 *)(((unint64_t)a1 + v8 + 8) & v9);
    unsigned int v28 = v27[v6];
    unsigned int v29 = v28 - 2;
    if (v28 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v30 = v6;
      }
      else {
        uint64_t v30 = 4;
      }
      switch(v30)
      {
        case 1:
          int v31 = *v27;
          goto LABEL_37;
        case 2:
          int v31 = *(unsigned __int16 *)v27;
          goto LABEL_37;
        case 3:
          int v31 = *(unsigned __int16 *)v27 | (v27[2] << 16);
          goto LABEL_37;
        case 4:
          int v31 = *(_DWORD *)v27;
LABEL_37:
          int v34 = (v31 | (v29 << (8 * v6))) + 2;
          unsigned int v28 = v31 + 2;
          if (v6 < 4) {
            unsigned int v28 = v34;
          }
          break;
        default:
          break;
      }
    }
    if (v28 == 1) {

    }
    else {
      (*(void (**)(void))(v5 + 8))();
    }
LABEL_42:
    memcpy(a1, a2, v10);
    return a1;
  }
  *a1 = v11;
  unint64_t v12 = (unint64_t)a1 + v8;
  unint64_t v13 = (unint64_t)a2 + v8;
  v12 += 8;
  unsigned int v14 = (unsigned __int8 *)(v12 & v9);
  v13 += 8;
  uint64_t v15 = (unsigned __int8 *)(v13 & v9);
  if ((v12 & v9) != (v13 & v9))
  {
    unsigned int v16 = v14[v6];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v18 = v6;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *v14;
          goto LABEL_46;
        case 2:
          int v19 = *(unsigned __int16 *)v14;
          goto LABEL_46;
        case 3:
          int v19 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_46;
        case 4:
          int v19 = *(_DWORD *)v14;
LABEL_46:
          int v35 = (v19 | (v17 << (8 * v6))) + 2;
          unsigned int v16 = v19 + 2;
          if (v6 < 4) {
            unsigned int v16 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(v14, AssociatedTypeWitness);
    }
    unsigned int v36 = v15[v6];
    unsigned int v37 = v36 - 2;
    if (v36 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v38 = v6;
      }
      else {
        uint64_t v38 = 4;
      }
      switch(v38)
      {
        case 1:
          int v39 = *v15;
          goto LABEL_60;
        case 2:
          int v39 = *(unsigned __int16 *)v15;
          goto LABEL_60;
        case 3:
          int v39 = *(unsigned __int16 *)v15 | (v15[2] << 16);
          goto LABEL_60;
        case 4:
          int v39 = *(_DWORD *)v15;
LABEL_60:
          int v40 = (v39 | (v37 << (8 * v6))) + 2;
          unsigned int v36 = v39 + 2;
          if (v6 < 4) {
            unsigned int v36 = v40;
          }
          break;
        default:
          break;
      }
    }
    if (v36 == 1)
    {
      uint64_t v33 = *(void **)v15;
      goto LABEL_64;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(v14, v15, AssociatedTypeWitness);
    goto LABEL_66;
  }
  return a1;
}

void *sub_259226034(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  uint64_t v8 = ~v7;
  if (*a2 < 0xFFFFFFFFuLL)
  {
    memcpy(a1, a2, v6 + ((v7 + 8) & v8) + 1);
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = (char *)a1 + v7;
    size_t v10 = (char *)a2 + v7;
    unint64_t v11 = (void *)((unint64_t)(v9 + 8) & v8);
    unint64_t v12 = (unsigned __int8 *)((unint64_t)(v10 + 8) & v8);
    unsigned int v13 = v12[v6];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v15 = v6;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *v12;
          goto LABEL_15;
        case 2:
          int v16 = *(unsigned __int16 *)v12;
          goto LABEL_15;
        case 3:
          int v16 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_15;
        case 4:
          int v16 = *(_DWORD *)v12;
LABEL_15:
          int v17 = (v16 | (v14 << (8 * v6))) + 2;
          unsigned int v13 = v16 + 2;
          if (v6 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *unint64_t v11 = *(void *)v12;
      *((unsigned char *)v11 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v5 + 32))(v11);
      *((unsigned char *)v11 + v6) = 0;
    }
  }
  return a1;
}

unint64_t *sub_2592261F0(unint64_t *a1, unint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v8 = v7 | 7;
  uint64_t v9 = ~(v7 | 7);
  size_t v10 = v6 + ((v7 + 15) & v9) + 1;
  unint64_t v11 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v11 >= 0xFFFFFFFF)
    {
      *a1 = v11;
      uint64_t v20 = (char *)a1 + v8;
      id v21 = (char *)a2 + v8;
      unsigned int v14 = (unsigned __int8 *)((unint64_t)(v20 + 8) & v9);
      uint64_t v22 = (unsigned __int8 *)((unint64_t)(v21 + 8) & v9);
      unsigned int v23 = v22[v6];
      unsigned int v24 = v23 - 2;
      if (v23 >= 2)
      {
        if (v6 <= 3) {
          uint64_t v25 = v6;
        }
        else {
          uint64_t v25 = 4;
        }
        switch(v25)
        {
          case 1:
            int v26 = *v22;
            goto LABEL_29;
          case 2:
            int v26 = *(unsigned __int16 *)v22;
            goto LABEL_29;
          case 3:
            int v26 = *(unsigned __int16 *)v22 | (v22[2] << 16);
            goto LABEL_29;
          case 4:
            int v26 = *(_DWORD *)v22;
LABEL_29:
            int v32 = (v26 | (v24 << (8 * v6))) + 2;
            unsigned int v23 = v26 + 2;
            if (v6 < 4) {
              unsigned int v23 = v32;
            }
            break;
          default:
            break;
        }
      }
      if (v23 == 1)
      {
        uint64_t v33 = *(void *)v22;
LABEL_64:
        *(void *)unsigned int v14 = v33;
        v14[v6] = 1;
        return a1;
      }
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(v14, v22, AssociatedTypeWitness);
LABEL_66:
      v14[v6] = 0;
      return a1;
    }
    goto LABEL_42;
  }
  if (v11 < 0xFFFFFFFF)
  {
    uint64_t v27 = (unsigned __int8 *)(((unint64_t)a1 + v8 + 8) & v9);
    unsigned int v28 = v27[v6];
    unsigned int v29 = v28 - 2;
    if (v28 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v30 = v6;
      }
      else {
        uint64_t v30 = 4;
      }
      switch(v30)
      {
        case 1:
          int v31 = *v27;
          goto LABEL_37;
        case 2:
          int v31 = *(unsigned __int16 *)v27;
          goto LABEL_37;
        case 3:
          int v31 = *(unsigned __int16 *)v27 | (v27[2] << 16);
          goto LABEL_37;
        case 4:
          int v31 = *(_DWORD *)v27;
LABEL_37:
          int v34 = (v31 | (v29 << (8 * v6))) + 2;
          unsigned int v28 = v31 + 2;
          if (v6 < 4) {
            unsigned int v28 = v34;
          }
          break;
        default:
          break;
      }
    }
    if (v28 == 1) {

    }
    else {
      (*(void (**)(void))(v5 + 8))();
    }
LABEL_42:
    memcpy(a1, a2, v10);
    return a1;
  }
  *a1 = v11;
  unint64_t v12 = (unint64_t)a1 + v8;
  unint64_t v13 = (unint64_t)a2 + v8;
  v12 += 8;
  unsigned int v14 = (unsigned __int8 *)(v12 & v9);
  v13 += 8;
  uint64_t v15 = (unsigned __int8 *)(v13 & v9);
  if ((v12 & v9) != (v13 & v9))
  {
    unsigned int v16 = v14[v6];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v18 = v6;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *v14;
          goto LABEL_46;
        case 2:
          int v19 = *(unsigned __int16 *)v14;
          goto LABEL_46;
        case 3:
          int v19 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_46;
        case 4:
          int v19 = *(_DWORD *)v14;
LABEL_46:
          int v35 = (v19 | (v17 << (8 * v6))) + 2;
          unsigned int v16 = v19 + 2;
          if (v6 < 4) {
            unsigned int v16 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(v14, AssociatedTypeWitness);
    }
    unsigned int v36 = v15[v6];
    unsigned int v37 = v36 - 2;
    if (v36 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v38 = v6;
      }
      else {
        uint64_t v38 = 4;
      }
      switch(v38)
      {
        case 1:
          int v39 = *v15;
          goto LABEL_60;
        case 2:
          int v39 = *(unsigned __int16 *)v15;
          goto LABEL_60;
        case 3:
          int v39 = *(unsigned __int16 *)v15 | (v15[2] << 16);
          goto LABEL_60;
        case 4:
          int v39 = *(_DWORD *)v15;
LABEL_60:
          int v40 = (v39 | (v37 << (8 * v6))) + 2;
          unsigned int v36 = v39 + 2;
          if (v6 < 4) {
            unsigned int v36 = v40;
          }
          break;
        default:
          break;
      }
    }
    if (v36 == 1)
    {
      uint64_t v33 = *(void *)v15;
      goto LABEL_64;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(v14, v15, AssociatedTypeWitness);
    goto LABEL_66;
  }
  return a1;
}

uint64_t sub_259226624(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7FFFFFFF) {
    goto LABEL_22;
  }
  uint64_t v6 = v5
     + ((unsigned __int16)((*(_WORD *)(v4 + 80) & 0xF8) + 15) & (unsigned __int16)~(*(_WORD *)(v4 + 80) & 0xF8) & 0x1F8)
     + 1;
  char v7 = 8 * v6;
  if (v6 > 3) {
    goto LABEL_6;
  }
  unsigned int v10 = (a2 - 2147483646 + ~(-1 << v7)) >> v7;
  if (v10 > 0xFFFE)
  {
    int v8 = *(_DWORD *)((char *)a1 + v6);
    if (v8) {
      goto LABEL_14;
    }
LABEL_22:
    uint64_t v12 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v12) = -1;
    }
    if ((v12 + 1) >= 2) {
      return v12;
    }
    else {
      return 0;
    }
  }
  if (v10 > 0xFE)
  {
    int v8 = *(unsigned __int16 *)((char *)a1 + v6);
    if (*(unsigned __int16 *)((char *)a1 + v6)) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
  if (!v10) {
    goto LABEL_22;
  }
LABEL_6:
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_22;
  }
LABEL_14:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 0x7FFFFFFF;
}

void sub_2592267EC(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  __int16 v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v8 = (unsigned __int16)(v7 + 15) & (unsigned __int16)~v7 & 0x1F8;
  unint64_t v9 = *(void *)(v6 + 64);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  size_t v10 = v9 + v8 + 1;
  if (a3 < 0x7FFFFFFF)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = (a3 - 2147483646 + ~(-1 << (8 * v10))) >> (8 * v10);
    if (v14 > 0xFFFE)
    {
      int v11 = 4;
    }
    else if (v14 >= 0xFF)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 != 0;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (a2 > 0x7FFFFFFE)
  {
    unsigned int v12 = a2 - 0x7FFFFFFF;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v10)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x259226A2CLL);
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v11)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          *(void *)a1 = a2;
        break;
    }
  }
}

void sub_259226A54(unsigned char *a1, int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= 8) {
    LODWORD(v5) = 8;
  }
  if (a2 < 0)
  {
    __int16 v6 = *(_DWORD *)(v4 + 80) & 0xF8;
    int v7 = v5 + ((unsigned __int16)(v6 + 15) & (unsigned __int16)~v6 & 0x1F8);
    size_t v8 = (v7 + 1);
    int v9 = a2 & ~(-1 << (8 * (v7 + 1)));
    if (v8 <= 3) {
      unsigned int v10 = v9;
    }
    else {
      unsigned int v10 = a2 ^ 0x80000000;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v11 = v8;
      }
      else {
        int v11 = 4;
      }
      bzero(a1, v8);
      switch(v11)
      {
        case 2:
          *(_WORD *)a1 = v10;
          break;
        case 3:
          *(_WORD *)a1 = v10;
          a1[2] = BYTE2(v10);
          break;
        case 4:
          *(_DWORD *)a1 = v10;
          break;
        default:
          *a1 = v10;
          break;
      }
    }
  }
  else if (a2)
  {
    *(void *)a1 = (a2 - 1);
  }
}

uint64_t type metadata accessor for BoundedBufferStateMachine.ElementProducedAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259226BB8()
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  sub_25930A920();
  uint64_t result = sub_25930A240();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_259226C94(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  uint64_t v7 = v6 & 0xF8 | 7;
  uint64_t v8 = ~v7;
  size_t v9 = (((v6 & 0xF8) + 15) & ~v7) + v5 + 1;
  if ((v6 & 0x1000F8) != 0 || v9 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & v8));
    swift_retain();
  }
  else
  {
    LODWORD(v12) = -1;
    if ((unint64_t)*a2 < 0xFFFFFFFF) {
      uint64_t v12 = *a2;
    }
    if ((v12 + 1) > 1)
    {
      memcpy(a1, a2, v9);
    }
    else
    {
      *a1 = *a2;
      int v13 = (void *)(((unint64_t)a1 + 15) & v8);
      unsigned int v14 = (id *)(((unint64_t)a2 + 15) & v8);
      unsigned int v15 = *((unsigned __int8 *)v14 + v5);
      if (v15 > 1)
      {
        memcpy((void *)(((unint64_t)a1 + 15) & v8), v14, v5 + 1);
      }
      else if (v15 == 1)
      {
        id v16 = *v14;
        id v17 = *v14;
        *int v13 = v16;
        *((unsigned char *)v13 + v5) = 1;
      }
      else
      {
        (*(void (**)(unint64_t))(v4 + 16))(((unint64_t)a1 + 15) & v8);
        *((unsigned char *)v13 + v5) = 0;
      }
    }
  }
  return a1;
}

void sub_259226E1C(uint64_t *a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) <= 1)
  {
    unint64_t v5 = *(void *)(v2 + 64);
    if (v5 <= 8) {
      unint64_t v5 = 8;
    }
    uint64_t v4 = *(_DWORD *)(v2 + 80) & 0xF8 | 7;
    int v6 = (void **)(((unint64_t)a1 + v4 + 8) & ~v4);
    unsigned int v7 = *((unsigned __int8 *)v6 + v5);
    if (v7 <= 1)
    {
      if (v7 == 1)
      {
        uint64_t v8 = *v6;
      }
      else
      {
        size_t v9 = *(void (**)(void))(v2 + 8);
        v9();
      }
    }
  }
}

id *sub_259226F28(id *a1, id *a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  uint64_t v6 = *(_DWORD *)(v4 + 80) & 0xF8 | 7;
  uint64_t v7 = ~v6;
  size_t v8 = v5 + 1;
  LODWORD(v9) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    id v9 = *a2;
  }
  if ((v9 + 1) > 1)
  {
    v8 += (v6 + 8) & v7;
    id v17 = a1;
    int v13 = a2;
LABEL_13:
    memcpy(v17, v13, v8);
    return a1;
  }
  *a1 = *a2;
  unsigned int v10 = (char *)a1 + v6;
  uint64_t v11 = (char *)a2 + v6;
  uint64_t v12 = (id *)((unint64_t)(v10 + 8) & v7);
  int v13 = (id *)((unint64_t)(v11 + 8) & v7);
  unsigned int v14 = *((unsigned __int8 *)v13 + v5);
  if (v14 > 1)
  {
    id v17 = v12;
    goto LABEL_13;
  }
  if (v14 == 1)
  {
    id v15 = *v13;
    id v16 = *v13;
    id *v12 = v15;
    *((unsigned char *)v12 + v5) = 1;
  }
  else
  {
    (*(void (**)(id *))(v4 + 16))(v12);
    *((unsigned char *)v12 + v5) = 0;
  }
  return a1;
}

id *sub_259227080(id *a1, void **a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v8 = v7 | 7;
  uint64_t v9 = ~(v7 | 7);
  uint64_t v10 = (v7 + 15) & v9;
  id v11 = *a1;
  LODWORD(v12) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v11) = -1;
  }
  unsigned int v13 = v11 + 1;
  unsigned int v14 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v12 = *a2;
  }
  unsigned int v15 = v12 + 1;
  if (v13 > 1)
  {
    if (v15 <= 1)
    {
      *a1 = v14;
      uint64_t v22 = (char *)a1 + v8;
      unsigned int v23 = (char *)a2 + v8;
      uint64_t v18 = (id *)((unint64_t)(v22 + 8) & v9);
      unsigned int v24 = (void **)((unint64_t)(v23 + 8) & v9);
      unsigned int v25 = *((unsigned __int8 *)v24 + v6);
      if (v25 <= 1)
      {
        if (v25 != 1)
        {
          (*(void (**)(id *, void **, uint64_t))(v5 + 16))(v18, v24, AssociatedTypeWitness);
LABEL_51:
          *((unsigned char *)v18 + v6) = 0;
          return a1;
        }
        int v26 = *v24;
        goto LABEL_27;
      }
      uint64_t v30 = v18;
      goto LABEL_34;
    }
LABEL_31:
    size_t v31 = v10 + v6 + 1;
    uint64_t v30 = a1;
    unsigned int v24 = a2;
LABEL_35:
    memcpy(v30, v24, v31);
    return a1;
  }
  if (v15 > 1)
  {
    uint64_t v27 = (id *)(((unint64_t)a1 + v8 + 8) & v9);
    unsigned int v28 = *((unsigned __int8 *)v27 + v6);
    if (v28 <= 1)
    {
      if (v28 == 1) {

      }
      else {
        (*(void (**)(void))(v5 + 8))();
      }
    }
    goto LABEL_31;
  }
  *a1 = v14;
  id v16 = (char *)a1 + v8;
  id v17 = (char *)a2 + v8;
  uint64_t v18 = (id *)((unint64_t)(v16 + 8) & v9);
  int v19 = (void **)((unint64_t)(v17 + 8) & v9);
  unsigned int v20 = *((unsigned __int8 *)v18 + v6);
  unsigned int v21 = *((unsigned __int8 *)v19 + v6);
  if (v20 > 1)
  {
    if (v21 <= 1)
    {
      if (v21 != 1)
      {
LABEL_50:
        (*(void (**)(id *, void **, uint64_t))(v5 + 16))(v18, v19, AssociatedTypeWitness);
        goto LABEL_51;
      }
      goto LABEL_26;
    }
    goto LABEL_33;
  }
  if (v21 > 1)
  {
    if (v20 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v5 + 8))(v18, AssociatedTypeWitness);
    }
LABEL_33:
    uint64_t v30 = v18;
    unsigned int v24 = v19;
LABEL_34:
    size_t v31 = v6 + 1;
    goto LABEL_35;
  }
  if (v18 != v19)
  {
    if (v20 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v5 + 8))(v18, AssociatedTypeWitness);
    }
    unsigned int v33 = *((unsigned __int8 *)v19 + v6);
    unsigned int v34 = v33 - 2;
    if (v33 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v35 = v6;
      }
      else {
        uint64_t v35 = 4;
      }
      switch(v35)
      {
        case 1:
          int v36 = *(unsigned __int8 *)v19;
          goto LABEL_47;
        case 2:
          int v36 = *(unsigned __int16 *)v19;
          goto LABEL_47;
        case 3:
          int v36 = *(unsigned __int16 *)v19 | (*((unsigned __int8 *)v19 + 2) << 16);
          goto LABEL_47;
        case 4:
          int v36 = *(_DWORD *)v19;
LABEL_47:
          int v37 = (v36 | (v34 << (8 * v6))) + 2;
          unsigned int v33 = v36 + 2;
          if (v6 < 4) {
            unsigned int v33 = v37;
          }
          break;
        default:
          break;
      }
    }
    if (v33 != 1) {
      goto LABEL_50;
    }
LABEL_26:
    int v26 = *v19;
LABEL_27:
    id v29 = v26;
    *uint64_t v18 = v26;
    *((unsigned char *)v18 + v6) = 1;
  }
  return a1;
}

void *sub_2592273A4(void *a1, void *a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  uint64_t v6 = *(_DWORD *)(v4 + 80) & 0xF8 | 7;
  uint64_t v7 = ~v6;
  size_t v8 = v5 + 1;
  LODWORD(v9) = -1;
  if (*a2 < 0xFFFFFFFFuLL) {
    uint64_t v9 = *a2;
  }
  if ((v9 + 1) > 1)
  {
    v8 += (v6 + 8) & v7;
    unsigned int v15 = a1;
    unsigned int v13 = a2;
LABEL_13:
    memcpy(v15, v13, v8);
    return a1;
  }
  *a1 = *a2;
  uint64_t v10 = (char *)a1 + v6;
  id v11 = (char *)a2 + v6;
  uint64_t v12 = (void *)((unint64_t)(v10 + 8) & v7);
  unsigned int v13 = (void *)((unint64_t)(v11 + 8) & v7);
  unsigned int v14 = *((unsigned __int8 *)v13 + v5);
  if (v14 > 1)
  {
    unsigned int v15 = v12;
    goto LABEL_13;
  }
  if (v14 == 1)
  {
    void *v12 = *v13;
    *((unsigned char *)v12 + v5) = 1;
  }
  else
  {
    (*(void (**)(void *))(v4 + 32))(v12);
    *((unsigned char *)v12 + v5) = 0;
  }
  return a1;
}

id *sub_2592274F4(id *a1, void **a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v8 = v7 | 7;
  uint64_t v9 = ~(v7 | 7);
  uint64_t v10 = (v7 + 15) & v9;
  id v11 = *a1;
  LODWORD(v12) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v11) = -1;
  }
  unsigned int v13 = v11 + 1;
  unsigned int v14 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v12 = *a2;
  }
  unsigned int v15 = v12 + 1;
  if (v13 > 1)
  {
    if (v15 <= 1)
    {
      *a1 = v14;
      uint64_t v22 = (char *)a1 + v8;
      unsigned int v23 = (char *)a2 + v8;
      uint64_t v18 = (id *)((unint64_t)(v22 + 8) & v9);
      unsigned int v24 = (void **)((unint64_t)(v23 + 8) & v9);
      unsigned int v25 = *((unsigned __int8 *)v24 + v6);
      if (v25 <= 1)
      {
        if (v25 != 1)
        {
          (*(void (**)(id *, void **, uint64_t))(v5 + 32))(v18, v24, AssociatedTypeWitness);
LABEL_51:
          *((unsigned char *)v18 + v6) = 0;
          return a1;
        }
        int v26 = *v24;
        goto LABEL_27;
      }
      id v29 = v18;
      goto LABEL_34;
    }
LABEL_31:
    size_t v30 = v10 + v6 + 1;
    id v29 = a1;
    unsigned int v24 = a2;
LABEL_35:
    memcpy(v29, v24, v30);
    return a1;
  }
  if (v15 > 1)
  {
    uint64_t v27 = (id *)(((unint64_t)a1 + v8 + 8) & v9);
    unsigned int v28 = *((unsigned __int8 *)v27 + v6);
    if (v28 <= 1)
    {
      if (v28 == 1) {

      }
      else {
        (*(void (**)(void))(v5 + 8))();
      }
    }
    goto LABEL_31;
  }
  *a1 = v14;
  id v16 = (char *)a1 + v8;
  id v17 = (char *)a2 + v8;
  uint64_t v18 = (id *)((unint64_t)(v16 + 8) & v9);
  int v19 = (id *)((unint64_t)(v17 + 8) & v9);
  unsigned int v20 = *((unsigned __int8 *)v18 + v6);
  unsigned int v21 = *((unsigned __int8 *)v19 + v6);
  if (v20 > 1)
  {
    if (v21 <= 1)
    {
      if (v21 != 1)
      {
LABEL_50:
        (*(void (**)(id *, id *, uint64_t))(v5 + 32))(v18, v19, AssociatedTypeWitness);
        goto LABEL_51;
      }
      goto LABEL_26;
    }
    goto LABEL_33;
  }
  if (v21 > 1)
  {
    if (v20 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v5 + 8))(v18, AssociatedTypeWitness);
    }
LABEL_33:
    id v29 = v18;
    unsigned int v24 = v19;
LABEL_34:
    size_t v30 = v6 + 1;
    goto LABEL_35;
  }
  if (v18 != v19)
  {
    if (v20 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v5 + 8))(v18, AssociatedTypeWitness);
    }
    unsigned int v32 = *((unsigned __int8 *)v19 + v6);
    unsigned int v33 = v32 - 2;
    if (v32 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v34 = v6;
      }
      else {
        uint64_t v34 = 4;
      }
      switch(v34)
      {
        case 1:
          int v35 = *(unsigned __int8 *)v19;
          goto LABEL_47;
        case 2:
          int v35 = *(unsigned __int16 *)v19;
          goto LABEL_47;
        case 3:
          int v35 = *(unsigned __int16 *)v19 | (*((unsigned __int8 *)v19 + 2) << 16);
          goto LABEL_47;
        case 4:
          int v35 = *(_DWORD *)v19;
LABEL_47:
          int v36 = (v35 | (v33 << (8 * v6))) + 2;
          unsigned int v32 = v35 + 2;
          if (v6 < 4) {
            unsigned int v32 = v36;
          }
          break;
        default:
          break;
      }
    }
    if (v32 != 1) {
      goto LABEL_50;
    }
LABEL_26:
    int v26 = *v19;
LABEL_27:
    *uint64_t v18 = v26;
    *((unsigned char *)v18 + v6) = 1;
  }
  return a1;
}

uint64_t sub_259227810(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7FFFFFFE) {
    goto LABEL_22;
  }
  uint64_t v6 = v5
     + ((unsigned __int16)((*(_WORD *)(v4 + 80) & 0xF8) + 15) & (unsigned __int16)~(*(_WORD *)(v4 + 80) & 0xF8) & 0x1F8)
     + 1;
  char v7 = 8 * v6;
  if (v6 > 3) {
    goto LABEL_6;
  }
  unsigned int v10 = (a2 - 2147483645 + ~(-1 << v7)) >> v7;
  if (v10 > 0xFFFE)
  {
    int v8 = *(_DWORD *)((char *)a1 + v6);
    if (v8) {
      goto LABEL_14;
    }
LABEL_22:
    uint64_t v12 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v12) = -1;
    }
    if ((v12 + 1) < 2) {
      LODWORD(v12) = 0;
    }
    if (v12 >= 2) {
      return (v12 - 1);
    }
    else {
      return 0;
    }
  }
  if (v10 > 0xFE)
  {
    int v8 = *(unsigned __int16 *)((char *)a1 + v6);
    if (*(unsigned __int16 *)((char *)a1 + v6)) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
  if (!v10) {
    goto LABEL_22;
  }
LABEL_6:
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_22;
  }
LABEL_14:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 2147483646;
}

void sub_2592279E0(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  size_t v8 = v7
     + ((unsigned __int16)((*(_WORD *)(v6 + 80) & 0xF8) + 15) & (unsigned __int16)~(*(_WORD *)(v6 + 80) & 0xF8) & 0x1F8)
     + 1;
  if (a3 <= 0x7FFFFFFD)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = (a3 - 2147483645 + ~(-1 << (8 * v8))) >> (8 * v8);
    if (v12 > 0xFFFE)
    {
      int v9 = 4;
    }
    else if (v12 >= 0xFF)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 != 0;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0x7FFFFFFD)
  {
    unsigned int v10 = a2 - 2147483646;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x259227C1CLL);
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          *(void *)a1 = a2 + 1;
        break;
    }
  }
}

uint64_t sub_259227C44(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void sub_259227C64(unsigned char *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= 8) {
    LODWORD(v5) = 8;
  }
  if (a2 > 0x7FFFFFFE)
  {
    size_t v6 = v5
       + ((unsigned __int16)((*(_WORD *)(v4 + 80) & 0xF8) + 15) & (unsigned __int16)~(*(_WORD *)(v4 + 80) & 0xF8) & 0x1F8)
       + 1;
    int v7 = -1 << (8 * (v5 + (((*(unsigned char *)(v4 + 80) & 0xF8) + 15) & ~(*(unsigned char *)(v4 + 80) & 0xF8) & 0xF8) + 1));
    if (v6 <= 3) {
      int v8 = ~v7;
    }
    else {
      int v8 = -1;
    }
    if (v6)
    {
      int v9 = v8 & (a2 - 0x7FFFFFFF);
      if (v6 <= 3) {
        int v10 = v6;
      }
      else {
        int v10 = 4;
      }
      bzero(a1, v6);
      switch(v10)
      {
        case 2:
          *(_WORD *)a1 = v9;
          break;
        case 3:
          *(_WORD *)a1 = v9;
          a1[2] = BYTE2(v9);
          break;
        case 4:
          *(_DWORD *)a1 = v9;
          break;
        default:
          *a1 = v9;
          break;
      }
    }
  }
  else if (a2)
  {
    *(void *)a1 = a2;
  }
}

uint64_t type metadata accessor for BoundedBufferStateMachine.NextSuspendedAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259227DD8()
{
  uint64_t v0 = swift_checkMetadataState();
  uint64_t v1 = v0;
  if (v2 <= 0x3F)
  {
    v5[4] = *(void *)(v0 - 8) + 64;
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
    sub_25930A920();
    uint64_t v1 = sub_25930A240();
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v5[5] = v5;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v1;
}

void *sub_259227F0C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = v8;
  int v10 = *(_DWORD *)(v8 + 80);
  uint64_t v11 = v10 & 0xF8 | 7;
  if (*(void *)(v8 + 64) <= 8uLL) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = *(void *)(v8 + 64);
  }
  if ((((v10 & 0xF8) + 15) & (unint64_t)~v11) + v12 + 1 > v7) {
    unint64_t v7 = (((v10 & 0xF8) + 15) & ~v11) + v12 + 1;
  }
  int v13 = v10 | *(_DWORD *)(v6 + 80);
  if ((v13 & 0x1000F8) != 0 || v7 + 1 > 0x18)
  {
    uint64_t v15 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v15 + (((v13 & 0xF8 | 7u) + 16) & ~(unint64_t)(v13 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    unsigned int v16 = a2[v7];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v18 = v7;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          goto LABEL_21;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v19 = *(_DWORD *)a2;
LABEL_21:
          int v20 = (v19 | (v17 << (8 * v7))) + 2;
          unsigned int v16 = v19 + 2;
          if (v7 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1)
    {
      uint64_t v21 = ~v11;
      *a1 = *(void *)a2;
      uint64_t v22 = (char *)a1 + v11;
      unsigned int v23 = &a2[v11];
      unsigned int v24 = (void *)((unint64_t)(v22 + 8) & v21);
      unsigned int v25 = (id *)((unint64_t)(v23 + 8) & v21);
      unsigned int v26 = *((unsigned __int8 *)v25 + v12);
      if (v26 > 1)
      {
        memcpy(v24, v25, v12 + 1);
      }
      else if (v26 == 1)
      {
        id v27 = *v25;
        id v28 = *v25;
        *unsigned int v24 = v27;
        *((unsigned char *)v24 + v12) = 1;
      }
      else
      {
        (*(void (**)(void *))(v9 + 16))(v24);
        *((unsigned char *)v24 + v12) = 0;
      }
      *((unsigned char *)a1 + v7) = 1;
    }
    else if (v16)
    {
      memcpy(a1, a2, v7 + 1);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((unsigned char *)a1 + v7) = 0;
    }
  }
  return a1;
}

void sub_2592281B4(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v22 = *(void *)(v3 - 8);
  unint64_t v4 = *(void *)(v22 + 64);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v7 = v6 | 7;
  uint64_t v8 = (v6 + 15) & ~(v6 | 7);
  unint64_t v9 = *(void *)(v5 + 64);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  unint64_t v10 = v9 + v8;
  if (v10 + 1 > v4) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = v4;
  }
  unsigned int v12 = a1[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a1;
        goto LABEL_15;
      case 2:
        int v15 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v15 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v15 = *(_DWORD *)a1;
LABEL_15:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    uint64_t v18 = (void **)((unint64_t)&a1[v7 + 8] & ~v7);
    unsigned int v19 = *((unsigned __int8 *)v18 + v9);
    if (v19 <= 1)
    {
      if (v19 == 1)
      {
        int v20 = *v18;
      }
      else
      {
        uint64_t v21 = *(void (**)(void))(v5 + 8);
        v21();
      }
    }
  }
  else if (!v12)
  {
    unsigned int v17 = *(void (**)(unsigned __int8 *, uint64_t))(v22 + 8);
    v17(a1, v3);
  }
}

void *sub_25922840C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v11 = v10 | 7;
  uint64_t v12 = (v10 + 15) & ~(v10 | 7);
  if (*(void *)(v8 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v8 + 64);
  }
  if (v12 + v13 + 1 > v7) {
    unint64_t v7 = v12 + v13 + 1;
  }
  unsigned int v14 = a2[v7];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v16 = v7;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a2;
        goto LABEL_15;
      case 2:
        int v17 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v17 = *(_DWORD *)a2;
LABEL_15:
        int v18 = (v17 | (v15 << (8 * v7))) + 2;
        unsigned int v14 = v17 + 2;
        if (v7 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    uint64_t v19 = ~v11;
    *a1 = *(void *)a2;
    int v20 = (char *)a1 + v11;
    uint64_t v21 = &a2[v11];
    uint64_t v22 = (void *)((unint64_t)(v20 + 8) & v19);
    unsigned int v23 = (id *)((unint64_t)(v21 + 8) & v19);
    unsigned int v24 = *((unsigned __int8 *)v23 + v13);
    if (v24 > 1)
    {
      memcpy((void *)((unint64_t)(v20 + 8) & v19), v23, v13 + 1);
    }
    else if (v24 == 1)
    {
      id v25 = *v23;
      id v26 = *v23;
      *uint64_t v22 = v25;
      *((unsigned char *)v22 + v13) = 1;
    }
    else
    {
      (*(void (**)(unint64_t))(v9 + 16))((unint64_t)(v20 + 8) & v19);
      *((unsigned char *)v22 + v13) = 0;
    }
    *((unsigned char *)a1 + v7) = 1;
  }
  else if (v14)
  {
    memcpy(a1, a2, v7 + 1);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    *((unsigned char *)a1 + v7) = 0;
  }
  return a1;
}

unsigned __int8 *sub_259228670(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v10 = *(_DWORD *)(v9 + 80) & 0xF8;
    uint64_t v11 = v10 | 7;
    uint64_t v12 = (v10 + 15) & ~(v10 | 7);
    if (*(void *)(v9 + 64) <= 8uLL) {
      uint64_t v13 = 8;
    }
    else {
      uint64_t v13 = *(void *)(v9 + 64);
    }
    size_t v14 = v13 + 1;
    unint64_t v15 = v12 + v13 + 1;
    if (v15 <= v7) {
      unint64_t v16 = v7;
    }
    else {
      unint64_t v16 = v15;
    }
    unsigned int v17 = a1[v16];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v19 = v16;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a1;
          if (v16 < 4) {
            goto LABEL_18;
          }
          goto LABEL_20;
        case 2:
          int v20 = *(unsigned __int16 *)a1;
          if (v16 >= 4) {
            goto LABEL_20;
          }
          goto LABEL_18;
        case 3:
          int v20 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v16 < 4) {
            goto LABEL_18;
          }
          goto LABEL_20;
        case 4:
          int v20 = *(_DWORD *)a1;
          if (v16 < 4) {
LABEL_18:
          }
            unsigned int v17 = (v20 | (v18 << (8 * v16))) + 2;
          else {
LABEL_20:
          }
            unsigned int v17 = v20 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v21 = ~v11;
    if (v17 == 1)
    {
      id v27 = (id *)((unint64_t)&a1[v11 + 8] & v21);
      unsigned int v28 = *((unsigned __int8 *)v27 + v13);
      if (v28 <= 1)
      {
        if (v28 == 1) {

        }
        else {
          (*(void (**)(void))(v9 + 8))();
        }
      }
    }
    else if (!v17)
    {
      uint64_t v22 = v5;
      uint64_t v40 = v11;
      uint64_t v23 = v5;
      uint64_t v24 = v21;
      uint64_t v25 = v13;
      uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v22);
      uint64_t v9 = v26;
      uint64_t v13 = v25;
      uint64_t v21 = v24;
      uint64_t v5 = v23;
      uint64_t v11 = v40;
    }
    unsigned int v29 = a2[v16];
    unsigned int v30 = v29 - 2;
    if (v29 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v31 = v16;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *a2;
          if (v16 >= 4) {
            goto LABEL_44;
          }
          goto LABEL_38;
        case 2:
          int v32 = *(unsigned __int16 *)a2;
          if (v16 >= 4) {
            goto LABEL_44;
          }
          goto LABEL_38;
        case 3:
          int v32 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v16 < 4) {
            goto LABEL_38;
          }
          goto LABEL_44;
        case 4:
          int v32 = *(_DWORD *)a2;
          if (v16 < 4)
          {
LABEL_38:
            unsigned int v29 = (v32 | (v30 << (8 * v16))) + 2;
            break;
          }
LABEL_44:
          unsigned int v29 = v32 + 2;
          if (v29 == 1) {
            goto LABEL_45;
          }
          goto LABEL_40;
        default:
          break;
      }
    }
    if (v29 == 1)
    {
LABEL_45:
      *(void *)a1 = *(void *)a2;
      unsigned int v33 = &a2[v11];
      uint64_t v34 = (void *)((unint64_t)&a1[v11 + 8] & v21);
      int v35 = (id *)((unint64_t)(v33 + 8) & v21);
      unsigned int v36 = *((unsigned __int8 *)v35 + v13);
      if (v36 > 1)
      {
        memcpy((void *)((unint64_t)&a1[v11 + 8] & v21), v35, v14);
      }
      else if (v36 == 1)
      {
        id v37 = *v35;
        id v38 = *v35;
        *uint64_t v34 = v37;
        *((unsigned char *)v34 + v13) = 1;
      }
      else
      {
        (*(void (**)(unint64_t))(v9 + 16))((unint64_t)&a1[v11 + 8] & v21);
        *((unsigned char *)v34 + v13) = 0;
      }
      a1[v16] = 1;
    }
    else
    {
LABEL_40:
      if (v29)
      {
        memcpy(a1, a2, v16 + 1);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        a1[v16] = 0;
      }
    }
  }
  return a1;
}

void *sub_259228A68(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v11 = v10 | 7;
  uint64_t v12 = (v10 + 15) & ~(v10 | 7);
  if (*(void *)(v8 + 64) <= 8uLL) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = *(void *)(v8 + 64);
  }
  if (v12 + v13 + 1 > v7) {
    unint64_t v7 = v12 + v13 + 1;
  }
  unsigned int v14 = a2[v7];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v16 = v7;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a2;
        goto LABEL_15;
      case 2:
        int v17 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v17 = *(_DWORD *)a2;
LABEL_15:
        int v18 = (v17 | (v15 << (8 * v7))) + 2;
        unsigned int v14 = v17 + 2;
        if (v7 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    uint64_t v19 = ~v11;
    *a1 = *(void *)a2;
    int v20 = (char *)a1 + v11;
    uint64_t v21 = &a2[v11];
    uint64_t v22 = (void *)((unint64_t)(v20 + 8) & v19);
    uint64_t v23 = (void *)((unint64_t)(v21 + 8) & v19);
    unsigned int v24 = *((unsigned __int8 *)v23 + v13);
    if (v24 > 1)
    {
      memcpy((void *)((unint64_t)(v20 + 8) & v19), v23, v13 + 1);
    }
    else if (v24 == 1)
    {
      *uint64_t v22 = *v23;
      *((unsigned char *)v22 + v13) = 1;
    }
    else
    {
      (*(void (**)(unint64_t))(v9 + 32))((unint64_t)(v20 + 8) & v19);
      *((unsigned char *)v22 + v13) = 0;
    }
    *((unsigned char *)a1 + v7) = 1;
  }
  else if (v14)
  {
    memcpy(a1, a2, v7 + 1);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
    *((unsigned char *)a1 + v7) = 0;
  }
  return a1;
}

unsigned __int8 *sub_259228CC4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v10 = *(_DWORD *)(v9 + 80) & 0xF8;
    uint64_t v11 = v10 | 7;
    uint64_t v12 = (v10 + 15) & ~(v10 | 7);
    if (*(void *)(v9 + 64) <= 8uLL) {
      uint64_t v13 = 8;
    }
    else {
      uint64_t v13 = *(void *)(v9 + 64);
    }
    size_t v14 = v13 + 1;
    unint64_t v15 = v12 + v13 + 1;
    if (v15 <= v7) {
      unint64_t v16 = v7;
    }
    else {
      unint64_t v16 = v15;
    }
    unsigned int v17 = a1[v16];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v19 = v16;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a1;
          if (v16 < 4) {
            goto LABEL_18;
          }
          goto LABEL_20;
        case 2:
          int v20 = *(unsigned __int16 *)a1;
          if (v16 >= 4) {
            goto LABEL_20;
          }
          goto LABEL_18;
        case 3:
          int v20 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v16 < 4) {
            goto LABEL_18;
          }
          goto LABEL_20;
        case 4:
          int v20 = *(_DWORD *)a1;
          if (v16 < 4) {
LABEL_18:
          }
            unsigned int v17 = (v20 | (v18 << (8 * v16))) + 2;
          else {
LABEL_20:
          }
            unsigned int v17 = v20 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v21 = ~v11;
    if (v17 == 1)
    {
      id v27 = (id *)((unint64_t)&a1[v11 + 8] & v21);
      unsigned int v28 = *((unsigned __int8 *)v27 + v13);
      if (v28 <= 1)
      {
        if (v28 == 1) {

        }
        else {
          (*(void (**)(void))(v9 + 8))();
        }
      }
    }
    else if (!v17)
    {
      uint64_t v22 = v5;
      uint64_t v38 = v11;
      uint64_t v23 = v5;
      uint64_t v24 = v21;
      uint64_t v25 = v13;
      uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v22);
      uint64_t v9 = v26;
      uint64_t v13 = v25;
      uint64_t v21 = v24;
      uint64_t v5 = v23;
      uint64_t v11 = v38;
    }
    unsigned int v29 = a2[v16];
    unsigned int v30 = v29 - 2;
    if (v29 >= 2)
    {
      if (v16 <= 3) {
        uint64_t v31 = v16;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *a2;
          if (v16 >= 4) {
            goto LABEL_44;
          }
          goto LABEL_38;
        case 2:
          int v32 = *(unsigned __int16 *)a2;
          if (v16 >= 4) {
            goto LABEL_44;
          }
          goto LABEL_38;
        case 3:
          int v32 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v16 < 4) {
            goto LABEL_38;
          }
          goto LABEL_44;
        case 4:
          int v32 = *(_DWORD *)a2;
          if (v16 < 4)
          {
LABEL_38:
            unsigned int v29 = (v32 | (v30 << (8 * v16))) + 2;
            break;
          }
LABEL_44:
          unsigned int v29 = v32 + 2;
          if (v29 == 1) {
            goto LABEL_45;
          }
          goto LABEL_40;
        default:
          break;
      }
    }
    if (v29 == 1)
    {
LABEL_45:
      *(void *)a1 = *(void *)a2;
      unsigned int v33 = &a2[v11];
      uint64_t v34 = (void *)((unint64_t)&a1[v11 + 8] & v21);
      int v35 = (void *)((unint64_t)(v33 + 8) & v21);
      unsigned int v36 = *((unsigned __int8 *)v35 + v13);
      if (v36 > 1)
      {
        memcpy((void *)((unint64_t)&a1[v11 + 8] & v21), v35, v14);
      }
      else if (v36 == 1)
      {
        *uint64_t v34 = *v35;
        *((unsigned char *)v34 + v13) = 1;
      }
      else
      {
        (*(void (**)(unint64_t))(v9 + 32))((unint64_t)&a1[v11 + 8] & v21);
        *((unsigned char *)v34 + v13) = 0;
      }
      a1[v16] = 1;
    }
    else
    {
LABEL_40:
      if (v29)
      {
        memcpy(a1, a2, v16 + 1);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        a1[v16] = 0;
      }
    }
  }
  return a1;
}

uint64_t sub_2592290B4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  __int16 v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v8 = (unsigned __int16)(v7 + 15) & (unsigned __int16)~v7 & 0x1F8;
  unint64_t v9 = *(void *)(v6 + 64);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  uint64_t v10 = v9 + v8;
  if (v10 + 1 > v5) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = v5;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_25;
  }
  unint64_t v12 = v11 + 1;
  char v13 = 8 * (v11 + 1);
  if ((v11 + 1) <= 3)
  {
    unsigned int v16 = ((a2 + ~(-1 << v13) - 253) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v16 < 2)
    {
LABEL_25:
      unsigned int v18 = *((unsigned __int8 *)a1 + v11);
      if (v18 >= 3) {
        return (v18 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_25;
  }
LABEL_17:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 > 3) {
      LODWORD(v12) = 4;
    }
    switch((int)v12)
    {
      case 2:
        LODWORD(v12) = *a1;
        break;
      case 3:
        LODWORD(v12) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v12) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v12) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v12 | v17) + 254;
}

void sub_259229294(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  __int16 v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v10 = (unsigned __int16)(v9 + 15) & (unsigned __int16)~v9 & 0x1F8;
  unint64_t v11 = *(void *)(v8 + 64);
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  uint64_t v12 = v11 + v10;
  if (v12 + 1 > v7) {
    unint64_t v13 = v12 + 1;
  }
  else {
    unint64_t v13 = v7;
  }
  size_t v14 = v13 + 1;
  if (a3 < 0xFE)
  {
    int v15 = 0;
  }
  else if (v14 <= 3)
  {
    unsigned int v18 = ((a3 + ~(-1 << (8 * v14)) - 253) >> (8 * v14)) + 1;
    if (HIWORD(v18))
    {
      int v15 = 4;
    }
    else if (v18 >= 0x100)
    {
      int v15 = 2;
    }
    else
    {
      int v15 = v18 > 1;
    }
  }
  else
  {
    int v15 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v16 = a2 - 254;
    if (v14 < 4)
    {
      int v17 = (v16 >> (8 * v14)) + 1;
      if (v13 != -1)
      {
        int v19 = v16 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13 + 1);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v14] = v17;
        break;
      case 2:
        *(_WORD *)&a1[v14] = v17;
        break;
      case 3:
LABEL_37:
        __break(1u);
        JUMPOUT(0x2592294E4);
      case 4:
        *(_DWORD *)&a1[v14] = v17;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v15)
    {
      case 1:
        a1[v14] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      case 2:
        *(_WORD *)&a1[v14] = 0;
        goto LABEL_25;
      case 3:
        goto LABEL_37;
      case 4:
        *(_DWORD *)&a1[v14] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      default:
LABEL_25:
        if (a2) {
LABEL_26:
        }
          a1[v13] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_25922950C(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  __int16 v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v6 = (unsigned __int16)(v5 + 15) & (unsigned __int16)~v5 & 0x1F8;
  unint64_t v7 = *(void *)(v4 + 64);
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  uint64_t v8 = v7 + v6;
  if (v8 + 1 > v3) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = v3;
  }
  uint64_t result = a1[v9];
  if (result >= 2)
  {
    if (v9 <= 3) {
      uint64_t v11 = v9;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a1;
        goto LABEL_15;
      case 2:
        int v12 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v12 = *(_DWORD *)a1;
LABEL_15:
        unsigned int v13 = (v12 | ((result - 2) << (8 * v9))) + 2;
        unsigned int v14 = v12 + 2;
        if (v9 >= 4) {
          uint64_t result = v14;
        }
        else {
          uint64_t result = v13;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_25922965C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (a2 > 1)
  {
    unint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    __int16 v13 = *(_DWORD *)(v12 + 80) & 0xF8;
    uint64_t v14 = (unsigned __int16)(v13 + 15) & (unsigned __int16)~v13 & 0x1F8;
    unint64_t v15 = *(void *)(v12 + 64);
    if (v15 <= 8) {
      unint64_t v15 = 8;
    }
    uint64_t v16 = v15 + v14;
    if (v16 + 1 > v11) {
      size_t v17 = v16 + 1;
    }
    else {
      size_t v17 = v11;
    }
    if (v17 <= 3) {
      char v18 = ((a2 - 2) >> (8 * v17)) + 2;
    }
    else {
      char v18 = 2;
    }
    if (v17 <= 3) {
      int v19 = (a2 - 2) & ~(-1 << (8 * v17));
    }
    else {
      int v19 = a2 - 2;
    }
    a1[v17] = v18;
    if (v17 >= 4) {
      int v20 = 4;
    }
    else {
      int v20 = v17;
    }
    bzero(a1, v17);
    switch(v20)
    {
      case 2:
        *(_WORD *)a1 = v19;
        break;
      case 3:
        *(_WORD *)a1 = v19;
        a1[2] = BYTE2(v19);
        break;
      case 4:
        *(_DWORD *)a1 = v19;
        break;
      default:
        *a1 = v19;
        break;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    if (v7 <= 8) {
      unint64_t v7 = 8;
    }
    __int16 v8 = *(_DWORD *)(v6 + 80) & 0xF8;
    unint64_t v9 = v7 + ((unsigned __int16)(v8 + 15) & (unsigned __int16)~v8 & 0x1F8);
    if (v9 + 1 > *(void *)(v5 + 64)) {
      unint64_t v10 = v9 + 1;
    }
    else {
      unint64_t v10 = *(void *)(v5 + 64);
    }
    a1[v10] = a2;
  }
}

uint64_t sub_259229888(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_2592298C0()
{
  return swift_release();
}

void *sub_2592298C8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_259229934(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t sub_259229974(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_2592299C4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

uint64_t sub_259229A1C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_259229A34(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *__n128 result = v2;
  return result;
}

uint64_t type metadata accessor for BoundedBufferStateMachine.InterruptedAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259229A6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_259229A94()
{
  return swift_initClassMetadata2();
}

uint64_t sub_259229ADC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_259229B24, 0, 0);
}

uint64_t sub_259229B24()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  sub_25930A920();
  sub_25930A240();
  *uint64_t v1 = v0;
  v1[1] = sub_259229C48;
  uint64_t v2 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2338](v2, &unk_26A37CE48);
}

uint64_t sub_259229C48()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_259229D3C(uint64_t a1, uint64_t *a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = *a2;
  v2[4] = *(void *)(*a2 + 88);
  v2[5] = *(void *)(v3 + 80);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  sub_25930A920();
  uint64_t v4 = sub_25930A240();
  v2[6] = v4;
  v2[7] = *(void *)(v4 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = type metadata accessor for BoundedBufferStateMachine.NextAction();
  uint64_t v5 = sub_25930A240();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259229F08, 0, 0);
}

uint64_t sub_259229F08()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[3];
  uint64_t v7 = *(void *)(v6 + 16);
  type metadata accessor for BoundedBufferStateMachine();
  sub_2592438E8((void (*)(uint64_t))sub_25922C2DC, v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v1, 1, v5) == 1) {
    goto LABEL_9;
  }
  __int16 v8 = (char *)v0[12];
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    return sub_25930A580();
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_9:
    uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_26A37CE50
                                                                                       + dword_26A37CE50);
    uint64_t v21 = (void *)swift_task_alloc();
    v0[14] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_25922A208;
    uint64_t v22 = v0[6];
    uint64_t v23 = v0[2];
    uint64_t v24 = v0[3];
    return v25(v23, 0, 0, (uint64_t)sub_25922C2F8, v24, v22);
  }
  else
  {
    uint64_t v11 = v0[7];
    uint64_t v10 = v0[8];
    uint64_t v12 = v0[6];
    uint64_t v13 = *(void *)v8;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    unint64_t v15 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    v15(v10, &v8[*(int *)(TupleTypeMetadata2 + 48)], v12);
    if (v13) {
      swift_continuation_throwingResume();
    }
    uint64_t v16 = (char *)v0[8];
    uint64_t v17 = v0[6];
    uint64_t v18 = v0[2];
    (*(void (**)(void, void))(v0[11] + 8))(v0[13], v0[10]);
    v15(v18, v16, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
}

uint64_t sub_25922A208()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25922A304, 0, 0);
}

uint64_t sub_25922A304()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[13], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_25922A394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v4 = *(void *)(*(void *)a2 + 80);
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t Action = type metadata accessor for BoundedBufferStateMachine.NextAction();
  uint64_t v8 = *(void *)(Action - 8);
  uint64_t v9 = MEMORY[0x270FA5388](Action);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (uint64_t *)((char *)&v22 - v12);
  uint64_t v14 = type metadata accessor for BoundedBufferStateMachine();
  sub_25922393C(v14, v13);
  (*(void (**)(char *, void *, uint64_t))(v8 + 16))(v11, v13, Action);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
      swift_getAssociatedTypeWitness();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_25930A920();
      uint64_t v16 = sub_25930A240();
      uint64_t v17 = &v11[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v18 = v23;
      (*(void (**)(uint64_t, void *, uint64_t))(v8 + 32))(v23, v13, Action);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v18, 0, 1, Action);
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v17, v16);
    }
    else
    {
      uint64_t v21 = v23;
      (*(void (**)(uint64_t, void *, uint64_t))(v8 + 32))(v23, v13, Action);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, Action);
    }
  }
  else
  {
    uint64_t v20 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v6, v11, v4);
    sub_25922A730(a1, (uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v13, Action);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v23, 1, 1, Action);
  }
}

uint64_t sub_25922A730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37CE58);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_259309F20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v5);
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = 0;
  *((void *)v15 + 3) = 0;
  *((void *)v15 + 4) = v5;
  *((void *)v15 + 5) = *(void *)(v4 + 88);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v15[v14], v9, v5);
  *(void *)&v15[(v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8] = v2;
  swift_retain();
  uint64_t v16 = sub_2592EBE08((uint64_t)v12, (uint64_t)&unk_26A37CE68, (uint64_t)v15);
  uint64_t v17 = type metadata accessor for BoundedBufferStateMachine();
  sub_259222768(v16, v17);
  return swift_release();
}

uint64_t sub_25922A968(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(*a2 + 88);
  uint64_t v5 = *(void *)(*a2 + 80);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  sub_25930A920();
  uint64_t v6 = sub_25930A240();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v25 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - v9;
  Suspendeduint64_t Action = type metadata accessor for BoundedBufferStateMachine.NextSuspendedAction();
  uint64_t v12 = *(void *)(SuspendedAction - 8);
  uint64_t v13 = MEMORY[0x270FA5388](SuspendedAction);
  unint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v24 - v16;
  uint64_t v18 = a2[2];
  uint64_t v29 = v5;
  uint64_t v30 = v4;
  uint64_t v27 = a1;
  uint64_t v31 = a1;
  type metadata accessor for BoundedBufferStateMachine();
  sub_2592438E8((void (*)(uint64_t))sub_25922C300, (uint64_t)v28, v18);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, SuspendedAction);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v15, 1, TupleTypeMetadata2) != 1)
  {
    uint64_t v21 = (uint64_t)v25;
    uint64_t v20 = v26;
    uint64_t v22 = *(void *)v15;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v10, &v15[*(int *)(TupleTypeMetadata2 + 48)], v6);
    if (v22) {
      swift_continuation_throwingResume();
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v21, v10, v6);
    sub_25923497C(v21, v27, v6);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v6);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, SuspendedAction);
}

uint64_t sub_25922ACD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[10] = a1;
  v6[11] = a4;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v7 = sub_259309E90();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  return MEMORY[0x270FA2498](sub_25922AD6C, v7, v9);
}

uint64_t sub_25922AD6C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  uint64_t v3 = (void (*)(uint64_t))v0[11];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_25922AE2C;
  uint64_t v4 = swift_continuation_init();
  uint64_t v5 = nullsub_1(v4, v1, MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
  v3(v5);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_25922AE2C()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 8);
  return v1();
}

void sub_25922AF04()
{
  uint64_t v1 = *(void *)(*v0 + 88);
  uint64_t v2 = *(void *)(*v0 + 80);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v3 = sub_25930A920();
  uint64_t v4 = sub_25930A240();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = &v10[-v5];
  uint64_t v7 = v0[2];
  uint64_t v11 = v2;
  uint64_t v12 = v1;
  type metadata accessor for BoundedBufferStateMachine();
  type metadata accessor for BoundedBufferStateMachine.InterruptedAction();
  sub_2592438E8((void (*)(uint64_t))sub_25922C1EC, (uint64_t)v10, v7);
  if (v13)
  {
    uint64_t v9 = v14;
    uint64_t v8 = v15;
    swift_retain();
    sub_259309F30();
    if (v9) {
      swift_continuation_throwingResume();
    }
    if (v8)
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v6, 1, 1, v3);
      sub_25923497C((uint64_t)v6, v8, v4);
    }
    swift_release_n();
  }
}

uint64_t sub_25922B0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  v5[12] = a4;
  v5[13] = a5;
  uint64_t v6 = *a5;
  v5[14] = *(void *)(*a5 + 88);
  uint64_t v7 = *(void *)(v6 + 80);
  v5[15] = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[16] = AssociatedTypeWitness;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v9 = sub_25930A920();
  v5[17] = v9;
  v5[18] = sub_25930A240();
  v5[19] = swift_task_alloc();
  v5[20] = *(void *)(v9 - 8);
  v5[21] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for BoundedBufferStateMachine.ElementProducedAction();
  v5[22] = v10;
  v5[23] = *(void *)(v10 - 8);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  uint64_t v11 = sub_25930A240();
  v5[26] = v11;
  v5[27] = *(void *)(v11 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = *(void *)(AssociatedTypeWitness - 8);
  v5[30] = swift_task_alloc();
  v5[31] = *(void *)(v7 - 8);
  v5[32] = swift_task_alloc();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  v5[33] = v12;
  v5[34] = *(void *)(v12 - 8);
  v5[35] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25922B464, 0, 0);
}

uint64_t sub_25922B464()
{
  uint64_t v1 = *(void *)(v0 + 104);
  (*(void (**)(void, void, void))(*(void *)(v0 + 248) + 16))(*(void *)(v0 + 256), *(void *)(v0 + 96), *(void *)(v0 + 120));
  sub_259309F80();
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 288) = v2;
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  *(void *)(v0 + 296) = type metadata accessor for BoundedBufferStateMachine();
  sub_2592438E8((void (*)(uint64_t))sub_25922C558, v5, v2);
  swift_task_dealloc();
  if (*(unsigned char *)(v0 + 320) == 1)
  {
    return MEMORY[0x270FA2498](sub_25922B63C, 0, 0);
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 304) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_25922B87C;
    uint64_t v8 = *(void *)(v0 + 264);
    uint64_t v9 = *(void *)(v0 + 224);
    return MEMORY[0x270FA1E80](v9, v8, AssociatedConformanceWitness);
  }
}

uint64_t sub_25922B63C()
{
  uint64_t v1 = (void *)v0[13];
  v0[2] = v0;
  v0[3] = sub_25922B6D4;
  uint64_t v2 = swift_continuation_init();
  sub_25922C0C0(v2, v1);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_25922B6D4()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v4 = (void *)swift_task_alloc();
  v1[38] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25922B87C;
  uint64_t v5 = v1[33];
  uint64_t v6 = v1[28];
  return MEMORY[0x270FA1E80](v6, v5, AssociatedConformanceWitness);
}

uint64_t sub_25922B87C()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25922BF08;
  }
  else {
    uint64_t v2 = sub_25922B990;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25922B990()
{
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 128);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 288);
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 120);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 216) + 8))(v2, *(void *)(v0 + 208));
    uint64_t v7 = swift_task_alloc();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v6;
    type metadata accessor for BoundedBufferStateMachine.FinishAction();
    sub_2592438E8((void (*)(uint64_t))sub_25922C600, v7, v4);
    swift_task_dealloc();
    unint64_t v8 = *(void *)(v0 + 88);
    if (v8 > 1)
    {
      uint64_t v35 = *(void *)(v0 + 272);
      uint64_t v34 = *(void *)(v0 + 280);
      uint64_t v36 = *(void *)(v0 + 264);
      uint64_t v37 = *(void *)(v0 + 152);
      uint64_t v38 = *(void *)(v0 + 144);
      (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 160) + 56))(v37, 1, 1, *(void *)(v0 + 136));
      sub_25923497C(v37, v8, v38);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 264));
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v39 = *(uint64_t (**)(void))(v0 + 8);
    return v39();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 288);
    uint64_t v10 = *(void *)(v0 + 240);
    uint64_t v11 = *(void *)(v0 + 200);
    uint64_t v42 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 176);
    uint64_t v13 = *(void *)(v0 + 184);
    int8x16_t v41 = *(int8x16_t *)(v0 + 112);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v10, v2, v3);
    uint64_t v14 = (int8x16_t *)swift_task_alloc();
    v14[1] = vextq_s8(v41, v41, 8uLL);
    v14[2].i64[0] = v10;
    sub_2592438E8((void (*)(uint64_t))sub_25922C654, (uint64_t)v14, v9);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v42, v11, v12);
    sub_259309F50();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v42, 1, TupleTypeMetadata2) != 1)
    {
      uint64_t v16 = *(uint64_t **)(v0 + 192);
      uint64_t v18 = *(void *)(v0 + 160);
      uint64_t v17 = *(void *)(v0 + 168);
      uint64_t v20 = *(void *)(v0 + 144);
      uint64_t v19 = *(void *)(v0 + 152);
      uint64_t v21 = *(void *)(v0 + 136);
      uint64_t v22 = *v16;
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v17, (char *)v16 + *(int *)(TupleTypeMetadata2 + 48), v21);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v17, v21);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v19, 0, 1, v21);
      sub_25923497C(v19, v22, v20);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v21);
    }
    uint64_t v24 = *(void *)(v0 + 232);
    uint64_t v23 = *(void *)(v0 + 240);
    uint64_t v25 = *(void *)(v0 + 128);
    (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 176));
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    uint64_t v26 = *(void *)(v0 + 288);
    uint64_t v28 = *(void *)(v0 + 112);
    uint64_t v27 = *(void *)(v0 + 120);
    uint64_t v29 = swift_task_alloc();
    *(void *)(v29 + 16) = v27;
    *(void *)(v29 + 24) = v28;
    *(void *)(v0 + 296) = type metadata accessor for BoundedBufferStateMachine();
    sub_2592438E8((void (*)(uint64_t))sub_25922C558, v29, v26);
    swift_task_dealloc();
    if (*(unsigned char *)(v0 + 320))
    {
      return MEMORY[0x270FA2498](sub_25922B63C, 0, 0);
    }
    else
    {
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v31 = (void *)swift_task_alloc();
      *(void *)(v0 + 304) = v31;
      *uint64_t v31 = v0;
      v31[1] = sub_25922B87C;
      uint64_t v32 = *(void *)(v0 + 264);
      uint64_t v33 = *(void *)(v0 + 224);
      return MEMORY[0x270FA1E80](v33, v32, AssociatedConformanceWitness);
    }
  }
}

uint64_t sub_25922BF08()
{
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 264));
  uint64_t v5 = (void *)swift_task_alloc();
  v5[2] = v3;
  v5[3] = v4;
  v5[4] = v1;
  type metadata accessor for BoundedBufferStateMachine.FinishAction();
  sub_2592438E8((void (*)(uint64_t))sub_25922C5A8, (uint64_t)v5, v2);
  swift_task_dealloc();
  unint64_t v6 = *(void *)(v0 + 80);
  if (v6 > 1)
  {
    uint64_t v7 = *(void **)(v0 + 152);
    uint64_t v8 = *(void *)(v0 + 160);
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v9 = *(void *)(v0 + 144);
    *uint64_t v7 = *(void *)(v0 + 312);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v10);
    sub_25923497C((uint64_t)v7, v6, v9);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

void sub_25922C0C0(uint64_t a1, void *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[2];
  v4[2] = *(void *)(*a2 + 80);
  v4[3] = *(void *)(v2 + 88);
  v4[4] = a1;
  type metadata accessor for BoundedBufferStateMachine();
  type metadata accessor for BoundedBufferStateMachine.ProducerSuspendedAction();
  sub_2592438E8((void (*)(uint64_t))sub_25922C6AC, (uint64_t)v4, v3);
  if (v5 == 1) {
    swift_continuation_throwingResume();
  }
}

uint64_t sub_25922C198()
{
  sub_25922AF04();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BoundedBufferStorage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25922C1EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for BoundedBufferStateMachine();
  uint64_t result = sub_259224D04(v2);
  *a1 = result;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_25922C23C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25921D238;
  return sub_259229D3C(a1, v1);
}

uint64_t sub_25922C2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25922A394(a1, v2, a2);
}

uint64_t sub_25922C2F8(uint64_t a1)
{
  return sub_25922A968(a1, v1);
}

uint64_t sub_25922C300@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = type metadata accessor for BoundedBufferStateMachine();
  return sub_25922440C(v3, v4, a1);
}

uint64_t sub_25922C358()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_25922C438(uint64_t a1)
{
  uint64_t v4 = v1[3];
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = (uint64_t)v1 + v5;
  uint64_t v8 = *(uint64_t **)((char *)v1 + ((*(void *)(*(void *)(v1[4] - 8) + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_25921D238;
  return sub_25922B0F8(a1, v6, v4, v7, v8);
}

BOOL sub_25922C558@<W0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for BoundedBufferStateMachine();
  BOOL result = sub_2592229B4(v2);
  *a1 = result;
  return result;
}

uint64_t sub_25922C5A8@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v3 = *(void **)(v1 + 32);
  type metadata accessor for BoundedBufferStateMachine();
  uint64_t result = sub_259223588(v3);
  *a1 = result;
  return result;
}

uint64_t sub_25922C600@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for BoundedBufferStateMachine();
  uint64_t result = sub_259223588(0);
  *a1 = result;
  return result;
}

uint64_t sub_25922C654@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = type metadata accessor for BoundedBufferStateMachine();
  return sub_259222FB4(v3, v4, a1);
}

uint64_t sub_25922C6AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = type metadata accessor for BoundedBufferStateMachine();
  uint64_t result = sub_259222CA8(v3, v4);
  *a1 = result & 1;
  return result;
}

void *sub_25922C708(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*v2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = type metadata accessor for BoundedBufferStateMachine();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  sub_2592226CC((uint64_t)v8, a2, v5, (uint64_t)v12);
  uint64_t v13 = sub_259243A20();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v2[2] = v13;
  return v2;
}

void *sub_25922C8C4(uint64_t a1, uint64_t a2)
{
  return sub_25922C708(a1, a2);
}

uint64_t sub_25922C910()
{
  uint64_t result = type metadata accessor for UnboundedBufferStateMachine.State();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25922C9A8(uint64_t *__dst, uint64_t *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v5 + 64) <= 0x18uLL) {
    uint64_t v6 = 24;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) + 17 > 0x18)
  {
    uint64_t v9 = *__src;
    *uint64_t v4 = *__src;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v10 = *((unsigned __int8 *)__src + v6);
    unsigned int v11 = v10 - 3;
    if (v10 >= 3)
    {
      if (v6 <= 3) {
        uint64_t v12 = v6;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *(unsigned __int8 *)__src;
          goto LABEL_19;
        case 2:
          int v13 = *(unsigned __int16 *)__src;
          goto LABEL_19;
        case 3:
          int v13 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_19;
        case 4:
          int v13 = *(_DWORD *)__src;
LABEL_19:
          int v14 = (v13 | (v11 << (8 * v6))) + 3;
          unsigned int v10 = v13 + 3;
          if (v6 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 2)
    {
      *__dst = *__src;
      *((unsigned char *)__dst + v6) = 2;
      swift_retain();
    }
    else if (v10 == 1)
    {
      uint64_t v15 = __src[1];
      *__dst = *__src;
      __dst[1] = v15;
      __dst[2] = __src[2];
      *((unsigned char *)__dst + v6) = 1;
      swift_retain();
      swift_retain();
    }
    else if (v10)
    {
      memcpy(__dst, __src, v6 + 1);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(__dst, __src);
      *((unsigned char *)v4 + v6) = 0;
    }
    unint64_t v16 = ((unint64_t)__src + v6 + 8) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v17 = *(void *)v16;
    unint64_t v18 = ((unint64_t)v4 + v6 + 8) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)(v18 + 8) = *(unsigned char *)(v16 + 8);
    *(void *)unint64_t v18 = v17;
  }
  return v4;
}

unsigned char *sub_25922CBA8(unsigned char *__dst, void *__src, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL) {
    uint64_t v5 = 24;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)__src + v5);
  unsigned int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *(unsigned __int8 *)__src;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)__src;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 3;
        unsigned int v6 = v9 + 3;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 2)
  {
    *(void *)__dst = *__src;
    __dst[v5] = 2;
    swift_retain();
  }
  else if (v6 == 1)
  {
    uint64_t v11 = __src[1];
    *(void *)__dst = *__src;
    *((void *)__dst + 1) = v11;
    *((void *)__dst + 2) = __src[2];
    __dst[v5] = 1;
    swift_retain();
    swift_retain();
  }
  else if (v6)
  {
    memcpy(__dst, __src, v5 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst, __src);
    __dst[v5] = 0;
  }
  unint64_t v12 = ((unint64_t)__src + v5 + 8) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  unint64_t v14 = (unint64_t)&__dst[v5 + 8] & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)unint64_t v14 = v13;
  return __dst;
}

unsigned __int8 *sub_25922CD60(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (__dst == __src) {
    goto LABEL_41;
  }
  if (*(void *)(v6 + 64) <= 0x18uLL) {
    uint64_t v7 = 24;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  unsigned int v8 = __dst[v7];
  unsigned int v9 = v8 - 3;
  if (v8 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__dst;
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)__dst;
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_14;
      case 4:
        int v11 = *(_DWORD *)__dst;
LABEL_14:
        int v12 = (v11 | (v9 << (8 * v7))) + 3;
        unsigned int v8 = v11 + 3;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 != 2)
  {
    if (v8 != 1)
    {
      if (!v8) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      }
      goto LABEL_23;
    }
    swift_release();
  }
  swift_release();
LABEL_23:
  unsigned int v13 = __src[v7];
  unsigned int v14 = v13 - 3;
  if (v13 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v15 = v7;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *__src;
        goto LABEL_32;
      case 2:
        int v16 = *(unsigned __int16 *)__src;
        goto LABEL_32;
      case 3:
        int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_32;
      case 4:
        int v16 = *(_DWORD *)__src;
LABEL_32:
        int v17 = (v16 | (v14 << (8 * v7))) + 3;
        unsigned int v13 = v16 + 3;
        if (v7 < 4) {
          unsigned int v13 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 2)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v7] = 2;
    swift_retain();
  }
  else if (v13 == 1)
  {
    *(void *)__dst = *(void *)__src;
    *((void *)__dst + 1) = *((void *)__src + 1);
    *((void *)__dst + 2) = *((void *)__src + 2);
    __dst[v7] = 1;
    swift_retain();
    swift_retain();
  }
  else if (v13)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
    __dst[v7] = 0;
  }
LABEL_41:
  unint64_t v18 = *(void *)(v6 + 64);
  if (v18 <= 0x18) {
    unint64_t v18 = 24;
  }
  unint64_t v19 = v18 + 8;
  unint64_t v20 = (unint64_t)&__dst[v19];
  unint64_t v21 = (unint64_t)&__src[v19] & 0xFFFFFFFFFFFFFFF8;
  char v22 = *(unsigned char *)(v21 + 8);
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = v22;
  return __dst;
}

unsigned char *sub_25922D034(unsigned char *__dst, void *__src, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL) {
    uint64_t v5 = 24;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)__src + v5);
  unsigned int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *(unsigned __int8 *)__src;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)__src;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 3;
        unsigned int v6 = v9 + 3;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 2)
  {
    *(void *)__dst = *__src;
    __dst[v5] = 2;
  }
  else if (v6 == 1)
  {
    *(_OWORD *)__dst = *(_OWORD *)__src;
    *((void *)__dst + 2) = __src[2];
    __dst[v5] = 1;
  }
  else if (v6)
  {
    memcpy(__dst, __src, v5 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst, __src);
    __dst[v5] = 0;
  }
  unint64_t v11 = ((unint64_t)__src + v5 + 8) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)v11;
  unint64_t v13 = (unint64_t)&__dst[v5 + 8] & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v11 + 8);
  *(void *)unint64_t v13 = v12;
  return __dst;
}

unsigned __int8 *sub_25922D1DC(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (__dst == __src) {
    goto LABEL_41;
  }
  if (*(void *)(v6 + 64) <= 0x18uLL) {
    uint64_t v7 = 24;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  unsigned int v8 = __dst[v7];
  unsigned int v9 = v8 - 3;
  if (v8 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__dst;
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)__dst;
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_14;
      case 4:
        int v11 = *(_DWORD *)__dst;
LABEL_14:
        int v12 = (v11 | (v9 << (8 * v7))) + 3;
        unsigned int v8 = v11 + 3;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 != 2)
  {
    if (v8 != 1)
    {
      if (!v8) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      }
      goto LABEL_23;
    }
    swift_release();
  }
  swift_release();
LABEL_23:
  unsigned int v13 = __src[v7];
  unsigned int v14 = v13 - 3;
  if (v13 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v15 = v7;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *__src;
        goto LABEL_32;
      case 2:
        int v16 = *(unsigned __int16 *)__src;
        goto LABEL_32;
      case 3:
        int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_32;
      case 4:
        int v16 = *(_DWORD *)__src;
LABEL_32:
        int v17 = (v16 | (v14 << (8 * v7))) + 3;
        unsigned int v13 = v16 + 3;
        if (v7 < 4) {
          unsigned int v13 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 2)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v7] = 2;
  }
  else if (v13 == 1)
  {
    *(_OWORD *)__dst = *(_OWORD *)__src;
    *((void *)__dst + 2) = *((void *)__src + 2);
    __dst[v7] = 1;
  }
  else if (v13)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
    __dst[v7] = 0;
  }
LABEL_41:
  unint64_t v18 = *(void *)(v6 + 64);
  if (v18 <= 0x18) {
    unint64_t v18 = 24;
  }
  unint64_t v19 = v18 + 8;
  unint64_t v20 = (unint64_t)&__dst[v19];
  unint64_t v21 = (unint64_t)&__src[v19] & 0xFFFFFFFFFFFFFFF8;
  char v22 = *(unsigned char *)(v21 + 8);
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = v22;
  return __dst;
}

uint64_t sub_25922D498(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v3 <= 0x18) {
    unint64_t v3 = 24;
  }
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unint64_t v4 = (v3 & 0xFFFFFFFFFFFFFFF8) + 17;
    if (v4 < 4) {
      unsigned int v5 = ((a2 + 2) >> (8 * v4)) + 1;
    }
    else {
      unsigned int v5 = 2;
    }
    if (v5 >= 0x10000) {
      unsigned int v6 = 4;
    }
    else {
      unsigned int v6 = 2;
    }
    if (v5 < 0x100) {
      unsigned int v6 = 1;
    }
    if (v5 >= 2) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    switch(v7)
    {
      case 1:
        int v8 = a1[v4];
        if (!a1[v4]) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v8 = *(unsigned __int16 *)&a1[v4];
        if (*(_WORD *)&a1[v4]) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25922D59CLL);
      case 4:
        int v8 = *(_DWORD *)&a1[v4];
        if (!v8) {
          break;
        }
LABEL_21:
        int v10 = (v8 - 1) << (8 * v4);
        if (v4 >= 4) {
          int v10 = 0;
        }
        if (v4 == 1) {
          int v11 = *a1;
        }
        else {
          int v11 = *(_DWORD *)a1;
        }
        return (v11 | v10) + 254;
      default:
        break;
    }
  }
  unsigned int v12 = *(unsigned __int8 *)(((unint64_t)&a1[v3 + 8] & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v12 > 2) {
    return (v12 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_25922D5B0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x18) {
    unint64_t v5 = 24;
  }
  size_t v6 = (v5 & 0xFFFFFFFFFFFFFFF8) + 17;
  char v7 = 8 * v6;
  if (a3 < 0xFE)
  {
    int v10 = 0;
    if (a2 > 0xFD) {
      goto LABEL_16;
    }
  }
  else
  {
    if (v6 <= 3) {
      unsigned int v8 = ((a3 + 2) >> v7) + 1;
    }
    else {
      unsigned int v8 = 2;
    }
    if (v8 >= 0x10000) {
      int v9 = 4;
    }
    else {
      int v9 = 2;
    }
    if (v8 < 0x100) {
      int v9 = 1;
    }
    if (v8 >= 2) {
      int v10 = v9;
    }
    else {
      int v10 = 0;
    }
    if (a2 > 0xFD)
    {
LABEL_16:
      unsigned int v11 = (a2 - 254) >> v7;
      if (v6 < 4) {
        int v12 = v11 + 1;
      }
      else {
        int v12 = 1;
      }
      if (v6 >= 4) {
        unsigned int v13 = a2 - 254;
      }
      else {
        unsigned int v13 = (a2 + 2);
      }
      bzero(a1, v6);
      if (v6 == 1) {
        *a1 = v13;
      }
      else {
        *(_DWORD *)a1 = v13;
      }
      switch(v10)
      {
        case 1:
          a1[v6] = v12;
          return;
        case 2:
          *(_WORD *)&a1[v6] = v12;
          return;
        case 3:
          goto LABEL_39;
        case 4:
          *(_DWORD *)&a1[v6] = v12;
          return;
        default:
          return;
      }
    }
  }
  switch(v10)
  {
    case 1:
      a1[v6] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v6] = 0;
      goto LABEL_32;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x25922D730);
    case 4:
      *(_DWORD *)&a1[v6] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    default:
LABEL_32:
      if (a2) {
LABEL_33:
      }
        *(unsigned char *)(((unint64_t)&a1[v5 + 8] & 0xFFFFFFFFFFFFFFF8) + 8) = -(char)a2;
      return;
  }
}

uint64_t type metadata accessor for UnboundedBufferStateMachine()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for UnboundedBufferStateMachine.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25922D788()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_25922D82C(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x18uLL) {
    uint64_t v5 = 24;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    void *v3 = *(void *)a2;
    unint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_10:
    swift_retain();
    return v3;
  }
  unsigned int v10 = a2[v5];
  unsigned int v11 = v10 - 3;
  if (v10 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v12 = v5;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_21;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_21;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_21;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_21:
        int v14 = (v13 | (v11 << (8 * v5))) + 3;
        unsigned int v10 = v13 + 3;
        if (v5 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  if (v10 == 2)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v5] = 2;
    goto LABEL_10;
  }
  if (v10 == 1)
  {
    uint64_t v15 = *((void *)a2 + 1);
    *(void *)__dst = *(void *)a2;
    *((void *)__dst + 1) = v15;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    __dst[v5] = 1;
    swift_retain();
    goto LABEL_10;
  }
  if (v10)
  {
    memcpy(__dst, a2, v5 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(v4 + 16))(__dst);
    *((unsigned char *)v3 + v5) = 0;
  }
  return v3;
}

unsigned __int8 *sub_25922D9EC(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x18) {
    unint64_t v2 = 24;
  }
  unsigned int v3 = result[v2];
  unsigned int v4 = v3 - 3;
  if (v3 >= 3)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *result;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)result;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 3;
        unsigned int v3 = v6 + 3;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 != 2)
  {
    if (v3 != 1)
    {
      if (!v3)
      {
        uint64_t v8 = *(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
        return (unsigned __int8 *)v8();
      }
      return result;
    }
    swift_release();
  }
  return (unsigned __int8 *)swift_release();
}

unsigned char *sub_25922DB5C(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL) {
    uint64_t v4 = 24;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 3;
        unsigned int v5 = v8 + 3;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 2)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 2;
    swift_retain();
  }
  else if (v5 == 1)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *(void *)__dst = *(void *)a2;
    *((void *)__dst + 1) = v10;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    __dst[v4] = 1;
    swift_retain();
    swift_retain();
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_25922DCE4(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 0x18uLL) {
    uint64_t v7 = 24;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  unsigned int v8 = __dst[v7];
  unsigned int v9 = v8 - 3;
  if (v8 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__dst;
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)__dst;
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_14;
      case 4:
        int v11 = *(_DWORD *)__dst;
LABEL_14:
        int v12 = (v11 | (v9 << (8 * v7))) + 3;
        unsigned int v8 = v11 + 3;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 != 2)
  {
    if (v8 != 1)
    {
      if (!v8) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      }
      goto LABEL_23;
    }
    swift_release();
  }
  swift_release();
LABEL_23:
  unsigned int v13 = __src[v7];
  unsigned int v14 = v13 - 3;
  if (v13 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v15 = v7;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *__src;
        goto LABEL_32;
      case 2:
        int v16 = *(unsigned __int16 *)__src;
        goto LABEL_32;
      case 3:
        int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_32;
      case 4:
        int v16 = *(_DWORD *)__src;
LABEL_32:
        int v17 = (v16 | (v14 << (8 * v7))) + 3;
        unsigned int v13 = v16 + 3;
        if (v7 < 4) {
          unsigned int v13 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 2)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v7] = 2;
    swift_retain();
  }
  else if (v13 == 1)
  {
    *(void *)__dst = *(void *)__src;
    *((void *)__dst + 1) = *((void *)__src + 1);
    *((void *)__dst + 2) = *((void *)__src + 2);
    __dst[v7] = 1;
    swift_retain();
    swift_retain();
  }
  else if (v13)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned char *sub_25922DF6C(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL) {
    uint64_t v4 = 24;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 3;
        unsigned int v5 = v8 + 3;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 2)
  {
    *(void *)__dst = *(void *)a2;
    __dst[v4] = 2;
  }
  else if (v5 == 1)
  {
    *(_OWORD *)__dst = *(_OWORD *)a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    __dst[v4] = 1;
  }
  else if (v5)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    __dst[v4] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_25922E0DC(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 0x18uLL) {
    uint64_t v7 = 24;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  unsigned int v8 = __dst[v7];
  unsigned int v9 = v8 - 3;
  if (v8 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__dst;
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)__dst;
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_14;
      case 4:
        int v11 = *(_DWORD *)__dst;
LABEL_14:
        int v12 = (v11 | (v9 << (8 * v7))) + 3;
        unsigned int v8 = v11 + 3;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 != 2)
  {
    if (v8 != 1)
    {
      if (!v8) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      }
      goto LABEL_23;
    }
    swift_release();
  }
  swift_release();
LABEL_23:
  unsigned int v13 = __src[v7];
  unsigned int v14 = v13 - 3;
  if (v13 >= 3)
  {
    if (v7 <= 3) {
      uint64_t v15 = v7;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *__src;
        goto LABEL_32;
      case 2:
        int v16 = *(unsigned __int16 *)__src;
        goto LABEL_32;
      case 3:
        int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_32;
      case 4:
        int v16 = *(_DWORD *)__src;
LABEL_32:
        int v17 = (v16 | (v14 << (8 * v7))) + 3;
        unsigned int v13 = v16 + 3;
        if (v7 < 4) {
          unsigned int v13 = v17;
        }
        break;
      default:
        break;
    }
  }
  if (v13 == 2)
  {
    *(void *)__dst = *(void *)__src;
    __dst[v7] = 2;
  }
  else if (v13 == 1)
  {
    *(_OWORD *)__dst = *(_OWORD *)__src;
    *((void *)__dst + 2) = *((void *)__src + 2);
    __dst[v7] = 1;
  }
  else if (v13)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
    __dst[v7] = 0;
  }
  return __dst;
}

uint64_t sub_25922E34C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 24;
  if (*(void *)(v3 + 64) > 0x18uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 252) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 4) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 253;
}

void sub_25922E480(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x18) {
    unint64_t v5 = 24;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFD)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 252) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFC)
  {
    unsigned int v8 = a2 - 253;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x25922E648);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_25922E670(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 24;
  if (*(void *)(v2 + 64) > 0x18uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 3;
        LODWORD(v4) = v7 + 3;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_25922E728(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL) {
    size_t v4 = 24;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 2)
  {
    unsigned int v5 = a2 - 3;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_25922E800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  type metadata accessor for UnboundedBufferStateMachine.State();
  swift_storeEnumTagMultiPayload();
  uint64_t result = type metadata accessor for UnboundedBufferStateMachine();
  uint64_t v9 = a5 + *(int *)(result + 36);
  *(void *)uint64_t v9 = a2;
  *(unsigned char *)(v9 + 8) = a3;
  return result;
}

uint64_t sub_25922E8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = type metadata accessor for UnboundedBufferStateMachine.State();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (void *)((char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  int v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v14 - v10, v2, v5);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 0:
      swift_getAssociatedTypeWitness();
      type metadata accessor for UnsafeTransfer();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_25930A920();
      v14[1] = sub_259309DF0();
      sub_259309E70();
      swift_getWitnessTable();
      uint64_t v13 = sub_259309580();
      *uint64_t v9 = a1;
      v9[1] = v13;
      v9[2] = 0;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void *, uint64_t))(v6 + 40))(v2, v9, v5);
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v11, v4);
    case 1:
      goto LABEL_6;
    case 2:
      __break(1u);
LABEL_6:
      __break(1u);
      break;
  }
  __break(1u);
  return result;
}

uint64_t sub_25922EB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v45 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for UnsafeTransfer();
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v8 = sub_25930A920();
  uint64_t v9 = sub_25930A240();
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v37 - v11;
  uint64_t v47 = AssociatedTypeWitness;
  uint64_t v44 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v42 = (char *)&v37 - v14;
  uint64_t v43 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v37 - v15;
  uint64_t v17 = type metadata accessor for UnboundedBufferStateMachine.State();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  unint64_t v20 = (uint64_t *)((char *)&v37 - v19);
  (*(void (**)(char *, void *, uint64_t))(v18 + 16))((char *)&v37 - v19, v4, v17);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = v20[1];
      uint64_t v38 = *v20;
      int v39 = a3;
      uint64_t v22 = v20[2];
      if (!v22)
      {
        uint64_t v49 = v21;
        uint64_t v28 = *(void (**)(void *, uint64_t))(v18 + 8);
        swift_retain();
        v28(v4, v17);
        swift_storeEnumTagMultiPayload();
        uint64_t v29 = (char *)v4 + *(int *)(a2 + 36);
        uint64_t v30 = *(void *)v29;
        int v31 = v29[8];
        if (v31)
        {
          a3 = v39;
          if (v31 == 1)
          {
            sub_25922514C((uint64_t)sub_259225140, 0, v21, MEMORY[0x263F331F0], v8, MEMORY[0x263F8E628], MEMORY[0x263F8D6C8], MEMORY[0x263F8E658], v36);
            swift_release();
            uint64_t v32 = v47;
            if (v48 >= v30)
            {
LABEL_14:
              v28(v4, v17);
              uint64_t v34 = v49;
              *uint64_t v4 = v38;
              v4[1] = v34;
              v4[2] = 0;
              swift_storeEnumTagMultiPayload();
LABEL_15:
              sub_25930A920();
              sub_25930A240();
              sub_259309F50();
              TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
              return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8)
                                                                                    + 56))(a3, 1, 1, TupleTypeMetadata2);
            }
          }
          else
          {
            swift_release();
            uint64_t v32 = v47;
          }
        }
        else
        {
          sub_25922514C((uint64_t)sub_259225140, 0, v21, MEMORY[0x263F331F0], v8, MEMORY[0x263F8E628], MEMORY[0x263F8D6C8], MEMORY[0x263F8E658], v36);
          swift_release();
          a3 = v39;
          uint64_t v32 = v47;
          if (v48 >= v30)
          {
            sub_259309570();
            sub_259309560();
            (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v41);
          }
        }
        uint64_t v33 = (uint64_t)v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v42, v45, v32);
        _s10PhotosFace20MakeThrowingSequenceVyACyxGxcfC_0(v33, v32, (uint64_t)v16);
        swift_storeEnumTagMultiPayload();
        sub_259309570();
        sub_259309550();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v8);
        goto LABEL_14;
      }
      uint64_t v49 = v21;
      sub_259309570();
      swift_getWitnessTable();
      if ((sub_25930A150() & 1) == 0)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        JUMPOUT(0x25922F214);
      }
      (*(void (**)(void *, uint64_t))(v18 + 8))(v4, v17);
      *uint64_t v4 = v38;
      v4[1] = v21;
      v4[2] = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v23 = v47;
      sub_25930A920();
      sub_25930A240();
      sub_259309F50();
      uint64_t v24 = swift_getTupleTypeMetadata2();
      uint64_t v25 = v39;
      uint64_t v26 = (char *)v39 + *(int *)(v24 + 48);
      *int v39 = v22;
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v26, v45, v23);
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v25, 0, 1, v24);
    case 2u:
      swift_release();
      goto LABEL_15;
    case 3u:
      goto LABEL_19;
    default:
      goto LABEL_18;
  }
}

uint64_t sub_25922F224(void *a1)
{
  uint64_t v2 = v1;
  swift_getAssociatedTypeWitness();
  type metadata accessor for UnsafeTransfer();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v4 = sub_25930A920();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v20 - v6);
  uint64_t v8 = type metadata accessor for UnboundedBufferStateMachine.State();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  int v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v20 - v13;
  (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 16))((char *)&v20 - v13, v2, v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v15 = *((void *)v14 + 1);
      uint64_t v16 = *((void *)v14 + 2);
      swift_release();
      if (v16)
      {
        uint64_t v21 = v15;
        sub_259309570();
        swift_getWitnessTable();
        if ((sub_25930A150() & 1) == 0)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x25922F5B0);
        }
        uint64_t v21 = sub_259309DF0();
        sub_259309E70();
        swift_getWitnessTable();
        uint64_t v17 = sub_259309580();
        swift_release();
        uint64_t *v12 = v17;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 40))(v2, v12, v8);
      }
      else
      {
        uint64_t v21 = v15;
        if (a1)
        {
          *uint64_t v7 = a1;
          swift_storeEnumTagMultiPayload();
          id v18 = a1;
          sub_259309570();
          sub_259309550();
          (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
        }
        (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v2, v8);
        *uint64_t v2 = v21;
        swift_storeEnumTagMultiPayload();
        return 1;
      }
      return v16;
    case 2u:
      swift_release();
      return 1;
    case 3u:
      goto LABEL_13;
    default:
      goto LABEL_12;
  }
}

uint64_t sub_25922F5C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for UnsafeTransfer();
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v7 = sub_25930A920();
  uint64_t v8 = sub_25930A240();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v46 = v6;
  uint64_t v47 = v5;
  uint64_t v20 = type metadata accessor for UnboundedBufferStateMachine.State();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (uint64_t *)((char *)&v41 - v22);
  (*(void (**)(char *, void *, uint64_t))(v21 + 16))((char *)&v41 - v22, v3, v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v41 = a2;
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      uint64_t v42 = v23[2];
      uint64_t v48 = v24;
      sub_259309570();
      swift_getWitnessTable();
      if (sub_25930A150())
      {
        swift_release();
        swift_release();
        if (!v42) {
          goto LABEL_13;
        }
        __break(1u);
        goto LABEL_16;
      }
      uint64_t v48 = v24;
      if (v42)
      {
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v28 = *(void (**)(void *, uint64_t))(v21 + 8);
      v28(v3, v20);
      swift_storeEnumTagMultiPayload();
      sub_259309560();
      uint64_t v29 = v43;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v14, 1, v7) == 1)
      {
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v19, v14, v7);
      v28(v3, v20);
      uint64_t v30 = v48;
      void *v3 = v25;
      v3[1] = v30;
      v3[2] = 0;
      uint64_t v31 = swift_storeEnumTagMultiPayload();
      MEMORY[0x270FA5388](v31);
      uint64_t v32 = v47;
      *(&v41 - 2) = v46;
      *(&v41 - 1) = v32;
      swift_retain();
      swift_retain();
      uint64_t v33 = v41;
      sub_2592241F8((void (*)(char *))sub_25922513C, v7, v41);
      swift_release();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v7);
      swift_release();
      uint64_t v34 = sub_25930A920();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
      type metadata accessor for UnboundedBufferStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
    case 2u:
      uint64_t v26 = *v23;
      uint64_t v48 = *v23;
      sub_259309570();
      swift_getWitnessTable();
      if (sub_25930A150())
      {
        swift_release();
        uint64_t v27 = sub_25930A920();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a2, 1, 1, v27);
      }
      else
      {
        uint64_t v48 = v26;
        uint64_t v35 = *(void (**)(void *, uint64_t))(v21 + 8);
        v35(v3, v20);
        swift_storeEnumTagMultiPayload();
        sub_259309560();
        uint64_t v36 = v43;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v11, 1, v7) == 1)
        {
LABEL_19:
          __break(1u);
          JUMPOUT(0x25922FD48);
        }
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v17, v11, v7);
        v35(v3, v20);
        void *v3 = v48;
        uint64_t v37 = swift_storeEnumTagMultiPayload();
        MEMORY[0x270FA5388](v37);
        uint64_t v38 = v47;
        *(&v41 - 2) = v46;
        *(&v41 - 1) = v38;
        swift_retain();
        sub_2592241F8((void (*)(char *))sub_25922513C, v7, a2);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v7);
        swift_release();
        uint64_t v39 = sub_25930A920();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(a2, 0, 1, v39);
      }
LABEL_13:
      type metadata accessor for UnboundedBufferStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
    case 3u:
      goto LABEL_17;
    default:
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v46 - 8) + 32))(a2, v23, v46);
      type metadata accessor for UnboundedBufferStateMachine.NextAction();
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_25922FD58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v51 = a1;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for UnsafeTransfer();
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v8 = sub_25930A920();
  uint64_t v9 = sub_25930A240();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v50 = (char *)&v48 - v19;
  uint64_t v52 = v7;
  uint64_t v53 = v6;
  uint64_t v20 = type metadata accessor for UnboundedBufferStateMachine.State();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (uint64_t *)((char *)&v48 - v22);
  (*(void (**)(char *, void *, uint64_t))(v21 + 16))((char *)&v48 - v22, v4, v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v49 = a3;
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      uint64_t v26 = v23[2];
      uint64_t v57 = v25;
      sub_259309570();
      swift_retain();
      swift_retain();
      swift_getWitnessTable();
      if (sub_25930A150())
      {
        swift_release();
        swift_release();
        if (!v26)
        {
          (*(void (**)(void *, uint64_t))(v21 + 8))(v4, v20);
          *uint64_t v4 = v24;
          v4[1] = v25;
          v4[2] = v51;
          swift_storeEnumTagMultiPayload();
          sub_25930A920();
          uint64_t v27 = sub_25930A240();
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v49, 1, 1, v27);
        }
        __break(1u);
        goto LABEL_16;
      }
      swift_release();
      swift_release();
      uint64_t v57 = v25;
      if (v26)
      {
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      uint64_t v31 = *(void (**)(void *, uint64_t))(v21 + 8);
      v31(v4, v20);
      swift_storeEnumTagMultiPayload();
      sub_259309560();
      uint64_t v32 = v54;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v15, 1, v8) == 1)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      uint64_t v33 = v50;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v50, v15, v8);
      v31(v4, v20);
      uint64_t v34 = v32;
      uint64_t v35 = v57;
      *uint64_t v4 = v24;
      v4[1] = v35;
      v4[2] = 0;
      uint64_t v36 = swift_storeEnumTagMultiPayload();
      MEMORY[0x270FA5388](v36);
      uint64_t v37 = v53;
      *(&v48 - 2) = v52;
      *(&v48 - 1) = v37;
      swift_retain();
      swift_retain();
      uint64_t v38 = v49;
      sub_2592241F8((void (*)(char *))sub_25922513C, v8, v49);
      swift_release();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v8);
      swift_release();
      uint64_t v39 = sub_25930A920();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
      uint64_t v40 = sub_25930A240();
      uint64_t v41 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
      uint64_t v42 = v38;
      return v41(v42, 0, 1, v40);
    case 2u:
      uint64_t v29 = *v23;
      uint64_t v57 = *v23;
      sub_259309570();
      swift_getWitnessTable();
      if (sub_25930A150())
      {
        swift_release();
        uint64_t v30 = sub_25930A920();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a3, 1, 1, v30);
      }
      else
      {
        uint64_t v57 = v29;
        uint64_t v43 = *(void (**)(void *, uint64_t))(v21 + 8);
        v43(v4, v20);
        swift_storeEnumTagMultiPayload();
        sub_259309560();
        uint64_t v44 = v54;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v12, 1, v8) == 1)
        {
LABEL_20:
          __break(1u);
          JUMPOUT(0x259230540);
        }
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v18, v12, v8);
        v43(v4, v20);
        *uint64_t v4 = v57;
        uint64_t v45 = swift_storeEnumTagMultiPayload();
        MEMORY[0x270FA5388](v45);
        uint64_t v46 = v53;
        *(&v48 - 2) = v52;
        *(&v48 - 1) = v46;
        swift_retain();
        sub_2592241F8((void (*)(char *))sub_25922513C, v8, a3);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v8);
        swift_release();
        uint64_t v47 = sub_25930A920();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(a3, 0, 1, v47);
      }
      uint64_t v40 = sub_25930A240();
      uint64_t v41 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
      uint64_t v42 = a3;
      return v41(v42, 0, 1, v40);
    case 3u:
      goto LABEL_18;
    default:
      goto LABEL_17;
  }
}

uint64_t sub_259230550(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = type metadata accessor for UnboundedBufferStateMachine.State();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (uint64_t *)((char *)&v12 - v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v12 - v8, v1, v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = *v9;
      swift_release();
      swift_getAssociatedTypeWitness();
      type metadata accessor for UnsafeTransfer();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_25930A920();
      uint64_t v13 = sub_259309DF0();
      sub_259309E70();
      swift_getWitnessTable();
      *uint64_t v7 = sub_259309580();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v4 + 40))(v1, v7, v3);
      return v10;
    case 2u:
      swift_release();
      swift_getAssociatedTypeWitness();
      type metadata accessor for UnsafeTransfer();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_25930A920();
      uint64_t v13 = sub_259309DF0();
      sub_259309E70();
      swift_getWitnessTable();
      *uint64_t v7 = sub_259309580();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v4 + 40))(v1, v7, v3);
      return 0;
    case 3u:
      __break(1u);
      JUMPOUT(0x259230968);
    default:
      swift_getAssociatedTypeWitness();
      type metadata accessor for UnsafeTransfer();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_25930A920();
      uint64_t v13 = sub_259309DF0();
      sub_259309E70();
      swift_getWitnessTable();
      *uint64_t v7 = sub_259309580();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v4 + 40))(v1, v7, v3);
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v2 - 8) + 8))(v9, v2);
      return 0;
  }
}

uint64_t type metadata accessor for UnboundedBufferStateMachine.NextAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for UnboundedBufferStateMachine.FinishAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2592309A8()
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t result = sub_25930A920();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_259230A78(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7 & 0xF8 | 7;
  uint64_t v9 = ~v8;
  size_t v10 = v6 + (((v7 & 0xF8) + 15) & ~v8) + 1;
  if ((v7 & 0x1000F8) != 0 || v10 > 0x18)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v8 + 16) & v9));
    swift_retain();
  }
  else if ((unint64_t)*a2 < 0xFFFFFFFF)
  {
    memcpy(a1, a2, v10);
  }
  else
  {
    *a1 = *a2;
    uint64_t v13 = (void *)(((unint64_t)a1 + 15) & v9);
    uint64_t v14 = (unsigned __int8 *)(((unint64_t)a2 + 15) & v9);
    unsigned int v15 = v14[v6];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v17 = v6;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *v14;
          goto LABEL_21;
        case 2:
          int v18 = *(unsigned __int16 *)v14;
          goto LABEL_21;
        case 3:
          int v18 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_21;
        case 4:
          int v18 = *(_DWORD *)v14;
LABEL_21:
          int v19 = (v18 | (v16 << (8 * v6))) + 2;
          unsigned int v15 = v18 + 2;
          if (v6 < 4) {
            unsigned int v15 = v19;
          }
          break;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
      uint64_t v20 = *(void *)v14;
      id v21 = *(id *)v14;
      *uint64_t v13 = v20;
      *((unsigned char *)v13 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v5 + 16))(v13);
      *((unsigned char *)v13 + v6) = 0;
    }
  }
  return a1;
}

void sub_259230C68(void *a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 <= 8) {
    unint64_t v3 = 8;
  }
  if (*a1 >= 0xFFFFFFFFuLL)
  {
    uint64_t v4 = *(_DWORD *)(v2 + 80) & 0xF8 | 7;
    uint64_t v5 = (unsigned __int8 *)(((unint64_t)a1 + v4 + 8) & ~v4);
    unsigned int v6 = v5[v3];
    unsigned int v7 = v6 - 2;
    if (v6 >= 2)
    {
      if (v3 <= 3) {
        uint64_t v8 = v3;
      }
      else {
        uint64_t v8 = 4;
      }
      switch(v8)
      {
        case 1:
          int v9 = *v5;
          goto LABEL_14;
        case 2:
          int v9 = *(unsigned __int16 *)v5;
          goto LABEL_14;
        case 3:
          int v9 = *(unsigned __int16 *)v5 | (v5[2] << 16);
          goto LABEL_14;
        case 4:
          int v9 = *(_DWORD *)v5;
LABEL_14:
          int v10 = (v9 | (v7 << (8 * v3))) + 2;
          unsigned int v6 = v9 + 2;
          if (v3 < 4) {
            unsigned int v6 = v10;
          }
          break;
        default:
          break;
      }
    }
    if (v6 == 1)
    {
      uint64_t v11 = *(void **)v5;
    }
    else
    {
      uint64_t v12 = *(void (**)(void))(v2 + 8);
      v12();
    }
  }
}

void *sub_259230E00(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  uint64_t v8 = ~v7;
  if (*a2 < 0xFFFFFFFFuLL)
  {
    memcpy(a1, a2, v6 + ((v7 + 8) & v8) + 1);
  }
  else
  {
    *a1 = *a2;
    int v9 = (char *)a1 + v7;
    int v10 = (char *)a2 + v7;
    uint64_t v11 = (void *)((unint64_t)(v9 + 8) & v8);
    uint64_t v12 = (unsigned __int8 *)((unint64_t)(v10 + 8) & v8);
    unsigned int v13 = v12[v6];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v15 = v6;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *v12;
          goto LABEL_15;
        case 2:
          int v16 = *(unsigned __int16 *)v12;
          goto LABEL_15;
        case 3:
          int v16 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_15;
        case 4:
          int v16 = *(_DWORD *)v12;
LABEL_15:
          int v17 = (v16 | (v14 << (8 * v6))) + 2;
          unsigned int v13 = v16 + 2;
          if (v6 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *(void *)v12;
      id v19 = *(id *)v12;
      *uint64_t v11 = v18;
      *((unsigned char *)v11 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v5 + 16))(v11);
      *((unsigned char *)v11 + v6) = 0;
    }
  }
  return a1;
}

unint64_t *sub_259230FC4(unint64_t *a1, unint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v8 = v7 | 7;
  uint64_t v9 = ~(v7 | 7);
  size_t v10 = v6 + ((v7 + 15) & v9) + 1;
  unint64_t v11 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v11 >= 0xFFFFFFFF)
    {
      *a1 = v11;
      uint64_t v20 = (char *)a1 + v8;
      id v21 = (char *)a2 + v8;
      unsigned int v14 = (unsigned __int8 *)((unint64_t)(v20 + 8) & v9);
      uint64_t v22 = (unsigned __int8 *)((unint64_t)(v21 + 8) & v9);
      unsigned int v23 = v22[v6];
      unsigned int v24 = v23 - 2;
      if (v23 >= 2)
      {
        if (v6 <= 3) {
          uint64_t v25 = v6;
        }
        else {
          uint64_t v25 = 4;
        }
        switch(v25)
        {
          case 1:
            int v26 = *v22;
            goto LABEL_29;
          case 2:
            int v26 = *(unsigned __int16 *)v22;
            goto LABEL_29;
          case 3:
            int v26 = *(unsigned __int16 *)v22 | (v22[2] << 16);
            goto LABEL_29;
          case 4:
            int v26 = *(_DWORD *)v22;
LABEL_29:
            int v32 = (v26 | (v24 << (8 * v6))) + 2;
            unsigned int v23 = v26 + 2;
            if (v6 < 4) {
              unsigned int v23 = v32;
            }
            break;
          default:
            break;
        }
      }
      if (v23 == 1)
      {
        uint64_t v33 = *(void **)v22;
LABEL_64:
        id v41 = v33;
        *(void *)unsigned int v14 = v33;
        v14[v6] = 1;
        return a1;
      }
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(v14, v22, AssociatedTypeWitness);
LABEL_66:
      v14[v6] = 0;
      return a1;
    }
    goto LABEL_42;
  }
  if (v11 < 0xFFFFFFFF)
  {
    uint64_t v27 = (unsigned __int8 *)(((unint64_t)a1 + v8 + 8) & v9);
    unsigned int v28 = v27[v6];
    unsigned int v29 = v28 - 2;
    if (v28 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v30 = v6;
      }
      else {
        uint64_t v30 = 4;
      }
      switch(v30)
      {
        case 1:
          int v31 = *v27;
          goto LABEL_37;
        case 2:
          int v31 = *(unsigned __int16 *)v27;
          goto LABEL_37;
        case 3:
          int v31 = *(unsigned __int16 *)v27 | (v27[2] << 16);
          goto LABEL_37;
        case 4:
          int v31 = *(_DWORD *)v27;
LABEL_37:
          int v34 = (v31 | (v29 << (8 * v6))) + 2;
          unsigned int v28 = v31 + 2;
          if (v6 < 4) {
            unsigned int v28 = v34;
          }
          break;
        default:
          break;
      }
    }
    if (v28 == 1) {

    }
    else {
      (*(void (**)(void))(v5 + 8))();
    }
LABEL_42:
    memcpy(a1, a2, v10);
    return a1;
  }
  *a1 = v11;
  unint64_t v12 = (unint64_t)a1 + v8;
  unint64_t v13 = (unint64_t)a2 + v8;
  v12 += 8;
  unsigned int v14 = (unsigned __int8 *)(v12 & v9);
  v13 += 8;
  uint64_t v15 = (unsigned __int8 *)(v13 & v9);
  if ((v12 & v9) != (v13 & v9))
  {
    unsigned int v16 = v14[v6];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v18 = v6;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *v14;
          goto LABEL_46;
        case 2:
          int v19 = *(unsigned __int16 *)v14;
          goto LABEL_46;
        case 3:
          int v19 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_46;
        case 4:
          int v19 = *(_DWORD *)v14;
LABEL_46:
          int v35 = (v19 | (v17 << (8 * v6))) + 2;
          unsigned int v16 = v19 + 2;
          if (v6 < 4) {
            unsigned int v16 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(v14, AssociatedTypeWitness);
    }
    unsigned int v36 = v15[v6];
    unsigned int v37 = v36 - 2;
    if (v36 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v38 = v6;
      }
      else {
        uint64_t v38 = 4;
      }
      switch(v38)
      {
        case 1:
          int v39 = *v15;
          goto LABEL_60;
        case 2:
          int v39 = *(unsigned __int16 *)v15;
          goto LABEL_60;
        case 3:
          int v39 = *(unsigned __int16 *)v15 | (v15[2] << 16);
          goto LABEL_60;
        case 4:
          int v39 = *(_DWORD *)v15;
LABEL_60:
          int v40 = (v39 | (v37 << (8 * v6))) + 2;
          unsigned int v36 = v39 + 2;
          if (v6 < 4) {
            unsigned int v36 = v40;
          }
          break;
        default:
          break;
      }
    }
    if (v36 == 1)
    {
      uint64_t v33 = *(void **)v15;
      goto LABEL_64;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(v14, v15, AssociatedTypeWitness);
    goto LABEL_66;
  }
  return a1;
}

void *sub_259231400(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  uint64_t v8 = ~v7;
  if (*a2 < 0xFFFFFFFFuLL)
  {
    memcpy(a1, a2, v6 + ((v7 + 8) & v8) + 1);
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = (char *)a1 + v7;
    size_t v10 = (char *)a2 + v7;
    unint64_t v11 = (void *)((unint64_t)(v9 + 8) & v8);
    unint64_t v12 = (unsigned __int8 *)((unint64_t)(v10 + 8) & v8);
    unsigned int v13 = v12[v6];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v15 = v6;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *v12;
          goto LABEL_15;
        case 2:
          int v16 = *(unsigned __int16 *)v12;
          goto LABEL_15;
        case 3:
          int v16 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_15;
        case 4:
          int v16 = *(_DWORD *)v12;
LABEL_15:
          int v17 = (v16 | (v14 << (8 * v6))) + 2;
          unsigned int v13 = v16 + 2;
          if (v6 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *unint64_t v11 = *(void *)v12;
      *((unsigned char *)v11 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v5 + 32))(v11);
      *((unsigned char *)v11 + v6) = 0;
    }
  }
  return a1;
}

unint64_t *sub_2592315BC(unint64_t *a1, unint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v8 = v7 | 7;
  uint64_t v9 = ~(v7 | 7);
  size_t v10 = v6 + ((v7 + 15) & v9) + 1;
  unint64_t v11 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v11 >= 0xFFFFFFFF)
    {
      *a1 = v11;
      uint64_t v20 = (char *)a1 + v8;
      id v21 = (char *)a2 + v8;
      unsigned int v14 = (unsigned __int8 *)((unint64_t)(v20 + 8) & v9);
      uint64_t v22 = (unsigned __int8 *)((unint64_t)(v21 + 8) & v9);
      unsigned int v23 = v22[v6];
      unsigned int v24 = v23 - 2;
      if (v23 >= 2)
      {
        if (v6 <= 3) {
          uint64_t v25 = v6;
        }
        else {
          uint64_t v25 = 4;
        }
        switch(v25)
        {
          case 1:
            int v26 = *v22;
            goto LABEL_29;
          case 2:
            int v26 = *(unsigned __int16 *)v22;
            goto LABEL_29;
          case 3:
            int v26 = *(unsigned __int16 *)v22 | (v22[2] << 16);
            goto LABEL_29;
          case 4:
            int v26 = *(_DWORD *)v22;
LABEL_29:
            int v32 = (v26 | (v24 << (8 * v6))) + 2;
            unsigned int v23 = v26 + 2;
            if (v6 < 4) {
              unsigned int v23 = v32;
            }
            break;
          default:
            break;
        }
      }
      if (v23 == 1)
      {
        uint64_t v33 = *(void *)v22;
LABEL_64:
        *(void *)unsigned int v14 = v33;
        v14[v6] = 1;
        return a1;
      }
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(v14, v22, AssociatedTypeWitness);
LABEL_66:
      v14[v6] = 0;
      return a1;
    }
    goto LABEL_42;
  }
  if (v11 < 0xFFFFFFFF)
  {
    uint64_t v27 = (unsigned __int8 *)(((unint64_t)a1 + v8 + 8) & v9);
    unsigned int v28 = v27[v6];
    unsigned int v29 = v28 - 2;
    if (v28 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v30 = v6;
      }
      else {
        uint64_t v30 = 4;
      }
      switch(v30)
      {
        case 1:
          int v31 = *v27;
          goto LABEL_37;
        case 2:
          int v31 = *(unsigned __int16 *)v27;
          goto LABEL_37;
        case 3:
          int v31 = *(unsigned __int16 *)v27 | (v27[2] << 16);
          goto LABEL_37;
        case 4:
          int v31 = *(_DWORD *)v27;
LABEL_37:
          int v34 = (v31 | (v29 << (8 * v6))) + 2;
          unsigned int v28 = v31 + 2;
          if (v6 < 4) {
            unsigned int v28 = v34;
          }
          break;
        default:
          break;
      }
    }
    if (v28 == 1) {

    }
    else {
      (*(void (**)(void))(v5 + 8))();
    }
LABEL_42:
    memcpy(a1, a2, v10);
    return a1;
  }
  *a1 = v11;
  unint64_t v12 = (unint64_t)a1 + v8;
  unint64_t v13 = (unint64_t)a2 + v8;
  v12 += 8;
  unsigned int v14 = (unsigned __int8 *)(v12 & v9);
  v13 += 8;
  uint64_t v15 = (unsigned __int8 *)(v13 & v9);
  if ((v12 & v9) != (v13 & v9))
  {
    unsigned int v16 = v14[v6];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v18 = v6;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *v14;
          goto LABEL_46;
        case 2:
          int v19 = *(unsigned __int16 *)v14;
          goto LABEL_46;
        case 3:
          int v19 = *(unsigned __int16 *)v14 | (v14[2] << 16);
          goto LABEL_46;
        case 4:
          int v19 = *(_DWORD *)v14;
LABEL_46:
          int v35 = (v19 | (v17 << (8 * v6))) + 2;
          unsigned int v16 = v19 + 2;
          if (v6 < 4) {
            unsigned int v16 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 1) {

    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(v14, AssociatedTypeWitness);
    }
    unsigned int v36 = v15[v6];
    unsigned int v37 = v36 - 2;
    if (v36 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v38 = v6;
      }
      else {
        uint64_t v38 = 4;
      }
      switch(v38)
      {
        case 1:
          int v39 = *v15;
          goto LABEL_60;
        case 2:
          int v39 = *(unsigned __int16 *)v15;
          goto LABEL_60;
        case 3:
          int v39 = *(unsigned __int16 *)v15 | (v15[2] << 16);
          goto LABEL_60;
        case 4:
          int v39 = *(_DWORD *)v15;
LABEL_60:
          int v40 = (v39 | (v37 << (8 * v6))) + 2;
          unsigned int v36 = v39 + 2;
          if (v6 < 4) {
            unsigned int v36 = v40;
          }
          break;
        default:
          break;
      }
    }
    if (v36 == 1)
    {
      uint64_t v33 = *(void *)v15;
      goto LABEL_64;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(v14, v15, AssociatedTypeWitness);
    goto LABEL_66;
  }
  return a1;
}

uint64_t sub_2592319F0(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7FFFFFFF) {
    goto LABEL_22;
  }
  uint64_t v6 = v5
     + ((unsigned __int16)((*(_WORD *)(v4 + 80) & 0xF8) + 15) & (unsigned __int16)~(*(_WORD *)(v4 + 80) & 0xF8) & 0x1F8)
     + 1;
  char v7 = 8 * v6;
  if (v6 > 3) {
    goto LABEL_6;
  }
  unsigned int v10 = (a2 - 2147483646 + ~(-1 << v7)) >> v7;
  if (v10 > 0xFFFE)
  {
    int v8 = *(_DWORD *)((char *)a1 + v6);
    if (v8) {
      goto LABEL_14;
    }
LABEL_22:
    uint64_t v12 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v12) = -1;
    }
    if ((v12 + 1) >= 2) {
      return v12;
    }
    else {
      return 0;
    }
  }
  if (v10 > 0xFE)
  {
    int v8 = *(unsigned __int16 *)((char *)a1 + v6);
    if (*(unsigned __int16 *)((char *)a1 + v6)) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
  if (!v10) {
    goto LABEL_22;
  }
LABEL_6:
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_22;
  }
LABEL_14:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 0x7FFFFFFF;
}

void sub_259231BB8(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  __int16 v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v8 = (unsigned __int16)(v7 + 15) & (unsigned __int16)~v7 & 0x1F8;
  unint64_t v9 = *(void *)(v6 + 64);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  size_t v10 = v9 + v8 + 1;
  if (a3 < 0x7FFFFFFF)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = (a3 - 2147483646 + ~(-1 << (8 * v10))) >> (8 * v10);
    if (v14 > 0xFFFE)
    {
      int v11 = 4;
    }
    else if (v14 >= 0xFF)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 != 0;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (a2 > 0x7FFFFFFE)
  {
    unsigned int v12 = a2 - 0x7FFFFFFF;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v10)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x259231DF8);
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v11)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          *(void *)a1 = a2;
        break;
    }
  }
}

void sub_259231E20(unsigned char *a1, int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= 8) {
    LODWORD(v5) = 8;
  }
  if (a2 < 0)
  {
    __int16 v6 = *(_DWORD *)(v4 + 80) & 0xF8;
    int v7 = v5 + ((unsigned __int16)(v6 + 15) & (unsigned __int16)~v6 & 0x1F8);
    size_t v8 = (v7 + 1);
    int v9 = a2 & ~(-1 << (8 * (v7 + 1)));
    if (v8 <= 3) {
      unsigned int v10 = v9;
    }
    else {
      unsigned int v10 = a2 ^ 0x80000000;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v11 = v8;
      }
      else {
        int v11 = 4;
      }
      bzero(a1, v8);
      switch(v11)
      {
        case 2:
          *(_WORD *)a1 = v10;
          break;
        case 3:
          *(_WORD *)a1 = v10;
          a1[2] = BYTE2(v10);
          break;
        case 4:
          *(_DWORD *)a1 = v10;
          break;
        default:
          *a1 = v10;
          break;
      }
    }
  }
  else if (a2)
  {
    *(void *)a1 = (a2 - 1);
  }
}

uint64_t type metadata accessor for UnboundedBufferStateMachine.ElementProducedAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259231F84()
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  sub_25930A920();
  uint64_t result = sub_25930A240();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

char *sub_259232044(char *a1, char **a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  size_t v7 = v6 + 1;
  int v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || v7 > 0x18)
  {
    unsigned int v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    unsigned int v11 = *((unsigned __int8 *)a2 + v6);
    if ((v11 + 1) > 2u || v11 > 1)
    {
      memcpy(a1, a2, v7);
    }
    else if (v11 == 1)
    {
      unsigned int v12 = *a2;
      int v13 = v12;
      *(void *)a1 = v12;
      a1[v6] = 1;
    }
    else
    {
      (*(void (**)(char *, char **, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      a1[v6] = 0;
    }
  }
  return a1;
}

void sub_259232190(void **a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v3 <= 8) {
    unint64_t v3 = 8;
  }
  unsigned int v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 <= 1)
  {
    if (v4 == 1)
    {
      uint64_t v5 = *a1;
    }
    else
    {
      uint64_t v6 = *(void (**)(void **, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
      v6(a1, AssociatedTypeWitness);
    }
  }
}

void *sub_259232280(void *a1, void **a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)a2 + v5);
  if ((v6 + 1) > 2u || v6 > 1)
  {
    memcpy(a1, a2, v5 + 1);
  }
  else if (v6 == 1)
  {
    size_t v7 = *a2;
    id v8 = v7;
    *a1 = v7;
    *((unsigned char *)a1 + v5) = 1;
  }
  else
  {
    (*(void (**)(void *, void **, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
    *((unsigned char *)a1 + v5) = 0;
  }
  return a1;
}

id *sub_259232390(id *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v7 = *((unsigned __int8 *)a1 + v6);
  unsigned int v8 = a2[v6];
  if ((v7 + 1) > 2u)
  {
    if ((v8 + 1) > 2u || v8 > 1) {
      goto LABEL_23;
    }
    if (v8 != 1) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
  if ((v8 + 1) > 2u)
  {
    if (v7 > 1)
    {
LABEL_23:
      memcpy(a1, a2, v6 + 1);
      return a1;
    }
    if (v7 != 1)
    {
LABEL_22:
      (*(void (**)(id *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      goto LABEL_23;
    }
LABEL_17:

    goto LABEL_23;
  }
  if (v7 > 1)
  {
    if (v8 > 1) {
      goto LABEL_23;
    }
    if (v8 != 1)
    {
LABEL_20:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v6) = 0;
      return a1;
    }
LABEL_14:
    int v9 = *(void **)a2;
    id v10 = v9;
    *a1 = v9;
    *((unsigned char *)a1 + v6) = 1;
    return a1;
  }
  if (v8 > 1)
  {
    if (v7 != 1) {
      goto LABEL_22;
    }
    goto LABEL_17;
  }
  if (a1 != (id *)a2)
  {
    if (v7 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    unsigned int v12 = a2[v6];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v14 = v6;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a2;
          goto LABEL_35;
        case 2:
          int v15 = *(unsigned __int16 *)a2;
          goto LABEL_35;
        case 3:
          int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_35;
        case 4:
          int v15 = *(_DWORD *)a2;
LABEL_35:
          if (v6 < 4) {
            unsigned int v12 = (v15 | (v13 << (8 * v6))) + 2;
          }
          else {
            unsigned int v12 = v15 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v12 != 1) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
  return a1;
}

void *sub_2592325F4(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)a2 + v5);
  if ((v6 + 1) > 2u || v6 > 1)
  {
    memcpy(a1, a2, v5 + 1);
  }
  else if (v6 == 1)
  {
    *a1 = *a2;
    *((unsigned char *)a1 + v5) = 1;
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
    *((unsigned char *)a1 + v5) = 0;
  }
  return a1;
}

id *sub_2592326FC(id *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v7 = *((unsigned __int8 *)a1 + v6);
  unsigned int v8 = a2[v6];
  if ((v7 + 1) > 2u)
  {
    if ((v8 + 1) > 2u || v8 > 1) {
      goto LABEL_23;
    }
    if (v8 != 1) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
  if ((v8 + 1) > 2u)
  {
    if (v7 > 1)
    {
LABEL_23:
      memcpy(a1, a2, v6 + 1);
      return a1;
    }
    if (v7 != 1)
    {
LABEL_22:
      (*(void (**)(id *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      goto LABEL_23;
    }
LABEL_17:

    goto LABEL_23;
  }
  if (v7 > 1)
  {
    if (v8 > 1) {
      goto LABEL_23;
    }
    if (v8 != 1)
    {
LABEL_20:
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v6) = 0;
      return a1;
    }
LABEL_14:
    *a1 = *(id *)a2;
    *((unsigned char *)a1 + v6) = 1;
    return a1;
  }
  if (v8 > 1)
  {
    if (v7 != 1) {
      goto LABEL_22;
    }
    goto LABEL_17;
  }
  if (a1 != (id *)a2)
  {
    if (v7 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    unsigned int v10 = a2[v6];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v12 = v6;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a2;
          goto LABEL_35;
        case 2:
          int v13 = *(unsigned __int16 *)a2;
          goto LABEL_35;
        case 3:
          int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_35;
        case 4:
          int v13 = *(_DWORD *)a2;
LABEL_35:
          if (v6 < 4) {
            unsigned int v10 = (v13 | (v11 << (8 * v6))) + 2;
          }
          else {
            unsigned int v10 = v13 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v10 != 1) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
  return a1;
}

uint64_t sub_259232958(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  uint64_t v5 = 8;
  if (v4 > 8) {
    uint64_t v5 = v4;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_22;
  }
  uint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) > 3) {
    goto LABEL_6;
  }
  unsigned int v10 = ((a2 + ~(-1 << v7) - 252) >> v7) + 1;
  if (HIWORD(v10))
  {
    int v8 = *(_DWORD *)((char *)a1 + v6);
    if (v8) {
      goto LABEL_14;
    }
LABEL_22:
    unsigned int v12 = *((unsigned __int8 *)a1 + v5);
    if (v12 >= 2) {
      unsigned int v13 = (v12 ^ 0xFF) + 1;
    }
    else {
      unsigned int v13 = 0;
    }
    if (v13 >= 2) {
      unsigned int v14 = v13 - 1;
    }
    else {
      unsigned int v14 = 0;
    }
    if (v14 >= 2) {
      return v14 - 1;
    }
    else {
      return 0;
    }
  }
  if (v10 > 0xFF)
  {
    int v8 = *(unsigned __int16 *)((char *)a1 + v6);
    if (*(unsigned __int16 *)((char *)a1 + v6)) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
  if (v10 < 2) {
    goto LABEL_22;
  }
LABEL_6:
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_22;
  }
LABEL_14:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 253;
}

void sub_259232ADC(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  size_t v7 = v6 + 1;
  if (a3 < 0xFD)
  {
    int v8 = 0;
  }
  else if (v7 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << (8 * v7)) - 252) >> (8 * v7)) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFC)
  {
    unsigned int v9 = a2 - 253;
    if (v7 < 4)
    {
      int v10 = (v9 >> (8 * v7)) + 1;
      if (v6 != -1)
      {
        int v12 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if (v7 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v7 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v7] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v7] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x259232CC8);
      case 4:
        *(_DWORD *)&a1[v7] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v7] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v6] = -2 - a2;
        break;
    }
  }
}

uint64_t sub_259232CF0(uint64_t a1)
{
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + v2);
  if (v3 >= 2) {
    unsigned int v4 = (v3 ^ 0xFF) + 1;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 2) {
    return v4 - 1;
  }
  else {
    return 0;
  }
}

void sub_259232D6C(unsigned char *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= 8) {
    unint64_t v4 = 8;
  }
  if (a2 > 0xFD)
  {
    size_t v5 = (v4 + 1);
    int v6 = -1 << (8 * (v4 + 1));
    if (v5 <= 3) {
      int v7 = ~v6;
    }
    else {
      int v7 = -1;
    }
    if (v5)
    {
      int v8 = v7 & (a2 - 254);
      if (v5 <= 3) {
        int v9 = v5;
      }
      else {
        int v9 = 4;
      }
      bzero(a1, v5);
      switch(v9)
      {
        case 2:
          *(_WORD *)a1 = v8;
          break;
        case 3:
          *(_WORD *)a1 = v8;
          a1[2] = BYTE2(v8);
          break;
        case 4:
          *(_DWORD *)a1 = v8;
          break;
        default:
          *a1 = v8;
          break;
      }
    }
  }
  else if (a2)
  {
    a1[v4] = ~(_BYTE)a2;
  }
}

uint64_t type metadata accessor for UnboundedBufferStateMachine.NextSuspendedAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259232E94()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
    sub_25930A920();
    uint64_t v0 = sub_25930A240();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

void *sub_259232FB4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v9 + 64) <= 8uLL) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v10 + 1 > v7) {
    unint64_t v7 = v10 + 1;
  }
  int v11 = *(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80);
  if ((v11 & 0x1000F8) != 0 || v7 + 1 > 0x18)
  {
    uint64_t v13 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v13 + (((v11 & 0xF8 | 7u) + 16) & ~(unint64_t)(v11 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    unsigned int v14 = a2[v7];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v16 = v7;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          goto LABEL_21;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v17 = *(_DWORD *)a2;
LABEL_21:
          int v18 = (v17 | (v15 << (8 * v7))) + 2;
          unsigned int v14 = v17 + 2;
          if (v7 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      unsigned int v19 = a2[v10];
      if (v19 > 1)
      {
        memcpy(a1, a2, v10 + 1);
      }
      else if (v19 == 1)
      {
        uint64_t v20 = *(void **)a2;
        id v21 = v20;
        *a1 = v20;
        *((unsigned char *)a1 + v10) = 1;
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, AssociatedTypeWitness);
        *((unsigned char *)a1 + v10) = 0;
      }
      *((unsigned char *)a1 + v7) = 1;
    }
    else if (v14)
    {
      memcpy(a1, a2, v7 + 1);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((unsigned char *)a1 + v7) = 0;
    }
  }
  return a1;
}

void sub_25923322C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v17 = *(void *)(v3 - 8);
  unint64_t v4 = *(void *)(v17 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  if (v6 + 1 > v4) {
    unint64_t v7 = v6 + 1;
  }
  else {
    unint64_t v7 = v4;
  }
  unsigned int v8 = a1[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_15;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_15:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    unsigned int v14 = a1[v6];
    if (v14 <= 1)
    {
      if (v14 == 1)
      {
        unsigned int v15 = *(void **)a1;
      }
      else
      {
        uint64_t v16 = *(void (**)(unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
        v16(a1, AssociatedTypeWitness);
      }
    }
  }
  else if (!v8)
  {
    uint64_t v13 = *(void (**)(unsigned __int8 *, uint64_t))(v17 + 8);
    v13(a1, v3);
  }
}

void *sub_259233460(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 8uLL) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v9 + 1 > v7) {
    unint64_t v7 = v9 + 1;
  }
  unsigned int v10 = a2[v7];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_15;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_15:
        int v14 = (v13 | (v11 << (8 * v7))) + 2;
        unsigned int v10 = v13 + 2;
        if (v7 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  if (v10 == 1)
  {
    unsigned int v15 = a2[v9];
    if (v15 > 1)
    {
      memcpy(a1, a2, v9 + 1);
    }
    else if (v15 == 1)
    {
      uint64_t v16 = *(void **)a2;
      id v17 = v16;
      *a1 = v16;
      *((unsigned char *)a1 + v9) = 1;
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v9) = 0;
    }
    *((unsigned char *)a1 + v7) = 1;
  }
  else if (v10)
  {
    memcpy(a1, a2, v7 + 1);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    *((unsigned char *)a1 + v7) = 0;
  }
  return a1;
}

unsigned __int8 *sub_259233690(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
    if (*(void *)(v9 + 64) <= 8uLL) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    }
    if (v10 + 1 > v7) {
      unint64_t v7 = v10 + 1;
    }
    unsigned int v11 = a1[v7];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v13 = v7;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_16;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_16:
          int v15 = (v14 | (v12 << (8 * v7))) + 2;
          unsigned int v11 = v14 + 2;
          if (v7 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      unsigned int v16 = a1[v10];
      if (v16 <= 1)
      {
        if (v16 == 1) {

        }
        else {
          (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(a1, AssociatedTypeWitness);
        }
      }
    }
    else if (!v11)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v17 = a2[v7];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v19 = v7;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_34;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_34;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_34;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_34:
          int v21 = (v20 | (v18 << (8 * v7))) + 2;
          unsigned int v17 = v20 + 2;
          if (v7 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 1)
    {
      unsigned int v22 = a2[v10];
      if (v22 > 1)
      {
        memcpy(a1, a2, v10 + 1);
      }
      else if (v22 == 1)
      {
        unsigned int v23 = *(void **)a2;
        id v24 = v23;
        *(void *)a1 = v23;
        a1[v10] = 1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, AssociatedTypeWitness);
        a1[v10] = 0;
      }
      a1[v7] = 1;
    }
    else if (v17)
    {
      memcpy(a1, a2, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

void *sub_2592339C0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 8uLL) {
    uint64_t v9 = 8;
  }
  else {
    uint64_t v9 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v9 + 1 > v7) {
    unint64_t v7 = v9 + 1;
  }
  unsigned int v10 = a2[v7];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_15;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_15:
        int v14 = (v13 | (v11 << (8 * v7))) + 2;
        unsigned int v10 = v13 + 2;
        if (v7 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  if (v10 == 1)
  {
    unsigned int v15 = a2[v9];
    if (v15 > 1)
    {
      memcpy(a1, a2, v9 + 1);
    }
    else if (v15 == 1)
    {
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v9) = 1;
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v9) = 0;
    }
    *((unsigned char *)a1 + v7) = 1;
  }
  else if (v10)
  {
    memcpy(a1, a2, v7 + 1);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
    *((unsigned char *)a1 + v7) = 0;
  }
  return a1;
}

unsigned __int8 *sub_259233BE8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
    if (*(void *)(v9 + 64) <= 8uLL) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    }
    if (v10 + 1 > v7) {
      unint64_t v7 = v10 + 1;
    }
    unsigned int v11 = a1[v7];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v13 = v7;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_16;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_16:
          int v15 = (v14 | (v12 << (8 * v7))) + 2;
          unsigned int v11 = v14 + 2;
          if (v7 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      unsigned int v16 = a1[v10];
      if (v16 <= 1)
      {
        if (v16 == 1) {

        }
        else {
          (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(a1, AssociatedTypeWitness);
        }
      }
    }
    else if (!v11)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v17 = a2[v7];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v19 = v7;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_34;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_34;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_34;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_34:
          int v21 = (v20 | (v18 << (8 * v7))) + 2;
          unsigned int v17 = v20 + 2;
          if (v7 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    if (v17 == 1)
    {
      unsigned int v22 = a2[v10];
      if (v22 > 1)
      {
        memcpy(a1, a2, v10 + 1);
      }
      else if (v22 == 1)
      {
        *(void *)a1 = *(void *)a2;
        a1[v10] = 1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(a1, a2, AssociatedTypeWitness);
        a1[v10] = 0;
      }
      a1[v7] = 1;
    }
    else if (v17)
    {
      memcpy(a1, a2, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

uint64_t sub_259233F10(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  if (v6 + 1 > v5) {
    unint64_t v7 = v6 + 1;
  }
  else {
    unint64_t v7 = v5;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_25;
  }
  unint64_t v8 = v7 + 1;
  char v9 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    unsigned int v12 = ((a2 + ~(-1 << v9) - 253) >> v9) + 1;
    if (HIWORD(v12))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v12 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v12 < 2)
    {
LABEL_25:
      unsigned int v14 = *((unsigned __int8 *)a1 + v7);
      if (v14 >= 3) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_25;
  }
LABEL_17:
  int v13 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v13 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v8 | v13) + 254;
}

void sub_2592340AC(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v8 <= 8) {
    unint64_t v8 = 8;
  }
  if (v8 + 1 > v7) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = v7;
  }
  size_t v10 = v9 + 1;
  if (a3 < 0xFE)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 + ~(-1 << (8 * v10)) - 253) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v12 = a2 - 254;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        break;
      case 3:
LABEL_37:
        __break(1u);
        JUMPOUT(0x2592342B8);
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v11)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        goto LABEL_25;
      case 3:
        goto LABEL_37;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      default:
LABEL_25:
        if (a2) {
LABEL_26:
        }
          a1[v9] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_2592342E0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= 8) {
    unint64_t v4 = 8;
  }
  if (v4 + 1 > v3) {
    unint64_t v5 = v4 + 1;
  }
  else {
    unint64_t v5 = v3;
  }
  uint64_t result = a1[v5];
  if (result >= 2)
  {
    if (v5 <= 3) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_15;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_15;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_15;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_15:
        unsigned int v9 = (v8 | ((result - 2) << (8 * v5))) + 2;
        unsigned int v10 = v8 + 2;
        if (v5 >= 4) {
          uint64_t result = v10;
        }
        else {
          uint64_t result = v9;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_2592343EC(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (a2 > 1)
  {
    unint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    unint64_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
    if (v9 <= 8) {
      unint64_t v9 = 8;
    }
    if (v9 + 1 > v8) {
      size_t v10 = v9 + 1;
    }
    else {
      size_t v10 = v8;
    }
    if (v10 <= 3) {
      char v11 = ((a2 - 2) >> (8 * v10)) + 2;
    }
    else {
      char v11 = 2;
    }
    if (v10 <= 3) {
      int v12 = (a2 - 2) & ~(-1 << (8 * v10));
    }
    else {
      int v12 = a2 - 2;
    }
    a1[v10] = v11;
    if (v10 >= 4) {
      int v13 = 4;
    }
    else {
      int v13 = v10;
    }
    bzero(a1, v10);
    switch(v13)
    {
      case 2:
        *(_WORD *)a1 = v12;
        break;
      case 3:
        *(_WORD *)a1 = v12;
        a1[2] = BYTE2(v12);
        break;
      case 4:
        *(_DWORD *)a1 = v12;
        break;
      default:
        *a1 = v12;
        break;
    }
  }
  else
  {
    unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
    if (v6 <= 8) {
      unint64_t v6 = 8;
    }
    if (v6 + 1 > *(void *)(v5 + 64)) {
      unint64_t v7 = v6 + 1;
    }
    else {
      unint64_t v7 = *(void *)(v5 + 64);
    }
    a1[v7] = a2;
  }
}

void *sub_259234590(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *sub_2592345C0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *sub_25923461C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t sub_25923465C(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_2592346AC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

void *sub_259234700(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *__n128 result = v2;
  return result;
}

uint64_t type metadata accessor for UnboundedBufferStateMachine.InterruptedAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259234738(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_259234780(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2592347C4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_2592347DC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

uint64_t type metadata accessor for UnboundedBufferStateMachine.Policy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259234810(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_259234858, 0, 0);
}

uint64_t sub_259234858()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  sub_25930A920();
  sub_25930A240();
  *unint64_t v1 = v0;
  v1[1] = sub_259229C48;
  uint64_t v2 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2338](v2, &unk_26A37D300);
}

uint64_t sub_25923497C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void, uint64_t))(*(void *)(a3 - 8) + 32))(*(void *)(*(void *)(a2 + 64) + 40), a1);
  return swift_continuation_resume();
}

uint64_t sub_2592349F4(uint64_t a1, uint64_t *a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = *a2;
  v2[4] = *(void *)(*a2 + 80);
  v2[5] = *(void *)(v3 + 88);
  v2[6] = type metadata accessor for UnboundedBufferStateMachine.NextAction();
  uint64_t v4 = sub_25930A240();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259234B0C, 0, 0);
}

uint64_t sub_259234B0C()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[3];
  uint64_t v7 = *(void *)(v6 + 16);
  type metadata accessor for UnboundedBufferStateMachine();
  sub_2592438E8((void (*)(uint64_t))sub_2592369E0, v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v1, 1, v5) == 1) {
    goto LABEL_7;
  }
  uint64_t v8 = v0[9];
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    return sub_25930A580();
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_7:
    unsigned int v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_26A37CE50
                                                                                       + dword_26A37CE50);
    unsigned int v14 = (void *)swift_task_alloc();
    v0[11] = v14;
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
    sub_25930A920();
    uint64_t v15 = sub_25930A240();
    *unsigned int v14 = v0;
    v14[1] = sub_259234E60;
    uint64_t v16 = v0[2];
    uint64_t v17 = v0[3];
    return v18(v16, 0, 0, (uint64_t)sub_2592369FC, v17, v15);
  }
  else
  {
    uint64_t v10 = v0[2];
    (*(void (**)(void, void))(v0[8] + 8))(v0[10], v0[7]);
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
    sub_25930A920();
    uint64_t v11 = sub_25930A240();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, v8, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    int v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_259234E60()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_259234F5C, 0, 0);
}

uint64_t sub_259234F5C()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[10], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_259234FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v4 = *(void *)(*(void *)a2 + 80);
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v19 - v5;
  uint64_t Action = type metadata accessor for UnboundedBufferStateMachine.NextAction();
  uint64_t v8 = *(void *)(Action - 8);
  uint64_t v9 = MEMORY[0x270FA5388](Action);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int v13 = (char *)&v19 - v12;
  uint64_t v14 = type metadata accessor for UnboundedBufferStateMachine();
  sub_25922F5C0(v14, (uint64_t)v13);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, Action);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v16 = v20;
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v20, v13, Action);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v16, 0, 1, Action);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, Action);
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v20, v13, Action);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v16, 0, 1, Action);
    }
  }
  else
  {
    uint64_t v18 = v19;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v6, v11, v4);
    sub_2592352D8(a1, (uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, Action);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v20, 1, 1, Action);
  }
}

uint64_t sub_2592352D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37CE58);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_259309F20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v5);
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = 0;
  *((void *)v15 + 3) = 0;
  *((void *)v15 + 4) = v5;
  *((void *)v15 + 5) = *(void *)(v4 + 88);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v15[v14], v9, v5);
  *(void *)&v15[(v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8] = v2;
  swift_retain();
  uint64_t v16 = sub_2592EBE08((uint64_t)v12, (uint64_t)&unk_26A37D310, (uint64_t)v15);
  uint64_t v17 = type metadata accessor for UnboundedBufferStateMachine();
  sub_25922E8B4(v16, v17);
  return swift_release();
}

uint64_t sub_259235510(uint64_t a1, void *a2)
{
  uint64_t v23 = a1;
  uint64_t v3 = *(void *)(*a2 + 88);
  uint64_t v4 = *(void *)(*a2 + 80);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  sub_25930A920();
  uint64_t v5 = sub_25930A240();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  unsigned int v22 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - v9;
  Suspendeduint64_t Action = type metadata accessor for UnboundedBufferStateMachine.NextSuspendedAction();
  uint64_t v12 = *(void *)(SuspendedAction - 8);
  uint64_t v13 = MEMORY[0x270FA5388](SuspendedAction);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v22 - v16;
  uint64_t v18 = a2[2];
  uint64_t v25 = v4;
  uint64_t v26 = v3;
  uint64_t v27 = v23;
  type metadata accessor for UnboundedBufferStateMachine();
  sub_2592438E8((void (*)(uint64_t))sub_259236A04, (uint64_t)v24, v18);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, SuspendedAction);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5) != 1)
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v19(v10, v15, v5);
    uint64_t v20 = v22;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v22, v10, v5);
    v19(*(char **)(*(void *)(v23 + 64) + 40), v20, v5);
    swift_continuation_resume();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, SuspendedAction);
}

void sub_259235854()
{
  uint64_t v1 = *(void *)(*v0 + 88);
  uint64_t v2 = *(void *)(*v0 + 80);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v3 = sub_25930A920();
  uint64_t v4 = sub_25930A240();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v10[-v6];
  uint64_t v8 = v0[2];
  uint64_t v11 = v2;
  uint64_t v12 = v1;
  type metadata accessor for UnboundedBufferStateMachine();
  type metadata accessor for UnboundedBufferStateMachine.InterruptedAction();
  sub_2592438E8((void (*)(uint64_t))sub_2592368F4, (uint64_t)v10, v8);
  if (v13)
  {
    uint64_t v9 = v14;
    swift_retain();
    sub_259309F30();
    if (v9)
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v7, 1, 1, v3);
      (*(void (**)(void, unsigned char *, uint64_t))(v5 + 32))(*(void *)(*(void *)(v9 + 64) + 40), v7, v4);
      swift_continuation_resume();
    }
    swift_release_n();
  }
}

uint64_t sub_259235A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  v5[4] = a4;
  v5[5] = a5;
  uint64_t v6 = *a5;
  void v5[6] = *(void *)(*a5 + 88);
  uint64_t v7 = *(void *)(v6 + 80);
  v5[7] = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[8] = AssociatedTypeWitness;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v9 = sub_25930A920();
  v5[9] = v9;
  uint64_t v10 = sub_25930A240();
  v5[10] = v10;
  v5[11] = *(void *)(v10 - 8);
  v5[12] = swift_task_alloc();
  v5[13] = *(void *)(v9 - 8);
  v5[14] = swift_task_alloc();
  v5[15] = *(void *)(AssociatedTypeWitness - 8);
  v5[16] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for UnboundedBufferStateMachine.ElementProducedAction();
  v5[17] = v11;
  v5[18] = *(void *)(v11 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  v5[21] = v12;
  v5[22] = *(void *)(v12 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  sub_25930A240();
  v5[25] = swift_task_alloc();
  v5[26] = *(void *)(v7 - 8);
  v5[27] = swift_task_alloc();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  v5[28] = v13;
  v5[29] = *(void *)(v13 - 8);
  v5[30] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259235E54, 0, 0);
}

uint64_t sub_259235E54()
{
  (*(void (**)(void, void, void))(v0[26] + 16))(v0[27], v0[4], v0[7]);
  sub_259309F80();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v0[31] = AssociatedConformanceWitness;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[32] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_259235F68;
  uint64_t v3 = v0[28];
  uint64_t v5 = v0[24];
  uint64_t v4 = v0[25];
  return MEMORY[0x270FA1E88](v4, 0, 0, v5, v3, AssociatedConformanceWitness);
}

uint64_t sub_259235F68()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2592365C0;
  }
  else {
    uint64_t v2 = sub_25923607C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25923607C()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v5 = v0[6];
    uint64_t v4 = v0[7];
    uint64_t v6 = v0[5];
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
    uint64_t v7 = *(void *)(v6 + 16);
    uint64_t v8 = swift_task_alloc();
    *(void *)(v8 + 16) = v4;
    *(void *)(v8 + 24) = v5;
    type metadata accessor for UnboundedBufferStateMachine();
    type metadata accessor for UnboundedBufferStateMachine.FinishAction();
    sub_2592438E8((void (*)(uint64_t))sub_259236CB4, v8, v7);
    swift_task_dealloc();
    unint64_t v9 = v0[3];
    if (v9 >= 2)
    {
      uint64_t v10 = v0[12];
      uint64_t v12 = v0[10];
      uint64_t v11 = v0[11];
      (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[13] + 56))(v10, 1, 1, v0[9]);
      (*(void (**)(void, uint64_t, uint64_t))(v11 + 32))(*(void *)(*(void *)(v9 + 64) + 40), v10, v12);
      swift_continuation_resume();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  else
  {
    uint64_t v36 = v0[20];
    uint64_t v15 = v0[18];
    uint64_t v17 = v0[16];
    uint64_t v16 = v0[17];
    uint64_t v37 = v0[19];
    uint64_t v19 = v0[6];
    uint64_t v18 = v0[7];
    uint64_t v20 = *(void *)(v0[5] + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v17, v1, v3);
    int v21 = (void *)swift_task_alloc();
    v21[2] = v18;
    v21[3] = v19;
    v21[4] = v17;
    type metadata accessor for UnboundedBufferStateMachine();
    sub_2592438E8((void (*)(uint64_t))sub_259236D08, (uint64_t)v21, v20);
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v17, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v37, v36, v16);
    sub_259309F50();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v37, 1, TupleTypeMetadata2) != 1)
    {
      uint64_t v23 = (char *)v0[19];
      uint64_t v25 = v0[13];
      uint64_t v24 = v0[14];
      uint64_t v27 = v0[11];
      uint64_t v26 = v0[12];
      uint64_t v29 = v0[9];
      uint64_t v28 = v0[10];
      uint64_t v30 = *(void *)v23;
      (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v24, &v23[*(int *)(TupleTypeMetadata2 + 48)], v29);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v24, v29);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v29);
      (*(void (**)(void, uint64_t, uint64_t))(v27 + 32))(*(void *)(*(void *)(v30 + 64) + 40), v26, v28);
      swift_continuation_resume();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v29);
    }
    (*(void (**)(void, void))(v0[18] + 8))(v0[20], v0[17]);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v0[31] = AssociatedConformanceWitness;
    int v32 = (void *)swift_task_alloc();
    v0[32] = v32;
    void *v32 = v0;
    v32[1] = sub_259235F68;
    uint64_t v33 = v0[28];
    uint64_t v35 = v0[24];
    uint64_t v34 = v0[25];
    return MEMORY[0x270FA1E88](v34, 0, 0, v35, v33, AssociatedConformanceWitness);
  }
}

uint64_t sub_2592365C0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[22] + 32);
  v1(v0[23], v0[24], v0[21]);
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_25930A770();
  uint64_t v3 = v0[23];
  if (v2)
  {
    uint64_t v4 = (void *)v2;
    (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  }
  else
  {
    uint64_t v5 = v0[21];
    uint64_t v4 = (void *)swift_allocError();
    v1(v6, v3, v5);
  }
  uint64_t v8 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v9 = v0[5];
  (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = (void *)swift_task_alloc();
  v11[2] = v7;
  v11[3] = v8;
  v11[4] = v4;
  type metadata accessor for UnboundedBufferStateMachine();
  type metadata accessor for UnboundedBufferStateMachine.FinishAction();
  sub_2592438E8((void (*)(uint64_t))sub_259236C5C, (uint64_t)v11, v10);
  swift_task_dealloc();
  unint64_t v12 = v0[2];
  if (v12 > 1)
  {
    uint64_t v13 = (void *)v0[12];
    uint64_t v14 = v0[13];
    uint64_t v16 = v0[10];
    uint64_t v15 = v0[11];
    uint64_t v17 = v0[9];
    *uint64_t v13 = v4;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v13, 0, 1, v17);
    (*(void (**)(void, void *, uint64_t))(v15 + 32))(*(void *)(*(void *)(v12 + 64) + 40), v13, v16);
    swift_continuation_resume();
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_2592368A0()
{
  sub_259235854();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnboundedBufferStorage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2592368F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UnboundedBufferStateMachine();
  uint64_t result = sub_259230550(v2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_259236940(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25921D238;
  return sub_2592349F4(a1, v1);
}

uint64_t sub_2592369E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_259234FE0(a1, v2, a2);
}

uint64_t sub_2592369FC(uint64_t a1)
{
  return sub_259235510(a1, v1);
}

uint64_t sub_259236A04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = type metadata accessor for UnboundedBufferStateMachine();
  return sub_25922FD58(v3, v4, a1);
}

uint64_t sub_259236A5C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_259236B3C(uint64_t a1)
{
  uint64_t v4 = v1[3];
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = (uint64_t)v1 + v5;
  uint64_t v8 = *(uint64_t **)((char *)v1 + ((*(void *)(*(void *)(v1[4] - 8) + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_25921D238;
  return sub_259235A90(a1, v6, v4, v7, v8);
}

uint64_t sub_259236C5C@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v3 = *(void **)(v1 + 32);
  type metadata accessor for UnboundedBufferStateMachine();
  uint64_t result = sub_25922F224(v3);
  *a1 = result;
  return result;
}

uint64_t sub_259236CB4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for UnboundedBufferStateMachine();
  uint64_t result = sub_25922F224(0);
  *a1 = result;
  return result;
}

uint64_t sub_259236D08@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = type metadata accessor for UnboundedBufferStateMachine();
  return sub_25922EB00(v3, v4, a1);
}

void *sub_259236D60(uint64_t a1, uint64_t a2, int a3)
{
  int v17 = a3;
  uint64_t v6 = *(void *)(*v3 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = &v16[-v8];
  uint64_t v10 = type metadata accessor for UnboundedBufferStateMachine();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v16[-v12];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_25922E800((uint64_t)v9, a2, v17, v6, (uint64_t)v13);
  uint64_t v14 = sub_259243A20();
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  v3[2] = v14;
  return v3;
}

void *sub_259236F28(uint64_t a1, uint64_t a2, int a3)
{
  return sub_259236D60(a1, a2, a3);
}

uint64_t AsyncChannel.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_259240E5C();
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t AsyncChannel.init()()
{
  *(void *)(v0 + 16) = sub_259240E5C();
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t AsyncChannel.send(_:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_259237068, 0, 0);
}

uint64_t sub_259237068()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  unint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  uint64_t v6 = *(void *)(v2 + 80);
  *unint64_t v5 = v0;
  v5[1] = sub_259229C48;
  uint64_t v7 = v0[2];
  uint64_t v8 = MEMORY[0x263F8E628];
  uint64_t v9 = MEMORY[0x263F8E658];
  return sub_259240F10(v7, v4, v3, v6, v8, v9);
}

Swift::Void __swiftcall AsyncChannel.finish()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  char v4 = 1;
  sub_259241460((uint64_t)&v4, v2, v3, *(void *)(v1 + 80), MEMORY[0x263F8E628], MEMORY[0x263F8E658]);
}

uint64_t AsyncChannel.makeAsyncIterator()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

uint64_t AsyncChannel.Iterator.next()(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_2592371DC, 0, 0);
}

uint64_t sub_2592371DC()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = (uint64_t *)v0[4];
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  unint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  uint64_t v6 = *(void *)(v2 + 16);
  *unint64_t v5 = v0;
  v5[1] = sub_25923729C;
  uint64_t v7 = v0[2];
  uint64_t v8 = MEMORY[0x263F8E628];
  uint64_t v9 = MEMORY[0x263F8E658];
  return sub_2592418D8(v7, v4, v3, v6, v8, v9);
}

uint64_t sub_25923729C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_2592373D0, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2592373D0()
{
  return swift_unexpectedError();
}

uint64_t sub_2592373EC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[3] = a2;
  v6[4] = v2;
  v6[1] = sub_2592374A4;
  v6[2] = a1;
  return MEMORY[0x270FA2498](sub_2592371DC, 0, 0);
}

uint64_t sub_2592374A4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25923759C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_259237668;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v12);
}

uint64_t sub_259237668()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t AsyncChannel.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t AsyncChannel.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2592377DC()
{
  return MEMORY[0x263F8E658];
}

uint64_t sub_2592377E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_259237804@<X0>(void *a1@<X8>)
{
  AsyncChannel.makeAsyncIterator()(a1);
  return swift_release();
}

uint64_t sub_25923783C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AsyncChannel()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AsyncChannel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AsyncChannel);
}

uint64_t dispatch thunk of AsyncChannel.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_2592378C8()
{
  swift_release();
  return swift_release();
}

void *sub_259237904(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_25923793C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_25923799C(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncFacesRequest(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncFacesRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncChannel.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Sequence.async.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t AsyncSyncSequence.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t AsyncSyncSequence.Iterator.iterator.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_25930A240();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t AsyncSyncSequence.Iterator.iterator.setter(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_25930A240();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*AsyncSyncSequence.Iterator.iterator.modify())()
{
  return nullsub_1;
}

uint64_t AsyncSyncSequence.Iterator.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v8(a2, 1, 1, AssociatedTypeWitness);
  uint64_t v6 = sub_25930A240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a2, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a2, a1, AssociatedTypeWitness);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v8)(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t AsyncSyncSequence.Iterator.next()(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = v2;
  v3[4] = *(void *)(a2 + 24);
  v3[5] = *(void *)(a2 + 16);
  v3[6] = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_25930A240();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259237EE8, 0, 0);
}

uint64_t sub_259237EE8()
{
  if (sub_259309F40()) {
    goto LABEL_6;
  }
  uint64_t v1 = v0[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v1, 1, AssociatedTypeWitness);
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  if (v3)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v5 - 8) + 56))(v0[9], 1, 1, v0[6]);
LABEL_5:
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
LABEL_6:
    uint64_t v7 = v0[6];
    uint64_t v8 = v0[3];
    uint64_t v9 = v0[2];
    uint64_t v10 = swift_getAssociatedTypeWitness();
    uint64_t v11 = sub_25930A240();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v8, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v9, 1, 1, v7);
    goto LABEL_7;
  }
  swift_getAssociatedConformanceWitness();
  sub_25930A290();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    goto LABEL_5;
  }
  uint64_t v14 = v0[6];
  uint64_t v15 = v0[2];
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v15, v0[9], v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v15, 0, 1, v14);
LABEL_7:
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_2592381C4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2592374A4;
  return AsyncSyncSequence.Iterator.next()(a1, a2);
}

uint64_t AsyncSyncSequence.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t AsyncSyncSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness - 8);
  uint64_t v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  sub_259309CB0();
  return AsyncSyncSequence.Iterator.init(_:)((uint64_t)v10, a2);
}

uint64_t sub_2592383EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_259238408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  AsyncSyncSequence.makeAsyncIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t sub_259238468()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2592384F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    uint64_t *v3 = *a2;
    int v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_2592385B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_259238600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_259238650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_2592386A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_2592386F0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_25923884C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x259238A64);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for AsyncSyncSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259238AA4()
{
  swift_getAssociatedTypeWitness();
  uint64_t result = sub_25930A240();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_259238B50(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v6 = *(void *)(v5 + 64);
  }
  else {
    size_t v6 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v6 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  else
  {
    uint64_t v11 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v6);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_259238CA8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, AssociatedTypeWitness);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, AssociatedTypeWitness);
  }
  return result;
}

void *sub_259238D7C(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v6 = *(void *)(v5 + 64);
    }
    else {
      size_t v6 = *(void *)(v5 + 64) + 1;
    }
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_259238E7C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    unsigned int v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

void *sub_259238FF4(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v6 = *(void *)(v5 + 64);
    }
    else {
      size_t v6 = *(void *)(v5 + 64) + 1;
    }
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_2592390F4(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  size_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    unsigned int v12 = *(void (**)(void *, uint64_t))(v5 + 8);
    uint64_t v11 = v5 + 8;
    v12(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

uint64_t sub_25923926C(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  unsigned int v7 = v6 - 1;
  if (!v6) {
    unsigned int v7 = 0;
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!v6) {
    ++v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 > v7)
  {
    char v9 = 8 * v8;
    if (v8 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((a2 - v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v8);
        if (!*((unsigned char *)a1 + v8)) {
          goto LABEL_23;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v8 > 3) {
          int v12 = 0;
        }
        if (v8)
        {
          if (v8 > 3) {
            LODWORD(v8) = 4;
          }
          switch((int)v8)
          {
            case 2:
              LODWORD(v8) = *a1;
              break;
            case 3:
              LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v8) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v8) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v7 + (v8 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v6 < 2) {
    return 0;
  }
  unsigned int v14 = (*(uint64_t (**)(unsigned __int16 *))(v5 + 48))(a1);
  if (v14 >= 2) {
    return v14 - 1;
  }
  else {
    return 0;
  }
}

void sub_259239428(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  if (a3 <= v9) {
    goto LABEL_12;
  }
  if (v10 <= 3)
  {
    unsigned int v11 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v11))
    {
      int v6 = 4;
      if (v9 >= a2) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
    if (v11 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v11 > 1;
    }
LABEL_12:
    if (v9 >= a2) {
      goto LABEL_20;
    }
    goto LABEL_13;
  }
  int v6 = 1;
  if (v9 >= a2)
  {
LABEL_20:
    switch(v6)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        goto LABEL_24;
      default:
LABEL_24:
        if (a2)
        {
LABEL_25:
          if (v8 >= 2)
          {
            int v15 = *(void (**)(unsigned char *, void))(v7 + 56);
            v15(a1, a2 + 1);
          }
        }
        break;
    }
    return;
  }
LABEL_13:
  unsigned int v12 = ~v9 + a2;
  if (v10 < 4)
  {
    int v13 = (v12 >> (8 * v10)) + 1;
    if (v10)
    {
      int v14 = v12 & ~(-1 << (8 * v10));
      bzero(a1, v10);
      if (v10 == 3)
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
      else if (v10 == 2)
      {
        *(_WORD *)a1 = v14;
      }
      else
      {
        *a1 = v14;
      }
    }
  }
  else
  {
    bzero(a1, v10);
    *(_DWORD *)a1 = v12;
    int v13 = 1;
  }
  switch(v6)
  {
    case 1:
      a1[v10] = v13;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v13;
      break;
    case 3:
LABEL_38:
      __break(1u);
      JUMPOUT(0x259239684);
    case 4:
      *(_DWORD *)&a1[v10] = v13;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for AsyncSyncSequence.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t AsyncThrowingChannel.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_259240E5C();
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t AsyncThrowingChannel.init()()
{
  *(void *)(v0 + 16) = sub_259240E5C();
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t AsyncThrowingChannel.send(_:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_2592397E8, 0, 0);
}

uint64_t sub_2592397E8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (void *)v0[4];
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  uint64_t v6 = v2[10];
  uint64_t v7 = v2[11];
  uint64_t v8 = v2[12];
  *uint64_t v5 = v0;
  v5[1] = sub_259229C48;
  uint64_t v9 = v0[2];
  return sub_259240F10(v9, v4, v3, v6, v7, v8);
}

void AsyncThrowingChannel.fail<>(_:)(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = a1;
  id v6 = a1;
  sub_259241460((uint64_t)&v7, v4, v5, *(void *)(v3 + 80), *(void *)(v3 + 88), MEMORY[0x263F8E4E0]);
}

Swift::Void __swiftcall AsyncThrowingChannel.finish()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 88);
  uint64_t v3 = sub_25930A240();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = v0[2];
  uint64_t v9 = v0[3];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(void *)(v2 - 8) + 56))((char *)&v10 - v6, 1, 1, v2, v5);
  sub_259241460((uint64_t)v7, v8, v9, *(void *)(v1 + 80), v2, *(void *)(v1 + 96));
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t AsyncThrowingChannel.makeAsyncIterator()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

uint64_t AsyncThrowingChannel.Iterator.next()(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_259239AE4, 0, 0);
}

uint64_t sub_259239AE4()
{
  uint64_t v2 = (void *)v0[3];
  uint64_t v1 = (uint64_t *)v0[4];
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  double v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  *double v5 = v0;
  v5[1] = sub_259229C48;
  uint64_t v9 = v0[2];
  return sub_2592418D8(v9, v4, v3, v6, v7, v8);
}

uint64_t sub_259239B98(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[3] = a2;
  v6[4] = v2;
  v6[1] = sub_25921D238;
  v6[2] = a1;
  return MEMORY[0x270FA2498](sub_259239AE4, 0, 0);
}

uint64_t sub_259239C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  unsigned int v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v12;
  void *v12 = v6;
  v12[1] = sub_259239D30;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v6 + 16);
}

uint64_t sub_259239D30()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v2 + 24) = *(void *)(v2 + 16);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t AsyncThrowingChannel.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t AsyncThrowingChannel.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_259239EB8()
{
  return MEMORY[0x263F8E4E0];
}

uint64_t sub_259239EC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_259239EE0@<X0>(void *a1@<X8>)
{
  AsyncThrowingChannel.makeAsyncIterator()(a1);
  return swift_release();
}

uint64_t sub_259239F18()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AsyncThrowingChannel()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AsyncThrowingChannel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AsyncThrowingChannel);
}

uint64_t dispatch thunk of AsyncThrowingChannel.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_259239FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t type metadata accessor for AsyncThrowingChannel.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

id sub_259239FC0(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
    return a1;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_25923A06C(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 < 0)
  {
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t type metadata accessor for ChannelStateMachine()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25923A154()
{
  return sub_25930A900();
}

uint64_t sub_25923A180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_25930A240();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))((char *)&v10 - v7, 1, 1, a2);
  return sub_25923A25C(a1, 0, (uint64_t)v8, a3);
}

uint64_t sub_25923A25C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  double v5 = (char *)a4 + *(int *)(type metadata accessor for ChannelStateMachine.SuspendedProducer() + 48);
  uint64_t v6 = sub_25930A240();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a3, v6);
}

uint64_t sub_25923A2F8()
{
  return sub_25930A910();
}

uint64_t sub_25923A344()
{
  return sub_25930A910();
}

BOOL sub_25923A388(void *a1, void *a2)
{
  return sub_25921DAB4(a1, a2);
}

uint64_t sub_25923A398()
{
  return sub_25930A900();
}

BOOL sub_25923A3C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

uint64_t sub_25923A3CC()
{
  return sub_25930A910();
}

uint64_t sub_25923A414()
{
  return sub_25923A3CC();
}

uint64_t sub_25923A428()
{
  return sub_25923A398();
}

uint64_t sub_25923A43C()
{
  return sub_25930A910();
}

BOOL sub_25923A488(uint64_t *a1, uint64_t *a2)
{
  return sub_25923A3C0(*a1, a1[1], *a2);
}

uint64_t sub_25923A4A8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if (v1 < 0) {
    return 0;
  }
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 40);
  type metadata accessor for ChannelStateMachine.SuspendedConsumer();
  sub_25930A4C0();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  if (sub_25930A150())
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    swift_getWitnessTable();
    sub_259309490();
    sub_259309450();
    sub_25923A06C(v2, v3, v4, v5, v1);
    uint64_t result = v8;
    *(void *)uint64_t v0 = v2;
    *(void *)(v0 + 8) = v3;
    *(void *)(v0 + 16) = v4;
    *(void *)(v0 + 24) = v5;
    *(void *)(v0 + 32) = v1;
    *(void *)(v0 + 40) = v6;
  }
  return result;
}

uint64_t sub_25923A638(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v55 = a2;
  uint64_t v56 = a1;
  uint64_t v7 = a4[2];
  uint64_t v8 = a4[3];
  uint64_t v9 = a4[4];
  uint64_t v10 = type metadata accessor for ChannelStateMachine.SuspendedProducer();
  uint64_t v11 = sub_25930A240();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v57 = (char *)&v48 - v13;
  uint64_t v14 = sub_25930A240();
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  int v17 = (char *)&v48 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v20 = *(void *)(v5 + 32);
  if (v20 < 0) {
    return 1;
  }
  uint64_t v48 = v12;
  uint64_t v49 = v11;
  uint64_t v58 = *(void *)(v5 + 40);
  uint64_t v50 = a3;
  uint64_t v21 = *(void *)(v5 + 24);
  uint64_t v52 = *(void *)(v5 + 16);
  uint64_t v53 = v19;
  id v22 = *(id *)v5;
  uint64_t v51 = *(void *)(v5 + 8);
  id v64 = v22;
  uint64_t v65 = v51;
  uint64_t v62 = v20;
  uint64_t v63 = v52;
  uint64_t v61 = v21;
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v9;
  uint64_t v54 = v8;
  uint64_t v25 = v10;
  uint64_t v26 = (uint64_t *)((char *)&v48 - v18);
  uint64_t v27 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v17, v55, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v17, 0, 1, v7);
  uint64_t v55 = v24;
  sub_25923A25C(v50, v56, (uint64_t)v17, v26);
  uint64_t v28 = v53;
  sub_259239FC0(v22, v51, v52, v21, v20);
  uint64_t v56 = v21;
  swift_retain();
  swift_retain();
  swift_getWitnessTable();
  sub_25930A070();
  uint64_t v29 = v57;
  sub_25930A040();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v29, 1, v25) == 1)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v49);
    uint64_t v59 = v20;
    type metadata accessor for ChannelStateMachine.SuspendedConsumer();
    sub_25930A4C0();
    swift_getWitnessTable();
    char v30 = sub_25930A150();
    swift_release();
    swift_release();
    if (v30)
    {
      sub_259309490();
      sub_259309480();
      (*(void (**)(void *, uint64_t))(v28 + 8))(v26, v25);
      id v31 = v64;
      uint64_t v32 = v65;
      uint64_t v34 = v62;
      uint64_t v33 = v63;
      uint64_t v35 = v61;
      sub_25923A06C(*(id *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
      *(void *)uint64_t v5 = v31;
      *(void *)(v5 + 8) = v32;
      *(void *)(v5 + 16) = v33;
      *(void *)(v5 + 24) = v35;
      uint64_t v36 = 2;
      *(void *)(v5 + 32) = v34;
    }
    else
    {
      swift_getWitnessTable();
      sub_259309490();
      sub_259309450();
      (*(void (**)(void *, uint64_t))(v28 + 8))(v26, v25);
      uint64_t v36 = v60;
      uint64_t v42 = v61;
      id v43 = v64;
      uint64_t v44 = v65;
      uint64_t v46 = v62;
      uint64_t v45 = v63;
      sub_25923A06C(*(id *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
      *(void *)uint64_t v5 = v43;
      *(void *)(v5 + 8) = v44;
      *(void *)(v5 + 16) = v45;
      *(void *)(v5 + 24) = v42;
      *(void *)(v5 + 32) = v46;
    }
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v26, v25);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v49);
    id v37 = v64;
    uint64_t v38 = v65;
    uint64_t v40 = v62;
    uint64_t v39 = v63;
    uint64_t v41 = v61;
    sub_25923A06C(*(id *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
    *(void *)uint64_t v5 = v37;
    *(void *)(v5 + 8) = v38;
    *(void *)(v5 + 16) = v39;
    *(void *)(v5 + 24) = v41;
    uint64_t v36 = 1;
    *(void *)(v5 + 32) = v40;
  }
  *(void *)(v5 + 40) = v58;
  return v36;
}

uint64_t sub_25923AB30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = type metadata accessor for ChannelStateMachine.SuspendedProducer();
  uint64_t v7 = sub_25930A240();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v46 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v21 = (char *)&v46 - v17;
  if ((*(void *)(v3 + 32) & 0x8000000000000000) != 0) {
    return 1;
  }
  uint64_t v22 = *(void *)(v3 + 32);
  uint64_t v47 = v16;
  uint64_t v48 = v15;
  uint64_t v49 = v20;
  uint64_t v50 = v18;
  uint64_t v51 = v14;
  uint64_t v52 = v19;
  uint64_t v53 = *(void *)(v3 + 40);
  uint64_t v23 = v5;
  uint64_t v24 = *(void *)(v3 + 16);
  uint64_t v25 = *(void *)(v3 + 24);
  uint64_t v26 = *(void *)(v3 + 8);
  id v56 = *(id *)v3;
  uint64_t v57 = v26;
  uint64_t v55 = v24;
  sub_25923A180(a1, v23, (uint64_t *)((char *)&v46 - v17));
  uint64_t v54 = v25;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_259309490();
  sub_259309470();
  uint64_t v27 = v52;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v11, 1, v6) == 1)
  {
    uint64_t v28 = v51;
    uint64_t v29 = *(void (**)(char *, uint64_t))(v50 + 8);
    v29(v11, v51);
    char v30 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 16);
    uint64_t v50 = v22;
    v30(v47, v21, v6);
    sub_25930A070();
    id v31 = v49;
    sub_25930A050();
    v29(v31, v28);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v6);
    id v32 = v56;
    uint64_t v33 = v57;
    uint64_t v34 = v55;
    sub_25923A06C(*(id *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
    *(void *)uint64_t v3 = v32;
    *(void *)(v3 + 8) = v33;
    uint64_t v35 = v54;
    *(void *)(v3 + 16) = v34;
    *(void *)(v3 + 24) = v35;
    uint64_t v36 = 1;
    uint64_t v37 = v53;
    *(void *)(v3 + 32) = v50;
    *(void *)(v3 + 40) = v37;
  }
  else
  {
    uint64_t v38 = *(void (**)(char *, uint64_t))(v27 + 8);
    v38(v21, v6);
    uint64_t v39 = v48;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v48, v11, v6);
    id v40 = v56;
    uint64_t v41 = v57;
    uint64_t v42 = v55;
    sub_25923A06C(*(id *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
    *(void *)uint64_t v3 = v40;
    *(void *)(v3 + 8) = v41;
    uint64_t v43 = v54;
    *(void *)(v3 + 16) = v42;
    *(void *)(v3 + 24) = v43;
    uint64_t v44 = v53;
    *(void *)(v3 + 32) = v22;
    *(void *)(v3 + 40) = v44;
    uint64_t v36 = *(void *)(v39 + 8);
    v38((char *)v39, v6);
  }
  return v36;
}

uint64_t sub_25923AF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = sub_25930A240();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  MEMORY[0x270FA5388](v12);
  unint64_t v16 = *(void *)(v3 + 32);
  if ((v16 & 0x8000000000000000) != 0) {
    return 0;
  }
  uint64_t v46 = (char *)&v42 - v13;
  uint64_t v47 = a2;
  uint64_t v45 = v15;
  id v17 = *(id *)v3;
  unint64_t v18 = *(void *)(v3 + 24);
  uint64_t v50 = v14;
  unint64_t v19 = *(void *)(v3 + 8);
  unint64_t v48 = v18;
  swift_retain();
  swift_retain();
  unint64_t v52 = (unint64_t)v17;
  swift_retain();
  unint64_t v51 = v19;
  uint64_t v20 = v50;
  swift_retain();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  int v21 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20[6])(v11, 1, v6);
  unint64_t v49 = v16;
  if (v21 == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    sub_25923A06C(*(id *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
    *(_OWORD *)uint64_t v3 = 0u;
    *(_OWORD *)(v3 + 16) = 0u;
    *(_OWORD *)(v3 + 32) = xmmword_259312DC0;
    uint64_t v23 = *(void *)(v47 + 16);
    uint64_t v24 = *(void *)(v47 + 32);
  }
  else
  {
    uint64_t v26 = v46;
    uint64_t v43 = (void (*)(char *, char *, uint64_t))v20[4];
    uint64_t v44 = (void *)(v3 + 8);
    v43(v46, v11, v6);
    unint64_t v53 = v16;
    uint64_t v23 = *(void *)(v47 + 16);
    uint64_t v24 = *(void *)(v47 + 32);
    type metadata accessor for ChannelStateMachine.SuspendedConsumer();
    sub_25930A4C0();
    swift_getWitnessTable();
    if (sub_25930A150())
    {
      uint64_t v27 = v45;
      ((void (*)(void))v50[2])();
      uint64_t v28 = sub_25930A770();
      if (v28)
      {
        uint64_t v29 = v28;
        char v30 = (void (*)(uint64_t, uint64_t))v50[1];
        v30(v27, v6);
      }
      else
      {
        uint64_t v29 = swift_allocError();
        v43((char *)v31, (char *)v27, v6);
        char v30 = (void (*)(uint64_t, uint64_t))v50[1];
      }
      id v32 = v44;
      v30((uint64_t)v46, v6);
      sub_25923A06C(*(id *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
      *(void *)uint64_t v3 = v29;
      v32[1] = 0;
      v32[2] = 0;
      void *v32 = 0;
    }
    else
    {
      ((void (*)(char *, uint64_t))v50[1])(v26, v6);
      sub_25923A06C(*(id *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
      *(_OWORD *)uint64_t v3 = 0u;
      *(_OWORD *)(v3 + 16) = 0u;
    }
    *(_OWORD *)(v3 + 32) = xmmword_259312DC0;
  }
  unint64_t v53 = v52;
  unint64_t v54 = v51;
  MEMORY[0x270FA5388](v22);
  *(&v42 - 4) = v23;
  *(&v42 - 3) = v6;
  *(&v42 - 2) = v24;
  type metadata accessor for ChannelStateMachine.SuspendedProducer();
  swift_getWitnessTable();
  uint64_t v33 = sub_259309490();
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(qword_26A37CAB0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = sub_259255A84((void (*)(char *, char *))sub_259225140, (uint64_t)(&v42 - 6), v33, v34, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v36);
  uint64_t v50 = &v42;
  unint64_t v53 = v48;
  unint64_t v54 = v49;
  MEMORY[0x270FA5388](v25);
  *(&v42 - 4) = v23;
  *(&v42 - 3) = v6;
  *(&v42 - 2) = v24;
  type metadata accessor for ChannelStateMachine.SuspendedConsumer();
  swift_getWitnessTable();
  uint64_t v37 = sub_259309490();
  sub_25930A240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  sub_259309F50();
  uint64_t v38 = sub_25930A240();
  uint64_t v39 = swift_getWitnessTable();
  sub_259255A84((void (*)(char *, char *))sub_259225140, (uint64_t)(&v42 - 6), v37, v38, MEMORY[0x263F8E628], v39, MEMORY[0x263F8E658], v40);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v25;
}

uint64_t type metadata accessor for ChannelStateMachine.SuspendedProducer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ChannelStateMachine.SuspendedConsumer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25923B58C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = type metadata accessor for ChannelStateMachine.SuspendedProducer();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = (void *)*v2;
  uint64_t v10 = v2[4];
  if (v10 < 0)
  {
    if (v9)
    {
      *(_OWORD *)uint64_t v2 = 0u;
      *((_OWORD *)v2 + 1) = 0u;
      *((_OWORD *)v2 + 2) = xmmword_259312DC0;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
      sub_25930A240();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_25930A920();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      unint64_t v18 = (void *)((char *)a2 + *(int *)(TupleTypeMetadata2 + 48));
      *a2 = 0;
      *unint64_t v18 = v9;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
      sub_25930A240();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_25930A920();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v26 = (char *)a2 + *(int *)(TupleTypeMetadata2 + 48);
      *a2 = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v26, 1, 1, v5);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56);
    return v27(a2, 0, 1, TupleTypeMetadata2);
  }
  else
  {
    uint64_t v30 = v5;
    id v31 = a2;
    uint64_t v11 = v2[1];
    uint64_t v12 = v2[2];
    uint64_t v13 = v2[3];
    uint64_t v14 = v2[5];
    uint64_t v32 = v11;
    sub_25930A4C0();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v29 = v14;
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    if (sub_25930A150())
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
      sub_25930A240();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_25930A920();
      uint64_t v15 = swift_getTupleTypeMetadata2();
      return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v31, 1, 1, v15);
    }
    else
    {
      uint64_t v32 = (uint64_t)v9;
      uint64_t v33 = v11;
      swift_getWitnessTable();
      sub_259309490();
      sub_259309450();
      uint64_t v19 = v11;
      uint64_t v20 = v29;
      sub_25923A06C(v9, v19, v12, v13, v10);
      uint64_t v21 = v33;
      uint64_t *v3 = v32;
      v3[1] = v21;
      v3[2] = v12;
      v3[3] = v13;
      v3[4] = v10;
      v3[5] = v20;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
      uint64_t v22 = sub_25930A240();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_25930A920();
      uint64_t v23 = swift_getTupleTypeMetadata2();
      uint64_t v24 = v31;
      uint64_t v25 = (char *)v31 + *(int *)(v23 + 48);
      *id v31 = *((void *)v8 + 1);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v25, &v8[*(int *)(v6 + 48)], v22);
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v24, 0, 1, v23);
    }
  }
}

uint64_t sub_25923BAA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = a3[2];
  uint64_t v9 = a3[3];
  uint64_t v11 = a3[4];
  uint64_t v57 = type metadata accessor for ChannelStateMachine.SuspendedProducer();
  MEMORY[0x270FA5388](v57);
  uint64_t v13 = (char *)v47 - v12;
  uint64_t v14 = *(void **)v5;
  uint64_t v15 = *(void *)(v5 + 32);
  if (v15 < 0)
  {
    if (v14)
    {
      *(_OWORD *)uint64_t v5 = 0u;
      *(_OWORD *)(v5 + 16) = 0u;
      *(_OWORD *)(v5 + 32) = xmmword_259312DC0;
      *a4 = v14;
    }
    else
    {
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a4, 1, 1, v10);
    }
    Suspendeduint64_t Action = type metadata accessor for ChannelStateMachine.NextSuspendedAction();
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(SuspendedAction - 8) + 56);
    return v46(a4, 0, 1, SuspendedAction);
  }
  else
  {
    unint64_t v52 = v13;
    uint64_t v55 = a4;
    uint64_t v16 = a1;
    uint64_t v18 = *(void *)(v5 + 8);
    uint64_t v17 = *(void *)(v5 + 16);
    uint64_t v19 = a2;
    uint64_t v20 = *(void *)(v5 + 24);
    uint64_t v21 = *(void *)(v5 + 40);
    uint64_t v65 = v14;
    uint64_t v66 = v18;
    uint64_t v63 = v20;
    uint64_t v64 = v15;
    uint64_t v62 = v21;
    uint64_t v50 = v19;
    uint64_t v51 = v16;
    uint64_t v58 = v19;
    uint64_t v59 = v16;
    swift_retain();
    uint64_t v56 = v17;
    sub_259239FC0(v14, v18, v17, v20, v15);
    type metadata accessor for ChannelStateMachine.SuspendedConsumer();
    uint64_t v53 = v9;
    swift_retain();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_25930A070();
    uint64_t v54 = v11;
    sub_25930A040();
    if (v61 == 1)
    {
      v47[0] = WitnessTable;
      v47[1] = v21;
      uint64_t v48 = v20;
      uint64_t v49 = v10;
      uint64_t v23 = v56;
      uint64_t v24 = v57;
      uint64_t v60 = v18;
      sub_25930A4C0();
      swift_getWitnessTable();
      char v25 = sub_25930A150();
      swift_release();
      swift_release();
      if (v25)
      {
        uint64_t v60 = v50;
        uint64_t v61 = v51;
        sub_259309490();
        sub_259309480();
        sub_25923A06C(v14, v18, v23, v48, v15);
        uint64_t v26 = v63;
        uint64_t v27 = v64;
        uint64_t v28 = v62;
        *(void *)uint64_t v5 = v14;
        *(void *)(v5 + 8) = v18;
        *(void *)(v5 + 16) = v23;
        *(void *)(v5 + 24) = v26;
        *(void *)(v5 + 32) = v27;
        *(void *)(v5 + 40) = v28;
        uint64_t v29 = type metadata accessor for ChannelStateMachine.NextSuspendedAction();
        return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v55, 1, 1, v29);
      }
      swift_getWitnessTable();
      sub_259309490();
      uint64_t v38 = v52;
      sub_259309450();
      uint64_t v39 = v48;
      sub_25923A06C(v14, v18, v23, v48, v15);
      uint64_t v40 = v66;
      uint64_t v41 = v62;
      *(void *)uint64_t v5 = v65;
      *(void *)(v5 + 8) = v40;
      *(void *)(v5 + 16) = v23;
      *(void *)(v5 + 24) = v39;
      *(void *)(v5 + 32) = v15;
      *(void *)(v5 + 40) = v41;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
      uint64_t v42 = sub_25930A240();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v44 = v55;
      uint64_t v45 = (char *)v55 + *(int *)(TupleTypeMetadata2 + 48);
      *uint64_t v55 = *((void *)v38 + 1);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v45, &v38[*(int *)(v24 + 48)], v42);
      uint64_t v35 = type metadata accessor for ChannelStateMachine.NextSuspendedAction();
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
      uint64_t v37 = v44;
    }
    else
    {
      swift_release();
      swift_release();
      uint64_t v32 = v56;
      sub_25923A06C(v14, v18, v56, v20, v15);
      uint64_t v33 = v62;
      *(void *)uint64_t v5 = v14;
      *(void *)(v5 + 8) = v18;
      *(void *)(v5 + 16) = v32;
      *(void *)(v5 + 24) = v20;
      *(void *)(v5 + 32) = v15;
      *(void *)(v5 + 40) = v33;
      uint64_t v34 = v55;
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v55, 1, 1, v10);
      uint64_t v35 = type metadata accessor for ChannelStateMachine.NextSuspendedAction();
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
      uint64_t v37 = v34;
    }
    return v36(v37, 0, 1, v35);
  }
}

uint64_t sub_25923C044()
{
  uint64_t v1 = v0[4];
  if ((v1 & 0x8000000000000000) == 0)
  {
    uint64_t v2 = v0;
    uint64_t v4 = (void *)*v0;
    uint64_t v3 = v0[1];
    uint64_t v5 = v0[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = v2[5];
    type metadata accessor for ChannelStateMachine.SuspendedConsumer();
    swift_retain();
    uint64_t v10 = v5;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_getWitnessTable();
    sub_259309490();
    sub_259309470();
    uint64_t v8 = v11;
    if (v11 != 1)
    {
      sub_25923A06C(v4, v3, v10, v6, v1);
      *uint64_t v2 = v4;
      v2[1] = v3;
      v2[2] = v10;
      v2[3] = v6;
      v2[4] = v1;
      v2[5] = v7;
      return v8;
    }
    sub_25930A070();
    sub_25930A050();
    sub_25923A06C(v4, v3, v10, v6, v1);
    *uint64_t v2 = v4;
    v2[1] = v3;
    v2[2] = v10;
    v2[3] = v6;
    v2[4] = v1;
    v2[5] = v7;
  }
  return 1;
}

uint64_t type metadata accessor for ChannelStateMachine.NextSuspendedAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25923C200@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ChannelStateMachine.SuspendedProducer();
  sub_259309DF0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v4 = sub_259309460();
  uint64_t v6 = v5;
  uint64_t v7 = sub_259309DF0();
  if (MEMORY[0x25A2DA6D0](v7, v2)) {
    uint64_t v8 = sub_25923C3A0(v7, v2, WitnessTable);
  }
  else {
    uint64_t v8 = MEMORY[0x263F8EE88];
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for ChannelStateMachine.SuspendedConsumer();
  sub_259309DF0();
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v11 = sub_259309460();
  uint64_t v13 = v12;
  uint64_t v14 = sub_259309DF0();
  if (MEMORY[0x25A2DA6D0](v14, v9)) {
    uint64_t v15 = sub_25923C3A0(v14, v9, v10);
  }
  else {
    uint64_t v15 = MEMORY[0x263F8EE88];
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v8;
  a1[3] = v11;
  a1[4] = v13;
  a1[5] = v15;
  return result;
}

uint64_t sub_25923C3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v39 - v11;
  uint64_t v40 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v39 - v14;
  if (MEMORY[0x25A2DA690](v13))
  {
    sub_25930A3C0();
    uint64_t v16 = sub_25930A3B0();
  }
  else
  {
    uint64_t v16 = MEMORY[0x263F8EE88];
  }
  uint64_t v44 = MEMORY[0x25A2DA6D0](v5, a2);
  if (!v44) {
    return v16;
  }
  uint64_t v17 = 0;
  uint64_t v49 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  uint64_t v50 = v16 + 56;
  uint64_t v46 = v6 + 32;
  uint64_t v48 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v41 = v6;
  uint64_t v42 = v5;
  uint64_t v43 = v15;
  while (1)
  {
    char v18 = sub_259309E10();
    sub_259309DD0();
    if (v18)
    {
      uint64_t v19 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
      v19(v15, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17), a2);
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_25930A410();
      if (v40 != 8) {
        goto LABEL_23;
      }
      uint64_t v52 = result;
      uint64_t v19 = *v49;
      (*v49)(v15, &v52, a2);
      swift_unknownObjectRelease();
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20)
      {
LABEL_20:
        __break(1u);
        return v16;
      }
    }
    uint64_t v47 = v21;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v45(v51, v15, a2);
    uint64_t v22 = sub_259309B10();
    uint64_t v23 = v16;
    uint64_t v24 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v25 = v22 & ~v24;
    unint64_t v26 = v25 >> 6;
    uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
    uint64_t v28 = 1 << v25;
    uint64_t v29 = *(void *)(v6 + 72);
    if (((1 << v25) & v27) != 0)
    {
      uint64_t v30 = ~v24;
      do
      {
        v19(v9, (uint64_t *)(*(void *)(v23 + 48) + v29 * v25), a2);
        uint64_t v31 = a3;
        char v32 = sub_259309B60();
        uint64_t v33 = *v48;
        (*v48)(v9, a2);
        if (v32)
        {
          v33(v51, a2);
          a3 = v31;
          uint64_t v6 = v41;
          uint64_t v5 = v42;
          uint64_t v16 = v23;
          goto LABEL_7;
        }
        unint64_t v25 = (v25 + 1) & v30;
        unint64_t v26 = v25 >> 6;
        uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
        uint64_t v28 = 1 << v25;
        a3 = v31;
      }
      while ((v27 & (1 << v25)) != 0);
      uint64_t v6 = v41;
      uint64_t v5 = v42;
    }
    uint64_t v34 = v51;
    *(void *)(v50 + 8 * v26) = v28 | v27;
    unint64_t v35 = *(void *)(v23 + 48) + v29 * v25;
    uint64_t v16 = v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v45)(v35, v34, a2);
    uint64_t v37 = *(void *)(v23 + 16);
    BOOL v20 = __OFADD__(v37, 1);
    uint64_t v38 = v37 + 1;
    if (v20) {
      break;
    }
    *(void *)(v23 + 16) = v38;
LABEL_7:
    uint64_t v15 = v43;
    uint64_t v17 = v47;
    if (v47 == v44) {
      return v16;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ChannelStateMachine.SendSuspendedAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ChannelStateMachine.SendCancelledAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ChannelStateMachine.SendAction()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_25923C7B0(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25923C804(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *sub_25923C858(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_25923C914(void *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  a1[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for ChannelStateMachine.FinishAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25923C9A4()
{
  uint64_t result = sub_25930A240();
  if (v1 <= 0x3F)
  {
    uint64_t v3 = *(void *)(result - 8) + 64;
    unint64_t v4 = "\b";
    swift_getTupleTypeLayout2();
    unint64_t v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_25923CA50(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  unint64_t v10 = ((v9 + 8) & ~v9) + v7;
  if (v7 > v10) {
    unint64_t v10 = v7;
  }
  if (v10 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v10;
  }
  int v12 = v8 & 0x100000;
  if (v9 > 7 || v12 != 0 || (unint64_t)(v11 + 1) > 0x18)
  {
    uint64_t v15 = *(char **)a2;
    *(void *)unint64_t v4 = *(void *)a2;
    unint64_t v4 = &v15[(v9 & 0xF8 ^ 0x1F8) & (v9 + 16)];
    swift_retain();
  }
  else
  {
    unsigned int v16 = a2[v11];
    unsigned int v17 = v16 - 3;
    if (v16 >= 3)
    {
      if (v11 <= 3) {
        uint64_t v18 = v11;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          goto LABEL_27;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v19 = *(_DWORD *)a2;
LABEL_27:
          int v20 = (v19 | (v17 << (8 * v11))) + 3;
          unsigned int v16 = v19 + 3;
          if (v11 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v16 == 2)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v23 = (void *)((unint64_t)&a1[v9 + 8] & ~v9);
      uint64_t v24 = (const void *)((unint64_t)&a2[v9 + 8] & ~v9);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v24, 1, v5))
      {
        memcpy(v23, v24, v7);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v23, v24, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
      }
      v4[v11] = 2;
    }
    else if (v16 == 1)
    {
      uint64_t v21 = *(void *)a2;
      id v22 = *(id *)a2;
      *(void *)unint64_t v4 = v21;
      v4[v11] = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(v4, a2, v7);
      }
      else
      {
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(v6 + 16))(v4, a2, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      }
      v4[v11] = 0;
    }
  }
  return v4;
}

void sub_25923CD24(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t)a1;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v5;
  }
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= ((v6 + 8) & ~v6) + v5) {
    v5 += (v6 + 8) & ~v6;
  }
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  unsigned int v7 = a1[v5];
  unsigned int v8 = v7 - 3;
  if (v7 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_16;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_16;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_16;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_16:
        int v11 = (v10 | (v8 << (8 * v5))) + 3;
        unsigned int v7 = v10 + 3;
        if (v5 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 2)
  {
    uint64_t v2 = (unint64_t)&a1[v6 + 8] & ~v6;
  }
  else if (v7 == 1)
  {
    int v12 = *(void **)a1;

    return;
  }
  uint64_t v14 = *(void *)(*(void *)(a2 + 16) - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
  {
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v13(v2, v3);
  }
}

void *sub_25923CEF4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = ((v8 + 8) & ~v8) + v7;
  if (v7 > v9) {
    unint64_t v9 = v7;
  }
  if (v9 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = v9;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 3;
  if (v11 >= 3)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_18;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_18;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_18;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_18:
        int v15 = (v14 | (v12 << (8 * v10))) + 3;
        unsigned int v11 = v14 + 3;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 2)
  {
    *a1 = *(void *)a2;
    int v19 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
    int v20 = (const void *)((unint64_t)&a2[v8 + 8] & ~v8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v20, 1, v5))
    {
      memcpy(v19, v20, v7);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v19, v20, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
    }
    char v18 = 2;
  }
  else if (v11 == 1)
  {
    uint64_t v16 = *(void *)a2;
    id v17 = *(id *)a2;
    *a1 = v16;
    char v18 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    char v18 = 0;
  }
  *((unsigned char *)a1 + v10) = v18;
  return a1;
}

unsigned __int8 *sub_25923D184(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    unint64_t v9 = ((v8 + 8) & ~v8) + v7;
    if (v7 > v9) {
      unint64_t v9 = v7;
    }
    if (v9 <= 8) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = v9;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 3;
    if (v11 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          if (v10 < 4) {
            goto LABEL_20;
          }
          goto LABEL_22;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          if (v10 >= 4) {
            goto LABEL_22;
          }
          goto LABEL_20;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v10 < 4) {
            goto LABEL_20;
          }
          goto LABEL_22;
        case 4:
          int v14 = *(_DWORD *)a1;
          if (v10 < 4) {
LABEL_20:
          }
            unsigned int v11 = (v14 | (v12 << (8 * v10))) + 3;
          else {
LABEL_22:
          }
            unsigned int v11 = v14 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v15 = ~v8;
    if (v11 == 2)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))((unint64_t)&a1[v8 + 8] & v15, 1, v5))(*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&a1[v8 + 8] & v15, v5); {
    }
      }
    else if (v11 == 1)
    {
    }
    else if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v16 = a2[v10];
    unsigned int v17 = v16 - 3;
    if (v16 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v18 = v10;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          if (v10 >= 4) {
            goto LABEL_49;
          }
          goto LABEL_40;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          if (v10 >= 4) {
            goto LABEL_49;
          }
          goto LABEL_40;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 < 4) {
            goto LABEL_40;
          }
          goto LABEL_49;
        case 4:
          int v19 = *(_DWORD *)a2;
          if (v10 < 4)
          {
LABEL_40:
            unsigned int v16 = (v19 | (v17 << (8 * v10))) + 3;
            break;
          }
LABEL_49:
          unsigned int v16 = v19 + 3;
          if (v16 == 2) {
            goto LABEL_50;
          }
          goto LABEL_42;
        default:
          break;
      }
    }
    if (v16 == 2)
    {
LABEL_50:
      *(void *)a1 = *(void *)a2;
      uint64_t v23 = (const void *)((unint64_t)&a2[v8 + 8] & v15);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v23, 1, v5))
      {
        memcpy((void *)((unint64_t)&a1[v8 + 8] & v15), v23, v7);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v6 + 16))((unint64_t)&a1[v8 + 8] & v15, v23, v5);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v6 + 56))((unint64_t)&a1[v8 + 8] & v15, 0, 1, v5);
      }
      char v22 = 2;
    }
    else
    {
LABEL_42:
      if (v16 == 1)
      {
        uint64_t v20 = *(void *)a2;
        id v21 = *(id *)a2;
        *(void *)a1 = v20;
        char v22 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
        {
          memcpy(a1, a2, v7);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
          (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        }
        char v22 = 0;
      }
    }
    a1[v10] = v22;
  }
  return a1;
}

void *sub_25923D584(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v9 = ((v8 + 8) & ~v8) + v7;
  if (v7 > v9) {
    unint64_t v9 = v7;
  }
  if (v9 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = v9;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 3;
  if (v11 >= 3)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_18;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_18;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_18;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_18:
        int v15 = (v14 | (v12 << (8 * v10))) + 3;
        unsigned int v11 = v14 + 3;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 2)
  {
    *a1 = *(void *)a2;
    unsigned int v17 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
    uint64_t v18 = (const void *)((unint64_t)&a2[v8 + 8] & ~v8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v18, 1, v5))
    {
      memcpy(v17, v18, v7);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v17, v18, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
    }
    char v16 = 2;
  }
  else if (v11 == 1)
  {
    *a1 = *(void *)a2;
    char v16 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    char v16 = 0;
  }
  *((unsigned char *)a1 + v10) = v16;
  return a1;
}

unsigned __int8 *sub_25923D80C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    unint64_t v9 = ((v8 + 8) & ~v8) + v7;
    if (v7 > v9) {
      unint64_t v9 = v7;
    }
    if (v9 <= 8) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = v9;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 3;
    if (v11 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          if (v10 < 4) {
            goto LABEL_20;
          }
          goto LABEL_22;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          if (v10 >= 4) {
            goto LABEL_22;
          }
          goto LABEL_20;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v10 < 4) {
            goto LABEL_20;
          }
          goto LABEL_22;
        case 4:
          int v14 = *(_DWORD *)a1;
          if (v10 < 4) {
LABEL_20:
          }
            unsigned int v11 = (v14 | (v12 << (8 * v10))) + 3;
          else {
LABEL_22:
          }
            unsigned int v11 = v14 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v15 = ~v8;
    if (v11 == 2)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))((unint64_t)&a1[v8 + 8] & v15, 1, v5))(*(void (**)(unint64_t, uint64_t))(v6 + 8))((unint64_t)&a1[v8 + 8] & v15, v5); {
    }
      }
    else if (v11 == 1)
    {
    }
    else if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v16 = a2[v10];
    unsigned int v17 = v16 - 3;
    if (v16 >= 3)
    {
      if (v10 <= 3) {
        uint64_t v18 = v10;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          if (v10 >= 4) {
            goto LABEL_49;
          }
          goto LABEL_40;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          if (v10 >= 4) {
            goto LABEL_49;
          }
          goto LABEL_40;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v10 < 4) {
            goto LABEL_40;
          }
          goto LABEL_49;
        case 4:
          int v19 = *(_DWORD *)a2;
          if (v10 < 4)
          {
LABEL_40:
            unsigned int v16 = (v19 | (v17 << (8 * v10))) + 3;
            break;
          }
LABEL_49:
          unsigned int v16 = v19 + 3;
          if (v16 == 2) {
            goto LABEL_50;
          }
          goto LABEL_42;
        default:
          break;
      }
    }
    if (v16 == 2)
    {
LABEL_50:
      *(void *)a1 = *(void *)a2;
      id v21 = (const void *)((unint64_t)&a2[v8 + 8] & v15);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v21, 1, v5))
      {
        memcpy((void *)((unint64_t)&a1[v8 + 8] & v15), v21, v7);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v6 + 32))((unint64_t)&a1[v8 + 8] & v15, v21, v5);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v6 + 56))((unint64_t)&a1[v8 + 8] & v15, 0, 1, v5);
      }
      char v20 = 2;
    }
    else
    {
LABEL_42:
      if (v16 == 1)
      {
        *(void *)a1 = *(void *)a2;
        char v20 = 1;
      }
      else
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
        {
          memcpy(a1, a2, v7);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
          (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        }
        char v20 = 0;
      }
    }
    a1[v10] = v20;
  }
  return a1;
}

uint64_t sub_25923DC04(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v3 + 84)) {
    unint64_t v4 = *(void *)(v3 + 64);
  }
  else {
    unint64_t v4 = *(void *)(v3 + 64) + 1;
  }
  unint64_t v5 = ((*(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
  if (v4 > v5) {
    unint64_t v5 = v4;
  }
  uint64_t v6 = 8;
  if (v5 > 8) {
    uint64_t v6 = v5;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_27;
  }
  uint64_t v7 = v6 + 1;
  char v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    unsigned int v11 = ((a2 + ~(-1 << v8) - 253) >> v8) + 1;
    if (HIWORD(v11))
    {
      int v9 = *(_DWORD *)((char *)a1 + v7);
      if (!v9) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    if (v11 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    if (v11 < 2)
    {
LABEL_27:
      unsigned int v13 = *((unsigned __int8 *)a1 + v6);
      if (v13 >= 3) {
        return (v13 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_27;
  }
LABEL_19:
  int v12 = (v9 - 1) << v8;
  if (v7 > 3) {
    int v12 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v7 | v12) + 254;
}

void sub_25923DD88(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v6 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v6 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v6;
  if (v6 > v7) {
    unint64_t v7 = v6;
  }
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  size_t v8 = v7 + 1;
  if (a3 < 0xFE)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 + ~(-1 << (8 * v8)) - 253) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v10 = a2 - 254;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v7 != -1)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v7 + 1);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        break;
      case 3:
LABEL_39:
        __break(1u);
        JUMPOUT(0x25923DFA0);
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_27;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      default:
LABEL_27:
        if (a2) {
LABEL_28:
        }
          a1[v7] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_25923DFC8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  if (*(_DWORD *)(v2 + 84)) {
    unint64_t v3 = *(void *)(v2 + 64);
  }
  else {
    unint64_t v3 = *(void *)(v2 + 64) + 1;
  }
  unint64_t v4 = ((*(unsigned __int8 *)(v2 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + v3;
  if (v3 <= v4) {
    unint64_t v3 = v4;
  }
  uint64_t v5 = 8;
  if (v3 > 8) {
    uint64_t v5 = v3;
  }
  uint64_t v6 = a1[v5];
  int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_17;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_17;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_17;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_17:
        unsigned int v10 = (v9 | (v7 << (8 * v5))) + 3;
        LODWORD(v6) = v9 + 3;
        if (v5 >= 4) {
          uint64_t v6 = v6;
        }
        else {
          uint64_t v6 = v10;
        }
        break;
      default:
        return v6;
    }
  }
  return v6;
}

void sub_25923E0D0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v4 + 84)) {
    size_t v5 = *(void *)(v4 + 64);
  }
  else {
    size_t v5 = *(void *)(v4 + 64) + 1;
  }
  size_t v6 = ((*(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v5;
  if (v5 <= v6) {
    size_t v5 = v6;
  }
  if (v5 <= 8) {
    size_t v5 = 8;
  }
  if (a2 > 2)
  {
    if (v5 <= 3) {
      char v7 = ((a2 - 3) >> (8 * v5)) + 3;
    }
    else {
      char v7 = 3;
    }
    if (v5 <= 3) {
      int v8 = (a2 - 3) & ~(-1 << (8 * v5));
    }
    else {
      int v8 = a2 - 3;
    }
    a1[v5] = v7;
    if (v5 >= 4) {
      int v9 = 4;
    }
    else {
      int v9 = v5;
    }
    bzero(a1, v5);
    switch(v9)
    {
      case 2:
        *(_WORD *)a1 = v8;
        break;
      case 3:
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
        break;
      case 4:
        *(_DWORD *)a1 = v8;
        break;
      default:
        *a1 = v8;
        break;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t type metadata accessor for ChannelStateMachine.NextCancelledAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25923E234()
{
  sub_25930A240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t result = sub_25930A920();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_25923E2F4(uint64_t *__dst, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = __dst;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6 & 0xF8 | 7;
  uint64_t v8 = ~v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  if (v9 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = v9;
  }
  size_t v11 = v10 + (((v6 & 0xF8) + 15) & ~v7) + 1;
  if ((v6 & 0x1000F8) != 0 || v11 > 0x18)
  {
    uint64_t v13 = *a2;
    uint64_t *v3 = *a2;
    unint64_t v3 = (uint64_t *)(v13 + ((v7 + 16) & v8));
    swift_retain();
  }
  else
  {
    LODWORD(v14) = -1;
    if ((unint64_t)*a2 < 0xFFFFFFFF) {
      uint64_t v14 = *a2;
    }
    if ((v14 + 1) > 1)
    {
      memcpy(__dst, a2, v11);
    }
    else
    {
      *__dst = *a2;
      uint64_t v15 = (void *)(((unint64_t)__dst + 15) & v8);
      unsigned int v16 = (unsigned __int8 *)(((unint64_t)a2 + 15) & v8);
      unsigned int v17 = v16[v10];
      unsigned int v18 = v17 - 2;
      if (v17 >= 2)
      {
        if (v10 <= 3) {
          uint64_t v19 = v10;
        }
        else {
          uint64_t v19 = 4;
        }
        switch(v19)
        {
          case 1:
            int v20 = *v16;
            goto LABEL_26;
          case 2:
            int v20 = *(unsigned __int16 *)v16;
            goto LABEL_26;
          case 3:
            int v20 = *(unsigned __int16 *)v16 | (v16[2] << 16);
            goto LABEL_26;
          case 4:
            int v20 = *(_DWORD *)v16;
LABEL_26:
            int v21 = (v20 | (v18 << (8 * v10))) + 2;
            unsigned int v17 = v20 + 2;
            if (v10 < 4) {
              unsigned int v17 = v21;
            }
            break;
          default:
            break;
        }
      }
      if (v17 == 1)
      {
        uint64_t v22 = *(void *)v16;
        id v23 = *(id *)v16;
        *uint64_t v15 = v22;
        *((unsigned char *)v15 + v10) = 1;
      }
      else
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4))
        {
          memcpy(v15, v16, v9);
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(v15, v16, v4);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
        }
        *((unsigned char *)v15 + v10) = 0;
      }
    }
  }
  return v3;
}

void sub_25923E544(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v4) = -1;
  }
  if ((v4 + 1) <= 1)
  {
    uint64_t v5 = *(_DWORD *)(v3 + 80) & 0xF8 | 7;
    int v6 = (unsigned __int8 *)(((unint64_t)a1 + v5 + 8) & ~v5);
    if (*(_DWORD *)(v3 + 84)) {
      unint64_t v7 = *(void *)(v3 + 64);
    }
    else {
      unint64_t v7 = *(void *)(v3 + 64) + 1;
    }
    if (v7 <= 8) {
      unint64_t v7 = 8;
    }
    unsigned int v8 = v6[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *v6;
          goto LABEL_18;
        case 2:
          int v11 = *(unsigned __int16 *)v6;
          goto LABEL_18;
        case 3:
          int v11 = *(unsigned __int16 *)v6 | (v6[2] << 16);
          goto LABEL_18;
        case 4:
          int v11 = *(_DWORD *)v6;
LABEL_18:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      uint64_t v13 = *(void **)v6;
    }
    else
    {
      uint64_t v15 = *(void *)(*(void *)(a2 + 16) - 8);
      if (!(*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v2))
      {
        uint64_t v14 = *(void (**)(unsigned __int8 *, uint64_t))(v15 + 8);
        v14(v6, v2);
      }
    }
  }
}

uint64_t *sub_25923E6FC(uint64_t *__dst, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 84);
  uint64_t v8 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  uint64_t v9 = ~v8;
  LODWORD(v10) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v10 = *a2;
  }
  if ((v10 + 1) > 1)
  {
    uint64_t v19 = (v8 + 8) & v9;
    if (!v7) {
      ++v6;
    }
    if (v6 <= 8) {
      unint64_t v6 = 8;
    }
    memcpy(__dst, a2, v6 + v19 + 1);
  }
  else
  {
    *__dst = *a2;
    int v11 = (void *)(((unint64_t)__dst + v8 + 8) & v9);
    int v12 = (unsigned __int8 *)(((unint64_t)a2 + v8 + 8) & v9);
    if (v7) {
      size_t v13 = v6;
    }
    else {
      size_t v13 = v6 + 1;
    }
    if (v13 <= 8) {
      uint64_t v14 = 8;
    }
    else {
      uint64_t v14 = v13;
    }
    unsigned int v15 = v12[v14];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v17 = v14;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *v12;
          goto LABEL_24;
        case 2:
          int v18 = *(unsigned __int16 *)v12;
          goto LABEL_24;
        case 3:
          int v18 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_24;
        case 4:
          int v18 = *(_DWORD *)v12;
LABEL_24:
          int v20 = (v18 | (v16 << (8 * v14))) + 2;
          unsigned int v15 = v18 + 2;
          if (v14 < 4) {
            unsigned int v15 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
      uint64_t v21 = *(void *)v12;
      id v22 = *(id *)v12;
      *int v11 = v21;
      *((unsigned char *)v11 + v14) = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4))
      {
        memcpy(v11, v12, v13);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(v11, v12, v4);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
      }
      *((unsigned char *)v11 + v14) = 0;
    }
  }
  return __dst;
}

char *sub_25923E938(char *__dst, char *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 84);
  uint64_t v9 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v10 = v9 | 7;
  uint64_t v11 = ~(v9 | 7);
  uint64_t v12 = (v9 + 15) & v11;
  uint64_t v13 = *(void *)__dst;
  LODWORD(v14) = -1;
  if (*(void *)__dst >= 0xFFFFFFFFuLL) {
    LODWORD(v13) = -1;
  }
  unsigned int v15 = v13 + 1;
  uint64_t v16 = *(void *)__src;
  if (*(void *)__src < 0xFFFFFFFFuLL) {
    uint64_t v14 = *(void *)__src;
  }
  unsigned int v17 = v14 + 1;
  if (v15 > 1)
  {
    if (v17 <= 1)
    {
      *(void *)__dst = v16;
      uint64_t v19 = (id *)((unint64_t)&__dst[v10 + 8] & v11);
      uint64_t v21 = (unsigned __int8 *)((unint64_t)&__src[v10 + 8] & v11);
      if (v8) {
        size_t v22 = v7;
      }
      else {
        size_t v22 = v7 + 1;
      }
      if (v22 <= 8) {
        uint64_t v23 = 8;
      }
      else {
        uint64_t v23 = v22;
      }
      unsigned int v28 = v21[v23];
      unsigned int v29 = v28 - 2;
      if (v28 >= 2)
      {
        if (v23 <= 3) {
          uint64_t v30 = v23;
        }
        else {
          uint64_t v30 = 4;
        }
        switch(v30)
        {
          case 1:
            int v31 = *v21;
            goto LABEL_52;
          case 2:
            int v31 = *(unsigned __int16 *)v21;
            goto LABEL_52;
          case 3:
            int v31 = *(unsigned __int16 *)((unint64_t)&__src[v10 + 8] & v11) | (*(unsigned __int8 *)(((unint64_t)&__src[v10 + 8] & v11) + 2) << 16);
            goto LABEL_52;
          case 4:
            int v31 = *(_DWORD *)v21;
LABEL_52:
            int v39 = (v31 | (v29 << (8 * v23))) + 2;
            unsigned int v28 = v31 + 2;
            if (v23 < 4) {
              unsigned int v28 = v39;
            }
            break;
          default:
            break;
        }
      }
      if (v28 != 1) {
        goto LABEL_88;
      }
LABEL_55:
      uint64_t v40 = *(void **)v21;
      id v41 = *(id *)v21;
      *uint64_t v19 = v40;
      *((unsigned char *)v19 + v23) = 1;
      return __dst;
    }
    if (!v8) {
      ++v7;
    }
    if (v7 <= 8) {
      unint64_t v7 = 8;
    }
    uint64_t v38 = v7 + v12;
LABEL_66:
    memcpy(__dst, __src, v38 + 1);
    return __dst;
  }
  if (v17 > 1)
  {
    char v32 = (id *)((unint64_t)&__dst[v10 + 8] & v11);
    if (!v8) {
      ++v7;
    }
    if (v7 <= 8) {
      uint64_t v33 = 8;
    }
    else {
      uint64_t v33 = v7;
    }
    unsigned int v34 = *((unsigned __int8 *)v32 + v33);
    unsigned int v35 = v34 - 2;
    if (v34 >= 2)
    {
      if (v33 <= 3) {
        uint64_t v36 = v33;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *(unsigned __int8 *)v32;
          goto LABEL_59;
        case 2:
          int v37 = *(unsigned __int16 *)v32;
          goto LABEL_59;
        case 3:
          int v37 = *(unsigned __int16 *)((unint64_t)&__dst[v10 + 8] & v11) | (*(unsigned __int8 *)(((unint64_t)&__dst[v10 + 8] & v11) + 2) << 16);
          goto LABEL_59;
        case 4:
          int v37 = *(_DWORD *)v32;
LABEL_59:
          int v42 = (v37 | (v35 << (8 * v33))) + 2;
          unsigned int v34 = v37 + 2;
          if (v33 < 4) {
            unsigned int v34 = v42;
          }
          break;
        default:
          break;
      }
    }
    if (v34 == 1)
    {
    }
    else if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(v32, 1, v5))
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(v32, v5);
    }
    uint64_t v38 = v33 + v12;
    goto LABEL_66;
  }
  *(void *)__dst = v16;
  unint64_t v18 = (unint64_t)&__dst[v10 + 8];
  uint64_t v19 = (id *)(v18 & v11);
  unint64_t v20 = (unint64_t)&__src[v10 + 8];
  uint64_t v21 = (unsigned __int8 *)(v20 & v11);
  if ((v18 & v11) == (v20 & v11)) {
    return __dst;
  }
  if (v8) {
    size_t v22 = v7;
  }
  else {
    size_t v22 = v7 + 1;
  }
  if (v22 <= 8) {
    uint64_t v23 = 8;
  }
  else {
    uint64_t v23 = v22;
  }
  unsigned int v24 = *((unsigned __int8 *)v19 + v23);
  unsigned int v25 = v24 - 2;
  if (v24 >= 2)
  {
    if (v23 <= 3) {
      uint64_t v26 = v23;
    }
    else {
      uint64_t v26 = 4;
    }
    switch(v26)
    {
      case 1:
        int v27 = *(unsigned __int8 *)v19;
        goto LABEL_70;
      case 2:
        int v27 = *(unsigned __int16 *)v19;
        goto LABEL_70;
      case 3:
        int v27 = *(unsigned __int16 *)(v18 & v11) | (*(unsigned __int8 *)((v18 & v11) + 2) << 16);
        goto LABEL_70;
      case 4:
        int v27 = *(_DWORD *)v19;
LABEL_70:
        int v43 = (v27 | (v25 << (8 * v23))) + 2;
        unsigned int v24 = v27 + 2;
        if (v23 < 4) {
          unsigned int v24 = v43;
        }
        break;
      default:
        break;
    }
  }
  if (v24 == 1)
  {
  }
  else if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(v19, 1, v5))
  {
    (*(void (**)(id *, uint64_t))(v6 + 8))(v19, v5);
  }
  unsigned int v44 = v21[v23];
  unsigned int v45 = v44 - 2;
  if (v44 >= 2)
  {
    if (v23 <= 3) {
      uint64_t v46 = v23;
    }
    else {
      uint64_t v46 = 4;
    }
    switch(v46)
    {
      case 1:
        int v47 = *v21;
        goto LABEL_85;
      case 2:
        int v47 = *(unsigned __int16 *)v21;
        goto LABEL_85;
      case 3:
        int v47 = *(unsigned __int16 *)v21 | (v21[2] << 16);
        goto LABEL_85;
      case 4:
        int v47 = *(_DWORD *)v21;
LABEL_85:
        int v48 = (v47 | (v45 << (8 * v23))) + 2;
        unsigned int v44 = v47 + 2;
        if (v23 < 4) {
          unsigned int v44 = v48;
        }
        break;
      default:
        break;
    }
  }
  if (v44 == 1) {
    goto LABEL_55;
  }
LABEL_88:
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(v21, 1, v5))
  {
    memcpy(v19, v21, v22);
  }
  else
  {
    (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 16))(v19, v21, v5);
    (*(void (**)(id *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  *((unsigned char *)v19 + v23) = 0;
  return __dst;
}

uint64_t *sub_25923EE50(uint64_t *__dst, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 84);
  uint64_t v8 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  uint64_t v9 = ~v8;
  LODWORD(v10) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v10 = *a2;
  }
  if ((v10 + 1) > 1)
  {
    uint64_t v19 = (v8 + 8) & v9;
    if (!v7) {
      ++v6;
    }
    if (v6 <= 8) {
      unint64_t v6 = 8;
    }
    memcpy(__dst, a2, v6 + v19 + 1);
  }
  else
  {
    *__dst = *a2;
    uint64_t v11 = (void *)(((unint64_t)__dst + v8 + 8) & v9);
    uint64_t v12 = (unsigned __int8 *)(((unint64_t)a2 + v8 + 8) & v9);
    if (v7) {
      size_t v13 = v6;
    }
    else {
      size_t v13 = v6 + 1;
    }
    if (v13 <= 8) {
      uint64_t v14 = 8;
    }
    else {
      uint64_t v14 = v13;
    }
    unsigned int v15 = v12[v14];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v17 = v14;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *v12;
          goto LABEL_24;
        case 2:
          int v18 = *(unsigned __int16 *)v12;
          goto LABEL_24;
        case 3:
          int v18 = *(unsigned __int16 *)v12 | (v12[2] << 16);
          goto LABEL_24;
        case 4:
          int v18 = *(_DWORD *)v12;
LABEL_24:
          int v20 = (v18 | (v16 << (8 * v14))) + 2;
          unsigned int v15 = v18 + 2;
          if (v14 < 4) {
            unsigned int v15 = v20;
          }
          break;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
      *uint64_t v11 = *(void *)v12;
      *((unsigned char *)v11 + v14) = 1;
    }
    else
    {
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4))
      {
        memcpy(v11, v12, v13);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 32))(v11, v12, v4);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
      }
      *((unsigned char *)v11 + v14) = 0;
    }
  }
  return __dst;
}

char *sub_25923F084(char *__dst, char *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 84);
  uint64_t v9 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v10 = v9 | 7;
  uint64_t v11 = ~(v9 | 7);
  uint64_t v12 = (v9 + 15) & v11;
  uint64_t v13 = *(void *)__dst;
  LODWORD(v14) = -1;
  if (*(void *)__dst >= 0xFFFFFFFFuLL) {
    LODWORD(v13) = -1;
  }
  unsigned int v15 = v13 + 1;
  uint64_t v16 = *(void *)__src;
  if (*(void *)__src < 0xFFFFFFFFuLL) {
    uint64_t v14 = *(void *)__src;
  }
  unsigned int v17 = v14 + 1;
  if (v15 > 1)
  {
    if (v17 <= 1)
    {
      *(void *)__dst = v16;
      uint64_t v19 = (id *)((unint64_t)&__dst[v10 + 8] & v11);
      uint64_t v21 = (unsigned __int8 *)((unint64_t)&__src[v10 + 8] & v11);
      if (v8) {
        size_t v22 = v7;
      }
      else {
        size_t v22 = v7 + 1;
      }
      if (v22 <= 8) {
        uint64_t v23 = 8;
      }
      else {
        uint64_t v23 = v22;
      }
      unsigned int v28 = v21[v23];
      unsigned int v29 = v28 - 2;
      if (v28 >= 2)
      {
        if (v23 <= 3) {
          uint64_t v30 = v23;
        }
        else {
          uint64_t v30 = 4;
        }
        switch(v30)
        {
          case 1:
            int v31 = *v21;
            goto LABEL_52;
          case 2:
            int v31 = *(unsigned __int16 *)v21;
            goto LABEL_52;
          case 3:
            int v31 = *(unsigned __int16 *)((unint64_t)&__src[v10 + 8] & v11) | (*(unsigned __int8 *)(((unint64_t)&__src[v10 + 8] & v11) + 2) << 16);
            goto LABEL_52;
          case 4:
            int v31 = *(_DWORD *)v21;
LABEL_52:
            int v39 = (v31 | (v29 << (8 * v23))) + 2;
            unsigned int v28 = v31 + 2;
            if (v23 < 4) {
              unsigned int v28 = v39;
            }
            break;
          default:
            break;
        }
      }
      if (v28 != 1) {
        goto LABEL_88;
      }
LABEL_55:
      *uint64_t v19 = *(id *)v21;
      *((unsigned char *)v19 + v23) = 1;
      return __dst;
    }
    if (!v8) {
      ++v7;
    }
    if (v7 <= 8) {
      unint64_t v7 = 8;
    }
    uint64_t v38 = v7 + v12;
LABEL_66:
    memcpy(__dst, __src, v38 + 1);
    return __dst;
  }
  if (v17 > 1)
  {
    char v32 = (id *)((unint64_t)&__dst[v10 + 8] & v11);
    if (!v8) {
      ++v7;
    }
    if (v7 <= 8) {
      uint64_t v33 = 8;
    }
    else {
      uint64_t v33 = v7;
    }
    unsigned int v34 = *((unsigned __int8 *)v32 + v33);
    unsigned int v35 = v34 - 2;
    if (v34 >= 2)
    {
      if (v33 <= 3) {
        uint64_t v36 = v33;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *(unsigned __int8 *)v32;
          goto LABEL_59;
        case 2:
          int v37 = *(unsigned __int16 *)v32;
          goto LABEL_59;
        case 3:
          int v37 = *(unsigned __int16 *)((unint64_t)&__dst[v10 + 8] & v11) | (*(unsigned __int8 *)(((unint64_t)&__dst[v10 + 8] & v11) + 2) << 16);
          goto LABEL_59;
        case 4:
          int v37 = *(_DWORD *)v32;
LABEL_59:
          int v40 = (v37 | (v35 << (8 * v33))) + 2;
          unsigned int v34 = v37 + 2;
          if (v33 < 4) {
            unsigned int v34 = v40;
          }
          break;
        default:
          break;
      }
    }
    if (v34 == 1)
    {
    }
    else if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(v32, 1, v5))
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(v32, v5);
    }
    uint64_t v38 = v33 + v12;
    goto LABEL_66;
  }
  *(void *)__dst = v16;
  unint64_t v18 = (unint64_t)&__dst[v10 + 8];
  uint64_t v19 = (id *)(v18 & v11);
  unint64_t v20 = (unint64_t)&__src[v10 + 8];
  uint64_t v21 = (unsigned __int8 *)(v20 & v11);
  if ((v18 & v11) == (v20 & v11)) {
    return __dst;
  }
  if (v8) {
    size_t v22 = v7;
  }
  else {
    size_t v22 = v7 + 1;
  }
  if (v22 <= 8) {
    uint64_t v23 = 8;
  }
  else {
    uint64_t v23 = v22;
  }
  unsigned int v24 = *((unsigned __int8 *)v19 + v23);
  unsigned int v25 = v24 - 2;
  if (v24 >= 2)
  {
    if (v23 <= 3) {
      uint64_t v26 = v23;
    }
    else {
      uint64_t v26 = 4;
    }
    switch(v26)
    {
      case 1:
        int v27 = *(unsigned __int8 *)v19;
        goto LABEL_70;
      case 2:
        int v27 = *(unsigned __int16 *)v19;
        goto LABEL_70;
      case 3:
        int v27 = *(unsigned __int16 *)(v18 & v11) | (*(unsigned __int8 *)((v18 & v11) + 2) << 16);
        goto LABEL_70;
      case 4:
        int v27 = *(_DWORD *)v19;
LABEL_70:
        int v41 = (v27 | (v25 << (8 * v23))) + 2;
        unsigned int v24 = v27 + 2;
        if (v23 < 4) {
          unsigned int v24 = v41;
        }
        break;
      default:
        break;
    }
  }
  if (v24 == 1)
  {
  }
  else if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v6 + 48))(v19, 1, v5))
  {
    (*(void (**)(id *, uint64_t))(v6 + 8))(v19, v5);
  }
  unsigned int v42 = v21[v23];
  unsigned int v43 = v42 - 2;
  if (v42 >= 2)
  {
    if (v23 <= 3) {
      uint64_t v44 = v23;
    }
    else {
      uint64_t v44 = 4;
    }
    switch(v44)
    {
      case 1:
        int v45 = *v21;
        goto LABEL_85;
      case 2:
        int v45 = *(unsigned __int16 *)v21;
        goto LABEL_85;
      case 3:
        int v45 = *(unsigned __int16 *)v21 | (v21[2] << 16);
        goto LABEL_85;
      case 4:
        int v45 = *(_DWORD *)v21;
LABEL_85:
        int v46 = (v45 | (v43 << (8 * v23))) + 2;
        unsigned int v42 = v45 + 2;
        if (v23 < 4) {
          unsigned int v42 = v46;
        }
        break;
      default:
        break;
    }
  }
  if (v42 == 1) {
    goto LABEL_55;
  }
LABEL_88:
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(v21, 1, v5))
  {
    memcpy(v19, v21, v22);
  }
  else
  {
    (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 32))(v19, v21, v5);
    (*(void (**)(id *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0, 1, v5);
  }
  *((unsigned char *)v19 + v23) = 0;
  return __dst;
}

uint64_t sub_25923F594(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v3 + 84)) {
    unint64_t v4 = *(void *)(v3 + 64);
  }
  else {
    unint64_t v4 = *(void *)(v3 + 64) + 1;
  }
  if (v4 <= 8) {
    unint64_t v4 = 8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7FFFFFFE) {
    goto LABEL_25;
  }
  uint64_t v5 = v4
     + ((unsigned __int16)((*(_WORD *)(v3 + 80) & 0xF8) + 15) & (unsigned __int16)~(*(_WORD *)(v3 + 80) & 0xF8) & 0x1F8)
     + 1;
  char v6 = 8 * v5;
  if (v5 > 3) {
    goto LABEL_9;
  }
  unsigned int v9 = (a2 - 2147483645 + ~(-1 << v6)) >> v6;
  if (v9 > 0xFFFE)
  {
    int v7 = *(_DWORD *)((char *)a1 + v5);
    if (v7) {
      goto LABEL_17;
    }
LABEL_25:
    uint64_t v11 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v11) = -1;
    }
    if ((v11 + 1) < 2) {
      LODWORD(v11) = 0;
    }
    if (v11 >= 2) {
      return (v11 - 1);
    }
    else {
      return 0;
    }
  }
  if (v9 > 0xFE)
  {
    int v7 = *(unsigned __int16 *)((char *)a1 + v5);
    if (*(unsigned __int16 *)((char *)a1 + v5)) {
      goto LABEL_17;
    }
    goto LABEL_25;
  }
  if (!v9) {
    goto LABEL_25;
  }
LABEL_9:
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_25;
  }
LABEL_17:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 2147483646;
}

void sub_25923F738(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = (unsigned __int16)((*(_WORD *)(v5 + 80) & 0xF8) + 15) & (unsigned __int16)~(*(_WORD *)(v5 + 80) & 0xF8) & 0x1F8;
  if (!*(_DWORD *)(v5 + 84)) {
    ++v6;
  }
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  size_t v8 = v6 + v7 + 1;
  if (a3 <= 0x7FFFFFFD)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = (a3 - 2147483645 + ~(-1 << (8 * v8))) >> (8 * v8);
    if (v12 > 0xFFFE)
    {
      int v9 = 4;
    }
    else if (v12 >= 0xFF)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 != 0;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0x7FFFFFFD)
  {
    unsigned int v10 = a2 - 2147483646;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        break;
      case 3:
LABEL_36:
        __break(1u);
        JUMPOUT(0x25923F960);
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_24;
      case 3:
        goto LABEL_36;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      default:
LABEL_24:
        if (a2) {
LABEL_25:
        }
          *(void *)a1 = a2 + 1;
        break;
    }
  }
}

void sub_25923F988(_WORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(_DWORD *)(v4 + 84)) {
    unint64_t v5 = *(void *)(v4 + 64);
  }
  else {
    unint64_t v5 = *(void *)(v4 + 64) + 1;
  }
  if (v5 <= 8) {
    LODWORD(v5) = 8;
  }
  if (a2 > 0x7FFFFFFE)
  {
    __int16 v6 = *(_DWORD *)(v4 + 80) & 0xF8;
    size_t v7 = v5 + ((unsigned __int16)(v6 + 15) & (unsigned __int16)~v6 & 0x1F8) + 1;
    if (v7 <= 3) {
      int v8 = ~(-1 << (8 * v7));
    }
    else {
      int v8 = -1;
    }
    if (v7)
    {
      int v9 = v8 & (a2 - 0x7FFFFFFF);
      if (v7 <= 3) {
        int v10 = v7;
      }
      else {
        int v10 = 4;
      }
      bzero(a1, v7);
      switch(v10)
      {
        case 2:
          *a1 = v9;
          break;
        case 3:
          *a1 = v9;
          *((unsigned char *)a1 + 2) = BYTE2(v9);
          break;
        case 4:
          *(_DWORD *)a1 = v9;
          break;
        default:
          *(unsigned char *)a1 = v9;
          break;
      }
    }
  }
  else if (a2)
  {
    *(void *)a1 = a2;
  }
}

uint64_t type metadata accessor for ChannelStateMachine.NextAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25923FAF0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_25923FB4C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_25923FB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_25923FBA4()
{
  uint64_t result = sub_25930A240();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25923FC4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  int v9 = v7 + 16;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v10 = *(void *)(v5 + 64);
  }
  else {
    size_t v10 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v11 = ((v7 + 16) & ~(unint64_t)v7) + v10;
  int v12 = v7 & 0x100000;
  if (v8 > 7 || v12 != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    uint64_t *v3 = *a2;
    unint64_t v3 = (uint64_t *)(v15 + ((v8 & 0xF8 ^ 0x1F8) & v9));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v16 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v17 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v16 = *v17;
    unint64_t v18 = (void *)(((unint64_t)v16 + v8 + 8) & ~v8);
    uint64_t v19 = (const void *)(((unint64_t)v17 + v8 + 8) & ~v8);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(((unint64_t)v17 + v8 + 8) & ~v8, 1, v4))
    {
      memcpy(v18, v19, v10);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v18, v19, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v4);
    }
  }
  return v3;
}

uint64_t sub_25923FDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v2 - 8);
  unint64_t v3 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v2);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
    return v5(v3, v2);
  }
  return result;
}

void *sub_25923FEA4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  int v9 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  size_t v10 = (const void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v11 = *(void *)(v7 + 64);
    }
    else {
      size_t v11 = *(void *)(v7 + 64) + 1;
    }
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  return a1;
}

void *sub_25923FFD4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  int v9 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  size_t v10 = (void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  size_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(v9, 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      return a1;
    }
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(v9, v10, v6);
      return a1;
    }
    unsigned int v17 = *(void (**)(void *, uint64_t))(v7 + 8);
    uint64_t v16 = v7 + 8;
    v17(v9, v6);
    int v14 = *(_DWORD *)(v16 + 76);
    size_t v15 = *(void *)(v16 + 56);
  }
  if (v14) {
    size_t v18 = v15;
  }
  else {
    size_t v18 = v15 + 1;
  }
  memcpy(v9, v10, v18);
  return a1;
}

void *sub_259240174(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  int v9 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  size_t v10 = (const void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    if (*(_DWORD *)(v7 + 84)) {
      size_t v11 = *(void *)(v7 + 64);
    }
    else {
      size_t v11 = *(void *)(v7 + 64) + 1;
    }
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  return a1;
}

void *sub_2592402A4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  int v9 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  size_t v10 = (void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  size_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(v9, 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v10, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      return a1;
    }
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(v9, v10, v6);
      return a1;
    }
    unsigned int v17 = *(void (**)(void *, uint64_t))(v7 + 8);
    uint64_t v16 = v7 + 8;
    v17(v9, v6);
    int v14 = *(_DWORD *)(v16 + 76);
    size_t v15 = *(void *)(v16 + 56);
  }
  if (v14) {
    size_t v18 = v15;
  }
  else {
    size_t v18 = v15 + 1;
  }
  memcpy(v9, v10, v18);
  return a1;
}

uint64_t sub_259240444(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  int v5 = *(_DWORD *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  if (v6 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = v6;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v9;
  }
  if (!a2) {
    return 0;
  }
  int v10 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_28;
  }
  uint64_t v11 = v9 + ((v8 + 16) & ~v8);
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_28:
      unsigned int v17 = (unint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v6 > 0x7FFFFFFE)
      {
        unsigned int v19 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)v17 + v8 + 8) & ~v8);
        if (v19 >= 2) {
          return v19 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        unint64_t v18 = *v17;
        if (v18 >= 0xFFFFFFFF) {
          LODWORD(v18) = -1;
        }
        if ((v18 + 1) >= 2) {
          return v18;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_28;
  }
LABEL_20:
  int v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v11 | v16) + 1;
}

void sub_259240638(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  size_t v12 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (!v8) {
    ++v12;
  }
  size_t v13 = ((v11 + 16) & ~v11) + v12;
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 == 0 || !v14)
  {
LABEL_17:
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  if (v13 > 3)
  {
    int v6 = 1;
    if (v10 < a2) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
  unsigned int v16 = ((v15 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
  if (!HIWORD(v16))
  {
    if (v16 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v16 > 1;
    }
    goto LABEL_17;
  }
  int v6 = 4;
  if (v10 < a2)
  {
LABEL_18:
    unsigned int v17 = ~v10 + a2;
    if (v13 < 4)
    {
      int v18 = (v17 >> (8 * v13)) + 1;
      if (v13)
      {
        int v19 = v17 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if (v13 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v13 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v13] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v18;
        return;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v13] = v18;
        return;
      default:
        return;
    }
  }
LABEL_25:
  switch(v6)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x259240964);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        unint64_t v20 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        if (v9 > 0x7FFFFFFE)
        {
          uint64_t v21 = (unsigned char *)(((unint64_t)v20 + v11 + 8) & ~v11);
          if (v9 >= a2)
          {
            uint64_t v25 = a2 + 1;
            uint64_t v26 = *(void (**)(unint64_t, uint64_t))(v7 + 56);
            v26(((unint64_t)v20 + v11 + 8) & ~v11, v25);
          }
          else
          {
            if (v12 <= 3) {
              int v22 = ~(-1 << (8 * v12));
            }
            else {
              int v22 = -1;
            }
            if (v12)
            {
              int v23 = v22 & (~v9 + a2);
              if (v12 <= 3) {
                int v24 = v12;
              }
              else {
                int v24 = 4;
              }
              bzero(v21, v12);
              switch(v24)
              {
                case 2:
                  *(_WORD *)uint64_t v21 = v23;
                  break;
                case 3:
                  *(_WORD *)uint64_t v21 = v23;
                  v21[2] = BYTE2(v23);
                  break;
                case 4:
                  *(_DWORD *)uint64_t v21 = v23;
                  break;
                default:
                  *uint64_t v21 = v23;
                  break;
              }
            }
          }
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *unint64_t v20 = 0;
          *(_DWORD *)unint64_t v20 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *unint64_t v20 = a2;
        }
      }
      return;
  }
}

uint64_t initializeBufferWithCopyOfBuffer for StoredPhotoLayout.Rect(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void sub_2592409D0(uint64_t a1)
{
}

void *sub_2592409E4(void *a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  sub_259239FC0(*(id *)a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  return a1;
}

uint64_t sub_259240A54(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  sub_259239FC0(*(id *)a2, v4, v5, v6, v7);
  unsigned int v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  sub_25923A06C(v9, v10, v11, v12, v13);
  return a1;
}

uint64_t sub_259240AD4(uint64_t a1, _OWORD *a2)
{
  id v3 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  long long v8 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = a2[2];
  sub_25923A06C(v3, v5, v4, v6, v7);
  return a1;
}

uint64_t sub_259240B20(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x3FFF);
  }
  unsigned int v3 = (((*(void *)(a1 + 32) >> 50) >> 13) | (2
                                                            * ((*(void *)(a1 + 32) >> 50) & 0x1C00 | ((*(void *)(a1 + 32) & 7) << 7) | (*(void *)(a1 + 8) >> 57) & 0x78 | *(void *)(a1 + 8) & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_259240B9C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x3FFF;
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 1) & 0x1FFF | ((-a2 & 0x3FFF) << 13);
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
      *(void *)(result + 40) = 0;
    }
  }
  return result;
}

uint64_t sub_259240C20(uint64_t a1)
{
  return *(void *)(a1 + 32) >> 63;
}

uint64_t sub_259240C2C(uint64_t result)
{
  *(void *)(result + 32) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_259240C3C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *(void *)(result + 8) &= 0xFFFFFFFFFFFFFF8uLL;
  *(void *)(result + 32) = v2;
  return result;
}

uint64_t type metadata accessor for ChannelStateMachine.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259240C74()
{
  return swift_getWitnessTable();
}

uint64_t sub_259240C90()
{
  return swift_getWitnessTable();
}

void *sub_259240CAC(void *a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  *a1 = v3;
  return a1;
}

void sub_259240CE0(id *a1)
{
}

void **sub_259240CE8(void **a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = v3;

  return a1;
}

void **sub_259240D24(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_259240D58(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_259240DA8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

void *sub_259240DFC(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

uint64_t type metadata accessor for ChannelStateMachine.Termination()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ChannelStorage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259240E5C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DCA8);
  uint64_t v0 = swift_allocObject();
  *(_DWORD *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = 0;
  sub_25923C200((uint64_t *)&v3);
  type metadata accessor for ChannelStateMachine();
  uint64_t v1 = sub_259243A20();
  sub_259243868((uint64_t)&v3);
  return v1;
}

uint64_t sub_259240F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  uint64_t v7 = sub_25930A240();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259240FB4, 0, 0);
}

uint64_t sub_259240FB4()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  type metadata accessor for ChannelStateMachine();
  type metadata accessor for ChannelStateMachine.SendAction();
  sub_2592438E8((void (*)(uint64_t))sub_25924361C, (uint64_t)v5, v4);
  swift_task_dealloc();
  uint64_t v6 = v0[2];
  if (v6)
  {
    if (v6 == 1)
    {
      uint64_t v8 = v0[7];
      uint64_t v7 = v0[8];
      uint64_t v10 = v0[5];
      uint64_t v9 = v0[6];
      uint64_t v11 = v0[3];
      uint64_t v12 = v0[4];
      os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
      uint64_t v13 = *(void *)(v10 + 16);
      *(void *)(v10 + 16) = v13 + 1;
      os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
      BOOL v14 = (void *)swift_task_alloc();
      v0[12] = v14;
      void v14[2] = v9;
      v14[3] = v8;
      v14[4] = v7;
      v14[5] = v12;
      v14[6] = v10;
      v14[7] = v11;
      v14[8] = v13;
      unsigned int v15 = (void *)swift_task_alloc();
      v0[13] = v15;
      v15[2] = v9;
      v15[3] = v8;
      v15[4] = v7;
      v15[5] = v12;
      v15[6] = v10;
      v15[7] = v13;
      unsigned int v16 = (void *)swift_task_alloc();
      v0[14] = v16;
      *unsigned int v16 = v0;
      v16[1] = sub_2592412CC;
      return MEMORY[0x270FA2338](v16, &unk_26A37DCA0);
    }
    uint64_t v18 = v0[10];
    uint64_t v17 = v0[11];
    uint64_t v19 = v0[9];
    uint64_t v20 = v0[6];
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, void, uint64_t))(v21 + 16))(v17, v0[3], v20);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    (*(void (**)(void, uint64_t, uint64_t))(v18 + 32))(*(void *)(*(void *)(v6 + 64) + 40), v17, v19);
    swift_continuation_throwingResume();
  }
  swift_task_dealloc();
  int v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_2592412CC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_259241400, 0, 0);
}

uint64_t sub_259241400()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_259241460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_25930A240();
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  BOOL v14 = (char *)v25 - v13;
  uint64_t v15 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v26 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v32 = a1;
  type metadata accessor for ChannelStateMachine();
  type metadata accessor for ChannelStateMachine.FinishAction();
  sub_2592438E8((void (*)(uint64_t))sub_259243544, (uint64_t)v28, a2);
  uint64_t v17 = v34;
  if (v34)
  {
    uint64_t v18 = *(void *)(v34 + 16);
    v25[0] = v35;
    v25[1] = 0;
    if (v18)
    {
      uint64_t v19 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v18; ++i)
      {
        if (*(void *)(v17 + 8 * i + 32)) {
          swift_continuation_throwingResume();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v15 = v19;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v21 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v14, a1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a5) == 1)
    {
      uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v14, v11);
      uint64_t v33 = v25[0];
      MEMORY[0x270FA5388](v22);
      v25[-4] = a4;
      v25[-3] = a5;
      v25[-2] = a6;
      sub_25930A240();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_259309F50();
      sub_25930A240();
      sub_259309E70();
      swift_getWitnessTable();
      sub_259309D30();
      sub_2592435BC(v17);
    }
    else
    {
      int v23 = v26;
      uint64_t v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v26, v14, a5);
      uint64_t v33 = v25[0];
      MEMORY[0x270FA5388](v24);
      v25[-4] = a4;
      v25[-3] = a5;
      v25[-2] = a6;
      v25[-1] = v23;
      sub_25930A240();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
      sub_259309F50();
      sub_25930A240();
      sub_259309E70();
      swift_getWitnessTable();
      sub_259309D30();
      sub_2592435BC(v17);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, a5);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_2592418D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v6[8] = sub_25930A240();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v7 = sub_25930A920();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  uint64_t Action = type metadata accessor for ChannelStateMachine.NextAction();
  v6[12] = Action;
  v6[13] = *(void *)(Action - 8);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259241A5C, 0, 0);
}

uint64_t sub_259241A5C()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v4 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[3];
  uint64_t v9 = (void *)swift_task_alloc();
  v9[2] = v7;
  v9[3] = v6;
  v9[4] = v5;
  type metadata accessor for ChannelStateMachine();
  sub_2592438E8((void (*)(uint64_t))sub_25924283C, (uint64_t)v9, v8);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v1, 1, TupleTypeMetadata2) == 1)
  {
    uint64_t v12 = v0[6];
    uint64_t v11 = v0[7];
    uint64_t v14 = v0[4];
    uint64_t v13 = v0[5];
    uint64_t v15 = v0[3];
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    uint64_t v16 = *(void *)(v14 + 16);
    *(void *)(v14 + 16) = v16 + 1;
    os_unfair_lock_unlock((os_unfair_lock_t)(v14 + 24));
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    v17[2] = v13;
    v17[3] = v12;
    v17[4] = v11;
    v17[5] = v15;
    v17[6] = v14;
    v17[7] = v16;
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    v18[2] = v13;
    v18[3] = v12;
    v18[4] = v11;
    v18[5] = v15;
    v18[6] = v14;
    v18[7] = v16;
    uint64_t v19 = (void *)swift_task_alloc();
    v0[18] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_259241DC4;
    uint64_t v20 = v0[2];
    return MEMORY[0x270FA2338](v20, &unk_26A37DC80);
  }
  else
  {
    uint64_t v21 = (char *)v0[14];
    uint64_t v22 = *(void *)v21;
    (*(void (**)(void, char *, void))(v0[10] + 32))(v0[11], &v21[*(int *)(TupleTypeMetadata2 + 48)], v0[9]);
    if (v22) {
      swift_continuation_throwingResume();
    }
    uint64_t v23 = v0[15];
    uint64_t v24 = v0[12];
    uint64_t v25 = v0[13];
    uint64_t v27 = v0[10];
    uint64_t v26 = v0[11];
    uint64_t v28 = v0[9];
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_259243B1C(v28, WitnessTable);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = (uint64_t (*)(void))v0[1];
    return v30();
  }
}

uint64_t sub_259241DC4()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_259241FA8;
  }
  else {
    uint64_t v2 = sub_259241F18;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_259241F18()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_259241FA8()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_259242040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a7;
  v8[16] = a8;
  v8[13] = a5;
  v8[14] = a6;
  v8[11] = a3;
  v8[12] = a4;
  v8[10] = a2;
  return MEMORY[0x270FA2498](sub_25924206C, 0, 0);
}

uint64_t sub_25924206C()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v6 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v7 = v0[10];
  v0[2] = v0;
  v0[3] = sub_259242140;
  uint64_t v8 = swift_continuation_init();
  sub_25924221C(v8, v7, v6, v5, v4, v3, v2, v1);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_259242140()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 8);
  return v1();
}

void sub_25924221C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = sub_25930A240();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = &v21[-v17];
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v25 = a1;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  type metadata accessor for ChannelStateMachine();
  type metadata accessor for ChannelStateMachine.SendSuspendedAction();
  sub_25930A240();
  sub_2592438E8((void (*)(uint64_t))sub_2592437FC, (uint64_t)v21, a2);
  uint64_t v19 = v28;
  if (v28 != 2)
  {
    if (v28 != 1)
    {
      swift_continuation_throwingResume();
      if (!v19) {
        return;
      }
      uint64_t v20 = *(void *)(a6 - 8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v20 + 16))(v18, a4, a6);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, a6);
      (*(void (**)(void, unsigned char *, uint64_t))(v16 + 32))(*(void *)(*(void *)(v19 + 64) + 40), v18, v15);
    }
    swift_continuation_throwingResume();
  }
}

uint64_t sub_259242440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v8[2] = a4;
  v8[3] = a5;
  v8[4] = a6;
  v8[5] = a3;
  type metadata accessor for ChannelStateMachine();
  type metadata accessor for ChannelStateMachine.SendCancelledAction();
  sub_2592438E8((void (*)(uint64_t))sub_259243768, (uint64_t)v8, a1);
  uint64_t result = v9;
  if (v9 >= 2) {
    return swift_continuation_throwingResume();
  }
  return result;
}

uint64_t *sub_2592424F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 - 8);
  uint64_t result = (uint64_t *)MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *result;
  if (*result)
  {
    (*(void (**)(char *))(v5 + 16))(v8);
    uint64_t v10 = sub_25930A770();
    if (v10)
    {
      uint64_t v11 = v10;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a4);
    }
    else
    {
      uint64_t v11 = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v12, v8, a4);
    }
    uint64_t v16 = v11;
    uint64_t v13 = sub_25930A240();
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F3D70);
    return (uint64_t *)sub_25924267C((uint64_t)&v16, v9, v13, v14);
  }
  return result;
}

uint64_t sub_25924267C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v6, a1, a4);
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_259242710(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_25930A240();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v10 - v7;
  uint64_t v9 = *a1;
  if (v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v8, 1, 1, a2);
    (*(void (**)(void, char *, uint64_t))(v5 + 32))(*(void *)(*(void *)(v9 + 64) + 40), v8, v4);
    return swift_continuation_throwingResume();
  }
  return result;
}

uint64_t sub_25924283C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ChannelStateMachine();
  return sub_25923B58C(v2, a1);
}

uint64_t sub_25924288C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_2592428B8, 0, 0);
}

uint64_t sub_2592428B8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  long long v4 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v3 + 32) = v1;
  *(_OWORD *)(v3 + 40) = v4;
  *(void *)(v3 + 56) = v2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_26A37DC88 + dword_26A37DC88);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  sub_25930A240();
  *uint64_t v5 = v0;
  v5[1] = sub_2592429D0;
  uint64_t v6 = *(void *)(v0 + 16);
  return v8(v6, 0, 0, (uint64_t)sub_2592434CC, v3);
}

uint64_t sub_2592429D0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_259242B0C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_259242B0C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_259242B70(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 40);
  long long v8 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = sub_25921D238;
  *(void *)(v6 + 64) = v4;
  *(_OWORD *)(v6 + 48) = v8;
  *(void *)(v6 + 40) = v5;
  *(_OWORD *)(v6 + 24) = v7;
  *(void *)(v6 + 16) = a1;
  return MEMORY[0x270FA2498](sub_2592428B8, 0, 0);
}

uint64_t sub_259242C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v47 = a2;
  uint64_t v46 = sub_25930A240();
  uint64_t v44 = *(void *)(v46 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v46);
  unsigned int v42 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  int v41 = (char *)&v40 - v15;
  MEMORY[0x270FA5388](v14);
  unsigned int v43 = (char *)&v40 - v16;
  Suspendeduint64_t Action = type metadata accessor for ChannelStateMachine.NextSuspendedAction();
  uint64_t v18 = sub_25930A240();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (uint64_t *)((char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v40 - v23;
  uint64_t v49 = a5;
  uint64_t v50 = a6;
  uint64_t v51 = a7;
  uint64_t v52 = a1;
  uint64_t v45 = a1;
  uint64_t v53 = a4;
  type metadata accessor for ChannelStateMachine();
  sub_2592438E8((void (*)(uint64_t))sub_2592434DC, (uint64_t)v48, v47);
  (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 16))(v22, v24, v18);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(SuspendedAction - 8) + 48))(v22, 1, SuspendedAction) != 1)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v54 = *v22;
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F3D70);
        sub_25924267C((uint64_t)&v54, v45, v46, v26);
      }
      else
      {
        uint64_t v32 = *v22;
        __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A37CAB0);
        uint64_t v33 = v46;
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v35 = v44;
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
        int v37 = v42;
        v36(v42, (char *)v22 + *(int *)(TupleTypeMetadata2 + 48), v33);
        if (v32) {
          swift_continuation_throwingResume();
        }
        uint64_t v38 = v43;
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v43, v37, v33);
        v36(*(char **)(*(void *)(v45 + 64) + 40), v38, v33);
        swift_continuation_throwingResume();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v33);
      }
    }
    else
    {
      uint64_t v28 = v43;
      uint64_t v27 = v44;
      uint64_t v29 = *(void (**)(char *, uint64_t *, uint64_t))(v44 + 32);
      uint64_t v30 = v46;
      v29(v43, v22, v46);
      uint64_t v31 = v41;
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v41, v28, v30);
      v29(*(char **)(*(void *)(v45 + 64) + 40), (uint64_t *)v31, v30);
      swift_continuation_throwingResume();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v30);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v24, v18);
}

uint64_t sub_25924309C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    uint64_t v6 = sub_259309E90();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  return MEMORY[0x270FA2498](sub_259243130, v6, v8);
}

uint64_t sub_259243130()
{
  uint64_t v1 = (void (*)(uint64_t))v0[11];
  uint64_t v2 = v0[10];
  v0[2] = v0;
  v0[7] = v2;
  v0[3] = sub_2592431D8;
  uint64_t v3 = swift_continuation_init();
  v1(v3);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2592431D8()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

void sub_2592432E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_25930A240();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v16[-v13];
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v19 = a6;
  uint64_t v20 = a3;
  type metadata accessor for ChannelStateMachine();
  type metadata accessor for ChannelStateMachine.NextCancelledAction();
  sub_2592438E8((void (*)(uint64_t))sub_2592434A0, (uint64_t)v16, a1);
  unint64_t v15 = v21;
  if (v21 >= 2)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(v14, 1, 1, a4);
    (*(void (**)(void, unsigned char *, uint64_t))(v12 + 32))(*(void *)(*(void *)(v15 + 64) + 40), v14, v11);
    swift_continuation_throwingResume();
  }
}

uint64_t sub_259243488()
{
  return sub_259243750((uint64_t (*)(void, void, void, void, void, void))sub_2592432E0);
}

uint64_t sub_2592434A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_259243794((uint64_t (*)(uint64_t, uint64_t))sub_25923C044, a1);
}

uint64_t sub_2592434CC(uint64_t a1)
{
  return sub_259242C44(a1, v1[5], v1[6], v1[7], v1[2], v1[3], v1[4]);
}

uint64_t sub_2592434DC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = (void *)type metadata accessor for ChannelStateMachine();
  return sub_25923BAA0(v3, v4, v5, a1);
}

uint64_t sub_259243544@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = type metadata accessor for ChannelStateMachine();
  uint64_t result = sub_25923AF2C(v3, v4);
  *a1 = result;
  a1[1] = v6;
  return result;
}

uint64_t sub_25924359C(uint64_t *a1)
{
  return sub_259242710(a1, *(void *)(v1 + 16));
}

uint64_t sub_2592435BC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_2592435FC(uint64_t a1)
{
  return sub_2592424F8(a1, v1[5], v1[2], v1[3]);
}

uint64_t sub_25924361C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ChannelStateMachine();
  uint64_t result = sub_25923A4A8();
  *a1 = result;
  return result;
}

uint64_t sub_25924366C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v0 + 40);
  long long v7 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_2592438A0;
  *(void *)(v5 + 128) = v2;
  *(_OWORD *)(v5 + 112) = v7;
  *(void *)(v5 + 96) = v3;
  *(void *)(v5 + 104) = v4;
  *(_OWORD *)(v5 + 80) = v6;
  return MEMORY[0x270FA2498](sub_25924206C, 0, 0);
}

uint64_t sub_259243738()
{
  return sub_259243750(sub_259242440);
}

uint64_t sub_259243750(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[5], v1[6], v1[7], v1[2], v1[3], v1[4]);
}

uint64_t sub_259243768@<X0>(uint64_t *a1@<X8>)
{
  return sub_259243794(sub_25923AB30, a1);
}

uint64_t sub_259243794@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 40);
  uint64_t v6 = type metadata accessor for ChannelStateMachine();
  uint64_t result = a1(v5, v6);
  *a2 = result;
  return result;
}

uint64_t sub_2592437FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[5];
  uint64_t v5 = v1[6];
  uint64_t v4 = v1[7];
  uint64_t v6 = (void *)type metadata accessor for ChannelStateMachine();
  uint64_t result = sub_25923A638(v3, v5, v4, v6);
  *a1 = result;
  return result;
}

uint64_t sub_259243868(uint64_t a1)
{
  return a1;
}

uint64_t sub_2592438A4()
{
  return swift_initClassMetadata2();
}

void sub_2592438E8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_25924399C()
{
  MEMORY[0x25A2DACE0]();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagedCriticalState.LockedBuffer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ManagedCriticalState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259243A20()
{
  return sub_25930A460();
}

uint64_t sub_259243A84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + *MEMORY[0x263F8DD00]) - 8) + 16))(a2, v3);
}

uint64_t sub_259243B1C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_259243B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v18 - v11;
  MEMORY[0x270FA5388](v10);
  (*(void (**)(char *))(v14 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_259243D4C(a1, (uint64_t)v12, a2);
  if (v2)
  {
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v16(v9, v12, v5);
    if (sub_25930A770())
    {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    else
    {
      swift_allocError();
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(v17, v9, v5);
    }
  }
  return result;
}

uint64_t sub_259243D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (swift_getEnumCaseMultiPayload() != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 32))(a3, v3);
  }
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a1 + 24) - 8) + 32))(a2, v3, *(void *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t _s10PhotosFace20MakeThrowingSequenceVyACyxGxcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_259243E54()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_259243EE4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_259244040(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x259244258);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for UnsafeTransfer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259244298(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v3 - 8);
  unsigned int v5 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  BOOL v9 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFB8);
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v75 = (uint64_t)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (!v12) {
    return v13;
  }
  uint64_t v62 = v6;
  v56[1] = v1;
  uint64_t v76 = MEMORY[0x263F8EE78];
  sub_25925CC74(0, v12, 0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFD0);
  uint64_t v14 = a1
      + ((*(unsigned __int8 *)(*(void *)(v60 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v60 - 8) + 80));
  uint64_t v59 = *(void *)(*(void *)(v60 - 8) + 72);
  int v15 = (int *)type metadata accessor for StoredLayoutView();
  uint64_t v58 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v61 = v9;
  uint64_t v57 = v5;
  while ((*(void *)(v14 + v15[8]) & 0x8000000000000000) == 0)
  {
    uint64_t v73 = *(void *)(v14 + v15[8]);
    int64_t v74 = v12;
    uint64_t v16 = *(void *)(v14 + v15[7]);
    if (v16 < 0) {
      break;
    }
    uint64_t v72 = *(void *)(v14 + *(int *)(v60 + 48));
    uint64_t v17 = sub_259309440();
    uint64_t v18 = v75;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v75, v14, v17);
    uint64_t v19 = v14 + v15[5];
    uint64_t v20 = (int *)type metadata accessor for StoredPhoto(0);
    uint64_t v21 = v18 + v20[5];
    uint64_t v22 = sub_2593093D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v21, v19, v22);
    uint64_t v23 = (uint64_t *)(v14 + v15[23]);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    *(void *)(v18 + v20[6]) = *(void *)(v14 + v15[6]);
    *(void *)(v18 + v20[7]) = v16;
    *(void *)(v18 + v20[8]) = MEMORY[0x263F8EE80];
    uint64_t v26 = (void *)(v18 + v20[9]);
    *uint64_t v26 = v24;
    v26[1] = v25;
    uint64_t v27 = sub_259309300();
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
    v28(v9, 1, 1, v27);
    int v29 = *(unsigned __int8 *)(v14 + v15[9]);
    uint64_t v71 = v25;
    if (v29 == 1)
    {
      v28(v5, 1, 1, v27);
      uint64_t v30 = *v58;
      uint64_t v31 = v5;
      uint64_t v32 = 0;
    }
    else
    {
      uint64_t v30 = *v58;
      uint64_t v31 = v5;
      uint64_t v32 = 1;
    }
    uint64_t v33 = v62;
    v30(v31, v32, 1, v62);
    uint64_t v34 = v15[14];
    uint64_t v35 = *(void *)(v14 + v15[15]);
    uint64_t v36 = *(void *)(v14 + v15[16]);
    uint64_t v37 = *(void *)(v14 + v15[17]);
    uint64_t v38 = *(void *)(v14 + v15[18]);
    uint64_t v39 = *(void *)(v14 + v15[19]);
    uint64_t v40 = *(void *)(v14 + v15[20]);
    uint64_t v41 = *(void *)(v14 + v15[21]);
    uint64_t v42 = *(void *)(v14 + v15[22]);
    uint64_t v43 = *(void *)(v14 + v15[11]);
    uint64_t v65 = *(void *)(v14 + v15[10]);
    uint64_t v66 = v43;
    uint64_t v44 = v75;
    uint64_t v45 = v75 + *(int *)(v64 + 48);
    uint64_t v46 = *(void *)(v14 + v15[13]);
    uint64_t v67 = *(void *)(v14 + v15[12]);
    uint64_t v68 = v46;
    uint64_t v70 = *(int *)(v64 + 64);
    int v69 = *(unsigned __int8 *)(v14 + v34);
    uint64_t v47 = (int *)type metadata accessor for StoredPhotoLayout(0);
    uint64_t v48 = v45 + v47[5];
    v30((char *)v48, 1, 1, v33);
    BOOL v9 = v61;
    sub_25924A340((uint64_t)v61, v45, type metadata accessor for StoredPhotoLayout.ImageLocation);
    swift_bridgeObjectRetain();
    sub_25924A3A8(v48, &qword_26A37DFC8);
    uint64_t v49 = (uint64_t)v57;
    sub_25924A404((uint64_t)v57, v48, &qword_26A37DFC8);
    uint64_t v50 = (void *)(v45 + v47[6]);
    *uint64_t v50 = v35;
    v50[1] = v36;
    v50[2] = v37;
    v50[3] = v38;
    *(void *)(v45 + v47[7]) = v73;
    uint64_t v51 = (void *)(v45 + v47[8]);
    void *v51 = v39;
    v51[1] = v40;
    v51[2] = v41;
    v51[3] = v42;
    *(void *)(v45 + v47[9]) = v65;
    *(void *)(v45 + v47[10]) = v66;
    *(void *)(v45 + v47[11]) = v67;
    *(void *)(v45 + v47[12]) = v68;
    *(unsigned char *)(v45 + v47[13]) = v69;
    *(void *)(v44 + v70) = v72;
    uint64_t v13 = v76;
    unsigned int v5 = (char *)v49;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25925CC74(0, *(void *)(v13 + 16) + 1, 1);
      uint64_t v13 = v76;
    }
    int64_t v52 = v74;
    unint64_t v54 = *(void *)(v13 + 16);
    unint64_t v53 = *(void *)(v13 + 24);
    if (v54 >= v53 >> 1)
    {
      sub_25925CC74(v53 > 1, v54 + 1, 1);
      uint64_t v13 = v76;
    }
    *(void *)(v13 + 16) = v54 + 1;
    sub_25924A404(v75, v13+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v54, &qword_26A37DFB8);
    v14 += v59;
    int64_t v12 = v52 - 1;
    if (!v12) {
      return v13;
    }
  }
  uint64_t result = sub_25930A570();
  __break(1u);
  return result;
}

uint64_t sub_25924495C(uint64_t a1)
{
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFA8);
  uint64_t v3 = MEMORY[0x270FA5388](v51);
  uint64_t v50 = (uint64_t)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v49 = (uint64_t)v40 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (uint64_t)v40 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF58);
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v52 = (uint64_t)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (!v10) {
    return v11;
  }
  v40[1] = v1;
  uint64_t v53 = MEMORY[0x263F8EE78];
  sub_25925CC14(0, v10, 0);
  uint64_t result = sub_2592E81E4(a1);
  uint64_t v14 = result;
  uint64_t v15 = 0;
  uint64_t v16 = a1 + 64;
  uint64_t v41 = a1 + 80;
  int64_t v42 = v10;
  uint64_t v43 = v13;
  uint64_t v44 = a1 + 64;
  uint64_t v45 = a1;
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v19 = (unint64_t)v14 >> 6;
    if ((*(void *)(v16 + 8 * ((unint64_t)v14 >> 6)) & (1 << v14)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v13) {
      goto LABEL_26;
    }
    uint64_t v20 = v51;
    uint64_t v21 = *(int *)(v51 + 48);
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = v22
        + *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFB0) - 8) + 72) * v14;
    uint64_t v24 = a1;
    uint64_t v25 = v46;
    sub_2592207A0(v23, v46, &qword_26A37DFB0);
    uint64_t v26 = *(void *)(*(void *)(v24 + 56) + 8 * v14);
    *(void *)(v25 + v21) = v26;
    uint64_t v27 = v49;
    sub_2592207A0(v25, v49, &qword_26A37DFB0);
    *(void *)(v27 + *(int *)(v20 + 48)) = v26;
    uint64_t v28 = v27;
    uint64_t v29 = v50;
    sub_25924A404(v28, v50, &qword_26A37DFA8);
    swift_bridgeObjectRetain_n();
    sub_25924A3A8(v25, &qword_26A37DFA8);
    uint64_t v30 = *(void *)(v29 + *(int *)(v20 + 48));
    uint64_t v31 = *(int *)(v48 + 48);
    uint64_t v32 = v52;
    *(void *)(v32 + v31) = sub_259258584(v52, v29, v30);
    sub_25924A3A8(v29, &qword_26A37DFA8);
    uint64_t v11 = v53;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25925CC14(0, *(void *)(v11 + 16) + 1, 1);
      uint64_t v11 = v53;
    }
    unint64_t v34 = *(void *)(v11 + 16);
    unint64_t v33 = *(void *)(v11 + 24);
    a1 = v45;
    if (v34 >= v33 >> 1)
    {
      sub_25925CC14(v33 > 1, v34 + 1, 1);
      uint64_t v11 = v53;
    }
    *(void *)(v11 + 16) = v34 + 1;
    uint64_t result = sub_25924A404(v52, v11+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v34, &qword_26A37DF58);
    int64_t v17 = 1 << *(unsigned char *)(a1 + 32);
    if (v14 >= v17) {
      goto LABEL_27;
    }
    uint64_t v16 = v44;
    uint64_t v35 = *(void *)(v44 + 8 * v19);
    if ((v35 & (1 << v14)) == 0) {
      goto LABEL_28;
    }
    LODWORD(v13) = v43;
    if (*(_DWORD *)(a1 + 36) != v43) {
      goto LABEL_29;
    }
    unint64_t v36 = v35 & (-2 << (v14 & 0x3F));
    if (v36)
    {
      int64_t v17 = __clz(__rbit64(v36)) | v14 & 0xFFFFFFFFFFFFFFC0;
      int64_t v18 = v42;
    }
    else
    {
      unint64_t v37 = v19 + 1;
      unint64_t v38 = (unint64_t)(v17 + 63) >> 6;
      int64_t v18 = v42;
      if (v19 + 1 < v38)
      {
        unint64_t v39 = *(void *)(v44 + 8 * v37);
        if (v39)
        {
LABEL_22:
          int64_t v17 = __clz(__rbit64(v39)) + (v37 << 6);
        }
        else
        {
          while (v38 - 2 != v19)
          {
            unint64_t v39 = *(void *)(v41 + 8 * v19++);
            if (v39)
            {
              unint64_t v37 = v19 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v15;
    uint64_t v14 = v17;
    if (v15 == v18) {
      return v11;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_259244D90(uint64_t a1)
{
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF58);
  uint64_t v3 = *(void *)(v25 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v25);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for StoredPhoto(0);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v22 = v1;
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_25925CCA4(0, v12, 0);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v23 = *(void *)(v3 + 72);
    uint64_t v15 = v25;
    do
    {
      uint64_t v16 = *(int *)(v15 + 48);
      sub_25924A2D8(v14, (uint64_t)v8, type metadata accessor for StoredPhoto);
      uint64_t v17 = *(void *)(v14 + v16);
      *(void *)&v8[v16] = v17;
      uint64_t v18 = *(int *)(v15 + 48);
      sub_25924A340((uint64_t)v8, (uint64_t)v6, type metadata accessor for StoredPhoto);
      *(void *)&v6[v18] = v17;
      sub_25924A2D8((uint64_t)v6, (uint64_t)v11, type metadata accessor for StoredPhoto);
      sub_25924A3A8((uint64_t)v6, &qword_26A37DF58);
      uint64_t v13 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CCA4(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v26;
      }
      unint64_t v20 = *(void *)(v13 + 16);
      unint64_t v19 = *(void *)(v13 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_25925CCA4(v19 > 1, v20 + 1, 1);
        uint64_t v13 = v26;
      }
      *(void *)(v13 + 16) = v20 + 1;
      sub_25924A340((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v20, type metadata accessor for StoredPhoto);
      v14 += v23;
      --v12;
    }
    while (v12);
  }
  return v13;
}

uint64_t AlbumDatabase.database.getter()
{
  return swift_retain();
}

uint64_t AlbumDatabase.__allocating_init(database:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t AlbumDatabase.init(database:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t AlbumDatabase.insert(id:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_2592450C8, 0, 0);
}

uint64_t sub_2592450C8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_259245144, v2, 0);
}

uint64_t sub_259245144()
{
  sub_259247FF0((void (*)(uint64_t *))sub_2592453CC);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_2592451F0(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2593131D0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v4 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
  uint64_t v5 = *(void *)(v4 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2593131E0;
  unint64_t v8 = v7 + v6;
  uint64_t v9 = sub_259309440();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a2, v9);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = (void *)(v8 + v5);
  uint64_t v11 = (void *)(a2 + *(int *)(type metadata accessor for AlbumID() + 20));
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  swift_storeEnumTagMultiPayload();
  *(void *)(inited + 32) = v7;
  swift_bridgeObjectRetain();
  v13._object = (void *)0x800000025930BEA0;
  v13._countAndFlagsBits = 0xD00000000000005ELL;
  DatabaseConnection.insert(sql:bindings:)(v13, (Swift::OpaquePointer)inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF70);
  return swift_arrayDestroy();
}

uint64_t sub_2592453CC(uint64_t a1)
{
  return sub_2592451F0(a1, *(void *)(v1 + 16));
}

uint64_t AlbumDatabase.queryList()()
{
  v1[2] = v0;
  uint64_t v2 = sub_259309440();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for AlbumID();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE50);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25924558C, 0, 0);
}

uint64_t sub_25924558C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 16);
  *(void *)(v0 + 104) = v1;
  return MEMORY[0x270FA2498](sub_259245620, v1, 0);
}

uint64_t sub_259245620()
{
  uint64_t v55 = v0;
  uint64_t v54 = *MEMORY[0x263EF8340];
  uint64_t v1 = v0[13];
  uint64_t v2 = OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection);
  if (!v3)
  {
    sub_25924EDE4();
    uint64_t v3 = *(void *)(v1 + v2);
    if (!v3)
    {
      sub_25924813C();
      swift_allocError();
      *uint64_t v31 = 0;
      goto LABEL_41;
    }
  }
  *(void *)__dst = v3;
  v4._countAndFlagsBits = 0x6E69676562;
  v4._object = (void *)0xE500000000000000;
  DatabaseConnection.execute(sql:)(v4);
  unint64_t v6 = v5;
  if (v5) {
    goto LABEL_39;
  }
  *(void *)__dst = v3;
  uint64_t v7 = sub_259264340();
  sub_259269764(v7);
  int v8 = sqlite3_step(v7);
  if (v8 != 100)
  {
    unsigned int v32 = v8;
    unint64_t v9 = MEMORY[0x263F8EE78];
    if (v8 == 101) {
      goto LABEL_25;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    if (sqlite3_errstr(v32))
    {
      uint64_t v42 = sub_259309C30();
      unint64_t v44 = v43;
    }
    else
    {
      unint64_t v44 = 0xE300000000000000;
      uint64_t v42 = 4271950;
    }
    sub_259248190();
    unint64_t v6 = (void *)swift_allocError();
    *uint64_t v45 = v32 | 0xA000000000000000;
    v45[1] = v42;
    v45[2] = v44;
    swift_willThrow();
LABEL_38:
    sub_259269950(v7);
LABEL_39:
    *(void *)__dst = v3;
    v46._countAndFlagsBits = 0x6B6361626C6C6F72;
    v46._object = (void *)0xE800000000000000;
    DatabaseConnection.execute(sql:)(v46);
    if (v47)
    {

LABEL_42:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v48 = (uint64_t (*)(void))v0[1];
      return v48();
    }
LABEL_41:
    swift_willThrow();
    goto LABEL_42;
  }
  uint64_t v50 = v0[6];
  uint64_t v51 = v0[7];
  unint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v49 = (void (**)(uint64_t, uint64_t, uint64_t))(v0[4] + 32);
  do
  {
    if (sqlite3_column_type(v7, 0) == 5 || (uint64_t v10 = sqlite3_column_blob(v7, 0)) == 0)
    {
      sub_2592481E4();
      unint64_t v6 = (void *)swift_allocError();
      *(_DWORD *)uint64_t v35 = 0;
      *(unsigned char *)(v35 + 4) = 0;
      swift_willThrow();
LABEL_32:
      swift_bridgeObjectRelease();
      goto LABEL_38;
    }
    uint64_t v11 = v10;
    int v12 = sqlite3_column_bytes(v7, 0);
    if (v12)
    {
      uint64_t v13 = v12;
      if (v12 <= 14)
      {
        memset(__dst, 0, sizeof(__dst));
        unsigned __int8 v53 = v12;
        memcpy(__dst, v11, v12);
        uint64_t v15 = *(void *)__dst;
        unint64_t v16 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v53 << 48);
      }
      else
      {
        sub_259309220();
        swift_allocObject();
        if (v13 == 0x7FFFFFFF)
        {
          uint64_t v14 = sub_2593091D0();
          sub_259309330();
          uint64_t v15 = swift_allocObject();
          *(_OWORD *)(v15 + 16) = xmmword_2593131F0;
          unint64_t v16 = v14 | 0x8000000000000000;
        }
        else
        {
          uint64_t v17 = sub_2593091D0();
          uint64_t v15 = v13 << 32;
          unint64_t v16 = v17 | 0x4000000000000000;
        }
      }
    }
    else
    {
      uint64_t v15 = 0;
      unint64_t v16 = 0xC000000000000000;
    }
    UUID.init(serialized:version:)(v15, v16);
    if (sqlite3_column_type(v7, 1) == 5 || !sqlite3_column_text(v7, 1))
    {
      sub_2592481E4();
      unint64_t v6 = (void *)swift_allocError();
      uint64_t v37 = v0[4];
      uint64_t v36 = v0[5];
      uint64_t v38 = v0[3];
      *(_DWORD *)uint64_t v39 = 1;
      *(unsigned char *)(v39 + 4) = 0;
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
      goto LABEL_32;
    }
    uint64_t v19 = v0[8];
    uint64_t v18 = v0[9];
    uint64_t v20 = v0[5];
    uint64_t v21 = v0[3];
    uint64_t v22 = sub_259309C40();
    uint64_t v24 = v23;
    (*v49)(v18, v20, v21);
    uint64_t v25 = (uint64_t *)(v18 + *(int *)(v50 + 20));
    *uint64_t v25 = v22;
    v25[1] = v24;
    sub_25924A2D8(v18, v19, (uint64_t (*)(void))type metadata accessor for AlbumID);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v9 = sub_25924837C(0, *(void *)(v9 + 16) + 1, 1, v9, &qword_26A37DFE0, (uint64_t (*)(void))type metadata accessor for AlbumID, (uint64_t (*)(void))type metadata accessor for AlbumID);
    }
    unint64_t v27 = *(void *)(v9 + 16);
    unint64_t v26 = *(void *)(v9 + 24);
    if (v27 >= v26 >> 1) {
      unint64_t v9 = sub_25924837C(v26 > 1, v27 + 1, 1, v9, &qword_26A37DFE0, (uint64_t (*)(void))type metadata accessor for AlbumID, (uint64_t (*)(void))type metadata accessor for AlbumID);
    }
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[9];
    *(void *)(v9 + 16) = v27 + 1;
    sub_25924A340(v28, v9+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v27, (uint64_t (*)(void))type metadata accessor for AlbumID);
    sub_2592485FC(v29);
    int v30 = sqlite3_step(v7);
  }
  while (v30 == 100);
  unsigned int v32 = v30;
  if (v30 != 101) {
    goto LABEL_34;
  }
LABEL_25:
  sub_259269950(v7);
  *(void *)__dst = v3;
  v33._countAndFlagsBits = 0x74696D6D6F63;
  v33._object = (void *)0xE600000000000000;
  DatabaseConnection.execute(sql:)(v33);
  if (v34)
  {
    unint64_t v6 = v34;
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = (uint64_t (*)(unint64_t))v0[1];
  return v40(v9);
}

uint64_t AlbumDatabase.queryByDay(id:)(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for DatabaseBinding();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE78);
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259245E38, 0, 0);
}

uint64_t sub_259245E38()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[3];
  uint64_t v34 = *(void *)(v0[4] + 16);
  v0[13] = v34;
  sub_25930A3E0();
  sub_259309C20();
  sub_259309C20();
  v0[14] = 0;
  v0[15] = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE80);
  uint64_t v7 = *(void *)(v3 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2593131E0;
  uint64_t v10 = v9 + v8;
  uint64_t v11 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v6, v11);
  swift_storeEnumTagMultiPayload();
  int v12 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
  v12(v10, 0, 1, v4);
  uint64_t v13 = v10 + v7;
  *(void *)(v10 + v7) = 16;
  swift_storeEnumTagMultiPayload();
  v12(v10 + v7, 0, 1, v4);
  sub_2592207A0(v10, v2, &qword_26A37DE78);
  sub_25924A404(v2, v1, &qword_26A37DE78);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  int v15 = v14(v1, 1, v4);
  uint64_t v16 = v0[11];
  if (v15 == 1)
  {
    sub_25924A3A8(v16, &qword_26A37DE78);
    unint64_t v17 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v19 = v0[7];
    uint64_t v18 = v0[8];
    sub_25924A340(v16, v18, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    sub_25924A340(v18, v19, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    unint64_t v17 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v17 = sub_25924837C(0, *(void *)(v17 + 16) + 1, 1, v17, &qword_26A37DF78, (uint64_t (*)(void))type metadata accessor for DatabaseBinding, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    }
    unint64_t v21 = *(void *)(v17 + 16);
    unint64_t v20 = *(void *)(v17 + 24);
    if (v21 >= v20 >> 1) {
      unint64_t v17 = sub_25924837C(v20 > 1, v21 + 1, 1, v17, &qword_26A37DF78, (uint64_t (*)(void))type metadata accessor for DatabaseBinding, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    }
    uint64_t v22 = v0[7];
    *(void *)(v17 + 16) = v21 + 1;
    sub_25924A340(v22, v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v21, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
  }
  uint64_t v24 = v0[11];
  uint64_t v23 = v0[12];
  uint64_t v25 = v0[5];
  sub_2592207A0(v13, v23, &qword_26A37DE78);
  sub_25924A404(v23, v24, &qword_26A37DE78);
  int v26 = v14(v24, 1, v25);
  uint64_t v27 = v0[11];
  if (v26 == 1)
  {
    sub_25924A3A8(v27, &qword_26A37DE78);
  }
  else
  {
    uint64_t v29 = v0[7];
    uint64_t v28 = v0[8];
    sub_25924A340(v27, v28, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    sub_25924A340(v28, v29, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v17 = sub_25924837C(0, *(void *)(v17 + 16) + 1, 1, v17, &qword_26A37DF78, (uint64_t (*)(void))type metadata accessor for DatabaseBinding, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    }
    unint64_t v31 = *(void *)(v17 + 16);
    unint64_t v30 = *(void *)(v17 + 24);
    if (v31 >= v30 >> 1) {
      unint64_t v17 = sub_25924837C(v30 > 1, v31 + 1, 1, v17, &qword_26A37DF78, (uint64_t (*)(void))type metadata accessor for DatabaseBinding, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    }
    uint64_t v32 = v0[7];
    *(void *)(v17 + 16) = v31 + 1;
    sub_25924A340(v32, v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v31, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
  }
  v0[16] = v17;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return MEMORY[0x270FA2498](sub_259246390, v34, 0);
}

uint64_t sub_259246390()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v3 = v0[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_25925111C(v4, v3, v1, v2, (uint64_t)sub_259246634, 0);
  uint64_t v6 = sub_259244298(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_25924923C(v6);
  swift_bridgeObjectRelease();
  v0[17] = sub_25924495C(v7);
  v0[18] = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2592464C4, 0, 0);
}

uint64_t sub_2592464C4()
{
  uint64_t v1 = sub_259249638(*(void *)(v0 + 136));
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_259248F3C(v1);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_259246590()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_259246634@<X0>(sqlite3_stmt **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (sqlite3_column_type(*a1, 21) == 5)
  {
    sub_2592481E4();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = 21;
    *(unsigned char *)(v4 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    uint64_t result = sqlite3_column_int(v3, 21);
    *a2 = (int)result;
  }
  return result;
}

uint64_t AlbumDatabase.query(id:day:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for DatabaseBinding();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE78);
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25924680C, 0, 0);
}

uint64_t sub_25924680C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[2];
  uint64_t v27 = *(void *)(v0[4] + 16);
  v0[13] = v27;
  sub_25930A3E0();
  sub_259309C20();
  sub_259309C20();
  v0[14] = 0;
  v0[15] = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE80);
  uint64_t v6 = *(void *)(v1 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_259313200;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v5, v10);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
  v11(v9, 0, 1, v2);
  *(void *)(v9 + v6) = v4;
  swift_storeEnumTagMultiPayload();
  v11(v9 + v6, 0, 1, v2);
  *(void *)(v9 + 2 * v6) = 16;
  swift_storeEnumTagMultiPayload();
  v11(v9 + 2 * v6, 0, 1, v2);
  uint64_t v28 = v3;
  int v12 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  unint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v14 = 3;
  uint64_t v15 = v9;
  do
  {
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    uint64_t v18 = v0[5];
    sub_2592207A0(v15, v16, &qword_26A37DE78);
    sub_25924A404(v16, v17, &qword_26A37DE78);
    int v19 = (*v12)(v17, 1, v18);
    uint64_t v20 = v0[11];
    if (v19 == 1)
    {
      sub_25924A3A8(v20, &qword_26A37DE78);
    }
    else
    {
      uint64_t v22 = v0[7];
      uint64_t v21 = v0[8];
      sub_25924A340(v20, v21, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      sub_25924A340(v21, v22, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v13 = sub_25924837C(0, *(void *)(v13 + 16) + 1, 1, v13, &qword_26A37DF78, (uint64_t (*)(void))type metadata accessor for DatabaseBinding, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      }
      unint64_t v24 = *(void *)(v13 + 16);
      unint64_t v23 = *(void *)(v13 + 24);
      if (v24 >= v23 >> 1) {
        unint64_t v13 = sub_25924837C(v23 > 1, v24 + 1, 1, v13, &qword_26A37DF78, (uint64_t (*)(void))type metadata accessor for DatabaseBinding, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      }
      uint64_t v25 = v0[7];
      *(void *)(v13 + 16) = v24 + 1;
      sub_25924A340(v25, v13+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v24, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    }
    v0[17] = v13;
    v15 += v6;
    --v14;
  }
  while (v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return MEMORY[0x270FA2498](sub_259246C28, v27, 0);
}

uint64_t sub_259246C28()
{
  uint64_t v1 = PhotosFaceDatabase.queryPhotos(sql:bindings:)(v0[14], v0[15], v0[17]);
  v0[16] = 0;
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_259246D40()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AlbumDatabase.delete(id:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_259246E08, 0, 0);
}

uint64_t sub_259246E08()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_259246E84, v2, 0);
}

uint64_t sub_259246E84()
{
  sub_259247FF0((void (*)(uint64_t *))sub_259249A10);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_259246F30(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v4 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2593131D0;
  uint64_t v7 = sub_259309440();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6 + v5, a2, v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_259264340();
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v9 = v8;
  sub_25926906C(v6, v8);
  sub_259269950(v9);
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t AlbumDatabase.relate(photos:to:on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_259247100, 0, 0);
}

uint64_t sub_259247100()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(*(void *)(v0 + 40) + 16);
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v3 + 32) = v1;
  return MEMORY[0x270FA2498](sub_259247184, v2, 0);
}

uint64_t sub_259247184()
{
  sub_259247FF0((void (*)(uint64_t *))sub_259249A2C);
  *(void *)(v0 + 64) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_259247230, 0, 0);
}

uint64_t sub_259247230()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_259247248()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_259247260(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v7[5] = *a1;
  v7[2] = a3;
  v7[3] = a4;
  uint64_t v4 = sub_25928ADCC((void (*)(uint64_t *__return_ptr, uint64_t))sub_25924A2B8, (uint64_t)v7, a2);
  v5._object = (void *)0x800000025930BD90;
  v5._countAndFlagsBits = 0xD000000000000078;
  DatabaseConnection.insert(sql:bindings:)(v5, (Swift::OpaquePointer)v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2592472F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v5 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_259313200;
  unint64_t v9 = v8 + v7;
  uint64_t v10 = sub_259309440();
  uint64_t v11 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v9, a2, v10);
  swift_storeEnumTagMultiPayload();
  v11(v9 + v6, a1, v10);
  swift_storeEnumTagMultiPayload();
  *(void *)(v9 + 2 * v6) = a3;
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a4 = v8;
  return result;
}

uint64_t AlbumDatabase.clearPhotos(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_259247494, 0, 0);
}

uint64_t sub_259247494()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_259247510, v2, 0);
}

uint64_t sub_259247510()
{
  sub_259247FF0((void (*)(uint64_t *))sub_259249A4C);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_259247230, 0, 0);
}

uint64_t sub_2592475BC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2592475D4(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v4 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2593131D0;
  uint64_t v7 = sub_259309440();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6 + v5, a2, v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_259264340();
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v9 = v8;
  sub_25926906C(v6, v8);
  sub_259269950(v9);
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t AlbumDatabase.deinit()
{
  swift_release();
  return v0;
}

uint64_t AlbumDatabase.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2592477D8()
{
  return swift_retain();
}

uint64_t sub_2592477E4(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_259247808, 0, 0);
}

uint64_t sub_259247808()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_259247884, v2, 0);
}

uint64_t sub_259247884()
{
  sub_259247FF0((void (*)(uint64_t *))sub_25924A4BC);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_259247930()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25924A46C;
  return AlbumDatabase.queryList()();
}

uint64_t sub_2592479C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25924A46C;
  return AlbumDatabase.query(id:day:)(a1, a2);
}

uint64_t sub_259247A68(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_259247B00;
  return AlbumDatabase.queryByDay(id:)(a1);
}

uint64_t sub_259247B00(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_259247C00(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_259247C24, 0, 0);
}

uint64_t sub_259247C24()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_259247CA0, v2, 0);
}

uint64_t sub_259247CA0()
{
  sub_259247FF0((void (*)(uint64_t *))sub_25924A4A4);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_259247D4C(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_259247D70, 0, 0);
}

uint64_t sub_259247D70()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_259247DEC, v2, 0);
}

uint64_t sub_259247DEC()
{
  sub_259247FF0((void (*)(uint64_t *))sub_25924A48C);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_259247230, 0, 0);
}

uint64_t sub_259247E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = *v3;
  v4[4] = a3;
  v4[5] = v5;
  return MEMORY[0x270FA2498](sub_259247EC0, 0, 0);
}

uint64_t sub_259247EC0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(*(void *)(v0 + 40) + 16);
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v3 + 32) = v1;
  return MEMORY[0x270FA2498](sub_259247F44, v2, 0);
}

uint64_t sub_259247F44()
{
  sub_259247FF0((void (*)(uint64_t *))sub_25924A474);
  *(void *)(v0 + 64) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

void sub_259247FF0(void (*a1)(uint64_t *))
{
  uint64_t v4 = OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection);
  if (!v5)
  {
    sub_25924EDE4();
    if (v2) {
      return;
    }
    uint64_t v5 = *(void *)(v1 + v4);
    if (!v5)
    {
      sub_25924813C();
      swift_allocError();
      *unint64_t v13 = 0;
LABEL_9:
      swift_willThrow();
      return;
    }
  }
  uint64_t v14 = v5;
  v6._countAndFlagsBits = 0x6E69676562;
  v6._object = (void *)0xE500000000000000;
  DatabaseConnection.execute(sql:)(v6);
  uint64_t v8 = v7;
  if (v7
    || (uint64_t v14 = v5,
        a1(&v14),
        uint64_t v14 = v5,
        v9._countAndFlagsBits = 0x74696D6D6F63,
        v9._object = (void *)0xE600000000000000,
        DatabaseConnection.execute(sql:)(v9),
        (uint64_t v8 = v10) != 0))
  {
    uint64_t v14 = v5;
    v11._countAndFlagsBits = 0x6B6361626C6C6F72;
    v11._object = (void *)0xE800000000000000;
    DatabaseConnection.execute(sql:)(v11);
    if (v12)
    {

      return;
    }
    goto LABEL_9;
  }
}

unint64_t sub_25924813C()
{
  unint64_t result = qword_26A37DE58;
  if (!qword_26A37DE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37DE58);
  }
  return result;
}

unint64_t sub_259248190()
{
  unint64_t result = qword_26A37DE60;
  if (!qword_26A37DE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37DE60);
  }
  return result;
}

unint64_t sub_2592481E4()
{
  unint64_t result = qword_26A37DE68;
  if (!qword_26A37DE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37DE68);
  }
  return result;
}

uint64_t sub_259248238(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25924837C(a1, a2, a3, a4, &qword_26A37DF48, MEMORY[0x263F07508], MEMORY[0x263F07508]);
}

void *sub_25924826C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF00);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      unint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_259249148(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25924837C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_25930A570();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_259249C20(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_2592485FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AlbumID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_259248658(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25924866C(a1, a2, a3, a4, &qword_26A37DF50, &qword_26A37DF58);
}

uint64_t sub_25924866C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_25930A570();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_259249D7C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_2592488D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25924866C(a1, a2, a3, a4, &qword_26A37DFD8, &qword_26A37DFD0);
}

uint64_t sub_2592488EC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25924837C(a1, a2, a3, a4, &qword_26A37DF78, (uint64_t (*)(void))type metadata accessor for DatabaseBinding, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
}

uint64_t sub_259248920(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25924866C(a1, a2, a3, a4, &qword_26A37DF80, &qword_26A37DF88);
}

uint64_t sub_259248934(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25924866C(a1, a2, a3, a4, &qword_26A37DF90, &qword_26A37DF98);
}

uint64_t sub_259248948(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25924837C(a1, a2, a3, a4, &qword_26A37DF60, (uint64_t (*)(void))type metadata accessor for ShuffleID, (uint64_t (*)(void))type metadata accessor for ShuffleID);
}

void *sub_25924897C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF68);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_259249B14(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_259248A8C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25924866C(a1, a2, a3, a4, &qword_26A37DF38, &qword_26A37DF40);
}

void *sub_259248AA0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_259248ACC(a1, a2, a3, a4, &qword_26A37DF18);
}

uint64_t sub_259248AAC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25924866C(a1, a2, a3, a4, &qword_26A37DF20, &qword_26A37DF28);
}

void *sub_259248AC0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_259248ACC(a1, a2, a3, a4, &qword_26A37DEE8);
}

void *sub_259248ACC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_259249FE0(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_259248BD8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DEF0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_259249ED4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259248CE8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF30);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25924A0D0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_259248DF8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF10);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_25924A1C4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_259248F08(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_25924837C(a1, a2, a3, a4, &qword_26A37DF08, type metadata accessor for StoredPhoto, type metadata accessor for StoredPhoto);
}

uint64_t sub_259248F3C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFA0);
  uint64_t result = sub_25930A5F0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v23 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  int64_t v21 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v22 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = *(void *)(*(void *)(v23 + 48) + 8 * i);
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_259244D90(v17);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v22 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v3[6] + 8 * i) = v16;
    *(void *)(v3[7] + 8 * i) = v18;
    uint64_t v19 = v3[2];
    BOOL v13 = __OFADD__(v19, 1);
    uint64_t v20 = v19 + 1;
    if (v13)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v3[2] = v20;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v13 = __OFADD__(v4++, 1);
    if (v13) {
      goto LABEL_25;
    }
    if (v4 >= v21) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v4);
    if (!v14) {
      break;
    }
LABEL_15:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v4 + 1;
  if (v4 + 1 >= v21) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v4 + 2;
  if (v4 + 2 >= v21) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v4 + 3;
  if (v4 + 3 >= v21) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
LABEL_14:
    int64_t v4 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v21) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_15;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_259249148(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25924923C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFB0);
  uint64_t v43 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v47 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFB8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v45 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (uint64_t)&v37 - v8;
  uint64_t v9 = (void *)MEMORY[0x263F8EE80];
  uint64_t v48 = (void *)MEMORY[0x263F8EE80];
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return (uint64_t)v9;
  }
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (v11 + 32) & ~v11;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v7 + 72);
  uint64_t v44 = v12;
  uint64_t v40 = v14 + v12;
  uint64_t v39 = v11 | 7;
  long long v38 = xmmword_2593131D0;
  uint64_t v41 = v4;
  uint64_t v42 = v2;
  while (1)
  {
    uint64_t v15 = v46;
    sub_2592207A0(v13, v46, &qword_26A37DFB8);
    uint64_t v16 = *(void *)(v15 + *(int *)(v4 + 64));
    uint64_t v17 = v15;
    uint64_t v18 = v47;
    sub_25924A2D8(v17, v47, type metadata accessor for StoredPhoto);
    *(void *)(v18 + *(int *)(v2 + 28)) = v16;
    unint64_t v20 = sub_25925E438(v18);
    uint64_t v21 = v9[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      break;
    }
    char v24 = v19;
    if (v9[3] < v23)
    {
      sub_2592932E8(v23, 1);
      uint64_t v9 = v48;
      unint64_t v25 = sub_25925E438(v47);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_19;
      }
      unint64_t v20 = v25;
    }
    if (v24)
    {
      sub_25924A3A8(v47, &qword_26A37DFB0);
      uint64_t v9 = v48;
      uint64_t v27 = v48[7];
      sub_25924A404(v46, v45, &qword_26A37DFB8);
      unint64_t v28 = *(void *)(v27 + 8 * v20);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v27 + 8 * v20) = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v28 = sub_25924866C(0, *(void *)(v28 + 16) + 1, 1, v28, &qword_26A37DFC0, &qword_26A37DFB8);
        *(void *)(v27 + 8 * v20) = v28;
      }
      unint64_t v31 = *(void *)(v28 + 16);
      unint64_t v30 = *(void *)(v28 + 24);
      if (v31 >= v30 >> 1)
      {
        unint64_t v28 = sub_25924866C(v30 > 1, v31 + 1, 1, v28, &qword_26A37DFC0, &qword_26A37DFB8);
        *(void *)(v27 + 8 * v20) = v28;
      }
      *(void *)(v28 + 16) = v31 + 1;
      sub_25924A404(v45, v28 + v44 + v31 * v14, &qword_26A37DFB8);
      uint64_t v4 = v41;
      uint64_t v2 = v42;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC0);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v38;
      sub_25924A404(v46, v32 + v44, &qword_26A37DFB8);
      v9[(v20 >> 6) + 8] |= 1 << v20;
      sub_25924A404(v47, v9[6] + *(void *)(v43 + 72) * v20, &qword_26A37DFB0);
      *(void *)(v9[7] + 8 * v20) = v32;
      uint64_t v33 = v9[2];
      BOOL v34 = __OFADD__(v33, 1);
      uint64_t v35 = v33 + 1;
      if (v34) {
        goto LABEL_18;
      }
      v9[2] = v35;
    }
    v13 += v14;
    if (!--v10) {
      return (uint64_t)v9;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_25930A830();
  __break(1u);
  return result;
}

uint64_t sub_259249638(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF58);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v49 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v51 = (uint64_t)&v43 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v50 = (uint64_t)&v43 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (uint64_t)&v43 - v10;
  uint64_t v11 = (void *)MEMORY[0x263F8EE80];
  unsigned __int8 v53 = (void *)MEMORY[0x263F8EE80];
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return (uint64_t)v11;
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = *(void *)(v9 + 72);
  uint64_t v48 = v14;
  uint64_t v46 = v16 + v14;
  uint64_t v45 = v13 | 7;
  long long v44 = xmmword_2593131D0;
  uint64_t v47 = v2;
  while (1)
  {
    uint64_t v18 = v52;
    sub_2592207A0(v15, v52, &qword_26A37DF58);
    uint64_t v19 = *(int *)(v2 + 48);
    uint64_t v20 = v50;
    sub_25924A2D8(v18, v50, type metadata accessor for StoredPhoto);
    uint64_t v21 = *(void *)(v18 + v19);
    *(void *)(v20 + v19) = v21;
    uint64_t v22 = *(int *)(v2 + 48);
    uint64_t v23 = v20;
    uint64_t v24 = v51;
    sub_25924A340(v23, v51, type metadata accessor for StoredPhoto);
    *(void *)(v24 + v22) = v21;
    sub_25924A3A8(v24, &qword_26A37DF58);
    unint64_t v26 = sub_25925E3F4(v21);
    uint64_t v27 = v11[2];
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      break;
    }
    char v30 = v25;
    if (v11[3] < v29)
    {
      sub_259292F38(v29, 1);
      uint64_t v11 = v53;
      unint64_t v31 = sub_25925E3F4(v21);
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_19;
      }
      unint64_t v26 = v31;
    }
    if (v30)
    {
      uint64_t v33 = v11[7];
      sub_25924A404(v52, v49, &qword_26A37DF58);
      unint64_t v34 = *(void *)(v33 + 8 * v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v33 + 8 * v26) = v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v34 = sub_25924866C(0, *(void *)(v34 + 16) + 1, 1, v34, &qword_26A37DF50, &qword_26A37DF58);
        *(void *)(v33 + 8 * v26) = v34;
      }
      unint64_t v37 = *(void *)(v34 + 16);
      unint64_t v36 = *(void *)(v34 + 24);
      if (v37 >= v36 >> 1)
      {
        unint64_t v34 = sub_25924866C(v36 > 1, v37 + 1, 1, v34, &qword_26A37DF50, &qword_26A37DF58);
        *(void *)(v33 + 8 * v26) = v34;
      }
      uint64_t v2 = v47;
      uint64_t v17 = v48;
      *(void *)(v34 + 16) = v37 + 1;
      sub_25924A404(v49, v34 + v17 + v37 * v16, &qword_26A37DF58);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF50);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = v44;
      sub_25924A404(v52, v38 + v48, &qword_26A37DF58);
      v11[(v26 >> 6) + 8] |= 1 << v26;
      *(void *)(v11[6] + 8 * v26) = v21;
      *(void *)(v11[7] + 8 * v26) = v38;
      uint64_t v39 = v11[2];
      BOOL v40 = __OFADD__(v39, 1);
      uint64_t v41 = v39 + 1;
      if (v40) {
        goto LABEL_18;
      }
      v11[2] = v41;
    }
    v15 += v16;
    if (!--v12) {
      return (uint64_t)v11;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_25930A830();
  __break(1u);
  return result;
}

uint64_t sub_259249A10(uint64_t a1)
{
  return sub_259246F30(a1, *(void *)(v1 + 16));
}

uint64_t sub_259249A2C(void *a1)
{
  return sub_259247260(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_259249A4C(uint64_t a1)
{
  return sub_2592475D4(a1, *(void *)(v1 + 16));
}

unint64_t sub_259249A6C()
{
  unint64_t result = qword_26A37DEA8[0];
  if (!qword_26A37DEA8[0])
  {
    type metadata accessor for AlbumID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A37DEA8);
  }
  return result;
}

uint64_t type metadata accessor for AlbumDatabase()
{
  return self;
}

uint64_t method lookup function for AlbumDatabase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AlbumDatabase);
}

uint64_t dispatch thunk of AlbumDatabase.__allocating_init(database:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_259249B14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF70);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_259249C20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_259249D7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_259249ED4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DEF8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

char *sub_259249FE0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25924A0D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25924A1C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25924A2B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2592472F0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_25924A2D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25924A340(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25924A3A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25924A404(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25924A474(void *a1)
{
  return sub_259249A2C(a1);
}

uint64_t sub_25924A48C(uint64_t a1)
{
  return sub_259249A4C(a1);
}

uint64_t sub_25924A4A4(uint64_t a1)
{
  return sub_259249A10(a1);
}

uint64_t sub_25924A4BC(uint64_t a1)
{
  return sub_2592453CC(a1);
}

uint64_t sub_25924A4D4(uint64_t a1)
{
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF58);
  uint64_t v3 = *(void *)(v25 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v25);
  unint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for StoredPhoto(0);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v22 = v1;
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_25925CCA4(0, v12, 0);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v23 = *(void *)(v3 + 72);
    uint64_t v15 = v25;
    do
    {
      uint64_t v16 = *(int *)(v15 + 48);
      sub_25924E54C(v14, (uint64_t)v8, type metadata accessor for StoredPhoto);
      uint64_t v17 = *(void *)(v14 + v16);
      *(void *)&v8[v16] = v17;
      uint64_t v18 = *(int *)(v15 + 48);
      sub_25924E5B4((uint64_t)v8, (uint64_t)v6, type metadata accessor for StoredPhoto);
      *(void *)&v6[v18] = v17;
      sub_25924E54C((uint64_t)v6, (uint64_t)v11, type metadata accessor for StoredPhoto);
      sub_25924A3A8((uint64_t)v6, &qword_26A37DF58);
      uint64_t v13 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CCA4(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v26;
      }
      unint64_t v20 = *(void *)(v13 + 16);
      unint64_t v19 = *(void *)(v13 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_25925CCA4(v19 > 1, v20 + 1, 1);
        uint64_t v13 = v26;
      }
      *(void *)(v13 + 16) = v20 + 1;
      sub_25924E5B4((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v20, type metadata accessor for StoredPhoto);
      v14 += v23;
      --v12;
    }
    while (v12);
  }
  return v13;
}

uint64_t sub_25924A7A4(uint64_t a1)
{
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E068);
  uint64_t v3 = MEMORY[0x270FA5388](v51);
  uint64_t v50 = (uint64_t)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v49 = (char *)v40 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v48 = (char *)v40 - v7;
  uint64_t v8 = type metadata accessor for ShuffleID();
  uint64_t v47 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (!v11) {
    return v12;
  }
  v40[1] = v1;
  uint64_t v55 = MEMORY[0x263F8EE78];
  sub_25925CD60(0, v11, 0);
  uint64_t result = sub_2592E81E4(a1);
  uint64_t v15 = result;
  uint64_t v16 = 0;
  uint64_t v17 = a1 + 64;
  uint64_t v41 = a1 + 80;
  int64_t v42 = v11;
  uint64_t v45 = v10;
  uint64_t v46 = a1;
  uint64_t v43 = v14;
  uint64_t v44 = a1 + 64;
  while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v20 = (unint64_t)v15 >> 6;
    if ((*(void *)(v17 + 8 * ((unint64_t)v15 >> 6)) & (1 << v15)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v14) {
      goto LABEL_26;
    }
    uint64_t v52 = v16;
    uint64_t v53 = 1 << v15;
    uint64_t v21 = v51;
    uint64_t v54 = *(int *)(v51 + 48);
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = sub_259309440();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    uint64_t v26 = (uint64_t)v48;
    v25(v48, v22 + *(void *)(v24 + 72) * v15, v23);
    uint64_t v27 = *(void *)(*(void *)(a1 + 56) + 8 * v15);
    *(void *)(v26 + v54) = v27;
    BOOL v28 = v49;
    v25(v49, v26, v23);
    *(void *)&v28[*(int *)(v21 + 48)] = v27;
    uint64_t v29 = (uint64_t)v28;
    uint64_t v30 = v50;
    sub_25924A404(v29, v50, &qword_26A37E068);
    swift_bridgeObjectRetain_n();
    sub_25924A3A8(v26, &qword_26A37E068);
    uint64_t v31 = *(int *)(v21 + 48);
    uint64_t v32 = (uint64_t)v45;
    sub_25924B9A0(*(void *)(v30 + v31), (uint64_t)v45);
    sub_25924A3A8(v30, &qword_26A37E068);
    uint64_t v12 = v55;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25925CD60(0, *(void *)(v12 + 16) + 1, 1);
      uint64_t v12 = v55;
    }
    unint64_t v34 = *(void *)(v12 + 16);
    unint64_t v33 = *(void *)(v12 + 24);
    a1 = v46;
    if (v34 >= v33 >> 1)
    {
      sub_25925CD60(v33 > 1, v34 + 1, 1);
      uint64_t v12 = v55;
    }
    *(void *)(v12 + 16) = v34 + 1;
    uint64_t result = sub_25924E5B4(v32, v12+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v34, (uint64_t (*)(void))type metadata accessor for ShuffleID);
    int64_t v18 = 1 << *(unsigned char *)(a1 + 32);
    if (v15 >= v18) {
      goto LABEL_27;
    }
    uint64_t v17 = v44;
    uint64_t v35 = *(void *)(v44 + 8 * v20);
    if ((v35 & v53) == 0) {
      goto LABEL_28;
    }
    LODWORD(v14) = v43;
    if (*(_DWORD *)(a1 + 36) != v43) {
      goto LABEL_29;
    }
    unint64_t v36 = v35 & (-2 << (v15 & 0x3F));
    if (v36)
    {
      int64_t v18 = __clz(__rbit64(v36)) | v15 & 0xFFFFFFFFFFFFFFC0;
      int64_t v19 = v42;
    }
    else
    {
      unint64_t v37 = v20 + 1;
      unint64_t v38 = (unint64_t)(v18 + 63) >> 6;
      int64_t v19 = v42;
      if (v20 + 1 < v38)
      {
        unint64_t v39 = *(void *)(v44 + 8 * v37);
        if (v39)
        {
LABEL_22:
          int64_t v18 = __clz(__rbit64(v39)) + (v37 << 6);
        }
        else
        {
          while (v38 - 2 != v20)
          {
            unint64_t v39 = *(void *)(v41 + 8 * v20++);
            if (v39)
            {
              unint64_t v37 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v16 = v52 + 1;
    uint64_t v15 = v18;
    if (v52 + 1 == v19) {
      return v12;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t GalleryDatabase.database.getter()
{
  return swift_retain();
}

uint64_t GalleryDatabase.__allocating_init(database:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t GalleryDatabase.init(database:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t GalleryDatabase.insert(id:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25924AC60, 0, 0);
}

uint64_t sub_25924AC60()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_25924ACDC, v2, 0);
}

uint64_t sub_25924ACDC()
{
  sub_259247FF0((void (*)(uint64_t *))sub_25924B05C);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_25924AD88(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v19 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2593131D0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v5 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_259313260;
  unint64_t v9 = v8 + v7;
  uint64_t v10 = sub_259309440();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a2, v10);
  swift_storeEnumTagMultiPayload();
  int64_t v11 = (int *)type metadata accessor for ShuffleID();
  *(unsigned char *)(v9 + v6) = *(unsigned char *)(a2 + v11[6]);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v9 + 2 * v6) = *(unsigned char *)(a2 + v11[7]);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v9 + 3 * v6) = *(unsigned char *)(a2 + v11[8]);
  swift_storeEnumTagMultiPayload();
  *(void *)(inited + 32) = v8;
  v12._countAndFlagsBits = 0xD00000000000008ALL;
  v12._object = (void *)0x800000025930C6B0;
  DatabaseConnection.insert(sql:bindings:)(v12, (Swift::OpaquePointer)inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF70);
  uint64_t result = swift_arrayDestroy();
  if (!v14)
  {
    uint64_t v19 = v3;
    uint64_t v15 = *(void *)(a2 + v11[5]);
    MEMORY[0x270FA5388](result);
    v18[2] = a2;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_25928AF28((void (*)(uint64_t *__return_ptr, void *))sub_25924E678, (uint64_t)v18, v15);
    swift_bridgeObjectRelease();
    v17._object = (void *)0x800000025930C740;
    v17._countAndFlagsBits = 0xD000000000000075;
    DatabaseConnection.insert(sql:bindings:)(v17, (Swift::OpaquePointer)v16);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25924B05C(uint64_t *a1)
{
  return sub_25924AD88(a1, *(void *)(v1 + 16));
}

uint64_t sub_25924B078@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v7 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2593131E0;
  int64_t v11 = (char *)(v10 + v9);
  *(void *)int64_t v11 = v6;
  *((void *)v11 + 1) = v5;
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = sub_259309440();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(&v11[v8], a2, v12);
  swift_storeEnumTagMultiPayload();
  *a3 = v10;
  return swift_bridgeObjectRetain();
}

uint64_t GalleryDatabase.queryList()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25924B1E8, 0, 0);
}

uint64_t sub_25924B1E8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 16);
  *(void *)(v0 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25924B20C, v1, 0);
}

uint64_t sub_25924B20C()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection;
  uint64_t v3 = *(sqlite3_stmt **)(v1 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection);
  if (!v3)
  {
    sub_25924EDE4();
    uint64_t v3 = *(sqlite3_stmt **)(v1 + v2);
    if (!v3)
    {
      sub_25924813C();
      swift_allocError();
      unsigned char *v12 = 0;
      goto LABEL_9;
    }
  }
  Swift::String v17 = v3;
  v4._countAndFlagsBits = 0x6E69676562;
  v4._object = (void *)0xE500000000000000;
  DatabaseConnection.execute(sql:)(v4);
  uint64_t v6 = v5;
  if (v5)
  {
LABEL_5:
    Swift::String v17 = v3;
    v10._countAndFlagsBits = 0x6B6361626C6C6F72;
    v10._object = (void *)0xE800000000000000;
    DatabaseConnection.execute(sql:)(v10);
    if (v11)
    {

LABEL_10:
      uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
      return v13();
    }
LABEL_9:
    swift_willThrow();
    goto LABEL_10;
  }
  Swift::String v17 = v3;
  sub_25924B3C0(&v17, &v16);
  Swift::String v17 = v3;
  v7._countAndFlagsBits = 0x74696D6D6F63;
  v7._object = (void *)0xE600000000000000;
  DatabaseConnection.execute(sql:)(v7);
  uint64_t v9 = v16;
  if (v8)
  {
    uint64_t v6 = v8;
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  uint64_t v15 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v15(v9);
}

void sub_25924B3C0(sqlite3_stmt **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ShuffleID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v27 = *a1;
  uint64_t v12 = sub_259264340();
  if (v2) {
    return;
  }
  uint64_t v13 = v12;
  sub_259269764(v12);
  int v14 = sqlite3_step(v13);
  if (v14 == 100)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v27 = v13;
      sub_25924B6D0(&v27, (uint64_t)v11);
      sub_25924E54C((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ShuffleID);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_259248948(0, *(void *)(v15 + 16) + 1, 1, v15);
      }
      unint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      if (v17 >= v16 >> 1) {
        uint64_t v15 = sub_259248948(v16 > 1, v17 + 1, 1, v15);
      }
      *(void *)(v15 + 16) = v17 + 1;
      sub_25924E5B4((uint64_t)v9, v15+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17, (uint64_t (*)(void))type metadata accessor for ShuffleID);
      sub_25924E61C((uint64_t)v11);
      int v18 = sqlite3_step(v13);
    }
    while (v18 == 100);
    unsigned int v19 = v18;
    if (v18 != 101) {
      goto LABEL_13;
    }
LABEL_11:
    sub_259269950(v13);
    uint64_t v20 = sub_25924E130(v15);
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_25924A7A4(v20);
    swift_bridgeObjectRelease();
    *a2 = v21;
    return;
  }
  unsigned int v19 = v14;
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (v14 == 101) {
    goto LABEL_11;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  if (sqlite3_errstr(v19))
  {
    uint64_t v22 = sub_259309C30();
    unint64_t v24 = v23;
  }
  else
  {
    unint64_t v24 = 0xE300000000000000;
    uint64_t v22 = 4271950;
  }
  sub_259248190();
  swift_allocError();
  *uint64_t v25 = v19 | 0xA000000000000000;
  v25[1] = v22;
  void v25[2] = v24;
  swift_willThrow();
  sub_259269950(v13);
}

int *sub_25924B6D0@<X0>(sqlite3_stmt **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_259309440();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v22 = *a1;
  uint64_t result = (int *)DatabaseRow.readUUID(column:)(0);
  if (!v2)
  {
    if (sqlite3_column_type(v9, 1) == 5 || !sqlite3_column_text(v9, 1))
    {
      uint64_t v14 = MEMORY[0x263F8EE88];
    }
    else
    {
      uint64_t v11 = sub_259309C40();
      uint64_t v21 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF00);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2593131D0;
      *(void *)(inited + 32) = v11;
      *(void *)(inited + 40) = v21;
      uint64_t v14 = sub_259255064(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
    }
    int v15 = 2;
    if (sqlite3_column_type(v9, 2) == 5 || (v16 = sqlite3_column_int(v9, 2), int v15 = 3, sqlite3_column_type(v9, 3) == 5))
    {
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v17 = v15;
    }
    else
    {
      int v18 = sqlite3_column_int(v9, 3);
      if (sqlite3_column_type(v9, 4) != 5)
      {
        BOOL v19 = sqlite3_column_int(v9, 4) == 1;
        (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
        uint64_t result = (int *)type metadata accessor for ShuffleID();
        *(void *)(a2 + result[5]) = v14;
        *(unsigned char *)(a2 + result[6]) = v16 == 1;
        *(unsigned char *)(a2 + result[7]) = v18 == 1;
        *(unsigned char *)(a2 + result[8]) = v19;
        return result;
      }
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v17 = 4;
    }
    *(unsigned char *)(v17 + 4) = 0;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (int *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25924B9A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_259309440();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for ShuffleID();
  uint64_t v9 = *((void *)v8 - 1);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v10);
  int v15 = (char *)&v26 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v27 = a2;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    sub_25924E54C(v17, (uint64_t)&v26 - v14, (uint64_t (*)(void))type metadata accessor for ShuffleID);
    BOOL v28 = v7;
    uint64_t v29 = v5;
    int v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v30 = v4;
    v18(v7, v15, v4);
    uint64_t v31 = MEMORY[0x263F8EE78];
    uint64_t v19 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_25924E54C(v17, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ShuffleID);
      uint64_t v20 = *(void *)&v12[v8[5]];
      swift_bridgeObjectRetain();
      sub_25924E61C((uint64_t)v12);
      sub_25925C13C(v20);
      v17 += v19;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_259277568(v31);
    swift_bridgeObjectRelease();
    char v22 = v15[v8[6]];
    char v23 = v15[v8[7]];
    uint64_t v24 = v15[v8[8]];
    sub_25924E61C((uint64_t)v15);
    uint64_t v25 = v27;
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v27, v28, v30);
    *(void *)(v25 + v8[5]) = v21;
    *(unsigned char *)(v25 + v8[6]) = v22;
    *(unsigned char *)(v25 + v8[7]) = v23;
    *(unsigned char *)(v25 + v8[8]) = v24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t GalleryDatabase.queryByDay(id:)(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for DatabaseBinding();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE78);
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25924BD88, 0, 0);
}

uint64_t sub_25924BD88()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[3];
  uint64_t v34 = *(void *)(v0[4] + 16);
  v0[13] = v34;
  sub_25930A3E0();
  sub_259309C20();
  sub_259309C20();
  v0[14] = 0;
  v0[15] = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE80);
  uint64_t v7 = *(void *)(v3 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2593131E0;
  uint64_t v10 = v9 + v8;
  uint64_t v11 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v6, v11);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
  v12(v10, 0, 1, v4);
  uint64_t v13 = v10 + v7;
  *(void *)(v10 + v7) = 16;
  swift_storeEnumTagMultiPayload();
  v12(v10 + v7, 0, 1, v4);
  sub_2592207A0(v10, v2, &qword_26A37DE78);
  sub_25924A404(v2, v1, &qword_26A37DE78);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  int v15 = v14(v1, 1, v4);
  uint64_t v16 = v0[11];
  if (v15 == 1)
  {
    sub_25924A3A8(v16, &qword_26A37DE78);
    unint64_t v17 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v19 = v0[7];
    uint64_t v18 = v0[8];
    sub_25924E5B4(v16, v18, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    sub_25924E5B4(v18, v19, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    unint64_t v17 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v17 = sub_2592488EC(0, *(void *)(v17 + 16) + 1, 1, v17);
    }
    unint64_t v21 = *(void *)(v17 + 16);
    unint64_t v20 = *(void *)(v17 + 24);
    if (v21 >= v20 >> 1) {
      unint64_t v17 = sub_2592488EC(v20 > 1, v21 + 1, 1, v17);
    }
    uint64_t v22 = v0[7];
    *(void *)(v17 + 16) = v21 + 1;
    sub_25924E5B4(v22, v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v21, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
  }
  uint64_t v24 = v0[11];
  uint64_t v23 = v0[12];
  uint64_t v25 = v0[5];
  sub_2592207A0(v13, v23, &qword_26A37DE78);
  sub_25924A404(v23, v24, &qword_26A37DE78);
  int v26 = v14(v24, 1, v25);
  uint64_t v27 = v0[11];
  if (v26 == 1)
  {
    sub_25924A3A8(v27, &qword_26A37DE78);
  }
  else
  {
    uint64_t v29 = v0[7];
    uint64_t v28 = v0[8];
    sub_25924E5B4(v27, v28, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    sub_25924E5B4(v28, v29, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v17 = sub_2592488EC(0, *(void *)(v17 + 16) + 1, 1, v17);
    }
    unint64_t v31 = *(void *)(v17 + 16);
    unint64_t v30 = *(void *)(v17 + 24);
    if (v31 >= v30 >> 1) {
      unint64_t v17 = sub_2592488EC(v30 > 1, v31 + 1, 1, v17);
    }
    uint64_t v32 = v0[7];
    *(void *)(v17 + 16) = v31 + 1;
    sub_25924E5B4(v32, v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v31, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
  }
  v0[16] = v17;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return MEMORY[0x270FA2498](sub_25924C220, v34, 0);
}

uint64_t sub_25924C220()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v3 = v0[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_25925111C(v4, v3, v1, v2, (uint64_t)sub_259246634, 0);
  uint64_t v6 = sub_259244298(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_25924923C(v6);
  swift_bridgeObjectRelease();
  v0[17] = sub_25924495C(v7);
  v0[18] = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_25924C354, 0, 0);
}

uint64_t sub_25924C354()
{
  uint64_t v1 = sub_25924DC74(*(void *)(v0 + 136));
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_25924DA68(v1);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t GalleryDatabase.query(id:day:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for DatabaseBinding();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE78);
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25924C564, 0, 0);
}

uint64_t sub_25924C564()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[2];
  uint64_t v27 = *(void *)(v0[4] + 16);
  v0[13] = v27;
  sub_25930A3E0();
  sub_259309C20();
  sub_259309C20();
  v0[14] = 0;
  v0[15] = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE80);
  uint64_t v6 = *(void *)(v1 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_259313200;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v5, v10);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
  v11(v9, 0, 1, v2);
  *(void *)(v9 + v6) = v4;
  swift_storeEnumTagMultiPayload();
  v11(v9 + v6, 0, 1, v2);
  *(void *)(v9 + 2 * v6) = 16;
  swift_storeEnumTagMultiPayload();
  v11(v9 + 2 * v6, 0, 1, v2);
  uint64_t v28 = v3;
  uint64_t v12 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  unint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v14 = 3;
  uint64_t v15 = v9;
  do
  {
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    uint64_t v18 = v0[5];
    sub_2592207A0(v15, v16, &qword_26A37DE78);
    sub_25924A404(v16, v17, &qword_26A37DE78);
    int v19 = (*v12)(v17, 1, v18);
    uint64_t v20 = v0[11];
    if (v19 == 1)
    {
      sub_25924A3A8(v20, &qword_26A37DE78);
    }
    else
    {
      uint64_t v22 = v0[7];
      uint64_t v21 = v0[8];
      sub_25924E5B4(v20, v21, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      sub_25924E5B4(v21, v22, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v13 = sub_2592488EC(0, *(void *)(v13 + 16) + 1, 1, v13);
      }
      unint64_t v24 = *(void *)(v13 + 16);
      unint64_t v23 = *(void *)(v13 + 24);
      if (v24 >= v23 >> 1) {
        unint64_t v13 = sub_2592488EC(v23 > 1, v24 + 1, 1, v13);
      }
      uint64_t v25 = v0[7];
      *(void *)(v13 + 16) = v24 + 1;
      sub_25924E5B4(v25, v13+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v24, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    }
    v0[17] = v13;
    v15 += v6;
    --v14;
  }
  while (v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return MEMORY[0x270FA2498](sub_259246C28, v27, 0);
}

uint64_t GalleryDatabase.delete(id:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25924C940, 0, 0);
}

uint64_t sub_25924C940()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_25924C9BC, v2, 0);
}

uint64_t sub_25924C9BC()
{
  sub_259247FF0((void (*)(uint64_t *))sub_25924E02C);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_25924CA68(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v4 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2593131D0;
  uint64_t v7 = sub_259309440();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6 + v5, a2, v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_259264340();
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v9 = v8;
  sub_25926906C(v6, v8);
  sub_259269950(v9);
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t GalleryDatabase.deleteAll()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25924CC34, 0, 0);
}

uint64_t sub_25924CC34()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 16);
  *(void *)(v0 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25924CC58, v1, 0);
}

uint64_t sub_25924CC58()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection;
  if (!*(void *)(v1 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection))
  {
    sub_25924EDE4();
    if (!*(void *)(v1 + v2))
    {
      sub_25924813C();
      swift_allocError();
      *uint64_t v11 = 0;
      goto LABEL_8;
    }
  }
  v3._countAndFlagsBits = 0x6E69676562;
  v3._object = (void *)0xE500000000000000;
  DatabaseConnection.execute(sql:)(v3);
  unint64_t v5 = v4;
  if (v4
    || (uint64_t v6 = sub_259264340(),
        sub_25926906C(MEMORY[0x263F8EE78], v6),
        sub_259269950(v6),
        v7._countAndFlagsBits = 0x74696D6D6F63,
        v7._object = (void *)0xE600000000000000,
        DatabaseConnection.execute(sql:)(v7),
        (unint64_t v5 = v8) != 0))
  {
    v9._countAndFlagsBits = 0x6B6361626C6C6F72;
    v9._object = (void *)0xE800000000000000;
    DatabaseConnection.execute(sql:)(v9);
    if (v10)
    {

LABEL_9:
      uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_10;
    }
LABEL_8:
    swift_willThrow();
    goto LABEL_9;
  }
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
LABEL_10:
  return v12();
}

uint64_t GalleryDatabase.relate(photos:to:on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_25924CE38, 0, 0);
}

uint64_t sub_25924CE38()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(*(void *)(v0 + 40) + 16);
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v3 + 32) = v1;
  return MEMORY[0x270FA2498](sub_25924CEBC, v2, 0);
}

uint64_t sub_25924CEBC()
{
  sub_259247FF0((void (*)(uint64_t *))sub_25924E048);
  *(void *)(v0 + 64) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_259247230, 0, 0);
}

uint64_t sub_25924CF68(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v7[5] = *a1;
  v7[2] = a3;
  v7[3] = a4;
  uint64_t v4 = sub_25928ADCC((void (*)(uint64_t *__return_ptr, uint64_t))sub_25924A2B8, (uint64_t)v7, a2);
  v5._object = (void *)0x800000025930C570;
  v5._countAndFlagsBits = 0xD00000000000007CLL;
  DatabaseConnection.insert(sql:bindings:)(v5, (Swift::OpaquePointer)v4);
  return swift_bridgeObjectRelease();
}

uint64_t GalleryDatabase.clearPhotos(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25924D018, 0, 0);
}

uint64_t sub_25924D018()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_25924D094, v2, 0);
}

uint64_t sub_25924D094()
{
  sub_259247FF0((void (*)(uint64_t *))sub_25924E068);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_259247230, 0, 0);
}

uint64_t sub_25924D140(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v4 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2593131D0;
  uint64_t v7 = sub_259309440();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6 + v5, a2, v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_259264340();
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  Swift::String v9 = v8;
  sub_25926906C(v6, v8);
  sub_259269950(v9);
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t GalleryDatabase.deinit()
{
  swift_release();
  return v0;
}

uint64_t GalleryDatabase.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_25924D344(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25924D368, 0, 0);
}

uint64_t sub_25924D368()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_25924D3E4, v2, 0);
}

uint64_t sub_25924D3E4()
{
  sub_259247FF0((void (*)(uint64_t *))sub_25924E6E0);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_25924D490()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_25924A46C;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_25924B1E8, 0, 0);
}

uint64_t sub_25924D538(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25924A46C;
  return GalleryDatabase.query(id:day:)(a1, a2);
}

uint64_t sub_25924D5E0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_259247B00;
  return GalleryDatabase.queryByDay(id:)(a1);
}

uint64_t sub_25924D678(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25924D69C, 0, 0);
}

uint64_t sub_25924D69C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_25924D718, v2, 0);
}

uint64_t sub_25924D718()
{
  sub_259247FF0((void (*)(uint64_t *))sub_25924E6C8);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_25924D7C4(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25924D7E8, 0, 0);
}

uint64_t sub_25924D7E8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_25924D864, v2, 0);
}

uint64_t sub_25924D864()
{
  sub_259247FF0((void (*)(uint64_t *))sub_25924E6B0);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_259247230, 0, 0);
}

uint64_t sub_25924D910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = *v3;
  v4[4] = a3;
  v4[5] = v5;
  return MEMORY[0x270FA2498](sub_25924D938, 0, 0);
}

uint64_t sub_25924D938()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(*(void *)(v0 + 40) + 16);
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v3 + 32) = v1;
  return MEMORY[0x270FA2498](sub_25924D9BC, v2, 0);
}

uint64_t sub_25924D9BC()
{
  sub_259247FF0((void (*)(uint64_t *))sub_25924E698);
  *(void *)(v0 + 64) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_25924DA68(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFA0);
  uint64_t result = sub_25930A5F0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v23 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  int64_t v21 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v22 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = *(void *)(*(void *)(v23 + 48) + 8 * i);
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_25924A4D4(v17);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v22 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v3[6] + 8 * i) = v16;
    *(void *)(v3[7] + 8 * i) = v18;
    uint64_t v19 = v3[2];
    BOOL v13 = __OFADD__(v19, 1);
    uint64_t v20 = v19 + 1;
    if (v13)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v3[2] = v20;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v13 = __OFADD__(v4++, 1);
    if (v13) {
      goto LABEL_25;
    }
    if (v4 >= v21) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v4);
    if (!v14) {
      break;
    }
LABEL_15:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v4 + 1;
  if (v4 + 1 >= v21) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v4 + 2;
  if (v4 + 2 >= v21) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v4 + 3;
  if (v4 + 3 >= v21) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
LABEL_14:
    int64_t v4 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v21) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_15;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_25924DC74(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF58);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v49 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v51 = (uint64_t)&v43 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v50 = (uint64_t)&v43 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (uint64_t)&v43 - v10;
  unint64_t v11 = (void *)MEMORY[0x263F8EE80];
  uint64_t v53 = (void *)MEMORY[0x263F8EE80];
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return (uint64_t)v11;
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = *(void *)(v9 + 72);
  uint64_t v48 = v14;
  uint64_t v46 = v16 + v14;
  uint64_t v45 = v13 | 7;
  long long v44 = xmmword_2593131D0;
  uint64_t v47 = v2;
  while (1)
  {
    uint64_t v18 = v52;
    sub_2592207A0(v15, v52, &qword_26A37DF58);
    uint64_t v19 = *(int *)(v2 + 48);
    uint64_t v20 = v50;
    sub_25924E54C(v18, v50, type metadata accessor for StoredPhoto);
    uint64_t v21 = *(void *)(v18 + v19);
    *(void *)(v20 + v19) = v21;
    uint64_t v22 = *(int *)(v2 + 48);
    uint64_t v23 = v20;
    uint64_t v24 = v51;
    sub_25924E5B4(v23, v51, type metadata accessor for StoredPhoto);
    *(void *)(v24 + v22) = v21;
    sub_25924A3A8(v24, &qword_26A37DF58);
    unint64_t v26 = sub_25925E3F4(v21);
    uint64_t v27 = v11[2];
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      break;
    }
    char v30 = v25;
    if (v11[3] < v29)
    {
      sub_259292F38(v29, 1);
      unint64_t v11 = v53;
      unint64_t v31 = sub_25925E3F4(v21);
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_19;
      }
      unint64_t v26 = v31;
    }
    if (v30)
    {
      uint64_t v33 = v11[7];
      sub_25924A404(v52, v49, &qword_26A37DF58);
      unint64_t v34 = *(void *)(v33 + 8 * v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v33 + 8 * v26) = v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v34 = sub_259248658(0, *(void *)(v34 + 16) + 1, 1, v34);
        *(void *)(v33 + 8 * v26) = v34;
      }
      unint64_t v37 = *(void *)(v34 + 16);
      unint64_t v36 = *(void *)(v34 + 24);
      if (v37 >= v36 >> 1)
      {
        unint64_t v34 = sub_259248658(v36 > 1, v37 + 1, 1, v34);
        *(void *)(v33 + 8 * v26) = v34;
      }
      uint64_t v2 = v47;
      uint64_t v17 = v48;
      *(void *)(v34 + 16) = v37 + 1;
      sub_25924A404(v49, v34 + v17 + v37 * v16, &qword_26A37DF58);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF50);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = v44;
      sub_25924A404(v52, v38 + v48, &qword_26A37DF58);
      v11[(v26 >> 6) + 8] |= 1 << v26;
      *(void *)(v11[6] + 8 * v26) = v21;
      *(void *)(v11[7] + 8 * v26) = v38;
      uint64_t v39 = v11[2];
      BOOL v40 = __OFADD__(v39, 1);
      uint64_t v41 = v39 + 1;
      if (v40) {
        goto LABEL_18;
      }
      v11[2] = v41;
    }
    v15 += v16;
    if (!--v12) {
      return (uint64_t)v11;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_25930A830();
  __break(1u);
  return result;
}

uint64_t sub_25924E02C(uint64_t a1)
{
  return sub_25924CA68(a1, *(void *)(v1 + 16));
}

uint64_t sub_25924E048(void *a1)
{
  return sub_25924CF68(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_25924E068(uint64_t a1)
{
  return sub_25924D140(a1, *(void *)(v1 + 16));
}

unint64_t sub_25924E088()
{
  unint64_t result = qword_26A37E028[0];
  if (!qword_26A37E028[0])
  {
    type metadata accessor for ShuffleID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A37E028);
  }
  return result;
}

uint64_t type metadata accessor for GalleryDatabase()
{
  return self;
}

uint64_t method lookup function for GalleryDatabase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GalleryDatabase);
}

uint64_t dispatch thunk of GalleryDatabase.__allocating_init(database:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_25924E130(uint64_t a1)
{
  uint64_t v2 = sub_259309440();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v51 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ShuffleID() - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (uint64_t)&v39 - v10;
  unint64_t v11 = (void *)MEMORY[0x263F8EE80];
  uint64_t v52 = (void *)MEMORY[0x263F8EE80];
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return (uint64_t)v11;
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = *(void *)(v9 + 72);
  uint64_t v48 = v14;
  uint64_t v49 = (void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  uint64_t v44 = v16 + v14;
  uint64_t v42 = v3 + 32;
  uint64_t v43 = v13 | 7;
  uint64_t v41 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  long long v40 = xmmword_2593131D0;
  uint64_t v45 = v8;
  uint64_t v46 = v3;
  uint64_t v47 = v2;
  while (1)
  {
    uint64_t v19 = v50;
    sub_25924E54C(v15, v50, (uint64_t (*)(void))type metadata accessor for ShuffleID);
    uint64_t v20 = v51;
    (*v49)(v51, v19, v2);
    unint64_t v22 = sub_25925E4B4(v20);
    uint64_t v23 = v11[2];
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      break;
    }
    char v26 = v21;
    if (v11[3] < v25)
    {
      sub_25929378C(v25, 1);
      unint64_t v11 = v52;
      unint64_t v27 = sub_25925E4B4(v51);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_19;
      }
      unint64_t v22 = v27;
    }
    if (v26)
    {
      (*v41)(v51, v2);
      unint64_t v11 = v52;
      uint64_t v29 = v52[7];
      sub_25924E5B4(v50, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ShuffleID);
      unint64_t v30 = *(void *)(v29 + 8 * v22);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v29 + 8 * v22) = v30;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v30 = sub_259248948(0, *(void *)(v30 + 16) + 1, 1, v30);
        *(void *)(v29 + 8 * v22) = v30;
      }
      unint64_t v33 = *(void *)(v30 + 16);
      unint64_t v32 = *(void *)(v30 + 24);
      if (v33 >= v32 >> 1)
      {
        unint64_t v30 = sub_259248948(v32 > 1, v33 + 1, 1, v30);
        *(void *)(v29 + 8 * v22) = v30;
      }
      uint64_t v2 = v47;
      uint64_t v17 = v48;
      *(void *)(v30 + 16) = v33 + 1;
      uint64_t v18 = v30 + v17 + v33 * v16;
      uint64_t v8 = v45;
      sub_25924E5B4((uint64_t)v45, v18, (uint64_t (*)(void))type metadata accessor for ShuffleID);
      uint64_t v3 = v46;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF60);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v40;
      sub_25924E5B4(v50, v34 + v48, (uint64_t (*)(void))type metadata accessor for ShuffleID);
      v11[(v22 >> 6) + 8] |= 1 << v22;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v11[6] + *(void *)(v3 + 72) * v22, v51, v2);
      *(void *)(v11[7] + 8 * v22) = v34;
      uint64_t v35 = v11[2];
      BOOL v36 = __OFADD__(v35, 1);
      uint64_t v37 = v35 + 1;
      if (v36) {
        goto LABEL_18;
      }
      v11[2] = v37;
    }
    v15 += v16;
    if (!--v12) {
      return (uint64_t)v11;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_25930A830();
  __break(1u);
  return result;
}

uint64_t sub_25924E54C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25924E5B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25924E61C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShuffleID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25924E678@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25924B078(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_25924E698(void *a1)
{
  return sub_25924E048(a1);
}

uint64_t sub_25924E6B0(uint64_t a1)
{
  return sub_25924E068(a1);
}

uint64_t sub_25924E6C8(uint64_t a1)
{
  return sub_25924E02C(a1);
}

uint64_t sub_25924E6E0(uint64_t *a1)
{
  return sub_25924B05C(a1);
}

uint64_t sub_25924E6F8(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25924E71C, 0, 0);
}

uint64_t sub_25924E71C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 16);
  *(void *)(v0 + 32) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_25924E794, v1, 0);
}

uint64_t sub_25924E794()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  swift_bridgeObjectRetain();
  sub_25924F450(v1, v2);
  v0[5] = 0;
  swift_release();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_25924E864()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t PhotosFaceIDDatabase.insert(storedPhotos:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_25924E8EC, 0, 0);
}

uint64_t sub_25924E8EC()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0[4] + 24))(v0[3]);
  v0[6] = v1;
  return MEMORY[0x270FA2498](sub_25924E96C, v1, 0);
}

uint64_t sub_25924E96C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[2];
  swift_bridgeObjectRetain();
  sub_25924F450(v1, v2);
  v0[7] = 0;
  swift_release();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_25924EA3C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25924EAA0(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25924EAC4, 0, 0);
}

uint64_t sub_25924EAC4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 16);
  *(void *)(v0 + 32) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_25924EB3C, v1, 0);
}

uint64_t sub_25924EB3C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  swift_bridgeObjectRetain();
  sub_25924F450(v1, v2);
  v0[5] = 0;
  swift_release();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

BOOL sub_25924EC0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_25924EC20()
{
  return sub_25930A910();
}

uint64_t sub_25924EC68()
{
  return sub_25930A8D0();
}

uint64_t sub_25924EC94()
{
  return sub_25930A910();
}

uint64_t PhotosFaceDatabase.__allocating_init(location:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v2 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection) = 0;
  sub_25924FBB0(a1, v2 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_location);
  return v2;
}

uint64_t PhotosFaceDatabase.init(location:)(uint64_t a1)
{
  swift_defaultActor_initialize();
  *(void *)(v1 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection) = 0;
  sub_25924FBB0(a1, v1 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_location);
  return v1;
}

void sub_25924ED90()
{
}

void sub_25924EDE4()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_259309300();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DatabaseConnection.Location();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection;
  if (*(void *)(v0 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection))
  {
    sub_25924813C();
    swift_allocError();
    *unint64_t v11 = 1;
    swift_willThrow();
    return;
  }
  uint64_t v41 = v1;
  if (qword_26B2F3BC0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_259309860();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_26B2F3BA8);
  swift_retain_n();
  uint64_t v14 = sub_259309840();
  int v40 = sub_25930A1D0();
  if (os_log_type_enabled(v14, (os_log_type_t)v40))
  {
    uint64_t v39 = v13;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = (sqlite3 *)swift_slowAlloc();
    uint64_t v43 = (uint64_t)v38;
    *(_DWORD *)uint64_t v15 = 136315138;
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_25925026C(v0 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_location, (uint64_t)v9);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v9, 1, v16) == 1)
    {
      unint64_t v17 = 0xE900000000000079;
      uint64_t v18 = 0x726F6D654D2D6E49;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
      sub_2592502D0();
      uint64_t v18 = sub_25930A730();
      unint64_t v17 = v19;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    uint64_t v42 = sub_25924FC14(v18, v17, &v43);
    sub_25930A2A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25921A000, v14, (os_log_type_t)v40, "Attempting to connect to db at %s", v15, 0xCu);
    uint64_t v20 = v38;
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v20, -1, -1);
    MEMORY[0x25A2DBAF0](v15, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  char v21 = v41;
  static DatabaseConnection.open(location:)(v2 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_location, (sqlite3 **)&v43);
  unint64_t v22 = v21;
  if (!v21)
  {
    uint64_t v23 = (sqlite3 *)v43;
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v25 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    DatabaseConnection.migrate(bundle:migrations:)((NSBundle)v25, (Swift::OpaquePointer)&unk_270728490);
    if (!v26)
    {
      swift_arrayDestroy();

      *(void *)(v2 + v10) = v23;
      uint64_t v29 = sub_259309840();
      os_log_type_t v35 = sub_25930A1D0();
      if (os_log_type_enabled(v29, v35))
      {
        BOOL v36 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)BOOL v36 = 134217984;
        uint64_t v43 = 16;
        sub_25930A2A0();
        _os_log_impl(&dword_25921A000, v29, v35, "DB Initialized. Photo version: %ld", v36, 0xCu);
        MEMORY[0x25A2DBAF0](v36, -1, -1);
      }
      goto LABEL_19;
    }
    swift_arrayDestroy();

    unint64_t v22 = v26;
  }
  id v27 = v22;
  id v28 = v22;
  uint64_t v29 = sub_259309840();
  os_log_type_t v30 = sub_25930A1B0();
  if (os_log_type_enabled(v29, v30))
  {
    unint64_t v31 = (uint8_t *)swift_slowAlloc();
    unint64_t v32 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v31 = 138412290;
    id v33 = v22;
    uint64_t v34 = (sqlite3 *)_swift_stdlib_bridgeErrorToNSError();
    uint64_t v43 = (uint64_t)v34;
    sub_25930A2A0();
    void *v32 = v34;

    _os_log_impl(&dword_25921A000, v29, v30, "Error connecting to DB: %@", v31, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E078);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v32, -1, -1);
    MEMORY[0x25A2DBAF0](v31, -1, -1);

    return;
  }

LABEL_19:
}

uint64_t sub_25924F450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection;
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection);
  if (v5) {
    goto LABEL_2;
  }
  sub_25924EDE4();
  if (!v2)
  {
    uint64_t v5 = *(void *)(a1 + v4);
    if (!v5)
    {
      sub_25924813C();
      swift_allocError();
      *uint64_t v15 = 0;
LABEL_9:
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
LABEL_2:
    uint64_t v16 = v5;
    v6._countAndFlagsBits = 0x6E69676562;
    v6._object = (void *)0xE500000000000000;
    DatabaseConnection.execute(sql:)(v6);
    uint64_t v8 = v7;
    if (!v7)
    {
      uint64_t v16 = v5;
      sub_25925971C(&v16, a2);
      uint64_t v16 = v5;
      v9._countAndFlagsBits = 0x74696D6D6F63;
      v9._object = (void *)0xE600000000000000;
      DatabaseConnection.execute(sql:)(v9);
      uint64_t v8 = v10;
      if (!v10) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v16 = v5;
    v11._countAndFlagsBits = 0x6B6361626C6C6F72;
    v11._object = (void *)0xE800000000000000;
    DatabaseConnection.execute(sql:)(v11);
    if (v12)
    {

      return swift_bridgeObjectRelease();
    }
    goto LABEL_9;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25924F5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection;
  uint64_t v5 = *(uint8_t **)(a1 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection);
  if (v5) {
    goto LABEL_2;
  }
  sub_25924EDE4();
  if (!v2)
  {
    uint64_t v5 = *(uint8_t **)(a1 + v4);
    if (!v5)
    {
      sub_25924813C();
      swift_allocError();
      *uint64_t v15 = 0;
LABEL_9:
      swift_willThrow();
      goto LABEL_10;
    }
LABEL_2:
    uint64_t v16 = v5;
    v6._countAndFlagsBits = 0x6E69676562;
    v6._object = (void *)0xE500000000000000;
    DatabaseConnection.execute(sql:)(v6);
    uint64_t v8 = v7;
    if (!v7)
    {
      uint64_t v16 = v5;
      sub_25925A59C(&v16, a2);
      uint64_t v16 = v5;
      v9._countAndFlagsBits = 0x74696D6D6F63;
      v9._object = (void *)0xE600000000000000;
      DatabaseConnection.execute(sql:)(v9);
      uint64_t v8 = v10;
      if (!v10) {
        goto LABEL_10;
      }
    }
    uint64_t v16 = v5;
    v11._countAndFlagsBits = 0x6B6361626C6C6F72;
    v11._object = (void *)0xE800000000000000;
    DatabaseConnection.execute(sql:)(v11);
    if (v12)
    {

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    goto LABEL_9;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t *sub_25924F728(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection;
  uint64_t v7 = *(unint64_t *)((char *)a1 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection);
  if (!v7)
  {
    uint64_t v13 = a1;
    sub_25924EDE4();
    if (v4)
    {
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    }
    uint64_t v7 = *(unint64_t *)((char *)v13 + v6);
    if (!v7)
    {
      sub_25924813C();
      swift_allocError();
      *uint64_t v16 = 0;
LABEL_10:
      swift_willThrow();
      goto LABEL_11;
    }
  }
  unint64_t v19 = (unint64_t *)v7;
  v8._countAndFlagsBits = 0x6E69676562;
  v8._object = (void *)0xE500000000000000;
  DatabaseConnection.execute(sql:)(v8);
  uint64_t v10 = v9;
  if (!v9)
  {
    uint64_t v18 = v7;
    sub_25925B588(&v18, a4, (unint64_t *)&v19);
    uint64_t v18 = v7;
    v11._countAndFlagsBits = 0x74696D6D6F63;
    v11._object = (void *)0xE600000000000000;
    DatabaseConnection.execute(sql:)(v11);
    uint64_t v10 = v12;
    if (!v12)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = v19;
      swift_bridgeObjectRelease();
      return v13;
    }
    swift_bridgeObjectRelease();
  }
  unint64_t v19 = (unint64_t *)v7;
  uint64_t v13 = (unint64_t *)&v19;
  v14._countAndFlagsBits = 0x6B6361626C6C6F72;
  v14._object = (void *)0xE800000000000000;
  DatabaseConnection.execute(sql:)(v14);
  if (!v15) {
    goto LABEL_10;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

void sub_25924F8D8(void (*a1)(uint64_t *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v8 = OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection;
  uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection);
  if (v9) {
    goto LABEL_2;
  }
  sub_25924EDE4();
  if (v4) {
    return;
  }
  uint64_t v9 = *(void *)(v3 + v8);
  if (v9)
  {
LABEL_2:
    uint64_t v18 = v9;
    v10._countAndFlagsBits = 0x6E69676562;
    v10._object = (void *)0xE500000000000000;
    DatabaseConnection.execute(sql:)(v10);
    uint64_t v12 = v11;
    if (!v11)
    {
      uint64_t v18 = v9;
      a1(&v18);
      uint64_t v18 = v9;
      v13._countAndFlagsBits = 0x74696D6D6F63;
      v13._object = (void *)0xE600000000000000;
      DatabaseConnection.execute(sql:)(v13);
      uint64_t v12 = v14;
      if (!v14) {
        return;
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a3, a2);
    }
    uint64_t v18 = v9;
    v15._countAndFlagsBits = 0x6B6361626C6C6F72;
    v15._object = (void *)0xE800000000000000;
    DatabaseConnection.execute(sql:)(v15);
    if (v16)
    {

      return;
    }
  }
  else
  {
    sub_25924813C();
    swift_allocError();
    *unint64_t v17 = 0;
  }
  swift_willThrow();
}

uint64_t PhotosFaceDatabase.deinit()
{
  sub_259250328(v0 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_location);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t PhotosFaceDatabase.__deallocating_deinit()
{
  sub_259250328(v0 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_location);
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t PhotosFaceDatabase.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_25924FAE4()
{
  return v0;
}

uint64_t sub_25924FAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_25921D238;
  return MEMORY[0x270FA2498](sub_25924E8EC, 0, 0);
}

uint64_t sub_25924FBB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DatabaseConnection.Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25924FC14(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_25924FCE8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_2592510C0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_2592510C0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_25924FCE8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_25930A2B0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_25924FEA4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_25930A480();
  if (!v8)
  {
    sub_25930A570();
    __break(1u);
LABEL_17:
    uint64_t result = sub_25930A620();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_25924FEA4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_25924FF3C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_25925011C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_25925011C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_25924FF3C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_2592500B4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_25930A3F0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_25930A570();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_259309C50();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_25930A620();
    __break(1u);
LABEL_14:
    uint64_t result = sub_25930A570();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_2592500B4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E0E8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_25925011C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E0E8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  Swift::String v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925026C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DatabaseConnection.Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2592502D0()
{
  unint64_t result = qword_26B2F32C0;
  if (!qword_26B2F32C0)
  {
    sub_259309300();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2F32C0);
  }
  return result;
}

uint64_t sub_259250328(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DatabaseConnection.Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_259250384()
{
  return type metadata accessor for PhotosFaceDatabase();
}

uint64_t type metadata accessor for PhotosFaceDatabase()
{
  uint64_t result = qword_26B2F32E0;
  if (!qword_26B2F32E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2592503D8()
{
  uint64_t result = type metadata accessor for DatabaseConnection.Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PhotosFaceDatabase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PhotosFaceDatabase);
}

uint64_t dispatch thunk of PhotosFaceDatabase.__allocating_init(location:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of PhotosFaceDatabase.activate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of PhotosFaceDatabase.connect()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of PhotosFaceDatabase.transaction<A>(block:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of PhotosFaceIDDatabase.database.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PhotosFaceIDDatabase.insert(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  int64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int64_t v7 = v3;
  v7[1] = sub_2592438A0;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PhotosFaceIDDatabase.queryList()(uint64_t a1, uint64_t a2)
{
  int64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 40) + **(int **)(a2 + 40));
  size_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *size_t v5 = v2;
  v5[1] = sub_259251394;
  return v7(a1, a2);
}

uint64_t dispatch thunk of PhotosFaceIDDatabase.query(id:day:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  size_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 48) + **(int **)(a4 + 48));
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *int64_t v9 = v4;
  v9[1] = sub_259251394;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PhotosFaceIDDatabase.queryByDay(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 56) + **(int **)(a3 + 56));
  int64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int64_t v7 = v3;
  v7[1] = sub_259250958;
  return v9(a1, a2, a3);
}

uint64_t sub_259250958(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of PhotosFaceIDDatabase.delete(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 64) + **(int **)(a3 + 64));
  int64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int64_t v7 = v3;
  v7[1] = sub_2592438A0;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PhotosFaceIDDatabase.clearPhotos(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 72) + **(int **)(a3 + 72));
  int64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int64_t v7 = v3;
  v7[1] = sub_25921D238;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  Swift::String v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 80) + **(int **)(a5 + 80));
  size_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *size_t v11 = v5;
  v11[1] = sub_2592438A0;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PhotosFaceIDDatabase.insert(storedPhotos:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 88) + **(int **)(a3 + 88));
  int64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *int64_t v7 = v3;
  v7[1] = sub_2592438A0;
  return v9(a1, a2, a3);
}

uint64_t getEnumTagSinglePayload for PhotosFaceDatabase.Failure(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PhotosFaceDatabase.Failure(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259250FD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_259251000(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for PhotosFaceDatabase.Failure()
{
  return &type metadata for PhotosFaceDatabase.Failure;
}

unint64_t sub_25925101C()
{
  unint64_t result = qword_26A37E0C8[0];
  if (!qword_26A37E0C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A37E0C8);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_2592510C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_25925111C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_259251174(a1, a2, a3, a4, a5, a6, sub_259268688);
}

uint64_t sub_259251148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_259251174(a1, a2, a3, a4, a5, a6, sub_2592686D0);
}

uint64_t sub_259251174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, sqlite3_stmt *, uint64_t, uint64_t))
{
  uint64_t v10 = OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection;
  if (*(void *)(a1 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection))
  {
    uint64_t v11 = a5;
    uint64_t v12 = a6;
    goto LABEL_3;
  }
  uint64_t v11 = a5;
  uint64_t v12 = a6;
  sub_25924EDE4();
  if (v7)
  {
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    return a3;
  }
  if (!*(void *)(a1 + v10))
  {
    sub_25924813C();
    swift_allocError();
    *uint64_t v18 = 0;
    swift_willThrow();
    goto LABEL_6;
  }
LABEL_3:
  v13._countAndFlagsBits = 0x6E69676562;
  v13._object = (void *)0xE500000000000000;
  DatabaseConnection.execute(sql:)(v13);
  Swift::String v15 = v14;
  if (!v14)
  {
    unint64_t v17 = sub_259264340();
    a3 = a7(a4, v17, v11, v12);
    sub_259269950(v17);
    v19._countAndFlagsBits = 0x74696D6D6F63;
    v19._object = (void *)0xE600000000000000;
    DatabaseConnection.execute(sql:)(v19);
    Swift::String v15 = v20;
    if (!v20)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return a3;
    }
    swift_bridgeObjectRelease();
  }
  v21._countAndFlagsBits = 0x6B6361626C6C6F72;
  v21._object = (void *)0xE800000000000000;
  DatabaseConnection.execute(sql:)(v21);
  if (!v22)
  {
    swift_willThrow();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a3;
}

uint64_t sub_259251398(uint64_t a1)
{
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF58);
  uint64_t v3 = *(void *)(v25 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v25);
  unsigned int v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for StoredPhoto(0);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v22 = v1;
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_25925CCA4(0, v12, 0);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v23 = *(void *)(v3 + 72);
    uint64_t v15 = v25;
    do
    {
      uint64_t v16 = *(int *)(v15 + 48);
      sub_25924E54C(v14, (uint64_t)v8, type metadata accessor for StoredPhoto);
      uint64_t v17 = *(void *)(v14 + v16);
      *(void *)&v8[v16] = v17;
      uint64_t v18 = *(int *)(v15 + 48);
      sub_25924E5B4((uint64_t)v8, (uint64_t)v6, type metadata accessor for StoredPhoto);
      *(void *)&v6[v18] = v17;
      sub_25924E54C((uint64_t)v6, (uint64_t)v11, type metadata accessor for StoredPhoto);
      sub_25924A3A8((uint64_t)v6, &qword_26A37DF58);
      uint64_t v13 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CCA4(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v26;
      }
      unint64_t v20 = *(void *)(v13 + 16);
      unint64_t v19 = *(void *)(v13 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_25925CCA4(v19 > 1, v20 + 1, 1);
        uint64_t v13 = v26;
      }
      *(void *)(v13 + 16) = v20 + 1;
      sub_25924E5B4((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v20, type metadata accessor for StoredPhoto);
      v14 += v23;
      --v12;
    }
    while (v12);
  }
  return v13;
}

uint64_t sub_259251668(uint64_t a1)
{
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E068);
  uint64_t v3 = MEMORY[0x270FA5388](v51);
  uint64_t v50 = (uint64_t)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v49 = (char *)v40 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v48 = (char *)v40 - v7;
  uint64_t v8 = type metadata accessor for ShuffleID();
  uint64_t v47 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (!v11) {
    return v12;
  }
  v40[1] = v1;
  uint64_t v55 = MEMORY[0x263F8EE78];
  sub_25925CD60(0, v11, 0);
  uint64_t result = sub_2592E81E4(a1);
  uint64_t v15 = result;
  uint64_t v16 = 0;
  uint64_t v17 = a1 + 64;
  uint64_t v41 = a1 + 80;
  int64_t v42 = v11;
  uint64_t v45 = v10;
  uint64_t v46 = a1;
  uint64_t v43 = v14;
  uint64_t v44 = a1 + 64;
  while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v20 = (unint64_t)v15 >> 6;
    if ((*(void *)(v17 + 8 * ((unint64_t)v15 >> 6)) & (1 << v15)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v14) {
      goto LABEL_26;
    }
    uint64_t v52 = v16;
    uint64_t v53 = 1 << v15;
    uint64_t v21 = v51;
    uint64_t v54 = *(int *)(v51 + 48);
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = sub_259309440();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    uint64_t v26 = (uint64_t)v48;
    v25(v48, v22 + *(void *)(v24 + 72) * v15, v23);
    uint64_t v27 = *(void *)(*(void *)(a1 + 56) + 8 * v15);
    *(void *)(v26 + v54) = v27;
    id v28 = v49;
    v25(v49, v26, v23);
    *(void *)&v28[*(int *)(v21 + 48)] = v27;
    uint64_t v29 = (uint64_t)v28;
    uint64_t v30 = v50;
    sub_25924A404(v29, v50, &qword_26A37E068);
    swift_bridgeObjectRetain_n();
    sub_25924A3A8(v26, &qword_26A37E068);
    uint64_t v31 = *(int *)(v21 + 48);
    uint64_t v32 = (uint64_t)v45;
    sub_259252714(*(void *)(v30 + v31), (uint64_t)v45);
    sub_25924A3A8(v30, &qword_26A37E068);
    uint64_t v12 = v55;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25925CD60(0, *(void *)(v12 + 16) + 1, 1);
      uint64_t v12 = v55;
    }
    unint64_t v34 = *(void *)(v12 + 16);
    unint64_t v33 = *(void *)(v12 + 24);
    a1 = v46;
    if (v34 >= v33 >> 1)
    {
      sub_25925CD60(v33 > 1, v34 + 1, 1);
      uint64_t v12 = v55;
    }
    *(void *)(v12 + 16) = v34 + 1;
    uint64_t result = sub_25924E5B4(v32, v12+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v34, (uint64_t (*)(void))type metadata accessor for ShuffleID);
    int64_t v18 = 1 << *(unsigned char *)(a1 + 32);
    if (v15 >= v18) {
      goto LABEL_27;
    }
    uint64_t v17 = v44;
    uint64_t v35 = *(void *)(v44 + 8 * v20);
    if ((v35 & v53) == 0) {
      goto LABEL_28;
    }
    LODWORD(v14) = v43;
    if (*(_DWORD *)(a1 + 36) != v43) {
      goto LABEL_29;
    }
    unint64_t v36 = v35 & (-2 << (v15 & 0x3F));
    if (v36)
    {
      int64_t v18 = __clz(__rbit64(v36)) | v15 & 0xFFFFFFFFFFFFFFC0;
      int64_t v19 = v42;
    }
    else
    {
      unint64_t v37 = v20 + 1;
      unint64_t v38 = (unint64_t)(v18 + 63) >> 6;
      int64_t v19 = v42;
      if (v20 + 1 < v38)
      {
        unint64_t v39 = *(void *)(v44 + 8 * v37);
        if (v39)
        {
LABEL_22:
          int64_t v18 = __clz(__rbit64(v39)) + (v37 << 6);
        }
        else
        {
          while (v38 - 2 != v20)
          {
            unint64_t v39 = *(void *)(v41 + 8 * v20++);
            if (v39)
            {
              unint64_t v37 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v16 = v52 + 1;
    uint64_t v15 = v18;
    if (v52 + 1 == v19) {
      return v12;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t ShuffleDatabase.database.getter()
{
  return swift_retain();
}

uint64_t ShuffleDatabase.__allocating_init(database:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t ShuffleDatabase.init(database:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t ShuffleDatabase.insert(id:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_259251B24, 0, 0);
}

uint64_t sub_259251B24()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_259251BA0, v2, 0);
}

uint64_t sub_259251BA0()
{
  sub_259247FF0((void (*)(uint64_t *))sub_259251F20);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_259251C4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v19 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF68);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2593131D0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v5 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_259313260;
  unint64_t v9 = v8 + v7;
  uint64_t v10 = sub_259309440();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a2, v10);
  swift_storeEnumTagMultiPayload();
  int64_t v11 = (int *)type metadata accessor for ShuffleID();
  *(unsigned char *)(v9 + v6) = *(unsigned char *)(a2 + v11[6]);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v9 + 2 * v6) = *(unsigned char *)(a2 + v11[7]);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v9 + 3 * v6) = *(unsigned char *)(a2 + v11[8]);
  swift_storeEnumTagMultiPayload();
  *(void *)(inited + 32) = v8;
  v12._countAndFlagsBits = 0xD00000000000008ALL;
  v12._object = (void *)0x800000025930D1A0;
  DatabaseConnection.insert(sql:bindings:)(v12, (Swift::OpaquePointer)inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF70);
  uint64_t result = swift_arrayDestroy();
  if (!v14)
  {
    uint64_t v19 = v3;
    uint64_t v15 = *(void *)(a2 + v11[5]);
    MEMORY[0x270FA5388](result);
    v18[2] = a2;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_25928AF28((void (*)(uint64_t *__return_ptr, void *))sub_25924E678, (uint64_t)v18, v15);
    swift_bridgeObjectRelease();
    v17._object = (void *)0x800000025930D230;
    v17._countAndFlagsBits = 0xD000000000000075;
    DatabaseConnection.insert(sql:bindings:)(v17, (Swift::OpaquePointer)v16);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259251F20(uint64_t *a1)
{
  return sub_259251C4C(a1, *(void *)(v1 + 16));
}

uint64_t ShuffleDatabase.queryList()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_259251F5C, 0, 0);
}

uint64_t sub_259251F5C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 16);
  *(void *)(v0 + 24) = v1;
  return MEMORY[0x270FA2498](sub_259251F80, v1, 0);
}

uint64_t sub_259251F80()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection;
  uint64_t v3 = *(sqlite3_stmt **)(v1 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection);
  if (!v3)
  {
    sub_25924EDE4();
    uint64_t v3 = *(sqlite3_stmt **)(v1 + v2);
    if (!v3)
    {
      sub_25924813C();
      swift_allocError();
      unsigned char *v12 = 0;
      goto LABEL_9;
    }
  }
  Swift::String v17 = v3;
  v4._countAndFlagsBits = 0x6E69676562;
  v4._object = (void *)0xE500000000000000;
  DatabaseConnection.execute(sql:)(v4);
  uint64_t v6 = v5;
  if (v5)
  {
LABEL_5:
    Swift::String v17 = v3;
    v10._countAndFlagsBits = 0x6B6361626C6C6F72;
    v10._object = (void *)0xE800000000000000;
    DatabaseConnection.execute(sql:)(v10);
    if (v11)
    {

LABEL_10:
      uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
      return v13();
    }
LABEL_9:
    swift_willThrow();
    goto LABEL_10;
  }
  Swift::String v17 = v3;
  sub_259252134(&v17, &v16);
  Swift::String v17 = v3;
  v7._countAndFlagsBits = 0x74696D6D6F63;
  v7._object = (void *)0xE600000000000000;
  DatabaseConnection.execute(sql:)(v7);
  uint64_t v9 = v16;
  if (v8)
  {
    uint64_t v6 = v8;
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  uint64_t v15 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v15(v9);
}

void sub_259252134(sqlite3_stmt **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ShuffleID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v27 = *a1;
  Swift::String v12 = sub_259264340();
  if (v2) {
    return;
  }
  uint64_t v13 = v12;
  sub_259269764(v12);
  int v14 = sqlite3_step(v13);
  if (v14 == 100)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v27 = v13;
      sub_259252444(&v27, (uint64_t)v11);
      sub_25924E54C((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ShuffleID);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_259248948(0, *(void *)(v15 + 16) + 1, 1, v15);
      }
      unint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      if (v17 >= v16 >> 1) {
        uint64_t v15 = sub_259248948(v16 > 1, v17 + 1, 1, v15);
      }
      *(void *)(v15 + 16) = v17 + 1;
      sub_25924E5B4((uint64_t)v9, v15+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17, (uint64_t (*)(void))type metadata accessor for ShuffleID);
      sub_25924E61C((uint64_t)v11);
      int v18 = sqlite3_step(v13);
    }
    while (v18 == 100);
    unsigned int v19 = v18;
    if (v18 != 101) {
      goto LABEL_13;
    }
LABEL_11:
    sub_259269950(v13);
    uint64_t v20 = sub_259254C48(v15);
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_259251668(v20);
    swift_bridgeObjectRelease();
    *a2 = v21;
    return;
  }
  unsigned int v19 = v14;
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (v14 == 101) {
    goto LABEL_11;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  if (sqlite3_errstr(v19))
  {
    uint64_t v22 = sub_259309C30();
    unint64_t v24 = v23;
  }
  else
  {
    unint64_t v24 = 0xE300000000000000;
    uint64_t v22 = 4271950;
  }
  sub_259248190();
  swift_allocError();
  *uint64_t v25 = v19 | 0xA000000000000000;
  v25[1] = v22;
  void v25[2] = v24;
  swift_willThrow();
  sub_259269950(v13);
}

int *sub_259252444@<X0>(sqlite3_stmt **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_259309440();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v22 = *a1;
  uint64_t result = (int *)DatabaseRow.readUUID(column:)(0);
  if (!v2)
  {
    if (sqlite3_column_type(v9, 1) == 5 || !sqlite3_column_text(v9, 1))
    {
      uint64_t v14 = MEMORY[0x263F8EE88];
    }
    else
    {
      uint64_t v11 = sub_259309C40();
      uint64_t v21 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF00);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2593131D0;
      *(void *)(inited + 32) = v11;
      *(void *)(inited + 40) = v21;
      uint64_t v14 = sub_259255064(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
    }
    int v15 = 2;
    if (sqlite3_column_type(v9, 2) == 5 || (v16 = sqlite3_column_int(v9, 2), int v15 = 3, sqlite3_column_type(v9, 3) == 5))
    {
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v17 = v15;
    }
    else
    {
      int v18 = sqlite3_column_int(v9, 3);
      if (sqlite3_column_type(v9, 4) != 5)
      {
        BOOL v19 = sqlite3_column_int(v9, 4) == 1;
        (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
        uint64_t result = (int *)type metadata accessor for ShuffleID();
        *(void *)(a2 + result[5]) = v14;
        *(unsigned char *)(a2 + result[6]) = v16 == 1;
        *(unsigned char *)(a2 + result[7]) = v18 == 1;
        *(unsigned char *)(a2 + result[8]) = v19;
        return result;
      }
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v17 = 4;
    }
    *(unsigned char *)(v17 + 4) = 0;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (int *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259252714@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_259309440();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for ShuffleID();
  uint64_t v9 = *((void *)v8 - 1);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v10);
  int v15 = (char *)&v26 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v27 = a2;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    sub_25924E54C(v17, (uint64_t)&v26 - v14, (uint64_t (*)(void))type metadata accessor for ShuffleID);
    id v28 = v7;
    uint64_t v29 = v5;
    int v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v30 = v4;
    v18(v7, v15, v4);
    uint64_t v31 = MEMORY[0x263F8EE78];
    uint64_t v19 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_25924E54C(v17, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ShuffleID);
      uint64_t v20 = *(void *)&v12[v8[5]];
      swift_bridgeObjectRetain();
      sub_25924E61C((uint64_t)v12);
      sub_25925C13C(v20);
      v17 += v19;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_259277568(v31);
    swift_bridgeObjectRelease();
    char v22 = v15[v8[6]];
    char v23 = v15[v8[7]];
    uint64_t v24 = v15[v8[8]];
    sub_25924E61C((uint64_t)v15);
    uint64_t v25 = v27;
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v27, v28, v30);
    *(void *)(v25 + v8[5]) = v21;
    *(unsigned char *)(v25 + v8[6]) = v22;
    *(unsigned char *)(v25 + v8[7]) = v23;
    *(unsigned char *)(v25 + v8[8]) = v24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ShuffleDatabase.queryByDay(id:)(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for DatabaseBinding();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE78);
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259252AFC, 0, 0);
}

uint64_t sub_259252AFC()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[3];
  uint64_t v34 = *(void *)(v0[4] + 16);
  v0[13] = v34;
  sub_25930A3E0();
  sub_259309C20();
  sub_259309C20();
  v0[14] = 0;
  v0[15] = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE80);
  uint64_t v7 = *(void *)(v3 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2593131E0;
  uint64_t v10 = v9 + v8;
  uint64_t v11 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v6, v11);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
  v12(v10, 0, 1, v4);
  uint64_t v13 = v10 + v7;
  *(void *)(v10 + v7) = 16;
  swift_storeEnumTagMultiPayload();
  v12(v10 + v7, 0, 1, v4);
  sub_2592207A0(v10, v2, &qword_26A37DE78);
  sub_25924A404(v2, v1, &qword_26A37DE78);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  int v15 = v14(v1, 1, v4);
  uint64_t v16 = v0[11];
  if (v15 == 1)
  {
    sub_25924A3A8(v16, &qword_26A37DE78);
    unint64_t v17 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v19 = v0[7];
    uint64_t v18 = v0[8];
    sub_25924E5B4(v16, v18, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    sub_25924E5B4(v18, v19, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    unint64_t v17 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v17 = sub_2592488EC(0, *(void *)(v17 + 16) + 1, 1, v17);
    }
    unint64_t v21 = *(void *)(v17 + 16);
    unint64_t v20 = *(void *)(v17 + 24);
    if (v21 >= v20 >> 1) {
      unint64_t v17 = sub_2592488EC(v20 > 1, v21 + 1, 1, v17);
    }
    uint64_t v22 = v0[7];
    *(void *)(v17 + 16) = v21 + 1;
    sub_25924E5B4(v22, v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v21, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
  }
  uint64_t v24 = v0[11];
  uint64_t v23 = v0[12];
  uint64_t v25 = v0[5];
  sub_2592207A0(v13, v23, &qword_26A37DE78);
  sub_25924A404(v23, v24, &qword_26A37DE78);
  int v26 = v14(v24, 1, v25);
  uint64_t v27 = v0[11];
  if (v26 == 1)
  {
    sub_25924A3A8(v27, &qword_26A37DE78);
  }
  else
  {
    uint64_t v29 = v0[7];
    uint64_t v28 = v0[8];
    sub_25924E5B4(v27, v28, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    sub_25924E5B4(v28, v29, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v17 = sub_2592488EC(0, *(void *)(v17 + 16) + 1, 1, v17);
    }
    unint64_t v31 = *(void *)(v17 + 16);
    unint64_t v30 = *(void *)(v17 + 24);
    if (v31 >= v30 >> 1) {
      unint64_t v17 = sub_2592488EC(v30 > 1, v31 + 1, 1, v17);
    }
    uint64_t v32 = v0[7];
    *(void *)(v17 + 16) = v31 + 1;
    sub_25924E5B4(v32, v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v31, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
  }
  v0[16] = v17;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return MEMORY[0x270FA2498](sub_259252F94, v34, 0);
}

uint64_t sub_259252F94()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v3 = v0[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_25925111C(v4, v3, v1, v2, (uint64_t)sub_259246634, 0);
  uint64_t v6 = sub_259244298(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_25924923C(v6);
  swift_bridgeObjectRelease();
  v0[17] = sub_25924495C(v7);
  v0[18] = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2592530C8, 0, 0);
}

uint64_t sub_2592530C8()
{
  uint64_t v1 = sub_2592547E8(*(void *)(v0 + 136));
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_2592545DC(v1);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t ShuffleDatabase.query(id:day:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for DatabaseBinding();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE78);
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2592532D8, 0, 0);
}

uint64_t sub_2592532D8()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[2];
  uint64_t v27 = *(void *)(v0[4] + 16);
  v0[13] = v27;
  sub_25930A3E0();
  sub_259309C20();
  sub_259309C20();
  v0[14] = 0;
  v0[15] = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE80);
  uint64_t v6 = *(void *)(v1 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_259313200;
  uint64_t v9 = v8 + v7;
  uint64_t v10 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v5, v10);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
  v11(v9, 0, 1, v2);
  *(void *)(v9 + v6) = v4;
  swift_storeEnumTagMultiPayload();
  v11(v9 + v6, 0, 1, v2);
  *(void *)(v9 + 2 * v6) = 16;
  swift_storeEnumTagMultiPayload();
  v11(v9 + 2 * v6, 0, 1, v2);
  uint64_t v28 = v3;
  uint64_t v12 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  unint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v14 = 3;
  uint64_t v15 = v9;
  do
  {
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    uint64_t v18 = v0[5];
    sub_2592207A0(v15, v16, &qword_26A37DE78);
    sub_25924A404(v16, v17, &qword_26A37DE78);
    int v19 = (*v12)(v17, 1, v18);
    uint64_t v20 = v0[11];
    if (v19 == 1)
    {
      sub_25924A3A8(v20, &qword_26A37DE78);
    }
    else
    {
      uint64_t v22 = v0[7];
      uint64_t v21 = v0[8];
      sub_25924E5B4(v20, v21, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      sub_25924E5B4(v21, v22, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v13 = sub_2592488EC(0, *(void *)(v13 + 16) + 1, 1, v13);
      }
      unint64_t v24 = *(void *)(v13 + 16);
      unint64_t v23 = *(void *)(v13 + 24);
      if (v24 >= v23 >> 1) {
        unint64_t v13 = sub_2592488EC(v23 > 1, v24 + 1, 1, v13);
      }
      uint64_t v25 = v0[7];
      *(void *)(v13 + 16) = v24 + 1;
      sub_25924E5B4(v25, v13+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v24, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    }
    v0[17] = v13;
    v15 += v6;
    --v14;
  }
  while (v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return MEMORY[0x270FA2498](sub_259246C28, v27, 0);
}

uint64_t ShuffleDatabase.delete(id:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_2592536B4, 0, 0);
}

uint64_t sub_2592536B4()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_259253730, v2, 0);
}

uint64_t sub_259253730()
{
  sub_259247FF0((void (*)(uint64_t *))sub_259254BA0);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_2592537DC(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v4 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2593131D0;
  uint64_t v7 = sub_259309440();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6 + v5, a2, v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_259264340();
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v9 = v8;
  sub_25926906C(v6, v8);
  sub_259269950(v9);
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t ShuffleDatabase.relate(photos:to:on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_2592539AC, 0, 0);
}

uint64_t sub_2592539AC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(*(void *)(v0 + 40) + 16);
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v3 + 32) = v1;
  return MEMORY[0x270FA2498](sub_259253A30, v2, 0);
}

uint64_t sub_259253A30()
{
  sub_259247FF0((void (*)(uint64_t *))sub_259254BBC);
  *(void *)(v0 + 64) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_259247230, 0, 0);
}

uint64_t sub_259253ADC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v7[5] = *a1;
  v7[2] = a3;
  v7[3] = a4;
  uint64_t v4 = sub_25928ADCC((void (*)(uint64_t *__return_ptr, uint64_t))sub_25924A2B8, (uint64_t)v7, a2);
  v5._object = (void *)0x800000025930D060;
  v5._countAndFlagsBits = 0xD00000000000007CLL;
  DatabaseConnection.insert(sql:bindings:)(v5, (Swift::OpaquePointer)v4);
  return swift_bridgeObjectRelease();
}

uint64_t ShuffleDatabase.clearPhotos(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_259253B8C, 0, 0);
}

uint64_t sub_259253B8C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_259253C08, v2, 0);
}

uint64_t sub_259253C08()
{
  sub_259247FF0((void (*)(uint64_t *))sub_259254BDC);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_259247230, 0, 0);
}

uint64_t sub_259253CB4(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v4 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2593131D0;
  uint64_t v7 = sub_259309440();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6 + v5, a2, v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_259264340();
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v9 = v8;
  sub_25926906C(v6, v8);
  sub_259269950(v9);
  swift_setDeallocating();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t ShuffleDatabase.deinit()
{
  swift_release();
  return v0;
}

uint64_t ShuffleDatabase.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_259253EB8(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_259253EDC, 0, 0);
}

uint64_t sub_259253EDC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_259253F58, v2, 0);
}

uint64_t sub_259253F58()
{
  sub_259247FF0((void (*)(uint64_t *))sub_259255250);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_259254004()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_25924A46C;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_259251F5C, 0, 0);
}

uint64_t sub_2592540AC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25924A46C;
  return ShuffleDatabase.query(id:day:)(a1, a2);
}

uint64_t sub_259254154(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_259247B00;
  return ShuffleDatabase.queryByDay(id:)(a1);
}

uint64_t sub_2592541EC(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_259254210, 0, 0);
}

uint64_t sub_259254210()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_25925428C, v2, 0);
}

uint64_t sub_25925428C()
{
  sub_259247FF0((void (*)(uint64_t *))sub_259255238);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_259254338(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_25925435C, 0, 0);
}

uint64_t sub_25925435C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_2592543D8, v2, 0);
}

uint64_t sub_2592543D8()
{
  sub_259247FF0((void (*)(uint64_t *))sub_259255220);
  *(void *)(v0 + 48) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_259247230, 0, 0);
}

uint64_t sub_259254484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = *v3;
  v4[4] = a3;
  v4[5] = v5;
  return MEMORY[0x270FA2498](sub_2592544AC, 0, 0);
}

uint64_t sub_2592544AC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(*(void *)(v0 + 40) + 16);
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v3 + 32) = v1;
  return MEMORY[0x270FA2498](sub_259254530, v2, 0);
}

uint64_t sub_259254530()
{
  sub_259247FF0((void (*)(uint64_t *))sub_259255208);
  *(void *)(v0 + 64) = 0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25924A470, 0, 0);
}

uint64_t sub_2592545DC(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFA0);
  uint64_t result = sub_25930A5F0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v23 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  int64_t v21 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v22 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = *(void *)(*(void *)(v23 + 48) + 8 * i);
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_259251398(v17);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v22 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v3[6] + 8 * i) = v16;
    *(void *)(v3[7] + 8 * i) = v18;
    uint64_t v19 = v3[2];
    BOOL v13 = __OFADD__(v19, 1);
    uint64_t v20 = v19 + 1;
    if (v13)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v3[2] = v20;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v13 = __OFADD__(v4++, 1);
    if (v13) {
      goto LABEL_25;
    }
    if (v4 >= v21) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v4);
    if (!v14) {
      break;
    }
LABEL_15:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v4 + 1;
  if (v4 + 1 >= v21) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v4 + 2;
  if (v4 + 2 >= v21) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v4 + 3;
  if (v4 + 3 >= v21) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
LABEL_14:
    int64_t v4 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v21) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_15;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2592547E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF58);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v49 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v51 = (uint64_t)&v43 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v50 = (uint64_t)&v43 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (uint64_t)&v43 - v10;
  unint64_t v11 = (void *)MEMORY[0x263F8EE80];
  uint64_t v53 = (void *)MEMORY[0x263F8EE80];
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return (uint64_t)v11;
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = *(void *)(v9 + 72);
  uint64_t v48 = v14;
  uint64_t v46 = v16 + v14;
  uint64_t v45 = v13 | 7;
  long long v44 = xmmword_2593131D0;
  uint64_t v47 = v2;
  while (1)
  {
    uint64_t v18 = v52;
    sub_2592207A0(v15, v52, &qword_26A37DF58);
    uint64_t v19 = *(int *)(v2 + 48);
    uint64_t v20 = v50;
    sub_25924E54C(v18, v50, type metadata accessor for StoredPhoto);
    uint64_t v21 = *(void *)(v18 + v19);
    *(void *)(v20 + v19) = v21;
    uint64_t v22 = *(int *)(v2 + 48);
    uint64_t v23 = v20;
    uint64_t v24 = v51;
    sub_25924E5B4(v23, v51, type metadata accessor for StoredPhoto);
    *(void *)(v24 + v22) = v21;
    sub_25924A3A8(v24, &qword_26A37DF58);
    unint64_t v26 = sub_25925E3F4(v21);
    uint64_t v27 = v11[2];
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      break;
    }
    char v30 = v25;
    if (v11[3] < v29)
    {
      sub_259292F38(v29, 1);
      unint64_t v11 = v53;
      unint64_t v31 = sub_25925E3F4(v21);
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_19;
      }
      unint64_t v26 = v31;
    }
    if (v30)
    {
      uint64_t v33 = v11[7];
      sub_25924A404(v52, v49, &qword_26A37DF58);
      unint64_t v34 = *(void *)(v33 + 8 * v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v33 + 8 * v26) = v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v34 = sub_259248658(0, *(void *)(v34 + 16) + 1, 1, v34);
        *(void *)(v33 + 8 * v26) = v34;
      }
      unint64_t v37 = *(void *)(v34 + 16);
      unint64_t v36 = *(void *)(v34 + 24);
      if (v37 >= v36 >> 1)
      {
        unint64_t v34 = sub_259248658(v36 > 1, v37 + 1, 1, v34);
        *(void *)(v33 + 8 * v26) = v34;
      }
      uint64_t v2 = v47;
      uint64_t v17 = v48;
      *(void *)(v34 + 16) = v37 + 1;
      sub_25924A404(v49, v34 + v17 + v37 * v16, &qword_26A37DF58);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF50);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = v44;
      sub_25924A404(v52, v38 + v48, &qword_26A37DF58);
      v11[(v26 >> 6) + 8] |= 1 << v26;
      *(void *)(v11[6] + 8 * v26) = v21;
      *(void *)(v11[7] + 8 * v26) = v38;
      uint64_t v39 = v11[2];
      BOOL v40 = __OFADD__(v39, 1);
      uint64_t v41 = v39 + 1;
      if (v40) {
        goto LABEL_18;
      }
      v11[2] = v41;
    }
    v15 += v16;
    if (!--v12) {
      return (uint64_t)v11;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_25930A830();
  __break(1u);
  return result;
}

uint64_t sub_259254BA0(uint64_t a1)
{
  return sub_2592537DC(a1, *(void *)(v1 + 16));
}

uint64_t sub_259254BBC(void *a1)
{
  return sub_259253ADC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_259254BDC(uint64_t a1)
{
  return sub_259253CB4(a1, *(void *)(v1 + 16));
}

uint64_t type metadata accessor for ShuffleDatabase()
{
  return self;
}

uint64_t method lookup function for ShuffleDatabase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ShuffleDatabase);
}

uint64_t dispatch thunk of ShuffleDatabase.__allocating_init(database:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_259254C48(uint64_t a1)
{
  uint64_t v2 = sub_259309440();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v51 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ShuffleID() - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v50 = (uint64_t)&v39 - v10;
  unint64_t v11 = (void *)MEMORY[0x263F8EE80];
  uint64_t v52 = (void *)MEMORY[0x263F8EE80];
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return (uint64_t)v11;
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = *(void *)(v9 + 72);
  uint64_t v48 = v14;
  uint64_t v49 = (void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  uint64_t v44 = v16 + v14;
  uint64_t v42 = v3 + 32;
  uint64_t v43 = v13 | 7;
  uint64_t v41 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  long long v40 = xmmword_2593131D0;
  uint64_t v45 = v8;
  uint64_t v46 = v3;
  uint64_t v47 = v2;
  while (1)
  {
    uint64_t v19 = v50;
    sub_25924E54C(v15, v50, (uint64_t (*)(void))type metadata accessor for ShuffleID);
    uint64_t v20 = v51;
    (*v49)(v51, v19, v2);
    unint64_t v22 = sub_25925E4B4(v20);
    uint64_t v23 = v11[2];
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      break;
    }
    char v26 = v21;
    if (v11[3] < v25)
    {
      sub_25929378C(v25, 1);
      unint64_t v11 = v52;
      unint64_t v27 = sub_25925E4B4(v51);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_19;
      }
      unint64_t v22 = v27;
    }
    if (v26)
    {
      (*v41)(v51, v2);
      unint64_t v11 = v52;
      uint64_t v29 = v52[7];
      sub_25924E5B4(v50, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ShuffleID);
      unint64_t v30 = *(void *)(v29 + 8 * v22);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v29 + 8 * v22) = v30;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v30 = sub_259248948(0, *(void *)(v30 + 16) + 1, 1, v30);
        *(void *)(v29 + 8 * v22) = v30;
      }
      unint64_t v33 = *(void *)(v30 + 16);
      unint64_t v32 = *(void *)(v30 + 24);
      if (v33 >= v32 >> 1)
      {
        unint64_t v30 = sub_259248948(v32 > 1, v33 + 1, 1, v30);
        *(void *)(v29 + 8 * v22) = v30;
      }
      uint64_t v2 = v47;
      uint64_t v17 = v48;
      *(void *)(v30 + 16) = v33 + 1;
      uint64_t v18 = v30 + v17 + v33 * v16;
      uint64_t v8 = v45;
      sub_25924E5B4((uint64_t)v45, v18, (uint64_t (*)(void))type metadata accessor for ShuffleID);
      uint64_t v3 = v46;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF60);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v40;
      sub_25924E5B4(v50, v34 + v48, (uint64_t (*)(void))type metadata accessor for ShuffleID);
      v11[(v22 >> 6) + 8] |= 1 << v22;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v11[6] + *(void *)(v3 + 72) * v22, v51, v2);
      *(void *)(v11[7] + 8 * v22) = v34;
      uint64_t v35 = v11[2];
      BOOL v36 = __OFADD__(v35, 1);
      uint64_t v37 = v35 + 1;
      if (v36) {
        goto LABEL_18;
      }
      v11[2] = v37;
    }
    v15 += v16;
    if (!--v12) {
      return (uint64_t)v11;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_25930A830();
  __break(1u);
  return result;
}

uint64_t sub_259255064(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E160);
    uint64_t v3 = sub_25930A3B0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_25930A8C0();
      swift_bridgeObjectRetain();
      sub_259309C00();
      uint64_t result = sub_25930A910();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_25930A7C0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_25930A7C0();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      char v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *char v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_259255208(void *a1)
{
  return sub_259254BBC(a1);
}

uint64_t sub_259255220(uint64_t a1)
{
  return sub_259254BDC(a1);
}

uint64_t sub_259255238(uint64_t a1)
{
  return sub_259254BA0(a1);
}

uint64_t sub_259255250(uint64_t *a1)
{
  return sub_259251F20(a1);
}

uint64_t sub_259255268(uint64_t a1)
{
  uint64_t v3 = sub_259309440();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    v15[0] = v1;
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_25925CBB8(0, v7, 0);
    uint64_t v8 = v18;
    uint64_t v9 = *(void *)(type metadata accessor for StoredPhoto(0) - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v17 = *(void *)(v9 + 72);
    unint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v15[1] = v4 + 32;
    uint64_t v16 = v11;
    do
    {
      v16(v6, v10, v3);
      uint64_t v18 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_25925CBB8(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v18;
      }
      *(void *)(v8 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, v6, v3);
      v10 += v17;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_259255470(uint64_t a1)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF88);
  uint64_t v3 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_25925CD10(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF98) - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    while (1)
    {
      sub_2592576C8((uint64_t)v5, (uint64_t)&v5[*(int *)(v16 + 48)], v8, v10);
      if (v1) {
        break;
      }
      uint64_t v17 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_25925CD10(v12 > 1, v13 + 1, 1);
        uint64_t v7 = v17;
      }
      *(void *)(v7 + 16) = v13 + 1;
      sub_25924A404((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v13, &qword_26A37DF88);
      v10 += v11;
      if (!--v6) {
        return v7;
      }
    }
    swift_release();
  }
  return v7;
}

uint64_t sub_259255664(uint64_t a1)
{
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E2A8);
  uint64_t v3 = MEMORY[0x270FA5388](v48);
  uint64_t v47 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v46 = (uint64_t)&v38 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v44 = (uint64_t)&v38 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E168);
  uint64_t v45 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v49 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (!v10) {
    return v11;
  }
  uint64_t v38 = v1;
  uint64_t v50 = MEMORY[0x263F8EE78];
  sub_25925CCE0(0, v10, 0);
  uint64_t result = sub_2592E81E4(a1);
  uint64_t v14 = result;
  uint64_t v15 = 0;
  uint64_t v16 = a1 + 64;
  uint64_t v39 = a1 + 80;
  int64_t v40 = v10;
  uint64_t v41 = v13;
  uint64_t v42 = a1 + 64;
  uint64_t v43 = a1;
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v19 = (unint64_t)v14 >> 6;
    if ((*(void *)(v16 + 8 * ((unint64_t)v14 >> 6)) & (1 << v14)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v13) {
      goto LABEL_26;
    }
    uint64_t v20 = v48;
    uint64_t v21 = *(int *)(v48 + 48);
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = v22
        + *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37E2B0) - 8) + 72) * v14;
    uint64_t v24 = a1;
    uint64_t v25 = v44;
    sub_2592207A0(v23, v44, &qword_26A37E2B0);
    uint64_t v26 = *(void *)(*(void *)(v24 + 56) + 8 * v14);
    *(void *)(v25 + v21) = v26;
    uint64_t v27 = v46;
    sub_2592207A0(v25, v46, &qword_26A37E2B0);
    *(void *)(v27 + *(int *)(v20 + 48)) = v26;
    uint64_t v28 = v27;
    uint64_t v29 = v47;
    sub_25924A404(v28, v47, &qword_26A37E2A8);
    swift_bridgeObjectRetain_n();
    sub_25924A3A8(v25, &qword_26A37E2A8);
    sub_259258A98(v49, v30, v29, *(void *)(v29 + *(int *)(v20 + 48)));
    sub_25924A3A8(v29, &qword_26A37E2A8);
    uint64_t v11 = v50;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25925CCE0(0, *(void *)(v11 + 16) + 1, 1);
      uint64_t v11 = v50;
    }
    unint64_t v32 = *(void *)(v11 + 16);
    unint64_t v31 = *(void *)(v11 + 24);
    a1 = v43;
    if (v32 >= v31 >> 1)
    {
      sub_25925CCE0(v31 > 1, v32 + 1, 1);
      uint64_t v11 = v50;
    }
    *(void *)(v11 + 16) = v32 + 1;
    uint64_t result = sub_25924A404(v49, v11+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v32, &qword_26A37E168);
    int64_t v17 = 1 << *(unsigned char *)(a1 + 32);
    if (v14 >= v17) {
      goto LABEL_27;
    }
    uint64_t v16 = v42;
    uint64_t v33 = *(void *)(v42 + 8 * v19);
    if ((v33 & (1 << v14)) == 0) {
      goto LABEL_28;
    }
    LODWORD(v13) = v41;
    if (*(_DWORD *)(a1 + 36) != v41) {
      goto LABEL_29;
    }
    unint64_t v34 = v33 & (-2 << (v14 & 0x3F));
    if (v34)
    {
      int64_t v17 = __clz(__rbit64(v34)) | v14 & 0xFFFFFFFFFFFFFFC0;
      int64_t v18 = v40;
    }
    else
    {
      unint64_t v35 = v19 + 1;
      unint64_t v36 = (unint64_t)(v17 + 63) >> 6;
      int64_t v18 = v40;
      if (v19 + 1 < v36)
      {
        unint64_t v37 = *(void *)(v42 + 8 * v35);
        if (v37)
        {
LABEL_22:
          int64_t v17 = __clz(__rbit64(v37)) + (v35 << 6);
        }
        else
        {
          while (v36 - 2 != v19)
          {
            unint64_t v37 = *(void *)(v39 + 8 * v19++);
            if (v37)
            {
              unint64_t v35 = v19 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v15;
    uint64_t v14 = v17;
    if (v15 == v18) {
      return v11;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_259255A84(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  int64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x270FA5388](v15);
  int64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_25930A100();
  if (!v18) {
    return sub_259309DF0();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_259309A60();
  uint64_t v32 = sub_25930A4C0();
  sub_25930A490();
  uint64_t v36 = v8;
  uint64_t result = sub_25930A0F0();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v34 = (void (**)(char *))(v33 + 2);
    unint64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_25930A170();
      uint64_t v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_25930A4A0();
      sub_25930A110();
      --v19;
      unint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t PhotosFaceDatabase.queryPhotos<A>(sql:bindings:extraReading:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = a6;
  uint64_t v33 = a6;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  type metadata accessor for StoredLayoutView();
  swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_259309E70();
  sub_25924F8D8((void (*)(uint64_t *))sub_259256EA8, v8, (uint64_t)&v40);
  if (!v6)
  {
    uint64_t v10 = MEMORY[0x270FA5388](v9);
    uint64_t v31 = v7;
    MEMORY[0x270FA5388](v10);
    uint64_t v28 = v7;
    uint64_t v29 = sub_259258194;
    uint64_t v30 = v11;
    uint64_t v12 = type metadata accessor for StoredPhoto(255);
    type metadata accessor for StoredPhotoLayout(255);
    uint64_t v32 = v12;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F3D70);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v16 = sub_259255A84((void (*)(char *, char *))sub_259258298, (uint64_t)v27, v8, TupleTypeMetadata3, v14, WitnessTable, MEMORY[0x263F8E4E0], (uint64_t)&v39);
    uint64_t v17 = swift_bridgeObjectRelease();
    uint64_t v40 = v16;
    uint64_t v18 = MEMORY[0x270FA5388](v17);
    uint64_t v31 = v7;
    MEMORY[0x270FA5388](v18);
    uint64_t v28 = v7;
    uint64_t v29 = sub_259258404;
    uint64_t v30 = v19;
    _s19ExtraPhotoContainerVMa();
    sub_259309E70();
    swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v40 = sub_259309AD0();
    uint64_t v20 = MEMORY[0x270FA5388](v40);
    uint64_t v31 = v7;
    MEMORY[0x270FA5388](v20);
    uint64_t v28 = v7;
    uint64_t v29 = sub_2592591DC;
    uint64_t v30 = v21;
    uint64_t v22 = sub_259309AE0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v24 = swift_getWitnessTable();
    uint64_t v7 = sub_259255A84((void (*)(char *, char *))sub_259259584, (uint64_t)v27, v22, TupleTypeMetadata2, MEMORY[0x263F8E628], v24, MEMORY[0x263F8E658], v25);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t PhotosFaceDatabase.queryPhotos(sql:bindings:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E168);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v30 - v13;
  uint64_t v15 = type metadata accessor for StoredPhoto(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_259251148(v5, a1, a2, a3, (uint64_t)nullsub_1, 0);
  if (!v4)
  {
    uint64_t v20 = sub_259255470(v19);
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_25925F540(v20);
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_259255664(v22);
    swift_bridgeObjectRelease();
    int64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      v30[1] = 0;
      uint64_t v32 = MEMORY[0x263F8EE78];
      uint64_t v25 = v23;
      sub_25925CCA4(0, v24, 0);
      a3 = v32;
      uint64_t v26 = *(unsigned __int8 *)(v31 + 80);
      v30[0] = v25;
      uint64_t v27 = v25 + ((v26 + 32) & ~v26);
      uint64_t v31 = *(void *)(v31 + 72);
      do
      {
        sub_2592207A0(v27, (uint64_t)v14, &qword_26A37E168);
        sub_259261928((uint64_t)v14, (uint64_t)v12, type metadata accessor for StoredPhoto);
        sub_259261A48((uint64_t)v12, (uint64_t)v18, type metadata accessor for StoredPhoto);
        sub_25924A3A8((uint64_t)v14, &qword_26A37E168);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25925CCA4(0, *(void *)(a3 + 16) + 1, 1);
          a3 = v32;
        }
        unint64_t v29 = *(void *)(a3 + 16);
        unint64_t v28 = *(void *)(a3 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_25925CCA4(v28 > 1, v29 + 1, 1);
          a3 = v32;
        }
        *(void *)(a3 + 16) = v29 + 1;
        sub_259261A48((uint64_t)v18, a3+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v29, type metadata accessor for StoredPhoto);
        v27 += v31;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
  }
  return a3;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PhotosFaceDatabase.insert(storedPhotos:)(Swift::OpaquePointer storedPhotos)
{
  swift_bridgeObjectRetain();
  sub_25924F450(v1, (uint64_t)storedPhotos._rawValue);
}

uint64_t PhotosFaceDatabase.queryPhotos(identifiers:)(uint64_t a1)
{
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE78);
  uint64_t v2 = *(void *)(v47 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v47);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v45 = (uint64_t)&v40 - v6;
  uint64_t v50 = sub_259309440();
  uint64_t v7 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for DatabaseBinding();
  uint64_t v54 = *(void *)(v51 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v51);
  uint64_t v46 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v43 = (uint64_t)&v40 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v48 = a1;
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v52 = sub_259256CF8(63, 0xE100000000000000, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E170);
  sub_25925F918();
  uint64_t v49 = sub_259309B30();
  swift_bridgeObjectRelease();
  uint64_t v52 = 0;
  unint64_t v53 = 0xE000000000000000;
  sub_25930A3E0();
  sub_259309C20();
  sub_259309C20();
  swift_bridgeObjectRelease();
  sub_259309C20();
  sub_259309C20();
  uint64_t v17 = v53;
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v44 = v52;
  if (v16)
  {
    uint64_t v40 = v2;
    unint64_t v41 = v53;
    uint64_t v42 = v5;
    uint64_t v52 = MEMORY[0x263F8EE78];
    sub_25925CD9C(0, v16, 0);
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v20 = v7 + 16;
    uint64_t v19 = v21;
    uint64_t v22 = v48 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
    uint64_t v48 = *(void *)(v20 + 56);
    uint64_t v49 = v20;
    uint64_t v23 = (void (**)(char *, uint64_t))(v20 - 8);
    do
    {
      uint64_t v24 = v50;
      v19(v9, v22, v50);
      v19(v15, (uint64_t)v9, v24);
      swift_storeEnumTagMultiPayload();
      (*v23)(v9, v24);
      uint64_t v18 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CD9C(0, *(void *)(v18 + 16) + 1, 1);
        uint64_t v18 = v52;
      }
      unint64_t v26 = *(void *)(v18 + 16);
      unint64_t v25 = *(void *)(v18 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_25925CD9C(v25 > 1, v26 + 1, 1);
        uint64_t v18 = v52;
      }
      *(void *)(v18 + 16) = v26 + 1;
      sub_259261A48((uint64_t)v15, v18+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v26, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      v22 += v48;
      --v16;
    }
    while (v16);
    uint64_t v17 = v41;
    uint64_t v5 = v42;
    uint64_t v2 = v40;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE80);
  unint64_t v27 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_2593131D0;
  uint64_t v29 = v28 + v27;
  *(void *)(v28 + v27) = 16;
  uint64_t v30 = v51;
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = v54;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v29, 0, 1, v30);
  uint64_t v32 = v45;
  sub_2592207A0(v29, v45, &qword_26A37DE78);
  sub_25924A404(v32, (uint64_t)v5, &qword_26A37DE78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v5, 1, v30) == 1)
  {
    sub_25924A3A8((uint64_t)v5, &qword_26A37DE78);
    uint64_t v33 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v34 = (uint64_t)v5;
    uint64_t v35 = v43;
    sub_259261A48(v34, v43, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    sub_259261A48(v35, v46, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    uint64_t v33 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v33 = sub_2592488EC(0, *(void *)(v33 + 16) + 1, 1, v33);
    }
    unint64_t v37 = *(void *)(v33 + 16);
    unint64_t v36 = *(void *)(v33 + 24);
    if (v37 >= v36 >> 1) {
      uint64_t v33 = sub_2592488EC(v36 > 1, v37 + 1, 1, v33);
    }
    *(void *)(v33 + 16) = v37 + 1;
    sub_259261A48(v46, v33+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v37, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v52 = v18;
  sub_25925C534(v33, (uint64_t (*)(void))sub_2592488EC, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
  uint64_t v38 = PhotosFaceDatabase.queryPhotos(sql:bindings:)(v44, v17, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v38;
}

uint64_t sub_259256CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t result = sub_25930A570();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      uint64_t v6 = (void *)sub_259309E00();
      uint64_t v7 = v6;
      v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        uint64_t v8 = a3 - 2;
        if (v8)
        {
          uint64_t v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *uint64_t v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_259256DF4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v13 = *a1;
  v16[4] = a6;
  v16[5] = v13;
  v16[2] = a7;
  v16[3] = a5;
  type metadata accessor for StoredLayoutView();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = DatabaseConnection.query<A>(sql:bindings:step:)(a2, a3, a4, (void (*)(sqlite3_stmt **))sub_259261B38, (uint64_t)v16, TupleTypeMetadata2);
  if (!v8) {
    *a8 = result;
  }
  return result;
}

uint64_t sub_259256EA8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_259256DF4(a1, v2[3], v2[4], v2[5], v2[6], v2[7], v2[2], a2);
}

uint64_t type metadata accessor for StoredLayoutView()
{
  uint64_t result = qword_26A37E218;
  if (!qword_26A37E218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_259256F18@<X0>(sqlite3_stmt **a1@<X0>, uint64_t (*a2)(sqlite3_stmt **)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v62 = a4;
  uint64_t v63 = a3;
  uint64_t v64 = a2;
  uint64_t v65 = a5;
  uint64_t v7 = sub_2593093D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_259309440();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  uint64_t v66 = *a1;
  uint64_t result = DatabaseRow.readUUID(column:)(0);
  if (!v5)
  {
    uint64_t v58 = v10;
    uint64_t v59 = v14;
    uint64_t v56 = v8;
    uint64_t v57 = v7;
    uint64_t v60 = v11;
    uint64_t v61 = v12;
    if (sqlite3_column_type(v15, 1) == 5)
    {
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v17 = 1;
      *(unsigned char *)(v17 + 4) = 0;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v59, v60);
    }
    uint64_t v18 = v15;
    sqlite3_column_double(v15, 1);
    uint64_t v19 = v58;
    sub_259309390();
    int v20 = sqlite3_column_type(v15, 2);
    uint64_t v21 = v60;
    uint64_t v22 = v61;
    uint64_t v23 = v59;
    if (v20 == 5)
    {
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v24 = 2;
      *(unsigned char *)(v24 + 4) = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v19, v57);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v23, v21);
    }
    double v25 = sqlite3_column_double(v18, 2);
    int v26 = 3;
    int v27 = sqlite3_column_type(v18, 3);
    uint64_t v28 = v57;
    if (v27 == 5) {
      goto LABEL_18;
    }
    int v29 = sqlite3_column_int(v18, 3);
    int v26 = 4;
    if (sqlite3_column_type(v18, 4) == 5) {
      goto LABEL_18;
    }
    *(void *)&double v55 = sqlite3_column_int(v18, 4);
    int v26 = 5;
    if (sqlite3_column_type(v18, 5) == 5) {
      goto LABEL_18;
    }
    int v54 = sqlite3_column_int(v18, 5);
    int v26 = 6;
    if (sqlite3_column_type(v18, 6) == 5) {
      goto LABEL_18;
    }
    double v30 = sqlite3_column_double(v18, 6);
    int v26 = 7;
    if (sqlite3_column_type(v18, 7) == 5) {
      goto LABEL_18;
    }
    double v31 = sqlite3_column_double(v18, 7);
    int v26 = 8;
    if (sqlite3_column_type(v18, 8) == 5) {
      goto LABEL_18;
    }
    double v32 = sqlite3_column_double(v18, 8);
    int v26 = 9;
    if (sqlite3_column_type(v18, 9) == 5) {
      goto LABEL_18;
    }
    double v33 = sqlite3_column_double(v18, 9);
    int v26 = 10;
    if (sqlite3_column_type(v18, 10) == 5
      || (v53 = sqlite3_column_int(v18, 10), int v26 = 11, sqlite3_column_type(v18, 11) == 5)
      || (v34 = sqlite3_column_double(v18, 11), int v26 = 12, sqlite3_column_type(v18, 12) == 5)
      || (v35 = sqlite3_column_double(v18, 12), int v26 = 13, sqlite3_column_type(v18, 13) == 5))
    {
LABEL_18:
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v36 = v26;
      *(unsigned char *)(v36 + 4) = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v19, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v23, v21);
    }
    double v37 = sqlite3_column_double(v18, 13);
    int v38 = 14;
    uint64_t v39 = v18;
    if (sqlite3_column_type(v18, 14) == 5) {
      goto LABEL_26;
    }
    double v52 = sqlite3_column_double(v18, 14);
    int v38 = 15;
    if (sqlite3_column_type(v18, 15) == 5
      || (v51 = sqlite3_column_double(v18, 15), int v38 = 16, sqlite3_column_type(v18, 16) == 5)
      || (v50 = sqlite3_column_double(v18, 16), int v38 = 17, sqlite3_column_type(v18, 17) == 5)
      || (v49 = sqlite3_column_double(v18, 17), int v38 = 18, sqlite3_column_type(v18, 18) == 5))
    {
LABEL_26:
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v40 = v38;
      *(unsigned char *)(v40 + 4) = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v57);
      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v59, v60);
    }
    uint64_t v41 = SLODWORD(v55);
    double v55 = sqlite3_column_double(v18, 18);
    if (sqlite3_column_type(v18, 19) == 5 || !sqlite3_column_text(v18, 19))
    {
      uint64_t v42 = 0;
      uint64_t v44 = 0;
    }
    else
    {
      uint64_t v42 = sub_259309C40();
      uint64_t v44 = v43;
    }
    int v53 = v53 == 1;
    int v54 = v54 == 1;
    uint64_t v45 = (int *)type metadata accessor for StoredLayoutView();
    swift_getTupleTypeMetadata2();
    uint64_t v46 = v65;
    (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v65, v59, v60);
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v46 + v45[5], v58, v57);
    *(double *)(v46 + v45[6]) = v25;
    *(void *)(v46 + v45[7]) = v29;
    *(void *)(v46 + v45[8]) = v41;
    *(unsigned char *)(v46 + v45[9]) = v54;
    *(double *)(v46 + v45[10]) = v30;
    *(double *)(v46 + v45[11]) = v31;
    *(double *)(v46 + v45[12]) = v32;
    *(double *)(v46 + v45[13]) = v33;
    *(unsigned char *)(v46 + v45[14]) = v53;
    *(double *)(v46 + v45[15]) = v34;
    *(double *)(v46 + v45[16]) = v35;
    *(double *)(v46 + v45[17]) = v37;
    *(double *)(v46 + v45[18]) = v52;
    *(double *)(v46 + v45[19]) = v51;
    *(double *)(v46 + v45[20]) = v50;
    *(double *)(v46 + v45[21]) = v49;
    *(double *)(v46 + v45[22]) = v55;
    uint64_t v47 = (uint64_t *)(v46 + v45[23]);
    uint64_t *v47 = v42;
    v47[1] = v44;
    uint64_t v66 = v39;
    return v64(&v66);
  }
  return result;
}

uint64_t sub_2592576C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (int *)type metadata accessor for StoredPhotoLayout(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v58 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v55 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v61 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for StoredPhoto(0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StoredLayoutView();
  if ((*(void *)(a4 + *(int *)(v16 + 32)) & 0x8000000000000000) != 0
    || (uint64_t v17 = (int *)v16,
        uint64_t v56 = *(void *)(a4 + *(int *)(v16 + 32)),
        uint64_t v59 = a2,
        uint64_t v60 = a1,
        uint64_t v18 = *(void *)(a4 + *(int *)(v16 + 28)),
        v18 < 0))
  {
    uint64_t result = sub_25930A570();
    __break(1u);
  }
  else
  {
    uint64_t v19 = sub_259309440();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v15, a4, v19);
    uint64_t v20 = a4 + v17[5];
    uint64_t v21 = &v15[v13[5]];
    uint64_t v22 = sub_2593093D0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v21, v20, v22);
    uint64_t v23 = *(void *)(a4 + v17[6]);
    unint64_t v24 = sub_2592203D0(MEMORY[0x263F8EE78]);
    double v25 = (uint64_t *)(a4 + v17[23]);
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    *(void *)&v15[v13[6]] = v23;
    *(void *)&v15[v13[7]] = v18;
    *(void *)&v15[v13[8]] = v24;
    uint64_t v28 = &v15[v13[9]];
    *(void *)uint64_t v28 = v26;
    *((void *)v28 + 1) = v27;
    uint64_t v54 = v27;
    uint64_t v29 = sub_259309300();
    double v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
    v30(v61, 1, 1, v29);
    if (*(unsigned char *)(a4 + v17[9]) == 1)
    {
      uint64_t v31 = (uint64_t)v58;
      v30((uint64_t)v58, 1, 1, v29);
      double v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
      double v33 = (char *)v31;
      uint64_t v34 = 0;
    }
    else
    {
      double v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
      uint64_t v31 = (uint64_t)v58;
      double v33 = v58;
      uint64_t v34 = 1;
    }
    uint64_t v35 = v57;
    v32(v33, v34, 1, v57);
    uint64_t v36 = v17[14];
    uint64_t v37 = *(void *)(a4 + v17[15]);
    uint64_t v38 = *(void *)(a4 + v17[16]);
    uint64_t v39 = *(void *)(a4 + v17[17]);
    uint64_t v40 = *(void *)(a4 + v17[18]);
    uint64_t v41 = *(void *)(a4 + v17[19]);
    uint64_t v42 = *(void *)(a4 + v17[20]);
    uint64_t v43 = *(void *)(a4 + v17[21]);
    uint64_t v44 = *(void *)(a4 + v17[22]);
    uint64_t v45 = v17[11];
    uint64_t v53 = *(void *)(a4 + v17[10]);
    uint64_t v55 = *(void *)(a4 + v45);
    uint64_t v46 = *(char **)(a4 + v17[13]);
    uint64_t v57 = *(void *)(a4 + v17[12]);
    uint64_t v58 = v46;
    uint64_t v47 = (uint64_t)&v9[v7[5]];
    char v48 = *(unsigned char *)(a4 + v36);
    v32((char *)v47, 1, 1, v35);
    sub_259261A48(v61, (uint64_t)v9, type metadata accessor for StoredPhotoLayout.ImageLocation);
    swift_bridgeObjectRetain();
    sub_25924A3A8(v47, &qword_26A37DFC8);
    sub_25924A404(v31, v47, &qword_26A37DFC8);
    double v49 = &v9[v7[6]];
    *(void *)double v49 = v37;
    *((void *)v49 + 1) = v38;
    *((void *)v49 + 2) = v39;
    *((void *)v49 + 3) = v40;
    *(void *)&v9[v7[7]] = v56;
    double v50 = &v9[v7[8]];
    *(void *)double v50 = v41;
    *((void *)v50 + 1) = v42;
    *((void *)v50 + 2) = v43;
    *((void *)v50 + 3) = v44;
    *(void *)&v9[v7[9]] = v53;
    *(void *)&v9[v7[10]] = v55;
    *(void *)&v9[v7[11]] = v57;
    *(void *)&v9[v7[12]] = v58;
    v9[v7[13]] = v48;
    sub_259261A48((uint64_t)v9, v59, type metadata accessor for StoredPhotoLayout);
    return sub_259261A48((uint64_t)v15, v60, type metadata accessor for StoredPhoto);
  }
  return result;
}

uint64_t sub_259257C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v62 = a1;
  uint64_t v63 = a3;
  uint64_t v61 = a2;
  uint64_t v9 = (int *)type metadata accessor for StoredPhotoLayout(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v60 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v66 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for StoredPhoto(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for StoredLayoutView();
  if ((*(void *)(a4 + *(int *)(v18 + 32)) & 0x8000000000000000) != 0
    || (uint64_t v19 = (int *)v18,
        uint64_t v58 = *(void *)(a4 + *(int *)(v18 + 32)),
        uint64_t v64 = a5,
        uint64_t v65 = a6,
        uint64_t v20 = *(void *)(a4 + *(int *)(v18 + 28)),
        v20 < 0))
  {
    uint64_t result = sub_25930A570();
    __break(1u);
  }
  else
  {
    uint64_t v21 = sub_259309440();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v17, a4, v21);
    uint64_t v22 = a4 + v19[5];
    uint64_t v23 = &v17[v15[5]];
    uint64_t v24 = sub_2593093D0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v23, v22, v24);
    uint64_t v25 = *(void *)(a4 + v19[6]);
    unint64_t v26 = sub_2592203D0(MEMORY[0x263F8EE78]);
    uint64_t v27 = (uint64_t *)(a4 + v19[23]);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    *(void *)&v17[v15[6]] = v25;
    *(void *)&v17[v15[7]] = v20;
    *(void *)&v17[v15[8]] = v26;
    double v30 = &v17[v15[9]];
    *(void *)double v30 = v28;
    *((void *)v30 + 1) = v29;
    uint64_t v56 = v29;
    uint64_t v31 = sub_259309300();
    double v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
    v32(v66, 1, 1, v31);
    if (*(unsigned char *)(a4 + v19[9]) == 1)
    {
      uint64_t v33 = (uint64_t)v60;
      v32((uint64_t)v60, 1, 1, v31);
      uint64_t v34 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v57 + 7);
      uint64_t v35 = (char *)v33;
      uint64_t v36 = 0;
    }
    else
    {
      uint64_t v34 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v57 + 7);
      uint64_t v33 = (uint64_t)v60;
      uint64_t v35 = v60;
      uint64_t v36 = 1;
    }
    uint64_t v37 = v59;
    uint64_t v57 = v34;
    v34((uint64_t)v35, v36, 1, v59);
    uint64_t v38 = v19[14];
    uint64_t v39 = *(void *)(a4 + v19[15]);
    uint64_t v40 = *(void *)(a4 + v19[16]);
    uint64_t v41 = *(void *)(a4 + v19[17]);
    uint64_t v42 = *(void *)(a4 + v19[18]);
    uint64_t v43 = *(void *)(a4 + v19[19]);
    uint64_t v44 = *(void *)(a4 + v19[20]);
    uint64_t v45 = *(void *)(a4 + v19[21]);
    uint64_t v46 = *(void *)(a4 + v19[22]);
    uint64_t v47 = *(void *)(a4 + v19[11]);
    uint64_t v54 = *(void *)(a4 + v19[10]);
    uint64_t v55 = v47;
    char v48 = *(char **)(a4 + v19[13]);
    uint64_t v59 = *(void *)(a4 + v19[12]);
    uint64_t v60 = v48;
    uint64_t v49 = (uint64_t)&v11[v9[5]];
    char v50 = *(unsigned char *)(a4 + v38);
    v57(v49, 1, 1, v37);
    sub_259261A48(v66, (uint64_t)v11, type metadata accessor for StoredPhotoLayout.ImageLocation);
    swift_bridgeObjectRetain();
    sub_259261AD0(v33, v49);
    double v51 = &v11[v9[6]];
    *(void *)double v51 = v39;
    *((void *)v51 + 1) = v40;
    *((void *)v51 + 2) = v41;
    *((void *)v51 + 3) = v42;
    *(void *)&v11[v9[7]] = v58;
    uint64_t v52 = &v11[v9[8]];
    *(void *)uint64_t v52 = v43;
    *((void *)v52 + 1) = v44;
    *((void *)v52 + 2) = v45;
    *((void *)v52 + 3) = v46;
    *(void *)&v11[v9[9]] = v54;
    *(void *)&v11[v9[10]] = v55;
    *(void *)&v11[v9[11]] = v59;
    *(void *)&v11[v9[12]] = v60;
    v11[v9[13]] = v50;
    sub_259261A48((uint64_t)v11, v61, type metadata accessor for StoredPhotoLayout);
    sub_259261A48((uint64_t)v17, v62, type metadata accessor for StoredPhoto);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64);
  }
  return result;
}

uint64_t sub_259258194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_259257C1C(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

uint64_t sub_2592581B0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, void *a3@<X4>, uint64_t a4@<X8>)
{
  type metadata accessor for StoredLayoutView();
  uint64_t v9 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  type metadata accessor for StoredPhoto(255);
  type metadata accessor for StoredPhotoLayout(255);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t result = a2(a4, a4 + *(int *)(TupleTypeMetadata3 + 48), a4 + *(int *)(TupleTypeMetadata3 + 64), a1, v9);
  if (v4) {
    *a3 = v4;
  }
  return result;
}

uint64_t sub_259258298@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2592581B0(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 24), a2, a3);
}

uint64_t sub_2592582BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StoredPhoto(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259261928(a1, (uint64_t)v13, type metadata accessor for StoredPhoto);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, a3);
  return sub_25925840C((uint64_t)v13, (uint64_t)v10, a3, a4);
}

uint64_t sub_259258404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_2592582BC(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t sub_25925840C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_259261A48(a1, a4, type metadata accessor for StoredPhoto);
  uint64_t v7 = a4 + *(int *)(_s19ExtraPhotoContainerVMa() + 28);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v8(v7, a2, a3);
}

uint64_t sub_2592584A8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  type metadata accessor for StoredPhoto(255);
  type metadata accessor for StoredPhotoLayout(255);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata3 + 48), a1 + *(int *)(TupleTypeMetadata3 + 64));
}

uint64_t sub_25925854C(uint64_t a1)
{
  return sub_2592584A8(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 24));
}

uint64_t _s19ExtraPhotoContainerVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_259258584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a1;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFB8);
  uint64_t v5 = *(void *)(v49 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v49);
  uint64_t v48 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v47 = (uint64_t)&v38 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v46 = (char *)&v38 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C9A0);
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v45 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = type metadata accessor for StoredPhoto(0);
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259261928(a2, v40, type metadata accessor for StoredPhoto);
  int64_t v15 = *(void *)(a3 + 16);
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (v15)
  {
    uint64_t v38 = a2;
    uint64_t v54 = MEMORY[0x263F8EE78];
    sub_25925CC44(0, v15, 0);
    uint64_t v17 = a3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v42 = *(void *)(v5 + 72);
    uint64_t v43 = v13;
    uint64_t v16 = v54;
    uint64_t v18 = (uint64_t)v46;
    uint64_t v19 = v49;
    do
    {
      int64_t v52 = v15;
      uint64_t v53 = v16;
      uint64_t v51 = v17;
      sub_2592207A0(v17, v18, &qword_26A37DFB8);
      uint64_t v50 = (uint64_t)v13 + *(int *)(v45 + 48);
      uint64_t v20 = *(int *)(v19 + 48);
      uint64_t v21 = v47;
      uint64_t v22 = v47 + v20;
      uint64_t v23 = *(int *)(v19 + 64);
      uint64_t v24 = v18 + v20;
      sub_259261928(v18, v47, type metadata accessor for StoredPhoto);
      sub_259261928(v24, v22, type metadata accessor for StoredPhotoLayout);
      *(void *)(v21 + v23) = *(void *)(v18 + v23);
      uint64_t v25 = *(void *)(v22 + *(int *)(type metadata accessor for StoredPhotoLayout(0) + 28));
      sub_259261B58(v22, type metadata accessor for StoredPhotoLayout);
      *uint64_t v13 = v25;
      uint64_t v26 = v48;
      uint64_t v27 = v48 + *(int *)(v19 + 48);
      uint64_t v28 = *(int *)(v19 + 64);
      sub_259261928(v18, v48, type metadata accessor for StoredPhoto);
      sub_259261928(v24, v27, type metadata accessor for StoredPhotoLayout);
      *(void *)(v26 + v28) = *(void *)(v18 + v23);
      sub_259261A48(v27, v50, type metadata accessor for StoredPhotoLayout);
      sub_259261B58(v26, type metadata accessor for StoredPhoto);
      uint64_t v29 = v21;
      uint64_t v16 = v53;
      sub_259261B58(v29, type metadata accessor for StoredPhoto);
      sub_25924A3A8(v18, &qword_26A37DFB8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CC44(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v54;
      }
      unint64_t v31 = *(void *)(v16 + 16);
      unint64_t v30 = *(void *)(v16 + 24);
      uint64_t v13 = v43;
      if (v31 >= v30 >> 1)
      {
        sub_25925CC44(v30 > 1, v31 + 1, 1);
        uint64_t v16 = v54;
      }
      *(void *)(v16 + 16) = v31 + 1;
      sub_25924A404((uint64_t)v13, v16+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v31, &qword_26A37C9A0);
      uint64_t v17 = v51 + v42;
      int64_t v15 = v52 - 1;
    }
    while (v52 != 1);
    a2 = v38;
  }
  if (*(void *)(v16 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26A37C9A8);
    uint64_t v32 = sub_25930A610();
  }
  else
  {
    uint64_t v32 = MEMORY[0x263F8EE80];
  }
  uint64_t v54 = v32;
  sub_25925ECE8(v16, 1, &v54);
  swift_bridgeObjectRelease();
  uint64_t v33 = v54;
  uint64_t v34 = v40;
  uint64_t v35 = *(int *)(v39 + 32);
  swift_bridgeObjectRelease();
  *(void *)(v34 + v35) = v33;
  sub_259261928(v34, v41, type metadata accessor for StoredPhoto);
  uint64_t v36 = *(void *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFB0) + 28));
  sub_259261B58(v34, type metadata accessor for StoredPhoto);
  return v36;
}

uint64_t sub_259258A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF88);
  uint64_t v7 = *(void *)(v47 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v47);
  uint64_t v46 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v45 = (char *)&v37 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v44 = (uint64_t)&v37 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C9A0);
  uint64_t v42 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  MEMORY[0x270FA5388](v13);
  int64_t v15 = (uint64_t *)((char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = type metadata accessor for StoredPhoto(0);
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = (uint64_t)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259261928(a3, v39, type metadata accessor for StoredPhoto);
  int64_t v17 = *(void *)(a4 + 16);
  uint64_t v18 = MEMORY[0x263F8EE78];
  if (v17)
  {
    uint64_t v37 = a1;
    uint64_t v51 = MEMORY[0x263F8EE78];
    sub_25925CC44(0, v17, 0);
    uint64_t v19 = a4 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v40 = *(void *)(v7 + 72);
    uint64_t v41 = v15;
    uint64_t v18 = v51;
    uint64_t v20 = v47;
    uint64_t v21 = (uint64_t)v45;
    do
    {
      int64_t v49 = v17;
      uint64_t v50 = v18;
      uint64_t v22 = v44;
      sub_2592207A0(v19, v44, &qword_26A37DF88);
      uint64_t v48 = (uint64_t)v15 + *(int *)(v43 + 48);
      uint64_t v23 = *(int *)(v20 + 48);
      uint64_t v24 = v21 + v23;
      uint64_t v25 = v22 + v23;
      sub_259261928(v22, v21, type metadata accessor for StoredPhoto);
      sub_259261928(v25, v24, type metadata accessor for StoredPhotoLayout);
      uint64_t v26 = *(void *)(v24 + *(int *)(type metadata accessor for StoredPhotoLayout(0) + 28));
      sub_259261B58(v24, type metadata accessor for StoredPhotoLayout);
      *int64_t v15 = v26;
      uint64_t v27 = v46;
      uint64_t v28 = v46 + *(int *)(v20 + 48);
      sub_259261928(v22, v46, type metadata accessor for StoredPhoto);
      sub_259261928(v25, v28, type metadata accessor for StoredPhotoLayout);
      sub_259261A48(v28, v48, type metadata accessor for StoredPhotoLayout);
      sub_259261B58(v27, type metadata accessor for StoredPhoto);
      sub_259261B58(v21, type metadata accessor for StoredPhoto);
      uint64_t v29 = v22;
      uint64_t v18 = v50;
      sub_25924A3A8(v29, &qword_26A37DF88);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CC44(0, *(void *)(v18 + 16) + 1, 1);
        uint64_t v18 = v51;
      }
      unint64_t v31 = *(void *)(v18 + 16);
      unint64_t v30 = *(void *)(v18 + 24);
      int64_t v15 = v41;
      if (v31 >= v30 >> 1)
      {
        sub_25925CC44(v30 > 1, v31 + 1, 1);
        uint64_t v18 = v51;
      }
      *(void *)(v18 + 16) = v31 + 1;
      sub_25924A404((uint64_t)v15, v18+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v31, &qword_26A37C9A0);
      v19 += v40;
      int64_t v17 = v49 - 1;
    }
    while (v49 != 1);
    a1 = v37;
  }
  if (*(void *)(v18 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26A37C9A8);
    uint64_t v32 = sub_25930A610();
  }
  else
  {
    uint64_t v32 = MEMORY[0x263F8EE80];
  }
  uint64_t v51 = v32;
  sub_25925ECE8(v18, 1, &v51);
  swift_bridgeObjectRelease();
  uint64_t v33 = v51;
  uint64_t v34 = v39;
  uint64_t v35 = *(int *)(v38 + 32);
  swift_bridgeObjectRelease();
  *(void *)(v34 + v35) = v33;
  sub_259261928(v34, a1, type metadata accessor for StoredPhoto);
  return sub_259261B58(v34, type metadata accessor for StoredPhoto);
}

uint64_t sub_259258F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for StoredPhoto(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_259261928(a3, (uint64_t)v12, type metadata accessor for StoredPhoto);
  uint64_t v25 = a4;
  uint64_t v24 = a5;
  type metadata accessor for StoredPhotoLayout(255);
  swift_getTupleTypeMetadata3();
  uint64_t v13 = sub_259309E70();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C9A0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = sub_259255A84((void (*)(char *, char *))sub_259261AB0, (uint64_t)v23, v13, v14, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v16);
  if (*(void *)(v17 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_26A37C9A8);
    uint64_t v18 = sub_25930A610();
  }
  else
  {
    uint64_t v18 = MEMORY[0x263F8EE80];
  }
  uint64_t v25 = v18;
  sub_25925ECE8(v17, 1, &v25);
  swift_bridgeObjectRelease();
  uint64_t v19 = v25;
  uint64_t v20 = *(int *)(v10 + 32);
  swift_bridgeObjectRelease();
  *(void *)&v12[v20] = v19;
  sub_259261928((uint64_t)v12, a1, type metadata accessor for StoredPhoto);
  uint64_t v21 = _s19ExtraPhotoContainerVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(a2, a3 + *(int *)(v21 + 28), a5);
  return sub_259261B58((uint64_t)v12, type metadata accessor for StoredPhoto);
}

uint64_t sub_2592591DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_259258F7C(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_2592591E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v37 = a3;
  type metadata accessor for StoredPhoto(255);
  uint64_t v38 = type metadata accessor for StoredPhotoLayout(255);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v7 = TupleTypeMetadata3 - 8;
  uint64_t v8 = MEMORY[0x270FA5388](TupleTypeMetadata3);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v40 = (uint64_t)a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37C9A0) + 48);
  uint64_t v13 = *(int *)(v7 + 56);
  uint64_t v14 = (uint64_t)&v12[v13];
  uint64_t v15 = *(int *)(v7 + 72);
  uint64_t v16 = &v12[v15];
  uint64_t v39 = &v12[v15];
  uint64_t v17 = a1;
  uint64_t v36 = a1;
  uint64_t v18 = a1 + v13;
  uint64_t v19 = v17 + v15;
  uint64_t v32 = v17 + v15;
  uint64_t v34 = v18;
  uint64_t v35 = type metadata accessor for StoredPhoto;
  sub_259261928(v17, (uint64_t)v12, type metadata accessor for StoredPhoto);
  uint64_t v33 = type metadata accessor for StoredPhotoLayout;
  sub_259261928(v18, v14, type metadata accessor for StoredPhotoLayout);
  uint64_t v20 = a2;
  uint64_t v21 = *(void *)(a2 - 8);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v21 + 16);
  uint64_t v23 = v16;
  uint64_t v24 = v20;
  v22(v23, v19);
  uint64_t v25 = *(void *)(v14 + *(int *)(v38 + 28));
  sub_259261B58(v14, type metadata accessor for StoredPhotoLayout);
  uint64_t v26 = v36;
  *uint64_t v37 = v25;
  uint64_t v27 = (uint64_t)&v10[*(int *)(v7 + 56)];
  uint64_t v28 = &v10[*(int *)(v7 + 72)];
  sub_259261928(v26, (uint64_t)v10, v35);
  sub_259261928(v34, v27, v33);
  ((void (*)(char *, uint64_t, uint64_t))v22)(v28, v32, v24);
  sub_259261A48(v27, v40, type metadata accessor for StoredPhotoLayout);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v21 + 8);
  v29(v28, v24);
  sub_259261B58((uint64_t)v10, type metadata accessor for StoredPhoto);
  v29(v39, v24);
  return sub_259261B58((uint64_t)v12, type metadata accessor for StoredPhoto);
}

uint64_t sub_259259490@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  _s19ExtraPhotoContainerVMa();
  type metadata accessor for StoredPhoto(255);
  type metadata accessor for StoredPhotoLayout(255);
  swift_getTupleTypeMetadata3();
  sub_259309E70();
  uint64_t v6 = *(void *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

uint64_t sub_259259584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_259259490(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 24), a2);
}

uint64_t _s10PhotosFace11StoredPhotoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (sub_259309400())
  {
    uint64_t v4 = (int *)type metadata accessor for StoredPhoto(0);
    if ((sub_2593093B0() & 1) != 0
      && *(double *)(a1 + v4[6]) == *(double *)(a2 + v4[6])
      && *(void *)(a1 + v4[7]) == *(void *)(a2 + v4[7])
      && (sub_25925C6F0(*(void *)(a1 + v4[8]), *(void *)(a2 + v4[8])) & 1) != 0)
    {
      uint64_t v5 = v4[9];
      uint64_t v6 = (void *)(a1 + v5);
      uint64_t v7 = *(void *)(a1 + v5 + 8);
      uint64_t v8 = (void *)(a2 + v5);
      uint64_t v9 = v8[1];
      if (v7)
      {
        if (v9)
        {
          BOOL v10 = *v6 == *v8 && v7 == v9;
          if (v10 || (sub_25930A7C0() & 1) != 0) {
            return 1;
          }
        }
      }
      else if (!v9)
      {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_259259688()
{
  sub_25930A8C0();
  StoredPhoto.hash(into:)(v1);
  return sub_25930A910();
}

uint64_t sub_2592596D0()
{
  sub_25930A8C0();
  j___s10PhotosFace11StoredPhotoV4hash4intoys6HasherVz_tF(v1);
  return sub_25930A910();
}

uint64_t sub_259259714(uint64_t a1, uint64_t a2)
{
  return _s10PhotosFace11StoredPhotoV2eeoiySbAC_ACtFZ_0(a1, a2);
}

uint64_t sub_25925971C(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for StoredPhoto(0);
  uint64_t v76 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  v83 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_259309440();
  uint64_t v7 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  v87 = (void (**)(unint64_t, uint64_t, uint64_t))((char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for DatabaseBinding();
  uint64_t v89 = *(void *)(v9 - 8);
  uint64_t v90 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  v82 = (uint64_t *)((char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v74 - v12;
  uint64_t v81 = *a1;
  uint64_t v14 = sub_259255268(a2);
  uint64_t v80 = v2;
  uint64_t v88 = v14;
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v93 = sub_259256CF8(63, 0xE100000000000000, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E170);
  sub_25925F918();
  sub_259309B30();
  swift_bridgeObjectRelease();
  uint64_t v93 = 0;
  unint64_t v94 = 0xE000000000000000;
  sub_25930A3E0();
  sub_259309C20();
  sub_259309C20();
  swift_bridgeObjectRelease();
  sub_259309C20();
  int64_t v79 = v93;
  v84 = (int *)v5;
  uint64_t v75 = v7;
  if (v15)
  {
    unint64_t v77 = v94;
    uint64_t v78 = a2;
    uint64_t v93 = MEMORY[0x263F8EE78];
    sub_25925CD9C(0, v15, 0);
    uint64_t v17 = v7 + 16;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    unint64_t v18 = v88 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
    uint64_t v85 = *(void *)(v17 + 56);
    *(void *)&long long v86 = v13;
    do
    {
      uint64_t v19 = (char *)v87;
      uint64_t v20 = v91;
      v16((char *)v87, v18, v91);
      v16(v13, (unint64_t)v19, v20);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(v17 - 8))(v19, v20);
      uint64_t v21 = v93;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CD9C(0, *(void *)(v21 + 16) + 1, 1);
        uint64_t v21 = v93;
      }
      unint64_t v23 = *(void *)(v21 + 16);
      unint64_t v22 = *(void *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_25925CD9C(v22 > 1, v23 + 1, 1);
        uint64_t v21 = v93;
      }
      *(void *)(v21 + 16) = v23 + 1;
      uint64_t v24 = v21
          + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))
          + *(void *)(v89 + 72) * v23;
      uint64_t v13 = (char *)v86;
      sub_259261A48(v86, v24, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      v18 += v85;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    a2 = v78;
    uint64_t v25 = v84;
  }
  else
  {
    uint64_t v25 = (int *)v5;
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x263F8EE78];
  }
  uint64_t v26 = v80;
  uint64_t v27 = v81;
  uint64_t v93 = v81;
  uint64_t v28 = sub_259264340();
  if (v26)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v29 = v28;
  sub_25926906C(v21, v28);
  sub_259269950(v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v93 = v27;
  int64_t v31 = *(void *)(a2 + 16);
  v32._rawValue = (void *)MEMORY[0x263F8EE78];
  uint64_t v78 = a2;
  if (v31)
  {
    uint64_t v80 = 0;
    v92 = (void *)MEMORY[0x263F8EE78];
    sub_25925CD40(0, v31, 0);
    int64_t v33 = v31;
    uint64_t v34 = a2 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
    uint64_t v85 = *(void *)(v76 + 72);
    v87 = (void (**)(unint64_t, uint64_t, uint64_t))(v75 + 16);
    long long v86 = xmmword_259313470;
    int64_t v79 = v33;
    int64_t v35 = v33;
    uint64_t v36 = v25;
    uint64_t v37 = (uint64_t)v83;
    while (1)
    {
      uint64_t v88 = v35;
      sub_259261928(v34, v37, type metadata accessor for StoredPhoto);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
      uint64_t v38 = *(void *)(v89 + 72);
      unint64_t v39 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = v86;
      unint64_t v41 = v40 + v39;
      (*v87)(v41, v37, v91);
      swift_storeEnumTagMultiPayload();
      uint64_t v42 = v37 + v36[5];
      uint64_t v43 = sub_2593093D0();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v41 + v38, v42, v43);
      swift_storeEnumTagMultiPayload();
      *(void *)(v41 + 2 * v38) = *(void *)(v37 + v36[6]);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = *(void *)(v37 + v36[7]);
      if (v44 < 0) {
        break;
      }
      *(void *)(v41 + 3 * v38) = v44;
      swift_storeEnumTagMultiPayload();
      uint64_t v45 = (void *)(v37 + v36[9]);
      uint64_t v46 = v45[1];
      if (v46)
      {
        uint64_t v47 = (uint64_t)v82;
        void *v82 = *v45;
        *(void *)(v47 + 8) = v46;
        swift_storeEnumTagMultiPayload();
        sub_259261A48(v47, v41 + 4 * v38, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      }
      else
      {
        swift_storeEnumTagMultiPayload();
      }
      *(void *)(v41 + 5 * v38) = 16;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_259261B58(v37, type metadata accessor for StoredPhoto);
      v32._rawValue = v92;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CD40(0, *((void *)v32._rawValue + 2) + 1, 1);
        v32._rawValue = v92;
      }
      uint64_t v48 = v88;
      unint64_t v50 = *((void *)v32._rawValue + 2);
      unint64_t v49 = *((void *)v32._rawValue + 3);
      if (v50 >= v49 >> 1)
      {
        sub_25925CD40(v49 > 1, v50 + 1, 1);
        v32._rawValue = v92;
      }
      *((void *)v32._rawValue + 2) = v50 + 1;
      *((void *)v32._rawValue + v50 + 4) = v40;
      uint64_t v36 = v84;
      v34 += v85;
      int64_t v35 = v48 - 1;
      if (!v35)
      {
        uint64_t v27 = v81;
        int64_t v31 = v79;
        goto LABEL_26;
      }
    }
    __break(1u);
    goto LABEL_52;
  }
LABEL_26:
  v51._countAndFlagsBits = 0xD0000000000000DBLL;
  v51._object = (void *)0x800000025930DA50;
  DatabaseConnection.insert(sql:bindings:)(v51, v32);
  if (v52) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v93 = v27;
  if (!v31)
  {
    uint64_t v56 = (void *)MEMORY[0x263F8EE78];
LABEL_50:
    v70._countAndFlagsBits = 0xD0000000000001FBLL;
    v70._object = (void *)0x800000025930DB30;
    DatabaseConnection.insert(sql:bindings:)(v70, (Swift::OpaquePointer)v56);
    return swift_bridgeObjectRelease();
  }
  unint64_t v53 = v78 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
  uint64_t v54 = *(void *)(v76 + 72);
  uint64_t v55 = swift_bridgeObjectRetain();
  uint64_t v56 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    MEMORY[0x270FA5388](v55);
    unint64_t v73 = v53;
    uint64_t v57 = swift_bridgeObjectRetain();
    uint64_t v58 = sub_25925F1AC(v57, (uint64_t (*)(void, char *))sub_2592619DC, (uint64_t)v71);
    swift_bridgeObjectRelease();
    uint64_t v59 = *(void *)(v58 + 16);
    int64_t v60 = v56[2];
    int64_t v61 = v60 + v59;
    if (__OFADD__(v60, v59)) {
      break;
    }
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v61 > v56[3] >> 1)
    {
      if (v60 <= v61) {
        int64_t v63 = v60 + v59;
      }
      else {
        int64_t v63 = v60;
      }
      uint64_t v56 = sub_25924897C(isUniquelyReferenced_nonNull_native, v63, 1, v56);
    }
    if (*(void *)(v58 + 16))
    {
      uint64_t v64 = v56[2];
      if ((v56[3] >> 1) - v64 < v59) {
        goto LABEL_54;
      }
      unint64_t v65 = (unint64_t)&v56[v64 + 4];
      if (v58 + 32 < v65 + 8 * v59 && v65 < v58 + 32 + 8 * v59) {
        goto LABEL_56;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF70);
      swift_arrayInitWithCopy();
      if (v59)
      {
        uint64_t v67 = v56[2];
        BOOL v68 = __OFADD__(v67, v59);
        uint64_t v69 = v67 + v59;
        if (v68) {
          goto LABEL_55;
        }
        void v56[2] = v69;
      }
    }
    else if (v59)
    {
      goto LABEL_53;
    }
    uint64_t v55 = swift_bridgeObjectRelease();
    v53 += v54;
    if (!--v31)
    {
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
  }
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  LODWORD(v73) = 0;
  uint64_t v72 = 1092;
  v71[0] = 2;
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925A114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v9 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_259313480;
  unint64_t v13 = v12 + v11;
  uint64_t v14 = sub_259309440();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, a3, v14);
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v10) = a1;
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = (int *)type metadata accessor for StoredPhotoLayout(0);
    sub_2592207A0(a2 + v16[5], (uint64_t)v8, &qword_26A37DFC8);
    uint64_t v17 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
    BOOL v18 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v8, 1, v17) != 1;
    uint64_t v22 = v12;
    sub_25924A3A8((uint64_t)v8, &qword_26A37DFC8);
    *(unsigned char *)(v13 + 2 * v10) = v18;
    swift_storeEnumTagMultiPayload();
    *(void *)(v13 + 3 * v10) = *(void *)(a2 + v16[9]);
    swift_storeEnumTagMultiPayload();
    *(void *)(v13 + 4 * v10) = *(void *)(a2 + v16[10]);
    swift_storeEnumTagMultiPayload();
    *(void *)(v13 + 5 * v10) = *(void *)(a2 + v16[11]);
    swift_storeEnumTagMultiPayload();
    *(void *)(v13 + 6 * v10) = *(void *)(a2 + v16[12]);
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(v13 + 7 * v10) = *(unsigned char *)(a2 + v16[13]);
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = (void *)(a2 + v16[6]);
    *(void *)(v13 + 8 * v10) = *v19;
    swift_storeEnumTagMultiPayload();
    *(void *)(v13 + 9 * v10) = v19[1];
    swift_storeEnumTagMultiPayload();
    *(void *)(v13 + 10 * v10) = v19[2];
    swift_storeEnumTagMultiPayload();
    *(void *)(v13 + 11 * v10) = v19[3];
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = (void *)(a2 + v16[8]);
    *(void *)(v13 + 12 * v10) = *v20;
    swift_storeEnumTagMultiPayload();
    *(void *)(v13 + 13 * v10) = v20[1];
    swift_storeEnumTagMultiPayload();
    *(void *)(v13 + 14 * v10) = v20[2];
    swift_storeEnumTagMultiPayload();
    *(void *)(v13 - v10 + 16 * v10) = v20[3];
    swift_storeEnumTagMultiPayload();
    return v22;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PhotosFaceDatabase.delete(identifiers:)(Swift::OpaquePointer identifiers)
{
  sub_259256CF8(63, 0xE100000000000000, *((void *)identifiers._rawValue + 2));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E170);
  sub_25925F918();
  sub_259309B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_25924F5A0(v1, (uint64_t)identifiers._rawValue);
  swift_bridgeObjectRelease();
}

uint64_t sub_25925A59C(uint8_t **a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = sub_259309440();
  uint64_t v39 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v42 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DatabaseBinding();
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = *a1;
  if (qword_26B2F3BC0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_259309860();
  __swift_project_value_buffer(v10, (uint64_t)qword_26B2F3BA8);
  swift_bridgeObjectRetain_n();
  unint64_t v11 = sub_259309840();
  os_log_type_t v12 = sub_25930A1D0();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v38 = v2;
  if (v13)
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = v36;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v34 = v14 + 4;
    int64_t v35 = v14;
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = MEMORY[0x25A2DA610](v15, v43);
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_25924FC14(v16, v18, (uint64_t *)&v44);
    uint64_t v3 = v38;
    sub_25930A2A0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_type_t v19 = v12;
    uint64_t v20 = v35;
    _os_log_impl(&dword_25921A000, v11, v19, "Deleting Stored Photos %s", v35, 0xCu);
    uint64_t v21 = v36;
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v21, -1, -1);
    MEMORY[0x25A2DBAF0](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_25930A3E0();
  sub_259309C20();
  sub_259309C20();
  sub_259309C20();
  int64_t v22 = *(void *)(a2 + 16);
  uint64_t v23 = MEMORY[0x263F8EE78];
  if (v22)
  {
    int64_t v35 = v44;
    uint64_t v36 = (uint8_t *)v45;
    uint64_t v44 = (uint8_t *)MEMORY[0x263F8EE78];
    sub_25925CD9C(0, v22, 0);
    uint64_t v24 = v39 + 16;
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
    uint64_t v26 = a2 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    uint64_t v39 = *(void *)(v39 + 72);
    do
    {
      uint64_t v28 = v42;
      uint64_t v27 = v43;
      v25(v42, v26, v43);
      v25(v9, (uint64_t)v28, v27);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(v24 - 8))(v28, v27);
      uint64_t v23 = (uint64_t)v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CD9C(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = (uint64_t)v44;
      }
      unint64_t v30 = *(void *)(v23 + 16);
      unint64_t v29 = *(void *)(v23 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_25925CD9C(v29 > 1, v30 + 1, 1);
        uint64_t v23 = (uint64_t)v44;
      }
      *(void *)(v23 + 16) = v30 + 1;
      sub_259261A48((uint64_t)v9, v23+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v30, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      v26 += v39;
      --v22;
    }
    while (v22);
    uint64_t v3 = v38;
  }
  uint64_t v44 = v37;
  int64_t v31 = sub_259264340();
  if (!v3)
  {
    Swift::OpaquePointer v32 = v31;
    sub_25926906C(v23, v31);
    sub_259269950(v32);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t PhotosFaceDatabase.storedPhotos()()
{
  v1[2] = v0;
  uint64_t v2 = sub_259309440();
  v1[3] = v2;
  long long v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  v1[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE50);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25925AC04, v0, 0);
}

uint64_t sub_25925AC04()
{
  uint64_t v59 = v0;
  uint64_t v58 = *MEMORY[0x263EF8340];
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC10PhotosFace18PhotosFaceDatabase_connection);
  if (!v3)
  {
    sub_25924EDE4();
    uint64_t v3 = *(void *)(v1 + v2);
    if (!v3)
    {
      sub_25924813C();
      swift_allocError();
      *unint64_t v11 = 0;
      goto LABEL_34;
    }
  }
  *(void *)__dst = v3;
  v4._countAndFlagsBits = 0x6E69676562;
  v4._object = (void *)0xE500000000000000;
  DatabaseConnection.execute(sql:)(v4);
  uint64_t v6 = v5;
  if (v5)
  {
LABEL_32:
    *(void *)__dst = v3;
    v43._countAndFlagsBits = 0x6B6361626C6C6F72;
    v43._object = (void *)0xE800000000000000;
    DatabaseConnection.execute(sql:)(v43);
    if (v44)
    {

LABEL_35:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v45 = (uint64_t (*)(void))v0[1];
      return v45();
    }
LABEL_34:
    swift_willThrow();
    goto LABEL_35;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v7 = type metadata accessor for DatabaseBinding();
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2593131D0;
  uint64_t v10 = v9 + v8;
  *(void *)(v9 + v8) = 16;
  swift_storeEnumTagMultiPayload();
  *(void *)__dst = v3;
  os_log_type_t v12 = sub_259264340();
  BOOL v13 = (void *)v0[10];
  uint64_t v15 = v0[7];
  uint64_t v14 = (void *)v0[8];
  uint64_t v16 = v0[9] + *(int *)(v15 + 48);
  swift_bridgeObjectRetain();
  sub_259261928(v10, v16, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
  uint64_t v17 = (uint64_t)v13 + *(int *)(v15 + 48);
  *BOOL v13 = 0;
  sub_259261A48(v16, v17, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
  sub_25924A404((uint64_t)v13, (uint64_t)v14, &qword_26A37DE50);
  uint64_t v18 = *v14 + 1;
  if (__OFADD__(*v14, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v18 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
  }
  if (v18 > 0x7FFFFFFF) {
    goto LABEL_52;
  }
  int v19 = sub_259269B44((uint64_t)v14 + *(int *)(v15 + 48), v18, v12);
  if (v19)
  {
    unsigned int v20 = v19;
    if (sqlite3_errstr(v19))
    {
      uint64_t v21 = sub_259309C30();
      unint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 4271950;
      unint64_t v23 = 0xE300000000000000;
    }
    uint64_t v41 = v0[8];
    sub_259248190();
    uint64_t v6 = (void *)swift_allocError();
    void *v42 = v20;
    v42[1] = v21;
    v42[2] = v23;
    swift_willThrow();
    sub_25924A3A8(v41, &qword_26A37DE50);
    swift_bridgeObjectRelease();
LABEL_31:
    sub_259269950(v12);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    goto LABEL_32;
  }
  sub_25924A3A8(v0[8], &qword_26A37DE50);
  swift_bridgeObjectRelease();
  sub_259269764(v12);
  int v24 = sqlite3_step(v12);
  if (v24 == 100)
  {
    uint64_t v25 = v0[4];
    unint64_t v26 = MEMORY[0x263F8EE78];
    do
    {
      if (sqlite3_column_type(v12, 0) == 5 || (uint64_t v27 = sqlite3_column_blob(v12, 0)) == 0)
      {
        sub_2592481E4();
        uint64_t v6 = (void *)swift_allocError();
        *(_DWORD *)uint64_t v50 = 0;
        *(unsigned char *)(v50 + 4) = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      uint64_t v28 = v27;
      int v29 = sqlite3_column_bytes(v12, 0);
      if (v29)
      {
        uint64_t v30 = v29;
        if (v29 <= 14)
        {
          memset(__dst, 0, sizeof(__dst));
          unsigned __int8 v57 = v29;
          memcpy(__dst, v28, v29);
          uint64_t v32 = *(void *)__dst;
          unint64_t v33 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v57 << 48);
        }
        else
        {
          sub_259309220();
          swift_allocObject();
          if (v30 == 0x7FFFFFFF)
          {
            uint64_t v31 = sub_2593091D0();
            sub_259309330();
            uint64_t v32 = swift_allocObject();
            *(_OWORD *)(v32 + 16) = xmmword_2593131F0;
            unint64_t v33 = v31 | 0x8000000000000000;
          }
          else
          {
            uint64_t v34 = sub_2593091D0();
            uint64_t v32 = v30 << 32;
            unint64_t v33 = v34 | 0x4000000000000000;
          }
        }
      }
      else
      {
        uint64_t v32 = 0;
        unint64_t v33 = 0xC000000000000000;
      }
      UUID.init(serialized:version:)(v32, v33);
      (*(void (**)(void, void, void))(v25 + 16))(v0[5], v0[6], v0[3]);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v26 = sub_259248238(0, *(void *)(v26 + 16) + 1, 1, v26);
      }
      unint64_t v36 = *(void *)(v26 + 16);
      unint64_t v35 = *(void *)(v26 + 24);
      if (v36 >= v35 >> 1) {
        unint64_t v26 = sub_259248238(v35 > 1, v36 + 1, 1, v26);
      }
      uint64_t v37 = v0[5];
      uint64_t v38 = v0[6];
      uint64_t v39 = v0[3];
      *(void *)(v26 + 16) = v36 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 32))(v26+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v36, v37, v39);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v38, v39);
      int v40 = sqlite3_step(v12);
    }
    while (v40 == 100);
    unsigned int v47 = v40;
    if (v40 != 101) {
      goto LABEL_43;
    }
  }
  else
  {
    unsigned int v47 = v24;
    unint64_t v26 = MEMORY[0x263F8EE78];
    if (v24 != 101)
    {
LABEL_43:
      swift_bridgeObjectRelease();
      if (sqlite3_errstr(v47))
      {
        uint64_t v51 = sub_259309C30();
        unint64_t v53 = v52;
      }
      else
      {
        uint64_t v51 = 4271950;
        unint64_t v53 = 0xE300000000000000;
      }
      sub_259248190();
      uint64_t v6 = (void *)swift_allocError();
      *uint64_t v55 = v47 | 0xA000000000000000;
      v55[1] = v51;
      v55[2] = v53;
      swift_willThrow();
      goto LABEL_31;
    }
  }
  sub_259269950(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)__dst = v3;
  v48._countAndFlagsBits = 0x74696D6D6F63;
  v48._object = (void *)0xE600000000000000;
  DatabaseConnection.execute(sql:)(v48);
  if (v49)
  {
    uint64_t v6 = v49;
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v54 = (uint64_t (*)(unint64_t))v0[1];
  return v54(v26);
}

uint64_t PhotosFaceDatabase.timePositions(for:)(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  return MEMORY[0x270FA2498](sub_25925B470, v1, 0);
}

uint64_t sub_25925B470()
{
  uint64_t v1 = (unint64_t *)v0[4];
  uint64_t v2 = v0[3];
  v0[2] = sub_259256CF8(63, 0xE100000000000000, *(void *)(v2 + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E170);
  sub_25925F918();
  uint64_t v3 = sub_259309B30();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_25924F728(v1, v3, v5, v2);
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t (*)(unint64_t *))v0[1];
  return v7(v6);
}

uint64_t sub_25925B588@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, unint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v103 = a2;
  v87 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF40);
  uint64_t v92 = *(void *)(v6 - 8);
  uint64_t v93 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v98 = (uint64_t)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v97 = (uint64_t)&v86 - v9;
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE50);
  uint64_t v10 = MEMORY[0x270FA5388](v102);
  uint64_t v91 = (uint64_t *)((char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v101 = (char *)&v86 - v13;
  MEMORY[0x270FA5388](v12);
  v100 = (uint64_t *)((char *)&v86 - v14);
  uint64_t v108 = sub_259309440();
  uint64_t v15 = *(void *)(v108 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v108);
  v99 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  v105 = (char *)&v86 - v18;
  uint64_t v19 = type metadata accessor for DatabaseBinding();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v107 = (uint64_t)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = *a1;
  uint64_t v109 = 0;
  unint64_t v110 = 0xE000000000000000;
  sub_25930A3E0();
  sub_259309C20();
  sub_259309C20();
  sub_259309C20();
  unint64_t v22 = v110;
  uint64_t v95 = v109;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF78);
  uint64_t v23 = v103;
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v111 = *(void (***)(uint64_t, char *, uint64_t))(v20 + 72);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_2593131D0;
  unint64_t v106 = v24;
  *(void *)(v25 + v24) = 16;
  uint64_t v104 = v19;
  swift_storeEnumTagMultiPayload();
  int64_t v26 = *(void *)(v23 + 16);
  uint64_t v27 = MEMORY[0x263F8EE78];
  unint64_t v94 = v22;
  uint64_t v88 = v15;
  if (v26)
  {
    uint64_t v89 = v25;
    uint64_t v90 = v3;
    uint64_t v109 = MEMORY[0x263F8EE78];
    sub_25925CD9C(0, v26, 0);
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v29 = v15 + 16;
    uint64_t v28 = v30;
    uint64_t v31 = v23 + ((*(unsigned __int8 *)(v29 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 64));
    uint64_t v103 = *(void *)(v29 + 56);
    uint64_t v32 = v107;
    do
    {
      unint64_t v33 = v105;
      uint64_t v34 = v108;
      v28(v105, v31, v108);
      v28((char *)v32, (uint64_t)v33, v34);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(v29 - 8))(v33, v34);
      uint64_t v27 = v109;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CD9C(0, *(void *)(v27 + 16) + 1, 1);
        uint64_t v27 = v109;
      }
      unint64_t v36 = *(void *)(v27 + 16);
      unint64_t v35 = *(void *)(v27 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_25925CD9C(v35 > 1, v36 + 1, 1);
        uint64_t v27 = v109;
      }
      *(void *)(v27 + 16) = v36 + 1;
      uint64_t v37 = v27 + v106 + v36 * (void)v111;
      uint64_t v32 = v107;
      sub_259261A48(v107, v37, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      v31 += v103;
      --v26;
    }
    while (v26);
    uint64_t v4 = v90;
    uint64_t v25 = v89;
  }
  uint64_t v109 = v25;
  sub_25925C534(v27, (uint64_t (*)(void))sub_2592488EC, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
  uint64_t v38 = v109;
  uint64_t v109 = v96;
  uint64_t v39 = sub_259264340();
  if (v4)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  int v40 = v39;
  v105 = 0;
  uint64_t v41 = *(void *)(v38 + 16);
  uint64_t v107 = v38;
  swift_bridgeObjectRetain();
  uint64_t v42 = v91;
  if (!v41)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_259269764(v40);
    int v53 = sqlite3_step(v40);
    if (v53 == 100)
    {
      v111 = (void (**)(uint64_t, char *, uint64_t))(v88 + 32);
      unint64_t v54 = MEMORY[0x263F8EE78];
      uint64_t v55 = v105;
      uint64_t v56 = v97;
      while (1)
      {
        if (sqlite3_column_type(v40, 0) == 5 || (unsigned __int8 v57 = sqlite3_column_blob(v40, 0)) == 0)
        {
          sub_2592481E4();
          swift_allocError();
          *(_DWORD *)uint64_t v80 = 0;
          *(unsigned char *)(v80 + 4) = 0;
          swift_willThrow();
          goto LABEL_46;
        }
        uint64_t v58 = v57;
        int v59 = sqlite3_column_bytes(v40, 0);
        uint64_t v60 = sub_259267384(v58, v59);
        int64_t v61 = v55;
        UUID.init(serialized:version:)(v60, v62);
        if (v55) {
          goto LABEL_46;
        }
        if (sqlite3_column_type(v40, 1) == 5)
        {
          sub_2592481E4();
          swift_allocError();
          int v84 = 1;
          goto LABEL_45;
        }
        int v63 = sqlite3_column_int(v40, 1);
        if (sqlite3_column_type(v40, 2) == 5) {
          break;
        }
        uint64_t v64 = v63;
        int v65 = sqlite3_column_int(v40, 2);
        if (v63 < 0) {
          goto LABEL_52;
        }
        BOOL v66 = v65 == 1;
        uint64_t v67 = *(int *)(v93 + 48);
        uint64_t v68 = *(int *)(v93 + 64);
        (*v111)(v56, v99, v108);
        *(void *)(v56 + v67) = v64;
        *(unsigned char *)(v56 + v68) = v66;
        sub_2592207A0(v56, v98, &qword_26A37DF40);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v54 = sub_259248A8C(0, *(void *)(v54 + 16) + 1, 1, v54);
        }
        unint64_t v70 = *(void *)(v54 + 16);
        unint64_t v69 = *(void *)(v54 + 24);
        uint64_t v55 = v61;
        if (v70 >= v69 >> 1) {
          unint64_t v54 = sub_259248A8C(v69 > 1, v70 + 1, 1, v54);
        }
        *(void *)(v54 + 16) = v70 + 1;
        sub_25924A404(v98, v54+ ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))+ *(void *)(v92 + 72) * v70, &qword_26A37DF40);
        sub_25924A3A8(v97, &qword_26A37DF40);
        int v71 = sqlite3_step(v40);
        if (v71 != 100)
        {
          unsigned int v85 = v71;
          goto LABEL_32;
        }
      }
      sub_2592481E4();
      swift_allocError();
      int v84 = 2;
LABEL_45:
      *(_DWORD *)uint64_t v83 = v84;
      *(unsigned char *)(v83 + 4) = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v99, v108);
LABEL_46:
      swift_bridgeObjectRelease();
    }
    else
    {
      unsigned int v85 = v53;
      unint64_t v54 = MEMORY[0x263F8EE78];
LABEL_32:
      if (v85 == 101)
      {
        sub_259269950(v40);
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t *v87 = v54;
        return result;
      }
      swift_bridgeObjectRelease();
      if (sqlite3_errstr(v85))
      {
        uint64_t v77 = sub_259309C30();
        unint64_t v79 = v78;
      }
      else
      {
        uint64_t v77 = 4271950;
        unint64_t v79 = 0xE300000000000000;
      }
      sub_259248190();
      swift_allocError();
      unint64_t *v82 = v85 | 0xA000000000000000;
      v82[1] = v77;
      v82[2] = v79;
      swift_willThrow();
    }
LABEL_47:
    sub_259269950(v40);
    goto LABEL_48;
  }
  uint64_t v43 = 0;
  uint64_t v44 = v107 + v106;
  while (1)
  {
    unint64_t v45 = v40;
    uint64_t v46 = v102;
    uint64_t v47 = (uint64_t)&v101[*(int *)(v102 + 48)];
    sub_259261928(v44, v47, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    uint64_t v48 = *(int *)(v46 + 48);
    uint64_t v49 = (uint64_t)v100;
    uint64_t v50 = (uint64_t)v100 + v48;
    void *v100 = v43;
    sub_259261A48(v47, v50, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
    sub_25924A404(v49, (uint64_t)v42, &qword_26A37DE50);
    uint64_t v51 = *v42 + 1;
    if (__OFADD__(*v42, 1)) {
      break;
    }
    if (v51 < (uint64_t)0xFFFFFFFF80000000) {
      goto LABEL_50;
    }
    if (v51 > 0x7FFFFFFF) {
      goto LABEL_51;
    }
    int v40 = v45;
    int v52 = sub_259269B44((uint64_t)v42 + *(int *)(v102 + 48), v51, v45);
    if (v52)
    {
      unsigned int v73 = v52;
      if (sqlite3_errstr(v52))
      {
        uint64_t v74 = sub_259309C30();
        unint64_t v76 = v75;
      }
      else
      {
        uint64_t v74 = 4271950;
        unint64_t v76 = 0xE300000000000000;
      }
      sub_259248190();
      swift_allocError();
      *uint64_t v81 = v73;
      v81[1] = v74;
      v81[2] = v76;
      swift_willThrow();
      sub_25924A3A8((uint64_t)v91, &qword_26A37DE50);
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
    ++v43;
    sub_25924A3A8((uint64_t)v42, &qword_26A37DE50);
    v44 += (uint64_t)v111;
    if (v41 == v43) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  uint64_t result = sub_25930A570();
  __break(1u);
  return result;
}

uint64_t PhotosFaceDatabase.unassociatedPhotos()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25925C074, v0, 0);
}

uint64_t sub_25925C074()
{
  uint64_t v1 = PhotosFaceDatabase.queryPhotos(sql:bindings:)(0xD00000000000030DLL, 0x800000025930D5A0, MEMORY[0x263F8EE78]);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_25925C110(uint64_t a1)
{
  return sub_25925C534(a1, (uint64_t (*)(void))sub_259248238, MEMORY[0x263F07508]);
}

uint64_t sub_25925C13C(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  uint64_t v4 = *(void **)v1;
  int64_t v5 = *(void *)(*(void *)v1 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t v4 = sub_25924826C(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_259278F14((uint64_t)v38, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, result);
    uint64_t v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    v4[2] = v16;
  }
  if (result != v12)
  {
LABEL_13:
    uint64_t result = sub_259261990();
    *(void *)uint64_t v1 = v4;
    return result;
  }
LABEL_16:
  int64_t v2 = v4[2];
  uint64_t v3 = v38[0];
  uint64_t v37 = v38[1];
  uint64_t v13 = v39;
  int64_t v6 = v40;
  if (v41)
  {
    unint64_t v17 = (v41 - 1) & v41;
    unint64_t v18 = __clz(__rbit64(v41)) | (v40 << 6);
    int64_t v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  int64_t v32 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_66;
  }
  int64_t v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36) {
    goto LABEL_13;
  }
  unint64_t v33 = *(void *)(v37 + 8 * v32);
  int64_t v34 = v6 + 1;
  if (!v33)
  {
    int64_t v34 = v6 + 2;
    if (v6 + 2 >= v36) {
      goto LABEL_13;
    }
    unint64_t v33 = *(void *)(v37 + 8 * v34);
    if (!v33)
    {
      int64_t v34 = v6 + 3;
      if (v6 + 3 >= v36) {
        goto LABEL_13;
      }
      unint64_t v33 = *(void *)(v37 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v6 + 4;
        if (v6 + 4 >= v36) {
          goto LABEL_13;
        }
        unint64_t v33 = *(void *)(v37 + 8 * v34);
        if (!v33)
        {
          int64_t v34 = v6 + 5;
          if (v6 + 5 >= v36) {
            goto LABEL_13;
          }
          unint64_t v33 = *(void *)(v37 + 8 * v34);
          if (!v33)
          {
            int64_t v35 = v6 + 6;
            do
            {
              if (v36 == v35) {
                goto LABEL_13;
              }
              unint64_t v33 = *(void *)(v37 + 8 * v35++);
            }
            while (!v33);
            int64_t v34 = v35 - 1;
          }
        }
      }
    }
  }
  unint64_t v17 = (v33 - 1) & v33;
  unint64_t v18 = __clz(__rbit64(v33)) + (v34 << 6);
  int64_t v6 = v34;
LABEL_18:
  uint64_t v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v18);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v22 = v4[3];
    int64_t v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1) {
      break;
    }
    if (v2 < v23) {
      goto LABEL_23;
    }
LABEL_20:
    v4[2] = v2;
  }
  uint64_t result = (uint64_t)sub_25924826C((void *)(v22 > 1), v2 + 1, 1, v4);
  uint64_t v4 = (void *)result;
  int64_t v23 = *(void *)(result + 24) >> 1;
  if (v2 >= v23) {
    goto LABEL_20;
  }
  while (1)
  {
LABEL_23:
    unint64_t v24 = &v4[2 * v2 + 4];
    *unint64_t v24 = v21;
    v24[1] = v20;
    ++v2;
    if (v17)
    {
      unint64_t v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    int64_t v27 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v27 >= v36) {
      goto LABEL_45;
    }
    unint64_t v28 = *(void *)(v37 + 8 * v27);
    int64_t v29 = v6 + 1;
    if (!v28)
    {
      int64_t v29 = v6 + 2;
      if (v6 + 2 >= v36) {
        goto LABEL_45;
      }
      unint64_t v28 = *(void *)(v37 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v6 + 3;
        if (v6 + 3 >= v36) {
          goto LABEL_45;
        }
        unint64_t v28 = *(void *)(v37 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v6 + 4;
          if (v6 + 4 >= v36) {
            goto LABEL_45;
          }
          unint64_t v28 = *(void *)(v37 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v6 + 5;
            if (v6 + 5 >= v36) {
              goto LABEL_45;
            }
            unint64_t v28 = *(void *)(v37 + 8 * v29);
            if (!v28)
            {
              int64_t v30 = v6 + 6;
              while (v36 != v30)
              {
                unint64_t v28 = *(void *)(v37 + 8 * v30++);
                if (v28)
                {
                  int64_t v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    unint64_t v17 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    int64_t v6 = v29;
LABEL_41:
    uint64_t v31 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v26);
    uint64_t v21 = *v31;
    uint64_t v20 = v31[1];
    if (v2 >= v23)
    {
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    uint64_t result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_25925C508(uint64_t a1)
{
  return sub_25925C534(a1, (uint64_t (*)(void))sub_259248F08, type metadata accessor for StoredPhoto);
}

uint64_t sub_25925C534(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925C6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoredPhotoLayout(0);
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  int64_t v9 = (char *)&v40 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E228);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (int64_t *)((char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v11);
  unint64_t v16 = (int64_t *)((char *)&v40 - v15);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v43 = a1;
  int64_t v44 = 0;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v18 = a1 + 64;
  uint64_t v17 = v19;
  uint64_t v20 = 1 << *(unsigned char *)(v18 - 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v17;
  uint64_t v41 = v18;
  int64_t v42 = (unint64_t)(v20 + 63) >> 6;
  int64_t v40 = v42 - 1;
  while (1)
  {
    if (v22)
    {
      unint64_t v23 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v24 = v23 | (v44 << 6);
LABEL_8:
      uint64_t v25 = *(void *)(v43 + 56);
      *uint64_t v13 = *(void *)(*(void *)(v43 + 48) + 8 * v24);
      uint64_t v26 = v25 + *(void *)(v45 + 72) * v24;
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E230);
      sub_259261928(v26, (uint64_t)v13 + *(int *)(v27 + 48), type metadata accessor for StoredPhotoLayout);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 0, 1, v27);
      goto LABEL_30;
    }
    int64_t v28 = v44 + 1;
    if (__OFADD__(v44, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v28 < v42)
    {
      unint64_t v29 = *(void *)(v41 + 8 * v28);
      if (v29) {
        goto LABEL_12;
      }
      int64_t v30 = v44 + 2;
      ++v44;
      if (v28 + 1 < v42)
      {
        unint64_t v29 = *(void *)(v41 + 8 * v30);
        if (v29) {
          goto LABEL_15;
        }
        int64_t v44 = v28 + 1;
        if (v28 + 2 < v42)
        {
          unint64_t v29 = *(void *)(v41 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_12;
          }
          int64_t v44 = v28 + 2;
          if (v28 + 3 < v42)
          {
            unint64_t v29 = *(void *)(v41 + 8 * (v28 + 3));
            if (v29)
            {
              v28 += 3;
              goto LABEL_12;
            }
            int64_t v30 = v28 + 4;
            int64_t v44 = v28 + 3;
            if (v28 + 4 < v42) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E230);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 1, 1, v31);
    unint64_t v22 = 0;
LABEL_30:
    sub_25924A404((uint64_t)v13, (uint64_t)v16, &qword_26A37E228);
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E230);
    int v33 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v16, 1, v32);
    BOOL v34 = v33 == 1;
    if (v33 == 1) {
      return v34;
    }
    uint64_t v35 = (uint64_t)v16 + *(int *)(v32 + 48);
    uint64_t v36 = *v16;
    sub_259261A48(v35, (uint64_t)v9, type metadata accessor for StoredPhotoLayout);
    unint64_t v37 = sub_25925E388(v36);
    if ((v38 & 1) == 0)
    {
      sub_259261B58((uint64_t)v9, type metadata accessor for StoredPhotoLayout);
      return 0;
    }
    sub_259261928(*(void *)(a2 + 56) + *(void *)(v45 + 72) * v37, (uint64_t)v7, type metadata accessor for StoredPhotoLayout);
    char v39 = _s10PhotosFace17StoredPhotoLayoutV2eeoiySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v9);
    sub_259261B58((uint64_t)v7, type metadata accessor for StoredPhotoLayout);
    uint64_t result = sub_259261B58((uint64_t)v9, type metadata accessor for StoredPhotoLayout);
    if ((v39 & 1) == 0) {
      return v34;
    }
  }
  unint64_t v29 = *(void *)(v41 + 8 * v30);
  if (v29)
  {
LABEL_15:
    int64_t v28 = v30;
LABEL_12:
    unint64_t v22 = (v29 - 1) & v29;
    unint64_t v24 = __clz(__rbit64(v29)) + (v28 << 6);
    int64_t v44 = v28;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v42)
    {
      int64_t v44 = v40;
      goto LABEL_29;
    }
    unint64_t v29 = *(void *)(v41 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_12;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_25925CBB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925DDA0(a1, a2, a3, (void *)*v3, &qword_26A37DF48, MEMORY[0x263F07508]);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CBF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925D074(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_25925CC14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925E148(a1, a2, a3, (void *)*v3, &qword_26A37DF50, &qword_26A37DF58);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CC44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925E148(a1, a2, a3, (void *)*v3, &qword_26A37E290, &qword_26A37C9A0);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CC74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925E148(a1, a2, a3, (void *)*v3, &qword_26A37DFC0, &qword_26A37DFB8);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CCA4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925DDA0(a1, a2, a3, (void *)*v3, &qword_26A37DF08, type metadata accessor for StoredPhoto);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CCE0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925E148(a1, a2, a3, (void *)*v3, &qword_26A37E2B8, &qword_26A37E168);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CD10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925E148(a1, a2, a3, (void *)*v3, &qword_26A37DF80, &qword_26A37DF88);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CD40(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925D1E0(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CD60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925DDA0(a1, a2, a3, (void *)*v3, &qword_26A37DF60, (uint64_t (*)(void))type metadata accessor for ShuffleID);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CD9C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925DDA0(a1, a2, a3, (void *)*v3, &qword_26A37DF78, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CDD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925DDA0(a1, a2, a3, (void *)*v3, &qword_26A37E238, type metadata accessor for StoredPhotoProto);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CE14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925D36C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_25925CE34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925D4D8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_25925CE54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925D644(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_25925CE74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925D7C4(a1, a2, a3, *v3, &qword_26A37E270);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_25925CE9C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925D7C4(a1, a2, a3, *v3, &qword_26A37E248);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_25925CEC4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925E148(a1, a2, a3, (void *)*v3, &qword_26A37DF20, &qword_26A37DF28);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CEF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925DAB8(a1, a2, a3, *v3, &qword_26A37DF18);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_25925CF1C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925D7C4(a1, a2, a3, *v3, &qword_26A37E240);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_25925CF44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925D920(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CF64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925DAB8(a1, a2, a3, *v3, &qword_26A37DEE8);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_25925CF8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925DDA0(a1, a2, a3, (void *)*v3, &qword_26A37DFE0, (uint64_t (*)(void))type metadata accessor for AlbumID);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CFC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925DC14(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925CFE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925DDA0(a1, a2, a3, (void *)*v3, &qword_26A37E288, type metadata accessor for StoredPhotoLayoutProto);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925D024(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925DFE8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_25925D044(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_25925E148(a1, a2, a3, (void *)*v3, &qword_26A37E258, &qword_26A37C990);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_25925D074(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF00);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925D1E0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF68);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF70);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925D36C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF30);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925D4D8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E280);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925D644(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E278);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925D7A4(char a1, int64_t a2, char a3, void *a4)
{
  return sub_25925E148(a1, a2, a3, a4, &qword_26A37DF20, &qword_26A37DF28);
}

uint64_t sub_25925D7B8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_25925DAB8(a1, a2, a3, a4, &qword_26A37DF18);
}

uint64_t sub_25925D7C4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925D920(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DEF0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DEF8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925DAAC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_25925DAB8(a1, a2, a3, a4, &qword_26A37DEE8);
}

uint64_t sub_25925DAB8(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925DC14(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E260);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E268);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925DDA0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925DFE8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E250);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25925E148(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

unint64_t sub_25925E388(uint64_t a1)
{
  sub_25930A8C0();
  sub_25930A8D0();
  uint64_t v2 = sub_25930A910();
  return sub_25925E670(a1, v2);
}

unint64_t sub_25925E3F4(uint64_t a1)
{
  uint64_t v2 = sub_25930A8B0();
  return sub_25925E670(a1, v2);
}

unint64_t sub_25925E438(uint64_t a1)
{
  return sub_25925E444(a1, &qword_26A37DFB0);
}

unint64_t sub_25925E444(uint64_t a1, uint64_t *a2)
{
  sub_25930A8C0();
  StoredPhoto.hash(into:)(v6);
  uint64_t v4 = sub_25930A910();
  return sub_25925E70C(a1, v4, a2);
}

unint64_t sub_25925E4B4(uint64_t a1)
{
  sub_259309440();
  sub_259261998(&qword_26A37E298);
  uint64_t v2 = sub_259309B10();
  return sub_25925E908(a1, v2);
}

unint64_t sub_25925E538(uint64_t a1, uint64_t a2)
{
  sub_25930A8C0();
  sub_259309C00();
  uint64_t v4 = sub_25930A910();
  return sub_25925EAB4(a1, a2, v4);
}

unint64_t sub_25925E5B0(unsigned int a1)
{
  uint64_t v3 = MEMORY[0x25A2DB110](*(void *)(v1 + 40), a1, 4);
  return sub_25925EB98(a1, v3);
}

unint64_t sub_25925E5F8(char a1)
{
  sub_25930A8C0();
  sub_25930A8D0();
  uint64_t v2 = sub_25930A910();
  return sub_25925EC34(a1, v2);
}

unint64_t sub_25925E670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_25925E70C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a3) - 8;
  MEMORY[0x270FA5388](v7);
  int64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v12 = a2 & ~v11;
  if ((*(void *)(v3 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v8 + 72);
    do
    {
      sub_2592207A0(*(void *)(v3 + 48) + v14 * v12, (uint64_t)v10, a3);
      if (sub_259309400())
      {
        unint64_t v15 = (int *)type metadata accessor for StoredPhoto(0);
        if ((sub_2593093B0() & 1) != 0
          && *(double *)&v10[v15[6]] == *(double *)(a1 + v15[6])
          && *(void *)&v10[v15[7]] == *(void *)(a1 + v15[7])
          && (sub_25925C6F0(*(void *)&v10[v15[8]], *(void *)(a1 + v15[8])) & 1) != 0)
        {
          uint64_t v16 = v15[9];
          size_t v17 = &v10[v16];
          uint64_t v18 = *(void *)&v10[v16 + 8];
          uint64_t v19 = (void *)(a1 + v16);
          uint64_t v20 = v19[1];
          if (v18)
          {
            if (v20 && (*(void *)v17 == *v19 && v18 == v20 || (sub_25930A7C0() & 1) != 0))
            {
LABEL_16:
              sub_25924A3A8((uint64_t)v10, a3);
              return v12;
            }
          }
          else if (!v20)
          {
            goto LABEL_16;
          }
        }
      }
      sub_25924A3A8((uint64_t)v10, a3);
      unint64_t v12 = (v12 + 1) & v13;
    }
    while (((*(void *)(v3 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  return v12;
}

unint64_t sub_25925E908(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_259309440();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_259261998(&qword_26A37E2A0);
      char v15 = sub_259309B60();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_25925EAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25930A7C0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25930A7C0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_25925EB98(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_25925EC34(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = qword_259313578[a1];
    uint64_t v8 = *(void *)(v2 + 48);
    if (qword_259313578[*(char *)(v8 + result)] != v7)
    {
      uint64_t v9 = ~v5;
      for (unint64_t result = (result + 1) & v9;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v9)
      {
        if (qword_259313578[*(char *)(v8 + result)] == v7) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_25925ECE8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v6 = type metadata accessor for StoredPhotoLayout(0);
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v55 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v52 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C9A0);
  uint64_t result = MEMORY[0x270FA5388](v11);
  char v15 = (uint64_t *)((char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(a1 + 16))
  {
    uint64_t v52 = *(void *)(a1 + 16);
    uint64_t v53 = a1;
    uint64_t v16 = (uint64_t)v15 + *(int *)(result + 48);
    unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v56 = *(void *)(v13 + 72);
    sub_2592207A0(a1 + v17, (uint64_t)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26A37C9A0);
    uint64_t v18 = *v15;
    sub_259261A48(v16, (uint64_t)v10, type metadata accessor for StoredPhotoLayout);
    uint64_t v19 = (void *)*a3;
    uint64_t v54 = v18;
    unint64_t v21 = sub_25925E388(v18);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    char v25 = v20;
    if (v19[3] < v24)
    {
      sub_259292F44(v24, a2 & 1);
      unint64_t v26 = sub_25925E388(v54);
      if ((v25 & 1) != (v27 & 1))
      {
LABEL_26:
        type metadata accessor for PFCTimePosition(0);
        uint64_t result = sub_25930A830();
        __break(1u);
        return result;
      }
      unint64_t v21 = v26;
      int64_t v28 = (void *)*a3;
      if ((v25 & 1) == 0) {
        goto LABEL_11;
      }
LABEL_9:
      unint64_t v29 = *(void *)(v57 + 72) * v21;
      uint64_t v30 = v28[7] + v29;
      uint64_t v31 = v55;
      sub_259261928(v30, v55, type metadata accessor for StoredPhotoLayout);
      sub_259261B58((uint64_t)v10, type metadata accessor for StoredPhotoLayout);
      uint64_t result = sub_2592619E4(v31, *(void *)(*a3 + 56) + v29);
LABEL_13:
      uint64_t v35 = v52 - 1;
      if (v52 == 1) {
        return result;
      }
      uint64_t v36 = v53 + v56 + v17;
      while (1)
      {
        sub_2592207A0(v36, (uint64_t)v15, &qword_26A37C9A0);
        uint64_t v40 = *v15;
        sub_259261A48(v16, (uint64_t)v10, type metadata accessor for StoredPhotoLayout);
        uint64_t v41 = *a3;
        unint64_t v42 = sub_25925E388(v40);
        uint64_t v44 = *(void *)(v41 + 16);
        BOOL v45 = (v43 & 1) == 0;
        BOOL v33 = __OFADD__(v44, v45);
        uint64_t v46 = v44 + v45;
        if (v33) {
          goto LABEL_24;
        }
        char v47 = v43;
        if (*(void *)(v41 + 24) < v46)
        {
          sub_259292F44(v46, 1);
          unint64_t v42 = sub_25925E388(v40);
          if ((v47 & 1) != (v48 & 1)) {
            goto LABEL_26;
          }
        }
        uint64_t v49 = (void *)*a3;
        if (v47)
        {
          unint64_t v37 = *(void *)(v57 + 72) * v42;
          uint64_t v38 = v49[7] + v37;
          uint64_t v39 = v55;
          sub_259261928(v38, v55, type metadata accessor for StoredPhotoLayout);
          sub_259261B58((uint64_t)v10, type metadata accessor for StoredPhotoLayout);
          uint64_t result = sub_2592619E4(v39, *(void *)(*a3 + 56) + v37);
        }
        else
        {
          v49[(v42 >> 6) + 8] |= 1 << v42;
          *(void *)(v49[6] + 8 * v42) = v40;
          uint64_t result = sub_259261A48((uint64_t)v10, v49[7] + *(void *)(v57 + 72) * v42, type metadata accessor for StoredPhotoLayout);
          uint64_t v50 = v49[2];
          BOOL v33 = __OFADD__(v50, 1);
          uint64_t v51 = v50 + 1;
          if (v33) {
            goto LABEL_25;
          }
          v49[2] = v51;
        }
        v36 += v56;
        if (!--v35) {
          return result;
        }
      }
    }
    if (a2)
    {
      int64_t v28 = (void *)*a3;
      if (v20) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_259294CFC();
      int64_t v28 = (void *)*a3;
      if (v25) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v28[(v21 >> 6) + 8] |= 1 << v21;
    *(void *)(v28[6] + 8 * v21) = v54;
    uint64_t result = sub_259261A48((uint64_t)v10, v28[7] + *(void *)(v57 + 72) * v21, type metadata accessor for StoredPhotoLayout);
    uint64_t v32 = v28[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v28[2] = v34;
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_25925F1AC(uint64_t a1, uint64_t (*a2)(void, char *), uint64_t a3)
{
  char v47 = a2;
  uint64_t v48 = a3;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E230);
  uint64_t v5 = MEMORY[0x270FA5388](v46);
  BOOL v45 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v44 = (void *)((char *)v37 - v8);
  MEMORY[0x270FA5388](v7);
  char v43 = (char *)v37 - v9;
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (!v10) {
    return v11;
  }
  v37[1] = v3;
  uint64_t v50 = MEMORY[0x263F8EE78];
  sub_25925CD40(0, v10, 0);
  uint64_t result = sub_2592E81E4(a1);
  uint64_t v14 = result;
  uint64_t v15 = 0;
  uint64_t v16 = a1 + 64;
  uint64_t v38 = a1 + 80;
  int64_t v39 = v10;
  uint64_t v41 = a1 + 64;
  uint64_t v42 = a1;
  uint64_t v40 = v13;
  unint64_t v17 = v43;
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v20 = (unint64_t)v14 >> 6;
    if ((*(void *)(v16 + 8 * ((unint64_t)v14 >> 6)) & (1 << v14)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v13) {
      goto LABEL_26;
    }
    uint64_t v49 = v15;
    uint64_t v21 = v46;
    uint64_t v22 = (uint64_t)v17 + *(int *)(v46 + 48);
    uint64_t v23 = *(void *)(a1 + 48);
    uint64_t v24 = *(void *)(a1 + 56);
    uint64_t v25 = *(void *)(v23 + 8 * v14);
    uint64_t v26 = type metadata accessor for StoredPhotoLayout(0);
    sub_259261928(v24 + *(void *)(*(void *)(v26 - 8) + 72) * v14, v22, type metadata accessor for StoredPhotoLayout);
    *unint64_t v17 = v25;
    uint64_t v27 = (uint64_t)v44;
    *uint64_t v44 = v25;
    sub_259261928(v22, v27 + *(int *)(v21 + 48), type metadata accessor for StoredPhotoLayout);
    int64_t v28 = v45;
    sub_25924A404(v27, (uint64_t)v45, &qword_26A37E230);
    sub_25924A3A8((uint64_t)v17, &qword_26A37E230);
    uint64_t v29 = v47(*(void *)v28, &v28[*(int *)(v21 + 48)]);
    sub_25924A3A8((uint64_t)v28, &qword_26A37E230);
    uint64_t v11 = v50;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_25925CD40(0, *(void *)(v11 + 16) + 1, 1);
      uint64_t v11 = v50;
    }
    unint64_t v31 = *(void *)(v11 + 16);
    unint64_t v30 = *(void *)(v11 + 24);
    if (v31 >= v30 >> 1)
    {
      uint64_t result = sub_25925CD40(v30 > 1, v31 + 1, 1);
      uint64_t v11 = v50;
    }
    *(void *)(v11 + 16) = v31 + 1;
    *(void *)(v11 + 8 * v31 + 32) = v29;
    a1 = v42;
    int64_t v18 = 1 << *(unsigned char *)(v42 + 32);
    if (v14 >= v18) {
      goto LABEL_27;
    }
    uint64_t v16 = v41;
    uint64_t v32 = *(void *)(v41 + 8 * v20);
    if ((v32 & (1 << v14)) == 0) {
      goto LABEL_28;
    }
    LODWORD(v13) = v40;
    if (*(_DWORD *)(v42 + 36) != v40) {
      goto LABEL_29;
    }
    unint64_t v33 = v32 & (-2 << (v14 & 0x3F));
    if (v33)
    {
      int64_t v18 = __clz(__rbit64(v33)) | v14 & 0xFFFFFFFFFFFFFFC0;
      int64_t v19 = v39;
    }
    else
    {
      unint64_t v34 = v20 + 1;
      unint64_t v35 = (unint64_t)(v18 + 63) >> 6;
      int64_t v19 = v39;
      if (v20 + 1 < v35)
      {
        unint64_t v36 = *(void *)(v41 + 8 * v34);
        if (v36)
        {
LABEL_22:
          int64_t v18 = __clz(__rbit64(v36)) + (v34 << 6);
        }
        else
        {
          while (v35 - 2 != v20)
          {
            unint64_t v36 = *(void *)(v38 + 8 * v20++);
            if (v36)
            {
              unint64_t v34 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v15 = v49 + 1;
    uint64_t v14 = v18;
    if (v49 + 1 == v19) {
      return v11;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_25925F540(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E2B0);
  uint64_t v43 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF88) - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = (void *)MEMORY[0x263F8EE80];
  BOOL v45 = (void *)MEMORY[0x263F8EE80];
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return (uint64_t)v12;
  }
  uint64_t v36 = v2;
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v9 + 72);
  uint64_t v44 = v15;
  uint64_t v39 = v17 + v15;
  uint64_t v38 = v14 | 7;
  long long v37 = xmmword_2593131D0;
  uint64_t v41 = (char *)&v36 - v10;
  uint64_t v42 = v8;
  uint64_t v40 = v17;
  while (1)
  {
    sub_2592207A0(v16, (uint64_t)v11, &qword_26A37DF88);
    sub_259261928((uint64_t)v11, (uint64_t)v4, type metadata accessor for StoredPhoto);
    unint64_t v19 = sub_25925E444((uint64_t)v4, &qword_26A37E2B0);
    uint64_t v20 = v12[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      break;
    }
    char v23 = v18;
    if (v12[3] < v22)
    {
      sub_2592932FC(v22, 1);
      uint64_t v12 = v45;
      unint64_t v24 = sub_25925E444((uint64_t)v4, &qword_26A37E2B0);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_19;
      }
      unint64_t v19 = v24;
    }
    if (v23)
    {
      sub_25924A3A8((uint64_t)v4, &qword_26A37E2B0);
      uint64_t v12 = v45;
      uint64_t v26 = v45[7];
      sub_25924A404((uint64_t)v11, (uint64_t)v8, &qword_26A37DF88);
      unint64_t v27 = *(void *)(v26 + 8 * v19);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v26 + 8 * v19) = v27;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v27 = sub_259248920(0, *(void *)(v27 + 16) + 1, 1, v27);
        *(void *)(v26 + 8 * v19) = v27;
      }
      unint64_t v30 = *(void *)(v27 + 16);
      unint64_t v29 = *(void *)(v27 + 24);
      if (v30 >= v29 >> 1)
      {
        unint64_t v27 = sub_259248920(v29 > 1, v30 + 1, 1, v27);
        *(void *)(v26 + 8 * v19) = v27;
      }
      *(void *)(v27 + 16) = v30 + 1;
      uint64_t v17 = v40;
      uint64_t v8 = v42;
      sub_25924A404((uint64_t)v42, v27 + v44 + v30 * v40, &qword_26A37DF88);
      uint64_t v11 = v41;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF80);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v37;
      sub_25924A404((uint64_t)v11, v31 + v44, &qword_26A37DF88);
      v12[(v19 >> 6) + 8] |= 1 << v19;
      sub_25924A404((uint64_t)v4, v12[6] + *(void *)(v43 + 72) * v19, &qword_26A37E2B0);
      *(void *)(v12[7] + 8 * v19) = v31;
      uint64_t v32 = v12[2];
      BOOL v33 = __OFADD__(v32, 1);
      uint64_t v34 = v32 + 1;
      if (v33) {
        goto LABEL_18;
      }
      void v12[2] = v34;
    }
    v16 += v17;
    if (!--v13) {
      return (uint64_t)v12;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_25930A830();
  __break(1u);
  return result;
}

unint64_t sub_25925F918()
{
  unint64_t result = qword_26A37E178;
  if (!qword_26A37E178)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A37E170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E178);
  }
  return result;
}

uint64_t sub_25925F974()
{
  uint64_t result = type metadata accessor for StoredPhoto(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_25925FA40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = sub_259309440();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_2593093D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = *(void *)(v9 + 64) + 7;
  uint64_t v13 = *(void *)(a3 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  unint64_t v16 = ((((((((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v15
      + 16;
  unsigned int v17 = v15 | *(_DWORD *)(v6 + 80) & 0xF8 | v10;
  if (v17 > 7
    || ((*(_DWORD *)(v14 + 80) | *(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) != 0
    || (v16 & ~v15) + *(void *)(v14 + 64) > 0x18)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v21 = ~v10;
    uint64_t v32 = v8;
    uint64_t v33 = ~v15;
    uint64_t v34 = v13;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v21, ((unint64_t)a2 + v11) & v21, v32);
    uint64_t v22 = (void *)((v12 + (((unint64_t)a1 + v11) & v21)) & 0xFFFFFFFFFFFFFFF8);
    char v23 = (void *)((v12 + (((unint64_t)a2 + v11) & v21)) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v22 = *v23;
    unint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    char v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v24 = *v25;
    uint64_t v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v27 = (void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v26 = *v27;
    int64_t v28 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
    *int64_t v28 = *v29;
    v28[1] = v29[1];
    unint64_t v30 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30(((unint64_t)a1 + v16) & v33, ((unint64_t)a2 + v16) & v33, v34);
  }
  return a1;
}

uint64_t sub_25925FCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259309440();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(v5 + 56);
  uint64_t v7 = sub_2593093D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))((v6 + v10 + a1) & ~v10, v7);
  uint64_t v11 = *(void *)(v9 + 56) + 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v13 = *(uint64_t (**)(unint64_t))(v12 + 8);
  unint64_t v14 = (a1
       + *(unsigned __int8 *)(v12 + 80)
       + ((((((((v11 + ((v6 + v10) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return v13(v14);
}

uint64_t sub_25925FE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_2593093D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10 + 16;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = (v8 + v12 + a1) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, (v13 + a2) & ~v12, v9);
  uint64_t v15 = *(void *)(v11 + 48) + 7;
  unint64_t v16 = (void *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v17 = (void *)((v15 + ((v13 + a2) & ~v12)) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v16 = *v17;
  char v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *char v18 = *v19;
  uint64_t v20 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  uint64_t v22 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  char v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  uint64_t v24 = *(void *)(a3 + 16);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 16);
  uint64_t v27 = *(unsigned __int8 *)(v25 + 80);
  unint64_t v28 = ((((((((v15 + (v13 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v27
      + 16;
  unint64_t v29 = (v28 + a1) & ~v27;
  unint64_t v30 = (v28 + a2) & ~v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v29, v30, v24);
  return a1;
}

uint64_t sub_25926000C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = sub_2593093D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = (v8 + v12 + a1) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v14, (v13 + a2) & ~v12, v9);
  uint64_t v15 = *(void *)(v11 + 40) + 7;
  unint64_t v16 = (void *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v17 = (void *)((v15 + ((v13 + a2) & ~v12)) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v16 = *v17;
  unint64_t v18 = ((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = *(void *)v19;
  v19 += 15;
  *(void *)unint64_t v18 = v20;
  v18 += 15;
  unint64_t v21 = (v19 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v18 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v19 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v22 = (v18 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFF8);
  *char v23 = *(void *)(v21 & 0xFFFFFFFFFFFFFFF8);
  v23[1] = *(void *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  unint64_t v26 = ((((((((v15 + (v13 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v25
      + 16;
  (*(void (**)(unint64_t, unint64_t))(v24 + 24))((v26 + a1) & ~v25, (v26 + a2) & ~v25);
  return a1;
}

uint64_t sub_2592601D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = sub_2593093D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10 + 32;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = (v8 + v12 + a1) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v14, (v13 + a2) & ~v12, v9);
  uint64_t v15 = *(void *)(v11 + 32) + 7;
  unint64_t v16 = (void *)((v15 + ((v13 + a2) & ~v12)) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v17 = (void *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v17 = *v16;
  unint64_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v19 = *v18;
  uint64_t v20 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v21 = *v20;
  *(_OWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = ((((((((v15 + (v13 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v23
      + 16;
  (*(void (**)(unint64_t, unint64_t))(v22 + 32))((v24 + a1) & ~v23, (v24 + a2) & ~v23);
  return a1;
}

uint64_t sub_259260364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t v9 = sub_2593093D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = (v8 + v12 + a1) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v14, (v13 + a2) & ~v12, v9);
  uint64_t v15 = *(void *)(v11 + 24) + 7;
  unint64_t v16 = (void *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v17 = (void *)((v15 + ((v13 + a2) & ~v12)) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v16 = *v17;
  unint64_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = ((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = *(void *)v19;
  v19 += 15;
  *unint64_t v18 = v20;
  unint64_t v21 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v22 = (v19 & 0xFFFFFFFFFFFFFFF8) + 15;
  *unint64_t v21 = *(void *)(v19 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  uint64_t v23 = (void *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *(void *)(v22 & 0xFFFFFFFFFFFFFFF8);
  v23[1] = *(void *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  unint64_t v26 = ((((((((v15 + (v13 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v25
      + 16;
  (*(void (**)(unint64_t, unint64_t))(v24 + 40))((v26 + a1) & ~v25, (v26 + a2) & ~v25);
  return a1;
}

uint64_t sub_259260510(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_259309440() - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_2593093D0();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v14 = *(_DWORD *)(v13 + 84);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v17 = *(unsigned __int8 *)(v13 + 80);
  if (v14 <= v12) {
    unsigned int v18 = v12;
  }
  else {
    unsigned int v18 = *(_DWORD *)(v13 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = *(void *)(v6 + 64) + v15;
  uint64_t v20 = v16 + 7;
  unint64_t v21 = ((((((((v16 + 7 + (v19 & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v17
      + 16;
  if (a2 <= v18) {
    goto LABEL_31;
  }
  unint64_t v22 = (v21 & ~v17) + *(void *)(v13 + 64);
  char v23 = 8 * v22;
  if (v22 > 3) {
    goto LABEL_13;
  }
  unsigned int v26 = ((a2 - v18 + ~(-1 << v23)) >> v23) + 1;
  if (HIWORD(v26))
  {
    int v24 = *(_DWORD *)((char *)a1 + v22);
    if (v24) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v26 <= 0xFF)
    {
      if (v26 < 2) {
        goto LABEL_31;
      }
LABEL_13:
      int v24 = *((unsigned __int8 *)a1 + v22);
      if (!*((unsigned char *)a1 + v22)) {
        goto LABEL_31;
      }
LABEL_21:
      int v27 = (v24 - 1) << v23;
      if (v22 > 3) {
        int v27 = 0;
      }
      if (v22)
      {
        if (v22 <= 3) {
          int v28 = (v21 & ~v17) + *(_DWORD *)(v13 + 64);
        }
        else {
          int v28 = 4;
        }
        switch(v28)
        {
          case 2:
            int v29 = *a1;
            break;
          case 3:
            int v29 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v29 = *(_DWORD *)a1;
            break;
          default:
            int v29 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v29 = 0;
      }
      return v18 + (v29 | v27) + 1;
    }
    int v24 = *(unsigned __int16 *)((char *)a1 + v22);
    if (*(unsigned __int16 *)((char *)a1 + v22)) {
      goto LABEL_21;
    }
  }
LABEL_31:
  if (v12 < v14)
  {
    unint64_t v30 = (unsigned __int16 *)(((unint64_t)a1 + v21) & ~v17);
    uint64_t v31 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v13 + 48);
    uint64_t v32 = *(unsigned int *)(v13 + 84);
LABEL_35:
    return v31(v30, v32);
  }
  if (v7 == v12)
  {
    uint64_t v31 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v6 + 48);
    unint64_t v30 = a1;
    uint64_t v32 = v7;
    goto LABEL_35;
  }
  unint64_t v33 = ((unint64_t)a1 + v19) & ~v15;
  if (v10 == v12)
  {
    uint64_t v34 = *(uint64_t (**)(unint64_t))(v9 + 48);
    return v34(v33);
  }
  else
  {
    unint64_t v35 = *(void *)((((((v20 + v33) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
    if (v35 >= 0xFFFFFFFF) {
      LODWORD(v35) = -1;
    }
    return (v35 + 1);
  }
}

void sub_259260898(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_259309440() - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = sub_2593093D0();
  uint64_t v11 = *(void *)(v10 - 8);
  unsigned int v12 = *(_DWORD *)(v11 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v16 = *(unsigned int *)(v15 + 84);
  uint64_t v17 = *(void *)(v8 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v15 + 80);
  if (v16 <= v14) {
    unsigned int v20 = v14;
  }
  else {
    unsigned int v20 = *(_DWORD *)(v15 + 84);
  }
  uint64_t v21 = v17 + v18;
  uint64_t v22 = *(void *)(*(void *)(v10 - 8) + 64) + 7;
  size_t v23 = ((((((((v22 + ((v17 + v18) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  size_t v24 = v23 + v19;
  size_t v25 = ((v23 + v19) & ~v19) + *(void *)(v15 + 64);
  if (a3 <= v20)
  {
    int v26 = 0;
  }
  else if (v25 <= 3)
  {
    unsigned int v31 = ((a3 - v20 + ~(-1 << (8 * v25))) >> (8 * v25)) + 1;
    if (HIWORD(v31))
    {
      int v26 = 4;
    }
    else if (v31 >= 0x100)
    {
      int v26 = 2;
    }
    else
    {
      int v26 = v31 > 1;
    }
  }
  else
  {
    int v26 = 1;
  }
  if (v20 < a2)
  {
    unsigned int v27 = ~v20 + a2;
    if (v25 < 4)
    {
      int v28 = (v27 >> (8 * v25)) + 1;
      if (v25)
      {
        int v32 = v27 & ~(-1 << (8 * v25));
        bzero(a1, v25);
        if (v25 == 3)
        {
          *(_WORD *)a1 = v32;
          a1[2] = BYTE2(v32);
        }
        else if (v25 == 2)
        {
          *(_WORD *)a1 = v32;
        }
        else
        {
          *a1 = v32;
        }
      }
    }
    else
    {
      bzero(a1, v25);
      *(_DWORD *)a1 = v27;
      int v28 = 1;
    }
    switch(v26)
    {
      case 1:
        a1[v25] = v28;
        return;
      case 2:
        *(_WORD *)&a1[v25] = v28;
        return;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)&a1[v25] = v28;
        return;
      default:
        return;
    }
  }
  uint64_t v29 = ~v18;
  uint64_t v30 = ~v19;
  switch(v26)
  {
    case 1:
      a1[v25] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v25] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x259260CBCLL);
    case 4:
      *(_DWORD *)&a1[v25] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (!a2) {
        return;
      }
LABEL_30:
      if (v14 < v16)
      {
        unint64_t v33 = (unsigned char *)((unint64_t)&a1[v24] & v30);
        uint64_t v34 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 56);
        uint64_t v35 = a2;
        uint64_t v36 = v16;
LABEL_32:
        v34(v33, v35, v36);
        return;
      }
      if (v14 >= a2)
      {
        if (v9 == v14)
        {
          uint64_t v34 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 56);
          unint64_t v33 = a1;
          uint64_t v35 = a2;
          uint64_t v36 = v9;
          goto LABEL_32;
        }
        unint64_t v38 = (unint64_t)&a1[v21] & v29;
        if (v12 == v14)
        {
          uint64_t v39 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v39(v38, a2);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v40 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v40 = (a2 - 1);
          }
          *(void *)((((((v22 + v38) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) = v40;
        }
      }
      else if (v23)
      {
        int v37 = ~v14 + a2;
        bzero(a1, v23);
        *(_DWORD *)a1 = v37;
      }
      return;
  }
}

void *sub_259260CE4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_259309440();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2593093D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
    uint64_t v13 = a3[9];
    *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v14 = a3[11];
    *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v15 = a3[13];
    *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
    uint64_t v16 = a3[15];
    *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
    uint64_t v17 = a3[17];
    *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
    *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
    uint64_t v18 = a3[19];
    *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
    *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
    uint64_t v19 = a3[21];
    *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
    *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
    uint64_t v20 = a3[23];
    *(void *)((char *)a1 + a3[22]) = *(void *)((char *)a2 + a3[22]);
    uint64_t v21 = (void *)((char *)a1 + v20);
    uint64_t v22 = (void *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_259260EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_2593093D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_259260F74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2593093D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[21];
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[23];
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2592610F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2593093D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  uint64_t v11 = a3[23];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2592612AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2593093D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[21];
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[23];
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  return a1;
}

uint64_t sub_259261420(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2593093D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[21];
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[23];
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2592615A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2592615B8);
}

uint64_t sub_2592615B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_2593093D0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 92) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_2592616DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2592616F0);
}

uint64_t sub_2592616F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_259309440();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_2593093D0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 92) + 8) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_259261804()
{
  uint64_t result = sub_259309440();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2593093D0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_25926190C()
{
  return swift_getWitnessTable();
}

uint64_t sub_259261928(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_259261990()
{
  return swift_release();
}

uint64_t sub_259261998(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_259309440();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2592619DC(uint64_t a1, uint64_t a2)
{
  return sub_25925A114(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_2592619E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoredPhotoLayout(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_259261A48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_259261AB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_2592591E4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_259261AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_259261B38@<X0>(sqlite3_stmt **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_259256F18(a1, *(uint64_t (**)(sqlite3_stmt **))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 16), a2);
}

uint64_t sub_259261B58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for DatabaseBinding(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_2593093D0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v10 = sub_259309300();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v13 = *a2;
        unint64_t v12 = a2[1];
        sub_259261DE0(v13, v12);
        *a1 = v13;
        a1[1] = v12;
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v14 = sub_259309440();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_259261DE0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t destroy for DatabaseBinding(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_2593093D0();
      goto LABEL_11;
    case 3:
      uint64_t v3 = sub_259309300();
      goto LABEL_11;
    case 4:
      return swift_bridgeObjectRelease();
    case 6:
      uint64_t v4 = *a1;
      unint64_t v5 = a1[1];
      return sub_259261F50(v4, v5);
    case 7:
      uint64_t v3 = sub_259309440();
LABEL_11:
      uint64_t v6 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v6(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_259261F50(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t *initializeWithCopy for DatabaseBinding(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_2593093D0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_8;
    case 3u:
      uint64_t v7 = sub_259309300();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_8;
    case 4u:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 6u:
      uint64_t v10 = *a2;
      unint64_t v9 = a2[1];
      sub_259261DE0(v10, v9);
      *a1 = v10;
      a1[1] = v9;
      goto LABEL_8;
    case 7u:
      uint64_t v11 = sub_259309440();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for DatabaseBinding(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_259262368((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_2593093D0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_9;
      case 3u:
        uint64_t v7 = sub_259309300();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_9;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 6u:
        uint64_t v9 = *a2;
        unint64_t v8 = a2[1];
        sub_259261DE0(v9, v8);
        *a1 = v9;
        a1[1] = v8;
        goto LABEL_9;
      case 7u:
        uint64_t v10 = sub_259309440();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_259262368(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DatabaseBinding();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DatabaseBinding()
{
  uint64_t result = qword_26A37E2C0;
  if (!qword_26A37E2C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeWithTake for DatabaseBinding(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 7)
  {
    uint64_t v8 = sub_259309440();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 3)
  {
    uint64_t v9 = sub_259309300();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_2593093D0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for DatabaseBinding(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_259262368((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 7)
    {
      uint64_t v8 = sub_259309440();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 3)
    {
      uint64_t v9 = sub_259309300();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_2593093D0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseBinding(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for DatabaseBinding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_25926273C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_25926274C()
{
  uint64_t result = sub_2593093D0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_259309300();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_259309440();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseConnection.insert(sql:bindings:)(Swift::String sql, Swift::OpaquePointer bindings)
{
  rawValue = bindings._rawValue;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE50);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (void *)((char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v46 - v9;
  MEMORY[0x270FA5388](v8);
  unint64_t v12 = (void *)((char *)v46 - v11);
  uint64_t v53 = *v2;
  uint64_t v13 = sub_259264340();
  if (v3) {
    return;
  }
  uint64_t v14 = v13;
  uint64_t v52 = v10;
  int v15 = rawValue;
  uint64_t v48 = rawValue[2];
  if (!v48) {
    goto LABEL_21;
  }
  v46[1] = 0;
  uint64_t v16 = (char *)(rawValue + 4);
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  char v47 = (char *)(v15 + 4);
  while (1)
  {
    uint64_t v18 = v14;
    uint64_t v19 = *(void *)&v16[8 * v17];
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v49 = v17;
    uint64_t v50 = v19;
    swift_bridgeObjectRetain_n();
    if (v20)
    {
      uint64_t v21 = 0;
      uint64_t v22 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
      uint64_t v23 = v50 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
      uint64_t v24 = *(void *)(v22 + 72);
      while (1)
      {
        uint64_t v25 = (uint64_t)&v52[*(int *)(v4 + 48)];
        sub_259264B9C(v23, v25, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
        uint64_t v26 = (uint64_t)v12 + *(int *)(v4 + 48);
        void *v12 = v21;
        sub_259264478(v25, v26);
        sub_2592644DC((uint64_t)v12, (uint64_t)v7);
        uint64_t v27 = *v7 + 1;
        if (__OFADD__(*v7, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
          return;
        }
        if (v27 < (uint64_t)0xFFFFFFFF80000000) {
          goto LABEL_32;
        }
        if (v27 > 0x7FFFFFFF) {
          goto LABEL_33;
        }
        int v28 = sub_259269B44((uint64_t)v7 + *(int *)(v4 + 48), v27, v18);
        if (v28) {
          break;
        }
        ++v21;
        sub_25924A3A8((uint64_t)v7, &qword_26A37DE50);
        v23 += v24;
        if (v20 == v21) {
          goto LABEL_11;
        }
      }
      unsigned int v31 = v28;
      if (sqlite3_errstr(v28))
      {
        uint64_t v32 = sub_259309C30();
        unint64_t v34 = v33;
      }
      else
      {
        uint64_t v32 = 4271950;
        unint64_t v34 = 0xE300000000000000;
      }
      uint64_t v14 = v18;
      sub_259248190();
      swift_allocError();
      *uint64_t v35 = v31;
      v35[1] = v32;
      v35[2] = v34;
      swift_willThrow();
      sub_25924A3A8((uint64_t)v7, &qword_26A37DE50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
    uint64_t v14 = v18;
    sub_259269764(v18);
    int v29 = sqlite3_step(v18);
    if (v29 != 101)
    {
      unsigned int v36 = v29;
      if (sqlite3_errstr(v29))
      {
        uint64_t v37 = sub_259309C30();
        unint64_t v39 = v38;
      }
      else
      {
        uint64_t v37 = 4271950;
        unint64_t v39 = 0xE300000000000000;
      }
      sub_259248190();
      swift_allocError();
      *uint64_t v44 = v36 | 0x4000000000000000;
      v44[1] = v37;
      v44[2] = v39;
      swift_willThrow();
LABEL_19:
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
    int v30 = sqlite3_reset(v18);
    if (v30) {
      break;
    }
    uint64_t v17 = v49 + 1;
    uint64_t v16 = v47;
    if (v49 + 1 == v48) {
      goto LABEL_20;
    }
  }
  unsigned int v40 = v30;
  if (sqlite3_errstr(v30))
  {
    uint64_t v41 = sub_259309C30();
    unint64_t v43 = v42;
  }
  else
  {
    uint64_t v41 = 4271950;
    unint64_t v43 = 0xE300000000000000;
  }
  sub_259248190();
  swift_allocError();
  *BOOL v45 = v40 | 0x8000000000000000;
  v45[1] = v41;
  v45[2] = v43;
  swift_willThrow();
LABEL_20:
  swift_bridgeObjectRelease();
LABEL_21:
  sub_259269950(v14);
}

uint64_t DatabaseConnection.query<A>(sql:bindings:step:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(sqlite3_stmt **), uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_259264340();
  if (!v6)
  {
    unint64_t v12 = v11;
    a6 = sub_259268C04(a3, a4, a5, v11, a6);
    sub_259269950(v12);
  }
  return a6;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseConnection.delete(sql:bindings:)(Swift::String sql, Swift::OpaquePointer bindings)
{
  uint64_t v4 = sub_259264340();
  if (!v2)
  {
    uint64_t v5 = v4;
    sub_25926906C((uint64_t)bindings._rawValue, v4);
    sub_259269950(v5);
  }
}

uint64_t static DatabaseConnection.open(location:)@<X0>(uint64_t a1@<X0>, sqlite3 **a2@<X8>)
{
  ppDb[1] = *(sqlite3 **)MEMORY[0x263EF8340];
  uint64_t v5 = sub_259309300();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v33 - v10;
  uint64_t v12 = type metadata accessor for DatabaseConnection.Location();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  ppDb[0] = 0;
  sub_259264B9C(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DatabaseConnection.Location);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15) == 1)
  {
    unint64_t v16 = 0xE800000000000000;
    uint64_t v17 = 0x3A79726F6D656D3ALL;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v14, v5);
    sub_2593092A0();
    uint64_t v17 = sub_259309260();
    unint64_t v16 = v18;
    uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    v19(v9, v5);
    v19(v11, v5);
  }
  if (qword_26B2F3BC0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_259309860();
  __swift_project_value_buffer(v20, (uint64_t)qword_26B2F3BA8);
  swift_bridgeObjectRetain_n();
  uint64_t v21 = sub_259309840();
  os_log_type_t v22 = sub_25930A1D0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v34 = v24;
    v33[1] = v2;
    *(_DWORD *)uint64_t v23 = 136315138;
    swift_bridgeObjectRetain();
    v33[2] = sub_25924FC14(v17, v16, &v34);
    sub_25930A2A0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25921A000, v21, v22, "Opening database connection: %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v24, -1, -1);
    MEMORY[0x25A2DBAF0](v23, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v25 = sub_259309BF0();
  swift_bridgeObjectRelease();
  unsigned int v26 = sqlite3_open_v2((const char *)(v25 + 32), ppDb, 6, 0);
  uint64_t result = swift_release();
  if (v26)
  {
    if (sqlite3_errstr(v26))
    {
      uint64_t v28 = sub_259309C30();
      unint64_t v30 = v29;
    }
    else
    {
      unint64_t v30 = 0xE300000000000000;
      uint64_t v28 = 4271950;
    }
    sub_259265894();
    swift_allocError();
    *(void *)uint64_t v31 = v26;
    *(void *)(v31 + 8) = v28;
    *(void *)(v31 + 16) = v30;
    *(unsigned char *)(v31 + 24) = 0;
  }
  else
  {
    if (ppDb[0])
    {
      *a2 = ppDb[0];
      return result;
    }
    sub_259265894();
    swift_allocError();
    *(void *)(v32 + 8) = 0;
    *(void *)(v32 + 16) = 0;
    *(void *)uint64_t v32 = 0;
    *(unsigned char *)(v32 + 24) = 4;
  }
  return swift_willThrow();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseConnection.migrate(bundle:migrations:)(NSBundle bundle, Swift::OpaquePointer migrations)
{
  rawValue = migrations._rawValue;
  Class isa = bundle.super.isa;
  uint64_t v4 = sub_259309BD0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_259309300();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v85 - v16;
  MEMORY[0x270FA5388](v15);
  unint64_t v110 = (char *)&v85 - v18;
  uint64_t v19 = *v2;
  uint64_t v116 = *v2;
  uint64_t v20 = sub_259264340();
  if (!v3)
  {
    uint64_t v21 = v20;
    uint64_t v108 = 0;
    unint64_t v22 = (unint64_t)rawValue;
    v101 = v17;
    uint64_t v97 = v14;
    v100 = v9;
    uint64_t v98 = v6;
    sub_259269764(v20);
    int v23 = sqlite3_step(v21);
    uint64_t v102 = v19;
    if (v23 == 101)
    {
      unint64_t v26 = v22;
      uint64_t v27 = 0;
    }
    else
    {
      unsigned int v24 = v23;
      if (v23 != 100)
      {
        if (sqlite3_errstr(v23))
        {
          uint64_t v28 = sub_259309C30();
          unint64_t v30 = v29;
        }
        else
        {
          unint64_t v30 = 0xE300000000000000;
          uint64_t v28 = 4271950;
        }
        sub_259248190();
        swift_allocError();
        *unint64_t v76 = v24 | 0xA000000000000000;
        v76[1] = v28;
        v76[2] = v30;
        goto LABEL_35;
      }
      if (sqlite3_column_type(v21, 0) == 5)
      {
        sub_2592481E4();
        swift_allocError();
        *(_DWORD *)uint64_t v25 = 0;
        *(unsigned char *)(v25 + 4) = 0;
LABEL_35:
        swift_willThrow();
        sub_259269950(v21);
        return;
      }
      unint64_t v26 = v22;
      uint64_t v27 = sqlite3_column_int(v21, 0);
    }
    sub_259269950(v21);
    uint64_t v117 = v27;
    uint64_t v31 = v108;
    if (qword_26B2F3BC0 != -1) {
      goto LABEL_50;
    }
LABEL_11:
    uint64_t v32 = sub_259309860();
    uint64_t v103 = __swift_project_value_buffer(v32, (uint64_t)qword_26B2F3BA8);
    unint64_t v33 = sub_259309840();
    os_log_type_t v34 = sub_25930A1D0();
    BOOL v35 = os_log_type_enabled(v33, v34);
    uint64_t v96 = v10;
    if (v35)
    {
      unsigned int v36 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unsigned int v36 = 134217984;
      swift_beginAccess();
      uint64_t v116 = v117;
      uint64_t v10 = v96;
      sub_25930A2A0();
      _os_log_impl(&dword_25921A000, v33, v34, "Current version is %ld", v36, 0xCu);
      MEMORY[0x25A2DBAF0](v36, -1, -1);
    }

    uint64_t v37 = v101;
    uint64_t v38 = v11;
    uint64_t v39 = *(void *)(v26 + 16);
    Class v40 = isa;
    if (!v39) {
      return;
    }
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v41 = 0;
    uint64_t v93 = (void (**)(char *, char *, uint64_t))(v38 + 32);
    unint64_t v94 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    uint64_t v92 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    uint64_t v91 = (void (**)(char *, char *, uint64_t))(v38 + 16);
    v105 = (void (**)(char *, uint64_t))(v38 + 8);
    unsigned int v85 = &v114;
    unint64_t v42 = (unsigned __int8 *)(v26 + 48);
    *(void *)&long long v43 = 136315138;
    long long v89 = v43;
    uint64_t v86 = MEMORY[0x263F8EE58] + 8;
    uint64_t v88 = 0xD000000000000027;
    v87 = (void *)0x800000025930DD60;
    uint64_t v90 = v39;
    while (1)
    {
      uint64_t v44 = v41++;
      if (v44 == v117)
      {
        uint64_t v109 = v41;
        uint64_t v45 = *((void *)v42 - 2);
        unint64_t v26 = *((void *)v42 - 1);
        int v99 = *v42;
        swift_bridgeObjectRetain();
        uint64_t v95 = v45;
        uint64_t v46 = (void *)sub_259309B80();
        char v47 = (void *)sub_259309B80();
        id v48 = -[objc_class URLForResource:withExtension:](v40, sel_URLForResource_withExtension_, v46, v47, v85, v86);

        if (!v48)
        {
          uint64_t v50 = (uint64_t)v100;
          (*v94)(v100, 1, 1, v10);
LABEL_37:
          sub_25924A3A8(v50, &qword_26B2F32C8);
          sub_259265894();
          swift_allocError();
          *(void *)uint64_t v77 = v95;
          *(void *)(v77 + 8) = v26;
          *(void *)(v77 + 16) = 0;
          *(unsigned char *)(v77 + 24) = 3;
          swift_bridgeObjectRetain();
          swift_willThrow();
          swift_bridgeObjectRelease();
LABEL_39:
          swift_bridgeObjectRelease();
          return;
        }
        sub_2593092C0();

        uint64_t v49 = *v93;
        uint64_t v50 = (uint64_t)v100;
        (*v93)(v100, v37, v10);
        (*v94)((char *)v50, 0, 1, v10);
        if ((*v92)(v50, 1, v10) == 1) {
          goto LABEL_37;
        }
        uint64_t v108 = v31;
        uint64_t v51 = v110;
        v49(v110, (char *)v50, v10);
        uint64_t v52 = v97;
        (*v91)(v97, v51, v10);
        uint64_t v53 = sub_259309840();
        os_log_type_t v54 = sub_25930A1D0();
        if (os_log_type_enabled(v53, v54))
        {
          uint64_t v55 = v10;
          uint64_t v56 = swift_slowAlloc();
          uint64_t v57 = swift_slowAlloc();
          v115._countAndFlagsBits = v57;
          *(_DWORD *)uint64_t v56 = v89;
          sub_2592502D0();
          uint64_t v58 = sub_25930A730();
          *(void *)(v56 + 4) = sub_25924FC14(v58, v59, &v115._countAndFlagsBits);
          swift_bridgeObjectRelease();
          uint64_t v60 = v55;
          uint64_t v37 = v101;
          uint64_t v104 = *v105;
          v104(v52, v60);
          _os_log_impl(&dword_25921A000, v53, v54, "Running migration: %s", (uint8_t *)v56, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A2DBAF0](v57, -1, -1);
          MEMORY[0x25A2DBAF0](v56, -1, -1);
        }
        else
        {
          uint64_t v104 = *v105;
          v104(v52, v10);
        }

        int64_t v61 = v108;
        sub_259309BC0();
        uint64_t v62 = sub_259309B70();
        if (v61)
        {
          swift_bridgeObjectRelease();
          v104(v110, v96);
          goto LABEL_39;
        }
        v115._countAndFlagsBits = v62;
        v115._object = v63;
        uint64_t v113 = 63;
        unint64_t v114 = 0xE100000000000000;
        uint64_t v111 = v109;
        uint64_t v111 = sub_25930A730();
        uint64_t v112 = v64;
        sub_25921DB48();
        uint64_t v65 = sub_25930A2C0();
        uint64_t v67 = v66;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = v102;
        v115._countAndFlagsBits = v102;
        v68._countAndFlagsBits = v65;
        v68._object = v67;
        DatabaseConnection.execute(sql:)(v68);
        uint64_t v31 = v69;
        if (v69)
        {
          swift_bridgeObjectRelease();
          if (!v99)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            unint64_t v78 = sub_259309840();
            os_log_type_t v79 = sub_25930A1B0();
            if (os_log_type_enabled(v78, v79))
            {
              uint64_t v80 = (uint8_t *)swift_slowAlloc();
              uint64_t v81 = swift_slowAlloc();
              v115._countAndFlagsBits = v81;
              *(_DWORD *)uint64_t v80 = v89;
              swift_bridgeObjectRetain();
              uint64_t v113 = sub_25924FC14(v95, v26, &v115._countAndFlagsBits);
              sub_25930A2A0();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_25921A000, v78, v79, "Error while executing migration: %s.", v80, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x25A2DBAF0](v81, -1, -1);
              MEMORY[0x25A2DBAF0](v80, -1, -1);
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            uint64_t v82 = v96;
            v115._countAndFlagsBits = v102;
            v83._countAndFlagsBits = 0x6B6361626C6C6F72;
            v83._object = (void *)0xE800000000000000;
            DatabaseConnection.execute(sql:)(v83);
            if (v84)
            {
              v104(v110, v82);
            }
            else
            {
              swift_willThrow();
              v104(v110, v82);
            }
            return;
          }
          swift_bridgeObjectRetain();
          unint64_t v70 = sub_259309840();
          os_log_type_t v71 = sub_25930A1B0();
          if (os_log_type_enabled(v70, v71))
          {
            uint64_t v72 = (uint8_t *)swift_slowAlloc();
            uint64_t v73 = swift_slowAlloc();
            v115._countAndFlagsBits = v73;
            *(_DWORD *)uint64_t v72 = v89;
            swift_bridgeObjectRetain();
            uint64_t v113 = sub_25924FC14(v95, v26, &v115._countAndFlagsBits);
            uint64_t v37 = v101;
            sub_25930A2A0();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_25921A000, v70, v71, "Ignoring error while executing migration: %s.", v72, 0xCu);
            swift_arrayDestroy();
            uint64_t v74 = v73;
            uint64_t v11 = v102;
            MEMORY[0x25A2DBAF0](v74, -1, -1);
            MEMORY[0x25A2DBAF0](v72, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          uint64_t v10 = v96;
          uint64_t v113 = v11;
          v115._countAndFlagsBits = 0;
          v115._object = (void *)0xE000000000000000;
          sub_25930A3E0();
          swift_bridgeObjectRelease();
          v115._countAndFlagsBits = v88;
          v115._object = v87;
          uint64_t v41 = v109;
          uint64_t v111 = v109;
          sub_25930A730();
          sub_259309C20();
          swift_bridgeObjectRelease();
          sub_259309C20();
          DatabaseConnection.execute(sql:)(v115);
          if (v75)
          {

            swift_bridgeObjectRelease();
            v104(v110, v10);
            swift_bridgeObjectRelease();
            return;
          }
          v104(v110, v10);

          swift_bridgeObjectRelease();
          if (__OFADD__(v117, 1))
          {
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            swift_once();
            goto LABEL_11;
          }
          ++v117;
          uint64_t v31 = 0;
          Class v40 = isa;
          uint64_t v39 = v90;
        }
        else
        {
          uint64_t v10 = v96;
          v104(v110, v96);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v39 = v90;
          if (__OFADD__(v117, 1)) {
            goto LABEL_49;
          }
          ++v117;
          Class v40 = isa;
          uint64_t v41 = v109;
        }
      }
      v42 += 24;
      if (v39 == v41) {
        goto LABEL_39;
      }
    }
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseConnection.beginTransaction()()
{
  v0._countAndFlagsBits = 0x6E69676562;
  v0._object = (void *)0xE500000000000000;
  DatabaseConnection.execute(sql:)(v0);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseConnection.commitTransaction()()
{
  v0._countAndFlagsBits = 0x74696D6D6F63;
  v0._object = (void *)0xE600000000000000;
  DatabaseConnection.execute(sql:)(v0);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseConnection.rollbackTransaction()()
{
  v0._countAndFlagsBits = 0x6B6361626C6C6F72;
  v0._object = (void *)0xE800000000000000;
  DatabaseConnection.execute(sql:)(v0);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseConnection.execute(sql:)(Swift::String sql)
{
  object = sql._object;
  uint64_t countAndFlagsBits = sql._countAndFlagsBits;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_259309BF0();
  unsigned int v6 = sqlite3_exec(v4, (const char *)(v5 + 32), 0, 0, 0);
  swift_release();
  if (sub_259264C04(0x4C51536775626544, 0xE800000000000000, 0))
  {
    if (qword_26B2F3BC0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_259309860();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B2F3BA8);
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_259309840();
    os_log_type_t v9 = sub_25930A1D0();
    if (!os_log_type_enabled(v8, v9))
    {

      swift_bridgeObjectRelease_n();
      if (!v6) {
        return;
      }
      goto LABEL_7;
    }
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v16 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain();
    sub_25924FC14(countAndFlagsBits, (unint64_t)object, &v16);
    sub_25930A2A0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25921A000, v8, v9, "%s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v11, -1, -1);
    MEMORY[0x25A2DBAF0](v10, -1, -1);
  }
  if (!v6) {
    return;
  }
LABEL_7:
  if (sqlite3_errstr(v6))
  {
    uint64_t v12 = sub_259309C30();
    unint64_t v14 = v13;
  }
  else
  {
    unint64_t v14 = 0xE300000000000000;
    uint64_t v12 = 4271950;
  }
  sub_259265894();
  swift_allocError();
  *(void *)uint64_t v15 = v6;
  *(void *)(v15 + 8) = v12;
  *(void *)(v15 + 16) = v14;
  *(unsigned char *)(v15 + 24) = 1;
  swift_willThrow();
}

sqlite3_stmt *sub_259264340()
{
  v10[1] = *(sqlite3_stmt **)MEMORY[0x263EF8340];
  unint64_t v1 = *v0;
  v10[0] = 0;
  uint64_t v2 = sub_259309BF0();
  unsigned int v3 = sqlite3_prepare_v2(v1, (const char *)(v2 + 32), -1, v10, 0);
  swift_release();
  if (v3)
  {
    if (sqlite3_errstr(v3))
    {
      uint64_t v4 = sub_259309C30();
      unint64_t v6 = v5;
    }
    else
    {
      unint64_t v6 = 0xE300000000000000;
      uint64_t v4 = 4271950;
    }
    sub_259265894();
    swift_allocError();
    *(void *)uint64_t v8 = v3;
    *(void *)(v8 + 8) = v4;
    *(void *)(v8 + 16) = v6;
    char v9 = 2;
  }
  else
  {
    uint64_t result = v10[0];
    if (v10[0]) {
      return result;
    }
    sub_259265894();
    swift_allocError();
    *(void *)(v8 + 8) = 0;
    *(void *)(v8 + 16) = 0;
    *(void *)uint64_t v8 = 1;
    char v9 = 4;
  }
  *(unsigned char *)(v8 + 24) = v9;
  return (sqlite3_stmt *)swift_willThrow();
}

uint64_t sub_259264478(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DatabaseBinding();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2592644DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *DatabaseConnection.insert<A>(sql:bindings:step:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(sqlite3_stmt **), uint64_t a5, uint64_t a6)
{
  unint64_t v26 = (void *)*v6;
  uint64_t v12 = &v26;
  unint64_t v13 = sub_259264340();
  if (!v7)
  {
    unint64_t v14 = v13;
    uint64_t v15 = sub_259309A60();
    unint64_t v26 = (void *)v15;
    uint64_t v16 = *(void *)(a3 + 16);
    if (v16)
    {
      uint64_t v25 = a4;
      swift_bridgeObjectRetain();
      uint64_t v17 = 0;
      while (1)
      {
        uint64_t v18 = swift_bridgeObjectRetain();
        sub_259268C04(v18, v25, a5, v14, a6);
        swift_bridgeObjectRelease();
        sub_259309E70();
        swift_getWitnessTable();
        sub_259309E30();
        int v19 = sqlite3_reset(v14);
        if (v19) {
          break;
        }
        if (v16 == ++v17)
        {
          swift_bridgeObjectRelease();
          uint64_t v12 = v26;
          goto LABEL_8;
        }
      }
      unsigned int v20 = v19;
      if (sqlite3_errstr(v19))
      {
        uint64_t v21 = sub_259309C30();
        uint64_t v12 = v22;
      }
      else
      {
        uint64_t v12 = (void *)0xE300000000000000;
        uint64_t v21 = 4271950;
      }
      sub_259248190();
      swift_allocError();
      *int v23 = v20 | 0x8000000000000000;
      v23[1] = v21;
      v23[2] = (unint64_t)v12;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_259269950(v14);
    }
    else
    {
      uint64_t v12 = (void *)v15;
LABEL_8:
      sub_259269950(v14);
    }
  }
  return v12;
}

void DatabaseConnection.queryUnique<A>(sql:bindings:step:)(uint64_t a1@<X2>, uint64_t (*a2)(sqlite3_stmt **)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_259264340();
  if (!v5)
  {
    uint64_t v12 = v11;
    sub_25926936C(a1, a2, a3, v11, a4, a5);
    sub_259269950(v12);
  }
}

uint64_t DatabaseConnection.Location.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_259309300();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DatabaseConnection.Location();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259264B9C(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DatabaseConnection.Location);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1) {
    return 0x726F6D654D2D6E49;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  sub_2592502D0();
  uint64_t v10 = sub_25930A730();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

uint64_t sub_259264988()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_259309300();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259264B9C(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DatabaseConnection.Location);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1) {
    return 0x726F6D654D2D6E49;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
  sub_2592502D0();
  uint64_t v10 = sub_25930A730();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v10;
}

uint64_t type metadata accessor for DatabaseConnection.Location()
{
  uint64_t result = qword_26B2F3290;
  if (!qword_26B2F3290) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_259264B9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_259264C04(uint64_t a1, unint64_t a2, char a3)
{
  if (os_variant_has_internal_diagnostics())
  {
    if (qword_26A37C7A0 != -1) {
      swift_once();
    }
    char v6 = _sSb10PhotosFaceE4read4from3keySbSgSo14NSUserDefaultsC_SStFZ_0((void *)qword_26A37F240);
    if (v6 != 2 && (v6 & 1) != (a3 & 1))
    {
      char v8 = v6;
      if (qword_26B2F3B60 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_259309860();
      __swift_project_value_buffer(v9, (uint64_t)qword_26B2F32A0);
      swift_bridgeObjectRetain_n();
      uint64_t v10 = sub_259309840();
      os_log_type_t v11 = sub_25930A1D0();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        uint64_t v17 = v13;
        *(_DWORD *)uint64_t v12 = 136315394;
        swift_bridgeObjectRetain();
        sub_25924FC14(a1, a2, &v17);
        sub_25930A2A0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v12 + 12) = 2080;
        uint64_t v14 = sub_259309BE0();
        sub_25924FC14(v14, v15, &v17);
        sub_25930A2A0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25921A000, v10, v11, "Non default value set for %s: %s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25A2DBAF0](v13, -1, -1);
        MEMORY[0x25A2DBAF0](v12, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a3 = v8;
    }
  }
  return a3 & 1;
}

uint64_t sub_259264E74(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (os_variant_has_internal_diagnostics())
  {
    if (qword_26A37C7A0 != -1) {
      swift_once();
    }
    uint64_t v6 = static Duration.read(from:key:)((void *)qword_26A37F240);
    if ((v7 & 1) == 0)
    {
      uint64_t v8 = v6;
      if ((sub_25930A990() & 1) == 0)
      {
        if (qword_26B2F3B60 != -1) {
          swift_once();
        }
        uint64_t v9 = sub_259309860();
        __swift_project_value_buffer(v9, (uint64_t)qword_26B2F32A0);
        swift_bridgeObjectRetain_n();
        uint64_t v10 = sub_259309840();
        os_log_type_t v11 = sub_25930A1D0();
        if (os_log_type_enabled(v10, v11))
        {
          uint64_t v12 = swift_slowAlloc();
          uint64_t v13 = swift_slowAlloc();
          uint64_t v17 = v13;
          *(_DWORD *)uint64_t v12 = 136315394;
          swift_bridgeObjectRetain();
          sub_25924FC14(a1, a2, &v17);
          sub_25930A2A0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v12 + 12) = 2080;
          uint64_t v14 = sub_259309BE0();
          sub_25924FC14(v14, v15, &v17);
          sub_25930A2A0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25921A000, v10, v11, "Non default value set for %s: %s", (uint8_t *)v12, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x25A2DBAF0](v13, -1, -1);
          MEMORY[0x25A2DBAF0](v12, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        return v8;
      }
    }
  }
  return a3;
}

uint64_t sub_2592650F0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (os_variant_has_internal_diagnostics())
  {
    if (qword_26A37C7A0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_2592CF510((void *)qword_26A37F240);
    if ((v7 & 1) == 0)
    {
      uint64_t v8 = v6;
      if (v6 != a3)
      {
        if (qword_26B2F3B60 != -1) {
          swift_once();
        }
        uint64_t v9 = sub_259309860();
        __swift_project_value_buffer(v9, (uint64_t)qword_26B2F32A0);
        swift_bridgeObjectRetain_n();
        uint64_t v10 = sub_259309840();
        os_log_type_t v11 = sub_25930A1D0();
        if (os_log_type_enabled(v10, v11))
        {
          uint64_t v12 = swift_slowAlloc();
          uint64_t v13 = swift_slowAlloc();
          uint64_t v17 = v13;
          *(_DWORD *)uint64_t v12 = 136315394;
          swift_bridgeObjectRetain();
          sub_25924FC14(a1, a2, &v17);
          sub_25930A2A0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v12 + 12) = 2080;
          uint64_t v14 = sub_259309BE0();
          sub_25924FC14(v14, v15, &v17);
          sub_25930A2A0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_25921A000, v10, v11, "Non default value set for %s: %s", (uint8_t *)v12, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x25A2DBAF0](v13, -1, -1);
          MEMORY[0x25A2DBAF0](v12, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        return v8;
      }
    }
  }
  return a3;
}

uint64_t sub_25926534C(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  if (os_variant_has_internal_diagnostics())
  {
    if (qword_26A37C7A0 != -1) {
      swift_once();
    }
    double v8 = COERCE_DOUBLE(sub_2592CF6CC((void *)qword_26A37F240, a1, a2));
    double v9 = v8;
    if (v10)
    {
      if (a4) {
        return a3;
      }
    }
    else if ((a4 & 1) == 0 && v8 == *(double *)&a3)
    {
      return a3;
    }
    if (qword_26B2F3B60 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_259309860();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B2F32A0);
    swift_bridgeObjectRetain_n();
    uint64_t v12 = sub_259309840();
    os_log_type_t v13 = sub_25930A1D0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = v15;
      *(_DWORD *)uint64_t v14 = 136315394;
      swift_bridgeObjectRetain();
      sub_25924FC14(a1, a2, &v19);
      sub_25930A2A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2080;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E2E0);
      uint64_t v16 = sub_259309BE0();
      sub_25924FC14(v16, v17, &v19);
      sub_25930A2A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25921A000, v12, v13, "Non default value set for %s: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v15, -1, -1);
      MEMORY[0x25A2DBAF0](v14, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    *(double *)&a3 = v9;
  }
  return a3;
}

uint64_t sub_2592655F4(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  if (os_variant_has_internal_diagnostics())
  {
    if (qword_26A37C7A0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_2592CF510((void *)qword_26A37F240);
    uint64_t v9 = v8;
    if (v10)
    {
      if (a4) {
        return a3;
      }
    }
    else if ((a4 & 1) == 0 && v8 == a3)
    {
      return a3;
    }
    if (qword_26B2F3B60 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_259309860();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B2F32A0);
    swift_bridgeObjectRetain_n();
    uint64_t v12 = sub_259309840();
    os_log_type_t v13 = sub_25930A1D0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = v15;
      *(_DWORD *)uint64_t v14 = 136315394;
      swift_bridgeObjectRetain();
      sub_25924FC14(a1, a2, &v19);
      sub_25930A2A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v14 + 12) = 2080;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E2D8);
      uint64_t v16 = sub_259309BE0();
      sub_25924FC14(v16, v17, &v19);
      sub_25930A2A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25921A000, v12, v13, "Non default value set for %s: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v15, -1, -1);
      MEMORY[0x25A2DBAF0](v14, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return v9;
  }
  return a3;
}

unint64_t sub_259265894()
{
  unint64_t result = qword_26A37E2D0;
  if (!qword_26A37E2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E2D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DatabaseConnection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseConnection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)unint64_t result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseConnection()
{
  return &type metadata for DatabaseConnection;
}

uint64_t *initializeBufferWithCopyOfBuffer for DatabaseConnection.Location(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_259309300();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for DatabaseConnection.Location(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_259309300();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *initializeWithCopy for DatabaseConnection.Location(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_259309300();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for DatabaseConnection.Location(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_259309300();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_25924A3A8((uint64_t)a1, &qword_26B2F32B8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_259309300();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for DatabaseConnection.Location(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_259309300();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for DatabaseConnection.Location(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_259309300();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_25924A3A8((uint64_t)a1, &qword_26B2F32B8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_259309300();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseConnection.Location(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259266164);
}

uint64_t sub_259266164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DatabaseConnection.Location(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2592661E8);
}

uint64_t sub_2592661E8(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_25926626C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_2592662D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t sub_25926634C()
{
  uint64_t result = sub_259309300();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t destroy for DatabaseConnection.Migration()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s10PhotosFace18DatabaseConnectionV9MigrationVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DatabaseConnection.Migration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DatabaseConnection.Migration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseConnection.Migration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseConnection.Migration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseConnection.Migration()
{
  return &type metadata for DatabaseConnection.Migration;
}

uint64_t sub_25926654C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 < 4u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for DatabaseConnection.Failure(uint64_t a1)
{
  return sub_259266588(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_259266588(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 < 4u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DatabaseConnection.Failure(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_25926654C(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DatabaseConnection.Failure(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_25926654C(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_259266588(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DatabaseConnection.Failure(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_259266588(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseConnection.Failure(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseConnection.Failure(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259266774(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 3u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_25926678C(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 4;
  if (a2 >= 4)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 4;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DatabaseConnection.Failure()
{
  return &type metadata for DatabaseConnection.Failure;
}

uint64_t destroy for DatabaseError()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s10PhotosFace13DatabaseErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DatabaseError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DatabaseError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatabaseError()
{
  return &type metadata for DatabaseError;
}

uint64_t DatabaseRow.readUUID(column:)(int iCol)
{
  uint64_t v3 = *v1;
  if (sqlite3_column_type(*v1, iCol) == 5 || (int v4 = sqlite3_column_blob(v3, iCol)) == 0)
  {
    sub_2592481E4();
    swift_allocError();
    *(_DWORD *)uint64_t v10 = iCol;
    *(unsigned char *)(v10 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    uint64_t v5 = v4;
    int v6 = sqlite3_column_bytes(v3, iCol);
    uint64_t v7 = sub_259267384(v5, v6);
    return UUID.init(serialized:version:)(v7, v8);
  }
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseRow.readString(column:)(Swift::Int32 column)
{
  uint64_t v3 = *v1;
  if (sqlite3_column_type(v3, column) == 5 || !sqlite3_column_text(v3, column))
  {
    sub_2592481E4();
    swift_allocError();
    *(_DWORD *)uint64_t v6 = column;
    *(unsigned char *)(v6 + 4) = 0;
    uint64_t v4 = swift_willThrow();
  }
  else
  {
    uint64_t v4 = sub_259309C40();
  }
  result._object = v5;
  result._uint64_t countAndFlagsBits = v4;
  return result;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseRow.readInt(column:)(Swift::Int32 column)
{
  uint64_t v3 = *v1;
  if (sqlite3_column_type(*v1, column) != 5) {
    return sqlite3_column_int(v3, column);
  }
  sub_2592481E4();
  swift_allocError();
  *(_DWORD *)uint64_t v4 = column;
  *(unsigned char *)(v4 + 4) = 0;
  return swift_willThrow();
}

Swift::String_optional __swiftcall DatabaseRow.readNullableString(column:)(Swift::Int32 column)
{
  uint64_t v3 = *v1;
  if (sqlite3_column_type(v3, column) == 5)
  {
    uint64_t v4 = 0;
LABEL_5:
    uint64_t v5 = 0;
    goto LABEL_6;
  }
  uint64_t v4 = (uint64_t)sqlite3_column_text(v3, column);
  if (!v4) {
    goto LABEL_5;
  }
  uint64_t v4 = sub_259309C40();
LABEL_6:
  result.value._object = v5;
  result.value._uint64_t countAndFlagsBits = v4;
  return result;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseRow.readBool(column:)(Swift::Int32 column)
{
  uint64_t v3 = *v1;
  if (sqlite3_column_type(*v1, column) == 5)
  {
    sub_2592481E4();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = column;
    *(unsigned char *)(v4 + 4) = 0;
    swift_willThrow();
  }
  else
  {
    return sqlite3_column_int(v3, column) == 1;
  }
  return v5;
}

uint64_t DatabaseRow.readDate(column:)(int iCol)
{
  uint64_t v3 = *v1;
  if (sqlite3_column_type(*v1, iCol) == 5)
  {
    sub_2592481E4();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = iCol;
    *(unsigned char *)(v4 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    sqlite3_column_double(v3, iCol);
    return sub_259309390();
  }
}

Swift::Double __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseRow.readDouble(column:)(Swift::Int32 column)
{
  uint64_t v3 = *v1;
  if (sqlite3_column_type(v3, column) != 5) {
    return sqlite3_column_double(v3, column);
  }
  sub_2592481E4();
  swift_allocError();
  *(_DWORD *)uint64_t v4 = column;
  *(unsigned char *)(v4 + 4) = 0;
  swift_willThrow();
  return result;
}

Swift::Int_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseRow.readNullableInt(column:)(Swift::Int32 column)
{
  uint64_t v3 = *v1;
  int v4 = sqlite3_column_type(*v1, column);
  if (v4 == 5) {
    Swift::Int v5 = 0;
  }
  else {
    Swift::Int v5 = sqlite3_column_int(v3, column);
  }
  Swift::Bool v6 = v4 == 5;
  result.value = v5;
  result.is_nil = v6;
  return result;
}

Swift::Double_optional __swiftcall DatabaseRow.readNullableDouble(column:)(Swift::Int32 column)
{
  uint64_t v3 = *v1;
  if (sqlite3_column_type(*v1, column) == 5)
  {
    Swift::Bool v5 = 0;
  }
  else
  {
    double v4 = sqlite3_column_double(v3, column);
    Swift::Bool v5 = LOBYTE(v4);
  }
  result.value = v4;
  result.is_nil = v5;
  return result;
}

uint64_t DatabaseRow.readData(column:)(int iCol)
{
  uint64_t v3 = *v1;
  if (sqlite3_column_type(v3, iCol) == 5 || (double v4 = sqlite3_column_blob(v3, iCol)) == 0)
  {
    sub_2592481E4();
    swift_allocError();
    *(_DWORD *)uint64_t v8 = iCol;
    *(unsigned char *)(v8 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    Swift::Bool v5 = v4;
    int v6 = sqlite3_column_bytes(v3, iCol);
    return sub_259267384(v5, v6);
  }
}

uint64_t DatabaseRow.readNullableDate(column:)@<X0>(int iCol@<W0>, uint64_t a2@<X8>)
{
  Swift::Bool v5 = *v2;
  if (sqlite3_column_type(*v2, iCol) == 5)
  {
    uint64_t v6 = sub_2593093D0();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a2;
    uint64_t v10 = 1;
  }
  else
  {
    sqlite3_column_double(v5, iCol);
    sub_259309390();
    uint64_t v11 = sub_2593093D0();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a2;
    uint64_t v10 = 0;
  }
  return v7(v9, v10, 1, v8);
}

Swift::Bool_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DatabaseRow.readNullableBool(column:)(Swift::Int32 column)
{
  uint64_t v3 = *v1;
  if (sqlite3_column_type(*v1, column) == 5) {
    return (Swift::Bool_optional)2;
  }
  else {
    return (Swift::Bool_optional)(sqlite3_column_int(v3, column) == 1);
  }
}

uint64_t DatabaseRow.readLink(column:)@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  if (sqlite3_column_type(*v2, a1) == 5 || !sqlite3_column_text(v8, a1))
  {
    sub_2592481E4();
    swift_allocError();
    *(_DWORD *)uint64_t v12 = a1;
    *(unsigned char *)(v12 + 4) = 0;
    return swift_willThrow();
  }
  sub_259309C40();
  sub_2593092D0();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_259309300();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_259267438((uint64_t)v7);
    sub_2592481E4();
    swift_allocError();
    *(_DWORD *)uint64_t v11 = a1;
    *(unsigned char *)(v11 + 4) = 1;
    return swift_willThrow();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v9);
}

uint64_t DatabaseRow.readNullableLink(column:)@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  if (sqlite3_column_type(*v2, a1) == 5 || !sqlite3_column_text(v8, a1))
  {
    uint64_t v13 = sub_259309300();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
  else
  {
    sub_259309C40();
    sub_2593092D0();
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_259309300();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
    {
      sub_259267438((uint64_t)v7);
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v11 = a1;
      *(unsigned char *)(v11 + 4) = 1;
      return swift_willThrow();
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v9);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
    }
  }
}

uint64_t sub_259267384(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_2592C71CC(__src, &__src[a2]);
  }
  sub_259309220();
  swift_allocObject();
  sub_2593091D0();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_259309330();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_259267438(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for DatabaseRow()
{
  return &type metadata for DatabaseRow;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DatabaseRow.Failure(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseRow.Failure(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_259267548(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 4);
}

uint64_t sub_259267550(uint64_t result, char a2)
{
  *(unsigned char *)(result + 4) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DatabaseRow.Failure()
{
  return &type metadata for DatabaseRow.Failure;
}

unint64_t sub_259267570(unint64_t result)
{
  if ((result >> 61) <= 5) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t destroy for DatabaseStatement.Failure(unint64_t *a1)
{
  return sub_259267598(*a1);
}

unint64_t sub_259267598(unint64_t result)
{
  if ((result >> 61) <= 5) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *_s10PhotosFace17DatabaseStatementV7FailureOwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_259267570(*a2);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

unint64_t *assignWithCopy for DatabaseStatement.Failure(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_259267570(*a2);
  unint64_t v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_259267598(v6);
  return a1;
}

unint64_t *assignWithTake for DatabaseStatement.Failure(unint64_t *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_259267598(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DatabaseStatement.Failure(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  HIDWORD(v3) = *(_DWORD *)(a1 + 4);
  LODWORD(v3) = HIDWORD(v3);
  unsigned int v2 = v3 >> 29;
  if (v2 > 0x80000000) {
    int v4 = ~v2;
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DatabaseStatement.Failure(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      HIDWORD(v3) = -a2;
      LODWORD(v3) = -a2;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)uint64_t result = (unint64_t)(v3 >> 3) << 32;
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_259267734(void *a1)
{
  return *a1 >> 61;
}

void *sub_259267740(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_259267750(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4) = a2 << 29;
  return result;
}

ValueMetadata *type metadata accessor for DatabaseStatement.Failure()
{
  return &type metadata for DatabaseStatement.Failure;
}

uint64_t sub_25926776C@<X0>(sqlite3_stmt *a1@<X0>, uint64_t (*a2)(sqlite3_stmt **)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v63 = a3;
  uint64_t v64 = a2;
  uint64_t v65 = a4;
  uint64_t v6 = sub_2593093D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_259309440();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v66 = a1;
  uint64_t result = DatabaseRow.readUUID(column:)(0);
  if (!v4)
  {
    unint64_t v59 = v9;
    uint64_t v60 = v13;
    uint64_t v57 = v7;
    uint64_t v58 = v6;
    uint64_t v61 = v10;
    uint64_t v62 = v11;
    if (sqlite3_column_type(a1, 1) == 5)
    {
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v15 = 1;
      *(unsigned char *)(v15 + 4) = 0;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v60, v61);
    }
    uint64_t v16 = a1;
    sqlite3_column_double(a1, 1);
    unint64_t v17 = v59;
    sub_259309390();
    int v18 = sqlite3_column_type(a1, 2);
    uint64_t v19 = v61;
    uint64_t v20 = v62;
    uint64_t v21 = v60;
    if (v18 == 5)
    {
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v22 = 2;
      *(unsigned char *)(v22 + 4) = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v17, v58);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v21, v19);
    }
    double v23 = sqlite3_column_double(v16, 2);
    int v24 = 3;
    int v25 = sqlite3_column_type(v16, 3);
    uint64_t v26 = v58;
    if (v25 == 5) {
      goto LABEL_18;
    }
    int v27 = sqlite3_column_int(v16, 3);
    int v24 = 4;
    if (sqlite3_column_type(v16, 4) == 5) {
      goto LABEL_18;
    }
    *(void *)&double v56 = sqlite3_column_int(v16, 4);
    int v24 = 5;
    if (sqlite3_column_type(v16, 5) == 5) {
      goto LABEL_18;
    }
    LODWORD(v55) = sqlite3_column_int(v16, 5);
    int v24 = 6;
    if (sqlite3_column_type(v16, 6) == 5) {
      goto LABEL_18;
    }
    double v28 = sqlite3_column_double(v16, 6);
    int v24 = 7;
    if (sqlite3_column_type(v16, 7) == 5) {
      goto LABEL_18;
    }
    double v29 = sqlite3_column_double(v16, 7);
    int v24 = 8;
    if (sqlite3_column_type(v16, 8) == 5) {
      goto LABEL_18;
    }
    double v30 = sqlite3_column_double(v16, 8);
    int v24 = 9;
    if (sqlite3_column_type(v16, 9) == 5) {
      goto LABEL_18;
    }
    double v31 = sqlite3_column_double(v16, 9);
    int v24 = 10;
    if (sqlite3_column_type(v16, 10) == 5
      || (v54 = sqlite3_column_int(v16, 10), int v24 = 11, sqlite3_column_type(v16, 11) == 5)
      || (v32 = sqlite3_column_double(v16, 11), int v24 = 12, sqlite3_column_type(v16, 12) == 5)
      || (v33 = sqlite3_column_double(v16, 12), int v24 = 13, sqlite3_column_type(v16, 13) == 5))
    {
LABEL_18:
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v34 = v24;
      *(unsigned char *)(v34 + 4) = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v17, v26);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v21, v19);
    }
    double v35 = sqlite3_column_double(v16, 13);
    int v36 = 14;
    uint64_t v37 = v16;
    if (sqlite3_column_type(v16, 14) == 5) {
      goto LABEL_26;
    }
    double v53 = sqlite3_column_double(v16, 14);
    int v36 = 15;
    if (sqlite3_column_type(v16, 15) == 5
      || (v52 = sqlite3_column_double(v16, 15), int v36 = 16, sqlite3_column_type(v16, 16) == 5)
      || (v51 = sqlite3_column_double(v16, 16), int v36 = 17, sqlite3_column_type(v16, 17) == 5)
      || (v50 = sqlite3_column_double(v16, 17), int v36 = 18, sqlite3_column_type(v16, 18) == 5))
    {
LABEL_26:
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v38 = v36;
      *(unsigned char *)(v38 + 4) = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v58);
      return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v60, v61);
    }
    uint64_t v39 = v27;
    uint64_t v40 = SLODWORD(v56);
    double v56 = sqlite3_column_double(v16, 18);
    if (sqlite3_column_type(v16, 19) == 5 || !sqlite3_column_text(v16, 19))
    {
      uint64_t v41 = 0;
      uint64_t v43 = 0;
    }
    else
    {
      uint64_t v41 = sub_259309C40();
      uint64_t v43 = v42;
    }
    int v54 = v54 == 1;
    BOOL v44 = v55 == 1;
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFD0);
    uint64_t v46 = v65;
    uint64_t v55 = v65 + *(int *)(v45 + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v65, v60, v61);
    char v47 = (int *)type metadata accessor for StoredLayoutView();
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v46 + v47[5], v59, v58);
    *(double *)(v46 + v47[6]) = v23;
    *(void *)(v46 + v47[7]) = v39;
    *(void *)(v46 + v47[8]) = v40;
    *(unsigned char *)(v46 + v47[9]) = v44;
    *(double *)(v46 + v47[10]) = v28;
    *(double *)(v46 + v47[11]) = v29;
    *(double *)(v46 + v47[12]) = v30;
    *(double *)(v46 + v47[13]) = v31;
    *(unsigned char *)(v46 + v47[14]) = v54;
    *(double *)(v46 + v47[15]) = v32;
    *(double *)(v46 + v47[16]) = v33;
    *(double *)(v46 + v47[17]) = v35;
    *(double *)(v46 + v47[18]) = v53;
    *(double *)(v46 + v47[19]) = v52;
    *(double *)(v46 + v47[20]) = v51;
    *(double *)(v46 + v47[21]) = v50;
    *(double *)(v46 + v47[22]) = v56;
    id v48 = (uint64_t *)(v46 + v47[23]);
    *id v48 = v41;
    v48[1] = v43;
    BOOL v66 = v37;
    return v64(&v66);
  }
  return result;
}

uint64_t sub_259267F0C@<X0>(sqlite3_stmt *a1@<X0>, uint64_t (*a2)(sqlite3_stmt **)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v62 = a2;
  uint64_t v63 = a4;
  uint64_t v6 = sub_2593093D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_259309440();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = a1;
  uint64_t result = DatabaseRow.readUUID(column:)(0);
  if (!v4)
  {
    uint64_t v57 = v9;
    uint64_t v58 = v13;
    uint64_t v55 = v7;
    uint64_t v56 = v6;
    uint64_t v59 = v10;
    uint64_t v60 = v11;
    if (sqlite3_column_type(a1, 1) == 5)
    {
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v15 = 1;
      *(unsigned char *)(v15 + 4) = 0;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v58, v59);
    }
    uint64_t v16 = a1;
    sqlite3_column_double(a1, 1);
    unint64_t v17 = v57;
    sub_259309390();
    int v18 = sqlite3_column_type(a1, 2);
    uint64_t v19 = v59;
    uint64_t v20 = v60;
    uint64_t v21 = v58;
    if (v18 == 5)
    {
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v22 = 2;
      *(unsigned char *)(v22 + 4) = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v17, v56);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v21, v19);
    }
    double v23 = sqlite3_column_double(v16, 2);
    int v24 = 3;
    int v25 = sqlite3_column_type(v16, 3);
    uint64_t v26 = v56;
    if (v25 == 5) {
      goto LABEL_18;
    }
    int v27 = sqlite3_column_int(v16, 3);
    int v24 = 4;
    if (sqlite3_column_type(v16, 4) == 5) {
      goto LABEL_18;
    }
    *(void *)&double v54 = sqlite3_column_int(v16, 4);
    int v24 = 5;
    if (sqlite3_column_type(v16, 5) == 5) {
      goto LABEL_18;
    }
    int v53 = sqlite3_column_int(v16, 5);
    int v24 = 6;
    if (sqlite3_column_type(v16, 6) == 5) {
      goto LABEL_18;
    }
    double v28 = sqlite3_column_double(v16, 6);
    int v24 = 7;
    if (sqlite3_column_type(v16, 7) == 5) {
      goto LABEL_18;
    }
    double v29 = sqlite3_column_double(v16, 7);
    int v24 = 8;
    if (sqlite3_column_type(v16, 8) == 5) {
      goto LABEL_18;
    }
    double v30 = sqlite3_column_double(v16, 8);
    int v24 = 9;
    if (sqlite3_column_type(v16, 9) == 5) {
      goto LABEL_18;
    }
    double v31 = sqlite3_column_double(v16, 9);
    int v24 = 10;
    if (sqlite3_column_type(v16, 10) == 5
      || (v52 = sqlite3_column_int(v16, 10), int v24 = 11, sqlite3_column_type(v16, 11) == 5)
      || (v32 = sqlite3_column_double(v16, 11), int v24 = 12, sqlite3_column_type(v16, 12) == 5)
      || (v33 = sqlite3_column_double(v16, 12), int v24 = 13, sqlite3_column_type(v16, 13) == 5))
    {
LABEL_18:
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v34 = v24;
      *(unsigned char *)(v34 + 4) = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v17, v26);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v21, v19);
    }
    double v35 = sqlite3_column_double(v16, 13);
    int v36 = 14;
    uint64_t v37 = v16;
    if (sqlite3_column_type(v16, 14) == 5) {
      goto LABEL_26;
    }
    double v51 = sqlite3_column_double(v16, 14);
    int v36 = 15;
    if (sqlite3_column_type(v16, 15) == 5
      || (v50 = sqlite3_column_double(v16, 15), int v36 = 16, sqlite3_column_type(v16, 16) == 5)
      || (v49 = sqlite3_column_double(v16, 16), int v36 = 17, sqlite3_column_type(v16, 17) == 5)
      || (v48 = sqlite3_column_double(v16, 17), int v36 = 18, sqlite3_column_type(v16, 18) == 5))
    {
LABEL_26:
      sub_2592481E4();
      swift_allocError();
      *(_DWORD *)uint64_t v38 = v36;
      *(unsigned char *)(v38 + 4) = 0;
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v56);
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v58, v59);
    }
    uint64_t v39 = v27;
    uint64_t v40 = SLODWORD(v54);
    double v54 = sqlite3_column_double(v16, 18);
    if (sqlite3_column_type(v16, 19) == 5 || !sqlite3_column_text(v16, 19))
    {
      uint64_t v41 = 0;
      uint64_t v43 = 0;
    }
    else
    {
      uint64_t v41 = sub_259309C40();
      uint64_t v43 = v42;
    }
    int v52 = v52 == 1;
    BOOL v44 = v53 == 1;
    uint64_t v45 = v63;
    (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v63, v58, v59);
    uint64_t v46 = (int *)type metadata accessor for StoredLayoutView();
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v45 + v46[5], v57, v56);
    *(double *)(v45 + v46[6]) = v23;
    *(void *)(v45 + v46[7]) = v39;
    *(void *)(v45 + v46[8]) = v40;
    *(unsigned char *)(v45 + v46[9]) = v44;
    *(double *)(v45 + v46[10]) = v28;
    *(double *)(v45 + v46[11]) = v29;
    *(double *)(v45 + v46[12]) = v30;
    *(double *)(v45 + v46[13]) = v31;
    *(unsigned char *)(v45 + v46[14]) = v52;
    *(double *)(v45 + v46[15]) = v32;
    *(double *)(v45 + v46[16]) = v33;
    *(double *)(v45 + v46[17]) = v35;
    *(double *)(v45 + v46[18]) = v51;
    *(double *)(v45 + v46[19]) = v50;
    *(double *)(v45 + v46[20]) = v49;
    *(double *)(v45 + v46[21]) = v48;
    *(double *)(v45 + v46[22]) = v54;
    char v47 = (uint64_t *)(v45 + v46[23]);
    uint64_t *v47 = v41;
    v47[1] = v43;
    uint64_t v64 = v37;
    return v62(&v64);
  }
  return result;
}

uint64_t sub_259268688(uint64_t a1, sqlite3_stmt *a2, uint64_t a3, uint64_t a4)
{
  return sub_259268718(a1, a2, a3, a4, &qword_26A37DFD0, (void (*)(sqlite3_stmt *, uint64_t, uint64_t))sub_25926776C, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_2592488D8);
}

uint64_t sub_2592686D0(uint64_t a1, sqlite3_stmt *a2, uint64_t a3, uint64_t a4)
{
  return sub_259268718(a1, a2, a3, a4, &qword_26A37DF98, (void (*)(sqlite3_stmt *, uint64_t, uint64_t))sub_259267F0C, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_259248934);
}

uint64_t sub_259268718(uint64_t a1, sqlite3_stmt *a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(sqlite3_stmt *, uint64_t, uint64_t), uint64_t (*a7)(BOOL, uint64_t, uint64_t, void *))
{
  double v51 = a7;
  uint64_t v56 = a6;
  uint64_t v53 = a3;
  uint64_t v54 = a4;
  uint64_t v62 = a2;
  uint64_t v55 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v61 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int v52 = (char *)&v50 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE50);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t *)((char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v60 = (char *)&v50 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (uint64_t *)((char *)&v50 - v18);
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v58 = a1;
  swift_bridgeObjectRetain();
  if (v20)
  {
    uint64_t v21 = 0;
    uint64_t v22 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
    uint64_t v23 = v58 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    uint64_t v24 = *(void *)(v22 + 72);
    while (1)
    {
      uint64_t v25 = (uint64_t)&v60[*(int *)(v12 + 48)];
      sub_259269700(v23, v25);
      uint64_t v26 = (uint64_t)v19 + *(int *)(v12 + 48);
      *uint64_t v19 = v21;
      sub_259264478(v25, v26);
      uint64_t result = sub_25924A404((uint64_t)v19, (uint64_t)v15, &qword_26A37DE50);
      uint64_t v28 = *v15 + 1;
      if (__OFADD__(*v15, 1))
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        return result;
      }
      if (v28 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_32;
      }
      if (v28 > 0x7FFFFFFF) {
        goto LABEL_33;
      }
      int v29 = sub_259269B44((uint64_t)v15 + *(int *)(v12 + 48), v28, v62);
      if (v29) {
        break;
      }
      ++v21;
      sub_25924A3A8((uint64_t)v15, &qword_26A37DE50);
      v23 += v24;
      if (v20 == v21) {
        goto LABEL_8;
      }
    }
    unsigned int v42 = v29;
    if (sqlite3_errstr(v29))
    {
      uint64_t v43 = sub_259309C30();
      unint64_t v45 = v44;
    }
    else
    {
      uint64_t v43 = 4271950;
      unint64_t v45 = 0xE300000000000000;
    }
    sub_259248190();
    swift_allocError();
    *double v48 = v42;
    v48[1] = v43;
    v48[2] = v45;
    swift_willThrow();
    sub_25924A3A8((uint64_t)v15, &qword_26A37DE50);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    double v30 = v62;
    sub_259269764(v62);
    int v31 = sqlite3_step(v30);
    if (v31 != 100)
    {
      unsigned int v41 = v31;
      uint64_t v15 = (void *)MEMORY[0x263F8EE78];
      if (v31 != 101)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        if (sqlite3_errstr(v41))
        {
          uint64_t v46 = sub_259309C30();
          uint64_t v15 = v47;
        }
        else
        {
          uint64_t v46 = 4271950;
          uint64_t v15 = (void *)0xE300000000000000;
        }
        sub_259248190();
        swift_allocError();
        *double v49 = v41 | 0xA000000000000000;
        v49[1] = v46;
        v49[2] = (unint64_t)v15;
        swift_willThrow();
      }
      return (uint64_t)v15;
    }
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
    double v32 = v56;
    uint64_t v33 = v57;
    uint64_t v35 = v54;
    uint64_t v34 = v55;
    uint64_t v36 = (uint64_t)v52;
    uint64_t v37 = v53;
    while (1)
    {
      v32(v30, v37, v35);
      if (v33) {
        break;
      }
      sub_2592207A0(v36, v61, v34);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = (void *)v51(0, v15[2] + 1, 1, v15);
      }
      unint64_t v39 = v15[2];
      unint64_t v38 = v15[3];
      if (v39 >= v38 >> 1) {
        uint64_t v15 = (void *)v51(v38 > 1, v39 + 1, 1, v15);
      }
      void v15[2] = v39 + 1;
      sub_25924A404(v61, (uint64_t)v15+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v39, v34);
      sub_25924A3A8(v36, v34);
      double v30 = v62;
      int v40 = sqlite3_step(v62);
      if (v40 != 100)
      {
        unsigned int v41 = v40;
        if (v40 == 101) {
          return (uint64_t)v15;
        }
        goto LABEL_23;
      }
    }
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v15;
}

uint64_t sub_259268C04(uint64_t a1, void (*a2)(sqlite3_stmt **), uint64_t a3, sqlite3_stmt *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v57 = a4;
  uint64_t v54 = a3;
  uint64_t v50 = a2;
  uint64_t v51 = a5;
  uint64_t v48 = *(void *)(a5 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  double v49 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v53 = (char *)&v47 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE50);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v56 = (char *)&v47 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (uint64_t *)((char *)&v47 - v17);
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v52 = a1;
  swift_bridgeObjectRetain();
  uint64_t v55 = v19;
  if (v19)
  {
    uint64_t v20 = 0;
    uint64_t v21 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
    uint64_t v22 = v52 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    uint64_t v23 = *(void *)(v21 + 72);
    while (1)
    {
      uint64_t v24 = (uint64_t)&v56[*(int *)(v11 + 48)];
      sub_259269700(v22, v24);
      uint64_t v25 = (uint64_t)v18 + *(int *)(v11 + 48);
      *uint64_t v18 = v20;
      sub_259264478(v24, v25);
      uint64_t result = sub_25924A404((uint64_t)v18, (uint64_t)v14, &qword_26A37DE50);
      uint64_t v27 = *v14 + 1;
      if (__OFADD__(*v14, 1))
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        return result;
      }
      if (v27 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_24;
      }
      if (v27 > 0x7FFFFFFF) {
        goto LABEL_25;
      }
      int v28 = sub_259269B44((uint64_t)v14 + *(int *)(v11 + 48), v27, v57);
      if (v28) {
        break;
      }
      ++v20;
      sub_25924A3A8((uint64_t)v14, &qword_26A37DE50);
      v22 += v23;
      if (v55 == v20) {
        goto LABEL_8;
      }
    }
    unsigned int v38 = v28;
    if (sqlite3_errstr(v28))
    {
      uint64_t v39 = sub_259309C30();
      unint64_t v41 = v40;
    }
    else
    {
      uint64_t v39 = 4271950;
      unint64_t v41 = 0xE300000000000000;
    }
    sub_259248190();
    swift_allocError();
    *unint64_t v45 = v38;
    v45[1] = v39;
    v45[2] = v41;
    swift_willThrow();
    sub_25924A3A8((uint64_t)v14, &qword_26A37DE50);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    int v29 = v57;
    sub_259269764(v57);
    uint64_t v30 = v51;
    uint64_t v59 = sub_259309A60();
    int v31 = v49;
    double v32 = (void (**)(char *, char *, uint64_t))(v48 + 16);
    uint64_t v33 = (void (**)(char *, uint64_t))(v48 + 8);
    uint64_t v34 = v50;
    for (unint64_t i = v53; ; (*v33)(i, v30))
    {
      int v36 = sqlite3_step(v29);
      if (v36 != 100) {
        break;
      }
      uint64_t v58 = v29;
      v34(&v58);
      if (v6) {
        return swift_bridgeObjectRelease();
      }
      (*v32)(v31, i, v30);
      sub_259309E70();
      sub_259309E40();
    }
    unsigned int v37 = v36;
    if (v36 == 101)
    {
      return v59;
    }
    else
    {
      swift_bridgeObjectRelease();
      if (sqlite3_errstr(v37))
      {
        uint64_t v42 = sub_259309C30();
        unint64_t v44 = v43;
      }
      else
      {
        uint64_t v42 = 4271950;
        unint64_t v44 = 0xE300000000000000;
      }
      sub_259248190();
      swift_allocError();
      *uint64_t v46 = v37 | 0xA000000000000000;
      v46[1] = v42;
      void v46[2] = v44;
      return swift_willThrow();
    }
  }
}

uint64_t sub_25926906C(uint64_t a1, sqlite3_stmt *a2)
{
  uint64_t v35 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE50);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v34 = (char *)&v32 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v32 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v33 = a1;
  swift_bridgeObjectRetain();
  if (v11)
  {
    uint64_t v12 = 0;
    uint64_t v13 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
    uint64_t v14 = v33 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v15 = *(void *)(v13 + 72);
    while (1)
    {
      uint64_t v16 = (uint64_t)&v34[*(int *)(v3 + 48)];
      sub_259269700(v14, v16);
      uint64_t v17 = (uint64_t)v10 + *(int *)(v3 + 48);
      *uint64_t v10 = v12;
      sub_259264478(v16, v17);
      uint64_t result = sub_25924A404((uint64_t)v10, (uint64_t)v6, &qword_26A37DE50);
      uint64_t v19 = *v6 + 1;
      if (__OFADD__(*v6, 1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        return result;
      }
      if (v19 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_19;
      }
      if (v19 > 0x7FFFFFFF) {
        goto LABEL_20;
      }
      int v20 = sub_259269B44((uint64_t)v6 + *(int *)(v3 + 48), v19, v35);
      if (v20) {
        break;
      }
      ++v12;
      sub_25924A3A8((uint64_t)v6, &qword_26A37DE50);
      v14 += v15;
      if (v11 == v12) {
        goto LABEL_8;
      }
    }
    unsigned int v26 = v20;
    if (sqlite3_errstr(v20))
    {
      uint64_t v27 = sub_259309C30();
      unint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 4271950;
      unint64_t v29 = 0xE300000000000000;
    }
    sub_259248190();
    swift_allocError();
    *int v31 = v26;
    v31[1] = v27;
    v31[2] = v29;
    swift_willThrow();
    sub_25924A3A8((uint64_t)v6, &qword_26A37DE50);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v21 = v35;
    sub_259269764(v35);
    uint64_t result = sqlite3_step(v21);
    if (result != 101)
    {
      unsigned int v22 = result;
      if (sqlite3_errstr(result))
      {
        uint64_t v23 = sub_259309C30();
        unint64_t v25 = v24;
      }
      else
      {
        uint64_t v23 = 4271950;
        unint64_t v25 = 0xE300000000000000;
      }
      sub_259248190();
      swift_allocError();
      *uint64_t v30 = v22 | 0x6000000000000000;
      v30[1] = v23;
      void v30[2] = v25;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_25926936C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(sqlite3_stmt **)@<X1>, uint64_t a3@<X2>, sqlite3_stmt *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v42 = a5;
  uint64_t v47 = a4;
  uint64_t v40 = a3;
  unint64_t v41 = a2;
  uint64_t v44 = a6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DE50);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v46 = (char *)&v40 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v40 - v13);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v45 = a1;
  swift_bridgeObjectRetain();
  if (!v15)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    unint64_t v25 = v47;
    sub_259269764(v47);
    int v26 = sqlite3_step(v25);
    if (v26 == 100)
    {
      uint64_t v48 = v25;
      uint64_t v34 = v43;
      uint64_t v28 = v44;
      uint64_t result = v41(&v48);
      if (v34) {
        return result;
      }
      uint64_t v29 = 0;
    }
    else
    {
      unsigned int v27 = v26;
      uint64_t v28 = v44;
      if (v26 != 101)
      {
        if (sqlite3_errstr(v26))
        {
          uint64_t v35 = sub_259309C30();
          unint64_t v37 = v36;
        }
        else
        {
          uint64_t v35 = 4271950;
          unint64_t v37 = 0xE300000000000000;
        }
        sub_259248190();
        swift_allocError();
        *uint64_t v39 = v27 | 0xA000000000000000;
        v39[1] = v35;
        v39[2] = v37;
        return swift_willThrow();
      }
      uint64_t v29 = 1;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v28, v29, 1);
  }
  uint64_t v16 = 0;
  uint64_t v17 = *(void *)(type metadata accessor for DatabaseBinding() - 8);
  uint64_t v18 = v45 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  uint64_t v19 = *(void *)(v17 + 72);
  while (1)
  {
    uint64_t v20 = (uint64_t)&v46[*(int *)(v7 + 48)];
    sub_259269700(v18, v20);
    uint64_t v21 = (uint64_t)v14 + *(int *)(v7 + 48);
    *uint64_t v14 = v16;
    sub_259264478(v20, v21);
    uint64_t result = sub_25924A404((uint64_t)v14, (uint64_t)v10, &qword_26A37DE50);
    uint64_t v23 = *v10 + 1;
    if (__OFADD__(*v10, 1))
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    if (v23 < (uint64_t)0xFFFFFFFF80000000) {
      goto LABEL_24;
    }
    if (v23 > 0x7FFFFFFF) {
      goto LABEL_25;
    }
    int v24 = sub_259269B44((uint64_t)v10 + *(int *)(v7 + 48), v23, v47);
    if (v24) {
      break;
    }
    ++v16;
    sub_25924A3A8((uint64_t)v10, &qword_26A37DE50);
    v18 += v19;
    if (v15 == v16) {
      goto LABEL_8;
    }
  }
  unsigned int v30 = v24;
  if (sqlite3_errstr(v24))
  {
    uint64_t v31 = sub_259309C30();
    unint64_t v33 = v32;
  }
  else
  {
    uint64_t v31 = 4271950;
    unint64_t v33 = 0xE300000000000000;
  }
  sub_259248190();
  swift_allocError();
  *unsigned int v38 = v30;
  v38[1] = v31;
  void v38[2] = v33;
  swift_willThrow();
  sub_25924A3A8((uint64_t)v10, &qword_26A37DE50);
  return swift_bridgeObjectRelease();
}

void sub_2592696F0()
{
  qword_26A387DC0 = -1;
}

uint64_t sub_259269700(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DatabaseBinding();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_259269764(sqlite3_stmt *a1)
{
  if (sub_259264C04(0x4C51536775626544, 0xE800000000000000, 0))
  {
    unsigned int v2 = sqlite3_expanded_sql(a1);
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = sub_259309C30();
      unint64_t v6 = v5;
      if (qword_26B2F3BC0 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_259309860();
      __swift_project_value_buffer(v7, (uint64_t)qword_26B2F3BA8);
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_259309840();
      os_log_type_t v9 = sub_25930A1D0();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = v11;
        *(_DWORD *)uint64_t v10 = 136315138;
        swift_bridgeObjectRetain();
        sub_25924FC14(v4, v6, &v12);
        sub_25930A2A0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_25921A000, v8, v9, "%s", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A2DBAF0](v11, -1, -1);
        MEMORY[0x25A2DBAF0](v10, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sqlite3_free(v3);
    }
  }
}

void sub_259269950(sqlite3_stmt *a1)
{
  int v1 = sqlite3_finalize(a1);
  if (v1)
  {
    unsigned int v2 = v1;
    if (qword_26B2F3BC0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_259309860();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B2F3BA8);
    oslog = sub_259309840();
    os_log_type_t v4 = sub_25930A1B0();
    if (os_log_type_enabled(oslog, v4))
    {
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      unint64_t v6 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v5 = 138412290;
      if (sqlite3_errstr(v2))
      {
        uint64_t v7 = sub_259309C30();
        unint64_t v9 = v8;
      }
      else
      {
        unint64_t v9 = 0xE300000000000000;
        uint64_t v7 = 4271950;
      }
      sub_259248190();
      swift_allocError();
      *uint64_t v10 = v2 | 0x2000000000000000;
      v10[1] = v7;
      v10[2] = v9;
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_25930A2A0();
      *unint64_t v6 = v12;
      _os_log_impl(&dword_25921A000, oslog, v4, "%@", v5, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E078);
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v6, -1, -1);
      MEMORY[0x25A2DBAF0](v5, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_259269B44(uint64_t a1, unsigned int a2, sqlite3_stmt *a3)
{
  uint64_t v61 = a3;
  unsigned int v62 = a2;
  v63[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_259309440();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_259309300();
  uint64_t v58 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2593093D0();
  uint64_t v57 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DatabaseBinding();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (uint64_t *)((char *)&v56 - v18);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (unsigned __int8 *)&v56 - v20;
  sub_259269700(a1, (uint64_t)&v56 - v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      return sqlite3_bind_double(v61, v62, *(double *)v21);
    case 2u:
      return sqlite3_bind_int64(v61, v62, *(void *)v21);
    case 3u:
      uint64_t v26 = v58;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v58 + 32))(v9, v21, v7);
      *uint64_t v19 = sub_259309260();
      v19[1] = v27;
      swift_storeEnumTagMultiPayload();
      uint64_t v24 = sub_259269B44(v19, v62, v61);
      sub_25926A3E0((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
      return v24;
    case 4u:
      uint64_t v28 = (void *)sub_259309B80();
      swift_bridgeObjectRelease();
      uint64_t v29 = (const char *)objc_msgSend(v28, sel_UTF8String);
      id v30 = v28;
      if (qword_26A37C6F0 != -1) {
        swift_once();
      }
      return sqlite3_bind_text(v61, v62, v29, -1, (void (__cdecl *)(void *))qword_26A387DC0);
    case 5u:
      *uint64_t v16 = *v21;
      swift_storeEnumTagMultiPayload();
      uint64_t v24 = sub_259269B44(v16, v62, v61);
      sub_25926A3E0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      return v24;
    case 6u:
      uint64_t v32 = *(void *)v21;
      unint64_t v31 = *((void *)v21 + 1);
      switch(v31 >> 62)
      {
        case 1uLL:
          if (v32 >> 32 < (int)v32)
          {
            __break(1u);
LABEL_54:
            swift_once();
LABEL_26:
            unint64_t v33 = (void (__cdecl *)(void *))qword_26A387DC0;
            uint64_t v34 = v61;
            int v35 = v62;
            int v36 = 0;
LABEL_27:
            uint64_t v24 = sqlite3_bind_blob(v34, v35, v63, v36, v33);
            goto LABEL_52;
          }
          sub_259261DE0(*(void *)v21, *((void *)v21 + 1));
          uint64_t v41 = sub_2593091E0();
          if (!v41)
          {
            uint64_t v44 = 0;
            goto LABEL_41;
          }
          uint64_t v42 = v41;
          uint64_t v43 = sub_259309210();
          if (!__OFSUB__((int)v32, v43))
          {
            uint64_t v44 = (const void *)(v42 + (int)v32 - v43);
LABEL_41:
            uint64_t v54 = sub_259309200();
            if (v54 >= (v32 >> 32) - (int)v32) {
              uint64_t v55 = (v32 >> 32) - (int)v32;
            }
            else {
              uint64_t v55 = v54;
            }
            if (!v44) {
              goto LABEL_47;
            }
            if (v55 < (uint64_t)0xFFFFFFFF80000000)
            {
              __break(1u);
LABEL_47:
              LODWORD(v55) = 0;
LABEL_49:
              if (qword_26A37C6F0 != -1) {
                swift_once();
              }
              uint64_t v24 = sqlite3_bind_blob(v61, v62, v44, v55, (void (__cdecl *)(void *))qword_26A387DC0);
              sub_259261F50(v32, v31);
              goto LABEL_52;
            }
            if (v55 <= 0x7FFFFFFF) {
              goto LABEL_49;
            }
LABEL_61:
            __break(1u);
          }
          __break(1u);
          goto LABEL_60;
        case 2uLL:
          uint64_t v45 = *(void *)(v32 + 16);
          uint64_t v46 = *(void *)(v32 + 24);
          swift_retain();
          swift_retain();
          uint64_t v47 = sub_2593091E0();
          if (v47)
          {
            uint64_t v48 = v47;
            uint64_t v49 = sub_259309210();
            if (__OFSUB__(v45, v49))
            {
LABEL_60:
              __break(1u);
              goto LABEL_61;
            }
            uint64_t v50 = (const void *)(v48 + v45 - v49);
          }
          else
          {
            uint64_t v50 = 0;
          }
          uint64_t v51 = v46 - v45;
          if (__OFSUB__(v46, v45))
          {
            __break(1u);
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
          uint64_t v52 = sub_259309200();
          if (v52 >= v51) {
            uint64_t v53 = v46 - v45;
          }
          else {
            uint64_t v53 = v52;
          }
          if (v50) {
            uint64_t v51 = v53;
          }
          else {
            uint64_t v51 = 0;
          }
          if (v51 < (uint64_t)0xFFFFFFFF80000000) {
            goto LABEL_56;
          }
          if (v51 > 0x7FFFFFFF)
          {
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          if (qword_26A37C6F0 == -1) {
            goto LABEL_39;
          }
LABEL_58:
          swift_once();
LABEL_39:
          uint64_t v24 = sqlite3_bind_blob(v61, v62, v50, v51, (void (__cdecl *)(void *))qword_26A387DC0);
          swift_release();
          swift_release();
LABEL_52:
          sub_259261F50(v32, v31);
          return v24;
        case 3uLL:
          memset(v63, 0, 14);
          if (qword_26A37C6F0 == -1) {
            goto LABEL_26;
          }
          goto LABEL_54;
        default:
          v63[0] = *(void *)v21;
          LOWORD(v63[1]) = v31;
          BYTE2(v63[1]) = BYTE2(v31);
          BYTE3(v63[1]) = BYTE3(v31);
          BYTE4(v63[1]) = BYTE4(v31);
          BYTE5(v63[1]) = BYTE5(v31);
          if (qword_26A37C6F0 != -1) {
            swift_once();
          }
          unint64_t v33 = (void (__cdecl *)(void *))qword_26A387DC0;
          uint64_t v34 = v61;
          int v35 = v62;
          int v36 = BYTE6(v31);
          goto LABEL_27;
      }
    case 7u:
      uint64_t v38 = v59;
      uint64_t v37 = v60;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v59 + 32))(v6, v21, v60);
      *uint64_t v19 = UUID.serialized(version:)();
      v19[1] = v39;
      swift_storeEnumTagMultiPayload();
      uint64_t v24 = sub_259269B44(v19, v62, v61);
      sub_25926A3E0((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v37);
      return v24;
    case 8u:
      return sqlite3_bind_null(v61, v62);
    default:
      uint64_t v22 = v57;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v57 + 32))(v12, v21, v10);
      sub_2593093A0();
      *uint64_t v19 = v23;
      swift_storeEnumTagMultiPayload();
      uint64_t v24 = sub_259269B44(v19, v62, v61);
      sub_25926A3E0((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DatabaseBinding);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
      return v24;
  }
}

uint64_t sub_25926A3E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t FetchFaceRequest.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_259309440();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FetchFaceRequest.day.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FetchFaceRequest() + 20));
}

uint64_t type metadata accessor for FetchFaceRequest()
{
  uint64_t result = qword_26A37E2F8;
  if (!qword_26A37E2F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FetchFaceRequest.init(id:day:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for FetchFaceRequest();
  uint64_t v10 = a4 + *(int *)(result + 20);
  *(void *)uint64_t v10 = a2;
  *(unsigned char *)(v10 + 8) = a3 & 1;
  return result;
}

uint64_t FetchFaceRequest.init(protobuf:version:)@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_259309440();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v9) = *a2;
  uint64_t v11 = *a1;
  unint64_t v12 = a1[1];
  v18[15] = v9;
  sub_259261DE0(v11, v12);
  UUID.init(serialized:version:)(v11, v12);
  if (v3) {
    return sub_25926BAB4((uint64_t)a1, type metadata accessor for FetchFaceRequestProto);
  }
  uint64_t v14 = (unsigned int *)((char *)a1 + *(int *)(type metadata accessor for FetchFaceRequestProto(0) + 24));
  char v15 = *((unsigned char *)v14 + 4);
  if (v15) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = *v14;
  }
  sub_25926BAB4((uint64_t)a1, type metadata accessor for FetchFaceRequestProto);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 32))(a3, v10, v7);
  uint64_t result = type metadata accessor for FetchFaceRequest();
  uint64_t v17 = a3 + *(int *)(result + 20);
  *(void *)uint64_t v17 = v16;
  *(unsigned char *)(v17 + 8) = v15;
  return result;
}

uint64_t FetchFaceRequest.protobuf(version:)()
{
  return sub_259309750();
}

uint64_t sub_25926A7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = UUID.serialized(version:)();
  uint64_t v6 = v5;
  sub_259261F50(*(void *)a1, *(void *)(a1 + 8));
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  uint64_t result = type metadata accessor for FetchFaceRequest();
  uint64_t v8 = (unint64_t *)(a2 + *(int *)(result + 20));
  if ((v8[1] & 1) == 0)
  {
    unint64_t v9 = *v8;
    if ((*v8 & 0x8000000000000000) != 0 || HIDWORD(v9))
    {
      uint64_t result = sub_25930A570();
      __break(1u);
    }
    else
    {
      uint64_t result = type metadata accessor for FetchFaceRequestProto(0);
      uint64_t v10 = a1 + *(int *)(result + 24);
      *(_DWORD *)uint64_t v10 = v9;
      *(unsigned char *)(v10 + 4) = 0;
    }
  }
  return result;
}

uint64_t sub_25926A90C(uint64_t a1)
{
  return sub_25926A7E8(a1, *(void *)(v1 + 16));
}

uint64_t sub_25926A92C@<X0>(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = *a2;
  return FetchFaceRequest.init(protobuf:version:)(a1, &v4, a3);
}

uint64_t sub_25926A958()
{
  return sub_259309750();
}

uint64_t FetchByDayResponse.day.getter()
{
  return *(void *)v0;
}

uint64_t FetchByDayResponse.photos.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FetchByDayResponse.init(protobuf:version:)@<X0>(unsigned int *a1@<X0>, unsigned __int8 *a2@<X1>, void *a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v6 = type metadata accessor for StoredPhotoProto(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v33 = (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = type metadata accessor for StoredPhoto(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12 - 8);
  char v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *((void *)a1 + 1);
  int64_t v17 = *(void *)(v16 + 16);
  uint64_t v30 = *a1;
  if (v17)
  {
    uint64_t v28 = a1;
    int v32 = *a2;
    uint64_t v35 = MEMORY[0x263F8EE78];
    uint64_t v18 = v16;
    swift_bridgeObjectRetain();
    sub_25925CCA4(0, v17, 0);
    uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v27 = v18;
    uint64_t v20 = v18 + ((v19 + 32) & ~v19);
    uint64_t v31 = *(void *)(v7 + 72);
    while (1)
    {
      sub_25926B9E4(v20, (uint64_t)v11, type metadata accessor for StoredPhotoProto);
      uint64_t v21 = v33;
      sub_25926B9E4((uint64_t)v11, v33, type metadata accessor for StoredPhotoProto);
      unsigned __int8 v34 = v32;
      StoredPhoto.init(protobuf:version:)(v21, &v34, (uint64_t)v15);
      sub_25926BAB4((uint64_t)v11, type metadata accessor for StoredPhotoProto);
      uint64_t v22 = v35;
      if (v3) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CCA4(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v35;
      }
      unint64_t v24 = *(void *)(v22 + 16);
      unint64_t v23 = *(void *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_25925CCA4(v23 > 1, v24 + 1, 1);
        uint64_t v22 = v35;
      }
      *(void *)(v22 + 16) = v24 + 1;
      sub_25926BB14((uint64_t)v15, v22+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v24, type metadata accessor for StoredPhoto);
      v20 += v31;
      if (!--v17)
      {
        a1 = v28;
        uint64_t v26 = v29;
        goto LABEL_12;
      }
    }
    swift_release();
    sub_25926BAB4((uint64_t)v28, type metadata accessor for FetchByDayResponseProto);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = MEMORY[0x263F8EE78];
    uint64_t v26 = v29;
LABEL_12:
    sub_25926BAB4((uint64_t)a1, type metadata accessor for FetchByDayResponseProto);
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v26 = v30;
    v26[1] = v22;
  }
  return result;
}

uint64_t FetchByDayResponse.protobuf(version:)()
{
  return sub_259309750();
}

uint64_t sub_25926AE38(uint64_t a1, unint64_t a2, uint64_t a3, int a4)
{
  int v26 = a4;
  uint64_t v7 = type metadata accessor for StoredPhoto(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StoredPhotoProto(0);
  uint64_t v25 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x8000000000000000) != 0 || HIDWORD(a2))
  {
    uint64_t result = sub_25930A570();
    __break(1u);
  }
  else
  {
    *(_DWORD *)a1 = a2;
    int64_t v14 = *(void *)(a3 + 16);
    uint64_t v15 = MEMORY[0x263F8EE78];
    if (v14)
    {
      uint64_t v23 = a1;
      uint64_t v27 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_25925CDD8(0, v14, 0);
      uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
      v22[1] = a3;
      uint64_t v17 = a3 + ((v16 + 32) & ~v16);
      uint64_t v24 = *(void *)(v8 + 72);
      do
      {
        uint64_t v18 = sub_25926B9E4(v17, (uint64_t)v10, type metadata accessor for StoredPhoto);
        MEMORY[0x270FA5388](v18);
        sub_25926BA6C(&qword_26A37E308, (void (*)(uint64_t))type metadata accessor for StoredPhotoProto);
        sub_259309750();
        sub_25926BAB4((uint64_t)v10, type metadata accessor for StoredPhoto);
        uint64_t v15 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25925CDD8(0, *(void *)(v15 + 16) + 1, 1);
          uint64_t v15 = v27;
        }
        unint64_t v20 = *(void *)(v15 + 16);
        unint64_t v19 = *(void *)(v15 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_25925CDD8(v19 > 1, v20 + 1, 1);
          uint64_t v15 = v27;
        }
        *(void *)(v15 + 16) = v20 + 1;
        sub_25926BB14((uint64_t)v13, v15+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v20, type metadata accessor for StoredPhotoProto);
        v17 += v24;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      a1 = v23;
    }
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a1 + 8) = v15;
  }
  return result;
}

uint64_t sub_25926B20C@<X0>(unsigned int *a1@<X0>, unsigned __int8 *a2@<X1>, void *a3@<X8>)
{
  unsigned __int8 v4 = *a2;
  return FetchByDayResponse.init(protobuf:version:)(a1, &v4, a3);
}

uint64_t sub_25926B238()
{
  return sub_259309750();
}

uint64_t sub_25926B2F0(uint64_t a1)
{
  return sub_25926AE38(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_25926B310()
{
  return sub_25926BA6C(&qword_26A37E2E8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
}

uint64_t sub_25926B358()
{
  return sub_25926BA6C(&qword_26A37E2F0, (void (*)(uint64_t))type metadata accessor for FetchByDayResponseProto);
}

uint64_t *initializeBufferWithCopyOfBuffer for FetchFaceRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_259309440();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
  }
  return a1;
}

uint64_t destroy for FetchFaceRequest(uint64_t a1)
{
  uint64_t v2 = sub_259309440();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for FetchFaceRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t assignWithCopy for FetchFaceRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  return a1;
}

uint64_t initializeWithTake for FetchFaceRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t assignWithTake for FetchFaceRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchFaceRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25926B724);
}

uint64_t sub_25926B724(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259309440();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FetchFaceRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25926B7A4);
}

uint64_t sub_25926B7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259309440();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_25926B814()
{
  uint64_t result = sub_259309440();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FetchByDayResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FetchByDayResponse(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FetchByDayResponse(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchByDayResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchByDayResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchByDayResponse()
{
  return &type metadata for FetchByDayResponse;
}

uint64_t sub_25926B9E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25926BA4C(uint64_t a1)
{
  return sub_259290570(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_25926BA6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25926BAB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25926BB14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25926BB7C(uint64_t a1)
{
  return sub_25926A90C(a1);
}

uint64_t sub_25926BB94(uint64_t a1)
{
  return sub_25926B2F0(a1);
}

uint64_t GeneratePhotoRequest.photoIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GeneratePhotoRequest.init(protobuf:version:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v21 = sub_259309440();
  uint64_t v5 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)a1;
  int64_t v9 = *(void *)(*(void *)a1 + 16);
  if (v9)
  {
    uint64_t v18 = a2;
    uint64_t v20 = a1;
    uint64_t v22 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25925CBB8(0, v9, 0);
    uint64_t v10 = v22;
    uint64_t v19 = v8;
    uint64_t v11 = (unint64_t *)(v8 + 40);
    while (1)
    {
      uint64_t v13 = *(v11 - 1);
      unint64_t v12 = *v11;
      sub_259261DE0(v13, *v11);
      sub_259261DE0(v13, v12);
      UUID.init(serialized:version:)(v13, v12);
      if (v2) {
        break;
      }
      sub_259261F50(v13, v12);
      uint64_t v22 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_25925CBB8(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v22;
      }
      v11 += 2;
      *(void *)(v10 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v15, v7, v21);
      if (!--v9)
      {
        a1 = v20;
        a2 = v18;
        goto LABEL_10;
      }
    }
    sub_259261F50(v13, v12);
    swift_release();
    sub_25926CBB0(v20, type metadata accessor for GeneratePhotoRequestProto);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = MEMORY[0x263F8EE78];
LABEL_10:
    sub_25926CBB0(a1, type metadata accessor for GeneratePhotoRequestProto);
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v10;
  }
  return result;
}

uint64_t GeneratePhotoRequest.protobuf(version:)()
{
  return sub_259309750();
}

uint64_t sub_25926BEB4(void *a1, uint64_t a2)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v35 = sub_259309440();
  uint64_t v5 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    uint64_t v31 = a1;
    uint64_t v32 = v2;
    uint64_t v45 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25925CE14(0, v8, 0);
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v10 = v5 + 16;
    uint64_t v12 = *(unsigned __int8 *)(v10 + 64);
    uint64_t v30 = a2;
    uint64_t v13 = a2 + ((v12 + 32) & ~v12);
    uint64_t v33 = *(void *)(v10 + 56);
    unsigned __int8 v34 = v11;
    unint64_t v14 = (void (**)(char *, uint64_t))(v10 - 8);
    do
    {
      uint64_t v15 = v35;
      uint64_t v16 = v10;
      v34(v7, v13, v35);
      uint64_t v36 = sub_259309420();
      char v37 = v17;
      char v38 = v18;
      char v39 = v19;
      char v40 = v20;
      char v41 = v21;
      char v42 = v22;
      char v43 = v23;
      char v44 = v24;
      sub_259309420();
      sub_259309220();
      swift_allocObject();
      uint64_t v25 = sub_2593091D0();
      (*v14)(v7, v15);
      uint64_t v9 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CE14(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v45;
      }
      unint64_t v27 = *(void *)(v9 + 16);
      unint64_t v26 = *(void *)(v9 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_25925CE14(v26 > 1, v27 + 1, 1);
        uint64_t v9 = v45;
      }
      *(void *)(v9 + 16) = v27 + 1;
      uint64_t v28 = v9 + 16 * v27;
      *(void *)(v28 + 32) = 0x1000000000;
      *(void *)(v28 + 40) = v25 | 0x4000000000000000;
      v13 += v33;
      --v8;
      uint64_t v10 = v16;
    }
    while (v8);
    swift_bridgeObjectRelease();
    a1 = v31;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v9;
  return result;
}

uint64_t sub_25926C188@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return GeneratePhotoRequest.init(protobuf:version:)(a1, a2);
}

uint64_t sub_25926C1A0()
{
  return sub_259309750();
}

PhotosFace::GeneratePhotoResponse __swiftcall GeneratePhotoResponse.init(results:)(PhotosFace::GeneratePhotoResponse results)
{
  v1->results._rawValue = results.results._rawValue;
  return results;
}

uint64_t GeneratePhotoResponse.init(protobuf:version:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, void *a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v6 = type metadata accessor for StoredPhotoProto(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v32 = (uint64_t)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v27 - v10;
  uint64_t v12 = type metadata accessor for StoredPhoto(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)a1;
  int64_t v17 = *(void *)(*(void *)a1 + 16);
  if (v17)
  {
    uint64_t v28 = a1;
    int v31 = *a2;
    uint64_t v34 = MEMORY[0x263F8EE78];
    uint64_t v18 = v16;
    swift_bridgeObjectRetain();
    sub_25925CCA4(0, v17, 0);
    uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
    v27[1] = v18;
    uint64_t v20 = v18 + ((v19 + 32) & ~v19);
    uint64_t v30 = *(void *)(v7 + 72);
    while (1)
    {
      sub_25926B9E4(v20, (uint64_t)v11, type metadata accessor for StoredPhotoProto);
      uint64_t v21 = v32;
      sub_25926B9E4((uint64_t)v11, v32, type metadata accessor for StoredPhotoProto);
      unsigned __int8 v33 = v31;
      StoredPhoto.init(protobuf:version:)(v21, &v33, (uint64_t)v15);
      sub_25926CBB0((uint64_t)v11, type metadata accessor for StoredPhotoProto);
      uint64_t v22 = v34;
      if (v3) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CCA4(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v34;
      }
      unint64_t v24 = *(void *)(v22 + 16);
      unint64_t v23 = *(void *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_25925CCA4(v23 > 1, v24 + 1, 1);
        uint64_t v22 = v34;
      }
      *(void *)(v22 + 16) = v24 + 1;
      sub_25926BB14((uint64_t)v15, v22+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v24, type metadata accessor for StoredPhoto);
      v20 += v30;
      if (!--v17)
      {
        a1 = v28;
        unint64_t v26 = v29;
        goto LABEL_12;
      }
    }
    swift_release();
    sub_25926CBB0(v28, type metadata accessor for GeneratePhotoResponseProto);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = MEMORY[0x263F8EE78];
    unint64_t v26 = v29;
LABEL_12:
    sub_25926CBB0(a1, type metadata accessor for GeneratePhotoResponseProto);
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v26 = v22;
  }
  return result;
}

uint64_t GeneratePhotoResponse.protobuf(version:)()
{
  return sub_259309750();
}

uint64_t sub_25926C664(void *a1, uint64_t a2, int a3)
{
  int v24 = a3;
  uint64_t v5 = type metadata accessor for StoredPhoto(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StoredPhotoProto(0);
  uint64_t v23 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a2 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v21 = a1;
    uint64_t v25 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25925CDD8(0, v12, 0);
    uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
    v20[1] = a2;
    uint64_t v15 = a2 + ((v14 + 32) & ~v14);
    uint64_t v22 = *(void *)(v6 + 72);
    do
    {
      uint64_t v16 = sub_25926B9E4(v15, (uint64_t)v8, type metadata accessor for StoredPhoto);
      MEMORY[0x270FA5388](v16);
      v20[-2] = v8;
      LOBYTE(v20[-1]) = v24;
      sub_25926CB68(&qword_26A37E308, (void (*)(uint64_t))type metadata accessor for StoredPhotoProto);
      sub_259309750();
      sub_25926CBB0((uint64_t)v8, type metadata accessor for StoredPhoto);
      uint64_t v13 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CDD8(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v25;
      }
      unint64_t v18 = *(void *)(v13 + 16);
      unint64_t v17 = *(void *)(v13 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_25925CDD8(v17 > 1, v18 + 1, 1);
        uint64_t v13 = v25;
      }
      *(void *)(v13 + 16) = v18 + 1;
      sub_25926BB14((uint64_t)v11, v13+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v18, type metadata accessor for StoredPhotoProto);
      v15 += v22;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    a1 = v21;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v13;
  return result;
}

uint64_t sub_25926C994@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, void *a3@<X8>)
{
  unsigned __int8 v4 = *a2;
  return GeneratePhotoResponse.init(protobuf:version:)(a1, &v4, a3);
}

uint64_t sub_25926C9C0()
{
  return sub_259309750();
}

uint64_t sub_25926CA78(void *a1)
{
  return sub_25926BEB4(a1, *(void *)(v1 + 16));
}

uint64_t sub_25926CA98(void *a1)
{
  return sub_25926C664(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_25926CAB8()
{
  return sub_25926CB68(&qword_26A37E310, (void (*)(uint64_t))type metadata accessor for GeneratePhotoRequestProto);
}

uint64_t sub_25926CB00()
{
  return sub_25926CB68(&qword_26A37E318, (void (*)(uint64_t))type metadata accessor for GeneratePhotoResponseProto);
}

ValueMetadata *type metadata accessor for GeneratePhotoRequest()
{
  return &type metadata for GeneratePhotoRequest;
}

ValueMetadata *type metadata accessor for GeneratePhotoResponse()
{
  return &type metadata for GeneratePhotoResponse;
}

uint64_t sub_25926CB68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25926CBB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25926CC14(void *a1)
{
  return sub_25926CA98(a1);
}

uint64_t sub_25926CC2C(void *a1)
{
  return sub_25926CA78(a1);
}

uint64_t sub_25926CC44(uint64_t a1)
{
  uint64_t v3 = sub_259309440();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    v15[0] = v1;
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_25925CBB8(0, v7, 0);
    uint64_t v8 = v18;
    uint64_t v9 = *(void *)(type metadata accessor for StoredPhoto(0) - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v17 = *(void *)(v9 + 72);
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v15[1] = v4 + 32;
    uint64_t v16 = v11;
    do
    {
      v16(v6, v10, v3);
      uint64_t v18 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_25925CBB8(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v18;
      }
      *(void *)(v8 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, v6, v3);
      v10 += v17;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t SyncFacesRequest.trackedFaces.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncFacesRequest.cachedIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncFacesRequest.init(trackedFaces:cachedIdentifiers:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t SyncFacesRequest.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  swift_bridgeObjectRetain();
  sub_259272000(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_259272000(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static SyncFacesRequest.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_25926E0DC(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return sub_25926E0DC(v2, v3);
}

uint64_t sub_25926CF30(uint64_t a1, uint64_t a2)
{
  __s1[3] = *MEMORY[0x263EF8340];
  uint64_t v78 = type metadata accessor for StoredPhotoLayoutProto(0);
  uint64_t v4 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v70 - v8;
  uint64_t v10 = type metadata accessor for StoredPhotoProto(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v80 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v79 = (uint64_t)&v70 - v14;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15 != *(void *)(a2 + 16)) {
    goto LABEL_60;
  }
  if (!v15 || a1 == a2)
  {
    char v68 = 1;
    return v68 & 1;
  }
  uint64_t v16 = 0;
  uint64_t v74 = *(void *)(a1 + 16);
  uint64_t v75 = 0;
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(v13 + 72);
  uint64_t v77 = v10;
  uint64_t v72 = v19;
  uint64_t v73 = v18;
  uint64_t v70 = v4;
  uint64_t v71 = v20;
  while (2)
  {
    uint64_t v21 = v20 * v16;
    uint64_t v22 = v16 + 1;
    uint64_t v23 = (uint64_t *)v79;
    sub_25927316C(v18 + v20 * v16, v79, type metadata accessor for StoredPhotoProto);
    uint64_t v24 = v19 + v21;
    uint64_t v25 = (uint64_t *)v80;
    sub_25927316C(v24, v80, type metadata accessor for StoredPhotoProto);
    uint64_t v26 = *v23;
    unint64_t v27 = v23[1];
    uint64_t v28 = *v25;
    unint64_t v29 = v25[1];
    uint64_t v30 = 0;
    switch(v27 >> 62)
    {
      case 1uLL:
        LODWORD(v30) = HIDWORD(v26) - v26;
        if (__OFSUB__(HIDWORD(v26), v26))
        {
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
        }
        uint64_t v30 = (int)v30;
LABEL_10:
        uint64_t v76 = v22;
        switch(v29 >> 62)
        {
          case 1uLL:
            LODWORD(v34) = HIDWORD(v28) - v28;
            if (__OFSUB__(HIDWORD(v28), v28)) {
              goto LABEL_64;
            }
            uint64_t v34 = (int)v34;
LABEL_15:
            if (v30 != v34) {
              goto LABEL_59;
            }
            if (v30 < 1) {
              goto LABEL_36;
            }
            break;
          case 2uLL:
            uint64_t v36 = *(void *)(v28 + 16);
            uint64_t v35 = *(void *)(v28 + 24);
            BOOL v33 = __OFSUB__(v35, v36);
            uint64_t v34 = v35 - v36;
            if (!v33) {
              goto LABEL_15;
            }
            goto LABEL_65;
          case 3uLL:
            if (v30) {
              goto LABEL_59;
            }
            goto LABEL_36;
          default:
            uint64_t v34 = BYTE6(v29);
            goto LABEL_15;
        }
        break;
      case 2uLL:
        uint64_t v32 = *(void *)(v26 + 16);
        uint64_t v31 = *(void *)(v26 + 24);
        BOOL v33 = __OFSUB__(v31, v32);
        uint64_t v30 = v31 - v32;
        if (!v33) {
          goto LABEL_10;
        }
        goto LABEL_63;
      case 3uLL:
        goto LABEL_10;
      default:
        uint64_t v30 = BYTE6(v27);
        goto LABEL_10;
    }
    switch(v27 >> 62)
    {
      case 1uLL:
        if (v26 >> 32 < (int)v26) {
          goto LABEL_66;
        }
        uint64_t v37 = v28;
        sub_259261DE0(v26, v27);
        uint64_t v38 = sub_2593091E0();
        if (!v38) {
          goto LABEL_25;
        }
        uint64_t v39 = sub_259309210();
        if (__OFSUB__((int)v26, v39)) {
          goto LABEL_68;
        }
        v38 += (int)v26 - v39;
LABEL_25:
        sub_259309200();
        uint64_t v40 = v38;
        uint64_t v41 = v75;
        sub_259271D8C(v40, v37, v29, (char *)__s1);
        uint64_t v75 = v41;
        sub_259261F50(v26, v27);
        goto LABEL_35;
      case 2uLL:
        uint64_t v42 = v28;
        uint64_t v43 = *(void *)(v26 + 16);
        uint64_t v44 = *(void *)(v26 + 24);
        swift_retain();
        swift_retain();
        uint64_t v45 = sub_2593091E0();
        if (v45)
        {
          uint64_t v46 = v45;
          uint64_t v47 = sub_259309210();
          if (__OFSUB__(v43, v47)) {
            goto LABEL_69;
          }
          uint64_t v48 = v46 + v43 - v47;
        }
        else
        {
          uint64_t v48 = 0;
        }
        if (__OFSUB__(v44, v43)) {
          goto LABEL_67;
        }
        sub_259309200();
        uint64_t v50 = v75;
        sub_259271D8C(v48, v42, v29, (char *)__s1);
        uint64_t v75 = v50;
        swift_release();
        swift_release();
LABEL_35:
        if ((__s1[0] & 1) == 0) {
          goto LABEL_59;
        }
LABEL_36:
        if (*(double *)(v79 + 16) != *(double *)(v80 + 16)) {
          goto LABEL_59;
        }
        if (*(double *)(v79 + 24) != *(double *)(v80 + 24)) {
          goto LABEL_59;
        }
        if (*(_DWORD *)(v79 + 32) != *(_DWORD *)(v80 + 32)) {
          goto LABEL_59;
        }
        uint64_t v51 = *(void *)(v79 + 40);
        uint64_t v52 = *(void *)(v80 + 40);
        uint64_t v53 = *(void *)(v51 + 16);
        if (v53 != *(void *)(v52 + 16)) {
          goto LABEL_59;
        }
        if (!v53 || v51 == v52)
        {
LABEL_47:
          uint64_t v61 = *(int *)(v77 + 40);
          unsigned int v62 = (void *)(v79 + v61);
          uint64_t v63 = *(void *)(v79 + v61 + 8);
          uint64_t v64 = (void *)(v80 + v61);
          uint64_t v65 = v64[1];
          if (v63)
          {
            if (!v65 || (*v62 != *v64 || v63 != v65) && (sub_25930A7C0() & 1) == 0) {
              goto LABEL_59;
            }
          }
          else if (v65)
          {
            goto LABEL_59;
          }
          uint64_t v67 = v79;
          uint64_t v66 = v80;
          sub_2593095B0();
          sub_2592732BC(&qword_26A37E3E0, MEMORY[0x263F50560]);
          char v68 = sub_259309B60();
          sub_2592731D4(v66, type metadata accessor for StoredPhotoProto);
          sub_2592731D4(v67, type metadata accessor for StoredPhotoProto);
          if ((v68 & 1) == 0) {
            return v68 & 1;
          }
          uint64_t v18 = v73;
          uint64_t v16 = v76;
          uint64_t v20 = v71;
          uint64_t v19 = v72;
          if (v76 == v74) {
            return v68 & 1;
          }
          continue;
        }
        unint64_t v54 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
        uint64_t v55 = *(void *)(v70 + 72);
        while (1)
        {
          sub_25927316C(v51 + v54, (uint64_t)v9, type metadata accessor for StoredPhotoLayoutProto);
          sub_25927316C(v52 + v54, (uint64_t)v6, type metadata accessor for StoredPhotoLayoutProto);
          uint64_t v56 = *(int *)(v78 + 20);
          uint64_t v57 = *(void *)&v9[v56];
          uint64_t v58 = *(void *)&v6[v56];
          if (v57 != v58)
          {
            swift_retain();
            swift_retain();
            char v59 = sub_2592BD998(v57, v58);
            swift_release();
            swift_release();
            if ((v59 & 1) == 0) {
              break;
            }
          }
          sub_2593095B0();
          sub_2592732BC(&qword_26A37E3E0, MEMORY[0x263F50560]);
          char v60 = sub_259309B60();
          sub_2592731D4((uint64_t)v6, type metadata accessor for StoredPhotoLayoutProto);
          sub_2592731D4((uint64_t)v9, type metadata accessor for StoredPhotoLayoutProto);
          if ((v60 & 1) == 0) {
            goto LABEL_59;
          }
          v54 += v55;
          if (!--v53) {
            goto LABEL_47;
          }
        }
        sub_2592731D4((uint64_t)v6, type metadata accessor for StoredPhotoLayoutProto);
        sub_2592731D4((uint64_t)v9, type metadata accessor for StoredPhotoLayoutProto);
LABEL_59:
        sub_2592731D4(v80, type metadata accessor for StoredPhotoProto);
        sub_2592731D4(v79, type metadata accessor for StoredPhotoProto);
LABEL_60:
        char v68 = 0;
        return v68 & 1;
      case 3uLL:
        memset(__s1, 0, 14);
        goto LABEL_30;
      default:
        __s1[0] = v26;
        LOWORD(__s1[1]) = v27;
        BYTE2(__s1[1]) = BYTE2(v27);
        BYTE3(__s1[1]) = BYTE3(v27);
        BYTE4(__s1[1]) = BYTE4(v27);
        BYTE5(__s1[1]) = BYTE5(v27);
LABEL_30:
        uint64_t v49 = v75;
        sub_259271D8C((uint64_t)__s1, v28, v29, &v81);
        uint64_t v75 = v49;
        if ((v81 & 1) == 0) {
          goto LABEL_59;
        }
        goto LABEL_36;
    }
  }
}

uint64_t sub_25926D774(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unint64_t *)(a1 + 40);
    uint64_t v4 = (unint64_t *)(a2 + 40);
    while (1)
    {
      uint64_t v6 = *(v3 - 1);
      unint64_t v5 = *v3;
      uint64_t v8 = *(v4 - 1);
      unint64_t v7 = *v4;
      unint64_t v9 = *v3 >> 62;
      v3 += 2;
      v4 += 2;
      uint64_t v10 = 0;
      switch(v9)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6))
          {
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
          }
          uint64_t v10 = HIDWORD(v6) - (int)v6;
LABEL_13:
          sub_259261DE0(v6, v5);
          break;
        case 2uLL:
          uint64_t v12 = *(void *)(v6 + 16);
          uint64_t v11 = *(void *)(v6 + 24);
          uint64_t v10 = v11 - v12;
          if (!__OFSUB__(v11, v12)) {
            goto LABEL_13;
          }
          goto LABEL_124;
        case 3uLL:
          break;
        default:
          uint64_t v10 = BYTE6(v5);
          break;
      }
      unint64_t v13 = v7 >> 62;
      switch(v7 >> 62)
      {
        case 1uLL:
          LODWORD(v14) = HIDWORD(v8) - v8;
          if (__OFSUB__(HIDWORD(v8), v8)) {
            goto LABEL_125;
          }
          uint64_t v14 = (int)v14;
LABEL_19:
          if (v10 != v14) {
            goto LABEL_121;
          }
          if (v10 < 1)
          {
LABEL_6:
            sub_259261F50(v6, v5);
          }
          else
          {
            switch((int)v9)
            {
              case 1:
                uint64_t v76 = v3;
                if ((int)v6 > v6 >> 32) {
                  goto LABEL_127;
                }
                sub_259261DE0(v8, v7);
                uint64_t v23 = (char *)sub_2593091E0();
                if (!v23) {
                  goto LABEL_33;
                }
                uint64_t v24 = sub_259309210();
                if (__OFSUB__((int)v6, v24)) {
                  goto LABEL_129;
                }
                v23 += (int)v6 - v24;
LABEL_33:
                sub_259309200();
                if (!v13)
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v23) {
                    goto LABEL_157;
                  }
                  size_t v41 = BYTE6(v7);
                  uint64_t v40 = __s1;
                  uint64_t v39 = v23;
LABEL_103:
                  int v29 = memcmp(v39, v40, v41);
                  goto LABEL_104;
                }
                if (v13 == 1)
                {
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_138;
                  }
                  swift_retain();
                  uint64_t v25 = (char *)sub_2593091E0();
                  if (v25)
                  {
                    uint64_t v26 = sub_259309210();
                    if (__OFSUB__((int)v8, v26)) {
                      goto LABEL_145;
                    }
                    v25 += (int)v8 - v26;
                  }
                  uint64_t v27 = sub_259309200();
                  if (v27 >= (v8 >> 32) - (int)v8) {
                    size_t v28 = (v8 >> 32) - (int)v8;
                  }
                  else {
                    size_t v28 = v27;
                  }
                  if (!v23) {
                    goto LABEL_147;
                  }
                  if (!v25) {
                    goto LABEL_148;
                  }
                  int v29 = memcmp(v23, v25, v28);
                  sub_259261F50(v8, v7);
                  goto LABEL_72;
                }
                uint64_t v67 = *(void *)(v8 + 16);
                uint64_t v74 = *(char **)(v8 + 24);
                swift_retain();
                swift_retain();
                uint64_t v68 = sub_2593091E0();
                if (v68)
                {
                  uint64_t v69 = sub_259309210();
                  if (__OFSUB__(v67, v69)) {
                    goto LABEL_144;
                  }
                  v68 += v67 - v69;
                }
                if (__OFSUB__(v74, v67)) {
                  goto LABEL_139;
                }
                uint64_t v70 = sub_259309200();
                if (v70 >= (uint64_t)&v74[-v67]) {
                  uint64_t v71 = &v74[-v67];
                }
                else {
                  uint64_t v71 = (char *)v70;
                }
                uint64_t v56 = v23;
                uint64_t v3 = v76;
                if (!v23) {
                  goto LABEL_158;
                }
                if (!v68) {
                  goto LABEL_159;
                }
                size_t v55 = (size_t)v71;
                uint64_t v57 = (const void *)v68;
LABEL_116:
                int v58 = memcmp(v56, v57, v55);
                swift_release();
                goto LABEL_117;
              case 2:
                uint64_t v77 = v3;
                uint64_t v30 = *(void *)(v6 + 16);
                sub_259261DE0(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_2593091E0();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_259309210();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_128;
                  }
                  uint64_t v73 = (void *)(v32 + v30 - v33);
                }
                else
                {
                  uint64_t v73 = 0;
                }
                sub_259309200();
                uint64_t v3 = v77;
                if (v13)
                {
                  if (v13 == 1)
                  {
                    if (v8 >> 32 < (int)v8) {
                      goto LABEL_134;
                    }
                    swift_retain();
                    uint64_t v42 = (char *)sub_2593091E0();
                    if (v42)
                    {
                      uint64_t v43 = sub_259309210();
                      if (__OFSUB__((int)v8, v43)) {
                        goto LABEL_143;
                      }
                      v42 += (int)v8 - v43;
                    }
                    uint64_t v44 = sub_259309200();
                    if (v44 >= (v8 >> 32) - (int)v8) {
                      size_t v45 = (v8 >> 32) - (int)v8;
                    }
                    else {
                      size_t v45 = v44;
                    }
                    if (!v73) {
                      goto LABEL_150;
                    }
                    uint64_t v3 = v77;
                    if (!v42) {
                      goto LABEL_151;
                    }
                    int v29 = memcmp(v73, v42, v45);
                    sub_259261F50(v8, v7);
                    swift_release();
                    swift_release();
LABEL_72:
                    sub_259261F50(v8, v7);
LABEL_104:
                    sub_259261F50(v6, v5);
                    if (v29) {
                      return 0;
                    }
                  }
                  else
                  {
                    uint64_t v60 = *(void *)(v8 + 16);
                    uint64_t v59 = *(void *)(v8 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v61 = (char *)sub_2593091E0();
                    if (v61)
                    {
                      uint64_t v62 = sub_259309210();
                      if (__OFSUB__(v60, v62)) {
                        goto LABEL_142;
                      }
                      v61 += v60 - v62;
                    }
                    BOOL v17 = __OFSUB__(v59, v60);
                    int64_t v63 = v59 - v60;
                    if (v17) {
                      goto LABEL_137;
                    }
                    uint64_t v64 = sub_259309200();
                    if (v64 >= v63) {
                      size_t v65 = v63;
                    }
                    else {
                      size_t v65 = v64;
                    }
                    uint64_t v3 = v77;
                    if (!v73) {
                      goto LABEL_155;
                    }
                    if (!v61) {
                      goto LABEL_156;
                    }
                    int v66 = memcmp(v73, v61, v65);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    sub_259261F50(v8, v7);
                    sub_259261F50(v6, v5);
                    if (v66) {
                      return 0;
                    }
                  }
                }
                else
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v73) {
                    goto LABEL_154;
                  }
                  int v58 = memcmp(v73, __s1, BYTE6(v7));
                  swift_release();
LABEL_117:
                  swift_release();
                  sub_259261F50(v8, v7);
                  sub_259261F50(v6, v5);
                  if (v58) {
                    return 0;
                  }
                }
                break;
              case 3:
                memset(__s1, 0, 14);
                if (!v13) {
                  goto LABEL_58;
                }
                uint64_t v75 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_131;
                  }
                  sub_259261DE0(v8, v7);
                  uint64_t v34 = sub_2593091E0();
                  if (!v34) {
                    goto LABEL_149;
                  }
                  uint64_t v20 = v34;
                  uint64_t v35 = sub_259309210();
                  uint64_t v22 = (int)v8 - v35;
                  if (__OFSUB__((int)v8, v35)) {
                    goto LABEL_133;
                  }
LABEL_53:
                  uint64_t v36 = sub_259309200();
                  if (v36 >= v18) {
                    size_t v37 = v18;
                  }
                  else {
                    size_t v37 = v36;
                  }
                  int v38 = memcmp(__s1, (const void *)(v20 + v22), v37);
                  sub_259261F50(v8, v7);
                  sub_259261F50(v6, v5);
                  uint64_t v3 = v75;
                  if (v38) {
                    return 0;
                  }
                  break;
                }
                uint64_t v52 = *(void *)(v8 + 16);
                uint64_t v53 = *(void *)(v8 + 24);
                sub_259261DE0(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v48 = sub_2593091E0();
                if (v48)
                {
                  uint64_t v54 = sub_259309210();
                  if (__OFSUB__(v52, v54)) {
                    goto LABEL_141;
                  }
                  v48 += v52 - v54;
                }
                BOOL v17 = __OFSUB__(v53, v52);
                int64_t v50 = v53 - v52;
                if (v17) {
                  goto LABEL_136;
                }
                uint64_t v51 = sub_259309200();
                uint64_t v3 = v75;
                if (!v48) {
                  goto LABEL_153;
                }
LABEL_84:
                if (v51 >= v50) {
                  size_t v55 = v50;
                }
                else {
                  size_t v55 = v51;
                }
                uint64_t v56 = __s1;
                uint64_t v57 = (const void *)v48;
                goto LABEL_116;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = BYTE4(v5);
                BYTE5(__s1[1]) = BYTE5(v5);
                if (!v13)
                {
LABEL_58:
                  uint64_t v78 = v8;
                  __int16 v79 = v7;
                  char v80 = BYTE2(v7);
                  char v81 = BYTE3(v7);
                  char v82 = BYTE4(v7);
                  char v83 = BYTE5(v7);
                  sub_259261DE0(v8, v7);
                  uint64_t v39 = __s1;
                  uint64_t v40 = &v78;
                  size_t v41 = BYTE6(v7);
                  goto LABEL_103;
                }
                uint64_t v75 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_130;
                  }
                  sub_259261DE0(v8, v7);
                  uint64_t v19 = sub_2593091E0();
                  if (!v19)
                  {
                    sub_259309200();
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    sub_259309200();
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
                    JUMPOUT(0x25926E0ACLL);
                  }
                  uint64_t v20 = v19;
                  uint64_t v21 = sub_259309210();
                  uint64_t v22 = (int)v8 - v21;
                  if (__OFSUB__((int)v8, v21)) {
                    goto LABEL_132;
                  }
                  goto LABEL_53;
                }
                uint64_t v46 = *(void *)(v8 + 16);
                uint64_t v47 = *(void *)(v8 + 24);
                sub_259261DE0(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v48 = sub_2593091E0();
                if (v48)
                {
                  uint64_t v49 = sub_259309210();
                  if (__OFSUB__(v46, v49)) {
                    goto LABEL_140;
                  }
                  v48 += v46 - v49;
                }
                BOOL v17 = __OFSUB__(v47, v46);
                int64_t v50 = v47 - v46;
                if (v17) {
                  goto LABEL_135;
                }
                uint64_t v51 = sub_259309200();
                uint64_t v3 = v75;
                if (!v48) {
                  goto LABEL_152;
                }
                goto LABEL_84;
            }
          }
          if (!--v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v16 = *(void *)(v8 + 16);
          uint64_t v15 = *(void *)(v8 + 24);
          BOOL v17 = __OFSUB__(v15, v16);
          uint64_t v14 = v15 - v16;
          if (!v17) {
            goto LABEL_19;
          }
          goto LABEL_126;
        case 3uLL:
          if (!v10) {
            goto LABEL_6;
          }
          sub_259261DE0(v8, v7);
LABEL_121:
          sub_259261F50(v6, v5);
          return 0;
        default:
          uint64_t v14 = BYTE6(v7);
          goto LABEL_19;
      }
    }
  }
  return 1;
}

uint64_t sub_25926E0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259309440();
  MEMORY[0x270FA5388](v4);
  v8.n128_f64[0] = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v24 = 1;
    }
    else
    {
      uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      uint64_t v13 = v6 + 16;
      uint64_t v32 = v7;
      uint64_t v33 = v14;
      uint64_t v15 = (v12 + 32) & ~v12;
      uint64_t v16 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      uint64_t v30 = v16;
      uint64_t v31 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v11 - 1;
      uint64_t v18 = v7;
      do
      {
        uint64_t v19 = a1;
        uint64_t v20 = v10;
        uint64_t v21 = v10;
        uint64_t v22 = v33;
        ((void (*)(char *, uint64_t, uint64_t, __n128))v33)(v20, a1 + v15, v4, v8);
        uint64_t v23 = a2;
        v22(v18, a2 + v15, v4);
        uint64_t v10 = v21;
        sub_2592732BC(&qword_26A37E2A0, MEMORY[0x263F07508]);
        char v24 = sub_259309B60();
        uint64_t v25 = *v31;
        (*v31)(v18, v4);
        v25(v21, v4);
        BOOL v27 = v17-- != 0;
        if ((v24 & 1) == 0) {
          break;
        }
        v15 += v30;
        a2 = v23;
        a1 = v19;
      }
      while (v27);
    }
  }
  else
  {
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_25926E2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoredPhotoLayoutProto(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_15:
    char v18 = 0;
    return v18 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v23 = *(void *)(v8 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_25927316C(a1 + v12, (uint64_t)v10, type metadata accessor for StoredPhotoLayoutProto);
      sub_25927316C(a2 + v12, (uint64_t)v6, type metadata accessor for StoredPhotoLayoutProto);
      uint64_t v14 = *(int *)(v4 + 20);
      uint64_t v15 = *(void *)&v10[v14];
      uint64_t v16 = *(void *)&v6[v14];
      if (v15 != v16)
      {
        swift_retain();
        swift_retain();
        char v17 = sub_2592BD998(v15, v16);
        swift_release();
        swift_release();
        if ((v17 & 1) == 0) {
          break;
        }
      }
      sub_2593095B0();
      sub_2592732BC(&qword_26A37E3E0, MEMORY[0x263F50560]);
      char v18 = sub_259309B60();
      sub_2592731D4((uint64_t)v6, type metadata accessor for StoredPhotoLayoutProto);
      sub_2592731D4((uint64_t)v10, type metadata accessor for StoredPhotoLayoutProto);
      BOOL v20 = v13-- != 0;
      if (v18)
      {
        v12 += v23;
        if (v20) {
          continue;
        }
      }
      return v18 & 1;
    }
    sub_2592731D4((uint64_t)v6, type metadata accessor for StoredPhotoLayoutProto);
    sub_2592731D4((uint64_t)v10, type metadata accessor for StoredPhotoLayoutProto);
    goto LABEL_15;
  }
  char v18 = 1;
  return v18 & 1;
}

uint64_t sub_25926E56C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_25930A7C0(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (unint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_25930A7C0() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_25926E634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StoredPhoto(0);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    while (1)
    {
      sub_25927316C(a1 + v12, (uint64_t)v10, type metadata accessor for StoredPhoto);
      sub_25927316C(a2 + v12, (uint64_t)v6, type metadata accessor for StoredPhoto);
      if ((sub_259309400() & 1) == 0
        || (sub_2593093B0() & 1) == 0
        || *(double *)&v10[v4[6]] != *(double *)&v6[v4[6]]
        || *(void *)&v10[v4[7]] != *(void *)&v6[v4[7]]
        || (sub_25925C6F0(*(void *)&v10[v4[8]], *(void *)&v6[v4[8]]) & 1) == 0)
      {
        break;
      }
      uint64_t v15 = v4[9];
      uint64_t v16 = &v10[v15];
      uint64_t v17 = *(void *)&v10[v15 + 8];
      char v18 = &v6[v15];
      uint64_t v19 = *((void *)v18 + 1);
      if (v17)
      {
        if (!v19 || (*(void *)v16 != *(void *)v18 || v17 != v19) && (sub_25930A7C0() & 1) == 0) {
          break;
        }
      }
      else if (v19)
      {
        break;
      }
      sub_2592731D4((uint64_t)v6, type metadata accessor for StoredPhoto);
      sub_2592731D4((uint64_t)v10, type metadata accessor for StoredPhoto);
      v12 += v13;
      uint64_t result = 1;
      if (!--v11) {
        return result;
      }
    }
    sub_2592731D4((uint64_t)v6, type metadata accessor for StoredPhoto);
    sub_2592731D4((uint64_t)v10, type metadata accessor for StoredPhoto);
  }
  return 0;
}

uint64_t SyncFacesRequest.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_25930A8C0();
  swift_bridgeObjectRetain();
  sub_259272000((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_259272000((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_25930A910();
}

uint64_t sub_25926E904()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_25930A8C0();
  swift_bridgeObjectRetain();
  sub_259272000((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_259272000((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_25930A910();
}

uint64_t sub_25926E978(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  swift_bridgeObjectRetain();
  sub_259272000(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_259272000(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25926E9E8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_25930A8C0();
  swift_bridgeObjectRetain();
  sub_259272000((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_259272000((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_25930A910();
}

uint64_t sub_25926EA58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_25926E0DC(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return sub_25926E0DC(v2, v3);
}

uint64_t SyncFacesRequest.init(protobuf:version:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v35 = sub_259309440();
  uint64_t v4 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v29 - v6;
  uint64_t v8 = *a1;
  int64_t v9 = *(void *)(*a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v31 = a1;
  uint64_t v29 = v11;
  if (v9)
  {
    uint64_t v36 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25925CBB8(0, v9, 0);
    uint64_t v12 = v36;
    uint64_t v34 = v4 + 32;
    uint64_t v32 = v8;
    uint64_t v13 = (unint64_t *)(v8 + 40);
    while (1)
    {
      uint64_t v14 = *(v13 - 1);
      unint64_t v15 = *v13;
      sub_259261DE0(v14, *v13);
      sub_259261DE0(v14, v15);
      UUID.init(serialized:version:)(v14, v15);
      if (v2) {
        break;
      }
      sub_259261F50(v14, v15);
      uint64_t v36 = v12;
      unint64_t v17 = *(void *)(v12 + 16);
      unint64_t v16 = *(void *)(v12 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_25925CBB8(v16 > 1, v17 + 1, 1);
        uint64_t v12 = v36;
      }
      v13 += 2;
      *(void *)(v12 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v12+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v17, v7, v35);
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        a1 = v31;
        uint64_t v10 = MEMORY[0x263F8EE78];
        goto LABEL_10;
      }
    }
    sub_259261F50(v14, v15);
    goto LABEL_19;
  }
  uint64_t v12 = MEMORY[0x263F8EE78];
LABEL_10:
  uint64_t v18 = a1[1];
  int64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v36 = v10;
    swift_bridgeObjectRetain();
    sub_25925CBB8(0, v19, 0);
    uint64_t v20 = v36;
    uint64_t v33 = v4 + 32;
    uint64_t v34 = v4;
    uint64_t v32 = v18;
    uint64_t v21 = (unint64_t *)(v18 + 40);
    uint64_t v22 = v29;
    while (1)
    {
      uint64_t v23 = *(v21 - 1);
      unint64_t v24 = *v21;
      sub_259261DE0(v23, *v21);
      sub_259261DE0(v23, v24);
      UUID.init(serialized:version:)(v23, v24);
      if (v2) {
        break;
      }
      sub_259261F50(v23, v24);
      uint64_t v36 = v20;
      unint64_t v26 = *(void *)(v20 + 16);
      unint64_t v25 = *(void *)(v20 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_25925CBB8(v25 > 1, v26 + 1, 1);
        uint64_t v20 = v36;
      }
      v21 += 2;
      *(void *)(v20 + 16) = v26 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v34 + 32))(v20+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v26, v22, v35);
      if (!--v19)
      {
        size_t v28 = v30;
        a1 = v31;
        goto LABEL_20;
      }
    }
    sub_259261F50(v23, v24);
    swift_bridgeObjectRelease();
LABEL_19:
    swift_release();
    sub_2592731D4((uint64_t)v31, type metadata accessor for SyncFacesRequestProto);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = MEMORY[0x263F8EE78];
  size_t v28 = v30;
LABEL_20:
  sub_2592731D4((uint64_t)a1, type metadata accessor for SyncFacesRequestProto);
  uint64_t result = swift_bridgeObjectRelease();
  *size_t v28 = v12;
  v28[1] = v20;
  return result;
}

uint64_t SyncFacesRequest.protobuf(version:)()
{
  return sub_259309750();
}

uint64_t sub_25926EF28(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v48 = a3;
  uint64_t v63 = *MEMORY[0x263EF8340];
  uint64_t v5 = sub_259309440();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v47 = a1;
  if (v9)
  {
    uint64_t v62 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25925CE14(0, v9, 0);
    uint64_t v52 = v6;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v11 = v6 + 16;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v46 = a2;
    uint64_t v14 = a2 + ((v13 + 32) & ~v13);
    uint64_t v49 = *(void *)(v11 + 56);
    int64_t v50 = v12;
    uint64_t v51 = (void (*)(char *, uint64_t, uint64_t))v11;
    do
    {
      v50(v8, v14, v5);
      uint64_t v53 = sub_259309420();
      char v54 = v15;
      char v55 = v16;
      char v56 = v17;
      char v57 = v18;
      char v58 = v19;
      char v59 = v20;
      char v60 = v21;
      char v61 = v22;
      sub_259309420();
      sub_259309220();
      swift_allocObject();
      uint64_t v23 = sub_2593091D0();
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v5);
      uint64_t v10 = v62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CE14(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v62;
      }
      unint64_t v25 = *(void *)(v10 + 16);
      unint64_t v24 = *(void *)(v10 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_25925CE14(v24 > 1, v25 + 1, 1);
        uint64_t v10 = v62;
      }
      *(void *)(v10 + 16) = v25 + 1;
      uint64_t v26 = v10 + 16 * v25;
      *(void *)(v26 + 32) = 0x1000000000;
      *(void *)(v26 + 40) = v23 | 0x4000000000000000;
      v14 += v49;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    a1 = v47;
    uint64_t v6 = v52;
  }
  swift_bridgeObjectRelease();
  *a1 = v10;
  uint64_t v27 = v48;
  int64_t v28 = *(void *)(v48 + 16);
  uint64_t v29 = MEMORY[0x263F8EE78];
  if (v28)
  {
    uint64_t v62 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25925CE14(0, v28, 0);
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v30 = v6 + 16;
    uint64_t v32 = v27 + ((*(unsigned __int8 *)(v30 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 64));
    int64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 56);
    uint64_t v51 = v31;
    uint64_t v52 = v30;
    do
    {
      v51(v8, v32, v5);
      uint64_t v53 = sub_259309420();
      char v54 = v33;
      char v55 = v34;
      char v56 = v35;
      char v57 = v36;
      char v58 = v37;
      char v59 = v38;
      char v60 = v39;
      char v61 = v40;
      sub_259309420();
      sub_259309220();
      swift_allocObject();
      uint64_t v41 = sub_2593091D0();
      (*(void (**)(char *, uint64_t))(v30 - 8))(v8, v5);
      uint64_t v29 = v62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CE14(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v29 = v62;
      }
      unint64_t v43 = *(void *)(v29 + 16);
      unint64_t v42 = *(void *)(v29 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_25925CE14(v42 > 1, v43 + 1, 1);
        uint64_t v29 = v62;
      }
      *(void *)(v29 + 16) = v43 + 1;
      uint64_t v44 = v29 + 16 * v43;
      *(void *)(v44 + 32) = 0x1000000000;
      *(void *)(v44 + 40) = v41 | 0x4000000000000000;
      v32 += (uint64_t)v50;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
    a1 = v47;
  }
  uint64_t result = swift_bridgeObjectRelease();
  a1[1] = v29;
  return result;
}

uint64_t sub_25926F3DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SyncFacesRequest.init(protobuf:version:)(a1, a2);
}

uint64_t sub_25926F3F4()
{
  return sub_259309750();
}

uint64_t SyncedPhotosFace.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t SyncedPhotosFace.day.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 36));
}

uint64_t SyncedPhotosFace.uncached.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncedPhotosFace.cached.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncedPhotosFace.complete.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 48));
}

uint64_t SyncedPhotosFace.photos.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_25926CC44(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_25925C110(v2);
  return v1;
}

int *SyncedPhotosFace.init(id:day:uncached:cached:complete:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7, a1, a6);
  uint64_t result = (int *)type metadata accessor for SyncedPhotosFace();
  *(void *)(a7 + result[10]) = a3;
  *(void *)(a7 + result[9]) = a2;
  *(void *)(a7 + result[11]) = a4;
  *(unsigned char *)(a7 + result[12]) = a5;
  return result;
}

uint64_t SyncedPhotosFace.description.getter()
{
  sub_25930A3E0();
  sub_259309C20();
  sub_25930A790();
  sub_259309C20();
  SyncedPhotosFace.photos.getter();
  swift_bridgeObjectRelease();
  sub_25930A730();
  sub_259309C20();
  swift_bridgeObjectRelease();
  sub_259309C20();
  sub_25930A730();
  sub_259309C20();
  swift_bridgeObjectRelease();
  sub_259309C20();
  uint64_t v0 = sub_259309440();
  uint64_t v1 = swift_bridgeObjectRetain();
  MEMORY[0x25A2DA610](v1, v0);
  sub_259309C20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259309C20();
  SyncedPhotosFace.photos.getter();
  MEMORY[0x25A2DA610]();
  sub_259309C20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259309C20();
  sub_259309C20();
  swift_bridgeObjectRelease();
  sub_259309C20();
  return 0;
}

uint64_t SyncedPhotosFace.contentDescription.getter(uint64_t a1)
{
  uint64_t v31 = sub_259309440();
  uint64_t v3 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *(void *)(v1 + *(int *)(a1 + 36));
  uint64_t v33 = sub_25930A730();
  uint64_t v34 = v5;
  sub_259309C20();
  uint64_t v6 = SyncedPhotosFace.photos.getter();
  int64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v32 = MEMORY[0x263F8EE78];
    sub_25925CE34(0, v7, 0);
    int64_t v9 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    unint64_t v10 = v6 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v27 = *(void *)(v8 + 56);
    int64_t v28 = v9;
    uint64_t v25 = v6;
    uint64_t v26 = (void (**)(char *, uint64_t))(v8 - 8);
    uint64_t v29 = v8;
    do
    {
      uint64_t v12 = v30;
      uint64_t v11 = v31;
      v28(v30, v10, v31);
      sub_2593093F0();
      sub_259309C10();
      uint64_t v13 = sub_259309CA0();
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      (*v26)(v12, v11);
      uint64_t v20 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CE34(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v32;
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v21 = *(void *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_25925CE34(v21 > 1, v22 + 1, 1);
        uint64_t v20 = v32;
      }
      *(void *)(v20 + 16) = v22 + 1;
      uint64_t v23 = (void *)(v20 + 32 * v22);
      v23[4] = v13;
      v23[5] = v15;
      v23[6] = v17;
      v23[7] = v19;
      v10 += v27;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = MEMORY[0x263F8EE78];
  }
  uint64_t v32 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E328);
  sub_259273278(&qword_26A37E330, &qword_26A37E328);
  sub_2592722AC();
  sub_259309D40();
  swift_bridgeObjectRelease();
  sub_259309C20();
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t SyncedPhotosFace.hash(into:)(long long *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_259309B20();
  sub_25930A8D0();
  uint64_t v6 = *(void *)(v2 + *(int *)(a2 + 40));
  swift_bridgeObjectRetain();
  sub_259272300(a1, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v3 + *(int *)(a2 + 44));
  swift_bridgeObjectRetain();
  sub_259272000((uint64_t)a1, v7);
  swift_bridgeObjectRelease();
  return sub_25930A8E0();
}

uint64_t static SyncedPhotosFace.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_259309B60() & 1) != 0
    && (uint64_t v4 = type metadata accessor for SyncedPhotosFace(),
        *(void *)(a1 + *(int *)(v4 + 36)) == *(void *)(a2 + *(int *)(v4 + 36)))
    && (uint64_t v5 = v4, (sub_25926E634(*(void *)(a1 + *(int *)(v4 + 40)), *(void *)(a2 + *(int *)(v4 + 40))) & 1) != 0)
    && (sub_25926E0DC(*(void *)(a1 + *(int *)(v5 + 44)), *(void *)(a2 + *(int *)(v5 + 44))) & 1) != 0)
  {
    char v6 = *(unsigned char *)(a1 + *(int *)(v5 + 48)) ^ *(unsigned char *)(a2 + *(int *)(v5 + 48)) ^ 1;
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t SyncedPhotosFace.hashValue.getter(uint64_t a1)
{
  sub_25930A8C0();
  SyncedPhotosFace.hash(into:)(v3, a1);
  return sub_25930A910();
}

uint64_t sub_25926FD88(uint64_t a1, uint64_t a2)
{
  sub_25930A8C0();
  SyncedPhotosFace.hash(into:)(v4, a2);
  return sub_25930A910();
}

uint64_t sub_25926FDD0(uint64_t a1, uint64_t a2)
{
  return static SyncedPhotosFace.== infix(_:_:)(a1, a2);
}

uint64_t SyncedPhotosFace.streamify()(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + *(int *)(v8 + 44));
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (*(void *)(v9 + 16))
  {
    sub_25930A740();
    swift_allocObject();
    uint64_t v27 = sub_259309DC0();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
    uint64_t v13 = *(void *)(v2 + *(int *)(a1 + 36));
    uint64_t v14 = *(void *)(a1 + 24);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v12, v7, v4);
    uint64_t v15 = (int *)type metadata accessor for SyncedPhotosFace();
    *(void *)(v12 + v15[10]) = v10;
    *(void *)(v12 + v15[9]) = v13;
    *(void *)(v12 + v15[11]) = v9;
    *(unsigned char *)(v12 + v15[12]) = 0;
    sub_259309E70();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v27 = sub_259309DF0();
    uint64_t v14 = *(void *)(a1 + 24);
  }
  uint64_t v28 = *(void *)(v2 + *(int *)(a1 + 40));
  MEMORY[0x270FA5388](v28);
  *(&v26 - 4) = v4;
  *(&v26 - 3) = v14;
  *(&v26 - 2) = v2;
  swift_bridgeObjectRetain();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E340);
  uint64_t v17 = sub_259273278(&qword_26A37E348, &qword_26A37E340);
  sub_259255A84((void (*)(char *, char *))sub_25927257C, (uint64_t)(&v26 - 6), v16, a1, MEMORY[0x263F8E628], v17, MEMORY[0x263F8E658], v18);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v2 + *(int *)(a1 + 48)) == 1)
  {
    sub_25930A740();
    swift_allocObject();
    sub_259309DC0();
    uint64_t v20 = v19;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
    uint64_t v21 = *(void *)(v2 + *(int *)(a1 + 36));
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v20, v7, v4);
    unint64_t v22 = (int *)type metadata accessor for SyncedPhotosFace();
    uint64_t v23 = MEMORY[0x263F8EE78];
    *(void *)(v20 + v22[10]) = MEMORY[0x263F8EE78];
    *(void *)(v20 + v22[9]) = v21;
    *(void *)(v20 + v22[11]) = v23;
    *(unsigned char *)(v20 + v22[12]) = 1;
    sub_259309E70();
  }
  else
  {
    sub_259309DF0();
  }
  sub_259309DE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_259309DE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_259270204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  double v9 = MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v8 + 16))(v11, v9);
  uint64_t v12 = (int *)type metadata accessor for SyncedPhotosFace();
  uint64_t v13 = *(void *)(a2 + v12[9]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF08);
  uint64_t v14 = *(void *)(type metadata accessor for StoredPhoto(0) - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2593131D0;
  sub_25927316C(a1, v16 + v15, type metadata accessor for StoredPhoto);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a4, v11, a3);
  *(void *)(a4 + v12[10]) = v16;
  *(void *)(a4 + v12[9]) = v13;
  *(void *)(a4 + v12[11]) = MEMORY[0x263F8EE78];
  *(unsigned char *)(a4 + v12[12]) = 0;
  return result;
}

uint64_t static SyncedPhotosFace.destreamify(_:)()
{
  swift_getKeyPath();
  type metadata accessor for SyncedPhotosFace();
  sub_259309E70();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_259309AD0();
  swift_release();
  sub_259309AE0();
  swift_getWitnessTable();
  uint64_t v0 = sub_259309D20();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_259270570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  swift_getKeyPath();
  uint64_t v7 = type metadata accessor for SyncedPhotosFace();
  sub_259309E70();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v8 = sub_259309AD0();
  swift_release();
  uint64_t v21 = v8;
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a1;
  void v14[2] = a3;
  v14[3] = a4;
  v14[4] = sub_259273234;
  v14[5] = &v15;
  uint64_t v9 = sub_259309AE0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = sub_259255A84((void (*)(char *, char *))sub_259273240, (uint64_t)v14, v9, v7, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v11);
  swift_bridgeObjectRelease();
  return v12;
}

int *sub_259270720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v18 = a1;
  uint64_t v9 = *(void *)(a3 - 8);
  double v10 = MEMORY[0x270FA5388](a1);
  uint64_t v17 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(v9 + 16))(v10);
  uint64_t v23 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  swift_getKeyPath();
  v14[1] = a4;
  type metadata accessor for SyncedPhotosFace();
  sub_259309E70();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E340);
  swift_getWitnessTable();
  sub_259273278(&qword_26A37E3E8, &qword_26A37E340);
  uint64_t v15 = sub_259309D20();
  swift_release();
  uint64_t v23 = v16;
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E3F0);
  sub_259273278(&qword_26A37E3F8, &qword_26A37E3F0);
  uint64_t v12 = sub_259309D20();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a5, v17, a3);
  uint64_t result = (int *)type metadata accessor for SyncedPhotosFace();
  *(void *)(a5 + result[10]) = v15;
  *(void *)(a5 + result[9]) = v18;
  *(void *)(a5 + result[11]) = v12;
  *(unsigned char *)(a5 + result[12]) = 1;
  return result;
}

uint64_t sub_2592709B4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void)@<X1>, uint64_t *a3@<X8>)
{
  type metadata accessor for SyncedPhotosFace();
  sub_259309E70();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = a2(a1, *(void *)(a1 + *(int *)(TupleTypeMetadata2 + 48)));
  *a3 = result;
  return result;
}

int *SyncedPhotosFace.init(protobuf:version:)@<X0>(void *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v48 = a5;
  uint64_t v54 = sub_259309440();
  uint64_t v56 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  char v55 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StoredPhotoProto(0);
  uint64_t v57 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v60 = (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v47 - v14;
  uint64_t v16 = type metadata accessor for StoredPhoto(0);
  uint64_t v58 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v52 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = a1;
  LODWORD(v61) = *a2;
  uint64_t v21 = a1[2];
  int64_t v22 = *(void *)(v21 + 16);
  uint64_t v23 = MEMORY[0x263F8EE78];
  uint64_t v59 = a4;
  if (v22)
  {
    uint64_t v50 = a3;
    uint64_t v63 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25925CCA4(0, v22, 0);
    uint64_t v24 = *(unsigned __int8 *)(v57 + 80);
    uint64_t v49 = v21;
    uint64_t v25 = v21 + ((v24 + 32) & ~v24);
    uint64_t v57 = *(void *)(v57 + 72);
    while (1)
    {
      sub_25927316C(v25, (uint64_t)v15, type metadata accessor for StoredPhotoProto);
      uint64_t v26 = v60;
      sub_25927316C((uint64_t)v15, v60, type metadata accessor for StoredPhotoProto);
      unsigned __int8 v62 = v61;
      StoredPhoto.init(protobuf:version:)(v26, &v62, (uint64_t)v18);
      sub_2592731D4((uint64_t)v15, type metadata accessor for StoredPhotoProto);
      uint64_t v23 = v63;
      if (v5) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CCA4(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = v63;
      }
      unint64_t v28 = *(void *)(v23 + 16);
      unint64_t v27 = *(void *)(v23 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_25925CCA4(v27 > 1, v28 + 1, 1);
        uint64_t v23 = v63;
      }
      *(void *)(v23 + 16) = v28 + 1;
      sub_25926BB14((uint64_t)v18, v23+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v28, type metadata accessor for StoredPhoto);
      v25 += v57;
      --v22;
      a4 = v59;
      if (!v22)
      {
        swift_bridgeObjectRelease();
        a3 = v50;
        goto LABEL_11;
      }
    }
    swift_release();
    sub_2592731D4((uint64_t)v53, type metadata accessor for SyncedPhotosFaceProto);
    return (int *)swift_bridgeObjectRelease();
  }
LABEL_11:
  uint64_t v29 = v53;
  uint64_t v30 = *v53;
  unint64_t v31 = v53[1];
  LOBYTE(v63) = v61;
  uint64_t v32 = *(void *)(a4 + 8);
  uint64_t v33 = *(void (**)(uint64_t, unint64_t, uint64_t *, uint64_t, uint64_t))(v32 + 8);
  sub_259261DE0(v30, v31);
  v33(v30, v31, &v63, a3, v32);
  if (v5)
  {
    sub_2592731D4((uint64_t)v29, type metadata accessor for SyncedPhotosFaceProto);
    return (int *)swift_bridgeObjectRelease();
  }
  uint64_t result = (int *)type metadata accessor for SyncedPhotosFaceProto(0);
  char v35 = (char *)v29 + result[9];
  if (v35[8]) {
    uint64_t v36 = 0;
  }
  else {
    uint64_t v36 = *(void *)v35;
  }
  if (v36 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v37 = v29[3];
    int64_t v38 = *(void *)(v37 + 16);
    uint64_t v39 = MEMORY[0x263F8EE78];
    if (v38)
    {
      uint64_t v60 = v36;
      uint64_t v50 = a3;
      uint64_t v63 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_25925CBB8(0, v38, 0);
      uint64_t v39 = v63;
      uint64_t v61 = v37;
      char v40 = (unint64_t *)(v37 + 40);
      do
      {
        uint64_t v41 = *(v40 - 1);
        unint64_t v42 = *v40;
        sub_259261DE0(v41, *v40);
        sub_259261DE0(v41, v42);
        UUID.init(serialized:version:)(v41, v42);
        sub_259261F50(v41, v42);
        uint64_t v63 = v39;
        unint64_t v44 = *(void *)(v39 + 16);
        unint64_t v43 = *(void *)(v39 + 24);
        if (v44 >= v43 >> 1)
        {
          sub_25925CBB8(v43 > 1, v44 + 1, 1);
          uint64_t v39 = v63;
        }
        v40 += 2;
        *(void *)(v39 + 16) = v44 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v39+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v44, v55, v54);
        --v38;
      }
      while (v38);
      swift_bridgeObjectRelease();
      a3 = v50;
      uint64_t v29 = v53;
      uint64_t v36 = v60;
    }
    char v45 = *((unsigned char *)v29 + 32);
    sub_2592731D4((uint64_t)v29, type metadata accessor for SyncedPhotosFaceProto);
    uint64_t v46 = v48;
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v48, v52, a3);
    uint64_t result = (int *)type metadata accessor for SyncedPhotosFace();
    *(void *)(v46 + result[10]) = v23;
    *(void *)(v46 + result[9]) = v36;
    *(void *)(v46 + result[11]) = v39;
    *(unsigned char *)(v46 + result[12]) = v45;
  }
  return result;
}

uint64_t SyncedPhotosFace.protobuf(version:)()
{
  return sub_259309750();
}

uint64_t sub_2592711C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  LODWORD(v69) = a3;
  uint64_t v64 = a1;
  uint64_t v80 = *MEMORY[0x263EF8340];
  uint64_t v66 = sub_259309440();
  v59[0] = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  size_t v65 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StoredPhoto(0);
  uint64_t v67 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StoredPhotoProto(0);
  uint64_t v68 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SyncedPhotosFace();
  uint64_t v18 = (int *)v17;
  uint64_t v19 = *(int *)(v17 + 40);
  uint64_t v63 = a2;
  uint64_t v20 = *(void *)(a2 + v19);
  int64_t v21 = *(void *)(v20 + 16);
  uint64_t v22 = MEMORY[0x263F8EE78];
  if (v21)
  {
    uint64_t v60 = a5;
    uint64_t v61 = a4;
    unsigned __int8 v62 = (int *)v17;
    uint64_t v70 = MEMORY[0x263F8EE78];
    uint64_t v23 = v20;
    swift_bridgeObjectRetain();
    sub_25925CDD8(0, v21, 0);
    uint64_t v24 = *(unsigned __int8 *)(v67 + 80);
    v59[1] = v23;
    uint64_t v25 = v23 + ((v24 + 32) & ~v24);
    uint64_t v67 = *(void *)(v67 + 72);
    do
    {
      uint64_t v26 = sub_25927316C(v25, (uint64_t)v13, type metadata accessor for StoredPhoto);
      MEMORY[0x270FA5388](v26);
      sub_2592732BC(&qword_26A37E308, (void (*)(uint64_t))type metadata accessor for StoredPhotoProto);
      uint64_t v27 = v6;
      sub_259309750();
      sub_2592731D4((uint64_t)v13, type metadata accessor for StoredPhoto);
      uint64_t v22 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CDD8(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v70;
      }
      unint64_t v29 = *(void *)(v22 + 16);
      unint64_t v28 = *(void *)(v22 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_25925CDD8(v28 > 1, v29 + 1, 1);
        uint64_t v22 = v70;
      }
      *(void *)(v22 + 16) = v29 + 1;
      sub_25926BB14((uint64_t)v16, v22+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v29, type metadata accessor for StoredPhotoProto);
      v25 += v67;
      --v21;
      uint64_t v6 = v27;
    }
    while (v21);
    swift_bridgeObjectRelease();
    a4 = v61;
    uint64_t v18 = v62;
    a5 = v60;
  }
  uint64_t v30 = v64;
  swift_bridgeObjectRelease();
  *(void *)(v30 + 16) = v22;
  LOBYTE(v70) = (_BYTE)v69;
  uint64_t v31 = v63;
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(a5 + 8) + 16))(&v70, a4);
  if (!v6)
  {
    uint64_t v34 = result;
    uint64_t v35 = v33;
    sub_259261F50(*(void *)v30, *(void *)(v30 + 8));
    *(void *)uint64_t v30 = v34;
    *(void *)(v30 + 8) = v35;
    uint64_t v36 = *(void *)(v31 + v18[11]);
    int64_t v37 = *(void *)(v36 + 16);
    uint64_t v38 = MEMORY[0x263F8EE78];
    if (v37)
    {
      uint64_t v67 = 0;
      unsigned __int8 v62 = v18;
      uint64_t v79 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_25925CE14(0, v37, 0);
      uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v59[0] + 16);
      uint64_t v40 = *(unsigned __int8 *)(v59[0] + 80);
      uint64_t v61 = v36;
      uint64_t v41 = v36 + ((v40 + 32) & ~v40);
      uint64_t v68 = *(void *)(v59[0] + 72);
      uint64_t v69 = v39;
      unint64_t v42 = (void (**)(char *, uint64_t))(v59[0] + 8);
      do
      {
        unint64_t v44 = v65;
        uint64_t v43 = v66;
        v69(v65, v41, v66);
        uint64_t v70 = sub_259309420();
        char v71 = v45;
        char v72 = v46;
        char v73 = v47;
        char v74 = v48;
        char v75 = v49;
        char v76 = v50;
        char v77 = v51;
        char v78 = v52;
        sub_259309420();
        sub_259309220();
        swift_allocObject();
        uint64_t v53 = sub_2593091D0();
        (*v42)(v44, v43);
        uint64_t v38 = v79;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25925CE14(0, *(void *)(v38 + 16) + 1, 1);
          uint64_t v38 = v79;
        }
        unint64_t v55 = *(void *)(v38 + 16);
        unint64_t v54 = *(void *)(v38 + 24);
        if (v55 >= v54 >> 1)
        {
          sub_25925CE14(v54 > 1, v55 + 1, 1);
          uint64_t v38 = v79;
        }
        *(void *)(v38 + 16) = v55 + 1;
        uint64_t v56 = v38 + 16 * v55;
        *(void *)(v56 + 32) = 0x1000000000;
        *(void *)(v56 + 40) = v53 | 0x4000000000000000;
        v41 += v68;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
      uint64_t v31 = v63;
      uint64_t v30 = v64;
      uint64_t v18 = v62;
    }
    swift_bridgeObjectRelease();
    *(void *)(v30 + 24) = v38;
    *(unsigned char *)(v30 + 32) = *(unsigned char *)(v31 + v18[12]);
    uint64_t v57 = *(void *)(v31 + v18[9]);
    if (v57 < 0)
    {
      uint64_t result = sub_25930A570();
      __break(1u);
    }
    else
    {
      uint64_t result = type metadata accessor for SyncedPhotosFaceProto(0);
      uint64_t v58 = v30 + *(int *)(result + 36);
      *(void *)uint64_t v58 = v57;
      *(unsigned char *)(v58 + 8) = 0;
    }
  }
  return result;
}

Swift::Void __swiftcall SyncedPhotosFace.gather(attachments:version:)(Swift::OpaquePointer *attachments, PhotosFace::ProtocolVersion version)
{
  uint64_t v4 = v2;
  uint64_t v5 = (char *)version;
  uint64_t v7 = type metadata accessor for StoredPhoto(0) - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + *(int *)(v4 + 40));
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    char v13 = *v5;
    uint64_t v14 = v11 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v15 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_25927316C(v14, (uint64_t)v10, type metadata accessor for StoredPhoto);
      char v17 = v13;
      StoredPhoto.gather(attachments:version:)(attachments, (PhotosFace::ProtocolVersion)&v17);
      sub_2592731D4((uint64_t)v10, type metadata accessor for StoredPhoto);
      v14 += v15;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SyncedPhotosFace.save(attachments:version:)(Swift::OpaquePointer attachments, PhotosFace::ProtocolVersion version)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v6 = (char *)version;
  uint64_t v8 = type metadata accessor for StoredPhoto(0);
  uint64_t v31 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = *v6;
  if (qword_26A37C7A8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_259309860();
  __swift_project_value_buffer(v16, (uint64_t)qword_26A37F2D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v4, v5);
  char v17 = sub_259309840();
  os_log_type_t v18 = sub_25930A190();
  int v34 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    unint64_t v29 = v17;
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = v5;
    uint64_t v20 = v19;
    uint64_t v30 = v4;
    *(_DWORD *)uint64_t v19 = 134217984;
    unint64_t v28 = v19 + 4;
    uint64_t v21 = *(void *)(SyncedPhotosFace.photos.getter() + 16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v32);
    uint64_t v33 = v21;
    char v17 = v29;
    uint64_t v4 = v30;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v17, (os_log_type_t)v34, "Saving %ld photos to disk.", v20, 0xCu);
    uint64_t v22 = v20;
    uint64_t v5 = v32;
    MEMORY[0x25A2DBAF0](v22, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v5);
  }

  uint64_t v23 = *(void *)(v4 + *(int *)(v5 + 40));
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v25 = v23 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
    uint64_t v26 = *(void *)(v31 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_25927316C(v25, (uint64_t)v10, type metadata accessor for StoredPhoto);
      char v35 = v15;
      StoredPhoto.save(attachments:version:)(attachments, (PhotosFace::ProtocolVersion)&v35);
      sub_2592731D4((uint64_t)v10, type metadata accessor for StoredPhoto);
      if (v27) {
        break;
      }
      v25 += v26;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
  }
}

int *sub_259271D24@<X0>(void *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v5 = *a2;
  return SyncedPhotosFace.init(protobuf:version:)(a1, &v5, *(void *)(a3 + 16), *(void *)(a3 + 24), a4);
}

uint64_t sub_259271D58()
{
  return SyncedPhotosFace.protobuf(version:)();
}

void sub_259271D74(Swift::OpaquePointer a1, PhotosFace::ProtocolVersion a2)
{
}

uint64_t sub_259271D8C@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_259261DE0(a2, a3);
      uint64_t v10 = (char *)sub_2593091E0();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_259309210();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_259309200();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x259271FF0);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_259261F50(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      char v17 = (char *)sub_2593091E0();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_259309210();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_259309200();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_259272000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259309440();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E408);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v27 = a1;
  sub_25930A8D0();
  if (v11)
  {
    size_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    unint64_t v15 = v12 + 40;
    uint64_t v16 = v12;
    char v17 = (uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32);
    char v24 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v25 = v13;
    uint64_t v18 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v26 = v16;
    uint64_t v19 = *(void *)(v16 + 56);
    unint64_t v22 = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = v19;
    while (1)
    {
      v25(v10, v14, v4);
      int64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v10, 0, 1, v4);
      uint64_t result = (*v17)(v10, 1, v4);
      if (result == 1) {
        break;
      }
      (*v24)(v7, v10, v4);
      sub_2592732BC(&qword_26A37E298, MEMORY[0x263F07508]);
      sub_259309B20();
      (*v18)(v7, v4);
      v14 += v23;
      if (!--v11) {
        return v20(v10, 1, 1, v4);
      }
    }
  }
  else
  {
    int64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v20(v10, 1, 1, v4);
  }
  return result;
}

uint64_t sub_259272274(void *a1)
{
  return sub_25926EF28(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for SyncedPhotosFace()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_2592722AC()
{
  unint64_t result = qword_26A37E338;
  if (!qword_26A37E338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E338);
  }
  return result;
}

uint64_t sub_259272300(long long *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoredPhoto(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t result = sub_25930A8D0();
  if (v8)
  {
    uint64_t v10 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v11 = *(void *)(v5 + 72);
    do
    {
      sub_25927316C(v10, (uint64_t)v7, type metadata accessor for StoredPhoto);
      sub_259309440();
      sub_2592732BC(&qword_26A37E298, MEMORY[0x263F07508]);
      sub_259309B20();
      sub_2593093D0();
      sub_2592732BC(&qword_26A37E400, MEMORY[0x263F07490]);
      sub_259309B20();
      sub_25930A900();
      sub_25930A8D0();
      uint64_t v12 = *(void *)&v7[*(int *)(v4 + 32)];
      swift_bridgeObjectRetain();
      sub_259295BF4(a1, v12);
      swift_bridgeObjectRelease();
      if (*(void *)&v7[*(int *)(v4 + 36) + 8])
      {
        sub_25930A8E0();
        swift_bridgeObjectRetain();
        sub_259309C00();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_25930A8E0();
      }
      uint64_t result = sub_2592731D4((uint64_t)v7, type metadata accessor for StoredPhoto);
      v10 += v11;
      --v8;
    }
    while (v8);
  }
  return result;
}

uint64_t sub_25927257C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_259270204(a1, *(void *)(v2 + 32), *(void *)(v2 + 16), a2);
}

uint64_t sub_2592725A0()
{
  return swift_getAtKeyPath();
}

uint64_t sub_2592725CC(uint64_t a1, uint64_t a2)
{
  return sub_259270570(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_2592725D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2592709B4(a1, *(uint64_t (**)(uint64_t, void))(v2 + 32), a2);
}

uint64_t sub_2592725F4(uint64_t a1)
{
  return sub_2592711C4(a1, *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_25927261C()
{
  unint64_t result = qword_26A37E358[0];
  if (!qword_26A37E358[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A37E358);
  }
  return result;
}

uint64_t sub_259272670()
{
  return sub_2592732BC(&qword_26A37E320, (void (*)(uint64_t))type metadata accessor for SyncFacesRequestProto);
}

uint64_t sub_2592726B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2592726D4()
{
  return sub_2592732BC(&qword_26A37E350, (void (*)(uint64_t))type metadata accessor for SyncedPhotosFaceProto);
}

uint64_t destroy for SyncFacesRequest()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s10PhotosFace16SyncFacesRequestVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SyncFacesRequest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for SyncFacesRequest(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SyncFacesRequest()
{
  return &type metadata for SyncFacesRequest;
}

uint64_t sub_259272844()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2592728FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v12 = *v13;
    unint64_t v14 = ((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v14 = *(void *)v15;
    *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_259272A38(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259272ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  unint64_t v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_259272B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)v8;
  v8 += 15;
  *(void *)unint64_t v7 = v9;
  v7 += 15;
  unint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (v7 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 &= 0xFFFFFFFFFFFFFFF8;
  v10 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v11 = *(void *)v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v10 + 8);
  return a1;
}

uint64_t sub_259272C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  unint64_t v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  return a1;
}

uint64_t sub_259272CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v7 = *v8;
  v7 += 15;
  uint64_t v9 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v7 & 0xFFFFFFFFFFFFFFF8) = *v9;
  unint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  v10 &= 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v10 = *(void *)v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  return a1;
}

uint64_t sub_259272D88(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x259272F08);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((((((v6 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_259272F1C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_47;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v21 = (void *)((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v22 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v22 = a2 - 1;
              }
              *uint64_t v21 = v22;
            }
            else
            {
              int64_t v20 = *(void (**)(void))(v6 + 56);
              v20();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = (~(_BYTE)v8 + a2);
  if (v10 < 4) {
    int v18 = (v16 >> v11) + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 >= 4) {
    unsigned int v19 = v16;
  }
  else {
    unsigned int v19 = v17;
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v19;
  }
  else {
    *(_DWORD *)a1 = v19;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x259273144);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return;
  }
}

uint64_t sub_25927316C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2592731D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

int *sub_259273234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_259270720(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_259273240(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 32))(*a1, a1[1]);
}

uint64_t sub_259273278(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2592732BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_259273304(void *a1)
{
  return sub_259272274(a1);
}

uint64_t AlbumID.init(id:album:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for AlbumID();
  size_t v10 = (void *)(a4 + *(int *)(result + 20));
  *size_t v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t type metadata accessor for AlbumID()
{
  uint64_t result = qword_26B2F3BE0;
  if (!qword_26B2F3BE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AlbumID.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_259309440();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t AlbumID.album.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AlbumID() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AlbumID.hash(into:)()
{
  sub_259309440();
  sub_259273EAC(&qword_26A37E298, MEMORY[0x263F07508]);
  sub_259309B20();
  type metadata accessor for AlbumID();
  swift_bridgeObjectRetain();
  sub_259309C00();
  return swift_bridgeObjectRelease();
}

uint64_t static AlbumID.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_259309400() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for AlbumID() + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  unsigned int v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }
  return sub_25930A7C0();
}

uint64_t AlbumID.hashValue.getter()
{
  return sub_25930A910();
}

uint64_t sub_259273688()
{
  return sub_25930A910();
}

uint64_t sub_259273748()
{
  sub_259309440();
  sub_259273EAC(&qword_26A37E298, MEMORY[0x263F07508]);
  sub_259309B20();
  swift_bridgeObjectRetain();
  sub_259309C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2592737FC()
{
  return sub_25930A910();
}

uint64_t sub_2592738B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_259309440();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_259273920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_259309400() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1]) {
    return 1;
  }
  return sub_25930A7C0();
}

uint64_t AlbumID.description.getter()
{
  sub_25930A3E0();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "AlbumID(id: ");
  sub_259309440();
  sub_259273EAC(&qword_26A37E410, MEMORY[0x263F07508]);
  sub_25930A730();
  sub_259309C20();
  swift_bridgeObjectRelease();
  sub_259309C20();
  type metadata accessor for AlbumID();
  swift_bridgeObjectRetain();
  sub_259309C20();
  swift_bridgeObjectRelease();
  sub_259309C20();
  return v1[0];
}

uint64_t AlbumID.init(protobuf:version:)@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_259309440();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  size_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v9) = *a2;
  uint64_t v11 = a1[2];
  unint64_t v12 = a1[3];
  v17[15] = v9;
  sub_259261DE0(v11, v12);
  UUID.init(serialized:version:)(v11, v12);
  if (v3) {
    return sub_259273C34((uint64_t)a1);
  }
  uint64_t v15 = *a1;
  uint64_t v14 = a1[1];
  swift_bridgeObjectRetain();
  sub_259273C34((uint64_t)a1);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 32))(a3, v10, v7);
  uint64_t result = type metadata accessor for AlbumID();
  unsigned int v16 = (void *)(a3 + *(int *)(result + 20));
  *unsigned int v16 = v15;
  v16[1] = v14;
  return result;
}

uint64_t sub_259273C34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AlbumIDProto();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AlbumID.protobuf(version:)()
{
  return sub_259309750();
}

uint64_t sub_259273D3C(void *a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for AlbumID() + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a1 = v5;
  a1[1] = v4;
  uint64_t v6 = UUID.serialized(version:)();
  uint64_t v8 = v7;
  uint64_t result = sub_259261F50(a1[2], a1[3]);
  a1[2] = v6;
  a1[3] = v8;
  return result;
}

uint64_t sub_259273DC0(void *a1)
{
  return sub_259273D3C(a1, *(void *)(v1 + 16));
}

uint64_t sub_259273DE0()
{
  return sub_259273EAC(&qword_26B2F3BD0, (void (*)(uint64_t))type metadata accessor for AlbumID);
}

uint64_t sub_259273E28(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_259273EAC(&qword_26B2F3BD8, (void (*)(uint64_t))type metadata accessor for AlbumID);
  uint64_t result = sub_259273EAC(&qword_26B2F3BC8, (void (*)(uint64_t))type metadata accessor for AlbumID);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_259273EAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_259273EF4()
{
  return sub_259273EAC(&qword_26A37E418, (void (*)(uint64_t))type metadata accessor for AlbumIDProto);
}

uint64_t sub_259273F3C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_259309440();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v11) = *a2;
  uint64_t v13 = a1[2];
  unint64_t v14 = a1[3];
  char v20 = v11;
  sub_259261DE0(v13, v14);
  UUID.init(serialized:version:)(v13, v14);
  if (v4) {
    return sub_259273C34((uint64_t)a1);
  }
  uint64_t v17 = *a1;
  uint64_t v16 = a1[1];
  swift_bridgeObjectRetain();
  sub_259273C34((uint64_t)a1);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a4, v12, v9);
  int v18 = (void *)(a4 + *(int *)(a3 + 20));
  *int v18 = v17;
  v18[1] = v16;
  return result;
}

uint64_t sub_25927408C()
{
  return sub_259309750();
}

uint64_t *initializeBufferWithCopyOfBuffer for AlbumID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_259309440();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AlbumID(uint64_t a1)
{
  uint64_t v2 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AlbumID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AlbumID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AlbumID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for AlbumID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AlbumID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2592744D4);
}

uint64_t sub_2592744D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AlbumID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2592745AC);
}

uint64_t sub_2592745AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_259309440();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_25927466C()
{
  uint64_t result = sub_259309440();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_259274700(void *a1)
{
  return sub_259273DC0(a1);
}

uint64_t PhotosFaceType.description.getter(char a1)
{
  if (!a1) {
    return 0x6D75626C61;
  }
  if (a1 == 1) {
    return 0x656C6666756873;
  }
  return 0x7972656C6C6167;
}

uint64_t PhotosFaceType.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6D75626C61;
  }
  if (a1 == 1) {
    return 0x656C6666756873;
  }
  return 0x7972656C6C6167;
}

void *static PhotosFaceType.allCases.getter()
{
  return &unk_2707285A8;
}

uint64_t sub_2592747D0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  uint64_t v3 = 0x656C6666756873;
  if (v2 != 1) {
    uint64_t v3 = 0x7972656C6C6167;
  }
  if (*a1) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0x6D75626C61;
  }
  if (v2) {
    unint64_t v5 = 0xE700000000000000;
  }
  else {
    unint64_t v5 = 0xE500000000000000;
  }
  uint64_t v6 = 0x656C6666756873;
  if (*a2 != 1) {
    uint64_t v6 = 0x7972656C6C6167;
  }
  if (*a2) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0x6D75626C61;
  }
  if (*a2) {
    unint64_t v8 = 0xE700000000000000;
  }
  else {
    unint64_t v8 = 0xE500000000000000;
  }
  if (v4 == v7 && v5 == v8) {
    char v9 = 1;
  }
  else {
    char v9 = sub_25930A7C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_2592748D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s10PhotosFace0aB4TypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_259274904(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = 0x656C6666756873;
  if (v2 != 1) {
    uint64_t v4 = 0x7972656C6C6167;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6D75626C61;
  }
  if (!v5) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_259274960()
{
  return sub_25930A910();
}

uint64_t sub_259274A00()
{
  sub_259309C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_259274A8C()
{
  return sub_25930A910();
}

uint64_t sub_259274B28()
{
  uint64_t v1 = 0x656C6666756873;
  if (*v0 != 1) {
    uint64_t v1 = 0x7972656C6C6167;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D75626C61;
  }
}

void sub_259274B80(void *a1@<X8>)
{
  *a1 = &unk_2707285D0;
}

uint64_t _s10PhotosFace0aB4TypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_25930A640();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_259274BE0()
{
  unint64_t result = qword_26A37E420;
  if (!qword_26A37E420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E420);
  }
  return result;
}

unint64_t sub_259274C38()
{
  unint64_t result = qword_26A37E428;
  if (!qword_26A37E428)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A37E430);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E428);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PhotosFaceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x259274D60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotosFaceType()
{
  return &type metadata for PhotosFaceType;
}

uint64_t dispatch thunk of PhotosFaceID.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

int *ShuffleID.init(id:people:pets:nature:cityscape:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a6, a1, v12);
  unint64_t result = (int *)type metadata accessor for ShuffleID();
  *(void *)(a6 + result[5]) = a2;
  *(unsigned char *)(a6 + result[6]) = a3;
  *(unsigned char *)(a6 + result[7]) = a4;
  *(unsigned char *)(a6 + result[8]) = a5;
  return result;
}

uint64_t type metadata accessor for ShuffleID()
{
  uint64_t result = qword_26B2F3C88;
  if (!qword_26B2F3C88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ShuffleID.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_259309440();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ShuffleID.people.getter()
{
  type metadata accessor for ShuffleID();
  return swift_bridgeObjectRetain();
}

uint64_t ShuffleID.pets.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ShuffleID() + 24));
}

uint64_t ShuffleID.nature.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ShuffleID() + 28));
}

uint64_t ShuffleID.cityscape.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ShuffleID() + 32));
}

int *ShuffleID.init(people:pets:nature:cityscape:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_2592D81F8(v10, a2, a4, a3, a5);
  uint64_t result = (int *)type metadata accessor for ShuffleID();
  *(void *)(a5 + result[5]) = a1;
  *(unsigned char *)(a5 + result[6]) = a2;
  *(unsigned char *)(a5 + result[7]) = a3;
  *(unsigned char *)(a5 + result[8]) = a4;
  return result;
}

uint64_t sub_25927502C(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  v39[3] = *MEMORY[0x263EF8340];
  uint64_t v9 = sub_259309BD0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_bridgeObjectRetain();
  unint64_t v14 = sub_259278818(v13);
  swift_bridgeObjectRelease();
  v39[0] = (uint64_t)v14;
  sub_259276640(v39);
  uint64_t v15 = *(void *)(v39[0] + 16);
  uint64_t v38 = a1;
  if (v15)
  {
    int v32 = a3;
    int v33 = a4;
    int v34 = a5;
    uint64_t v35 = 0;
    uint64_t v16 = (void (**)(char *, uint64_t))(v10 + 8);
    v31[1] = v39[0];
    uint64_t v17 = v39[0] + 40;
    uint64_t v36 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v37 = v9;
    while (2)
    {
      swift_bridgeObjectRetain();
      sub_259309BC0();
      uint64_t v18 = sub_259309BA0();
      unint64_t v20 = v19;
      swift_bridgeObjectRelease();
      (*v16)(v12, v9);
      if (v20 >> 60 == 15) {
        goto LABEL_42;
      }
      v17 += 16;
      switch(v20 >> 62)
      {
        case 1uLL:
          if (v18 >> 32 < (int)v18)
          {
            __break(1u);
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
          }
          sub_259261DE0(v18, v20);
          if (sub_2593091E0() && __OFSUB__((int)v18, sub_259309210())) {
            goto LABEL_40;
          }
          sub_259309200();
          sub_259309A50();
          sub_259277D7C(&qword_26A37E440, MEMORY[0x263F047F8]);
          sub_259309A00();
LABEL_16:
          sub_259277DC4(v18, v20);
          sub_259277DC4(v18, v20);
          uint64_t v16 = v36;
          uint64_t v9 = v37;
          if (--v15) {
            continue;
          }
LABEL_17:
          swift_release();
          LOBYTE(a4) = v33;
          LOBYTE(a5) = v34;
          if (v32) {
            goto LABEL_18;
          }
          goto LABEL_24;
        case 2uLL:
          uint64_t v22 = *(void *)(v18 + 16);
          uint64_t v21 = *(void *)(v18 + 24);
          sub_259277D68(v18, v20);
          swift_retain();
          swift_retain();
          if (sub_2593091E0() && __OFSUB__(v22, sub_259309210())) {
            goto LABEL_39;
          }
          if (__OFSUB__(v21, v22)) {
            goto LABEL_38;
          }
          sub_259309200();
          sub_259309A50();
          sub_259277D7C(&qword_26A37E440, MEMORY[0x263F047F8]);
          sub_259309A00();
          swift_release();
          swift_release();
          goto LABEL_16;
        case 3uLL:
          sub_259309A50();
          sub_259277D7C(&qword_26A37E440, MEMORY[0x263F047F8]);
          memset(v39, 0, 14);
          goto LABEL_4;
        default:
          v39[0] = v18;
          LOWORD(v39[1]) = v20;
          BYTE2(v39[1]) = BYTE2(v20);
          BYTE3(v39[1]) = BYTE3(v20);
          BYTE4(v39[1]) = BYTE4(v20);
          BYTE5(v39[1]) = BYTE5(v20);
          sub_259309A50();
          sub_259277D7C(&qword_26A37E440, MEMORY[0x263F047F8]);
LABEL_4:
          sub_259309A00();
          sub_259277DC4(v18, v20);
          sub_259277DC4(v18, v20);
          if (--v15) {
            continue;
          }
          goto LABEL_17;
      }
    }
  }
  swift_release();
  if (a3)
  {
LABEL_18:
    if (a4) {
      char v23 = 3;
    }
    else {
      char v23 = 1;
    }
    if (a5) {
LABEL_28:
    }
      v23 |= 4u;
  }
  else
  {
LABEL_24:
    if (a4) {
      char v23 = 2;
    }
    else {
      char v23 = 0;
    }
    if (a5) {
      goto LABEL_28;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E0E8);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_2593131D0;
  *(unsigned char *)(v24 + 32) = v23;
  uint64_t v25 = sub_2592E8BD8(v24);
  unint64_t v27 = v26;
  swift_bridgeObjectRelease();
  switch(v27 >> 62)
  {
    case 1uLL:
      if (v25 >> 32 < (int)v25) {
        goto LABEL_41;
      }
      sub_259261DE0(v25, v27);
      sub_259276560((int)v25, v25 >> 32);
      break;
    case 2uLL:
      uint64_t v29 = *(void *)(v25 + 16);
      uint64_t v28 = *(void *)(v25 + 24);
      sub_259261DE0(v25, v27);
      swift_retain();
      swift_retain();
      sub_259276560(v29, v28);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      sub_259309A50();
      sub_259277D7C(&qword_26A37E440, MEMORY[0x263F047F8]);
      memset(v39, 0, 14);
      goto LABEL_33;
    default:
      v39[0] = v25;
      LOWORD(v39[1]) = v27;
      BYTE2(v39[1]) = BYTE2(v27);
      BYTE3(v39[1]) = BYTE3(v27);
      BYTE4(v39[1]) = BYTE4(v27);
      BYTE5(v39[1]) = BYTE5(v27);
      sub_259309A50();
      sub_259277D7C(&qword_26A37E440, MEMORY[0x263F047F8]);
LABEL_33:
      sub_259309A00();
      break;
  }
  sub_259261F50(v25, v27);
  return sub_259261F50(v25, v27);
}

uint64_t ShuffleID.hash(into:)(uint64_t a1)
{
  sub_259309440();
  sub_259277D7C(&qword_26A37E298, MEMORY[0x263F07508]);
  sub_259309B20();
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for ShuffleID() + 20));
  swift_bridgeObjectRetain();
  sub_2592772D0(a1, v3);
  swift_bridgeObjectRelease();
  sub_25930A8E0();
  sub_25930A8E0();
  return sub_25930A8E0();
}

uint64_t sub_259275874(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_25930A8C0();
    swift_bridgeObjectRetain();
    sub_259309C00();
    uint64_t v18 = sub_25930A910();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_25930A7C0() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        unint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_25930A7C0() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t ShuffleID.hashValue.getter()
{
  sub_25930A8C0();
  ShuffleID.hash(into:)((uint64_t)v1);
  return sub_25930A910();
}

uint64_t sub_259275B58()
{
  sub_25930A8C0();
  ShuffleID.hash(into:)((uint64_t)v1);
  return sub_25930A910();
}

uint64_t sub_259275B9C()
{
  sub_25930A8C0();
  ShuffleID.hash(into:)((uint64_t)v1);
  return sub_25930A910();
}

uint64_t ShuffleID.description.getter()
{
  return 0;
}

int *ShuffleID.init(protobuf:version:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_259309440();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v9) = *a2;
  uint64_t v11 = *(void *)a1;
  unint64_t v12 = *(void *)(a1 + 8);
  char v20 = v9;
  sub_259261DE0(v11, v12);
  UUID.init(serialized:version:)(v11, v12);
  if (v3) {
    return (int *)sub_25927750C(a1);
  }
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_259277568(v14);
  swift_bridgeObjectRelease();
  char v15 = *(unsigned char *)(a1 + 24);
  char v16 = *(unsigned char *)(a1 + 25);
  char v17 = *(unsigned char *)(a1 + 26);
  sub_25927750C(a1);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a3, v10, v7);
  uint64_t result = (int *)type metadata accessor for ShuffleID();
  *(void *)(a3 + result[5]) = v19;
  *(unsigned char *)(a3 + result[6]) = v15;
  *(unsigned char *)(a3 + result[7]) = v16;
  *(unsigned char *)(a3 + result[8]) = v17;
  return result;
}

uint64_t ShuffleID.protobuf(version:)()
{
  return sub_259309750();
}

uint64_t sub_259276074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = UUID.serialized(version:)();
  uint64_t v6 = v5;
  sub_259261F50(*(void *)a1, *(void *)(a1 + 8));
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = (int *)type metadata accessor for ShuffleID();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_259278818(v8);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + v7[8]);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + v7[6]);
  return result;
}

int *sub_259276130@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = *a2;
  return ShuffleID.init(protobuf:version:)(a1, &v4, a3);
}

uint64_t sub_25927615C()
{
  return sub_259309750();
}

uint64_t sub_259276214(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_25930A8C0();
  swift_bridgeObjectRetain();
  sub_259309C00();
  uint64_t v8 = sub_25930A910();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_25930A7C0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_25930A7C0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_2592763C4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_2592763C4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_259303EA0();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_259302BD0();
      goto LABEL_22;
    }
    sub_259303340();
  }
  uint64_t v11 = *v4;
  sub_25930A8C0();
  sub_259309C00();
  uint64_t result = sub_25930A910();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_25930A7C0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_25930A820();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_25930A7C0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_259276560(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2593091E0();
  if (!result || (uint64_t result = sub_259309210(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_259309200();
      sub_259309A50();
      sub_259277D7C(&qword_26A37E440, MEMORY[0x263F047F8]);
      return sub_259309A00();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_259276640(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_2593028B4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_2592766AC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2592766AC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_25930A720();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_259276D98(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      unint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_259276E68((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_2592772BC((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          v100 = &v97[16 * v96 + 32];
          *(void *)v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          unint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_259309E00();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_25930A7C0();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      BOOL v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_25930A7C0()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_259277104(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_259277104((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    unint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          char v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        unsigned __int8 v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        char v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        unsigned int v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_259276E68((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        unint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      int v33 = (void *)(v10 + 16 * v9);
      do
      {
        int v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_25930A7C0() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_25930A570();
  __break(1u);
  return result;
}

uint64_t sub_259276D98(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_25930A7C0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_259276E68(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_25930A7C0() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_25930A7C0() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_259277200((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

char *sub_259277104(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E448);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_259277200(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_25930A620();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_2592772BC(uint64_t a1)
{
  return sub_259277104(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2592772D0(uint64_t a1, uint64_t a2)
{
  sub_25930A910();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_25930A8D0();
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    if (!v13) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    sub_25930A8C0();
    swift_bridgeObjectRetain();
    sub_259309C00();
    uint64_t v11 = sub_25930A910();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  int64_t v14 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t _s10PhotosFace9ShuffleIDV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_259309400() & 1) != 0
    && (uint64_t v4 = (int *)type metadata accessor for ShuffleID(),
        (sub_259275874(*(void *)(a1 + v4[5]), *(void *)(a2 + v4[5])) & 1) != 0)
    && *(unsigned __int8 *)(a1 + v4[6]) == *(unsigned __int8 *)(a2 + v4[6])
    && *(unsigned __int8 *)(a1 + v4[7]) == *(unsigned __int8 *)(a2 + v4[7]))
  {
    char v5 = *(unsigned char *)(a1 + v4[8]) ^ *(unsigned char *)(a2 + v4[8]) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_25927750C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShuffleIDProto();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_259277568(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_25930A020();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_259276214(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_259277600(uint64_t a1)
{
  return sub_259276074(a1, *(void *)(v1 + 16));
}

uint64_t sub_259277620()
{
  return sub_259277D7C(&qword_26B2F3C78, (void (*)(uint64_t))type metadata accessor for ShuffleID);
}

uint64_t sub_259277668(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_259277D7C(&qword_26B2F3C80, (void (*)(uint64_t))type metadata accessor for ShuffleID);
  uint64_t result = sub_259277D7C(&qword_26B2F3C70, (void (*)(uint64_t))type metadata accessor for ShuffleID);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_2592776EC()
{
  return sub_259277D7C(&qword_26A37E438, (void (*)(uint64_t))type metadata accessor for ShuffleIDProto);
}

void *initializeBufferWithCopyOfBuffer for ShuffleID(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_259309440();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ShuffleID(uint64_t a1)
{
  uint64_t v2 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ShuffleID(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ShuffleID(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for ShuffleID(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for ShuffleID(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShuffleID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259277B30);
}

uint64_t sub_259277B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ShuffleID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259277C04);
}

uint64_t sub_259277C04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_259309440();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_259277CC0()
{
  uint64_t result = sub_259309440();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_259277D68(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_259261DE0(a1, a2);
  }
  return a1;
}

uint64_t sub_259277D7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_259277DC4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_259261F50(a1, a2);
  }
  return a1;
}

uint64_t sub_259277DD8(uint64_t a1)
{
  return sub_259277600(a1);
}

int64_t *pickPhotos(totalCount:day:picking:)(int64_t a1, uint64_t a2, int64_t a3)
{
  if (a3 >= a1)
  {
    if (qword_26A37C7A8 == -1)
    {
LABEL_10:
      uint64_t v13 = sub_259309860();
      __swift_project_value_buffer(v13, (uint64_t)qword_26A37F2D0);
      int64_t v14 = sub_259309840();
      os_log_type_t v15 = sub_25930A1A0();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v3 = swift_slowAlloc();
        *(_DWORD *)uint64_t v3 = 134218240;
        sub_25930A2A0();
        *(_WORD *)(v3 + 12) = 2048;
        uint64_t v62 = a3;
        sub_25930A2A0();
        _os_log_impl(&dword_25921A000, v14, v15, "Total Count (%ld) is less than %ld, using entire array.", (uint8_t *)v3, 0x16u);
        MEMORY[0x25A2DBAF0](v3, -1, -1);
      }

      if ((a1 & 0x8000000000000000) == 0) {
        return sub_259278900(0, a1);
      }
      __break(1u);
      goto LABEL_63;
    }
LABEL_61:
    swift_once();
    goto LABEL_10;
  }
  if (!a3)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  BOOL v6 = a1 % a3 != 0;
  int64_t v7 = a1 / a3 + v6;
  if (__OFADD__(a1 / a3, v6))
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  unint64_t v4 = v7 * a3;
  if ((unsigned __int128)(v7 * (__int128)a3) >> 64 == (v7 * a3) >> 63)
  {
    uint64_t v3 = a2;
    if (qword_26A37C7A8 == -1) {
      goto LABEL_6;
    }
    goto LABEL_65;
  }
LABEL_64:
  __break(1u);
LABEL_65:
  swift_once();
LABEL_6:
  uint64_t v8 = sub_259309860();
  __swift_project_value_buffer(v8, (uint64_t)qword_26A37F2D0);
  uint64_t v9 = sub_259309840();
  os_log_type_t v10 = sub_25930A1A0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134218496;
    uint64_t v12 = a3;
    sub_25930A2A0();
    *(_WORD *)(v11 + 12) = 2048;
    sub_25930A2A0();
    *(_WORD *)(v11 + 22) = 2048;
    uint64_t v62 = v4;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v9, v10, "Picking %ld from array of size %ld, picking from %ld elements", (uint8_t *)v11, 0x20u);
    MEMORY[0x25A2DBAF0](v11, -1, -1);

    if (a3 != -1) {
      goto LABEL_16;
    }
  }
  else
  {

    uint64_t v12 = a3;
    if (a3 != -1) {
      goto LABEL_16;
    }
  }
  if (v4 == 0x8000000000000000)
  {
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
LABEL_16:
  uint64_t v17 = (uint64_t)v4 / v12;
  if (!v17)
  {
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (v3 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_75;
  }
  uint64_t v18 = v3 / v17;
  uint64_t v19 = v3 % v17;
  uint64_t v20 = sub_259309840();
  os_log_type_t v21 = sub_25930A1A0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 134218496;
    sub_25930A2A0();
    *(_WORD *)(v22 + 12) = 2048;
    sub_25930A2A0();
    *(_WORD *)(v22 + 22) = 2048;
    uint64_t v62 = v17;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v20, v21, "Position: Cycle %ld (%ld/%ld)", (uint8_t *)v22, 0x20u);
    MEMORY[0x25A2DBAF0](v22, -1, -1);
  }

  unint64_t v23 = __clz(v4);
  uint64_t v24 = 64 - v23;
  uint64_t v25 = sub_259309840();
  os_log_type_t v26 = sub_25930A1A0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 134218240;
    sub_25930A2A0();
    *(_WORD *)(v27 + 12) = 2048;
    uint64_t v62 = v4;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v25, v26, "Need %ld bits for count of %ld", (uint8_t *)v27, 0x16u);
    MEMORY[0x25A2DBAF0](v27, -1, -1);
  }

  char v28 = 63 - v23;
  uint64_t v29 = 2 << v28;
  if (!v4) {
    uint64_t v29 = 1;
  }
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30) {
    goto LABEL_67;
  }
  if (!v31)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if (v18 == 0x8000000000000000 && v31 == -1) {
    goto LABEL_76;
  }
  uint64_t v33 = v18 % v31;
  if ((v33 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v33 + 1;
    uint64_t v3 = sub_2592D75C8(v24);
    int v34 = sub_259309840();
    os_log_type_t v35 = sub_25930A1A0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 134218240;
      sub_25930A2A0();
      *(_WORD *)(v36 + 12) = 2048;
      uint64_t v62 = v4;
      sub_25930A2A0();
      _os_log_impl(&dword_25921A000, v34, v35, "Created RNG with size %ld and seed %llu", (uint8_t *)v36, 0x16u);
      MEMORY[0x25A2DBAF0](v36, -1, -1);
    }

    uint64_t v37 = sub_259309840();
    os_log_type_t v38 = sub_25930A1A0();
    uint64_t v39 = (unsigned __int128)(v19 * (__int128)a3) >> 64;
    if (os_log_type_enabled(v37, v38))
    {
      unint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v40 = 134217984;
      if (v39 != (v19 * a3) >> 63)
      {
LABEL_77:
        __break(1u);
        goto LABEL_78;
      }
      unint64_t v41 = v40;
      uint64_t v62 = v19 * a3;
      sub_25930A2A0();
      _os_log_impl(&dword_25921A000, v37, v38, "Discarding %ld previous values", v41, 0xCu);
      MEMORY[0x25A2DBAF0](v41, -1, -1);
    }

    if ((a1 & 0x8000000000000000) == 0)
    {
      uint64_t v42 = v19 * a3;
      if (v39 == (v19 * a3) >> 63)
      {
        if ((v42 & 0x8000000000000000) == 0)
        {
          char v43 = v28 & 0x3F;
          if (v42)
          {
            if (!a1)
            {
LABEL_73:
              __break(1u);
              goto LABEL_74;
            }
            for (uint64_t i = 0; i != v42; ++i)
            {
              do
                unint64_t v4 = ((unint64_t)(vaddlv_u8((uint8x8_t)vcnt_s8((int8x8_t)(v4 & v3))) & 1) << v43) | (v4 >> 1);
              while (v4 - 1 >= a1);
            }
          }
          uint64_t v45 = sub_259309840();
          os_log_type_t v46 = sub_25930A1A0();
          if (os_log_type_enabled(v45, v46))
          {
            uint64_t v47 = swift_slowAlloc();
            *(_DWORD *)uint64_t v47 = 134218496;
            sub_25930A2A0();
            *(_WORD *)(v47 + 12) = 2048;
            sub_25930A2A0();
            *(_WORD *)(v47 + 22) = 2048;
            uint64_t v62 = v18;
            sub_25930A2A0();
            _os_log_impl(&dword_25921A000, v45, v46, "Using next %ld values for position %ld in cycle %ld", (uint8_t *)v47, 0x20u);
            MEMORY[0x25A2DBAF0](v47, -1, -1);
          }

          if ((a3 & 0x8000000000000000) == 0)
          {
            uint64_t v62 = MEMORY[0x263F8EE78];
            sub_25925CE54(0, a3, 0);
            if (a1)
            {
              uint64_t v48 = 0;
              uint64_t v16 = v62;
              int64_t v49 = a3;
              do
              {
                if (v48 == v49)
                {
                  __break(1u);
                  goto LABEL_60;
                }
                do
                  unint64_t v4 = ((unint64_t)(vaddlv_u8((uint8x8_t)vcnt_s8((int8x8_t)(v4 & v3))) & 1) << v43) | (v4 >> 1);
                while (v4 - 1 >= a1);
                uint64_t v62 = v16;
                unint64_t v51 = *(void *)(v16 + 16);
                unint64_t v50 = *(void *)(v16 + 24);
                if (v51 >= v50 >> 1)
                {
                  sub_25925CE54(v50 > 1, v51 + 1, 1);
                  int64_t v49 = a3;
                  uint64_t v16 = v62;
                }
                ++v48;
                *(void *)(v16 + 16) = v51 + 1;
                *(void *)(v16 + 8 * v51 + 32) = v4 - 1;
              }
              while (v48 != v49);
              swift_bridgeObjectRetain_n();
              uint64_t v52 = sub_259309840();
              os_log_type_t v53 = sub_25930A1A0();
              if (os_log_type_enabled(v52, v53))
              {
                uint64_t v54 = (uint8_t *)swift_slowAlloc();
                uint64_t v55 = swift_slowAlloc();
                uint64_t v62 = v55;
                *(_DWORD *)uint64_t v54 = 136315138;
                uint64_t v56 = swift_bridgeObjectRetain();
                uint64_t v57 = MEMORY[0x25A2DA610](v56, MEMORY[0x263F8D6C8]);
                unint64_t v59 = v58;
                swift_bridgeObjectRelease();
                sub_25924FC14(v57, v59, &v62);
                sub_25930A2A0();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_25921A000, v52, v53, "Picked %s.", v54, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x25A2DBAF0](v55, -1, -1);
                MEMORY[0x25A2DBAF0](v54, -1, -1);
              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              return (int64_t *)v16;
            }
            goto LABEL_72;
          }
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
  }
LABEL_78:
  uint64_t result = (int64_t *)sub_25930A570();
  __break(1u);
  return result;
}

void *sub_259278818(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF00);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_259278F14((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_259261990();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

int64_t *sub_259278900(int64_t *result, int64_t a2)
{
  int64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2) {
      return (int64_t *)MEMORY[0x263F8EE78];
    }
    int64_t v4 = (int64_t)result;
    if (v2 <= 0)
    {
      uint64_t v5 = (int64_t *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E278);
      uint64_t v5 = (int64_t *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      uint64_t v5[2] = v2;
      v5[3] = 2 * (v7 >> 3);
    }
    uint64_t result = sub_259279114(v8, v5 + 4, v2, v4, a2);
    if (result == (int64_t *)v2) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2592789C8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_259278C28(a1, a2, a3, a4, &qword_26A37DF18);
}

uint64_t sub_2592789D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
  if (v5 <= 0)
  {
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF28) - 8);
      os_log_type_t v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      uint64_t v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF20);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37DF28) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_259278C1C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_259278C28(a1, a2, a3, a4, &qword_26A37DEE8);
}

uint64_t sub_259278C28(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v9 = 16 * v6;
    if (v6 <= 0)
    {
      unint64_t v10 = (char *)MEMORY[0x263F8EE78];
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0) {
          goto LABEL_19;
        }
        uint64_t v13 = v10 + 32;
        uint64_t v14 = (char *)(a2 + 16 * a3);
        if (v14 < &v10[v9 + 32] && v13 < &v14[v9]) {
          goto LABEL_19;
        }
        memcpy(v13, v14, 16 * v6);
        return (uint64_t)v10;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      unint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v6;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      if (v5 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_259278D90(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 4 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 32 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DEF8);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DEF0);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 1;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 5);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_259278F14(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

int64_t *sub_259279114(int64_t *result, int64_t *a2, int64_t a3, int64_t a4, int64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    unint64_t v5 = a4;
LABEL_7:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0) {
    goto LABEL_31;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4) {
    goto LABEL_32;
  }
  if (a5 > a4)
  {
    unint64_t v5 = a4 + 1;
    *a2 = a4;
    unint64_t v6 = a3 - 1;
    if (a3 == 1) {
      goto LABEL_7;
    }
    unint64_t v7 = a3 - 2;
    if (a3 - 2 >= (unint64_t)(~a4 + a5)) {
      unint64_t v7 = ~a4 + a5;
    }
    if (v7 < v6) {
      unint64_t v6 = v7;
    }
    unint64_t v8 = v6 + 1;
    if (v8 > 4)
    {
      uint64_t v11 = v8 & 3;
      if ((v8 & 3) == 0) {
        uint64_t v11 = 4;
      }
      unint64_t v12 = v8 - v11;
      uint64_t v9 = v8 - v11 + 1;
      unint64_t v13 = v5 + v12;
      uint64_t v10 = &a2[v12];
      int64x2_t v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_259314020);
      unint64_t v15 = (int64x2_t *)(a2 + 3);
      int64x2_t v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        *unint64_t v15 = vaddq_s64(v14, v16);
        int64x2_t v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      unint64_t v5 = v13;
    }
    else
    {
      uint64_t v9 = 1;
      uint64_t v10 = a2;
    }
    int64_t v17 = v10 + 1;
    int64_t v18 = v5;
    while (a3 != v9)
    {
      if (a5 == v18)
      {
        unint64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
      if (v18 >= a5) {
        goto LABEL_30;
      }
      ++v9;
      unint64_t v5 = v18 + 1;
      *v17++ = v18++;
      if (a3 == v9) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t PhotosFaceInterface.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E450);
  uint64_t v1 = (void *)swift_allocObject();
  void v1[2] = 0xD000000000000014;
  v1[3] = 0x800000025930DE20;
  long long v1[4] = 0;
  type metadata accessor for PhotosXPCClient();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v0 + 16) = v2;
  return v0;
}

uint64_t PhotosFaceInterface.init()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E450);
  uint64_t v1 = (void *)swift_allocObject();
  void v1[2] = 0xD000000000000014;
  v1[3] = 0x800000025930DE20;
  long long v1[4] = 0;
  type metadata accessor for PhotosXPCClient();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v0 + 16) = v2;
  return v0;
}

uint64_t PhotosFaceInterface.process(photos:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_259285C34((uint64_t)"process(photos:)", 16, 2, (uint64_t)&unk_26A37E460, v5);
  uint64_t result = swift_release();
  *a2 = v6;
  return result;
}

uint64_t sub_2592793DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E6F0);
  v3[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259279478, 0, 0);
}

uint64_t sub_259279478()
{
  v0[2] = v0[5];
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_259279534;
  uint64_t v2 = v0[7];
  return PhotosXPCClient.generatePhoto(request:)(v2, v0 + 2);
}

uint64_t sub_259279534()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_259279778;
  }
  else {
    uint64_t v2 = sub_259279664;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_259279664()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E700);
  sub_259273278(&qword_26A37E708, &qword_26A37E6F0);
  sub_259273278(&qword_26A37E710, &qword_26A37E700);
  sub_25930A630();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_259279778()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2592797DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_259279800, 0, 0);
}

uint64_t sub_259279800()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 24);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  swift_bridgeObjectRetain();
  return v2();
}

uint64_t PhotosFaceInterface.send(message:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  long long v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_259279890, 0, 0);
}

uint64_t sub_259279890()
{
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_task_alloc();
  v0[5] = v1;
  *(void *)uint64_t v1 = v0;
  *(void *)(v1 + 8) = sub_259279970;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  *(void *)(v1 + 120) = v0[2];
  *(void *)(v1 + 128) = v2;
  *(unsigned char *)(v1 + 184) = 2;
  *(void *)(v1 + 104) = 14;
  *(void *)(v1 + 112) = v3;
  *(void *)(v1 + 96) = "send(message:)";
  return MEMORY[0x270FA2498](sub_2592863F8, 0, 0);
}

uint64_t sub_259279970(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v6 = swift_release();
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_259279AC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 96) = a5;
  *(void *)(v6 + 104) = a6;
  *(unsigned char *)(v6 + 144) = a4;
  *(void *)(v6 + 80) = a2;
  *(void *)(v6 + 88) = a3;
  return MEMORY[0x270FA2498](sub_259279AE8, 0, 0);
}

uint64_t sub_259279AE8()
{
  unint64_t v13 = v0;
  uint64_t v1 = sub_2592D7740(100);
  v0[14] = v1;
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309860();
  v0[15] = __swift_project_value_buffer(v2, (uint64_t)qword_26A37F348);
  uint64_t v3 = sub_259309840();
  os_log_type_t v4 = sub_25930A1D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_25930A400();
    v0[8] = sub_25924FC14(v7, v8, &v12);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    v0[9] = v1;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v3, v4, "Executing %s (%ld)", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v6, -1, -1);
    MEMORY[0x25A2DBAF0](v5, -1, -1);
  }

  uint64_t v11 = (uint64_t (*)(void))(v0[12] + *(int *)v0[12]);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[16] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_259279D60;
  return v11();
}

uint64_t sub_259279D60()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25927A060;
  }
  else {
    uint64_t v2 = sub_259279E74;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_259279E74()
{
  unint64_t v13 = v0;
  uint64_t v1 = sub_259309840();
  os_log_type_t v2 = sub_25930A1D0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[14];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = v5;
    *(_DWORD *)uint64_t v4 = 136315650;
    uint64_t v6 = sub_25930A400();
    v0[5] = sub_25924FC14(v6, v7, &v12);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2048;
    v0[6] = v3;
    sub_25930A2A0();
    *(_WORD *)(v4 + 22) = 2080;
    uint64_t v8 = sub_259309BE0();
    v0[7] = sub_25924FC14(v8, v9, &v12);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_25921A000, v1, v2, "%s (%ld) finished: %s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v5, -1, -1);
    MEMORY[0x25A2DBAF0](v4, -1, -1);
  }

  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_25927A060()
{
  int64_t v19 = v0;
  uint64_t v1 = (void *)v0[17];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_259309840();
  os_log_type_t v5 = sub_25930A1B0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[17];
    uint64_t v16 = v0[14];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v9 = sub_25930A400();
    v0[2] = sub_25924FC14(v9, v10, &v18);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    v0[3] = v16;
    sub_25930A2A0();
    *(_WORD *)(v7 + 22) = 2112;
    id v11 = v6;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v12;
    sub_25930A2A0();
    void *v8 = v12;

    _os_log_impl(&dword_25921A000, v4, v5, "%s (%ld) failed: %@", (uint8_t *)v7, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E078);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v17, -1, -1);
    MEMORY[0x25A2DBAF0](v7, -1, -1);
  }
  else
  {
    unint64_t v13 = (void *)v0[17];
  }
  swift_willThrow();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_25927A2CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 112) = a4;
  *(void *)(v5 + 120) = a5;
  *(unsigned char *)(v5 + 160) = a3;
  *(void *)(v5 + 96) = a1;
  *(void *)(v5 + 104) = a2;
  return MEMORY[0x270FA2498](sub_25927A2F4, 0, 0);
}

uint64_t sub_25927A2F4()
{
  unint64_t v13 = v0;
  uint64_t v1 = sub_2592D7740(100);
  v0[16] = v1;
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309860();
  v0[17] = __swift_project_value_buffer(v2, (uint64_t)qword_26A37F348);
  id v3 = sub_259309840();
  os_log_type_t v4 = sub_25930A1D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_25930A400();
    v0[10] = sub_25924FC14(v7, v8, &v12);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    v0[11] = v1;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v3, v4, "Executing %s (%ld)", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v6, -1, -1);
    MEMORY[0x25A2DBAF0](v5, -1, -1);
  }

  id v11 = (uint64_t (*)(void *))(v0[14] + *(int *)v0[14]);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[18] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_25927A578;
  return v11(v0 + 2);
}

uint64_t sub_25927A578()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25928AD9C;
  }
  else {
    uint64_t v2 = sub_25927A68C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25927A68C()
{
  unint64_t v15 = v0;
  uint64_t v1 = v0[2];
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_259309840();
  os_log_type_t v3 = sub_25930A1D0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v12 = v0[16];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = v13;
    *(_DWORD *)uint64_t v4 = 136315650;
    uint64_t v5 = sub_25930A400();
    v0[6] = sub_25924FC14(v5, v6, &v14);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2048;
    v0[7] = v12;
    sub_25930A2A0();
    *(_WORD *)(v4 + 22) = 2080;
    v0[8] = v1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E3F0);
    uint64_t v7 = sub_259309BE0();
    v0[9] = sub_25924FC14(v7, v8, &v14);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25921A000, v2, v3, "%s (%ld) finished: %s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v13, -1, -1);
    MEMORY[0x25A2DBAF0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = v0[2];
  unint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v9);
}

uint64_t sub_25927A8D0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 112) = a4;
  *(void *)(v5 + 120) = a5;
  *(unsigned char *)(v5 + 160) = a3;
  *(void *)(v5 + 96) = a1;
  *(void *)(v5 + 104) = a2;
  return MEMORY[0x270FA2498](sub_25927A8F8, 0, 0);
}

uint64_t sub_25927A8F8()
{
  uint64_t v13 = v0;
  uint64_t v1 = sub_2592D7740(100);
  v0[16] = v1;
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309860();
  v0[17] = __swift_project_value_buffer(v2, (uint64_t)qword_26A37F348);
  os_log_type_t v3 = sub_259309840();
  os_log_type_t v4 = sub_25930A1D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_25930A400();
    v0[10] = sub_25924FC14(v7, v8, &v12);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    v0[11] = v1;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v3, v4, "Executing %s (%ld)", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v6, -1, -1);
    MEMORY[0x25A2DBAF0](v5, -1, -1);
  }

  id v11 = (uint64_t (*)(void *))(v0[14] + *(int *)v0[14]);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[18] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_25927AB7C;
  return v11(v0 + 2);
}

uint64_t sub_25927AB7C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25927AED4;
  }
  else {
    uint64_t v2 = sub_25927AC90;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25927AC90()
{
  unint64_t v15 = v0;
  uint64_t v1 = v0[2];
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_259309840();
  os_log_type_t v3 = sub_25930A1D0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v12 = v0[16];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = v13;
    *(_DWORD *)uint64_t v4 = 136315650;
    uint64_t v5 = sub_25930A400();
    v0[6] = sub_25924FC14(v5, v6, &v14);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2048;
    v0[7] = v12;
    sub_25930A2A0();
    *(_WORD *)(v4 + 22) = 2080;
    v0[8] = v1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E650);
    uint64_t v7 = sub_259309BE0();
    v0[9] = sub_25924FC14(v7, v8, &v14);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25921A000, v2, v3, "%s (%ld) finished: %s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v13, -1, -1);
    MEMORY[0x25A2DBAF0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = v0[2];
  unint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v9);
}

uint64_t sub_25927AED4()
{
  int64_t v19 = v0;
  uint64_t v1 = (void *)v0[19];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_259309840();
  os_log_type_t v5 = sub_25930A1B0();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (void *)v0[19];
    uint64_t v16 = v0[16];
    uint64_t v7 = swift_slowAlloc();
    unint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v9 = sub_25930A400();
    v0[3] = sub_25924FC14(v9, v10, &v18);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    v0[4] = v16;
    sub_25930A2A0();
    *(_WORD *)(v7 + 22) = 2112;
    id v11 = v6;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v12;
    sub_25930A2A0();
    void *v8 = v12;

    _os_log_impl(&dword_25921A000, v4, v5, "%s (%ld) failed: %@", (uint8_t *)v7, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E078);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v17, -1, -1);
    MEMORY[0x25A2DBAF0](v7, -1, -1);
  }
  else
  {
    uint64_t v13 = (void *)v0[19];
  }
  swift_willThrow();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_25927B140(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 136) = a5;
  *(void *)(v6 + 144) = a6;
  *(unsigned char *)(v6 + 184) = a4;
  *(void *)(v6 + 120) = a2;
  *(void *)(v6 + 128) = a3;
  *(void *)(v6 + 112) = a1;
  return MEMORY[0x270FA2498](sub_25927B16C, 0, 0);
}

uint64_t sub_25927B16C()
{
  uint64_t v13 = v0;
  uint64_t v1 = sub_2592D7740(100);
  v0[19] = v1;
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309860();
  v0[20] = __swift_project_value_buffer(v2, (uint64_t)qword_26A37F348);
  id v3 = sub_259309840();
  os_log_type_t v4 = sub_25930A1D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_25930A400();
    v0[12] = sub_25924FC14(v7, v8, &v12);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    v0[13] = v1;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v3, v4, "Executing %s (%ld)", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v6, -1, -1);
    MEMORY[0x25A2DBAF0](v5, -1, -1);
  }

  id v11 = (uint64_t (*)(void *))(v0[17] + *(int *)v0[17]);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[21] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_25927B3E4;
  return v11(v0 + 2);
}

uint64_t sub_25927B3E4()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25927B770;
  }
  else {
    uint64_t v2 = sub_25927B4F8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25927B4F8()
{
  uint64_t v16 = v0;
  uint64_t v1 = v0[2];
  unint64_t v2 = v0[3];
  sub_259261DE0(v1, v2);
  sub_259261DE0(v1, v2);
  id v3 = sub_259309840();
  os_log_type_t v4 = sub_25930A1D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v12 = v0[19];
    os_log_type_t type = v4;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = v14;
    *(_DWORD *)uint64_t v5 = 136315650;
    uint64_t v6 = sub_25930A400();
    v0[8] = sub_25924FC14(v6, v7, &v15);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    v0[9] = v12;
    sub_25930A2A0();
    *(_WORD *)(v5 + 22) = 2080;
    v0[4] = v1;
    v0[5] = v2;
    sub_259261DE0(v1, v2);
    uint64_t v8 = sub_259309BE0();
    v0[11] = sub_25924FC14(v8, v9, &v15);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    sub_259261F50(v1, v2);
    sub_259261F50(v1, v2);
    _os_log_impl(&dword_25921A000, v3, type, "%s (%ld) finished: %s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v14, -1, -1);
    MEMORY[0x25A2DBAF0](v5, -1, -1);
  }
  else
  {
    sub_259261F50(v1, v2);
    sub_259261F50(v1, v2);
  }

  *(_OWORD *)v0[14] = *((_OWORD *)v0 + 1);
  unint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_25927B770()
{
  int64_t v19 = v0;
  uint64_t v1 = (void *)v0[22];
  id v2 = v1;
  id v3 = v1;
  os_log_type_t v4 = sub_259309840();
  os_log_type_t v5 = sub_25930A1B0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[22];
    uint64_t v16 = v0[19];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v9 = sub_25930A400();
    v0[10] = sub_25924FC14(v9, v10, &v18);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    v0[6] = v16;
    *(_WORD *)(v7 + 12) = 2048;
    sub_25930A2A0();
    *(_WORD *)(v7 + 22) = 2112;
    id v11 = v6;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[7] = v12;
    sub_25930A2A0();
    void *v8 = v12;

    _os_log_impl(&dword_25921A000, v4, v5, "%s (%ld) failed: %@", (uint8_t *)v7, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E078);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v17, -1, -1);
    MEMORY[0x25A2DBAF0](v7, -1, -1);
  }
  else
  {
    uint64_t v13 = (void *)v0[22];
  }
  swift_willThrow();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t PhotosFaceInterface.track(album:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AlbumID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5 - 8);
  sub_25928AAD4(a1, (uint64_t)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AlbumID);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v2;
  sub_25928AA6C((uint64_t)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(void))type metadata accessor for AlbumID);
  swift_retain();
  uint64_t v10 = sub_259286000((uint64_t)"track(album:)", 13, 2, (uint64_t)&unk_26A37E480, v9);
  uint64_t result = swift_release();
  *a2 = v10;
  return result;
}

uint64_t sub_25927BB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for AlbumIDProto();
  v3[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25927BBC8, 0, 0);
}

uint64_t sub_25927BBC8()
{
  v0[8] = *(void *)(v0[4] + 16);
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v2 = sub_259309E90();
  v0[9] = v2;
  v0[10] = v1;
  return MEMORY[0x270FA2498](sub_25927BCC0, v2, v1);
}

uint64_t sub_25927BCC0()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = 2;
  sub_25928A844(&qword_26A37E418, (void (*)(uint64_t))type metadata accessor for AlbumIDProto);
  sub_259309750();
  swift_task_dealloc();
  uint64_t v4 = sub_259309710();
  uint64_t v6 = v5;
  v0[11] = v4;
  v0[12] = v5;
  sub_25928AB3C(v1, (uint64_t (*)(void))type metadata accessor for AlbumIDProto);
  uint64_t v9 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[13] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25927BEA0;
  return v9(3, v4, v6);
}

uint64_t sub_25927BEA0(uint64_t a1)
{
  uint64_t v5 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  uint64_t v6 = (void *)*v2;
  swift_task_dealloc();
  unint64_t v7 = v4[12];
  uint64_t v8 = v4[11];
  if (v1)
  {
    sub_259261F50(v8, v7);
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v6[1];
    return v9();
  }
  else
  {
    v5[14] = a1;
    sub_259261F50(v8, v7);
    uint64_t v11 = v5[9];
    uint64_t v12 = v5[10];
    return MEMORY[0x270FA2498](sub_25927C028, v11, v12);
  }
}

uint64_t sub_25927C028()
{
  v0[2] = v0[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E618);
  type metadata accessor for StoredPhoto(0);
  sub_259273278(&qword_26A37E620, &qword_26A37E618);
  sub_25930A760();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t PhotosFaceInterface.untrack(album:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25927C144, 0, 0);
}

uint64_t sub_25927C144()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = swift_task_alloc();
  v0[2].i64[1] = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_25927C230;
  *(void *)(v2 + 96) = &unk_26A37E498;
  *(void *)(v2 + 104) = v1;
  *(unsigned char *)(v2 + 144) = 2;
  *(void *)(v2 + 80) = "untrack(album:)";
  *(void *)(v2 + 88) = 15;
  return MEMORY[0x270FA2498](sub_259279AE8, 0, 0);
}

uint64_t sub_25927C230()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25927C34C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_259247230;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25927C34C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25927C3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  long long v3[4] = type metadata accessor for CommunicationActor();
  v3[5] = sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v5 = sub_259309E90();
  return MEMORY[0x270FA2498](sub_25927C4A8, v5, v4);
}

uint64_t sub_25927C4A8()
{
  *(void *)(v0 + 48) = *(void *)(*(void *)(v0 + 16) + 16);
  uint64_t v2 = sub_259309E90();
  return MEMORY[0x270FA2498](sub_25927C52C, v2, v1);
}

uint64_t sub_25927C52C()
{
  uint64_t v1 = UUID.serialized(version:)();
  uint64_t v3 = v2;
  v0[7] = v1;
  v0[8] = v2;
  uint64_t v6 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25927C604;
  return v6(4, v1, v3);
}

uint64_t sub_25927C604()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  sub_259261F50(*(void *)(v2 + 56), *(void *)(v2 + 64));
  if (!v0) {
    swift_release();
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t PhotosFaceInterface.listAlbums()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25927C760, 0, 0);
}

uint64_t sub_25927C760()
{
  swift_retain();
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *(void *)uint64_t v1 = v0;
  *(void *)(v1 + 8) = sub_25927C830;
  uint64_t v2 = *(void *)(v0 + 16);
  *(unsigned char *)(v1 + 152) = 2;
  *(void *)(v1 + 96) = 12;
  *(void *)(v1 + 104) = v2;
  *(void *)(v1 + 88) = "listAlbums()";
  return MEMORY[0x270FA2498](sub_259286FB0, 0, 0);
}

uint64_t sub_25927C830(uint64_t a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = swift_release();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_25927C954(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 80) = a1;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v4 = sub_259309E90();
  *(void *)(v2 + 24) = v4;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_25927CA48, v4, v3);
}

uint64_t sub_25927CA48()
{
  uint64_t v1 = 0xA0F05u >> (8 * *(unsigned char *)(v0 + 80));
  uint64_t v4 = (char *)&dword_26A37F448 + dword_26A37F448;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25927CB14;
  return ((uint64_t (*)(uint64_t, void, unint64_t))v4)(v1, 0, 0xC000000000000000);
}

uint64_t sub_25927CB14(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    uint64_t v9 = (uint64_t (*)(void))((char *)&dword_26A37F460 + dword_26A37F460);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v4 + 56) = v8;
    void *v8 = v5;
    v8[1] = sub_25927CCA8;
    return v9();
  }
}

uint64_t sub_25927CCA8(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[8] = a1;
  v3[9] = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v3[3];
    uint64_t v8 = v3[4];
    return MEMORY[0x270FA2498](sub_25927CE0C, v7, v8);
  }
}

uint64_t sub_25927CE0C()
{
  uint64_t v1 = (void *)v0[8];
  if (v1[2] == 1)
  {
    uint64_t v2 = v0[9];
    uint64_t v3 = v1[4];
    unint64_t v4 = v1[5];
    sub_259261DE0(v3, v4);
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_2592DC624(v3, v4, 2);
    if (!v2)
    {
      uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
      return v6(v5);
    }
  }
  else
  {
    sub_25928A790();
    swift_allocError();
    unsigned char *v8 = 2;
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_25927CF30(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 80) = a1;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v4 = sub_259309E90();
  *(void *)(v2 + 24) = v4;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x270FA2498](sub_25927D024, v4, v3);
}

uint64_t sub_25927D024()
{
  uint64_t v1 = 0xA0F05u >> (8 * *(unsigned char *)(v0 + 80));
  uint64_t v4 = (char *)&dword_26A37F448 + dword_26A37F448;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25927D0F0;
  return ((uint64_t (*)(uint64_t, void, unint64_t))v4)(v1, 0, 0xC000000000000000);
}

uint64_t sub_25927D0F0(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    uint64_t v9 = (uint64_t (*)(void))((char *)&dword_26A37F460 + dword_26A37F460);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v4 + 56) = v8;
    void *v8 = v5;
    v8[1] = sub_25927D284;
    return v9();
  }
}

uint64_t sub_25927D284(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[8] = a1;
  v3[9] = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v3[3];
    uint64_t v8 = v3[4];
    return MEMORY[0x270FA2498](sub_25927D3E8, v7, v8);
  }
}

uint64_t sub_25927D3E8()
{
  uint64_t v1 = (void *)v0[8];
  if (v1[2] == 1)
  {
    uint64_t v2 = v0[9];
    uint64_t v3 = v1[4];
    unint64_t v4 = v1[5];
    sub_259261DE0(v3, v4);
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_2592DCD38(v3, v4, 2);
    if (!v2)
    {
      uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
      return v6(v5);
    }
  }
  else
  {
    sub_25928A790();
    swift_allocError();
    unsigned char *v8 = 2;
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t PhotosFaceInterface.fetch(album:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25928278C(a1, (uint64_t)"fetch(album:)", 13, (uint64_t)&unk_26A37E4C0, a2);
}

uint64_t sub_25927D538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for FetchFaceRequestProto(0);
  v3[7] = swift_task_alloc();
  v3[8] = type metadata accessor for FetchFaceRequest();
  v3[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25927D600, 0, 0);
}

uint64_t sub_25927D600()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[5];
  v0[10] = *(void *)(v0[4] + 16);
  uint64_t v4 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v1, v3, v4);
  uint64_t v5 = v1 + *(int *)(v2 + 20);
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v7 = sub_259309E90();
  v0[11] = v7;
  v0[12] = v6;
  return MEMORY[0x270FA2498](sub_25927D754, v7, v6);
}

uint64_t sub_25927D754()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = 2;
  sub_25928A844(&qword_26A37E2E8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
  sub_259309750();
  swift_task_dealloc();
  uint64_t v4 = sub_259309710();
  uint64_t v6 = v5;
  v0[13] = v4;
  v0[14] = v5;
  sub_25928AB3C(v2, type metadata accessor for FetchFaceRequestProto);
  uint64_t v9 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[15] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25927D950;
  return v9(6, v4, v6);
}

uint64_t sub_25927D950(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[16] = v1;
  swift_task_dealloc();
  unint64_t v5 = v4[14];
  uint64_t v6 = v4[13];
  if (v1)
  {
    sub_259261F50(v6, v5);
    uint64_t v7 = v4[11];
    uint64_t v8 = v4[12];
    uint64_t v9 = sub_25927DBD8;
  }
  else
  {
    v4[17] = a1;
    sub_259261F50(v6, v5);
    uint64_t v7 = v4[11];
    uint64_t v8 = v4[12];
    uint64_t v9 = sub_25927DAAC;
  }
  return MEMORY[0x270FA2498](v9, v7, v8);
}

uint64_t sub_25927DAAC()
{
  uint64_t v1 = v0[9];
  v0[2] = v0[17];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E618);
  type metadata accessor for StoredPhoto(0);
  sub_259273278(&qword_26A37E620, &qword_26A37E618);
  sub_25930A760();
  sub_25928AB3C(v1, (uint64_t (*)(void))type metadata accessor for FetchFaceRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_25927DBD8()
{
  v0[18] = v0[16];
  sub_25928AB3C(v0[9], (uint64_t (*)(void))type metadata accessor for FetchFaceRequest);
  return MEMORY[0x270FA2498](sub_25927DC5C, 0, 0);
}

uint64_t sub_25927DC5C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t PhotosFaceInterface.fetch(album:day:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  return sub_259282D38(a1, a2, a3, (uint64_t)"fetch(album:day:)", 17, (uint64_t)&unk_26A37E4D0, a4);
}

uint64_t sub_25927DCF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 160) = a5;
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 56) = type metadata accessor for FetchFaceRequestProto(0);
  *(void *)(v5 + 64) = swift_task_alloc();
  *(void *)(v5 + 72) = type metadata accessor for FetchFaceRequest();
  *(void *)(v5 + 80) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25927DDC4, 0, 0);
}

uint64_t sub_25927DDC4()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  char v3 = *(unsigned char *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  *(void *)(v0 + 88) = *(void *)(*(void *)(v0 + 32) + 16);
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v1, v4, v6);
  uint64_t v7 = v1 + *(int *)(v2 + 20);
  *(void *)uint64_t v7 = v5;
  *(unsigned char *)(v7 + 8) = v3 & 1;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v9 = sub_259309E90();
  *(void *)(v0 + 96) = v9;
  *(void *)(v0 + 104) = v8;
  return MEMORY[0x270FA2498](sub_25927DF28, v9, v8);
}

uint64_t sub_25927DF28()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = 2;
  sub_25928A844(&qword_26A37E2E8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
  sub_259309750();
  swift_task_dealloc();
  uint64_t v4 = sub_259309710();
  uint64_t v6 = v5;
  v0[14] = v4;
  v0[15] = v5;
  sub_25928AB3C(v2, type metadata accessor for FetchFaceRequestProto);
  uint64_t v9 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[16] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25927E124;
  return v9(6, v4, v6);
}

uint64_t sub_25927E124(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[17] = v1;
  swift_task_dealloc();
  unint64_t v5 = v4[15];
  uint64_t v6 = v4[14];
  if (v1)
  {
    sub_259261F50(v6, v5);
    uint64_t v7 = v4[12];
    uint64_t v8 = v4[13];
    uint64_t v9 = sub_25927E3AC;
  }
  else
  {
    v4[18] = a1;
    sub_259261F50(v6, v5);
    uint64_t v7 = v4[12];
    uint64_t v8 = v4[13];
    uint64_t v9 = sub_25927E280;
  }
  return MEMORY[0x270FA2498](v9, v7, v8);
}

uint64_t sub_25927E280()
{
  uint64_t v1 = v0[10];
  v0[2] = v0[18];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E618);
  type metadata accessor for StoredPhoto(0);
  sub_259273278(&qword_26A37E620, &qword_26A37E618);
  sub_25930A760();
  sub_25928AB3C(v1, (uint64_t (*)(void))type metadata accessor for FetchFaceRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_25927E3AC()
{
  v0[19] = v0[17];
  sub_25928AB3C(v0[10], (uint64_t (*)(void))type metadata accessor for FetchFaceRequest);
  return MEMORY[0x270FA2498](sub_25927E430, 0, 0);
}

uint64_t sub_25927E430()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t PhotosFaceInterface.provideAlbumAssetList(for:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  long long v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_25927E4C4, 0, 0);
}

uint64_t sub_25927E4C4()
{
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25927E580;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = v0[2];
  return sub_259287AD0((uint64_t)"provideAlbumAssetList(for:)", 27, 2, v2, v4, v3);
}

uint64_t sub_25927E580(uint64_t a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_release();
  unint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_25927E6C0(char a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = v2;
  *(unsigned char *)(v3 + 120) = a1;
  *(void *)(v3 + 32) = type metadata accessor for AlbumIDProto();
  *(void *)(v3 + 40) = swift_task_alloc();
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v5 = sub_259309E90();
  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 56) = v4;
  return MEMORY[0x270FA2498](sub_25927E7E4, v5, v4);
}

uint64_t sub_25927E7E4()
{
  char v1 = *(unsigned char *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v2;
  *(unsigned char *)(v4 + 24) = 2;
  sub_25928A844(&qword_26A37E418, (void (*)(uint64_t))type metadata accessor for AlbumIDProto);
  sub_259309750();
  swift_task_dealloc();
  uint64_t v5 = sub_259309710();
  uint64_t v7 = v6;
  *(void *)(v0 + 64) = v5;
  *(void *)(v0 + 72) = v6;
  sub_25928AB3C(v3, (uint64_t (*)(void))type metadata accessor for AlbumIDProto);
  uint64_t v10 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v8;
  void *v8 = v0;
  v8[1] = sub_25927E9CC;
  return v10(v1 + 18, v5, v7);
}

uint64_t sub_25927E9CC(uint64_t a1)
{
  uint64_t v5 = *v2;
  uint64_t v4 = *v2;
  uint64_t v6 = *v2;
  swift_task_dealloc();
  unint64_t v7 = *(void *)(v4 + 72);
  uint64_t v8 = *(void *)(v4 + 64);
  if (v1)
  {
    sub_259261F50(v8, v7);
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v6 + 8);
    return v9();
  }
  else
  {
    *(void *)(v5 + 88) = a1;
    sub_259261F50(v8, v7);
    uint64_t v12 = (uint64_t (__cdecl *)())((char *)&dword_26A37F460 + dword_26A37F460);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v5 + 96) = v11;
    *uint64_t v11 = v6;
    v11[1] = sub_25927EB98;
    return v12();
  }
}

uint64_t sub_25927EB98(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[13] = a1;
  v3[14] = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v3[6];
    uint64_t v8 = v3[7];
    return MEMORY[0x270FA2498](sub_25927ED04, v7, v8);
  }
}

uint64_t sub_25927ED04()
{
  uint64_t v1 = (void *)v0[13];
  if (v1[2] == 1)
  {
    uint64_t v2 = v0[14];
    uint64_t v3 = v1[4];
    unint64_t v4 = v1[5];
    sub_259261DE0(v3, v4);
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_2592E8C98(v3, v4);
    if (!v2)
    {
      uint64_t v6 = v5;
      swift_task_dealloc();
      uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
      return v7(v6);
    }
  }
  else
  {
    sub_25928A790();
    swift_allocError();
    *uint64_t v9 = 2;
    swift_willThrow();
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_25927EE3C(char a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = v2;
  *(unsigned char *)(v3 + 120) = a1;
  *(void *)(v3 + 32) = type metadata accessor for ShuffleIDProto();
  *(void *)(v3 + 40) = swift_task_alloc();
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v5 = sub_259309E90();
  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 56) = v4;
  return MEMORY[0x270FA2498](sub_25927EF60, v5, v4);
}

uint64_t sub_25927EF60()
{
  char v1 = *(unsigned char *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v2;
  *(unsigned char *)(v4 + 24) = 2;
  sub_25928A844(&qword_26A37E438, (void (*)(uint64_t))type metadata accessor for ShuffleIDProto);
  sub_259309750();
  swift_task_dealloc();
  uint64_t v5 = sub_259309710();
  uint64_t v7 = v6;
  *(void *)(v0 + 64) = v5;
  *(void *)(v0 + 72) = v6;
  sub_25928AB3C(v3, (uint64_t (*)(void))type metadata accessor for ShuffleIDProto);
  uint64_t v10 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v8;
  void *v8 = v0;
  v8[1] = sub_25927F148;
  return v10(v1 + 18, v5, v7);
}

uint64_t sub_25927F148(uint64_t a1)
{
  uint64_t v5 = *v2;
  uint64_t v4 = *v2;
  uint64_t v6 = *v2;
  swift_task_dealloc();
  unint64_t v7 = *(void *)(v4 + 72);
  uint64_t v8 = *(void *)(v4 + 64);
  if (v1)
  {
    sub_259261F50(v8, v7);
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v6 + 8);
    return v9();
  }
  else
  {
    *(void *)(v5 + 88) = a1;
    sub_259261F50(v8, v7);
    uint64_t v12 = (uint64_t (__cdecl *)())((char *)&dword_26A37F460 + dword_26A37F460);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v5 + 96) = v11;
    *uint64_t v11 = v6;
    v11[1] = sub_25927F314;
    return v12();
  }
}

uint64_t sub_25927F314(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[13] = a1;
  v3[14] = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v3[6];
    uint64_t v8 = v3[7];
    return MEMORY[0x270FA2498](sub_25928ADB0, v7, v8);
  }
}

uint64_t PhotosFaceInterface.track(shuffle:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_259281E54(a1, (uint64_t)"track(shuffle:)", (uint64_t)&unk_26A37E4F0, a2);
}

uint64_t sub_25927F4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for ShuffleIDProto();
  v3[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25927F540, 0, 0);
}

uint64_t sub_25927F540()
{
  v0[8] = *(void *)(v0[4] + 16);
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v2 = sub_259309E90();
  v0[9] = v2;
  v0[10] = v1;
  return MEMORY[0x270FA2498](sub_25927F638, v2, v1);
}

uint64_t sub_25927F638()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = 2;
  sub_25928A844(&qword_26A37E438, (void (*)(uint64_t))type metadata accessor for ShuffleIDProto);
  sub_259309750();
  swift_task_dealloc();
  uint64_t v4 = sub_259309710();
  uint64_t v6 = v5;
  v0[11] = v4;
  v0[12] = v5;
  sub_25928AB3C(v1, (uint64_t (*)(void))type metadata accessor for ShuffleIDProto);
  uint64_t v9 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[13] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25927F818;
  return v9(13, v4, v6);
}

uint64_t sub_25927F818(uint64_t a1)
{
  uint64_t v5 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  uint64_t v6 = (void *)*v2;
  swift_task_dealloc();
  unint64_t v7 = v4[12];
  uint64_t v8 = v4[11];
  if (v1)
  {
    sub_259261F50(v8, v7);
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v6[1];
    return v9();
  }
  else
  {
    v5[14] = a1;
    sub_259261F50(v8, v7);
    uint64_t v11 = v5[9];
    uint64_t v12 = v5[10];
    return MEMORY[0x270FA2498](sub_25928ADB4, v11, v12);
  }
}

uint64_t PhotosFaceInterface.untrack(shuffle:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25927F9C0, 0, 0);
}

uint64_t sub_25927F9C0()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = swift_task_alloc();
  v0[2].i64[1] = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_25927FAAC;
  *(void *)(v2 + 96) = &unk_26A37E508;
  *(void *)(v2 + 104) = v1;
  *(unsigned char *)(v2 + 144) = 2;
  *(void *)(v2 + 80) = "untrack(shuffle:)";
  *(void *)(v2 + 88) = 17;
  return MEMORY[0x270FA2498](sub_259279AE8, 0, 0);
}

uint64_t sub_25927FAAC()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_25928AD98;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_25924A470;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25927FBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  long long v3[4] = type metadata accessor for CommunicationActor();
  v3[5] = sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v5 = sub_259309E90();
  return MEMORY[0x270FA2498](sub_25927FCC0, v5, v4);
}

uint64_t sub_25927FCC0()
{
  *(void *)(v0 + 48) = *(void *)(*(void *)(v0 + 16) + 16);
  uint64_t v2 = sub_259309E90();
  return MEMORY[0x270FA2498](sub_25927FD44, v2, v1);
}

uint64_t sub_25927FD44()
{
  uint64_t v1 = UUID.serialized(version:)();
  uint64_t v3 = v2;
  v0[7] = v1;
  v0[8] = v2;
  uint64_t v6 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25928AD94;
  return v6(14, v1, v3);
}

uint64_t PhotosFaceInterface.listShuffles()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_25927FE3C, 0, 0);
}

uint64_t sub_25927FE3C()
{
  swift_retain();
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *(void *)uint64_t v1 = v0;
  *(void *)(v1 + 8) = sub_25928ADAC;
  uint64_t v2 = *(void *)(v0 + 16);
  *(unsigned char *)(v1 + 152) = 2;
  *(void *)(v1 + 96) = 14;
  *(void *)(v1 + 104) = v2;
  *(void *)(v1 + 88) = "listShuffles()";
  return MEMORY[0x270FA2498](sub_25928917C, 0, 0);
}

uint64_t PhotosFaceInterface.fetch(shuffle:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25928278C(a1, (uint64_t)"fetch(shuffle:)", 15, (uint64_t)&unk_26A37E528, a2);
}

uint64_t sub_25927FF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for FetchFaceRequestProto(0);
  v3[7] = swift_task_alloc();
  v3[8] = type metadata accessor for FetchFaceRequest();
  v3[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259280000, 0, 0);
}

uint64_t sub_259280000()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[5];
  v0[10] = *(void *)(v0[4] + 16);
  uint64_t v4 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v1, v3, v4);
  uint64_t v5 = v1 + *(int *)(v2 + 20);
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v7 = sub_259309E90();
  v0[11] = v7;
  v0[12] = v6;
  return MEMORY[0x270FA2498](sub_259280154, v7, v6);
}

uint64_t sub_259280154()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = 2;
  sub_25928A844(&qword_26A37E2E8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
  sub_259309750();
  swift_task_dealloc();
  uint64_t v4 = sub_259309710();
  uint64_t v6 = v5;
  v0[13] = v4;
  v0[14] = v5;
  sub_25928AB3C(v2, type metadata accessor for FetchFaceRequestProto);
  uint64_t v9 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[15] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_259280350;
  return v9(16, v4, v6);
}

uint64_t sub_259280350(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[16] = v1;
  swift_task_dealloc();
  unint64_t v5 = v4[14];
  uint64_t v6 = v4[13];
  if (v1)
  {
    sub_259261F50(v6, v5);
    uint64_t v7 = v4[11];
    uint64_t v8 = v4[12];
    uint64_t v9 = sub_2592804AC;
  }
  else
  {
    v4[17] = a1;
    sub_259261F50(v6, v5);
    uint64_t v7 = v4[11];
    uint64_t v8 = v4[12];
    uint64_t v9 = sub_25928ADC4;
  }
  return MEMORY[0x270FA2498](v9, v7, v8);
}

uint64_t sub_2592804AC()
{
  v0[18] = v0[16];
  sub_25928AB3C(v0[9], (uint64_t (*)(void))type metadata accessor for FetchFaceRequest);
  return MEMORY[0x270FA2498](sub_25928ADC8, 0, 0);
}

uint64_t PhotosFaceInterface.fetch(shuffle:day:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  return sub_259282D38(a1, a2, a3, (uint64_t)"fetch(shuffle:day:)", 19, (uint64_t)&unk_26A37E538, a4);
}

uint64_t sub_25928055C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 160) = a5;
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 56) = type metadata accessor for FetchFaceRequestProto(0);
  *(void *)(v5 + 64) = swift_task_alloc();
  *(void *)(v5 + 72) = type metadata accessor for FetchFaceRequest();
  *(void *)(v5 + 80) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259280628, 0, 0);
}

uint64_t sub_259280628()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  char v3 = *(unsigned char *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  *(void *)(v0 + 88) = *(void *)(*(void *)(v0 + 32) + 16);
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v1, v4, v6);
  uint64_t v7 = v1 + *(int *)(v2 + 20);
  *(void *)uint64_t v7 = v5;
  *(unsigned char *)(v7 + 8) = v3 & 1;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v9 = sub_259309E90();
  *(void *)(v0 + 96) = v9;
  *(void *)(v0 + 104) = v8;
  return MEMORY[0x270FA2498](sub_25928078C, v9, v8);
}

uint64_t sub_25928078C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = 2;
  sub_25928A844(&qword_26A37E2E8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
  sub_259309750();
  swift_task_dealloc();
  uint64_t v4 = sub_259309710();
  uint64_t v6 = v5;
  v0[14] = v4;
  v0[15] = v5;
  sub_25928AB3C(v2, type metadata accessor for FetchFaceRequestProto);
  uint64_t v9 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[16] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_259280988;
  return v9(16, v4, v6);
}

uint64_t sub_259280988(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[17] = v1;
  swift_task_dealloc();
  unint64_t v5 = v4[15];
  uint64_t v6 = v4[14];
  if (v1)
  {
    sub_259261F50(v6, v5);
    uint64_t v7 = v4[12];
    uint64_t v8 = v4[13];
    uint64_t v9 = sub_259280AE4;
  }
  else
  {
    v4[18] = a1;
    sub_259261F50(v6, v5);
    uint64_t v7 = v4[12];
    uint64_t v8 = v4[13];
    uint64_t v9 = sub_25928ADA0;
  }
  return MEMORY[0x270FA2498](v9, v7, v8);
}

uint64_t sub_259280AE4()
{
  v0[19] = v0[17];
  sub_25928AB3C(v0[10], (uint64_t (*)(void))type metadata accessor for FetchFaceRequest);
  return MEMORY[0x270FA2498](sub_25928ADBC, 0, 0);
}

uint64_t PhotosFaceInterface.fetchByDay(shuffle:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_259280B88, 0, 0);
}

uint64_t sub_259280B88()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = swift_task_alloc();
  v0[2].i64[1] = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_259280C74;
  *(void *)(v2 + 112) = &unk_26A37E550;
  *(void *)(v2 + 120) = v1;
  *(unsigned char *)(v2 + 160) = 2;
  *(void *)(v2 + 96) = "fetchByDay(shuffle:)";
  *(void *)(v2 + 104) = 20;
  return MEMORY[0x270FA2498](sub_25927A8F8, 0, 0);
}

uint64_t sub_259280C74(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_25927C34C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_259280DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  long long v3[4] = a3;
  v3[2] = a1;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v5 = sub_259309E90();
  v3[5] = v5;
  v3[6] = v4;
  return MEMORY[0x270FA2498](sub_259280EC0, v5, v4);
}

uint64_t sub_259280EC0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_259280F60;
  uint64_t v2 = *(void *)(v0 + 32);
  return PhotosXPCClient.fetchFaceByDay(type:request:)(1, v2);
}

uint64_t sub_259280F60(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    v4[8] = a1;
    uint64_t v8 = v4[5];
    uint64_t v9 = v4[6];
    return MEMORY[0x270FA2498](sub_2592810A8, v8, v9);
  }
}

uint64_t sub_2592810A8()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PhotosFaceInterface.provideShuffleAssetList(people:pets:nature:cityscape:)(uint64_t a1, char a2, char a3, char a4)
{
  *(unsigned char *)(v5 + 42) = a4;
  *(unsigned char *)(v5 + 41) = a3;
  *(unsigned char *)(v5 + 40) = a2;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v4;
  return MEMORY[0x270FA2498](sub_2592810F8, 0, 0);
}

uint64_t sub_2592810F8()
{
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2592811BC;
  char v2 = *(unsigned char *)(v0 + 42);
  char v3 = *(unsigned char *)(v0 + 41);
  char v4 = *(unsigned char *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  return sub_2592886C0((uint64_t)"provideShuffleAssetList(people:pets:nature:cityscape:)", 54, 2, v5, v6, v4, v3, v2);
}

uint64_t sub_2592811BC(uint64_t a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_release();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t PhotosFaceInterface.provideShuffleAssetList(shuffle:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_25928131C, 0, 0);
}

uint64_t sub_25928131C()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = swift_task_alloc();
  v0[2].i64[1] = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_259281408;
  *(void *)(v2 + 112) = &unk_26A37E580;
  *(void *)(v2 + 120) = v1;
  *(unsigned char *)(v2 + 160) = 2;
  *(void *)(v2 + 96) = "provideShuffleAssetList(shuffle:)";
  *(void *)(v2 + 104) = 33;
  return MEMORY[0x270FA2498](sub_25927A2F4, 0, 0);
}

uint64_t sub_259281408(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_25928AD98, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_259281560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  long long v3[4] = a3;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E640);
  v3[5] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ShuffleID();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  v3[10] = type metadata accessor for CommunicationActor();
  v3[11] = sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v6 = sub_259309E90();
  v3[12] = v6;
  v3[13] = v5;
  return MEMORY[0x270FA2498](sub_2592816F8, v6, v5);
}

uint64_t sub_2592816F8()
{
  v0[14] = *(void *)(v0[3] + 16);
  char v3 = (uint64_t (*)(char))((char *)&dword_26A37E628 + dword_26A37E628);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2592817A8;
  return v3(1);
}

uint64_t sub_2592817A8(uint64_t a1)
{
  char v3 = (void *)*v2;
  v3[16] = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v3[12];
    uint64_t v7 = v3[13];
    return MEMORY[0x270FA2498](sub_259281900, v6, v7);
  }
}

uint64_t sub_259281900()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_25928AAD4(v4, *(void *)(v0 + 64), (uint64_t (*)(void))type metadata accessor for ShuffleID);
      sub_259309E90();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      if (sub_259309400()) {
        break;
      }
      sub_25928AB3C(*(void *)(v0 + 64), (uint64_t (*)(void))type metadata accessor for ShuffleID);
      v4 += v5;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 40);
    swift_bridgeObjectRelease();
    sub_25928AA6C(v7, v8, (uint64_t (*)(void))type metadata accessor for ShuffleID);
    uint64_t v6 = 0;
  }
  else
  {
LABEL_8:
    uint64_t v6 = 1;
  }
  uint64_t v9 = *(void *)(v0 + 48);
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v11 = *(void *)(v0 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, v6, 1, v9);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    sub_25928A7E4(*(void *)(v0 + 40));
    **(void **)(v0 + 16) = MEMORY[0x263F8EE78];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    sub_25928AA6C(*(void *)(v0 + 40), *(void *)(v0 + 72), (uint64_t (*)(void))type metadata accessor for ShuffleID);
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_26A37E648 + dword_26A37E648);
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_259281BC8;
    uint64_t v15 = *(void *)(v0 + 72);
    return v16(1, v15);
  }
}

uint64_t sub_259281BC8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[12];
    uint64_t v6 = v4[13];
    uint64_t v7 = sub_259281D90;
  }
  else
  {
    v4[19] = a1;
    uint64_t v5 = v4[12];
    uint64_t v6 = v4[13];
    uint64_t v7 = sub_259281CF0;
  }
  return MEMORY[0x270FA2498](v7, v5, v6);
}

uint64_t sub_259281CF0()
{
  sub_25928AB3C(*(void *)(v0 + 72), (uint64_t (*)(void))type metadata accessor for ShuffleID);
  **(void **)(v0 + 16) = *(void *)(v0 + 152);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_259281D90()
{
  sub_25928AB3C(*(void *)(v0 + 72), (uint64_t (*)(void))type metadata accessor for ShuffleID);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t PhotosFaceInterface.track(gallery:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_259281E54(a1, (uint64_t)"track(gallery:)", (uint64_t)&unk_26A37E598, a2);
}

uint64_t sub_259281E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for ShuffleID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  sub_25928AAD4(a1, (uint64_t)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ShuffleID);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v4;
  sub_25928AA6C((uint64_t)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, (uint64_t (*)(void))type metadata accessor for ShuffleID);
  swift_retain();
  uint64_t v14 = sub_259286000(a2, 15, 2, a3, v13);
  uint64_t result = swift_release();
  *a4 = v14;
  return result;
}

uint64_t sub_259281FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for ShuffleIDProto();
  v3[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259282038, 0, 0);
}

uint64_t sub_259282038()
{
  v0[8] = *(void *)(v0[4] + 16);
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v2 = sub_259309E90();
  v0[9] = v2;
  v0[10] = v1;
  return MEMORY[0x270FA2498](sub_259282130, v2, v1);
}

uint64_t sub_259282130()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = 2;
  sub_25928A844(&qword_26A37E438, (void (*)(uint64_t))type metadata accessor for ShuffleIDProto);
  sub_259309750();
  swift_task_dealloc();
  uint64_t v4 = sub_259309710();
  uint64_t v6 = v5;
  v0[11] = v4;
  v0[12] = v5;
  sub_25928AB3C(v1, (uint64_t (*)(void))type metadata accessor for ShuffleIDProto);
  uint64_t v9 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[13] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25927F818;
  return v9(8, v4, v6);
}

uint64_t PhotosFaceInterface.untrack(gallery:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_259282330, 0, 0);
}

uint64_t sub_259282330()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = swift_task_alloc();
  v0[2].i64[1] = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_25927FAAC;
  *(void *)(v2 + 96) = &unk_26A37E5B0;
  *(void *)(v2 + 104) = v1;
  *(unsigned char *)(v2 + 144) = 2;
  *(void *)(v2 + 80) = "untrack(gallery:)";
  *(void *)(v2 + 88) = 17;
  return MEMORY[0x270FA2498](sub_259279AE8, 0, 0);
}

uint64_t sub_25928241C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  long long v3[4] = type metadata accessor for CommunicationActor();
  v3[5] = sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v5 = sub_259309E90();
  return MEMORY[0x270FA2498](sub_259282514, v5, v4);
}

uint64_t sub_259282514()
{
  *(void *)(v0 + 48) = *(void *)(*(void *)(v0 + 16) + 16);
  uint64_t v2 = sub_259309E90();
  return MEMORY[0x270FA2498](sub_259282598, v2, v1);
}

uint64_t sub_259282598()
{
  uint64_t v1 = UUID.serialized(version:)();
  uint64_t v3 = v2;
  v0[7] = v1;
  v0[8] = v2;
  uint64_t v6 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25928AD94;
  return v6(9, v1, v3);
}

uint64_t PhotosFaceInterface.listGalleries()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_259282690, 0, 0);
}

uint64_t sub_259282690()
{
  swift_retain();
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *(void *)uint64_t v1 = v0;
  *(void *)(v1 + 8) = sub_25928ADAC;
  uint64_t v2 = *(void *)(v0 + 16);
  *(unsigned char *)(v1 + 152) = 2;
  *(void *)(v1 + 96) = 15;
  *(void *)(v1 + 104) = v2;
  *(void *)(v1 + 88) = "listGalleries()";
  return MEMORY[0x270FA2498](sub_259289E40, 0, 0);
}

uint64_t PhotosFaceInterface.fetch(gallery:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25928278C(a1, (uint64_t)"fetch(gallery:)", 15, (uint64_t)&unk_26A37E5D0, a2);
}

uint64_t sub_25928278C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  int64_t v19 = a5;
  uint64_t v10 = sub_259309440();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  double v13 = MEMORY[0x270FA5388](v10);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10, v13);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  swift_retain();
  uint64_t v16 = sub_259286000(a2, a3, 2, a4, v15);
  uint64_t result = swift_release();
  *int64_t v19 = v16;
  return result;
}

uint64_t sub_2592828F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for FetchFaceRequestProto(0);
  v3[7] = swift_task_alloc();
  v3[8] = type metadata accessor for FetchFaceRequest();
  v3[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2592829BC, 0, 0);
}

uint64_t sub_2592829BC()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[5];
  v0[10] = *(void *)(v0[4] + 16);
  uint64_t v4 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v1, v3, v4);
  uint64_t v5 = v1 + *(int *)(v2 + 20);
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v7 = sub_259309E90();
  v0[11] = v7;
  v0[12] = v6;
  return MEMORY[0x270FA2498](sub_259282B10, v7, v6);
}

uint64_t sub_259282B10()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = 2;
  sub_25928A844(&qword_26A37E2E8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
  sub_259309750();
  swift_task_dealloc();
  uint64_t v4 = sub_259309710();
  uint64_t v6 = v5;
  v0[13] = v4;
  v0[14] = v5;
  sub_25928AB3C(v2, type metadata accessor for FetchFaceRequestProto);
  uint64_t v9 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[15] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_259280350;
  return v9(11, v4, v6);
}

uint64_t PhotosFaceInterface.fetch(gallery:day:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  return sub_259282D38(a1, a2, a3, (uint64_t)"fetch(gallery:day:)", 19, (uint64_t)&unk_26A37E5E0, a4);
}

uint64_t sub_259282D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  uint64_t v22 = a4;
  uint64_t v25 = a7;
  uint64_t v11 = sub_259309440();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  double v14 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v15, a1, v11, v14);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v17 = (v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18 + v16, v15, v11);
  unint64_t v19 = v18 + v17;
  *(void *)unint64_t v19 = a2;
  *(unsigned char *)(v19 + 8) = a3 & 1;
  swift_retain();
  uint64_t v20 = sub_259286000(v22, v23, 2, v24, v18);
  uint64_t result = swift_release();
  *uint64_t v25 = v20;
  return result;
}

uint64_t sub_259282EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 160) = a5;
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 56) = type metadata accessor for FetchFaceRequestProto(0);
  *(void *)(v5 + 64) = swift_task_alloc();
  *(void *)(v5 + 72) = type metadata accessor for FetchFaceRequest();
  *(void *)(v5 + 80) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259282F88, 0, 0);
}

uint64_t sub_259282F88()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  char v3 = *(unsigned char *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  *(void *)(v0 + 88) = *(void *)(*(void *)(v0 + 32) + 16);
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v1, v4, v6);
  uint64_t v7 = v1 + *(int *)(v2 + 20);
  *(void *)uint64_t v7 = v5;
  *(unsigned char *)(v7 + 8) = v3 & 1;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v9 = sub_259309E90();
  *(void *)(v0 + 96) = v9;
  *(void *)(v0 + 104) = v8;
  return MEMORY[0x270FA2498](sub_2592830EC, v9, v8);
}

uint64_t sub_2592830EC()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = 2;
  sub_25928A844(&qword_26A37E2E8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
  sub_259309750();
  swift_task_dealloc();
  uint64_t v4 = sub_259309710();
  uint64_t v6 = v5;
  v0[14] = v4;
  v0[15] = v5;
  sub_25928AB3C(v2, type metadata accessor for FetchFaceRequestProto);
  uint64_t v9 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_26A37F448 + dword_26A37F448);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[16] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_259280988;
  return v9(11, v4, v6);
}

uint64_t PhotosFaceInterface.makeFullMask(localIdentifier:)(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x270FA2498](sub_259283308, 0, 0);
}

uint64_t sub_259283308()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[3].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[2], v0[2], 8uLL);
  uint64_t v2 = swift_task_alloc();
  v0[3].i64[1] = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_2592833FC;
  *(unsigned char *)(v2 + 184) = 2;
  *(void *)(v2 + 136) = &unk_26A37E5F8;
  *(void *)(v2 + 144) = v1;
  *(void *)(v2 + 128) = 30;
  *(void *)(v2 + 112) = v0 + 1;
  *(void *)(v2 + 120) = "makeFullMask(localIdentifier:)";
  return MEMORY[0x270FA2498](sub_25927B16C, 0, 0);
}

uint64_t sub_2592833FC()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_259283534;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_259283518;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_259283518()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_259283534()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_259283598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  long long v3[4] = a3;
  v3[2] = a1;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v5 = sub_259309E90();
  v3[5] = v5;
  v3[6] = v4;
  return MEMORY[0x270FA2498](sub_25928368C, v5, v4);
}

uint64_t sub_25928368C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25928372C;
  uint64_t v2 = *(void *)(v0 + 32);
  return PhotosXPCClient.generateMask(identifier:)(v2);
}

uint64_t sub_25928372C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  uint64_t v7 = (void *)*v3;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = (uint64_t (*)(void))v7[1];
    return v8();
  }
  else
  {
    v6[8] = a2;
    v6[9] = a1;
    uint64_t v10 = v6[5];
    uint64_t v11 = v6[6];
    return MEMORY[0x270FA2498](sub_259283884, v10, v11);
  }
}

uint64_t sub_259283884()
{
  *(int8x16_t *)*(void *)(v0 + 16) = vextq_s8(*(int8x16_t *)(v0 + 64), *(int8x16_t *)(v0 + 64), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PhotosFaceInterface.deinit()
{
  swift_release();
  return v0;
}

uint64_t PhotosFaceInterface.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_259283904(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 88) = a6;
  *(void *)(v8 + 96) = a8;
  *(unsigned char *)(v8 + 248) = a7;
  *(void *)(v8 + 72) = a2;
  *(void *)(v8 + 80) = a5;
  *(void *)(v8 + 64) = a1;
  uint64_t v10 = type metadata accessor for StoredPhoto(0);
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 112) = *(void *)(v10 - 8);
  *(void *)(v8 + 120) = swift_task_alloc();
  *(void *)(v8 + 128) = swift_task_alloc();
  *(void *)(v8 + 136) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E690);
  *(void *)(v8 + 144) = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E6D0);
  *(void *)(v8 + 152) = v11;
  *(void *)(v8 + 160) = *(void *)(v11 - 8);
  *(void *)(v8 + 168) = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E6D8);
  *(void *)(v8 + 176) = v12;
  *(void *)(v8 + 184) = *(void *)(v12 - 8);
  *(void *)(v8 + 192) = swift_task_alloc();
  uint64_t v13 = swift_task_alloc();
  *(void *)(v8 + 200) = v13;
  unint64_t v16 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  double v14 = (void *)swift_task_alloc();
  *(void *)(v8 + 208) = v14;
  *double v14 = v8;
  v14[1] = sub_259283B70;
  return v16(v13);
}

uint64_t sub_259283B70()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_259283DC4;
  }
  else {
    uint64_t v2 = sub_259283C84;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_259283C84()
{
  (*(void (**)(void, void, void))(v0[23] + 16))(v0[24], v0[25], v0[22]);
  sub_259273278(&qword_26A37E6E0, &qword_26A37E6D8);
  sub_259309F80();
  uint64_t v1 = sub_259273278(&qword_26A37E6E8, &qword_26A37E6D0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[28] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_259283E74;
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  return MEMORY[0x270FA1E88](v3, 0, 0, v0 + 2, v4, v1);
}

uint64_t sub_259283DC4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_259283E74()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_259284508;
  }
  else {
    uint64_t v1 = sub_259283F84;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_259283F84()
{
  os_log_type_t v35 = v0;
  uint64_t v1 = v0[18];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[14] + 48))(v1, 1, v0[13]) == 1)
  {
    (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
    if (qword_26A37C7D0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_259309860();
    __swift_project_value_buffer(v2, (uint64_t)qword_26A37F348);
    uint64_t v3 = sub_259309840();
    os_log_type_t v4 = sub_25930A1D0();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = v0[25];
    uint64_t v7 = v0[22];
    uint64_t v8 = v0[23];
    if (v5)
    {
      uint64_t v31 = v0[12];
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v34 = v10;
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v11 = sub_25930A400();
      v0[6] = sub_25924FC14(v11, v12, &v34);
      sub_25930A2A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2048;
      v0[7] = v31;
      sub_25930A2A0();
      _os_log_impl(&dword_25921A000, v3, v4, "%s (%ld) finished.", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v10, -1, -1);
      MEMORY[0x25A2DBAF0](v9, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
  else
  {
    sub_25928AA6C(v1, v0[17], type metadata accessor for StoredPhoto);
    if (qword_26A37C7D0 != -1) {
      swift_once();
    }
    uint64_t v13 = v0[16];
    uint64_t v14 = v0[17];
    uint64_t v15 = sub_259309860();
    __swift_project_value_buffer(v15, (uint64_t)qword_26A37F348);
    sub_25928AAD4(v14, v13, type metadata accessor for StoredPhoto);
    unint64_t v16 = sub_259309840();
    os_log_type_t v17 = sub_25930A1D0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v0[16];
    if (v18)
    {
      uint64_t v20 = v0[15];
      uint64_t v32 = v0[12];
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v34 = v22;
      *(_DWORD *)uint64_t v21 = 136315650;
      uint64_t v23 = sub_25930A400();
      *(void *)(v21 + 4) = sub_25924FC14(v23, v24, &v34);
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2048;
      *(void *)(v21 + 14) = v32;
      *(_WORD *)(v21 + 22) = 2080;
      sub_25928AAD4(v19, v20, type metadata accessor for StoredPhoto);
      uint64_t v25 = sub_259309BE0();
      *(void *)(v21 + 24) = sub_25924FC14(v25, v26, &v34);
      swift_bridgeObjectRelease();
      sub_25928AB3C(v19, type metadata accessor for StoredPhoto);
      _os_log_impl(&dword_25921A000, v16, v17, "%s (%ld) has next result: %s", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v22, -1, -1);
      MEMORY[0x25A2DBAF0](v21, -1, -1);
    }
    else
    {
      sub_25928AB3C(v0[16], type metadata accessor for StoredPhoto);
    }

    uint64_t v33 = (uint64_t (*)(uint64_t))(v0[8] + *(int *)v0[8]);
    uint64_t v29 = (void *)swift_task_alloc();
    v0[29] = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_259284858;
    uint64_t v30 = v0[17];
    return v33(v30);
  }
}

uint64_t sub_259284508()
{
  unint64_t v24 = v0;
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  uint64_t v1 = (void *)v0[2];
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309860();
  __swift_project_value_buffer(v2, (uint64_t)qword_26A37F348);
  id v3 = v1;
  id v4 = v1;
  BOOL v5 = sub_259309840();
  os_log_type_t v6 = sub_25930A1B0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = v0[25];
  uint64_t v9 = v0[22];
  uint64_t v10 = v0[23];
  if (v7)
  {
    uint64_t v22 = v0[22];
    uint64_t v18 = v0[12];
    os_log_type_t type = v6;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v23 = v21;
    *(_DWORD *)uint64_t v11 = 136315650;
    uint64_t v12 = sub_25930A400();
    v0[3] = sub_25924FC14(v12, v13, &v23);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    v0[4] = v18;
    sub_25930A2A0();
    *(_WORD *)(v11 + 22) = 2112;
    id v14 = v1;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v15;
    sub_25930A2A0();
    *uint64_t v19 = v15;

    _os_log_impl(&dword_25921A000, v5, type, "%s (%ld) failed: %@", (uint8_t *)v11, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E078);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v21, -1, -1);
    MEMORY[0x25A2DBAF0](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v22);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_259284858()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_259284A6C;
  }
  else {
    uint64_t v2 = sub_25928496C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_25928496C()
{
  sub_25928AB3C(v0[17], type metadata accessor for StoredPhoto);
  uint64_t v1 = sub_259273278(&qword_26A37E6E8, &qword_26A37E6D0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[28] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_259283E74;
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  return MEMORY[0x270FA1E88](v3, 0, 0, v0 + 2, v4, v1);
}

uint64_t sub_259284A6C()
{
  uint64_t v27 = v0;
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[19];
  sub_25928AB3C(v0[17], type metadata accessor for StoredPhoto);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)v0[30];
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_259309860();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A37F348);
  id v6 = v4;
  id v7 = v4;
  uint64_t v8 = sub_259309840();
  os_log_type_t v9 = sub_25930A1B0();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = v0[25];
  uint64_t v12 = v0[22];
  uint64_t v13 = v0[23];
  if (v10)
  {
    uint64_t v25 = v0[22];
    uint64_t v21 = v0[12];
    os_log_type_t type = v9;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v26 = v24;
    *(_DWORD *)uint64_t v14 = 136315650;
    uint64_t v15 = sub_25930A400();
    v0[3] = sub_25924FC14(v15, v16, &v26);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2048;
    v0[4] = v21;
    sub_25930A2A0();
    *(_WORD *)(v14 + 22) = 2112;
    id v17 = v4;
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v18;
    sub_25930A2A0();
    *uint64_t v22 = v18;

    _os_log_impl(&dword_25921A000, v8, type, "%s (%ld) failed: %@", (uint8_t *)v14, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E078);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v22, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v24, -1, -1);
    MEMORY[0x25A2DBAF0](v14, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v25);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_259284DE0(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 88) = a6;
  *(void *)(v8 + 96) = a8;
  *(unsigned char *)(v8 + 248) = a7;
  *(void *)(v8 + 72) = a2;
  *(void *)(v8 + 80) = a5;
  *(void *)(v8 + 64) = a1;
  uint64_t v10 = type metadata accessor for StoredPhoto(0);
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 112) = *(void *)(v10 - 8);
  *(void *)(v8 + 120) = swift_task_alloc();
  *(void *)(v8 + 128) = swift_task_alloc();
  *(void *)(v8 + 136) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E690);
  *(void *)(v8 + 144) = swift_task_alloc();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E698);
  *(void *)(v8 + 152) = v11;
  *(void *)(v8 + 160) = *(void *)(v11 - 8);
  *(void *)(v8 + 168) = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E6A0);
  *(void *)(v8 + 176) = v12;
  *(void *)(v8 + 184) = *(void *)(v12 - 8);
  *(void *)(v8 + 192) = swift_task_alloc();
  uint64_t v13 = swift_task_alloc();
  *(void *)(v8 + 200) = v13;
  unint64_t v16 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v8 + 208) = v14;
  *uint64_t v14 = v8;
  v14[1] = sub_25928504C;
  return v16(v13);
}

uint64_t sub_25928504C()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25928AD8C;
  }
  else {
    uint64_t v2 = sub_259285160;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_259285160()
{
  (*(void (**)(void, void, void))(v0[23] + 16))(v0[24], v0[25], v0[22]);
  sub_259273278(&qword_26A37E6A8, &qword_26A37E6A0);
  sub_259309F80();
  uint64_t v1 = sub_259273278(&qword_26A37E6B0, &qword_26A37E698);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[28] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2592852A0;
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  return MEMORY[0x270FA1E88](v3, 0, 0, v0 + 2, v4, v1);
}

uint64_t sub_2592852A0()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_25928AD90;
  }
  else {
    uint64_t v1 = sub_2592853B0;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_2592853B0()
{
  os_log_type_t v35 = v0;
  uint64_t v1 = v0[18];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[14] + 48))(v1, 1, v0[13]) == 1)
  {
    (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
    if (qword_26A37C7D0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_259309860();
    __swift_project_value_buffer(v2, (uint64_t)qword_26A37F348);
    uint64_t v3 = sub_259309840();
    os_log_type_t v4 = sub_25930A1D0();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = v0[25];
    uint64_t v7 = v0[22];
    uint64_t v8 = v0[23];
    if (v5)
    {
      uint64_t v31 = v0[12];
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v34 = v10;
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v11 = sub_25930A400();
      v0[6] = sub_25924FC14(v11, v12, &v34);
      sub_25930A2A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2048;
      v0[7] = v31;
      sub_25930A2A0();
      _os_log_impl(&dword_25921A000, v3, v4, "%s (%ld) finished.", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v10, -1, -1);
      MEMORY[0x25A2DBAF0](v9, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
  else
  {
    sub_25928AA6C(v1, v0[17], type metadata accessor for StoredPhoto);
    if (qword_26A37C7D0 != -1) {
      swift_once();
    }
    uint64_t v13 = v0[16];
    uint64_t v14 = v0[17];
    uint64_t v15 = sub_259309860();
    __swift_project_value_buffer(v15, (uint64_t)qword_26A37F348);
    sub_25928AAD4(v14, v13, type metadata accessor for StoredPhoto);
    unint64_t v16 = sub_259309840();
    os_log_type_t v17 = sub_25930A1D0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v0[16];
    if (v18)
    {
      uint64_t v20 = v0[15];
      uint64_t v32 = v0[12];
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v34 = v22;
      *(_DWORD *)uint64_t v21 = 136315650;
      uint64_t v23 = sub_25930A400();
      *(void *)(v21 + 4) = sub_25924FC14(v23, v24, &v34);
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2048;
      *(void *)(v21 + 14) = v32;
      *(_WORD *)(v21 + 22) = 2080;
      sub_25928AAD4(v19, v20, type metadata accessor for StoredPhoto);
      uint64_t v25 = sub_259309BE0();
      *(void *)(v21 + 24) = sub_25924FC14(v25, v26, &v34);
      swift_bridgeObjectRelease();
      sub_25928AB3C(v19, type metadata accessor for StoredPhoto);
      _os_log_impl(&dword_25921A000, v16, v17, "%s (%ld) has next result: %s", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v22, -1, -1);
      MEMORY[0x25A2DBAF0](v21, -1, -1);
    }
    else
    {
      sub_25928AB3C(v0[16], type metadata accessor for StoredPhoto);
    }

    uint64_t v33 = (uint64_t (*)(uint64_t))(v0[8] + *(int *)v0[8]);
    uint64_t v29 = (void *)swift_task_alloc();
    v0[29] = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_259285934;
    uint64_t v30 = v0[17];
    return v33(v30);
  }
}

uint64_t sub_259285934()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_25928ADB8;
  }
  else {
    uint64_t v2 = sub_259285A48;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_259285A48()
{
  sub_25928AB3C(v0[17], type metadata accessor for StoredPhoto);
  uint64_t v1 = sub_259273278(&qword_26A37E6B0, &qword_26A37E698);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[28] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2592852A0;
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  return MEMORY[0x270FA1E88](v3, 0, 0, v0 + 2, v4, v1);
}

uint64_t sub_259285B48()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_259285B88(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_2592438A0;
  return sub_2592793DC(a1, v5, v4);
}

uint64_t sub_259285C34(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37CE58);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = a5;
  swift_retain();
  uint64_t v13 = sub_2592D7740(100);
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_259309860();
  __swift_project_value_buffer(v14, (uint64_t)qword_26A37F348);
  uint64_t v15 = sub_259309840();
  os_log_type_t v16 = sub_25930A1D0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v42 = v38;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v37 = v17 + 4;
    uint64_t v18 = sub_25930A400();
    uint64_t v39 = v13;
    uint64_t v41 = sub_25924FC14(v18, v19, &v42);
    sub_25930A2A0();
    uint64_t v13 = v39;
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2048;
    uint64_t v41 = v13;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v15, v16, "Executing %s (%ld)", (uint8_t *)v17, 0x16u);
    uint64_t v20 = v38;
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v20, -1, -1);
    MEMORY[0x25A2DBAF0](v17, -1, -1);
  }

  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v40;
  *(void *)(v21 + 16) = a4;
  *(void *)(v21 + 24) = v22;
  *(void *)(v21 + 32) = a1;
  *(void *)(v21 + 40) = a2;
  *(unsigned char *)(v21 + 48) = a3;
  *(void *)(v21 + 56) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E610);
  uint64_t v23 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DCA8);
  uint64_t v24 = swift_allocObject();
  *(_DWORD *)(v24 + 24) = 0;
  *(void *)(v24 + 16) = 0;
  swift_retain();
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v26 = sub_2592FDF40(MEMORY[0x263F8EE78]);
  uint64_t v28 = v27;
  uint64_t v29 = sub_2592FDEEC(v25);
  uint64_t v31 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E680);
  uint64_t v32 = swift_allocObject();
  *(_DWORD *)(v32 + 64) = 0;
  *(void *)(v32 + 16) = v26;
  *(void *)(v32 + 24) = v28;
  uint64_t v33 = MEMORY[0x263F8EE88];
  *(void *)(v32 + 32) = MEMORY[0x263F8EE88];
  *(void *)(v32 + 40) = v29;
  *(void *)(v32 + 48) = v31;
  *(void *)(v32 + 56) = v33;
  *(void *)(v23 + 16) = v32;
  *(void *)(v23 + 24) = v24;
  uint64_t v34 = sub_259309F20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v12, 1, 1, v34);
  os_log_type_t v35 = (void *)swift_allocObject();
  v35[2] = 0;
  v35[3] = 0;
  v35[4] = &unk_26A37E6C0;
  v35[5] = v21;
  v35[6] = v23;
  swift_retain();
  sub_2592EBE08((uint64_t)v12, (uint64_t)&unk_26A37E6C8, (uint64_t)v35);
  swift_release();
  swift_release();
  return v23;
}

uint64_t sub_259286000(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37CE58);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = a5;
  swift_retain();
  uint64_t v13 = sub_2592D7740(100);
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_259309860();
  __swift_project_value_buffer(v14, (uint64_t)qword_26A37F348);
  uint64_t v15 = sub_259309840();
  os_log_type_t v16 = sub_25930A1D0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v42 = v38;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v37 = v17 + 4;
    uint64_t v18 = sub_25930A400();
    uint64_t v39 = v13;
    uint64_t v41 = sub_25924FC14(v18, v19, &v42);
    sub_25930A2A0();
    uint64_t v13 = v39;
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2048;
    uint64_t v41 = v13;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v15, v16, "Executing %s (%ld)", (uint8_t *)v17, 0x16u);
    uint64_t v20 = v38;
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v20, -1, -1);
    MEMORY[0x25A2DBAF0](v17, -1, -1);
  }

  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v40;
  *(void *)(v21 + 16) = a4;
  *(void *)(v21 + 24) = v22;
  *(void *)(v21 + 32) = a1;
  *(void *)(v21 + 40) = a2;
  *(unsigned char *)(v21 + 48) = a3;
  *(void *)(v21 + 56) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E610);
  uint64_t v23 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DCA8);
  uint64_t v24 = swift_allocObject();
  *(_DWORD *)(v24 + 24) = 0;
  *(void *)(v24 + 16) = 0;
  swift_retain();
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v26 = sub_2592FDF40(MEMORY[0x263F8EE78]);
  uint64_t v28 = v27;
  uint64_t v29 = sub_2592FDEEC(v25);
  uint64_t v31 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E680);
  uint64_t v32 = swift_allocObject();
  *(_DWORD *)(v32 + 64) = 0;
  *(void *)(v32 + 16) = v26;
  *(void *)(v32 + 24) = v28;
  uint64_t v33 = MEMORY[0x263F8EE88];
  *(void *)(v32 + 32) = MEMORY[0x263F8EE88];
  *(void *)(v32 + 40) = v29;
  *(void *)(v32 + 48) = v31;
  *(void *)(v32 + 56) = v33;
  *(void *)(v23 + 16) = v32;
  *(void *)(v23 + 24) = v24;
  uint64_t v34 = sub_259309F20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v12, 1, 1, v34);
  os_log_type_t v35 = (void *)swift_allocObject();
  v35[2] = 0;
  v35[3] = 0;
  v35[4] = &unk_26A37E678;
  v35[5] = v21;
  v35[6] = v23;
  swift_retain();
  sub_2592EBE08((uint64_t)v12, (uint64_t)&unk_26A37E688, (uint64_t)v35);
  swift_release();
  swift_release();
  return v23;
}

uint64_t sub_2592863CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 120) = a5;
  *(void *)(v6 + 128) = a6;
  *(void *)(v6 + 104) = a2;
  *(void *)(v6 + 112) = a4;
  *(unsigned char *)(v6 + 184) = a3;
  *(void *)(v6 + 96) = a1;
  return MEMORY[0x270FA2498](sub_2592863F8, 0, 0);
}

uint64_t sub_2592863F8()
{
  uint64_t v13 = v0;
  uint64_t v1 = sub_2592D7740(100);
  v0[17] = v1;
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309860();
  v0[18] = __swift_project_value_buffer(v2, (uint64_t)qword_26A37F348);
  uint64_t v3 = sub_259309840();
  os_log_type_t v4 = sub_25930A1D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_25930A400();
    v0[10] = sub_25924FC14(v7, v8, &v12);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    v0[11] = v1;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v3, v4, "Executing %s (%ld)", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v6, -1, -1);
    MEMORY[0x25A2DBAF0](v5, -1, -1);
  }

  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v10 = sub_259309E90();
  return MEMORY[0x270FA2498](sub_259286690, v10, v9);
}

uint64_t sub_259286690()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[19] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_259286730;
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  return PhotosXPCClient.sendMessage(request:)(v3, v2);
}

uint64_t sub_259286730(uint64_t a1, uint64_t a2)
{
  os_log_type_t v4 = (void *)*v3;
  v4[20] = a1;
  v4[21] = a2;
  v4[22] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_259286A88;
  }
  else {
    uint64_t v5 = sub_259286848;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_259286848()
{
  uint64_t v17 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_259309840();
  os_log_type_t v2 = sub_25930A1D0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[21];
    uint64_t v13 = v0[17];
    uint64_t v14 = v0[20];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = v15;
    *(_DWORD *)uint64_t v4 = 136315650;
    uint64_t v5 = sub_25930A400();
    v0[6] = sub_25924FC14(v5, v6, &v16);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2048;
    v0[7] = v13;
    sub_25930A2A0();
    *(_WORD *)(v4 + 22) = 2080;
    v0[2] = v14;
    v0[3] = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_259309BE0();
    v0[9] = sub_25924FC14(v7, v8, &v16);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25921A000, v1, v2, "%s (%ld) finished: %s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v15, -1, -1);
    MEMORY[0x25A2DBAF0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v10 = v0[20];
  uint64_t v11 = v0[21];
  return v9(v10, v11);
}

uint64_t sub_259286A88()
{
  unint64_t v19 = v0;
  uint64_t v1 = (void *)v0[22];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_259309840();
  os_log_type_t v5 = sub_25930A1B0();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (void *)v0[22];
    uint64_t v16 = v0[17];
    uint64_t v7 = swift_slowAlloc();
    unint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v9 = sub_25930A400();
    v0[8] = sub_25924FC14(v9, v10, &v18);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    v0[4] = v16;
    *(_WORD *)(v7 + 12) = 2048;
    sub_25930A2A0();
    *(_WORD *)(v7 + 22) = 2112;
    id v11 = v6;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v12;
    sub_25930A2A0();
    void *v8 = v12;

    _os_log_impl(&dword_25921A000, v4, v5, "%s (%ld) failed: %@", (uint8_t *)v7, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E078);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v17, -1, -1);
    MEMORY[0x25A2DBAF0](v7, -1, -1);
  }
  else
  {
    uint64_t v13 = (void *)v0[22];
  }
  swift_willThrow();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_259286CF8()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for AlbumID() - 8) + 80);
  uint64_t v2 = (v1 + 24) & ~v1;
  swift_release();
  uint64_t v3 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_259286DF4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AlbumID() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_2592438A0;
  return sub_25927BB30(a1, v5, v6);
}

uint64_t sub_259286EDC(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_2592438A0;
  return sub_25927C3B0(a1, v5, v4);
}

uint64_t sub_259286F88(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v4 + 96) = a2;
  *(void *)(v4 + 104) = a4;
  *(unsigned char *)(v4 + 152) = a3;
  *(void *)(v4 + 88) = a1;
  return MEMORY[0x270FA2498](sub_259286FB0, 0, 0);
}

uint64_t sub_259286FB0()
{
  uint64_t v13 = v0;
  uint64_t v1 = sub_2592D7740(100);
  v0[14] = v1;
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309860();
  v0[15] = __swift_project_value_buffer(v2, (uint64_t)qword_26A37F348);
  uint64_t v3 = sub_259309840();
  os_log_type_t v4 = sub_25930A1D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_25930A400();
    v0[9] = sub_25924FC14(v7, v8, &v12);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    v0[10] = v1;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v3, v4, "Executing %s (%ld)", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v6, -1, -1);
    MEMORY[0x25A2DBAF0](v5, -1, -1);
  }

  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v10 = sub_259309E90();
  return MEMORY[0x270FA2498](sub_259287248, v10, v9);
}

uint64_t sub_259287248()
{
  uint64_t v3 = (uint64_t (*)(char))((char *)&dword_26A37E660 + dword_26A37E660);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2592872F4;
  return v3(0);
}

uint64_t sub_2592872F4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 136) = a1;
  *(void *)(v3 + 144) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_259287648;
  }
  else {
    uint64_t v4 = sub_259287408;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_259287408()
{
  uint64_t v15 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_259309840();
  os_log_type_t v2 = sub_25930A1D0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[17];
    uint64_t v12 = v0[14];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = v13;
    *(_DWORD *)uint64_t v4 = 136315650;
    uint64_t v5 = sub_25930A400();
    v0[5] = sub_25924FC14(v5, v6, &v14);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2048;
    v0[6] = v12;
    sub_25930A2A0();
    *(_WORD *)(v4 + 22) = 2080;
    v0[7] = v3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E668);
    uint64_t v7 = sub_259309BE0();
    v0[8] = sub_25924FC14(v7, v8, &v14);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25921A000, v1, v2, "%s (%ld) finished: %s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v13, -1, -1);
    MEMORY[0x25A2DBAF0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v10 = v0[17];
  return v9(v10);
}

uint64_t sub_259287648()
{
  unint64_t v19 = v0;
  uint64_t v1 = (void *)v0[18];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_259309840();
  os_log_type_t v5 = sub_25930A1B0();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (void *)v0[18];
    uint64_t v16 = v0[14];
    uint64_t v7 = swift_slowAlloc();
    unint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v9 = sub_25930A400();
    v0[2] = sub_25924FC14(v9, v10, &v18);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    v0[3] = v16;
    sub_25930A2A0();
    *(_WORD *)(v7 + 22) = 2112;
    id v11 = v6;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v12;
    sub_25930A2A0();
    void *v8 = v12;

    _os_log_impl(&dword_25921A000, v4, v5, "%s (%ld) failed: %@", (uint8_t *)v7, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E078);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v17, -1, -1);
    MEMORY[0x25A2DBAF0](v7, -1, -1);
  }
  else
  {
    uint64_t v13 = (void *)v0[18];
  }
  swift_willThrow();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_2592878B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_259309440() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_2592438A0;
  return sub_25927D538(a1, v5, v6);
}

uint64_t sub_2592879A4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_259309440() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);
  id v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *id v11 = v2;
  v11[1] = sub_2592438A0;
  return sub_25927DCF8(a1, v6, v7, v9, v10);
}

uint64_t sub_259287AD0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 112) = a5;
  *(void *)(v6 + 120) = a6;
  *(void *)(v6 + 96) = a2;
  *(void *)(v6 + 104) = a4;
  *(unsigned char *)(v6 + 200) = a3;
  *(void *)(v6 + 88) = a1;
  *(void *)(v6 + 128) = type metadata accessor for AlbumID();
  *(void *)(v6 + 136) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259287B70, 0, 0);
}

uint64_t sub_259287B70()
{
  uint64_t v13 = v0;
  uint64_t v1 = sub_2592D7740(100);
  v0[18] = v1;
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309860();
  v0[19] = __swift_project_value_buffer(v2, (uint64_t)qword_26A37F348);
  id v3 = sub_259309840();
  os_log_type_t v4 = sub_25930A1D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_25930A400();
    v0[9] = sub_25924FC14(v7, v8, &v12);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    v0[10] = v1;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v3, v4, "Executing %s (%ld)", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v6, -1, -1);
    MEMORY[0x25A2DBAF0](v5, -1, -1);
  }

  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v10 = sub_259309E90();
  v0[20] = v10;
  v0[21] = v9;
  return MEMORY[0x270FA2498](sub_259287E08, v10, v9);
}

uint64_t sub_259287E08()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v3 = v0[15];
  sub_259309430();
  uint64_t v5 = (void *)(v1 + *(int *)(v2 + 20));
  *uint64_t v5 = v4;
  v5[1] = v3;
  uint64_t v9 = (uint64_t (*)(char, uint64_t))((char *)&dword_26A37E658 + dword_26A37E658);
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[22] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_259287EF0;
  uint64_t v7 = v0[17];
  return v9(0, v7);
}

uint64_t sub_259287EF0(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[23] = a1;
  v4[24] = v1;
  swift_task_dealloc();
  sub_25928AB3C(v3[17], (uint64_t (*)(void))type metadata accessor for AlbumID);
  if (v1)
  {
    uint64_t v5 = v4[20];
    uint64_t v6 = v4[21];
    uint64_t v7 = sub_259288294;
  }
  else
  {
    uint64_t v7 = sub_25928804C;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  return MEMORY[0x270FA2498](v7, v5, v6);
}

uint64_t sub_25928804C()
{
  uint64_t v15 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_259309840();
  os_log_type_t v2 = sub_25930A1D0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[23];
    uint64_t v12 = v0[18];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = v13;
    *(_DWORD *)uint64_t v4 = 136315650;
    uint64_t v5 = sub_25930A400();
    v0[5] = sub_25924FC14(v5, v6, &v14);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2048;
    v0[6] = v12;
    sub_25930A2A0();
    *(_WORD *)(v4 + 22) = 2080;
    v0[7] = v3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E3F0);
    uint64_t v7 = sub_259309BE0();
    v0[8] = sub_25924FC14(v7, v8, &v14);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25921A000, v1, v2, "%s (%ld) finished: %s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v13, -1, -1);
    MEMORY[0x25A2DBAF0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v10 = v0[23];
  return v9(v10);
}

uint64_t sub_259288294()
{
  return MEMORY[0x270FA2498](sub_2592882B0, 0, 0);
}

uint64_t sub_2592882B0()
{
  unint64_t v19 = v0;
  uint64_t v1 = (void *)v0[24];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_259309840();
  os_log_type_t v5 = sub_25930A1B0();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (void *)v0[24];
    uint64_t v16 = v0[18];
    uint64_t v7 = swift_slowAlloc();
    unint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v9 = sub_25930A400();
    v0[2] = sub_25924FC14(v9, v10, &v18);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    v0[3] = v16;
    sub_25930A2A0();
    *(_WORD *)(v7 + 22) = 2112;
    id v11 = v6;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v12;
    sub_25930A2A0();
    void *v8 = v12;

    _os_log_impl(&dword_25921A000, v4, v5, "%s (%ld) failed: %@", (uint8_t *)v7, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E078);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v17, -1, -1);
    MEMORY[0x25A2DBAF0](v7, -1, -1);
  }
  else
  {
    uint64_t v13 = (void *)v0[24];
  }
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_25928852C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ShuffleID() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_2592438A0;
  return sub_25927F4A8(a1, v5, v6);
}

uint64_t sub_259288614(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_2592438A0;
  return sub_25927FBC8(a1, v5, v4);
}

uint64_t sub_2592886C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8)
{
  *(unsigned char *)(v8 + 195) = a8;
  *(unsigned char *)(v8 + 194) = a7;
  *(unsigned char *)(v8 + 193) = a6;
  *(void *)(v8 + 104) = a4;
  *(void *)(v8 + 112) = a5;
  *(unsigned char *)(v8 + 192) = a3;
  *(void *)(v8 + 88) = a1;
  *(void *)(v8 + 96) = a2;
  *(void *)(v8 + 120) = type metadata accessor for ShuffleID();
  *(void *)(v8 + 128) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_259288768, 0, 0);
}

uint64_t sub_259288768()
{
  uint64_t v13 = v0;
  uint64_t v1 = sub_2592D7740(100);
  v0[17] = v1;
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309860();
  v0[18] = __swift_project_value_buffer(v2, (uint64_t)qword_26A37F348);
  id v3 = sub_259309840();
  os_log_type_t v4 = sub_25930A1D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_25930A400();
    v0[9] = sub_25924FC14(v7, v8, &v12);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    v0[10] = v1;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v3, v4, "Executing %s (%ld)", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v6, -1, -1);
    MEMORY[0x25A2DBAF0](v5, -1, -1);
  }

  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v10 = sub_259309E90();
  v0[19] = v10;
  v0[20] = v9;
  return MEMORY[0x270FA2498](sub_259288A00, v10, v9);
}

uint64_t sub_259288A00()
{
  uint64_t v2 = *(int **)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  int v3 = *(unsigned __int8 *)(v0 + 195);
  int v4 = *(unsigned __int8 *)(v0 + 194);
  int v5 = *(unsigned __int8 *)(v0 + 193);
  uint64_t v6 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain_n();
  sub_2592D81F8(v6, v5, v3, v4, v1);
  *(void *)(v1 + v2[5]) = v6;
  *(unsigned char *)(v1 + v2[6]) = v5;
  *(unsigned char *)(v1 + v2[7]) = v4;
  *(unsigned char *)(v1 + v2[8]) = v3;
  uint64_t v10 = (uint64_t (*)(char, uint64_t))((char *)&dword_26A37E648 + dword_26A37E648);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_259288B1C;
  uint64_t v8 = *(void *)(v0 + 128);
  return v10(1, v8);
}

uint64_t sub_259288B1C(uint64_t a1)
{
  int v3 = (void *)*v2;
  int v4 = (void *)*v2;
  v4[22] = a1;
  v4[23] = v1;
  swift_task_dealloc();
  sub_25928AB3C(v3[16], (uint64_t (*)(void))type metadata accessor for ShuffleID);
  if (v1)
  {
    uint64_t v5 = v4[19];
    uint64_t v6 = v4[20];
    uint64_t v7 = sub_259288EC0;
  }
  else
  {
    uint64_t v7 = sub_259288C78;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  return MEMORY[0x270FA2498](v7, v5, v6);
}

uint64_t sub_259288C78()
{
  uint64_t v15 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_259309840();
  os_log_type_t v2 = sub_25930A1D0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[22];
    uint64_t v12 = v0[17];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = v13;
    *(_DWORD *)uint64_t v4 = 136315650;
    uint64_t v5 = sub_25930A400();
    v0[5] = sub_25924FC14(v5, v6, &v14);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2048;
    v0[6] = v12;
    sub_25930A2A0();
    *(_WORD *)(v4 + 22) = 2080;
    v0[7] = v3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E3F0);
    uint64_t v7 = sub_259309BE0();
    v0[8] = sub_25924FC14(v7, v8, &v14);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25921A000, v1, v2, "%s (%ld) finished: %s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v13, -1, -1);
    MEMORY[0x25A2DBAF0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v10 = v0[22];
  return v9(v10);
}

uint64_t sub_259288EC0()
{
  return MEMORY[0x270FA2498](sub_259288EDC, 0, 0);
}

uint64_t sub_259288EDC()
{
  unint64_t v19 = v0;
  uint64_t v1 = (void *)v0[23];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_259309840();
  os_log_type_t v5 = sub_25930A1B0();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (void *)v0[23];
    uint64_t v16 = v0[17];
    uint64_t v7 = swift_slowAlloc();
    unint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v9 = sub_25930A400();
    v0[2] = sub_25924FC14(v9, v10, &v18);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    v0[3] = v16;
    sub_25930A2A0();
    *(_WORD *)(v7 + 22) = 2112;
    id v11 = v6;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v12;
    sub_25930A2A0();
    void *v8 = v12;

    _os_log_impl(&dword_25921A000, v4, v5, "%s (%ld) failed: %@", (uint8_t *)v7, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E078);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v17, -1, -1);
    MEMORY[0x25A2DBAF0](v7, -1, -1);
  }
  else
  {
    uint64_t v13 = (void *)v0[23];
  }
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_259289154(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v4 + 96) = a2;
  *(void *)(v4 + 104) = a4;
  *(unsigned char *)(v4 + 152) = a3;
  *(void *)(v4 + 88) = a1;
  return MEMORY[0x270FA2498](sub_25928917C, 0, 0);
}

uint64_t sub_25928917C()
{
  uint64_t v13 = v0;
  uint64_t v1 = sub_2592D7740(100);
  v0[14] = v1;
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309860();
  v0[15] = __swift_project_value_buffer(v2, (uint64_t)qword_26A37F348);
  id v3 = sub_259309840();
  os_log_type_t v4 = sub_25930A1D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_25930A400();
    v0[9] = sub_25924FC14(v7, v8, &v12);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    v0[10] = v1;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v3, v4, "Executing %s (%ld)", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v6, -1, -1);
    MEMORY[0x25A2DBAF0](v5, -1, -1);
  }

  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v10 = sub_259309E90();
  return MEMORY[0x270FA2498](sub_259289414, v10, v9);
}

uint64_t sub_259289414()
{
  id v3 = (uint64_t (*)(char))((char *)&dword_26A37E628 + dword_26A37E628);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2592894C0;
  return v3(1);
}

uint64_t sub_2592894C0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 136) = a1;
  *(void *)(v3 + 144) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_25928ADA8;
  }
  else {
    uint64_t v4 = sub_2592895D4;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2592895D4()
{
  uint64_t v15 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_259309840();
  os_log_type_t v2 = sub_25930A1D0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[17];
    uint64_t v12 = v0[14];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = v13;
    *(_DWORD *)uint64_t v4 = 136315650;
    uint64_t v5 = sub_25930A400();
    v0[5] = sub_25924FC14(v5, v6, &v14);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2048;
    v0[6] = v12;
    sub_25930A2A0();
    *(_WORD *)(v4 + 22) = 2080;
    v0[7] = v3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E630);
    uint64_t v7 = sub_259309BE0();
    v0[8] = sub_25924FC14(v7, v8, &v14);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25921A000, v1, v2, "%s (%ld) finished: %s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v13, -1, -1);
    MEMORY[0x25A2DBAF0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v10 = v0[17];
  return v9(v10);
}

uint64_t sub_259289818(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_259309440() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_2592438A0;
  return sub_25927FF38(a1, v5, v6);
}

uint64_t sub_259289904(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_259309440() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);
  id v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *id v11 = v2;
  v11[1] = sub_2592438A0;
  return sub_25928055C(a1, v6, v7, v9, v10);
}

uint64_t sub_259289A30(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_25921D238;
  return sub_259280DCC(a1, v5, v4);
}

uint64_t sub_259289ADC(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_2592438A0;
  return sub_259281560(a1, v5, v4);
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ShuffleID() - 8) + 80);
  uint64_t v2 = (v1 + 24) & ~v1;
  swift_release();
  uint64_t v3 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_259289C84(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ShuffleID() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_2592438A0;
  return sub_259281FA0(a1, v5, v6);
}

uint64_t sub_259289D6C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_2592438A0;
  return sub_25928241C(a1, v5, v4);
}

uint64_t sub_259289E18(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v4 + 96) = a2;
  *(void *)(v4 + 104) = a4;
  *(unsigned char *)(v4 + 152) = a3;
  *(void *)(v4 + 88) = a1;
  return MEMORY[0x270FA2498](sub_259289E40, 0, 0);
}

uint64_t sub_259289E40()
{
  uint64_t v13 = v0;
  uint64_t v1 = sub_2592D7740(100);
  v0[14] = v1;
  if (qword_26A37C7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309860();
  v0[15] = __swift_project_value_buffer(v2, (uint64_t)qword_26A37F348);
  uint64_t v3 = sub_259309840();
  os_log_type_t v4 = sub_25930A1D0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_25930A400();
    v0[9] = sub_25924FC14(v7, v8, &v12);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    v0[10] = v1;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v3, v4, "Executing %s (%ld)", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v6, -1, -1);
    MEMORY[0x25A2DBAF0](v5, -1, -1);
  }

  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_25928A844((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v10 = sub_259309E90();
  return MEMORY[0x270FA2498](sub_25928A0D8, v10, v9);
}

uint64_t sub_25928A0D8()
{
  uint64_t v3 = (uint64_t (*)(char))((char *)&dword_26A37E628 + dword_26A37E628);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25928A184;
  return v3(2);
}

uint64_t sub_25928A184(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 136) = a1;
  *(void *)(v3 + 144) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_25928ADA8;
  }
  else {
    uint64_t v4 = sub_25928ADC0;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v1 = sub_259309440();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_25928A368(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_259309440() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_2592438A0;
  return sub_2592828F4(a1, v5, v6);
}

uint64_t objectdestroy_18Tm()
{
  uint64_t v1 = sub_259309440();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_25928A52C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_259309440() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);
  id v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *id v11 = v2;
  v11[1] = sub_2592438A0;
  return sub_259282EBC(a1, v6, v7, v9, v10);
}

uint64_t sub_25928A658(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_2592438A0;
  return sub_259283598(a1, v5, v4);
}

uint64_t type metadata accessor for PhotosFaceInterface()
{
  return self;
}

uint64_t method lookup function for PhotosFaceInterface(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PhotosFaceInterface);
}

uint64_t dispatch thunk of PhotosFaceInterface.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_25928A754()
{
  return sub_259273278(&qword_26A37E608, &qword_26A37E610);
}

unint64_t sub_25928A790()
{
  unint64_t result = qword_26A37E638;
  if (!qword_26A37E638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E638);
  }
  return result;
}

uint64_t sub_25928A7E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E640);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25928A844(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25928A88C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_25928A8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  uint64_t v10 = *(void *)(v2 + 56);
  char v11 = *(unsigned char *)(v2 + 48);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  void *v12 = v3;
  v12[1] = sub_2592438A0;
  return sub_259284DE0(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_25928A9A4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_2592438A0;
  return sub_2592F2FC8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_25928AA6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25928AAD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25928AB3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25928AB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  uint64_t v10 = *(void *)(v2 + 56);
  char v11 = *(unsigned char *)(v2 + 48);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  void *v12 = v3;
  v12[1] = sub_2592438A0;
  return sub_259283904(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t objectdestroy_142Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_25928ACC4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_25921D238;
  return sub_2592F2FC8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_25928ADCC(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_25925CD40(0, v5, 0);
    uint64_t v6 = v17;
    uint64_t v8 = *(void *)(sub_259309440() - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    while (1)
    {
      a1(&v16, v9);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v11 = v16;
      uint64_t v17 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_25925CD40(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v17;
      }
      *(void *)(v6 + 16) = v13 + 1;
      *(void *)(v6 + 8 * v13 + 32) = v11;
      v9 += v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_25928AF28(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  uint64_t v7 = a3;
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_25925CD40(0, v5, 0);
  uint64_t v6 = v28;
  uint64_t result = sub_259296024(v7);
  int64_t v9 = result;
  int v11 = v10;
  char v13 = v12 & 1;
  uint64_t v23 = v7 + 56;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(v7 + 32))
  {
    if (((*(void *)(v23 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(v7 + 36) != v11) {
      goto LABEL_16;
    }
    uint64_t v14 = v6;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v9);
    uint64_t v16 = v15[1];
    v26[0] = *v15;
    v26[1] = v16;
    swift_bridgeObjectRetain();
    uint64_t v6 = a2;
    a1(&v27, v26);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v6;
    }
    uint64_t v17 = v7;
    swift_bridgeObjectRelease();
    uint64_t v18 = v27;
    uint64_t v6 = v14;
    uint64_t v28 = v14;
    unint64_t v19 = *(void *)(v14 + 16);
    unint64_t v20 = *(void *)(v6 + 24);
    if (v19 >= v20 >> 1)
    {
      sub_25925CD40(v20 > 1, v19 + 1, 1);
      uint64_t v6 = v28;
    }
    *(void *)(v6 + 16) = v19 + 1;
    *(void *)(v6 + 8 * v19 + 32) = v18;
    uint64_t v7 = v17;
    uint64_t result = sub_2592960C4(v9, v11, v13 & 1, v17);
    int64_t v9 = result;
    int v11 = v21;
    char v13 = v22 & 1;
    --v5;
    uint64_t v4 = 0;
    if (!v5)
    {
      sub_259299FC0(result, v21, v22 & 1);
      return v6;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_25928B100(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C9A0);
  uint64_t v19 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    if (!v9) {
      return v10;
    }
    uint64_t v23 = MEMORY[0x263F8EE78];
    uint64_t result = sub_25925CC44(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    uint64_t v12 = 0;
    uint64_t v10 = v23;
    unint64_t v18 = a3 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v18) {
        id v13 = (id)MEMORY[0x25A2DAC90](v12, a3);
      }
      else {
        id v13 = *(id *)(a3 + 8 * v12 + 32);
      }
      uint64_t v14 = v13;
      id v22 = v13;
      v20(&v22);
      if (v4)
      {
        swift_release();

        return v10;
      }
      uint64_t v4 = 0;

      uint64_t v23 = v10;
      unint64_t v16 = *(void *)(v10 + 16);
      unint64_t v15 = *(void *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_25925CC44(v15 > 1, v16 + 1, 1);
        uint64_t v10 = v23;
      }
      ++v12;
      *(void *)(v10 + 16) = v16 + 1;
      sub_25924A404((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v16, &qword_26A37C9A0);
      if (v9 == v12) {
        return v10;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_25930A5E0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_25928B324(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v43 = a2;
  uint64_t v5 = type metadata accessor for StoredPhotoLayout(0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v41 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v40 = (uint64_t)&v33 - v8;
  uint64_t v9 = type metadata accessor for StoredPhotoLayoutProto(0);
  uint64_t v38 = *(void *)(v9 - 8);
  uint64_t v39 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v44 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (!v11) {
    return v12;
  }
  uint64_t v45 = MEMORY[0x263F8EE78];
  sub_25925CFE8(0, v11, 0);
  uint64_t result = sub_2592961A8(a1);
  uint64_t v15 = result;
  uint64_t v16 = 0;
  uint64_t v17 = a1 + 64;
  char v18 = *(unsigned char *)(a1 + 32);
  uint64_t v34 = a1 + 88;
  int64_t v35 = v11;
  uint64_t v36 = v14;
  uint64_t v37 = a1 + 64;
  while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << v18)
  {
    unint64_t v21 = (unint64_t)v15 >> 6;
    if ((*(void *)(v17 + 8 * ((unint64_t)v15 >> 6)) & (1 << v15)) == 0) {
      goto LABEL_28;
    }
    if (*(_DWORD *)(a1 + 36) != v14) {
      goto LABEL_29;
    }
    uint64_t v22 = v40;
    sub_259296D14(*(void *)(a1 + 56) + *(void *)(v42 + 72) * v15, v40, type metadata accessor for StoredPhotoLayout);
    uint64_t v23 = v41;
    uint64_t v24 = sub_259296CAC(v22, v41, type metadata accessor for StoredPhotoLayout);
    MEMORY[0x270FA5388](v24);
    *(&v33 - 2) = v23;
    *((unsigned char *)&v33 - 8) = v43;
    sub_25928BC3C(&qword_26A37E748, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayoutProto);
    uint64_t v25 = v3;
    sub_259309750();
    sub_259296C4C(v23, type metadata accessor for StoredPhotoLayout);
    uint64_t v12 = v45;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25925CFE8(0, *(void *)(v12 + 16) + 1, 1);
      uint64_t v12 = v45;
    }
    unint64_t v27 = *(void *)(v12 + 16);
    unint64_t v26 = *(void *)(v12 + 24);
    if (v27 >= v26 >> 1)
    {
      sub_25925CFE8(v26 > 1, v27 + 1, 1);
      uint64_t v12 = v45;
    }
    *(void *)(v12 + 16) = v27 + 1;
    uint64_t result = sub_259296CAC(v44, v12+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v27, type metadata accessor for StoredPhotoLayoutProto);
    char v18 = *(unsigned char *)(a1 + 32);
    unint64_t v19 = 1 << v18;
    if (v15 >= 1 << v18) {
      goto LABEL_30;
    }
    uint64_t v17 = v37;
    uint64_t v28 = *(void *)(v37 + 8 * v21);
    if ((v28 & (1 << v15)) == 0) {
      goto LABEL_31;
    }
    LODWORD(v14) = v36;
    if (*(_DWORD *)(a1 + 36) != v36) {
      goto LABEL_32;
    }
    unint64_t v29 = v28 & (-2 << (v15 & 0x3F));
    if (v29)
    {
      unint64_t v19 = __clz(__rbit64(v29)) | v15 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v3 = v25;
LABEL_4:
      int64_t v20 = v35;
      goto LABEL_5;
    }
    unint64_t v30 = v21 + 1;
    unint64_t v31 = (v19 + 63) >> 6;
    uint64_t v3 = v25;
    if (v21 + 1 >= v31) {
      goto LABEL_4;
    }
    unint64_t v32 = *(void *)(v37 + 8 * v30);
    int64_t v20 = v35;
    if (!v32)
    {
      unint64_t v30 = v21 + 2;
      if (v21 + 2 >= v31) {
        goto LABEL_5;
      }
      unint64_t v32 = *(void *)(v37 + 8 * v30);
      if (!v32)
      {
        while (v31 - 3 != v21)
        {
          unint64_t v32 = *(void *)(v34 + 8 * v21++);
          if (v32)
          {
            unint64_t v30 = v21 + 2;
            goto LABEL_20;
          }
        }
        goto LABEL_5;
      }
    }
LABEL_20:
    unint64_t v19 = __clz(__rbit64(v32)) + (v30 << 6);
LABEL_5:
    ++v16;
    uint64_t v15 = v19;
    if (v16 == v20) {
      return v12;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t StoredPhoto.init(localIdentifier:modificationDate:parallaxScale:preferredLayout:layouts:accessibilityDescription:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v16 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a7, a1, v16);
  uint64_t v17 = (int *)type metadata accessor for StoredPhoto(0);
  uint64_t v18 = a7 + v17[5];
  uint64_t v19 = sub_2593093D0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a2, v19);
  *(double *)(a7 + v17[6]) = a8;
  *(void *)(a7 + v17[7]) = a3;
  *(void *)(a7 + v17[8]) = a4;
  unint64_t v21 = (void *)(a7 + v17[9]);
  *unint64_t v21 = a5;
  v21[1] = a6;
  return result;
}

uint64_t type metadata accessor for StoredPhoto(uint64_t a1)
{
  return sub_259296DD8(a1, qword_26B2F33D0);
}

PhotosFace::StoredPhotoLayout::Rect __swiftcall StoredPhotoLayout.Rect.init(x:y:width:height:)(Swift::Double x, Swift::Double y, Swift::Double width, Swift::Double height)
{
  *uint64_t v4 = x;
  v4[1] = y;
  v4[2] = width;
  v4[3] = height;
  result.height = height;
  result.width = width;
  result.y = y;
  result.x = x;
  return result;
}

__n128 StoredPhotoLayout.init(baseImage:maskImage:originalCrop:timePosition:timeRect:backgroundZorder:foregroundZorder:timeElementZorder:imageAOTBrightness:userEdited:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  uint64_t v20 = *((void *)a3 + 2);
  uint64_t v21 = *((void *)a3 + 3);
  long long v30 = *a3;
  __n128 v31 = *a5;
  unint64_t v22 = a5[1].n128_u64[0];
  unint64_t v23 = a5[1].n128_u64[1];
  uint64_t v24 = (int *)type metadata accessor for StoredPhotoLayout(0);
  uint64_t v25 = a7 + v24[5];
  uint64_t v26 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  sub_259296CAC(a1, a7, type metadata accessor for StoredPhotoLayout.ImageLocation);
  sub_259299F40(a2, v25, &qword_26A37DFC8);
  uint64_t v27 = a7 + v24[6];
  *(_OWORD *)uint64_t v27 = v30;
  *(void *)(v27 + 16) = v20;
  *(void *)(v27 + 24) = v21;
  *(void *)(a7 + v24[7]) = a4;
  uint64_t v28 = (__n128 *)(a7 + v24[8]);
  __n128 result = v31;
  *uint64_t v28 = v31;
  v28[1].n128_u64[0] = v22;
  v28[1].n128_u64[1] = v23;
  *(double *)(a7 + v24[9]) = a8;
  *(double *)(a7 + v24[10]) = a9;
  *(double *)(a7 + v24[11]) = a10;
  *(double *)(a7 + v24[12]) = a11;
  *(unsigned char *)(a7 + v24[13]) = a6;
  return result;
}

uint64_t type metadata accessor for StoredPhotoLayout(uint64_t a1)
{
  return sub_259296DD8(a1, (uint64_t *)&unk_26A37E7A0);
}

uint64_t type metadata accessor for StoredPhotoLayout.ImageLocation(uint64_t a1)
{
  return sub_259296DD8(a1, (uint64_t *)&unk_26A37E7B8);
}

uint64_t StoredPhoto.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  sub_259309440();
  sub_25928BC3C(&qword_26A37E298, MEMORY[0x263F07508]);
  sub_259309B20();
  uint64_t v4 = type metadata accessor for StoredPhoto(0);
  sub_2593093D0();
  sub_25928BC3C(&qword_26A37E400, MEMORY[0x263F07490]);
  sub_259309B20();
  sub_25930A900();
  sub_25930A8D0();
  uint64_t v5 = *(void *)(v1 + *(int *)(v4 + 32));
  swift_bridgeObjectRetain();
  sub_259295BF4(a1, v5);
  swift_bridgeObjectRelease();
  if (!*(void *)(v2 + *(int *)(v4 + 36) + 8)) {
    return sub_25930A8E0();
  }
  sub_25930A8E0();
  swift_bridgeObjectRetain();
  sub_259309C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25928BC3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t StoredPhoto.init(protobuf:version:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_2593093D0();
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v56 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v54 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_259309440();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v58 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for StoredPhotoLayout(0);
  MEMORY[0x270FA5388](v64);
  id v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StoredPhotoLayoutProto(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v65 = (uint64_t)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v49 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C9A0);
  uint64_t v62 = *(void *)(v20 - 8);
  uint64_t v63 = v20;
  MEMORY[0x270FA5388](v20);
  unint64_t v22 = (uint64_t *)((char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v57 = *a2;
  uint64_t v59 = a1;
  uint64_t v23 = *(void *)(a1 + 40);
  int64_t v24 = *(void *)(v23 + 16);
  uint64_t v25 = MEMORY[0x263F8EE78];
  if (v24)
  {
    uint64_t v50 = a3;
    uint64_t v66 = MEMORY[0x263F8EE78];
    uint64_t v26 = v23;
    swift_bridgeObjectRetain();
    sub_25925CC44(0, v24, 0);
    uint64_t v27 = *(unsigned __int8 *)(v15 + 80);
    uint64_t v51 = v26;
    uint64_t v28 = v26 + ((v27 + 32) & ~v27);
    uint64_t v60 = *(void *)(v15 + 72);
    uint64_t v61 = v13;
    while (1)
    {
      sub_259296D14(v28, (uint64_t)v19, type metadata accessor for StoredPhotoLayoutProto);
      uint64_t v29 = v65;
      sub_259296D14((uint64_t)v19, v65, type metadata accessor for StoredPhotoLayoutProto);
      StoredPhotoLayout.init(protobuf:version:)(v29, (uint64_t)v13);
      if (v4) {
        break;
      }
      uint64_t v30 = (uint64_t)v22 + *(int *)(v63 + 48);
      *unint64_t v22 = *(void *)&v13[*(int *)(v64 + 28)];
      sub_259296CAC((uint64_t)v13, v30, type metadata accessor for StoredPhotoLayout);
      sub_259296C4C((uint64_t)v19, type metadata accessor for StoredPhotoLayoutProto);
      uint64_t v25 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CC44(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v25 = v66;
      }
      unint64_t v32 = *(void *)(v25 + 16);
      unint64_t v31 = *(void *)(v25 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_25925CC44(v31 > 1, v32 + 1, 1);
        uint64_t v25 = v66;
      }
      *(void *)(v25 + 16) = v32 + 1;
      sub_25924A404((uint64_t)v22, v25+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v32, &qword_26A37C9A0);
      id v13 = v61;
      v28 += v60;
      --v24;
      uint64_t v4 = 0;
      if (!v24)
      {
        swift_bridgeObjectRelease();
        a3 = v50;
        goto LABEL_11;
      }
    }
    sub_259296C4C((uint64_t)v19, type metadata accessor for StoredPhotoLayoutProto);
    swift_release();
    sub_259296C4C(v59, type metadata accessor for StoredPhotoProto);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    uint64_t v34 = v58;
    uint64_t v35 = v59;
    if (*(void *)(v25 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_26A37C9A8);
      uint64_t v36 = sub_25930A610();
    }
    else
    {
      uint64_t v36 = MEMORY[0x263F8EE80];
    }
    uint64_t v66 = v36;
    uint64_t v37 = swift_bridgeObjectRetain();
    sub_2592947E0(v37, 1, &v66);
    if (v4)
    {
      uint64_t result = swift_unexpectedError();
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = v66;
      uint64_t v39 = *(unsigned int *)(v35 + 32);
      uint64_t v40 = *(void *)v35;
      unint64_t v41 = *(void *)(v35 + 8);
      LOBYTE(v66) = v57;
      sub_259261DE0(v40, v41);
      UUID.init(serialized:version:)(v40, v41);
      uint64_t v42 = v54;
      sub_259309370();
      uint64_t v43 = *(void *)(v35 + 24);
      uint64_t v44 = (uint64_t *)(v35 + *(int *)(type metadata accessor for StoredPhotoProto(0) + 40));
      uint64_t v45 = *v44;
      uint64_t v46 = v44[1];
      swift_bridgeObjectRetain();
      sub_259296C4C(v35, type metadata accessor for StoredPhotoProto);
      (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(a3, v34, v53);
      uint64_t v47 = (int *)type metadata accessor for StoredPhoto(0);
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v55 + 32))(a3 + v47[5], v42, v56);
      *(void *)(a3 + v47[6]) = v43;
      *(void *)(a3 + v47[7]) = v39;
      *(void *)(a3 + v47[8]) = v38;
      uint64_t v48 = (void *)(a3 + v47[9]);
      *uint64_t v48 = v45;
      v48[1] = v46;
    }
  }
  return result;
}

uint64_t StoredPhoto.protobuf(version:)()
{
  return sub_259309750();
}

Swift::Void __swiftcall StoredPhoto.gather(attachments:version:)(Swift::OpaquePointer *attachments, PhotosFace::ProtocolVersion version)
{
  v134 = attachments;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v133 = (uint64_t)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for LazyDataState();
  MEMORY[0x270FA5388](v114);
  uint64_t v113 = (long long *)((char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v6);
  uint64_t v112 = (uint64_t)&v99 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v111 = (uint64_t)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  v132 = (char *)&v99 - v11;
  uint64_t v131 = sub_259309250();
  uint64_t v12 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  v130 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_259309300();
  uint64_t v14 = *(void *)(v148 - 8);
  MEMORY[0x270FA5388](v148);
  v143 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  v129 = (char *)&v99 - v17;
  MEMORY[0x270FA5388](v18);
  v140 = (char *)&v99 - v19;
  uint64_t v110 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v20 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v100 = (uint64_t)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v104 = (uint64_t)&v99 - v23;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v99 - v25;
  uint64_t v135 = type metadata accessor for StoredPhotoLayout(0);
  uint64_t v108 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  uint64_t v28 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v107 = (uint64_t)&v99 - v30;
  uint64_t v31 = *(int *)(type metadata accessor for StoredPhoto(0) + 32);
  uint64_t v141 = v2;
  uint64_t v32 = *(void *)(v2 + v31);
  uint64_t v33 = *(void *)(v32 + 64);
  uint64_t v101 = v32 + 64;
  uint64_t v34 = 1 << *(unsigned char *)(v32 + 32);
  uint64_t v35 = -1;
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  unint64_t v36 = v35 & v33;
  int64_t v102 = (unint64_t)(v34 + 63) >> 6;
  v127 = (uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v103 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v37 = (void (**)(char *, uint64_t))(v14 + 8);
  unsigned int v142 = *MEMORY[0x263F06E50];
  v126 = (void (**)(char *, void, uint64_t))(v12 + 104);
  v125 = (void (**)(char *, uint64_t))(v12 + 8);
  v124 = (void (**)(char *, char *, uint64_t))(v14 + 16);
  v123 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56);
  uint64_t v106 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  uint64_t v115 = v32;
  swift_bridgeObjectRetain();
  int64_t v38 = 0;
  long long v105 = xmmword_259314080;
  uint64_t v109 = v26;
  v128 = v28;
  v144 = (void (**)(char *, uint64_t))(v14 + 8);
  while (1)
  {
    if (v36)
    {
      unint64_t v59 = __clz(__rbit64(v36));
      uint64_t v60 = (v36 - 1) & v36;
      unint64_t v61 = v59 | (v38 << 6);
      goto LABEL_25;
    }
    int64_t v62 = v38 + 1;
    if (__OFADD__(v38, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v62 >= v102) {
      goto LABEL_33;
    }
    unint64_t v63 = *(void *)(v101 + 8 * v62);
    ++v38;
    if (!v63)
    {
      int64_t v38 = v62 + 1;
      if (v62 + 1 >= v102) {
        goto LABEL_33;
      }
      unint64_t v63 = *(void *)(v101 + 8 * v38);
      if (!v63)
      {
        int64_t v38 = v62 + 2;
        if (v62 + 2 >= v102) {
          goto LABEL_33;
        }
        unint64_t v63 = *(void *)(v101 + 8 * v38);
        if (!v63)
        {
          int64_t v38 = v62 + 3;
          if (v62 + 3 >= v102) {
            goto LABEL_33;
          }
          unint64_t v63 = *(void *)(v101 + 8 * v38);
          if (!v63) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v60 = (v63 - 1) & v63;
    unint64_t v61 = __clz(__rbit64(v63)) + (v38 << 6);
LABEL_25:
    uint64_t v65 = v107;
    sub_259296D14(*(void *)(v115 + 56) + *(void *)(v108 + 72) * v61, v107, type metadata accessor for StoredPhotoLayout);
    sub_259296CAC(v65, (uint64_t)v28, type metadata accessor for StoredPhotoLayout);
    sub_259296D14((uint64_t)v28, (uint64_t)v26, type metadata accessor for StoredPhotoLayout.ImageLocation);
    uint64_t v66 = *v127;
    int v67 = (*v127)(v26, 1, v148);
    int64_t v139 = v38;
    v122 = v66;
    if (v67 == 1)
    {
      uint64_t v149 = 0x5F65736162;
      unint64_t v150 = 0xE500000000000000;
      sub_25930A1E0();
      sub_259309C20();
      swift_bridgeObjectRelease();
      sub_259309C20();
      sub_259309440();
      sub_25928BC3C(&qword_26A37E410, MEMORY[0x263F07508]);
      sub_25930A730();
      sub_259309C20();
      swift_bridgeObjectRelease();
      sub_259309C20();
      uint64_t v145 = v149;
      unint64_t v146 = v150;
    }
    else
    {
      uint64_t v68 = v140;
      uint64_t v69 = v148;
      (*v103)(v140, v26, v148);
      uint64_t v145 = sub_259309270();
      unint64_t v146 = v70;
      (*v37)(v68, v69);
    }
    unint64_t v138 = v60;
    if (qword_26B2F3790 != -1) {
      swift_once();
    }
    uint64_t v118 = __swift_project_value_buffer(v148, (uint64_t)qword_26B2F3778);
    sub_259309290();
    uint64_t v149 = sub_2593093F0();
    unint64_t v150 = v71;
    BOOL v72 = (void (*)(void, void, void))*v126;
    uint64_t v74 = v130;
    uint64_t v73 = v131;
    (*v126)(v130, v142, v131);
    unint64_t v75 = sub_25921DB48();
    uint64_t v76 = v129;
    sub_2593092F0();
    uint64_t v77 = *v125;
    (*v125)(v74, v73);
    swift_bridgeObjectRelease();
    v147 = *v144;
    v147(v143, v148);
    uint64_t v149 = v145;
    unint64_t v150 = v146;
    uint64_t v117 = v72;
    v72(v74, v142, v73);
    uint64_t v78 = v140;
    unint64_t v116 = v75;
    sub_2593092F0();
    v136 = v77;
    v77(v74, v73);
    uint64_t v79 = v148;
    v147(v76, v148);
    uint64_t v80 = (uint64_t)v132;
    v120 = *v124;
    v120(v132, v78, v79);
    uint64_t v81 = *v123;
    (*v123)(v80, 0, 1, v79);
    uint64_t v119 = type metadata accessor for LazyData();
    uint64_t v137 = swift_allocObject();
    uint64_t v82 = v111;
    sub_2592207A0(v80, v111, &qword_26B2F32C8);
    uint64_t v83 = v114;
    uint64_t v84 = v113;
    uint64_t v85 = (uint64_t)v113 + *(int *)(v114 + 20);
    v121 = v81;
    v81(v85, 1, 1, v79);
    long long *v84 = v105;
    uint64_t v86 = v82;
    uint64_t v37 = v144;
    sub_259299F40(v86, v85, &qword_26B2F32C8);
    *((unsigned char *)v84 + *(int *)(v83 + 24)) = 0;
    uint64_t v87 = (uint64_t)v84;
    uint64_t v88 = v112;
    sub_259296CAC(v87, v112, (uint64_t (*)(void))type metadata accessor for LazyDataState);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E718);
    uint64_t v89 = swift_allocObject();
    *(_DWORD *)(v89 + ((*(unsigned int *)(*(void *)v89 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
    sub_259296D14(v88, v89 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v89 + 16), (uint64_t (*)(void))type metadata accessor for LazyDataState);
    sub_259296C4C(v88, (uint64_t (*)(void))type metadata accessor for LazyDataState);
    sub_25924A3A8(v80, &qword_26B2F32C8);
    uint64_t v90 = v137;
    *(void *)(v137 + 16) = v89;
    v147(v78, v79);
    uint64_t v91 = (uint64_t *)v134;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v149 = *v91;
    *uint64_t v91 = 0x8000000000000000;
    sub_2592956D4(v90, v145, v146, isUniquelyReferenced_nonNull_native);
    *uint64_t v91 = v149;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = v128;
    uint64_t v93 = v133;
    sub_2592207A0((uint64_t)&v128[*(int *)(v135 + 20)], v133, &qword_26A37DFC8);
    if ((*v106)(v93, 1, v110) != 1)
    {
      unint64_t v94 = v136;
      uint64_t v95 = v117;
      uint64_t v96 = v104;
      sub_259296CAC(v133, v104, type metadata accessor for StoredPhotoLayout.ImageLocation);
      uint64_t v97 = v96;
      uint64_t v98 = v100;
      sub_259296D14(v97, v100, type metadata accessor for StoredPhotoLayout.ImageLocation);
      if (v122((char *)v98, 1, v148) == 1)
      {
        uint64_t v149 = 0x5F6B73616DLL;
        unint64_t v150 = 0xE500000000000000;
        sub_25930A1E0();
        sub_259309C20();
        swift_bridgeObjectRelease();
        sub_259309C20();
        sub_259309440();
        sub_25928BC3C(&qword_26A37E410, MEMORY[0x263F07508]);
        sub_25930A730();
        sub_259309C20();
        swift_bridgeObjectRelease();
        sub_259309C20();
        uint64_t v145 = v149;
        unint64_t v146 = v150;
      }
      else
      {
        uint64_t v39 = v140;
        uint64_t v40 = v98;
        uint64_t v41 = v148;
        (*v103)(v140, (char *)v40, v148);
        uint64_t v145 = sub_259309270();
        unint64_t v146 = v42;
        v147(v39, v41);
      }
      uint64_t v43 = (void (*)(char *, void, uint64_t))v95;
      uint64_t v44 = v94;
      sub_259296C4C(v104, type metadata accessor for StoredPhotoLayout.ImageLocation);
      uint64_t v45 = v143;
      sub_259309290();
      uint64_t v149 = sub_2593093F0();
      unint64_t v150 = v46;
      uint64_t v48 = v130;
      uint64_t v47 = v131;
      uint64_t v49 = v142;
      v43(v130, v142, v131);
      uint64_t v50 = v129;
      sub_2593092F0();
      v44(v48, v47);
      swift_bridgeObjectRelease();
      uint64_t v51 = v45;
      uint64_t v52 = v148;
      uint64_t v37 = v144;
      v147(v51, v148);
      uint64_t v149 = v145;
      unint64_t v150 = v146;
      v43(v48, v49, v47);
      uint64_t v53 = v140;
      sub_2593092F0();
      v136(v48, v47);
      uint64_t v54 = v147;
      v147(v50, v52);
      uint64_t v55 = (uint64_t)v132;
      v120(v132, v53, v52);
      v121(v55, 0, 1, v52);
      swift_allocObject();
      uint64_t v56 = sub_25929F2B4(0, 0xF000000000000000, v55, 0);
      v54(v53, v52);
      int v57 = (uint64_t *)v134;
      char v58 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v149 = *v57;
      *int v57 = 0x8000000000000000;
      sub_2592956D4(v56, v145, v146, v58);
      *int v57 = v149;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = v128;
    }
    sub_259296C4C((uint64_t)v28, type metadata accessor for StoredPhotoLayout);
    uint64_t v26 = v109;
    unint64_t v36 = v138;
    int64_t v38 = v139;
  }
  int64_t v64 = v62 + 4;
  if (v64 >= v102)
  {
LABEL_33:
    swift_release();
    return;
  }
  unint64_t v63 = *(void *)(v101 + 8 * v64);
  if (v63)
  {
    int64_t v38 = v64;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v38 = v64 + 1;
    if (__OFADD__(v64, 1)) {
      break;
    }
    if (v38 >= v102) {
      goto LABEL_33;
    }
    unint64_t v63 = *(void *)(v101 + 8 * v38);
    ++v64;
    if (v63) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> StoredPhoto.save(attachments:version:)(Swift::OpaquePointer attachments, PhotosFace::ProtocolVersion version)
{
  uint64_t v3 = v2;
  rawValue = attachments._rawValue;
  uint64_t v88 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v71 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v80 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v65 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v75 = (uint64_t)&v64 - v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v79 = (char *)&v64 - v10;
  uint64_t v85 = type metadata accessor for StoredPhotoLayout(0);
  uint64_t v78 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v77 = (uint64_t)&v64 - v14;
  uint64_t v84 = sub_259309250();
  uint64_t v15 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (unsigned int (*)(uint64_t, uint64_t, char *))sub_259309300();
  uint64_t v73 = *((void *)v18 - 1);
  uint64_t v74 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v73;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  unint64_t v23 = (unint64_t)&v64 - v22;
  if (qword_26B2F3790 == -1) {
    goto LABEL_2;
  }
LABEL_41:
  swift_once();
LABEL_2:
  __swift_project_value_buffer((uint64_t)v18, (uint64_t)qword_26B2F3778);
  sub_259309290();
  uint64_t v86 = sub_2593093F0();
  unint64_t v87 = v24;
  uint64_t v25 = v84;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F06E50], v84);
  sub_25921DB48();
  sub_2593092F0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v25);
  swift_bridgeObjectRelease();
  uint64_t v27 = v73 + 8;
  uint64_t v26 = *(void (**)(char *, char *))(v73 + 8);
  uint64_t v69 = v20;
  uint64_t v70 = v26;
  uint64_t v84 = (uint64_t)v18;
  v26(v20, (char *)v18);
  id v28 = objc_msgSend(self, sel_defaultManager);
  unint64_t v83 = v23;
  uint64_t v29 = (void *)sub_259309280();
  uint64_t v86 = 0;
  unsigned int v30 = objc_msgSend(v28, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v29, 1, 0, &v86);

  uint64_t v73 = v27;
  if (v30)
  {
    id v31 = (id)v86;
  }
  else
  {
    id v32 = (id)v86;
    uint64_t v33 = (void *)sub_259309240();

    swift_willThrow();
    uint64_t v3 = 0;
  }
  uint64_t v34 = *(void *)(v72 + *(int *)(type metadata accessor for StoredPhoto(0) + 32));
  uint64_t v35 = *(void *)(v34 + 64);
  uint64_t v66 = v34 + 64;
  uint64_t v36 = 1 << *(unsigned char *)(v34 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  unint64_t v23 = v37 & v35;
  int64_t v67 = (unint64_t)(v36 + 63) >> 6;
  int64_t v38 = v74;
  uint64_t v68 = (void (**)(char *, char *, char *))(v74 + 4);
  uint64_t v74 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
  uint64_t v80 = v34;
  uint64_t v81 = (unsigned int (**)(char *, uint64_t, char *))(v38 + 6);
  swift_bridgeObjectRetain();
  int64_t v39 = 0;
  uint64_t v15 = (uint64_t)v71;
LABEL_8:
  uint64_t v20 = v79;
  uint64_t v17 = (char *)v84;
  if (v23)
  {
LABEL_9:
    unint64_t v40 = __clz(__rbit64(v23));
    v23 &= v23 - 1;
    unint64_t v41 = v40 | (v39 << 6);
    goto LABEL_23;
  }
  while (1)
  {
    if (__OFADD__(v39++, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v39 >= v67) {
      goto LABEL_39;
    }
    unint64_t v43 = *(void *)(v66 + 8 * v39);
    if (!v43) {
      break;
    }
LABEL_22:
    unint64_t v23 = (v43 - 1) & v43;
    unint64_t v41 = __clz(__rbit64(v43)) + (v39 << 6);
LABEL_23:
    uint64_t v45 = v77;
    sub_259296D14(*(void *)(v80 + 56) + *(void *)(v78 + 72) * v41, v77, type metadata accessor for StoredPhotoLayout);
    sub_259296CAC(v45, (uint64_t)v12, type metadata accessor for StoredPhotoLayout);
    sub_259296D14((uint64_t)v12, (uint64_t)v20, type metadata accessor for StoredPhotoLayout.ImageLocation);
    uint64_t v18 = (unsigned int (*)(uint64_t, uint64_t, char *))*v81;
    if ((*v81)(v20, 1, v17) == 1)
    {
      uint64_t v86 = 0x5F65736162;
      unint64_t v87 = 0xE500000000000000;
      sub_25930A1E0();
      sub_259309C20();
      swift_bridgeObjectRelease();
      sub_259309C20();
      sub_259309440();
      sub_25928BC3C(&qword_26A37E410, MEMORY[0x263F07508]);
      sub_25930A730();
      sub_259309C20();
      uint64_t v15 = (uint64_t)v71;
      swift_bridgeObjectRelease();
      sub_259309C20();
      uint64_t v47 = v86;
      uint64_t v46 = v87;
    }
    else
    {
      uint64_t v48 = v69;
      (*v68)(v69, v20, v17);
      uint64_t v49 = sub_259309270();
      uint64_t v50 = v17;
      uint64_t v47 = v49;
      uint64_t v46 = v51;
      v70(v48, v50);
    }
    uint64_t v52 = v47;
    uint64_t v53 = v83;
    sub_259290118(v52, v46, v83, (uint64_t)rawValue);
    if (v3)
    {
      uint64_t v63 = v84;
      swift_bridgeObjectRelease();
      sub_259296C4C((uint64_t)v12, type metadata accessor for StoredPhotoLayout);
      swift_release();
      v70((char *)v53, (char *)v63);
      return;
    }
    swift_bridgeObjectRelease();
    sub_2592207A0((uint64_t)&v12[*(int *)(v85 + 20)], v15, &qword_26A37DFC8);
    int v54 = (*v74)(v15, 1, v76);
    uint64_t v17 = (char *)v84;
    if (v54 != 1)
    {
      uint64_t v55 = v75;
      sub_259296CAC(v15, v75, type metadata accessor for StoredPhotoLayout.ImageLocation);
      uint64_t v56 = v55;
      uint64_t v57 = v65;
      sub_259296D14(v56, v65, type metadata accessor for StoredPhotoLayout.ImageLocation);
      if (v18(v57, 1, v17) == 1)
      {
        uint64_t v86 = 0x5F6B73616DLL;
        unint64_t v87 = 0xE500000000000000;
        sub_25930A1E0();
        sub_259309C20();
        swift_bridgeObjectRelease();
        sub_259309C20();
        sub_259309440();
        sub_25928BC3C(&qword_26A37E410, MEMORY[0x263F07508]);
        sub_25930A730();
        sub_259309C20();
        uint64_t v15 = (uint64_t)v71;
        swift_bridgeObjectRelease();
        sub_259309C20();
        uint64_t v59 = v86;
        uint64_t v58 = v87;
      }
      else
      {
        uint64_t v18 = (unsigned int (*)(uint64_t, uint64_t, char *))v69;
        (*v68)(v69, (char *)v57, v17);
        uint64_t v60 = sub_259309270();
        unint64_t v61 = v17;
        uint64_t v59 = v60;
        uint64_t v58 = v62;
        v70((char *)v18, v61);
      }
      sub_259296C4C(v75, type metadata accessor for StoredPhotoLayout.ImageLocation);
      sub_259290118(v59, v58, v83, (uint64_t)rawValue);
      sub_259296C4C((uint64_t)v12, type metadata accessor for StoredPhotoLayout);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_259296C4C((uint64_t)v12, type metadata accessor for StoredPhotoLayout);
    uint64_t v20 = v79;
    if (v23) {
      goto LABEL_9;
    }
  }
  int64_t v44 = v39 + 1;
  if (v39 + 1 >= v67) {
    goto LABEL_39;
  }
  unint64_t v43 = *(void *)(v66 + 8 * v44);
  if (v43) {
    goto LABEL_21;
  }
  int64_t v44 = v39 + 2;
  if (v39 + 2 >= v67) {
    goto LABEL_39;
  }
  unint64_t v43 = *(void *)(v66 + 8 * v44);
  if (v43) {
    goto LABEL_21;
  }
  int64_t v44 = v39 + 3;
  if (v39 + 3 >= v67) {
    goto LABEL_39;
  }
  unint64_t v43 = *(void *)(v66 + 8 * v44);
  if (v43) {
    goto LABEL_21;
  }
  int64_t v44 = v39 + 4;
  if (v39 + 4 >= v67) {
    goto LABEL_39;
  }
  unint64_t v43 = *(void *)(v66 + 8 * v44);
  if (v43)
  {
LABEL_21:
    int64_t v39 = v44;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v39 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      __break(1u);
    }
    if (v39 >= v67) {
      break;
    }
    unint64_t v43 = *(void *)(v66 + 8 * v39);
    ++v44;
    if (v43) {
      goto LABEL_22;
    }
  }
LABEL_39:
  swift_release();
  v70((char *)v83, v17);
}

uint64_t StoredPhoto.localIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_259309440();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StoredPhoto.modificationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StoredPhoto(0) + 20);
  uint64_t v4 = sub_2593093D0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

double StoredPhoto.parallaxScale.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for StoredPhoto(0) + 24));
}

uint64_t StoredPhoto.preferredLayout.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StoredPhoto(0) + 28));
}

uint64_t StoredPhoto.preferredLayout.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for StoredPhoto(0);
  *(void *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*StoredPhoto.preferredLayout.modify())(void, void, void, void)
{
  return nullsub_1;
}

uint64_t StoredPhoto.layouts.getter()
{
  type metadata accessor for StoredPhoto(0);
  return swift_bridgeObjectRetain();
}

uint64_t StoredPhoto.layouts.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for StoredPhoto(0) + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*StoredPhoto.layouts.modify())(void, void, void, void)
{
  return nullsub_1;
}

uint64_t StoredPhoto.accessibilityDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StoredPhoto(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StoredPhoto.hashValue.getter()
{
  return sub_259291C0C((void (*)(unsigned char *))StoredPhoto.hash(into:));
}

uint64_t sub_25928E26C(uint64_t a1, uint64_t a2)
{
  return sub_259291C6C(a1, a2, (void (*)(unsigned char *))StoredPhoto.hash(into:));
}

uint64_t sub_25928E284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_259291CD0(a1, a2, a3, (void (*)(unsigned char *))StoredPhoto.hash(into:));
}

void static StoredPhoto.localIdentifier(from:)()
{
  sub_259296E10(0, &qword_26A37E720);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_2593093F0();
  uint64_t v1 = (void *)sub_259309B80();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(ObjCClassFromMetadata, sel_localIdentifierWithUUID_, v1);

  if (v2)
  {
    sub_259309B90();
  }
  else
  {
    __break(1u);
  }
}

uint64_t static StoredPhoto.uuid(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E408);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259296E10(0, &qword_26A37E720);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v6 = (void *)sub_259309B80();
  id v7 = objc_msgSend(ObjCClassFromMetadata, sel_uuidFromLocalIdentifier_, v6);

  if (!v7) {
    goto LABEL_4;
  }
  sub_259309B90();

  sub_2593093E0();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_259309440();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
  {
    sub_25924A3A8((uint64_t)v4, &qword_26A37E408);
LABEL_4:
    type metadata accessor for StoredPhotoError(0);
    sub_25928BC3C(&qword_26A37E728, (void (*)(uint64_t))type metadata accessor for StoredPhotoError);
    swift_allocError();
    uint64_t v11 = v10;
    uint64_t v12 = sub_259309300();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 2, 2, v12);
    return swift_willThrow();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v4, v8);
}

uint64_t StoredPhoto.init(pfcStoredPhoto:baseURL:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v70 = a3;
  uint64_t v71 = a2;
  uint64_t v5 = sub_2593093D0();
  uint64_t v68 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_259309440();
  uint64_t v67 = *(void *)(v8 - 8);
  double v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(a1, sel_layouts, v9);
  uint64_t v13 = sub_259296E10(0, &qword_26A37E730);
  unint64_t v14 = sub_259309D90();

  v74[1] = v14;
  uint64_t v69 = v5;
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_25930A5E0();
    swift_bridgeObjectRelease();
    if (v15 < 0)
    {
      __break(1u);
LABEL_22:
      swift_once();
LABEL_8:
      uint64_t v19 = sub_259309860();
      __swift_project_value_buffer(v19, (uint64_t)qword_26B2F32A0);
      id v20 = a1;
      uint64_t v21 = sub_259309840();
      os_log_type_t v22 = sub_25930A1C0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        v74[0] = v70;
        *(_DWORD *)uint64_t v23 = 136315394;
        id v24 = objc_msgSend(v20, sel_layouts);
        uint64_t v25 = sub_259309D90();

        uint64_t v26 = MEMORY[0x25A2DA610](v25, v13);
        unint64_t v28 = v27;
        swift_bridgeObjectRelease();
        v73[0] = sub_25924FC14(v26, v28, v74);
        sub_25930A2A0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2080;
        swift_beginAccess();
        uint64_t v29 = swift_bridgeObjectRetain();
        uint64_t v30 = MEMORY[0x25A2DA610](v29, v13);
        unint64_t v32 = v31;
        swift_bridgeObjectRelease();
        uint64_t v72 = sub_25924FC14(v30, v32, v74);
        sub_25930A2A0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_25921A000, v21, v22, "Invalid layout index: %s in layouts %s", (uint8_t *)v23, 0x16u);
        uint64_t v33 = v70;
        swift_arrayDestroy();
        MEMORY[0x25A2DBAF0](v33, -1, -1);
        MEMORY[0x25A2DBAF0](v23, -1, -1);

        type metadata accessor for StoredPhotoError(0);
        sub_25928BC3C(&qword_26A37E728, (void (*)(uint64_t))type metadata accessor for StoredPhotoError);
        swift_allocError();
        uint64_t v35 = v34;
        uint64_t v36 = sub_259309300();
        uint64_t v37 = *(void *)(v36 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v35, 1, 2, v36);
        swift_willThrow();

        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v71, v36);
      }
      else
      {

        type metadata accessor for StoredPhotoError(0);
        sub_25928BC3C(&qword_26A37E728, (void (*)(uint64_t))type metadata accessor for StoredPhotoError);
        swift_allocError();
        uint64_t v39 = v38;
        uint64_t v40 = sub_259309300();
        uint64_t v41 = *(void *)(v40 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v39, 1, 2, v40);
        swift_willThrow();

        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v71, v40);
      }
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v16 = (uint64_t)objc_msgSend(a1, sel_preferredLayout);
  if (v16 < 0 || v16 >= v15)
  {
    if (qword_26B2F3B60 == -1) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
  uint64_t v66 = v8;
  uint64_t v17 = (void *)sub_25928EE58((unint64_t)objc_msgSend(a1, sel_preferredLayout));
  id v18 = objc_msgSend(a1, sel_localIdentifier);
  sub_259309B90();

  static StoredPhoto.uuid(from:)((uint64_t)v11);
  if (v3)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v42 = objc_msgSend(a1, sel_modificationDate);
    sub_2593093C0();

    objc_msgSend(a1, sel_parallaxScale);
    uint64_t v44 = v43;
    uint64_t v65 = v17;
    id v64 = objc_msgSend(v17, sel_timePosition);
    id v45 = objc_msgSend(a1, sel_layouts);
    unint64_t v46 = sub_259309D90();

    MEMORY[0x270FA5388](v47);
    *(&v63 - 2) = v71;
    uint64_t v48 = sub_25928B100((void (*)(id *))sub_259296E4C, (uint64_t)(&v63 - 4), v46);
    swift_bridgeObjectRelease();
    if (*(void *)(v48 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_26A37C9A8);
      uint64_t v49 = sub_25930A610();
    }
    else
    {
      uint64_t v49 = MEMORY[0x263F8EE80];
    }
    uint64_t v50 = v66;
    v73[0] = v49;
    uint64_t v51 = swift_bridgeObjectRetain();
    sub_2592947E0(v51, 1, v73);
    uint64_t v52 = v65;
    swift_bridgeObjectRelease();
    uint64_t v66 = v73[0];
    id v53 = objc_msgSend(a1, sel_accessibilityDescription);
    if (v53)
    {
      int v54 = v53;
      uint64_t v55 = sub_259309B90();
      uint64_t v57 = v56;
    }
    else
    {

      uint64_t v55 = 0;
      uint64_t v57 = 0;
    }
    uint64_t v58 = v70;
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v70, v11, v50);
    uint64_t v59 = (int *)type metadata accessor for StoredPhoto(0);
    (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v58 + v59[5], v7, v69);
    *(void *)(v58 + v59[6]) = v44;
    *(void *)(v58 + v59[7]) = v64;
    *(void *)(v58 + v59[8]) = v66;
    uint64_t v60 = (uint64_t *)(v58 + v59[9]);
    *uint64_t v60 = v55;
    v60[1] = v57;
  }
  uint64_t v61 = sub_259309300();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v71, v61);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25928EE58(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_259295B78(v3);
    unint64_t v3 = v5;
    *uint64_t v1 = v5;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)(v6 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v7 - 1 - a1;
    if (v9 >= 0)
    {
      uint64_t v10 = v6 + 8 * a1;
      uint64_t v11 = *(void *)(v10 + 32);
      memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * v9);
      *(void *)(v6 + 16) = v8;
      sub_259309DB0();
      return v11;
    }
  }
  uint64_t result = sub_25930A620();
  __break(1u);
  return result;
}

uint64_t sub_25928EF3C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_259309300();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = (uint64_t)a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37C9A0) + 48);
  *a3 = objc_msgSend(v10, sel_timePosition);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  return StoredPhotoLayout.init(pfcStoredLayout:baseURL:)(v10, (uint64_t)v9, v11);
}

uint64_t StoredPhotoLayout.init(pfcStoredLayout:baseURL:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v75 = a1;
  uint64_t v72 = a3;
  uint64_t v71 = type metadata accessor for StoredPhotoLayout(0);
  MEMORY[0x270FA5388](v71);
  uint64_t v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v7 - 8);
  *(void *)&CGFloat MinX = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_259309250();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  CGFloat MinY = *(double *)(v74 - 8);
  double v13 = MEMORY[0x270FA5388](v74);
  uint64_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_msgSend(a1, sel_baseImageName, v13);
  uint64_t v17 = sub_259309B90();
  uint64_t v19 = v18;

  uint64_t v76 = v17;
  uint64_t v77 = v19;
  id v20 = *(void (**)(char *))(v10 + 104);
  LODWORD(v66) = *MEMORY[0x263F06E50];
  CGFloat v65 = *(double *)&v20;
  v20(v12);
  unint64_t v64 = sub_25921DB48();
  sub_2593092F0();
  uint64_t v63 = *(void (**)(char *, uint64_t))(v10 + 8);
  v63(v12, v9);
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_259309300();
  uint64_t v68 = *(void *)(v21 - 8);
  uint64_t v69 = v15;
  os_log_type_t v22 = *(void (**)(char *, void, uint64_t))(v68 + 56);
  uint64_t v73 = v21;
  v22(v15, 0, 1);
  id v23 = objc_msgSend(v75, sel_maskImageName);
  if (v23)
  {
    id v24 = v23;
    uint64_t v25 = sub_259309B90();
    uint64_t v62 = (void (*)(uint64_t, void, uint64_t, uint64_t))v22;
    uint64_t v26 = v9;
    uint64_t v28 = v27;

    uint64_t v76 = v25;
    uint64_t v77 = v28;
    (*(void (**)(char *, void, uint64_t))&v65)(v12, LODWORD(v66), v26);
    uint64_t v29 = *(void *)&MinX;
    sub_2593092F0();
    v63(v12, v26);
    v62(v29, 0, 1, v73);
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)&MinY + 56);
    v30(v29, 0, 1, v74);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)&MinY + 56);
    uint64_t v29 = *(void *)&MinX;
    v30(*(void *)&MinX, 1, 1, v74);
  }
  id v31 = v75;
  objc_msgSend(v75, sel_originalCrop);
  CGFloat x = v78.origin.x;
  CGFloat y = v78.origin.y;
  CGFloat width = v78.size.width;
  CGFloat height = v78.size.height;
  CGFloat MinX = CGRectGetMinX(v78);
  v79.origin.CGFloat x = x;
  v79.origin.CGFloat y = y;
  v79.size.CGFloat width = width;
  v79.size.CGFloat height = height;
  CGFloat MinY = CGRectGetMinY(v79);
  v80.origin.CGFloat x = x;
  v80.origin.CGFloat y = y;
  v80.size.CGFloat width = width;
  v80.size.CGFloat height = height;
  CGFloat v66 = CGRectGetWidth(v80);
  v81.origin.CGFloat x = x;
  v81.origin.CGFloat y = y;
  v81.size.CGFloat width = width;
  v81.size.CGFloat height = height;
  CGFloat v65 = CGRectGetHeight(v81);
  id v36 = objc_msgSend(v31, sel_timePosition);
  objc_msgSend(v31, sel_timeRect);
  CGFloat v37 = v82.origin.x;
  CGFloat v38 = v82.origin.y;
  CGFloat v39 = v82.size.width;
  CGFloat v40 = v82.size.height;
  CGFloat v41 = CGRectGetMinX(v82);
  v83.origin.CGFloat x = v37;
  v83.origin.CGFloat y = v38;
  v83.size.CGFloat width = v39;
  v83.size.CGFloat height = v40;
  CGFloat v42 = CGRectGetMinY(v83);
  v84.origin.CGFloat x = v37;
  v84.origin.CGFloat y = v38;
  v84.size.CGFloat width = v39;
  v84.size.CGFloat height = v40;
  CGFloat v43 = CGRectGetWidth(v84);
  v85.origin.CGFloat x = v37;
  v85.origin.CGFloat y = v38;
  v85.size.CGFloat width = v39;
  v85.size.CGFloat height = v40;
  CGFloat v44 = CGRectGetHeight(v85);
  objc_msgSend(v31, sel_backgroundZorder);
  uint64_t v46 = v45;
  objc_msgSend(v31, sel_foregroundZorder);
  uint64_t v48 = v47;
  objc_msgSend(v31, sel_timeElementZorder);
  uint64_t v50 = v49;
  objc_msgSend(v31, sel_imageAOTBrightness);
  uint64_t v52 = v51;
  unsigned __int8 v53 = objc_msgSend(v31, sel_userEdited);
  int v54 = (int *)v71;
  uint64_t v55 = (uint64_t)&v6[*(int *)(v71 + 20)];
  v30(v55, 1, 1, v74);
  sub_259296CAC((uint64_t)v69, (uint64_t)v6, type metadata accessor for StoredPhotoLayout.ImageLocation);
  sub_259299F40(v29, v55, &qword_26A37DFC8);
  uint64_t v56 = (CGFloat *)&v6[v54[6]];
  CGFloat v57 = MinY;
  *uint64_t v56 = MinX;
  v56[1] = v57;
  CGFloat v58 = v65;
  void v56[2] = v66;
  v56[3] = v58;
  *(void *)&v6[v54[7]] = v36;
  uint64_t v59 = (CGFloat *)&v6[v54[8]];
  *uint64_t v59 = v41;
  v59[1] = v42;
  void v59[2] = v43;
  v59[3] = v44;
  *(void *)&v6[v54[9]] = v46;
  *(void *)&v6[v54[10]] = v48;
  *(void *)&v6[v54[11]] = v50;
  *(void *)&v6[v54[12]] = v52;
  v6[v54[13]] = v53;
  sub_259296CAC((uint64_t)v6, v72, type metadata accessor for StoredPhotoLayout);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 8))(a2, v73);
}

uint64_t StoredPhotoLayout.init(protobuf:version:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v95 = type metadata accessor for StoredPhotoLayout(0);
  MEMORY[0x270FA5388](v95);
  unint64_t v94 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E738);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v93 = (uint64_t)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v91 = (uint64_t)&v86 - v7;
  uint64_t v8 = type metadata accessor for StoredPhotoLayoutRectProto(0);
  uint64_t v97 = *(void *)(v8 - 8);
  *(void *)&long long v98 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v90 = (_OWORD *)((char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v89 = (_OWORD *)((char *)&v86 - v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v101 = (uint64_t)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E740);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v88 = (uint64_t)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v86 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v86 - v20;
  uint64_t v22 = type metadata accessor for StoredPhotoLayoutImageLocationProto(0);
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v87 = (uint64_t *)((char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v86 - v26;
  uint64_t v28 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v99 = *(void *)(v28 - 8);
  uint64_t v100 = v28;
  MEMORY[0x270FA5388](v28);
  uint64_t v105 = (uint64_t)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(int *)(type metadata accessor for StoredPhotoLayoutProto(0) + 20);
  uint64_t v104 = a1;
  uint64_t v102 = v30;
  uint64_t v31 = *(void *)(a1 + v30);
  unint64_t v32 = (unsigned int *)(v31
                       + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__timePosition);
  swift_beginAccess();
  uint64_t v92 = *v32;
  uint64_t v33 = v31
      + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__baseImage;
  swift_beginAccess();
  sub_2592207A0(v33, (uint64_t)v21, &qword_26A37E740);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v34(v21, 1, v22) == 1)
  {
    *(void *)uint64_t v27 = 0;
    v27[8] = 1;
    sub_2593095A0();
    uint64_t v35 = &v27[*(int *)(v22 + 24)];
    *(void *)uint64_t v35 = 0;
    *((void *)v35 + 1) = 0;
    sub_25924A3A8((uint64_t)v21, &qword_26A37E740);
  }
  else
  {
    sub_259296CAC((uint64_t)v21, (uint64_t)v27, type metadata accessor for StoredPhotoLayoutImageLocationProto);
  }
  uint64_t v36 = v103;
  StoredPhotoLayout.ImageLocation.init(protobuf:version:)((uint64_t)v27, v105);
  if (v36)
  {
    uint64_t v37 = v104;
  }
  else
  {
    uint64_t v38 = v31
        + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__maskImage;
    swift_beginAccess();
    sub_2592207A0(v38, (uint64_t)v18, &qword_26A37E740);
    LODWORD(v38) = v34(v18, 1, v22);
    sub_25924A3A8((uint64_t)v18, &qword_26A37E740);
    if (v38 == 1)
    {
      CGFloat v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56);
      v39(v101, 1, 1, v100);
      uint64_t v40 = v104;
      uint64_t v42 = v97;
      uint64_t v41 = v98;
    }
    else
    {
      uint64_t v43 = v104;
      uint64_t v44 = *(void *)(v104 + v102)
          + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__maskImage;
      swift_beginAccess();
      uint64_t v45 = v44;
      uint64_t v46 = v88;
      sub_2592207A0(v45, v88, &qword_26A37E740);
      unsigned int v47 = v34((char *)v46, 1, v22);
      uint64_t v42 = v97;
      uint64_t v41 = v98;
      uint64_t v48 = v87;
      if (v47 == 1)
      {
        void *v87 = 0;
        *((unsigned char *)v48 + 8) = 1;
        sub_2593095A0();
        uint64_t v49 = (void *)((char *)v48 + *(int *)(v22 + 24));
        *uint64_t v49 = 0;
        v49[1] = 0;
        sub_25924A3A8(v46, &qword_26A37E740);
      }
      else
      {
        sub_259296CAC(v46, (uint64_t)v87, type metadata accessor for StoredPhotoLayoutImageLocationProto);
      }
      uint64_t v50 = v101;
      StoredPhotoLayout.ImageLocation.init(protobuf:version:)((uint64_t)v48, v101);
      uint64_t v40 = v43;
      CGFloat v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56);
      v39(v50, 0, 1, v100);
    }
    uint64_t v51 = v40;
    uint64_t v52 = *(void *)(v40 + v102)
        + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__originalCrop;
    swift_beginAccess();
    uint64_t v53 = v91;
    sub_2592207A0(v52, v91, &qword_26A37E738);
    int v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
    if (v54(v53, 1, v41) == 1)
    {
      uint64_t v55 = v89;
      *uint64_t v89 = 0u;
      v55[1] = 0u;
      sub_2593095A0();
      sub_25924A3A8(v53, &qword_26A37E738);
    }
    else
    {
      uint64_t v55 = v89;
      sub_259296CAC(v53, (uint64_t)v89, type metadata accessor for StoredPhotoLayoutRectProto);
    }
    uint64_t v56 = v39;
    uint64_t v57 = v101;
    uint64_t v58 = *(void *)v55;
    uint64_t v59 = *((void *)v55 + 1);
    uint64_t v60 = *((void *)v55 + 2);
    uint64_t v61 = *((void *)v55 + 3);
    sub_259296C4C((uint64_t)v55, type metadata accessor for StoredPhotoLayoutRectProto);
    uint64_t v62 = *(void *)(v51 + v102)
        + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__timeRect;
    swift_beginAccess();
    uint64_t v63 = v62;
    uint64_t v64 = v93;
    sub_2592207A0(v63, v93, &qword_26A37E738);
    unsigned int v65 = v54(v64, 1, v41);
    uint64_t v103 = v61;
    uint64_t v104 = v60;
    CGFloat v66 = v90;
    if (v65 == 1)
    {
      *uint64_t v90 = 0u;
      v66[1] = 0u;
      sub_2593095A0();
      sub_25924A3A8(v64, &qword_26A37E738);
    }
    else
    {
      sub_259296CAC(v64, (uint64_t)v90, type metadata accessor for StoredPhotoLayoutRectProto);
    }
    long long v98 = *v66;
    uint64_t v67 = *((void *)v66 + 2);
    uint64_t v68 = *((void *)v66 + 3);
    sub_259296C4C((uint64_t)v66, type metadata accessor for StoredPhotoLayoutRectProto);
    uint64_t v69 = *(void *)(v51 + v102);
    uint64_t v70 = (uint64_t *)(v69
                    + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__backgroundZorder);
    swift_beginAccess();
    uint64_t v71 = *v70;
    uint64_t v72 = (uint64_t *)(v69
                    + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__foregroundZorder);
    swift_beginAccess();
    uint64_t v73 = *v72;
    uint64_t v74 = (uint64_t *)(v69
                    + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__timeElementZorder);
    swift_beginAccess();
    uint64_t v75 = *v74;
    uint64_t v76 = (uint64_t *)(v69
                    + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__imageAotbrightness);
    swift_beginAccess();
    uint64_t v77 = *v76;
    CGRect v78 = (unsigned char *)(v69
                  + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__userEdited);
    swift_beginAccess();
    LOBYTE(v69) = *v78;
    uint64_t v80 = (uint64_t)v94;
    CGRect v79 = (int *)v95;
    uint64_t v81 = (uint64_t)&v94[*(int *)(v95 + 20)];
    v56(v81, 1, 1, v100);
    sub_259296CAC(v105, v80, type metadata accessor for StoredPhotoLayout.ImageLocation);
    sub_259299F40(v57, v81, &qword_26A37DFC8);
    CGRect v82 = (void *)(v80 + v79[6]);
    void *v82 = v58;
    v82[1] = v59;
    uint64_t v83 = v103;
    v82[2] = v104;
    v82[3] = v83;
    *(void *)(v80 + v79[7]) = v92;
    uint64_t v84 = v80 + v79[8];
    *(_OWORD *)uint64_t v84 = v98;
    *(void *)(v84 + 16) = v67;
    *(void *)(v84 + 24) = v68;
    *(void *)(v80 + v79[9]) = v71;
    *(void *)(v80 + v79[10]) = v73;
    *(void *)(v80 + v79[11]) = v75;
    *(void *)(v80 + v79[12]) = v77;
    *(unsigned char *)(v80 + v79[13]) = v69;
    sub_259296CAC(v80, v96, type metadata accessor for StoredPhotoLayout);
    uint64_t v37 = v51;
  }
  return sub_259296C4C(v37, type metadata accessor for StoredPhotoLayoutProto);
}

uint64_t sub_259290118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_259309250();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_259309300();
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32[0] = a1;
  v32[1] = a2;
  (*(void (**)(char *, void, uint64_t, double))(v9 + 104))(v11, *MEMORY[0x263F06E50], v8, v13);
  sub_25921DB48();
  sub_2593092F0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (!*(void *)(a4 + 16)) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_25925E538(a1, a2);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    if (qword_26A37C7A8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_259309860();
    __swift_project_value_buffer(v24, (uint64_t)qword_26A37F2D0);
    swift_bridgeObjectRetain_n();
    uint64_t v25 = sub_259309840();
    os_log_type_t v26 = sub_25930A1D0();
    if (os_log_type_enabled(v25, v26))
    {
      v29[1] = v4;
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v32[0] = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      swift_bridgeObjectRetain();
      v32[3] = sub_25924FC14(a1, a2, v32);
      sub_25930A2A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_25921A000, v25, v26, "Couldn't find necessary attachment: %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v28, -1, -1);
      MEMORY[0x25A2DBAF0](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v15, v31);
  }
  uint64_t v18 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
  swift_retain();
  uint64_t v19 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v19);
  v29[-2] = v15;
  v29[-1] = v18;
  uint64_t v21 = v20 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v20 + 16);
  uint64_t v22 = (os_unfair_lock_s *)(v20 + ((*(unsigned int *)(*(void *)v20 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v22);
  sub_259299FA4(v21, v32);
  if (v4)
  {
    os_unfair_lock_unlock(v22);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v31);
    return swift_release();
  }
  os_unfair_lock_unlock(v22);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v15, v31);
}

uint64_t sub_259290570(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = UUID.serialized(version:)();
  uint64_t v8 = v7;
  sub_259261F50(*(void *)a1, *(void *)(a1 + 8));
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v8;
  uint64_t v9 = (int *)type metadata accessor for StoredPhoto(0);
  sub_259309380();
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = *(void *)(a2 + v9[6]);
  unint64_t v11 = *(void *)(a2 + v9[7]);
  if (HIDWORD(v11))
  {
    uint64_t result = sub_25930A570();
    __break(1u);
  }
  else
  {
    *(_DWORD *)(a1 + 32) = v11;
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = sub_25928B324(v12, a3);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a1 + 40) = v13;
    uint64_t v15 = (uint64_t *)(a2 + v9[9]);
    uint64_t v16 = v15[1];
    if (v16)
    {
      uint64_t v17 = *v15;
      uint64_t v18 = (void *)(a1 + *(int *)(type metadata accessor for StoredPhotoProto(0) + 40));
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v18 = v17;
      v18[1] = v16;
    }
  }
  return result;
}

uint64_t StoredPhotoLayout.protobuf(version:)()
{
  return sub_259309750();
}

uint64_t sub_259290788@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v4 = *a2;
  return StoredPhoto.init(protobuf:version:)(a1, &v4, a3);
}

uint64_t sub_2592907B4()
{
  return sub_259309750();
}

void sub_259290870(Swift::OpaquePointer a1, PhotosFace::ProtocolVersion a2)
{
}

uint64_t StoredPhotoListProto.init(protoList:version:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StoredPhotoListProto(0);
  MEMORY[0x270FA5388](v2);
  unsigned __int8 v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_bridgeObjectRelease();
  *a1 = MEMORY[0x263F8EE78];
  sub_2593095A0();
  uint64_t v7 = a1;
  sub_25928BC3C(&qword_26A37E750, (void (*)(uint64_t))type metadata accessor for StoredPhotoListProto);
  sub_259309750();
  return sub_259296EA4((uint64_t)v4, (uint64_t)a1, type metadata accessor for StoredPhotoListProto);
}

uint64_t sub_2592909B0(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t StoredPhotoListProto.protoList(version:)()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_259290A04@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  unsigned __int8 v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_bridgeObjectRelease();
  *a2 = MEMORY[0x263F8EE78];
  sub_2593095A0();
  uint64_t v7 = a2;
  sub_25928BC3C(&qword_26A37E750, (void (*)(uint64_t))type metadata accessor for StoredPhotoListProto);
  sub_259309750();
  return sub_259296EA4((uint64_t)v4, (uint64_t)a2, type metadata accessor for StoredPhotoListProto);
}

uint64_t sub_259290B20()
{
  return swift_bridgeObjectRetain();
}

double StoredPhotoLayout.Rect.x.getter()
{
  return *(double *)v0;
}

double StoredPhotoLayout.Rect.y.getter()
{
  return *(double *)(v0 + 8);
}

double StoredPhotoLayout.Rect.width.getter()
{
  return *(double *)(v0 + 16);
}

double StoredPhotoLayout.Rect.height.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t StoredPhotoLayout.Rect.hash(into:)()
{
  return sub_25930A900();
}

uint64_t StoredPhotoLayout.Rect.hashValue.getter()
{
  return sub_25930A910();
}

uint64_t sub_259290C04()
{
  return sub_25930A910();
}

uint64_t sub_259290C54()
{
  return sub_25930A910();
}

uint64_t StoredPhotoLayout.ImageLocation.hash(into:)()
{
  uint64_t v1 = sub_259309300();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unsigned __int8 v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259296D14(v0, (uint64_t)v7, type metadata accessor for StoredPhotoLayout.ImageLocation);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1) {
    return sub_25930A8D0();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_25930A8D0();
  sub_25928BC3C(&qword_26A37E758, MEMORY[0x263F06EA8]);
  sub_259309B20();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t StoredPhotoLayout.ImageLocation.hashValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_259309300();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25930A8C0();
  sub_259296D14(v1, (uint64_t)v8, type metadata accessor for StoredPhotoLayout.ImageLocation);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_25930A8D0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_25930A8D0();
    sub_25928BC3C(&qword_26A37E758, MEMORY[0x263F06EA8]);
    sub_259309B20();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_25930A910();
}

uint64_t sub_259291064()
{
  uint64_t v1 = sub_259309300();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259296D14(v0, (uint64_t)v7, type metadata accessor for StoredPhotoLayout.ImageLocation);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1) {
    return sub_25930A8D0();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_25930A8D0();
  sub_25928BC3C(&qword_26A37E758, MEMORY[0x263F06EA8]);
  sub_259309B20();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_259291230()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_259309300();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25930A8C0();
  sub_259296D14(v1, (uint64_t)v8, type metadata accessor for StoredPhotoLayout.ImageLocation);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_25930A8D0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_25930A8D0();
    sub_25928BC3C(&qword_26A37E758, MEMORY[0x263F06EA8]);
    sub_259309B20();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_25930A910();
}

uint64_t StoredPhotoLayout.baseImage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_259296D14(v1, a1, type metadata accessor for StoredPhotoLayout.ImageLocation);
}

uint64_t StoredPhotoLayout.baseImage.setter(uint64_t a1)
{
  return sub_259296EA4(a1, v1, type metadata accessor for StoredPhotoLayout.ImageLocation);
}

uint64_t (*StoredPhotoLayout.baseImage.modify())()
{
  return nullsub_1;
}

uint64_t StoredPhotoLayout.maskImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StoredPhotoLayout(0);
  return sub_2592207A0(v1 + *(int *)(v3 + 20), a1, &qword_26A37DFC8);
}

uint64_t StoredPhotoLayout.maskImage.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StoredPhotoLayout(0);
  return sub_259299F40(a1, v1 + *(int *)(v3 + 20), &qword_26A37DFC8);
}

uint64_t (*StoredPhotoLayout.maskImage.modify())(void, void, void, void)
{
  return nullsub_1;
}

__n128 StoredPhotoLayout.originalCrop.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StoredPhotoLayout(0) + 24);
  __n128 result = *(__n128 *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  *a1 = *(_OWORD *)v3;
  a1[1] = v5;
  return result;
}

uint64_t StoredPhotoLayout.timePosition.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StoredPhotoLayout(0) + 28));
}

__n128 StoredPhotoLayout.timeRect.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StoredPhotoLayout(0) + 32);
  __n128 result = *(__n128 *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  *a1 = *(_OWORD *)v3;
  a1[1] = v5;
  return result;
}

double StoredPhotoLayout.backgroundZorder.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for StoredPhotoLayout(0) + 36));
}

double StoredPhotoLayout.foregroundZorder.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for StoredPhotoLayout(0) + 40));
}

double StoredPhotoLayout.timeElementZorder.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for StoredPhotoLayout(0) + 44));
}

double StoredPhotoLayout.imageAOTBrightness.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for StoredPhotoLayout(0) + 48));
}

uint64_t StoredPhotoLayout.userEdited.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StoredPhotoLayout(0) + 52));
}

uint64_t StoredPhotoLayout.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_259309300();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v26 = (uint64_t)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v27 = (uint64_t)&v24 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v24 - v15;
  sub_259296D14(v1, (uint64_t)&v24 - v15, type metadata accessor for StoredPhotoLayout.ImageLocation);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  int v17 = v25(v16, 1, v5);
  uint64_t v24 = v6;
  if (v17 == 1)
  {
    sub_25930A8D0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v16, v5);
    sub_25930A8D0();
    sub_25928BC3C(&qword_26A37E758, MEMORY[0x263F06EA8]);
    sub_259309B20();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v18 = type metadata accessor for StoredPhotoLayout(0);
  sub_2592207A0(v1 + *(int *)(v18 + 20), (uint64_t)v4, &qword_26A37DFC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) == 1)
  {
    sub_25930A8E0();
  }
  else
  {
    uint64_t v19 = (uint64_t)v4;
    uint64_t v20 = v27;
    sub_259296CAC(v19, v27, type metadata accessor for StoredPhotoLayout.ImageLocation);
    sub_25930A8E0();
    uint64_t v21 = v26;
    sub_259296D14(v20, v26, type metadata accessor for StoredPhotoLayout.ImageLocation);
    if (v25((char *)v21, 1, v5) == 1)
    {
      sub_25930A8D0();
    }
    else
    {
      uint64_t v22 = v24;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v8, v21, v5);
      sub_25930A8D0();
      sub_25928BC3C(&qword_26A37E758, MEMORY[0x263F06EA8]);
      sub_259309B20();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
    }
    sub_259296C4C(v20, type metadata accessor for StoredPhotoLayout.ImageLocation);
  }
  sub_25930A900();
  sub_25930A900();
  sub_25930A900();
  sub_25930A900();
  sub_25930A8D0();
  sub_25930A900();
  sub_25930A900();
  sub_25930A900();
  sub_25930A900();
  sub_25930A900();
  sub_25930A900();
  sub_25930A900();
  sub_25930A900();
  return sub_25930A8E0();
}

uint64_t StoredPhotoLayout.hashValue.getter()
{
  return sub_259291C0C((void (*)(unsigned char *))StoredPhotoLayout.hash(into:));
}

uint64_t sub_259291C0C(void (*a1)(unsigned char *))
{
  sub_25930A8C0();
  a1(v3);
  return sub_25930A910();
}

uint64_t sub_259291C54(uint64_t a1, uint64_t a2)
{
  return sub_259291C6C(a1, a2, (void (*)(unsigned char *))StoredPhotoLayout.hash(into:));
}

uint64_t sub_259291C6C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_25930A8C0();
  a3(v5);
  return sub_25930A910();
}

uint64_t sub_259291CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_259291CD0(a1, a2, a3, (void (*)(unsigned char *))StoredPhotoLayout.hash(into:));
}

uint64_t sub_259291CD0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_25930A8C0();
  a4(v6);
  return sub_25930A910();
}

PhotosFace::StoredPhotoLayout::Rect __swiftcall StoredPhotoLayout.Rect.init(cgRect:)(CGRect cgRect)
{
  CGFloat height = cgRect.size.height;
  CGFloat width = cgRect.size.width;
  CGFloat y = cgRect.origin.y;
  CGFloat x = cgRect.origin.x;
  uint64_t v6 = v1;
  CGFloat MinX = CGRectGetMinX(cgRect);
  v14.origin.CGFloat x = x;
  v14.origin.CGFloat y = y;
  v14.size.CGFloat width = width;
  v14.size.CGFloat height = height;
  CGFloat MinY = CGRectGetMinY(v14);
  v15.origin.CGFloat x = x;
  v15.origin.CGFloat y = y;
  v15.size.CGFloat width = width;
  v15.size.CGFloat height = height;
  CGFloat v9 = CGRectGetWidth(v15);
  v16.origin.CGFloat x = x;
  v16.origin.CGFloat y = y;
  v16.size.CGFloat width = width;
  v16.size.CGFloat height = height;
  double v10 = CGRectGetHeight(v16);
  *uint64_t v6 = MinX;
  v6[1] = MinY;
  v6[2] = v9;
  v6[3] = v10;
  result.CGFloat height = v13;
  result.CGFloat width = v12;
  result.CGFloat y = v11;
  result.CGFloat x = v10;
  return result;
}

uint64_t StoredPhotoLayout.ImageLocation.init(protobuf:version:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_259309250();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v8 - 8);
  double v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  MEMORY[0x270FA5388](v11 - 8);
  double v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 8) != 1 || !*(void *)a1) {
    goto LABEL_7;
  }
  if (*(void *)a1 == 1)
  {
    sub_259296C4C(a1, type metadata accessor for StoredPhotoLayoutImageLocationProto);
    uint64_t v14 = sub_259309300();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  CGRect v16 = (uint64_t *)(a1 + *(int *)(type metadata accessor for StoredPhotoLayoutImageLocationProto(0) + 24));
  uint64_t v17 = v16[1];
  if (v17)
  {
    uint64_t v18 = *v16;
    v22[1] = v17;
    void v22[2] = v18;
    uint64_t v23 = sub_259309300();
    uint64_t v19 = *(void *)(v23 - 8);
    uint64_t v24 = a2;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v20(v10, 1, 1, v23);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F06E50], v4);
    swift_bridgeObjectRetain();
    sub_2593092E0();
    sub_259296C4C(a1, type metadata accessor for StoredPhotoLayoutImageLocationProto);
    v20(v13, 0, 1, v23);
    return sub_259296CAC((uint64_t)v13, v24, type metadata accessor for StoredPhotoLayout.ImageLocation);
  }
  else
  {
LABEL_7:
    sub_259296F0C();
    swift_allocError();
    *uint64_t v21 = 0;
    swift_willThrow();
    return sub_259296C4C(a1, type metadata accessor for StoredPhotoLayoutImageLocationProto);
  }
}

__n128 StoredPhotoLayout.Rect.init(protobuf:version:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 v6 = *(__n128 *)a1;
  unint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a1 + 24);
  sub_259296C4C(a1, type metadata accessor for StoredPhotoLayoutRectProto);
  __n128 result = v6;
  *a2 = v6;
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_259292144(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = type metadata accessor for StoredPhotoLayoutRectProto(0);
  MEMORY[0x270FA5388](v54);
  uint64_t v53 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  v50[0] = (uint64_t)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StoredPhotoLayoutImageLocationProto(0);
  MEMORY[0x270FA5388](v11);
  double v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a2;
  sub_25928BC3C(&qword_26A37E768, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayoutImageLocationProto);
  uint64_t v14 = v52;
  sub_259309750();
  v50[1] = v14;
  StoredPhotoLayoutProto.baseImage.setter((uint64_t)v13);
  uint64_t v51 = type metadata accessor for StoredPhotoLayout(0);
  uint64_t v15 = *(int *)(v51 + 20);
  uint64_t v52 = a2;
  sub_2592207A0(a2 + v15, (uint64_t)v7, &qword_26A37DFC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    uint64_t v16 = sub_25924A3A8((uint64_t)v7, &qword_26A37DFC8);
  }
  else
  {
    uint64_t v17 = v50[0];
    uint64_t v18 = sub_259296CAC((uint64_t)v7, v50[0], type metadata accessor for StoredPhotoLayout.ImageLocation);
    MEMORY[0x270FA5388](v18);
    sub_259309750();
    StoredPhotoLayoutProto.maskImage.setter((uint64_t)v13);
    uint64_t v16 = sub_259296C4C(v17, type metadata accessor for StoredPhotoLayout.ImageLocation);
  }
  uint64_t v19 = (int *)v51;
  uint64_t v20 = v52;
  MEMORY[0x270FA5388](v16);
  sub_25928BC3C(&qword_26A37E770, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayoutRectProto);
  uint64_t v21 = (uint64_t)v53;
  sub_259309750();
  StoredPhotoLayoutProto.originalCrop.setter(v21);
  unint64_t v22 = *(void *)(v20 + v19[7]);
  if (HIDWORD(v22))
  {
    uint64_t result = sub_25930A570();
    __break(1u);
  }
  else
  {
    uint64_t v23 = *(int *)(type metadata accessor for StoredPhotoLayoutProto(0) + 20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for StoredPhotoLayoutProto._StorageClass(0);
      swift_allocObject();
      uint64_t v24 = swift_retain();
      uint64_t v25 = sub_2592BFA8C(v24);
      swift_release();
      *(void *)(a1 + v23) = v25;
      swift_release();
    }
    uint64_t v26 = (_DWORD *)(*(void *)(a1 + v23)
                   + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__timePosition);
    uint64_t v27 = swift_beginAccess();
    *uint64_t v26 = v22;
    MEMORY[0x270FA5388](v27);
    uint64_t v28 = (uint64_t)v53;
    sub_259309750();
    StoredPhotoLayoutProto.timeRect.setter(v28);
    uint64_t v29 = *(void *)(v20 + v19[9]);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for StoredPhotoLayoutProto._StorageClass(0);
      swift_allocObject();
      uint64_t v30 = swift_retain();
      uint64_t v31 = sub_2592BFA8C(v30);
      swift_release();
      *(void *)(a1 + v23) = v31;
      swift_release();
    }
    unint64_t v32 = (void *)(*(void *)(a1 + v23)
                   + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__backgroundZorder);
    swift_beginAccess();
    void *v32 = v29;
    uint64_t v33 = *(void *)(v20 + v19[10]);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for StoredPhotoLayoutProto._StorageClass(0);
      swift_allocObject();
      uint64_t v34 = swift_retain();
      uint64_t v35 = sub_2592BFA8C(v34);
      swift_release();
      *(void *)(a1 + v23) = v35;
      swift_release();
    }
    uint64_t v36 = (void *)(*(void *)(a1 + v23)
                   + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__foregroundZorder);
    swift_beginAccess();
    *uint64_t v36 = v33;
    uint64_t v37 = *(void *)(v20 + v19[11]);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for StoredPhotoLayoutProto._StorageClass(0);
      swift_allocObject();
      uint64_t v38 = swift_retain();
      uint64_t v39 = sub_2592BFA8C(v38);
      swift_release();
      *(void *)(a1 + v23) = v39;
      swift_release();
    }
    uint64_t v40 = (void *)(*(void *)(a1 + v23)
                   + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__timeElementZorder);
    swift_beginAccess();
    *uint64_t v40 = v37;
    uint64_t v41 = *(void *)(v20 + v19[12]);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for StoredPhotoLayoutProto._StorageClass(0);
      swift_allocObject();
      uint64_t v42 = swift_retain();
      uint64_t v43 = sub_2592BFA8C(v42);
      swift_release();
      *(void *)(a1 + v23) = v43;
      swift_release();
    }
    uint64_t v44 = (void *)(*(void *)(a1 + v23)
                   + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__imageAotbrightness);
    swift_beginAccess();
    *uint64_t v44 = v41;
    char v45 = *(unsigned char *)(v20 + v19[13]);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for StoredPhotoLayoutProto._StorageClass(0);
      swift_allocObject();
      uint64_t v46 = swift_retain();
      uint64_t v47 = sub_2592BFA8C(v46);
      swift_release();
      *(void *)(a1 + v23) = v47;
      swift_release();
    }
    uint64_t v48 = (unsigned char *)(*(void *)(a1 + v23)
                  + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__userEdited);
    uint64_t result = swift_beginAccess();
    *uint64_t v48 = v45;
  }
  return result;
}

uint64_t StoredPhotoLayout.ImageLocation.protobuf(version:)()
{
  return sub_259309750();
}

uint64_t StoredPhotoLayout.Rect.protobuf(version:)()
{
  return sub_259309750();
}

uint64_t sub_259292AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return StoredPhotoLayout.init(protobuf:version:)(a1, a2);
}

uint64_t sub_259292AC4()
{
  return sub_259309750();
}

uint64_t sub_259292B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259309300();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_259296D14(a2, (uint64_t)v10, type metadata accessor for StoredPhotoLayout.ImageLocation);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  if (result == 1)
  {
    *(void *)a1 = 1;
    *(unsigned char *)(a1 + 8) = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    *(void *)a1 = 2;
    *(unsigned char *)(a1 + 8) = 1;
    uint64_t v12 = sub_259309260();
    uint64_t v14 = v13;
    uint64_t v15 = (uint64_t *)(a1 + *(int *)(type metadata accessor for StoredPhotoLayoutImageLocationProto(0) + 24));
    swift_bridgeObjectRelease();
    *uint64_t v15 = v12;
    v15[1] = v14;
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_259292D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return StoredPhotoLayout.ImageLocation.init(protobuf:version:)(a1, a2);
}

uint64_t sub_259292D5C()
{
  return sub_259309750();
}

double *sub_259292E04(double *result, double a2, double a3, double a4, double a5)
{
  result[2] = a4;
  result[3] = a5;
  *uint64_t result = a2;
  result[1] = a3;
  return result;
}

__n128 sub_259292E10@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 v6 = *(__n128 *)a1;
  unint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a1 + 24);
  sub_259296C4C(a1, type metadata accessor for StoredPhotoLayoutRectProto);
  __n128 result = v6;
  *a2 = v6;
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_259292E78()
{
  return sub_259309750();
}

uint64_t sub_259292F38(uint64_t a1, char a2)
{
  return sub_259293ED4(a1, a2, &qword_26A37E7F0);
}

uint64_t sub_259292F44(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for StoredPhotoLayout(0);
  uint64_t v37 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_26A37C9A8);
  int v38 = a2;
  uint64_t result = sub_25930A600();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    uint64_t v34 = v2;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v36 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v35 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v19 = v18 | (v11 << 6);
      }
      else
      {
        int64_t v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v36;
        if (v20 >= v35) {
          goto LABEL_34;
        }
        unint64_t v21 = v36[v20];
        ++v11;
        if (!v21)
        {
          int64_t v11 = v20 + 1;
          if (v20 + 1 >= v35) {
            goto LABEL_34;
          }
          unint64_t v21 = v36[v11];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_34:
              if ((v38 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v34;
                goto LABEL_41;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v8 + 32);
              if (v33 >= 64) {
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v36 = -1 << v33;
              }
              unint64_t v3 = v34;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v11 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v35) {
                  goto LABEL_34;
                }
                unint64_t v21 = v36[v11];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v22;
          }
        }
LABEL_21:
        unint64_t v15 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      uint64_t v23 = *(void *)(*(void *)(v8 + 48) + 8 * v19);
      uint64_t v24 = *(void *)(v37 + 72);
      uint64_t v25 = *(void *)(v8 + 56) + v24 * v19;
      if (v38) {
        sub_259296CAC(v25, (uint64_t)v7, type metadata accessor for StoredPhotoLayout);
      }
      else {
        sub_259296D14(v25, (uint64_t)v7, type metadata accessor for StoredPhotoLayout);
      }
      sub_25930A8C0();
      sub_25930A8D0();
      uint64_t result = sub_25930A910();
      uint64_t v26 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(void *)(*(void *)(v10 + 48) + 8 * v17) = v23;
      uint64_t result = sub_259296CAC((uint64_t)v7, *(void *)(v10 + 56) + v24 * v17, type metadata accessor for StoredPhotoLayout);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_2592932E8(uint64_t a1, int a2)
{
  return sub_259293310(a1, a2, &qword_26A37DFB0, &qword_26A37E808);
}

uint64_t sub_2592932FC(uint64_t a1, int a2)
{
  return sub_259293310(a1, a2, &qword_26A37E2B0, &qword_26A37E800);
}

uint64_t sub_259293310(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = a3;
  uint64_t v7 = v4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v40 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  int64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v41 = a2;
  uint64_t v13 = sub_25930A600();
  uint64_t v14 = (void *)v13;
  if (*(void *)(v12 + 16))
  {
    uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
    uint64_t v16 = *(void *)(v12 + 64);
    uint64_t v37 = (void *)(v12 + 64);
    if (v15 < 64) {
      uint64_t v17 = ~(-1 << v15);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & v16;
    int64_t v35 = v4;
    int64_t v36 = (unint64_t)(v15 + 63) >> 6;
    uint64_t v19 = v13 + 64;
    uint64_t result = swift_retain();
    int64_t v21 = 0;
    int v38 = v6;
    uint64_t v39 = v12;
    while (1)
    {
      if (v18)
      {
        unint64_t v23 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v24 = v23 | (v21 << 6);
      }
      else
      {
        int64_t v25 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        uint64_t v26 = v37;
        if (v25 >= v36) {
          goto LABEL_27;
        }
        unint64_t v27 = v37[v25];
        ++v21;
        if (!v27)
        {
          int64_t v21 = v25 + 1;
          if (v25 + 1 >= v36) {
            goto LABEL_27;
          }
          unint64_t v27 = v37[v21];
          if (!v27)
          {
            int64_t v28 = v25 + 2;
            if (v28 >= v36)
            {
LABEL_27:
              swift_release();
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v7 = v35;
                goto LABEL_34;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v12 + 32);
              if (v34 >= 64) {
                bzero(v26, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v26 = -1 << v34;
              }
              uint64_t v7 = v35;
              *(void *)(v12 + 16) = 0;
              break;
            }
            unint64_t v27 = v37[v28];
            if (!v27)
            {
              while (1)
              {
                int64_t v21 = v28 + 1;
                if (__OFADD__(v28, 1)) {
                  goto LABEL_36;
                }
                if (v21 >= v36) {
                  goto LABEL_27;
                }
                unint64_t v27 = v37[v21];
                ++v28;
                if (v27) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v21 = v28;
          }
        }
LABEL_21:
        unint64_t v18 = (v27 - 1) & v27;
        unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
      }
      uint64_t v29 = *(void *)(v40 + 72);
      uint64_t v30 = *(void *)(v12 + 48) + v29 * v24;
      if (v41)
      {
        sub_25924A404(v30, (uint64_t)v11, v6);
        uint64_t v31 = *(void *)(*(void *)(v12 + 56) + 8 * v24);
      }
      else
      {
        sub_2592207A0(v30, (uint64_t)v11, v6);
        uint64_t v31 = *(void *)(*(void *)(v12 + 56) + 8 * v24);
        swift_bridgeObjectRetain();
      }
      sub_25930A8C0();
      sub_259309440();
      sub_25928BC3C(&qword_26A37E298, MEMORY[0x263F07508]);
      sub_259309B20();
      uint64_t v32 = type metadata accessor for StoredPhoto(0);
      sub_2593093D0();
      sub_25928BC3C(&qword_26A37E400, MEMORY[0x263F07490]);
      sub_259309B20();
      sub_25930A900();
      sub_25930A8D0();
      uint64_t v33 = *(void *)&v11[*(int *)(v32 + 32)];
      swift_bridgeObjectRetain();
      sub_259295BF4(v42, v33);
      swift_bridgeObjectRelease();
      if (*(void *)&v11[*(int *)(v32 + 36) + 8])
      {
        sub_25930A8E0();
        swift_bridgeObjectRetain();
        sub_259309C00();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_25930A8E0();
      }
      uint64_t v6 = v38;
      uint64_t v12 = v39;
      sub_25930A910();
      unint64_t v22 = sub_25930A350();
      *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      uint64_t result = sub_25924A404((uint64_t)v11, v14[6] + v29 * v22, v6);
      *(void *)(v14[7] + 8 * v22) = v31;
      ++v14[2];
    }
  }
  uint64_t result = swift_release();
LABEL_34:
  *uint64_t v7 = v14;
  return result;
}

uint64_t sub_25929378C(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = sub_259309440();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E7F8);
  int v46 = a2;
  uint64_t v10 = sub_25930A600();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_25928BC3C(&qword_26A37E298, MEMORY[0x263F07508]);
    uint64_t result = sub_259309B10();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  unint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_259293BB0(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C998);
  char v36 = a2;
  uint64_t v6 = sub_25930A600();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_25930A8C0();
    sub_259309C00();
    uint64_t result = sub_25930A910();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_259293EC8(uint64_t a1, char a2)
{
  return sub_259293ED4(a1, a2, &qword_26A37DFA0);
}

uint64_t sub_259293ED4(uint64_t a1, char a2, uint64_t *a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_25930A600();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    unint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v32 = -1 << v11;
    uint64_t v33 = v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v34 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34) {
          goto LABEL_33;
        }
        unint64_t v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v23 = v10[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if (a2)
              {
                if (v33 >= 64) {
                  bzero((void *)(v6 + 64), 8 * v34);
                }
                else {
                  *unint64_t v10 = v32;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v9 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v23 = v10[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void *)(*(void *)(v6 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v6 + 56) + v29);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_25930A8B0();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v8 + 48) + v19) = v30;
      *(void *)(*(void *)(v8 + 56) + v19) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v4 = v8;
  return result;
}

uint64_t sub_259294188(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C990);
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C988);
  int v39 = a2;
  uint64_t result = sub_25930A600();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    uint64_t v35 = v3;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v37 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v36 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v19 = v18 | (v11 << 6);
      }
      else
      {
        int64_t v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v20 >= v36) {
          goto LABEL_34;
        }
        unint64_t v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          int64_t v11 = v20 + 1;
          if (v20 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v21 = v37[v11];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v35;
                goto LABEL_41;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v8 + 32);
              if (v33 >= 64) {
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v37 = -1 << v33;
              }
              unint64_t v3 = v35;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v11 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v21 = v37[v11];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v22;
          }
        }
LABEL_21:
        unint64_t v15 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      uint64_t v23 = *(unsigned int *)(*(void *)(v8 + 48) + 4 * v19);
      uint64_t v24 = *(void *)(v38 + 72);
      uint64_t v25 = *(void *)(v8 + 56) + v24 * v19;
      if (v39) {
        sub_25924A404(v25, (uint64_t)v7, &qword_26A37C990);
      }
      else {
        sub_2592207A0(v25, (uint64_t)v7, &qword_26A37C990);
      }
      uint64_t result = MEMORY[0x25A2DB110](*(void *)(v10 + 40), v23, 4);
      uint64_t v26 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_DWORD *)(*(void *)(v10 + 48) + 4 * v17) = v23;
      uint64_t result = sub_25924A404((uint64_t)v7, *(void *)(v10 + 56) + v24 * v17, &qword_26A37C990);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_2592944FC(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E7D8);
  uint64_t result = sub_25930A600();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v29 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v12) {
          goto LABEL_33;
        }
        unint64_t v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v21 = v29[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v29 = -1 << v28;
              }
              unint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v21 = v29[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      long long v30 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      sub_25930A8C0();
      sub_25930A8D0();
      uint64_t result = sub_25930A910();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v7 + 48) + v17) = v27;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v17) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

void sub_2592947E0(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = type metadata accessor for StoredPhotoLayout(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C9A0);
  MEMORY[0x270FA5388](v11);
  unint64_t v15 = (uint64_t *)((char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    goto LABEL_22;
  }
  uint64_t v52 = v3;
  uint64_t v53 = v8;
  uint64_t v17 = (uint64_t)v15 + *(int *)(v12 + 48);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v54 = a1;
  unint64_t v51 = v18;
  uint64_t v56 = *(void *)(v13 + 72);
  sub_2592207A0(a1 + v18, (uint64_t)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26A37C9A0);
  uint64_t v60 = *v15;
  uint64_t v19 = v60;
  uint64_t v55 = v17;
  sub_259296CAC(v17, (uint64_t)v10, type metadata accessor for StoredPhotoLayout);
  int64_t v20 = (void *)*a3;
  unint64_t v22 = sub_25925E388(v19);
  uint64_t v23 = v20[2];
  BOOL v24 = (v21 & 1) == 0;
  uint64_t v25 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  char v26 = v21;
  if (v20[3] >= v25)
  {
    if (a2)
    {
      if ((v21 & 1) == 0) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_259294CFC();
      if ((v26 & 1) == 0) {
        goto LABEL_13;
      }
    }
    goto LABEL_10;
  }
  sub_259292F44(v25, a2 & 1);
  unint64_t v27 = sub_25925E388(v19);
  if ((v26 & 1) == (v28 & 1))
  {
    unint64_t v22 = v27;
    if ((v26 & 1) == 0)
    {
LABEL_13:
      BOOL v31 = (void *)*a3;
      *(void *)(*a3 + 8 * (v22 >> 6) + 64) |= 1 << v22;
      *(void *)(v31[6] + 8 * v22) = v19;
      uint64_t v32 = *(void *)(v53 + 72);
      sub_259296CAC((uint64_t)v10, v31[7] + v32 * v22, type metadata accessor for StoredPhotoLayout);
      uint64_t v33 = v31[2];
      BOOL v34 = __OFADD__(v33, 1);
      uint64_t v35 = v33 + 1;
      if (v34)
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      void v31[2] = v35;
      uint64_t v36 = v16 - 1;
      if (v36)
      {
        uint64_t v37 = v54 + v56 + v51;
        do
        {
          sub_2592207A0(v37, (uint64_t)v15, &qword_26A37C9A0);
          uint64_t v60 = *v15;
          uint64_t v38 = v60;
          sub_259296CAC(v55, (uint64_t)v10, type metadata accessor for StoredPhotoLayout);
          int v39 = (void *)*a3;
          unint64_t v40 = sub_25925E388(v38);
          uint64_t v42 = v39[2];
          BOOL v43 = (v41 & 1) == 0;
          BOOL v34 = __OFADD__(v42, v43);
          uint64_t v44 = v42 + v43;
          if (v34) {
            goto LABEL_23;
          }
          char v45 = v41;
          if (v39[3] < v44)
          {
            sub_259292F44(v44, 1);
            unint64_t v40 = sub_25925E388(v38);
            if ((v45 & 1) != (v46 & 1)) {
              goto LABEL_25;
            }
          }
          if (v45) {
            goto LABEL_10;
          }
          uint64_t v47 = (void *)*a3;
          *(void *)(*a3 + 8 * (v40 >> 6) + 64) |= 1 << v40;
          *(void *)(v47[6] + 8 * v40) = v38;
          sub_259296CAC((uint64_t)v10, v47[7] + v32 * v40, type metadata accessor for StoredPhotoLayout);
          uint64_t v48 = v47[2];
          BOOL v34 = __OFADD__(v48, 1);
          uint64_t v49 = v48 + 1;
          if (v34) {
            goto LABEL_24;
          }
          void v47[2] = v49;
          v37 += v56;
        }
        while (--v36);
      }
LABEL_22:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_10:
    char v29 = (void *)swift_allocError();
    swift_willThrow();
    id v59 = v29;
    id v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F3D70);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_259296C4C((uint64_t)v10, type metadata accessor for StoredPhotoLayout);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  type metadata accessor for PFCTimePosition(0);
  sub_25930A830();
  __break(1u);
LABEL_26:
  uint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  sub_25930A3E0();
  sub_259309C20();
  type metadata accessor for PFCTimePosition(0);
  sub_25930A540();
  sub_259309C20();
  sub_25930A580();
  __break(1u);
}

void *sub_259294CFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StoredPhotoLayout(0);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(qword_26A37C9A8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25930A5F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_23:
    *uint64_t v1 = v7;
    return result;
  }
  BOOL v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    if (__OFADD__(v11++, 1)) {
      goto LABEL_25;
    }
    if (v11 >= v15)
    {
LABEL_21:
      uint64_t result = (void *)swift_release();
      uint64_t v1 = v24;
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    if (!v22) {
      break;
    }
LABEL_20:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 8 * v17;
    uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v20 = *(void *)(v25 + 72) * v17;
    sub_259296D14(*(void *)(v5 + 56) + v20, (uint64_t)v4, type metadata accessor for StoredPhotoLayout);
    *(void *)(*(void *)(v7 + 48) + v18) = v19;
    uint64_t result = (void *)sub_259296CAC((uint64_t)v4, *(void *)(v7 + 56) + v20, type metadata accessor for StoredPhotoLayout);
  }
  int64_t v23 = v11 + 1;
  if (v11 + 1 >= v15) {
    goto LABEL_21;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    ++v11;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_21;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void *sub_259294F60()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C998);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25930A5F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    char v21 = (void *)(*(void *)(v4 + 48) + v16);
    *char v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_259295118()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25930A5F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2592952BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C990);
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C988);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_25930A5F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 4 * v16;
    int v18 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v16);
    unint64_t v19 = *(void *)(v26 + 72) * v16;
    sub_2592207A0(*(void *)(v5 + 56) + v19, (uint64_t)v4, &qword_26A37C990);
    *(_DWORD *)(*(void *)(v7 + 48) + v17) = v18;
    uint64_t result = (void *)sub_25924A404((uint64_t)v4, *(void *)(v7 + 56) + v19, &qword_26A37C990);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_25929552C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E7D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25930A5F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    long long v16 = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(_OWORD *)(*(void *)(v4 + 56) + 16 * v15) = v16;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2592956D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_25925E538(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_259294F60();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_259293BB0(v15, a4 & 1);
  unint64_t v21 = sub_25925E538(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_25930A830();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_259295844(uint64_t a1, unsigned int a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_25925E5B0(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C990);
      return sub_259299F40(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, &qword_26A37C990);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_2592952BC();
    goto LABEL_7;
  }
  sub_259294188(v13, a3 & 1);
  unint64_t v20 = sub_25925E5B0(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_15:
    uint64_t result = sub_25930A830();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_259295AD0(v10, a2, a1, v16);
}

uint64_t sub_259295990(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_25925E5F8(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_25929552C();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_release();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a3;
    char v21 = (void *)(v18[7] + 16 * v12);
    *char v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_2592944FC(result, a4 & 1);
  uint64_t result = sub_25925E5F8(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_25930A830();
  __break(1u);
  return result;
}

uint64_t sub_259295AD0(unint64_t a1, int a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_DWORD *)(a4[6] + 4 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37C990);
  uint64_t result = sub_25924A404(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, &qword_26A37C990);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

void sub_259295B78(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_25930A5E0();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x25A2DACA0);
}

uint64_t sub_259295BF4(long long *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoredPhotoLayout(0);
  uint64_t v36 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E228);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (int64_t *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v34 = a2 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v35 = (unint64_t)(v14 + 63) >> 6;
  int64_t v33 = v35 - 1;
  uint64_t v37 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  int64_t v38 = 0;
  if (!v16) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  unint64_t v20 = v19 | (v38 << 6);
LABEL_5:
  uint64_t v21 = *(void *)(*(void *)(v37 + 48) + 8 * v20);
  uint64_t v22 = *(void *)(v37 + 56) + *(void *)(v36 + 72) * v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E230);
  sub_259296D14(v22, (uint64_t)v10 + *(int *)(v23 + 48), type metadata accessor for StoredPhotoLayout);
  *uint64_t v10 = v21;
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 0, 1, v23);
  while (1)
  {
    sub_25924A404((uint64_t)v10, (uint64_t)v12, &qword_26A37E228);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E230);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v12, 1, v29) == 1)
    {
      swift_release();
      return sub_25930A8D0();
    }
    sub_259296CAC((uint64_t)&v12[*(int *)(v29 + 48)], (uint64_t)v6, type metadata accessor for StoredPhotoLayout);
    uint64_t v30 = *((void *)a1 + 8);
    long long v31 = a1[1];
    long long v39 = *a1;
    long long v40 = v31;
    long long v32 = a1[3];
    long long v41 = a1[2];
    long long v42 = v32;
    uint64_t v43 = v30;
    sub_25930A8D0();
    StoredPhotoLayout.hash(into:)();
    sub_259296C4C((uint64_t)v6, type metadata accessor for StoredPhotoLayout);
    uint64_t result = sub_25930A910();
    v18 ^= result;
    if (v16) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v24 = v38 + 1;
    if (__OFADD__(v38, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 < v35)
    {
      unint64_t v25 = *(void *)(v34 + 8 * v24);
      if (v25) {
        goto LABEL_9;
      }
      int64_t v26 = v38 + 2;
      ++v38;
      if (v24 + 1 < v35)
      {
        unint64_t v25 = *(void *)(v34 + 8 * v26);
        if (v25)
        {
          ++v24;
LABEL_9:
          unint64_t v16 = (v25 - 1) & v25;
          unint64_t v20 = __clz(__rbit64(v25)) + (v24 << 6);
          int64_t v38 = v24;
          goto LABEL_5;
        }
        int64_t v27 = v24 + 2;
        int64_t v38 = v24 + 1;
        if (v24 + 2 < v35) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E230);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 1, 1, v28);
    unint64_t v16 = 0;
  }
  unint64_t v25 = *(void *)(v34 + 8 * v27);
  if (v25)
  {
    v24 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v24 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v24 >= v35)
    {
      int64_t v38 = v33;
      goto LABEL_21;
    }
    unint64_t v25 = *(void *)(v34 + 8 * v24);
    ++v27;
    if (v25) {
      goto LABEL_9;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_259296024(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_2592960C4(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2592961A8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t _s10PhotosFace17StoredPhotoLayoutV13ImageLocationO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259309300();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E7E8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_259296D14(a1, (uint64_t)v14, type metadata accessor for StoredPhotoLayout.ImageLocation);
  sub_259296D14(a2, v15, type metadata accessor for StoredPhotoLayout.ImageLocation);
  unint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_259296D14((uint64_t)v14, (uint64_t)v10, type metadata accessor for StoredPhotoLayout.ImageLocation);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      char v17 = MEMORY[0x25A2D9B20](v10, v7);
      uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_259296C4C((uint64_t)v14, type metadata accessor for StoredPhotoLayout.ImageLocation);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_25924A3A8((uint64_t)v14, &qword_26A37E7E8);
    char v17 = 0;
    return v17 & 1;
  }
  sub_259296C4C((uint64_t)v14, type metadata accessor for StoredPhotoLayout.ImageLocation);
  char v17 = 1;
  return v17 & 1;
}

uint64_t _s10PhotosFace17StoredPhotoLayoutV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E7E0);
  MEMORY[0x270FA5388](v47);
  uint64_t v49 = (uint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v45 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v51 = (uint64_t)&v44 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v48 = (uint64_t)&v44 - v10;
  uint64_t v11 = sub_259309300();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v46 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v44 = (uint64_t)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E7E8);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (uint64_t)&v23[*(int *)(v21 + 56)];
  uint64_t v50 = a1;
  sub_259296D14(a1, (uint64_t)v23, type metadata accessor for StoredPhotoLayout.ImageLocation);
  uint64_t v25 = a2;
  sub_259296D14(a2, v24, type metadata accessor for StoredPhotoLayout.ImageLocation);
  int64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v26((uint64_t)v23, 1, v11) == 1)
  {
    if (v26(v24, 1, v11) == 1) {
      goto LABEL_8;
    }
LABEL_6:
    int64_t v27 = &qword_26A37E7E8;
    uint64_t v28 = (uint64_t)v23;
LABEL_14:
    sub_25924A3A8(v28, v27);
    goto LABEL_15;
  }
  sub_259296D14((uint64_t)v23, (uint64_t)v19, type metadata accessor for StoredPhotoLayout.ImageLocation);
  if (v26(v24, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, v24, v11);
  char v29 = MEMORY[0x25A2D9B20](v19, v14);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v14, v11);
  v30(v19, v11);
  if ((v29 & 1) == 0)
  {
    sub_259296C4C((uint64_t)v23, type metadata accessor for StoredPhotoLayout.ImageLocation);
    goto LABEL_15;
  }
LABEL_8:
  sub_259296C4C((uint64_t)v23, type metadata accessor for StoredPhotoLayout.ImageLocation);
  long long v31 = (int *)type metadata accessor for StoredPhotoLayout(0);
  uint64_t v32 = v50;
  uint64_t v33 = v48;
  sub_2592207A0(v50 + v31[5], v48, &qword_26A37DFC8);
  uint64_t v34 = v25;
  uint64_t v35 = v51;
  sub_2592207A0(v25 + v31[5], v51, &qword_26A37DFC8);
  uint64_t v36 = v49;
  uint64_t v37 = v49 + *(int *)(v47 + 48);
  sub_2592207A0(v33, v49, &qword_26A37DFC8);
  sub_2592207A0(v35, v37, &qword_26A37DFC8);
  int64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
  if (v38(v36, 1, v15) != 1)
  {
    uint64_t v39 = v45;
    sub_2592207A0(v36, v45, &qword_26A37DFC8);
    if (v38(v37, 1, v15) != 1)
    {
      uint64_t v42 = v44;
      sub_259296CAC(v37, v44, type metadata accessor for StoredPhotoLayout.ImageLocation);
      char v43 = _s10PhotosFace17StoredPhotoLayoutV13ImageLocationO2eeoiySbAE_AEtFZ_0(v39, v42);
      sub_259296C4C(v42, type metadata accessor for StoredPhotoLayout.ImageLocation);
      sub_25924A3A8(v51, &qword_26A37DFC8);
      sub_25924A3A8(v33, &qword_26A37DFC8);
      sub_259296C4C(v39, type metadata accessor for StoredPhotoLayout.ImageLocation);
      sub_25924A3A8(v36, &qword_26A37DFC8);
      if ((v43 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_19;
    }
    sub_25924A3A8(v51, &qword_26A37DFC8);
    sub_25924A3A8(v33, &qword_26A37DFC8);
    sub_259296C4C(v39, type metadata accessor for StoredPhotoLayout.ImageLocation);
    goto LABEL_13;
  }
  uint64_t v47 = v34;
  sub_25924A3A8(v35, &qword_26A37DFC8);
  sub_25924A3A8(v33, &qword_26A37DFC8);
  if (v38(v37, 1, v15) != 1)
  {
LABEL_13:
    int64_t v27 = &qword_26A37E7E0;
    uint64_t v28 = v36;
    goto LABEL_14;
  }
  sub_25924A3A8(v36, &qword_26A37DFC8);
  uint64_t v34 = v47;
LABEL_19:
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v32 + v31[6]), *(float64x2_t *)(v34 + v31[6])), (int32x4_t)vceqq_f64(*(float64x2_t *)(v32 + v31[6] + 16), *(float64x2_t *)(v34 + v31[6] + 16)))), 0xFuLL))) & 1) != 0&& *(void *)(v32 + v31[7]) == *(void *)(v34 + v31[7])&& (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v32 + v31[8]), *(float64x2_t *)(v34 + v31[8])), (int32x4_t)vceqq_f64(
                                                   *(float64x2_t *)(v32 + v31[8] + 16),
                                                   *(float64x2_t *)(v34 + v31[8] + 16)))),
                                  0xFuLL))) & 1) != 0
    && *(double *)(v32 + v31[9]) == *(double *)(v34 + v31[9])
    && *(double *)(v32 + v31[10]) == *(double *)(v34 + v31[10])
    && *(double *)(v32 + v31[11]) == *(double *)(v34 + v31[11])
    && *(double *)(v32 + v31[12]) == *(double *)(v34 + v31[12]))
  {
    char v40 = *(unsigned char *)(v32 + v31[13]) ^ *(unsigned char *)(v34 + v31[13]) ^ 1;
    return v40 & 1;
  }
LABEL_15:
  char v40 = 0;
  return v40 & 1;
}

uint64_t sub_259296C4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_259296CAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_259296D14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

BOOL _s10PhotosFace17StoredPhotoLayoutV4RectV2eeoiySbAE_AEtFZ_0(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t type metadata accessor for StoredPhotoError(uint64_t a1)
{
  return sub_259296DD8(a1, (uint64_t *)&unk_26A37E7C8);
}

uint64_t sub_259296DD8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_259296E10(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_259296E4C@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_25928EF3C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_259296E6C(uint64_t a1)
{
  return sub_259292144(a1, *(void *)(v1 + 16));
}

uint64_t sub_259296E8C(void *a1)
{
  return sub_259299EF0(a1);
}

uint64_t sub_259296EA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_259296F0C()
{
  unint64_t result = qword_26A37E760;
  if (!qword_26A37E760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E760);
  }
  return result;
}

uint64_t sub_259296F60(uint64_t a1)
{
  return sub_259292B7C(a1, *(void *)(v1 + 16));
}

__n128 sub_259296F7C(uint64_t a1)
{
  __n128 result = *(__n128 *)(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_259296F88()
{
  return sub_25928BC3C(&qword_26A37E778, (void (*)(uint64_t))type metadata accessor for StoredPhoto);
}

uint64_t sub_259296FD0()
{
  return sub_25928BC3C(&qword_26A37E308, (void (*)(uint64_t))type metadata accessor for StoredPhotoProto);
}

uint64_t sub_259297018()
{
  return sub_25928BC3C(&qword_26A37E750, (void (*)(uint64_t))type metadata accessor for StoredPhotoListProto);
}

uint64_t sub_259297060(uint64_t a1)
{
  uint64_t result = sub_25928BC3C(&qword_26A37E780, (void (*)(uint64_t))type metadata accessor for StoredPhoto);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2592970B8()
{
  return sub_25928BC3C(&qword_26A37E780, (void (*)(uint64_t))type metadata accessor for StoredPhoto);
}

unint64_t sub_259297104()
{
  unint64_t result = qword_26A37E788;
  if (!qword_26A37E788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E788);
  }
  return result;
}

uint64_t sub_259297158()
{
  return sub_25928BC3C(&qword_26A37E790, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayout.ImageLocation);
}

uint64_t sub_2592971A0()
{
  return sub_25928BC3C(&qword_26A37E798, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayout);
}

uint64_t sub_2592971E8()
{
  return sub_25928BC3C(&qword_26A37E748, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayoutProto);
}

uint64_t sub_259297230()
{
  return sub_25928BC3C(&qword_26A37E768, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayoutImageLocationProto);
}

uint64_t sub_259297278()
{
  return sub_25928BC3C(&qword_26A37E770, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayoutRectProto);
}

uint64_t *initializeBufferWithCopyOfBuffer for StoredPhoto(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_259309440();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_2593093D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v13 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StoredPhoto(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_2593093D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StoredPhoto(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2593093D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StoredPhoto(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2593093D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StoredPhoto(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2593093D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for StoredPhoto(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_259309440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_2593093D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StoredPhoto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2592978F4);
}

uint64_t sub_2592978F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_259309440();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_2593093D0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for StoredPhoto(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259297A1C);
}

uint64_t sub_259297A1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_259309440();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_2593093D0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_259297B2C()
{
  uint64_t result = sub_259309440();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_2593093D0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StoredPhotoLayout(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_259309300();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v31 = v8;
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      if (v9((uint64_t *)v14, 1, v7))
      {
        memcpy(v13, v14, *(void *)(v16 + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v13, v14, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v13, 0, 1, v7);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v18 = a3[6];
    uint64_t v19 = a3[7];
    uint64_t v20 = (_OWORD *)((char *)a1 + v18);
    uint64_t v21 = (_OWORD *)((char *)a2 + v18);
    long long v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    *(uint64_t *)((char *)a1 + v19) = *(uint64_t *)((char *)a2 + v19);
    uint64_t v23 = a3[8];
    uint64_t v24 = a3[9];
    uint64_t v25 = (_OWORD *)((char *)a1 + v23);
    int64_t v26 = (_OWORD *)((char *)a2 + v23);
    long long v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    *(uint64_t *)((char *)a1 + v24) = *(uint64_t *)((char *)a2 + v24);
    uint64_t v28 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)a1 + v28) = *(uint64_t *)((char *)a2 + v28);
    uint64_t v29 = a3[13];
    *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *((unsigned char *)a1 + v29) = *((unsigned char *)a2 + v29);
  }
  return a1;
}

uint64_t destroy for StoredPhotoLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259309300();
  uint64_t v10 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v6, 1, v4);
    if (!result)
    {
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      return v9(v6, v4);
    }
  }
  return result;
}

char *initializeWithCopy for StoredPhotoLayout(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_259309300();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v29 = v7;
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    if (v8(v12, 1, v6))
    {
      memcpy(v11, v12, *(void *)(v14 + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v11, v12, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v11, 0, 1, v6);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v21];
  uint64_t v24 = &a2[v21];
  long long v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *(void *)&a1[v22] = *(void *)&a2[v22];
  uint64_t v26 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v26] = *(void *)&a2[v26];
  uint64_t v27 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  a1[v27] = a2[v27];
  return a1;
}

char *assignWithCopy for StoredPhotoLayout(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_259309300();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  uint64_t v30 = v7;
  uint64_t v32 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v31 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  int v17 = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  if (!v17)
  {
    if (!v18)
    {
      int v21 = v32(v13, 1, v6);
      int v22 = v32(v14, 1, v6);
      if (v21)
      {
        if (!v22)
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v13, v14, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v13, 0, 1, v6);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v22)
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v13, v14, v6);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v6);
      }
      size_t v20 = *(void *)(v31 + 64);
      goto LABEL_14;
    }
    sub_259296C4C((uint64_t)v13, type metadata accessor for StoredPhotoLayout.ImageLocation);
LABEL_13:
    size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8) - 8) + 64);
LABEL_14:
    memcpy(v13, v14, v20);
    goto LABEL_21;
  }
  if (v18) {
    goto LABEL_13;
  }
  if (v32(v14, 1, v6))
  {
    uint64_t v19 = v31;
    memcpy(v13, v14, *(void *)(v31 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v13, v14, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v13, 0, 1, v6);
    uint64_t v19 = v31;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v15);
LABEL_21:
  uint64_t v23 = a3[6];
  uint64_t v24 = &a1[v23];
  long long v25 = &a2[v23];
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + 1) = *((void *)v25 + 1);
  *((void *)v24 + 2) = *((void *)v25 + 2);
  *((void *)v24 + 3) = *((void *)v25 + 3);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v26 = a3[8];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  *((void *)v27 + 2) = *((void *)v28 + 2);
  *((void *)v27 + 3) = *((void *)v28 + 3);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  a1[a3[13]] = a2[a3[13]];
  return a1;
}

char *initializeWithTake for StoredPhotoLayout(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_259309300();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v29 = v7;
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    if (v8(v12, 1, v6))
    {
      memcpy(v11, v12, *(void *)(v14 + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v11, v12, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v11, 0, 1, v6);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  int v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)int v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v21];
  uint64_t v24 = &a2[v21];
  long long v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *(void *)&a1[v22] = *(void *)&a2[v22];
  uint64_t v26 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v26] = *(void *)&a2[v26];
  uint64_t v27 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  a1[v27] = a2[v27];
  return a1;
}

char *assignWithTake for StoredPhotoLayout(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_259309300();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  uint64_t v36 = v7;
  int64_t v38 = v8;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v37 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  int v17 = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  if (!v17)
  {
    if (!v18)
    {
      int v21 = v38(v13, 1, v6);
      int v22 = v38(v14, 1, v6);
      if (v21)
      {
        if (!v22)
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v13, v14, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v13, 0, 1, v6);
          goto LABEL_21;
        }
      }
      else
      {
        if (!v22)
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v13, v14, v6);
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v6);
      }
      size_t v20 = *(void *)(v37 + 64);
      goto LABEL_14;
    }
    sub_259296C4C((uint64_t)v13, type metadata accessor for StoredPhotoLayout.ImageLocation);
LABEL_13:
    size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8) - 8) + 64);
LABEL_14:
    memcpy(v13, v14, v20);
    goto LABEL_21;
  }
  if (v18) {
    goto LABEL_13;
  }
  if (v38(v14, 1, v6))
  {
    uint64_t v19 = v37;
    memcpy(v13, v14, *(void *)(v37 + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v13, v14, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v13, 0, 1, v6);
    uint64_t v19 = v37;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v15);
LABEL_21:
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  long long v25 = &a1[v23];
  uint64_t v26 = &a2[v23];
  long long v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)long long v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  *(void *)&a1[v24] = *(void *)&a2[v24];
  uint64_t v28 = a3[8];
  uint64_t v29 = a3[9];
  long long v30 = *(_OWORD *)&a2[v28];
  long long v31 = *(_OWORD *)&a2[v28 + 16];
  uint64_t v32 = &a1[v28];
  *(_OWORD *)uint64_t v32 = v30;
  *((_OWORD *)v32 + 1) = v31;
  *(void *)&a1[v29] = *(void *)&a2[v29];
  uint64_t v33 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v33] = *(void *)&a2[v33];
  uint64_t v34 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  a1[v34] = a2[v34];
  return a1;
}

uint64_t getEnumTagSinglePayload for StoredPhotoLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259298F74);
}

uint64_t sub_259298F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 52));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for StoredPhotoLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2592990B0);
}

uint64_t sub_2592990B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 52)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2592991C4()
{
  type metadata accessor for StoredPhotoLayout.ImageLocation(319);
  if (v0 <= 0x3F)
  {
    sub_2592992B8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_2592992B8()
{
  if (!qword_26A37E7B0)
  {
    type metadata accessor for StoredPhotoLayout.ImageLocation(255);
    unint64_t v0 = sub_25930A240();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A37E7B0);
    }
  }
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for StoredPhotoLayout.Rect(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StoredPhotoLayout.Rect(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for StoredPhotoLayout.Rect()
{
  return &type metadata for StoredPhotoLayout.Rect;
}

uint64_t *initializeBufferWithCopyOfBuffer for StoredPhotoLayout.ImageLocation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_2592994DC(a1, a2, a3, 1);
}

uint64_t destroy for StoredPhotoLayout.ImageLocation(uint64_t a1, uint64_t a2)
{
  return sub_259299634(a1, a2, 1);
}

void *initializeWithCopy for StoredPhotoLayout.ImageLocation(void *a1, const void *a2, uint64_t a3)
{
  return sub_25929971C(a1, a2, a3, 1);
}

void *assignWithCopy for StoredPhotoLayout.ImageLocation(void *a1, void *a2, uint64_t a3)
{
  return sub_259299838(a1, a2, a3, 1);
}

void *initializeWithTake for StoredPhotoLayout.ImageLocation(void *a1, const void *a2, uint64_t a3)
{
  return sub_2592999C0(a1, a2, a3, 1);
}

void *assignWithTake for StoredPhotoLayout.ImageLocation(void *a1, void *a2, uint64_t a3)
{
  return sub_259299ADC(a1, a2, a3, 1);
}

uint64_t getEnumTagSinglePayload for StoredPhotoLayout.ImageLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2592993BC);
}

uint64_t sub_2592993BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259309300();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StoredPhotoLayout.ImageLocation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25929943C);
}

uint64_t sub_25929943C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_259309300();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_2592994BC(uint64_t a1, uint64_t a2)
{
  return sub_259299D7C(a1, a2, 1);
}

uint64_t sub_2592994C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_259299DF0(a1, a2, a3, 1);
}

uint64_t sub_2592994CC()
{
  return sub_259299E74();
}

uint64_t *sub_2592994D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_2592994DC(a1, a2, a3, 2);
}

uint64_t *sub_2592994DC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  int v6 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    uint64_t v8 = *(void *)(a3 - 8);
    uint64_t v9 = sub_259309300();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(a2, a4, v9))
    {
      memcpy(a1, a2, *(void *)(v8 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, a4, v9);
    }
  }
  return a1;
}

uint64_t sub_25929962C(uint64_t a1, uint64_t a2)
{
  return sub_259299634(a1, a2, 2);
}

uint64_t sub_259299634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_259309300();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a3, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(a1, v5);
  }
  return result;
}

void *sub_259299714(void *a1, const void *a2, uint64_t a3)
{
  return sub_25929971C(a1, a2, a3, 2);
}

void *sub_25929971C(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_259309300();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, a4, v8))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, a4, v8);
  }
  return a1;
}

void *sub_259299830(void *a1, void *a2, uint64_t a3)
{
  return sub_259299838(a1, a2, a3, 2);
}

void *sub_259299838(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_259309300();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(a1, a4, v8);
  int v12 = v10(a2, a4, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(a1, a2, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 16))(a1, a2, v8);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, a4, v8);
  return a1;
}

void *sub_2592999B8(void *a1, const void *a2, uint64_t a3)
{
  return sub_2592999C0(a1, a2, a3, 2);
}

void *sub_2592999C0(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_259309300();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, a4, v8))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, a4, v8);
  }
  return a1;
}

void *sub_259299AD4(void *a1, void *a2, uint64_t a3)
{
  return sub_259299ADC(a1, a2, a3, 2);
}

void *sub_259299ADC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_259309300();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(a1, a4, v8);
  int v12 = v10(a2, a4, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(a1, a2, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 32))(a1, a2, v8);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, a4, v8);
  return a1;
}

uint64_t sub_259299C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_259299C70);
}

uint64_t sub_259299C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_259309300();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_259299CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_259299CF0);
}

uint64_t sub_259299CF0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_259309300();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_259299D74(uint64_t a1, uint64_t a2)
{
  return sub_259299D7C(a1, a2, 2);
}

uint64_t sub_259299D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_259309300();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(a1, a3, v5);
}

uint64_t sub_259299DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_259299DF0(a1, a2, a3, 2);
}

uint64_t sub_259299DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_259309300();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  return v8(a1, a2, a4, v7);
}

uint64_t sub_259299E6C()
{
  return sub_259299E74();
}

uint64_t sub_259299E74()
{
  uint64_t result = sub_259309300();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_259299EF0(void *a1)
{
  uint64_t v3 = **(void **)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_259299F40(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_259299FA4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_25929E328(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_259299FC0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_259299FCC(uint64_t a1)
{
  return sub_259296F60(a1);
}

uint64_t sub_259299FE4(uint64_t a1)
{
  return sub_259296E6C(a1);
}

uint64_t sub_259299FFC(uint64_t a1)
{
  return sub_25926BA4C(a1);
}

double sub_25929A014(uint64_t a1)
{
  *(void *)&double result = sub_259296F7C(a1).n128_u64[0];
  return result;
}

uint64_t StoredPhotoLayout.baseFilename(for:)()
{
  uint64_t v1 = sub_259309300();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25929D470(v0, (uint64_t)v7, type metadata accessor for StoredPhotoLayout.ImageLocation);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    type metadata accessor for StoredPhotoLayout(0);
    v10[0] = 0x5F65736162;
    v10[1] = 0xE500000000000000;
    sub_25930A1E0();
    sub_259309C20();
    swift_bridgeObjectRelease();
    sub_259309C20();
    sub_259309440();
    sub_25929D538(&qword_26A37E410, MEMORY[0x263F07508]);
    sub_25930A730();
    sub_259309C20();
    swift_bridgeObjectRelease();
    sub_259309C20();
    return v10[0];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    uint64_t v8 = sub_259309270();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v8;
}

uint64_t StoredPhotoLayout.maskFilename(for:)(uint64_t a1)
{
  v20[1] = a1;
  uint64_t v2 = sub_259309300();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  int v12 = (char *)v20 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StoredPhotoLayout(0);
  sub_25929CC1C(v1 + *(int *)(v16 + 20), (uint64_t)v15);
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6);
  uint64_t v18 = 0;
  if (v17 != 1)
  {
    sub_25929D408((uint64_t)v15, (uint64_t)v12, type metadata accessor for StoredPhotoLayout.ImageLocation);
    sub_25929D470((uint64_t)v12, (uint64_t)v9, type metadata accessor for StoredPhotoLayout.ImageLocation);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
    {
      uint64_t v21 = 0x5F6B73616DLL;
      unint64_t v22 = 0xE500000000000000;
      sub_25930A1E0();
      sub_259309C20();
      swift_bridgeObjectRelease();
      sub_259309C20();
      sub_259309440();
      sub_25929D538(&qword_26A37E410, MEMORY[0x263F07508]);
      sub_25930A730();
      sub_259309C20();
      swift_bridgeObjectRelease();
      sub_259309C20();
      uint64_t v18 = v21;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
      uint64_t v18 = sub_259309270();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    sub_25929D4D8((uint64_t)v12, type metadata accessor for StoredPhotoLayout.ImageLocation);
  }
  return v18;
}

uint64_t StoredPhoto.writeToDisk(at:)(uint64_t a1)
{
  uint64_t v4 = *(int *)(type metadata accessor for StoredPhoto(0) + 32);
  uint64_t v5 = *(void *)(v1 + v4);
  uint64_t v9 = v1;
  uint64_t v10 = a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_25929D0C4((void (*)(char *))sub_25929CD88, (uint64_t)&v8, v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v1 + v4) = v6;
  }
  return result;
}

uint64_t sub_25929A690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v117 = a3;
  uint64_t v120 = a2;
  uint64_t v110 = a1;
  uint64_t v105 = a4;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v104 = (char *)v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v107 = (uint64_t)v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StoredPhoto(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v94 = (uint64_t)v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v111 = (void *)((char *)v87 - v11);
  uint64_t v116 = sub_259309250();
  uint64_t v123 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  uint64_t v115 = (char *)v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v108 = *(void *)(v13 - 8);
  uint64_t v109 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_259309440();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v101 = (char *)v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v87 - v20;
  uint64_t v22 = sub_259309300();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v93 = (char *)v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v92 = (char *)v87 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v114 = (char *)v87 - v28;
  MEMORY[0x270FA5388](v29);
  long long v31 = (char *)v87 - v30;
  MEMORY[0x270FA5388](v32);
  uint64_t v119 = (char *)v87 - v33;
  uint64_t v34 = type metadata accessor for StoredPhotoLayout(0);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)v87 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25929D470(v110, (uint64_t)v36, type metadata accessor for StoredPhotoLayout);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v98 = v17 + 16;
  uint64_t v97 = v37;
  v37(v21, v120, v16);
  sub_25929D470((uint64_t)v36, (uint64_t)v15, type metadata accessor for StoredPhotoLayout.ImageLocation);
  int64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  uint64_t v100 = v23 + 48;
  uint64_t v99 = v38;
  unsigned int v39 = v38(v15, 1, v22);
  uint64_t v118 = v36;
  uint64_t v113 = v23;
  uint64_t v106 = v34;
  if (v39 == 1)
  {
    static SystemDirectory.baseImageURL(timePosition:uuid:)(*(void *)&v36[*(int *)(v34 + 28)], (uint64_t)v31);
    uint64_t v40 = v22;
    long long v41 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  }
  else
  {
    long long v41 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v41(v31, v15, v22);
    uint64_t v40 = v22;
  }
  uint64_t v42 = (v23 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  uint64_t v43 = v123;
  uint64_t v95 = v41;
  uint64_t v44 = (uint64_t)v119;
  uint64_t v110 = v40;
  uint64_t v91 = v42;
  ((void (*)(char *, char *))v41)(v119, v31);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  uint64_t v102 = v17 + 8;
  uint64_t v96 = v45;
  v45((uint64_t)v21, v16);
  uint64_t v121 = sub_259309270();
  uint64_t v122 = v46;
  LODWORD(v46) = *MEMORY[0x263F06E50];
  uint64_t v48 = v43 + 104;
  uint64_t v47 = *(void (**)(char *))(v43 + 104);
  uint64_t v103 = v16;
  uint64_t v49 = v115;
  unsigned int v90 = v46;
  uint64_t v50 = v116;
  v47(v115);
  unint64_t v51 = sub_25921DB48();
  uint64_t v52 = (uint64_t)v114;
  sub_2593092F0();
  uint64_t v53 = *(void (**)(void, void))(v123 + 8);
  v123 += 8;
  uint64_t v54 = v49;
  uint64_t v55 = v53;
  v53(v54, v50);
  swift_bridgeObjectRelease();
  uint64_t v56 = (void (*)(void, void, void, void))v111;
  sub_25929D470(v120, (uint64_t)v111, type metadata accessor for StoredPhoto);
  uint64_t v57 = v112;
  sub_25929B358(v44, v52);
  if (v57)
  {
    sub_25929D4D8((uint64_t)v56, type metadata accessor for StoredPhoto);
    unint64_t v58 = *(void (**)(uint64_t, uint64_t))(v113 + 8);
    uint64_t v59 = v110;
    v58(v52, v110);
    v58(v44, v59);
    uint64_t v60 = (uint64_t)v118;
    return sub_25929D4D8(v60, type metadata accessor for StoredPhotoLayout);
  }
  v87[0] = v55;
  v87[1] = v51;
  uint64_t v88 = v47;
  uint64_t v89 = v48;
  uint64_t v112 = 0;
  sub_25929D4D8((uint64_t)v56, type metadata accessor for StoredPhoto);
  uint64_t v62 = (uint64_t)v118;
  sub_25929D4D8((uint64_t)v118, type metadata accessor for StoredPhotoLayout.ImageLocation);
  uint64_t v63 = v113;
  uint64_t v64 = v110;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16))(v62, v52, v110);
  unsigned int v65 = *(void **)(v63 + 56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v65)(v62, 0, 1, v64);
  uint64_t v66 = v107;
  uint64_t v67 = v62 + *(int *)(v106 + 20);
  sub_25929CC1C(v67, v107);
  int v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v108 + 48))(v66, 1, v109);
  sub_25924A3A8(v66, &qword_26A37DFC8);
  if (v68 == 1)
  {
    uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
    v69(v52, v64);
    v69((uint64_t)v119, v64);
  }
  else
  {
    uint64_t v107 = v67;
    uint64_t v111 = v65;
    uint64_t v70 = v64;
    uint64_t v71 = (uint64_t)v101;
    uint64_t v72 = v120;
    uint64_t v73 = v103;
    v97(v101, v120, v103);
    uint64_t v74 = v104;
    StoredPhotoLayout.maskURL(for:)(v71, v104);
    v96(v71, v73);
    if (v99(v74, 1, v70) == 1)
    {
      uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
      v75(v52, v70);
      v75((uint64_t)v119, v70);
      sub_25924A3A8((uint64_t)v74, &qword_26B2F32C8);
    }
    else
    {
      uint64_t v106 = v63 + 56;
      uint64_t v76 = (uint64_t)v92;
      v95(v92, v74, v70);
      uint64_t v121 = sub_259309270();
      uint64_t v122 = v77;
      CGRect v79 = v115;
      uint64_t v78 = v116;
      ((void (*)(char *, void, uint64_t))v88)(v115, v90, v116);
      uint64_t v80 = (uint64_t)v93;
      sub_2593092F0();
      ((void (*)(char *, uint64_t))v87[0])(v79, v78);
      swift_bridgeObjectRelease();
      uint64_t v81 = v94;
      sub_25929D470(v72, v94, type metadata accessor for StoredPhoto);
      uint64_t v82 = v112;
      sub_25929B358(v76, v80);
      uint64_t v112 = v82;
      if (v82)
      {
        sub_25929D4D8(v81, type metadata accessor for StoredPhoto);
        uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
        v83(v80, v70);
        v83(v76, v70);
        v83((uint64_t)v114, v70);
        v83((uint64_t)v119, v70);
        uint64_t v60 = (uint64_t)v118;
        return sub_25929D4D8(v60, type metadata accessor for StoredPhotoLayout);
      }
      sub_25929D4D8(v81, type metadata accessor for StoredPhoto);
      uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
      v84(v76, v70);
      v84((uint64_t)v114, v70);
      v84((uint64_t)v119, v70);
      uint64_t v85 = v107;
      sub_25924A3A8(v107, &qword_26A37DFC8);
      v95((char *)v85, (char *)v80, v70);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v111)(v85, 0, 1, v70);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v108 + 56))(v85, 0, 1, v109);
    }
  }
  uint64_t v86 = (uint64_t)v118;
  sub_25929D470((uint64_t)v118, v105, type metadata accessor for StoredPhotoLayout);
  return sub_25929D4D8(v86, type metadata accessor for StoredPhotoLayout);
}

uint64_t StoredPhotoLayout.baseURL(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25929D470(v1, (uint64_t)v5, type metadata accessor for StoredPhotoLayout.ImageLocation);
  uint64_t v6 = sub_259309300();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
  }
  uint64_t v8 = type metadata accessor for StoredPhotoLayout(0);
  return static SystemDirectory.baseImageURL(timePosition:uuid:)(*(void *)(v1 + *(int *)(v8 + 28)), a1);
}

uint64_t sub_25929B358(uint64_t a1, uint64_t a2)
{
  v41[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = sub_259309300();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v39 = a1;
  uint64_t result = MEMORY[0x25A2D9B20](a1, a2, v10);
  if ((result & 1) == 0)
  {
    if (qword_26B2F3B60 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_259309860();
    __swift_project_value_buffer(v14, (uint64_t)qword_26B2F32A0);
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v15(v12, v39, v5);
    uint64_t v38 = a2;
    v15(v8, a2, v5);
    uint64_t v16 = sub_259309840();
    os_log_type_t v17 = sub_25930A1D0();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v37 = v2;
      uint64_t v20 = v19;
      uint64_t v36 = (void *)swift_slowAlloc();
      v41[0] = v36;
      *(_DWORD *)uint64_t v20 = 136315394;
      sub_25929D538((unint64_t *)&qword_26B2F32C0, MEMORY[0x263F06EA8]);
      int v35 = v18;
      os_log_t v34 = v16;
      uint64_t v21 = sub_25930A730();
      uint64_t v40 = sub_25924FC14(v21, v22, (uint64_t *)v41);
      sub_25930A2A0();
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v6 + 8);
      v23(v12, v5);
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v24 = sub_25930A730();
      uint64_t v40 = sub_25924FC14(v24, v25, (uint64_t *)v41);
      sub_25930A2A0();
      swift_bridgeObjectRelease();
      v23(v8, v5);
      uint64_t v16 = v34;
      _os_log_impl(&dword_25921A000, v34, (os_log_type_t)v35, "Copying cache item from %s to %s", (uint8_t *)v20, 0x16u);
      uint64_t v26 = v36;
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v26, -1, -1);
      MEMORY[0x25A2DBAF0](v20, -1, -1);
    }
    else
    {
      uint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
      v27(v12, v5);
      v27(v8, v5);
    }

    id v28 = objc_msgSend(self, sel_defaultManager);
    uint64_t v29 = (void *)sub_259309280();
    uint64_t v30 = (void *)sub_259309280();
    v41[0] = 0;
    unsigned int v31 = objc_msgSend(v28, sel_copyItemAtURL_toURL_error_, v29, v30, v41);

    if (v31)
    {
      return (uint64_t)v41[0];
    }
    else
    {
      id v32 = v41[0];
      sub_259309240();

      return swift_willThrow();
    }
  }
  return result;
}

uint64_t StoredPhotoLayout.maskURL(for:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v54 = a2;
  uint64_t v3 = sub_259309250();
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v49 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_259309300();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v47 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v48 = (char *)v40 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v53 = (char *)v40 - v11;
  uint64_t v12 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  int v18 = (char *)v40 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for StoredPhotoLayout(0);
  uint64_t v23 = *(int *)(v22 + 20);
  uint64_t v46 = v2;
  sub_25929CC1C(v2 + v23, (uint64_t)v21);
  uint64_t v24 = 1;
  uint64_t v25 = v12;
  uint64_t v26 = v5;
  uint64_t v27 = v6;
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v21, 1, v25);
  uint64_t v29 = v54;
  if (v28 != 1)
  {
    sub_25929D408((uint64_t)v21, (uint64_t)v18, type metadata accessor for StoredPhotoLayout.ImageLocation);
    sub_25929D470((uint64_t)v18, (uint64_t)v15, type metadata accessor for StoredPhotoLayout.ImageLocation);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v26) == 1)
    {
      uint64_t v45 = v18;
      v40[1] = *(void *)(v46 + *(int *)(v22 + 28));
      if (qword_26B2F3790 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v26, (uint64_t)qword_26B2F3778);
      uint64_t v30 = v47;
      sub_259309290();
      uint64_t v55 = sub_2593093F0();
      unint64_t v56 = v31;
      unsigned int v44 = *MEMORY[0x263F06E50];
      uint64_t v46 = v26;
      uint64_t v33 = v49;
      uint64_t v32 = v50;
      uint64_t v43 = *(void (**)(char *))(v50 + 104);
      uint64_t v34 = v51;
      v43(v49);
      unint64_t v42 = sub_25921DB48();
      int v35 = v48;
      sub_2593092F0();
      uint64_t v50 = *(void *)(v32 + 8);
      ((void (*)(char *, uint64_t))v50)(v33, v34);
      swift_bridgeObjectRelease();
      long long v41 = *(void (**)(char *, uint64_t))(v27 + 8);
      v41(v30, v46);
      uint64_t v55 = 0x5F6B73616DLL;
      unint64_t v56 = 0xE500000000000000;
      sub_25930A1E0();
      sub_259309C20();
      swift_bridgeObjectRelease();
      sub_259309C20();
      sub_259309440();
      sub_25929D538(&qword_26A37E410, MEMORY[0x263F07508]);
      sub_25930A730();
      sub_259309C20();
      swift_bridgeObjectRelease();
      sub_259309C20();
      ((void (*)(char *, void, uint64_t))v43)(v33, v44, v34);
      uint64_t v36 = v53;
      sub_2593092F0();
      ((void (*)(char *, uint64_t))v50)(v33, v34);
      uint64_t v26 = v46;
      swift_bridgeObjectRelease();
      v41(v35, v26);
      int v18 = v45;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v36, v26);
    }
    else
    {
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      uint64_t v38 = v53;
      v37(v53, v15, v26);
      v37(v29, v38, v26);
    }
    sub_25929D4D8((uint64_t)v18, type metadata accessor for StoredPhotoLayout.ImageLocation);
    uint64_t v24 = 0;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v29, v24, 1, v26);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> StoredPhoto.writeToCache()()
{
  uint64_t v2 = *(int *)(type metadata accessor for StoredPhoto(0) + 32);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_25929CDA4(v3, v0);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(void *)(v0 + v2) = v4;
  }
}

uint64_t sub_25929BE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v118 = a2;
  uint64_t v102 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v101 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v104 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for StoredPhoto(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v98 = (uint64_t)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v108 = (uint64_t)&v91 - v11;
  uint64_t v12 = type metadata accessor for StoredPhotoLayout.ImageLocation(0);
  uint64_t v105 = *(void *)(v12 - 8);
  uint64_t v106 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_259309440();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v110 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (void (*)(char *, char *, uint64_t))((char *)&v91 - v19);
  uint64_t v117 = sub_259309300();
  uint64_t v21 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v96 = (uint64_t)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v97 = (char *)&v91 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v116 = (uint64_t)&v91 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v91 - v28;
  MEMORY[0x270FA5388](v30);
  uint64_t v114 = (char *)&v91 - v31;
  uint64_t v32 = type metadata accessor for StoredPhotoLayout(0);
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v91 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25929D470(a1, (uint64_t)v34, type metadata accessor for StoredPhotoLayout);
  uint64_t v115 = (char *)v16;
  int v35 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v107 = v20;
  uint64_t v111 = v15;
  uint64_t v113 = v16 + 16;
  v35((char *)v20, v118, v15);
  sub_25929D470((uint64_t)v34, (uint64_t)v14, type metadata accessor for StoredPhotoLayout.ImageLocation);
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v37 = v14;
  uint64_t v38 = v14;
  uint64_t v39 = v117;
  unsigned int v40 = v36(v38, 1, v117);
  uint64_t v112 = v21;
  uint64_t v99 = v36;
  uint64_t v100 = v21 + 48;
  if (v40 == 1)
  {
    long long v41 = v107;
    static SystemDirectory.baseImageURL(timePosition:uuid:)(*(void *)&v34[*(int *)(v32 + 28)], (uint64_t)v29);
    unint64_t v42 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    uint64_t v43 = (v21 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    uint64_t v44 = v39;
    uint64_t v45 = (uint64_t)v114;
  }
  else
  {
    unint64_t v42 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v42(v29, v37, v39);
    uint64_t v43 = (v21 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    uint64_t v44 = v39;
    uint64_t v45 = (uint64_t)v114;
    long long v41 = v107;
  }
  uint64_t v107 = v42;
  uint64_t v103 = v32;
  uint64_t v95 = v43;
  v42((char *)v45, v29, v44);
  uint64_t v46 = (void (*)(uint64_t, uint64_t))*((void *)v115 + 1);
  uint64_t v47 = v41;
  uint64_t v48 = v111;
  v46((uint64_t)v47, v111);
  uint64_t v49 = *(int *)(v32 + 28);
  uint64_t v115 = v34;
  uint64_t v94 = v49;
  uint64_t v50 = *(void *)&v34[v49];
  uint64_t v51 = v110;
  uint64_t v52 = v118;
  uint64_t v53 = v35;
  v35(v110, v118, v48);
  uint64_t v54 = v116;
  static SystemDirectory.baseImageURL(timePosition:uuid:)(v50, v116);
  v46((uint64_t)v51, v48);
  uint64_t v55 = v52;
  uint64_t v56 = v108;
  sub_25929D470(v55, v108, type metadata accessor for StoredPhoto);
  uint64_t v57 = v109;
  sub_25929B358(v45, v54);
  uint64_t v109 = v57;
  if (!v57)
  {
    uint64_t v93 = v46;
    uint64_t v92 = (void (*)(uint64_t, uint64_t, uint64_t))v53;
    sub_25929D4D8(v56, type metadata accessor for StoredPhoto);
    uint64_t v61 = (uint64_t)v115;
    sub_25929D4D8((uint64_t)v115, type metadata accessor for StoredPhotoLayout.ImageLocation);
    uint64_t v62 = v112;
    uint64_t v63 = v112 + 56;
    uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v112 + 56);
    uint64_t v65 = v117;
    v64(v61, 1, 1, v117);
    uint64_t v66 = v104;
    uint64_t v67 = v61 + *(int *)(v103 + 20);
    sub_25929CC1C(v67, (uint64_t)v104);
    int v68 = (*(uint64_t (**)(void (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v105 + 48))(v66, 1, v106);
    sub_25924A3A8((uint64_t)v66, &qword_26A37DFC8);
    if (v68 == 1)
    {
      uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
      v69(v116, v65);
      v69((uint64_t)v114, v65);
    }
    else
    {
      uint64_t v103 = v67;
      uint64_t v104 = v64;
      uint64_t v108 = v63;
      uint64_t v70 = (uint64_t)v110;
      uint64_t v71 = v111;
      uint64_t v72 = v118;
      uint64_t v73 = v92;
      v92((uint64_t)v110, v118, v111);
      uint64_t v74 = v101;
      StoredPhotoLayout.maskURL(for:)(v70, v101);
      v93(v70, v71);
      if (v99(v74, 1, v65) == 1)
      {
        uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
        v75(v116, v65);
        v75((uint64_t)v114, v65);
        sub_25924A3A8((uint64_t)v74, &qword_26B2F32C8);
      }
      else
      {
        uint64_t v76 = v73;
        uint64_t v77 = v71;
        uint64_t v78 = (uint64_t)v97;
        v107(v97, v74, v65);
        uint64_t v79 = v72;
        uint64_t v80 = *(void *)(v61 + v94);
        v76(v70, v79, v77);
        uint64_t v81 = v96;
        static SystemDirectory.maskImageURL(timePosition:uuid:)(v80, v96);
        v93(v70, v77);
        uint64_t v82 = v98;
        sub_25929D470(v79, v98, type metadata accessor for StoredPhoto);
        uint64_t v83 = v109;
        sub_25929B358(v78, v81);
        uint64_t v109 = v83;
        if (v83)
        {
          sub_25929D4D8(v82, type metadata accessor for StoredPhoto);
          uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
          uint64_t v85 = v117;
          v84(v81, v117);
          v84(v78, v85);
          v84(v116, v85);
          v84((uint64_t)v114, v85);
          goto LABEL_6;
        }
        sub_25929D4D8(v82, type metadata accessor for StoredPhoto);
        uint64_t v86 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
        uint64_t v87 = v117;
        v86(v81, v117);
        v86(v78, v87);
        v86(v116, v87);
        v86((uint64_t)v114, v87);
        uint64_t v88 = v103;
        sub_25924A3A8(v103, &qword_26A37DFC8);
        v104(v88, 1, 1, v87);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v105 + 56))(v88, 0, 1, v106);
      }
    }
    uint64_t v89 = (uint64_t)v115;
    sub_25929D470((uint64_t)v115, v102, type metadata accessor for StoredPhotoLayout);
    uint64_t v60 = v89;
    return sub_25929D4D8(v60, type metadata accessor for StoredPhotoLayout);
  }
  sub_25929D4D8(v56, type metadata accessor for StoredPhoto);
  unint64_t v58 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
  uint64_t v59 = v117;
  v58(v54, v117);
  v58(v45, v59);
LABEL_6:
  uint64_t v60 = (uint64_t)v115;
  return sub_25929D4D8(v60, type metadata accessor for StoredPhotoLayout);
}

uint64_t static SystemDirectory.baseImageURL(timePosition:uuid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25929C874(a1, 0x5F65736162, 0x636965682ELL, 0xE500000000000000, a2);
}

uint64_t static SystemDirectory.maskImageURL(timePosition:uuid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25929C874(a1, 0x5F6B73616DLL, 1735290926, 0xE400000000000000, a2);
}

uint64_t sub_25929C874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v23 = a2;
  uint64_t v24 = a1;
  uint64_t v27 = a5;
  uint64_t v5 = sub_259309250();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_259309300();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v18 - v14;
  if (qword_26B2F3790 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v9, (uint64_t)qword_26B2F3778);
  sub_259309290();
  uint64_t v28 = sub_2593093F0();
  unint64_t v29 = v16;
  unsigned int v22 = *MEMORY[0x263F06E50];
  uint64_t v21 = *(void (**)(char *))(v6 + 104);
  v21(v8);
  unint64_t v20 = sub_25921DB48();
  sub_2593092F0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v12, v9);
  uint64_t v28 = v23;
  unint64_t v29 = 0xE500000000000000;
  sub_25930A1E0();
  sub_259309C20();
  swift_bridgeObjectRelease();
  sub_259309C20();
  sub_259309440();
  sub_25929D538(&qword_26A37E410, MEMORY[0x263F07508]);
  sub_25930A730();
  sub_259309C20();
  swift_bridgeObjectRelease();
  sub_259309C20();
  ((void (*)(char *, void, uint64_t))v21)(v8, v22, v5);
  sub_2593092F0();
  v19(v8, v5);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v9);
}

uint64_t static SystemDirectory.baseImageFilename(timePosition:uuid:)(uint64_t a1, uint64_t a2)
{
  return sub_25929CCA0(a1, a2, 0x5F65736162);
}

uint64_t sub_25929CC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37DFC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static SystemDirectory.maskImageFilename(timePosition:uuid:)(uint64_t a1, uint64_t a2)
{
  return sub_25929CCA0(a1, a2, 0x5F6B73616DLL);
}

uint64_t sub_25929CCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_25929CD88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25929A690(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_25929CDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v4 = type metadata accessor for StoredPhotoLayout(0);
  uint64_t v32 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v31 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_26A37C9A8);
  uint64_t result = sub_25930A5F0();
  uint64_t v10 = (void *)result;
  int64_t v11 = 0;
  uint64_t v33 = a1;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v13 = a1 + 64;
  uint64_t v12 = v14;
  uint64_t v15 = 1 << *(unsigned char *)(v13 - 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v12;
  uint64_t v28 = v13;
  int64_t v29 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v30 = result + 64;
  uint64_t v18 = (uint64_t)v31;
  if ((v16 & v12) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v11 << 6))
  {
    uint64_t v24 = *(void *)(*(void *)(v33 + 48) + 8 * i);
    unint64_t v25 = *(void *)(v32 + 72) * i;
    sub_25929D470(*(void *)(v33 + 56) + v25, (uint64_t)v8, type metadata accessor for StoredPhotoLayout);
    sub_25929BE1C((uint64_t)v8, v34, v18);
    if (v2)
    {
      swift_release();
      sub_25929D4D8((uint64_t)v8, type metadata accessor for StoredPhotoLayout);
      return (uint64_t)v10;
    }
    sub_25929D4D8((uint64_t)v8, type metadata accessor for StoredPhotoLayout);
    *(void *)(v30 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v10[6] + 8 * i) = v24;
    uint64_t result = sub_25929D408(v18, v10[7] + v25, type metadata accessor for StoredPhotoLayout);
    uint64_t v26 = v10[2];
    BOOL v21 = __OFADD__(v26, 1);
    uint64_t v27 = v26 + 1;
    if (v21)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    void v10[2] = v27;
    if (v17) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v21 = __OFADD__(v11++, 1);
    if (v21) {
      goto LABEL_27;
    }
    if (v11 >= v29) {
      return (uint64_t)v10;
    }
    unint64_t v22 = *(void *)(v28 + 8 * v11);
    if (!v22) {
      break;
    }
LABEL_15:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v11 + 1;
  if (v11 + 1 >= v29) {
    return (uint64_t)v10;
  }
  unint64_t v22 = *(void *)(v28 + 8 * v23);
  if (v22) {
    goto LABEL_14;
  }
  int64_t v23 = v11 + 2;
  if (v11 + 2 >= v29) {
    return (uint64_t)v10;
  }
  unint64_t v22 = *(void *)(v28 + 8 * v23);
  if (v22) {
    goto LABEL_14;
  }
  int64_t v23 = v11 + 3;
  if (v11 + 3 >= v29) {
    return (uint64_t)v10;
  }
  unint64_t v22 = *(void *)(v28 + 8 * v23);
  if (v22)
  {
LABEL_14:
    int64_t v11 = v23;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v29) {
      return (uint64_t)v10;
    }
    unint64_t v22 = *(void *)(v28 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_25929D0C4(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v6 = type metadata accessor for StoredPhotoLayout(0);
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int64_t v11 = (char *)&v32 - v10;
  __swift_instantiateConcreteTypeFromMangledName(qword_26A37C9A8);
  uint64_t result = sub_25930A5F0();
  int64_t v13 = 0;
  uint64_t v39 = a3;
  uint64_t v16 = *(void *)(a3 + 64);
  uint64_t v15 = a3 + 64;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v14;
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v40 = result;
  uint64_t v35 = result + 64;
  if ((v18 & v14) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v20 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v13 << 6))
  {
    uint64_t v25 = *(void *)(*(void *)(v39 + 48) + 8 * i);
    unint64_t v26 = *(void *)(v36 + 72) * i;
    sub_25929D470(*(void *)(v39 + 56) + v26, (uint64_t)v11, type metadata accessor for StoredPhotoLayout);
    v37(v11);
    if (v4)
    {
      uint64_t v31 = v40;
      swift_release();
      sub_25929D4D8((uint64_t)v11, type metadata accessor for StoredPhotoLayout);
      return v31;
    }
    uint64_t v27 = v11;
    sub_25929D4D8((uint64_t)v11, type metadata accessor for StoredPhotoLayout);
    *(void *)(v35 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v28 = v40;
    *(void *)(*(void *)(v40 + 48) + 8 * i) = v25;
    uint64_t result = sub_25929D408((uint64_t)v8, *(void *)(v28 + 56) + v26, type metadata accessor for StoredPhotoLayout);
    uint64_t v29 = *(void *)(v28 + 16);
    BOOL v22 = __OFADD__(v29, 1);
    uint64_t v30 = v29 + 1;
    if (v22) {
      break;
    }
    *(void *)(v28 + 16) = v30;
    int64_t v11 = v27;
    uint64_t v4 = 0;
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v22 = __OFADD__(v13++, 1);
    if (v22) {
      goto LABEL_28;
    }
    if (v13 >= v34) {
      return v40;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v13);
    if (!v23)
    {
      int64_t v24 = v13 + 1;
      if (v13 + 1 >= v34) {
        return v40;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v24 = v13 + 2;
      if (v13 + 2 >= v34) {
        return v40;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23)
      {
LABEL_14:
        int64_t v13 = v24;
        goto LABEL_15;
      }
      int64_t v24 = v13 + 3;
      if (v13 + 3 < v34)
      {
        unint64_t v23 = *(void *)(v33 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_29;
            }
            if (v13 >= v34) {
              return v40;
            }
            unint64_t v23 = *(void *)(v33 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_15;
            }
          }
        }
        goto LABEL_14;
      }
      return v40;
    }
LABEL_15:
    unint64_t v19 = (v23 - 1) & v23;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_25929D408(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25929D470(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25929D4D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25929D538(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25929D580()
{
  return sub_25930A220();
}

id CommunicationActor.queue.getter()
{
  return *(id *)(v0 + 16);
}

id sub_25929D5AC()
{
  type metadata accessor for CommunicationActor();
  uint64_t v0 = swift_allocObject();
  if (qword_26B2F3920 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_26B2F3918;
  *(void *)(v0 + 16) = qword_26B2F3918;
  off_26B2F3928 = (_UNKNOWN *)v0;
  return v1;
}

uint64_t static CommunicationActor.shared.getter()
{
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_25929D68C()
{
  uint64_t v0 = sub_25930A1F0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25930A200();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_2593099D0();
  MEMORY[0x270FA5388](v5 - 8);
  sub_25929DCD4();
  sub_2593099C0();
  v7[1] = MEMORY[0x263F8EE78];
  sub_25929DD14(&qword_26B2F3D58, 255, MEMORY[0x263F8F198]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F3D48);
  sub_25929DD5C();
  sub_25930A330();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F138], v0);
  uint64_t result = sub_25930A210();
  qword_26B2F3918 = result;
  return result;
}

id static CommunicationActor.sharedQueue.getter()
{
  if (qword_26B2F3920 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B2F3918;
  return v0;
}

uint64_t static CommunicationActor.assumeOnQueue<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_2593099E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  int64_t v11 = (void *)*((void *)off_26B2F3928 + 2);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F0E0], v7);
  id v12 = v11;
  LOBYTE(v11) = sub_2593099F0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a3;
  v14[3] = a1;
  v14[4] = a2;
  swift_retain();
  sub_25929DB18();
  swift_release();
  if (v3) {
    return swift_release();
  }
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_25929DB08()
{
  return swift_deallocObject();
}

uint64_t sub_25929DB18()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t CommunicationActor.deinit()
{
  return v0;
}

uint64_t CommunicationActor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_25929DB98(uint64_t a1, uint64_t a2)
{
  return sub_25929DD14((unint64_t *)&qword_26B2F3938, a2, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
}

uint64_t type metadata accessor for CommunicationActor()
{
  return self;
}

uint64_t sub_25929DC04()
{
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_25929DC60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for CommunicationActor();
  return MEMORY[0x270FA2150](v3, a2);
}

uint64_t method lookup function for CommunicationActor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CommunicationActor);
}

uint64_t dispatch thunk of CommunicationActor.unownedExecutor.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

unint64_t sub_25929DCD4()
{
  unint64_t result = qword_26B2F3D60;
  if (!qword_26B2F3D60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B2F3D60);
  }
  return result;
}

uint64_t sub_25929DD14(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25929DD5C()
{
  unint64_t result = qword_26B2F3D50;
  if (!qword_26B2F3D50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B2F3D50);
  }
  return result;
}

void LazyData.write(to:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_259299FA4(v2, &v4);
  os_unfair_lock_unlock(v3);
}

uint64_t LazyData.__allocating_init(filename:isTempFile:)(uint64_t a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_259309300();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  swift_allocObject();
  uint64_t v9 = sub_25929F2B4(0, 0xF000000000000000, (uint64_t)v6, a2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

void LazyData.getData()()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (uint64_t *)(v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_25929E078(v2, &v4);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_25929E078@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  if (v9 >> 60 != 15)
  {
    uint64_t v16 = *a1;
    unint64_t v17 = a1[1];
LABEL_7:
    *a2 = v16;
    a2[1] = v17;
    return sub_259277D68(v8, v9);
  }
  BOOL v21 = a2;
  uint64_t v10 = type metadata accessor for LazyDataState();
  sub_2592A01D0((uint64_t)a1 + *(int *)(v10 + 20), (uint64_t)v7);
  uint64_t v11 = sub_259309300();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
  if (result != 1)
  {
    uint64_t v14 = sub_259309320();
    if (v2) {
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v7, v11);
    }
    uint64_t v16 = v14;
    unint64_t v17 = v15;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
    uint64_t v18 = *a1;
    unint64_t v19 = a1[1];
    sub_259261DE0(v16, v17);
    sub_259277DC4(v18, v19);
    *a1 = v16;
    a1[1] = v17;
    a2 = v21;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t LazyData.__allocating_init(data:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_259309300();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_allocObject();
  uint64_t v8 = sub_25929F2B4(a1, a2, (uint64_t)v6, 0);
  sub_259261F50(a1, a2);
  return v8;
}

void sub_25929E328(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v52 = a4;
  v54[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v8 = *a3;
  uint64_t v48 = a3;
  uint64_t v51 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v50 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int64_t v13 = (char *)&v46 - v12;
  uint64_t v14 = sub_259309300();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v49 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v46 - v18;
  id v20 = objc_msgSend(self, sel_defaultManager);
  id v53 = a2;
  BOOL v21 = (void *)sub_259309280();
  v54[0] = 0;
  BOOL v22 = v20;
  LODWORD(v20) = objc_msgSend(v20, sel_removeItemAtURL_error_, v21, v54);

  if (v20)
  {
    id v23 = v54[0];
  }
  else
  {
    id v24 = v54[0];
    uint64_t v25 = (void *)sub_259309240();

    swift_willThrow();
    uint64_t v5 = 0;
  }
  uint64_t v26 = type metadata accessor for LazyDataState();
  sub_2592A01D0(a1 + *(int *)(v26 + 20), (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_259267438((uint64_t)v13);
    unint64_t v27 = *(void *)(a1 + 8);
    if (v27 >> 60 != 15)
    {
      uint64_t v28 = *(void *)a1;
      sub_259261DE0(*(void *)a1, *(void *)(a1 + 8));
      id v29 = v53;
      sub_259309360();
      sub_259277DC4(v28, v27);
      if (v5)
      {

        return;
      }
      uint64_t v47 = 0;
      goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    uint64_t v47 = v5;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v13, v14);
    uint64_t v30 = *(int *)(v26 + 24);
    int v31 = *(unsigned __int8 *)(a1 + v30);
    uint64_t v32 = (void *)sub_259309280();
    uint64_t v33 = (void *)sub_259309280();
    if (v31 == 1)
    {
      id v53 = v22;
      v54[0] = 0;
      unsigned int v34 = objc_msgSend(v22, sel_moveItemAtURL_toURL_error_, v32, v33, v54);

      if (v34)
      {
        uint64_t v35 = *(void (**)(char *, uint64_t))(v15 + 8);
        id v36 = v54[0];
        v35(v19, v14);

        *(unsigned char *)(a1 + v30) = 0;
        *uint64_t v52 = (uint64_t)v48;
        swift_retain();
        return;
      }
      id v44 = v54[0];
      sub_259309240();

      swift_willThrow();
    }
    else
    {
      v54[0] = 0;
      unsigned int v37 = objc_msgSend(v22, sel_copyItemAtURL_toURL_error_, v32, v33, v54);

      if (v37)
      {
        uint64_t v38 = *(void (**)(char *, uint64_t))(v15 + 8);
        id v39 = v54[0];
        v38(v19, v14);
        id v29 = v53;
LABEL_14:
        uint64_t v40 = *(void (**)(char *, id, uint64_t))(v15 + 16);
        long long v41 = v49;
        v40(v49, v29, v14);
        uint64_t v42 = (uint64_t)v50;
        v40(v50, v41, v14);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v42, 0, 1, v14);
        swift_allocObject();
        uint64_t v43 = sub_25929F2B4(0, 0xF000000000000000, v42, 0);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v41, v14);

        *uint64_t v52 = v43;
        return;
      }
      id v45 = v54[0];
      sub_259309240();

      swift_willThrow();
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
  }
}

uint64_t LazyData.isNormalFile.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_25929E900(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_25929E900@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LazyDataState();
  sub_2592A01D0(a1 + *(int *)(v7 + 20), (uint64_t)v6);
  uint64_t v8 = sub_259309300();
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8);
  uint64_t result = sub_259267438((uint64_t)v6);
  if (v9 == 1) {
    char v11 = 0;
  }
  else {
    char v11 = *(unsigned char *)(a1 + *(int *)(v7 + 24)) ^ 1;
  }
  *a2 = v11 & 1;
  return result;
}

void LazyData.filename.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_25929EAC4(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_25929EAC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LazyDataState();
  if (*(unsigned char *)(a1 + *(int *)(v4 + 24)) != 1) {
    return sub_2592A01D0(a1 + *(int *)(v4 + 20), a2);
  }
  uint64_t v5 = sub_259309300();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 1, 1, v5);
}

BOOL LazyData.isEmpty.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_25929EC08(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_25929EC08@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  unint64_t v3 = *(void *)(result + 8);
  if (v3 >> 60 == 15)
  {
    BOOL v4 = 0;
  }
  else
  {
    uint64_t result = *(void *)result;
    switch(v3 >> 62)
    {
      case 1uLL:
        uint64_t v5 = (int)result;
        uint64_t v6 = result >> 32;
        break;
      case 2uLL:
        uint64_t v5 = *(void *)(result + 16);
        uint64_t v6 = *(void *)(result + 24);
        break;
      case 3uLL:
        uint64_t result = sub_259277DC4(result, v3);
        uint64_t v6 = 0;
        uint64_t v5 = 0;
        break;
      default:
        uint64_t result = sub_259277DC4(result, v3);
        uint64_t v5 = 0;
        uint64_t v6 = BYTE6(v3);
        break;
    }
    BOOL v4 = v5 == v6;
  }
  *a2 = v4;
  return result;
}

uint64_t LazyData.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v2 + 16);
  BOOL v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_25929EFF0(v3, &v6);
  os_unfair_lock_unlock(v4);
  swift_release();
  return v1;
}

uint64_t sub_25929ED88(uint64_t a1)
{
  v17[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v2 - 8);
  BOOL v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_259309300();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LazyDataState();
  sub_2592A01D0(a1 + *(int *)(v9 + 20), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_259267438((uint64_t)v4);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  if (*(unsigned char *)(a1 + *(int *)(v9 + 24)) == 1)
  {
    id v11 = objc_msgSend(self, sel_defaultManager);
    uint64_t v12 = (void *)sub_259309280();
    v17[0] = 0;
    unsigned int v13 = objc_msgSend(v11, sel_removeItemAtURL_error_, v12, v17);

    if (v13)
    {
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
      id v15 = v17[0];
      return v14(v8, v5);
    }
    id v16 = v17[0];
    sub_259309240();

    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_25929EFF0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_25929ED88(a1);
  if (!v2) {
    *a2 = 0;
  }
  return result;
}

uint64_t LazyData.__deallocating_deinit()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_25929EFF0(v2, &v5);
  os_unfair_lock_unlock(v3);
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t LazyData.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (uint64_t *)(v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_25929E078(v2, (uint64_t *)&v11);
  os_unfair_lock_unlock(v3);
  uint64_t v5 = v11;
  unint64_t v4 = v12;
  switch(v12 >> 62)
  {
    case 1uLL:
      unint64_t v6 = HIDWORD(v11);
      sub_259261F50(v11, v12);
      if (__OFSUB__(v6, v5))
      {
        __break(1u);
        JUMPOUT(0x25929F280);
      }
      return result;
    case 2uLL:
      uint64_t v8 = *(void *)(v11 + 16);
      uint64_t v7 = *(void *)(v11 + 24);
      sub_259261F50(v11, v12);
      if (__OFSUB__(v7, v8))
      {
        __break(1u);
        goto LABEL_8;
      }
      break;
    case 3uLL:
LABEL_8:
      sub_259261F50(v5, v4);
      break;
    default:
      sub_259261F50(v11, v12);
      break;
  }
  unint64_t v11 = sub_25930A730();
  unint64_t v12 = v9;
  sub_259309C20();
  return v11;
}

unint64_t sub_25929F290()
{
  return LazyData.description.getter();
}

uint64_t sub_25929F2B4(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LazyDataState();
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  id v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v23 - v17;
  sub_2592A01D0(a3, (uint64_t)v11);
  uint64_t v19 = (uint64_t)v15 + *(int *)(v13 + 28);
  uint64_t v20 = sub_259309300();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *id v15 = a1;
  v15[1] = a2;
  sub_259277D68(a1, a2);
  sub_2592A0238((uint64_t)v11, v19);
  *((unsigned char *)v15 + *(int *)(v13 + 32)) = a4;
  sub_2592A02A0((uint64_t)v15, (uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E718);
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + ((*(unsigned int *)(*(void *)v21 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_2592A0304((uint64_t)v18, v21 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v21 + 16));
  sub_2592A0368((uint64_t)v18);
  sub_259267438(a3);
  *(void *)(v4 + 16) = v21;
  return v4;
}

uint64_t type metadata accessor for LazyData()
{
  return self;
}

uint64_t method lookup function for LazyData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LazyData);
}

uint64_t *sub_25929F530(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v7 = *(void *)(a2 + 8);
    if (v7 >> 60 == 15)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v9 = *(void *)a2;
      sub_259261DE0(*(void *)a2, *(void *)(a2 + 8));
      *uint64_t v4 = v9;
      v4[1] = v7;
    }
    uint64_t v10 = *(int *)(a3 + 20);
    unint64_t v11 = (char *)v4 + v10;
    uint64_t v12 = (const void *)(a2 + v10);
    uint64_t v13 = sub_259309300();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *((unsigned char *)v4 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_25929F6EC(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15) {
    sub_259261F50(*a1, v4);
  }
  int v5 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_259309300();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_25929F7E0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6 = a2[1];
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v7 = *a2;
    sub_259261DE0(*a2, a2[1]);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v6;
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_259309300();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *sub_25929F94C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = *(void *)a2;
      sub_259261DE0(*(void *)a2, *(void *)(a2 + 8));
      *a1 = v7;
      a1[1] = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_25929FB60((uint64_t)a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)a2;
  sub_259261DE0(*(void *)a2, *(void *)(a2 + 8));
  uint64_t v9 = *a1;
  unint64_t v10 = a1[1];
  *a1 = v8;
  a1[1] = v6;
  sub_259261F50(v9, v10);
LABEL_8:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = sub_259309300();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_13;
  }
  if (v18)
  {
LABEL_13:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_14:
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_25929FB60(uint64_t a1)
{
  return a1;
}

_OWORD *sub_25929FBB4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_259309300();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_25929FCE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 8);
  if (v7 >> 60 == 15)
  {
    sub_25929FB60(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  sub_259261F50(v8, v6);
LABEL_6:
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_259309300();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_11;
  }
  if (v16)
  {
LABEL_11:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_12:
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_25929FEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25929FEDC);
}

uint64_t sub_25929FEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_25929FFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25929FFC8);
}

uint64_t sub_25929FFC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for LazyDataState()
{
  uint64_t result = qword_26A37E810;
  if (!qword_26A37E810) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2592A00D8()
{
  sub_2592A0178();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_2592A0178()
{
  if (!qword_26A37E820)
  {
    sub_259309300();
    unint64_t v0 = sub_25930A240();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A37E820);
    }
  }
}

uint64_t sub_2592A01D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2592A0238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2592A02A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LazyDataState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2592A0304(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LazyDataState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2592A0368(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LazyDataState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2592A03C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v28 = *(void *)a1;
  char v29 = *(unsigned char *)(a1 + 16);
  uint64_t v25 = *(void *)(a1 + 24);
  uint64_t v26 = *(void *)(a1 + 32);
  char v27 = *(unsigned char *)(a1 + 40);
  uint64_t v3 = sub_2592A1DA4(*(void *)a1, v1, v29, v25, v26, v27, v2);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (!v3) {
    return v4;
  }
  uint64_t v5 = v3;
  uint64_t v33 = MEMORY[0x263F8EE78];
  uint64_t result = sub_25925CBF4(0, v3 & ~(v3 >> 63), 0);
  if (v5 < 0)
  {
LABEL_37:
    __break(1u);
  }
  else
  {
    uint64_t v4 = v33;
    uint64_t v7 = v28;
    uint64_t result = sub_2592A273C(v28, v1, v29);
    uint64_t v8 = 0;
    uint64_t v9 = v2 + 64;
    uint64_t v22 = v5;
    int v23 = v1;
    uint64_t v24 = v2 + 64;
    while ((v29 & 1) == 0)
    {
      if (v7 < v28)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (v27) {
        goto LABEL_39;
      }
      if (v1 != v26) {
        goto LABEL_29;
      }
      if (v7 >= v25) {
        goto LABEL_30;
      }
      if (v7 < 0 || v7 >= 1 << *(unsigned char *)(v2 + 32)) {
        goto LABEL_31;
      }
      unint64_t v12 = (unint64_t)v7 >> 6;
      if ((*(void *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0) {
        goto LABEL_32;
      }
      if (*(_DWORD *)(v2 + 36) != v1) {
        goto LABEL_33;
      }
      uint64_t v30 = v8;
      uint64_t v13 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v7);
      uint64_t v31 = *v13;
      uint64_t v32 = v13[1];
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_259309C20();
      LazyData.description.getter();
      sub_259309C20();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v15 = *(void *)(v33 + 16);
      unint64_t v14 = *(void *)(v33 + 24);
      if (v15 >= v14 >> 1) {
        uint64_t result = sub_25925CBF4(v14 > 1, v15 + 1, 1);
      }
      *(void *)(v33 + 16) = v15 + 1;
      uint64_t v16 = v33 + 16 * v15;
      *(void *)(v16 + 32) = v31;
      *(void *)(v16 + 40) = v32;
      int64_t v10 = 1 << *(unsigned char *)(v2 + 32);
      if (v7 >= v10) {
        goto LABEL_34;
      }
      uint64_t v9 = v2 + 64;
      uint64_t v17 = *(void *)(v24 + 8 * v12);
      if ((v17 & (1 << v7)) == 0) {
        goto LABEL_35;
      }
      LODWORD(v1) = v23;
      if (*(_DWORD *)(v2 + 36) != v23) {
        goto LABEL_36;
      }
      unint64_t v18 = v17 & (-2 << (v7 & 0x3F));
      if (v18)
      {
        int64_t v10 = __clz(__rbit64(v18)) | v7 & 0xFFFFFFFFFFFFFFC0;
        uint64_t v11 = v22;
      }
      else
      {
        unint64_t v19 = v12 + 1;
        unint64_t v20 = (unint64_t)(v10 + 63) >> 6;
        uint64_t v11 = v22;
        if (v12 + 1 < v20)
        {
          unint64_t v21 = *(void *)(v24 + 8 * v19);
          if (v21)
          {
LABEL_26:
            int64_t v10 = __clz(__rbit64(v21)) + (v19 << 6);
          }
          else
          {
            while (v20 - 2 != v12)
            {
              unint64_t v21 = *(void *)(v2 + 80 + 8 * v12++);
              if (v21)
              {
                unint64_t v19 = v12 + 1;
                goto LABEL_26;
              }
            }
          }
        }
      }
      uint64_t v8 = v30 + 1;
      uint64_t v7 = v10;
      if (v30 + 1 == v11) {
        return v4;
      }
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

void static ProtocolVersion.current.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

PhotosFace::ProtocolVersion_optional __swiftcall ProtocolVersion.init(rawValue:)(Swift::UInt32 rawValue)
{
  if (rawValue >= 3) {
    char v2 = 3;
  }
  else {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (PhotosFace::ProtocolVersion_optional)rawValue;
}

uint64_t ProtocolVersion.rawValue.getter()
{
  return *v0;
}

uint64_t sub_2592A06EC()
{
  return sub_25930A910();
}

uint64_t sub_2592A0734()
{
  return sub_25930A8F0();
}

uint64_t sub_2592A0760()
{
  return sub_25930A910();
}

PhotosFace::ProtocolVersion_optional sub_2592A07A4(Swift::UInt32 *a1)
{
  return ProtocolVersion.init(rawValue:)(*a1);
}

void sub_2592A07AC(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL static ProtocolVersion.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_2592A07CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_2592A07E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_2592A07F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_2592A0808(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t MessageBody.metadata.getter()
{
  return swift_retain();
}

uint64_t MessageBody.metadata.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*MessageBody.metadata.modify())()
{
  return nullsub_1;
}

uint64_t MessageBody.files.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessageBody.files.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*MessageBody.files.modify())()
{
  return nullsub_1;
}

void MessageBody.version.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *MessageBody.version.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*MessageBody.version.modify())()
{
  return nullsub_1;
}

uint64_t MessageBody.init(metadata:files:version:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = *a3;
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = v4;
  return result;
}

uint64_t MessageBody.init(data:files:version:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *a4;
  uint64_t v14 = sub_259309300();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  type metadata accessor for LazyData();
  swift_allocObject();
  uint64_t v15 = sub_25929F2B4(a1, a2, (uint64_t)v12, 0);
  uint64_t result = sub_259261F50(a1, a2);
  *(void *)a5 = v15;
  *(void *)(a5 + 8) = a3;
  *(unsigned char *)(a5 + 16) = v13;
  return result;
}

void MessageBody.getData()()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  char v2 = (uint64_t *)(v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_25929E078(v2, &v4);
  os_unfair_lock_unlock(v3);
}

BOOL MessageBody.isEmpty.getter()
{
  uint64_t v1 = v0[1];
  uint64_t v2 = *(void *)(*v0 + 16);
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_25929EC08(v3, &v6);
  os_unfair_lock_unlock(v4);
  return v6 && *(void *)(v1 + 16) == 0;
}

uint64_t static MessageBody.empty(version:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v4 - 8);
  BOOL v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *a1;
  unint64_t v8 = sub_25921D8B4(MEMORY[0x263F8EE78]);
  uint64_t v9 = sub_259309300();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  type metadata accessor for LazyData();
  swift_allocObject();
  uint64_t result = sub_25929F2B4(0, 0xC000000000000000, (uint64_t)v6, 0);
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 16) = v7;
  return result;
}

uint64_t MessageBody.init<A>(serializable:version:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  double v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = *a2;
  uint64_t v27 = MEMORY[0x263F8EE80];
  char v26 = v15;
  (*(void (**)(uint64_t *, char *, uint64_t, uint64_t, double))(a4 + 24))(&v27, &v26, a3, a4, v12);
  char v25 = v15;
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 16))(&v25, a3, a4);
  if (v5)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = v16;
    unint64_t v20 = v17;
    uint64_t v24 = v27;
    uint64_t v21 = sub_259309300();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v14, 1, 1, v21);
    type metadata accessor for LazyData();
    swift_allocObject();
    uint64_t v22 = sub_25929F2B4(v19, v20, (uint64_t)v14, 0);
    sub_259261F50(v19, v20);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    uint64_t v23 = v24;
    *(void *)a5 = v22;
    *(void *)(a5 + 8) = v23;
    *(unsigned char *)(a5 + 16) = v15;
  }
  return result;
}

void MessageBody.deserialized<A>()(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 8);
  char v7 = *(unsigned char *)(v2 + 16);
  uint64_t v8 = *(void *)(*(void *)v2 + 16);
  uint64_t v9 = (uint64_t *)(v8 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v8 + 16));
  uint64_t v10 = (os_unfair_lock_s *)(v8 + ((*(unsigned int *)(*(void *)v8 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v10);
  sub_25929E078(v9, v12);
  os_unfair_lock_unlock(v10);
  if (!v3)
  {
    uint64_t v11 = v12[0];
    LOBYTE(v12[0]) = v7;
    (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(a2 + 8))(v11, v12[1], v12, a1, a2);
    LOBYTE(v12[0]) = v7;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(a2 + 32))(v6, v12, a1, a2);
  }
}

uint64_t Message.Operation.hash(into:)()
{
  switch(*(unsigned char *)(v0 + 8))
  {
    case 1:
      sub_25930A8D0();
      sub_25930A8F0();
      break;
    default:
      sub_25930A8D0();
      break;
  }
  return sub_25930A8F0();
}

uint64_t Message.Operation.hashValue.getter()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 8);
  sub_25930A8C0();
  switch(v1)
  {
    case 1:
      sub_25930A8D0();
      sub_25930A8F0();
      break;
    default:
      sub_25930A8D0();
      break;
  }
  sub_25930A8F0();
  return sub_25930A910();
}

uint64_t sub_2592A11C0()
{
  switch(*(unsigned char *)(v0 + 8))
  {
    case 1:
      sub_25930A8D0();
      sub_25930A8F0();
      break;
    default:
      sub_25930A8D0();
      break;
  }
  return sub_25930A8F0();
}

uint64_t sub_2592A1260()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 8);
  sub_25930A8C0();
  switch(v1)
  {
    case 1:
      sub_25930A8D0();
      sub_25930A8F0();
      break;
    default:
      sub_25930A8D0();
      break;
  }
  sub_25930A8F0();
  return sub_25930A910();
}

void Message.operation.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t Message.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  char v3 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t Message.complete.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

__n128 Message.init(operation:content:complete:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, unsigned __int8 a3@<W2>, __n128 *a4@<X8>)
{
  unsigned __int8 v4 = *(unsigned char *)(a1 + 8);
  unsigned __int8 v5 = a2[1].n128_u8[0];
  a4->n128_u64[0] = *(void *)a1;
  a4->n128_u8[8] = v4;
  __n128 result = *a2;
  a4[1] = *a2;
  a4[2].n128_u8[0] = v5;
  a4[2].n128_u8[1] = a3;
  return result;
}

uint64_t Message.init(operation:data:files:complete:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F32C8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  char v16 = *((unsigned char *)a1 + 8);
  uint64_t v17 = sub_259309300();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 1, 1, v17);
  type metadata accessor for LazyData();
  swift_allocObject();
  uint64_t v18 = sub_25929F2B4(a2, a3, (uint64_t)v14, 0);
  uint64_t result = sub_259261F50(a2, a3);
  *(void *)a6 = v15;
  *(unsigned char *)(a6 + 8) = v16;
  *(void *)(a6 + 16) = v18;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = 2;
  *(unsigned char *)(a6 + 33) = a5;
  return result;
}

uint64_t Message.Operation.init(protobuf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    switch(*(void *)a1)
    {
      case 1:
        char v6 = 0;
        char v7 = (unsigned int *)(a1 + *(int *)(type metadata accessor for MessageProto(0) + 36));
        if (*((unsigned char *)v7 + 4)) {
          uint64_t v8 = 0;
        }
        else {
          uint64_t v8 = *v7;
        }
        break;
      case 2:
        uint64_t v9 = type metadata accessor for MessageProto(0);
        uint64_t v10 = (unsigned int *)(a1 + *(int *)(v9 + 36));
        uint64_t v11 = (unsigned int *)(a1 + *(int *)(v9 + 40));
        int v12 = *((unsigned __int8 *)v11 + 4);
        uint64_t v13 = *v11;
        if (*((unsigned char *)v10 + 4)) {
          uint64_t v14 = 0;
        }
        else {
          uint64_t v14 = *v10;
        }
        uint64_t v15 = v13 << 32;
        if (v12) {
          uint64_t v15 = 0;
        }
        uint64_t v8 = v15 | v14;
        char v6 = 1;
        break;
      case 3:
        char v16 = (unsigned int *)(a1 + *(int *)(type metadata accessor for MessageProto(0) + 40));
        if (*((unsigned char *)v16 + 4)) {
          uint64_t v8 = 0;
        }
        else {
          uint64_t v8 = *v16;
        }
        char v6 = 2;
        break;
      case 4:
        uint64_t v17 = (unsigned int *)(a1 + *(int *)(type metadata accessor for MessageProto(0) + 40));
        if (*((unsigned char *)v17 + 4)) {
          uint64_t v8 = 0;
        }
        else {
          uint64_t v8 = *v17;
        }
        char v6 = 3;
        break;
      default:
        goto LABEL_3;
    }
    uint64_t result = sub_2592A20B4(a1);
    *(void *)a2 = v8;
    *(unsigned char *)(a2 + 8) = v6;
  }
  else
  {
LABEL_3:
    sub_259296F0C();
    swift_allocError();
    *unsigned __int8 v4 = 0;
    swift_willThrow();
    return sub_2592A20B4(a1);
  }
  return result;
}

uint64_t Message.Operation.protobuf(proto:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  switch(*((unsigned char *)v1 + 8))
  {
    case 1:
      *(void *)a1 = 2;
      *(unsigned char *)(a1 + 8) = 1;
      uint64_t result = type metadata accessor for MessageProto(0);
      uint64_t v8 = a1 + *(int *)(result + 36);
      *(_DWORD *)uint64_t v8 = v2;
      *(unsigned char *)(v8 + 4) = 0;
      uint64_t v7 = a1 + *(int *)(result + 40);
      *(_DWORD *)uint64_t v7 = HIDWORD(v2);
      goto LABEL_8;
    case 2:
      uint64_t v6 = 3;
      goto LABEL_5;
    case 3:
      uint64_t v6 = 4;
LABEL_5:
      *(void *)a1 = v6;
      *(unsigned char *)(a1 + 8) = 1;
      uint64_t result = type metadata accessor for MessageProto(0);
      uint64_t v5 = *(int *)(result + 40);
      goto LABEL_6;
    default:
      *(void *)a1 = 1;
      *(unsigned char *)(a1 + 8) = 1;
      uint64_t result = type metadata accessor for MessageProto(0);
      uint64_t v5 = *(int *)(result + 36);
LABEL_6:
      uint64_t v7 = a1 + v5;
      *(_DWORD *)uint64_t v7 = v2;
LABEL_8:
      *(unsigned char *)(v7 + 4) = 0;
      return result;
  }
}

uint64_t Message.shortDescription.getter()
{
  return 0;
}

uint64_t Message.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_2592A1F70(3, v1, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_2592A03C4((uint64_t)&v7);
  long long v15 = v7;
  char v16 = v8;
  sub_2592A2110((uint64_t)&v15);
  long long v13 = v9;
  char v14 = v10;
  sub_2592A2110((uint64_t)&v13);
  uint64_t v12 = v11;
  sub_2592A2144((uint64_t)&v12);
  if (*(void *)(v1 + 16) >= 4uLL)
  {
    sub_25930A730();
    sub_259309C20();
    swift_bridgeObjectRelease();
    sub_259309C20();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_25924826C(0, v2[2] + 1, 1, v2);
    }
    unint64_t v4 = v2[2];
    unint64_t v3 = v2[3];
    if (v4 >= v3 >> 1) {
      uint64_t v2 = sub_25924826C((void *)(v3 > 1), v4 + 1, 1, v2);
    }
    v2[2] = v4 + 1;
    uint64_t v5 = &v2[2 * v4];
    v5[4] = 0x2B20A680E2;
    v5[5] = 0xA500000000000000;
  }
  sub_25930A3E0();
  sub_259309C20();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_25930A540();
  sub_259309C20();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_259309C20();
  swift_bridgeObjectRelease();
  sub_259309C20();
  sub_25930A540();
  sub_259309C20();
  swift_retain();
  LazyData.description.getter();
  sub_259309C20();
  swift_release();
  swift_bridgeObjectRelease();
  sub_259309C20();
  MEMORY[0x25A2DA610](v2, MEMORY[0x263F8D310]);
  sub_259309C20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_259309C20();
  return 0;
}

uint64_t sub_2592A1B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_2592E81E4(a2);
  if (v8) {
    goto LABEL_19;
  }
  int v9 = *(_DWORD *)(a2 + 36);
  if (v9 != v7)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v10 = 1 << *(unsigned char *)(a2 + 32);
  if (v10 < result)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v9 != v11) {
    goto LABEL_15;
  }
  if (*(void *)a1 < result)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (*(unsigned char *)(a1 + 40))
  {
LABEL_21:
    __break(1u);
    return result;
  }
  uint64_t v12 = *(void *)(a1 + 32);
  if (v9 != v12) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  if (v10 < v13)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(void *)a3 = *(void *)a1;
  *(void *)(a3 + 8) = v11;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = v13;
  *(void *)(a3 + 32) = v12;
  *(unsigned char *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2592A1C18(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6, char a7, uint64_t a8)
{
  if (a4 < 0)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  else
  {
    if (a4)
    {
      uint64_t v8 = 0;
      char v9 = a7 & 1;
      char v10 = (a3 | a7) & 1;
      uint64_t v11 = a8 + 64;
      unint64_t v12 = result;
      int v13 = a2;
      while (1)
      {
        if (v10) {
          goto LABEL_31;
        }
        if (v13 != a6)
        {
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        if (v12 == a5)
        {
          unint64_t v12 = 0;
          goto LABEL_25;
        }
        if ((v12 & 0x8000000000000000) != 0) {
          goto LABEL_27;
        }
        uint64_t v14 = 1 << *(unsigned char *)(a8 + 32);
        if ((uint64_t)v12 >= v14) {
          goto LABEL_27;
        }
        unint64_t v15 = v12 >> 6;
        unint64_t v16 = *(void *)(v11 + 8 * (v12 >> 6));
        if (((v16 >> v12) & 1) == 0) {
          goto LABEL_28;
        }
        if (*(_DWORD *)(a8 + 36) != a6) {
          goto LABEL_29;
        }
        unint64_t v17 = v16 & (-2 << (v12 & 0x3F));
        if (v17)
        {
          unint64_t v12 = __clz(__rbit64(v17)) | v12 & 0xFFFFFFFFFFFFFFC0;
        }
        else
        {
          unint64_t v18 = v15 + 1;
          unint64_t v19 = (unint64_t)(v14 + 63) >> 6;
          if (v15 + 1 >= v19) {
            goto LABEL_22;
          }
          unint64_t v20 = *(void *)(v11 + 8 * v18);
          if (!v20)
          {
            unint64_t v18 = v15 + 2;
            if (v15 + 2 >= v19) {
              goto LABEL_22;
            }
            unint64_t v20 = *(void *)(v11 + 8 * v18);
            if (!v20)
            {
              while (v19 - 3 != v15)
              {
                unint64_t v20 = *(void *)(a8 + 88 + 8 * v15++);
                if (v20)
                {
                  unint64_t v18 = v15 + 2;
                  goto LABEL_16;
                }
              }
LABEL_22:
              unint64_t v12 = 1 << *(unsigned char *)(a8 + 32);
              goto LABEL_5;
            }
          }
LABEL_16:
          unint64_t v12 = __clz(__rbit64(v20)) + (v18 << 6);
        }
LABEL_5:
        ++v8;
        int v13 = a6;
        char v10 = v9;
        if (v8 == a4) {
          goto LABEL_25;
        }
      }
    }
    unint64_t v12 = result;
LABEL_25:
    sub_2592A273C(result, a2, a3 & 1);
    return v12;
  }
  return result;
}

uint64_t sub_2592A1DA4(uint64_t result, int a2, char a3, uint64_t a4, int a5, char a6, uint64_t a7)
{
  if (a6 & 1) != 0 || (a3) {
    goto LABEL_34;
  }
  unint64_t v7 = result;
  if (a4 < result) {
    goto LABEL_31;
  }
  if (a5 != a2)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    return result;
  }
  if (result != a4)
  {
    if (*(_DWORD *)(a7 + 36) == a5)
    {
      uint64_t v8 = a7 + 64;
      uint64_t v9 = 1 << *(unsigned char *)(a7 + 32);
      unint64_t v10 = (unint64_t)(v9 + 63) >> 6;
      uint64_t result = 1;
      while (1)
      {
        if ((v7 & 0x8000000000000000) != 0 || (uint64_t)v7 >= v9)
        {
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        unint64_t v11 = v7 >> 6;
        unint64_t v12 = *(void *)(v8 + 8 * (v7 >> 6));
        if (((v12 >> v7) & 1) == 0) {
          goto LABEL_29;
        }
        unint64_t v13 = v12 & (-2 << (v7 & 0x3F));
        if (v13)
        {
          unint64_t v7 = __clz(__rbit64(v13)) | v7 & 0xFFFFFFFFFFFFFFC0;
        }
        else
        {
          unint64_t v14 = v11 + 1;
          unint64_t v7 = 1 << *(unsigned char *)(a7 + 32);
          if (v11 + 1 < v10)
          {
            unint64_t v15 = *(void *)(v8 + 8 * v14);
            if (!v15)
            {
              unint64_t v14 = v11 + 2;
              unint64_t v7 = 1 << *(unsigned char *)(a7 + 32);
              if (v11 + 2 >= v10) {
                goto LABEL_18;
              }
              unint64_t v15 = *(void *)(v8 + 8 * v14);
              if (!v15)
              {
                while (v10 - 3 != v11)
                {
                  unint64_t v15 = *(void *)(a7 + 88 + 8 * v11++);
                  if (v15)
                  {
                    unint64_t v14 = v11 + 2;
                    goto LABEL_17;
                  }
                }
                unint64_t v7 = 1 << *(unsigned char *)(a7 + 32);
                goto LABEL_18;
              }
            }
LABEL_17:
            unint64_t v7 = __clz(__rbit64(v15)) + (v14 << 6);
          }
        }
LABEL_18:
        if (v7 == a4) {
          return result;
        }
        if (__OFADD__(result++, 1)) {
          goto LABEL_30;
        }
      }
    }
    goto LABEL_33;
  }
  return 0;
}

BOOL _s10PhotosFace7MessageV9OperationO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  switch(*((unsigned char *)a1 + 8))
  {
    case 1:
      BOOL result = v4 == 1 && v2 == v3 && HIDWORD(v2) == HIDWORD(v3);
      break;
    case 2:
      BOOL v7 = v2 == v3;
      BOOL result = v4 == 2 && v7;
      break;
    case 3:
      BOOL v8 = v2 == v3;
      BOOL result = v4 == 3 && v8;
      break;
    default:
      BOOL v5 = v2 == v3;
      if (*((unsigned char *)a2 + 8)) {
        BOOL result = 0;
      }
      else {
        BOOL result = v5;
      }
      break;
  }
  return result;
}

uint64_t sub_2592A1F70@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = result;
    uint64_t v6 = sub_2592E81E4(a2);
    uint64_t v8 = v7;
    char v10 = v9 & 1;
    uint64_t v11 = sub_2592A1C18(v6, v7, v9 & 1, v4, 1 << *(unsigned char *)(a2 + 32), *(_DWORD *)(a2 + 36), 0, a2);
    uint64_t v13 = v12;
    char v15 = v14;
    int v16 = ~v14;
    sub_259299FC0(v6, v8, v10);
    if (v16)
    {
      BOOL v17 = (v15 & 1) == 0;
    }
    else
    {
      BOOL v17 = 1;
      uint64_t v11 = 1 << *(unsigned char *)(a2 + 32);
      uint64_t v13 = *(unsigned int *)(a2 + 36);
    }
    BOOL result = sub_2592E81E4(a2);
    if (!v17 || (v19 & 1) != 0) {
      goto LABEL_16;
    }
    if (v13 == v18)
    {
      if (v11 >= result)
      {
        v24[0] = result;
        v24[1] = v18;
        char v25 = 0;
        uint64_t v26 = v11;
        uint64_t v27 = v13;
        char v28 = 0;
        BOOL result = sub_2592A1B30((uint64_t)v24, a2, (uint64_t)v22);
        long long v21 = v22[1];
        *(_OWORD *)a3 = v22[0];
        *(_OWORD *)(a3 + 16) = v21;
        *(_OWORD *)(a3 + 32) = v22[2];
        *(void *)(a3 + 48) = v23;
        return result;
      }
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_2592A20B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MessageProto(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2592A2110(uint64_t a1)
{
  return a1;
}

uint64_t sub_2592A2144(uint64_t a1)
{
  return a1;
}

unint64_t sub_2592A2174()
{
  unint64_t result = qword_26A37E828;
  if (!qword_26A37E828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E828);
  }
  return result;
}

unint64_t sub_2592A21CC()
{
  unint64_t result = qword_26A37E830;
  if (!qword_26A37E830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E830);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ProtocolVersion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2592A22ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProtocolVersion()
{
  return &type metadata for ProtocolVersion;
}

uint64_t destroy for MessageBody()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t _s10PhotosFace11MessageBodyVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessageBody(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for MessageBody(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageBody(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageBody(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageBody()
{
  return &type metadata for MessageBody;
}

uint64_t destroy for Message()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Message(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Message(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(unsigned char *)(a1 + 33) = *((unsigned char *)a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Message(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for Message(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Message(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Message()
{
  return &type metadata for Message;
}

uint64_t __swift_memcpy9_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t sub_2592A271C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_2592A2724(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Message.Operation()
{
  return &type metadata for Message.Operation;
}

uint64_t sub_2592A273C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t InFlightRequest.result.getter()
{
  return swift_retain();
}

uint64_t InFlightRequest.creationDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_25930A500();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t InFlightRequest.requestID.getter(uint64_t a1)
{
  return *(unsigned int *)(v1 + *(int *)(a1 + 32));
}

uint64_t InFlightRequest.init(result:creationDate:requestID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X8>)
{
  uint64_t v8 = (int *)type metadata accessor for InFlightRequest();
  char v9 = (void *)((char *)a4 + v8[9]);
  *char v9 = 0;
  v9[1] = 0;
  *(void *)((char *)a4 + v8[10]) = 0;
  *a4 = a1;
  char v10 = (char *)a4 + v8[7];
  uint64_t v11 = sub_25930A500();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  *(_DWORD *)((char *)a4 + v8[8]) = a3;
  return result;
}

uint64_t type metadata accessor for InFlightRequest()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t InFlightRequest.readNext()(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  long long v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_2592A28C8, 0, 0);
}

uint64_t sub_2592A28C8()
{
  uint64_t v7 = v0;
  uint64_t v1 = (_OWORD *)(v0[4] + *(int *)(v0[3] + 36));
  if (!*(void *)v1)
  {
    AsyncThrowingChannel.makeAsyncIterator()(&v6);
    *uint64_t v1 = v6;
  }
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
  uint64_t v3 = type metadata accessor for AsyncThrowingChannel.Iterator();
  *uint64_t v2 = v0;
  v2[1] = sub_2592A29C4;
  uint64_t v4 = v0[2];
  return AsyncThrowingChannel.Iterator.next()(v4, v3);
}

uint64_t sub_2592A29C4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_2592A2AF4, 0, 0);
  }
}

uint64_t sub_2592A2AF4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(int *)(*(void *)(v0 + 24) + 40);
  uint64_t v3 = *(void *)(v1 + v2);
  BOOL v4 = __OFADD__(v3, 1);
  uint64_t v5 = v3 + 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + v2) = v5;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t InFlightRequest.readCount.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_2592A2B34()
{
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  return *(unsigned int *)(v0 + 32);
}

uint64_t sub_2592A2C14(uint64_t a1)
{
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  *(void *)(v1 + 72) = a1;
  return swift_release();
}

uint64_t MessageDemultiplexer.__allocating_init(timeout:logTag:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  char v9 = a3 & 1;
  uint64_t v10 = swift_allocObject();
  MessageDemultiplexer.init(timeout:logTag:)(a1, a2, v9, a4, a5);
  return v10;
}

uint64_t MessageDemultiplexer.init(timeout:logTag:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(_DWORD *)(v5 + 32) = 0;
  type metadata accessor for InFlightRequest();
  swift_getTupleTypeMetadata2();
  sub_259309DF0();
  uint64_t v11 = sub_259309AA0();
  *(void *)(v5 + 72) = 0;
  *(void *)(v5 + 40) = v11;
  *(void *)(v5 + 48) = a1;
  *(void *)(v5 + 56) = a2;
  *(unsigned char *)(v5 + 64) = a3 & 1;
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return v5;
}

uint64_t sub_2592A2E44@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for InFlightRequest();
  uint64_t v7 = sub_25930A240();
  MEMORY[0x270FA5388](v7 - 8);
  char v9 = (char *)v27 - v8;
  uint64_t v10 = sub_25930A500();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for CommunicationActor();
  v27[0] = sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  v27[1] = v13;
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  int v14 = sub_2592A2B34();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  int v15 = *(_DWORD *)(v2 + 32);
  BOOL v16 = __CFADD__(v15, 1);
  int v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_11;
  }
  *(_DWORD *)(v2 + 32) = v17;
  swift_retain();
  sub_25930A4D0();
  InFlightRequest.init(result:creationDate:requestID:)(a1, (uint64_t)v12, v14, a2);
  uint64_t v18 = *(void *)(v6 - 8);
  (*(void (**)(char *, void *, uint64_t))(v18 + 16))(v9, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v6);
  LODWORD(v28) = v14;
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  sub_259309AE0();
  sub_259309B00();
  swift_endAccess();
  if (qword_26B2F3B80 != -1) {
    goto LABEL_20;
  }
LABEL_11:
  uint64_t v19 = sub_259309860();
  __swift_project_value_buffer(v19, (uint64_t)qword_26B2F3B68);
  swift_retain();
  unint64_t v20 = sub_259309840();
  os_log_type_t v21 = sub_25930A1A0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v29[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    sub_259309E90();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v24 = *(void *)(v3 + 16);
    unint64_t v25 = *(void *)(v3 + 24);
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_25924FC14(v24, v25, v29);
    sub_25930A2A0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 1024;
    sub_259309E90();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    LODWORD(v28) = v14;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v20, v21, "%s: Inserted request %u", (uint8_t *)v22, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v23, -1, -1);
    MEMORY[0x25A2DBAF0](v22, -1, -1);
  }
  else
  {

    swift_release();
  }
  return sub_2592A5AE0();
}

uint64_t sub_2592A3358(int a1)
{
  int v13 = a1;
  uint64_t v1 = type metadata accessor for InFlightRequest();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v12 = (char *)&v12 - v3;
  uint64_t v4 = sub_25930A240();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - v6;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v8 = sub_2592A75EC();
  int v14 = v13;
  swift_bridgeObjectRetain();
  MEMORY[0x25A2DA360](&v14, v8, MEMORY[0x263F8E8F8], v1, MEMORY[0x263F8E908]);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_259309E90();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    return 0;
  }
  else
  {
    uint64_t v10 = v12;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v12, v7, v1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = *(void *)&v10[*(int *)(v1 + 40)];
    (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v1);
  }
  return v9;
}

uint64_t sub_2592A368C(uint64_t a1, int a2)
{
  *(_DWORD *)(v3 + 256) = a2;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = v2;
  *(void *)(v3 + 88) = *(void *)(*(void *)v2 + 80);
  uint64_t v4 = sub_25930A240();
  *(void *)(v3 + 96) = v4;
  *(void *)(v3 + 104) = *(void *)(v4 - 8);
  *(void *)(v3 + 112) = swift_task_alloc();
  *(void *)(v3 + 120) = type metadata accessor for InFlightRequest();
  uint64_t v5 = sub_25930A240();
  *(void *)(v3 + 128) = v5;
  *(void *)(v3 + 136) = *(void *)(v5 - 8);
  *(void *)(v3 + 144) = swift_task_alloc();
  *(void *)(v3 + 152) = swift_task_alloc();
  *(void *)(v3 + 160) = swift_task_alloc();
  *(void *)(v3 + 168) = swift_task_alloc();
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  *(void *)(v3 + 176) = type metadata accessor for CommunicationActor();
  *(void *)(v3 + 184) = sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v7 = sub_259309E90();
  *(void *)(v3 + 192) = v7;
  *(void *)(v3 + 200) = v6;
  return MEMORY[0x270FA2498](sub_2592A3898, v7, v6);
}

uint64_t sub_2592A3898()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 120);
  int v6 = *(_DWORD *)(v0 + 256);
  uint64_t v7 = sub_2592A75EC();
  *(_DWORD *)(v0 + 240) = v6;
  swift_bridgeObjectRetain();
  MEMORY[0x25A2DA360](v0 + 240, v7, MEMORY[0x263F8E8F8], v5, MEMORY[0x263F8E908]);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  LODWORD(v7) = v8(v1, 1, v5);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v0 + 208) = v9;
  *(void *)(v0 + 216) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v1, v3);
  if (v7 == 1)
  {
    if (qword_26B2F3B80 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_259309860();
    __swift_project_value_buffer(v10, (uint64_t)qword_26B2F3B68);
    swift_retain();
    uint64_t v11 = sub_259309840();
    os_log_type_t v12 = sub_25930A1B0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = v28;
      *(_DWORD *)uint64_t v13 = 136315394;
      sub_259309E90();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v14 = *(void *)(v0 + 80);
      uint64_t v16 = *(void *)(v14 + 16);
      unint64_t v15 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 64) = sub_25924FC14(v16, v15, &v29);
      sub_25930A2A0();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v13 + 12) = 1024;
      sub_259309E90();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      *(_DWORD *)(v0 + 244) = *(_DWORD *)(v0 + 256);
      sub_25930A2A0();
      _os_log_impl(&dword_25921A000, v11, v12, "%s: Received response for non-existent request %u", (uint8_t *)v13, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v28, -1, -1);
      MEMORY[0x25A2DBAF0](v13, -1, -1);
    }
    else
    {
      swift_release();
    }

    sub_2592A76E8();
    swift_allocError();
    *uint64_t v22 = 2;
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    uint64_t v24 = *(void *)(v0 + 168);
    uint64_t v25 = *(void *)(v0 + 128);
    swift_willThrow();
    v23(v24, v25);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
  else
  {
    int v17 = (uint64_t (*)())v8(*(void *)(v0 + 168), 1, *(void *)(v0 + 120));
    if (v17 == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v20 = swift_task_alloc();
      *(void *)(v0 + 224) = v20;
      *(void *)uint64_t v20 = v0;
      *(void *)(v20 + 8) = sub_2592A3D50;
      long long v21 = *(_OWORD *)(v0 + 112);
      *(void *)(v20 + 32) = *(void *)(v0 + 168);
      *(_OWORD *)(v20 + 16) = v21;
      int v17 = sub_2592A28C8;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
    }
    return MEMORY[0x270FA2498](v17, v18, v19);
  }
}

uint64_t sub_2592A3D50()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 200);
  uint64_t v4 = *(void *)(v2 + 192);
  if (v0) {
    uint64_t v5 = sub_2592A4060;
  }
  else {
    uint64_t v5 = sub_2592A3E8C;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_2592A3E8C()
{
  uint64_t v1 = *(void *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 88) - 8) + 48))(v1, 1) == 1)
  {
    *(_DWORD *)(v0 + 248) = *(_DWORD *)(v0 + 256);
    sub_259309E90();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 128);
    swift_beginAccess();
    sub_259309AE0();
    sub_259309A90();
    v2(v3, v4);
    swift_endAccess();
    uint64_t v1 = *(void *)(v0 + 112);
  }
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 128);
  (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 104) + 32))(*(void *)(v0 + 72), v1, *(void *)(v0 + 96));
  v5(v6, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_2592A4060()
{
  *(_DWORD *)(v0 + 252) = *(_DWORD *)(v0 + 256);
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  swift_beginAccess();
  sub_259309AE0();
  sub_259309A90();
  v1(v2, v3);
  swift_endAccess();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 128);
  swift_willThrow();
  v4(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_2592A41FC(int a1, uint64_t a2)
{
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = v2;
  *(_DWORD *)(v3 + 144) = a1;
  uint64_t v4 = type metadata accessor for InFlightRequest();
  *(void *)(v3 + 40) = v4;
  uint64_t v5 = sub_25930A240();
  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 56) = *(void *)(v5 - 8);
  *(void *)(v3 + 64) = swift_task_alloc();
  *(void *)(v3 + 72) = *(void *)(v4 - 8);
  *(void *)(v3 + 80) = swift_task_alloc();
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  *(void *)(v3 + 88) = type metadata accessor for CommunicationActor();
  *(void *)(v3 + 96) = sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v7 = sub_259309E90();
  *(void *)(v3 + 104) = v7;
  *(void *)(v3 + 112) = v6;
  return MEMORY[0x270FA2498](sub_2592A43CC, v7, v6);
}

uint64_t sub_2592A43CC()
{
  uint64_t v21 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 40);
  int v4 = *(_DWORD *)(v0 + 144);
  uint64_t v5 = sub_2592A75EC();
  *(_DWORD *)(v0 + 136) = v4;
  swift_bridgeObjectRetain();
  MEMORY[0x25A2DA360](v0 + 136, v5, MEMORY[0x263F8E8F8], v3, MEMORY[0x263F8E908]);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    if (qword_26B2F3B80 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_259309860();
    __swift_project_value_buffer(v6, (uint64_t)qword_26B2F3B68);
    swift_retain();
    uint64_t v7 = sub_259309840();
    os_log_type_t v8 = sub_25930A1B0();
    if (os_log_type_enabled(v7, v8))
    {
      os_log_type_t v19 = v8;
      uint64_t v9 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v20 = v18;
      *(_DWORD *)uint64_t v9 = 136315394;
      sub_259309E90();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v10 = *(void *)(v0 + 32);
      uint64_t v12 = *(void *)(v10 + 16);
      unint64_t v11 = *(void *)(v10 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_25924FC14(v12, v11, &v20);
      sub_25930A2A0();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v9 + 12) = 1024;
      sub_259309E90();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      *(_DWORD *)(v0 + 140) = *(_DWORD *)(v0 + 144);
      sub_25930A2A0();
      _os_log_impl(&dword_25921A000, v7, v19, "%s: Received response for non-existent request %u", (uint8_t *)v9, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v18, -1, -1);
      MEMORY[0x25A2DBAF0](v9, -1, -1);
    }
    else
    {
      swift_release();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    int v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 80);
    (*(void (**)(void *, void, void))(*(void *)(v0 + 72) + 32))(v13, *(void *)(v0 + 64), *(void *)(v0 + 40));
    *(void *)(v0 + 120) = *v13;
    swift_retain();
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_2592A47C8;
    uint64_t v15 = *(void *)(v0 + 24);
    return AsyncThrowingChannel.send(_:)(v15);
  }
}

uint64_t sub_2592A47C8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return MEMORY[0x270FA2498](sub_2592A490C, v3, v2);
}

uint64_t sub_2592A490C()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2592A4990(int a1)
{
  uint64_t v2 = v1;
  int v33 = a1;
  uint64_t v3 = type metadata accessor for InFlightRequest();
  uint64_t v4 = sub_25930A240();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v31 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v32 = (char *)&v26 - v12;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v13 = sub_2592A75EC();
  int v14 = v33;
  LODWORD(v35[0]) = v33;
  swift_bridgeObjectRetain();
  MEMORY[0x25A2DA360](v35, v13, MEMORY[0x263F8E8F8], v3, MEMORY[0x263F8E908]);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v3) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
  uint64_t v30 = v5;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v32, v9, v3);
  swift_retain();
  AsyncThrowingChannel.finish()();
  swift_release();
  if (qword_26B2F3B80 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_259309860();
  __swift_project_value_buffer(v16, (uint64_t)qword_26B2F3B68);
  swift_retain();
  int v17 = sub_259309840();
  int v18 = sub_25930A1A0();
  if (os_log_type_enabled(v17, (os_log_type_t)v18))
  {
    int v28 = v18;
    uint64_t v29 = v4;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v35[0] = v27;
    *(_DWORD *)uint64_t v19 = 136315394;
    sub_259309E90();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v20 = *(void *)(v2 + 16);
    unint64_t v21 = *(void *)(v2 + 24);
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_25924FC14(v20, v21, v35);
    sub_25930A2A0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 1024;
    sub_259309E90();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    int v14 = v33;
    LODWORD(v34) = v33;
    sub_25930A2A0();
    _os_log_impl(&dword_25921A000, v17, (os_log_type_t)v28, "%s: Completed request %u", (uint8_t *)v19, 0x12u);
    uint64_t v22 = v27;
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v22, -1, -1);
    MEMORY[0x25A2DBAF0](v19, -1, -1);

    uint64_t v4 = v29;
  }
  else
  {

    swift_release();
  }
  LODWORD(v34) = v14;
  sub_259309E90();
  char isCurrentExecutor = swift_task_isCurrentExecutor();
  uint64_t v24 = v30;
  if ((isCurrentExecutor & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  sub_259309AE0();
  uint64_t v25 = v31;
  sub_259309A90();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v4);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v32, v3);
}

void sub_2592A4F74(int a1)
{
  int v20 = a1;
  uint64_t v1 = type metadata accessor for InFlightRequest();
  uint64_t v21 = sub_25930A240();
  uint64_t v2 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v19[-v6];
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v19[-v9];
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v11 = sub_2592A75EC();
  int v12 = v20;
  v22[0] = v20;
  swift_bridgeObjectRetain();
  MEMORY[0x25A2DA360](v22, v11, MEMORY[0x263F8E8F8], v1, MEMORY[0x263F8E908]);
  swift_bridgeObjectRelease();
  v22[7] = v12;
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  sub_259309AE0();
  sub_259309A90();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v2 + 8);
  uint64_t v14 = v21;
  v13(v7, v21);
  swift_endAccess();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v10, v14);
  uint64_t v15 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v4, 1, v1) == 1)
  {
    v13(v10, v14);
    v13(v4, v14);
  }
  else
  {
    uint64_t v16 = *(void (**)(unsigned char *, uint64_t))(v15 + 8);
    swift_retain();
    v16(v4, v1);
    sub_2592A76E8();
    int v17 = (void *)swift_allocError();
    *int v18 = 0;
    AsyncThrowingChannel.fail<>(_:)(v17);
    swift_release();
    v13(v10, v14);
  }
}

uint64_t sub_2592A5358()
{
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_2592A75EC();
  uint64_t v0 = type metadata accessor for InFlightRequest();
  uint64_t v1 = swift_bridgeObjectRetain();
  LOBYTE(v0) = MEMORY[0x25A2DA330](v1, MEMORY[0x263F8E8F8], v0, MEMORY[0x263F8E908]);
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_2592A54A8(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = type metadata accessor for InFlightRequest();
  uint64_t v32 = sub_25930A240();
  uint64_t v5 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v31 = (char *)&v25 - v6;
  uint64_t v33 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v34 = (char *)&v25 - v11;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for CommunicationActor();
  uint64_t v29 = sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v30 = v12;
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v37 = sub_2592A75EC();
  MEMORY[0x270FA5388](v37);
  *(&v25 - 2) = v3;
  *(&v25 - 1) = a1;
  sub_259309AB0();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v13 = sub_259309D00();
  uint64_t v14 = swift_bridgeObjectRetain();
  if (!MEMORY[0x25A2DA6C0](v14, v4))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v13;
  }
  uint64_t v15 = 0;
  uint64_t v27 = v1 + 40;
  int v28 = (void (**)(char *, uint64_t *, uint64_t))(v33 + 16);
  uint64_t v16 = (void (**)(char *, char *, uint64_t))(v33 + 32);
  int v17 = (void (**)(char *, uint64_t))(v5 + 8);
  int v18 = (void (**)(char *, uint64_t))(v33 + 8);
  while (1)
  {
    char v20 = sub_259309E10();
    sub_259309DD0();
    if (v20)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v33 + 16))(v34, v13+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v15, v4);
      uint64_t v21 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_15;
      }
      goto LABEL_10;
    }
    uint64_t result = sub_25930A410();
    if (v26 != 8) {
      break;
    }
    v35[0] = result;
    (*v28)(v34, v35, v4);
    swift_unknownObjectRelease();
    uint64_t v21 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
LABEL_10:
    (*v16)(v9, v34, v4);
    sub_2592A76E8();
    uint64_t v22 = (void *)swift_allocError();
    *uint64_t v23 = 1;
    AsyncThrowingChannel.fail<>(_:)(v22);

    int v36 = *(_DWORD *)&v9[*(int *)(v4 + 32)];
    sub_259309E90();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_beginAccess();
    sub_259309AE0();
    uint64_t v19 = v31;
    sub_259309A90();
    (*v17)(v19, v32);
    swift_endAccess();
    (*v18)(v9, v4);
    ++v15;
    if (v21 == MEMORY[0x25A2DA6C0](v13, v4)) {
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2592A59CC()
{
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  type metadata accessor for InFlightRequest();
  return sub_25930A4E0() & 1;
}

uint64_t sub_2592A5AE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37CE58);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t result = sub_2592A8534();
  if (!result)
  {
    uint64_t result = sub_2592A5358();
    if ((result & 1) == 0 && (*(unsigned char *)(v0 + 64) & 1) == 0)
    {
      uint64_t v7 = *(void *)(v0 + 48);
      uint64_t v6 = *(void *)(v0 + 56);
      uint64_t v8 = sub_259309F20();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
      uint64_t v9 = (void *)swift_allocObject();
      v9[2] = 0;
      v9[3] = 0;
      v9[4] = v1;
      v9[5] = v7;
      v9[6] = v6;
      swift_retain();
      uint64_t v10 = sub_2592F2294((uint64_t)v4, (uint64_t)&unk_26A37E890, (uint64_t)v9);
      sub_2592A8740((uint64_t)v4);
      return sub_2592A2C14(v10);
    }
  }
  return result;
}

uint64_t sub_2592A5CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  uint64_t v4 = sub_25930A500();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  uint64_t v5 = sub_25930A520();
  v3[17] = v5;
  v3[18] = *(void *)(v5 - 8);
  v3[19] = swift_task_alloc();
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  v3[20] = type metadata accessor for CommunicationActor();
  v3[21] = sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  uint64_t v7 = sub_259309E90();
  v3[22] = v7;
  v3[23] = v6;
  return MEMORY[0x270FA2498](sub_2592A5E9C, v7, v6);
}

uint64_t sub_2592A5E9C()
{
  uint64_t v1 = sub_259264E74(0xD000000000000015, 0x800000025930E220, 0x94049F30F7200000);
  uint64_t v3 = v2;
  sub_25930A510();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  return MEMORY[0x270FA2498](sub_2592A5F54, 0, 0);
}

uint64_t sub_2592A5F54()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v4 = sub_2592A84EC(&qword_26A37E878, MEMORY[0x263F8F710]);
  sub_25930A840();
  sub_2592A84EC(&qword_26A37E880, MEMORY[0x263F8F6D8]);
  sub_25930A530();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[24] = v5;
  v0[25] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[26] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_2592A60E8;
  uint64_t v8 = v0[16];
  uint64_t v7 = v0[17];
  return MEMORY[0x270FA2380](v8, v0 + 2, v7, v4);
}

uint64_t sub_2592A60E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 192))(*(void *)(v2 + 128), *(void *)(v2 + 104));
    uint64_t v3 = sub_2592A6554;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + 144);
    uint64_t v6 = *(void *)(v2 + 152);
    uint64_t v8 = *(void *)(v2 + 136);
    (*(void (**)(void, void))(v2 + 192))(*(void *)(v2 + 128), *(void *)(v2 + 104));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v4 = *(void *)(v2 + 176);
    uint64_t v5 = *(void *)(v2 + 184);
    uint64_t v3 = sub_2592A6248;
  }
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_2592A6248()
{
  uint64_t v15 = v0;
  uint64_t v1 = v0 + 80;
  if (sub_2592A5358())
  {
    if (qword_26B2F3B80 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_259309860();
    __swift_project_value_buffer(v2, (uint64_t)qword_26B2F3B68);
    swift_retain();
    uint64_t v3 = sub_259309840();
    os_log_type_t v4 = sub_25930A1D0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v14 = v6;
      *(_DWORD *)uint64_t v5 = 136315138;
      sub_259309E90();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v8 = *(void *)(*(void *)v1 + 16);
      unint64_t v7 = *(void *)(*(void *)v1 + 24);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 72) = sub_25924FC14(v8, v7, &v14);
      sub_25930A2A0();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_25921A000, v3, v4, "%s: No More Requests, all done!", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v6, -1, -1);
      MEMORY[0x25A2DBAF0](v5, -1, -1);
    }
    else
    {
      swift_release();
    }

    sub_2592A2C14(0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    sub_2592A69FC(*(void *)(v0 + 88), *(NSObject **)(v0 + 96));
    uint64_t v9 = sub_259264E74(0xD000000000000015, 0x800000025930E220, 0x94049F30F7200000);
    uint64_t v11 = v10;
    sub_25930A510();
    *(void *)(v0 + 40) = v9;
    *(void *)(v0 + 48) = v11;
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(unsigned char *)(v0 + 32) = 1;
    return MEMORY[0x270FA2498](sub_2592A5F54, 0, 0);
  }
}

uint64_t sub_2592A6554()
{
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  return MEMORY[0x270FA2498](sub_2592A65C8, v1, v2);
}

uint64_t sub_2592A65C8()
{
  char v20 = v0;
  if (qword_26B2F3B80 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[27];
  uint64_t v2 = sub_259309860();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B2F3B68);
  swift_retain();
  id v3 = v1;
  swift_retain();
  id v4 = v1;
  uint64_t v5 = sub_259309840();
  os_log_type_t v6 = sub_25930A1D0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    int v17 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = v18;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_259309E90();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v8 = v0[10];
    uint64_t v9 = *(void *)(v8 + 16);
    unint64_t v10 = *(void *)(v8 + 24);
    swift_bridgeObjectRetain();
    v0[7] = sub_25924FC14(v9, v10, &v19);
    sub_25930A2A0();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v7 + 12) = 2112;
    sub_259309E90();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v11 = (void *)v0[27];
    id v12 = v11;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v13;
    sub_25930A2A0();
    *int v17 = v13;

    _os_log_impl(&dword_25921A000, v5, v6, "%s: Failed to sleep during timeout task: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E078);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v17, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25A2DBAF0](v18, -1, -1);
    MEMORY[0x25A2DBAF0](v7, -1, -1);
  }
  else
  {
    uint64_t v14 = (void *)v0[27];

    swift_release_n();
  }
  sub_2592A2C14(0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_2592A6950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v10;
  *unint64_t v10 = v6;
  v10[1] = sub_2592438A0;
  return sub_2592A5CD8(a4, a5, a6);
}

void sub_2592A69FC(uint64_t a1, NSObject *a2)
{
  id v3 = v2;
  uint64_t v62 = a1;
  os_log_t v63 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_25930A500();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v54 - v10;
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for CommunicationActor();
  uint64_t v64 = sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (sub_2592A5358())
  {
    if (qword_26B2F3B80 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_259309860();
    __swift_project_value_buffer(v13, (uint64_t)qword_26B2F3B68);
    swift_retain();
    uint64_t v14 = sub_259309840();
    os_log_type_t v15 = sub_25930A1A0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v66 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      sub_259309E90();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v18 = v2[2];
      unint64_t v19 = v2[3];
      swift_bridgeObjectRetain();
      uint64_t v65 = sub_25924FC14(v18, v19, &v66);
      sub_25930A2A0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25921A000, v14, v15, "%s: Checked timeout requests, is empty, returning.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v17, -1, -1);
      MEMORY[0x25A2DBAF0](v16, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    uint64_t v60 = v4;
    if (qword_26B2F3B80 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_259309860();
    uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_26B2F3B68);
    swift_retain();
    uint64_t v59 = v21;
    uint64_t v22 = sub_259309840();
    int v23 = sub_25930A1A0();
    BOOL v24 = os_log_type_enabled(v22, (os_log_type_t)v23);
    uint64_t v61 = v12;
    if (v24)
    {
      int v56 = v23;
      uint64_t v58 = v6;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v66 = v55;
      *(_DWORD *)uint64_t v25 = 136315394;
      sub_259309E90();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v57 = v5;
      uint64_t v26 = v3[2];
      unint64_t v27 = v3[3];
      swift_bridgeObjectRetain();
      uint64_t v65 = sub_25924FC14(v26, v27, &v66);
      sub_25930A2A0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      sub_259309E90();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v28 = sub_25930A970();
      uint64_t v65 = sub_25924FC14(v28, v29, &v66);
      sub_25930A2A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_25921A000, v22, (os_log_type_t)v56, "%s: Checking for timeout requests that are over %s old.", (uint8_t *)v25, 0x16u);
      uint64_t v30 = v55;
      swift_arrayDestroy();
      MEMORY[0x25A2DBAF0](v30, -1, -1);
      MEMORY[0x25A2DBAF0](v25, -1, -1);

      uint64_t v5 = v57;
      uint64_t v6 = v58;
    }
    else
    {

      swift_release();
    }
    sub_25930A4D0();
    uint64_t v31 = sub_25930A9A0();
    uint64_t v32 = MEMORY[0x25A2DB1F0](v31);
    MEMORY[0x25A2DAD60](v32);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v6 + 8);
    v33(v8, v5);
    uint64_t v34 = sub_2592A54A8((uint64_t)v11);
    v33(v11, v5);
    uint64_t v66 = v34;
    uint64_t v35 = *(void *)(v60 + 80);
    uint64_t v36 = type metadata accessor for InFlightRequest();
    uint64_t v37 = sub_259309E70();
    uint64_t WitnessTable = swift_getWitnessTable();
    if (sub_25930A150())
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      id v39 = sub_259309840();
      int v40 = sub_25930A1D0();
      if (os_log_type_enabled(v39, (os_log_type_t)v40))
      {
        LODWORD(v62) = v40;
        os_log_t v63 = v39;
        uint64_t v41 = swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        uint64_t v66 = v60;
        *(_DWORD *)uint64_t v41 = 136315650;
        sub_259309E90();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v42 = v3[2];
        unint64_t v43 = v3[3];
        swift_bridgeObjectRetain();
        uint64_t v65 = sub_25924FC14(v42, v43, &v66);
        sub_25930A2A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 12) = 2048;
        sub_259309E90();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v44 = MEMORY[0x25A2DA690](v34, v36);
        swift_bridgeObjectRelease();
        uint64_t v65 = v44;
        sub_25930A2A0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 22) = 2080;
        sub_259309E90();
        uint64_t isCurrentExecutor = swift_task_isCurrentExecutor();
        if ((isCurrentExecutor & 1) == 0) {
          uint64_t isCurrentExecutor = swift_task_reportUnexpectedExecutor();
        }
        uint64_t v65 = v34;
        MEMORY[0x270FA5388](isCurrentExecutor);
        *(&v54 - 2) = v35;
        uint64_t v46 = MEMORY[0x263F8E8F8];
        uint64_t v48 = sub_259255A84((void (*)(char *, char *))sub_2592A84AC, (uint64_t)(&v54 - 4), v37, MEMORY[0x263F8E8F8], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v47);
        swift_bridgeObjectRelease();
        uint64_t v49 = MEMORY[0x25A2DA610](v48, v46);
        unint64_t v51 = v50;
        swift_bridgeObjectRelease();
        uint64_t v65 = sub_25924FC14(v49, v51, &v66);
        sub_25930A2A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        os_log_t v52 = v63;
        _os_log_impl(&dword_25921A000, v63, (os_log_type_t)v62, "%s: Timed out %ld requests: %s", (uint8_t *)v41, 0x20u);
        uint64_t v53 = v60;
        swift_arrayDestroy();
        MEMORY[0x25A2DBAF0](v53, -1, -1);
        MEMORY[0x25A2DBAF0](v41, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
    }
  }
}

uint64_t sub_2592A73F4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t result = type metadata accessor for InFlightRequest();
  *a2 = *(_DWORD *)(a1 + *(int *)(result + 32));
  return result;
}

uint64_t MessageDemultiplexer.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t MessageDemultiplexer.__deallocating_deinit()
{
  MessageDemultiplexer.deinit();
  return swift_deallocClassInstance();
}

BOOL static DemuxError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DemuxError.hash(into:)()
{
  return sub_25930A8D0();
}

uint64_t DemuxError.hashValue.getter()
{
  return sub_25930A910();
}

uint64_t sub_2592A75EC()
{
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

unint64_t sub_2592A76E8()
{
  unint64_t result = qword_26A37E848;
  if (!qword_26A37E848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E848);
  }
  return result;
}

unint64_t sub_2592A7740()
{
  unint64_t result = qword_26A37E858;
  if (!qword_26A37E858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E858);
  }
  return result;
}

uint64_t sub_2592A7794()
{
  uint64_t result = sub_25930A500();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2592A7854(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[7];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_25930A500();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[9];
    *(_DWORD *)((char *)v7 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    uint64_t v14 = (uint64_t *)((char *)v7 + v13);
    os_log_type_t v15 = (uint64_t *)((char *)a2 + v13);
    if (*v15)
    {
      uint64_t v16 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v16;
      swift_retain();
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    }
    *(uint64_t *)((char *)v7 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  }
  return v7;
}

uint64_t sub_2592A7990(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_25930A500();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 36));
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

void *sub_2592A7A3C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25930A500();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[9];
  *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  if (*v13)
  {
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  }
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

void *sub_2592A7B2C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25930A500();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
  uint64_t v10 = a3[9];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)((char *)a2 + v10);
  if (!*(void *)((char *)a1 + v10))
  {
    if (v13)
    {
      *uint64_t v11 = v13;
      v11[1] = *((void *)v12 + 1);
      swift_retain();
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    goto LABEL_8;
  }
  if (!v13)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
    uint64_t v14 = type metadata accessor for AsyncThrowingChannel.Iterator();
    (*(void (**)(void *, uint64_t))(*(void *)(v14 - 8) + 8))(v11, v14);
    goto LABEL_7;
  }
  *uint64_t v11 = v13;
  swift_retain();
  swift_release();
  v11[1] = *((void *)v12 + 1);
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

void *sub_2592A7CA8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25930A500();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

void *sub_2592A7D54(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25930A500();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  if (!*(void *)((char *)a1 + v10)) {
    goto LABEL_5;
  }
  if (!*(void *)v12)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B2F3D70);
    uint64_t v13 = type metadata accessor for AsyncThrowingChannel.Iterator();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
LABEL_5:
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    goto LABEL_6;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  swift_release();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_release();
LABEL_6:
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t sub_2592A7E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2592A7EA8);
}

uint64_t sub_2592A7EA8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25930A500();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2592A7F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2592A7F6C);
}

void *sub_2592A7F6C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25930A500();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2592A8014()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for MessageDemultiplexer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for MessageDemultiplexer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MessageDemultiplexer);
}

uint64_t dispatch thunk of MessageDemultiplexer.__allocating_init(timeout:logTag:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 200))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of MessageDemultiplexer.sendRequest(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of MessageDemultiplexer.readCount(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of MessageDemultiplexer.next(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 224) + **(int **)(*(void *)v2 + 224));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25921D238;
  return v8(a1, a2);
}

uint64_t dispatch thunk of MessageDemultiplexer.send(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 232) + **(int **)(*(void *)v2 + 232));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_2592438A0;
  return v8(a1, a2);
}

uint64_t dispatch thunk of MessageDemultiplexer.finish(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of MessageDemultiplexer.error(_:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of MessageDemultiplexer.isEmpty.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

unsigned char *storeEnumTagSinglePayload for DemuxError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2592A8474);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DemuxError()
{
  return &type metadata for DemuxError;
}

uint64_t sub_2592A84AC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_2592A73F4(a1, a2);
}

uint64_t sub_2592A84CC()
{
  return sub_2592A59CC() & 1;
}

uint64_t sub_2592A84EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2592A8534()
{
  if (qword_26B2F3930 != -1) {
    swift_once();
  }
  type metadata accessor for CommunicationActor();
  sub_2592A84EC((unint64_t *)&qword_26B2F3938, (void (*)(uint64_t))type metadata accessor for CommunicationActor);
  sub_259309E90();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  return *(void *)(v0 + 72);
}

uint64_t sub_2592A8614()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2592A8654()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_25921D238;
  unsigned int v6 = (void *)swift_task_alloc();
  uint64_t v5[2] = v6;
  *unsigned int v6 = v5;
  v6[1] = sub_2592438A0;
  return sub_2592A5CD8(v2, v3, v4);
}

uint64_t sub_2592A8740(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37CE58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for MessageError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2592A886CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageError()
{
  return &type metadata for MessageError;
}

unint64_t sub_2592A88A8()
{
  unint64_t result = qword_26A37E898;
  if (!qword_26A37E898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E898);
  }
  return result;
}

uint64_t sub_2592A88FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2592A9E40(a1, a2, *a3, a4);
}

uint64_t sub_2592A8918@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  LODWORD(v34) = a3;
  uint64_t v28 = a4;
  uint64_t v7 = sub_259309440();
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2593095D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for ShuffleIDProto();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v32 = a1;
  unint64_t v33 = a2;
  uint64_t v31 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  sub_259261DE0(a1, a2);
  sub_2593095C0();
  sub_2592AC4FC(&qword_26A37E438, (void (*)(uint64_t))type metadata accessor for ShuffleIDProto);
  sub_259309720();
  if (v4) {
    return sub_259261F50(a1, a2);
  }
  sub_2592AC5A4((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ShuffleIDProto);
  uint64_t v18 = *(void *)v13;
  unint64_t v19 = *((void *)v13 + 1);
  LOBYTE(v29) = v34;
  sub_259261DE0(v18, v19);
  UUID.init(serialized:version:)(v18, v19);
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v34 = sub_259277568(v20);
  swift_bridgeObjectRelease();
  LOBYTE(v19) = v13[24];
  int v21 = v13[26];
  int v25 = v13[25];
  int v26 = v21;
  sub_2592AC544((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ShuffleIDProto);
  uint64_t v22 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v28, v9, v7);
  sub_259261F50(a1, a2);
  int v23 = (int *)type metadata accessor for ShuffleID();
  *(void *)(v22 + v23[5]) = v34;
  *(unsigned char *)(v22 + v23[6]) = v19;
  *(unsigned char *)(v22 + v23[7]) = v25;
  *(unsigned char *)(v22 + v23[8]) = v26;
  return sub_2592AC544((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ShuffleIDProto);
}

uint64_t sub_2592A8C80@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  LODWORD(v30) = a3;
  uint64_t v24 = a4;
  uint64_t v7 = sub_259309440();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2593095D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = type metadata accessor for AlbumIDProto();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v23 - v15;
  uint64_t v28 = a1;
  unint64_t v29 = a2;
  uint64_t v27 = 0;
  long long v25 = 0u;
  long long v26 = 0u;
  sub_259261DE0(a1, a2);
  sub_2593095C0();
  sub_2592AC4FC(&qword_26A37E418, (void (*)(uint64_t))type metadata accessor for AlbumIDProto);
  sub_259309720();
  if (v4) {
    return sub_259261F50(a1, a2);
  }
  sub_2592AC5A4((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AlbumIDProto);
  uint64_t v18 = v13[2];
  unint64_t v19 = v13[3];
  LOBYTE(v25) = v30;
  sub_259261DE0(v18, v19);
  UUID.init(serialized:version:)(v18, v19);
  uint64_t v20 = v13[1];
  uint64_t v30 = *v13;
  swift_bridgeObjectRetain();
  sub_2592AC544((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AlbumIDProto);
  uint64_t v21 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v24, v9, v7);
  sub_259261F50(a1, a2);
  uint64_t v22 = (void *)(v21 + *(int *)(type metadata accessor for AlbumID() + 20));
  *uint64_t v22 = v30;
  v22[1] = v20;
  return sub_2592AC544((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AlbumIDProto);
}

uint64_t sub_2592A8FB8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  uint64_t v9 = sub_2593095D0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t PhotoResponseProto = type metadata accessor for GeneratePhotoResponseProto(0);
  MEMORY[0x270FA5388](PhotoResponseProto);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v17 - v14;
  v19[0] = a1;
  v19[1] = a2;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_259261DE0(a1, a2);
  sub_2593095C0();
  sub_2592AC4FC(&qword_26A37E318, (void (*)(uint64_t))type metadata accessor for GeneratePhotoResponseProto);
  sub_259309720();
  if (v4) {
    return sub_259261F50(a1, a2);
  }
  sub_2592AC5A4((uint64_t)v15, (uint64_t)v12, type metadata accessor for GeneratePhotoResponseProto);
  LOBYTE(v19[0]) = a3;
  GeneratePhotoResponse.init(protobuf:version:)((uint64_t)v12, (unsigned __int8 *)v19, v17);
  sub_259261F50(a1, a2);
  uint64_t result = sub_2592AC544((uint64_t)v15, type metadata accessor for GeneratePhotoResponseProto);
  *a4 = *(void *)&v17[0];
  return result;
}

uint64_t sub_2592A91D0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  uint64_t v9 = sub_2593095D0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = type metadata accessor for FetchByDayResponseProto(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (unsigned int *)((char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v18 - v14;
  v20[0] = a1;
  v20[1] = a2;
  uint64_t v19 = 0;
  memset(v18, 0, sizeof(v18));
  sub_259261DE0(a1, a2);
  sub_2593095C0();
  sub_2592AC4FC(&qword_26A37E2F0, (void (*)(uint64_t))type metadata accessor for FetchByDayResponseProto);
  sub_259309720();
  if (v4) {
    return sub_259261F50(a1, a2);
  }
  sub_2592AC5A4((uint64_t)v15, (uint64_t)v12, type metadata accessor for FetchByDayResponseProto);
  LOBYTE(v20[0]) = a3;
  FetchByDayResponse.init(protobuf:version:)(v12, (unsigned __int8 *)v20, v18);
  sub_259261F50(a1, a2);
  uint64_t result = sub_2592AC544((uint64_t)v15, type metadata accessor for FetchByDayResponseProto);
  uint64_t v17 = *((void *)&v18[0] + 1);
  *a4 = *(void *)&v18[0];
  a4[1] = v17;
  return result;
}

uint64_t sub_2592A93E8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_2593095D0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = type metadata accessor for StoredPhotoLayoutProto(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v17 - v14;
  uint64_t v19 = a1;
  unint64_t v20 = a2;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_259261DE0(a1, a2);
  sub_2593095C0();
  sub_2592AC4FC(&qword_26A37E748, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayoutProto);
  sub_259309720();
  if (v4) {
    return sub_259261F50(a1, a2);
  }
  sub_2592AC5A4((uint64_t)v15, (uint64_t)v12, type metadata accessor for StoredPhotoLayoutProto);
  LOBYTE(v17[0]) = a3;
  StoredPhotoLayout.init(protobuf:version:)((uint64_t)v12, a4);
  sub_259261F50(a1, a2);
  return sub_2592AC544((uint64_t)v15, type metadata accessor for StoredPhotoLayoutProto);
}

uint64_t sub_2592A95F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_2593095D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for StoredPhotoLayoutRectProto(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v17 - v12;
  uint64_t v19 = a1;
  unint64_t v20 = a2;
  uint64_t v18 = 0;
  memset(&v17[1], 0, 32);
  sub_259261DE0(a1, a2);
  sub_2593095C0();
  sub_2592AC4FC(&qword_26A37E770, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayoutRectProto);
  sub_259309720();
  if (v3) {
    return sub_259261F50(a1, a2);
  }
  sub_2592AC5A4((uint64_t)v13, (uint64_t)v10, type metadata accessor for StoredPhotoLayoutRectProto);
  v17[0] = *(_OWORD *)v10;
  uint64_t v15 = *((void *)v10 + 2);
  uint64_t v16 = *((void *)v10 + 3);
  sub_2592AC544((uint64_t)v10, type metadata accessor for StoredPhotoLayoutRectProto);
  sub_259261F50(a1, a2);
  uint64_t result = sub_2592AC544((uint64_t)v13, type metadata accessor for StoredPhotoLayoutRectProto);
  *(_OWORD *)a3 = v17[0];
  *(void *)(a3 + 16) = v15;
  *(void *)(a3 + 24) = v16;
  return result;
}

uint64_t sub_2592A9804@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_2593095D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for StoredPhotoLayoutImageLocationProto(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v15 - v12;
  uint64_t v17 = a1;
  unint64_t v18 = a2;
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_259261DE0(a1, a2);
  sub_2593095C0();
  sub_2592AC4FC(&qword_26A37E768, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayoutImageLocationProto);
  sub_259309720();
  if (v3) {
    return sub_259261F50(a1, a2);
  }
  sub_2592AC5A4((uint64_t)v13, (uint64_t)v10, type metadata accessor for StoredPhotoLayoutImageLocationProto);
  StoredPhotoLayout.ImageLocation.init(protobuf:version:)((uint64_t)v10, a3);
  sub_259261F50(a1, a2);
  return sub_2592AC544((uint64_t)v13, type metadata accessor for StoredPhotoLayoutImageLocationProto);
}

uint64_t sub_2592A9A00@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v7 = sub_2593095D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for SyncFacesRequestProto(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (void *)((char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v15 - v12;
  uint64_t v17 = a1;
  unint64_t v18 = a2;
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_259261DE0(a1, a2);
  sub_2593095C0();
  sub_2592AC4FC(&qword_26A37E320, (void (*)(uint64_t))type metadata accessor for SyncFacesRequestProto);
  sub_259309720();
  if (v3) {
    return sub_259261F50(a1, a2);
  }
  sub_2592AC5A4((uint64_t)v13, (uint64_t)v10, type metadata accessor for SyncFacesRequestProto);
  SyncFacesRequest.init(protobuf:version:)(v10, v15);
  sub_259261F50(a1, a2);
  uint64_t result = sub_2592AC544((uint64_t)v13, type metadata accessor for SyncFacesRequestProto);
  *a3 = v15[0];
  return result;
}

uint64_t sub_2592A9C08@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_2592A9C20(a1, a2, a3);
}

uint64_t sub_2592A9C20@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_2593095D0();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t PhotoRequestProto = type metadata accessor for GeneratePhotoRequestProto(0);
  MEMORY[0x270FA5388](PhotoRequestProto);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v15 - v12;
  uint64_t v17 = a1;
  unint64_t v18 = a2;
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_259261DE0(a1, a2);
  sub_2593095C0();
  sub_2592AC4FC(&qword_26A37E310, (void (*)(uint64_t))type metadata accessor for GeneratePhotoRequestProto);
  sub_259309720();
  if (v3) {
    return sub_259261F50(a1, a2);
  }
  sub_2592AC5A4((uint64_t)v13, (uint64_t)v10, type metadata accessor for GeneratePhotoRequestProto);
  GeneratePhotoRequest.init(protobuf:version:)((uint64_t)v10, v15);
  sub_259261F50(a1, a2);
  uint64_t result = sub_2592AC544((uint64_t)v13, type metadata accessor for GeneratePhotoRequestProto);
  *a3 = *(void *)&v15[0];
  return result;
}

uint64_t sub_2592A9E28@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  return sub_2592A9E40(a1, a2, a3, a4);
}

uint64_t sub_2592A9E40@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v34 = a3;
  uint64_t v28 = a4;
  uint64_t v7 = sub_259309440();
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2593095D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t FaceRequestProto = type metadata accessor for FetchFaceRequestProto(0);
  MEMORY[0x270FA5388](FaceRequestProto);
  uint64_t v13 = (uint64_t *)((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v32 = a1;
  unint64_t v33 = a2;
  uint64_t v31 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  sub_259261DE0(a1, a2);
  sub_2593095C0();
  sub_2592AC4FC(&qword_26A37E2E8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
  sub_259309720();
  if (v4) {
    return sub_259261F50(a1, a2);
  }
  uint64_t v26 = v7;
  sub_2592AC5A4((uint64_t)v16, (uint64_t)v13, type metadata accessor for FetchFaceRequestProto);
  uint64_t v19 = *v13;
  unint64_t v18 = v13[1];
  LOBYTE(v29) = v34;
  sub_259261DE0(v19, v18);
  UUID.init(serialized:version:)(v19, v18);
  unint64_t v20 = (unsigned int *)((char *)v13 + *(int *)(FaceRequestProto + 24));
  char v21 = *((unsigned char *)v20 + 4);
  if (v21) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = *v20;
  }
  sub_2592AC544((uint64_t)v13, type metadata accessor for FetchFaceRequestProto);
  uint64_t v23 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v28, v9, v26);
  sub_259261F50(a1, a2);
  uint64_t v24 = v23 + *(int *)(type metadata accessor for FetchFaceRequest() + 20);
  *(void *)uint64_t v24 = v22;
  *(unsigned char *)(v24 + 8) = v21;
  return sub_2592AC544((uint64_t)v16, type metadata accessor for FetchFaceRequestProto);
}

uint64_t sub_2592AA17C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return sub_2592AA194(a1, a2, a3, a4);
}

uint64_t sub_2592AA194@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_2593095D0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = type metadata accessor for StoredPhotoProto(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v17 - v14;
  uint64_t v19 = a1;
  unint64_t v20 = a2;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_259261DE0(a1, a2);
  sub_2593095C0();
  sub_2592AC4FC(&qword_26A37E308, (void (*)(uint64_t))type metadata accessor for StoredPhotoProto);
  sub_259309720();
  if (v4) {
    return sub_259261F50(a1, a2);
  }
  sub_2592AC5A4((uint64_t)v15, (uint64_t)v12, type metadata accessor for StoredPhotoProto);
  LOBYTE(v17[0]) = a3;
  StoredPhoto.init(protobuf:version:)((uint64_t)v12, (unsigned __int8 *)v17, a4);
  sub_259261F50(a1, a2);
  return sub_2592AC544((uint64_t)v15, type metadata accessor for StoredPhotoProto);
}

uint64_t ProtobufSerializable.init(serialized:version:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned __int8 *a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v23 = a6;
  uint64_t v25 = a3;
  uint64_t v10 = sub_2593095D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = &v20[-v15];
  int v21 = *v25;
  uint64_t v28 = a1;
  unint64_t v29 = a2;
  uint64_t v27 = 0;
  memset(v26, 0, sizeof(v26));
  sub_259261DE0(a1, a2);
  uint64_t v24 = a5;
  uint64_t v25 = a4;
  swift_getAssociatedConformanceWitness();
  sub_2593095C0();
  uint64_t v17 = v30;
  sub_259309720();
  if (v17) {
    return sub_259261F50(a1, a2);
  }
  uint64_t v19 = v22;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 16))(v13, v16, AssociatedTypeWitness);
  LOBYTE(v26[0]) = v21;
  (*(void (**)(unsigned char *, _OWORD *, unsigned __int8 *))(v24 + 32))(v13, v26, v25);
  sub_259261F50(a1, a2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v19 + 8))(v16, AssociatedTypeWitness);
}

uint64_t sub_2592AA618(unsigned char *a1)
{
  uint64_t FaceRequestProto = type metadata accessor for FetchFaceRequestProto(0);
  MEMORY[0x270FA5388](FaceRequestProto);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v4) = *a1;
  uint64_t v9 = v1;
  char v10 = v4;
  sub_2592AC4FC(&qword_26A37E2E8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
  sub_259309750();
  uint64_t v6 = sub_259309710();
  sub_2592AC544((uint64_t)v5, type metadata accessor for FetchFaceRequestProto);
  return v6;
}

uint64_t ProtobufSerializable.serialized(version:)(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  double v10 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v14 - v11;
  char v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, double))(a3 + 40))(&v15, a2, a3, v10);
  if (!v4)
  {
    swift_getAssociatedConformanceWitness();
    uint64_t v3 = sub_259309710();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
  }
  return v3;
}

uint64_t sub_2592AA8F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X2>, void *a4@<X8>)
{
  return sub_2592A91D0(a1, a2, *a3, a4);
}

uint64_t sub_2592AA90C(unsigned char *a1)
{
  uint64_t v3 = type metadata accessor for FetchByDayResponseProto(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v4) = *a1;
  uint64_t v6 = v1[1];
  uint64_t v10 = *v1;
  uint64_t v11 = v6;
  char v12 = v4;
  sub_2592AC4FC(&qword_26A37E2F0, (void (*)(uint64_t))type metadata accessor for FetchByDayResponseProto);
  sub_259309750();
  uint64_t v7 = sub_259309710();
  sub_2592AC544((uint64_t)v5, type metadata accessor for FetchByDayResponseProto);
  return v7;
}

uint64_t sub_2592AAA54@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_2592A9C20(a1, a2, a3);
}

uint64_t sub_2592AAA70(unsigned char *a1)
{
  uint64_t PhotoRequestProto = type metadata accessor for GeneratePhotoRequestProto(0);
  MEMORY[0x270FA5388](PhotoRequestProto);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v4) = *a1;
  uint64_t v9 = *v1;
  char v10 = v4;
  sub_2592AC4FC(&qword_26A37E310, (void (*)(uint64_t))type metadata accessor for GeneratePhotoRequestProto);
  sub_259309750();
  uint64_t v6 = sub_259309710();
  sub_2592AC544((uint64_t)v5, type metadata accessor for GeneratePhotoRequestProto);
  return v6;
}

uint64_t sub_2592AABB8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X2>, void *a4@<X8>)
{
  return sub_2592A8FB8(a1, a2, *a3, a4);
}

uint64_t sub_2592AABD4(unsigned char *a1)
{
  uint64_t PhotoResponseProto = type metadata accessor for GeneratePhotoResponseProto(0);
  MEMORY[0x270FA5388](PhotoResponseProto);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v4) = *a1;
  uint64_t v9 = *v1;
  char v10 = v4;
  sub_2592AC4FC(&qword_26A37E318, (void (*)(uint64_t))type metadata accessor for GeneratePhotoResponseProto);
  sub_259309750();
  uint64_t v6 = sub_259309710();
  sub_2592AC544((uint64_t)v5, type metadata accessor for GeneratePhotoResponseProto);
  return v6;
}

uint64_t sub_2592AAD1C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_2592A9A00(a1, a2, a3);
}

uint64_t sub_2592AAD38(unsigned char *a1)
{
  uint64_t v3 = type metadata accessor for SyncFacesRequestProto(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v4) = *a1;
  long long v9 = *v1;
  char v10 = v4;
  sub_2592AC4FC(&qword_26A37E320, (void (*)(uint64_t))type metadata accessor for SyncFacesRequestProto);
  sub_259309750();
  uint64_t v6 = sub_259309710();
  sub_2592AC544((uint64_t)v5, type metadata accessor for SyncFacesRequestProto);
  return v6;
}

uint64_t sub_2592AAE80@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned __int8 *a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X8>)
{
  unsigned __int8 v11 = *a3;
  uint64_t WitnessTable = swift_getWitnessTable();
  return ProtobufSerializable.init(serialized:version:)(a1, a2, &v11, a4, WitnessTable, a5);
}

uint64_t sub_2592AAF04(char *a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return ProtobufSerializable.serialized(version:)(a1, a2, WitnessTable);
}

uint64_t sub_2592AAF60@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2592A8C80(a1, a2, *a3, a4);
}

uint64_t sub_2592AAF7C(unsigned char *a1)
{
  uint64_t v3 = type metadata accessor for AlbumIDProto();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v4) = *a1;
  uint64_t v9 = v1;
  char v10 = v4;
  sub_2592AC4FC(&qword_26A37E418, (void (*)(uint64_t))type metadata accessor for AlbumIDProto);
  sub_259309750();
  uint64_t v6 = sub_259309710();
  sub_2592AC544((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AlbumIDProto);
  return v6;
}

uint64_t sub_2592AB0C0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2592A8918(a1, a2, *a3, a4);
}

uint64_t sub_2592AB0DC(unsigned char *a1)
{
  uint64_t v3 = type metadata accessor for ShuffleIDProto();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v4) = *a1;
  uint64_t v9 = v1;
  char v10 = v4;
  sub_2592AC4FC(&qword_26A37E438, (void (*)(uint64_t))type metadata accessor for ShuffleIDProto);
  sub_259309750();
  uint64_t v6 = sub_259309710();
  sub_2592AC544((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ShuffleIDProto);
  return v6;
}

uint64_t sub_2592AB220@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2592AA194(a1, a2, *a3, a4);
}

uint64_t sub_2592AB23C(unsigned char *a1)
{
  uint64_t v3 = type metadata accessor for StoredPhotoProto(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v4) = *a1;
  uint64_t v9 = v1;
  char v10 = v4;
  sub_2592AC4FC(&qword_26A37E308, (void (*)(uint64_t))type metadata accessor for StoredPhotoProto);
  sub_259309750();
  uint64_t v6 = sub_259309710();
  sub_2592AC544((uint64_t)v5, type metadata accessor for StoredPhotoProto);
  return v6;
}

uint64_t sub_2592AB380(uint64_t *a1, unsigned __int8 *a2)
{
  return sub_2592AB39C(a1, *a2);
}

uint64_t sub_2592AB39C(uint64_t *a1, int a2)
{
  int v26 = a2;
  uint64_t v4 = type metadata accessor for StoredPhotoProto(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v25 = (uint64_t)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = type metadata accessor for StoredPhoto(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  int64_t v15 = *(void *)(*a1 + 16);
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (v15)
  {
    uint64_t v28 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25925CCA4(0, v15, 0);
    uint64_t v17 = v14 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v18 = *(void *)(v5 + 72);
    uint64_t v23 = v14;
    uint64_t v24 = v18;
    while (1)
    {
      sub_2592AC5A4(v17, (uint64_t)v9, type metadata accessor for StoredPhotoProto);
      uint64_t v19 = v25;
      sub_2592AC5A4((uint64_t)v9, v25, type metadata accessor for StoredPhotoProto);
      unsigned __int8 v27 = v26;
      StoredPhoto.init(protobuf:version:)(v19, &v27, (uint64_t)v13);
      sub_2592AC544((uint64_t)v9, type metadata accessor for StoredPhotoProto);
      uint64_t v16 = v28;
      if (v2) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CCA4(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v28;
      }
      unint64_t v21 = *(void *)(v16 + 16);
      unint64_t v20 = *(void *)(v16 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_25925CCA4(v20 > 1, v21 + 1, 1);
        uint64_t v16 = v28;
      }
      *(void *)(v16 + 16) = v21 + 1;
      sub_2592AC494((uint64_t)v13, v16+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v21, type metadata accessor for StoredPhoto);
      v17 += v24;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        return v16;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v16;
}

uint64_t static CustomListProto<>.deserialize(list:version:)(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  LOBYTE(v19) = *a2;
  char v8 = v19;
  uint64_t v9 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = v9(&v19, AssociatedTypeWitness, a5);
  void v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  char v17 = v8;
  swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_259309E70();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F3D70);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_259255A84((void (*)(char *, char *))sub_2592AC2A0, (uint64_t)v16, v11, a3, v12, WitnessTable, MEMORY[0x263F8E4E0], (uint64_t)&v18);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_2592AB7C8@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, void *a3@<X8>)
{
  return sub_2592AB7E4(a1, *a2, a3);
}

uint64_t sub_2592AB7E4@<X0>(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X8>)
{
  int v30 = a2;
  uint64_t v5 = type metadata accessor for StoredPhoto(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  char v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StoredPhotoProto(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StoredPhotoListProto(0);
  MEMORY[0x270FA5388](v13);
  uint64_t v28 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (v15)
  {
    uint64_t v26 = v13;
    unsigned __int8 v27 = a3;
    uint64_t v32 = MEMORY[0x263F8EE78];
    sub_25925CDD8(0, v15, 0);
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v29 = *(void *)(v6 + 72);
    do
    {
      uint64_t v18 = sub_2592AC5A4(v17, (uint64_t)v8, type metadata accessor for StoredPhoto);
      MEMORY[0x270FA5388](v18);
      *(&v26 - 2) = (uint64_t)v8;
      *((unsigned char *)&v26 - 8) = v30;
      sub_2592AC4FC(&qword_26A37E308, (void (*)(uint64_t))type metadata accessor for StoredPhotoProto);
      uint64_t v19 = v31;
      sub_259309750();
      uint64_t v31 = v19;
      sub_2592AC544((uint64_t)v8, type metadata accessor for StoredPhoto);
      uint64_t v20 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25925CDD8(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v32;
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v21 = *(void *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_25925CDD8(v21 > 1, v22 + 1, 1);
        uint64_t v20 = v32;
      }
      *(void *)(v20 + 16) = v22 + 1;
      sub_2592AC494((uint64_t)v12, v20+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v22, type metadata accessor for StoredPhotoProto);
      v17 += v29;
      --v15;
    }
    while (v15);
    swift_release();
    a3 = v27;
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  *a3 = v16;
  uint64_t v23 = sub_2593095A0();
  MEMORY[0x270FA5388](v23);
  *(&v26 - 2) = (uint64_t)a3;
  sub_2592AC4FC(&qword_26A37E750, (void (*)(uint64_t))type metadata accessor for StoredPhotoListProto);
  uint64_t v24 = (uint64_t)v28;
  sub_259309750();
  return sub_2592AC430(v24, (uint64_t)a3);
}

uint64_t static CustomListProto<>.serialize(list:version:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v7 = *a2;
  uint64_t v20 = a1;
  uint64_t v15 = a3;
  uint64_t v16 = a4;
  uint64_t v17 = a5;
  char v18 = v7;
  uint64_t v8 = sub_259309E70();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2F3D70);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_259255A84((void (*)(char *, char *))sub_2592AC2C8, (uint64_t)v14, v8, AssociatedTypeWitness, v10, WitnessTable, MEMORY[0x263F8E4E0], (uint64_t)&v19);
  if (!v5)
  {
    uint64_t v13 = result;
    swift_getAssociatedTypeWitness();
    LOBYTE(v20) = v7;
    return (*(uint64_t (**)(uint64_t, uint64_t *))(a5 + 24))(v13, &v20);
  }
  return result;
}

uint64_t sub_2592ABD5C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2592A93E8(a1, a2, *a3, a4);
}

uint64_t sub_2592ABD78(unsigned char *a1)
{
  uint64_t v3 = type metadata accessor for StoredPhotoLayoutProto(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v4) = *a1;
  uint64_t v9 = v1;
  char v10 = v4;
  sub_2592AC4FC(&qword_26A37E748, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayoutProto);
  sub_259309750();
  uint64_t v6 = sub_259309710();
  sub_2592AC544((uint64_t)v5, type metadata accessor for StoredPhotoLayoutProto);
  return v6;
}

uint64_t sub_2592ABEBC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2592A9804(a1, a2, a3);
}

uint64_t sub_2592ABED8()
{
  uint64_t v1 = type metadata accessor for StoredPhotoLayoutImageLocationProto(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = v0;
  sub_2592AC4FC(&qword_26A37E768, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayoutImageLocationProto);
  sub_259309750();
  uint64_t v4 = sub_259309710();
  sub_2592AC544((uint64_t)v3, type metadata accessor for StoredPhotoLayoutImageLocationProto);
  return v4;
}

uint64_t sub_2592AC010@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2592A95F4(a1, a2, a3);
}

uint64_t sub_2592AC02C()
{
  uint64_t v1 = type metadata accessor for StoredPhotoLayoutRectProto(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v4 = v0[1];
  long long v8 = *v0;
  long long v9 = v4;
  sub_2592AC4FC(&qword_26A37E770, (void (*)(uint64_t))type metadata accessor for StoredPhotoLayoutRectProto);
  sub_259309750();
  uint64_t v5 = sub_259309710();
  sub_2592AC544((uint64_t)v3, type metadata accessor for StoredPhotoLayoutRectProto);
  return v5;
}

uint64_t sub_2592AC16C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v11 = *(void *)(a4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = &v18[-v14];
  (*(void (**)(unsigned char *, uint64_t, double))(v16 + 16))(&v18[-v14], a1, v13);
  char v19 = a2;
  uint64_t result = (*(uint64_t (**)(unsigned char *, char *, uint64_t, uint64_t))(v11 + 32))(v15, &v19, a3, v11);
  if (v6) {
    *a6 = v6;
  }
  return result;
}

uint64_t sub_2592AC2A0(uint64_t a1, void *a2)
{
  return sub_2592AC16C(a1, *(unsigned char *)(v2 + 40), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_2592AC2C8(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  char v8 = *(unsigned char *)(v2 + 40);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v6 + 8) + 40))(&v8, v5);
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t dispatch thunk of ProtobufSerializable.init(protobuf:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ProtobufSerializable.protobuf(version:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of static CustomListProto.deserialize(list:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of static CustomListProto.serialize(list:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ListProto.init(protoList:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ListProto.protoList(version:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

double *sub_2592AC3F4(double *a1)
{
  return sub_259292E04(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_2592AC414(void *a1)
{
  return sub_2592909B0(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_2592AC430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoredPhotoListProto(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2592AC494(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2592AC4FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2592AC544(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2592AC5A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t dispatch thunk of Serializable.init(serialized:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of Serializable.serialized(version:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of Serializable.gather(attachments:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of Serializable.save(attachments:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

BOOL static SerializationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SerializationError.hash(into:)()
{
  return sub_25930A8D0();
}

uint64_t SerializationError.hashValue.getter()
{
  return sub_25930A910();
}

unint64_t sub_2592AC72C()
{
  unint64_t result = qword_26A37E8A0;
  if (!qword_26A37E8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37E8A0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SerializationError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SerializationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2592AC8DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SerializationError()
{
  return &type metadata for SerializationError;
}

uint64_t AlbumIDProto.album.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AlbumIDProto.album.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *int v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AlbumIDProto.album.modify())()
{
  return nullsub_1;
}

uint64_t AlbumIDProto.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_259261DE0(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t AlbumIDProto.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_259261F50(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AlbumIDProto.id.modify())()
{
  return nullsub_1;
}

uint64_t AlbumIDProto.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AlbumIDProto() + 24);
  uint64_t v4 = sub_2593095B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AlbumIDProto()
{
  uint64_t result = qword_26A37E8D8;
  if (!qword_26A37E8D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AlbumIDProto.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AlbumIDProto() + 24);
  uint64_t v4 = sub_2593095B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*AlbumIDProto.unknownFields.modify())(void, void, void, void)
{
  return nullsub_1;
}

uint64_t AlbumIDProto.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(_OWORD *)(a1 + 16) = xmmword_259314C30;
  type metadata accessor for AlbumIDProto();
  return sub_2593095A0();
}

uint64_t static AlbumIDProto.protoMessageName.getter()
{
  return 0x5044496D75626C41;
}

uint64_t sub_2592ACC14()
{
  uint64_t v0 = sub_259309830();
  __swift_allocate_value_buffer(v0, qword_26A37E8A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A37E8A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F0);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2593131E0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "album";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_259309810();
  long long v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  char v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)char v10 = "id";
  *((void *)v10 + 1) = 2;
  unsigned char v10[16] = 2;
  v9();
  return sub_259309820();
}

uint64_t static AlbumIDProto._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26A37C6F8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309830();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26A37E8A8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t AlbumIDProto.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_259309610();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_259309660();
      }
      else if (result == 1)
      {
        sub_2593096A0();
      }
      uint64_t result = sub_259309610();
    }
  }
  return result;
}

uint64_t AlbumIDProto.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_2593097C0(), !v1))
  {
    uint64_t v5 = v0[2];
    unint64_t v6 = v0[3];
    switch(v6 >> 62)
    {
      case 1uLL:
        if ((int)v5 != v5 >> 32) {
          goto LABEL_11;
        }
        goto LABEL_12;
      case 2uLL:
        if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
          goto LABEL_11;
        }
        goto LABEL_12;
      case 3uLL:
        goto LABEL_12;
      default:
        if ((v6 & 0xFF000000000000) == 0) {
          goto LABEL_12;
        }
LABEL_11:
        uint64_t result = sub_259309790();
        if (!v1)
        {
LABEL_12:
          type metadata accessor for AlbumIDProto();
          uint64_t result = sub_259309590();
        }
        break;
    }
  }
  return result;
}

uint64_t AlbumIDProto.hashValue.getter()
{
  return sub_25930A910();
}

uint64_t sub_2592AD0C8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(_OWORD *)(a1 + 16) = xmmword_259314C30;
  return sub_2593095A0();
}

uint64_t sub_2592AD0FC()
{
  return 0x5044496D75626C41;
}

uint64_t sub_2592AD120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_2593095B0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_2592AD190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  uint64_t v5 = sub_2593095B0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_2592AD200())()
{
  return nullsub_1;
}

uint64_t sub_2592AD224()
{
  return AlbumIDProto.decodeMessage<A>(decoder:)();
}

uint64_t sub_2592AD23C()
{
  return AlbumIDProto.traverse<A>(visitor:)();
}

uint64_t sub_2592AD258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2592ADE24(&qword_26A37E8E8, (void (*)(uint64_t))type metadata accessor for AlbumIDProto);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2592AD2D8@<X0>(uint64_t a1@<X8>)
{
  if (qword_26A37C6F8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309830();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26A37E8A8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_2592AD380(uint64_t a1)
{
  uint64_t v2 = sub_2592ADE24(&qword_26A37E418, (void (*)(uint64_t))type metadata accessor for AlbumIDProto);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2592AD3EC()
{
  return sub_25930A910();
}

uint64_t sub_2592AD444()
{
  sub_2592ADE24(&qword_26A37E418, (void (*)(uint64_t))type metadata accessor for AlbumIDProto);
  return sub_259309740();
}

uint64_t sub_2592AD4C0()
{
  return sub_25930A910();
}

uint64_t _s10PhotosFace12AlbumIDProtoV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_2593095B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v17 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v11 || (char v12 = 0, (sub_25930A7C0() & 1) != 0))
  {
    if (sub_2592C3CD0(*((void *)a1 + 2), *((void *)a1 + 3), *((void *)a2 + 2), *((void *)a2 + 3)))
    {
      uint64_t v13 = type metadata accessor for AlbumIDProto();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v14(v10, &a1[*(int *)(v13 + 24)], v4);
      v14(v7, &a2[*(int *)(v13 + 24)], v4);
      sub_2592ADE24(&qword_26A37E3E0, MEMORY[0x263F50560]);
      char v12 = sub_259309B60();
      uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v7, v4);
      v15(v10, v4);
    }
    else
    {
      char v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t sub_2592AD6F4()
{
  return sub_2592ADE24(&qword_26A37E8C8, (void (*)(uint64_t))type metadata accessor for AlbumIDProto);
}

uint64_t sub_2592AD73C()
{
  return sub_2592ADE24(&qword_26A37E418, (void (*)(uint64_t))type metadata accessor for AlbumIDProto);
}

uint64_t sub_2592AD784()
{
  return sub_2592ADE24(&qword_26A37E8C0, (void (*)(uint64_t))type metadata accessor for AlbumIDProto);
}

uint64_t sub_2592AD7CC()
{
  return sub_2592ADE24(&qword_26A37E8D0, (void (*)(uint64_t))type metadata accessor for AlbumIDProto);
}

uint64_t *initializeBufferWithCopyOfBuffer for AlbumIDProto(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[2];
    unint64_t v9 = a2[3];
    swift_bridgeObjectRetain();
    sub_259261DE0(v8, v9);
    a1[2] = v8;
    a1[3] = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    BOOL v11 = (char *)a1 + v10;
    char v12 = (char *)a2 + v10;
    uint64_t v13 = sub_2593095B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t destroy for AlbumIDProto(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_259261F50(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for AlbumIDProto(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[2];
  unint64_t v8 = a2[3];
  swift_bridgeObjectRetain();
  sub_259261DE0(v7, v8);
  a1[2] = v7;
  a1[3] = v8;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  BOOL v11 = (char *)a2 + v9;
  uint64_t v12 = sub_2593095B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

void *assignWithCopy for AlbumIDProto(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  unint64_t v7 = a2[3];
  sub_259261DE0(v6, v7);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  a1[2] = v6;
  a1[3] = v7;
  sub_259261F50(v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  BOOL v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2593095B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for AlbumIDProto(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  unint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_2593095B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for AlbumIDProto(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a1[2];
  unint64_t v8 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_259261F50(v7, v8);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_2593095B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for AlbumIDProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2592ADC18);
}

uint64_t sub_2592ADC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2593095B0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AlbumIDProto(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2592ADCDC);
}

uint64_t sub_2592ADCDC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_2593095B0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2592ADD84()
{
  uint64_t result = sub_2593095B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2592ADE24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t (*StoredPhotoListProto.list.modify())()
{
  return nullsub_1;
}

uint64_t StoredPhotoListProto.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AE00C(type metadata accessor for StoredPhotoListProto, a1);
}

uint64_t type metadata accessor for StoredPhotoListProto(uint64_t a1)
{
  return sub_259296DD8(a1, (uint64_t *)&unk_26A37E968);
}

uint64_t StoredPhotoListProto.unknownFields.setter(uint64_t a1)
{
  return sub_2592AE0C4(a1, type metadata accessor for StoredPhotoListProto);
}

uint64_t (*StoredPhotoListProto.unknownFields.modify())(void, void, void, void)
{
  return nullsub_1;
}

uint64_t StoredPhotoListProto.init()@<X0>(void *a1@<X8>)
{
  return sub_2592AE1A0((void (*)(void))type metadata accessor for StoredPhotoListProto, a1);
}

uint64_t GenericListProto.list.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GenericListProto.list.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*GenericListProto.list.modify())()
{
  return nullsub_1;
}

uint64_t GenericListProto.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AE00C(type metadata accessor for GenericListProto, a1);
}

uint64_t sub_2592AE00C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t type metadata accessor for GenericListProto(uint64_t a1)
{
  return sub_259296DD8(a1, (uint64_t *)&unk_26A37E978);
}

uint64_t GenericListProto.unknownFields.setter(uint64_t a1)
{
  return sub_2592AE0C4(a1, type metadata accessor for GenericListProto);
}

uint64_t sub_2592AE0C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*GenericListProto.unknownFields.modify())(void, void, void, void)
{
  return nullsub_1;
}

uint64_t GenericListProto.init()@<X0>(void *a1@<X8>)
{
  return sub_2592AE1A0((void (*)(void))type metadata accessor for GenericListProto, a1);
}

uint64_t sub_2592AE1A0@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = MEMORY[0x263F8EE78];
  a1(0);
  return sub_2593095A0();
}

unint64_t static StoredPhotoListProto.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_2592AE204(uint64_t a1)
{
  return sub_2592AE710(a1, qword_26A37E900);
}

uint64_t static StoredPhotoListProto._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AE88C(&qword_26A37C700, (uint64_t)qword_26A37E900, a1);
}

uint64_t StoredPhotoListProto.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_259309610();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        type metadata accessor for StoredPhotoProto(0);
        sub_2592AEF00(&qword_26A37E308, (void (*)(uint64_t))type metadata accessor for StoredPhotoProto);
        sub_2593096E0();
      }
      uint64_t result = sub_259309610();
    }
  }
  return result;
}

uint64_t StoredPhotoListProto.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for StoredPhotoProto(0),
        sub_2592AEF00(&qword_26A37E308, (void (*)(uint64_t))type metadata accessor for StoredPhotoProto),
        uint64_t result = sub_2593097F0(),
        !v1))
  {
    type metadata accessor for StoredPhotoListProto(0);
    return sub_259309590();
  }
  return result;
}

uint64_t static StoredPhotoListProto.== infix(_:_:)(char *a1, char *a2)
{
  return sub_2592AEF48(a1, a2, (uint64_t (*)(void, void, double))sub_25926CF30, type metadata accessor for StoredPhotoListProto) & 1;
}

uint64_t StoredPhotoListProto.hashValue.getter()
{
  return sub_2592AEAB8((void (*)(void))type metadata accessor for StoredPhotoListProto, &qword_26A37E930, (void (*)(uint64_t))type metadata accessor for StoredPhotoListProto);
}

unint64_t sub_2592AE49C()
{
  return 0xD000000000000014;
}

uint64_t (*sub_2592AE4C0())()
{
  return nullsub_1;
}

uint64_t sub_2592AE4E4()
{
  return StoredPhotoListProto.decodeMessage<A>(decoder:)();
}

uint64_t sub_2592AE4FC()
{
  return StoredPhotoListProto.traverse<A>(visitor:)();
}

uint64_t sub_2592AE514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2592AEF00(&qword_26A37E990, (void (*)(uint64_t))type metadata accessor for StoredPhotoListProto);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2592AE590@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AED38(&qword_26A37C700, (uint64_t)qword_26A37E900, a1);
}

uint64_t sub_2592AE5B4(uint64_t a1)
{
  uint64_t v2 = sub_2592AEF00(&qword_26A37E750, (void (*)(uint64_t))type metadata accessor for StoredPhotoListProto);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2592AE624()
{
  sub_2592AEF00(&qword_26A37E750, (void (*)(uint64_t))type metadata accessor for StoredPhotoListProto);
  return sub_259309740();
}

uint64_t sub_2592AE6A4(char *a1, char *a2)
{
  return sub_2592AEF48(a1, a2, (uint64_t (*)(void, void, double))sub_25926CF30, type metadata accessor for StoredPhotoListProto) & 1;
}

unint64_t static GenericListProto.protoMessageName.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_2592AE704(uint64_t a1)
{
  return sub_2592AE710(a1, qword_26A37E918);
}

uint64_t sub_2592AE710(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_259309830();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F0);
  uint64_t v4 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2593131D0;
  unint64_t v7 = v6 + v5 + v4[14];
  *(void *)(v6 + v5) = 1;
  *(void *)unint64_t v7 = "list";
  *(void *)(v7 + 8) = 4;
  *(unsigned char *)(v7 + 16) = 2;
  uint64_t v8 = *MEMORY[0x263F50718];
  uint64_t v9 = sub_259309810();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  return sub_259309820();
}

uint64_t static GenericListProto._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AE88C(&qword_26A37C708, (uint64_t)qword_26A37E918, a1);
}

uint64_t sub_2592AE88C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_259309830();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t GenericListProto.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_259309610();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_259309650();
    }
  }
  return result;
}

uint64_t GenericListProto.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16) || (uint64_t result = sub_259309780(), !v1))
  {
    type metadata accessor for GenericListProto(0);
    return sub_259309590();
  }
  return result;
}

uint64_t static GenericListProto.== infix(_:_:)(char *a1, char *a2)
{
  return sub_2592AEF48(a1, a2, (uint64_t (*)(void, void, double))sub_25926D774, type metadata accessor for GenericListProto) & 1;
}

uint64_t GenericListProto.hashValue.getter()
{
  return sub_2592AEAB8((void (*)(void))type metadata accessor for GenericListProto, &qword_26A37E938, (void (*)(uint64_t))type metadata accessor for GenericListProto);
}

uint64_t sub_2592AEAB8(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_25930A910();
}

uint64_t sub_2592AEB40@<X0>(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  return sub_2593095A0();
}

unint64_t sub_2592AEB6C()
{
  return 0xD000000000000010;
}

uint64_t sub_2592AEB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_2592AEBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t sub_2592AEC68()
{
  return GenericListProto.decodeMessage<A>(decoder:)();
}

uint64_t sub_2592AEC80()
{
  return GenericListProto.traverse<A>(visitor:)();
}

uint64_t sub_2592AEC98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2592AEF00(&qword_26A37E988, (void (*)(uint64_t))type metadata accessor for GenericListProto);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2592AED14@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AED38(&qword_26A37C708, (uint64_t)qword_26A37E918, a1);
}

uint64_t sub_2592AED38@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_259309830();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t sub_2592AEDD4(uint64_t a1)
{
  uint64_t v2 = sub_2592AEF00((unint64_t *)&qword_26A37E958, (void (*)(uint64_t))type metadata accessor for GenericListProto);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2592AEE40()
{
  sub_2592AEF00((unint64_t *)&qword_26A37E958, (void (*)(uint64_t))type metadata accessor for GenericListProto);
  return sub_259309740();
}

uint64_t sub_2592AEEBC(char *a1, char *a2)
{
  return sub_2592AEF48(a1, a2, (uint64_t (*)(void, void, double))sub_25926D774, type metadata accessor for GenericListProto) & 1;
}

uint64_t sub_2592AEF00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2592AEF48(char *a1, char *a2, uint64_t (*a3)(void, void, double), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_2593095B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - v14;
  if (a3(*(void *)a1, *(void *)a2, v13))
  {
    uint64_t v16 = a4(0);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v17(v15, &a1[*(int *)(v16 + 20)], v8);
    v17(v11, &a2[*(int *)(v16 + 20)], v8);
    sub_2592AEF00(&qword_26A37E3E0, MEMORY[0x263F50560]);
    char v18 = sub_259309B60();
    char v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v11, v8);
    v19(v15, v8);
  }
  else
  {
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_2592AF110()
{
  return sub_2592AEF00(&qword_26A37E940, (void (*)(uint64_t))type metadata accessor for StoredPhotoListProto);
}

uint64_t sub_2592AF158()
{
  return sub_2592AEF00(&qword_26A37E750, (void (*)(uint64_t))type metadata accessor for StoredPhotoListProto);
}

uint64_t sub_2592AF1A0()
{
  return sub_2592AEF00(&qword_26A37E930, (void (*)(uint64_t))type metadata accessor for StoredPhotoListProto);
}

uint64_t sub_2592AF1E8()
{
  return sub_2592AEF00(&qword_26A37E948, (void (*)(uint64_t))type metadata accessor for StoredPhotoListProto);
}

uint64_t sub_2592AF230()
{
  return sub_2592AEF00(&qword_26A37E950, (void (*)(uint64_t))type metadata accessor for GenericListProto);
}

uint64_t sub_2592AF278()
{
  return sub_2592AEF00((unint64_t *)&qword_26A37E958, (void (*)(uint64_t))type metadata accessor for GenericListProto);
}

uint64_t sub_2592AF2C0()
{
  return sub_2592AEF00(&qword_26A37E938, (void (*)(uint64_t))type metadata accessor for GenericListProto);
}

uint64_t sub_2592AF308()
{
  return sub_2592AEF00(&qword_26A37E960, (void (*)(uint64_t))type metadata accessor for GenericListProto);
}

uint64_t getEnumTagSinglePayload for StoredPhotoListProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t storeEnumTagSinglePayload for StoredPhotoListProto(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t *_s10PhotosFace20StoredPhotoListProtoVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    unint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_2593095B0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t _s10PhotosFace20StoredPhotoListProtoVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *_s10PhotosFace20StoredPhotoListProtoVwcp_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_2593095B0();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *_s10PhotosFace20StoredPhotoListProtoVwca_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2593095B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *_s10PhotosFace20StoredPhotoListProtoVwtk_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_2593095B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *_s10PhotosFace20StoredPhotoListProtoVwta_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2593095B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenericListProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2592AF740);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2593095B0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for GenericListProto(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2592AF808);
}

void *__swift_store_extra_inhabitant_indexTm(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_2593095B0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2592AF8B4()
{
  uint64_t result = sub_2593095B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL FetchFaceRequestProto.hasDay.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for FetchFaceRequestProto(0) + 24) + 4) & 1) == 0;
}

uint64_t type metadata accessor for FetchFaceRequestProto(uint64_t a1)
{
  return sub_259296DD8(a1, (uint64_t *)&unk_26A37E9F8);
}

uint64_t FetchFaceRequestProto.day.getter()
{
  unint64_t v1 = (unsigned char *)(v0 + *(int *)(type metadata accessor for FetchFaceRequestProto(0) + 24));
  if (v1[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t FetchFaceRequestProto.day.setter(int a1)
{
  uint64_t result = type metadata accessor for FetchFaceRequestProto(0);
  uint64_t v4 = v1 + *(int *)(result + 24);
  *(_DWORD *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 4) = 0;
  return result;
}

uint64_t FetchFaceRequestProto.id.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_259261DE0(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t FetchFaceRequestProto.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_259261F50(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*FetchFaceRequestProto.id.modify())()
{
  return nullsub_1;
}

uint64_t (*FetchFaceRequestProto.day.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for FetchFaceRequestProto(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_2592AFB0C;
}

uint64_t sub_2592AFB0C(uint64_t result)
{
  uint64_t v1 = *(void *)result + *(int *)(result + 12);
  *(_DWORD *)uint64_t v1 = *(_DWORD *)(result + 8);
  *(unsigned char *)(v1 + 4) = 0;
  return result;
}

Swift::Void __swiftcall FetchFaceRequestProto.clearDay()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for FetchFaceRequestProto(0) + 24);
  *(_DWORD *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 4) = 1;
}

uint64_t FetchFaceRequestProto.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FetchFaceRequestProto(0) + 20);
  uint64_t v4 = sub_2593095B0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FetchFaceRequestProto.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FetchFaceRequestProto(0) + 20);
  uint64_t v4 = sub_2593095B0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*FetchFaceRequestProto.unknownFields.modify())(void, void, void, void)
{
  return nullsub_1;
}

uint64_t FetchFaceRequestProto.init()@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_259314C30;
  uint64_t FaceRequestProto = type metadata accessor for FetchFaceRequestProto(0);
  uint64_t result = sub_2593095A0();
  uint64_t v4 = (char *)a1 + *(int *)(FaceRequestProto + 24);
  *(_DWORD *)uint64_t v4 = 0;
  long long v4[4] = 1;
  return result;
}

uint64_t FetchByDayResponseProto.day.getter()
{
  return *v0;
}

uint64_t FetchByDayResponseProto.day.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*FetchByDayResponseProto.day.modify())()
{
  return nullsub_1;
}

uint64_t FetchByDayResponseProto.photos.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FetchByDayResponseProto.photos.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FetchByDayResponseProto.photos.modify())()
{
  return nullsub_1;
}

uint64_t FetchByDayResponseProto.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FetchByDayResponseProto(0) + 24);
  uint64_t v4 = sub_2593095B0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for FetchByDayResponseProto(uint64_t a1)
{
  return sub_259296DD8(a1, (uint64_t *)&unk_26A37EA08);
}

uint64_t FetchByDayResponseProto.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FetchByDayResponseProto(0) + 24);
  uint64_t v4 = sub_2593095B0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*FetchByDayResponseProto.unknownFields.modify())(void, void, void, void)
{
  return nullsub_1;
}

uint64_t FetchByDayResponseProto.init()@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = MEMORY[0x263F8EE78];
  type metadata accessor for FetchByDayResponseProto(0);
  return sub_2593095A0();
}

unint64_t static FetchFaceRequestProto.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_2592AFF24()
{
  uint64_t v0 = sub_259309830();
  __swift_allocate_value_buffer(v0, qword_26A37E998);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A37E998);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F0);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2593131E0;
  int v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *int v5 = 1;
  *(void *)unint64_t v6 = "id";
  *(void *)(v6 + 8) = 2;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_259309810();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "day";
  *((void *)v10 + 1) = 3;
  unsigned char v10[16] = 2;
  v9();
  return sub_259309820();
}

uint64_t static FetchFaceRequestProto._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AE88C(&qword_26A37C710, (uint64_t)qword_26A37E998, a1);
}

uint64_t FetchFaceRequestProto.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_259309610();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      type metadata accessor for FetchFaceRequestProto(0);
      sub_2593096B0();
    }
    else if (result == 1)
    {
      sub_259309660();
    }
    uint64_t v0 = 0;
  }
  return result;
}

uint64_t FetchFaceRequestProto.traverse<A>(visitor:)()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_259309790();
      if (!v1)
      {
LABEL_8:
        uint64_t result = sub_2592B02D0((uint64_t)v0);
        if (!v1)
        {
          type metadata accessor for FetchFaceRequestProto(0);
          return sub_259309590();
        }
      }
      return result;
  }
}

uint64_t sub_2592B02D0(uint64_t a1)
{
  uint64_t result = type metadata accessor for FetchFaceRequestProto(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 24) + 4) & 1) == 0) {
    return sub_2593097D0();
  }
  return result;
}

uint64_t FetchFaceRequestProto.hashValue.getter()
{
  return sub_2592B0A30((void (*)(void))type metadata accessor for FetchFaceRequestProto, &qword_26A37E9C8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
}

uint64_t sub_2592B0394@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = xmmword_259314C30;
  uint64_t result = sub_2593095A0();
  int v5 = (char *)a2 + *(int *)(a1 + 24);
  *(_DWORD *)int v5 = 0;
  v5[4] = 1;
  return result;
}

unint64_t sub_2592B03E4()
{
  return 0xD000000000000015;
}

uint64_t sub_2592B0400()
{
  return FetchFaceRequestProto.decodeMessage<A>(decoder:)();
}

uint64_t sub_2592B0418()
{
  return FetchFaceRequestProto.traverse<A>(visitor:)();
}

uint64_t sub_2592B0430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2592B1070(&qword_26A37EA20, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2592B04AC@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AED38(&qword_26A37C710, (uint64_t)qword_26A37E998, a1);
}

uint64_t sub_2592B04D0(uint64_t a1)
{
  uint64_t v2 = sub_2592B1070(&qword_26A37E2E8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2592B053C()
{
  sub_2592B1070(&qword_26A37E2E8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
  return sub_259309740();
}

unint64_t static FetchByDayResponseProto.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_2592B05D8()
{
  uint64_t v0 = sub_259309830();
  __swift_allocate_value_buffer(v0, qword_26A37E9B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A37E9B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F0);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2593131E0;
  int v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *int v5 = 1;
  *(void *)unint64_t v6 = "day";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_259309810();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "photos";
  *((void *)v10 + 1) = 6;
  unsigned char v10[16] = 2;
  v9();
  return sub_259309820();
}

uint64_t static FetchByDayResponseProto._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AE88C(&qword_26A37C718, (uint64_t)qword_26A37E9B0, a1);
}

uint64_t FetchByDayResponseProto.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_259309610();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for StoredPhotoProto(0);
        sub_2592B1070(&qword_26A37E308, (void (*)(uint64_t))type metadata accessor for StoredPhotoProto);
        sub_2593096E0();
      }
      else if (result == 1)
      {
        sub_2593096C0();
      }
      uint64_t result = sub_259309610();
    }
  }
  return result;
}

uint64_t FetchByDayResponseProto.traverse<A>(visitor:)()
{
  if (!*(_DWORD *)v0 || (uint64_t result = sub_2593097D0(), !v1))
  {
    if (!*(void *)(*(void *)(v0 + 8) + 16)
      || (type metadata accessor for StoredPhotoProto(0),
          sub_2592B1070(&qword_26A37E308, (void (*)(uint64_t))type metadata accessor for StoredPhotoProto),
          uint64_t result = sub_2593097F0(),
          !v1))
    {
      type metadata accessor for FetchByDayResponseProto(0);
      return sub_259309590();
    }
  }
  return result;
}

uint64_t FetchByDayResponseProto.hashValue.getter()
{
  return sub_2592B0A30((void (*)(void))type metadata accessor for FetchByDayResponseProto, &qword_26A37E9D0, (void (*)(uint64_t))type metadata accessor for FetchByDayResponseProto);
}

uint64_t sub_2592B0A30(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_25930A910();
}

uint64_t sub_2592B0AB8@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = MEMORY[0x263F8EE78];
  return sub_2593095A0();
}

unint64_t sub_2592B0AE8()
{
  return 0xD000000000000017;
}

uint64_t sub_2592B0B04()
{
  return FetchByDayResponseProto.decodeMessage<A>(decoder:)();
}

uint64_t sub_2592B0B1C()
{
  return FetchByDayResponseProto.traverse<A>(visitor:)();
}

uint64_t sub_2592B0B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2592B1070(&qword_26A37EA18, (void (*)(uint64_t))type metadata accessor for FetchByDayResponseProto);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2592B0BB0@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AED38(&qword_26A37C718, (uint64_t)qword_26A37E9B0, a1);
}

uint64_t sub_2592B0BD4(uint64_t a1)
{
  uint64_t v2 = sub_2592B1070(&qword_26A37E2F0, (void (*)(uint64_t))type metadata accessor for FetchByDayResponseProto);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2592B0C40()
{
  sub_2592B1070(&qword_26A37E2F0, (void (*)(uint64_t))type metadata accessor for FetchByDayResponseProto);
  return sub_259309740();
}

uint64_t _s10PhotosFace23FetchByDayResponseProtoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2593095B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if (*(_DWORD *)a1 == *(_DWORD *)a2 && (sub_25926CF30(*(void *)(a1 + 8), *(void *)(a2 + 8)) & 1) != 0)
  {
    uint64_t v11 = type metadata accessor for FetchByDayResponseProto(0);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v12(v10, a1 + *(int *)(v11 + 24), v4);
    v12(v7, a2 + *(int *)(v11 + 24), v4);
    sub_2592B1070(&qword_26A37E3E0, MEMORY[0x263F50560]);
    char v13 = sub_259309B60();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s10PhotosFace05FetchB12RequestProtoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2593095B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - v9;
  if ((sub_2592C3CD0(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t FaceRequestProto = type metadata accessor for FetchFaceRequestProto(0);
  uint64_t v12 = FaceRequestProto;
  uint64_t v13 = *(int *)(FaceRequestProto + 24);
  uint64_t v14 = (_DWORD *)(a1 + v13);
  char v15 = *(unsigned char *)(a1 + v13 + 4);
  uint64_t v16 = (_DWORD *)(a2 + v13);
  int v17 = *(unsigned __int8 *)(a2 + v13 + 4);
  if ((v15 & 1) == 0)
  {
    if (*v14 != *v16) {
      LOBYTE(v17) = 1;
    }
    if (v17) {
      goto LABEL_4;
    }
LABEL_8:
    char v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v19(v10, a1 + *(int *)(FaceRequestProto + 20), v4);
    v19(v7, a2 + *(int *)(v12 + 20), v4);
    sub_2592B1070(&qword_26A37E3E0, MEMORY[0x263F50560]);
    char v18 = sub_259309B60();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
    v20(v7, v4);
    v20(v10, v4);
    return v18 & 1;
  }
  if (v17) {
    goto LABEL_8;
  }
LABEL_4:
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_2592B1070(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2592B10B8()
{
  return sub_2592B1070(&qword_26A37E9D8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
}

uint64_t sub_2592B1100()
{
  return sub_2592B1070(&qword_26A37E2E8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
}

uint64_t sub_2592B1148()
{
  return sub_2592B1070(&qword_26A37E9C8, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
}

uint64_t sub_2592B1190()
{
  return sub_2592B1070(&qword_26A37E9E0, (void (*)(uint64_t))type metadata accessor for FetchFaceRequestProto);
}

uint64_t sub_2592B11D8()
{
  return sub_2592B1070(&qword_26A37E9E8, (void (*)(uint64_t))type metadata accessor for FetchByDayResponseProto);
}

uint64_t sub_2592B1220()
{
  return sub_2592B1070(&qword_26A37E2F0, (void (*)(uint64_t))type metadata accessor for FetchByDayResponseProto);
}

uint64_t sub_2592B1268()
{
  return sub_2592B1070(&qword_26A37E9D0, (void (*)(uint64_t))type metadata accessor for FetchByDayResponseProto);
}

uint64_t sub_2592B12B0()
{
  return sub_2592B1070(&qword_26A37E9F0, (void (*)(uint64_t))type metadata accessor for FetchByDayResponseProto);
}

uint64_t sub_2592B12F8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = type metadata accessor for FetchFaceRequestProto(0);
  uint64_t v5 = (int *)(a1 + *(int *)(result + 24));
  if (*((unsigned char *)v5 + 4)) {
    int v6 = 0;
  }
  else {
    int v6 = *v5;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_2592B1340(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t result = type metadata accessor for FetchFaceRequestProto(0);
  uint64_t v5 = a2 + *(int *)(result + 24);
  *(_DWORD *)uint64_t v5 = v3;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FetchFaceRequestProto(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_259261DE0(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_2593095B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)a1 + v13;
    char v15 = (char *)a2 + v13;
    *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
    v14[4] = v15[4];
  }
  return a1;
}

uint64_t destroy for FetchFaceRequestProto(uint64_t a1, uint64_t a2)
{
  sub_259261F50(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2593095B0();
  int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t *initializeWithCopy for FetchFaceRequestProto(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_259261DE0(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_2593095B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  return a1;
}

uint64_t *assignWithCopy for FetchFaceRequestProto(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_259261DE0(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_259261F50(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_2593095B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 24);
  char v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char v17 = v16[4];
  *(_DWORD *)char v15 = *(_DWORD *)v16;
  v15[4] = v17;
  return a1;
}

_OWORD *initializeWithTake for FetchFaceRequestProto(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2593095B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  v11[4] = v12[4];
  return a1;
}

uint64_t *assignWithTake for FetchFaceRequestProto(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_259261F50(v6, v7);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_2593095B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchFaceRequestProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2592B17DC);
}

uint64_t sub_2592B17DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_2593095B0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FetchFaceRequestProto(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2592B18AC);
}

void *sub_2592B18AC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_2593095B0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2592B195C()
{
  uint64_t result = sub_2593095B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FetchByDayResponseProto(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    uint64_t *v3 = *a2;
    int v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    a1[1] = a2[1];
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_2593095B0();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for FetchByDayResponseProto(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for FetchByDayResponseProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_2593095B0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for FetchByDayResponseProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_2593095B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for FetchByDayResponseProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_2593095B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for FetchByDayResponseProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_2593095B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchByDayResponseProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2592B1DCC);
}

uint64_t sub_2592B1DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2593095B0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FetchByDayResponseProto(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2592B1E90);
}

uint64_t sub_2592B1E90(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_2593095B0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2592B1F38()
{
  uint64_t result = sub_2593095B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t GeneratePhotoRequestProto.identifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GeneratePhotoRequestProto.identifiers.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*GeneratePhotoRequestProto.identifiers.modify())()
{
  return nullsub_1;
}

uint64_t GeneratePhotoRequestProto.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592B211C(type metadata accessor for GeneratePhotoRequestProto, a1);
}

uint64_t type metadata accessor for GeneratePhotoRequestProto(uint64_t a1)
{
  return sub_259296DD8(a1, (uint64_t *)&unk_26A37EA88);
}

uint64_t GeneratePhotoRequestProto.unknownFields.setter(uint64_t a1)
{
  return sub_2592B21D4(a1, type metadata accessor for GeneratePhotoRequestProto);
}

uint64_t (*GeneratePhotoRequestProto.unknownFields.modify())(void, void, void, void)
{
  return nullsub_1;
}

uint64_t GeneratePhotoRequestProto.init()@<X0>(void *a1@<X8>)
{
  return sub_2592B22B0((void (*)(void))type metadata accessor for GeneratePhotoRequestProto, a1);
}

uint64_t (*GeneratePhotoResponseProto.results.modify())()
{
  return nullsub_1;
}

uint64_t GeneratePhotoResponseProto.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592B211C(type metadata accessor for GeneratePhotoResponseProto, a1);
}

uint64_t sub_2592B211C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t type metadata accessor for GeneratePhotoResponseProto(uint64_t a1)
{
  return sub_259296DD8(a1, (uint64_t *)&unk_26A37EA98);
}

uint64_t GeneratePhotoResponseProto.unknownFields.setter(uint64_t a1)
{
  return sub_2592B21D4(a1, type metadata accessor for GeneratePhotoResponseProto);
}

uint64_t sub_2592B21D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*GeneratePhotoResponseProto.unknownFields.modify())(void, void, void, void)
{
  return nullsub_1;
}

uint64_t GeneratePhotoResponseProto.init()@<X0>(void *a1@<X8>)
{
  return sub_2592B22B0((void (*)(void))type metadata accessor for GeneratePhotoResponseProto, a1);
}

uint64_t sub_2592B22B0@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = MEMORY[0x263F8EE78];
  a1(0);
  return sub_2593095A0();
}

unint64_t static GeneratePhotoRequestProto.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_2592B2314(uint64_t a1)
{
  return sub_2592B2730(a1, qword_26A37EA28, (uint64_t)"identifiers", 11);
}

uint64_t static GeneratePhotoRequestProto._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AE88C(&qword_26A37C720, (uint64_t)qword_26A37EA28, a1);
}

uint64_t GeneratePhotoRequestProto.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_259309610();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_259309650();
    }
  }
  return result;
}

uint64_t GeneratePhotoRequestProto.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16) || (uint64_t result = sub_259309780(), !v1))
  {
    type metadata accessor for GeneratePhotoRequestProto(0);
    return sub_259309590();
  }
  return result;
}

uint64_t static GeneratePhotoRequestProto.== infix(_:_:)(char *a1, char *a2)
{
  return sub_2592B2DB8(a1, a2, (uint64_t (*)(void, void, double))sub_25926D774, type metadata accessor for GeneratePhotoRequestProto) & 1;
}

uint64_t GeneratePhotoRequestProto.hashValue.getter()
{
  return sub_2592B2B18((void (*)(void))type metadata accessor for GeneratePhotoRequestProto, &qword_26A37EA58, (void (*)(uint64_t))type metadata accessor for GeneratePhotoRequestProto);
}

unint64_t sub_2592B24E4()
{
  return 0xD000000000000019;
}

uint64_t sub_2592B2500()
{
  return GeneratePhotoRequestProto.decodeMessage<A>(decoder:)();
}

uint64_t sub_2592B2518()
{
  return GeneratePhotoRequestProto.traverse<A>(visitor:)();
}

uint64_t sub_2592B2530(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2592B2F80(&qword_26A37EAB0, (void (*)(uint64_t))type metadata accessor for GeneratePhotoRequestProto);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2592B25AC@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AED38(&qword_26A37C720, (uint64_t)qword_26A37EA28, a1);
}

uint64_t sub_2592B25D0(uint64_t a1)
{
  uint64_t v2 = sub_2592B2F80(&qword_26A37E310, (void (*)(uint64_t))type metadata accessor for GeneratePhotoRequestProto);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2592B263C()
{
  sub_2592B2F80(&qword_26A37E310, (void (*)(uint64_t))type metadata accessor for GeneratePhotoRequestProto);
  return sub_259309740();
}

uint64_t sub_2592B26B8(char *a1, char *a2)
{
  return sub_2592B2DB8(a1, a2, (uint64_t (*)(void, void, double))sub_25926D774, type metadata accessor for GeneratePhotoRequestProto) & 1;
}

unint64_t static GeneratePhotoResponseProto.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2592B2718(uint64_t a1)
{
  return sub_2592B2730(a1, qword_26A37EA40, (uint64_t)"results", 7);
}

uint64_t sub_2592B2730(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_259309830();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F0);
  uint64_t v8 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F8) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2593131D0;
  unint64_t v11 = v10 + v9 + v8[14];
  *(void *)(v10 + v9) = 1;
  *(void *)unint64_t v11 = a3;
  *(void *)(v11 + 8) = a4;
  *(unsigned char *)(v11 + 16) = 2;
  uint64_t v12 = *MEMORY[0x263F50718];
  uint64_t v13 = sub_259309810();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  return sub_259309820();
}

uint64_t static GeneratePhotoResponseProto._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AE88C(&qword_26A37C728, (uint64_t)qword_26A37EA40, a1);
}

uint64_t GeneratePhotoResponseProto.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_259309610();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        type metadata accessor for StoredPhotoProto(0);
        sub_2592B2F80(&qword_26A37E308, (void (*)(uint64_t))type metadata accessor for StoredPhotoProto);
        sub_2593096E0();
      }
      uint64_t result = sub_259309610();
    }
  }
  return result;
}

uint64_t GeneratePhotoResponseProto.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for StoredPhotoProto(0),
        sub_2592B2F80(&qword_26A37E308, (void (*)(uint64_t))type metadata accessor for StoredPhotoProto),
        uint64_t result = sub_2593097F0(),
        !v1))
  {
    type metadata accessor for GeneratePhotoResponseProto(0);
    return sub_259309590();
  }
  return result;
}

uint64_t static GeneratePhotoResponseProto.== infix(_:_:)(char *a1, char *a2)
{
  return sub_2592B2DB8(a1, a2, (uint64_t (*)(void, void, double))sub_25926CF30, type metadata accessor for GeneratePhotoResponseProto) & 1;
}

uint64_t GeneratePhotoResponseProto.hashValue.getter()
{
  return sub_2592B2B18((void (*)(void))type metadata accessor for GeneratePhotoResponseProto, &qword_26A37EA60, (void (*)(uint64_t))type metadata accessor for GeneratePhotoResponseProto);
}

uint64_t sub_2592B2B18(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_25930A910();
}

unint64_t sub_2592B2BA0()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2592B2BBC()
{
  return GeneratePhotoResponseProto.decodeMessage<A>(decoder:)();
}

uint64_t sub_2592B2BD4()
{
  return GeneratePhotoResponseProto.traverse<A>(visitor:)();
}

uint64_t sub_2592B2BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2592B2F80(&qword_26A37EAA8, (void (*)(uint64_t))type metadata accessor for GeneratePhotoResponseProto);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2592B2C68@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AED38(&qword_26A37C728, (uint64_t)qword_26A37EA40, a1);
}

uint64_t sub_2592B2C8C(uint64_t a1)
{
  uint64_t v2 = sub_2592B2F80(&qword_26A37E318, (void (*)(uint64_t))type metadata accessor for GeneratePhotoResponseProto);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2592B2CF8()
{
  sub_2592B2F80(&qword_26A37E318, (void (*)(uint64_t))type metadata accessor for GeneratePhotoResponseProto);
  return sub_259309740();
}

uint64_t sub_2592B2D74(char *a1, char *a2)
{
  return sub_2592B2DB8(a1, a2, (uint64_t (*)(void, void, double))sub_25926CF30, type metadata accessor for GeneratePhotoResponseProto) & 1;
}

uint64_t sub_2592B2DB8(char *a1, char *a2, uint64_t (*a3)(void, void, double), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_2593095B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x270FA5388](v12);
  char v15 = (char *)&v21 - v14;
  if (a3(*(void *)a1, *(void *)a2, v13))
  {
    uint64_t v16 = a4(0);
    char v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v17(v15, &a1[*(int *)(v16 + 20)], v8);
    v17(v11, &a2[*(int *)(v16 + 20)], v8);
    sub_2592B2F80(&qword_26A37E3E0, MEMORY[0x263F50560]);
    char v18 = sub_259309B60();
    char v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v11, v8);
    v19(v15, v8);
  }
  else
  {
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_2592B2F80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2592B2FC8()
{
  return sub_2592B2F80(&qword_26A37EA68, (void (*)(uint64_t))type metadata accessor for GeneratePhotoRequestProto);
}

uint64_t sub_2592B3010()
{
  return sub_2592B2F80(&qword_26A37E310, (void (*)(uint64_t))type metadata accessor for GeneratePhotoRequestProto);
}

uint64_t sub_2592B3058()
{
  return sub_2592B2F80(&qword_26A37EA58, (void (*)(uint64_t))type metadata accessor for GeneratePhotoRequestProto);
}

uint64_t sub_2592B30A0()
{
  return sub_2592B2F80(&qword_26A37EA70, (void (*)(uint64_t))type metadata accessor for GeneratePhotoRequestProto);
}

uint64_t sub_2592B30E8()
{
  return sub_2592B2F80(&qword_26A37EA78, (void (*)(uint64_t))type metadata accessor for GeneratePhotoResponseProto);
}

uint64_t sub_2592B3130()
{
  return sub_2592B2F80(&qword_26A37E318, (void (*)(uint64_t))type metadata accessor for GeneratePhotoResponseProto);
}

uint64_t sub_2592B3178()
{
  return sub_2592B2F80(&qword_26A37EA60, (void (*)(uint64_t))type metadata accessor for GeneratePhotoResponseProto);
}

uint64_t sub_2592B31C0()
{
  return sub_2592B2F80(&qword_26A37EA80, (void (*)(uint64_t))type metadata accessor for GeneratePhotoResponseProto);
}

uint64_t getEnumTagSinglePayload for GeneratePhotoRequestProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_0);
}

uint64_t storeEnumTagSinglePayload for GeneratePhotoRequestProto(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_0);
}

uint64_t getEnumTagSinglePayload for GeneratePhotoResponseProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_1);
}

uint64_t storeEnumTagSinglePayload for GeneratePhotoResponseProto(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_1);
}

uint64_t MessageProto.messageCode.getter()
{
  uint64_t v1 = (unsigned char *)(v0 + *(int *)(type metadata accessor for MessageProto(0) + 36));
  if (v1[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t type metadata accessor for MessageProto(uint64_t a1)
{
  return sub_259296DD8(a1, (uint64_t *)&unk_26A37EB78);
}

uint64_t MessageProto.requestIndex.getter()
{
  uint64_t v1 = (unsigned char *)(v0 + *(int *)(type metadata accessor for MessageProto(0) + 40));
  if (v1[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t MessageProto.messageCode.setter(int a1)
{
  uint64_t result = type metadata accessor for MessageProto(0);
  uint64_t v4 = v1 + *(int *)(result + 36);
  *(_DWORD *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 4) = 0;
  return result;
}

uint64_t MessageProto.requestIndex.setter(int a1)
{
  uint64_t result = type metadata accessor for MessageProto(0);
  uint64_t v4 = v1 + *(int *)(result + 40);
  *(_DWORD *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 4) = 0;
  return result;
}

void MessageOperationProto.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t MessageOperationProto.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 5;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t MessageOperationProto.rawValue.getter()
{
  return *(void *)v0;
}

void sub_2592B3398(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t sub_2592B33AC()
{
  return *(void *)v0;
}

unint64_t sub_2592B33B4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return MessageOperationProto.init(rawValue:)(*a1, a2);
}

uint64_t sub_2592B33BC()
{
  return sub_25930A910();
}

uint64_t sub_2592B3428(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_2592B471C();
  return MEMORY[0x270F44AF0](a1, a2, v4);
}

uint64_t sub_2592B3474()
{
  return sub_25930A910();
}

void sub_2592B34DC()
{
  qword_26A37EAB8 = (uint64_t)&unk_2707285F8;
}

uint64_t static MessageOperationProto.allCases.getter()
{
  if (qword_26A37C730 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_2592B354C@<X0>(void *a1@<X8>)
{
  if (qword_26A37C730 != -1) {
    swift_once();
  }
  *a1 = qword_26A37EAB8;
  return swift_bridgeObjectRetain();
}

void MessageProto.operation.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t MessageProto.operation.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)uint64_t v1 = *(void *)result;
  *(unsigned char *)(v1 + 8) = v2;
  return result;
}

uint64_t (*MessageProto.operation.modify())()
{
  return nullsub_1;
}

uint64_t (*MessageProto.messageCode.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for MessageProto(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  unint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_2592B3668;
}

BOOL MessageProto.hasMessageCode.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for MessageProto(0) + 36) + 4) & 1) == 0;
}

Swift::Void __swiftcall MessageProto.clearMessageCode()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for MessageProto(0) + 36);
  *(_DWORD *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 4) = 1;
}

uint64_t (*MessageProto.requestIndex.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for MessageProto(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  unint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_2592B3668;
}

BOOL MessageProto.hasRequestIndex.getter()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for MessageProto(0) + 40) + 4) & 1) == 0;
}

Swift::Void __swiftcall MessageProto.clearRequestIndex()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for MessageProto(0) + 40);
  *(_DWORD *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 4) = 1;
}

uint64_t MessageProto.messageContent.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_259261DE0(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t MessageProto.messageContent.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_259261F50(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*MessageProto.messageContent.modify())()
{
  return nullsub_1;
}

uint64_t MessageProto.fileCount.getter()
{
  return *(unsigned int *)(v0 + 32);
}

uint64_t MessageProto.fileCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*MessageProto.fileCount.modify())()
{
  return nullsub_1;
}

uint64_t MessageProto.version.getter()
{
  return *(unsigned int *)(v0 + 36);
}

uint64_t MessageProto.version.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 36) = result;
  return result;
}

uint64_t (*MessageProto.version.modify())()
{
  return nullsub_1;
}

uint64_t MessageProto.complete.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for MessageProto(0) + 44)) & 1;
}

uint64_t MessageProto.complete.setter(char a1)
{
  uint64_t result = type metadata accessor for MessageProto(0);
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*MessageProto.complete.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for MessageProto(0) + 44);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_2592B3934;
}

uint64_t sub_2592B3934(uint64_t result)
{
  *(unsigned char *)(*(void *)result + *(int *)(result + 8)) = *(unsigned char *)(result + 12);
  return result;
}

BOOL MessageProto.hasComplete.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for MessageProto(0) + 44)) != 2;
}

Swift::Void __swiftcall MessageProto.clearComplete()()
{
  *(unsigned char *)(v0 + *(int *)(type metadata accessor for MessageProto(0) + 44)) = 2;
}

uint64_t MessageProto.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageProto(0) + 32);
  uint64_t v4 = sub_2593095B0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t MessageProto.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MessageProto(0) + 32);
  uint64_t v4 = sub_2593095B0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*MessageProto.unknownFields.modify())(void, void, void, void)
{
  return nullsub_1;
}

uint64_t MessageProto.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(_OWORD *)(a1 + 16) = xmmword_259314C30;
  *(void *)(a1 + 32) = 0;
  uint64_t v2 = (int *)type metadata accessor for MessageProto(0);
  uint64_t result = sub_2593095A0();
  uint64_t v4 = a1 + v2[9];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + v2[10];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  *(unsigned char *)(a1 + v2[11]) = 2;
  return result;
}

uint64_t FileHeaderProto.filename.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FileHeaderProto.filename.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FileHeaderProto.filename.modify())()
{
  return nullsub_1;
}

uint64_t FileHeaderProto.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FileHeaderProto(0) + 20);
  uint64_t v4 = sub_2593095B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for FileHeaderProto(uint64_t a1)
{
  return sub_259296DD8(a1, (uint64_t *)&unk_26A37EB88);
}

uint64_t FileHeaderProto.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FileHeaderProto(0) + 20);
  uint64_t v4 = sub_2593095B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*FileHeaderProto.unknownFields.modify())(void, void, void, void)
{
  return nullsub_1;
}

uint64_t FileHeaderProto.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  type metadata accessor for FileHeaderProto(0);
  return sub_2593095A0();
}

uint64_t sub_2592B3D78()
{
  uint64_t v0 = sub_259309830();
  __swift_allocate_value_buffer(v0, qword_26A37EAC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A37EAC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F0);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2593157B0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "unspecified";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_259309810();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "event";
  *(void *)(v10 + 8) = 5;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *unint64_t v11 = 2;
  *(void *)uint64_t v12 = "request";
  *((void *)v12 + 1) = 7;
  v12[16] = 2;
  v9();
  double v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *double v13 = 3;
  *(void *)uint64_t v14 = "response";
  *((void *)v14 + 1) = 8;
  unsigned char v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v2 + v1[14];
  *(void *)(v5 + 4 * v2) = 4;
  *(void *)uint64_t v15 = "error";
  *(void *)(v15 + 8) = 5;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_259309820();
}

uint64_t static MessageOperationProto._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AE88C(&qword_26A37C738, (uint64_t)qword_26A37EAC0, a1);
}

uint64_t sub_2592B401C@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AED38(&qword_26A37C738, (uint64_t)qword_26A37EAC0, a1);
}

uint64_t static MessageProto.protoMessageName.getter()
{
  return 0x506567617373654DLL;
}

uint64_t sub_2592B4060()
{
  uint64_t v0 = sub_259309830();
  __swift_allocate_value_buffer(v0, qword_26A37EAD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A37EAD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F0);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_2593157C0;
  unint64_t v4 = v20 + v3 + v1[14];
  *(void *)(v20 + v3) = 1;
  *(void *)unint64_t v4 = "operation";
  *(void *)(v4 + 8) = 9;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_259309810();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v20 + v3 + v2 + v1[14];
  *(void *)(v20 + v3 + v2) = 2;
  *(void *)unint64_t v8 = "messageCode";
  *(void *)(v8 + 8) = 11;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v20 + v3 + 2 * v2);
  unint64_t v10 = (char *)v9 + v1[14];
  *uint64_t v9 = 3;
  *(void *)unint64_t v10 = "requestIndex";
  *((void *)v10 + 1) = 12;
  unsigned char v10[16] = 2;
  v7();
  unint64_t v11 = (void *)(v20 + v3 + 3 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *unint64_t v11 = 4;
  *(void *)uint64_t v12 = "messageContent";
  *((void *)v12 + 1) = 14;
  v12[16] = 2;
  v7();
  double v13 = (void *)(v20 + v3 + 4 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *double v13 = 5;
  *(void *)uint64_t v14 = "fileCount";
  *((void *)v14 + 1) = 9;
  unsigned char v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v20 + v3 + 5 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 6;
  *(void *)uint64_t v16 = "version";
  *((void *)v16 + 1) = 7;
  unsigned char v16[16] = 2;
  v7();
  char v17 = (void *)(v20 + v3 + 6 * v2);
  char v18 = (char *)v17 + v1[14];
  *char v17 = 7;
  *(void *)char v18 = "complete";
  *((void *)v18 + 1) = 8;
  unsigned char v18[16] = 2;
  v7();
  return sub_259309820();
}

uint64_t static MessageProto._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AE88C(&qword_26A37C740, (uint64_t)qword_26A37EAD8, a1);
}

uint64_t MessageProto.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_259309610();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2592B471C();
          sub_259309640();
          break;
        case 2:
        case 3:
          type metadata accessor for MessageProto(0);
          sub_2593096B0();
          break;
        case 4:
          sub_259309660();
          break;
        case 5:
        case 6:
          sub_2593096C0();
          break;
        case 7:
          type metadata accessor for MessageProto(0);
          sub_259309620();
          break;
        default:
          break;
      }
      uint64_t result = sub_259309610();
    }
  }
  return result;
}

uint64_t MessageProto.traverse<A>(visitor:)()
{
  if (!*(void *)v0 || (sub_2592B471C(), uint64_t result = sub_259309770(), !v1))
  {
    uint64_t result = sub_2592B4770(v0);
    if (!v1)
    {
      sub_2592B47E8(v0);
      uint64_t v3 = *(void *)(v0 + 16);
      unint64_t v4 = *(void *)(v0 + 24);
      switch(v4 >> 62)
      {
        case 1uLL:
          if ((int)v3 != v3 >> 32) {
            goto LABEL_12;
          }
          break;
        case 2uLL:
          if (*(void *)(v3 + 16) != *(void *)(v3 + 24)) {
            goto LABEL_12;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v4 & 0xFF000000000000) != 0) {
LABEL_12:
          }
            sub_259309790();
          break;
      }
      if (*(_DWORD *)(v0 + 32)) {
        sub_2593097D0();
      }
      if (*(_DWORD *)(v0 + 36)) {
        sub_2593097D0();
      }
      sub_2592B4860(v0);
      type metadata accessor for MessageProto(0);
      return sub_259309590();
    }
  }
  return result;
}

unint64_t sub_2592B471C()
{
  unint64_t result = qword_26A37EB08;
  if (!qword_26A37EB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37EB08);
  }
  return result;
}

uint64_t sub_2592B4770(uint64_t a1)
{
  uint64_t result = type metadata accessor for MessageProto(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 36) + 4) & 1) == 0) {
    return sub_2593097D0();
  }
  return result;
}

uint64_t sub_2592B47E8(uint64_t a1)
{
  uint64_t result = type metadata accessor for MessageProto(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 40) + 4) & 1) == 0) {
    return sub_2593097D0();
  }
  return result;
}

uint64_t sub_2592B4860(uint64_t a1)
{
  uint64_t result = type metadata accessor for MessageProto(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 44)) != 2) {
    return sub_259309760();
  }
  return result;
}

uint64_t MessageProto.hashValue.getter()
{
  return sub_2592B4F84((void (*)(void))type metadata accessor for MessageProto, &qword_26A37EB10, (void (*)(uint64_t))type metadata accessor for MessageProto);
}

uint64_t sub_2592B4924@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(_OWORD *)(a2 + 16) = xmmword_259314C30;
  *(void *)(a2 + 32) = 0;
  uint64_t result = sub_2593095A0();
  uint64_t v5 = a1[10];
  uint64_t v6 = a2 + a1[9];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a2 + v5;
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  *(unsigned char *)(a2 + a1[11]) = 2;
  return result;
}

uint64_t sub_2592B49A0()
{
  return 0x506567617373654DLL;
}

uint64_t sub_2592B49C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_2592B4A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 32);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_2592B4AA0())()
{
  return nullsub_1;
}

uint64_t sub_2592B4AC4()
{
  return MessageProto.decodeMessage<A>(decoder:)();
}

uint64_t sub_2592B4ADC()
{
  return MessageProto.traverse<A>(visitor:)();
}

uint64_t sub_2592B4AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2592B56D4(&qword_26A37EBA0, (void (*)(uint64_t))type metadata accessor for MessageProto);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2592B4B70@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AED38(&qword_26A37C740, (uint64_t)qword_26A37EAD8, a1);
}

uint64_t sub_2592B4B94(uint64_t a1)
{
  uint64_t v2 = sub_2592B56D4(&qword_26A37EB50, (void (*)(uint64_t))type metadata accessor for MessageProto);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2592B4C00()
{
  sub_2592B56D4(&qword_26A37EB50, (void (*)(uint64_t))type metadata accessor for MessageProto);
  return sub_259309740();
}

uint64_t static FileHeaderProto.protoMessageName.getter()
{
  return 0x64616548656C6946;
}

uint64_t sub_2592B4CA4()
{
  uint64_t v0 = sub_259309830();
  __swift_allocate_value_buffer(v0, qword_26A37EAF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A37EAF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F0);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2593131D0;
  unint64_t v4 = v3 + v2 + v1[14];
  *(void *)(v3 + v2) = 1;
  *(void *)unint64_t v4 = "filename";
  *(void *)(v4 + 8) = 8;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x263F50718];
  uint64_t v6 = sub_259309810();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  return sub_259309820();
}

uint64_t static FileHeaderProto._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AE88C(&qword_26A37C748, (uint64_t)qword_26A37EAF0, a1);
}

uint64_t FileHeaderProto.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_259309610();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_2593096A0();
    }
  }
  return result;
}

uint64_t FileHeaderProto.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_2593097C0(), !v1))
  {
    type metadata accessor for FileHeaderProto(0);
    return sub_259309590();
  }
  return result;
}

uint64_t FileHeaderProto.hashValue.getter()
{
  return sub_2592B4F84((void (*)(void))type metadata accessor for FileHeaderProto, &qword_26A37EB18, (void (*)(uint64_t))type metadata accessor for FileHeaderProto);
}

uint64_t sub_2592B4F84(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_25930A910();
}

uint64_t sub_2592B500C@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return sub_2593095A0();
}

uint64_t sub_2592B5034()
{
  return 0x64616548656C6946;
}

uint64_t sub_2592B5058()
{
  return FileHeaderProto.decodeMessage<A>(decoder:)();
}

uint64_t sub_2592B5070()
{
  return FileHeaderProto.traverse<A>(visitor:)();
}

uint64_t sub_2592B5088(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2592B56D4(&qword_26A37EB98, (void (*)(uint64_t))type metadata accessor for FileHeaderProto);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2592B5104@<X0>(uint64_t a1@<X8>)
{
  return sub_2592AED38(&qword_26A37C748, (uint64_t)qword_26A37EAF0, a1);
}

uint64_t sub_2592B5128(uint64_t a1)
{
  uint64_t v2 = sub_2592B56D4(&qword_26A37EB68, (void (*)(uint64_t))type metadata accessor for FileHeaderProto);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2592B5194()
{
  sub_2592B56D4(&qword_26A37EB68, (void (*)(uint64_t))type metadata accessor for FileHeaderProto);
  return sub_259309740();
}

uint64_t _s10PhotosFace15FileHeaderProtoV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_2593095B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v17 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v11 || (char v12 = 0, (sub_25930A7C0() & 1) != 0))
  {
    uint64_t v13 = type metadata accessor for FileHeaderProto(0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v10, &a1[*(int *)(v13 + 20)], v4);
    v14(v7, &a2[*(int *)(v13 + 20)], v4);
    sub_2592B56D4(&qword_26A37E3E0, MEMORY[0x263F50560]);
    char v12 = sub_259309B60();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v10, v4);
  }
  return v12 & 1;
}

uint64_t _s10PhotosFace12MessageProtoV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_2593095B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = *a1;
  uint64_t v12 = *a2;
  if (*((unsigned char *)a2 + 8) == 1)
  {
    switch(v12)
    {
      case 1:
        if (v11 == 1) {
          goto LABEL_6;
        }
        goto LABEL_31;
      case 2:
        if (v11 == 2) {
          goto LABEL_6;
        }
        goto LABEL_31;
      case 3:
        if (v11 == 3) {
          goto LABEL_6;
        }
        goto LABEL_31;
      case 4:
        if (v11 != 4) {
          goto LABEL_31;
        }
        goto LABEL_6;
      default:
        if (!v11) {
          goto LABEL_6;
        }
        goto LABEL_31;
    }
  }
  if (v11 != v12) {
    goto LABEL_31;
  }
LABEL_6:
  uint64_t v13 = type metadata accessor for MessageProto(0);
  uint64_t v14 = v13;
  uint64_t v15 = *(int *)(v13 + 36);
  uint64_t v16 = (_DWORD *)((char *)a1 + v15);
  char v17 = *((unsigned char *)a1 + v15 + 4);
  char v18 = (_DWORD *)((char *)a2 + v15);
  int v19 = *((unsigned __int8 *)a2 + v15 + 4);
  if (v17)
  {
    if (!v19) {
      goto LABEL_31;
    }
  }
  else
  {
    if (*v16 != *v18) {
      LOBYTE(v19) = 1;
    }
    if (v19) {
      goto LABEL_31;
    }
  }
  uint64_t v20 = *(int *)(v13 + 40);
  uint64_t v21 = (_DWORD *)((char *)a1 + v20);
  char v22 = *((unsigned char *)a1 + v20 + 4);
  uint64_t v23 = (_DWORD *)((char *)a2 + v20);
  int v24 = *((unsigned __int8 *)a2 + v20 + 4);
  if (v22)
  {
    if (!v24) {
      goto LABEL_31;
    }
  }
  else
  {
    if (*v21 != *v23) {
      LOBYTE(v24) = 1;
    }
    if (v24) {
      goto LABEL_31;
    }
  }
  if ((sub_2592C3CD0(a1[2], a1[3], a2[2], a2[3]) & 1) != 0
    && *((_DWORD *)a1 + 8) == *((_DWORD *)a2 + 8)
    && *((_DWORD *)a1 + 9) == *((_DWORD *)a2 + 9))
  {
    uint64_t v25 = *(int *)(v14 + 44);
    int v26 = *((unsigned __int8 *)a1 + v25);
    int v27 = *((unsigned __int8 *)a2 + v25);
    if (v26 == 2)
    {
      if (v27 == 2)
      {
LABEL_35:
        int v30 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v30(v10, (char *)a1 + *(int *)(v14 + 32), v4);
        v30(v7, (char *)a2 + *(int *)(v14 + 32), v4);
        sub_2592B56D4(&qword_26A37E3E0, MEMORY[0x263F50560]);
        char v28 = sub_259309B60();
        uint64_t v31 = *(void (**)(char *, uint64_t))(v5 + 8);
        v31(v7, v4);
        v31(v10, v4);
        return v28 & 1;
      }
    }
    else if (v27 != 2 && ((((v27 & 1) == 0) ^ v26) & 1) != 0)
    {
      goto LABEL_35;
    }
  }
LABEL_31:
  char v28 = 0;
  return v28 & 1;
}

uint64_t sub_2592B56D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2592B5720()
{
  unint64_t result = qword_26A37EB20;
  if (!qword_26A37EB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37EB20);
  }
  return result;
}

unint64_t sub_2592B5778()
{
  unint64_t result = qword_26A37EB28;
  if (!qword_26A37EB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37EB28);
  }
  return result;
}

unint64_t sub_2592B57D0()
{
  unint64_t result = qword_26A37EB30;
  if (!qword_26A37EB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37EB30);
  }
  return result;
}

unint64_t sub_2592B5828()
{
  unint64_t result = qword_26A37EB38;
  if (!qword_26A37EB38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A37EB40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A37EB38);
  }
  return result;
}

uint64_t sub_2592B5884()
{
  return sub_2592B56D4(&qword_26A37EB48, (void (*)(uint64_t))type metadata accessor for MessageProto);
}

uint64_t sub_2592B58CC()
{
  return sub_2592B56D4(&qword_26A37EB50, (void (*)(uint64_t))type metadata accessor for MessageProto);
}

uint64_t sub_2592B5914()
{
  return sub_2592B56D4(&qword_26A37EB10, (void (*)(uint64_t))type metadata accessor for MessageProto);
}

uint64_t sub_2592B595C()
{
  return sub_2592B56D4(&qword_26A37EB58, (void (*)(uint64_t))type metadata accessor for MessageProto);
}

uint64_t sub_2592B59A4()
{
  return sub_2592B56D4(&qword_26A37EB60, (void (*)(uint64_t))type metadata accessor for FileHeaderProto);
}

uint64_t sub_2592B59EC()
{
  return sub_2592B56D4(&qword_26A37EB68, (void (*)(uint64_t))type metadata accessor for FileHeaderProto);
}

uint64_t sub_2592B5A34()
{
  return sub_2592B56D4(&qword_26A37EB18, (void (*)(uint64_t))type metadata accessor for FileHeaderProto);
}

uint64_t sub_2592B5A7C()
{
  return sub_2592B56D4(&qword_26A37EB70, (void (*)(uint64_t))type metadata accessor for FileHeaderProto);
}

uint64_t sub_2592B5AC4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = type metadata accessor for MessageProto(0);
  uint64_t v5 = (int *)(a1 + *(int *)(result + 36));
  if (*((unsigned char *)v5 + 4)) {
    int v6 = 0;
  }
  else {
    int v6 = *v5;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_2592B5B0C(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t result = type metadata accessor for MessageProto(0);
  uint64_t v5 = a2 + *(int *)(result + 36);
  *(_DWORD *)uint64_t v5 = v3;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t sub_2592B5B48@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = type metadata accessor for MessageProto(0);
  uint64_t v5 = (int *)(a1 + *(int *)(result + 40));
  if (*((unsigned char *)v5 + 4)) {
    int v6 = 0;
  }
  else {
    int v6 = *v5;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_2592B5B90(int *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t result = type metadata accessor for MessageProto(0);
  uint64_t v5 = a2 + *(int *)(result + 40);
  *(_DWORD *)uint64_t v5 = v3;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t sub_2592B5BCC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = type metadata accessor for MessageProto(0);
  *a2 = *(unsigned char *)(a1 + *(int *)(result + 44)) & 1;
  return result;
}

uint64_t sub_2592B5C08(char *a1, uint64_t a2)
{
  char v3 = *a1;
  uint64_t result = type metadata accessor for MessageProto(0);
  *(unsigned char *)(a2 + *(int *)(result + 44)) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for StoredPhotoLayoutImageLocationTypeProto(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StoredPhotoLayoutImageLocationTypeProto(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_2592B5C8C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2592B5CA8(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageOperationProto()
{
  return &type metadata for MessageOperationProto;
}

void *initializeBufferWithCopyOfBuffer for MessageProto(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a2[2];
    unint64_t v8 = a2[3];
    sub_259261DE0(v7, v8);
    v4[2] = v7;
    v4[3] = v8;
    long long v4[4] = a2[4];
    uint64_t v9 = a3[8];
    unint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_2593095B0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[9];
    uint64_t v14 = a3[10];
    uint64_t v15 = (char *)v4 + v13;
    uint64_t v16 = (uint64_t)a2 + v13;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = *(unsigned char *)(v16 + 4);
    char v17 = (char *)v4 + v14;
    uint64_t v18 = (uint64_t)a2 + v14;
    *(_DWORD *)char v17 = *(_DWORD *)v18;
    v17[4] = *(unsigned char *)(v18 + 4);
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  }
  return v4;
}

uint64_t destroy for MessageProto(uint64_t a1, uint64_t a2)
{
  sub_259261F50(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_2593095B0();
  int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for MessageProto(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  sub_259261DE0(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_2593095B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  uint64_t v16 = a1 + v13;
  uint64_t v17 = a2 + v13;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithCopy for MessageProto(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  unint64_t v8 = a2[3];
  sub_259261DE0(v7, v8);
  uint64_t v9 = *(void *)(a1 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  sub_259261F50(v9, v10);
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
  *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t)a2 + v11;
  uint64_t v14 = sub_2593095B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (int *)((char *)a2 + v15);
  int v18 = *v17;
  *(unsigned char *)(v16 + 4) = *((unsigned char *)v17 + 4);
  *(_DWORD *)uint64_t v16 = v18;
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t)a2 + v19;
  LOBYTE(v18) = *(unsigned char *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = v18;
  *(unsigned char *)(a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for MessageProto(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_2593095B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for MessageProto(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_259261F50(v6, v7);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_2593095B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  uint64_t v16 = a1 + v13;
  uint64_t v17 = a2 + v13;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2592B6270);
}

uint64_t sub_2592B6270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2593095B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 44));
    if (v12 >= 2) {
      int v13 = ((v12 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v13 = -2;
    }
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for MessageProto(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2592B6364);
}

uint64_t sub_2592B6364(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_2593095B0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 32);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 44)) = a2 + 2;
  }
  return result;
}

uint64_t sub_2592B6424()
{
  uint64_t result = sub_2593095B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FileHeaderProto(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v3 = *a2;
    char v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_2593095B0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for FileHeaderProto(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for FileHeaderProto(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_2593095B0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for FileHeaderProto(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_2593095B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for FileHeaderProto(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_2593095B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for FileHeaderProto(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_2593095B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FileHeaderProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2592B6898);
}

uint64_t sub_2592B6898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2593095B0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FileHeaderProto(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2592B695C);
}

uint64_t sub_2592B695C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_2593095B0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2592B6A04()
{
  uint64_t result = sub_2593095B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ShuffleIDProto.id.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_259261DE0(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t ShuffleIDProto.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_259261F50(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ShuffleIDProto.id.modify())()
{
  return nullsub_1;
}

uint64_t ShuffleIDProto.people.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ShuffleIDProto.people.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ShuffleIDProto.people.modify())()
{
  return nullsub_1;
}

uint64_t ShuffleIDProto.pets.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t ShuffleIDProto.pets.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*ShuffleIDProto.pets.modify())()
{
  return nullsub_1;
}

uint64_t ShuffleIDProto.nature.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t ShuffleIDProto.nature.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 25) = result;
  return result;
}

uint64_t (*ShuffleIDProto.nature.modify())()
{
  return nullsub_1;
}

uint64_t ShuffleIDProto.cityscape.getter()
{
  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t ShuffleIDProto.cityscape.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 26) = result;
  return result;
}

uint64_t (*ShuffleIDProto.cityscape.modify())()
{
  return nullsub_1;
}

uint64_t ShuffleIDProto.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShuffleIDProto() + 36);
  uint64_t v4 = sub_2593095B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ShuffleIDProto()
{
  uint64_t result = qword_26A37EBD8;
  if (!qword_26A37EBD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ShuffleIDProto.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShuffleIDProto() + 36);
  uint64_t v4 = sub_2593095B0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*ShuffleIDProto.unknownFields.modify())(void, void, void, void)
{
  return nullsub_1;
}

uint64_t ShuffleIDProto.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_259314C30;
  *(void *)(a1 + 16) = MEMORY[0x263F8EE78];
  *(_WORD *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 26) = 0;
  type metadata accessor for ShuffleIDProto();
  return sub_2593095A0();
}

uint64_t static ShuffleIDProto.protoMessageName.getter()
{
  return 0x49656C6666756853;
}

uint64_t sub_2592B6E08()
{
  uint64_t v0 = sub_259309830();
  __swift_allocate_value_buffer(v0, qword_26A37EBA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A37EBA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F0);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A37E8F8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2593157B0;
  unint64_t v4 = v16 + v3;
  unint64_t v5 = v16 + v3 + v1[14];
  *(void *)(v16 + v3) = 1;
  *(void *)unint64_t v5 = "id";
  *(void *)(v5 + 8) = 2;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = sub_259309810();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "people";
  *(void *)(v9 + 8) = 6;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "pets";
  *((void *)v11 + 1) = 4;
  v11[16] = 2;
  v8();
  unsigned int v12 = (void *)(v4 + 3 * v2);
  int v13 = (char *)v12 + v1[14];
  void *v12 = 4;
  *(void *)int v13 = "nature";
  *((void *)v13 + 1) = 6;
  v13[16] = 2;
  v8();
  uint64_t v14 = v4 + 4 * v2 + v1[14];
  *(void *)(v4 + 4 * v2) = 5;
  *(void *)uint64_t v14 = "cityscape";
  *(void *)(v14 + 8) = 9;
  *(unsigned char *)(v14 + 16) = 2;
  v8();
  return sub_259309820();
}

uint64_t static ShuffleIDProto._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26A37C750 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309830();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26A37EBA8);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t ShuffleIDProto.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_259309610();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_259309660();
          break;
        case 2:
          sub_259309670();
          break;
        case 3:
        case 4:
        case 5:
          sub_259309630();
          break;
        default:
          break;
      }
      uint64_t result = sub_259309610();
    }
  }
  return result;
}

uint64_t ShuffleIDProto.traverse<A>(visitor:)()
{
  uint64_t v2 = *(void *)v0;
  unint64_t v3 = *(void *)(v0 + 8);
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_259309790();
      if (!v1)
      {
LABEL_8:
        if (!*(void *)(*(void *)(v0 + 16) + 16) || (uint64_t result = sub_2593097A0(), !v1))
        {
          if (*(unsigned char *)(v0 + 24) != 1 || (uint64_t result = sub_259309760(), !v1))
          {
            if (*(unsigned char *)(v0 + 25) != 1 || (uint64_t result = sub_259309760(), !v1))
            {
              if (*(unsigned char *)(v0 + 26) != 1 || (uint64_t result = sub_259309760(), !v1))
              {
                type metadata accessor for ShuffleIDProto();
                return sub_259309590();
              }
            }
          }
        }
      }
      return result;
  }
}

uint64_t ShuffleIDProto.hashValue.getter()
{
  return sub_25930A910();
}

uint64_t sub_2592B7460@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(_OWORD *)a1 = xmmword_259314C30;
  *(void *)(a1 + 16) = v1;
  *(_WORD *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 26) = 0;
  return sub_2593095A0();
}

uint64_t sub_2592B74A0()
{
  return 0x49656C6666756853;
}

uint64_t sub_2592B74C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_2592B7534(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_2592B75A4())()
{
  return nullsub_1;
}

uint64_t sub_2592B75C8()
{
  return ShuffleIDProto.decodeMessage<A>(decoder:)();
}

uint64_t sub_2592B75E0()
{
  return ShuffleIDProto.traverse<A>(visitor:)();
}

uint64_t sub_2592B75F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2592B81CC(&qword_26A37EBE8, (void (*)(uint64_t))type metadata accessor for ShuffleIDProto);
  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_2592B7674@<X0>(uint64_t a1@<X8>)
{
  if (qword_26A37C750 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_259309830();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26A37EBA8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_2592B771C(uint64_t a1)
{
  uint64_t v2 = sub_2592B81CC(&qword_26A37E438, (void (*)(uint64_t))type metadata accessor for ShuffleIDProto);
  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t sub_2592B7788()
{
  sub_2592B81CC(&qword_26A37E438, (void (*)(uint64_t))type metadata accessor for ShuffleIDProto);
  return sub_259309740();
}

uint64_t _s10PhotosFace14ShuffleIDProtoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2593095B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if ((sub_2592C3CD0(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) != 0
    && (sub_25926E56C(*(void **)(a1 + 16), *(void **)(a2 + 16)) & 1) != 0
    && *(unsigned __int8 *)(a1 + 24) == *(unsigned __int8 *)(a2 + 24)
    && *(unsigned __int8 *)(a1 + 25) == *(unsigned __int8 *)(a2 + 25)
    && *(unsigned __int8 *)(a1 + 26) == *(unsigned __int8 *)(a2 + 26))
  {
    uint64_t v13 = type metadata accessor for ShuffleIDProto();
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, a1 + *(int *)(v13 + 36), v4);
    v14(v7, a2 + *(int *)(v13 + 36), v4);
    sub_2592B81CC(&qword_26A37E3E0, MEMORY[0x263F50560]);
    char v11 = sub_259309B60();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v10, v4);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_2592B7A00()
{
  return sub_2592B81CC(&qword_26A37EBC8, (void (*)(uint64_t))type metadata accessor for ShuffleIDProto);
}

uint64_t sub_2592B7A48()
{
  return sub_2592B81CC(&qword_26A37E438, (void (*)(uint64_t))type metadata accessor for ShuffleIDProto);
}

uint64_t sub_2592B7A90()
{
  return sub_2592B81CC(&qword_26A37EBC0, (void (*)(uint64_t))type metadata accessor for ShuffleIDProto);
}

uint64_t sub_2592B7AD8()
{
  return sub_2592B81CC(&qword_26A37EBD0, (void (*)(uint64_t))type metadata accessor for ShuffleIDProto);
}

unint64_t initializeBufferWithCopyOfBuffer for ShuffleIDProto(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    unint64_t v8 = *(void *)(a2 + 8);
    sub_259261DE0(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
    uint64_t v9 = *(int *)(a3 + 36);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    uint64_t v12 = sub_2593095B0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
  }
  return a1;
}

uint64_t destroy for ShuffleIDProto(uint64_t a1, uint64_t a2)
{
  sub_259261F50(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_2593095B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for ShuffleIDProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_259261DE0(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_2593095B0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for ShuffleIDProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_259261DE0(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  sub_259261F50(v8, v9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_2593095B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for ShuffleIDProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_2593095B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ShuffleIDProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_259261F50(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_2593095B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShuffleIDProto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2592B7FAC);
}

uint64_t sub_2592B7FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_2593095B0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ShuffleIDProto(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2592B8070);
}

uint64_t sub_2592B8070(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_2593095B0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2592B8118()
{
  uint64_t result = sub_2593095B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2592B81CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL StoredPhotoProto.hasAccessibilityDescription.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StoredPhotoProto(0) + 40) + 8) != 0;
}

uint64_t type metadata accessor for StoredPhotoProto(uint64_t a1)
{
  return sub_259296DD8(a1, (uint64_t *)&unk_26A37ED58);
}

uint64_t StoredPhotoProto.accessibilityDescription.getter()
{
  unint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for StoredPhotoProto(0) + 40));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t StoredPhotoProto.accessibilityDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for StoredPhotoProto(0) + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t StoredPhotoLayoutProto.timePosition.getter()
{
  unint64_t v1 = (unsigned int *)(*(void *)(v0 + *(int *)(type metadata accessor for StoredPhotoLayoutProto(0) + 20))
                      + OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__timePosition);
  swift_beginAccess();
  return *v1;
}

uint64_t type metadata accessor for StoredPhotoLayoutProto(uint64_t a1)
{
  return sub_259296DD8(a1, (uint64_t *)&unk_26A37ED78);
}

uint64_t StoredPhotoLayoutProto.baseImage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592B83B8(&OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__baseImage, a1);
}

BOOL StoredPhotoLayoutProto.hasMaskImage.getter()
{
  return sub_2592B9968(&qword_26A37E740, &OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__maskImage, type metadata accessor for StoredPhotoLayoutImageLocationProto);
}

uint64_t StoredPhotoLayoutProto.maskImage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2592B83B8(&OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__maskImage, a1);
}

uint64_t sub_2592B83B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E740);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + *(int *)(type metadata accessor for StoredPhotoLayoutProto(0) + 20)) + *a1;
  swift_beginAccess();
  sub_2592207A0(v8, (uint64_t)v7, &qword_26A37E740);
  uint64_t v9 = type metadata accessor for StoredPhotoLayoutImageLocationProto(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9) != 1) {
    return sub_2592BA140((uint64_t)v7, a2, type metadata accessor for StoredPhotoLayoutImageLocationProto);
  }
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  sub_2593095A0();
  uint64_t v10 = (void *)(a2 + *(int *)(v9 + 24));
  *uint64_t v10 = 0;
  v10[1] = 0;
  return sub_25924A3A8((uint64_t)v7, &qword_26A37E740);
}

uint64_t StoredPhotoLayoutProto.originalCrop.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_2592B8534(&OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__originalCrop, a1);
}

uint64_t StoredPhotoLayoutProto.timeRect.getter@<X0>(_OWORD *a1@<X8>)
{
  return sub_2592B8534(&OBJC_IVAR____TtCV10PhotosFace22StoredPhotoLayoutProtoP33_AB2BD396CE90CE0850AF56485F0C251613_StorageClass__timeRect, a1);
}

uint64_t sub_2592B8534@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A37E738);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + *(int *)(type metadata accessor for StoredPhotoLayoutProto(0) + 20)) + *a1;
  swift_beginAccess();
  sub_2592207A0(v8, (uint64_t)v7, &qword_26A37E738);
  uint64_t v9 = type metadata accessor for StoredPhotoLayoutRectProto(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9) != 1) {
    return sub_2592BA140((uint64_t)v7, (uint64_t)a2, type metadata accessor for StoredPhotoLayoutRectProto);
  }
  *a2 = 0u;
  a2[1] = 0u;
  sub_2593095A0();
  return sub_25924A3A8((uint64_t)v7, &qword_26A37E738);
}