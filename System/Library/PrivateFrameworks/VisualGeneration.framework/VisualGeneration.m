id InputImagePersonalizationPolicy.inputImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)v1;
  v3 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v3;
  return v2;
}

uint64_t InputImagePersonalizationPolicy.allowedFaceCountRange.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t InputImagePersonalizationPolicy.detectedFaces.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InputImagePersonalizationPolicy.inputImageCaptionViolationKeywords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InputImagePersonalizationPolicy.inputImageCaption.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InputImagePersonalizationPolicy.inputImageCaptionKeywords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InputImagePersonalizationPolicy.description.getter()
{
  sub_260FE4C20();
  uint64_t v0 = sub_260FE5110();
  swift_bridgeObjectRelease();
  sub_260FE4250();
  sub_260FE4DA0();
  sub_260FE4250();
  sub_260FE4DA0();
  sub_260FE4250();
  swift_bridgeObjectRelease();
  sub_260FE4250();
  return v0;
}

id sub_260D85470@<X0>(uint64_t a1@<X8>)
{
  v2 = *(void **)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v3;
  return v2;
}

unint64_t sub_260D85484(uint64_t a1)
{
  unint64_t result = sub_260D854AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_260D854AC()
{
  unint64_t result = qword_26A8E6140;
  if (!qword_26A8E6140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6140);
  }
  return result;
}

unint64_t sub_260D85500(uint64_t a1)
{
  unint64_t result = sub_260D85528();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_260D85528()
{
  unint64_t result = qword_26A8E6148;
  if (!qword_26A8E6148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6148);
  }
  return result;
}

void sub_260D85580()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = v0[8];
  if (v5)
  {
    swift_bridgeObjectRetain();
    if (*(void *)(sub_260E9D120(v3, v5) + 16))
    {
      sub_260FE4060();
      MEMORY[0x270FA5388]();
      sub_260FE3FF0();
      sub_260FE3180();
      MEMORY[0x270FA5388]();
      sub_260FE3170();
      sub_260FE4120();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E63F8);
      sub_260D86C7C();
      sub_260D86D20();
      sub_260FE4340();
      swift_release();
      sub_260FE4250();
      swift_bridgeObjectRelease();
      sub_260FE4250();
      sub_260FE4250();
      swift_bridgeObjectRelease();
      sub_260FE4250();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6 < v1 || v6 >= v2)
  {
    BOOL v8 = __OFSUB__(v2, 1);
    uint64_t v9 = v2 - 1;
    if (v8)
    {
      __break(1u);
      return;
    }
    if (v9 <= 0)
    {
      sub_260FE4060();
      MEMORY[0x270FA5388]();
      sub_260FE3FF0();
      sub_260FE3180();
      MEMORY[0x270FA5388]();
      sub_260FE3170();
      sub_260FE4120();
    }
    else
    {
      sub_260FE4040();
      MEMORY[0x270FA5388]();
      sub_260FE4030();
      if (v1)
      {
        sub_260FE4020();
        sub_260FE4000();
      }
      sub_260FE4020();
      sub_260FE4000();
      sub_260FE4020();
      sub_260FE4000();
      sub_260FE4020();
      sub_260FE4060();
      MEMORY[0x270FA5388]();
      sub_260FE4050();
      sub_260FE3180();
      MEMORY[0x270FA5388]();
      sub_260FE3170();
      sub_260FE4120();
    }
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_260FE41F0();
    swift_bridgeObjectRelease();
    if (v10 >= 1) {
      sub_260FE4250();
    }
    sub_260FE4250();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_260FE41F0();
  swift_bridgeObjectRelease();
  if (!v11) {
    swift_bridgeObjectRelease();
  }
}

uint64_t initializeBufferWithCopyOfBuffer for InputImagePersonalizationPolicy(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for InputImagePersonalizationPolicy(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InputImagePersonalizationPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  id v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InputImagePersonalizationPolicy(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v5;
  id v7 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for InputImagePersonalizationPolicy(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InputImagePersonalizationPolicy(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InputImagePersonalizationPolicy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InputImagePersonalizationPolicy()
{
  return &type metadata for InputImagePersonalizationPolicy;
}

void type metadata accessor for CGContext(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PixelDimensions(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PixelDimensions(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for MTLPixelFormat(uint64_t a1)
{
}

void type metadata accessor for CVMetalTextureCache(uint64_t a1)
{
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GenerationRecipe.ConditioningImageInfo.ImagePersonalizationFace(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_260D86064(uint64_t a1, uint64_t a2)
{
  return sub_260D86AA0(a1, a2, MEMORY[0x270FA9B78]);
}

uint64_t sub_260D86084()
{
  return sub_260FE3470();
}

uint64_t sub_260D860D0()
{
  return sub_260FE3460();
}

uint64_t sub_260D86128()
{
  return sub_260D86470();
}

BOOL sub_260D86140(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_260D86154(uint64_t a1, id *a2)
{
  uint64_t result = sub_260FE4080();
  *a2 = 0;
  return result;
}

uint64_t sub_260D861CC(uint64_t a1, id *a2)
{
  char v3 = sub_260FE4090();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_260D8624C@<X0>(uint64_t *a1@<X8>)
{
  sub_260FE40A0();
  uint64_t v2 = sub_260FE4070();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_260D86294()
{
  return sub_260FE3450() & 1;
}

uint64_t sub_260D862F8()
{
  return sub_260FE3470();
}

uint64_t sub_260D86344()
{
  return sub_260FE3460();
}

uint64_t sub_260D8639C()
{
  return sub_260D86470();
}

uint64_t sub_260D863B4()
{
  return sub_260FE3470();
}

uint64_t sub_260D86400()
{
  return sub_260FE3460();
}

uint64_t sub_260D86458()
{
  return sub_260D86470();
}

uint64_t sub_260D86470()
{
  return sub_260FE5340();
}

void *sub_260D864D4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_260D864E4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_260D864F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_260FE40A0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_260D86520(uint64_t a1)
{
  uint64_t v2 = sub_260D86848(&qword_26A8E64D8, type metadata accessor for NLTagScheme);
  uint64_t v3 = sub_260D86848(&qword_26A8E64E0, type metadata accessor for NLTagScheme);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_260D865DC(uint64_t a1)
{
  uint64_t v2 = sub_260D86848((unint64_t *)&qword_26A8E64E8, type metadata accessor for Key);
  uint64_t v3 = sub_260D86848((unint64_t *)&unk_26A8E64F0, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_260D86698(uint64_t a1)
{
  uint64_t v2 = sub_260D86848((unint64_t *)&qword_26A8E6508, type metadata accessor for VNImageOption);
  uint64_t v3 = sub_260D86848((unint64_t *)&unk_26A8E6510, type metadata accessor for VNImageOption);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_260D86754()
{
  return sub_260FE3450() & 1;
}

uint64_t sub_260D867B8()
{
  return sub_260D86848(&qword_26A8E63D8, type metadata accessor for CGImage);
}

uint64_t sub_260D86800()
{
  return sub_260D86848(&qword_26A8E63E0, type metadata accessor for CGImage);
}

uint64_t sub_260D86848(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_260D86890()
{
  return sub_260FE3450() & 1;
}

uint64_t sub_260D868F4()
{
  return sub_260D86848(&qword_26A8E63E8, type metadata accessor for CVBuffer);
}

uint64_t sub_260D8693C()
{
  return sub_260D86848(&qword_26A8E63F0, type metadata accessor for CVBuffer);
}

uint64_t sub_260D86984@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_260FE4070();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_260D869CC(uint64_t a1)
{
  uint64_t v2 = sub_260D86848((unint64_t *)&qword_26A8E91B0, type metadata accessor for CIImageOption);
  uint64_t v3 = sub_260D86848(&qword_26A8E6500, type metadata accessor for CIImageOption);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_260D86A88(uint64_t a1, uint64_t a2)
{
  return sub_260D86AA0(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_260D86AA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_260FE40A0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_260D86AE4()
{
  sub_260FE40A0();
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260D86B38()
{
  sub_260FE40A0();
  sub_260FE52F0();
  sub_260FE41D0();
  uint64_t v0 = sub_260FE5340();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_260D86BAC()
{
  uint64_t v0 = sub_260FE40A0();
  uint64_t v2 = v1;
  if (v0 == sub_260FE40A0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_260FE5150();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_260D86C7C()
{
  unint64_t result = qword_26A8E6400;
  if (!qword_26A8E6400)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8E63F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6400);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_260D86D20()
{
  unint64_t result = qword_26A8E6408;
  if (!qword_26A8E6408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6408);
  }
  return result;
}

void type metadata accessor for NLTagScheme(uint64_t a1)
{
}

void type metadata accessor for CFBoolean(uint64_t a1)
{
}

void type metadata accessor for CTFont(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for CGColorSpace(uint64_t a1)
{
}

void type metadata accessor for CIImageOption(uint64_t a1)
{
}

void type metadata accessor for VNImageOption(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for CVPixelBufferLockFlags(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_260D86E50(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_260D86E98()
{
  return sub_260D86848(&qword_26A8E6468, type metadata accessor for VNImageOption);
}

uint64_t sub_260D86EE0()
{
  return sub_260D86848(&qword_26A8E6470, type metadata accessor for VNImageOption);
}

uint64_t sub_260D86F28()
{
  return sub_260D86848(&qword_26A8E6478, type metadata accessor for CIImageOption);
}

uint64_t sub_260D86F70()
{
  return sub_260D86848(&qword_26A8E6480, type metadata accessor for CIImageOption);
}

uint64_t sub_260D86FB8()
{
  return sub_260D86848(&qword_26A8E6488, type metadata accessor for Key);
}

uint64_t sub_260D87000()
{
  return sub_260D86848(&qword_26A8E6490, type metadata accessor for Key);
}

uint64_t sub_260D87048()
{
  return sub_260D86848(&qword_26A8E6498, type metadata accessor for NLTagScheme);
}

uint64_t sub_260D87090()
{
  return sub_260D86848(&qword_26A8E64A0, type metadata accessor for NLTagScheme);
}

uint64_t sub_260D870D8()
{
  return sub_260D86848(&qword_26A8E64A8, type metadata accessor for NLTagScheme);
}

uint64_t sub_260D87120()
{
  return sub_260D86848(&qword_26A8E64B0, type metadata accessor for Key);
}

uint64_t sub_260D87168()
{
  return sub_260D86848(&qword_26A8E64B8, type metadata accessor for CIImageOption);
}

uint64_t sub_260D871B0()
{
  return sub_260D86848(&qword_26A8E64C0, type metadata accessor for VNImageOption);
}

uint64_t sub_260D871F8()
{
  return sub_260D86848((unint64_t *)&qword_26A8E64C8, type metadata accessor for CFString);
}

uint64_t sub_260D87240()
{
  return sub_260D86848(&qword_26A8E64D0, type metadata accessor for CFString);
}

void sub_260D8729C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v19 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6728);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388]();
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F54098]), sel_initWithModelType_safetyType_, a2, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_260FE7020;
  *(void *)(v11 + 32) = v10;
  aBlock[0] = v11;
  sub_260FE4420();
  sub_260D905B0(0, &qword_26A8E6738);
  id v12 = v10;
  v13 = (void *)sub_260FE43F0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(void *)(v15 + ((v9 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v12;
  aBlock[4] = sub_260D90494;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_260E5733C;
  aBlock[3] = &block_descriptor_5;
  v16 = _Block_copy(aBlock);
  id v17 = v12;
  swift_release();
  objc_msgSend(a3, sel_performRequests_onPixelBuffer_withOrientation_andIdentifier_completionHandler_, v13, v19, 1, 0, v16);
  _Block_release(v16);
}

void sub_260D87520(int a1, id a2, int a3, id a4)
{
  if (a2)
  {
    uint64_t v20 = (uint64_t)a2;
    id v4 = a2;
LABEL_21:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6728);
    sub_260FE44B0();
    return;
  }
  id v6 = objc_msgSend(a4, sel_error);
  if (v6)
  {
LABEL_20:
    uint64_t v20 = (uint64_t)v6;
    goto LABEL_21;
  }
  id v7 = objc_msgSend(a4, sel_results);
  if (!v7)
  {
LABEL_15:
    if (qword_26A8E6118 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_260FE3A10();
    __swift_project_value_buffer(v14, (uint64_t)qword_26A90FB90);
    uint64_t v15 = sub_260FE39F0();
    os_log_type_t v16 = sub_260FE4890();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v20 = v18;
      *(_DWORD *)id v17 = 136315138;
      sub_260DB2844(0xD000000000000075, 0x8000000260FFBA90, &v20);
      sub_260FE4AE0();
      _os_log_impl(&dword_260D82000, v15, v16, "%s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26122CA00](v18, -1, -1);
      MEMORY[0x26122CA00](v17, -1, -1);
    }

    sub_260D9055C();
    id v6 = (id)swift_allocError();
    *(void *)uint64_t v19 = 0xD000000000000075;
    *(void *)(v19 + 8) = 0x8000000260FFBA90;
    *(unsigned char *)(v19 + 16) = 1;
    goto LABEL_20;
  }
  uint64_t v8 = v7;
  sub_260D905B0(0, &qword_26A8E6748);
  unint64_t v9 = sub_260FE4400();

  if (!(v9 >> 62))
  {
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_260FE4E40();
  swift_bridgeObjectRelease();
  if (!v13)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_7:
  if ((v9 & 0xC000000000000001) != 0)
  {
    id v10 = (id)MEMORY[0x26122B4C0](0, v9);
    goto LABEL_10;
  }
  if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(v9 + 32);
LABEL_10:
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    self;
    uint64_t v12 = swift_dynamicCastObjCClass();
    if (v12)
    {
      uint64_t v20 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6728);
      sub_260FE44C0();
      return;
    }

    goto LABEL_15;
  }
  __break(1u);
}

uint64_t sub_260D8784C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_260DB65FC(&v17, v12, v13);
    unint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_260D879CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void **a6)
{
  uint64_t v7 = sub_260FE4300();
  uint64_t v8 = MEMORY[0x26122A9E0](v7);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = *a6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a6 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v11 = sub_260DB118C(0, v11[2] + 1, 1, v11);
    *a6 = v11;
  }
  unint64_t v14 = v11[2];
  unint64_t v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t v11 = sub_260DB118C((void *)(v13 > 1), v14 + 1, 1, v11);
    *a6 = v11;
  }
  v11[2] = v14 + 1;
  unint64_t v15 = &v11[2 * v14];
  v15[4] = v8;
  v15[5] = v10;
  return 1;
}

uint64_t sub_260D87A9C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v6 = 0;
    uint64_t v7 = result + 40;
    uint64_t v8 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v9 = (void *)(v7 + 16 * v6);
      while (1)
      {
        if (v6 >= v4)
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        unint64_t result = *(v9 - 1);
        if (result == a2 && *v9 == a3) {
          break;
        }
        unint64_t result = sub_260FE5150();
        if (result) {
          break;
        }
        uint64_t v11 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_35;
        }
        ++v6;
        v9 += 2;
        if (v11 == v4) {
          goto LABEL_33;
        }
      }
      if (v6 < 0) {
        goto LABEL_38;
      }
      uint64_t v12 = v4;
      uint64_t v13 = v6;
      if (v4 != v6)
      {
        while (1)
        {
          if (v13 >= v4) {
            goto LABEL_36;
          }
          unint64_t result = *(v9 - 1);
          if (result != a2 || *v9 != a3)
          {
            unint64_t result = sub_260FE5150();
            if ((result & 1) == 0) {
              break;
            }
          }
          uint64_t v15 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_37;
          }
          ++v13;
          v9 += 2;
          if (v15 == v4)
          {
            uint64_t v12 = v4;
            if (v4 < v6) {
              goto LABEL_39;
            }
            goto LABEL_26;
          }
        }
        uint64_t v12 = v13;
        if (v13 < v6) {
          goto LABEL_39;
        }
LABEL_26:
        if (v4 < v12) {
          goto LABEL_40;
        }
      }
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        unint64_t result = (uint64_t)sub_260DB103C(0, v8[2] + 1, 1, v8);
        uint64_t v8 = (void *)result;
      }
      unint64_t v17 = v8[2];
      unint64_t v16 = v8[3];
      if (v17 >= v16 >> 1)
      {
        unint64_t result = (uint64_t)sub_260DB103C((void *)(v16 > 1), v17 + 1, 1, v8);
        uint64_t v8 = (void *)result;
      }
      v8[2] = v17 + 1;
      uint64_t v18 = &v8[2 * v17];
      v18[4] = v6;
      v18[5] = v12;
      if (v12 < v4)
      {
        uint64_t v6 = v12 + 1;
        if (v12 + 1 != v4) {
          continue;
        }
      }
      break;
    }
  }
LABEL_33:
  sub_260FE53F0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260D87C94()
{
  uint64_t v0 = sub_260D88D08();
  uint64_t v1 = sub_260DBA570(v0);
  uint64_t result = swift_bridgeObjectRelease();
  off_26A8E6640 = v1;
  return result;
}

uint64_t sub_260D87CE8()
{
  uint64_t result = sub_260D88C40();
  qword_26A8E6648 = result;
  return result;
}

uint64_t sub_260D87D20()
{
  uint64_t result = sub_260D88C40();
  qword_26A8E6650 = result;
  return result;
}

double sub_260D87D58()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66F0);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 24;
  *(_OWORD *)(v0 + 16) = xmmword_260FE7030;
  *(void *)(v0 + 32) = &unk_270D15EF0;
  *(void *)(v0 + 40) = &unk_270D15F20;
  *(void *)(v0 + 48) = &unk_270D15F50;
  *(void *)(v0 + 56) = &unk_270D15F80;
  *(void *)(v0 + 64) = &unk_270D15FB0;
  *(void *)(v0 + 72) = &unk_270D15FE0;
  *(void *)(v0 + 80) = &unk_270D16010;
  *(void *)(v0 + 88) = &unk_270D16040;
  *(void *)(v0 + 96) = &unk_270D16070;
  *(void *)(v0 + 104) = &unk_270D160A0;
  *(void *)(v0 + 112) = &unk_270D160D0;
  *(void *)(v0 + 120) = &unk_270D16100;
  *(void *)(v0 + 128) = &unk_270D16130;
  *(void *)(v0 + 136) = &unk_270D16170;
  *(void *)(v0 + 144) = &unk_270D161B0;
  *(void *)(v0 + 152) = &unk_270D161F0;
  *(void *)(v0 + 160) = &unk_270D16230;
  *(void *)(v0 + 168) = &unk_270D16270;
  *(void *)(v0 + 176) = &unk_270D162A0;
  *(void *)(v0 + 184) = &unk_270D162D0;
  *(void *)(v0 + 192) = &unk_270D16300;
  *(void *)(v0 + 200) = &unk_270D16330;
  *(void *)(v0 + 208) = &unk_270D16360;
  *(void *)(v0 + 216) = &unk_270D16390;
  off_26A8E6658 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_260D87E88()
{
  uint64_t result = sub_260D88C40();
  qword_26A8E6660 = result;
  return result;
}

double sub_260D87EC0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66F0);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 23;
  *(_OWORD *)(v0 + 16) = xmmword_260FE7040;
  *(void *)(v0 + 32) = &unk_270D163C0;
  *(void *)(v0 + 40) = &unk_270D163F0;
  *(void *)(v0 + 48) = &unk_270D16420;
  *(void *)(v0 + 56) = &unk_270D16450;
  *(void *)(v0 + 64) = &unk_270D16480;
  *(void *)(v0 + 72) = &unk_270D164B0;
  *(void *)(v0 + 80) = &unk_270D164E0;
  *(void *)(v0 + 88) = &unk_270D16510;
  *(void *)(v0 + 96) = &unk_270D16540;
  *(void *)(v0 + 104) = &unk_270D16570;
  *(void *)(v0 + 112) = &unk_270D165A0;
  *(void *)(v0 + 120) = &unk_270D165D0;
  *(void *)(v0 + 128) = &unk_270D16600;
  *(void *)(v0 + 136) = &unk_270D16630;
  *(void *)(v0 + 144) = &unk_270D16660;
  *(void *)(v0 + 152) = &unk_270D166A0;
  *(void *)(v0 + 160) = &unk_270D166E0;
  *(void *)(v0 + 168) = &unk_270D16720;
  *(void *)(v0 + 176) = &unk_270D16760;
  *(void *)(v0 + 184) = &unk_270D167A0;
  *(void *)(v0 + 192) = &unk_270D167E0;
  *(void *)(v0 + 200) = &unk_270D16820;
  *(void *)(v0 + 208) = &unk_270D16860;
  off_26A8E6668 = (_UNKNOWN *)v0;
  return result;
}

double sub_260D87FE8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66F0);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 19;
  *(_OWORD *)(v0 + 16) = xmmword_260FE7050;
  *(void *)(v0 + 32) = &unk_270D168A0;
  *(void *)(v0 + 40) = &unk_270D168D0;
  *(void *)(v0 + 48) = &unk_270D16900;
  *(void *)(v0 + 56) = &unk_270D16930;
  *(void *)(v0 + 64) = &unk_270D16960;
  *(void *)(v0 + 72) = &unk_270D16990;
  *(void *)(v0 + 80) = &unk_270D169C0;
  *(void *)(v0 + 88) = &unk_270D169F0;
  *(void *)(v0 + 96) = &unk_270D16A20;
  *(void *)(v0 + 104) = &unk_270D16A50;
  *(void *)(v0 + 112) = &unk_270D16A80;
  *(void *)(v0 + 120) = &unk_270D16AB0;
  *(void *)(v0 + 128) = &unk_270D16AE0;
  *(void *)(v0 + 136) = &unk_270D16B10;
  *(void *)(v0 + 144) = &unk_270D16B40;
  *(void *)(v0 + 152) = &unk_270D16B80;
  *(void *)(v0 + 160) = &unk_270D16BC0;
  *(void *)(v0 + 168) = &unk_270D16C00;
  *(void *)(v0 + 176) = &unk_270D16C40;
  off_26A8E6670 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_260D880E8(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe, a2);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_260D88270((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_260D88270((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x26122CA00](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_260D88270(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  uint64_t v31 = *(void *)(a3 + 16);
  if (!v31)
  {
    uint64_t v26 = 0;
    goto LABEL_27;
  }
  uint64_t v32 = a4 + 56;
  uint64_t v30 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  for (uint64_t i = 0; i != v31; ++i)
  {
    uint64_t v7 = (uint64_t *)(v30 + 16 * i);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    sub_260FE52F0();
    swift_bridgeObjectRetain();
    sub_260FE41D0();
    uint64_t v10 = sub_260FE5340();
    uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = 1 << v12;
    if (((1 << v12) & *(void *)(v32 + 8 * (v12 >> 6))) == 0) {
      goto LABEL_3;
    }
    uint64_t v15 = *(void *)(a4 + 48);
    unint64_t v16 = (void *)(v15 + 16 * v12);
    BOOL v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_260FE5150() & 1) == 0)
    {
      uint64_t v21 = ~v11;
      for (unint64_t j = v12 + 1; ; unint64_t j = v23 + 1)
      {
        unint64_t v23 = j & v21;
        if (((*(void *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0) {
          break;
        }
        v24 = (void *)(v15 + 16 * v23);
        BOOL v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_260FE5150() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v13 = v23 >> 6;
          uint64_t v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_12:
    unint64_t v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a2;
  uint64_t v26 = v28;
LABEL_27:
  swift_retain();
  return sub_260E9D7E8(a1, v5, v26, a4);
}

uint64_t sub_260D88484(uint64_t a1, void *a2)
{
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
  uint64_t v39 = sub_260D90340(&qword_26A8E6718, &qword_26A8E66D8);
  v37[0] = a1;
  char v4 = __swift_project_boxed_opaque_existential_1(v37, v38);
  MEMORY[0x270FA5388](v4, v4);
  size_t v6 = (uint64_t *)((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v7 + 16))(v6);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v34);
  uint64_t *boxed_opaque_existential_1Tm = *v6;
  boxed_opaque_existential_1Tm[1] = 0;
  swift_bridgeObjectRetain();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, AssociatedTypeWitness);
  sub_260FE4AD0();
  uint64_t v9 = v33;
  if (v33)
  {
    while (1)
    {
      uint64_t v10 = v32;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v31 = (void *)*a2;
      unint64_t v12 = v31;
      *a2 = 0x8000000000000000;
      unint64_t v14 = sub_260DBACB4(v10, v9);
      uint64_t v15 = v12[2];
      BOOL v16 = (v13 & 1) == 0;
      uint64_t v17 = v15 + v16;
      if (__OFADD__(v15, v16)) {
        break;
      }
      char v18 = v13;
      if (v12[3] >= v17)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_260DC1AF0();
          unint64_t v12 = v31;
        }
      }
      else
      {
        sub_260DBD6CC(v17, isUniquelyReferenced_nonNull_native);
        unint64_t v12 = v31;
        unint64_t v19 = sub_260DBACB4(v10, v9);
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_17;
        }
        unint64_t v14 = v19;
      }
      *a2 = v12;
      swift_bridgeObjectRelease();
      uint64_t v21 = (void *)*a2;
      if ((v18 & 1) == 0)
      {
        v21[(v14 >> 6) + 8] |= 1 << v14;
        v22 = (uint64_t *)(v21[6] + 16 * v14);
        uint64_t *v22 = v10;
        v22[1] = v9;
        *(void *)(v21[7] + 8 * v14) = 0;
        uint64_t v23 = v21[2];
        BOOL v24 = __OFADD__(v23, 1);
        uint64_t v25 = v23 + 1;
        if (v24) {
          goto LABEL_16;
        }
        v21[2] = v25;
        swift_bridgeObjectRetain();
      }
      uint64_t v26 = v21[7];
      uint64_t v27 = *(void *)(v26 + 8 * v14);
      BOOL v24 = __OFADD__(v27, 1);
      uint64_t v28 = v27 + 1;
      if (v24) {
        goto LABEL_15;
      }
      *(void *)(v26 + 8 * v14) = v28;
      swift_bridgeObjectRelease_n();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, AssociatedTypeWitness);
      sub_260FE4AD0();
      uint64_t v9 = v33;
      if (!v33) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t result = sub_260FE5280();
    __break(1u);
  }
  else
  {
LABEL_13:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
  }
  return result;
}

uint64_t sub_260D887B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = a3;
  *(void *)(v3 + 40) = *(void *)a1;
  *(unsigned char *)(v3 + 80) = *(unsigned char *)(a1 + 8);
  return MEMORY[0x270FA2498](sub_260D887E4, 0, 0);
}

uint64_t sub_260D887E4()
{
  uint64_t v1 = sub_260DF25F8();
  v0[6] = v1;
  uint64_t v2 = v1;
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  size_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  uint64_t v7 = sub_260D905B0(0, &qword_26A8E6720);
  *size_t v6 = v0;
  v6[1] = sub_260D88964;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0xD00000000000002FLL, 0x8000000260FFBA40, sub_260D903E0, v5, v7);
}

uint64_t sub_260D88964()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_260D88AEC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_260D88A80;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260D88A80()
{
  uint64_t v1 = *(void *)(v0 + 16);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_260D88AEC()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_260D88B54()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F14040]), sel_initWithUnit_, 0);
  uint64_t v1 = (void *)sub_260FE4070();
  objc_msgSend(v0, sel_setString_, v1);

  uint64_t v3 = MEMORY[0x263F8EE78];
  sub_260FE47F0();

  return v3;
}

uint64_t sub_260D88C40()
{
  uint64_t v7 = MEMORY[0x263F8EE88];
  uint64_t v0 = sub_260EFD974();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = (uint64_t *)(v0 + 40);
    do
    {
      uint64_t v3 = *(v2 - 1);
      uint64_t v4 = *v2;
      swift_bridgeObjectRetain();
      sub_260DB65FC(&v6, v3, v4);
      swift_bridgeObjectRelease();
      v2 += 2;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  sub_260EB9C94(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_260D88D08()
{
  uint64_t v6 = MEMORY[0x263F8EE88];
  unint64_t v0 = sub_260EFDC30();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = (void **)(v0 + 32);
    do
    {
      uint64_t v3 = *v2++;
      swift_bridgeObjectRetain();
      sub_260DB67AC(&v5, v3);
      swift_bridgeObjectRelease();
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  sub_260EB9E24(qword_270D15EC0);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_260D88DE4(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66F8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  v65 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6700);
  uint64_t v10 = MEMORY[0x270FA5388](v8, v9);
  unint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v13);
  uint64_t v15 = (char *)&v52 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6708);
  uint64_t v18 = MEMORY[0x270FA5388](v16, v17);
  uint64_t v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = a1;
  unint64_t v22 = a1[2];
  if (!v22) {
    return 0;
  }
  unint64_t v58 = *(void *)(a2 + 16);
  if (v58 < v22) {
    return 0;
  }
  uint64_t v53 = v19;
  uint64_t v24 = v57[4];
  uint64_t v25 = v57[5];
  uint64_t v26 = v18;
  unint64_t v59 = v22;
  swift_bridgeObjectRetain_n();
  sub_260D87A9C(a2, v24, v25);
  swift_bridgeObjectRelease();
  uint64_t v27 = a2;
  uint64_t v28 = v65;
  uint64_t v54 = v26;
  v52 = v21;
  sub_260FE5400();
  v63 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v64 = v5 + 16;
  v63(v12, v28, v4);
  sub_260D90340(&qword_26A8E6710, &qword_26A8E66F8);
  sub_260FE4720();
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v29 = v5 + 8;
  v62 = v30;
  v30(v28, v4);
  *(void *)&v12[*(int *)(v8 + 36)] = v66[0];
  sub_260D902D8((uint64_t)v12, (uint64_t)v15);
  uint64_t v23 = 0;
  uint64_t v31 = &v15[*(int *)(v8 + 36)];
  uint64_t v32 = 3;
  if (v59 > 3) {
    uint64_t v32 = v59;
  }
  uint64_t v60 = v32;
  uint64_t v61 = v27 + 32;
  v55 = v57 + 11;
  do
  {
LABEL_7:
    uint64_t v33 = *(void *)v31;
    sub_260FE4760();
    if (v33 == v66[0])
    {
      sub_260D90820((uint64_t)v15, &qword_26A8E6700);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
      return v23;
    }
    v34 = (void (*)(uint64_t *, void))sub_260FE47A0();
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    v34(v66, 0);
    uint64_t v38 = v65;
    v63(v65, v15, v4);
    sub_260FE4770();
    uint64_t result = v62(v38, v4);
  }
  while (v36 == v37);
  if (v37 < v36) {
    goto LABEL_50;
  }
  unint64_t v41 = v58;
  unint64_t v40 = v59;
  uint64_t v56 = v29;
  while (2)
  {
    if (v36 >= v37)
    {
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (__OFADD__(v36, v40)) {
      goto LABEL_43;
    }
    unint64_t v43 = v36 + 1;
    if ((uint64_t)v41 < (uint64_t)(v36 + v40))
    {
LABEL_12:
      ++v36;
      if (v43 == v37) {
        goto LABEL_7;
      }
      continue;
    }
    break;
  }
  if (v40 == 1) {
    goto LABEL_11;
  }
  if (v43 >= v41) {
    goto LABEL_48;
  }
  uint64_t result = v57[6];
  v44 = (void *)(v61 + 16 * v43);
  if (result != *v44 || v57[7] != v44[1])
  {
    uint64_t result = sub_260FE5150();
    unint64_t v41 = v58;
    unint64_t v40 = v59;
    if ((result & 1) == 0) {
      goto LABEL_39;
    }
  }
  if (v40 == 2) {
    goto LABEL_11;
  }
  if (v36 + 2 >= v41) {
    goto LABEL_49;
  }
  uint64_t result = v57[8];
  v46 = (void *)(v61 + 16 * (v36 + 2));
  if (result != *v46 || v57[9] != v46[1])
  {
    uint64_t result = sub_260FE5150();
    unint64_t v41 = v58;
    unint64_t v40 = v59;
    if ((result & 1) == 0)
    {
LABEL_39:
      uint64_t v29 = v56;
      goto LABEL_12;
    }
  }
  if (v40 == 3)
  {
LABEL_11:
    BOOL v42 = __OFADD__(v23++, 1);
    uint64_t v29 = v56;
    if (v42) {
      goto LABEL_47;
    }
    goto LABEL_12;
  }
  v47 = v55;
  uint64_t v48 = 3;
  while (v60 != v48)
  {
    unint64_t v49 = v36 + v48;
    if (__OFADD__(v36, v48)) {
      goto LABEL_45;
    }
    if (v49 >= v41) {
      goto LABEL_46;
    }
    uint64_t result = *(v47 - 1);
    v50 = (void *)(v61 + 16 * v49);
    if (result != *v50 || *v47 != v50[1])
    {
      uint64_t result = sub_260FE5150();
      unint64_t v41 = v58;
      unint64_t v40 = v59;
      if ((result & 1) == 0) {
        goto LABEL_39;
      }
    }
    ++v48;
    v47 += 2;
    if (v40 == v48) {
      goto LABEL_11;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_260D89324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)sub_260DAA3DC(MEMORY[0x263F8EE78]);
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return (uint64_t)v4;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = *(void **)(a1 + 8 * v6 + 32);
    uint64_t v8 = (void *)swift_bridgeObjectRetain();
    uint64_t v9 = sub_260D88DE4(v8, a2);
    if (v9 >= 1) {
      break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    if (v5 == ++v6)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v4;
    }
  }
  uint64_t v10 = v9;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v13 = sub_260DBAEE4(v7);
  uint64_t v14 = v4[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (!__OFADD__(v14, v15))
  {
    char v17 = v12;
    if (v4[3] < v16)
    {
      sub_260DBD4EC(v16, isUniquelyReferenced_nonNull_native);
      uint64_t v18 = sub_260DBAEE4(v7);
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_21;
      }
      unint64_t v13 = v18;
      if ((v17 & 1) == 0) {
        goto LABEL_14;
      }
LABEL_12:
      *(void *)(v4[7] + 8 * v13) = v10;
LABEL_16:
      swift_bridgeObjectRelease();
      goto LABEL_3;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v12) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_260DC194C();
      if (v17) {
        goto LABEL_12;
      }
    }
LABEL_14:
    v4[(v13 >> 6) + 8] |= 1 << v13;
    uint64_t v20 = 8 * v13;
    *(void *)(v4[6] + v20) = v7;
    *(void *)(v4[7] + v20) = v10;
    uint64_t v21 = v4[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_20;
    }
    v4[2] = v23;
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
  uint64_t result = sub_260FE5280();
  __break(1u);
  return result;
}

uint64_t sub_260D894F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  uint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    while (v8)
    {
      v8 &= v8 - 1;
      if (*(void *)(a3 + 16))
      {
LABEL_23:
        BOOL v15 = (void *)swift_bridgeObjectRetain();
        uint64_t v16 = sub_260DBAEE4(v15);
        if (v17) {
          uint64_t v18 = *(void *)(*(void *)(a3 + 56) + 8 * v16);
        }
        else {
          uint64_t v18 = 0;
        }
        uint64_t result = swift_bridgeObjectRelease();
        BOOL v19 = __OFADD__(a1, v18);
        a1 += v18;
        if (v19)
        {
          __break(1u);
LABEL_29:
          swift_release();
          return a1;
        }
      }
    }
    int64_t v12 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v9) {
      goto LABEL_29;
    }
    uint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v11;
    if (!v13)
    {
      int64_t v11 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_29;
      }
      uint64_t v13 = *(void *)(v5 + 8 * v11);
      if (!v13)
      {
        int64_t v11 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_29;
        }
        uint64_t v13 = *(void *)(v5 + 8 * v11);
        if (!v13)
        {
          int64_t v11 = v12 + 3;
          if (v12 + 3 >= v9) {
            goto LABEL_29;
          }
          uint64_t v13 = *(void *)(v5 + 8 * v11);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v8 = (v13 - 1) & v13;
    if (*(void *)(a3 + 16)) {
      goto LABEL_23;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    goto LABEL_29;
  }
  uint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v11 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v11 >= v9) {
      goto LABEL_29;
    }
    uint64_t v13 = *(void *)(v5 + 8 * v11);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

BOOL sub_260D896AC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v98 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6790);
  uint64_t v10 = MEMORY[0x270FA5388](v8, v9);
  uint64_t v12 = MEMORY[0x270FA5388](v10, v11);
  int64_t v14 = (char *)&v89 - v13;
  uint64_t v16 = MEMORY[0x270FA5388](v12, v15);
  uint64_t v18 = (char *)&v89 - v17;
  uint64_t v20 = MEMORY[0x270FA5388](v16, v19);
  uint64_t v23 = (char *)&v89 - v22;
  uint64_t v24 = *(void **)a1;
  int v25 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v26 = *(void *)(a2 + 16);
  uint64_t v96 = v26;
  if (!v26)
  {
LABEL_8:
    if (a4) {
      uint64_t v34 = v98;
    }
    else {
      uint64_t v34 = 0;
    }
    if (a4) {
      unint64_t v35 = a4;
    }
    else {
      unint64_t v35 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_260D88B54();
    if (v36) {
      uint64_t v37 = v36;
    }
    else {
      uint64_t v37 = MEMORY[0x263F8EE78];
    }
    if (qword_26A8E6040 != -1) {
      swift_once();
    }
    uint64_t v38 = qword_26A8E6650;
    swift_bridgeObjectRetain();
    uint64_t v39 = *(void *)(sub_260D880E8(v37, v38) + 16);
    swift_release();
    if (v39)
    {
      uint64_t v40 = v34;
      uint64_t v41 = qword_26A8E6650;
      id v42 = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v43 = swift_bridgeObjectRetain();
      uint64_t v44 = sub_260DC5C3C(v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      id v45 = v42;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_260DC5C3C(v37);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66B8);
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_260FE7060;
      *(void *)(v47 + 56) = &type metadata for InputImageCaptionPolicy;
      *(void *)(v47 + 64) = sub_260D9087C();
      uint64_t v48 = swift_allocObject();
      *(void *)(v47 + 32) = v48;
      *(void *)(v48 + 16) = v24;
      *(unsigned char *)(v48 + 24) = v25;
      *(void *)(v48 + 32) = v41;
      *(void *)(v48 + 40) = v40;
      *(void *)(v48 + 48) = v35;
      *(void *)(v48 + 56) = v44;
      *(void *)(v47 + 96) = &type metadata for InputImagePersonalizationPolicy;
      *(void *)(v47 + 104) = sub_260D854AC();
      uint64_t v49 = swift_allocObject();
      *(void *)(v47 + 72) = v49;
      *(void *)(v49 + 16) = v24;
      *(unsigned char *)(v49 + 24) = v25;
      *(_OWORD *)(v49 + 32) = xmmword_260FE7070;
      *(void *)(v49 + 48) = a2;
      *(void *)(v49 + 56) = v41;
      *(void *)(v49 + 64) = v40;
      *(void *)(v49 + 72) = v35;
      *(void *)(v49 + 80) = v46;
      sub_260D901BC();
      swift_allocError();
      uint64_t *v50 = v47;
    }
    else
    {
      uint64_t v100 = v34;
      int v93 = v25;
      if (qword_26A8E6030 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_260D89324((uint64_t)off_26A8E6640, v37);
      uint64_t v53 = swift_bridgeObjectRetain();
      uint64_t v54 = sub_260D9116C(v53);
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_260D894F0(0, v54, v52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v96)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v55 < 1)
        {
          if (qword_26A8E6038 != -1) {
            swift_once();
          }
          uint64_t v68 = qword_26A8E6648;
          swift_bridgeObjectRetain();
          uint64_t v69 = sub_260D880E8(v37, v68);
          swift_bridgeObjectRelease();
          uint64_t v70 = *(void *)(v69 + 16);
          swift_release();
          return v70 == 0;
        }
        else
        {
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      swift_bridgeObjectRelease();
      if (!v55)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v60 = off_26A8E6640;
      uint64_t v61 = MEMORY[0x263F8EE88];
      uint64_t v103 = MEMORY[0x263F8EE88];
      uint64_t v62 = *((void *)off_26A8E6640 + 2);
      uint64_t v97 = a2;
      v92 = v24;
      unint64_t v99 = v35;
      if (v62)
      {
        swift_bridgeObjectRetain();
        uint64_t v63 = 0;
        do
        {
          uint64_t v64 = v60[v63++ + 4];
          uint64_t v101 = v64;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
          sub_260D90340((unint64_t *)&qword_26A8E66E0, &qword_26A8E66D8);
          uint64_t v65 = sub_260FE3F90();
          uint64_t v67 = v66;
          swift_bridgeObjectRelease();
          sub_260DB65FC(&v101, v65, v67);
          swift_bridgeObjectRelease();
        }
        while (v62 != v63);
        swift_bridgeObjectRelease();
        uint64_t v98 = v103;
        a2 = v97;
        uint64_t v24 = v92;
        unint64_t v35 = v99;
        uint64_t v61 = MEMORY[0x263F8EE88];
      }
      else
      {
        uint64_t v98 = MEMORY[0x263F8EE88];
      }
      uint64_t v71 = sub_260D9116C(v52);
      v72 = sub_260DBA570(v71);
      swift_bridgeObjectRelease();
      uint64_t v103 = v61;
      uint64_t v73 = v72[2];
      if (v73)
      {
        swift_bridgeObjectRetain();
        uint64_t v74 = 0;
        do
        {
          uint64_t v75 = v72[v74++ + 4];
          uint64_t v101 = v75;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
          sub_260D90340((unint64_t *)&qword_26A8E66E0, &qword_26A8E66D8);
          uint64_t v76 = sub_260FE3F90();
          uint64_t v78 = v77;
          swift_bridgeObjectRelease();
          sub_260DB65FC(&v101, v76, v78);
          swift_bridgeObjectRelease();
        }
        while (v73 != v74);
        swift_release_n();
        uint64_t v79 = v103;
        a2 = v97;
        uint64_t v24 = v92;
        unint64_t v35 = v99;
      }
      else
      {
        swift_release();
        uint64_t v79 = MEMORY[0x263F8EE88];
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66B8);
      uint64_t v80 = swift_allocObject();
      *(_OWORD *)(v80 + 16) = xmmword_260FE7060;
      *(void *)(v80 + 56) = &type metadata for InputImageCaptionPolicy;
      *(void *)(v80 + 64) = sub_260D9087C();
      uint64_t v81 = swift_allocObject();
      *(void *)(v80 + 32) = v81;
      *(void *)(v81 + 16) = v24;
      char v82 = v93;
      *(unsigned char *)(v81 + 24) = v93;
      uint64_t v83 = v98;
      uint64_t v84 = v100;
      *(void *)(v81 + 32) = v98;
      *(void *)(v81 + 40) = v84;
      *(void *)(v81 + 48) = v35;
      *(void *)(v81 + 56) = v79;
      *(void *)(v80 + 96) = &type metadata for InputImagePersonalizationPolicy;
      *(void *)(v80 + 104) = sub_260D854AC();
      uint64_t v85 = swift_allocObject();
      *(void *)(v80 + 72) = v85;
      *(void *)(v85 + 16) = v24;
      *(unsigned char *)(v85 + 24) = v82;
      *(_OWORD *)(v85 + 32) = xmmword_260FE7070;
      *(void *)(v85 + 48) = a2;
      *(void *)(v85 + 56) = v83;
      *(void *)(v85 + 64) = v84;
      *(void *)(v85 + 72) = v35;
      *(void *)(v85 + 80) = v79;
      sub_260D901BC();
      swift_allocError();
      uint64_t *v86 = v80;
      id v87 = v24;
      swift_bridgeObjectRetain();
      id v88 = v87;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_willThrow();
    return v51;
  }
  unint64_t v90 = a4;
  uint64_t v91 = v4;
  uint64_t v94 = v21;
  uint64_t v95 = v20;
  int v93 = v25;
  v92 = v24;
  uint64_t v27 = *(void *)(sub_260FE3D10() - 8);
  uint64_t v28 = a2 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  int v29 = *MEMORY[0x263F1ED88];
  LODWORD(v100) = *MEMORY[0x263F1EDB8];
  unint64_t v99 = *(void *)(v27 + 72);
  uint64_t v97 = a2;
  swift_bridgeObjectRetain();
  uint64_t v30 = v26;
  while (1)
  {
    sub_260FE3D00();
    sub_260D907BC((uint64_t)v23, (uint64_t)v18, &qword_26A8E6790);
    uint64_t v31 = sub_260FE3D20();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v18, 1, v31) == 1) {
      break;
    }
    sub_260D907BC((uint64_t)v18, (uint64_t)v14, &qword_26A8E6790);
    if ((*(unsigned int (**)(char *, uint64_t))(v32 + 88))(v14, v31) != v29
      || ((*(void (**)(char *, uint64_t))(v32 + 96))(v14, v31),
          uint64_t v31 = sub_260FE3DC0(),
          uint64_t v32 = *(void *)(v31 - 8),
          int v33 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v14, v31),
          v33 != v100))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v31);
      goto LABEL_29;
    }
    sub_260D90820((uint64_t)v23, &qword_26A8E6790);
    sub_260D90820((uint64_t)v18, &qword_26A8E6790);
    v28 += v99;
    if (!--v30)
    {
      a2 = v97;
      swift_bridgeObjectRelease();
      uint64_t v24 = v92;
      int v25 = v93;
      a4 = v90;
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_29:
  uint64_t v101 = 0;
  unint64_t v102 = 0xE000000000000000;
  sub_260FE4C20();
  sub_260FE4250();
  sub_260D907BC((uint64_t)v23, v94, &qword_26A8E6790);
  sub_260FE4150();
  sub_260FE4250();
  swift_bridgeObjectRelease();
  uint64_t v56 = v101;
  unint64_t v57 = v102;
  sub_260D9055C();
  swift_allocError();
  *(void *)uint64_t v58 = v56;
  *(void *)(v58 + 8) = v57;
  *(unsigned char *)(v58 + 16) = 1;
  swift_willThrow();
  sub_260D90820((uint64_t)v23, &qword_26A8E6790);
  sub_260D90820((uint64_t)v18, &qword_26A8E6790);
  return v51;
}

BOOL sub_260D8A0EC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66A8);
  MEMORY[0x270FA5388](v9 - 8, v10);
  BOOL v51 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v56 = sub_260FE3CE0();
  uint64_t v12 = *(void *)(v56 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v56, v13);
  uint64_t v53 = &v38[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v14, v16);
  v50 = &v38[-v17];
  uint64_t v52 = sub_260FE3D10();
  uint64_t v18 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52, v19);
  uint64_t v21 = &v38[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = *(void *)a1;
  int v23 = *(unsigned __int8 *)(a1 + 8);
  int64_t v24 = *(void *)(a2 + 16);
  uint64_t v25 = MEMORY[0x263F8EE78];
  if (v24)
  {
    int v39 = v23;
    uint64_t v40 = v22;
    uint64_t v41 = a3;
    unint64_t v42 = a4;
    uint64_t v43 = v4;
    uint64_t v54 = MEMORY[0x263F8EE78];
    sub_260DB4604(0, v24, 0);
    uint64_t v47 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16);
    unsigned int v46 = *MEMORY[0x263F1EDB8];
    uint64_t v44 = v18 + 32;
    id v45 = (void (**)(unsigned char *, uint64_t))(v12 + 8);
    uint64_t v26 = a2 + 56;
    uint64_t v48 = v18;
    uint64_t v49 = v21;
    uint64_t v27 = v50;
    uint64_t v28 = v53;
    uint64_t v29 = v56;
    do
    {
      sub_260FE3CA0();
      (*v47)(v28, v27, v29);
      uint64_t v30 = sub_260FE3DC0();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = v51;
      (*(void (**)(unsigned char *, void, uint64_t))(v31 + 104))(v51, v46, v30);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v31 + 56))(v32, 0, 1, v30);
      sub_260FE3CF0();
      (*v45)(v27, v29);
      uint64_t v25 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_260DB4604(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v25 = v54;
      }
      unint64_t v34 = *(void *)(v25 + 16);
      unint64_t v33 = *(void *)(v25 + 24);
      uint64_t v35 = v48;
      if (v34 >= v33 >> 1)
      {
        sub_260DB4604(v33 > 1, v34 + 1, 1);
        uint64_t v25 = v54;
      }
      *(void *)(v25 + 16) = v34 + 1;
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v35 + 32))(v25+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v34, v49, v52);
      uint64_t v54 = v25;
      v26 += 32;
      --v24;
    }
    while (v24);
    a4 = v42;
    uint64_t v22 = v40;
    a3 = v41;
    LOBYTE(v23) = v39;
  }
  uint64_t v54 = v22;
  char v55 = v23;
  BOOL v36 = sub_260D896AC((uint64_t)&v54, v25, a3, a4);
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_260D8A4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[72] = a4;
  v4[71] = a3;
  v4[70] = a2;
  v4[69] = a1;
  uint64_t v5 = sub_260FE3DD0();
  v4[73] = v5;
  v4[74] = *(void *)(v5 - 8);
  v4[75] = swift_task_alloc();
  uint64_t v6 = sub_260FE3E10();
  v4[76] = v6;
  v4[77] = *(void *)(v6 - 8);
  v4[78] = swift_task_alloc();
  v4[79] = swift_task_alloc();
  type metadata accessor for GeneratedImage();
  v4[80] = swift_task_alloc();
  v4[81] = swift_task_alloc();
  v4[82] = swift_task_alloc();
  v4[83] = swift_task_alloc();
  v4[84] = swift_task_alloc();
  v4[85] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66A0);
  v4[86] = swift_task_alloc();
  v4[87] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D8A6CC, 0, 0);
}

uint64_t sub_260D8A6CC()
{
  uint64_t v72 = v0;
  uint64_t v1 = *(void *)(v0 + 696);
  uint64_t v2 = *(void *)(v0 + 616);
  uint64_t v3 = *(void *)(v0 + 608);
  uint64_t v4 = *(void *)(v0 + 592);
  uint64_t v5 = *(void *)(v0 + 584);
  uint64_t v6 = *(void *)(v0 + 560);
  uint64_t v7 = *(void *)(v0 + 552);
  *(_OWORD *)(v0 + 32) = xmmword_260FE7060;
  *(void *)(v0 + 72) = v5;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 48));
  uint64_t v68 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
  v68(boxed_opaque_existential_1Tm, v7, v5);
  sub_260D907BC(v6, v1, &qword_26A8E66A0);
  uint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  int v9 = v69(v1, 1, v3);
  uint64_t v10 = *(void *)(v0 + 696);
  if (v9 == 1)
  {
    sub_260D90820(v10, &qword_26A8E66A0);
    *(void *)(v0 + 104) = MEMORY[0x263F8D310];
    *(void *)(v0 + 80) = 7104878;
    *(void *)(v0 + 88) = 0xE300000000000000;
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 616);
    uint64_t v12 = *(void *)(v0 + 608);
    *(void *)(v0 + 352) = v12;
    uint64_t v13 = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 328));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 32))(v13, v10, v12);
    sub_260D906FC((_OWORD *)(v0 + 328), (_OWORD *)(v0 + 80));
  }
  uint64_t v71 = MEMORY[0x263F8EE78];
  sub_260DB45C4(0, 2, 0);
  sub_260D90650(v0 + 48, v0 + 200);
  sub_260D90650(v0 + 200, v0 + 232);
  uint64_t v14 = sub_260FE4150();
  uint64_t v16 = v15;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 200);
  uint64_t v17 = v71;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_260DB45C4(0, *(void *)(v71 + 16) + 1, 1);
    uint64_t v17 = v71;
  }
  unint64_t v19 = *(void *)(v17 + 16);
  unint64_t v18 = *(void *)(v17 + 24);
  if (v19 >= v18 >> 1)
  {
    sub_260DB45C4(v18 > 1, v19 + 1, 1);
    uint64_t v17 = v71;
  }
  *(void *)(v17 + 16) = v19 + 1;
  uint64_t v20 = v17 + 16 * v19;
  *(void *)(v20 + 32) = v14;
  *(void *)(v20 + 40) = v16;
  sub_260D90650(v0 + 80, v0 + 264);
  sub_260D90650(v0 + 264, v0 + 296);
  uint64_t v21 = sub_260FE4150();
  uint64_t v23 = v22;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 264);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_260DB45C4(0, *(void *)(v17 + 16) + 1, 1);
  }
  uint64_t v24 = v71;
  unint64_t v26 = *(void *)(v71 + 16);
  unint64_t v25 = *(void *)(v71 + 24);
  if (v26 >= v25 >> 1)
  {
    sub_260DB45C4(v25 > 1, v26 + 1, 1);
    uint64_t v24 = v71;
  }
  *(void *)(v24 + 16) = v26 + 1;
  uint64_t v27 = v24 + 16 * v26;
  *(void *)(v27 + 32) = v21;
  *(void *)(v27 + 40) = v23;
  swift_arrayDestroy();
  *(void *)(v0 + 480) = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
  sub_260D90340((unint64_t *)&qword_26A8E66E0, &qword_26A8E66D8);
  uint64_t v28 = sub_260FE3F90();
  unint64_t v30 = v29;
  swift_release();
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)(v0 + 680);
  uint64_t v32 = *(void *)(v0 + 568);
  uint64_t v33 = sub_260FE3A10();
  *(void *)(v0 + 704) = __swift_project_value_buffer(v33, (uint64_t)qword_26A90FB90);
  sub_260D90210(v32, v31, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  swift_bridgeObjectRetain();
  unint64_t v34 = sub_260FE39F0();
  os_log_type_t v35 = sub_260FE48A0();
  BOOL v36 = os_log_type_enabled(v34, v35);
  uint64_t v37 = *(void *)(v0 + 680);
  if (v36)
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    uint64_t v71 = v70;
    *(_DWORD *)uint64_t v38 = 136315394;
    uint64_t v39 = GeneratedImage.description.getter();
    *(void *)(v0 + 536) = sub_260DB2844(v39, v40, &v71);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260D90278(v37, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    *(_WORD *)(v38 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 544) = sub_260DB2844(v28, v30, &v71);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v34, v35, "evaluating %s with %s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v70, -1, -1);
    MEMORY[0x26122CA00](v38, -1, -1);
  }
  else
  {
    sub_260D90278(*(void *)(v0 + 680), (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    swift_bridgeObjectRelease_n();
  }

  uint64_t v41 = *(void *)(v0 + 688);
  uint64_t v42 = *(void *)(v0 + 608);
  sub_260D907BC(*(void *)(v0 + 560), v41, &qword_26A8E66A0);
  if (v69(v41, 1, v42) == 1)
  {
    uint64_t v43 = *(void *)(v0 + 568);
    sub_260D90820(*(void *)(v0 + 688), &qword_26A8E66A0);
    uint64_t v44 = *(void **)v43;
    if (*(unsigned char *)(v43 + 8))
    {
      if (*(unsigned char *)(v43 + 8) == 1)
      {
        sub_260FE3D50();
        swift_retain();
        id v45 = v44;
        LOBYTE(v71) = 1;
        uint64_t v46 = sub_260FE3D70();
      }
      else
      {
        sub_260FE3D50();
        swift_retain();
        id v52 = v44;
        LOBYTE(v71) = 1;
        uint64_t v46 = sub_260FE3D80();
      }
    }
    else
    {
      sub_260FE3D50();
      swift_retain();
      id v51 = v44;
      LOBYTE(v71) = 1;
      uint64_t v46 = sub_260FE3D60();
    }
    *(void *)(v0 + 752) = v46;
    uint64_t v53 = (void *)swift_task_alloc();
    *(void *)(v0 + 760) = v53;
    uint64_t v54 = sub_260D9070C(&qword_26A8E6750, MEMORY[0x263F1EDC8]);
    *uint64_t v53 = v0;
    v53[1] = sub_260D8B980;
    uint64_t v55 = *(void *)(v0 + 584);
    uint64_t v56 = *(void *)(v0 + 552);
    return MEMORY[0x270F068E0](v0 + 472, v56, v55, v54);
  }
  else
  {
    uint64_t v47 = *(void *)(v0 + 568);
    (*(void (**)(void, void, void))(*(void *)(v0 + 616) + 32))(*(void *)(v0 + 632), *(void *)(v0 + 688), *(void *)(v0 + 608));
    uint64_t v48 = *(void **)v47;
    if (*(unsigned char *)(v47 + 8))
    {
      if (*(unsigned char *)(v47 + 8) == 1)
      {
        sub_260FE3D50();
        id v49 = v48;
        swift_retain();
        LOBYTE(v71) = 1;
        uint64_t v50 = sub_260FE3D70();
      }
      else
      {
        sub_260FE3D50();
        id v58 = v48;
        swift_retain();
        LOBYTE(v71) = 1;
        uint64_t v50 = sub_260FE3D80();
      }
    }
    else
    {
      sub_260FE3D50();
      id v57 = v48;
      swift_retain();
      LOBYTE(v71) = 1;
      uint64_t v50 = sub_260FE3D60();
    }
    *(void *)(v0 + 712) = v50;
    uint64_t v59 = *(void *)(v0 + 632);
    uint64_t v60 = *(void *)(v0 + 624);
    uint64_t v61 = *(void *)(v0 + 616);
    uint64_t v62 = *(void *)(v0 + 608);
    uint64_t v63 = *(uint64_t **)(v0 + 600);
    uint64_t v64 = *(void *)(v0 + 584);
    uint64_t v65 = *(void *)(v0 + 552);
    *(void *)(v0 + 408) = v0 + 440;
    *(void *)(v0 + 416) = v0 + 448;
    v68(v63, v65, v64);
    *(void *)(v0 + 392) = v63;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v60, v59, v62);
    *(void *)(v0 + 400) = v60;
    uint64_t v66 = (void *)swift_task_alloc();
    *(void *)(v0 + 720) = v66;
    *(void *)(v0 + 376) = v64;
    *(void *)(v0 + 384) = v62;
    *(void *)(v0 + 360) = sub_260D9070C(&qword_26A8E6750, MEMORY[0x263F1EDC8]);
    *(void *)(v0 + 368) = sub_260D9070C(&qword_26A8E6768, MEMORY[0x263F1EDE0]);
    *uint64_t v66 = v0;
    v66[1] = sub_260D8B06C;
    return MEMORY[0x270F068D8](v0 + 408, v0 + 392, 2, v0 + 376, v0 + 360);
  }
}

uint64_t sub_260D8B06C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 728) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_260D8C014;
  }
  else
  {
    uint64_t v4 = v2[78];
    uint64_t v5 = v2[77];
    uint64_t v6 = v2[76];
    uint64_t v7 = v2[75];
    uint64_t v8 = v2[74];
    uint64_t v9 = v2[73];
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v2[92] = v10;
    v2[93] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v10(v4, v6);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    uint64_t v3 = sub_260D8B1D8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_260D8B1D8()
{
  id v57 = v0;
  uint64_t v2 = v0[55];
  uint64_t v1 = v0[56];
  sub_260D90210(v0[71], v0[84], (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_260FE39F0();
  os_log_type_t v4 = sub_260FE48A0();
  uint64_t v55 = v1;
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[84];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v56 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v8 = GeneratedImage.description.getter();
    v0[65] = sub_260DB2844(v8, v9, &v56);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260D90278(v5, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    *(_WORD *)(v6 + 12) = 2080;
    uint64_t v10 = sub_260FE3D10();
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = MEMORY[0x26122AC60](v11, v10);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = v12;
    uint64_t v1 = v55;
    v0[66] = sub_260DB2844(v15, v14, &v56);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v3, v4, "%s detected faces: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v7, -1, -1);
    MEMORY[0x26122CA00](v6, -1, -1);
  }
  else
  {
    sub_260D90278(v0[84], (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    swift_bridgeObjectRelease_n();
  }

  sub_260D90210(v0[71], v0[83], (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_260FE39F0();
  os_log_type_t v17 = sub_260FE48A0();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v19 = v0[83];
  if (v18)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v56 = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v22 = GeneratedImage.description.getter();
    v0[63] = sub_260DB2844(v22, v23, &v56);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260D90278(v19, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v24 = sub_260FE3DA0();
    swift_bridgeObjectRetain();
    uint64_t v25 = MEMORY[0x26122AC60](v55, v24);
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t v28 = v25;
    uint64_t v1 = v55;
    v0[64] = sub_260DB2844(v28, v27, &v56);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v16, v17, "%s detected human heads: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v21, -1, -1);
    MEMORY[0x26122CA00](v20, -1, -1);
  }
  else
  {
    sub_260D90278(v0[83], (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    swift_bridgeObjectRelease_n();
  }

  uint64_t v29 = v0[82];
  uint64_t v30 = v0[71];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6758);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7060;
  *(void *)(inited + 32) = sub_260D914A4(v2);
  *(void *)(inited + 40) = sub_260D914C4(v1);
  uint64_t v32 = sub_260DEEBC8(inited, 0.45);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6760);
  swift_arrayDestroy();
  sub_260D90210(v30, v29, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  uint64_t v54 = v32;
  swift_bridgeObjectRetain_n();
  uint64_t v33 = sub_260FE39F0();
  os_log_type_t v34 = sub_260FE48A0();
  BOOL v35 = os_log_type_enabled(v33, v34);
  BOOL v36 = (void (*)(uint64_t, uint64_t))v0[92];
  uint64_t v37 = v0[82];
  uint64_t v38 = v0[79];
  uint64_t v39 = v0[76];
  if (v35)
  {
    uint64_t v53 = v0[76];
    uint64_t v40 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    id v51 = v36;
    uint64_t v41 = v56;
    *(_DWORD *)uint64_t v40 = 136315394;
    uint64_t v42 = GeneratedImage.description.getter();
    uint64_t v52 = v38;
    v0[61] = sub_260DB2844(v42, v43, &v56);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260D90278(v37, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    *(_WORD *)(v40 + 12) = 2080;
    uint64_t v44 = sub_260FE3CE0();
    uint64_t v45 = swift_bridgeObjectRetain();
    uint64_t v46 = MEMORY[0x26122AC60](v45, v44);
    unint64_t v48 = v47;
    swift_bridgeObjectRelease();
    v0[62] = sub_260DB2844(v46, v48, &v56);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v33, v34, "%s unique persons bounds: %s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v41, -1, -1);
    MEMORY[0x26122CA00](v40, -1, -1);
    swift_release();

    v51(v52, v53);
  }
  else
  {
    swift_release();

    swift_bridgeObjectRelease_n();
    sub_260D90278(v37, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    v36(v38, v39);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v49 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
  return v49(v2, v55, v54);
}

uint64_t sub_260D8B980()
{
  *(void *)(*(void *)v1 + 768) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_260D8C180;
  }
  else {
    uint64_t v2 = sub_260D8BA94;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260D8BA94()
{
  uint64_t v37 = v0;
  uint64_t v1 = v0[59];
  sub_260D90210(v0[71], v0[81], (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_260FE39F0();
  os_log_type_t v3 = sub_260FE48A0();
  uint64_t v35 = v1;
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[81];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v36 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = GeneratedImage.description.getter();
    v0[54] = sub_260DB2844(v7, v8, &v36);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260D90278(v4, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v9 = sub_260FE3D10();
    swift_bridgeObjectRetain();
    uint64_t v10 = MEMORY[0x26122AC60](v35, v9);
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v13 = v10;
    uint64_t v1 = v35;
    v0[53] = sub_260DB2844(v13, v12, &v36);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v2, v3, "%s detected faces: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v6, -1, -1);
    MEMORY[0x26122CA00](v5, -1, -1);
  }
  else
  {
    sub_260D90278(v0[81], (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    swift_bridgeObjectRelease_n();
  }

  uint64_t v14 = v0[80];
  uint64_t v15 = v0[71];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6758);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7080;
  *(void *)(inited + 32) = sub_260D914A4(v1);
  uint64_t v17 = sub_260DEEBC8(inited, 0.45);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6760);
  swift_arrayDestroy();
  sub_260D90210(v15, v14, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  uint64_t v34 = v17;
  swift_bridgeObjectRetain_n();
  BOOL v18 = sub_260FE39F0();
  os_log_type_t v19 = sub_260FE48A0();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v21 = v0[80];
  if (v20)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v36 = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v24 = GeneratedImage.description.getter();
    v0[58] = sub_260DB2844(v24, v25, &v36);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260D90278(v21, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v26 = sub_260FE3CE0();
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = MEMORY[0x26122AC60](v27, v26);
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    v0[57] = sub_260DB2844(v28, v30, &v36);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v18, v19, "%s unique persons bounds: %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v23, -1, -1);
    MEMORY[0x26122CA00](v22, -1, -1);
  }
  else
  {
    sub_260D90278(v0[80], (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    swift_bridgeObjectRelease_n();
  }

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
  uint64_t v32 = MEMORY[0x263F8EE78];
  return v31(v35, v32, v34);
}

uint64_t sub_260D8C014()
{
  uint64_t v1 = v0[79];
  uint64_t v2 = v0[78];
  uint64_t v3 = v0[77];
  uint64_t v4 = v0[76];
  uint64_t v5 = v0[75];
  uint64_t v6 = v0[74];
  uint64_t v7 = v0[73];
  swift_release();
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v8(v1, v4);
  v8(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_260D8C180()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260D8C28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  v3[11] = type metadata accessor for DetectedPersonsPolicy();
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for DetectedFacesPolicy();
  v3[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66A0);
  v3[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6770);
  v3[16] = swift_task_alloc();
  uint64_t v4 = sub_260FE3E10();
  v3[17] = v4;
  v3[18] = *(void *)(v4 - 8);
  v3[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66A8);
  v3[20] = swift_task_alloc();
  uint64_t v5 = sub_260FE3DD0();
  v3[21] = v5;
  v3[22] = *(void *)(v5 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = type metadata accessor for NonPersonalizedGeneratedImageCaptionPolicy(0);
  v3[25] = swift_task_alloc();
  v3[26] = type metadata accessor for GeneratedImage();
  v3[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D8C4FC, 0, 0);
}

uint64_t sub_260D8C4FC()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(unsigned char *)(v0 + 25) = *(unsigned char *)(v1 + *(int *)(*(void *)(v0 + 208) + 24));
  uint64_t v2 = *(void **)v1;
  *(void *)(v0 + 224) = *(void *)v1;
  LOBYTE(v1) = *(unsigned char *)(v1 + 8);
  *(void *)(v0 + 16) = v2;
  *(unsigned char *)(v0 + 24) = v1;
  id v3 = v2;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 232) = v4;
  *(void *)uint64_t v4 = v0;
  *(void *)(v4 + 8) = sub_260D8C5EC;
  uint64_t v5 = *(void *)(v0 + 80);
  *(void *)(v4 + 24) = 5;
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = *(void *)(v0 + 16);
  *(unsigned char *)(v4 + 80) = *(unsigned char *)(v0 + 24);
  return MEMORY[0x270FA2498](sub_260D887E4, 0, 0);
}

uint64_t sub_260D8C5EC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 240) = a1;
  *(void *)(v3 + 248) = v1;
  swift_task_dealloc();

  if (v1) {
    uint64_t v4 = sub_260D8D0D4;
  }
  else {
    uint64_t v4 = sub_260D8C710;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_260D8C710()
{
  uint64_t v82 = v0;
  id v1 = objc_msgSend(*(id *)(v0 + 240), sel_caption);
  if (!v1)
  {
LABEL_20:
    uint64_t v29 = *(void *)(v0 + 152);
    uint64_t v30 = *(void *)(v0 + 160);
    uint64_t v31 = *(void *)(v0 + 144);
    os_log_t logb = *(os_log_t *)(v0 + 136);
    uint64_t v32 = *(void *)(v0 + 120);
    uint64_t v33 = *(void *)(v0 + 128);
    uint64_t v34 = *MEMORY[0x263F1EDB0];
    uint64_t v35 = sub_260FE3DC0();
    uint64_t v36 = *(void *)(v35 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 104))(v30, v34, v35);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v30, 0, 1, v35);
    sub_260FE3DE0();
    LOBYTE(v81) = 0;
    sub_260FE3DB0();
    uint64_t v37 = *MEMORY[0x263F1EDD0];
    uint64_t v38 = sub_260FE3E00();
    uint64_t v39 = *(void *)(v38 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 104))(v33, v37, v38);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v33, 0, 1, v38);
    sub_260FE3E20();
    LOBYTE(v81) = 0;
    sub_260FE3DF0();
    (*(void (**)(uint64_t, uint64_t, os_log_t))(v31 + 16))(v32, v29, logb);
    (*(void (**)(uint64_t, void, uint64_t, os_log_t))(v31 + 56))(v32, 0, 1, logb);
    uint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v40;
    *uint64_t v40 = v0;
    v40[1] = sub_260D8D1B0;
    uint64_t v41 = *(void *)(v0 + 184);
    uint64_t v42 = *(void *)(v0 + 120);
    uint64_t v43 = *(void *)(v0 + 64);
    uint64_t v44 = *(void *)(v0 + 72);
    return sub_260D8A4E8(v41, v42, v43, v44);
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_260FE40A0();
  unint64_t v5 = v4;

  uint64_t v6 = sub_260D88B54();
  if (!v6)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v7 = v6;
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)(v0 + 64);
  uint64_t v9 = *(void *)(v0 + 216);
  uint64_t v10 = sub_260FE3A10();
  __swift_project_value_buffer(v10, (uint64_t)qword_26A90FB90);
  sub_260D90210(v8, v9, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_260FE39F0();
  os_log_type_t v12 = sub_260FE48A0();
  log = v11;
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = *(void *)(v0 + 216);
  if (v13)
  {
    uint64_t v74 = v7;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    uint64_t v81 = v71;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = GeneratedImage.description.getter();
    *(void *)(v0 + 48) = sub_260DB2844(v16, v17, &v81);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260D90278(v14, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 56) = sub_260DB2844(v3, v5, &v81);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, log, v12, "Evaluating the non-personalized %s caption \"%s\"", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v71, -1, -1);
    uint64_t v18 = v15;
    uint64_t v7 = v74;
    MEMORY[0x26122CA00](v18, -1, -1);
  }
  else
  {
    sub_260D90278(*(void *)(v0 + 216), (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    swift_bridgeObjectRelease_n();
  }
  if (qword_26A8E6048 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_260D89324((uint64_t)off_26A8E6658, v7);
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_260D9116C(v20);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_260D894F0(0, v21, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26A8E6050 != -1) {
      swift_once();
    }
    uint64_t v26 = qword_26A8E6660;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_260D880E8(v7, v26);
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void *)(v27 + 16);
    swift_release();
    if (v28) {
      goto LABEL_20;
    }

    uint64_t v55 = 0;
  }
  else
  {
    if (*(unsigned char *)(v0 + 25) == 1) {
      float v23 = 0.0;
    }
    else {
      float v23 = 0.4;
    }
    objc_msgSend(*(id *)(v0 + 240), sel_score);
    float v25 = v24;
    swift_bridgeObjectRelease();
    if (v23 > v25)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    uint64_t v75 = v3;
    os_log_t loga = (os_log_t)v5;
    sub_260D90210(*(void *)(v0 + 64), *(void *)(v0 + 200), (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    uint64_t v46 = off_26A8E6658;
    uint64_t v47 = MEMORY[0x263F8EE88];
    uint64_t v79 = MEMORY[0x263F8EE88];
    uint64_t v48 = *((void *)off_26A8E6658 + 2);
    if (v48)
    {
      *(void *)type = v19;
      swift_bridgeObjectRetain();
      uint64_t v49 = 0;
      do
      {
        uint64_t v50 = v46[v49++ + 4];
        *(void *)(v0 + 32) = v50;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
        sub_260D90340((unint64_t *)&qword_26A8E66E0, &qword_26A8E66D8);
        uint64_t v51 = sub_260FE3F90();
        uint64_t v53 = v52;
        swift_bridgeObjectRelease();
        sub_260DB65FC(&v81, v51, v53);
        swift_bridgeObjectRelease();
      }
      while (v48 != v49);
      swift_bridgeObjectRelease();
      uint64_t v54 = v79;
      uint64_t v19 = *(void *)type;
      uint64_t v47 = MEMORY[0x263F8EE88];
    }
    else
    {
      uint64_t v54 = MEMORY[0x263F8EE88];
    }
    uint64_t v56 = sub_260D9116C(v19);
    id v57 = sub_260DBA570(v56);
    swift_bridgeObjectRelease();
    uint64_t v80 = v47;
    uint64_t v58 = v57[2];
    if (v58)
    {
      *(void *)typea = v54;
      swift_bridgeObjectRetain();
      uint64_t v59 = 0;
      do
      {
        uint64_t v60 = v57[v59++ + 4];
        *(void *)(v0 + 40) = v60;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
        sub_260D90340((unint64_t *)&qword_26A8E66E0, &qword_26A8E66D8);
        uint64_t v61 = sub_260FE3F90();
        uint64_t v63 = v62;
        swift_bridgeObjectRelease();
        sub_260DB65FC(&v81, v61, v63);
        swift_bridgeObjectRelease();
      }
      while (v58 != v59);
      swift_release_n();
      uint64_t v64 = v80;
      uint64_t v54 = *(void *)typea;
    }
    else
    {
      swift_release();
      uint64_t v64 = MEMORY[0x263F8EE88];
    }
    uint64_t v65 = *(void **)(v0 + 240);
    uint64_t v67 = *(int **)(v0 + 192);
    uint64_t v66 = *(void *)(v0 + 200);
    *(void *)(v66 + v67[5]) = v54;
    uint64_t v68 = (uint64_t *)(v66 + v67[6]);
    *uint64_t v68 = v75;
    v68[1] = (uint64_t)loga;
    *(void *)(v66 + v67[7]) = v64;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66B8);
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_260FE7080;
    *(void *)(v55 + 56) = v67;
    *(void *)(v55 + 64) = sub_260D9070C(&qword_26A8E6778, (void (*)(uint64_t))type metadata accessor for NonPersonalizedGeneratedImageCaptionPolicy);
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v55 + 32));
    sub_260D90754(v66, (uint64_t)boxed_opaque_existential_1Tm, type metadata accessor for NonPersonalizedGeneratedImageCaptionPolicy);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v70 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v70(v55);
}

uint64_t sub_260D8D0D4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260D8D1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = (void *)*v4;
  uint64_t v6 = (void *)*v4;
  v6[33] = a1;
  v6[34] = a2;
  v6[35] = a3;
  v6[36] = v3;
  swift_task_dealloc();
  sub_260D90820(v5[15], &qword_26A8E66A0);
  if (v3) {
    uint64_t v7 = sub_260D8D634;
  }
  else {
    uint64_t v7 = sub_260D8D2F8;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_260D8D2F8()
{
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 264);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v9 = *(void *)(v0 + 136);
  if (*(void *)(v1 + 16))
  {
    uint64_t v24 = *(void *)(v0 + 136);
    uint64_t v25 = *(void *)(v0 + 168);
    uint64_t v10 = *(void *)(v0 + 104);
    uint64_t v11 = *(void *)(v0 + 112);
    uint64_t v21 = *(void *)(v0 + 144);
    uint64_t v22 = *(void *)(v0 + 152);
    BOOL v13 = *(int **)(v0 + 88);
    uint64_t v12 = *(void *)(v0 + 96);
    uint64_t v23 = *(void *)(v0 + 176);
    uint64_t v14 = *(void *)(v0 + 64);
    uint64_t v20 = *(void **)(v0 + 240);
    sub_260D90210(v14, v11, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    *(_OWORD *)(v11 + *(int *)(v10 + 20)) = xmmword_260FE7090;
    *(void *)(v11 + *(int *)(v10 + 24)) = v3;
    sub_260D90210(v14, v12, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    *(_OWORD *)(v12 + v13[5]) = xmmword_260FE7090;
    *(void *)(v12 + v13[6]) = v1;
    *(void *)(v12 + v13[7]) = v3;
    *(void *)(v12 + v13[8]) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66B8);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_260FE7060;
    *(void *)(v15 + 56) = v10;
    *(void *)(v15 + 64) = sub_260D9070C(&qword_26A8E66C0, (void (*)(uint64_t))type metadata accessor for DetectedFacesPolicy);
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v15 + 32));
    sub_260D90210(v11, (uint64_t)boxed_opaque_existential_1Tm, (uint64_t (*)(void))type metadata accessor for DetectedFacesPolicy);
    *(void *)(v15 + 96) = v13;
    *(void *)(v15 + 104) = sub_260D9070C(&qword_26A8E66C8, (void (*)(uint64_t))type metadata accessor for DetectedPersonsPolicy);
    unint64_t v17 = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v15 + 72));
    sub_260D90754(v12, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for DetectedPersonsPolicy);
    swift_bridgeObjectRetain();

    sub_260D90278(v11, (uint64_t (*)(void))type metadata accessor for DetectedFacesPolicy);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v24);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v4, v25);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v15 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v18(v15);
}

uint64_t sub_260D8D634()
{
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 136);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_260D8D758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  v3[13] = type metadata accessor for PersonalizedGeneratedImageCaptionPolicy(0);
  v3[14] = swift_task_alloc();
  type metadata accessor for GeneratedImage();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for DetectedPersonsPolicy();
  v3[17] = swift_task_alloc();
  v3[18] = type metadata accessor for DetectedFacesPolicy();
  v3[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66A0);
  v3[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66A8);
  v3[21] = swift_task_alloc();
  uint64_t v4 = sub_260FE3DD0();
  v3[22] = v4;
  v3[23] = *(void *)(v4 - 8);
  v3[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D8D938, 0, 0);
}

uint64_t sub_260D8D938()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = *MEMORY[0x263F1EDB8];
  uint64_t v4 = sub_260FE3DC0();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104))(v1, v3, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  sub_260FE3DE0();
  uint64_t v6 = sub_260FE3E10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 1, 1, v6);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[25] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_260D8DABC;
  uint64_t v8 = v0[24];
  uint64_t v9 = v0[20];
  uint64_t v10 = v0[10];
  uint64_t v11 = v0[11];
  return sub_260D8A4E8(v8, v9, v10, v11);
}

uint64_t sub_260D8DABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  uint64_t v6 = (void *)*v4;
  v6[26] = a1;
  v6[27] = a2;
  v6[28] = a3;
  v6[29] = v3;
  swift_task_dealloc();
  sub_260D90820(v5[20], &qword_26A8E66A0);
  if (v3) {
    uint64_t v7 = sub_260D8DF88;
  }
  else {
    uint64_t v7 = sub_260D8DC04;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_260D8DC04()
{
  uint64_t v1 = *(void *)(v0 + 224);
  if (*(void *)(v1 + 16) >= 2uLL)
  {
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v8 = *(void *)(v0 + 216);
    uint64_t v20 = *(void *)(v0 + 184);
    uint64_t v21 = *(void *)(v0 + 176);
    uint64_t v22 = *(void *)(v0 + 192);
    uint64_t v11 = *(void *)(v0 + 144);
    uint64_t v10 = *(void *)(v0 + 152);
    uint64_t v12 = *(int **)(v0 + 128);
    uint64_t v13 = *(void *)(v0 + 136);
    uint64_t v14 = *(void *)(v0 + 80);
    sub_260D90210(v14, v10, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    *(_OWORD *)(v10 + *(int *)(v11 + 20)) = xmmword_260FE70A0;
    *(void *)(v10 + *(int *)(v11 + 24)) = v9;
    sub_260D90210(v14, v13, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    *(_OWORD *)(v13 + v12[5]) = xmmword_260FE70A0;
    *(void *)(v13 + v12[6]) = v1;
    *(void *)(v13 + v12[7]) = v9;
    *(void *)(v13 + v12[8]) = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66B8);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_260FE7060;
    *(void *)(v15 + 56) = v11;
    *(void *)(v15 + 64) = sub_260D9070C(&qword_26A8E66C0, (void (*)(uint64_t))type metadata accessor for DetectedFacesPolicy);
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v15 + 32));
    sub_260D90210(v10, (uint64_t)boxed_opaque_existential_1Tm, (uint64_t (*)(void))type metadata accessor for DetectedFacesPolicy);
    *(void *)(v15 + 96) = v12;
    *(void *)(v15 + 104) = sub_260D9070C(&qword_26A8E66C8, (void (*)(uint64_t))type metadata accessor for DetectedPersonsPolicy);
    unint64_t v17 = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v15 + 72));
    sub_260D90754(v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for DetectedPersonsPolicy);
    swift_bridgeObjectRetain();
    sub_260D90278(v10, (uint64_t (*)(void))type metadata accessor for DetectedFacesPolicy);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v18(v15);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 80);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void **)v2;
    *(void *)(v0 + 240) = *(void *)v2;
    char v4 = *(unsigned char *)(v2 + 8);
    *(void *)(v0 + 16) = v3;
    *(unsigned char *)(v0 + 24) = v4;
    id v5 = v3;
    uint64_t v6 = swift_task_alloc();
    *(void *)(v0 + 248) = v6;
    *(void *)uint64_t v6 = v0;
    *(void *)(v6 + 8) = sub_260D8E05C;
    uint64_t v7 = *(void *)(v0 + 96);
    *(void *)(v6 + 24) = 5;
    *(void *)(v6 + 32) = v7;
    *(void *)(v6 + 40) = *(void *)(v0 + 16);
    *(unsigned char *)(v6 + 80) = *(unsigned char *)(v0 + 24);
    return MEMORY[0x270FA2498](sub_260D887E4, 0, 0);
  }
}

uint64_t sub_260D8DF88()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_260D8E05C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 256) = a1;
  *(void *)(v3 + 264) = v1;
  swift_task_dealloc();

  if (v1) {
    char v4 = sub_260D8ED40;
  }
  else {
    char v4 = sub_260D8E180;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_260D8E180()
{
  int64_t v97 = v0;
  id v1 = objc_msgSend(*(id *)(v0 + 256), sel_caption);
  if (!v1)
  {
    uint64_t v19 = *(void *)(v0 + 184);
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v20 = *(void *)(v0 + 176);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
LABEL_11:
    uint64_t v23 = 0;
    goto LABEL_12;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_260FE40A0();
  id v5 = v4;

  uint64_t v6 = sub_260D88B54();
  if (!v6)
  {
    uint64_t v21 = *(void **)(v0 + 256);
    (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));

LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v7 = (uint64_t *)v6;
  if (!*(void *)(v6 + 16))
  {
    uint64_t v22 = *(void **)(v0 + 256);
    (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));

    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (qword_26A8E6118 != -1) {
    goto LABEL_82;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v10 = sub_260FE3A10();
  __swift_project_value_buffer(v10, (uint64_t)qword_26A90FB90);
  sub_260D90210(v8, v9, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_260FE39F0();
  os_log_type_t v12 = sub_260FE48A0();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = *(void *)(v0 + 120);
  id v87 = v5;
  int64_t v88 = v0;
  uint64_t v86 = v3;
  if (v13)
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    unint64_t v96 = v89;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = GeneratedImage.description.getter();
    *(void *)(v0 + 64) = sub_260DB2844(v16, v17, (uint64_t *)&v96);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260D90278(v14, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 72) = sub_260DB2844(v3, (unint64_t)v5, (uint64_t *)&v96);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v11, v12, "evaluating the personalized %s caption \"%s\"", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v89, -1, -1);
    MEMORY[0x26122CA00](v15, -1, -1);
  }
  else
  {
    sub_260D90278(v14, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain();
  unint64_t v96 = sub_260DAA4DC(MEMORY[0x263F8EE78]);
  sub_260D88484((uint64_t)v7, &v96);
  swift_bridgeObjectRelease();
  os_log_t log = (os_log_t)v96;
  uint64_t v93 = MEMORY[0x263F8EE88];
  if (qword_26A8E6058 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_260D89324((uint64_t)off_26A8E6668, (uint64_t)v7);
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_260D9116C(v27);
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_260D894F0(0, v3, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v28 < 2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  uint64_t v84 = v7;
  uint64_t v7 = (uint64_t *)sub_260D9116C(v26);
  int64_t v0 = 0;
  unint64_t v90 = v7 + 7;
  uint64_t v29 = -1;
  uint64_t v30 = -1 << *((unsigned char *)v7 + 32);
  if (-v30 < 64) {
    uint64_t v29 = ~(-1 << -(char)v30);
  }
  unint64_t v31 = v29 & v7[7];
  int64_t v32 = (unint64_t)(63 - v30) >> 6;
  while (1)
  {
    if (v31)
    {
      unint64_t v33 = __clz(__rbit64(v31));
      v31 &= v31 - 1;
      unint64_t v34 = v33 | (v0 << 6);
      goto LABEL_23;
    }
    int64_t v37 = v0 + 1;
    if (__OFADD__(v0, 1))
    {
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    if (v37 >= v32) {
      goto LABEL_40;
    }
    unint64_t v38 = v90[v37];
    ++v0;
    if (!v38)
    {
      int64_t v0 = v37 + 1;
      if (v37 + 1 >= v32) {
        goto LABEL_40;
      }
      unint64_t v38 = v90[v0];
      if (!v38)
      {
        int64_t v0 = v37 + 2;
        if (v37 + 2 >= v32) {
          goto LABEL_40;
        }
        unint64_t v38 = v90[v0];
        if (!v38) {
          break;
        }
      }
    }
LABEL_38:
    unint64_t v31 = (v38 - 1) & v38;
    unint64_t v34 = __clz(__rbit64(v38)) + (v0 << 6);
LABEL_23:
    uint64_t v3 = *(void *)(v7[6] + 8 * v34);
    *(void *)(v88 + 56) = v3;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
    sub_260D90340((unint64_t *)&qword_26A8E66E0, &qword_26A8E66D8);
    uint64_t v35 = sub_260FE3F90();
    id v5 = v36;
    swift_bridgeObjectRelease();
    sub_260DB65FC((uint64_t *)&v96, v35, (uint64_t)v5);
    swift_bridgeObjectRelease();
  }
  int64_t v39 = v37 + 3;
  if (v39 >= v32) {
    goto LABEL_40;
  }
  unint64_t v38 = v90[v39];
  if (v38)
  {
    int64_t v0 = v39;
    goto LABEL_38;
  }
  while (1)
  {
    int64_t v0 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      goto LABEL_81;
    }
    if (v0 >= v32) {
      break;
    }
    unint64_t v38 = v90[v0];
    ++v39;
    if (v38) {
      goto LABEL_38;
    }
  }
LABEL_40:
  swift_release();
  int64_t v0 = v88;
  uint64_t v7 = v84;
LABEL_41:
  if (qword_26A8E6060 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_260D89324((uint64_t)off_26A8E6670, (uint64_t)v7);
  swift_bridgeObjectRelease();
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_260D9116C(v41);
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_260D894F0(0, v3, v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v42 >= 1)
  {
    id v5 = (uint64_t *)(v0 + 48);
    uint64_t v43 = sub_260D9116C(v40);
    int64_t v44 = 0;
    uint64_t v91 = v43 + 56;
    uint64_t v45 = -1;
    uint64_t v46 = -1 << *(unsigned char *)(v43 + 32);
    if (-v46 < 64) {
      uint64_t v45 = ~(-1 << -(char)v46);
    }
    unint64_t v47 = v45 & *(void *)(v43 + 56);
    int64_t v0 = (unint64_t)(63 - v46) >> 6;
    uint64_t v7 = &qword_26A8E66D8;
    while (1)
    {
      if (v47)
      {
        unint64_t v48 = __clz(__rbit64(v47));
        v47 &= v47 - 1;
        unint64_t v49 = v48 | (v44 << 6);
      }
      else
      {
        int64_t v53 = v44 + 1;
        if (__OFADD__(v44, 1))
        {
          __break(1u);
          goto LABEL_79;
        }
        if (v53 >= v0) {
          goto LABEL_64;
        }
        unint64_t v54 = *(void *)(v91 + 8 * v53);
        ++v44;
        if (!v54)
        {
          int64_t v44 = v53 + 1;
          if (v53 + 1 >= v0) {
            goto LABEL_64;
          }
          unint64_t v54 = *(void *)(v91 + 8 * v44);
          if (!v54)
          {
            int64_t v44 = v53 + 2;
            if (v53 + 2 >= v0) {
              goto LABEL_64;
            }
            unint64_t v54 = *(void *)(v91 + 8 * v44);
            if (!v54)
            {
              int64_t v55 = v53 + 3;
              if (v55 >= v0)
              {
LABEL_64:
                swift_release();
                int64_t v0 = v88;
                goto LABEL_66;
              }
              unint64_t v54 = *(void *)(v91 + 8 * v55);
              if (!v54)
              {
                while (1)
                {
                  int64_t v44 = v55 + 1;
                  if (__OFADD__(v55, 1)) {
                    break;
                  }
                  if (v44 >= v0) {
                    goto LABEL_64;
                  }
                  unint64_t v54 = *(void *)(v91 + 8 * v44);
                  ++v55;
                  if (v54) {
                    goto LABEL_63;
                  }
                }
LABEL_80:
                __break(1u);
LABEL_81:
                __break(1u);
LABEL_82:
                swift_once();
                goto LABEL_5;
              }
              int64_t v44 = v55;
            }
          }
        }
LABEL_63:
        unint64_t v47 = (v54 - 1) & v54;
        unint64_t v49 = __clz(__rbit64(v54)) + (v44 << 6);
      }
      uint64_t v3 = *(void *)(*(void *)(v43 + 48) + 8 * v49);
      *id v5 = v3;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
      sub_260D90340((unint64_t *)&qword_26A8E66E0, &qword_26A8E66D8);
      uint64_t v50 = sub_260FE3F90();
      uint64_t v52 = v51;
      swift_bridgeObjectRelease();
      sub_260DB65FC((uint64_t *)&v96, v50, v52);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
LABEL_66:
  uint64_t v56 = *(void *)(v93 + 16);
  swift_bridgeObjectRelease();
  if (!v56)
  {
    uint64_t v66 = *(void **)(v0 + 256);
    (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));

    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  id v57 = off_26A8E6668;
  uint64_t v58 = MEMORY[0x263F8EE88];
  uint64_t v94 = MEMORY[0x263F8EE88];
  uint64_t v59 = *((void *)off_26A8E6668 + 2);
  if (v59)
  {
    swift_bridgeObjectRetain();
    uint64_t v60 = 0;
    do
    {
      uint64_t v61 = v57[v60++ + 4];
      *(void *)(v0 + 32) = v61;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
      sub_260D90340((unint64_t *)&qword_26A8E66E0, &qword_26A8E66D8);
      uint64_t v62 = sub_260FE3F90();
      uint64_t v64 = v63;
      swift_bridgeObjectRelease();
      sub_260DB65FC((uint64_t *)&v96, v62, v64);
      swift_bridgeObjectRelease();
    }
    while (v59 != v60);
    swift_bridgeObjectRelease();
    uint64_t v65 = v94;
    int64_t v0 = v88;
    uint64_t v58 = MEMORY[0x263F8EE88];
  }
  else
  {
    uint64_t v65 = MEMORY[0x263F8EE88];
  }
  uint64_t v67 = off_26A8E6670;
  uint64_t v95 = v58;
  uint64_t v68 = *((void *)off_26A8E6670 + 2);
  if (v68)
  {
    uint64_t v92 = v65;
    swift_bridgeObjectRetain();
    uint64_t v69 = 0;
    do
    {
      uint64_t v70 = v67[v69++ + 4];
      *(void *)(v0 + 40) = v70;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
      sub_260D90340((unint64_t *)&qword_26A8E66E0, &qword_26A8E66D8);
      uint64_t v71 = sub_260FE3F90();
      uint64_t v73 = v72;
      swift_bridgeObjectRelease();
      sub_260DB65FC((uint64_t *)&v96, v71, v73);
      swift_bridgeObjectRelease();
    }
    while (v68 != v69);
    swift_bridgeObjectRelease();
    uint64_t v58 = v95;
    int64_t v0 = v88;
    uint64_t v65 = v92;
  }
  uint64_t v74 = *(void **)(v0 + 256);
  uint64_t v76 = *(void *)(v0 + 184);
  uint64_t v75 = *(void *)(v0 + 192);
  uint64_t v77 = *(void *)(v0 + 176);
  uint64_t v78 = *(int **)(v0 + 104);
  uint64_t v79 = *(void *)(v0 + 112);
  uint64_t v80 = *(void *)(v0 + 80);
  uint64_t v81 = sub_260D8784C(v58, v65);
  sub_260D90210(v80, v79, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  *(void *)(v79 + v78[5]) = sub_260D9130C((uint64_t)log);
  uint64_t v82 = (uint64_t *)(v79 + v78[6]);
  *uint64_t v82 = v86;
  v82[1] = (uint64_t)v87;
  *(void *)(v79 + v78[7]) = v81;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66B8);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_260FE7080;
  *(void *)(v23 + 56) = v78;
  *(void *)(v23 + 64) = sub_260D9070C(&qword_26A8E66E8, (void (*)(uint64_t))type metadata accessor for PersonalizedGeneratedImageCaptionPolicy);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v23 + 32));
  sub_260D90754(v79, (uint64_t)boxed_opaque_existential_1Tm, type metadata accessor for PersonalizedGeneratedImageCaptionPolicy);

  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v24(v23);
}

uint64_t sub_260D8ED40()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_260D8EE14(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return MEMORY[0x270FA2498](sub_260D8EE34, 0, 0);
}

uint64_t sub_260D8EE34()
{
  uint64_t v24 = v0;
  uint64_t v2 = v0[17];
  id v1 = (void *)v0[18];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(v2, v3, v4);
  if (v5)
  {
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      uint64_t v7 = (uint64_t)(v0 + 2);
      uint64_t v8 = (uint64_t)(v0 + 7);
      uint64_t v9 = v5 + 32;
      do
      {
        sub_260D90158(v9, v7);
        if (qword_26A8E6118 != -1) {
          swift_once();
        }
        uint64_t v10 = sub_260FE3A10();
        __swift_project_value_buffer(v10, (uint64_t)qword_26A90FB90);
        sub_260D90158(v7, v8);
        uint64_t v11 = sub_260FE39F0();
        os_log_type_t v12 = sub_260FE48A0();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          uint64_t v14 = swift_slowAlloc();
          uint64_t v23 = v14;
          *(_DWORD *)uint64_t v13 = 136315138;
          sub_260D90158(v8, (uint64_t)(v0 + 12));
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6698);
          uint64_t v15 = sub_260FE4150();
          *(void *)(v13 + 4) = sub_260DB2844(v15, v16, &v23);
          uint64_t v7 = (uint64_t)(v0 + 2);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1Tm(v8);
          _os_log_impl(&dword_260D82000, v11, v12, "evaluating unprepared generation recipe with %s", (uint8_t *)v13, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x26122CA00](v14, -1, -1);
          MEMORY[0x26122CA00](v13, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1Tm(v8);
        }

        __swift_destroy_boxed_opaque_existential_1Tm(v7);
        v9 += 40;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_260FE3A10();
  __swift_project_value_buffer(v17, (uint64_t)qword_26A90FB90);
  uint64_t v18 = sub_260FE39F0();
  os_log_type_t v19 = sub_260FE48A0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_260D82000, v18, v19, "no policies to evaluate for an unprepared generation recipe", v20, 2u);
    MEMORY[0x26122CA00](v20, -1, -1);
  }

LABEL_17:
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_260D8F188(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return MEMORY[0x270FA2498](sub_260D8F1A8, 0, 0);
}

uint64_t sub_260D8F1A8()
{
  uint64_t v24 = v0;
  uint64_t v2 = v0[17];
  id v1 = (void *)v0[18];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3, v4);
  if (v5)
  {
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      uint64_t v7 = (uint64_t)(v0 + 2);
      uint64_t v8 = (uint64_t)(v0 + 7);
      uint64_t v9 = v5 + 32;
      do
      {
        sub_260D90158(v9, v7);
        if (qword_26A8E6118 != -1) {
          swift_once();
        }
        uint64_t v10 = sub_260FE3A10();
        __swift_project_value_buffer(v10, (uint64_t)qword_26A90FB90);
        sub_260D90158(v7, v8);
        uint64_t v11 = sub_260FE39F0();
        os_log_type_t v12 = sub_260FE48A0();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          uint64_t v14 = swift_slowAlloc();
          uint64_t v23 = v14;
          *(_DWORD *)uint64_t v13 = 136315138;
          sub_260D90158(v8, (uint64_t)(v0 + 12));
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6698);
          uint64_t v15 = sub_260FE4150();
          *(void *)(v13 + 4) = sub_260DB2844(v15, v16, &v23);
          uint64_t v7 = (uint64_t)(v0 + 2);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1Tm(v8);
          _os_log_impl(&dword_260D82000, v11, v12, "evaluating prepared recipe with %s", (uint8_t *)v13, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x26122CA00](v14, -1, -1);
          MEMORY[0x26122CA00](v13, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1Tm(v8);
        }

        __swift_destroy_boxed_opaque_existential_1Tm(v7);
        v9 += 40;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_260FE3A10();
  __swift_project_value_buffer(v17, (uint64_t)qword_26A90FB90);
  uint64_t v18 = sub_260FE39F0();
  os_log_type_t v19 = sub_260FE48A0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_260D82000, v18, v19, "no policies to evaluate for a prepared recipe", v20, 2u);
    MEMORY[0x26122CA00](v20, -1, -1);
  }

LABEL_17:
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_260D8F4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[22] = a2;
  v3[23] = a3;
  v3[21] = a1;
  return MEMORY[0x270FA2498](sub_260D8F520, 0, 0);
}

uint64_t sub_260D8F520()
{
  uint64_t v31 = v0;
  uint64_t v2 = *(void *)(v0 + 176);
  id v1 = *(void **)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 24))(v3, v2, v4, v5);
  *(void *)(v0 + 192) = v6;
  if (v6)
  {
    uint64_t v7 = *(void *)(v6 + 16);
    *(void *)(v0 + 200) = v7;
    if (v7)
    {
      *(void *)(v0 + 160) = MEMORY[0x263F8EE78];
      *(void *)(v0 + 208) = 0;
      sub_260D90158(v6 + 32, v0 + 16);
      if (qword_26A8E6118 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_260FE3A10();
      __swift_project_value_buffer(v8, (uint64_t)qword_26A90FB90);
      sub_260D90158(v0 + 16, v0 + 56);
      uint64_t v9 = sub_260FE39F0();
      os_log_type_t v10 = sub_260FE48A0();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        uint64_t v30 = v12;
        *(_DWORD *)uint64_t v11 = 136315138;
        sub_260D90158(v0 + 56, v0 + 96);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6698);
        uint64_t v13 = sub_260FE4150();
        *(void *)(v11 + 4) = sub_260DB2844(v13, v14, &v30);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
        _os_log_impl(&dword_260D82000, v9, v10, "evaluating generated image with %s", (uint8_t *)v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x26122CA00](v12, -1, -1);
        MEMORY[0x26122CA00](v11, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
      }

      if ((sub_260E3CC80() & 1) == 0)
      {
        sub_260E3B410(v0 + 136);
        if (*(unsigned char *)(v0 + 136) == 5 && *(unsigned char *)(v0 + 137) == 3 && *(unsigned char *)(v0 + 138) == 10)
        {
          if (!*(void *)(v0 + 152))
          {
            swift_bridgeObjectRelease_n();
LABEL_29:
            uint64_t v28 = *(uint64_t **)(v0 + 184);
            uint64_t v23 = *v28;
            uint64_t v24 = v28[1];
            uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26A8E6680 + dword_26A8E6680);
            uint64_t v25 = (void *)swift_task_alloc();
            *(void *)(v0 + 240) = v25;
            *uint64_t v25 = v0;
            uint64_t v26 = sub_260D8FF3C;
            goto LABEL_25;
          }
          swift_bridgeObjectRetain();
          uint64_t v21 = sub_260FE41F0();
          swift_bridgeObjectRelease_n();
          if (v21 <= 0) {
            goto LABEL_29;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v22 = *(uint64_t **)(v0 + 184);
      uint64_t v23 = *v22;
      uint64_t v24 = v22[1];
      uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26A8E6690 + dword_26A8E6690);
      uint64_t v25 = (void *)swift_task_alloc();
      *(void *)(v0 + 216) = v25;
      *uint64_t v25 = v0;
      uint64_t v26 = sub_260D8F9A4;
LABEL_25:
      v25[1] = v26;
      uint64_t v27 = *(void *)(v0 + 168);
      return v29(v27, v24, v23);
    }
    swift_bridgeObjectRelease();
  }
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_260FE3A10();
  __swift_project_value_buffer(v15, (uint64_t)qword_26A90FB90);
  unint64_t v16 = sub_260FE39F0();
  os_log_type_t v17 = sub_260FE48A0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_260D82000, v16, v17, "no policies to evaluate for a generated image", v18, 2u);
    MEMORY[0x26122CA00](v18, -1, -1);
  }

  os_log_type_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_260D8F9A4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_260D8FACC;
  }
  else
  {
    *(void *)(v4 + 232) = a1;
    uint64_t v5 = sub_260D8FB44;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_260D8FACC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260D8FB44()
{
  uint64_t v26 = v0;
  uint64_t v1 = *(void *)(v0 + 232);
  if (v1) {
    sub_260EDFF84(v1);
  }
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 208) + 1;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  if (v3 == v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v0 + 160);
    if (*(void *)(v4 + 16))
    {
      sub_260D901BC();
      swift_allocError();
      *uint64_t v5 = v4;
      swift_willThrow();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  uint64_t v7 = *(void *)(v0 + 208) + 1;
  *(void *)(v0 + 208) = v7;
  sub_260D90158(*(void *)(v0 + 192) + 40 * v7 + 32, v0 + 16);
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_260FE3A10();
  __swift_project_value_buffer(v8, (uint64_t)qword_26A90FB90);
  sub_260D90158(v0 + 16, v0 + 56);
  uint64_t v9 = sub_260FE39F0();
  os_log_type_t v10 = sub_260FE48A0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v25 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    sub_260D90158(v0 + 56, v0 + 96);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6698);
    uint64_t v13 = sub_260FE4150();
    *(void *)(v11 + 4) = sub_260DB2844(v13, v14, &v25);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
    _os_log_impl(&dword_260D82000, v9, v10, "evaluating generated image with %s", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v12, -1, -1);
    MEMORY[0x26122CA00](v11, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  }

  if ((sub_260E3CC80() & 1) == 0)
  {
    sub_260E3B410(v0 + 136);
    if (*(unsigned char *)(v0 + 136) == 5 && *(unsigned char *)(v0 + 137) == 3 && *(unsigned char *)(v0 + 138) == 10)
    {
      if (!*(void *)(v0 + 152))
      {
        swift_bridgeObjectRelease_n();
LABEL_28:
        uint64_t v23 = *(uint64_t **)(v0 + 184);
        uint64_t v18 = *v23;
        uint64_t v19 = v23[1];
        uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26A8E6680 + dword_26A8E6680);
        uint64_t v20 = (void *)swift_task_alloc();
        *(void *)(v0 + 240) = v20;
        *uint64_t v20 = v0;
        uint64_t v21 = sub_260D8FF3C;
        goto LABEL_24;
      }
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_260FE41F0();
      swift_bridgeObjectRelease_n();
      if (v15 <= 0) {
        goto LABEL_28;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  os_log_type_t v17 = *(uint64_t **)(v0 + 184);
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26A8E6690 + dword_26A8E6690);
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v20;
  *uint64_t v20 = v0;
  uint64_t v21 = (uint64_t (*)(uint64_t))sub_260D8F9A4;
LABEL_24:
  v20[1] = v21;
  uint64_t v22 = *(void *)(v0 + 168);
  return v24(v22, v19, v18);
}

uint64_t sub_260D8FF3C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 248) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_260D90064;
  }
  else
  {
    *(void *)(v4 + 232) = a1;
    uint64_t v5 = sub_260D8FB44;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_260D90064()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_260D90158(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_260D901BC()
{
  unint64_t result = qword_26A8E6688;
  if (!qword_26A8E6688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6688);
  }
  return result;
}

uint64_t sub_260D90210(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_260D90278(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_260D902D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_260D90340(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_260D903D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_260D879CC(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void ***)(v3 + 32));
}

void sub_260D903E0(uint64_t a1)
{
  sub_260D8729C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_260D903EC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6728);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

void sub_260D90494(int a1, void *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6728) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_260D87520(a1, a2, v2 + v6, v7);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_260D9055C()
{
  unint64_t result = qword_26A8E6740;
  if (!qword_26A8E6740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6740);
  }
  return result;
}

uint64_t sub_260D905B0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_260D90650(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

_OWORD *sub_260D906FC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_260D9070C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_260D90754(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_260D907BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_260D90820(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_260D9087C()
{
  unint64_t result = qword_26A8E6798;
  if (!qword_26A8E6798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6798);
  }
  return result;
}

uint64_t sub_260D908D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_260D90920()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_260D90978(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *, uint64_t, uint64_t), uint64_t a7)
{
  uint64_t v14 = type metadata accessor for Concept(0);
  MEMORY[0x270FA5388](v14, v15);
  os_log_type_t v17 = (uint64_t *)((char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    uint64_t v34 = a7;
    uint64_t v35 = a6;
    uint64_t v18 = sub_260FE40A0();
    uint64_t v20 = v19;
    if (v18 == sub_260FE40A0() && v20 == v21)
    {
      id v24 = a1;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v23 = sub_260FE5150();
      id v33 = a1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {

        return 1;
      }
    }
    uint64_t v25 = sub_260FE4300();
    uint64_t v26 = MEMORY[0x26122A9E0](v25);
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    *os_log_type_t v17 = v26;
    v17[1] = v28;
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = a2;
    uint64_t v39 = a3;
    uint64_t v36 = a4;
    uint64_t v37 = a5;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67A0);
    sub_260D90B70();
    sub_260D86D20();
    uint64_t v29 = sub_260FE4A50();
    v35(v17, v29, v30);

    sub_260D90BCC((uint64_t)v17);
  }
  return 1;
}

unint64_t sub_260D90B70()
{
  unint64_t result = qword_26A8E67A8;
  if (!qword_26A8E67A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8E67A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E67A8);
  }
  return result;
}

uint64_t sub_260D90BCC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Concept(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_260D90C28()
{
  swift_getDynamicType();
  v7[0] = sub_260FE5430();
  v7[1] = v0;
  sub_260FE4250();
  uint64_t v1 = sub_260FE3110();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260FE4C40();
  sub_260D90D6C();
  sub_260FE5110();
  sub_260FE4250();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v7[0];
}

unint64_t sub_260D90D6C()
{
  unint64_t result = qword_26A8E67B0;
  if (!qword_26A8E67B0)
  {
    sub_260FE3110();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E67B0);
  }
  return result;
}

uint64_t sub_260D90DB8()
{
  return 1;
}

uint64_t sub_260D90DC0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation_id;
  uint64_t v2 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_260D90E74()
{
  return type metadata accessor for ModelManagerOperation();
}

uint64_t type metadata accessor for ModelManagerOperation()
{
  uint64_t result = qword_26A8E67B8;
  if (!qword_26A8E67B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_260D90EC8()
{
  uint64_t result = sub_260FE3110();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_260D90F60()
{
  swift_getWitnessTable();
  return sub_260D90C28();
}

uint64_t sub_260D90FB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16VisualGeneration21ModelManagerOperation_id;
  uint64_t v4 = sub_260FE3110();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

unint64_t sub_260D91030()
{
  unint64_t result = qword_26A8E67C8;
  if (!qword_26A8E67C8)
  {
    sub_260FE3110();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E67C8);
  }
  return result;
}

uint64_t sub_260D9107C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_260D91128(&qword_26A8E67D0);
  uint64_t result = sub_260D91128(&qword_26A8E67D8);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_260D910E4(uint64_t a1)
{
  uint64_t result = sub_260D91128(&qword_26A8E67E0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_260D91128(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ModelManagerOperation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_260D9116C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
  sub_260DD7834();
  uint64_t result = sub_260FE46F0();
  int64_t v3 = 0;
  uint64_t v16 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v8) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 3;
          if (v12 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v3);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void **)(*(void *)(a1 + 48) + 8 * v10);
    swift_bridgeObjectRetain();
    sub_260DB67AC(&v15, v11);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v8)
  {
LABEL_23:
    swift_release();
    return v16;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_260D9130C(uint64_t a1)
{
  uint64_t result = sub_260FE46F0();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_260DB65FC(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_260D914A4(uint64_t a1)
{
  return sub_260D914E4(a1, MEMORY[0x263F1ED80], MEMORY[0x263F1ED78]);
}

uint64_t sub_260D914C4(uint64_t a1)
{
  return sub_260D914E4(a1, MEMORY[0x263F1EDA8], MEMORY[0x263F1EDA0]);
}

uint64_t sub_260D914E4(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v4 = a2(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  int64_t v8 = (char *)&v20 - v7;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v9)
  {
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_260DB467C(0, v9, 0);
    uint64_t v10 = v25;
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v20 = *(void *)(v11 + 56);
    do
    {
      v12(v8, v14, v4);
      uint64_t v25 = v10;
      unint64_t v16 = *(void *)(v10 + 16);
      unint64_t v15 = *(void *)(v10 + 24);
      if (v16 >= v15 >> 1) {
        sub_260DB467C(v15 > 1, v16 + 1, 1);
      }
      uint64_t v23 = v4;
      uint64_t v24 = v21;
      boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v22);
      v12((char *)boxed_opaque_existential_1Tm, (uint64_t)v8, v4);
      uint64_t v18 = v25;
      *(void *)(v25 + 16) = v16 + 1;
      sub_260DD7B40(&v22, v18 + 40 * v16 + 32);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v4);
      uint64_t v10 = v25;
      v14 += v20;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_260D916B0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_260DB488C(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F38);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_260DB488C(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_260DB488C(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      *(void *)(v2 + 8 * v6 + 32) = v8;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_260D917F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_260FE4D30();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      sub_260FE4700();
      sub_260FE4D00();
      sub_260FE4D40();
      sub_260FE4D50();
      sub_260FE4D10();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_260D9189C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_260FE4E40();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t result = sub_260DB49A8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v16;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = MEMORY[0x26122B4C0](v5, a1);
        uint64_t v16 = v3;
        unint64_t v8 = *(void *)(v3 + 16);
        unint64_t v7 = *(void *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_260DB49A8(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v16;
        }
        ++v5;
        uint64_t v14 = type metadata accessor for MediaAnalysisServiceImageScaler();
        unint64_t v15 = &off_270D1E218;
        *(void *)&long long v13 = v6;
        *(void *)(v3 + 16) = v8 + 1;
        sub_260DD7B40(&v13, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v16 = v3;
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v12 = *(void *)(v3 + 24);
        swift_retain();
        if (v11 >= v12 >> 1)
        {
          sub_260DB49A8(v12 > 1, v11 + 1, 1);
          uint64_t v3 = v16;
        }
        uint64_t v14 = type metadata accessor for MediaAnalysisServiceImageScaler();
        unint64_t v15 = &off_270D1E218;
        *(void *)&long long v13 = v10;
        *(void *)(v3 + 16) = v11 + 1;
        sub_260DD7B40(&v13, v3 + 40 * v11 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t GenerativePlayground.Error.errorDescription.getter()
{
  uint64_t v0 = sub_260FE4060();
  MEMORY[0x270FA5388](v0 - 8, v1);
  sub_260FE3FF0();
  uint64_t v2 = sub_260FE3180();
  MEMORY[0x270FA5388](v2 - 8, v3);
  sub_260FE3170();
  return sub_260FE4120();
}

uint64_t sub_260D91BBC()
{
  return sub_260FE2B60();
}

uint64_t sub_260D91BD4()
{
  return sub_260FE2B80();
}

uint64_t sub_260D91BEC()
{
  return sub_260FE2B50();
}

uint64_t GenerativePlayground.__allocating_init()()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  id v1 = objc_msgSend(v0, sel_processName);
  uint64_t v2 = sub_260FE40A0();
  uint64_t v4 = v3;

  LODWORD(v1) = objc_msgSend(v0, sel_processIdentifier);
  v6[0] = v2;
  v6[1] = v4;
  int v7 = (int)v1;
  return _s16VisualGeneration20GenerativePlaygroundC6clientAcA14ClientIdentityV_tcfC_0((uint64_t)v6);
}

uint64_t sub_260D91CA8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for DefinitionSession();
  uint64_t v6 = MEMORY[0x270FA5388](v4, v5);
  unint64_t v8 = &v59[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x270FA5388](v6, v9);
  unint64_t v12 = &v59[-v11];
  MEMORY[0x270FA5388](v10, v13);
  unint64_t v15 = &v59[-v14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F28);
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 24) = 0;
  *(void *)(v16 + 16) = 0;
  *(void *)(v1 + 176) = v16;
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_260FE3A10();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_26A90FB90);
  sub_260DC713C(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v64 = a1;
  sub_260DC713C(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v19 = sub_260FE39F0();
  os_log_type_t v20 = sub_260FE48A0();
  int v21 = v20;
  BOOL v22 = os_log_type_enabled(v19, v20);
  uint64_t v63 = v8;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    uint64_t v65 = v61;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v62 = v18;
    uint64_t v24 = &v15[v4[5]];
    uint64_t v26 = *(void *)v24;
    uint64_t v25 = *((void *)v24 + 1);
    LODWORD(v24) = *((_DWORD *)v24 + 4);
    *(void *)&long long v66 = v26;
    *((void *)&v66 + 1) = v25;
    LODWORD(v67) = v24;
    swift_bridgeObjectRetain();
    int v60 = v21;
    uint64_t v27 = sub_260FE4150();
    *(void *)&long long v66 = sub_260DB2844(v27, v28, &v65);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260DC6C10((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v29 = &v12[v4[14]];
    uint64_t v31 = *((void *)v29 + 1);
    unint64_t v30 = *((void *)v29 + 2);
    swift_bridgeObjectRetain();
    *(void *)&long long v66 = sub_260DB2844(v31, v30, &v65);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260DC6C10((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    _os_log_impl(&dword_260D82000, v19, (os_log_type_t)v60, "Creating generator for %s targeting %s", (uint8_t *)v23, 0x16u);
    uint64_t v32 = v61;
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v32, -1, -1);
    MEMORY[0x26122CA00](v23, -1, -1);
  }
  else
  {
    sub_260DC6C10((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    sub_260DC6C10((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  }

  uint64_t v33 = *(void *)(v2 + 176);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v33 + 24));
  sub_260D92328((uint64_t *)(v33 + 16));
  uint64_t v34 = v64;
  os_unfair_lock_unlock((os_unfair_lock_t)(v33 + 24));
  swift_release();
  uint64_t v35 = *(void **)(v34 + v4[10]);
  *(void *)(v2 + 96) = v35;
  sub_260FE3E40();
  id v36 = v35;
  *(void *)(v2 + 104) = sub_260FE3E30();
  uint64_t v37 = v34 + v4[14];
  uint64_t v39 = *(void *)(v37 + 8);
  uint64_t v38 = *(void *)(v37 + 16);
  *(void *)(v2 + 112) = v39;
  *(void *)(v2 + 120) = v38;
  uint64_t v40 = qword_26A8E6070;
  swift_bridgeObjectRetain_n();
  if (v40 != -1) {
    swift_once();
  }
  uint64_t v41 = qword_26A90FA88;
  uint64_t v42 = *(void *)(qword_26A90FA88 + 16);
  if (v42)
  {
    uint64_t v43 = swift_bridgeObjectRetain();
    uint64_t v44 = 0;
    while (1)
    {
      uint64_t v45 = *(void *)(v41 + 8 * v44 + 32);
      if ((*(uint64_t (**)(uint64_t))(v45 + 88))(v43) == v39 && v46 == v38) {
        break;
      }
      char v48 = sub_260FE5150();
      uint64_t v43 = swift_bridgeObjectRelease();
      if (v48) {
        goto LABEL_19;
      }
      if (v42 == ++v44)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
LABEL_19:
    uint64_t v49 = swift_bridgeObjectRelease();
    (*(void (**)(long long *__return_ptr, uint64_t))(v45 + 112))(&v66, v49);
  }
  else
  {
LABEL_17:
    uint64_t v68 = 0;
    long long v66 = 0u;
    long long v67 = 0u;
  }
  uint64_t v50 = (uint64_t)v63;
  swift_bridgeObjectRelease();
  sub_260DD7C14((uint64_t)&v66, v2 + 128, &qword_26A8E6860);
  sub_260F435AC((uint64_t)&v66);
  int v51 = v67;
  char v52 = BYTE4(v67);
  *(_OWORD *)(v2 + 16) = v66;
  *(_DWORD *)(v2 + 32) = v51;
  *(unsigned char *)(v2 + 36) = v52;
  sub_260F435AC((uint64_t)&v66);
  char v53 = BYTE4(v67);
  if (BYTE4(v67)) {
    int v54 = v67;
  }
  else {
    int v54 = 1278226488;
  }
  *(_OWORD *)(v2 + 40) = v66;
  *(_DWORD *)(v2 + 56) = v54;
  *(unsigned char *)(v2 + 60) = v53;
  sub_260F435AC((uint64_t)&v66);
  int v55 = v67;
  char v56 = BYTE4(v67);
  *(_OWORD *)(v2 + 64) = v66;
  *(_DWORD *)(v2 + 80) = v55;
  *(unsigned char *)(v2 + 84) = v56;
  *(void *)(v2 + 88) = sub_260DC66AC();
  sub_260DC713C(v34, v50, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  type metadata accessor for DefinitionSessionAccessor();
  uint64_t v57 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_260DC79D4(v50, v57 + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  sub_260DC6C10(v34, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *(void *)(v2 + 168) = v57;
  return v2;
}

uint64_t sub_260D92328(uint64_t *a1)
{
  type metadata accessor for AppleDiffusionResourceFactory(0);
  uint64_t result = static AppleDiffusionResourceFactory.shared(reset:)(0, v3);
  if (!v1)
  {
    uint64_t v5 = result;
    uint64_t result = swift_release();
    *a1 = v5;
  }
  return result;
}

uint64_t sub_260D92388(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for AppleDiffusionResourceFactory(0);
  uint64_t result = static AppleDiffusionResourceFactory.shared(reset:)(a2, v5);
  if (!v2)
  {
    uint64_t v7 = result;
    uint64_t result = swift_release();
    *a1 = v7;
  }
  return result;
}

uint64_t GenerativePlayground.hasRequiredResources.getter()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D92484, 0, 0);
}

uint64_t sub_260D92484()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260D924A8, v1, 0);
}

uint64_t sub_260D924A8()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D9254C, 0, 0);
}

uint64_t sub_260D9254C()
{
  uint64_t v1 = v0[7] + *(int *)(v0[6] + 56);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v4 = qword_26A8E6070;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_26A90FA88;
  uint64_t v6 = *(void *)(qword_26A90FA88 + 16);
  if (v6)
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *(void *)(v5 + 8 * v8 + 32);
      if ((*(uint64_t (**)(uint64_t))(v9 + 88))(v7) == v3 && v10 == v2) {
        break;
      }
      char v12 = sub_260FE5150();
      uint64_t v7 = swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_14;
      }
      if (v6 == ++v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v15 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v9 + 128))(v15);
    uint64_t v19 = v0[7];
    swift_bridgeObjectRelease();
    sub_260DC6C10(v19, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    uint64_t v16 = 1;
  }
  else
  {
LABEL_12:
    sub_260D9055C();
    uint64_t v13 = (void *)swift_allocError();
    *(void *)uint64_t v14 = v3;
    *(void *)(v14 + 8) = v2;
    *(unsigned char *)(v14 + 16) = 0;
    swift_willThrow();
    sub_260DC6C10(v0[7], (uint64_t (*)(void))type metadata accessor for DefinitionSession);

    uint64_t v16 = 0;
  }
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(uint64_t))v0[1];
  return v17(v16);
}

uint64_t GenerativePlayground.assignedPrompt.getter()
{
  *(void *)(v1 + 40) = v0;
  type metadata accessor for DefinitionSession();
  *(void *)(v1 + 48) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D927E8, 0, 0);
}

uint64_t sub_260D927E8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 168);
  *(void *)(v0 + 56) = v1;
  return MEMORY[0x270FA2498](sub_260D9280C, v1, 0);
}

uint64_t sub_260D9280C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D928B0, 0, 0);
}

uint64_t sub_260D928B0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = sub_260F3C8FC();
  uint64_t v4 = v3;
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  if (v4) {
    swift_bridgeObjectRelease();
  }
  else {
    uint64_t v2 = 0;
  }
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v5(v2, v4);
}

uint64_t GenerativePlayground.PromptAssignmentOptions.allowPersonalizations.getter()
{
  return *v0;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.allowPersonalizations.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentOptions.allowPersonalizations.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.allowTextRejection.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t GenerativePlayground.PromptAssignmentOptions.allowTextRejection.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentOptions.allowTextRejection.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.personalizationUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  return sub_260D907BC(v1 + *(int *)(v3 + 24), a1, &qword_26A8E67F8);
}

uint64_t GenerativePlayground.PromptAssignmentOptions.personalizationUUID.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0) + 24);
  return sub_260DC6AB8(a1, v3);
}

uint64_t (*GenerativePlayground.PromptAssignmentOptions.personalizationUUID.modify())(void)
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.performLanguageCheck.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0) + 28));
}

uint64_t GenerativePlayground.PromptAssignmentOptions.performLanguageCheck.setter(char a1)
{
  uint64_t result = type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentOptions.performLanguageCheck.modify())(void)
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.languageCheckingParameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0) + 32);
  uint64_t v4 = *(void *)(v3 + 8);
  int v5 = *(_DWORD *)(v3 + 16);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t GenerativePlayground.PromptAssignmentOptions.languageCheckingParameters.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  int v4 = *((_DWORD *)a1 + 4);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0) + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v3;
  *(_DWORD *)(v5 + 16) = v4;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentOptions.languageCheckingParameters.modify())(void)
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.reportSinglePersonAmbiguities.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0) + 36));
}

uint64_t GenerativePlayground.PromptAssignmentOptions.reportSinglePersonAmbiguities.setter(char a1)
{
  uint64_t result = type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentOptions.reportSinglePersonAmbiguities.modify())(void)
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.personalizationObservationID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0) + 40));
}

uint64_t GenerativePlayground.PromptAssignmentOptions.personalizationObservationID.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  uint64_t v6 = v2 + *(int *)(result + 40);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentOptions.personalizationObservationID.modify())(void)
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptAssignmentOptions.init()@<X0>(_WORD *a1@<X8>)
{
  *a1 = 257;
  uint64_t v2 = (int *)type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  uint64_t v3 = (char *)a1 + v2[6];
  uint64_t v4 = sub_260FE3110();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *((unsigned char *)a1 + v2[7]) = 1;
  *((unsigned char *)a1 + v2[9]) = 0;
  uint64_t v5 = (char *)a1 + v2[10];
  *(void *)uint64_t v5 = 0;
  v5[8] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6800);
  sub_260FE3130();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_260FE7080;
  sub_260FE3120();
  uint64_t v7 = sub_260DC5DCC(v6);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  uint64_t v9 = (char *)a1 + v2[8];
  *(void *)uint64_t v9 = v7;
  *((void *)v9 + 1) = 5;
  *((_DWORD *)v9 + 4) = 1064514355;
  return result;
}

uint64_t sub_260D92F18@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_260DD6F60;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_260DC8644(v3);
}

uint64_t sub_260D92F98(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_260DD6F28;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  sub_260DC8644(v3);
  uint64_t result = sub_260DC8E58(v7);
  *a2 = (uint64_t)v6;
  a2[1] = v5;
  return result;
}

uint64_t GenerativePlayground.PromptAssignmentInteractable.eventsHandler.getter()
{
  uint64_t v1 = *v0;
  sub_260DC8644(*v0);
  return v1;
}

uint64_t GenerativePlayground.PromptAssignmentInteractable.eventsHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_260DC8E58(*v2);
  uint64_t *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentInteractable.eventsHandler.modify())()
{
  return nullsub_1;
}

uint64_t sub_260D930C0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = &unk_26A8E6D80;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  return sub_260DC8644(v3);
}

uint64_t sub_260D93140(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = &unk_26A8E6D78;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  sub_260DC8644(v3);
  uint64_t result = sub_260DC8E58(v7);
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v5;
  return result;
}

uint64_t GenerativePlayground.PromptAssignmentInteractable.ambiguityResolver.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_260DC8644(v1);
  return v1;
}

uint64_t GenerativePlayground.PromptAssignmentInteractable.ambiguityResolver.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_260DC8E58(*(void *)(v2 + 16));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*GenerativePlayground.PromptAssignmentInteractable.ambiguityResolver.modify())()
{
  return nullsub_1;
}

double GenerativePlayground.PromptAssignmentInteractable.init()@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t GenerativePlayground.assign(prompt:options:interactable:)(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  type metadata accessor for DefinitionSession();
  *(void *)(v5 + 48) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6810);
  *(void *)(v5 + 56) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 72) = *(void *)(v7 - 8);
  *(void *)(v5 + 80) = swift_task_alloc();
  long long v8 = a4[1];
  *(_OWORD *)(v5 + 88) = *a4;
  *(_OWORD *)(v5 + 104) = v8;
  return MEMORY[0x270FA2498](sub_260D933A4, 0, 0);
}

uint64_t sub_260D933A4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  sub_260D907BC(*(void *)(v0 + 32), v3, &qword_26A8E6810);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  uint64_t v5 = *(_WORD **)(v0 + 80);
  if (v4 == 1)
  {
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v7 = *(int **)(v0 + 64);
    *uint64_t v5 = 257;
    long long v8 = (char *)v5 + v7[6];
    uint64_t v9 = sub_260FE3110();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    *((unsigned char *)v5 + v7[7]) = 1;
    *((unsigned char *)v5 + v7[9]) = 0;
    uint64_t v10 = (char *)v5 + v7[10];
    *(void *)uint64_t v10 = 0;
    v10[8] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6800);
    sub_260FE3130();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_260FE7080;
    sub_260FE3120();
    uint64_t v12 = sub_260DC5DCC(v11);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v13 = (char *)v5 + v7[8];
    *(void *)uint64_t v13 = v12;
    *((void *)v13 + 1) = 5;
    *((_DWORD *)v13 + 4) = 1064514355;
    sub_260D90820(v6, &qword_26A8E6810);
  }
  else
  {
    sub_260DC79D4(*(void *)(v0 + 56), *(void *)(v0 + 80), type metadata accessor for GenerativePlayground.PromptAssignmentOptions);
  }
  uint64_t v14 = *(void *)(v0 + 112);
  long long v20 = *(_OWORD *)(v0 + 80);
  long long v21 = *(_OWORD *)(v0 + 96);
  long long v19 = *(_OWORD *)(v0 + 16);
  uint64_t v15 = swift_task_alloc();
  *(void *)(v0 + 120) = v15;
  *(_OWORD *)(v15 + 16) = v19;
  *(_OWORD *)(v15 + 32) = v20;
  *(_OWORD *)(v15 + 48) = v21;
  *(void *)(v15 + 64) = v14;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v16;
  void *v16 = v0;
  v16[1] = sub_260D93690;
  uint64_t v17 = *(void *)(v0 + 48);
  return sub_260E16A74(v17, (uint64_t)&unk_26A8E6820, v15);
}

uint64_t sub_260D93690()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v3 = sub_260D9388C;
  }
  else
  {
    sub_260DC6C10(*(void *)(v2 + 48), (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    swift_task_dealloc();
    uint64_t v3 = sub_260D937EC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_260D937EC()
{
  sub_260DC6C10(*(void *)(v0 + 80), type metadata accessor for GenerativePlayground.PromptAssignmentOptions);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260D9388C()
{
  sub_260DC6C10(*(void *)(v0 + 80), type metadata accessor for GenerativePlayground.PromptAssignmentOptions);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260D9392C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[18] = a8;
  v8[19] = v12;
  v8[16] = a6;
  v8[17] = a7;
  v8[14] = a4;
  v8[15] = a5;
  v8[12] = a2;
  v8[13] = a3;
  v8[11] = a1;
  type metadata accessor for GenerativePlayground.PromptAssignmentOptions(0);
  v8[20] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DefinitionSession();
  v8[21] = v9;
  v8[22] = *(void *)(v9 - 8);
  v8[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D93A30, 0, 0);
}

uint64_t sub_260D93A30()
{
  sub_260EBA924();
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 144);
  long long v12 = *(_OWORD *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 104);
  sub_260DC713C(*(void *)(v0 + 96), v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  sub_260DC713C(v5, v2, type metadata accessor for GenerativePlayground.PromptAssignmentOptions);
  *(void *)(v0 + 40) = &type metadata for CurrentTaskCanceller;
  *(void *)(v0 + 48) = &off_270D1D7D8;
  type metadata accessor for GenerativePlayground.PromptAssignmentTask();
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 192) = v8;
  swift_bridgeObjectRetain();
  sub_260FE3100();
  sub_260DC79D4(v1, v8 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__definitionSession, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  sub_260DD7B40((long long *)(v0 + 16), v8 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__sendableCanceller);
  sub_260DC79D4(v2, v8 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground20PromptAssignmentTask__assignmentOptions, type metadata accessor for GenerativePlayground.PromptAssignmentOptions);
  *(_OWORD *)(v0 + 56) = v12;
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v3;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_260D93C78;
  uint64_t v10 = *(void *)(v0 + 88);
  return sub_260E821C4(v10, (_OWORD *)(v0 + 56));
}

uint64_t sub_260D93C78()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_260D93E3C;
  }
  else {
    uint64_t v2 = sub_260D93D8C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260D93D8C()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[11];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_260D93E3C()
{
  uint64_t v11 = v0;
  uint64_t v1 = *(void **)(v0 + 208);
  id v2 = v1;
  sub_260E80EC0(v1, (uint64_t)&v9);
  unsigned __int8 v3 = v10;
  uint64_t v4 = *(void **)(v0 + 208);
  if (v10 == 255)
  {
    swift_willThrow();
  }
  else
  {
    uint64_t v5 = v9;
    sub_260DD8C74();
    swift_allocError();
    *(void *)uint64_t v6 = v5;
    *(unsigned char *)(v6 + 8) = v3;
    swift_willThrow();
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

Swift::Void __swiftcall GenerativePlayground.dropPromptAssignment()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_260FE3A10();
  __swift_project_value_buffer(v6, (uint64_t)qword_26A90FB90);
  sub_260F36A5C(0xD000000000000016, 0x8000000260FFBCA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6840);
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 1;
  *(void *)(v7 + 24) = 0;
  swift_retain();
  dispatch_semaphore_t v8 = dispatch_semaphore_create(0);
  uint64_t v9 = sub_260FE4520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  unsigned __int8 v10 = (void *)swift_allocObject();
  void v10[2] = 0;
  v10[3] = 0;
  v10[4] = v8;
  v10[5] = &unk_26A8E6838;
  v10[6] = v1;
  v10[7] = v7;
  uint64_t v11 = v8;
  swift_retain();
  swift_retain();
  sub_260D9F7E4((uint64_t)v5, (uint64_t)&unk_26A8E6850, (uint64_t)v10);
  swift_release();
  sub_260FE4990();
  if (*(unsigned char *)(v7 + 16))
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();
  }
}

uint64_t sub_260D94130()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_260DD8D28;
  return GenerativePlayground.dropPromptAssignment()();
}

uint64_t GenerativePlayground.dropPromptAssignment()()
{
  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D94254, 0, 0);
}

uint64_t sub_260D94254()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260D94278, v1, 0);
}

uint64_t sub_260D94278()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D94320, 0, 0);
}

uint64_t sub_260D94320()
{
  uint64_t v1 = *(void *)(v0 + 80) + *(int *)(*(void *)(v0 + 72) + 56);
  uint64_t v2 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v3 = v2[15];
  swift_bridgeObjectRelease();
  uint64_t v4 = MEMORY[0x263F8EE78];
  *(void *)(v1 + v3) = MEMORY[0x263F8EE78];
  uint64_t v5 = v2[21];
  swift_bridgeObjectRelease();
  *(void *)(v1 + v5) = v4;
  if (qword_26A8E6128 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_26A90FBD0;
  uint64_t v6 = *(void *)algn_26A90FBD8;
  uint64_t v8 = qword_26A90FBE0;
  uint64_t v9 = unk_26A90FBE8;
  unsigned __int8 v10 = (uint64_t *)(v1 + v2[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *unsigned __int8 v10 = v7;
  v10[1] = v6;
  void v10[2] = v8;
  v10[3] = v9;
  *(unsigned char *)(v1 + v2[25]) = 0;
  uint64_t v11 = v2[24];
  if (*(void *)(*(void *)(v1 + v11) + 16))
  {
    sub_260DBAF94(0);
    if (v12)
    {
      unint64_t v13 = sub_260DBAF94(0);
      if (v14)
      {
        unint64_t v15 = v13;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v17 = *(void *)(v1 + v11);
        *(void *)(v1 + v11) = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_260DC1F48();
        }
        sub_260DC0C38(v15, v17);
        *(void *)(v1 + v11) = v17;
        swift_bridgeObjectRelease();
      }
    }
  }
  uint64_t v18 = *(void *)(v20 + 88);
  sub_260F4462C();
  return MEMORY[0x270FA2498](sub_260D944FC, v18, 0);
}

uint64_t sub_260D944FC()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11] + v0[12];
  swift_beginAccess();
  sub_260DC7A3C(v1, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t GenerativePlayground.recommendedPromptGuidanceSketchDimensions.getter@<X0>(uint64_t a1@<X8>)
{
  sub_260D907BC(v1 + 128, (uint64_t)v8, &qword_26A8E6860);
  uint64_t v3 = v9;
  if (!v9)
  {
    uint64_t result = sub_260D90820((uint64_t)v8, &qword_26A8E6860);
    goto LABEL_5;
  }
  uint64_t v4 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v4 + 48))(&v11, v3, v4);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  if (v12)
  {
LABEL_5:
    long long v7 = 0uLL;
    char v6 = 1;
    goto LABEL_6;
  }
  char v6 = 0;
  long long v7 = v11;
LABEL_6:
  *(_OWORD *)a1 = v7;
  *(unsigned char *)(a1 + 16) = v6;
  return result;
}

uint64_t GenerativePlayground.promptGuidanceSketchDimensions.getter@<X0>(uint64_t a1@<X8>)
{
  sub_260D907BC(v1 + 128, (uint64_t)v8, &qword_26A8E6860);
  uint64_t v3 = v9;
  if (!v9)
  {
    uint64_t result = sub_260D90820((uint64_t)v8, &qword_26A8E6860);
    goto LABEL_5;
  }
  uint64_t v4 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v4 + 48))(&v11, v3, v4);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  if (v12)
  {
LABEL_5:
    long long v7 = 0uLL;
    char v6 = 1;
    goto LABEL_6;
  }
  char v6 = 0;
  long long v7 = v11;
LABEL_6:
  *(_OWORD *)a1 = v7;
  *(unsigned char *)(a1 + 16) = v6;
  return result;
}

unint64_t GenerativePlayground.PromptGuidanceSketchAssignmentOptions.scribbleStrength.getter()
{
  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t GenerativePlayground.PromptGuidanceSketchAssignmentOptions.scribbleStrength.setter(uint64_t result)
{
  *(_DWORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t (*GenerativePlayground.PromptGuidanceSketchAssignmentOptions.scribbleStrength.modify())()
{
  return nullsub_1;
}

void __swiftcall GenerativePlayground.PromptGuidanceSketchAssignmentOptions.init()(VisualGeneration::GenerativePlayground::PromptGuidanceSketchAssignmentOptions *__return_ptr retstr)
{
  retstr->scribbleStrength.value = 0.0;
  retstr->scribbleStrength.is_nil = 1;
}

uint64_t GenerativePlayground.assign(promptGuidanceSketch:options:eventsHandler:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 16) = a3;
  type metadata accessor for DefinitionSession();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = *a1;
  *(void *)(v5 + 40) = v8;
  *(void *)(v5 + 48) = v9;
  *(unsigned char *)(v5 + 80) = *((unsigned char *)a1 + 8);
  LODWORD(v9) = *(_DWORD *)a2;
  *(unsigned char *)(v5 + 60) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(v5 + 56) = v9;
  *(unsigned char *)(v5 + 81) = *(unsigned char *)(a2 + 5);
  return MEMORY[0x270FA2498](sub_260D9486C, 0, 0);
}

uint64_t sub_260D9486C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 81)) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = *(unsigned int *)(v0 + 56);
  }
  unsigned __int8 v3 = *(unsigned char *)(v0 + 81) | *(unsigned char *)(v0 + 60) & 1;
  uint64_t v4 = *(void *)(*(void *)(v0 + 32) + 168);
  id v5 = *(id *)(v0 + 48);
  sub_260DC8644(v1);
  unint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_26A8E7848
                                                                                           + dword_26A8E7848);
  char v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v6;
  *char v6 = v0;
  v6[1] = sub_260D94978;
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 48);
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = *(void *)(v0 + 24);
  char v11 = *(unsigned char *)(v0 + 80);
  return v13(v7, v4, v8, v11, v2 | ((unint64_t)v3 << 32), v9, v10);
}

uint64_t sub_260D94978()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unsigned __int8 v3 = sub_260D94B0C;
  }
  else
  {
    sub_260DC6C10(*(void *)(v2 + 40), (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    unsigned __int8 v3 = sub_260D94AA8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_260D94AA8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260D94B0C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260D94B70(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 88) = a6;
  *(void *)(v7 + 96) = a7;
  *(unsigned char *)(v7 + 152) = a4;
  *(void *)(v7 + 72) = a3;
  *(void *)(v7 + 80) = a5;
  *(void *)(v7 + 56) = a1;
  *(void *)(v7 + 64) = a2;
  uint64_t v8 = type metadata accessor for DefinitionSession();
  *(void *)(v7 + 104) = v8;
  *(void *)(v7 + 112) = *(void *)(v8 - 8);
  *(void *)(v7 + 120) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D94C3C, 0, 0);
}

uint64_t sub_260D94C3C()
{
  sub_260EBA924();
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void **)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  char v4 = *(unsigned char *)(v0 + 152);
  sub_260DC713C(*(void *)(v0 + 64), v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *(void *)(v0 + 40) = &type metadata for CurrentTaskCanceller;
  *(void *)(v0 + 48) = &off_270D1D7D8;
  type metadata accessor for GenerativePlayground.PromptGuidanceSketchAssignmentTask();
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 128) = v5;
  id v6 = v3;
  sub_260FE3100();
  sub_260DC79D4(v1, v5+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__definitionSession, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *(void *)(v5 + 16) = v3;
  *(unsigned char *)(v5 + 24) = v4;
  sub_260DD7B40((long long *)(v0 + 16), v5+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller);
  *(_DWORD *)(v5 + 28) = v2;
  *(unsigned char *)(v5 + 32) = BYTE4(v2) & 1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_260D94E10;
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v9 = *(void *)(v0 + 96);
  uint64_t v10 = *(void *)(v0 + 56);
  return sub_260E0478C(v10, v8, v9);
}

uint64_t sub_260D94E10()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_260D94FC0;
  }
  else {
    uint64_t v2 = sub_260D94F24;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260D94F24()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[7];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_260D94FC0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

Swift::Void __swiftcall GenerativePlayground.dropPromptGuidanceSketchAssignment()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_260FE3A10();
  __swift_project_value_buffer(v6, (uint64_t)qword_26A90FB90);
  sub_260F36A5C(0xD000000000000024, 0x8000000260FFBCC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6840);
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 1;
  *(void *)(v7 + 24) = 0;
  swift_retain();
  dispatch_semaphore_t v8 = dispatch_semaphore_create(0);
  uint64_t v9 = sub_260FE4520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = 0;
  v10[3] = 0;
  v10[4] = v8;
  v10[5] = &unk_26A8E6878;
  v10[6] = v1;
  v10[7] = v7;
  char v11 = v8;
  swift_retain();
  swift_retain();
  sub_260D9F7E4((uint64_t)v5, (uint64_t)&unk_26A8E6880, (uint64_t)v10);
  swift_release();
  sub_260FE4990();
  if (*(unsigned char *)(v7 + 16))
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();
  }
}

uint64_t sub_260D9521C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_260DD8D28;
  return GenerativePlayground.dropPromptGuidanceSketchAssignment()();
}

uint64_t GenerativePlayground.dropPromptGuidanceSketchAssignment()()
{
  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D95340, 0, 0);
}

uint64_t sub_260D95340()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260D95364, v1, 0);
}

uint64_t sub_260D95364()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D9540C, 0, 0);
}

uint64_t sub_260D9540C()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = v2 + *(int *)(v3 + 56);
  uint64_t v5 = type metadata accessor for GenerationRecipe(0);
  uint64_t v6 = v4 + *(int *)(v5 + 68);
  sub_260DC6EDC(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), *(void **)(v6 + 24));
  *(void *)(v6 + 32) = 0;
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  uint64_t v7 = v4 + *(int *)(v5 + 36);
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = v2 + *(int *)(v3 + 28);
  sub_260DC6F1C(*(id *)v8, *(unsigned char *)(v8 + 8));
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = -1;
  return MEMORY[0x270FA2498](sub_260DD8D84, v1, 0);
}

void GenerativePlayground.drawOnImageBaseImageDimensions.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 36);
  long long v3 = 0uLL;
  if ((v2 & 1) == 0) {
    long long v3 = *(_OWORD *)(v1 + 16);
  }
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v2;
}

void GenerativePlayground.drawOnImageSketchImageDimensions.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 84);
  long long v3 = 0uLL;
  if ((v2 & 1) == 0) {
    long long v3 = *(_OWORD *)(v1 + 64);
  }
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v2;
}

void GenerativePlayground.drawOnImageSketchMaskDimensions.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 60);
  long long v3 = 0uLL;
  if ((v2 & 1) == 0) {
    long long v3 = *(_OWORD *)(v1 + 40);
  }
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v2;
}

id GenerativePlayground.DrawOnImageConfiguration.baseImage.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(void **)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v3;
  return v2;
}

id GenerativePlayground.DrawOnImageConfiguration.sketchImage.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(void **)(v1 + 16);
  char v3 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  return v2;
}

id GenerativePlayground.DrawOnImageConfiguration.sketchMask.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(void **)(v1 + 32);
  char v3 = *(unsigned char *)(v1 + 40);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  return v2;
}

BOOL static GenerativePlayground.DrawOnImageAssignmentOptions.RenderMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GenerativePlayground.DrawOnImageAssignmentOptions.RenderMode.hash(into:)()
{
  return sub_260FE5300();
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC5ErrorO9hashValueSivg_0()
{
  return sub_260FE5340();
}

BOOL sub_260D95610(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_260D95628()
{
  return sub_260FE5300();
}

uint64_t sub_260D95654()
{
  return sub_260FE5340();
}

void GenerativePlayground.DrawOnImageAssignmentOptions.renderMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *GenerativePlayground.DrawOnImageAssignmentOptions.renderMode.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*GenerativePlayground.DrawOnImageAssignmentOptions.renderMode.modify())()
{
  return nullsub_1;
}

VisualGeneration::GenerativePlayground::DrawOnImageAssignmentOptions __swiftcall GenerativePlayground.DrawOnImageAssignmentOptions.init(renderMode:)(VisualGeneration::GenerativePlayground::DrawOnImageAssignmentOptions::RenderMode renderMode)
{
  *(unsigned char *)uint64_t v1 = *(unsigned char *)renderMode;
  *(_DWORD *)(v1 + 4) = 0;
  *(unsigned char *)(v1 + 8) = 1;
  result.renderMode = renderMode;
  return result;
}

unint64_t GenerativePlayground.DrawOnImageAssignmentOptions.scribbleStrength.getter()
{
  return *(unsigned int *)(v0 + 4) | ((unint64_t)*(unsigned __int8 *)(v0 + 8) << 32);
}

uint64_t GenerativePlayground.DrawOnImageAssignmentOptions.scribbleStrength.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  *(unsigned char *)(v1 + 8) = BYTE4(result) & 1;
  return result;
}

uint64_t (*GenerativePlayground.DrawOnImageAssignmentOptions.scribbleStrength.modify())()
{
  return nullsub_1;
}

id GenerativePlayground.DrawnOnImageAssignmentEventInfo.baseImage.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(void **)v1;
  *(void *)a1 = *(void *)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  return sub_260DC6F30(v2, v3);
}

id GenerativePlayground.DrawnOnImageAssignmentEventInfo.sketchMask.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(void **)(v1 + 16);
  *(void *)a1 = v2;
  char v3 = *(unsigned char *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v3;
  return sub_260DC6F30(v2, v3);
}

uint64_t GenerativePlayground.assign(baseImage:sketchImage:sketchMask:options:eventsHandler:)(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 24) = a6;
  *(void *)(v7 + 32) = v6;
  *(void *)(v7 + 16) = a5;
  type metadata accessor for DefinitionSession();
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = *a1;
  *(void *)(v7 + 40) = v12;
  *(void *)(v7 + 48) = v13;
  *(unsigned char *)(v7 + 96) = *((unsigned char *)a1 + 8);
  uint64_t v14 = *a2;
  *(unsigned char *)(v7 + 97) = *((unsigned char *)a2 + 8);
  uint64_t v15 = *a3;
  *(void *)(v7 + 56) = v14;
  *(void *)(v7 + 64) = v15;
  *(unsigned char *)(v7 + 98) = *((unsigned char *)a3 + 8);
  *(void *)(v7 + 72) = *(void *)a4;
  *(unsigned char *)(v7 + 99) = *(unsigned char *)(a4 + 8);
  return MEMORY[0x270FA2498](sub_260D9584C, 0, 0);
}

void sub_260D9584C()
{
  char v2 = *(void **)(v0 + 48);
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 16);
  id v4 = *(id *)(v0 + 64);
  id v5 = v2;
  id v6 = v1;
  sub_260DC8644(v3);
  uint64_t v7 = dword_26A8E7840;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_260D95980;
  __asm { BR              X10; sub_260E15C90 }
}

uint64_t sub_260D95980()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_260D95AB0;
  }
  else
  {
    sub_260DC6C10(*(void *)(v2 + 40), (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    uint64_t v3 = sub_260D94AA8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_260D95AB0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260D95B14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 64) = v14;
  *(void *)(v8 + 72) = v15;
  *(unsigned char *)(v8 + 131) = v13;
  *(unsigned char *)(v8 + 130) = a8;
  *(void *)(v8 + 48) = a7;
  *(void *)(v8 + 56) = v12;
  *(unsigned char *)(v8 + 129) = a6;
  *(unsigned char *)(v8 + 128) = a4;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = a5;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = type metadata accessor for DefinitionSession();
  *(void *)(v8 + 80) = v9;
  *(void *)(v8 + 88) = *(void *)(v9 - 8);
  *(void *)(v8 + 96) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D95C00, 0, 0);
}

uint64_t sub_260D95C00()
{
  sub_260EBA924();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void **)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  char v18 = *(unsigned char *)(v0 + 130);
  char v19 = *(unsigned char *)(v0 + 131);
  char v4 = *(unsigned char *)(v0 + 129);
  id v6 = *(void **)(v0 + 32);
  uint64_t v5 = *(void **)(v0 + 40);
  char v7 = *(unsigned char *)(v0 + 128);
  sub_260DC713C(*(void *)(v0 + 24), v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  type metadata accessor for GenerativePlayground.DrawOnImageAssignmentTask();
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 104) = v8;
  uint64_t v9 = v8 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__sendableCanceller;
  *(void *)(v9 + 24) = &type metadata for CurrentTaskCanceller;
  *(void *)(v9 + 32) = &off_270D1D7D8;
  id v10 = v3;
  id v11 = v6;
  id v12 = v5;
  sub_260FE3100();
  sub_260DC79D4(v1, v8 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground25DrawOnImageAssignmentTask__definitionSession, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *(void *)(v8 + 16) = v6;
  *(unsigned char *)(v8 + 24) = v7;
  *(void *)(v8 + 32) = v5;
  *(unsigned char *)(v8 + 40) = v4;
  *(void *)(v8 + 48) = v3;
  *(unsigned char *)(v8 + 56) = v18;
  *(unsigned char *)(v8 + 65) = v2 & 1;
  *(_DWORD *)(v8 + 60) = HIDWORD(v2);
  *(unsigned char *)(v8 + 64) = v19 & 1;
  char v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v13;
  void *v13 = v0;
  v13[1] = sub_260D95E1C;
  uint64_t v14 = *(void *)(v0 + 64);
  uint64_t v15 = *(void *)(v0 + 72);
  uint64_t v16 = *(void *)(v0 + 16);
  return sub_260EC375C(v16, v14, v15);
}

uint64_t sub_260D95E1C()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_260D95FCC;
  }
  else {
    uint64_t v2 = sub_260D95F30;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260D95F30()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[2];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_260D95FCC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

Swift::Void __swiftcall GenerativePlayground.dropDrawOnImageAssignment()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_260FE3A10();
  __swift_project_value_buffer(v6, (uint64_t)qword_26A90FB90);
  sub_260F36A5C(0xD00000000000001BLL, 0x8000000260FFBCF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6840);
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 1;
  *(void *)(v7 + 24) = 0;
  swift_retain();
  dispatch_semaphore_t v8 = dispatch_semaphore_create(0);
  uint64_t v9 = sub_260FE4520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  id v10 = (void *)swift_allocObject();
  void v10[2] = 0;
  v10[3] = 0;
  v10[4] = v8;
  v10[5] = &unk_26A8E68A0;
  v10[6] = v1;
  v10[7] = v7;
  id v11 = v8;
  swift_retain();
  swift_retain();
  sub_260D9F7E4((uint64_t)v5, (uint64_t)&unk_26A8E68A8, (uint64_t)v10);
  swift_release();
  sub_260FE4990();
  if (*(unsigned char *)(v7 + 16))
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();
  }
}

uint64_t sub_260D96228()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_260DD8D28;
  return GenerativePlayground.dropDrawOnImageAssignment()();
}

uint64_t GenerativePlayground.dropDrawOnImageAssignment()()
{
  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D9634C, 0, 0);
}

uint64_t sub_260D9634C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260D96370, v1, 0);
}

uint64_t sub_260D96370()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D96418, 0, 0);
}

uint64_t sub_260D96418()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = v2 + *(int *)(v3 + 56);
  uint64_t v5 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v6 = v4 + v5[17];
  sub_260DC6EDC(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), *(void **)(v6 + 24));
  *(void *)(v6 + 32) = 0;
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  uint64_t v7 = v4 + v5[9];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = v4 + v5[18];
  sub_260DC6EDC(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void **)(v8 + 24));
  *(void *)(v8 + 32) = 0;
  *(_OWORD *)uint64_t v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  uint64_t v9 = v4 + v5[20];
  sub_260DC6EDC(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(void **)(v9 + 24));
  *(void *)(v9 + 32) = 0;
  *(_OWORD *)uint64_t v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  sub_260DC6EDC(*(void *)(v9 + 40), *(void *)(v9 + 48), *(void *)(v9 + 56), *(void **)(v9 + 64));
  *(_OWORD *)(v9 + 65) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *(_OWORD *)(v9 + 40) = 0u;
  uint64_t v10 = v2 + *(int *)(v3 + 36);
  sub_260DC6FE4(*(void **)v10, *(void *)(v10 + 8), *(void **)(v10 + 16), *(void *)(v10 + 24), *(void **)(v10 + 32));
  *(_OWORD *)uint64_t v10 = xmmword_260FE7220;
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 16) = 0;
  *(unsigned char *)(v10 + 40) = 0;
  return MEMORY[0x270FA2498](sub_260DD8D84, v1, 0);
}

uint64_t GenerativePlayground.promptConditioningImage.getter(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for DefinitionSession();
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D9660C, 0, 0);
}

uint64_t sub_260D9660C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 168);
  *(void *)(v0 + 72) = v1;
  return MEMORY[0x270FA2498](sub_260D96630, v1, 0);
}

uint64_t sub_260D96630()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D966D4, 0, 0);
}

uint64_t sub_260D966D4()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[5];
  uint64_t v3 = v1 + *(int *)(v0[7] + 32);
  uint64_t v4 = *(void **)v3;
  char v5 = *(unsigned char *)(v3 + 8);
  *(void *)uint64_t v2 = *(void *)v3;
  *(unsigned char *)(v2 + 8) = v5;
  sub_260DC6F30(v4, v5);
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

double GenerativePlayground.PromptConditioningImageFaceInfo.normalizedQuartzCoordinateCropRect.getter()
{
  return *(double *)v0;
}

uint64_t GenerativePlayground.promptConditioningImageFaces.getter()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D96814, 0, 0);
}

uint64_t sub_260D96814()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260D96838, v1, 0);
}

uint64_t sub_260D96838()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D968DC, 0, 0);
}

uint64_t sub_260D968DC()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = *(int *)(v0[6] + 56);
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 88) + v2;
  if (*(void *)(v3 + 24))
  {
    uint64_t v4 = *(void *)(v3 + 40);
    swift_bridgeObjectRetain();
    sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    int64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      uint64_t v19 = MEMORY[0x263F8EE78];
      sub_260DB47B4(0, v5, 0);
      uint64_t v6 = 0;
      uint64_t v7 = v19;
      unint64_t v8 = *(void *)(v19 + 16);
      uint64_t v9 = 32 * v8;
      do
      {
        long long v10 = *(_OWORD *)(v4 + v6 + 32);
        long long v11 = *(_OWORD *)(v4 + v6 + 48);
        unint64_t v12 = *(void *)(v19 + 24);
        unint64_t v13 = v8 + 1;
        if (v8 >= v12 >> 1)
        {
          long long v17 = *(_OWORD *)(v4 + v6 + 48);
          long long v18 = *(_OWORD *)(v4 + v6 + 32);
          sub_260DB47B4(v12 > 1, v8 + 1, 1);
          long long v11 = v17;
          long long v10 = v18;
        }
        *(void *)(v19 + 16) = v13;
        uint64_t v14 = v19 + v9 + v6;
        *(_OWORD *)(v14 + 32) = v10;
        *(_OWORD *)(v14 + 48) = v11;
        v6 += 32;
        unint64_t v8 = v13;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = MEMORY[0x263F8EE78];
    }
  }
  else
  {
    sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    uint64_t v7 = 0;
  }
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(uint64_t))v0[1];
  return v15(v7);
}

uint64_t GenerativePlayground.recommendedPromptConditioningImageDimensions.getter@<X0>(uint64_t a1@<X8>)
{
  sub_260D907BC(v1 + 128, (uint64_t)v8, &qword_26A8E6860);
  uint64_t v3 = v9;
  if (!v9)
  {
    uint64_t result = sub_260D90820((uint64_t)v8, &qword_26A8E6860);
    goto LABEL_5;
  }
  uint64_t v4 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v4 + 56))(&v11, v3, v4);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  if (v12)
  {
LABEL_5:
    long long v7 = 0uLL;
    char v6 = 1;
    goto LABEL_6;
  }
  char v6 = 0;
  long long v7 = v11;
LABEL_6:
  *(_OWORD *)a1 = v7;
  *(unsigned char *)(a1 + 16) = v6;
  return result;
}

uint64_t GenerativePlayground.PromptConditioningImageSanitizationCategory.hash(into:)()
{
  return sub_260FE5300();
}

BOOL static GenerativePlayground.PromptConditioningImageSanitizationCategory.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t GenerativePlayground.PromptConditioningImageSanitizationCategory.hashValue.getter()
{
  return sub_260FE5340();
}

BOOL sub_260D96BC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentOptions.allowPersonalizations.getter()
{
  return *v0;
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentOptions.allowPersonalizations.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*GenerativePlayground.PromptConditioningImageAssignmentOptions.allowPersonalizations.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentOptions.allowImageRejection.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentOptions.allowImageRejection.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*GenerativePlayground.PromptConditioningImageAssignmentOptions.allowImageRejection.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentOptions.generateCaptionFromImage.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t GenerativePlayground.PromptConditioningImageAssignmentOptions.generateCaptionFromImage.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*GenerativePlayground.PromptConditioningImageAssignmentOptions.generateCaptionFromImage.modify())()
{
  return nullsub_1;
}

void GenerativePlayground.PromptConditioningImageAssignmentOptions.sanitizationCategory.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

unsigned char *GenerativePlayground.PromptConditioningImageAssignmentOptions.sanitizationCategory.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 3) = *result;
  return result;
}

uint64_t (*GenerativePlayground.PromptConditioningImageAssignmentOptions.sanitizationCategory.modify())()
{
  return nullsub_1;
}

VisualGeneration::GenerativePlayground::PromptConditioningImageAssignmentOptions __swiftcall GenerativePlayground.PromptConditioningImageAssignmentOptions.init()()
{
  *uint64_t v0 = 16843009;
  return result;
}

uint64_t GenerativePlayground.assign(promptConditioningImage:options:eventsHandler:)(uint64_t *a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 16) = a3;
  type metadata accessor for DefinitionSession();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = *a1;
  *(void *)(v5 + 40) = v8;
  *(void *)(v5 + 48) = v9;
  *(unsigned char *)(v5 + 76) = *((unsigned char *)a1 + 8);
  *(_DWORD *)(v5 + 72) = *a2;
  return MEMORY[0x270FA2498](sub_260D96D68, 0, 0);
}

uint64_t sub_260D96D68()
{
  int v1 = *(_DWORD *)(v0 + 72);
  if (v1 == 2) {
    int v2 = 1;
  }
  else {
    int v2 = *(_DWORD *)(v0 + 72) & 1;
  }
  if (*(_DWORD *)(v0 + 72) == 2) {
    int v3 = 256;
  }
  else {
    int v3 = *(_DWORD *)(v0 + 72) & 0x100;
  }
  if (*(_DWORD *)(v0 + 72) == 2) {
    int v4 = 0x10000;
  }
  else {
    int v4 = v1 & 0x10000;
  }
  if (*(_DWORD *)(v0 + 72) == 2) {
    unsigned int v5 = 0x1000000;
  }
  else {
    unsigned int v5 = v1 & 0xFF000000;
  }
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(*(void *)(v0 + 32) + 168);
  id v8 = *(id *)(v0 + 48);
  sub_260DC8644(v6);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, int, uint64_t, uint64_t))((char *)&dword_26A8E7838
                                                                                       + dword_26A8E7838);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_260D96E9C;
  uint64_t v10 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 48);
  uint64_t v12 = *(void *)(v0 + 16);
  uint64_t v13 = *(void *)(v0 + 24);
  char v14 = *(unsigned char *)(v0 + 76);
  return v16(v10, v7, v11, v14, v3 | v5 | v2 | v4, v12, v13);
}

uint64_t sub_260D96E9C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    int v3 = sub_260D96FCC;
  }
  else
  {
    sub_260DC6C10(*(void *)(v2 + 40), (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    int v3 = sub_260D94AA8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_260D96FCC()
{
  swift_task_dealloc();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260D97030(uint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 80) = a6;
  *(void *)(v7 + 88) = a7;
  *(_DWORD *)(v7 + 144) = a5;
  *(unsigned char *)(v7 + 148) = a4;
  *(void *)(v7 + 64) = a2;
  *(void *)(v7 + 72) = a3;
  *(void *)(v7 + 56) = a1;
  uint64_t v8 = type metadata accessor for DefinitionSession();
  *(void *)(v7 + 96) = v8;
  *(void *)(v7 + 104) = *(void *)(v8 - 8);
  *(void *)(v7 + 112) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D97100, 0, 0);
}

uint64_t sub_260D97100()
{
  sub_260EBA924();
  uint64_t v1 = *(void *)(v0 + 112);
  int v2 = *(_DWORD *)(v0 + 144);
  char v3 = *(unsigned char *)(v0 + 148);
  int v4 = *(void **)(v0 + 72);
  sub_260DC713C(*(void *)(v0 + 64), v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *(void *)(v0 + 40) = &type metadata for CurrentTaskCanceller;
  *(void *)(v0 + 48) = &off_270D1D7D8;
  type metadata accessor for GenerativePlayground.PromptConditioningImageAssignmentTask();
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 120) = v5;
  id v6 = v4;
  sub_260FE3100();
  sub_260DC79D4(v1, v5+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__definitionSession, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *(void *)(v5 + 16) = v4;
  *(unsigned char *)(v5 + 24) = v3;
  sub_260DD7B40((long long *)(v0 + 16), v5+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__sendableCanceller);
  uint64_t v7 = (unsigned char *)(v5
               + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground37PromptConditioningImageAssignmentTask__options);
  *uint64_t v7 = v2 & 1;
  v7[1] = BYTE1(v2) & 1;
  void v7[2] = BYTE2(v2) & 1;
  v7[3] = HIBYTE(v2);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_260D97300;
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v10 = *(void *)(v0 + 88);
  uint64_t v11 = *(void *)(v0 + 56);
  return sub_260EA45B0(v11, v9, v10);
}

uint64_t sub_260D97300()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    int v2 = sub_260D974B0;
  }
  else {
    int v2 = sub_260D97414;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260D97414()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[7];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_260D974B0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

Swift::Void __swiftcall GenerativePlayground.dropPromptConditioningImageAssignment()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_260FE3A10();
  __swift_project_value_buffer(v6, (uint64_t)qword_26A90FB90);
  sub_260F36A5C(0xD000000000000027, 0x8000000260FFBD10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6840);
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 1;
  *(void *)(v7 + 24) = 0;
  swift_retain();
  dispatch_semaphore_t v8 = dispatch_semaphore_create(0);
  uint64_t v9 = sub_260FE4520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = 0;
  v10[3] = 0;
  v10[4] = v8;
  v10[5] = &unk_26A8E68D8;
  v10[6] = v1;
  v10[7] = v7;
  uint64_t v11 = v8;
  swift_retain();
  swift_retain();
  sub_260D9F7E4((uint64_t)v5, (uint64_t)&unk_26A8E68E0, (uint64_t)v10);
  swift_release();
  sub_260FE4990();
  if (*(unsigned char *)(v7 + 16))
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();
  }
}

uint64_t sub_260D9770C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_260DD8D28;
  return GenerativePlayground.dropPromptConditioningImageAssignment()();
}

uint64_t GenerativePlayground.dropPromptConditioningImageAssignment()()
{
  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D97830, 0, 0);
}

uint64_t sub_260D97830()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260D97854, v1, 0);
}

uint64_t sub_260D97854()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D978FC, 0, 0);
}

uint64_t sub_260D978FC()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v1 + *(int *)(v2 + 56);
  uint64_t v4 = type metadata accessor for GenerationRecipe(0);
  uint64_t v5 = v3 + *(int *)(v4 + 88);
  sub_260DC70DC(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void **)(v5 + 24));
  *(unsigned char *)(v5 + 64) = 0;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)uint64_t v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  uint64_t v6 = v1 + *(int *)(v2 + 32);
  sub_260DC6F1C(*(id *)v6, *(unsigned char *)(v6 + 8));
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = -1;
  uint64_t v7 = *(int *)(v4 + 96);
  if (*(void *)(*(void *)(v3 + v7) + 16))
  {
    sub_260DBAF94(1);
    if (v8)
    {
      unint64_t v9 = sub_260DBAF94(1);
      if (v10)
      {
        unint64_t v11 = v9;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v13 = *(void *)(v3 + v7);
        *(void *)(v3 + v7) = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_260DC1F48();
        }
        sub_260DC0C38(v11, v13);
        *(void *)(v3 + v7) = v13;
        swift_bridgeObjectRelease();
      }
    }
  }
  uint64_t v14 = v0[11];
  sub_260F4462C();
  return MEMORY[0x270FA2498](sub_260DD8D84, v14, 0);
}

uint64_t GenerativePlayground.availableImageStyles.getter()
{
  sub_260D907BC(v0 + 128, (uint64_t)&v5, &qword_26A8E6860);
  if (v6)
  {
    sub_260DD7B40(&v5, (uint64_t)v7);
    uint64_t v1 = v8;
    uint64_t v2 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 32) + 8))(v1);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  }
  else
  {
    sub_260D90820((uint64_t)&v5, &qword_26A8E6860);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t GenerativePlayground._gmsFilteredAvailableImageStyles.getter()
{
  v1[35] = v0;
  uint64_t v2 = sub_260FE3510();
  v1[36] = v2;
  v1[37] = *(void *)(v2 - 8);
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  uint64_t v3 = sub_260FE3530();
  v1[40] = v3;
  v1[41] = *(void *)(v3 - 8);
  v1[42] = swift_task_alloc();
  uint64_t v4 = sub_260FE3560();
  v1[43] = v4;
  v1[44] = *(void *)(v4 - 8);
  v1[45] = swift_task_alloc();
  v1[46] = type metadata accessor for GenerationRecipe(0);
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  v1[49] = type metadata accessor for DefinitionSession();
  v1[50] = swift_task_alloc();
  v1[51] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D97D0C, 0, 0);
}

uint64_t sub_260D97D0C()
{
  if (geteuid())
  {
    uint64_t v1 = *(void *)(v0 + 280);
    uint64_t v2 = *(void *)(v1 + 112);
    *(void *)(v0 + 416) = v2;
    uint64_t v3 = *(void *)(v1 + 120);
    *(void *)(v0 + 424) = v3;
    if (v2 == 0xD000000000000029 && v3 == 0x8000000260FFBD40)
    {
LABEL_6:
      sub_260D907BC(v1 + 128, v0 + 136, &qword_26A8E6860);
      if (*(void *)(v0 + 160))
      {
        sub_260DD7B40((long long *)(v0 + 136), v0 + 96);
        uint64_t v5 = *(void *)(v0 + 120);
        uint64_t v4 = *(void *)(v0 + 128);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), v5);
        uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 32) + 8))(v5);
        __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
      }
      else
      {
        sub_260D90820(v0 + 136, &qword_26A8E6860);
        uint64_t v6 = MEMORY[0x263F8EE78];
      }
      *(void *)(v0 + 432) = v6;
      uint64_t v14 = *(void *)(v6 + 16);
      *(void *)(v0 + 440) = v14;
      if (v14)
      {
        uint64_t v15 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
        *(void *)(v0 + 448) = *(void *)(*(void *)(v0 + 280) + 168);
        *(void *)(v0 + 456) = v15;
        swift_beginAccess();
        *(_DWORD *)(v0 + 212) = *MEMORY[0x263F41150];
        uint64_t v16 = MEMORY[0x263F8EE78];
        *(void *)(v0 + 464) = 0;
        *(void *)(v0 + 472) = v16;
        uint64_t v17 = *(void *)(v0 + 448);
        *(unsigned char *)(v0 + 209) = *(unsigned char *)(*(void *)(v0 + 432) + 32);
        return MEMORY[0x270FA2498](sub_260D980B4, v17, 0);
      }
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    if (sub_260FE5150())
    {
      uint64_t v1 = *(void *)(v0 + 280);
      goto LABEL_6;
    }
  }
  if (!geteuid())
  {
    if (qword_26A8E6118 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_260FE3A10();
    __swift_project_value_buffer(v7, (uint64_t)qword_26A90FB90);
    uint64_t v8 = sub_260FE39F0();
    os_log_type_t v9 = sub_260FE4890();
    if (os_log_type_enabled(v8, v9))
    {
      char v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v10 = 0;
      _os_log_impl(&dword_260D82000, v8, v9, "GenerativeModelsAvailability can not be queried as root. Try again when runing as the logged in user (or mobile).", v10, 2u);
      MEMORY[0x26122CA00](v10, -1, -1);
    }
  }
  sub_260D907BC(*(void *)(v0 + 280) + 128, v0 + 56, &qword_26A8E6860);
  if (!*(void *)(v0 + 80))
  {
    sub_260D90820(v0 + 56, &qword_26A8E6860);
LABEL_23:
    uint64_t v13 = MEMORY[0x263F8EE78];
    goto LABEL_24;
  }
  sub_260DD7B40((long long *)(v0 + 56), v0 + 16);
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v12 = *(void *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 32) + 8))(v11);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
LABEL_24:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v18(v13);
}

uint64_t sub_260D980B4()
{
  sub_260DC713C(v0[56] + v0[57], v0[51], (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D98138, 0, 0);
}

uint64_t sub_260D98138()
{
  unint64_t v1 = 0xD000000000000025;
  uint64_t v2 = v0[51];
  uint64_t v3 = (unsigned __int8 *)v0[48];
  sub_260DC713C(v2 + *(int *)(v0[49] + 56), (uint64_t)v3, type metadata accessor for GenerationRecipe);
  sub_260DC6C10(v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v4 = *v3;
  sub_260DC6C10((uint64_t)v3, type metadata accessor for GenerationRecipe);
  unint64_t v5 = 0x8000000260FFBDD0;
  switch(v4)
  {
    case 1:
      goto LABEL_6;
    case 2:
      uint64_t v6 = "VisualGeneration.PhotosGenerativeEdit";
      goto LABEL_5;
    case 3:
      unint64_t v1 = 0xD000000000000010;
      uint64_t v6 = "VisualGeneration";
      goto LABEL_5;
    default:
      unint64_t v1 = 0xD000000000000027;
      uint64_t v6 = "VisualGeneration.KeyboardEmojiGenerator";
LABEL_5:
      unint64_t v5 = (unint64_t)(v6 - 32) | 0x8000000000000000;
LABEL_6:
      v0[60] = v1;
      v0[61] = v5;
      uint64_t v7 = v0[56];
      return MEMORY[0x270FA2498](sub_260D98288, v7, 0);
  }
}

uint64_t sub_260D98288()
{
  sub_260DC713C(v0[56] + v0[57], v0[50], (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D9830C, 0, 0);
}

uint64_t sub_260D9830C()
{
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 376);
  sub_260DC713C(v1 + *(int *)(*(void *)(v0 + 392) + 56), v3, type metadata accessor for GenerationRecipe);
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v4 = (uint64_t *)(v3 + *(int *)(v2 + 68));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v8 = v4[2];
  uint64_t v7 = (void *)v4[3];
  sub_260DC71A4(*v4, v6, v8, v7);
  sub_260DC6C10(v3, type metadata accessor for GenerationRecipe);
  if (v7) {
    sub_260DC6EDC(v5, v6, v8, v7);
  }
  char v9 = v7 != 0;
  uint64_t v10 = *(void *)(v0 + 480);
  uint64_t v35 = *(void *)(v0 + 488);
  char v11 = *(unsigned char *)(v0 + 209);
  unsigned int v46 = *(_DWORD *)(v0 + 212);
  uint64_t v13 = *(void *)(v0 + 416);
  uint64_t v12 = *(void *)(v0 + 424);
  uint64_t v39 = *(void *)(v0 + 360);
  uint64_t v47 = *(void *)(v0 + 344);
  uint64_t v49 = *(void *)(v0 + 352);
  uint64_t v14 = *(void *)(v0 + 328);
  uint64_t v36 = *(void *)(v0 + 336);
  uint64_t v40 = *(void *)(v0 + 320);
  uint64_t v41 = *(void *)(v0 + 312);
  uint64_t v15 = *(void *)(v0 + 296);
  uint64_t v42 = *(void *)(v0 + 304);
  uint64_t v44 = *(void *)(v0 + 288);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E68F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7080;
  *(unsigned char *)(inited + 32) = v11;
  swift_bridgeObjectRetain();
  sub_260E4201C(v10, v35, inited, 1, v9, v13, v12);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_260FE7080;
  *(unsigned char *)(v17 + 32) = v11;
  swift_bridgeObjectRetain();
  sub_260E4201C(v10, v35, v17, 0, v9, v13, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  sub_260FE3520();
  sub_260FE3550();
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v38(v36, v40);
  sub_260FE3540();
  uint64_t v37 = *(void (**)(uint64_t, void, uint64_t))(v15 + 104);
  v37(v42, v46, v44);
  LOBYTE(v14) = sub_260FE3500();
  long long v18 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v18(v42, v44);
  v18(v41, v44);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v19(v39, v47);
  swift_bridgeObjectRelease();
  if (v14)
  {
    unsigned int v45 = *(_DWORD *)(v0 + 212);
    uint64_t v20 = *(void *)(v0 + 360);
    uint64_t v21 = *(void *)(v0 + 336);
    uint64_t v48 = *(void *)(v0 + 344);
    uint64_t v22 = *(void *)(v0 + 312);
    uint64_t v43 = *(void *)(v0 + 320);
    uint64_t v23 = *(void *)(v0 + 304);
    uint64_t v24 = *(void *)(v0 + 288);
    swift_bridgeObjectRetain();
    sub_260FE3520();
    sub_260FE3550();
    v38(v21, v43);
    sub_260FE3540();
    v37(v23, v45, v24);
    char v25 = sub_260FE3500();
    v18(v23, v24);
    v18(v22, v24);
    v19(v20, v48);
    swift_bridgeObjectRelease();
    uint64_t v26 = *(char **)(v0 + 472);
    if (v25)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v26 = *(char **)(v0 + 472);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v26 = sub_260DB1700(0, *((void *)v26 + 2) + 1, 1, *(char **)(v0 + 472));
      }
      unint64_t v29 = *((void *)v26 + 2);
      unint64_t v28 = *((void *)v26 + 3);
      if (v29 >= v28 >> 1) {
        uint64_t v26 = sub_260DB1700((char *)(v28 > 1), v29 + 1, 1, v26);
      }
      char v30 = *(unsigned char *)(v0 + 209);
      *((void *)v26 + 2) = v29 + 1;
      v26[v29 + 32] = v30;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = *(char **)(v0 + 472);
  }
  uint64_t v31 = *(void *)(v0 + 464) + 1;
  if (v31 == *(void *)(v0 + 440))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = *(uint64_t (**)(char *))(v0 + 8);
    return v32(v26);
  }
  else
  {
    *(void *)(v0 + 464) = v31;
    *(void *)(v0 + 472) = v26;
    uint64_t v34 = *(void *)(v0 + 448);
    *(unsigned char *)(v0 + 209) = *(unsigned char *)(*(void *)(v0 + 432) + v31 + 32);
    return MEMORY[0x270FA2498](sub_260D980B4, v34, 0);
  }
}

uint64_t GenerativePlayground.definitionSession.getter(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x270FA2498](sub_260D988B0, 0, 0);
}

uint64_t sub_260D988B0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 168);
  *(void *)(v0 + 56) = v1;
  return MEMORY[0x270FA2498](sub_260D988D4, v1, 0);
}

uint64_t sub_260D988D4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[7] + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

Swift::Bool __swiftcall GenerativePlayground.imageStyle(_:canBeCombinedWith:)(VisualGeneration::ImageStyle _, Swift::OpaquePointer canBeCombinedWith)
{
  char v4 = *(unsigned char *)_;
  sub_260D907BC(v2 + 128, (uint64_t)&v9, &qword_26A8E6860);
  if (v10)
  {
    sub_260DD7B40(&v9, (uint64_t)v11);
    uint64_t v5 = v12;
    uint64_t v6 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    LOBYTE(v9) = v4;
    char v7 = (*(uint64_t (**)(long long *, void *, uint64_t))(*(void *)(v6 + 40) + 8))(&v9, canBeCombinedWith._rawValue, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  }
  else
  {
    sub_260D90820((uint64_t)&v9, &qword_26A8E6860);
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t GenerativePlayground.assignedImageStyles.getter()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D98AD0, 0, 0);
}

uint64_t sub_260D98AD0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260D98AF4, v1, 0);
}

uint64_t sub_260D98AF4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D98B98, 0, 0);
}

uint64_t sub_260D98B98()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = *(void *)(v1 + *(int *)(v0[6] + 56) + 64);
  swift_bridgeObjectRetain();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t GenerativePlayground.assign_async(_:)(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  v2[10] = type metadata accessor for DefinitionSession();
  v2[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D98CC4, 0, 0);
}

uint64_t sub_260D98CC4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 168);
  *(void *)(v0 + 96) = v1;
  return MEMORY[0x270FA2498](sub_260D98CE8, v1, 0);
}

uint64_t sub_260D98CE8()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[13] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D98D90, 0, 0);
}

uint64_t sub_260D98D90()
{
  uint64_t v1 = v0[11] + *(int *)(v0[10] + 56);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v4 = qword_26A8E6070;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_26A90FA88;
  uint64_t v6 = *(void *)(qword_26A90FA88 + 16);
  if (v6)
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *(void *)(v5 + 8 * v8 + 32);
      if ((*(uint64_t (**)(uint64_t))(v9 + 88))(v7) == v3 && v10 == v2) {
        break;
      }
      char v12 = sub_260FE5150();
      uint64_t v7 = swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_14;
      }
      if (v6 == ++v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v15 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v9 + 128))(v15);
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[14] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_260D98FC4;
    uint64_t v18 = v0[8];
    return sub_260F3CBE0(v18);
  }
  else
  {
LABEL_12:
    sub_260D9055C();
    uint64_t v13 = swift_allocError();
    *(void *)uint64_t v14 = v3;
    *(void *)(v14 + 8) = v2;
    *(unsigned char *)(v14 + 16) = 0;
    swift_willThrow();
    v0[15] = v13;
    uint64_t v16 = v0[12];
    return MEMORY[0x270FA2498](sub_260D991BC, v16, 0);
  }
}

uint64_t sub_260D98FC4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(void *)(v2 + 120) = v0;
    uint64_t v3 = *(void *)(v2 + 96);
    uint64_t v4 = sub_260D991BC;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 96);
    uint64_t v4 = sub_260D990E8;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_260D990E8()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12] + v0[13];
  swift_beginAccess();
  sub_260DC7A3C(v1, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_260D991BC()
{
  sub_260DC6C10(*(void *)(v0 + 88), (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t GenerativePlayground.add(_:)(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  v2[10] = type metadata accessor for DefinitionSession();
  v2[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D992D4, 0, 0);
}

uint64_t sub_260D992D4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 168);
  *(void *)(v0 + 96) = v1;
  return MEMORY[0x270FA2498](sub_260D992F8, v1, 0);
}

uint64_t sub_260D992F8()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[13] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D993A0, 0, 0);
}

uint64_t sub_260D993A0()
{
  uint64_t v1 = v0[11] + *(int *)(v0[10] + 56);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v4 = qword_26A8E6070;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_26A90FA88;
  uint64_t v6 = *(void *)(qword_26A90FA88 + 16);
  if (v6)
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *(void *)(v5 + 8 * v8 + 32);
      if ((*(uint64_t (**)(uint64_t))(v9 + 88))(v7) == v3 && v10 == v2) {
        break;
      }
      char v12 = sub_260FE5150();
      uint64_t v7 = swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_14;
      }
      if (v6 == ++v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v15 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v9 + 128))(v15);
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[14] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_260D995D4;
    uint64_t v18 = v0[8];
    return sub_260F3DA00(v18);
  }
  else
  {
LABEL_12:
    sub_260D9055C();
    uint64_t v13 = swift_allocError();
    *(void *)uint64_t v14 = v3;
    *(void *)(v14 + 8) = v2;
    *(unsigned char *)(v14 + 16) = 0;
    swift_willThrow();
    v0[15] = v13;
    uint64_t v16 = v0[12];
    return MEMORY[0x270FA2498](sub_260DD8D78, v16, 0);
  }
}

uint64_t sub_260D995D4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(void *)(v2 + 120) = v0;
    uint64_t v3 = *(void *)(v2 + 96);
    uint64_t v4 = sub_260DD8D78;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 96);
    uint64_t v4 = sub_260DD8D58;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t GenerativePlayground.remove(_:)(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  v2[10] = type metadata accessor for DefinitionSession();
  v2[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D9978C, 0, 0);
}

uint64_t sub_260D9978C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 168);
  *(void *)(v0 + 96) = v1;
  return MEMORY[0x270FA2498](sub_260D997B0, v1, 0);
}

uint64_t sub_260D997B0()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[13] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D99858, 0, 0);
}

uint64_t sub_260D99858()
{
  uint64_t v1 = v0[11] + *(int *)(v0[10] + 56);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v4 = qword_26A8E6070;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_26A90FA88;
  uint64_t v6 = *(void *)(qword_26A90FA88 + 16);
  if (v6)
  {
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = *(void *)(v5 + 8 * v8 + 32);
      if ((*(uint64_t (**)(uint64_t))(v9 + 88))(v7) == v3 && v10 == v2) {
        break;
      }
      char v12 = sub_260FE5150();
      uint64_t v7 = swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_14;
      }
      if (v6 == ++v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v15 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(v9 + 128))(v15);
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[14] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_260D995D4;
    uint64_t v18 = v0[8];
    return sub_260F3DF98(v18);
  }
  else
  {
LABEL_12:
    sub_260D9055C();
    uint64_t v13 = swift_allocError();
    *(void *)uint64_t v14 = v3;
    *(void *)(v14 + 8) = v2;
    *(unsigned char *)(v14 + 16) = 0;
    swift_willThrow();
    v0[15] = v13;
    uint64_t v16 = v0[12];
    return MEMORY[0x270FA2498](sub_260DD8D78, v16, 0);
  }
}

uint64_t GenerativePlayground.removeAllImageStyles()()
{
  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D99B20, 0, 0);
}

uint64_t sub_260D99B20()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260D99B44, v1, 0);
}

uint64_t sub_260D99B44()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D99BEC, 0, 0);
}

uint64_t sub_260D99BEC()
{
  uint64_t v1 = v0[10] + *(int *)(v0[9] + 56);
  if (*(void *)(*(void *)(v1 + 64) + 16))
  {
    swift_bridgeObjectRelease();
    *(void *)(v1 + 64) = MEMORY[0x263F8EE78];
    sub_260F4462C();
  }
  uint64_t v2 = v0[11];
  return MEMORY[0x270FA2498](sub_260DD8D84, v2, 0);
}

uint64_t GenerativePlayground.findPersonIndications()(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for GenerationRecipe(0);
  v2[8] = swift_task_alloc();
  v2[9] = type metadata accessor for DefinitionSession();
  v2[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D99D3C, 0, 0);
}

uint64_t sub_260D99D3C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260D99D60, v1, 0);
}

uint64_t sub_260D99D60()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D99E04, 0, 0);
}

uint64_t sub_260D99E04()
{
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = (void *)v0[5];
  sub_260DC713C(v1 + *(int *)(v0[9] + 56), v2, type metadata accessor for GenerationRecipe);
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v5 = (void *)(v2 + *(int *)(v3 + 92));
  uint64_t v6 = v5[1];
  uint64_t v7 = v5[2];
  uint64_t v8 = v5[3];
  *uint64_t v4 = *v5;
  v4[1] = v6;
  v4[2] = v7;
  v4[3] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_260DC6C10(v2, type metadata accessor for GenerationRecipe);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t GenerativePlayground.directableDemographicCategories.getter@<X0>(_DWORD *a1@<X8>)
{
  sub_260D907BC(v1 + 128, (uint64_t)&v6, &qword_26A8E6860);
  if (v7)
  {
    sub_260DD7B40(&v6, (uint64_t)v8);
    uint64_t v4 = v9;
    uint64_t v3 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(uint64_t))(*(void *)(v3 + 16) + 8))(v4);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  }
  else
  {
    uint64_t result = sub_260D90820((uint64_t)&v6, &qword_26A8E6860);
    *a1 = 0;
  }
  return result;
}

uint64_t sub_260D99FC0(int *a1)
{
  int v2 = *a1;
  sub_260D907BC(v1 + 128, (uint64_t)&v11, &qword_26A8E6860);
  if (v12)
  {
    sub_260DD7B40(&v11, (uint64_t)v13);
    uint64_t v4 = v14;
    uint64_t v3 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)(v3 + 16) + 8))(&v11, v4);
    if ((v2 & ~v11) != 0)
    {
      int v5 = v11 & ~v2;
      sub_260DD8B68();
      swift_allocError();
      *long long v6 = v5;
      swift_willThrow();
    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  }
  else
  {
    sub_260D90820((uint64_t)&v11, &qword_26A8E6860);
    uint64_t v9 = *(void *)(v1 + 112);
    uint64_t v8 = *(void *)(v1 + 120);
    sub_260D9055C();
    swift_allocError();
    *(void *)uint64_t v10 = v9;
    *(void *)(v10 + 8) = v8;
    *(unsigned char *)(v10 + 16) = 3;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
}

uint64_t sub_260D9A0EC(int a1)
{
  return sub_260D9A10C(a1);
}

uint64_t sub_260D9A10C(int a1)
{
  int v2 = v1;
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_260FE3A10();
  __swift_project_value_buffer(v4, (uint64_t)qword_26A90FB90);
  int v5 = sub_260FE39F0();
  os_log_type_t v6 = sub_260FE48A0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v9 = sub_260FE4150();
    sub_260DB2844(v9, v10, &v23);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_260D82000, v5, v6, "Assigning demographic directive '%{public}s'", v7, 0xCu);
    swift_arrayDestroy();
    uint64_t v11 = v8;
    int v2 = v1;
    MEMORY[0x26122CA00](v11, -1, -1);
    MEMORY[0x26122CA00](v7, -1, -1);
  }

  LODWORD(v23) = a1;
  uint64_t result = sub_260D99FC0((int *)&v23);
  if (v2)
  {
    id v13 = v2;
    id v14 = v2;
    uint64_t v15 = sub_260FE39F0();
    os_log_type_t v16 = sub_260FE4890();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v23 = v18;
      *(_DWORD *)uint64_t v17 = 136446466;
      uint64_t v19 = sub_260FE4150();
      sub_260DB2844(v19, v20, &v23);
      sub_260FE4AE0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v21 = sub_260FE5290();
      sub_260DB2844(v21, v22, &v23);
      sub_260FE4AE0();
      swift_bridgeObjectRelease();

      swift_arrayDestroy();
      MEMORY[0x26122CA00](v18, -1, -1);
      MEMORY[0x26122CA00](v17, -1, -1);
    }
    else
    {
    }
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_260D9A480(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_260FE3A10();
  __swift_project_value_buffer(v8, (uint64_t)qword_26A90FB90);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_260FE39F0();
  os_log_type_t v10 = sub_260FE48A0();
  uint64_t v27 = a2;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v30 = v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    uint64_t v29 = a3;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_260FE4150();
    uint64_t v28 = sub_260DB2844(v13, v14, &v30);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_260D82000, v9, v10, "Assigning demographic directive '%{public}s'", v11, 0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v12;
    uint64_t v4 = v3;
    MEMORY[0x26122CA00](v15, -1, -1);
    MEMORY[0x26122CA00](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  LODWORD(v28) = a1;
  uint64_t result = sub_260D99FC0((int *)&v28);
  if (v4)
  {
    swift_bridgeObjectRetain();
    id v17 = v4;
    swift_bridgeObjectRetain();
    id v18 = v4;
    uint64_t v19 = sub_260FE39F0();
    os_log_type_t v20 = sub_260FE4890();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v30 = v22;
      *(_DWORD *)uint64_t v21 = 136446466;
      uint64_t v28 = v27;
      uint64_t v29 = a3;
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_260FE4150();
      uint64_t v28 = sub_260DB2844(v23, v24, &v30);
      sub_260FE4AE0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v25 = sub_260FE5290();
      uint64_t v28 = sub_260DB2844(v25, v26, &v30);
      sub_260FE4AE0();
      swift_bridgeObjectRelease();

      swift_arrayDestroy();
      MEMORY[0x26122CA00](v22, -1, -1);
      MEMORY[0x26122CA00](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    return swift_willThrow();
  }
  return result;
}

uint64_t GenerativePlayground.genderDirective.getter()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D9A8F0, 0, 0);
}

uint64_t sub_260D9A8F0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260D9A914, v1, 0);
}

uint64_t sub_260D9A914()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D9A9B8, 0, 0);
}

uint64_t sub_260D9A9B8()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = *(int *)(v0[6] + 56);
  uint64_t v3 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v2 + 1);
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t GenerativePlayground.specifyGenderDirective(_:)(char a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 104) = a1;
  *(void *)(v2 + 72) = type metadata accessor for DefinitionSession();
  *(void *)(v2 + 80) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D9AAF0, 0, 0);
}

uint64_t sub_260D9AAF0()
{
  sub_260D9A10C(1);
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260D9ABC0, v1, 0);
}

uint64_t sub_260D9ABC0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  char v4 = *(unsigned char *)(v0 + 104);
  uint64_t v5 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(void *)(v0 + 96) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v6 = v2 + v5;
  swift_beginAccess();
  sub_260DC713C(v6, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v7 = *(int *)(v3 + 56);
  *(unsigned char *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v7 + 1) = v4;
  return MEMORY[0x270FA2498](sub_260D9AC9C, v2, 0);
}

uint64_t sub_260D9AC9C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11] + v0[12];
  swift_beginAccess();
  sub_260DC7A3C(v1, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t GenerativePlayground.dropGenderDirective()()
{
  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D9AE04, 0, 0);
}

uint64_t sub_260D9AE04()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260D9AE28, v1, 0);
}

uint64_t sub_260D9AE28()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v5 = v2 + v4;
  swift_beginAccess();
  sub_260DC713C(v5, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v6 = *(int *)(v3 + 56);
  *(unsigned char *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v6 + 1) = 3;
  return MEMORY[0x270FA2498](sub_260D944FC, v2, 0);
}

uint64_t GenerativePlayground.skinToneDirective.getter(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for DefinitionSession();
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D9AF90, 0, 0);
}

uint64_t sub_260D9AF90()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 168);
  *(void *)(v0 + 72) = v1;
  return MEMORY[0x270FA2498](sub_260D9AFB4, v1, 0);
}

uint64_t sub_260D9AFB4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D9B058, 0, 0);
}

uint64_t sub_260D9B058()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = (unsigned char *)v0[5];
  uint64_t v3 = *(int *)(v0[7] + 56);
  unsigned char *v2 = *(unsigned char *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v3 + 2);
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t GenerativePlayground.specifySkinToneDirective(_:)(unsigned char *a1)
{
  *(void *)(v2 + 64) = v1;
  *(void *)(v2 + 72) = type metadata accessor for DefinitionSession();
  *(void *)(v2 + 80) = swift_task_alloc();
  *(unsigned char *)(v2 + 104) = *a1;
  return MEMORY[0x270FA2498](sub_260D9B1A4, 0, 0);
}

uint64_t sub_260D9B1A4()
{
  sub_260D9A10C(2);
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260D9B274, v1, 0);
}

uint64_t sub_260D9B274()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  char v3 = *(unsigned char *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(void *)(v0 + 96) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v6 = v2 + v5;
  swift_beginAccess();
  sub_260DC713C(v6, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v7 = *(int *)(v4 + 56);
  *(unsigned char *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v7 + 2) = v3;
  return MEMORY[0x270FA2498](sub_260D9AC9C, v2, 0);
}

uint64_t GenerativePlayground.dropSkinToneDirective()()
{
  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D9B3E4, 0, 0);
}

uint64_t sub_260D9B3E4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260D9B408, v1, 0);
}

uint64_t sub_260D9B408()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v5 = v2 + v4;
  swift_beginAccess();
  sub_260DC713C(v5, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v6 = *(int *)(v3 + 56);
  *(unsigned char *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v6 + 2) = 10;
  return MEMORY[0x270FA2498](sub_260DD8D84, v2, 0);
}

uint64_t GenerativePlayground.personDescriptionDirective.getter()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D9B570, 0, 0);
}

uint64_t sub_260D9B570()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260D9B594, v1, 0);
}

uint64_t sub_260D9B594()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D9B638, 0, 0);
}

uint64_t sub_260D9B638()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = *(int *)(v0[6] + 56);
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v2;
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v6(v4, v5);
}

uint64_t GenerativePlayground.specifyPersonDescriptionDirective(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_260D9B710, 0, 0);
}

uint64_t sub_260D9B710()
{
  sub_260D9A480(4, v0[2], v0[3]);
  uint64_t v1 = *(void *)(v0[4] + 168);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26A8E6978 + dword_26A8E6978);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = (uint64_t)v2;
  void *v2 = v0;
  v2[1] = sub_260D9B81C;
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  return v6(v4, v3, v1);
}

uint64_t sub_260D9B81C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t GenerativePlayground.dropPersonDescriptionDirective()()
{
  v1[8] = v0;
  v1[9] = type metadata accessor for DefinitionSession();
  v1[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D9B9A4, 0, 0);
}

uint64_t sub_260D9B9A4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260D9B9C8, v1, 0);
}

uint64_t sub_260D9B9C8()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[12] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D9BA70, 0, 0);
}

uint64_t sub_260D9BA70()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = *(int *)(v0[9] + 56);
  uint64_t v4 = v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v3;
  swift_bridgeObjectRelease();
  *(void *)(v4 + 8) = 0;
  *(void *)(v4 + 16) = 0;
  return MEMORY[0x270FA2498](sub_260DD8D84, v2, 0);
}

uint64_t GenerativePlayground.currentGenerationState.getter(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  type metadata accessor for GenerationRecipe(0);
  v2[7] = swift_task_alloc();
  v2[8] = type metadata accessor for GenerationState();
  v2[9] = swift_task_alloc();
  v2[10] = type metadata accessor for DefinitionSession();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D9BC04, 0, 0);
}

uint64_t sub_260D9BC04()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 168);
  *(void *)(v0 + 104) = v1;
  return MEMORY[0x270FA2498](sub_260D9BC28, v1, 0);
}

uint64_t sub_260D9BC28()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D9BCCC, 0, 0);
}

uint64_t sub_260D9BCCC()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[9];
  uint64_t v15 = v0[10];
  uint64_t v3 = (int *)v0[8];
  uint64_t v16 = v0[7];
  uint64_t v17 = v0[12];
  uint64_t v18 = v0[5];
  sub_260DC713C(v17, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = sub_260FE3110();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v7(v4, 1, 1, v5);
  uint64_t v8 = v2 + v3[5];
  v7(v8, 1, 1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, v1, v5);
  sub_260DC6AB8(v4, v8);
  uint64_t v9 = (uint64_t *)(v1 + *(int *)(v15 + 20));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)(v2 + v3[6]);
  *uint64_t v12 = v10;
  v12[1] = v11;
  sub_260DC713C(v1 + *(int *)(v15 + 56), v16, type metadata accessor for GenerationRecipe);
  swift_bridgeObjectRetain();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  sub_260DC79D4(v16, v2 + v3[7], type metadata accessor for GenerationRecipe);
  sub_260DC79D4(v2, v18, (uint64_t (*)(void))type metadata accessor for GenerationState);
  sub_260DC6C10(v17, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t GenerativePlayground.apply(generationState:)(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  v2[10] = type metadata accessor for DefinitionSession();
  v2[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D9BFCC, 0, 0);
}

uint64_t sub_260D9BFCC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 168);
  *(void *)(v0 + 96) = v1;
  return MEMORY[0x270FA2498](sub_260D9BFF0, v1, 0);
}

uint64_t sub_260D9BFF0()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[13] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D9C098, 0, 0);
}

uint64_t sub_260D9C098()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[8];
  uint64_t v5 = type metadata accessor for GenerationState();
  sub_260DC7A3C(v4 + *(int *)(v5 + 28), v1 + *(int *)(v3 + 56), type metadata accessor for GenerationRecipe);
  return MEMORY[0x270FA2498](sub_260DD8D58, v2, 0);
}

uint64_t GenerativePlayground.queryParserPreheat()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_260D9C15C, 0, 0);
}

uint64_t sub_260D9C15C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 168);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_26A8E69A0 + dword_26A8E69A0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  void *v2 = v0;
  v2[1] = sub_260D9C208;
  return v4(v1);
}

uint64_t sub_260D9C208()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t GenerativePlayground.queryParserCooldown()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_260D9C31C, 0, 0);
}

uint64_t sub_260D9C31C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 168);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_26A8E69B0 + dword_26A8E69B0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  void *v2 = v0;
  v2[1] = sub_260DD8D20;
  return v4(v1);
}

uint64_t GenerativePlayground.PreviewGenerationOptions.maximumRepresentations.getter()
{
  return *(void *)v0;
}

uint64_t GenerativePlayground.PreviewGenerationOptions.maximumRepresentations.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*GenerativePlayground.PreviewGenerationOptions.maximumRepresentations.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.PreviewGenerationOptions.engineeredPromptLanguageCheckingParameters.getter@<X0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(_DWORD *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t GenerativePlayground.PreviewGenerationOptions.engineeredPromptLanguageCheckingParameters.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  int v4 = *((_DWORD *)a1 + 4);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  *(_DWORD *)(v1 + 24) = v4;
  return result;
}

uint64_t (*GenerativePlayground.PreviewGenerationOptions.engineeredPromptLanguageCheckingParameters.modify())()
{
  return nullsub_1;
}

void GenerativePlayground.PreviewGenerationOptions.init()(uint64_t a1@<X8>)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 1;
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t GenerativePlayground.PreviewGenerationSession.options.getter@<X0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_DWORD *)(a1 + 24) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t GenerativePlayground.PreviewGenerationSession.eventStream.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenerativePlayground.PreviewGenerationSession(0) + 20);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E69B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t GenerativePlayground.PreviewGenerationSession.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenerativePlayground.PreviewGenerationSession(0) + 24);
  uint64_t v4 = v3 + *(int *)(type metadata accessor for GenerationState() + 20);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260D907BC(v4, (uint64_t)v8, &qword_26A8E67F8);
  uint64_t v9 = sub_260FE3110();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v8, v9);
  }
  __break(1u);
  return result;
}

uint64_t GenerativePlayground.PreviewGenerationSession.isCancelled.getter()
{
  uint64_t v1 = type metadata accessor for GenerativePlayground.PreviewGenerationSession(0);
  MEMORY[0x270FA5388](v1, v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_260FE3A10();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A90FB90);
  sub_260DC713C(v0, (uint64_t)v4, type metadata accessor for GenerativePlayground.PreviewGenerationSession);
  uint64_t v6 = sub_260FE39F0();
  os_log_type_t v7 = sub_260FE4880();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v17 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = GenerativePlayground.PreviewGenerationSession.description.getter();
    uint64_t v16 = sub_260DB2844(v10, v11, &v17);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260DC6C10((uint64_t)v4, type metadata accessor for GenerativePlayground.PreviewGenerationSession);
    _os_log_impl(&dword_260D82000, v6, v7, "%s checking cancellation", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v9, -1, -1);
    MEMORY[0x26122CA00](v8, -1, -1);
  }
  else
  {
    sub_260DC6C10((uint64_t)v4, type metadata accessor for GenerativePlayground.PreviewGenerationSession);
  }

  uint64_t v12 = (void *)(v0 + *(int *)(v1 + 28));
  uint64_t v13 = v12[3];
  uint64_t v14 = v12[4];
  __swift_project_boxed_opaque_existential_1(v12, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14) & 1;
}

Swift::Void __swiftcall GenerativePlayground.PreviewGenerationSession.cancel()()
{
  uint64_t v1 = type metadata accessor for GenerativePlayground.PreviewGenerationSession(0);
  MEMORY[0x270FA5388](v1, v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_260FE3A10();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A90FB90);
  sub_260DC713C(v0, (uint64_t)v4, type metadata accessor for GenerativePlayground.PreviewGenerationSession);
  uint64_t v6 = sub_260FE39F0();
  os_log_type_t v7 = sub_260FE4880();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v16 = v9;
    *(_DWORD *)uint64_t v8 = 136446210;
    uint64_t v10 = GenerativePlayground.PreviewGenerationSession.description.getter();
    uint64_t v15 = sub_260DB2844(v10, v11, &v16);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260DC6C10((uint64_t)v4, type metadata accessor for GenerativePlayground.PreviewGenerationSession);
    _os_log_impl(&dword_260D82000, v6, v7, "cancelling %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v9, -1, -1);
    MEMORY[0x26122CA00](v8, -1, -1);
  }
  else
  {
    sub_260DC6C10((uint64_t)v4, type metadata accessor for GenerativePlayground.PreviewGenerationSession);
  }

  uint64_t v12 = (void *)(v0 + *(int *)(v1 + 28));
  uint64_t v13 = v12[3];
  uint64_t v14 = v12[4];
  __swift_project_boxed_opaque_existential_1(v12, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
}

uint64_t GenerativePlayground.PreviewGenerationSession.description.getter()
{
  v13[0] = 0xD000000000000019;
  v13[1] = 0x8000000260FFBE00;
  uint64_t v1 = sub_260FE3110();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0 + *(int *)(type metadata accessor for GenerativePlayground.PreviewGenerationSession(0) + 24);
  uint64_t v7 = v6 + *(int *)(type metadata accessor for GenerationState() + 20);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  MEMORY[0x270FA5388](v8 - 8, v9);
  unint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260D907BC(v7, (uint64_t)v11, &qword_26A8E67F8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v11, 1, v1);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v11, v1);
    sub_260DD8CC8((unint64_t *)&qword_26A8E67B0, MEMORY[0x270FA9410]);
    sub_260FE5110();
    sub_260FE4250();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    return v13[0];
  }
  return result;
}

uint64_t sub_260D9CCF4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v52 = a8;
  int v51 = a7;
  uint64_t v56 = a5;
  uint64_t v49 = a4;
  uint64_t v55 = a3;
  uint64_t v48 = a11;
  uint64_t v47 = a10;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FE0);
  uint64_t v46 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50, v15);
  unsigned int v45 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E69B8);
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54, v17);
  uint64_t v44 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[1];
  uint64_t v43 = *a1;
  v38[1] = v19;
  int v42 = *((_DWORD *)a1 + 4);
  uint64_t v20 = *a6;
  uint64_t v21 = a6[1];
  uint64_t v22 = a6[2];
  int v23 = *((_DWORD *)a6 + 6);
  uint64_t v24 = type metadata accessor for GenerativePlayground.PreviewGenerationSession(0);
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v26 = v24;
  uint64_t v41 = v24;
  uint64_t v39 = a2;
  sub_260DC713C(a2, a9 + v25, (uint64_t (*)(void))type metadata accessor for GenerationState);
  *(void *)a9 = v20;
  *(void *)(a9 + 8) = v21;
  *(void *)(a9 + 16) = v22;
  *(_DWORD *)(a9 + 24) = v23;
  uint64_t v40 = a9;
  uint64_t v27 = type metadata accessor for StatefulCanceller();
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = 0;
  uint64_t v72 = v27;
  uint64_t v73 = &off_270D1D7C0;
  *(void *)&long long v71 = v28;
  swift_bridgeObjectRetain();
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F60);
  uint64_t v30 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F68);
  uint64_t v31 = swift_allocObject();
  *(_DWORD *)(v31 + 16) = 0;
  *(void *)(v30 + 56) = v31;
  *(void *)(v30 + 64) = 0;
  sub_260DD7B40(&v71, v30 + 16);
  uint64_t v32 = (uint64_t *)(a9 + *(int *)(v26 + 28));
  v32[3] = v29;
  v32[4] = (uint64_t)&off_270D1D7A8;
  *uint64_t v32 = v30;
  swift_retain();
  sub_260D9D1B0(v55, (uint64_t *)&v71);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v21;
  *(void *)(v33 + 24) = v22;
  *(_DWORD *)(v33 + 32) = v23;
  *(int64x2_t *)(v33 + 40) = vdupq_n_s64(0x140uLL);
  *(unsigned char *)(v33 + 56) = 0;
  *(void *)(v33 + 64) = v20;
  *(unsigned char *)(v33 + 72) = 0;
  *(_DWORD *)(v33 + 76) = 0;
  *(unsigned char *)(v33 + 80) = 1;
  uint64_t v57 = v30;
  uint64_t v58 = v20;
  uint64_t v59 = v43;
  uint64_t v60 = v19;
  int v61 = v42;
  uint64_t v62 = a2;
  uint64_t v63 = &v71;
  uint64_t v34 = v49;
  uint64_t v64 = v33;
  uint64_t v65 = v49;
  uint64_t v35 = v51;
  uint64_t v66 = v56;
  long long v67 = v51;
  uint64_t v68 = v52;
  uint64_t v69 = v47;
  uint64_t v70 = v48;
  type metadata accessor for GenerativePlayground.PreviewGenerationEvent(0);
  (*(void (**)(char *, void, uint64_t))(v46 + 104))(v45, *MEMORY[0x263F8F580], v50);
  uint64_t v36 = v44;
  sub_260FE4560();
  swift_release();
  sub_260D90820(v55, &qword_26A8E69D0);

  swift_release();
  swift_release();
  swift_release();
  sub_260DC8E58(v34);
  swift_bridgeObjectRelease();
  sub_260DC6C10(v39, (uint64_t (*)(void))type metadata accessor for GenerationState);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v71);
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v40 + *(int *)(v41 + 20), v36, v54);
  return swift_release();
}

uint64_t sub_260D9D1B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_260D907BC(a1, (uint64_t)&v7, &qword_26A8E69D0);
  if (v8)
  {
    sub_260DD7B40(&v7, (uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FD8);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_260FE7060;
    *(void *)(v3 + 56) = &type metadata for GenerationSeedAssigningRecipePreparer;
    *(void *)(v3 + 64) = &off_270D1BC80;
    sub_260D90158((uint64_t)v9, v3 + 72);
    *a2 = v3;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    uint64_t v5 = &off_270D1C678;
    uint64_t v6 = &type metadata for RecipePreparationSequence;
  }
  else
  {
    uint64_t result = sub_260D90820((uint64_t)&v7, &qword_26A8E69D0);
    uint64_t v5 = &off_270D1BC80;
    uint64_t v6 = &type metadata for GenerationSeedAssigningRecipePreparer;
  }
  a2[3] = (uint64_t)v6;
  a2[4] = (uint64_t)v5;
  return result;
}

uint64_t sub_260D9D288@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_260D907BC(a1, (uint64_t)&v7, &qword_26A8E69D0);
  if (v8)
  {
    sub_260DD7B40(&v7, (uint64_t)v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FD8);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_260FE7060;
    *(void *)(v3 + 56) = &type metadata for CharacterRecipePreparer;
    *(void *)(v3 + 64) = &off_270D1E990;
    sub_260D90158((uint64_t)v9, v3 + 72);
    *a2 = v3;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    uint64_t v5 = &off_270D1C678;
    uint64_t v6 = &type metadata for RecipePreparationSequence;
  }
  else
  {
    uint64_t result = sub_260D90820((uint64_t)&v7, &qword_26A8E69D0);
    uint64_t v5 = &off_270D1E990;
    uint64_t v6 = &type metadata for CharacterRecipePreparer;
  }
  a2[3] = (uint64_t)v6;
  a2[4] = (uint64_t)v5;
  return result;
}

uint64_t sub_260D9D360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  unint64_t v61 = a8;
  int v68 = a6;
  uint64_t v66 = a4;
  uint64_t v67 = a5;
  uint64_t v64 = a1;
  uint64_t v65 = a3;
  uint64_t v63 = a2;
  uint64_t v74 = a14;
  uint64_t v75 = a15;
  uint64_t v72 = a12;
  uint64_t v73 = a13;
  uint64_t v70 = a10;
  uint64_t v71 = a11;
  uint64_t v69 = a9;
  uint64_t v17 = type metadata accessor for GenerationState();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v17 - 8, v20);
  uint64_t v59 = (uint64_t)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FE8);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  MEMORY[0x270FA5388](v21, v24);
  uint64_t v25 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  MEMORY[0x270FA5388](v26 - 8, v27);
  uint64_t v29 = (char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v29;
  uint64_t v30 = sub_260FE4520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v32 = a1;
  uint64_t v33 = v21;
  uint64_t v60 = v21;
  v31(v25, v32, v21);
  sub_260DC713C(a7, (uint64_t)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for GenerationState);
  sub_260D90158(v61, (uint64_t)v76);
  unint64_t v34 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v35 = (v23 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = (*(unsigned __int8 *)(v18 + 80) + v37 + 20) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v39 = (v19 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v61 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v57 = (v61 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v58 = (v57 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v56 = (v58 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = (v56 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = (v55 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = 0;
  *(void *)(v40 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v40 + v34, v25, v33);
  uint64_t v41 = v63;
  *(void *)(v40 + v35) = v63;
  uint64_t v42 = v66;
  *(void *)(v40 + v36) = v65;
  unint64_t v43 = v40 + v37;
  uint64_t v44 = v67;
  *(void *)unint64_t v43 = v42;
  *(void *)(v43 + 8) = v44;
  *(_DWORD *)(v43 + 16) = v68;
  sub_260DC79D4(v59, v40 + v38, (uint64_t (*)(void))type metadata accessor for GenerationState);
  sub_260DD7B40(v76, v40 + v39);
  uint64_t v45 = v70;
  *(void *)(v40 + v61) = v69;
  uint64_t v46 = (uint64_t *)(v40 + v57);
  uint64_t v47 = v71;
  uint64_t v48 = v72;
  uint64_t *v46 = v45;
  v46[1] = v47;
  *(void *)(v40 + v58) = v48;
  uint64_t v49 = v74;
  *(void *)(v40 + v56) = v73;
  *(void *)(v40 + v55) = v49;
  *(void *)(v40 + v54) = v75;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v50 = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_260DC8644(v45);
  uint64_t v51 = sub_260D9F7E4((uint64_t)v62, (uint64_t)&unk_26A8E6FF8, v40);
  swift_retain();
  sub_260FE4530();
  swift_beginAccess();
  uint64_t v52 = *(os_unfair_lock_s **)(v41 + 56);
  swift_retain_n();
  os_unfair_lock_lock(v52 + 4);
  if (*(void *)(v41 + 64))
  {
    uint64_t result = sub_260FE4E20();
    __break(1u);
  }
  else
  {
    *(void *)(v41 + 64) = v51;
    swift_retain();
    swift_retain();
    os_unfair_lock_unlock(v52 + 4);
    swift_endAccess();
    swift_release_n();
    swift_release();
    sub_260E98634();
    return swift_release();
  }
  return result;
}

uint64_t sub_260D9D8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 312) = v20;
  *(_OWORD *)(v8 + 296) = v19;
  *(_OWORD *)(v8 + 280) = v18;
  *(_OWORD *)(v8 + 264) = v17;
  *(_OWORD *)(v8 + 248) = v16;
  *(_DWORD *)(v8 + 84) = v15;
  *(void *)(v8 + 232) = a7;
  *(void *)(v8 + 240) = a8;
  *(void *)(v8 + 216) = a5;
  *(void *)(v8 + 224) = a6;
  *(void *)(v8 + 208) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FC8);
  *(void *)(v8 + 320) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for GeneratedImage();
  *(void *)(v8 + 328) = v9;
  *(void *)(v8 + 336) = *(void *)(v9 - 8);
  *(void *)(v8 + 344) = swift_task_alloc();
  *(void *)(v8 + 352) = swift_task_alloc();
  *(void *)(v8 + 360) = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FE8);
  *(void *)(v8 + 368) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v8 + 376) = v11;
  *(void *)(v8 + 384) = *(void *)(v11 + 64);
  *(void *)(v8 + 392) = swift_task_alloc();
  type metadata accessor for GenerationState();
  *(void *)(v8 + 400) = swift_task_alloc();
  *(void *)(v8 + 408) = swift_task_alloc();
  *(void *)(v8 + 416) = type metadata accessor for GenerativePlayground.PreviewGenerationEvent(0);
  *(void *)(v8 + 424) = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7008);
  *(void *)(v8 + 432) = v12;
  *(void *)(v8 + 440) = *(void *)(v12 - 8);
  *(void *)(v8 + 448) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260D9DB30, 0, 0);
}

uint64_t sub_260D9DB30()
{
  uint64_t v56 = v0;
  uint64_t v2 = *(void *)(v0 + 440);
  uint64_t v1 = *(void **)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 432);
  swift_storeEnumTagMultiPayload();
  sub_260FE4540();
  uint64_t v6 = *(void (**)(void *, uint64_t))(v2 + 8);
  uint64_t v4 = v2 + 8;
  uint64_t v5 = (uint64_t)v6;
  *(void *)(v0 + 456) = v6;
  *(void *)(v0 + 464) = v4 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v3);
  sub_260EBEDD4();
  long long v7 = *(void **)(v0 + 448);
  uint64_t v9 = *(void *)(v0 + 424);
  uint64_t v8 = *(void *)(v0 + 432);
  uint64_t v10 = *(void **)(v0 + 368);
  uint64_t v11 = *(void *)(v0 + 224);
  *(void *)uint64_t v9 = 0;
  *(void *)(v9 + 8) = v11;
  *(unsigned char *)(v9 + 16) = 0;
  swift_storeEnumTagMultiPayload();
  sub_260FE4540();
  v6(v7, v8);
  if (v11 < 1)
  {
    __break(1u);
    swift_once();
    uint64_t v12 = sub_260FE3A10();
    __swift_project_value_buffer(v12, (uint64_t)qword_26A90FB90);
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_260FE39F0();
    os_log_type_t v14 = sub_260FE4890();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_t loga = v13;
      os_log_type_t typea = v14;
      int v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v55 = v50;
      *(_DWORD *)int v15 = 136446210;
      uint64_t v16 = swift_bridgeObjectRetain();
      uint64_t v17 = MEMORY[0x26122AC60](v16, &type metadata for GeneratorError.VersionTriple);
      unint64_t v19 = v18;
      sub_260DD7B58(v5, v4, v8, 7);
      *(void *)(v0 + 192) = sub_260DB2844(v17, v19, &v55);
      sub_260FE4AE0();
      swift_bridgeObjectRelease();
      sub_260DD7B58(v5, v4, v8, 7);
      sub_260DD7B58(v5, v4, v8, 7);
      uint64_t v13 = loga;
      _os_log_impl(&dword_260D82000, loga, typea, "Attempting to reset generator state due to model catalog asset mismatch: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26122CA00](v50, -1, -1);
      MEMORY[0x26122CA00](v15, -1, -1);
    }
    else
    {
      sub_260DD7B58(v5, v4, v8, 7);
      sub_260DD7B58(v5, v4, v8, 7);
    }

    uint64_t v40 = *(os_unfair_lock_s **)(*(void *)(v0 + 312) + 176);
    *(unsigned char *)(swift_task_alloc() + 16) = 1;
    uint64_t v41 = (uint64_t *)&v40[4];
    v40 += 6;
    os_unfair_lock_lock(v40);
    sub_260DD8D98(v41);
    os_unfair_lock_unlock(v40);
    swift_task_dealloc();
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v43 = *(void *)(v0 + 448);
    uint64_t v44 = *(void *)(v0 + 432);
    **(void **)(v0 + 424) = v10;
    swift_storeEnumTagMultiPayload();
    id v45 = v10;
    sub_260FE4540();
    v42(v43, v44);
    sub_260FE4550();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
    return v46();
  }
  else
  {
    swift_beginAccess();
    *(void *)(v0 + 472) = 1;
    sub_260EBEDD4();
    os_log_t log = *(os_log_t *)(v0 + 408);
    uint64_t v20 = *(void *)(v0 + 296);
    uint64_t v21 = *(void *)(v0 + 304);
    uint64_t v22 = *(void **)(v0 + 288);
    uint64_t v23 = *(void *)(v0 + 264);
    buf = *(uint8_t **)(v0 + 272);
    uint64_t type = *(void *)(v0 + 280);
    uint64_t v24 = *(void *)(v0 + 256);
    int v54 = *(_DWORD *)(v0 + 84);
    uint64_t v25 = *(void *)(v0 + 240);
    os_log_t v53 = *(os_log_t *)(v0 + 232);
    uint64_t v26 = *(void *)(v0 + 216);
    sub_260DC713C(*(void *)(v0 + 248), (uint64_t)log, (uint64_t (*)(void))type metadata accessor for GenerationState);
    sub_260D90158(v24, v0 + 88);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v23 + 16);
    long long v28 = *(_OWORD *)(v23 + 48);
    long long v27 = *(_OWORD *)(v23 + 64);
    long long v29 = *(_OWORD *)(v23 + 32);
    *(unsigned char *)(v0 + 80) = *(unsigned char *)(v23 + 80);
    *(_OWORD *)(v0 + 48) = v28;
    *(_OWORD *)(v0 + 64) = v27;
    *(_OWORD *)(v0 + 32) = v29;
    type metadata accessor for GenerativePlayground.GenerationTask();
    uint64_t v30 = swift_allocObject();
    swift_bridgeObjectRetain();
    sub_260DD814C(v0 + 16);
    sub_260DC8644((uint64_t)buf);
    swift_retain();
    swift_retain();
    swift_retain();
    id v31 = v22;
    *(void *)(v0 + 480) = sub_260DC52E8((uint64_t)v53, v25, v54, (uint64_t)log, v0 + 88, v0 + 16, (uint64_t)buf, type, v22, v20, v26, v21, v30);
    uint64_t v32 = *(void *)(v0 + 392);
    uint64_t v33 = *(void *)(v0 + 368);
    uint64_t v34 = *(void *)(v0 + 376);
    (*(void (**)(uint64_t, void, uint64_t))(v34 + 16))(v32, *(void *)(v0 + 208), v33);
    unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v36 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v34 + 32))(v36 + v35, v32, v33);
    *(void *)(v0 + 488) = sub_260DD8AB4;
    *(void *)(v0 + 496) = v36;
    unint64_t v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 504) = v37;
    *unint64_t v37 = v0;
    v37[1] = sub_260D9E36C;
    uint64_t v38 = *(void *)(v0 + 400);
    return sub_260F10D28(v38, (uint64_t)sub_260DD8AB4, v36);
  }
}

uint64_t sub_260D9E36C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 512) = a1;
  *(void *)(v3 + 520) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_260D9EFC0;
  }
  else {
    uint64_t v4 = sub_260D9E484;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_260D9E484()
{
  uint64_t v77 = v0;
  uint64_t v1 = *(void **)(v0 + 512);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 448);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  uint64_t v6 = *(void *)(v0 + 424);
  uint64_t v5 = *(void *)(v0 + 432);
  uint64_t v7 = *(void *)(v0 + 224);
  *(void *)uint64_t v6 = *(void *)(v0 + 472);
  *(void *)(v6 + 8) = v7;
  *(unsigned char *)(v6 + 16) = 0;
  uint64_t v8 = 1;
  swift_storeEnumTagMultiPayload();
  sub_260FE4540();
  v3(v4, v5);
  if (v1[2])
  {
    uint64_t v9 = *(unsigned __int8 *)(*(void *)(v0 + 336) + 80);
    sub_260DC713C(*(void *)(v0 + 512) + ((v9 + 32) & ~v9), *(void *)(v0 + 320), (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    uint64_t v8 = 0;
  }
  uint64_t v11 = *(void *)(v0 + 328);
  uint64_t v10 = *(void *)(v0 + 336);
  uint64_t v12 = *(void **)(v0 + 320);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v12, v8, 1, v11);
  swift_bridgeObjectRelease();
  int v13 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48))(v12, 1, v11);
  uint64_t v14 = *(void *)(v0 + 488);
  uint64_t v15 = *(void *)(v0 + 480);
  if (v13 == 1)
  {
    uint64_t v16 = *(void *)(v0 + 320);
    sub_260DC6C10(*(void *)(v0 + 400), (uint64_t (*)(void))type metadata accessor for GenerationState);
    sub_260DC8E58(v14);
    swift_release();
    sub_260D90820(v16, &qword_26A8E6FC8);
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 472);
    os_log_t log = *(os_log_t *)(v0 + 456);
    buf = *(uint8_t **)(v0 + 448);
    uint64_t type = *(void *)(v0 + 488);
    uint64_t v12 = *(void **)(v0 + 424);
    uint64_t v68 = *(void *)(v0 + 432);
    uint64_t v1 = *(void **)(v0 + 408);
    uint64_t v18 = *(void *)(v0 + 400);
    uint64_t v19 = *(void *)(v0 + 360);
    uint64_t v15 = *(void *)(v0 + 344);
    uint64_t v2 = *(void *)(v0 + 352);
    sub_260DC79D4(*(void *)(v0 + 320), v19, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    uint64_t v20 = swift_task_alloc();
    uint64_t v21 = sub_260FE3110();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
    sub_260EFA890(4, v20, v17, 0, 0, v2);
    sub_260D90820(v20, &qword_26A8E67F8);
    swift_task_dealloc();
    sub_260DC713C(v2, v15, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260DC713C(v18, (uint64_t)v1, (uint64_t (*)(void))type metadata accessor for GenerationState);
    type metadata accessor for GenerativePlayground.PreviewRepresentation(0);
    uint64_t v22 = swift_allocObject();
    sub_260DC79D4(v15, v22 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260DC79D4((uint64_t)v1, v22 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generationState, (uint64_t (*)(void))type metadata accessor for GenerationState);
    *uint64_t v12 = v22;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_260FE4540();
    swift_release();
    swift_release();
    sub_260DC8E58(type);
    ((void (*)(uint8_t *, uint64_t))log)(buf, v68);
    sub_260DC6C10(v2, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260DC6C10(v19, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260DC6C10(v18, (uint64_t (*)(void))type metadata accessor for GenerationState);
  }
  uint64_t v23 = *(void *)(v0 + 472);
  if (v23 == *(void *)(v0 + 224))
  {
    sub_260FE4550();
LABEL_24:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v61 = *(uint64_t (**)(void))(v0 + 8);
    return v61();
  }
  uint64_t v24 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v25 = *(void **)(v0 + 520);
  *(void *)(v0 + 472) = v24;
  sub_260EBEDD4();
  if (v25)
  {
    uint64_t v1 = v25;
    uint64_t v12 = sub_260F33D64(v25);
    *(void *)(v0 + 184) = v12;
    uint64_t v26 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
    if (swift_dynamicCast())
    {
      uint64_t v2 = *(void *)(v0 + 128);
      uint64_t v24 = *(void *)(v0 + 136);
      uint64_t v15 = *(void *)(v0 + 144);
      int v27 = *(unsigned __int8 *)(v0 + 152);
      if (v27 == 7)
      {
        if (qword_26A8E6118 == -1)
        {
LABEL_13:
          uint64_t v28 = sub_260FE3A10();
          __swift_project_value_buffer(v28, (uint64_t)qword_26A90FB90);
          swift_bridgeObjectRetain();
          long long v29 = sub_260FE39F0();
          os_log_type_t v30 = sub_260FE4890();
          if (os_log_type_enabled(v29, v30))
          {
            os_log_t loga = v29;
            os_log_type_t typea = v30;
            id v31 = (uint8_t *)swift_slowAlloc();
            uint64_t v69 = swift_slowAlloc();
            uint64_t v76 = v69;
            *(_DWORD *)id v31 = 136446210;
            uint64_t v32 = swift_bridgeObjectRetain();
            uint64_t v33 = MEMORY[0x26122AC60](v32, &type metadata for GeneratorError.VersionTriple);
            unint64_t v35 = v34;
            sub_260DD7B58(v2, v24, v15, 7);
            *(void *)(v0 + 192) = sub_260DB2844(v33, v35, &v76);
            sub_260FE4AE0();
            swift_bridgeObjectRelease();
            sub_260DD7B58(v2, v24, v15, 7);
            sub_260DD7B58(v2, v24, v15, 7);
            long long v29 = loga;
            _os_log_impl(&dword_260D82000, loga, typea, "Attempting to reset generator state due to model catalog asset mismatch: %{public}s", v31, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x26122CA00](v69, -1, -1);
            MEMORY[0x26122CA00](v31, -1, -1);
          }
          else
          {
            sub_260DD7B58(v2, v24, v15, 7);
            sub_260DD7B58(v2, v24, v15, 7);
          }

          uint64_t v56 = *(void *)(*(void *)(v0 + 312) + 176);
          *(unsigned char *)(swift_task_alloc() + 16) = 1;
          os_unfair_lock_lock((os_unfair_lock_t)(v56 + 24));
          sub_260DD8D98((uint64_t *)(v56 + 16));
          os_unfair_lock_unlock((os_unfair_lock_t)(v56 + 24));
          swift_task_dealloc();
          goto LABEL_23;
        }
LABEL_28:
        swift_once();
        goto LABEL_13;
      }
      sub_260DD7B58(*(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), v27);
    }
LABEL_23:
    uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
    uint64_t v58 = *(void *)(v0 + 448);
    uint64_t v59 = *(void *)(v0 + 432);
    **(void **)(v0 + 424) = v12;
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = v12;
    sub_260FE4540();
    v57(v58, v59);
    sub_260FE4550();

    goto LABEL_24;
  }
  os_log_t logb = *(os_log_t *)(v0 + 408);
  uint64_t v36 = *(void *)(v0 + 296);
  uint64_t v37 = *(void *)(v0 + 304);
  uint64_t v73 = *(void **)(v0 + 288);
  uint64_t v38 = *(void *)(v0 + 264);
  bufa = *(uint8_t **)(v0 + 272);
  uint64_t typeb = *(void *)(v0 + 280);
  uint64_t v39 = *(void *)(v0 + 256);
  int v75 = *(_DWORD *)(v0 + 84);
  uint64_t v62 = *(void *)(v0 + 240);
  uint64_t v74 = *(void *)(v0 + 232);
  uint64_t v40 = *(void *)(v0 + 216);
  sub_260DC713C(*(void *)(v0 + 248), (uint64_t)logb, (uint64_t (*)(void))type metadata accessor for GenerationState);
  sub_260D90158(v39, v0 + 88);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v38 + 16);
  long long v42 = *(_OWORD *)(v38 + 48);
  long long v41 = *(_OWORD *)(v38 + 64);
  long long v43 = *(_OWORD *)(v38 + 32);
  *(unsigned char *)(v0 + 80) = *(unsigned char *)(v38 + 80);
  *(_OWORD *)(v0 + 48) = v42;
  *(_OWORD *)(v0 + 64) = v41;
  *(_OWORD *)(v0 + 32) = v43;
  type metadata accessor for GenerativePlayground.GenerationTask();
  uint64_t v44 = swift_allocObject();
  swift_bridgeObjectRetain();
  sub_260DD814C(v0 + 16);
  sub_260DC8644((uint64_t)bufa);
  swift_retain();
  swift_retain();
  swift_retain();
  id v45 = v73;
  uint64_t v46 = sub_260DC52E8(v74, v62, v75, (uint64_t)logb, v0 + 88, v0 + 16, (uint64_t)bufa, typeb, v73, v36, v40, v37, v44);
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  *(void *)(v0 + 480) = v46;
  if (v24 == 1)
  {
    uint64_t v49 = *(void *)(v0 + 392);
    uint64_t v50 = *(void *)(v0 + 368);
    uint64_t v51 = *(void *)(v0 + 376);
    (*(void (**)(uint64_t, void, uint64_t))(v51 + 16))(v49, *(void *)(v0 + 208), v50);
    unint64_t v52 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    uint64_t v48 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v51 + 32))(v48 + v52, v49, v50);
    uint64_t v47 = sub_260DD8AB4;
  }
  *(void *)(v0 + 488) = v47;
  *(void *)(v0 + 496) = v48;
  os_log_t v53 = (void *)swift_task_alloc();
  *(void *)(v0 + 504) = v53;
  *os_log_t v53 = v0;
  v53[1] = sub_260D9E36C;
  uint64_t v54 = *(void *)(v0 + 400);
  return sub_260F10D28(v54, (uint64_t)v47, v48);
}

uint64_t sub_260D9EFC0()
{
  uint64_t v27 = v0;
  sub_260DC8E58(*(void *)(v0 + 488));
  swift_release();
  uint64_t v1 = *(void **)(v0 + 520);
  uint64_t v2 = sub_260F33D64(v1);
  *(void *)(v0 + 184) = v2;
  id v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
  if (swift_dynamicCast())
  {
    uint64_t v5 = *(void *)(v0 + 128);
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 144);
    int v7 = *(unsigned __int8 *)(v0 + 152);
    if (v7 == 7)
    {
      if (qword_26A8E6118 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_260FE3A10();
      __swift_project_value_buffer(v8, (uint64_t)qword_26A90FB90);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_260FE39F0();
      os_log_type_t v10 = sub_260FE4890();
      if (os_log_type_enabled(v9, v10))
      {
        os_log_t log = v9;
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v26 = v24;
        *(_DWORD *)uint64_t v11 = 136446210;
        uint64_t v12 = swift_bridgeObjectRetain();
        uint64_t v13 = MEMORY[0x26122AC60](v12, &type metadata for GeneratorError.VersionTriple);
        unint64_t v15 = v14;
        sub_260DD7B58(v5, v4, v6, 7);
        *(void *)(v0 + 192) = sub_260DB2844(v13, v15, &v26);
        sub_260FE4AE0();
        swift_bridgeObjectRelease();
        sub_260DD7B58(v5, v4, v6, 7);
        sub_260DD7B58(v5, v4, v6, 7);
        uint64_t v9 = log;
        _os_log_impl(&dword_260D82000, log, v10, "Attempting to reset generator state due to model catalog asset mismatch: %{public}s", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x26122CA00](v24, -1, -1);
        MEMORY[0x26122CA00](v11, -1, -1);
      }
      else
      {
        sub_260DD7B58(v5, v4, v6, 7);
        sub_260DD7B58(v5, v4, v6, 7);
      }

      uint64_t v16 = *(os_unfair_lock_s **)(*(void *)(v0 + 312) + 176);
      *(unsigned char *)(swift_task_alloc() + 16) = 1;
      uint64_t v17 = (uint64_t *)&v16[4];
      v16 += 6;
      os_unfair_lock_lock(v16);
      sub_260DD8D98(v17);
      os_unfair_lock_unlock(v16);
      swift_task_dealloc();
    }
    else
    {
      sub_260DD7B58(*(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), v7);
    }
  }
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  uint64_t v19 = *(void *)(v0 + 448);
  uint64_t v20 = *(void *)(v0 + 432);
  **(void **)(v0 + 424) = v2;
  swift_storeEnumTagMultiPayload();
  id v21 = v2;
  sub_260FE4540();
  v18(v19, v20);
  sub_260FE4550();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_260D9F504(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for GenerationState();
  MEMORY[0x270FA5388](v3 - 8, v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for GenerativePlayground.PreviewGenerationEvent(0);
  MEMORY[0x270FA5388](v7, v8);
  os_log_type_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7008);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v13);
  unint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for GenerativePlayground.GenerationEvent(0);
  MEMORY[0x270FA5388](v16, v17);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260DC713C(a2, (uint64_t)v19, type metadata accessor for GenerativePlayground.GenerationEvent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_260DC79D4((uint64_t)v19, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenerationState);
    sub_260DC713C((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GenerationState);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FE8);
    sub_260FE4540();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    uint64_t v22 = (uint64_t (*)(void))type metadata accessor for GenerationState;
    uint64_t v23 = (uint64_t)v6;
  }
  else
  {
    if (EnumCaseMultiPayload == 5)
    {
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FE8);
      sub_260FE4540();
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    uint64_t v22 = type metadata accessor for GenerativePlayground.GenerationEvent;
    uint64_t v23 = (uint64_t)v19;
  }
  return sub_260DC6C10(v23, v22);
}

uint64_t sub_260D9F7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_260FE4520();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_260FE4510();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_260D90820(a1, &qword_26A8E6828);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_260FE44A0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_260D9F990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for GenerationState() + 20);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260D907BC(v5, (uint64_t)v9, &qword_26A8E67F8);
  uint64_t v10 = sub_260FE3110();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v9, v10);
  }
  __break(1u);
  return result;
}

uint64_t GenerativePlayground.PreviewRepresentation.generatedImage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_260DC713C(v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage, a1, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
}

uint64_t GenerativePlayground.PreviewRepresentation.deinit()
{
  sub_260DC6C10(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  sub_260DC6C10(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generationState, (uint64_t (*)(void))type metadata accessor for GenerationState);
  return v0;
}

uint64_t GenerativePlayground.PreviewRepresentation.__deallocating_deinit()
{
  sub_260DC6C10(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  sub_260DC6C10(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generationState, (uint64_t (*)(void))type metadata accessor for GenerationState);
  return swift_deallocClassInstance();
}

uint64_t GenerativePlayground.generatePreviews(options:generationID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 88) = a3;
  *(void *)(v4 + 96) = v3;
  *(void *)(v4 + 80) = a1;
  type metadata accessor for GenerationRecipe(0);
  *(void *)(v4 + 104) = swift_task_alloc();
  *(void *)(v4 + 112) = type metadata accessor for GenerationState();
  *(void *)(v4 + 120) = swift_task_alloc();
  *(void *)(v4 + 128) = swift_task_alloc();
  *(void *)(v4 + 136) = swift_task_alloc();
  *(void *)(v4 + 144) = type metadata accessor for DefinitionSession();
  *(void *)(v4 + 152) = swift_task_alloc();
  *(void *)(v4 + 160) = swift_task_alloc();
  *(_OWORD *)(v4 + 168) = *(_OWORD *)a2;
  *(void *)(v4 + 184) = *(void *)(a2 + 16);
  *(_DWORD *)(v4 + 200) = *(_DWORD *)(a2 + 24);
  return MEMORY[0x270FA2498](sub_260D9FD30, 0, 0);
}

uint64_t sub_260D9FD30()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 96) + 168);
  *(void *)(v0 + 192) = v1;
  return MEMORY[0x270FA2498](sub_260D9FD54, v1, 0);
}

uint64_t sub_260D9FD54()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 192) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260D9FDFC, 0, 0);
}

uint64_t sub_260D9FDFC()
{
  uint64_t v67 = v0;
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = sub_260FE3110();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  uint64_t v5 = swift_task_alloc();
  sub_260D907BC(v1, v5, &qword_26A8E67F8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v5, 1, v2) == 1)
  {
    sub_260FE3100();
    sub_260D90820(v5, &qword_26A8E67F8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v5, v2);
  }
  uint64_t v6 = v4;
  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v51 = *(void *)(v0 + 144);
  uint64_t v9 = *(void *)(v0 + 128);
  uint64_t v10 = *(int **)(v0 + 112);
  uint64_t v54 = *(void *)(v0 + 136);
  uint64_t v56 = *(void *)(v0 + 120);
  uint64_t v52 = *(void *)(v0 + 104);
  uint64_t v53 = v7;
  swift_task_dealloc();
  sub_260DC713C(v7, v8, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = *(void (**)(void))(v3 + 16);
  uint64_t v13 = v11;
  uint64_t v50 = v11;
  uint64_t v58 = v6;
  v12();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v14(v13, 0, 1, v2);
  uint64_t v15 = v9 + v10[5];
  v14(v15, 1, 1, v2);
  uint64_t v59 = v2;
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v8, v2);
  sub_260DC6AB8(v50, v15);
  uint64_t v16 = (uint64_t *)(v8 + *(int *)(v51 + 20));
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  uint64_t v19 = (void *)(v9 + v10[6]);
  *uint64_t v19 = v17;
  v19[1] = v18;
  sub_260DC713C(v8 + *(int *)(v51 + 56), v52, type metadata accessor for GenerationRecipe);
  swift_bridgeObjectRetain();
  sub_260DC6C10(v8, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  sub_260DC79D4(v52, v9 + v10[7], type metadata accessor for GenerationRecipe);
  sub_260DC79D4(v9, v54, (uint64_t (*)(void))type metadata accessor for GenerationState);
  swift_task_dealloc();
  uint64_t v20 = v53 + *(int *)(v51 + 20);
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  LODWORD(v20) = *(_DWORD *)(v20 + 16);
  v60[0] = v21;
  v60[1] = v22;
  int v61 = v20;
  sub_260DC713C(v54, v56, (uint64_t (*)(void))type metadata accessor for GenerationState);
  uint64_t v23 = v53 + *(int *)(v51 + 56);
  if (*(void *)(v23 + 8) == 0xD000000000000029 && *(void *)(v23 + 16) == 0x8000000260FFBD40
    || (sub_260FE5150() & 1) != 0)
  {
    uint64_t v24 = *(void **)(*(void *)(v0 + 160) + *(int *)(*(void *)(v0 + 144) + 40));
    uint64_t v25 = type metadata accessor for InputConditioner();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v24;
    *(void *)(v0 + 40) = v25;
    *(void *)(v0 + 48) = &off_270D1C6C8;
    *(void *)(v0 + 16) = v26;
    swift_bridgeObjectRetain();
    id v27 = v24;
    sub_260D9D288(v0 + 16, (uint64_t *)v62);
    sub_260D90820(v0 + 16, &qword_26A8E69D0);
  }
  else
  {
    uint64_t v63 = 0;
    memset(v62, 0, sizeof(v62));
    swift_bridgeObjectRetain();
  }
  int v28 = *(_DWORD *)(v0 + 200);
  uint64_t v29 = *(void *)(v0 + 160);
  os_log_type_t v30 = *(int **)(v0 + 144);
  uint64_t v31 = *(void *)(v0 + 96);
  uint64_t v32 = (uint64_t *)(v29 + v30[6]);
  uint64_t v33 = *v32;
  uint64_t v34 = v32[1];
  uint64_t v64 = *(void *)(v0 + 168);
  long long v65 = *(_OWORD *)(v0 + 176);
  int v66 = v28;
  unint64_t v35 = *(void **)(v29 + v30[10]);
  uint64_t v36 = *(void *)(v31 + 104);
  uint64_t v37 = 2;
  if (*(unsigned char *)(v23 + 56)) {
    uint64_t v37 = 3;
  }
  if (*(unsigned char *)(v23 + 62)) {
    uint64_t v38 = v37;
  }
  else {
    uint64_t v38 = *(unsigned __int8 *)(v23 + 56);
  }
  uint64_t v39 = *(void *)(v29 + v30[13]);
  uint64_t v55 = v34;
  uint64_t v57 = v33;
  if (v38 == *(void *)(v39 + 24))
  {
    sub_260DC8644(v33);
    swift_bridgeObjectRetain();
    id v40 = v35;
    swift_retain();
  }
  else
  {
    long long v41 = *(void **)(v39 + 16);
    *(void *)(v39 + 16) = 0;
    sub_260DC8644(v33);
    swift_bridgeObjectRetain();
    id v42 = v35;
    swift_retain();

    *(void *)(v39 + 24) = v38;
  }
  uint64_t v43 = *(void *)(v0 + 160);
  uint64_t v44 = *(void *)(v0 + 136);
  uint64_t v45 = *(void *)(v0 + 120);
  uint64_t v46 = *(void *)(v0 + 96);
  uint64_t v47 = *(void *)(v0 + 80);
  swift_retain();
  swift_retain();
  sub_260D9CCF4(v60, v45, (uint64_t)v62, v57, v55, &v64, v35, v36, v47, v39, v46);
  sub_260DC6C10(v44, (uint64_t (*)(void))type metadata accessor for GenerationState);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v58, v59);
  sub_260DC6C10(v43, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
  return v48();
}

uint64_t GenerativePlayground.supportedImageDimensions.getter()
{
  return swift_bridgeObjectRetain();
}

void GenerativePlayground.defaultImageDimensions.getter(_OWORD *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 88);
  if (*(void *)(v2 + 16)) {
    *a1 = *(_OWORD *)(v2 + 32);
  }
  else {
    __break(1u);
  }
}

uint64_t GenerativePlayground.generationSeed.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_260FE3A10();
  __swift_project_value_buffer(v6, (uint64_t)qword_26A90FB90);
  sub_260F3686C(0x69746172656E6567, 0xEE00646565536E6FLL, 0xD000000000000016, 0x8000000260FFBE20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E69E8);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(_WORD *)(v7 + 24) = 256;
  *(void *)(v7 + 32) = 0;
  swift_retain();
  dispatch_semaphore_t v8 = dispatch_semaphore_create(0);
  uint64_t v9 = sub_260FE4520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = 0;
  v10[3] = 0;
  v10[4] = v8;
  v10[5] = &unk_26A8E69E0;
  v10[6] = v1;
  v10[7] = v7;
  uint64_t v11 = v8;
  swift_retain();
  swift_retain();
  sub_260D9F7E4((uint64_t)v5, (uint64_t)&unk_26A8E69F8, (uint64_t)v10);
  swift_release();
  uint64_t result = sub_260FE4990();
  if (*(unsigned char *)(v7 + 25))
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = *(void *)(v7 + 16);
    swift_release();
    swift_release();

    return v13;
  }
  return result;
}

void GenerativePlayground.generationSeed.setter(uint64_t a1, char a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  MEMORY[0x270FA5388](v5 - 8, v6);
  dispatch_semaphore_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_260FE3A10();
  __swift_project_value_buffer(v9, (uint64_t)qword_26A90FB90);
  sub_260F3686C(0x69746172656E6567, 0xEE00646565536E6FLL, 0xD000000000000017, 0x8000000260FFBE40);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v2;
  *(void *)(v10 + 24) = a1;
  *(unsigned char *)(v10 + 32) = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6840);
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 1;
  *(void *)(v11 + 24) = 0;
  swift_retain();
  dispatch_semaphore_t v12 = dispatch_semaphore_create(0);
  uint64_t v13 = sub_260FE4520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v12;
  v14[5] = &unk_26A8E6A08;
  v14[6] = v10;
  v14[7] = v11;
  uint64_t v15 = v12;
  swift_retain();
  swift_retain();
  sub_260D9F7E4((uint64_t)v8, (uint64_t)&unk_26A8E6A10, (uint64_t)v14);
  swift_release();
  sub_260FE4990();
  if (*(unsigned char *)(v11 + 16))
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_release();
  }
}

uint64_t sub_260DA0850(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  v2[7] = type metadata accessor for DefinitionSession();
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DA08E4, 0, 0);
}

uint64_t sub_260DA08E4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 168);
  *(void *)(v0 + 72) = v1;
  return MEMORY[0x270FA2498](sub_260DA0908, v1, 0);
}

uint64_t sub_260DA0908()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DA09AC, 0, 0);
}

uint64_t sub_260DA09AC()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[8] + *(int *)(v0[7] + 56);
  uint64_t v3 = *(void *)(v2 + 72);
  char v4 = *(unsigned char *)(v2 + 80);
  sub_260DC6C10(v0[8], (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *(void *)uint64_t v1 = v3;
  *(unsigned char *)(v1 + 8) = v4;
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t GenerativePlayground.assignedGenerationSeed.getter()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DA0AE4, 0, 0);
}

uint64_t sub_260DA0AE4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260DA0B08, v1, 0);
}

uint64_t sub_260DA0B08()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DA0BAC, 0, 0);
}

uint64_t sub_260DA0BAC()
{
  uint64_t v1 = v0[7] + *(int *)(v0[6] + 56);
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 80);
  sub_260DC6C10(v0[7], (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v2, v3);
}

uint64_t sub_260DA0C4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 112) = a4;
  *(void *)(v4 + 64) = a2;
  *(void *)(v4 + 72) = a3;
  *(void *)(v4 + 80) = type metadata accessor for DefinitionSession();
  *(void *)(v4 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DA0CE4, 0, 0);
}

uint64_t sub_260DA0CE4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 96) = v1;
  return MEMORY[0x270FA2498](sub_260DA0D08, v1, 0);
}

uint64_t sub_260DA0D08()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  char v3 = *(unsigned char *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v6 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(void *)(v0 + 104) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v7 = v2 + v6;
  swift_beginAccess();
  sub_260DC713C(v7, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v8 = v1 + *(int *)(v4 + 56);
  *(void *)(v8 + 72) = v5;
  *(unsigned char *)(v8 + 80) = v3 & 1;
  return MEMORY[0x270FA2498](sub_260DA0DDC, v2, 0);
}

uint64_t sub_260DA0DDC()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12] + v0[13];
  swift_beginAccess();
  sub_260DC7A3C(v1, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  char v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t GenerativePlayground.assign(generationSeed:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 112) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v2;
  *(void *)(v3 + 80) = type metadata accessor for DefinitionSession();
  *(void *)(v3 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DA0F44, 0, 0);
}

uint64_t sub_260DA0F44()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 168);
  *(void *)(v0 + 96) = v1;
  return MEMORY[0x270FA2498](sub_260DA0F68, v1, 0);
}

uint64_t sub_260DA0F68()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  char v4 = *(unsigned char *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(void *)(v0 + 104) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v7 = v2 + v6;
  swift_beginAccess();
  sub_260DC713C(v7, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v8 = v1 + *(int *)(v3 + 56);
  *(void *)(v8 + 72) = v5;
  *(unsigned char *)(v8 + 80) = v4 & 1;
  return MEMORY[0x270FA2498](sub_260DD8D94, v2, 0);
}

void (*GenerativePlayground.generationSeed.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  *(void *)a1 = GenerativePlayground.generationSeed.getter();
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return sub_260DA1090;
}

void sub_260DA1090(uint64_t a1)
{
}

uint64_t GenerativePlayground.GenerationOptions.enableUpscaling.getter()
{
  return *v0;
}

uint64_t GenerativePlayground.GenerationOptions.enableUpscaling.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.enableUpscaling.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.GenerationOptions.maximumRepresentations.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t GenerativePlayground.GenerationOptions.maximumRepresentations.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.maximumRepresentations.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.GenerationOptions.allowImageRejection.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t GenerativePlayground.GenerationOptions.allowImageRejection.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.allowImageRejection.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.GenerationOptions.excludeIdentifyingStamp.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t GenerativePlayground.GenerationOptions.excludeIdentifyingStamp.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.excludeIdentifyingStamp.modify())()
{
  return nullsub_1;
}

unint64_t GenerativePlayground.GenerationOptions.scribbleStrength.getter()
{
  return *(unsigned int *)(v0 + 20) | ((unint64_t)*(unsigned __int8 *)(v0 + 24) << 32);
}

uint64_t GenerativePlayground.GenerationOptions.scribbleStrength.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 20) = result;
  *(unsigned char *)(v1 + 24) = BYTE4(result) & 1;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.scribbleStrength.modify())()
{
  return nullsub_1;
}

unint64_t GenerativePlayground.GenerationOptions.lcmScale.getter()
{
  return *(unsigned int *)(v0 + 28) | ((unint64_t)*(unsigned __int8 *)(v0 + 32) << 32);
}

uint64_t GenerativePlayground.GenerationOptions.lcmScale.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 28) = result;
  *(unsigned char *)(v1 + 32) = BYTE4(result) & 1;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.lcmScale.modify())()
{
  return nullsub_1;
}

uint64_t GenerativePlayground.GenerationOptions.engineeredPromptLanguageCheckingParameters.getter@<X0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 40);
  *(_DWORD *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t GenerativePlayground.GenerationOptions.engineeredPromptLanguageCheckingParameters.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  int v4 = *((_DWORD *)a1 + 4);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v3;
  *(_DWORD *)(v1 + 56) = v4;
  return result;
}

uint64_t (*GenerativePlayground.GenerationOptions.engineeredPromptLanguageCheckingParameters.modify())()
{
  return nullsub_1;
}

void GenerativePlayground.GenerationOptions.init()(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 1;
  *(_WORD *)(a1 + 16) = 1;
  *(_DWORD *)(a1 + 20) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 28) = 0;
  *(unsigned char *)(a1 + 32) = 1;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
}

uint64_t GenerativePlayground.generatedImages(options:eventsHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 104) = *(_OWORD *)a1;
  *(void *)(v4 + 88) = a3;
  *(void *)(v4 + 96) = v3;
  *(void *)(v4 + 80) = a2;
  *(_OWORD *)(v4 + 120) = v5;
  *(_OWORD *)(v4 + 136) = *(_OWORD *)(a1 + 32);
  *(void *)(v4 + 152) = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 76) = *(_DWORD *)(a1 + 56);
  return MEMORY[0x270FA2498](sub_260DA1308, 0, 0);
}

uint64_t sub_260DA1308()
{
  int v1 = *(_DWORD *)(v0 + 76);
  uint64_t v2 = *(void *)(v0 + 152);
  long long v10 = *(_OWORD *)(v0 + 120);
  long long v11 = *(_OWORD *)(v0 + 136);
  long long v9 = *(_OWORD *)(v0 + 104);
  uint64_t v3 = sub_260FE3110();
  *(void *)(v0 + 160) = v3;
  *(void *)(v0 + 168) = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 176) = v4;
  sub_260FE3100();
  *(_OWORD *)(v0 + 16) = v9;
  *(_OWORD *)(v0 + 32) = v10;
  *(_OWORD *)(v0 + 48) = v11;
  *(void *)(v0 + 64) = v2;
  *(_DWORD *)(v0 + 72) = v1;
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v5;
  *long long v5 = v0;
  v5[1] = sub_260DA1458;
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 80);
  return GenerativePlayground.generatedImages(options:generationID:eventsHandler:)(v0 + 16, v4, v7, v6);
}

uint64_t sub_260DA1458(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    long long v5 = sub_260DA1604;
  }
  else
  {
    *(void *)(v4 + 200) = a1;
    long long v5 = sub_260DA1580;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_260DA1580()
{
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[25];
  return v1(v2);
}

uint64_t sub_260DA1604()
{
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t GenerativePlayground.generatedImages(options:generationID:eventsHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 248) = a4;
  *(void *)(v5 + 256) = v4;
  *(void *)(v5 + 232) = a2;
  *(void *)(v5 + 240) = a3;
  type metadata accessor for GenerationRecipe(0);
  *(void *)(v5 + 264) = swift_task_alloc();
  *(void *)(v5 + 272) = type metadata accessor for GenerationState();
  *(void *)(v5 + 280) = swift_task_alloc();
  *(void *)(v5 + 288) = swift_task_alloc();
  *(void *)(v5 + 296) = type metadata accessor for DefinitionSession();
  *(void *)(v5 + 304) = swift_task_alloc();
  *(void *)(v5 + 312) = swift_task_alloc();
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 320) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 336) = v7;
  *(_OWORD *)(v5 + 352) = *(_OWORD *)(a1 + 32);
  *(void *)(v5 + 368) = *(void *)(a1 + 48);
  *(_DWORD *)(v5 + 76) = *(_DWORD *)(a1 + 56);
  return MEMORY[0x270FA2498](sub_260DA17BC, 0, 0);
}

uint64_t sub_260DA17BC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 256) + 168);
  *(void *)(v0 + 376) = v1;
  return MEMORY[0x270FA2498](sub_260DA17E0, v1, 0);
}

uint64_t sub_260DA17E0()
{
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 376) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DA1888, 0, 0);
}

uint64_t sub_260DA1888()
{
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = v1 + *(int *)(*(void *)(v0 + 296) + 56);
  uint64_t v54 = *(void *)(v0 + 296);
  if (*(void *)(v2 + 8) == 0xD000000000000029)
  {
    uint64_t v3 = *(void *)(v0 + 296);
    if (*(void *)(v2 + 16) == 0x8000000260FFBD40) {
      goto LABEL_5;
    }
  }
  if (sub_260FE5150())
  {
    uint64_t v1 = *(void *)(v0 + 312);
    uint64_t v3 = *(void *)(v0 + 296);
LABEL_5:
    uint64_t v4 = *(void **)(v1 + *(int *)(v3 + 40));
    uint64_t v5 = type metadata accessor for InputConditioner();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v0 + 184) = v5;
    *(void *)(v0 + 192) = &off_270D1C6C8;
    *(void *)(v0 + 160) = v6;
    id v7 = v4;
    sub_260D9D288(v0 + 160, (uint64_t *)(v0 + 120));
    sub_260D90820(v0 + 160, &qword_26A8E69D0);
    goto LABEL_7;
  }
  *(void *)(v0 + 152) = 0;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
LABEL_7:
  uint64_t v8 = *(void *)(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 312);
  uint64_t v50 = *(void *)(v0 + 288);
  uint64_t v52 = *(void *)(v0 + 360);
  uint64_t v46 = *(void *)(v0 + 280);
  uint64_t v48 = *(void *)(v0 + 296);
  uint64_t v44 = *(int **)(v0 + 272);
  uint64_t v49 = *(void *)(v0 + 264);
  uint64_t v10 = *(void *)(v0 + 232);
  sub_260D9D1B0(v0 + 120, (uint64_t *)(v0 + 80));
  sub_260D90820(v0 + 120, &qword_26A8E69D0);
  sub_260DC713C(v9, v8, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = sub_260FE3110();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v14(v11, v10, v12);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v15(v11, 0, 1, v12);
  uint64_t v16 = v46 + v44[5];
  v15(v16, 1, 1, v12);
  v14(v46, v8, v12);
  sub_260DC6AB8(v11, v16);
  uint64_t v17 = (uint64_t *)(v8 + *(int *)(v48 + 20));
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  uint64_t v20 = (void *)(v46 + v44[6]);
  *uint64_t v20 = v18;
  v20[1] = v19;
  sub_260DC713C(v8 + *(int *)(v54 + 56), v49, type metadata accessor for GenerationRecipe);
  swift_bridgeObjectRetain();
  sub_260DC6C10(v8, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  sub_260DC79D4(v49, v46 + v44[7], type metadata accessor for GenerationRecipe);
  sub_260DC79D4(v46, v50, (uint64_t (*)(void))type metadata accessor for GenerationState);
  swift_task_dealloc();
  if (v52 == 1)
  {
    char v21 = 0;
    LOBYTE(v22) = 0;
    LODWORD(v23) = 0;
    LODWORD(v24) = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    int v27 = 0;
    uint64_t v47 = *(void *)(v0 + 360);
    uint64_t v45 = *(void *)(v0 + 352);
    uint64_t v53 = *(void *)(v0 + 344);
    uint64_t v28 = *(void *)(v0 + 328);
    uint64_t v51 = *(void *)(v0 + 336);
    uint64_t v29 = 1;
    char v30 = 1;
    char v31 = 1;
    char v32 = 1;
    uint64_t v43 = *(void *)(v0 + 320);
  }
  else
  {
    unint64_t v33 = *(void *)(v0 + 336);
    unint64_t v23 = HIDWORD(v33);
    uint64_t v24 = HIDWORD(*(void *)(v0 + 344));
    uint64_t v28 = *(void *)(v0 + 328);
    uint64_t v43 = *(void *)(v0 + 320);
    char v21 = v43 & 1;
    char v30 = v33 & 1;
    uint64_t v51 = v33;
    uint64_t v53 = *(void *)(v0 + 344);
    uint64_t v22 = (v33 >> 8) & 1;
    char v31 = v53 & 1;
    uint64_t v25 = *(void *)(v0 + 360);
    uint64_t v45 = *(void *)(v0 + 352);
    uint64_t v47 = v25;
    char v32 = v45 & 1;
    int v27 = *(_DWORD *)(v0 + 76);
    uint64_t v26 = *(void *)(v0 + 368);
    uint64_t v29 = v28;
  }
  *(void *)(v0 + 384) = v25;
  uint64_t v34 = *(void *)(v0 + 312);
  uint64_t v35 = *(void *)(v0 + 288);
  uint64_t v37 = *(void *)(v0 + 248);
  uint64_t v36 = *(void *)(v0 + 256);
  uint64_t v38 = *(void *)(v0 + 240);
  *(unsigned char *)(v0 + 16) = v21;
  *(void *)(v0 + 24) = v29;
  *(unsigned char *)(v0 + 32) = v30;
  *(unsigned char *)(v0 + 33) = v22;
  *(_DWORD *)(v0 + 36) = v23;
  *(unsigned char *)(v0 + 40) = v31;
  *(_DWORD *)(v0 + 44) = v24;
  *(unsigned char *)(v0 + 48) = v32;
  *(void *)(v0 + 56) = v25;
  *(void *)(v0 + 64) = v26;
  *(_DWORD *)(v0 + 72) = v27;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A38);
  id v40 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v40;
  v40[2] = v0 + 16;
  v40[3] = v34;
  v40[4] = v35;
  v40[5] = v0 + 80;
  v40[6] = v36;
  v40[7] = v38;
  v40[8] = v37;
  sub_260DC8A5C(v43, v28, v51, v53, v45, v47);
  long long v41 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v41;
  *long long v41 = v0;
  v41[1] = sub_260DA1DC0;
  return MEMORY[0x270FA22B8](v0 + 224, v39, v39, 0, 0, &unk_26A8E6A48, v40, v39);
}

uint64_t sub_260DA1DC0()
{
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_260DA2000;
  }
  else {
    uint64_t v2 = sub_260DA1F14;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260DA1F14()
{
  uint64_t v1 = v0[39];
  sub_260DC6C10(v0[36], (uint64_t (*)(void))type metadata accessor for GenerationState);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 10));
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v2 = v0[28];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_260DA2000()
{
  uint64_t v1 = v0[39];
  sub_260DC6C10(v0[36], (uint64_t (*)(void))type metadata accessor for GenerationState);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 10));
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_260DA20E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[22] = a8;
  v8[23] = v11;
  v8[20] = a6;
  v8[21] = a7;
  v8[18] = a4;
  v8[19] = a5;
  v8[16] = a1;
  v8[17] = a3;
  type metadata accessor for GenerationState();
  v8[24] = swift_task_alloc();
  v8[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DA2198, 0, 0);
}

uint64_t sub_260DA2198()
{
  uint64_t v1 = *(char **)(v0 + 136);
  char v2 = *v1;
  uint64_t v3 = *((void *)v1 + 1);
  int v4 = *((_DWORD *)v1 + 14);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 40);
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 144);
  uint64_t v9 = *(void *)(v0 + 152);
  *(_DWORD *)(v0 + 32) = v4;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = 0;
  *(unsigned char *)(v0 + 56) = 1;
  *(void *)(v0 + 64) = v3;
  *(unsigned char *)(v0 + 72) = v2;
  *(_DWORD *)(v0 + 76) = 0;
  *(unsigned char *)(v0 + 80) = 1;
  uint64_t v10 = (int *)type metadata accessor for DefinitionSession();
  uint64_t v11 = v8 + v10[5];
  uint64_t v12 = *(void *)(v11 + 8);
  uint64_t v36 = *(void *)v11;
  int v35 = *(_DWORD *)(v11 + 16);
  sub_260DC713C(v9, v5, (uint64_t (*)(void))type metadata accessor for GenerationState);
  sub_260D90158(v7, v0 + 88);
  uint64_t v13 = (uint64_t *)(v8 + v10[6]);
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v16 = *(void **)(v8 + v10[10]);
  uint64_t v17 = *(void *)(v6 + 104);
  uint64_t v18 = v8 + v10[14];
  uint64_t v19 = *(unsigned __int8 *)(v18 + 56);
  int v20 = *(unsigned __int8 *)(v18 + 62);
  uint64_t v21 = 2;
  if (v19) {
    uint64_t v21 = 3;
  }
  if (v20) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = v19;
  }
  uint64_t v23 = *(void *)(v8 + v10[13]);
  uint64_t v24 = *(void *)(v0 + 136);
  if (v22 == *(void *)(v23 + 24))
  {
    sub_260DD8268(v24);
    swift_bridgeObjectRetain();
    sub_260DC8644(v14);
    id v25 = v16;
    swift_retain();
  }
  else
  {
    uint64_t v26 = *(void **)(v23 + 16);
    *(void *)(v23 + 16) = 0;
    sub_260DD8268(v24);
    swift_bridgeObjectRetain();
    sub_260DC8644(v14);
    id v27 = v16;
    swift_retain();

    *(void *)(v23 + 24) = v22;
  }
  uint64_t v28 = *(void *)(v0 + 200);
  type metadata accessor for GenerativePlayground.GenerationTask();
  uint64_t v29 = swift_allocObject();
  swift_retain();
  *(void *)(v0 + 208) = sub_260DC5654(v36, v12, v35, v28, v0 + 88, v0 + 16, v14, v15, v16, v17, v23, v29);
  char v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v30;
  *char v30 = v0;
  v30[1] = sub_260DA23F0;
  uint64_t v32 = *(void *)(v0 + 184);
  uint64_t v31 = *(void *)(v0 + 192);
  uint64_t v33 = *(void *)(v0 + 176);
  return sub_260F10D28(v31, v33, v32);
}

uint64_t sub_260DA23F0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_260DA25BC;
  }
  else
  {
    uint64_t v6 = *(void *)(v4 + 192);
    *(void *)(v4 + 232) = a1;
    sub_260DC6C10(v6, (uint64_t (*)(void))type metadata accessor for GenerationState);
    uint64_t v5 = sub_260DA2530;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_260DA2530()
{
  uint64_t v1 = v0[29];
  char v2 = (void *)v0[16];
  swift_release();
  void *v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_260DA25BC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t GenerativePlayground.ImageGenerationOptions.maximumRepresentations.getter()
{
  return *(void *)v0;
}

uint64_t GenerativePlayground.ImageGenerationOptions.maximumRepresentations.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*GenerativePlayground.ImageGenerationOptions.maximumRepresentations.modify())()
{
  return nullsub_1;
}

VisualGeneration::GenerativePlayground::ImageGenerationOptions __swiftcall GenerativePlayground.ImageGenerationOptions.init()()
{
  *uint64_t v0 = 1;
  return result;
}

void GenerativePlayground.ImageGenerationSession.options.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

uint64_t GenerativePlayground.ImageGenerationSession.eventStream.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession_eventStream;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A50);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t GenerativePlayground.ImageGenerationSession.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__generationID;
  uint64_t v4 = sub_260FE3110();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t GenerativePlayground.ImageGenerationSession.isCancelled.getter()
{
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_260FE3A10();
  __swift_project_value_buffer(v1, (uint64_t)qword_26A90FB90);
  swift_retain_n();
  char v2 = sub_260FE39F0();
  os_log_type_t v3 = sub_260FE4880();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v12 = v5;
    swift_retain();
    uint64_t v10 = sub_260FE5430();
    unint64_t v11 = v6;
    sub_260FE4250();
    sub_260FE3110();
    sub_260DD8CC8((unint64_t *)&qword_26A8E67B0, MEMORY[0x270FA9410]);
    sub_260FE5110();
    sub_260FE4250();
    swift_release();
    swift_bridgeObjectRelease();
    sub_260DB2844(v10, v11, &v12);
    sub_260FE4AE0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_260D82000, v2, v3, "%s checking cancellation", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v5, -1, -1);
    MEMORY[0x26122CA00](v4, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v7 = *(void *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller
                 + 24);
  uint64_t v8 = *(void *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller), v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8) & 1;
}

Swift::Void __swiftcall GenerativePlayground.ImageGenerationSession.cancel()()
{
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_260FE3A10();
  __swift_project_value_buffer(v1, (uint64_t)qword_26A90FB90);
  swift_retain_n();
  char v2 = sub_260FE39F0();
  os_log_type_t v3 = sub_260FE4880();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v11 = v5;
    swift_retain();
    uint64_t v9 = sub_260FE5430();
    unint64_t v10 = v6;
    sub_260FE4250();
    sub_260FE3110();
    sub_260DD8CC8((unint64_t *)&qword_26A8E67B0, MEMORY[0x270FA9410]);
    sub_260FE5110();
    sub_260FE4250();
    swift_release();
    swift_bridgeObjectRelease();
    sub_260DB2844(v9, v10, &v11);
    sub_260FE4AE0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_260D82000, v2, v3, "cancelling %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v5, -1, -1);
    MEMORY[0x26122CA00](v4, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v7 = *(void *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller
                 + 24);
  uint64_t v8 = *(void *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller), v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
}

uint64_t GenerativePlayground.ImageGenerationSession.description.getter()
{
  uint64_t v1 = sub_260FE5430();
  sub_260FE4250();
  sub_260FE3110();
  sub_260DD8CC8((unint64_t *)&qword_26A8E67B0, MEMORY[0x270FA9410]);
  sub_260FE5110();
  sub_260FE4250();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_260DA2D50(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v47 = a8;
  uint64_t v50 = a5;
  uint64_t v44 = a4;
  uint64_t v51 = a3;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F58);
  uint64_t v15 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46, v16);
  id v42 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A50);
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49, v18);
  long long v41 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[1];
  uint64_t v40 = *a1;
  uint64_t v36 = v20;
  int v39 = *((_DWORD *)a1 + 4);
  uint64_t v21 = *a6;
  uint64_t v22 = v10 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__generationID;
  uint64_t v43 = sub_260FE3110();
  uint64_t v45 = *(void *)(v43 - 8);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
  uint64_t v24 = a2;
  uint64_t v37 = a2;
  v23(v22, a2, v43);
  *(void *)(v10 + 16) = v21;
  uint64_t v38 = v10;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  *(_DWORD *)(v25 + 32) = 0;
  *(int64x2_t *)(v25 + 40) = vdupq_n_s64(0x200uLL);
  *(unsigned char *)(v25 + 56) = 0;
  *(void *)(v25 + 64) = v21;
  *(unsigned char *)(v25 + 72) = 1;
  *(_DWORD *)(v25 + 76) = 0;
  *(unsigned char *)(v25 + 80) = 1;
  uint64_t v26 = type metadata accessor for StatefulCanceller();
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = 0;
  uint64_t v66 = v26;
  uint64_t v67 = &off_270D1D7C0;
  *(void *)&long long v65 = v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F60);
  uint64_t v29 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F68);
  uint64_t v30 = swift_allocObject();
  *(_DWORD *)(v30 + 16) = 0;
  *(void *)(v29 + 56) = v30;
  *(void *)(v29 + 64) = 0;
  sub_260DD7B40(&v65, v29 + 16);
  uint64_t v31 = (uint64_t *)(v10
                  + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller);
  v31[3] = v28;
  v31[4] = (uint64_t)&off_270D1D7A8;
  *uint64_t v31 = v29;
  uint64_t v52 = v29;
  uint64_t v53 = v51;
  uint64_t v54 = v25;
  uint64_t v55 = a7;
  uint64_t v56 = v24;
  uint64_t v57 = v40;
  uint64_t v58 = v20;
  int v59 = v39;
  uint64_t v32 = v44;
  uint64_t v60 = v44;
  uint64_t v61 = v50;
  uint64_t v62 = v47;
  uint64_t v63 = a9;
  uint64_t v64 = a10;
  type metadata accessor for GenerativePlayground.ImageGenerationEvent(0);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v42, *MEMORY[0x263F8F580], v46);
  swift_retain();
  uint64_t v33 = v41;
  sub_260FE4560();

  swift_release();
  swift_release();
  swift_release();
  sub_260DC8E58(v32);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v37, v43);
  uint64_t v34 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v38 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession_eventStream, v33, v49);
  swift_release();
  return v34;
}

uint64_t sub_260DA31E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v64 = a4;
  long long v65 = a5;
  uint64_t v63 = a3;
  uint64_t v61 = a2;
  uint64_t v66 = a1;
  uint64_t v73 = a14;
  uint64_t v74 = a8;
  uint64_t v71 = a13;
  uint64_t v72 = a7;
  uint64_t v69 = a11;
  uint64_t v70 = a12;
  uint64_t v68 = a10;
  int v67 = a9;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15, v18);
  int v59 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  MEMORY[0x270FA5388](v19 - 8, v20);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v22;
  uint64_t v23 = sub_260FE4520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v25 = a1;
  uint64_t v26 = v15;
  uint64_t v60 = v15;
  v24((char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v15);
  uint64_t v57 = sub_260FE3110();
  uint64_t v27 = *(void *)(v57 - 8);
  uint64_t v28 = *(void *)(v27 + 64);
  MEMORY[0x270FA5388](v57, v29);
  uint64_t v58 = (char *)&v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v27 + 16))();
  unint64_t v30 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v31 = (v17 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v55 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (*(unsigned __int8 *)(v27 + 80) + v33 + 8) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v35 = (v28 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = (v35 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v56 = (v54 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = (v56 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v52 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = 0;
  *(void *)(v36 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v36 + v30, v59, v26);
  uint64_t v37 = v61;
  *(void *)(v36 + v31) = v61;
  uint64_t v38 = v64;
  *(void *)(v36 + v55) = v63;
  *(void *)(v36 + v32) = v38;
  int v39 = v65;
  *(void *)(v36 + v33) = v65;
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v36 + v34, v58, v57);
  unint64_t v40 = v36 + v35;
  uint64_t v41 = v71;
  uint64_t v43 = v73;
  uint64_t v42 = v74;
  *(void *)unint64_t v40 = v72;
  *(void *)(v40 + 8) = v42;
  *(_DWORD *)(v40 + 16) = v67;
  uint64_t v44 = (uint64_t *)(v36 + v54);
  uint64_t v46 = v68;
  uint64_t v45 = v69;
  uint64_t *v44 = v68;
  v44[1] = v45;
  *(void *)(v36 + v56) = v70;
  *(void *)(v36 + v53) = v41;
  *(void *)(v36 + v52) = v43;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v47 = v39;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_260DC8644(v46);
  uint64_t v48 = sub_260D9F7E4((uint64_t)v62, (uint64_t)&unk_26A8E6FC0, v36);
  swift_retain();
  sub_260FE4530();
  swift_beginAccess();
  uint64_t v49 = *(os_unfair_lock_s **)(v37 + 56);
  swift_retain_n();
  os_unfair_lock_lock(v49 + 4);
  if (*(void *)(v37 + 64))
  {
    uint64_t result = sub_260FE4E20();
    __break(1u);
  }
  else
  {
    *(void *)(v37 + 64) = v48;
    swift_retain();
    swift_retain();
    os_unfair_lock_unlock(v49 + 4);
    swift_endAccess();
    swift_release_n();
    swift_release();
    sub_260E98634();
    return swift_release();
  }
  return result;
}

uint64_t sub_260DA36FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 288) = v21;
  *(void *)(v8 + 296) = v22;
  *(void *)(v8 + 272) = v19;
  *(void *)(v8 + 280) = v20;
  *(_DWORD *)(v8 + 84) = v17;
  *(void *)(v8 + 256) = v16;
  *(void *)(v8 + 264) = v18;
  *(_OWORD *)(v8 + 240) = v15;
  *(void *)(v8 + 224) = a7;
  *(void *)(v8 + 232) = a8;
  *(void *)(v8 + 208) = a5;
  *(void *)(v8 + 216) = a6;
  *(void *)(v8 + 200) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FC8);
  *(void *)(v8 + 304) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for GeneratedImage();
  *(void *)(v8 + 312) = v9;
  *(void *)(v8 + 320) = *(void *)(v9 - 8);
  *(void *)(v8 + 328) = swift_task_alloc();
  *(void *)(v8 + 336) = swift_task_alloc();
  *(void *)(v8 + 344) = type metadata accessor for ImageProvenance();
  *(void *)(v8 + 352) = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70);
  *(void *)(v8 + 360) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v8 + 368) = v11;
  *(void *)(v8 + 376) = *(void *)(v11 + 64);
  *(void *)(v8 + 384) = swift_task_alloc();
  *(void *)(v8 + 392) = type metadata accessor for GenerationState();
  *(void *)(v8 + 400) = swift_task_alloc();
  *(void *)(v8 + 408) = swift_task_alloc();
  *(void *)(v8 + 416) = swift_task_alloc();
  *(void *)(v8 + 424) = swift_task_alloc();
  *(void *)(v8 + 432) = type metadata accessor for GenerativePlayground.ImageGenerationEvent(0);
  *(void *)(v8 + 440) = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA0);
  *(void *)(v8 + 448) = v12;
  *(void *)(v8 + 456) = *(void *)(v12 - 8);
  *(void *)(v8 + 464) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DA39B4, 0, 0);
}

uint64_t sub_260DA39B4()
{
  uint64_t v96 = v0;
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v1 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 448);
  swift_storeEnumTagMultiPayload();
  sub_260FE4540();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 472) = v4;
  *(void *)(v0 + 480) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v4(v1, v3);
  sub_260EBEDD4();
  unint64_t v18 = *(void *)(v0 + 216);
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_260FE4E40();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v0 + 488) = v19;
  uint64_t v20 = *(void *)(v0 + 464);
  uint64_t v22 = *(void *)(v0 + 440);
  uint64_t v21 = *(void *)(v0 + 448);
  *(void *)uint64_t v22 = 0;
  *(void *)(v22 + 8) = v19;
  *(unsigned char *)(v22 + 16) = 0;
  swift_storeEnumTagMultiPayload();
  sub_260FE4540();
  v4(v20, v21);
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_260FE4E40();
    *(void *)(v0 + 496) = v26;
    if (v26) {
      goto LABEL_12;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    sub_260FE4550();
    goto LABEL_26;
  }
  uint64_t v23 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  *(void *)(v0 + 496) = v23;
  if (!v23) {
    goto LABEL_16;
  }
LABEL_12:
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v24 = *(void *)(v0 + 216);
  if ((v24 & 0xC000000000000001) != 0)
  {
    uint64_t v25 = MEMORY[0x26122B4C0](0);
  }
  else
  {
    uint64_t v25 = *(void *)(v24 + 32);
    swift_retain();
  }
  *(void *)(v0 + 504) = v25;
  *(void *)(v0 + 512) = 1;
  sub_260EBEDD4();
  *(void *)(v0 + 520) = 0;
  uint64_t v29 = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage;
  *(void *)(v0 + 528) = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage;
  uint64_t v30 = v25 + v29;
  unint64_t v31 = *(void **)(v25 + v29);
  *(void *)(v0 + 536) = v31;
  if (*(unsigned char *)(v25 + v29 + 8) == 2)
  {
    uint64_t v32 = *(void *)(v0 + 224);
    if (*(unsigned char *)(v32 + 72))
    {
      uint64_t v33 = *(void *)(v0 + 320);
      uint64_t v34 = *(void *)(v0 + 232);
      uint64_t v35 = type metadata accessor for GenerativePlayground.GenerationTask();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D00);
      int v36 = *(_DWORD *)(v33 + 80);
      *(_DWORD *)(v0 + 116) = v36;
      unint64_t v37 = (v36 + 32) & ~(unint64_t)v36;
      uint64_t v38 = swift_allocObject();
      *(void *)(v0 + 544) = v38;
      *(_OWORD *)(v38 + 16) = xmmword_260FE7080;
      sub_260DC713C(v30, v38 + v37, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      id v39 = v31;
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A38);
      uint64_t v41 = (void *)swift_task_alloc();
      *(void *)(v0 + 552) = v41;
      v41[2] = v38;
      v41[3] = v35;
      v41[4] = v34;
      uint64_t v42 = (void *)swift_task_alloc();
      *(void *)(v0 + 560) = v42;
      *uint64_t v42 = v0;
      v42[1] = sub_260DA469C;
      uint64_t v43 = *(void *)(v0 + 312);
      uint64_t v98 = v40;
      return MEMORY[0x270FA2158](v0 + 192, v43, v40, 0, 0, &unk_26A8E6FD0, v41, v43);
    }
    else
    {
      uint64_t v51 = *(void *)(v0 + 424);
      uint64_t v94 = *(void *)(v0 + 416);
      uint64_t v52 = *(void *)(v0 + 392);
      uint64_t v84 = *(void *)(v0 + 272);
      uint64_t v85 = *(void *)(v0 + 280);
      int v92 = *(_DWORD *)(v0 + 84);
      uint64_t v80 = *(void *)(v0 + 408);
      uint64_t v81 = *(void *)(v0 + 256);
      uint64_t v53 = *(void *)(v0 + 240);
      uint64_t v89 = *(void *)(v0 + 288);
      os_log_t loga = *(os_log_t *)(v0 + 248);
      bufa = *(uint8_t **)(v0 + 232);
      uint64_t v82 = *(void *)(v0 + 208);
      uint64_t v83 = *(void *)(v0 + 264);
      sub_260DC713C(v25 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generationState, v51, (uint64_t (*)(void))type metadata accessor for GenerationState);
      uint64_t v54 = v51 + *(int *)(v52 + 20);
      id v55 = v31;
      sub_260D90820(v54, &qword_26A8E67F8);
      uint64_t v56 = sub_260FE3110();
      uint64_t v57 = *(void *)(v56 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v54, v53, v56);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      uint64_t v58 = (__CVBuffer *)v55;
      size_t Width = CVPixelBufferGetWidth(v58);
      size_t Height = CVPixelBufferGetHeight(v58);
      LODWORD(v56) = CVPixelBufferGetPixelFormatType(v58);

      type metadata accessor for ResolvedImage.HiddenBufferData();
      uint64_t v59 = swift_allocObject();
      *(_OWORD *)(v59 + 16) = xmmword_260FE7230;
      uint64_t v60 = v56;
      uint64_t v61 = v51 + *(int *)(v52 + 28);
      uint64_t v62 = type metadata accessor for GenerationRecipe(0);
      uint64_t v63 = v61 + *(int *)(v62 + 76);
      sub_260DC6EDC(*(void *)v63, *(void *)(v63 + 8), *(void *)(v63 + 16), *(void **)(v63 + 24));
      *(void *)uint64_t v63 = Width;
      *(void *)(v63 + 8) = Height;
      *(void *)(v63 + 16) = v60;
      *(void *)(v63 + 24) = v31;
      *(void *)(v63 + 32) = v59;
      uint64_t v64 = v61 + *(int *)(v62 + 40);
      *(_DWORD *)uint64_t v64 = 0;
      *(unsigned char *)(v64 + 4) = 0;
      sub_260DC713C(v51, v94, (uint64_t (*)(void))type metadata accessor for GenerationState);
      *(_OWORD *)(v0 + 16) = *(_OWORD *)(v32 + 16);
      long long v66 = *(_OWORD *)(v32 + 48);
      long long v65 = *(_OWORD *)(v32 + 64);
      long long v67 = *(_OWORD *)(v32 + 32);
      *(unsigned char *)(v0 + 80) = *(unsigned char *)(v32 + 80);
      *(_OWORD *)(v0 + 48) = v66;
      *(_OWORD *)(v0 + 64) = v65;
      *(_OWORD *)(v0 + 32) = v67;
      sub_260DC713C(v94, v80, (uint64_t (*)(void))type metadata accessor for GenerationState);
      type metadata accessor for GenerativePlayground.GenerationTask();
      memset(v95, 0, 40);
      uint64_t v68 = swift_allocObject();
      swift_bridgeObjectRetain();
      sub_260DD814C(v0 + 16);
      sub_260DC8644(v83);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v69 = bufa;
      *(void *)(v0 + 568) = sub_260DC52E8((uint64_t)loga, v81, v92, v80, (uint64_t)v95, v0 + 16, v83, v84, bufa, v85, v82, v89, v68);
      sub_260DC6C10(v94, (uint64_t (*)(void))type metadata accessor for GenerationState);
      uint64_t v70 = *(void *)(v0 + 384);
      uint64_t v71 = *(void *)(v0 + 360);
      uint64_t v72 = *(void *)(v0 + 368);
      (*(void (**)(uint64_t, void, uint64_t))(v72 + 16))(v70, *(void *)(v0 + 200), v71);
      unint64_t v73 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
      uint64_t v74 = swift_allocObject();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v72 + 32))(v74 + v73, v70, v71);
      *(void *)(v0 + 584) = v74;
      *(void *)(v0 + 576) = sub_260DD8184;
      int v75 = (void *)swift_task_alloc();
      *(void *)(v0 + 592) = v75;
      *int v75 = v0;
      v75[1] = sub_260DA56AC;
      uint64_t v76 = *(void *)(v0 + 400);
      return sub_260F10D28(v76, (uint64_t)sub_260DD8184, v74);
    }
  }
  swift_bridgeObjectRelease();
  sub_260DC8E04();
  uint64_t v49 = (void *)swift_allocError();
  unsigned char *v50 = 1;
  swift_willThrow();
  swift_release();
  uint64_t v5 = sub_260F33D64(v49);
  *(void *)(v0 + 184) = v5;
  id v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
  if (swift_dynamicCast())
  {
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v9 = *(void *)(v0 + 104);
    int v10 = *(unsigned __int8 *)(v0 + 112);
    if (v10 == 7)
    {
      if (qword_26A8E6118 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_260FE3A10();
      __swift_project_value_buffer(v11, (uint64_t)qword_26A90FB90);
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_260FE39F0();
      os_log_type_t type = sub_260FE4890();
      if (os_log_type_enabled(v12, type))
      {
        os_log_t log = v12;
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v88 = swift_slowAlloc();
        v95[0] = v88;
        buf = v13;
        *(_DWORD *)uint64_t v13 = 136446210;
        uint64_t v14 = swift_bridgeObjectRetain();
        uint64_t v15 = MEMORY[0x26122AC60](v14, &type metadata for GeneratorError.VersionTriple);
        unint64_t v17 = v16;
        sub_260DD7B58(v8, v7, v9, 7);
        *(void *)(v0 + 168) = sub_260DB2844(v15, v17, v95);
        sub_260FE4AE0();
        swift_bridgeObjectRelease();
        sub_260DD7B58(v8, v7, v9, 7);
        sub_260DD7B58(v8, v7, v9, 7);
        uint64_t v12 = log;
        _os_log_impl(&dword_260D82000, log, type, "Attempting to reset generator state due to model catalog asset mismatch: %{public}s", buf, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x26122CA00](v88, -1, -1);
        MEMORY[0x26122CA00](buf, -1, -1);
      }
      else
      {
        sub_260DD7B58(v8, v7, v9, 7);
        sub_260DD7B58(v8, v7, v9, 7);
      }

      uint64_t v27 = *(os_unfair_lock_s **)(*(void *)(v0 + 296) + 176);
      *(unsigned char *)(swift_task_alloc() + 16) = 1;
      uint64_t v28 = (uint64_t *)&v27[4];
      v27 += 6;
      os_unfair_lock_lock(v27);
      sub_260DD8D98(v28);
      os_unfair_lock_unlock(v27);
      swift_task_dealloc();
    }
    else
    {
      sub_260DD7B58(*(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), v10);
    }
  }
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
  uint64_t v45 = *(void *)(v0 + 464);
  uint64_t v46 = *(void *)(v0 + 448);
  **(void **)(v0 + 440) = v5;
  swift_storeEnumTagMultiPayload();
  id v47 = v5;
  sub_260FE4540();
  v44(v45, v46);
  sub_260FE4550();

LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
  return v48();
}

uint64_t sub_260DA469C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_260DA47B4, 0, 0);
}

uint64_t sub_260DA47B4()
{
  uint64_t v107 = v0;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 512);
  uint64_t v100 = *(void *)(v0 + 520);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 464);
  unint64_t v102 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
  uint64_t v6 = *(void *)(v0 + 440);
  uint64_t v5 = *(void *)(v0 + 448);
  sub_260DC713C(*(void *)(v0 + 504) + *(void *)(v0 + 528) + *(int *)(*(void *)(v0 + 312) + 20), *(void *)(v0 + 352), (uint64_t (*)(void))type metadata accessor for ImageProvenance);
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = v3;
  *(unsigned char *)(v6 + 16) = 0;
  uint64_t v7 = 1;
  swift_storeEnumTagMultiPayload();
  sub_260FE4540();
  v102(v4, v5);
  if (*(void *)(v1 + 16))
  {
    uint64_t v8 = *(unsigned __int8 *)(*(void *)(v0 + 320) + 80);
    sub_260DC713C(v1 + ((v8 + 32) & ~v8), *(void *)(v0 + 304), (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    uint64_t v7 = 0;
  }
  uint64_t v10 = *(void *)(v0 + 312);
  uint64_t v9 = *(void *)(v0 + 320);
  uint64_t v11 = *(void **)(v0 + 304);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v11, v7, 1, v10);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  uint64_t v12 = v9 + 48;
  int v14 = v13(v11, 1, v10);
  uint64_t v15 = *(void **)(v0 + 536);
  if (v14 == 1)
  {
    uint64_t v16 = *(void *)(v0 + 352);
    uint64_t v17 = *(void *)(v0 + 304);
    swift_release();

    sub_260DC6C10(v16, (uint64_t (*)(void))type metadata accessor for ImageProvenance);
    sub_260D90820(v17, &qword_26A8E6FC8);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 464);
    v104 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v18 = *(void *)(v0 + 440);
    uint64_t v7 = *(void *)(v0 + 352);
    uint64_t v95 = *(void *)(v0 + 448);
    uint64_t v11 = *(void **)(v0 + 336);
    uint64_t v19 = *(void *)(v0 + 344);
    uint64_t v6 = *(void *)(v0 + 328);
    sub_260DC79D4(*(void *)(v0 + 304), (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    uint64_t v17 = swift_task_alloc();
    uint64_t v20 = sub_260FE3110();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v17, 1, 1, v20);
    sub_260EFA890(4, v17, *(void *)(v7 + *(int *)(v19 + 24)), 0, *(void *)(v7 + *(int *)(v19 + 28)), v6);
    sub_260D90820(v17, &qword_26A8E67F8);
    swift_task_dealloc();
    sub_260DC713C(v6, v18, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    swift_storeEnumTagMultiPayload();
    sub_260FE4540();
    swift_release();

    v104(v12, v95);
    sub_260DC6C10(v6, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260DC6C10((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260DC6C10(v7, (uint64_t (*)(void))type metadata accessor for ImageProvenance);
  }
  uint64_t v21 = *(void *)(v0 + 512);
  uint64_t v22 = *(void *)(v0 + 216);
  if (v21 == *(void *)(v0 + 496))
  {
    swift_bridgeObjectRelease();
    sub_260FE4550();
LABEL_34:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v82 = *(uint64_t (**)(void))(v0 + 8);
    return v82();
  }
  if ((v22 & 0xC000000000000001) != 0)
  {
    uint64_t v23 = MEMORY[0x26122B4C0](*(void *)(v0 + 512));
  }
  else
  {
    uint64_t v23 = *(void *)(v22 + 8 * v21 + 32);
    swift_retain();
  }
  uint64_t v24 = v21 + 1;
  *(void *)(v0 + 504) = v23;
  *(void *)(v0 + 512) = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  sub_260EBEDD4();
  *(void *)(v0 + 520) = v100;
  if (v100)
  {
    uint64_t v7 = v100;
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v25 = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage;
  *(void *)(v0 + 528) = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage;
  uint64_t v26 = v23 + v25;
  uint64_t v27 = *(void **)(v23 + v25);
  *(void *)(v0 + 536) = v27;
  if (*(unsigned char *)(v23 + v25 + 8) != 2)
  {
    swift_bridgeObjectRelease();
    sub_260DC8E04();
    uint64_t v7 = swift_allocError();
    *uint64_t v40 = 1;
    swift_willThrow();
    swift_release();
LABEL_20:
    uint64_t v12 = v0 + 192;
    uint64_t v11 = sub_260F33D64((void *)v7);
    *(void *)(v0 + 184) = v11;
    id v41 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
    if (swift_dynamicCast())
    {
      uint64_t v24 = *(void *)(v0 + 88);
      uint64_t v6 = *(void *)(v0 + 96);
      uint64_t v17 = *(void *)(v0 + 104);
      int v42 = *(unsigned __int8 *)(v0 + 112);
      if (v42 == 7)
      {
        if (qword_26A8E6118 == -1)
        {
LABEL_23:
          uint64_t v43 = sub_260FE3A10();
          __swift_project_value_buffer(v43, (uint64_t)qword_26A90FB90);
          swift_bridgeObjectRetain();
          uint64_t v44 = sub_260FE39F0();
          os_log_type_t v103 = sub_260FE4890();
          if (os_log_type_enabled(v44, v103))
          {
            int v92 = (uint64_t *)(v12 - 24);
            os_log_t log = v44;
            uint64_t v45 = (uint8_t *)swift_slowAlloc();
            uint64_t v96 = swift_slowAlloc();
            v106[0] = v96;
            *(_DWORD *)uint64_t v45 = 136446210;
            uint64_t v46 = swift_bridgeObjectRetain();
            uint64_t v47 = MEMORY[0x26122AC60](v46, &type metadata for GeneratorError.VersionTriple);
            unint64_t v49 = v48;
            sub_260DD7B58(v24, v6, v17, 7);
            uint64_t *v92 = sub_260DB2844(v47, v49, v106);
            sub_260FE4AE0();
            swift_bridgeObjectRelease();
            sub_260DD7B58(v24, v6, v17, 7);
            sub_260DD7B58(v24, v6, v17, 7);
            uint64_t v44 = log;
            _os_log_impl(&dword_260D82000, log, v103, "Attempting to reset generator state due to model catalog asset mismatch: %{public}s", v45, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x26122CA00](v96, -1, -1);
            MEMORY[0x26122CA00](v45, -1, -1);
          }
          else
          {
            sub_260DD7B58(v24, v6, v17, 7);
            sub_260DD7B58(v24, v6, v17, 7);
          }

          uint64_t v50 = *(void *)(*(void *)(v0 + 296) + 176);
          *(unsigned char *)(swift_task_alloc() + 16) = 1;
          os_unfair_lock_lock((os_unfair_lock_t)(v50 + 24));
          sub_260DD8D98((uint64_t *)(v50 + 16));
          os_unfair_lock_unlock((os_unfair_lock_t)(v50 + 24));
          swift_task_dealloc();
          goto LABEL_33;
        }
LABEL_38:
        swift_once();
        goto LABEL_23;
      }
      sub_260DD7B58(*(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), v42);
    }
LABEL_33:
    uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v79 = *(void *)(v0 + 464);
    uint64_t v80 = *(void *)(v0 + 448);
    **(void **)(v0 + 440) = v11;
    swift_storeEnumTagMultiPayload();
    id v81 = v11;
    sub_260FE4540();
    v78(v79, v80);
    sub_260FE4550();

    goto LABEL_34;
  }
  uint64_t v28 = *(void *)(v0 + 224);
  if (*(unsigned char *)(v28 + 72))
  {
    uint64_t v29 = *(void *)(v0 + 320);
    uint64_t v30 = *(void *)(v0 + 232);
    uint64_t v31 = type metadata accessor for GenerativePlayground.GenerationTask();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D00);
    int v32 = *(_DWORD *)(v29 + 80);
    *(_DWORD *)(v0 + 116) = v32;
    unint64_t v33 = (v32 + 32) & ~(unint64_t)v32;
    uint64_t v34 = swift_allocObject();
    *(void *)(v0 + 544) = v34;
    *(_OWORD *)(v34 + 16) = xmmword_260FE7080;
    sub_260DC713C(v26, v34 + v33, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    id v35 = v27;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A38);
    unint64_t v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 552) = v37;
    v37[2] = v34;
    void v37[3] = v31;
    v37[4] = v30;
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 560) = v38;
    *uint64_t v38 = v0;
    v38[1] = sub_260DA469C;
    uint64_t v39 = *(void *)(v0 + 312);
    uint64_t v109 = v36;
    return MEMORY[0x270FA2158](v0 + 192, v39, v36, 0, 0, &unk_26A8E6FD0, v37, v39);
  }
  else
  {
    uint64_t v51 = *(void *)(v0 + 424);
    uint64_t v101 = *(void *)(v0 + 416);
    uint64_t v105 = *(void *)(v0 + 408);
    uint64_t v52 = *(void *)(v0 + 392);
    uint64_t v86 = v52;
    uint64_t v90 = *(void *)(v0 + 272);
    uint64_t v91 = *(void *)(v0 + 280);
    int loga = *(_DWORD *)(v0 + 84);
    uint64_t v53 = *(void *)(v0 + 240);
    buf = *(uint8_t **)(v0 + 288);
    uint64_t v97 = *(void *)(v0 + 248);
    uint64_t v93 = *(void **)(v0 + 232);
    uint64_t v88 = *(void *)(v0 + 208);
    uint64_t v89 = *(void *)(v0 + 264);
    uint64_t v87 = *(void *)(v0 + 256);
    sub_260DC713C(v23 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generationState, v51, (uint64_t (*)(void))type metadata accessor for GenerationState);
    uint64_t v54 = v51 + *(int *)(v52 + 20);
    id v55 = v27;
    sub_260D90820(v54, &qword_26A8E67F8);
    uint64_t v56 = sub_260FE3110();
    uint64_t v57 = *(void *)(v56 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v54, v53, v56);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    uint64_t v58 = (__CVBuffer *)v55;
    size_t Width = CVPixelBufferGetWidth(v58);
    size_t Height = CVPixelBufferGetHeight(v58);
    LODWORD(v56) = CVPixelBufferGetPixelFormatType(v58);

    type metadata accessor for ResolvedImage.HiddenBufferData();
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_260FE7230;
    uint64_t v60 = v56;
    uint64_t v61 = v51 + *(int *)(v86 + 28);
    uint64_t v62 = type metadata accessor for GenerationRecipe(0);
    uint64_t v63 = v61 + *(int *)(v62 + 76);
    sub_260DC6EDC(*(void *)v63, *(void *)(v63 + 8), *(void *)(v63 + 16), *(void **)(v63 + 24));
    *(void *)uint64_t v63 = Width;
    *(void *)(v63 + 8) = Height;
    *(void *)(v63 + 16) = v60;
    *(void *)(v63 + 24) = v27;
    *(void *)(v63 + 32) = v59;
    uint64_t v64 = v61 + *(int *)(v62 + 40);
    *(_DWORD *)uint64_t v64 = 0;
    *(unsigned char *)(v64 + 4) = 0;
    sub_260DC713C(v51, v101, (uint64_t (*)(void))type metadata accessor for GenerationState);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v28 + 16);
    long long v66 = *(_OWORD *)(v28 + 48);
    long long v65 = *(_OWORD *)(v28 + 64);
    long long v67 = *(_OWORD *)(v28 + 32);
    *(unsigned char *)(v0 + 80) = *(unsigned char *)(v28 + 80);
    *(_OWORD *)(v0 + 48) = v66;
    *(_OWORD *)(v0 + 64) = v65;
    *(_OWORD *)(v0 + 32) = v67;
    sub_260DC713C(v101, v105, (uint64_t (*)(void))type metadata accessor for GenerationState);
    type metadata accessor for GenerativePlayground.GenerationTask();
    memset(v106, 0, 40);
    uint64_t v68 = swift_allocObject();
    swift_bridgeObjectRetain();
    sub_260DD814C(v0 + 16);
    sub_260DC8644(v89);
    swift_retain();
    swift_retain();
    swift_retain();
    id v69 = v93;
    *(void *)(v0 + 568) = sub_260DC52E8(v97, v87, loga, v105, (uint64_t)v106, v0 + 16, v89, v90, v93, v91, v88, (uint64_t)buf, v68);
    sub_260DC6C10(v101, (uint64_t (*)(void))type metadata accessor for GenerationState);
    uint64_t v70 = 0;
    uint64_t v71 = 0;
    if (v24 == 1)
    {
      uint64_t v72 = *(void *)(v0 + 384);
      uint64_t v73 = *(void *)(v0 + 360);
      uint64_t v74 = *(void *)(v0 + 368);
      (*(void (**)(uint64_t, void, uint64_t))(v74 + 16))(v72, *(void *)(v0 + 200), v73);
      unint64_t v75 = (*(unsigned __int8 *)(v74 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
      uint64_t v71 = swift_allocObject();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v74 + 32))(v71 + v75, v72, v73);
      uint64_t v70 = sub_260DD8184;
    }
    *(void *)(v0 + 584) = v71;
    *(void *)(v0 + 576) = v70;
    uint64_t v76 = (void *)swift_task_alloc();
    *(void *)(v0 + 592) = v76;
    *uint64_t v76 = v0;
    v76[1] = sub_260DA56AC;
    uint64_t v77 = *(void *)(v0 + 400);
    return sub_260F10D28(v77, (uint64_t)v70, v71);
  }
}

uint64_t sub_260DA56AC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 600) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_260DA66D4;
  }
  else
  {
    uint64_t v6 = *(void *)(v4 + 400);
    *(void *)(v4 + 608) = a1;
    sub_260DC6C10(v6, (uint64_t (*)(void))type metadata accessor for GenerationState);
    uint64_t v5 = sub_260DA57F4;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_260DA57F4()
{
  uint64_t v110 = v0;
  uint64_t v1 = *(void *)(v0 + 424);
  sub_260DC8E58(*(void *)(v0 + 576));
  swift_release();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for GenerationState);
  uint64_t v2 = *(void *)(v0 + 608);
  os_log_type_t v103 = *(char **)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 488);
  uint64_t v5 = *(void *)(v0 + 464);
  uint64_t v105 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
  uint64_t v7 = *(void *)(v0 + 440);
  uint64_t v6 = *(void *)(v0 + 448);
  sub_260DC713C(*(void *)(v0 + 504) + *(void *)(v0 + 528) + *(int *)(*(void *)(v0 + 312) + 20), *(void *)(v0 + 352), (uint64_t (*)(void))type metadata accessor for ImageProvenance);
  *(void *)uint64_t v7 = v3;
  *(void *)(v7 + 8) = v4;
  *(unsigned char *)(v7 + 16) = 0;
  uint64_t v8 = 1;
  swift_storeEnumTagMultiPayload();
  sub_260FE4540();
  v105(v5, v6);
  if (*(void *)(v2 + 16))
  {
    uint64_t v9 = *(unsigned __int8 *)(*(void *)(v0 + 320) + 80);
    sub_260DC713C(v2 + ((v9 + 32) & ~v9), *(void *)(v0 + 304), (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    uint64_t v8 = 0;
  }
  uint64_t v10 = *(void *)(v0 + 312);
  uint64_t v11 = *(void *)(v0 + 320);
  uint64_t v12 = *(void *)(v0 + 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v12, v8, 1, v10);
  swift_bridgeObjectRelease();
  int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10);
  int v14 = *(void **)(v0 + 536);
  if (v13 == 1)
  {
    uint64_t v15 = *(void *)(v0 + 352);
    uint64_t v16 = *(char **)(v0 + 304);
    swift_release();

    sub_260DC6C10(v15, (uint64_t (*)(void))type metadata accessor for ImageProvenance);
    sub_260D90820((uint64_t)v16, &qword_26A8E6FC8);
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 464);
    v106 = *(void (**)(uint64_t, os_log_t))(v0 + 472);
    uint64_t v4 = *(void *)(v0 + 440);
    uint64_t v16 = *(char **)(v0 + 352);
    os_log_t log = *(os_log_t *)(v0 + 448);
    uint64_t v19 = *(void *)(v0 + 336);
    uint64_t v18 = *(void *)(v0 + 344);
    uint64_t v20 = *(void *)(v0 + 328);
    sub_260DC79D4(*(void *)(v0 + 304), v19, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    uint64_t v21 = swift_task_alloc();
    uint64_t v22 = sub_260FE3110();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
    sub_260EFA890(4, v21, *(void *)&v16[*(int *)(v18 + 24)], 0, *(void *)&v16[*(int *)(v18 + 28)], v20);
    sub_260D90820(v21, &qword_26A8E67F8);
    swift_task_dealloc();
    sub_260DC713C(v20, v4, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    swift_storeEnumTagMultiPayload();
    sub_260FE4540();
    swift_release();

    v106(v17, log);
    sub_260DC6C10(v20, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260DC6C10(v19, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260DC6C10((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ImageProvenance);
  }
  uint64_t v23 = *(void *)(v0 + 512);
  uint64_t v24 = *(void *)(v0 + 216);
  if (v23 == *(void *)(v0 + 496))
  {
    swift_bridgeObjectRelease();
    sub_260FE4550();
LABEL_34:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v85 = *(uint64_t (**)(void))(v0 + 8);
    return v85();
  }
  if ((v24 & 0xC000000000000001) != 0)
  {
    uint64_t v25 = (char *)MEMORY[0x26122B4C0](*(void *)(v0 + 512));
  }
  else
  {
    uint64_t v25 = *(char **)(v24 + 8 * v23 + 32);
    swift_retain();
  }
  uint64_t v26 = v23 + 1;
  *(void *)(v0 + 504) = v25;
  *(void *)(v0 + 512) = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  sub_260EBEDD4();
  *(void *)(v0 + 520) = v103;
  if (v103)
  {
    uint64_t v16 = v103;
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v27 = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage;
  *(void *)(v0 + 528) = OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generatedImage;
  uint64_t v28 = (uint64_t)&v25[v27];
  uint64_t v29 = *(void **)&v25[v27];
  *(void *)(v0 + 536) = v29;
  if (v25[v27 + 8] != 2)
  {
    swift_bridgeObjectRelease();
    sub_260DC8E04();
    uint64_t v16 = (char *)swift_allocError();
    *int v42 = 1;
    swift_willThrow();
    swift_release();
LABEL_20:
    uint64_t v25 = (char *)sub_260F33D64(v16);
    *(void *)(v0 + 184) = v25;
    uint64_t v43 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
    if (swift_dynamicCast())
    {
      uint64_t v4 = *(void *)(v0 + 88);
      uint64_t v26 = *(void *)(v0 + 96);
      int v14 = *(void **)(v0 + 104);
      int v44 = *(unsigned __int8 *)(v0 + 112);
      if (v44 == 7)
      {
        if (qword_26A8E6118 == -1)
        {
LABEL_23:
          uint64_t v45 = sub_260FE3A10();
          __swift_project_value_buffer(v45, (uint64_t)qword_26A90FB90);
          swift_bridgeObjectRetain();
          uint64_t v46 = sub_260FE39F0();
          os_log_type_t v107 = sub_260FE4890();
          if (os_log_type_enabled(v46, v107))
          {
            int loga = v46;
            uint64_t v47 = (uint8_t *)swift_slowAlloc();
            uint64_t v98 = swift_slowAlloc();
            v109[0] = v98;
            buf = v47;
            *(_DWORD *)uint64_t v47 = 136446210;
            uint64_t v48 = swift_bridgeObjectRetain();
            uint64_t v49 = MEMORY[0x26122AC60](v48, &type metadata for GeneratorError.VersionTriple);
            unint64_t v51 = v50;
            sub_260DD7B58(v4, v26, (uint64_t)v14, 7);
            *(void *)(v0 + 168) = sub_260DB2844(v49, v51, v109);
            sub_260FE4AE0();
            swift_bridgeObjectRelease();
            sub_260DD7B58(v4, v26, (uint64_t)v14, 7);
            sub_260DD7B58(v4, v26, (uint64_t)v14, 7);
            uint64_t v46 = loga;
            _os_log_impl(&dword_260D82000, loga, v107, "Attempting to reset generator state due to model catalog asset mismatch: %{public}s", buf, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x26122CA00](v98, -1, -1);
            MEMORY[0x26122CA00](buf, -1, -1);
          }
          else
          {
            sub_260DD7B58(v4, v26, (uint64_t)v14, 7);
            sub_260DD7B58(v4, v26, (uint64_t)v14, 7);
          }

          uint64_t v52 = *(os_unfair_lock_s **)(*(void *)(v0 + 296) + 176);
          *(unsigned char *)(swift_task_alloc() + 16) = 1;
          uint64_t v53 = (uint64_t *)&v52[4];
          v52 += 6;
          os_unfair_lock_lock(v52);
          sub_260DD8D98(v53);
          os_unfair_lock_unlock(v52);
          swift_task_dealloc();
          goto LABEL_33;
        }
LABEL_38:
        swift_once();
        goto LABEL_23;
      }
      sub_260DD7B58(*(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), v44);
    }
LABEL_33:
    id v81 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v82 = *(void *)(v0 + 464);
    uint64_t v83 = *(void *)(v0 + 448);
    **(void **)(v0 + 440) = v25;
    swift_storeEnumTagMultiPayload();
    uint64_t v84 = v25;
    sub_260FE4540();
    v81(v82, v83);
    sub_260FE4550();

    goto LABEL_34;
  }
  uint64_t v30 = *(void *)(v0 + 224);
  if (*(unsigned char *)(v30 + 72))
  {
    uint64_t v31 = *(void *)(v0 + 320);
    uint64_t v32 = *(void *)(v0 + 232);
    uint64_t v33 = type metadata accessor for GenerativePlayground.GenerationTask();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D00);
    int v34 = *(_DWORD *)(v31 + 80);
    *(_DWORD *)(v0 + 116) = v34;
    unint64_t v35 = (v34 + 32) & ~(unint64_t)v34;
    uint64_t v36 = swift_allocObject();
    *(void *)(v0 + 544) = v36;
    *(_OWORD *)(v36 + 16) = xmmword_260FE7080;
    sub_260DC713C(v28, v36 + v35, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    id v37 = v29;
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A38);
    uint64_t v39 = (void *)swift_task_alloc();
    *(void *)(v0 + 552) = v39;
    v39[2] = v36;
    v39[3] = v33;
    v39[4] = v32;
    uint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 560) = v40;
    *uint64_t v40 = v0;
    v40[1] = sub_260DA469C;
    uint64_t v41 = *(void *)(v0 + 312);
    uint64_t v112 = v38;
    return MEMORY[0x270FA2158](v0 + 192, v41, v38, 0, 0, &unk_26A8E6FD0, v39, v41);
  }
  else
  {
    uint64_t v54 = *(void *)(v0 + 424);
    uint64_t v104 = *(void *)(v0 + 416);
    uint64_t v108 = *(void *)(v0 + 408);
    uint64_t v55 = *(void *)(v0 + 392);
    uint64_t v89 = v55;
    uint64_t v93 = *(void *)(v0 + 272);
    uint64_t v94 = *(void *)(v0 + 280);
    int logb = *(_DWORD *)(v0 + 84);
    uint64_t v56 = *(void *)(v0 + 240);
    bufa = *(uint8_t **)(v0 + 288);
    uint64_t v99 = *(void *)(v0 + 248);
    uint64_t v95 = *(void **)(v0 + 232);
    uint64_t v91 = *(void *)(v0 + 208);
    uint64_t v92 = *(void *)(v0 + 264);
    uint64_t v90 = *(void *)(v0 + 256);
    sub_260DC713C((uint64_t)&v25[OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground21PreviewRepresentation_generationState], v54, (uint64_t (*)(void))type metadata accessor for GenerationState);
    uint64_t v57 = v54 + *(int *)(v55 + 20);
    id v58 = v29;
    sub_260D90820(v57, &qword_26A8E67F8);
    uint64_t v59 = sub_260FE3110();
    uint64_t v60 = *(void *)(v59 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v57, v56, v59);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    uint64_t v61 = (__CVBuffer *)v58;
    size_t Width = CVPixelBufferGetWidth(v61);
    size_t Height = CVPixelBufferGetHeight(v61);
    LODWORD(v59) = CVPixelBufferGetPixelFormatType(v61);

    type metadata accessor for ResolvedImage.HiddenBufferData();
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_260FE7230;
    uint64_t v63 = v59;
    uint64_t v64 = v54 + *(int *)(v89 + 28);
    uint64_t v65 = type metadata accessor for GenerationRecipe(0);
    uint64_t v66 = v64 + *(int *)(v65 + 76);
    sub_260DC6EDC(*(void *)v66, *(void *)(v66 + 8), *(void *)(v66 + 16), *(void **)(v66 + 24));
    *(void *)uint64_t v66 = Width;
    *(void *)(v66 + 8) = Height;
    *(void *)(v66 + 16) = v63;
    *(void *)(v66 + 24) = v29;
    *(void *)(v66 + 32) = v62;
    uint64_t v67 = v64 + *(int *)(v65 + 40);
    *(_DWORD *)uint64_t v67 = 0;
    *(unsigned char *)(v67 + 4) = 0;
    sub_260DC713C(v54, v104, (uint64_t (*)(void))type metadata accessor for GenerationState);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v30 + 16);
    long long v69 = *(_OWORD *)(v30 + 48);
    long long v68 = *(_OWORD *)(v30 + 64);
    long long v70 = *(_OWORD *)(v30 + 32);
    *(unsigned char *)(v0 + 80) = *(unsigned char *)(v30 + 80);
    *(_OWORD *)(v0 + 48) = v69;
    *(_OWORD *)(v0 + 64) = v68;
    *(_OWORD *)(v0 + 32) = v70;
    sub_260DC713C(v104, v108, (uint64_t (*)(void))type metadata accessor for GenerationState);
    type metadata accessor for GenerativePlayground.GenerationTask();
    memset(v109, 0, 40);
    uint64_t v71 = swift_allocObject();
    swift_bridgeObjectRetain();
    sub_260DD814C(v0 + 16);
    sub_260DC8644(v92);
    swift_retain();
    swift_retain();
    swift_retain();
    id v72 = v95;
    *(void *)(v0 + 568) = sub_260DC52E8(v99, v90, logb, v108, (uint64_t)v109, v0 + 16, v92, v93, v95, v94, v91, (uint64_t)bufa, v71);
    sub_260DC6C10(v104, (uint64_t (*)(void))type metadata accessor for GenerationState);
    uint64_t v73 = 0;
    uint64_t v74 = 0;
    if (v26 == 1)
    {
      uint64_t v75 = *(void *)(v0 + 384);
      uint64_t v76 = *(void *)(v0 + 360);
      uint64_t v77 = *(void *)(v0 + 368);
      (*(void (**)(uint64_t, void, uint64_t))(v77 + 16))(v75, *(void *)(v0 + 200), v76);
      unint64_t v78 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      uint64_t v74 = swift_allocObject();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v77 + 32))(v74 + v78, v75, v76);
      uint64_t v73 = sub_260DD8184;
    }
    *(void *)(v0 + 584) = v74;
    *(void *)(v0 + 576) = v73;
    uint64_t v79 = (void *)swift_task_alloc();
    *(void *)(v0 + 592) = v79;
    *uint64_t v79 = v0;
    v79[1] = sub_260DA56AC;
    uint64_t v80 = *(void *)(v0 + 400);
    return sub_260F10D28(v80, (uint64_t)v73, v74);
  }
}

uint64_t sub_260DA66D4()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void **)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 424);
  sub_260DC8E58(*(void *)(v0 + 576));

  swift_release();
  swift_release();
  sub_260DC6C10(v2, (uint64_t (*)(void))type metadata accessor for GenerationState);
  uint64_t v3 = *(void **)(v0 + 600);
  uint64_t v4 = sub_260F33D64(v3);
  *(void *)(v0 + 184) = v4;
  id v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
  if (swift_dynamicCast())
  {
    uint64_t v7 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 104);
    int v9 = *(unsigned __int8 *)(v0 + 112);
    if (v9 == 7)
    {
      if (qword_26A8E6118 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_260FE3A10();
      __swift_project_value_buffer(v10, (uint64_t)qword_26A90FB90);
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_260FE39F0();
      os_log_type_t v12 = sub_260FE4890();
      if (os_log_type_enabled(v11, v12))
      {
        os_log_t log = v11;
        os_log_type_t type = v12;
        int v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        uint64_t v29 = v27;
        *(_DWORD *)int v13 = 136446210;
        uint64_t v14 = swift_bridgeObjectRetain();
        uint64_t v15 = MEMORY[0x26122AC60](v14, &type metadata for GeneratorError.VersionTriple);
        unint64_t v17 = v16;
        sub_260DD7B58(v7, v6, v8, 7);
        *(void *)(v0 + 168) = sub_260DB2844(v15, v17, &v29);
        sub_260FE4AE0();
        swift_bridgeObjectRelease();
        sub_260DD7B58(v7, v6, v8, 7);
        sub_260DD7B58(v7, v6, v8, 7);
        uint64_t v11 = log;
        _os_log_impl(&dword_260D82000, log, type, "Attempting to reset generator state due to model catalog asset mismatch: %{public}s", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x26122CA00](v27, -1, -1);
        MEMORY[0x26122CA00](v13, -1, -1);
      }
      else
      {
        sub_260DD7B58(v7, v6, v8, 7);
        sub_260DD7B58(v7, v6, v8, 7);
      }

      uint64_t v18 = *(os_unfair_lock_s **)(*(void *)(v0 + 296) + 176);
      *(unsigned char *)(swift_task_alloc() + 16) = 1;
      uint64_t v19 = (uint64_t *)&v18[4];
      v18 += 6;
      os_unfair_lock_lock(v18);
      sub_260DD8D98(v19);
      os_unfair_lock_unlock(v18);
      swift_task_dealloc();
    }
    else
    {
      sub_260DD7B58(*(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), v9);
    }
  }
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
  uint64_t v21 = *(void *)(v0 + 464);
  uint64_t v22 = *(void *)(v0 + 448);
  **(void **)(v0 + 440) = v4;
  swift_storeEnumTagMultiPayload();
  id v23 = v4;
  sub_260FE4540();
  v20(v21, v22);
  sub_260FE4550();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_260DA6C70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for GenerativePlayground.ImageGenerationEvent(0);
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for GenerationState();
  MEMORY[0x270FA5388](v12 - 8, v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for GenerativePlayground.GenerationEvent(0);
  MEMORY[0x270FA5388](v16, v17);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260DC713C(a2, (uint64_t)v19, type metadata accessor for GenerativePlayground.GenerationEvent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_260DC79D4((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GenerationState);
    sub_260DC713C((uint64_t)v15, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GenerationState);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70);
    sub_260FE4540();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v20 = (uint64_t (*)(void))type metadata accessor for GenerationState;
    uint64_t v21 = (uint64_t)v15;
  }
  else
  {
    uint64_t v20 = type metadata accessor for GenerativePlayground.GenerationEvent;
    uint64_t v21 = (uint64_t)v19;
  }
  return sub_260DC6C10(v21, v20);
}

uint64_t sub_260DA6F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v62 = a8;
  id v58 = a7;
  uint64_t v65 = a5;
  uint64_t v64 = a4;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F58);
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61, v15);
  uint64_t v60 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A50);
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67, v17);
  uint64_t v63 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for GenerationState();
  uint64_t v21 = MEMORY[0x270FA5388](v19 - 8, v20);
  uint64_t v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = *(void *)a1;
  uint64_t v56 = *(void *)(a1 + 8);
  int v55 = *(_DWORD *)(a1 + 16);
  uint64_t v24 = *a6;
  uint64_t v25 = *(int *)(v21 + 28);
  uint64_t v69 = a2;
  uint64_t v26 = a2 + v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  MEMORY[0x270FA5388](v27 - 8, v28);
  uint64_t v30 = (char *)&v50 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260D907BC(v26, (uint64_t)v30, &qword_26A8E67F8);
  uint64_t v31 = sub_260FE3110();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v53 = a10;
    uint64_t v68 = a9;
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v10 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__generationID, v30, v31);
    *(void *)(v10 + 16) = v24;
    uint64_t v52 = v10;
    uint64_t v54 = a3;
    sub_260D9D1B0(a3, v73);
    v74[0] = 0;
    v74[1] = 0;
    int v75 = 0;
    int64x2_t v76 = vdupq_n_s64(0x200uLL);
    char v77 = 0;
    uint64_t v78 = v24;
    char v79 = 1;
    int v80 = 0;
    char v81 = 1;
    uint64_t v34 = type metadata accessor for StatefulCanceller();
    uint64_t v35 = swift_allocObject();
    *(unsigned char *)(v35 + 16) = 0;
    uint64_t v71 = v34;
    id v72 = &off_270D1D7C0;
    *(void *)&long long v70 = v35;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F60);
    uint64_t v37 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F68);
    uint64_t v38 = swift_allocObject();
    *(_DWORD *)(v38 + 16) = 0;
    *(void *)(v37 + 56) = v38;
    *(void *)(v37 + 64) = 0;
    sub_260DD7B40(&v70, v37 + 16);
    uint64_t v39 = (uint64_t *)(v10
                    + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller);
    v39[3] = v36;
    v39[4] = (uint64_t)&off_270D1D7A8;
    *uint64_t v39 = v37;
    sub_260DC713C(v69, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for GenerationState);
    sub_260D90158((uint64_t)v73, (uint64_t)&v70);
    type metadata accessor for GenerativePlayground.GenerationTask();
    uint64_t v40 = swift_allocObject();
    swift_retain_n();
    uint64_t v41 = v64;
    uint64_t v42 = v65;
    sub_260DC8644(v64);
    uint64_t v43 = v58;
    unint64_t v51 = v58;
    uint64_t v44 = v62;
    swift_retain();
    uint64_t v45 = swift_retain();
    uint64_t v46 = sub_260DC52E8(v57, v56, v55, (uint64_t)v23, (uint64_t)&v70, (uint64_t)v74, v41, v42, v43, v44, v37, v45, v40);
    id v58 = &v50;
    MEMORY[0x270FA5388](v46, v47);
    type metadata accessor for GenerativePlayground.ImageGenerationEvent(0);
    (*(void (**)(char *, void, uint64_t))(v59 + 104))(v60, *MEMORY[0x263F8F580], v61);
    swift_retain();
    uint64_t v48 = v63;
    sub_260FE4560();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_260DC8E58(v41);
    sub_260D90820(v54, &qword_26A8E69D0);
    sub_260DC6C10(v69, (uint64_t (*)(void))type metadata accessor for GenerationState);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v73);
    swift_release();
    swift_release();
    uint64_t v49 = v52;
    (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v52 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession_eventStream, v48, v67);
    return v49;
  }
  return result;
}

uint64_t sub_260DA7540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  MEMORY[0x270FA5388](v8 - 8, v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12, v15);
  uint64_t v16 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v18 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v19 + v17, v16, v12);
  *(void *)(v19 + v18) = a2;
  uint64_t v20 = sub_260FE4520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 1, 1, v20);
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = 0;
  v21[3] = 0;
  v21[4] = a3;
  v21[5] = sub_260DD7954;
  v21[6] = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v22 = sub_260D9F7E4((uint64_t)v11, (uint64_t)&unk_26A8E6F80, (uint64_t)v21);
  swift_retain();
  sub_260FE4530();
  swift_beginAccess();
  uint64_t v23 = *(os_unfair_lock_s **)(a4 + 56);
  swift_retain_n();
  os_unfair_lock_lock(v23 + 4);
  if (*(void *)(a4 + 64))
  {
    uint64_t result = sub_260FE4E20();
    __break(1u);
  }
  else
  {
    *(void *)(a4 + 64) = v22;
    swift_retain();
    swift_retain();
    os_unfair_lock_unlock(v23 + 4);
    swift_endAccess();
    swift_release_n();
    swift_release();
    sub_260E98634();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_260DA7880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for GenerationState();
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GenerativePlayground.ImageGenerationEvent(0);
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA0);
  uint64_t v67 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v14);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for GenerativePlayground.GenerationEvent(0);
  MEMORY[0x270FA5388](v17, v18);
  uint64_t v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260DC713C(a2, (uint64_t)v20, type metadata accessor for GenerativePlayground.GenerationEvent);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_260DC79D4((uint64_t)v20, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenerationState);
      sub_260DC713C((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GenerationState);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70);
      sub_260FE4540();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v16, v13);
      sub_260DC6C10((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GenerationState);
      break;
    case 2u:
      uint64_t v22 = *(void **)v20;
      uint64_t v23 = sub_260F33D64(*(void **)v20);
      uint64_t v72 = (uint64_t)v23;
      id v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
      if (swift_dynamicCast())
      {
        uint64_t v66 = v22;
        uint64_t v26 = v68;
        uint64_t v25 = v69;
        if (v71 == 7)
        {
          uint64_t v65 = v70;
          if (qword_26A8E6118 != -1) {
            swift_once();
          }
          uint64_t v27 = sub_260FE3A10();
          uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)qword_26A90FB90);
          swift_bridgeObjectRetain();
          uint64_t v63 = v28;
          uint64_t v29 = sub_260FE39F0();
          os_log_type_t v30 = sub_260FE4890();
          LODWORD(v62) = v30;
          BOOL v31 = os_log_type_enabled(v29, v30);
          uint64_t v64 = a3;
          if (v31)
          {
            uint64_t v32 = (uint8_t *)swift_slowAlloc();
            uint64_t v61 = swift_slowAlloc();
            uint64_t v68 = v61;
            uint64_t v59 = v32;
            os_log_t v60 = v29;
            *(_DWORD *)uint64_t v32 = 136446210;
            id v58 = v32 + 4;
            uint64_t v33 = swift_bridgeObjectRetain();
            uint64_t v56 = MEMORY[0x26122AC60](v33, &type metadata for GeneratorError.VersionTriple);
            uint64_t v57 = v25;
            uint64_t v34 = v25;
            unint64_t v36 = v35;
            uint64_t v37 = v65;
            sub_260DD7B58(v26, v34, v65, 7);
            uint64_t v72 = sub_260DB2844(v56, v36, &v68);
            sub_260FE4AE0();
            swift_bridgeObjectRelease();
            uint64_t v38 = v57;
            sub_260DD7B58(v26, v57, v37, 7);
            sub_260DD7B58(v26, v38, v37, 7);
            uint64_t v40 = v59;
            os_log_t v39 = v60;
            _os_log_impl(&dword_260D82000, v60, (os_log_type_t)v62, "Attempting to reset generator state due to model catalog asset mismatch: %{public}s", v59, 0xCu);
            uint64_t v41 = v61;
            swift_arrayDestroy();
            MEMORY[0x26122CA00](v41, -1, -1);
            MEMORY[0x26122CA00](v40, -1, -1);
          }
          else
          {
            uint64_t v51 = v65;
            sub_260DD7B58(v26, v25, v65, 7);
            sub_260DD7B58(v26, v25, v51, 7);
          }
          MEMORY[0x270FA5388](v42, v43);
          *((unsigned char *)&v56 - 16) = 1;
          uint64_t v53 = (uint64_t *)&v52[4];
          uint64_t v54 = v52 + 6;
          os_unfair_lock_lock(v52 + 6);
          sub_260DD7BF8(v53);
          os_unfair_lock_unlock(v54);
        }
        else
        {
          sub_260DD7B58(v68, v69, v70, v71);
        }
        uint64_t v22 = v66;
      }
      *(void *)uint64_t v12 = v23;
      swift_storeEnumTagMultiPayload();
      id v55 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70);
      sub_260FE4540();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v16, v13);
      sub_260FE4550();

      break;
    case 3u:
      uint64_t v44 = *(void **)v20;
      uint64_t v45 = *(void *)(*(void *)v20 + 16);
      if (v45)
      {
        uint64_t v46 = *(void *)(type metadata accessor for GeneratedImage() - 8);
        uint64_t v47 = *(unsigned __int8 *)(v46 + 80);
        uint64_t v66 = v44;
        uint64_t v48 = (uint64_t)v44 + ((v47 + 32) & ~v47);
        uint64_t v49 = *(void *)(v46 + 72);
        uint64_t v50 = (void (**)(char *, uint64_t))(v67 + 8);
        do
        {
          sub_260DC713C(v48, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70);
          sub_260FE4540();
          (*v50)(v16, v13);
          v48 += v49;
          --v45;
        }
        while (v45);
      }
      swift_bridgeObjectRelease();
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70);
      sub_260FE4540();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v16, v13);
      sub_260FE4550();
      break;
    case 4u:
    case 5u:
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70);
      sub_260FE4540();
      goto LABEL_15;
    default:
      char v21 = v20[16];
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v20;
      v12[16] = v21;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70);
      sub_260FE4540();
      swift_bridgeObjectRelease();
LABEL_15:
      (*(void (**)(char *, uint64_t))(v67 + 8))(v16, v13);
      break;
  }
}

uint64_t sub_260DA81D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F90);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v6 + 16) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_260DA82C0;
  return sub_260F10D28(v9, a5, a6);
}

uint64_t sub_260DA82C0(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {

    uint64_t v5 = sub_260DA84BC;
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F98);
    *(void *)(v4 + 40) = v6;
    *(_DWORD *)(v4 + 48) = *(_DWORD *)(v6 + 48);
    uint64_t v5 = sub_260DA8400;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_260DA8400()
{
  *(void *)(*(void *)(v0 + 16) + *(int *)(v0 + 48)) = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 16);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(*(void *)(v0 + 40) - 8) + 56))(v1, 0, 1);
  sub_260D90820(v1, &qword_26A8E6F90);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_260DA84BC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F98);
  uint64_t v2 = *(void *)(v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))(v2, 1, 1, v1);
  sub_260D90820(v2, &qword_26A8E6F90);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_260DA8574(uint64_t a1, uint64_t a2, uint64_t *a3, const char *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (result != *MEMORY[0x263F8F540])
  {
    if (result == *MEMORY[0x263F8F548])
    {
      if (qword_26A8E6118 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_260FE3A10();
      __swift_project_value_buffer(v12, (uint64_t)qword_26A90FB90);
      uint64_t v13 = sub_260FE39F0();
      os_log_type_t v14 = sub_260FE48A0();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl(&dword_260D82000, v13, v14, a4, v15, 2u);
        MEMORY[0x26122CA00](v15, -1, -1);
      }

      return sub_260FE4580();
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
  return result;
}

uint64_t GenerativePlayground.ImageGenerationSession.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession_eventStream;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller);
  uint64_t v3 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__generationID;
  uint64_t v4 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t GenerativePlayground.ImageGenerationSession.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession_eventStream;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__sendableCanceller);
  uint64_t v3 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__generationID;
  uint64_t v4 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_260DA8930@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground22ImageGenerationSession__generationID;
  uint64_t v4 = sub_260FE3110();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_260DA89A8()
{
  return GenerativePlayground.ImageGenerationSession.isCancelled.getter() & 1;
}

void sub_260DA89D0()
{
}

uint64_t sub_260DA89F4()
{
  uint64_t v1 = sub_260FE5430();
  sub_260FE4250();
  sub_260FE3110();
  sub_260DD8CC8((unint64_t *)&qword_26A8E67B0, MEMORY[0x270FA9410]);
  sub_260FE5110();
  sub_260FE4250();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t GenerativePlayground.generateImages(from:generationID:)(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v3[8] = type metadata accessor for DefinitionSession();
  v3[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DA8B50, 0, 0);
}

uint64_t sub_260DA8B50()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 168);
  *(void *)(v0 + 80) = v1;
  return MEMORY[0x270FA2498](sub_260DA8B74, v1, 0);
}

uint64_t sub_260DA8B74()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DA8C18, 0, 0);
}

uint64_t sub_260DA8C18()
{
  uint64_t v38 = v0;
  uint64_t v1 = v0[6];
  uint64_t v2 = sub_260FE3110();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  uint64_t v5 = swift_task_alloc();
  sub_260D907BC(v1, v5, &qword_26A8E67F8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v5, 1, v2) == 1)
  {
    sub_260FE3100();
    sub_260D90820(v5, &qword_26A8E67F8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v5, v2);
  }
  uint64_t v7 = (int *)v0[8];
  uint64_t v6 = v0[9];
  uint64_t v8 = v0[7];
  swift_task_dealloc();
  uint64_t v9 = v6 + v7[5];
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  LODWORD(v9) = *(_DWORD *)(v9 + 16);
  v35[0] = v10;
  v35[1] = v11;
  int v36 = v9;
  uint64_t v12 = swift_task_alloc();
  uint64_t v31 = v4;
  uint64_t v32 = v2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v12, v4, v2);
  uint64_t v13 = (uint64_t *)(v6 + v7[6]);
  uint64_t v33 = v13[1];
  uint64_t v34 = *v13;
  uint64_t v37 = 1;
  os_log_type_t v14 = *(void **)(v6 + v7[10]);
  uint64_t v15 = *(void *)(v8 + 104);
  uint64_t v16 = v6 + v7[14];
  uint64_t v17 = *(unsigned __int8 *)(v16 + 56);
  int v18 = *(unsigned __int8 *)(v16 + 62);
  uint64_t v19 = 2;
  if (v17) {
    uint64_t v19 = 3;
  }
  if (v18) {
    uint64_t v20 = v19;
  }
  else {
    uint64_t v20 = v17;
  }
  uint64_t v21 = *(void *)(v6 + v7[13]);
  if (v20 == *(void *)(v21 + 24))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_260DC8644(v34);
    id v22 = v14;
    swift_retain();
  }
  else
  {
    uint64_t v23 = *(void **)(v21 + 16);
    *(void *)(v21 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_260DC8644(v34);
    id v24 = v14;
    swift_retain();

    *(void *)(v21 + 24) = v20;
  }
  uint64_t v25 = v0[9];
  uint64_t v26 = v0[7];
  uint64_t v27 = v0[5];
  type metadata accessor for GenerativePlayground.ImageGenerationSession(0);
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v28 = sub_260DA2D50(v35, v12, v27, v34, v33, &v37, v14, v15, v21, v26);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v31, v32);
  sub_260DC6C10(v25, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(uint64_t))v0[1];
  return v29(v28);
}

uint64_t GenerativePlayground.generateImages(options:generationID:)(uint64_t *a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  type metadata accessor for GenerationRecipe(0);
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for GenerationState();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = type metadata accessor for DefinitionSession();
  v3[18] = swift_task_alloc();
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *a1;
  v3[19] = v5;
  v3[20] = v6;
  return MEMORY[0x270FA2498](sub_260DA907C, 0, 0);
}

uint64_t sub_260DA907C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 88) + 168);
  *(void *)(v0 + 168) = v1;
  return MEMORY[0x270FA2498](sub_260DA90A0, v1, 0);
}

uint64_t sub_260DA90A0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 168) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DA9148, 0, 0);
}

uint64_t sub_260DA9148()
{
  uint64_t v64 = v0;
  uint64_t v1 = v0[10];
  uint64_t v2 = sub_260FE3110();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  uint64_t v5 = swift_task_alloc();
  sub_260D907BC(v1, v5, &qword_26A8E67F8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v5, 1, v2) == 1)
  {
    sub_260FE3100();
    sub_260D90820(v5, &qword_26A8E67F8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v5, v2);
  }
  uint64_t v6 = v2;
  uint64_t v7 = v4;
  uint64_t v9 = v0[18];
  uint64_t v8 = v0[19];
  uint64_t v10 = v0[15];
  uint64_t v52 = v8;
  uint64_t v53 = v0[16];
  uint64_t v11 = v0[13];
  uint64_t v54 = v0[14];
  uint64_t v49 = v11;
  uint64_t v50 = v0[17];
  uint64_t v51 = v0[12];
  swift_task_dealloc();
  sub_260DC713C(v8, v9, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v12 = swift_task_alloc();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  uint64_t v56 = v7;
  v13(v12, v7, v6);
  uint64_t v57 = v3;
  os_log_type_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v14(v12, 0, 1, v6);
  uint64_t v15 = v10 + *(int *)(v11 + 20);
  v14(v15, 1, 1, v6);
  uint64_t v58 = v6;
  v13(v10, v9, v6);
  sub_260DC6AB8(v12, v15);
  uint64_t v16 = (uint64_t *)(v9 + *(int *)(v50 + 20));
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  uint64_t v19 = (void *)(v10 + *(int *)(v49 + 24));
  *uint64_t v19 = v17;
  v19[1] = v18;
  sub_260DC713C(v9 + *(int *)(v50 + 56), v51, type metadata accessor for GenerationRecipe);
  swift_bridgeObjectRetain();
  sub_260DC6C10(v9, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  sub_260DC79D4(v51, v10 + *(int *)(v49 + 28), type metadata accessor for GenerationRecipe);
  sub_260DC79D4(v10, v53, (uint64_t (*)(void))type metadata accessor for GenerationState);
  swift_task_dealloc();
  uint64_t v20 = v52 + *(int *)(v50 + 20);
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  LODWORD(v20) = *(_DWORD *)(v20 + 16);
  v59[0] = v21;
  v59[1] = v22;
  int v60 = v20;
  sub_260DC713C(v53, v54, (uint64_t (*)(void))type metadata accessor for GenerationState);
  uint64_t v23 = v52 + *(int *)(v50 + 56);
  if (*(void *)(v23 + 8) == 0xD000000000000029 && *(void *)(v23 + 16) == 0x8000000260FFBD40
    || (sub_260FE5150() & 1) != 0)
  {
    id v24 = *(void **)(v0[19] + *(int *)(v0[17] + 40));
    uint64_t v25 = type metadata accessor for InputConditioner();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v24;
    v0[5] = v25;
    v0[6] = &off_270D1C6C8;
    v0[2] = v26;
    swift_bridgeObjectRetain();
    id v27 = v24;
    sub_260D9D288((uint64_t)(v0 + 2), (uint64_t *)v61);
    sub_260D90820((uint64_t)(v0 + 2), &qword_26A8E69D0);
  }
  else
  {
    uint64_t v62 = 0;
    memset(v61, 0, sizeof(v61));
    swift_bridgeObjectRetain();
  }
  uint64_t v28 = v0[19];
  uint64_t v29 = (int *)v0[17];
  uint64_t v30 = v0[11];
  uint64_t v31 = (uint64_t *)(v28 + v29[6]);
  uint64_t v32 = *v31;
  uint64_t v33 = v31[1];
  uint64_t v63 = v0[20];
  uint64_t v34 = *(void **)(v28 + v29[10]);
  uint64_t v35 = *(void *)(v30 + 104);
  uint64_t v36 = 2;
  if (*(unsigned char *)(v23 + 56)) {
    uint64_t v36 = 3;
  }
  if (*(unsigned char *)(v23 + 62)) {
    uint64_t v37 = v36;
  }
  else {
    uint64_t v37 = *(unsigned __int8 *)(v23 + 56);
  }
  uint64_t v38 = *(void *)(v28 + v29[13]);
  uint64_t v55 = v32;
  if (v37 == *(void *)(v38 + 24))
  {
    sub_260DC8644(v32);
    id v39 = v34;
    swift_retain();
  }
  else
  {
    uint64_t v40 = *(void **)(v38 + 16);
    *(void *)(v38 + 16) = 0;
    sub_260DC8644(v32);
    id v41 = v34;
    swift_retain();

    *(void *)(v38 + 24) = v37;
  }
  uint64_t v42 = v0[19];
  uint64_t v43 = v0[16];
  uint64_t v44 = v0[14];
  uint64_t v45 = v0[11];
  type metadata accessor for GenerativePlayground.ImageGenerationSession(0);
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v46 = sub_260DA6F00((uint64_t)v59, v44, (uint64_t)v61, v55, v33, &v63, (uint64_t *)v34, v35, v38, v45);
  sub_260DC6C10(v43, (uint64_t (*)(void))type metadata accessor for GenerationState);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
  sub_260DC6C10(v42, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v47 = (uint64_t (*)(uint64_t))v0[1];
  return v47(v46);
}

uint64_t GenerativePlayground.possibleImageScalings.getter()
{
  uint64_t v1 = (void *)sub_260DC8C94(MEMORY[0x263F8EE78]);
  long long v125 = xmmword_260FE7060;
  v126[3] = &type metadata for NoOpImageScaler;
  v126[4] = &off_270D1B678;
  uint64_t v2 = *(void **)(v0 + 96);
  uint64_t v3 = type metadata accessor for MediaAnalysisServiceImageScaler();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  v126[8] = v3;
  v126[9] = &off_270D1E218;
  v126[5] = v4;
  id v5 = v2;
  char v6 = 0;
  unint64_t v7 = 0;
  while (1)
  {
    if (v7 >= (unint64_t)v125) {
      goto LABEL_128;
    }
    char v112 = v6;
    sub_260D90158((uint64_t)&v126[5 * v7], (uint64_t)v122);
    uint64_t v8 = v123;
    uint64_t v9 = v124;
    __swift_project_boxed_opaque_existential_1(v122, v123);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    if (v10) {
      break;
    }
LABEL_3:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v122);
    char v6 = 1;
    unint64_t v7 = 1;
    if (v112)
    {
LABEL_120:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A78);
      swift_arrayDestroy();
      return (uint64_t)v1;
    }
  }
  uint64_t v11 = v10;
  int64_t v12 = 0;
  uint64_t v115 = v10 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & *(void *)(v10 + 64);
  int64_t v116 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v113 = v10;
  if (v15)
  {
LABEL_10:
    uint64_t v119 = (v15 - 1) & v15;
    unint64_t v16 = __clz(__rbit64(v15)) | (v12 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    BOOL v17 = __OFADD__(v12++, 1);
    if (v17) {
      break;
    }
    if (v12 >= v116) {
      goto LABEL_2;
    }
    unint64_t v18 = *(void *)(v115 + 8 * v12);
    if (!v18)
    {
      int64_t v19 = v12 + 1;
      if (v12 + 1 >= v116) {
        goto LABEL_2;
      }
      unint64_t v18 = *(void *)(v115 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = v12 + 2;
        if (v12 + 2 >= v116) {
          goto LABEL_2;
        }
        unint64_t v18 = *(void *)(v115 + 8 * v19);
        if (!v18)
        {
          int64_t v19 = v12 + 3;
          if (v12 + 3 >= v116)
          {
LABEL_2:
            swift_release();
            goto LABEL_3;
          }
          unint64_t v18 = *(void *)(v115 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v12 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_127;
              }
              if (v12 >= v116) {
                goto LABEL_2;
              }
              unint64_t v18 = *(void *)(v115 + 8 * v12);
              ++v19;
              if (v18) {
                goto LABEL_21;
              }
            }
          }
        }
      }
      int64_t v12 = v19;
    }
LABEL_21:
    uint64_t v119 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_22:
    uint64_t v20 = *(void *)(*(void *)(v11 + 56) + 8 * v16);
    long long v120 = *(_OWORD *)(*(void *)(v11 + 48) + 16 * v16);
    uint64_t v21 = *(void *)(*(void *)(v11 + 48) + 16 * v16 + 8);
    if (v1[2] && (unint64_t v22 = sub_260DBB2E4(v120, v21), (v23 & 1) != 0))
    {
      uint64_t v117 = v21;
      uint64_t v24 = *(void *)(v1[7] + 8 * v22);
      sub_260DC8DAC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_260FE46F0();
      uint64_t v26 = *(void *)(v24 + 16);
      int64_t v118 = v12;
      uint64_t v114 = v20;
      if (v26)
      {
        uint64_t v27 = 0;
        uint64_t v28 = v24 + 32;
        while (2)
        {
          uint64_t v29 = v25 + 56;
          while (1)
          {
            uint64_t v30 = (uint64_t *)(v28 + 16 * v27);
            uint64_t v31 = *v30;
            uint64_t v32 = v30[1];
            ++v27;
            sub_260FE52F0();
            sub_260FE5300();
            sub_260FE5300();
            uint64_t v33 = sub_260FE5340();
            uint64_t v34 = -1 << *(unsigned char *)(v25 + 32);
            unint64_t v35 = v33 & ~v34;
            if (((*(void *)(v29 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0) {
              break;
            }
            uint64_t v36 = ~v34;
            while (1)
            {
              uint64_t v37 = (uint64_t *)(*(void *)(v25 + 48) + 16 * v35);
              uint64_t v39 = *v37;
              uint64_t v38 = v37[1];
              if (v39 == v31 && v38 == v32) {
                break;
              }
              unint64_t v35 = (v35 + 1) & v36;
              if (((*(void *)(v29 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0) {
                goto LABEL_37;
              }
            }
            if (v27 == v26) {
              goto LABEL_52;
            }
          }
LABEL_37:
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if (*(void *)(v25 + 24) <= *(void *)(v25 + 16))
          {
            if (isUniquelyReferenced_nonNull_native) {
              sub_260DB3B88();
            }
            else {
              sub_260DB9BA8();
            }
            sub_260FE52F0();
            sub_260FE5300();
            sub_260FE5300();
            uint64_t v42 = sub_260FE5340();
            uint64_t v43 = -1 << *(unsigned char *)(v25 + 32);
            unint64_t v35 = v42 & ~v43;
            if ((*(void *)(v25 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35))
            {
              uint64_t v44 = ~v43;
              do
              {
                uint64_t v45 = (uint64_t *)(*(void *)(v25 + 48) + 16 * v35);
                uint64_t v47 = *v45;
                uint64_t v46 = v45[1];
                if (v47 == v31 && v46 == v32) {
                  goto LABEL_129;
                }
                unint64_t v35 = (v35 + 1) & v44;
              }
              while (((*(void *)(v25 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) != 0);
            }
          }
          else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_260DB88C4();
          }
          *(void *)(v25 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v35;
          uint64_t v49 = (void *)(*(void *)(v25 + 48) + 16 * v35);
          *uint64_t v49 = v31;
          v49[1] = v32;
          uint64_t v50 = *(void *)(v25 + 16);
          BOOL v17 = __OFADD__(v50, 1);
          uint64_t v51 = v50 + 1;
          if (v17)
          {
            __break(1u);
LABEL_119:
            __break(1u);
            goto LABEL_120;
          }
          *(void *)(v25 + 16) = v51;
          swift_bridgeObjectRelease();
          if (v27 != v26) {
            continue;
          }
          break;
        }
LABEL_52:
        swift_bridgeObjectRelease();
        int64_t v12 = v118;
        uint64_t v20 = v114;
        uint64_t v52 = *(void *)(v114 + 16);
        if (!v52) {
          goto LABEL_98;
        }
LABEL_53:
        uint64_t v53 = 0;
        uint64_t v54 = v20 + 32;
        do
        {
          uint64_t v55 = v25 + 56;
          while (1)
          {
            uint64_t v56 = (uint64_t *)(v54 + 16 * v53);
            uint64_t v57 = *v56;
            uint64_t v58 = v56[1];
            ++v53;
            sub_260FE52F0();
            sub_260FE5300();
            sub_260FE5300();
            uint64_t v59 = sub_260FE5340();
            uint64_t v60 = -1 << *(unsigned char *)(v25 + 32);
            unint64_t v61 = v59 & ~v60;
            if (((*(void *)(v55 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61) & 1) == 0) {
              break;
            }
            uint64_t v62 = ~v60;
            while (1)
            {
              uint64_t v63 = (uint64_t *)(*(void *)(v25 + 48) + 16 * v61);
              uint64_t v65 = *v63;
              uint64_t v64 = v63[1];
              if (v65 == v57 && v64 == v58) {
                break;
              }
              unint64_t v61 = (v61 + 1) & v62;
              if (((*(void *)(v55 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61) & 1) == 0) {
                goto LABEL_65;
              }
            }
            if (v53 == v52) {
              goto LABEL_80;
            }
          }
LABEL_65:
          int v67 = swift_isUniquelyReferenced_nonNull_native();
          if (*(void *)(v25 + 24) <= *(void *)(v25 + 16))
          {
            if (v67) {
              sub_260DB3B88();
            }
            else {
              sub_260DB9BA8();
            }
            sub_260FE52F0();
            sub_260FE5300();
            sub_260FE5300();
            uint64_t v68 = sub_260FE5340();
            uint64_t v69 = -1 << *(unsigned char *)(v25 + 32);
            unint64_t v61 = v68 & ~v69;
            if ((*(void *)(v25 + 56 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61))
            {
              uint64_t v70 = ~v69;
              do
              {
                char v71 = (uint64_t *)(*(void *)(v25 + 48) + 16 * v61);
                uint64_t v73 = *v71;
                uint64_t v72 = v71[1];
                if (v73 == v57 && v72 == v58) {
                  goto LABEL_129;
                }
                unint64_t v61 = (v61 + 1) & v70;
              }
              while (((*(void *)(v25 + 56 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61) & 1) != 0);
            }
          }
          else if ((v67 & 1) == 0)
          {
            sub_260DB88C4();
          }
          *(void *)(v25 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v61;
          int v75 = (void *)(*(void *)(v25 + 48) + 16 * v61);
          *int v75 = v57;
          v75[1] = v58;
          uint64_t v76 = *(void *)(v25 + 16);
          BOOL v17 = __OFADD__(v76, 1);
          uint64_t v77 = v76 + 1;
          if (v17) {
            goto LABEL_119;
          }
          *(void *)(v25 + 16) = v77;
          swift_bridgeObjectRelease();
        }
        while (v53 != v52);
LABEL_80:
        swift_bridgeObjectRelease();
        int64_t v12 = v118;
        uint64_t v78 = *(void *)(v25 + 16);
        if (!v78) {
          goto LABEL_99;
        }
        goto LABEL_81;
      }
      swift_bridgeObjectRelease();
      uint64_t v52 = *(void *)(v20 + 16);
      if (v52) {
        goto LABEL_53;
      }
LABEL_98:
      swift_bridgeObjectRelease();
      uint64_t v78 = *(void *)(v25 + 16);
      if (!v78)
      {
LABEL_99:
        swift_bridgeObjectRetain();
        uint64_t v79 = MEMORY[0x263F8EE78];
        goto LABEL_100;
      }
LABEL_81:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A88);
      uint64_t v79 = swift_allocObject();
      int64_t v80 = _swift_stdlib_malloc_size((const void *)v79);
      uint64_t v81 = v80 - 32;
      if (v80 < 32) {
        uint64_t v81 = v80 - 17;
      }
      *(void *)(v79 + 16) = v78;
      *(void *)(v79 + 24) = 2 * (v81 >> 4);
      uint64_t v82 = sub_260DC45B8(&v121, (_OWORD *)(v79 + 32), v78, v25);
      swift_bridgeObjectRetain_n();
      sub_260DD782C();
      if (v82 != (void *)v78) {
        goto LABEL_125;
      }
      swift_bridgeObjectRelease();
      int64_t v12 = v118;
LABEL_100:
      v121 = (void *)v79;
      sub_260DB06E4((uint64_t *)&v121);
      swift_bridgeObjectRelease();
      uint64_t v97 = (uint64_t)v121;
      swift_bridgeObjectRelease();
      char v98 = swift_isUniquelyReferenced_nonNull_native();
      v121 = v1;
      unint64_t v100 = sub_260DBB2E4(v120, v117);
      uint64_t v101 = v1[2];
      BOOL v102 = (v99 & 1) == 0;
      uint64_t v103 = v101 + v102;
      if (__OFADD__(v101, v102)) {
        goto LABEL_124;
      }
      char v104 = v99;
      if (v1[3] >= v103)
      {
        long long v107 = v120;
        if (v98) {
          goto LABEL_106;
        }
        sub_260DC2610();
      }
      else
      {
        sub_260DBEE58(v103, v98);
        unint64_t v105 = sub_260DBB2E4(v120, v117);
        if ((v104 & 1) != (v106 & 1)) {
          goto LABEL_130;
        }
        unint64_t v100 = v105;
      }
      long long v107 = v120;
LABEL_106:
      uint64_t v1 = v121;
      if (v104)
      {
        uint64_t v108 = v121[7];
        swift_bridgeObjectRelease();
        *(void *)(v108 + 8 * v100) = v97;
      }
      else
      {
        v121[(v100 >> 6) + 8] |= 1 << v100;
        *(_OWORD *)(v1[6] + 16 * v100) = v107;
        *(void *)(v1[7] + 8 * v100) = v97;
        uint64_t v109 = v1[2];
        BOOL v17 = __OFADD__(v109, 1);
        uint64_t v110 = v109 + 1;
        if (v17) {
          goto LABEL_126;
        }
        v1[2] = v110;
      }
      swift_bridgeObjectRelease();
      uint64_t v11 = v113;
      unint64_t v15 = v119;
      if (v119) {
        goto LABEL_10;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      char v83 = swift_isUniquelyReferenced_nonNull_native();
      v121 = v1;
      uint64_t v84 = v21;
      unint64_t v86 = sub_260DBB2E4(v120, v21);
      uint64_t v87 = v1[2];
      BOOL v88 = (v85 & 1) == 0;
      uint64_t v89 = v87 + v88;
      if (__OFADD__(v87, v88))
      {
        __break(1u);
        break;
      }
      char v90 = v85;
      if (v1[3] >= v89)
      {
        long long v93 = v120;
        if (v83) {
          goto LABEL_91;
        }
        sub_260DC2610();
      }
      else
      {
        sub_260DBEE58(v89, v83);
        unint64_t v91 = sub_260DBB2E4(v120, v84);
        if ((v90 & 1) != (v92 & 1)) {
          goto LABEL_130;
        }
        unint64_t v86 = v91;
      }
      long long v93 = v120;
LABEL_91:
      uint64_t v1 = v121;
      if (v90)
      {
        uint64_t v94 = v121[7];
        swift_bridgeObjectRelease();
        *(void *)(v94 + 8 * v86) = v20;
      }
      else
      {
        v121[(v86 >> 6) + 8] |= 1 << v86;
        *(_OWORD *)(v1[6] + 16 * v86) = v93;
        *(void *)(v1[7] + 8 * v86) = v20;
        uint64_t v95 = v1[2];
        BOOL v17 = __OFADD__(v95, 1);
        uint64_t v96 = v95 + 1;
        if (v17) {
          goto LABEL_123;
        }
        v1[2] = v96;
      }
      swift_bridgeObjectRelease();
      unint64_t v15 = v119;
      if (v119) {
        goto LABEL_10;
      }
    }
  }
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  sub_260FE5270();
  __break(1u);
LABEL_130:
  sub_260FE5280();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_260DAA168(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CD8);
  uint64_t v2 = sub_260FE4E80();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_260D907BC(v6, (uint64_t)v15, &qword_26A8E6CE0);
    unint64_t result = sub_260DBAEA0((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_260D906FC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAA2AC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CC0);
  uint64_t v2 = sub_260FE4E80();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_260D907BC(v6, (uint64_t)&v13, &qword_26A8E6CC8);
    uint64_t v7 = v13;
    unint64_t result = sub_260DBAE1C(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_260D906FC(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAA3DC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E00);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    uint64_t v7 = (void *)swift_bridgeObjectRetain();
    unint64_t result = sub_260DBAEE4(v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v5;
    *(void *)(v2[7] + v10) = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAA4DC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D58);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_260DBACB4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAA5F0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D28);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_260DBAD2C(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAA6F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D30);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *((unsigned __int8 *)v4 - 8);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_260DBB4F4(v5, (void (*)(unsigned char *, uint64_t))sub_260DB0374, (uint64_t (*)(uint64_t, uint64_t))sub_260DBB69C);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAA820(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DD0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CF8);
  uint64_t v7 = sub_260FE4E80();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)&v6[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_260D907BC(v13, (uint64_t)v6, &qword_26A8E6DD0);
    char v15 = *v6;
    unint64_t result = sub_260DBB068(*v6);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v8[6] + result) = v15;
    uint64_t v19 = v8[7];
    uint64_t v20 = type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(0);
    unint64_t result = sub_260DC79D4(v10, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry);
    uint64_t v21 = v8[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAAA14(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D10);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_260DBACB4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    unint64_t v12 = (void *)(v2[7] + 16 * result);
    *unint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAAB38(uint64_t a1)
{
  return sub_260DAB070(a1, &qword_26A8E6D38, &qword_26A8E6D40);
}

unint64_t sub_260DAAB4C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CB8);
  uint64_t v2 = sub_260FE4E80();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v20 = v2 + 64;
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v6 = *(v5 - 1);
    uint64_t v7 = *v5;
    uint64_t v8 = v5[1];
    uint64_t v9 = v5[2];
    uint64_t v10 = v5[3];
    uint64_t v11 = (void *)v5[4];
    uint64_t v12 = v5[5];
    swift_bridgeObjectRetain();
    sub_260DC71A4(v8, v9, v10, v11);
    unint64_t result = sub_260DBACB4(v6, v7);
    if (v14) {
      break;
    }
    *(void *)(v20 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v15 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v15 = v6;
    v15[1] = v7;
    uint64_t v16 = (uint64_t *)(v3[7] + 40 * result);
    uint64_t *v16 = v8;
    v16[1] = v9;
    v16[2] = v10;
    v16[3] = (uint64_t)v11;
    v16[4] = v12;
    uint64_t v17 = v3[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v3[2] = v19;
    v5 += 7;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAACA8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CB0);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_260DBACB4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAADC4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F00);
  uint64_t v2 = sub_260FE4E80();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_260D907BC(v6, (uint64_t)&v15, &qword_26A8E6F08);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_260DBACB4(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_260DD7C14((uint64_t)&v17, v3[7] + 32 * result, (uint64_t *)&unk_26A8EA270);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAAF10(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D18);
  uint64_t v2 = sub_260FE4E80();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_260D907BC(v6, (uint64_t)&v15, &qword_26A8E6D20);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_260DBACB4(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_260D906FC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAB048(uint64_t a1)
{
  return sub_260DAB070(a1, &qword_26A8E6D68, &qword_26A8E6D70);
}

unint64_t sub_260DAB05C(uint64_t a1)
{
  return sub_260DAB070(a1, &qword_26A8E6CE8, &qword_26A8E6CF0);
}

unint64_t sub_260DAB070(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v6 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_260FE4E80();
  uint64_t v6 = (void *)v5;
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v6;
  }
  uint64_t v8 = v5 + 64;
  uint64_t v9 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_260D907BC(v9, (uint64_t)&v16, a3);
    uint64_t v10 = v16;
    unint64_t result = sub_260DBB368(v16);
    if (v12) {
      break;
    }
    *(void *)(v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v6[6] + 8 * result) = v10;
    unint64_t result = (unint64_t)sub_260D906FC(&v17, (_OWORD *)(v6[7] + 32 * result));
    uint64_t v13 = v6[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    void v6[2] = v15;
    v9 += 40;
    if (!--v7)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAB198(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D50);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_260DBACB4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    char v12 = (void *)(v2[7] + 16 * result);
    *char v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260DAB2BC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D08);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_260DBACB4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t GenerativePlayground.possibleImageScalingDimensions(for:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  long long v42 = xmmword_260FE7060;
  v43[3] = &type metadata for NoOpImageScaler;
  v43[4] = &off_270D1B678;
  uint64_t v4 = *(void **)(v1 + 96);
  uint64_t v5 = type metadata accessor for MediaAnalysisServiceImageScaler();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  v43[8] = v5;
  v43[9] = &off_270D1E218;
  v43[5] = v6;
  id v7 = v4;
  char v8 = 0;
  unint64_t v9 = 0;
  uint64_t v10 = MEMORY[0x263F8EE88];
  uint64_t v40 = v2;
  uint64_t v39 = v3;
  while (1)
  {
    char v11 = v8;
    if (v9 >= (unint64_t)v42) {
      break;
    }
    BOOL v12 = &v43[5 * v9];
    uint64_t v13 = v12[3];
    uint64_t v14 = v12[4];
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
    if (v15)
    {
      uint64_t v16 = v15;
      if (*(void *)(v15 + 16)
        && (unint64_t v17 = sub_260DBB2E4(v2, v3), (v18 & 1) != 0)
        && (uint64_t v19 = *(void *)(*(void *)(v16 + 56) + 8 * v17),
            swift_bridgeObjectRetain(),
            swift_bridgeObjectRelease(),
            (uint64_t v20 = *(void *)(v19 + 16)) != 0))
      {
        uint64_t v21 = 0;
        uint64_t v22 = v19 + 32;
        uint64_t v23 = v10 + 56;
        do
        {
          while (1)
          {
            uint64_t v24 = (uint64_t *)(v22 + 16 * v21);
            uint64_t v25 = *v24;
            uint64_t v26 = v24[1];
            ++v21;
            sub_260FE52F0();
            sub_260FE5300();
            sub_260FE5300();
            uint64_t v27 = sub_260FE5340();
            uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
            unint64_t v29 = v27 & ~v28;
            if ((*(void *)(v23 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29)) {
              break;
            }
LABEL_18:
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v41[0] = v10;
            sub_260DB7D9C(v25, v26, v29, isUniquelyReferenced_nonNull_native);
            swift_bridgeObjectRelease();
            if (v21 == v20) {
              goto LABEL_2;
            }
            uint64_t v23 = v10 + 56;
          }
          uint64_t v30 = ~v28;
          while (1)
          {
            uint64_t v31 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v29);
            uint64_t v33 = *v31;
            uint64_t v32 = v31[1];
            if (v33 == v25 && v32 == v26) {
              break;
            }
            unint64_t v29 = (v29 + 1) & v30;
            if (((*(void *)(v23 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
              goto LABEL_18;
            }
          }
        }
        while (v21 != v20);
LABEL_2:
        swift_bridgeObjectRelease();
        uint64_t v2 = v40;
        uint64_t v3 = v39;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    char v8 = 1;
    unint64_t v9 = 1;
    if (v11)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A78);
      swift_arrayDestroy();
      swift_bridgeObjectRetain_n();
      uint64_t v36 = sub_260DBA678(v10, &qword_26A8E6A88, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_260DC45B8);
      swift_bridgeObjectRelease();
      v41[0] = (uint64_t)v36;
      sub_260DB06E4(v41);
      swift_bridgeObjectRelease();
      uint64_t v37 = v41[0];
      swift_bridgeObjectRelease();
      return v37;
    }
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t GenerativePlayground.scale(_:to:)(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  *(void *)(v4 + 176) = a2;
  *(void *)(v4 + 184) = v3;
  *(void *)(v4 + 168) = a1;
  *(void *)(v4 + 192) = type metadata accessor for DefinitionSession();
  *(void *)(v4 + 200) = swift_task_alloc();
  type metadata accessor for ImageProvenance();
  *(void *)(v4 + 208) = swift_task_alloc();
  *(_OWORD *)(v4 + 216) = *a3;
  return MEMORY[0x270FA2498](sub_260DAB7A8, 0, 0);
}

uint64_t sub_260DAB7A8()
{
  uint64_t v1 = (unsigned char *)v0[26];
  uint64_t v2 = v0[22];
  uint64_t v3 = type metadata accessor for GeneratedImage();
  sub_260DC713C(v2 + *(int *)(v3 + 20), (uint64_t)v1, (uint64_t (*)(void))type metadata accessor for ImageProvenance);
  if (*v1 == 1)
  {
    sub_260FE45B0();
    v0[29] = 0;
    uint64_t v8 = *(void *)(v0[23] + 168);
    v0[30] = v8;
    return MEMORY[0x270FA2498](sub_260DAB908, v8, 0);
  }
  else
  {
    uint64_t v4 = v0[26];
    sub_260DC8E04();
    swift_allocError();
    *uint64_t v5 = 1;
    swift_willThrow();
    sub_260DC6C10(v4, (uint64_t (*)(void))type metadata accessor for ImageProvenance);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_260DAB908()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 240) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DAB9B0, 0, 0);
}

uint64_t sub_260DAB9B0()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = v1 + *(int *)(*(void *)(v0 + 192) + 56);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 56);
  int v4 = *(unsigned __int8 *)(v2 + 62);
  uint64_t v5 = 2;
  if (v3) {
    uint64_t v5 = 3;
  }
  if (v4) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = v3;
  }
  uint64_t v7 = *(void *)(v1 + *(int *)(*(void *)(v0 + 192) + 52));
  *(void *)(v0 + 248) = v7;
  if (v6 != *(void *)(v7 + 24))
  {
    uint64_t v8 = *(void **)(v7 + 16);
    *(void *)(v7 + 16) = 0;

    *(void *)(v7 + 24) = v6;
  }
  uint64_t v9 = *(void *)(v0 + 232);
  uint64_t v10 = *(void *)(v0 + 176);
  swift_retain();
  sub_260DF0978(v10, 0, &v23);
  if (v9)
  {
    uint64_t v12 = *(void *)(v0 + 200);
    uint64_t v11 = *(void *)(v0 + 208);
    swift_release();
    sub_260DC6C10(v12, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    sub_260DC6C10(v11, (uint64_t (*)(void))type metadata accessor for ImageProvenance);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_260FE45B0();
    uint64_t v15 = *(void *)(v0 + 184);
    *(_OWORD *)(v0 + 152) = *(_OWORD *)(v0 + 216);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6AA0);
    uint64_t inited = swift_initStackObject();
    *(void *)(v0 + 256) = inited;
    *(_OWORD *)(inited + 16) = xmmword_260FE7060;
    *(void *)(inited + 56) = &type metadata for NoOpImageScaler;
    *(void *)(inited + 64) = &off_270D1B678;
    unint64_t v17 = *(void **)(v15 + 96);
    uint64_t v18 = type metadata accessor for MediaAnalysisServiceImageScaler();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v17;
    *(void *)(inited + 96) = v18;
    *(void *)(inited + 104) = &off_270D1E218;
    *(void *)(inited + 72) = v19;
    id v20 = v17;
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_260DABBF4;
    uint64_t v22 = *(void *)(v0 + 168);
    return sub_260E84E10(v22, (_OWORD *)(v0 + 152), inited);
  }
}

uint64_t sub_260DABBF4()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A78);
  swift_arrayDestroy();
  if (v0) {
    uint64_t v2 = sub_260DABF34;
  }
  else {
    uint64_t v2 = sub_260DABD68;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260DABD68()
{
  uint64_t v10 = v0;
  uint64_t v1 = v0[34];
  sub_260FE45B0();
  if (v1)
  {
    uint64_t v3 = v0[25];
    uint64_t v2 = v0[26];
    uint64_t v4 = v0[21];
    swift_release();
    sub_260DC6C10(v4, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260DC6C10(v3, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    sub_260DC6C10(v2, (uint64_t (*)(void))type metadata accessor for ImageProvenance);
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    sub_260DF0978(v0[21], 0, &v9);
    uint64_t v5 = v0[25];
    uint64_t v6 = v0[26];
    swift_release();
    swift_bridgeObjectRelease();
    sub_260DC6C10(v5, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    sub_260DC6C10(v6, (uint64_t (*)(void))type metadata accessor for ImageProvenance);
    swift_task_dealloc();
    swift_task_dealloc();
  }
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_260DABF34()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  swift_release();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  sub_260DC6C10(v2, (uint64_t (*)(void))type metadata accessor for ImageProvenance);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t GenerativePlayground.ideallyScaled(_:)(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v3[10] = type metadata accessor for DefinitionSession();
  v3[11] = swift_task_alloc();
  type metadata accessor for GeneratedImage();
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DAC0A8, 0, 0);
}

uint64_t sub_260DAC0A8()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void **)v1;
  *(void *)(v0 + 104) = *(void *)v1;
  int v3 = *(unsigned __int8 *)(v1 + 8);
  if (v3)
  {
    if (v3 == 1)
    {
      uint64_t v4 = (uint64_t (*)())objc_msgSend(v2, sel_extent);
      if (v7 <= -9.22337204e18)
      {
        __break(1u);
      }
      else if (v7 < 9.22337204e18)
      {
        if ((*(void *)&v7 & 0x7FF0000000000000) != 0x7FF0000000000000
          && (*(void *)&v8 & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (v8 > -9.22337204e18)
          {
            if (v8 < 9.22337204e18)
            {
              size_t Width = (uint64_t)v7;
              uint64_t v11 = (uint64_t)v8;
              goto LABEL_15;
            }
LABEL_26:
            __break(1u);
            return MEMORY[0x270FA2498](v4, v5, v6);
          }
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v12 = v2;
    size_t Width = CVPixelBufferGetWidth(v12);
    size_t Height = CVPixelBufferGetHeight(v12);
  }
  else
  {
    uint64_t v12 = v2;
    size_t Width = CGImageGetWidth(v12);
    size_t Height = CGImageGetHeight(v12);
  }
  uint64_t v11 = Height;

LABEL_15:
  v21[0] = Width;
  v21[1] = v11;
  v21[0] = GenerativePlayground.possibleImageScalingDimensions(for:)(v21);
  swift_bridgeObjectRetain();
  sub_260DB06E4(v21);
  *(void *)(v0 + 112) = 0;
  swift_bridgeObjectRelease();
  if (!*(void *)(v21[0] + 16))
  {
    uint64_t v20 = *(void *)(v0 + 72);
    swift_release();
    uint64_t v5 = *(void *)(v20 + 168);
    *(void *)(v0 + 136) = v5;
    uint64_t v4 = sub_260DAC4C8;
    uint64_t v6 = 0;
    return MEMORY[0x270FA2498](v4, v5, v6);
  }
  uint64_t v14 = *(void *)(v21[0] + 32);
  uint64_t v15 = *(void *)(v21[0] + 40);
  swift_release();
  *(void *)(v0 + 40) = v14;
  *(void *)(v0 + 48) = v15;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v16;
  void *v16 = v0;
  v16[1] = sub_260DAC31C;
  uint64_t v17 = *(void *)(v0 + 96);
  uint64_t v18 = *(void *)(v0 + 64);
  return GenerativePlayground.scale(_:to:)(v17, v18, (_OWORD *)(v0 + 40));
}

uint64_t sub_260DAC31C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_260DAC6FC;
  }
  else {
    uint64_t v2 = sub_260DAC430;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260DAC430()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 56);

  sub_260DC79D4(v1, v2, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  swift_task_dealloc();
  swift_task_dealloc();
  int v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_260DAC4C8()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 136) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DAC570, 0, 0);
}

uint64_t sub_260DAC570()
{
  uint64_t v18 = v0;
  uint64_t v1 = v0[11];
  uint64_t v2 = v1 + *(int *)(v0[10] + 56);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 56);
  int v4 = *(unsigned __int8 *)(v2 + 62);
  uint64_t v5 = 2;
  if (v3) {
    uint64_t v5 = 3;
  }
  if (v4) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = v3;
  }
  uint64_t v7 = *(void *)(v1 + *(int *)(v0[10] + 52));
  if (v6 != *(void *)(v7 + 24))
  {
    double v8 = *(void **)(v7 + 16);
    *(void *)(v7 + 16) = 0;

    *(void *)(v7 + 24) = v6;
  }
  uint64_t v9 = v0[14];
  uint64_t v10 = v0[8];
  swift_retain();
  sub_260DF0978(v10, 0, &v17);
  uint64_t v11 = (void *)v0[13];
  uint64_t v12 = v0[11];
  if (v9)
  {
    sub_260DC6C10(v0[11], (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    swift_release();
  }
  else
  {
    uint64_t v15 = v0[7];
    uint64_t v14 = v0[8];
    swift_release();

    swift_bridgeObjectRelease();
    sub_260DC6C10(v12, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    sub_260DC713C(v14, v15, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_260DAC6FC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t GenerativePlayground.deinit()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  sub_260D90820(v0 + 128, &qword_26A8E6860);
  swift_release();
  swift_release();
  return v0;
}

uint64_t GenerativePlayground.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  sub_260D90820(v0 + 128, &qword_26A8E6860);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_260DAC838()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_260DAC8C8;
  return GenerativePlayground.hasRequiredResources.getter();
}

uint64_t sub_260DAC8C8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_260DAC9C4()
{
  sub_260D907BC(*v0 + 128, (uint64_t)&v5, &qword_26A8E6860);
  if (v6)
  {
    sub_260DD7B40(&v5, (uint64_t)v7);
    uint64_t v1 = v8;
    uint64_t v2 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 32) + 8))(v1);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  }
  else
  {
    sub_260D90820((uint64_t)&v5, &qword_26A8E6860);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

BOOL sub_260DACA70(VisualGeneration::ImageStyle a1, Swift::OpaquePointer a2)
{
  return GenerativePlayground.imageStyle(_:canBeCombinedWith:)(a1, a2);
}

uint64_t sub_260DACA98()
{
  v1[5] = type metadata accessor for DefinitionSession();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return MEMORY[0x270FA2498](sub_260DACB2C, 0, 0);
}

uint64_t sub_260DACB2C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260DACB50, v1, 0);
}

uint64_t sub_260DACB50()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DACBF8, 0, 0);
}

uint64_t sub_260DACBF8()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = *(void *)(v1 + *(int *)(v0[5] + 56) + 64);
  swift_bridgeObjectRetain();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_260DACC90(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_260DACD28;
  return GenerativePlayground.assign_async(_:)(a1);
}

uint64_t sub_260DACD28()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_260DACE1C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_260DD8D28;
  return GenerativePlayground.add(_:)(a1);
}

uint64_t sub_260DACEB4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_260DD8D28;
  return GenerativePlayground.remove(_:)(a1);
}

uint64_t sub_260DACF4C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_260DD8D28;
  return GenerativePlayground.removeAllImageStyles()();
}

uint64_t sub_260DACFDC()
{
  v1[5] = type metadata accessor for DefinitionSession();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return MEMORY[0x270FA2498](sub_260DAD070, 0, 0);
}

uint64_t sub_260DAD070()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260DAD094, v1, 0);
}

uint64_t sub_260DAD094()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DAD13C, 0, 0);
}

uint64_t sub_260DAD13C()
{
  uint64_t v1 = v0[6] + *(int *)(v0[5] + 56);
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 80);
  sub_260DC6C10(v0[6], (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v2, v3);
}

uint64_t sub_260DAD1DC(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 112) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = type metadata accessor for DefinitionSession();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *v2;
  *(void *)(v3 + 80) = v4;
  *(void *)(v3 + 88) = v5;
  return MEMORY[0x270FA2498](sub_260DAD278, 0, 0);
}

uint64_t sub_260DAD278()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 88) + 168);
  *(void *)(v0 + 96) = v1;
  return MEMORY[0x270FA2498](sub_260DAD29C, v1, 0);
}

uint64_t sub_260DAD29C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  char v4 = *(unsigned char *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(void *)(v0 + 104) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v7 = v1 + v6;
  swift_beginAccess();
  sub_260DC713C(v7, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v8 = v2 + *(int *)(v3 + 56);
  *(void *)(v8 + 72) = v5;
  *(unsigned char *)(v8 + 80) = v4 & 1;
  return MEMORY[0x270FA2498](sub_260DAD374, v1, 0);
}

uint64_t sub_260DAD374()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[12] + v0[13];
  swift_beginAccess();
  sub_260DC7A3C(v1, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_260DAD444@<X0>(_DWORD *a1@<X8>)
{
  return GenerativePlayground.directableDemographicCategories.getter(a1);
}

uint64_t sub_260DAD468()
{
  v1[5] = type metadata accessor for DefinitionSession();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return MEMORY[0x270FA2498](sub_260DAD4FC, 0, 0);
}

uint64_t sub_260DAD4FC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260DAD520, v1, 0);
}

uint64_t sub_260DAD520()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DAD5C8, 0, 0);
}

uint64_t sub_260DAD5C8()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = *(int *)(v0[5] + 56);
  uint64_t v3 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v2 + 1);
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_260DAD668(char a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_260DD8D28;
  return GenerativePlayground.specifyGenderDirective(_:)(a1);
}

uint64_t sub_260DAD700()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_260DD8D28;
  return GenerativePlayground.dropGenderDirective()();
}

uint64_t sub_260DAD790(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = type metadata accessor for DefinitionSession();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = *v1;
  v2[7] = v3;
  v2[8] = v4;
  return MEMORY[0x270FA2498](sub_260DAD828, 0, 0);
}

uint64_t sub_260DAD828()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 72) = v1;
  return MEMORY[0x270FA2498](sub_260DAD84C, v1, 0);
}

uint64_t sub_260DAD84C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 72) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DAD8F4, 0, 0);
}

uint64_t sub_260DAD8F4()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (unsigned char *)v0[5];
  uint64_t v3 = *(int *)(v0[6] + 56);
  unsigned char *v2 = *(unsigned char *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v3 + 2);
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_260DAD9A0(unsigned char *a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_260DD8D28;
  return GenerativePlayground.specifySkinToneDirective(_:)(a1);
}

uint64_t sub_260DADA38()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_260DD8D28;
  return GenerativePlayground.dropSkinToneDirective()();
}

uint64_t sub_260DADAC8()
{
  v1[5] = type metadata accessor for DefinitionSession();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return MEMORY[0x270FA2498](sub_260DADB5C, 0, 0);
}

uint64_t sub_260DADB5C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260DADB80, v1, 0);
}

uint64_t sub_260DADB80()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DADC28, 0, 0);
}

uint64_t sub_260DADC28()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = *(int *)(v0[5] + 56);
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v2;
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v6(v4, v5);
}

uint64_t sub_260DADCDC(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return MEMORY[0x270FA2498](sub_260D9B710, 0, 0);
}

uint64_t sub_260DADD04()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_260DD8D28;
  return GenerativePlayground.dropPersonDescriptionDirective()();
}

uint64_t sub_260DADD94(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_260DD8D28;
  return GenerativePlayground.currentGenerationState.getter(a1);
}

uint64_t sub_260DADE30(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = type metadata accessor for DefinitionSession();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = *v1;
  v2[10] = v3;
  v2[11] = v4;
  return MEMORY[0x270FA2498](sub_260DADEC8, 0, 0);
}

uint64_t sub_260DADEC8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 88) + 168);
  *(void *)(v0 + 96) = v1;
  return MEMORY[0x270FA2498](sub_260DADEEC, v1, 0);
}

uint64_t sub_260DADEEC()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[10];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[13] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DADF98, 0, 0);
}

uint64_t sub_260DADF98()
{
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[8];
  uint64_t v5 = type metadata accessor for GenerationState();
  sub_260DC7A3C(v4 + *(int *)(v5 + 28), v2 + *(int *)(v3 + 56), type metadata accessor for GenerationRecipe);
  return MEMORY[0x270FA2498](sub_260DAE03C, v1, 0);
}

uint64_t sub_260DAE03C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[12] + v0[13];
  swift_beginAccess();
  sub_260DC7A3C(v1, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_260DAE110()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_260D9C15C, 0, 0);
}

uint64_t sub_260DAE134()
{
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_260D9C31C, 0, 0);
}

uint64_t GenerativePlayground.couldCurrentModelSetGenerate(images:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for GeneratedImage();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DAE218, 0, 0);
}

uint64_t sub_260DAE218()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0[2];
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v5 = v0[4];
    uint64_t v4 = v0[5];
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_260DB488C(0, v2, 0);
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v7 = *(void *)(v4 + 72);
    uint64_t v3 = v22;
    int64_t v8 = v2;
    do
    {
      uint64_t v9 = v0[6];
      sub_260DC713C(v6, v9, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      uint64_t v10 = v9 + *(int *)(v5 + 20);
      uint64_t v11 = *(void *)(v10 + *(int *)(type metadata accessor for ImageProvenance() + 28));
      swift_bridgeObjectRetain();
      sub_260DC6C10(v9, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_260DB488C(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v22;
      }
      unint64_t v13 = *(void *)(v3 + 16);
      unint64_t v12 = *(void *)(v3 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_260DB488C(v12 > 1, v13 + 1, 1);
        uint64_t v3 = v22;
      }
      *(void *)(v3 + 16) = v13 + 1;
      *(void *)(v3 + 8 * v13 + 32) = v11;
      v6 += v7;
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(os_unfair_lock_s **)(v0[3] + 176);
  uint64_t v15 = v14 + 4;
  uint64_t v16 = v14 + 6;
  os_unfair_lock_lock(v14 + 6);
  sub_260DD8D60(v15, &v22);
  os_unfair_lock_unlock(v16);
  if (v22)
  {
    swift_retain();
    uint64_t v17 = AppleDiffusionResourceFactory.areModelResourcesCurrent(_:)(v3);
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x263F8EE78];
    if (v2)
    {
      uint64_t v22 = MEMORY[0x263F8EE78];
      sub_260DB486C(0, v2, 0);
      uint64_t v17 = v22;
      unint64_t v20 = *(void *)(v22 + 16);
      do
      {
        uint64_t v22 = v17;
        unint64_t v21 = *(void *)(v17 + 24);
        if (v20 >= v21 >> 1)
        {
          sub_260DB486C(v21 > 1, v20 + 1, 1);
          uint64_t v17 = v22;
        }
        *(void *)(v17 + 16) = v20 + 1;
        *(unsigned char *)(v17 + v20++ + 32) = 1;
        --v2;
      }
      while (v2);
    }
  }
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(uint64_t))v0[1];
  return v18(v17);
}

uint64_t GenerativePlayground.couldCurrentModelSetGenerate(imagesSpecifications:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_260DAE4FC, 0, 0);
}

uint64_t sub_260DAE4FC()
{
  unint64_t v13 = v0;
  uint64_t v1 = *(os_unfair_lock_s **)(v0[3] + 176);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_260DAE680(v2, &v12);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v0[2];
  if (v12)
  {
    swift_retain();
    uint64_t v5 = sub_260D916B0(v4);
    uint64_t v6 = AppleDiffusionResourceFactory.areModelResourcesCurrent(_:)(v5);
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
    int64_t v9 = *(void *)(v4 + 16);
    uint64_t v6 = MEMORY[0x263F8EE78];
    if (v9)
    {
      uint64_t v12 = MEMORY[0x263F8EE78];
      sub_260DB486C(0, v9, 0);
      uint64_t v6 = v12;
      unint64_t v10 = *(void *)(v12 + 16);
      do
      {
        uint64_t v12 = v6;
        unint64_t v11 = *(void *)(v6 + 24);
        if (v10 >= v11 >> 1)
        {
          sub_260DB486C(v11 > 1, v10 + 1, 1);
          uint64_t v6 = v12;
        }
        *(void *)(v6 + 16) = v10 + 1;
        *(unsigned char *)(v6 + v10++ + 32) = 1;
        --v9;
      }
      while (v9);
    }
  }
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v6);
}

uint64_t sub_260DAE680@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t GenerativePlayground.__allocating_init(imageGeneratorIdentifier:client:)(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = type metadata accessor for DefinitionSession();
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8, v7);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8, v11);
  unint64_t v13 = (char *)&v17 - v12;
  int v14 = *((_DWORD *)a3 + 4);
  long long v17 = *a3;
  int v18 = v14;
  sub_260F3C4F0((uint64_t)&v17, 1, a1, a2, (uint64_t)&v17 - v12);
  sub_260DC713C((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_allocObject();
  uint64_t v15 = sub_260D91CA8((uint64_t)v10);
  sub_260DC6C10((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return v15;
}

uint64_t GenerativePlayground.__allocating_init(definitionSession:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DefinitionSession();
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260DC713C(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_allocObject();
  uint64_t v6 = sub_260D91CA8((uint64_t)v5);
  sub_260DC6C10(a1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return v6;
}

uint64_t GenerativePlayground.usePORPipeline.getter()
{
  if (*(void *)(v0 + 112) == 0xD000000000000029 && *(void *)(v0 + 120) == 0x8000000260FFBD40) {
    return 1;
  }
  else {
    return sub_260FE5150();
  }
}

uint64_t sub_260DAE8E8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  if (*(void *)(*(void *)a1 + 112) == 0xD000000000000029
    && *(void *)(*(void *)a1 + 120) == 0x8000000260FFBD40)
  {
    uint64_t result = 1;
  }
  else
  {
    uint64_t result = sub_260FE5150();
  }
  *a2 = result & 1;
  return result;
}

uint64_t (*GenerativePlayground.usePORPipeline.modify(unsigned char *a1))(void)
{
  if (*(void *)(v1 + 112) == 0xD000000000000029 && *(void *)(v1 + 120) == 0x8000000260FFBD40) {
    char v3 = 1;
  }
  else {
    char v3 = sub_260FE5150();
  }
  *a1 = v3 & 1;
  return nullsub_1;
}

uint64_t GenerativePlayground.forceInProcessGeneration.getter()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DAEA88, 0, 0);
}

uint64_t sub_260DAEA88()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260DAEAAC, v1, 0);
}

uint64_t sub_260DAEAAC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DAEB50, 0, 0);
}

uint64_t sub_260DAEB50()
{
  uint64_t v1 = *(unsigned __int8 *)(v0[7] + *(int *)(v0[6] + 56) + 58);
  sub_260DC6C10(v0[7], (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t GenerativePlayground.assign(forceInProcessGeneration:)(char a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 104) = a1;
  *(void *)(v2 + 72) = type metadata accessor for DefinitionSession();
  *(void *)(v2 + 80) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DAEC78, 0, 0);
}

uint64_t sub_260DAEC78()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260DAEC9C, v1, 0);
}

uint64_t sub_260DAEC9C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  char v4 = *(unsigned char *)(v0 + 104);
  uint64_t v5 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(void *)(v0 + 96) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v6 = v2 + v5;
  swift_beginAccess();
  sub_260DC713C(v6, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *(unsigned char *)(v1 + *(int *)(v3 + 56) + 58) = v4;
  return MEMORY[0x270FA2498](sub_260D944FC, v2, 0);
}

uint64_t sub_260DAED68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for DefinitionSession();
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8, v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v13);
  uint64_t v15 = (char *)&v19 - v14;
  int v16 = *((_DWORD *)a3 + 4);
  long long v19 = *a3;
  int v20 = v16;
  sub_260F3C4F0((uint64_t)&v19, 1, a1, a2, (uint64_t)&v19 - v14);
  sub_260DC713C((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_allocObject();
  uint64_t v17 = sub_260D91CA8((uint64_t)v12);
  uint64_t result = sub_260DC6C10((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *a4 = v17;
  return result;
}

uint64_t sub_260DAEEA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DefinitionSession();
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260DC713C(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_allocObject();
  uint64_t v8 = sub_260D91CA8((uint64_t)v7);
  uint64_t result = sub_260DC6C10(a1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *a2 = v8;
  return result;
}

uint64_t sub_260DAEF74()
{
  v1[5] = type metadata accessor for DefinitionSession();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return MEMORY[0x270FA2498](sub_260DAF008, 0, 0);
}

uint64_t sub_260DAF008()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260DAF02C, v1, 0);
}

uint64_t sub_260DAF02C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DAF0D4, 0, 0);
}

uint64_t sub_260DAF0D4()
{
  uint64_t v1 = *(unsigned __int8 *)(v0[6] + *(int *)(v0[5] + 56) + 58);
  sub_260DC6C10(v0[6], (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_260DAF164(char a1)
{
  *(unsigned char *)(v2 + 104) = a1;
  *(void *)(v2 + 64) = type metadata accessor for DefinitionSession();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = *v1;
  *(void *)(v2 + 72) = v3;
  *(void *)(v2 + 80) = v4;
  return MEMORY[0x270FA2498](sub_260DAF1FC, 0, 0);
}

uint64_t sub_260DAF1FC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 80) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260DAF220, v1, 0);
}

uint64_t sub_260DAF220()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  char v4 = *(unsigned char *)(v0 + 104);
  uint64_t v5 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(void *)(v0 + 96) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v6 = v1 + v5;
  swift_beginAccess();
  sub_260DC713C(v6, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *(unsigned char *)(v2 + *(int *)(v3 + 56) + 58) = v4;
  return MEMORY[0x270FA2498](sub_260DAF2EC, v1, 0);
}

uint64_t sub_260DAF2EC()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[11] + v0[12];
  swift_beginAccess();
  sub_260DC7A3C(v1, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t GenerativePlayground.allowImageRejection.getter()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DAF450, 0, 0);
}

uint64_t sub_260DAF450()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260DAF474, v1, 0);
}

uint64_t sub_260DAF474()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DAF518, 0, 0);
}

uint64_t sub_260DAF518()
{
  uint64_t v1 = *(unsigned __int8 *)(v0[7] + *(int *)(v0[6] + 56) + 56);
  sub_260DC6C10(v0[7], (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t GenerativePlayground.assign(allowImageRejection:)(char a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 104) = a1;
  *(void *)(v2 + 72) = type metadata accessor for DefinitionSession();
  *(void *)(v2 + 80) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DAF640, 0, 0);
}

uint64_t sub_260DAF640()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260DAF664, v1, 0);
}

uint64_t sub_260DAF664()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  char v4 = *(unsigned char *)(v0 + 104);
  uint64_t v5 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(void *)(v0 + 96) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v6 = v2 + v5;
  swift_beginAccess();
  sub_260DC713C(v6, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *(unsigned char *)(v1 + *(int *)(v3 + 56) + 56) = v4;
  return MEMORY[0x270FA2498](sub_260DD8D84, v2, 0);
}

uint64_t GenerativePlayground.enableGenerativeModelsAvailabilityCheck.getter()
{
  v1[5] = v0;
  type metadata accessor for GenerationRecipe(0);
  v1[6] = swift_task_alloc();
  v1[7] = type metadata accessor for DefinitionSession();
  v1[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DAF7F0, 0, 0);
}

uint64_t sub_260DAF7F0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 168);
  *(void *)(v0 + 72) = v1;
  return MEMORY[0x270FA2498](sub_260DAF814, v1, 0);
}

uint64_t sub_260DAF814()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DAF8B8, 0, 0);
}

uint64_t sub_260DAF8B8()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  sub_260DC713C(v1 + *(int *)(v0[7] + 56), v2, type metadata accessor for GenerationRecipe);
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 57);
  sub_260DC6C10(v2, type metadata accessor for GenerationRecipe);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t GenerativePlayground.assign(enableGenerativeModelsAvailabilityCheck:)(char a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 104) = a1;
  *(void *)(v2 + 72) = type metadata accessor for DefinitionSession();
  *(void *)(v2 + 80) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DAFA2C, 0, 0);
}

uint64_t sub_260DAFA2C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 168);
  *(void *)(v0 + 88) = v1;
  return MEMORY[0x270FA2498](sub_260DAFA50, v1, 0);
}

uint64_t sub_260DAFA50()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  char v4 = *(unsigned char *)(v0 + 104);
  uint64_t v5 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  *(void *)(v0 + 96) = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v6 = v2 + v5;
  swift_beginAccess();
  sub_260DC713C(v6, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  *(unsigned char *)(v1 + *(int *)(v3 + 56) + 57) = v4;
  return MEMORY[0x270FA2498](sub_260DD8D84, v2, 0);
}

uint64_t GenerativePlayground.assignedForensicsReporter.getter()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for DefinitionSession();
  v1[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DAFBB0, 0, 0);
}

uint64_t sub_260DAFBB0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260DAFBD4, v1, 0);
}

uint64_t sub_260DAFBD4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DAFC78, 0, 0);
}

uint64_t sub_260DAFC78()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(v0[6] + 24));
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  sub_260DC8644(*v2);
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v5(v3, v4);
}

uint64_t sub_260DAFD20(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t GenerativePlayground.assign(forensicsReporter:)(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v3[11] = type metadata accessor for DefinitionSession();
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DAFDE0, 0, 0);
}

uint64_t sub_260DAFDE0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 80) + 168);
  *(void *)(v0 + 104) = v1;
  return MEMORY[0x270FA2498](sub_260DAFE04, v1, 0);
}

uint64_t sub_260DAFE04()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[14] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DAFEAC, 0, 0);
}

uint64_t sub_260DAFEAC()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[8];
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(v2 + 24));
  uint64_t v5 = *v4;
  if (*v4)
  {
    if (v3) {
      goto LABEL_6;
    }
  }
  else if (!v3)
  {
    goto LABEL_6;
  }
  uint64_t v6 = v1 + *(int *)(v2 + 44);

  *(void *)uint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  uint64_t v3 = v0[8];
LABEL_6:
  uint64_t v7 = v0[9];
  *uint64_t v4 = v3;
  v4[1] = v7;
  sub_260DC8644(v3);
  sub_260DC8E58(v5);
  uint64_t v9 = v0[8];
  uint64_t v8 = v0[9];
  if (v3)
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = v8;
    uint64_t v11 = sub_260DC8E68;
  }
  else
  {
    uint64_t v11 = 0;
  }
  BOOL v12 = v3 != 0;
  uint64_t v14 = v0[12];
  uint64_t v13 = v0[13];
  uint64_t v15 = v0[11];
  sub_260DC8644(v9);
  sub_260DC8E58((uint64_t)v11);
  *(unsigned char *)(v14 + *(int *)(v15 + 56) + 62) = v12;
  return MEMORY[0x270FA2498](sub_260DAFFF4, v13, 0);
}

uint64_t sub_260DAFFF4()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13] + v0[14];
  swift_beginAccess();
  sub_260DC7A3C(v1, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_260DB00C4()
{
  v1[5] = type metadata accessor for DefinitionSession();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = *v0;
  v1[6] = v2;
  v1[7] = v3;
  return MEMORY[0x270FA2498](sub_260DB0158, 0, 0);
}

uint64_t sub_260DB0158()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 168);
  *(void *)(v0 + 64) = v1;
  return MEMORY[0x270FA2498](sub_260DB017C, v1, 0);
}

uint64_t sub_260DB017C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  swift_beginAccess();
  sub_260DC713C(v2, v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DB0224, 0, 0);
}

uint64_t sub_260DB0224()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(v0[5] + 24));
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  sub_260DC8644(*v2);
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v5(v3, v4);
}

uint64_t sub_260DB02CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_260DD8D28;
  return GenerativePlayground.assign(forensicsReporter:)(a1, a2);
}

uint64_t sub_260DB0374()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260DB04E0()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260DB0594()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260DB06E4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_260DED488(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_260DC35A8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_260DB0750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  void v7[2] = a4;
  void v7[3] = a7;
  uint64_t v10 = (uint64_t (*)(void))((char *)a5 + *a5);
  uint64_t v8 = (void *)swift_task_alloc();
  v7[4] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_260DB0820;
  return v10();
}

uint64_t sub_260DB0820()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_260DB091C, 0, 0);
}

uint64_t sub_260DB091C()
{
  *(unsigned char *)(*(void *)(v0 + 24) + 16) = 0;
  sub_260FE49A0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260DB0980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a4;
  v7[5] = a7;
  uint64_t v10 = (uint64_t (*)(void *))((char *)a5 + *a5);
  uint64_t v8 = (void *)swift_task_alloc();
  v7[6] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_260DB0A60;
  return v10(v7 + 2);
}

uint64_t sub_260DB0A60()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_260DB0B5C, 0, 0);
}

uint64_t sub_260DB0B5C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  unsigned __int8 v2 = *(unsigned char *)(v0 + 24);
  *(void *)(v1 + 16) = *(void *)(v0 + 16);
  *(_WORD *)(v1 + 24) = v2;
  sub_260FE49A0();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_260DB0BD0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_260DB0CAC;
  return v6(a1);
}

uint64_t sub_260DB0CAC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_260DB0DA4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6EF0);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    uint64_t v2 = &qword_26A8E6730;
  }
  else {
    uint64_t v2 = (uint64_t *)&unk_26A8E6EF8;
  }
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

void *sub_260DB0E04(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D88);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_260DC6104(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_260DB0F14(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D90);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_260DC5CD4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_260DB103C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_260DB12A8(a1, a2, a3, a4, &qword_26A8E6E08);
}

char *sub_260DB1048(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E28);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_260DC61F8(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_260DB1144(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_260DB13FC(a1, a2, a3, a4, &qword_26A8E6E20, MEMORY[0x263F1ED70], MEMORY[0x263F1ED70]);
}

void *sub_260DB1178(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_260DB1DAC(a1, a2, a3, a4, &qword_26A8E66B8, &qword_26A8E6E30);
}

void *sub_260DB118C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C88);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_260DC64C0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_260DB129C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_260DB12A8(a1, a2, a3, a4, &qword_26A8E6A88);
}

void *sub_260DB12A8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      void v11[3] = 2 * (v13 >> 4);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_260DD7098(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_260DB13B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_260DB226C(a1, a2, a3, a4, &qword_26A8E6DA8, &qword_26A8E6DB0);
}

uint64_t sub_260DB13C8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_260DB13FC(a1, a2, a3, a4, &qword_26A8E6DA0, type metadata accessor for PromptEdit, type metadata accessor for PromptEdit);
}

uint64_t sub_260DB13FC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    int v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  int v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_260FE4E10();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_260DD73D4(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_260DB167C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_260DB13FC(a1, a2, a3, a4, &qword_26A8E6C70, MEMORY[0x270FA9680], MEMORY[0x270FA95D8]);
}

uint64_t sub_260DB1698(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_260DB13FC(a1, a2, a3, a4, &qword_26A8E6E60, type metadata accessor for Concept, type metadata accessor for Concept);
}

uint64_t sub_260DB16CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_260DB13FC(a1, a2, a3, a4, &qword_26A8E6C90, type metadata accessor for ResolvedTextPrompt, type metadata accessor for ResolvedTextPrompt);
}

char *sub_260DB1700(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E68F8);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_260DC61F8(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_260DB17FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C80);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_260DC62E0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_260DB190C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D98);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_260DC63CC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_260DB1A1C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_260DB13FC(a1, a2, a3, a4, &qword_26A8E6D00, (uint64_t (*)(void))type metadata accessor for GeneratedImage, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
}

void *sub_260DB1A50(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F18);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_260DC8B84(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_260DB1B78(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CA8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_260DC8A90(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_260DB1C88(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D60);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_260DD6C2C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_260DB1D98(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_260DB1DAC(a1, a2, a3, a4, &qword_26A8E6AA0, &qword_26A8E6A78);
}

void *sub_260DB1DAC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      void v13[2] = v11;
      void v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_260DD6F8C(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_260DB1EDC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E90);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_260DD7184(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_260DB2004(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_260DB13FC(a1, a2, a3, a4, &qword_26A8E6EB8, (uint64_t (*)(void))type metadata accessor for EntityExtractor.NamedEntity.EntityData, (uint64_t (*)(void))type metadata accessor for EntityExtractor.NamedEntity.EntityData);
}

void *sub_260DB2038(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E68);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_260DC71E4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_260DB2148(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E70);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_260DC72D8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_260DB2258(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_260DB226C(a1, a2, a3, a4, &qword_26A8E6E78, &qword_26A8E6E80);
}

uint64_t sub_260DB226C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_260FE4E10();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_260DD727C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

void *sub_260DB24D8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_260DB12A8(a1, a2, a3, a4, &qword_26A8E6EA8);
}

void *sub_260DB24E4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6EC0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_260DD7530(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_260DB260C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6EB0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_260DD7640(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_260DB271C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DC8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_260DD7734(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_260DB2844(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_260DB2918(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_260D90650((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_260D90650((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_260DB2918(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_260FE4AF0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_260DB2AD4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_260FE4CD0();
  if (!v8)
  {
    sub_260FE4E10();
    __break(1u);
LABEL_17:
    uint64_t result = sub_260FE4E90();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_260DB2AD4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_260DB2B6C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_260DB2D4C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_260DB2D4C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_260DB2B6C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_260DB2CE4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_260FE4C30();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_260FE4E10();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_260FE4270();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_260FE4E90();
    __break(1u);
LABEL_14:
    uint64_t result = sub_260FE4E10();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_260DB2CE4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7010);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_260DB2D4C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7010);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB2E9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DE8);
  uint64_t v3 = sub_260FE4BE0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_260FE52F0();
      sub_260FE41D0();
      uint64_t result = sub_260FE5340();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_260DB317C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DF8);
  uint64_t v3 = sub_260FE4BE0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v29 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v14 >= v29) {
          goto LABEL_36;
        }
        unint64_t v15 = v30[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v29) {
            goto LABEL_36;
          }
          unint64_t v15 = v30[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v29) {
              goto LABEL_36;
            }
            unint64_t v15 = v30[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v29)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v28;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v30[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_42;
                  }
                  if (v10 >= v29) {
                    goto LABEL_36;
                  }
                  unint64_t v15 = v30[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = v2;
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_260FE52F0();
      sub_260FE5300();
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        uint64_t v20 = v18 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_260FE41D0();
          swift_bridgeObjectRelease();
          v20 += 16;
          --v19;
        }
        while (v19);
      }
      uint64_t result = sub_260FE5340();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v8 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      uint64_t v2 = v17;
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_260DB34B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DC0);
  uint64_t v3 = sub_260FE4BE0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_260FE52F0();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_260FE5340();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_260DB37C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7070);
  uint64_t v3 = sub_260FE4BE0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 56);
    uint64_t v39 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v6;
    uint64_t v37 = v0;
    int64_t v38 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        int64_t v41 = v11;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v38) {
          goto LABEL_33;
        }
        unint64_t v16 = v39[v15];
        int64_t v17 = v11 + 1;
        if (!v16)
        {
          int64_t v17 = v11 + 2;
          if (v11 + 2 >= v38) {
            goto LABEL_33;
          }
          unint64_t v16 = v39[v17];
          if (!v16)
          {
            int64_t v17 = v11 + 3;
            if (v11 + 3 >= v38) {
              goto LABEL_33;
            }
            unint64_t v16 = v39[v17];
            if (!v16)
            {
              uint64_t v18 = v11 + 4;
              if (v11 + 4 >= v38)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v37;
                uint64_t v35 = 1 << *(unsigned char *)(v2 + 32);
                if (v35 > 63) {
                  bzero(v39, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v39 = -1 << v35;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v39[v18];
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v38) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v39[v17];
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v11 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        int64_t v41 = v17;
        unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      uint64_t v19 = sub_260FE3130();
      uint64_t v40 = &v36;
      uint64_t v20 = *(void *)(v19 - 8);
      MEMORY[0x270FA5388](v19, v21);
      char v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v24 = v2;
      uint64_t v25 = *(void *)(v2 + 48);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 32);
      uint64_t v27 = *(void *)(v20 + 72);
      v26(v23, v25 + v27 * v14, v19);
      sub_260DD8CC8(&qword_26A8E7058, MEMORY[0x270FA9728]);
      uint64_t result = sub_260FE3EF0();
      uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v9 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v12 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v4 + 48) + v12 * v27, v23, v19);
      ++*(void *)(v4 + 16);
      int64_t v11 = v41;
      uint64_t v2 = v24;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_260DB3B88()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F48);
  uint64_t result = sub_260FE4BE0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v29 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
      sub_260FE52F0();
      sub_260FE5300();
      sub_260FE5300();
      uint64_t result = sub_260FE5340();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
      *unint64_t v12 = v19;
      v12[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_260DB3E60()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Concept(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8, v4);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E88);
  uint64_t v8 = sub_260FE4BE0();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v11 = *(void *)(v7 + 56);
    uint64_t v34 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & v11;
    unint64_t v32 = v0;
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = v8 + 56;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v19 = v18 | (v16 << 6);
      }
      else
      {
        int64_t v20 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v16;
        if (!v21)
        {
          int64_t v16 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v16];
          if (!v21)
          {
            int64_t v16 = v20 + 2;
            if (v20 + 2 >= v33) {
              goto LABEL_33;
            }
            unint64_t v21 = v34[v16];
            if (!v21)
            {
              int64_t v22 = v20 + 3;
              if (v22 >= v33)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v32;
                uint64_t v31 = 1 << *(unsigned char *)(v7 + 32);
                if (v31 > 63) {
                  bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v31;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v21 = v34[v22];
              if (!v21)
              {
                while (1)
                {
                  int64_t v16 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v16 >= v33) {
                    goto LABEL_33;
                  }
                  unint64_t v21 = v34[v16];
                  ++v22;
                  if (v21) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v16 = v22;
            }
          }
        }
LABEL_23:
        unint64_t v13 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
      }
      uint64_t v23 = *(void *)(v3 + 72);
      sub_260DC79D4(*(void *)(v7 + 48) + v23 * v19, (uint64_t)v6, type metadata accessor for Concept);
      sub_260FE52F0();
      Concept.hash(into:)();
      uint64_t result = sub_260FE5340();
      uint64_t v24 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v14 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v17 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t result = sub_260DC79D4((uint64_t)v6, *(void *)(v9 + 48) + v17 * v23, type metadata accessor for Concept);
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v9;
  return result;
}

uint64_t sub_260DB41FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6EA0);
  uint64_t v3 = sub_260FE4BE0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 56);
    uint64_t v39 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v6;
    uint64_t v37 = v0;
    int64_t v38 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        int64_t v41 = v11;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v38) {
          goto LABEL_33;
        }
        unint64_t v16 = v39[v15];
        int64_t v17 = v11 + 1;
        if (!v16)
        {
          int64_t v17 = v11 + 2;
          if (v11 + 2 >= v38) {
            goto LABEL_33;
          }
          unint64_t v16 = v39[v17];
          if (!v16)
          {
            int64_t v17 = v11 + 3;
            if (v11 + 3 >= v38) {
              goto LABEL_33;
            }
            unint64_t v16 = v39[v17];
            if (!v16)
            {
              uint64_t v18 = v11 + 4;
              if (v11 + 4 >= v38)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v37;
                uint64_t v35 = 1 << *(unsigned char *)(v2 + 32);
                if (v35 > 63) {
                  bzero(v39, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v39 = -1 << v35;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v39[v18];
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v38) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v39[v17];
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v11 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        int64_t v41 = v17;
        unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      uint64_t v19 = sub_260FE3110();
      uint64_t v40 = &v36;
      uint64_t v20 = *(void *)(v19 - 8);
      MEMORY[0x270FA5388](v19, v21);
      uint64_t v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v24 = v2;
      uint64_t v25 = *(void *)(v2 + 48);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 32);
      uint64_t v27 = *(void *)(v20 + 72);
      v26(v23, v25 + v27 * v14, v19);
      sub_260DD8CC8((unint64_t *)&qword_26A8E67C8, MEMORY[0x270FA9410]);
      uint64_t result = sub_260FE3EF0();
      uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v9 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v12 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v4 + 48) + v12 * v27, v23, v19);
      ++*(void *)(v4 + 16);
      int64_t v11 = v41;
      uint64_t v2 = v24;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_260DB45C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB4A00(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB45E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB4B6C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_260DB4604(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5BA0(a1, a2, a3, (void *)*v3, &qword_26A8E6E48, MEMORY[0x263F1ED80]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_260DB4640(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5BA0(a1, a2, a3, (void *)*v3, &qword_26A8E6E20, MEMORY[0x263F1ED70]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_260DB467C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB62F8(a1, a2, a3, (void *)*v3, &qword_26A8E6E10, &qword_26A8E6E18);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_260DB46AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5BA0(a1, a2, a3, (void *)*v3, &qword_26A8E6C90, type metadata accessor for ResolvedTextPrompt);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_260DB46E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB4D18(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB4708(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB4E88(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB4728(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB517C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB4748(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5BA0(a1, a2, a3, (void *)*v3, &qword_26A8E6DB8, MEMORY[0x270FA8530]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_260DB4778(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5BA0(a1, a2, a3, (void *)*v3, &qword_26A8E6C78, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_260DB47B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB64A0(a1, a2, a3, *v3, &qword_26A8E7028);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB47DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB52FC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB47FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5BA0(a1, a2, a3, (void *)*v3, &qword_26A8E6EE8, MEMORY[0x270FA97E8]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_260DB482C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB545C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB484C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB55C8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB486C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5734(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB488C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5884(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_260DB48AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5A10(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB48CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB6034(a1, a2, a3, *v3, &qword_26A8E6A88);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB48F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5BA0(a1, a2, a3, (void *)*v3, &qword_26A8E6E60, type metadata accessor for Concept);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_260DB4930(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5DE8(a1, a2, a3, (void *)*v3, &qword_26A8E6E78, &qword_26A8E6E80);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_260DB4960(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB64A0(a1, a2, a3, *v3, &qword_26A8E6E58);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB4988(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB6190(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB49A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB62F8(a1, a2, a3, (void *)*v3, &qword_26A8E6AA0, &qword_26A8E6A78);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_260DB49D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB64A0(a1, a2, a3, *v3, &qword_26A8E6E50);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_260DB4A00(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C88);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB4B6C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66F0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB4CF8(char a1, int64_t a2, char a3, void *a4)
{
  return sub_260DB5BA0(a1, a2, a3, a4, &qword_26A8E6E20, MEMORY[0x263F1ED70]);
}

uint64_t sub_260DB4D18(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_260DB0DA4();
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB4E7C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_260DB6034(a1, a2, a3, a4, &qword_26A8E6A88);
}

uint64_t sub_260DB4E88(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D88);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB4FF4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D90);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB517C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C80);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB52DC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_260DB5BA0(a1, a2, a3, a4, &qword_26A8E6DA0, type metadata accessor for PromptEdit);
}

uint64_t sub_260DB52FC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E38);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB545C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CA8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB55C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E68);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB5734(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E28);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB5884(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F40);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F38);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB5A10(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F10);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB5B80(char a1, int64_t a2, char a3, void *a4)
{
  return sub_260DB5BA0(a1, a2, a3, a4, &qword_26A8E6D00, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
}

uint64_t sub_260DB5BA0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB5DE8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB6028(char a1, int64_t a2, char a3, char *a4)
{
  return sub_260DB6034(a1, a2, a3, a4, &qword_26A8E6EA8);
}

uint64_t sub_260DB6034(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v11 + 32;
  unint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB6190(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E40);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB62F8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    void v13[2] = v11;
    void v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB64A0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v14 = v11 + 32;
  unint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[32 * v9]) {
      memmove(v14, v15, 32 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v9] || v14 >= &v15[32 * v9])
  {
    memcpy(v14, v15, 32 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DB65FC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_260FE52F0();
  swift_bridgeObjectRetain();
  sub_260FE41D0();
  uint64_t v8 = sub_260FE5340();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    int64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_260FE5150() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      size_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_260FE5150() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_260DB7470(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_260DB67AC(void *a1, void *a2)
{
  uint64_t v4 = *v2;
  sub_260FE52F0();
  uint64_t v5 = a2[2];
  sub_260FE5300();
  uint64_t v6 = a2[2];
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = a2 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      v7 += 2;
      --v6;
    }
    while (v6);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t result = sub_260FE5340();
  uint64_t v9 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v10 = result & ~v9;
  if ((*(void *)(v4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v24 = ~v9;
    uint64_t v11 = *(void *)(v4 + 48);
    while (1)
    {
      int64_t v12 = *(void **)(v11 + 8 * v10);
      if (v12[2] == v5)
      {
        if (!v5 || v12 == a2) {
          goto LABEL_36;
        }
        unint64_t v13 = a2[2];
        if (!v13) {
          goto LABEL_40;
        }
        uint64_t result = v12[4];
        BOOL v14 = result == a2[4] && v12[5] == a2[5];
        if (v14 || (uint64_t result = sub_260FE5150(), (result & 1) != 0))
        {
          if (v5 == 1) {
            goto LABEL_36;
          }
          unint64_t v15 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_41;
          }
          uint64_t result = v12[6];
          if (result == a2[6] && v12[7] == a2[7]) {
            break;
          }
          uint64_t result = sub_260FE5150();
          if (result) {
            break;
          }
        }
      }
LABEL_8:
      unint64_t v10 = (v10 + 1) & v24;
      if (((*(void *)(v4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_37;
      }
    }
    if (v5 == 2)
    {
LABEL_36:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a1 = *(void *)(*(void *)(*v22 + 48) + 8 * v10);
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = 0;
    uint64_t v18 = v5 - 2;
    while (v18)
    {
      if (!v15) {
        goto LABEL_39;
      }
      uint64_t result = v12[v17 + 8];
      if (result != a2[v17 + 8] || v12[v17 + 9] != a2[v17 + 9])
      {
        uint64_t result = sub_260FE5150();
        if ((result & 1) == 0) {
          goto LABEL_8;
        }
      }
      --v15;
      v17 += 2;
      if (!--v18) {
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
  }
  else
  {
LABEL_37:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v22;
    uint64_t *v22 = 0x8000000000000000;
    uint64_t v21 = swift_bridgeObjectRetain();
    sub_260DB760C(v21, v10, isUniquelyReferenced_nonNull_native);
    uint64_t *v22 = v25;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  return result;
}

uint64_t sub_260DB6A3C(char *a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_260FE3130();
  sub_260DD8CC8(&qword_26A8E7058, MEMORY[0x270FA9728]);
  swift_bridgeObjectRetain();
  uint64_t v39 = a2;
  uint64_t v8 = sub_260FE3EF0();
  uint64_t v10 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v11 = v8 & ~v10;
  uint64_t v36 = v6 + 56;
  uint64_t v12 = v7 - 8;
  if ((*(void *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    unint64_t v32 = v2;
    BOOL v33 = a1;
    uint64_t v34 = ~v10;
    unint64_t v13 = *(void **)v12;
    v30[1] = v12 & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
    char v31 = v13;
    BOOL v14 = (void (*)(char *, unint64_t, uint64_t))v13[2];
    uint64_t v37 = v13 + 2;
    int64_t v38 = v14;
    uint64_t v15 = v13[8];
    uint64_t v35 = v13[9];
    unint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 + 1);
    while (1)
    {
      MEMORY[0x270FA5388](v8, v9);
      uint64_t v17 = v6;
      uint64_t v18 = *(void *)(v6 + 48);
      unint64_t v19 = v35 * v11;
      v38((char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v35 * v11, v7);
      sub_260DD8CC8(&qword_26A8E7068, MEMORY[0x270FA9728]);
      char v20 = sub_260FE3FD0();
      uint64_t v21 = *v16;
      uint64_t v8 = (*v16)((char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
      if (v20) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v34;
      uint64_t v6 = v17;
      if (((*(void *)(v36 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v32;
        a1 = v33;
        uint64_t v22 = v31;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v21(v39, v7);
    v38(v33, *(void *)(*v32 + 48) + v19, v7);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void **)v12;
LABEL_7:
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = isUniquelyReferenced_nonNull_native;
    MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native, v25);
    uint64_t v27 = (char *)v30 - v26;
    uint64_t v28 = v39;
    ((void (*)(char *, char *, uint64_t))v22[2])((char *)v30 - v26, v39, v7);
    uint64_t v40 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_260DB7B18((uint64_t)v27, v11, v24);
    *uint64_t v3 = v40;
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t))v22[4])(a1, v28, v7);
    return 1;
  }
}

uint64_t sub_260DB6D74(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_260FE52F0();
  sub_260FE5300();
  sub_260FE5300();
  uint64_t v8 = sub_260FE5340();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v10);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      if (v14 == a2 && v13 == a3) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_8;
      }
    }
    uint64_t result = 0;
    long long v17 = *(_OWORD *)(*(void *)(*v3 + 48) + 16 * v10);
  }
  else
  {
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_260DB7D9C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v19;
    swift_bridgeObjectRelease();
    *(void *)&long long v17 = a2;
    *((void *)&v17 + 1) = a3;
    uint64_t result = 1;
  }
  *a1 = v17;
  return result;
}

uint64_t sub_260DB6EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Concept(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8, v8);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_260FE52F0();
  swift_bridgeObjectRetain();
  Concept.hash(into:)();
  uint64_t v12 = sub_260FE5340();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v14 = v12 & ~v13;
  if ((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v20 = a1;
    uint64_t v15 = ~v13;
    uint64_t v16 = *(void *)(v7 + 72);
    while (1)
    {
      sub_260DC713C(*(void *)(v11 + 48) + v16 * v14, (uint64_t)v10, type metadata accessor for Concept);
      char v17 = _s16VisualGeneration7ConceptO2eeoiySbAC_ACtFZ_0((uint64_t)v10, a2);
      sub_260DC6C10((uint64_t)v10, type metadata accessor for Concept);
      if (v17) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v15;
      if (((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v20;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_260DC6C10(a2, type metadata accessor for Concept);
    sub_260DC713C(*(void *)(*v3 + 48) + v16 * v14, v20, type metadata accessor for Concept);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_260DC713C(a2, (uint64_t)v10, type metadata accessor for Concept);
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_260DB7EFC((uint64_t)v10, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v21;
    swift_bridgeObjectRelease();
    sub_260DC79D4(a2, a1, type metadata accessor for Concept);
    return 1;
  }
}

uint64_t sub_260DB7138(char *a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_260FE3110();
  sub_260DD8CC8((unint64_t *)&qword_26A8E67C8, MEMORY[0x270FA9410]);
  swift_bridgeObjectRetain();
  uint64_t v39 = a2;
  uint64_t v8 = sub_260FE3EF0();
  uint64_t v10 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v11 = v8 & ~v10;
  uint64_t v36 = v6 + 56;
  uint64_t v12 = v7 - 8;
  if ((*(void *)(v6 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    unint64_t v32 = v2;
    BOOL v33 = a1;
    uint64_t v34 = ~v10;
    uint64_t v13 = *(void **)v12;
    v30[1] = v12 & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
    char v31 = v13;
    unint64_t v14 = (void (*)(char *, unint64_t, uint64_t))v13[2];
    uint64_t v37 = v13 + 2;
    int64_t v38 = v14;
    uint64_t v15 = v13[8];
    uint64_t v35 = v13[9];
    uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 + 1);
    while (1)
    {
      MEMORY[0x270FA5388](v8, v9);
      uint64_t v17 = v6;
      uint64_t v18 = *(void *)(v6 + 48);
      unint64_t v19 = v35 * v11;
      v38((char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v35 * v11, v7);
      sub_260DD8CC8(&qword_26A8E6E98, MEMORY[0x270FA9410]);
      char v20 = sub_260FE3FD0();
      uint64_t v21 = *v16;
      uint64_t v8 = (*v16)((char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
      if (v20) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v34;
      uint64_t v6 = v17;
      if (((*(void *)(v36 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v32;
        a1 = v33;
        uint64_t v22 = v31;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v21(v39, v7);
    v38(v33, *(void *)(*v32 + 48) + v19, v7);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void **)v12;
LABEL_7:
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = isUniquelyReferenced_nonNull_native;
    MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native, v25);
    uint64_t v27 = (char *)v30 - v26;
    uint64_t v28 = v39;
    ((void (*)(char *, char *, uint64_t))v22[2])((char *)v30 - v26, v39, v7);
    uint64_t v40 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_260DB814C((uint64_t)v27, v11, v24);
    *uint64_t v3 = v40;
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t))v22[4])(a1, v28, v7);
    return 1;
  }
}

uint64_t sub_260DB7470(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_260DB2E9C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_260DB83D0();
      goto LABEL_22;
    }
    sub_260DB8F74();
  }
  uint64_t v11 = *v4;
  sub_260FE52F0();
  sub_260FE41D0();
  uint64_t result = sub_260FE5340();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_260FE5150(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_260FE5270();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_260FE5150();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_260DB760C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = (void *)result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_260DB317C();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_260DB8584();
        goto LABEL_41;
      }
      sub_260DB9224();
    }
    uint64_t v8 = *v3;
    sub_260FE52F0();
    uint64_t v9 = v5[2];
    sub_260FE5300();
    uint64_t v10 = v5[2];
    if (v10)
    {
      uint64_t v11 = v5 + 5;
      do
      {
        swift_bridgeObjectRetain();
        sub_260FE41D0();
        swift_bridgeObjectRelease();
        v11 += 2;
        --v10;
      }
      while (v10);
    }
    uint64_t result = sub_260FE5340();
    uint64_t v12 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v12;
    uint64_t v13 = v8 + 56;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v14 = ~v12;
      uint64_t v15 = *(void *)(v8 + 48);
      while (1)
      {
        BOOL v16 = *(void **)(v15 + 8 * a2);
        if (v16[2] == v9)
        {
          if (!v9 || v16 == v5) {
            goto LABEL_48;
          }
          unint64_t v17 = v5[2];
          if (!v17) {
            goto LABEL_45;
          }
          BOOL v18 = v16[4] == v5[4] && v16[5] == v5[5];
          if (v18 || (uint64_t result = sub_260FE5150(), (result & 1) != 0))
          {
            if (v9 == 1) {
              goto LABEL_48;
            }
            unint64_t v19 = v17 - 2;
            if (v17 < 2) {
              goto LABEL_46;
            }
            if (v16[6] == v5[6] && v16[7] == v5[7]) {
              break;
            }
            uint64_t result = sub_260FE5150();
            if (result) {
              break;
            }
          }
        }
LABEL_13:
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v13 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_41;
        }
      }
      if (v9 == 2) {
        goto LABEL_48;
      }
      uint64_t v21 = v16 + 9;
      BOOL v23 = v5 + 9;
      uint64_t v22 = v9 - 2;
      while (v22)
      {
        if (!v19) {
          goto LABEL_44;
        }
        if (*(v21 - 1) != *(v23 - 1) || *v21 != *v23)
        {
          uint64_t result = sub_260FE5150();
          if ((result & 1) == 0) {
            goto LABEL_13;
          }
        }
        --v19;
        v21 += 2;
        v23 += 2;
        if (!--v22) {
          goto LABEL_48;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
  }
LABEL_41:
  uint64_t v25 = *v29;
  *(void *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v25 + 48) + 8 * a2) = v5;
  uint64_t v26 = *(void *)(v25 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v25 + 16) = v28;
    return result;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
  uint64_t result = sub_260FE5270();
  __break(1u);
  return result;
}

uint64_t sub_260DB7880(uint64_t result, unint64_t a2, char a3)
{
  unsigned __int8 v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_260DB34B0();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_260DB8730();
        goto LABEL_28;
      }
      sub_260DB952C();
    }
    uint64_t v8 = *v3;
    sub_260FE52F0();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_260FE5340();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      do
      {
        if (*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          if (*(unsigned char *)(*(void *)(v8 + 48) + a2) == 1)
          {
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x6E616D6F77;
            int v13 = v5;
            if (!v5) {
              goto LABEL_24;
            }
          }
          else
          {
            uint64_t v12 = 0x6E79676F72646E61;
            unint64_t v11 = 0xEB0000000073756FLL;
            int v13 = v5;
            if (!v5)
            {
LABEL_24:
              unint64_t v15 = 0xE300000000000000;
              if (v12 == 7233901) {
                goto LABEL_25;
              }
              goto LABEL_26;
            }
          }
        }
        else
        {
          unint64_t v11 = 0xE300000000000000;
          uint64_t v12 = 7233901;
          int v13 = v5;
          if (!v5) {
            goto LABEL_24;
          }
        }
        if (v13 == 1) {
          uint64_t v14 = 0x6E616D6F77;
        }
        else {
          uint64_t v14 = 0x6E79676F72646E61;
        }
        if (v13 == 1) {
          unint64_t v15 = 0xE500000000000000;
        }
        else {
          unint64_t v15 = 0xEB0000000073756FLL;
        }
        if (v12 == v14)
        {
LABEL_25:
          if (v11 == v15) {
            goto LABEL_31;
          }
        }
LABEL_26:
        char v16 = sub_260FE5150();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_32;
        }
        a2 = (a2 + 1) & v10;
      }
      while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_28:
  uint64_t v17 = *v21;
  *(void *)(*v21 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v5;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease_n();
LABEL_32:
    uint64_t result = sub_260FE5270();
    __break(1u);
  }
  else
  {
    *(void *)(v17 + 16) = v20;
  }
  return result;
}

uint64_t sub_260DB7B18(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v30 = a1;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_260DB37C0();
  }
  else
  {
    if (v6 > v5)
    {
      sub_260DB8CC0(&qword_26A8E7070, MEMORY[0x270FA9720]);
      goto LABEL_12;
    }
    sub_260DB9808();
  }
  uint64_t v7 = *v3;
  uint64_t v8 = sub_260FE3130();
  sub_260DD8CC8(&qword_26A8E7058, MEMORY[0x270FA9728]);
  uint64_t v9 = sub_260FE3EF0();
  uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
  a2 = v9 & ~v11;
  uint64_t v28 = v7 + 56;
  uint64_t v29 = v7;
  if ((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v27 = ~v11;
    uint64_t v12 = *(void **)(v8 - 8);
    int v13 = (void (*)(char *, unint64_t, uint64_t))v12[2];
    uint64_t v14 = v12[8];
    uint64_t v15 = v12[9];
    char v16 = (uint64_t (**)(char *, uint64_t))(v12 + 1);
    do
    {
      MEMORY[0x270FA5388](v9, v10);
      v13((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v29 + 48) + v15 * a2, v8);
      sub_260DD8CC8(&qword_26A8E7068, MEMORY[0x270FA9728]);
      char v17 = sub_260FE3FD0();
      uint64_t v9 = (*v16)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
      if (v17) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v27;
    }
    while (((*(void *)(v28 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v18 = *v26;
  *(void *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v19 = *(void *)(v18 + 48);
  uint64_t v20 = sub_260FE3130();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * a2, v30, v20);
  uint64_t v22 = *(void *)(v18 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (!v23)
  {
    *(void *)(v18 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_260FE5270();
  __break(1u);
  return result;
}

uint64_t sub_260DB7D9C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_15;
  }
  if (a4)
  {
    sub_260DB3B88();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (uint64_t)sub_260DB88C4();
      goto LABEL_15;
    }
    sub_260DB9BA8();
  }
  uint64_t v10 = *v4;
  sub_260FE52F0();
  sub_260FE5300();
  sub_260FE5300();
  uint64_t result = sub_260FE5340();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    do
    {
      int v13 = (uint64_t *)(*(void *)(v10 + 48) + 16 * a3);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      if (v15 == v7 && v14 == a2) {
        goto LABEL_18;
      }
      a3 = (a3 + 1) & v12;
    }
    while (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_15:
  uint64_t v17 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v18 = (uint64_t *)(*(void *)(v17 + 48) + 16 * a3);
  *uint64_t v18 = v7;
  v18[1] = a2;
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (!v20)
  {
    *(void *)(v17 + 16) = v21;
    return result;
  }
  __break(1u);
LABEL_18:
  uint64_t result = sub_260FE5270();
  __break(1u);
  return result;
}

uint64_t sub_260DB7EFC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Concept(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *(void *)(*v4 + 16);
  unint64_t v14 = *(void *)(*v4 + 24);
  if (v14 > v13 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v15 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_260DB3E60();
    goto LABEL_8;
  }
  if (v14 <= v13)
  {
    sub_260DB9E4C();
LABEL_8:
    uint64_t v16 = *v4;
    sub_260FE52F0();
    Concept.hash(into:)();
    uint64_t v17 = sub_260FE5340();
    uint64_t v18 = -1 << *(unsigned char *)(v16 + 32);
    a2 = v17 & ~v18;
    if ((*(void *)(v16 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v27 = v8;
      uint64_t v19 = ~v18;
      uint64_t v15 = v9;
      uint64_t v20 = *(void *)(v9 + 72);
      while (1)
      {
        sub_260DC713C(*(void *)(v16 + 48) + v20 * a2, (uint64_t)v12, type metadata accessor for Concept);
        char v21 = _s16VisualGeneration7ConceptO2eeoiySbAC_ACtFZ_0((uint64_t)v12, a1);
        sub_260DC6C10((uint64_t)v12, type metadata accessor for Concept);
        if (v21) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v19;
        if (((*(void *)(v16 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v15 = v9;
  sub_260DB8A5C();
LABEL_14:
  uint64_t v22 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_260DC79D4(a1, *(void *)(v22 + 48) + *(void *)(v15 + 72) * a2, type metadata accessor for Concept);
  uint64_t v24 = *(void *)(v22 + 16);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (!v25)
  {
    *(void *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_260FE5270();
  __break(1u);
  return result;
}

uint64_t sub_260DB814C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v30 = a1;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_260DB41FC();
  }
  else
  {
    if (v6 > v5)
    {
      sub_260DB8CC0(&qword_26A8E6EA0, MEMORY[0x270FA9550]);
      goto LABEL_12;
    }
    sub_260DBA1B0();
  }
  uint64_t v7 = *v3;
  uint64_t v8 = sub_260FE3110();
  sub_260DD8CC8((unint64_t *)&qword_26A8E67C8, MEMORY[0x270FA9410]);
  uint64_t v9 = sub_260FE3EF0();
  uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
  a2 = v9 & ~v11;
  uint64_t v28 = v7 + 56;
  uint64_t v29 = v7;
  if ((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v27 = ~v11;
    uint64_t v12 = *(void **)(v8 - 8);
    unint64_t v13 = (void (*)(char *, unint64_t, uint64_t))v12[2];
    uint64_t v14 = v12[8];
    uint64_t v15 = v12[9];
    uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v12 + 1);
    do
    {
      MEMORY[0x270FA5388](v9, v10);
      v13((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v29 + 48) + v15 * a2, v8);
      sub_260DD8CC8(&qword_26A8E6E98, MEMORY[0x270FA9410]);
      char v17 = sub_260FE3FD0();
      uint64_t v9 = (*v16)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
      if (v17) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v27;
    }
    while (((*(void *)(v28 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v18 = *v26;
  *(void *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v19 = *(void *)(v18 + 48);
  uint64_t v20 = sub_260FE3110();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * a2, v30, v20);
  uint64_t v22 = *(void *)(v18 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (!v23)
  {
    *(void *)(v18 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_260FE5270();
  __break(1u);
  return result;
}

void *sub_260DB83D0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DE8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4BD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_260DB8584()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4BD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_260DB8730()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DC0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4BD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_260DB88C4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F48);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4BD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_260DB8A5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Concept(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8, v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E88);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_260FE4BD0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v9;
    return result;
  }
  uint64_t result = (void *)(v8 + 56);
  uint64_t v11 = v7 + 56;
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v11 + 8 * v12) {
    uint64_t result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v17) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v17) {
        goto LABEL_25;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v17) {
          goto LABEL_25;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v13);
        if (!v22) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v20 = *(void *)(v3 + 72) * v19;
    sub_260DC713C(*(void *)(v7 + 48) + v20, (uint64_t)v6, type metadata accessor for Concept);
    uint64_t result = (void *)sub_260DC79D4((uint64_t)v6, *(void *)(v9 + 48) + v20, type metadata accessor for Concept);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v17) {
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_260DB8CC0(uint64_t *a1, uint64_t (*a2)(void))
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v27 = v2;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_260FE4BD0();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v27 = v6;
    return result;
  }
  uint64_t result = (void *)(v5 + 56);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  uint64_t v28 = (const void *)(v4 + 56);
  if (v6 != v4 || (unint64_t)result >= v4 + 56 + 8 * v8) {
    uint64_t result = memmove(result, v28, 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 56);
  int64_t v29 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v29) {
      goto LABEL_28;
    }
    unint64_t v24 = *((void *)v28 + v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v29) {
        goto LABEL_28;
      }
      unint64_t v24 = *((void *)v28 + v10);
      if (!v24)
      {
        int64_t v10 = v23 + 2;
        if (v23 + 2 >= v29) {
          goto LABEL_28;
        }
        unint64_t v24 = *((void *)v28 + v10);
        if (!v24) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v16 = a2(0);
    uint64_t v17 = *(void *)(v16 - 8);
    MEMORY[0x270FA5388](v16, v18);
    unint64_t v20 = (char *)&v26 - v19;
    unint64_t v22 = *(void *)(v21 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))((char *)&v26 - v19, *(void *)(v4 + 48) + v22, v16);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(void *)(v6 + 48) + v22, v20, v16);
  }
  int64_t v25 = v23 + 3;
  if (v25 >= v29) {
    goto LABEL_28;
  }
  unint64_t v24 = *((void *)v28 + v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_28;
    }
    unint64_t v24 = *((void *)v28 + v10);
    ++v25;
    if (v24) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_260DB8F74()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DE8);
  uint64_t v3 = sub_260FE4BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_260FE52F0();
    swift_bridgeObjectRetain();
    sub_260FE41D0();
    uint64_t result = sub_260FE5340();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_260DB9224()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DF8);
  uint64_t v3 = sub_260FE4BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_40:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v27 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v28) {
      goto LABEL_38;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v28) {
        goto LABEL_38;
      }
      unint64_t v15 = *(void *)(v27 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v28) {
          goto LABEL_38;
        }
        unint64_t v15 = *(void *)(v27 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    sub_260FE52F0();
    sub_260FE5300();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = v17 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_260FE41D0();
        swift_bridgeObjectRelease();
        v19 += 16;
        --v18;
      }
      while (v18);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_260FE5340();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v28)
  {
LABEL_38:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_40;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v28) {
      goto LABEL_38;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_260DB952C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DC0);
  uint64_t v3 = sub_260FE4BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_260FE52F0();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_260FE5340();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_260DB9808()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7070);
  uint64_t v3 = sub_260FE4BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 56);
  uint64_t v35 = v0;
  uint64_t v36 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v6;
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v36 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v37) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v36 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = sub_260FE3130();
    int64_t v38 = &v35;
    uint64_t v19 = *(void *)(v18 - 8);
    MEMORY[0x270FA5388](v18, v20);
    unint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = v23;
    uint64_t v25 = v2;
    uint64_t v26 = *(void *)(v2 + 48);
    uint64_t v27 = *(void *)(v24 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v22, v26 + v27 * v14, v18);
    sub_260DD8CC8(&qword_26A8E7058, MEMORY[0x270FA9728]);
    uint64_t result = sub_260FE3EF0();
    uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v9 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v12 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v19 + 32))(*(void *)(v4 + 48) + v12 * v27, v22, v18);
    ++*(void *)(v4 + 16);
    uint64_t v2 = v25;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v37)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v35;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v36 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_260DB9BA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F48);
  uint64_t result = sub_260FE4BE0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    sub_260FE52F0();
    sub_260FE5300();
    sub_260FE5300();
    uint64_t result = sub_260FE5340();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *unint64_t v12 = v19;
    v12[1] = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_260DB9E4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Concept(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8, v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E88);
  uint64_t v8 = sub_260FE4BE0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v9;
    return result;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 56);
  char v31 = v0;
  uint64_t v32 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  int64_t v33 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v8 + 56;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v33) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v33) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = *(void *)(v3 + 72);
    sub_260DC713C(*(void *)(v7 + 48) + v23 * v19, (uint64_t)v6, type metadata accessor for Concept);
    sub_260FE52F0();
    Concept.hash(into:)();
    uint64_t result = sub_260FE5340();
    uint64_t v24 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v25) & ~*(void *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = sub_260DC79D4((uint64_t)v6, *(void *)(v9 + 48) + v17 * v23, type metadata accessor for Concept);
    ++*(void *)(v9 + 16);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v33)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v31;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v33) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_260DBA1B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6EA0);
  uint64_t v3 = sub_260FE4BE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 56);
  uint64_t v35 = v0;
  uint64_t v36 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v6;
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v36 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v37) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v36 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = sub_260FE3110();
    int64_t v38 = &v35;
    uint64_t v19 = *(void *)(v18 - 8);
    MEMORY[0x270FA5388](v18, v20);
    int64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = v23;
    uint64_t v25 = v2;
    uint64_t v26 = *(void *)(v2 + 48);
    uint64_t v27 = *(void *)(v24 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v22, v26 + v27 * v14, v18);
    sub_260DD8CC8((unint64_t *)&qword_26A8E67C8, MEMORY[0x270FA9410]);
    uint64_t result = sub_260FE3EF0();
    uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v9 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v12 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v19 + 32))(*(void *)(v4 + 48) + v12 * v27, v22, v18);
    ++*(void *)(v4 + 16);
    uint64_t v2 = v25;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v37)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v35;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v36 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void *sub_260DBA550(uint64_t a1)
{
  return sub_260DBA678(a1, &qword_26A8E6C88, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_260DC4028);
}

void *sub_260DBA570(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66F0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  uint64_t v6 = sub_260DC4228((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_260DD782C();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_260DBA658(uint64_t a1)
{
  return sub_260DBA678(a1, &qword_26A8E6A88, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_260DC45B8);
}

void *sub_260DBA678(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = (void *)swift_allocObject();
  int64_t v7 = _swift_stdlib_malloc_size(v6);
  uint64_t v8 = v7 - 32;
  if (v7 < 32) {
    uint64_t v8 = v7 - 17;
  }
  void v6[2] = v3;
  v6[3] = 2 * (v8 >> 4);
  uint64_t v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_260DD782C();
  if (v9 != v3)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v6;
}

size_t sub_260DBA764(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D00);
  uint64_t v3 = *(void *)(type metadata accessor for GeneratedImage() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      void v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_260DC474C(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_260DD782C();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_260DBA8B8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E68);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

size_t sub_260DBAA2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C70);
  uint64_t v3 = *(void *)(sub_260FE3110() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      void v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_260DC4A70(&v10, (char *)v6 + v5, v1, a1);
      sub_260DD782C();
      if (v9 == (void *)v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_260DBAB60(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E60);
  uint64_t v3 = *(void *)(type metadata accessor for Concept(0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      void v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_260DC4EA8(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_260DD782C();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_260DBACB4(uint64_t a1, uint64_t a2)
{
  sub_260FE52F0();
  sub_260FE41D0();
  uint64_t v4 = sub_260FE5340();
  return sub_260DBB5B8(a1, a2, v4);
}

unint64_t sub_260DBAD2C(unsigned __int8 a1)
{
  sub_260FE52F0();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_260FE5340();
  return sub_260DBBA20(a1, v2);
}

uint64_t sub_260DBADF0(uint64_t a1)
{
  return sub_260DBB4F4(a1, (void (*)(unsigned char *, uint64_t))sub_260DB0374, (uint64_t (*)(uint64_t, uint64_t))sub_260DBB69C);
}

unint64_t sub_260DBAE1C(uint64_t a1)
{
  sub_260FE52F0();
  type metadata accessor for CFString(0);
  sub_260DD6B24();
  sub_260FE3460();
  uint64_t v2 = sub_260FE5340();
  return sub_260DBBBBC(a1, v2);
}

unint64_t sub_260DBAEA0(uint64_t a1)
{
  uint64_t v2 = sub_260FE4BA0();
  return sub_260DBBCE8(a1, v2);
}

uint64_t sub_260DBAEE4(void *a1)
{
  sub_260FE52F0();
  uint64_t v2 = a1[2];
  sub_260FE5300();
  if (v2)
  {
    uint64_t v3 = a1 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
  }
  uint64_t v4 = sub_260FE5340();
  return sub_260DBBDB0(a1, v4);
}

unint64_t sub_260DBAF94(char a1)
{
  char v1 = a1 & 1;
  sub_260FE52F0();
  sub_260FE5300();
  uint64_t v2 = sub_260FE5340();
  return sub_260DBBF20(v1, v2);
}

unint64_t sub_260DBB004(uint64_t a1)
{
  sub_260FE4DD0();
  uint64_t v2 = sub_260FE3EF0();
  return sub_260DBBFDC(a1, v2);
}

unint64_t sub_260DBB068(char a1)
{
  sub_260FE52F0();
  AppleDiffusionAdapter.rawValue.getter(a1);
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_260FE5340();
  return sub_260DBC174(a1, v2);
}

unint64_t sub_260DBB0F0(unsigned __int8 a1)
{
  sub_260FE52F0();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_260FE5340();
  return sub_260DBC51C(a1, v2);
}

unint64_t sub_260DBB234(unsigned __int8 a1)
{
  sub_260FE52F0();
  sub_260FE5300();
  uint64_t v2 = sub_260FE5340();
  return sub_260DBC7BC(a1, v2);
}

unint64_t sub_260DBB2A0(unsigned __int8 a1)
{
  uint64_t v2 = sub_260DC51CC();
  return sub_260DBC85C(a1, v2);
}

unint64_t sub_260DBB2E4(uint64_t a1, uint64_t a2)
{
  sub_260FE52F0();
  sub_260FE5300();
  sub_260FE5300();
  uint64_t v4 = sub_260FE5340();
  return sub_260DBCB0C(a1, a2, v4);
}

unint64_t sub_260DBB368(uint64_t a1)
{
  sub_260FE40A0();
  sub_260FE52F0();
  sub_260FE41D0();
  uint64_t v2 = sub_260FE5340();
  swift_bridgeObjectRelease();
  return sub_260DBCB88(a1, v2);
}

unint64_t sub_260DBB3F8(unsigned __int8 a1)
{
  sub_260FE52F0();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_260FE5340();
  return sub_260DBCD00(a1, v2);
}

uint64_t sub_260DBB4C8(uint64_t a1)
{
  return sub_260DBB4F4(a1, (void (*)(unsigned char *, uint64_t))sub_260DC59B0, (uint64_t (*)(uint64_t, uint64_t))sub_260DBCEB4);
}

uint64_t sub_260DBB4F4(uint64_t a1, void (*a2)(unsigned char *, uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  sub_260FE52F0();
  a2(v8, a1);
  uint64_t v5 = sub_260FE5340();
  return a3(a1, v5);
}

unint64_t sub_260DBB574(unsigned __int8 a1)
{
  uint64_t v2 = sub_260DC5B20();
  return sub_260DBD234(a1, v2);
}

unint64_t sub_260DBB5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_260FE5150() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_260FE5150() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_260DBB69C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEB00000000776F6CLL;
      uint64_t v8 = 0x6C6559696A6F6D65;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE700000000000000;
          unsigned int v9 = 1919508838;
          goto LABEL_13;
        case 2:
          uint64_t v8 = 0x696146746867696CLL;
          unint64_t v7 = 0xE900000000000072;
          break;
        case 3:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1919508838;
          break;
        case 4:
          uint64_t v8 = 0x64654D746867696CLL;
          unint64_t v7 = 0xEB000000006D7569;
          break;
        case 5:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x6D756964656DLL;
          break;
        case 6:
          uint64_t v8 = 0x61446D756964656DLL;
          unint64_t v7 = 0xEA00000000006B72;
          break;
        case 7:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1802658148;
          break;
        case 8:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x6B72614470656564;
          break;
        case 9:
          unint64_t v7 = 0xE700000000000000;
          unsigned int v9 = 1802658148;
LABEL_13:
          uint64_t v8 = v9 | 0x74736500000000;
          break;
        default:
          break;
      }
      unint64_t v10 = 0xEB00000000776F6CLL;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE700000000000000;
          unsigned int v12 = 1919508838;
          goto LABEL_36;
        case 2:
          unint64_t v10 = 0xE900000000000072;
          if (v8 != 0x696146746867696CLL) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 3:
          unint64_t v10 = 0xE400000000000000;
          if (v8 != 1919508838) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 4:
          unint64_t v10 = 0xEB000000006D7569;
          if (v8 != 0x64654D746867696CLL) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 5:
          unint64_t v10 = 0xE600000000000000;
          if (v8 != 0x6D756964656DLL) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 6:
          unint64_t v10 = 0xEA00000000006B72;
          if (v8 != 0x61446D756964656DLL) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 7:
          unint64_t v10 = 0xE400000000000000;
          if (v8 != 1802658148) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 8:
          unint64_t v10 = 0xE800000000000000;
          if (v8 != 0x6B72614470656564) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 9:
          unint64_t v10 = 0xE700000000000000;
          unsigned int v12 = 1802658148;
LABEL_36:
          if (v8 != (v12 | 0x74736500000000)) {
            goto LABEL_17;
          }
          goto LABEL_16;
        default:
          if (v8 != 0x6C6559696A6F6D65) {
            goto LABEL_17;
          }
LABEL_16:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_17:
          char v11 = sub_260FE5150();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_260DBBA20(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x6E616D6F77;
          int v9 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v8 = 0x6E79676F72646E61;
          unint64_t v7 = 0xEB0000000073756FLL;
          int v9 = a1;
          if (!a1)
          {
LABEL_17:
            unint64_t v11 = 0xE300000000000000;
            if (v8 != 7233901) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        unint64_t v7 = 0xE300000000000000;
        uint64_t v8 = 7233901;
        int v9 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 0x6E616D6F77;
      }
      else {
        uint64_t v10 = 0x6E79676F72646E61;
      }
      if (v9 == 1) {
        unint64_t v11 = 0xE500000000000000;
      }
      else {
        unint64_t v11 = 0xEB0000000073756FLL;
      }
      if (v8 != v10) {
        goto LABEL_19;
      }
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = sub_260FE5150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_260DBBBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_260DD6B24();
    id v7 = v6;
    char v8 = sub_260FE3450();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_260FE3450();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_260DBBCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_260DD6B7C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x26122B400](v9, a1);
      sub_260DD6BD8((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_260DBBDB0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
    return v5;
  }
  uint64_t v7 = ~v4;
  uint64_t v8 = a1[2];
  uint64_t v9 = *(void *)(v2 + 48);
  id v10 = a1 + 9;
  while (1)
  {
    char v11 = *(void **)(v9 + 8 * v5);
    if (v11[2] == v8)
    {
      if (!v8 || v11 == a1) {
        return v5;
      }
      BOOL v12 = v11[4] == a1[4] && v11[5] == a1[5];
      if (v12 || (sub_260FE5150() & 1) != 0)
      {
        if (v8 == 1) {
          return v5;
        }
        uint64_t result = v11[6];
        if (result == a1[6] && v11[7] == a1[7]) {
          break;
        }
        uint64_t result = sub_260FE5150();
        if (result) {
          break;
        }
      }
    }
LABEL_3:
    unint64_t v5 = (v5 + 1) & v7;
    if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      return v5;
    }
  }
  if (v8 == 2) {
    return v5;
  }
  int64_t v15 = v11 + 9;
  unint64_t v16 = v10;
  uint64_t v17 = v8 - 2;
  while (v17)
  {
    uint64_t result = *(v15 - 1);
    if (result != *(v16 - 1) || *v15 != *v16)
    {
      uint64_t result = sub_260FE5150();
      if ((result & 1) == 0) {
        goto LABEL_3;
      }
    }
    v15 += 2;
    v16 += 2;
    if (!--v17) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_260DBBF20(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_260DBBFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a1;
  uint64_t v4 = sub_260FE4DD0();
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v21 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    BOOL v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v12 = v6 + 16;
    unint64_t v13 = v14;
    uint64_t v15 = *(void *)(v12 + 56);
    unint64_t v16 = (void (**)(char *, uint64_t))(v12 - 8);
    do
    {
      uint64_t v17 = v12;
      v13(v8, *(void *)(v23 + 48) + v15 * v10, v4);
      char v18 = sub_260FE3FD0();
      (*v16)(v8, v4);
      if (v18) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      uint64_t v12 = v17;
    }
    while (((*(void *)(v21 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_260DBC174(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE90000000000006ELL;
      unint64_t v8 = 0x6F6974616D696E61;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0xD000000000000016;
          unint64_t v7 = 0x8000000260FFC250;
          break;
        case 2:
          unint64_t v7 = 0xE500000000000000;
          unint64_t v8 = 0x696A6F6D65;
          break;
        case 3:
          unint64_t v7 = 0x8000000260FFC230;
          unint64_t v8 = 0xD000000000000012;
          break;
        case 4:
          unint64_t v8 = 0x61727473756C6C69;
          unint64_t v7 = 0xEC0000006E6F6974;
          break;
        case 5:
          unint64_t v8 = 0xD000000000000019;
          unint64_t v7 = 0x8000000260FFC210;
          break;
        case 6:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x686374656B73;
          break;
        case 7:
          unint64_t v8 = 0xD000000000000013;
          unint64_t v7 = 0x8000000260FFC1F0;
          break;
        case 8:
          unint64_t v8 = 0x63735F656C797473;
          unint64_t v7 = 0xEE00656C62626972;
          break;
        case 9:
          unint64_t v8 = 0xD00000000000001BLL;
          unint64_t v7 = 0x8000000260FFC1D0;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE90000000000006ELL;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xD000000000000016;
          uint64_t v11 = "personalized_emoji";
          goto LABEL_27;
        case 2:
          unint64_t v9 = 0xE500000000000000;
          if (v8 != 0x696A6F6D65) {
            goto LABEL_33;
          }
          goto LABEL_32;
        case 3:
          unint64_t v9 = 0x8000000260FFC230;
          if (v8 != 0xD000000000000012) {
            goto LABEL_33;
          }
          goto LABEL_32;
        case 4:
          unint64_t v9 = 0xEC0000006E6F6974;
          if (v8 != 0x61727473756C6C69) {
            goto LABEL_33;
          }
          goto LABEL_32;
        case 5:
          unint64_t v10 = 0xD000000000000019;
          uint64_t v11 = "personalized_sketch";
          goto LABEL_27;
        case 6:
          unint64_t v9 = 0xE600000000000000;
          if (v8 != 0x686374656B73) {
            goto LABEL_33;
          }
          goto LABEL_32;
        case 7:
          unint64_t v10 = 0xD000000000000013;
          uint64_t v11 = "personalized_style_scribble";
LABEL_27:
          unint64_t v9 = (unint64_t)v11 | 0x8000000000000000;
          if (v8 != v10) {
            goto LABEL_33;
          }
          goto LABEL_32;
        case 8:
          unint64_t v9 = 0xEE00656C62626972;
          if (v8 != 0x63735F656C797473) {
            goto LABEL_33;
          }
          goto LABEL_32;
        case 9:
          unint64_t v9 = 0x8000000260FFC1D0;
          if (v8 == 0xD00000000000001BLL) {
            goto LABEL_32;
          }
          goto LABEL_33;
        default:
          if (v8 != 0x6F6974616D696E61) {
            goto LABEL_33;
          }
LABEL_32:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_33:
          char v12 = sub_260FE5150();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v12) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_260DBC51C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE90000000000006ELL;
      uint64_t v8 = 0x6F6974616D696E61;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x696A6F6D65;
          break;
        case 2:
          uint64_t v8 = 0x61727473756C6C69;
          unint64_t v7 = 0xEC0000006E6F6974;
          break;
        case 3:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x686374656B73;
          break;
        case 4:
          uint64_t v8 = 0x6C75616665645F5FLL;
          unint64_t v7 = 0xEB000000005F5F74;
          break;
        case 5:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x6F6974616D696E61;
      unint64_t v10 = 0xE90000000000006ELL;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE500000000000000;
          if (v8 == 0x696A6F6D65) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v10 = 0xEC0000006E6F6974;
          if (v8 != 0x61727473756C6C69) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          unint64_t v10 = 0xE600000000000000;
          if (v8 != 0x686374656B73) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          uint64_t v9 = 0x6C75616665645F5FLL;
          unint64_t v10 = 0xEB000000005F5F74;
          goto LABEL_17;
        case 5:
          unint64_t v10 = 0xE700000000000000;
          if (v8 != 0x6E776F6E6B6E75) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v9) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v11 = sub_260FE5150();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_260DBC7BC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_260DBC85C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 0x6E616D6F77;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE300000000000000;
          uint64_t v8 = 7233901;
          break;
        case 2:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x6E6F73726570;
          break;
        case 3:
          uint64_t v8 = 0x616D6F7720646C6FLL;
          unint64_t v7 = 0xE90000000000006ELL;
          break;
        case 4:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x6E616D20646C6FLL;
          break;
        case 5:
          uint64_t v8 = 0x7372657020646C6FLL;
          unint64_t v7 = 0xEA00000000006E6FLL;
          break;
        case 6:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x79656C696D73;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE500000000000000;
      uint64_t v10 = 0x6E616D6F77;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE300000000000000;
          if (v8 == 7233901) {
            goto LABEL_21;
          }
          goto LABEL_22;
        case 2:
          unint64_t v9 = 0xE600000000000000;
          if (v8 != 0x6E6F73726570) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 3:
          unint64_t v9 = 0xE90000000000006ELL;
          if (v8 != 0x616D6F7720646C6FLL) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 4:
          unint64_t v9 = 0xE700000000000000;
          if (v8 != 0x6E616D20646C6FLL) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 5:
          uint64_t v10 = 0x7372657020646C6FLL;
          unint64_t v9 = 0xEA00000000006E6FLL;
          goto LABEL_20;
        case 6:
          unint64_t v9 = 0xE600000000000000;
          if (v8 != 0x79656C696D73) {
            goto LABEL_22;
          }
          goto LABEL_21;
        default:
LABEL_20:
          if (v8 != v10) {
            goto LABEL_22;
          }
LABEL_21:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_22:
          char v11 = sub_260FE5150();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_260DBCB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      uint64_t v8 = (uint64_t *)(*(void *)(v3 + 48) + 16 * result);
      uint64_t v10 = *v8;
      uint64_t v9 = v8[1];
      if (v10 == a1 && v9 == a2) {
        break;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_260DBCB88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_260FE40A0();
    uint64_t v8 = v7;
    if (v6 == sub_260FE40A0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_260FE5150();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_260FE40A0();
          uint64_t v15 = v14;
          if (v13 == sub_260FE40A0() && v15 == v16) {
            break;
          }
          char v18 = sub_260FE5150();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_260DBCD00(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          uint64_t v7 = 0x676E696E69617274;
          unint64_t v8 = 0xEB00000000676154;
          int v9 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          unint64_t v8 = 0xE800000000000000;
          uint64_t v7 = 0x6365705361726F6CLL;
          int v9 = a1;
          if (!a1)
          {
LABEL_17:
            unint64_t v11 = 0xE700000000000000;
            if (v7 != 0x676F6C61746163) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        unint64_t v8 = 0xE700000000000000;
        uint64_t v7 = 0x676F6C61746163;
        int v9 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 0x676E696E69617274;
      }
      else {
        uint64_t v10 = 0x6365705361726F6CLL;
      }
      if (v9 == 1) {
        unint64_t v11 = 0xEB00000000676154;
      }
      else {
        unint64_t v11 = 0xE800000000000000;
      }
      if (v7 != v10) {
        goto LABEL_19;
      }
LABEL_18:
      if (v8 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = sub_260FE5150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_260DBCEB4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE400000000000000;
      unint64_t v8 = 1952804469;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0x6E75684374656E75;
          unint64_t v7 = 0xEA0000000000316BLL;
          break;
        case 2:
          unint64_t v7 = 0xEA0000000000326BLL;
          unint64_t v8 = 0x6E75684374656E75;
          break;
        case 3:
          unint64_t v8 = 0x6F636E4570696C63;
          unint64_t v7 = 0xEB00000000726564;
          break;
        case 4:
          unint64_t v8 = 0x7265646F636E65;
          unint64_t v7 = 0xE700000000000000;
          break;
        case 5:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x7265646F636564;
          break;
        case 6:
          unint64_t v8 = 0x6365446168706C61;
          unint64_t v7 = 0xEC0000007265646FLL;
          break;
        case 7:
          unint64_t v8 = 0xD000000000000011;
          unint64_t v7 = 0x8000000260FFC290;
          break;
        case 8:
          unint64_t v7 = 0x8000000260FFC270;
          unint64_t v8 = 0xD000000000000010;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE400000000000000;
      unint64_t v10 = 1952804469;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xEA0000000000316BLL;
          if (v8 == 0x6E75684374656E75) {
            goto LABEL_27;
          }
          goto LABEL_28;
        case 2:
          unint64_t v9 = 0xEA0000000000326BLL;
          if (v8 != 0x6E75684374656E75) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 3:
          unint64_t v9 = 0xEB00000000726564;
          if (v8 != 0x6F636E4570696C63) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 4:
          unint64_t v9 = 0xE700000000000000;
          if (v8 != 0x7265646F636E65) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 5:
          unint64_t v9 = 0xE700000000000000;
          if (v8 != 0x7265646F636564) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 6:
          unint64_t v9 = 0xEC0000007265646FLL;
          if (v8 != 0x6365446168706C61) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 7:
          unint64_t v10 = 0xD000000000000011;
          unint64_t v9 = 0x8000000260FFC290;
          goto LABEL_26;
        case 8:
          unint64_t v9 = 0x8000000260FFC270;
          if (v8 != 0xD000000000000010) {
            goto LABEL_28;
          }
          goto LABEL_27;
        default:
LABEL_26:
          if (v8 != v10) {
            goto LABEL_28;
          }
LABEL_27:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_28:
          char v11 = sub_260FE5150();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_260DBD234(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0x8000000260FFC3F0;
      unint64_t v8 = 0xD00000000000001ELL;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v9 = "le_draw_over_image";
          goto LABEL_9;
        case 2:
          unint64_t v10 = "le_sketch_to_image";
          goto LABEL_12;
        case 3:
          unint64_t v10 = "conditioning_range_with_prompt";
          goto LABEL_12;
        case 4:
          unint64_t v7 = 0x8000000260FFC340;
          unint64_t v8 = 0xD00000000000001ELL;
          break;
        case 5:
          unint64_t v9 = "ge_draw_over_image";
LABEL_9:
          unint64_t v7 = (unint64_t)v9 | 0x8000000000000000;
          unint64_t v8 = 0xD000000000000021;
          break;
        case 6:
          unint64_t v10 = "ge_sketch_to_image";
          goto LABEL_12;
        case 7:
          unint64_t v10 = "sketchConditioner";
LABEL_12:
          unint64_t v7 = (unint64_t)v10 | 0x8000000000000000;
          unint64_t v8 = 0xD000000000000022;
          break;
        default:
          break;
      }
      unint64_t v11 = 0x8000000260FFC3F0;
      unint64_t v12 = 0xD00000000000001ELL;
      switch(v6)
      {
        case 1:
          uint64_t v13 = "le_draw_over_image";
          goto LABEL_20;
        case 2:
          uint64_t v14 = "le_sketch_to_image";
          goto LABEL_25;
        case 3:
          uint64_t v14 = "conditioning_range_with_prompt";
          goto LABEL_25;
        case 4:
          unint64_t v11 = 0x8000000260FFC340;
          if (v8 != 0xD00000000000001ELL) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 5:
          uint64_t v13 = "ge_draw_over_image";
LABEL_20:
          unint64_t v11 = (unint64_t)v13 | 0x8000000000000000;
          unint64_t v12 = 0xD000000000000021;
          goto LABEL_21;
        case 6:
          uint64_t v14 = "ge_sketch_to_image";
          goto LABEL_25;
        case 7:
          uint64_t v14 = "sketchConditioner";
LABEL_25:
          unint64_t v11 = (unint64_t)v14 | 0x8000000000000000;
          if (v8 == 0xD000000000000022) {
            goto LABEL_26;
          }
          goto LABEL_27;
        default:
LABEL_21:
          if (v8 != v12) {
            goto LABEL_27;
          }
LABEL_26:
          if (v7 == v11)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_27:
          char v15 = sub_260FE5150();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v15) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_260DBD4EC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E00);
  uint64_t v6 = (void *)sub_260FE4E70();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v22 = 1 << *(unsigned char *)(v5 + 32);
                if (v22 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v8 = -1 << v22;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      uint64_t v19 = 8 * v15;
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + v19);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + v19);
      if ((a2 & 1) == 0) {
        uint64_t v20 = swift_bridgeObjectRetain();
      }
      unint64_t result = sub_260DC184C(v20, v21, v6);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_260DBD6CC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D58);
  char v37 = a2;
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_260FE52F0();
    sub_260FE41D0();
    uint64_t result = sub_260FE5340();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_260DBD9D8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v45 = sub_260FE4DD0();
  uint64_t v5 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45, v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D48);
  int v46 = a2;
  uint64_t v10 = sub_260FE4E70();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v39 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    int64_t v41 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v40 = (unint64_t)(v12 + 63) >> 6;
    long long v42 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v43 = v9;
    uint64_t v44 = v8;
    while (1)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v40) {
          goto LABEL_34;
        }
        unint64_t v23 = v41[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v40) {
            goto LABEL_34;
          }
          unint64_t v23 = v41[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v40)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v39;
              if (v46)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v9 + 32);
                if (v37 >= 64) {
                  bzero(v41, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v41 = -1 << v37;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v41[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v40) {
                  goto LABEL_34;
                }
                unint64_t v23 = v41[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = v5;
      uint64_t v26 = *(void *)(v5 + 72);
      unint64_t v27 = *(void *)(v9 + 48) + v26 * v21;
      uint64_t v28 = v44;
      uint64_t v29 = v45;
      if (v46)
      {
        (*v47)(v44, v27, v45);
        sub_260D906FC((_OWORD *)(*(void *)(v9 + 56) + 32 * v21), v48);
      }
      else
      {
        (*v42)(v44, v27, v45);
        sub_260D90650(*(void *)(v9 + 56) + 32 * v21, (uint64_t)v48);
      }
      uint64_t result = sub_260FE3EF0();
      uint64_t v30 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v16 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v19 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      (*v47)((char *)(*(void *)(v11 + 48) + v26 * v19), (unint64_t)v28, v29);
      uint64_t result = (uint64_t)sub_260D906FC(v48, (_OWORD *)(*(void *)(v11 + 56) + 32 * v19));
      ++*(void *)(v11 + 16);
      uint64_t v5 = v25;
      uint64_t v9 = v43;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_260DBDDD4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CA0);
  uint64_t result = sub_260FE4E70();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    int64_t v8 = 0;
    BOOL v35 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v34) {
          goto LABEL_31;
        }
        unint64_t v18 = v35[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v34) {
            goto LABEL_31;
          }
          unint64_t v18 = v35[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v34)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v35 = -1 << v32;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v35[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v34) {
                  goto LABEL_31;
                }
                unint64_t v18 = v35[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      unint64_t v21 = (char *)(*(void *)(v5 + 56) + 3 * v16);
      char v22 = v21[2];
      char v23 = v21[1];
      char v24 = *v21;
      sub_260FE52F0();
      sub_260FE5300();
      uint64_t result = sub_260FE5340();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v7 + 48) + v13) = v20;
      uint64_t v14 = (unsigned char *)(*(void *)(v7 + 56) + 3 * v13);
      *uint64_t v14 = v24;
      v14[1] = v23;
      v14[2] = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_260DBE0C4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D30);
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_40;
    }
    if (v20 >= v31) {
      break;
    }
    unint64_t v21 = v32[v20];
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v31) {
        break;
      }
      unint64_t v21 = v32[v12];
      if (!v21)
      {
        int64_t v22 = v20 + 2;
        if (v22 >= v31) {
          break;
        }
        unint64_t v21 = v32[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v12 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_41;
            }
            if (v12 >= v31) {
              goto LABEL_34;
            }
            unint64_t v21 = v32[v12];
            ++v22;
            if (v21) {
              goto LABEL_30;
            }
          }
        }
        int64_t v12 = v22;
      }
    }
LABEL_30:
    unint64_t v10 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_31:
    char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
    uint64_t v28 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_260FE52F0();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_260FE5340();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v14) >> 6;
    do
    {
      if (++v16 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        JUMPOUT(0x260DBE4B0);
      }
      BOOL v25 = v16 == v24;
      if (v16 == v24) {
        unint64_t v16 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v11 + 8 * v16);
    }
    while (v26 == -1);
    unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
LABEL_8:
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v27;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v28;
    ++*(void *)(v7 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v3 = v2;
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    if (v29 >= 64) {
      bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v32 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_260DBE4D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D28);
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = v2;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v17 >= v32) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v33 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v33 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v32)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v31;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v19 = *(void *)(v33 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v32) {
              goto LABEL_33;
            }
            unint64_t v19 = *(void *)(v33 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
    uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_260FE52F0();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_260FE5340();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v7 + 48) + v14) = v21;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v22;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v31;
  unint64_t v18 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v18, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_260DBE818(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D10);
  char v42 = a2;
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    int64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    BOOL v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_260FE52F0();
    sub_260FE41D0();
    uint64_t result = sub_260FE5340();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    int64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *int64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_260DBEB40(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D08);
  char v36 = a2;
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_260FE52F0();
    sub_260FE41D0();
    uint64_t result = sub_260FE5340();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_260DBEE58(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F50);
  uint64_t result = sub_260FE4E70();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v21 >= v12) {
          goto LABEL_33;
        }
        unint64_t v22 = v30[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v22 = v30[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v30[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v22 = v30[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v11 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      long long v31 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v20);
      uint64_t v28 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_260FE52F0();
      sub_260FE5300();
      sub_260FE5300();
      uint64_t result = sub_260FE5340();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        long long v18 = v31;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        long long v18 = v31;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v17) = v18;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v28;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_260DBF144(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CB0);
  char v37 = a2;
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_260FE52F0();
    sub_260FE41D0();
    uint64_t result = sub_260FE5340();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    long long v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *long long v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_260DBF458(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C98);
  uint64_t result = sub_260FE4E70();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v36 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v21 = v20 | (v8 << 6);
      }
      else
      {
        int64_t v22 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v22 >= v35) {
          goto LABEL_33;
        }
        unint64_t v23 = v36[v22];
        ++v8;
        if (!v23)
        {
          int64_t v8 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v23 = v36[v8];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
              if (v34 >= 64) {
                bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v36 = -1 << v34;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v8 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v23 = v36[v8];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v24;
          }
        }
LABEL_30:
        unint64_t v11 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v8 << 6);
      }
      uint64_t v29 = 16 * v21;
      long long v37 = *(_OWORD *)(*(void *)(v5 + 48) + v29);
      uint64_t v30 = *(void *)(v5 + 56) + v29;
      uint64_t v31 = *(void **)v30;
      char v32 = *(unsigned char *)(v30 + 8);
      if ((a2 & 1) == 0) {
        id v33 = v31;
      }
      sub_260FE52F0();
      sub_260FE5300();
      sub_260FE5300();
      uint64_t result = sub_260FE5340();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        long long v17 = v37;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v13) >> 6;
        long long v17 = v37;
        do
        {
          if (++v15 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v15 == v26;
          if (v15 == v26) {
            unint64_t v15 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v15);
        }
        while (v28 == -1);
        unint64_t v16 = __clz(__rbit64(~v28)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v18 = 16 * v16;
      *(_OWORD *)(*(void *)(v7 + 48) + v18) = v17;
      uint64_t v19 = *(void *)(v7 + 56) + v18;
      *(void *)uint64_t v19 = v31;
      *(unsigned char *)(v19 + 8) = v32;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_260DBF760(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D18);
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_260D906FC(v24, v35);
      }
      else
      {
        sub_260D90650((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_260FE52F0();
      sub_260FE41D0();
      uint64_t result = sub_260FE5340();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_260D906FC(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_260DBFA60(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D50);
  char v6 = a2;
  uint64_t v7 = sub_260FE4E70();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_260FE52F0();
      sub_260FE41D0();
      uint64_t result = sub_260FE5340();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      int64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      *int64_t v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_260DBFD6C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CD8);
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_260D906FC((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_260DD6B7C(v25, (uint64_t)&v38);
      sub_260D90650(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_260FE4BA0();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_260D906FC(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_260DC0084(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for GeneratedImage();
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DD8);
  uint64_t result = sub_260FE4E70();
  uint64_t v11 = result;
  if (*(void *)(v9 + 16))
  {
    int64_t v12 = 0;
    uint64_t v13 = *(void *)(v9 + 64);
    long long v37 = (void *)(v9 + 64);
    uint64_t v14 = 1 << *(unsigned char *)(v9 + 32);
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v13;
    uint64_t v35 = v2;
    int64_t v36 = (unint64_t)(v14 + 63) >> 6;
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v16)
      {
        unint64_t v19 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v20 = v19 | (v12 << 6);
      }
      else
      {
        int64_t v21 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v12;
        if (!v22)
        {
          int64_t v12 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v12];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_41;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v9 + 32);
              if (v34 >= 64) {
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *long long v37 = -1 << v34;
              }
              uint64_t v3 = v35;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v12 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v12 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v12];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v23;
          }
        }
LABEL_21:
        unint64_t v16 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v12 << 6);
      }
      uint64_t v24 = *(void *)(v9 + 56);
      long long v39 = *(_OWORD *)(*(void *)(v9 + 48) + 16 * v20);
      uint64_t v25 = *(void *)(v38 + 72);
      uint64_t v26 = v24 + v25 * v20;
      if (a2) {
        sub_260DC79D4(v26, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      }
      else {
        sub_260DC713C(v26, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      }
      sub_260FE52F0();
      sub_260FE5300();
      sub_260FE5300();
      uint64_t result = sub_260FE5340();
      uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v18 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_OWORD *)(*(void *)(v11 + 48) + 16 * v18) = v39;
      uint64_t result = sub_260DC79D4((uint64_t)v8, *(void *)(v11 + 56) + v25 * v18, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      ++*(void *)(v11 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_260DC0430(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(0);
  uint64_t v41 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CF8);
  int v42 = a2;
  uint64_t v10 = sub_260FE4E70();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  v38[0] = v2;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v40 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v39 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v10 + 64;
  swift_retain();
  int64_t v17 = 0;
  v38[4] = "personalized_illustration";
  v38[5] = "personalized_emoji";
  void v38[2] = "personalized_style_scribble";
  v38[3] = "personalized_sketch";
  v38[1] = "with negative count";
LABEL_8:
  if (v15)
  {
    unint64_t v19 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v20 = v19 | (v17 << 6);
    goto LABEL_22;
  }
  int64_t v21 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_42;
  }
  if (v21 >= v39)
  {
    swift_release();
    uint64_t v3 = (uint64_t *)v38[0];
    unint64_t v22 = v40;
    if (v42)
    {
LABEL_37:
      uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
      if (v36 >= 64) {
        bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v22 = -1 << v36;
      }
      *(void *)(v9 + 16) = 0;
    }
  }
  else
  {
    unint64_t v22 = v40;
    unint64_t v23 = v40[v21];
    ++v17;
    if (v23) {
      goto LABEL_21;
    }
    int64_t v17 = v21 + 1;
    if (v21 + 1 >= v39) {
      goto LABEL_34;
    }
    unint64_t v23 = v40[v17];
    if (v23)
    {
LABEL_21:
      unint64_t v15 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
      char v25 = *(unsigned char *)(*(void *)(v9 + 48) + v20);
      uint64_t v26 = *(void *)(v41 + 72);
      uint64_t v27 = *(void *)(v9 + 56) + v26 * v20;
      if (v42) {
        sub_260DC79D4(v27, (uint64_t)v8, type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry);
      }
      else {
        sub_260DC713C(v27, (uint64_t)v8, type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry);
      }
      sub_260FE52F0();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      uint64_t v28 = sub_260FE5340();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = v28 & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      while (++v31 != v33 || (v32 & 1) == 0)
      {
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v16 + 8 * v31);
        if (v35 != -1)
        {
          unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
LABEL_7:
          *(void *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(unsigned char *)(*(void *)(v11 + 48) + v18) = v25;
          sub_260DC79D4((uint64_t)v8, *(void *)(v11 + 56) + v26 * v18, type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry);
          ++*(void *)(v11 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x260DC0958);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v39)
    {
      unint64_t v23 = v40[v24];
      if (!v23)
      {
        while (1)
        {
          int64_t v17 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_43;
          }
          if (v17 >= v39) {
            goto LABEL_34;
          }
          unint64_t v23 = v40[v17];
          ++v24;
          if (v23) {
            goto LABEL_21;
          }
        }
      }
      int64_t v17 = v24;
      goto LABEL_21;
    }
LABEL_34:
    swift_release();
    uint64_t v3 = (uint64_t *)v38[0];
    if (v42) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

unint64_t sub_260DC0980(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_260FE4DD0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4, v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    uint64_t v39 = a2 + 64;
    unint64_t result = sub_260FE4B80();
    uint64_t v13 = v39;
    if ((*(void *)(v39 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v37 = (result + 1) & v12;
      unint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v14 = v5 + 16;
      uint64_t v36 = v15;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v38 = v14;
      int64_t v17 = (uint64_t (**)(char *, uint64_t))(v14 - 8);
      do
      {
        int64_t v18 = v16 * v11;
        v36(v9, *(void *)(a2 + 48) + v16 * v11, v4);
        uint64_t v19 = sub_260FE3EF0();
        unint64_t result = (*v17)(v9, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v37)
        {
          if (v20 >= v37 && a1 >= (uint64_t)v20)
          {
LABEL_17:
            uint64_t v23 = *(void *)(a2 + 48);
            unint64_t result = v23 + v16 * a1;
            unint64_t v24 = v23 + v18 + v16;
            if (v16 * a1 < v18 || result >= v24)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v16 * a1 != v18)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v26 = *(void *)(a2 + 56);
            uint64_t v27 = (_OWORD *)(v26 + 32 * a1);
            uint64_t v28 = (_OWORD *)(v26 + 32 * v11);
            uint64_t v13 = v39;
            if (a1 != v11 || (a1 = v11, v27 >= v28 + 2))
            {
              long long v29 = v28[1];
              *uint64_t v27 = *v28;
              v27[1] = v29;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v37 || a1 >= (uint64_t)v20)
        {
          goto LABEL_17;
        }
        uint64_t v13 = v39;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
      }
      while (((*(void *)(v13 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    unint64_t v30 = (uint64_t *)(v13 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    unint64_t v30 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *unint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_260DC0C38(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_260FE4B80();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_260FE52F0();
        sub_260FE5300();
        unint64_t result = sub_260FE5340();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v3);
          uint64_t v13 = (unsigned char *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = v14 + 3 * v3;
          uint64_t v16 = (__int16 *)(v14 + 3 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= (unint64_t)v16 + 3))
          {
            __int16 v9 = *v16;
            *(unsigned char *)(v15 + 2) = *((unsigned char *)v16 + 2);
            *(_WORD *)unint64_t v15 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_260DC0E04(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_260FE4B80();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_260FE52F0();
        sub_260FE41D0();
        swift_bridgeObjectRelease();
        unint64_t result = sub_260FE5340();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          unint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    JUMPOUT(0x260DC10D0);
  }
  *(void *)(a2 + 16) = v21;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_260DC10F8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_260FE4B80();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_260FE52F0();
        sub_260FE41D0();
        swift_bridgeObjectRelease();
        unint64_t result = sub_260FE5340();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          unint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  uint64_t *v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_260DC1308(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_260FE4B80();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_260FE52F0();
        swift_bridgeObjectRetain();
        sub_260FE41D0();
        uint64_t v9 = sub_260FE5340();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *unint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_260DC14E0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_260FE4B80();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_260FE52F0();
        sub_260FE41D0();
        swift_bridgeObjectRelease();
        unint64_t result = sub_260FE5340();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = (unsigned char *)(v10 + v3);
        uint64_t v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *uint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(0)
                                    - 8)
                        + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
    JUMPOUT(0x260DC1824);
  }
  *(void *)(a2 + 16) = v24;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_260DC184C(uint64_t a1, uint64_t a2, void *a3)
{
  sub_260FE52F0();
  sub_260FE5300();
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v7 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      v7 += 16;
      --v6;
    }
    while (v6);
  }
  sub_260FE5340();
  unint64_t result = sub_260FE4B90();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v9 = 8 * result;
  *(void *)(a3[6] + v9) = a1;
  *(void *)(a3[7] + v9) = a2;
  ++a3[2];
  return result;
}

void *sub_260DC194C()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E00);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_260DC1AF0()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D58);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_260DC1CA0()
{
  char v1 = v0;
  uint64_t v2 = sub_260FE4DD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D48);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_260FE4E60();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_25:
    *char v1 = v9;
    return result;
  }
  int64_t v23 = v1;
  unint64_t result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    unint64_t result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  uint64_t v24 = v7 + 64;
  int64_t v12 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v7 + 64);
  int64_t v25 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v25) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v12);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(void *)(v7 + 48) + v18, v2);
    uint64_t v19 = 32 * v17;
    sub_260D90650(*(void *)(v7 + 56) + v19, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v9 + 48) + v18, v6, v2);
    unint64_t result = sub_260D906FC(v27, (_OWORD *)(*(void *)(v9 + 56) + v19));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v25)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    char v1 = v23;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v25) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_260DC1F48()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v22 = __clz(__rbit64(v20));
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = v22 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 3 * v15;
    __int16 v17 = *(_WORD *)v16;
    LOBYTE(v16) = *(unsigned char *)(v16 + 2);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v18 = *(void *)(v4 + 56) + 3 * v15;
    *(_WORD *)uint64_t v18 = v17;
    *(unsigned char *)(v18 + 2) = v16;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_260DC20E8()
{
  return sub_260DC2100(&qword_26A8E6D30);
}

void *sub_260DC20F4()
{
  return sub_260DC2100(&qword_26A8E6D28);
}

void *sub_260DC2100(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_260FE4E60();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_260DC229C()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    int64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_260DC2458()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_260DC2610()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F50);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v17);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v17) = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_260DC27B8()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v18;
    v22[1] = v19;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    swift_retain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_260DC2974()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C98);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *char v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56) + v16;
    uint64_t v18 = *(void **)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *(void *)(v4 + 56) + v16;
    *(void *)uint64_t v19 = v18;
    *(unsigned char *)(v19 + 8) = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_260DC2B28()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *char v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_260D90650(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_260D906FC(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    char v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_260DC2D10()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D50);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    long long v21 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    *uint64_t v20 = v18;
    v20[1] = v19;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_260DC2EC8()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CD8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *char v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_260DD6B7C(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_260D90650(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_260D906FC(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_260DC30B0()
{
  char v1 = v0;
  uint64_t v2 = type metadata accessor for GeneratedImage();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8, v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DD8);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_260FE4E60();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *char v1 = v9;
    return result;
  }
  int64_t v27 = v1;
  id result = (void *)(v8 + 64);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v11 + 8 * v12) {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v17) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v11 + 8 * v23);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v17) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v11 + 8 * v13);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_9:
    uint64_t v20 = 16 * v19;
    unint64_t v21 = *(void *)(v3 + 72) * v19;
    uint64_t v22 = *(void *)(v7 + 56) + v21;
    long long v28 = *(_OWORD *)(*(void *)(v7 + 48) + 16 * v19);
    sub_260DC713C(v22, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    *(_OWORD *)(*(void *)(v9 + 48) + v20) = v28;
    id result = (void *)sub_260DC79D4((uint64_t)v6, *(void *)(v9 + 56) + v21, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v17)
  {
LABEL_23:
    id result = (void *)swift_release();
    char v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v11 + 8 * v25);
  if (v24)
  {
    int64_t v13 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v11 + 8 * v13);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_260DC3330()
{
  char v1 = v0;
  uint64_t v2 = type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(0);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CF8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_260FE4E60();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *char v1 = v8;
    return result;
  }
  unint64_t v24 = v1;
  id result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v16) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v21);
    ++v12;
    if (!v22)
    {
      int64_t v12 = v21 + 1;
      if (v21 + 1 >= v16) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v10 + 8 * v12);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_9:
    char v19 = *(unsigned char *)(*(void *)(v6 + 48) + v18);
    unint64_t v20 = *(void *)(v25 + 72) * v18;
    sub_260DC713C(*(void *)(v6 + 56) + v20, (uint64_t)v5, type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry);
    *(unsigned char *)(*(void *)(v8 + 48) + v18) = v19;
    id result = (void *)sub_260DC79D4((uint64_t)v5, *(void *)(v8 + 56) + v20, type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_23:
    id result = (void *)swift_release();
    char v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v10 + 8 * v23);
  if (v22)
  {
    int64_t v12 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v12);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_260DC35A8(uint64_t *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_260FE50F0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_181;
    }
    if (v3) {
      return sub_260DC3CB0(0, v3, 1, v2);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_189;
  }
  uint64_t v6 = result;
  if (v3 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v106 = MEMORY[0x263F8EE78];
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (v12 < 2) {
        goto LABEL_159;
      }
      goto LABEL_147;
    }
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_260FE4460();
    *(void *)(v8 + 16) = v7;
    uint64_t v106 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  char v104 = v2;
  uint64_t v11 = *v2;
  uint64_t v105 = v11 - 16;
  uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  uint64_t v107 = v6;
  uint64_t v108 = v3;
  while (2)
  {
    uint64_t v13 = v10 + 1;
    if (v10 + 1 >= v3) {
      goto LABEL_66;
    }
    uint64_t v14 = (uint64_t *)(v11 + 16 * v13);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = (uint64_t *)(v11 + 16 * v10);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    if (v19 >= v18) {
      uint64_t v20 = v18;
    }
    else {
      uint64_t v20 = v19;
    }
    if (v16 >= v15) {
      uint64_t v21 = v15;
    }
    else {
      uint64_t v21 = v16;
    }
    if (v20 >= v21)
    {
      if (v21 >= v20)
      {
        if (v19 <= v18) {
          uint64_t v19 = v18;
        }
        if (v16 <= v15) {
          uint64_t v23 = v15;
        }
        else {
          uint64_t v23 = v16;
        }
        uint64_t v13 = v10 + 2;
        if (v19 < v23) {
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v13 = v10 + 2;
      }
      if (v13 >= v3) {
        goto LABEL_66;
      }
      int v22 = 0;
      goto LABEL_36;
    }
    uint64_t v13 = v10 + 2;
LABEL_24:
    if (v13 >= v3) {
      goto LABEL_60;
    }
    int v22 = 1;
LABEL_36:
    if (v3 <= v13 + 1) {
      uint64_t v24 = v13 + 1;
    }
    else {
      uint64_t v24 = v3;
    }
    uint64_t v25 = (uint64_t *)(v11 + 8 + 16 * v13);
    while (1)
    {
      uint64_t v26 = *(v25 - 1);
      uint64_t v27 = *v25;
      if (v16 >= v15) {
        uint64_t v28 = v15;
      }
      else {
        uint64_t v28 = v16;
      }
      if (v27 >= v26) {
        uint64_t v29 = *(v25 - 1);
      }
      else {
        uint64_t v29 = *v25;
      }
      if (v28 < v29) {
        goto LABEL_40;
      }
      if (v29 >= v28)
      {
        if (v16 > v15) {
          uint64_t v15 = v16;
        }
        uint64_t v30 = v27 <= v26 ? *(v25 - 1) : *v25;
        if (v15 < v30)
        {
LABEL_40:
          if ((v22 & 1) == 0) {
            goto LABEL_66;
          }
          goto LABEL_41;
        }
      }
      if (v22) {
        break;
      }
LABEL_41:
      v25 += 2;
      ++v13;
      uint64_t v16 = v27;
      uint64_t v15 = v26;
      if (v13 >= v3)
      {
        if (v22) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    uint64_t v24 = v13;
LABEL_59:
    uint64_t v13 = v24;
    if (v24 < v10) {
      goto LABEL_182;
    }
LABEL_60:
    if (v10 < v13)
    {
      uint64_t v31 = (long long *)(v105 + 16 * v13);
      uint64_t v32 = v13;
      uint64_t v33 = v10;
      BOOL v34 = (long long *)(v11 + 16 * v10);
      do
      {
        if (v33 != --v32)
        {
          if (!v11) {
            goto LABEL_187;
          }
          long long v35 = *v34;
          *BOOL v34 = *v31;
          *uint64_t v31 = v35;
        }
        ++v33;
        --v31;
        ++v34;
      }
      while (v33 < v32);
    }
LABEL_66:
    if (v13 >= v3) {
      goto LABEL_75;
    }
    if (__OFSUB__(v13, v10)) {
      goto LABEL_180;
    }
    if (v13 - v10 >= v6)
    {
LABEL_75:
      uint64_t v24 = v13;
      goto LABEL_76;
    }
    if (__OFADD__(v10, v6)) {
      goto LABEL_183;
    }
    if (v10 + v6 >= v3) {
      uint64_t v24 = v3;
    }
    else {
      uint64_t v24 = v10 + v6;
    }
    if (v24 >= v10)
    {
      if (v13 == v24) {
        goto LABEL_75;
      }
      char v85 = (void *)(v105 + 16 * v13);
      do
      {
        long long v86 = *(_OWORD *)(v11 + 16 * v13);
        uint64_t v87 = *(void *)(v11 + 16 * v13 + 8);
        uint64_t v88 = *(void *)(v11 + 16 * v13);
        if (v87 >= v88) {
          uint64_t v89 = *(void *)(v11 + 16 * v13);
        }
        else {
          uint64_t v89 = *(void *)(v11 + 16 * v13 + 8);
        }
        if (v87 <= v88) {
          uint64_t v87 = *(void *)(v11 + 16 * v13);
        }
        uint64_t v90 = v10;
        unint64_t v91 = v85;
        do
        {
          uint64_t v92 = *v91;
          uint64_t v93 = v91[1];
          if (v93 >= *v91) {
            uint64_t v94 = *v91;
          }
          else {
            uint64_t v94 = v91[1];
          }
          if (v94 >= v89)
          {
            if (v93 > v92) {
              uint64_t v92 = v91[1];
            }
            if (v89 < v94 || v92 >= v87) {
              break;
            }
          }
          if (!v11) {
            goto LABEL_185;
          }
          uint64_t v96 = v91 + 2;
          long long v97 = *(_OWORD *)v91;
          *(_OWORD *)unint64_t v91 = v86;
          v91 -= 2;
          *uint64_t v96 = v97;
          ++v90;
        }
        while (v13 != v90);
        ++v13;
        v85 += 2;
      }
      while (v13 != v24);
LABEL_76:
      if (v24 < v10) {
        goto LABEL_175;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_260DECCD0(0, *((void *)v9 + 2) + 1, 1, v9);
      }
      unint64_t v37 = *((void *)v9 + 2);
      unint64_t v36 = *((void *)v9 + 3);
      unint64_t v12 = v37 + 1;
      if (v37 >= v36 >> 1) {
        uint64_t v9 = sub_260DECCD0((char *)(v36 > 1), v37 + 1, 1, v9);
      }
      *((void *)v9 + 2) = v12;
      uint64_t v38 = v9 + 32;
      uint64_t v39 = &v9[16 * v37 + 32];
      *(void *)uint64_t v39 = v10;
      *((void *)v39 + 1) = v24;
      uint64_t v109 = v24;
      if (v37)
      {
        while (2)
        {
          unint64_t v40 = v12 - 1;
          if (v12 >= 4)
          {
            uint64_t v45 = &v38[16 * v12];
            uint64_t v46 = *((void *)v45 - 8);
            uint64_t v47 = *((void *)v45 - 7);
            BOOL v51 = __OFSUB__(v47, v46);
            uint64_t v48 = v47 - v46;
            if (v51) {
              goto LABEL_164;
            }
            uint64_t v50 = *((void *)v45 - 6);
            uint64_t v49 = *((void *)v45 - 5);
            BOOL v51 = __OFSUB__(v49, v50);
            uint64_t v43 = v49 - v50;
            char v44 = v51;
            if (v51) {
              goto LABEL_165;
            }
            unint64_t v52 = v12 - 2;
            uint64_t v53 = &v38[16 * v12 - 32];
            uint64_t v55 = *(void *)v53;
            uint64_t v54 = *((void *)v53 + 1);
            BOOL v51 = __OFSUB__(v54, v55);
            uint64_t v56 = v54 - v55;
            if (v51) {
              goto LABEL_167;
            }
            BOOL v51 = __OFADD__(v43, v56);
            uint64_t v57 = v43 + v56;
            if (v51) {
              goto LABEL_170;
            }
            if (v57 >= v48)
            {
              int v75 = &v38[16 * v40];
              uint64_t v77 = *(void *)v75;
              uint64_t v76 = *((void *)v75 + 1);
              BOOL v51 = __OFSUB__(v76, v77);
              uint64_t v78 = v76 - v77;
              if (v51) {
                goto LABEL_174;
              }
              BOOL v68 = v43 < v78;
            }
            else
            {
LABEL_95:
              if (v44) {
                goto LABEL_166;
              }
              unint64_t v52 = v12 - 2;
              uint64_t v58 = &v38[16 * v12 - 32];
              uint64_t v60 = *(void *)v58;
              uint64_t v59 = *((void *)v58 + 1);
              BOOL v61 = __OFSUB__(v59, v60);
              uint64_t v62 = v59 - v60;
              char v63 = v61;
              if (v61) {
                goto LABEL_169;
              }
              uint64_t v64 = &v38[16 * v40];
              uint64_t v66 = *(void *)v64;
              uint64_t v65 = *((void *)v64 + 1);
              BOOL v51 = __OFSUB__(v65, v66);
              uint64_t v67 = v65 - v66;
              if (v51) {
                goto LABEL_172;
              }
              if (__OFADD__(v62, v67)) {
                goto LABEL_173;
              }
              if (v62 + v67 < v43) {
                goto LABEL_107;
              }
              BOOL v68 = v43 < v67;
            }
            if (v68) {
              unint64_t v40 = v52;
            }
          }
          else
          {
            if (v12 == 3)
            {
              uint64_t v42 = *((void *)v9 + 4);
              uint64_t v41 = *((void *)v9 + 5);
              BOOL v51 = __OFSUB__(v41, v42);
              uint64_t v43 = v41 - v42;
              char v44 = v51;
              goto LABEL_95;
            }
            uint64_t v69 = *((void *)v9 + 4);
            uint64_t v70 = *((void *)v9 + 5);
            BOOL v51 = __OFSUB__(v70, v69);
            uint64_t v62 = v70 - v69;
            char v63 = v51;
LABEL_107:
            if (v63) {
              goto LABEL_168;
            }
            char v71 = &v38[16 * v40];
            uint64_t v73 = *(void *)v71;
            uint64_t v72 = *((void *)v71 + 1);
            BOOL v51 = __OFSUB__(v72, v73);
            uint64_t v74 = v72 - v73;
            if (v51) {
              goto LABEL_171;
            }
            if (v74 < v62) {
              goto LABEL_14;
            }
          }
          unint64_t v79 = v40 - 1;
          if (v40 - 1 >= v12)
          {
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
            goto LABEL_184;
          }
          if (!v11) {
            goto LABEL_186;
          }
          int64_t v80 = &v38[16 * v79];
          uint64_t v81 = *(void *)v80;
          uint64_t v82 = &v38[16 * v40];
          uint64_t v83 = *((void *)v82 + 1);
          sub_260DC3D4C((char *)(v11 + 16 * *(void *)v80), (char *)(v11 + 16 * *(void *)v82), v11 + 16 * v83, __dst);
          if (v1) {
            goto LABEL_159;
          }
          if (v83 < v81) {
            goto LABEL_161;
          }
          if (v40 > *((void *)v9 + 2)) {
            goto LABEL_162;
          }
          *(void *)int64_t v80 = v81;
          *(void *)&v38[16 * v79 + 8] = v83;
          unint64_t v84 = *((void *)v9 + 2);
          if (v40 >= v84) {
            goto LABEL_163;
          }
          unint64_t v12 = v84 - 1;
          memmove(&v38[16 * v40], v82 + 16, 16 * (v84 - 1 - v40));
          *((void *)v9 + 2) = v84 - 1;
          if (v84 <= 2) {
            goto LABEL_14;
          }
          continue;
        }
      }
      unint64_t v12 = 1;
LABEL_14:
      uint64_t v3 = v108;
      uint64_t v10 = v109;
      uint64_t v6 = v107;
      if (v109 >= v108)
      {
        uint64_t v2 = v104;
        if (v12 < 2)
        {
LABEL_159:
          swift_bridgeObjectRelease();
          *(void *)(v106 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
LABEL_147:
        uint64_t v98 = *v2;
        while (1)
        {
          unint64_t v99 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_176;
          }
          if (!v98) {
            goto LABEL_188;
          }
          uint64_t v100 = *(void *)&v9[16 * v99 + 32];
          uint64_t v101 = *(void *)&v9[16 * v12 + 24];
          sub_260DC3D4C((char *)(v98 + 16 * v100), (char *)(v98 + 16 * *(void *)&v9[16 * v12 + 16]), v98 + 16 * v101, __dst);
          if (v1) {
            goto LABEL_159;
          }
          if (v101 < v100) {
            goto LABEL_177;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_260DED460((uint64_t)v9);
          }
          if (v99 >= *((void *)v9 + 2)) {
            goto LABEL_178;
          }
          BOOL v102 = &v9[16 * v99 + 32];
          *(void *)BOOL v102 = v100;
          *((void *)v102 + 1) = v101;
          unint64_t v103 = *((void *)v9 + 2);
          if (v12 > v103) {
            goto LABEL_179;
          }
          memmove(&v9[16 * v12 + 16], &v9[16 * v12 + 32], 16 * (v103 - v12));
          *((void *)v9 + 2) = v103 - 1;
          unint64_t v12 = v103 - 1;
          if (v103 <= 2) {
            goto LABEL_159;
          }
        }
      }
      continue;
    }
    break;
  }
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  uint64_t result = sub_260FE4E10();
  __break(1u);
  return result;
}

uint64_t sub_260DC3CB0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 16 * a3 - 16;
LABEL_5:
    long long v6 = *(_OWORD *)(v4 + 16 * a3);
    uint64_t v7 = *(void *)(v4 + 16 * a3 + 8);
    uint64_t v8 = *(void *)(v4 + 16 * a3);
    if (v7 >= v8) {
      uint64_t v9 = *(void *)(v4 + 16 * a3);
    }
    else {
      uint64_t v9 = *(void *)(v4 + 16 * a3 + 8);
    }
    if (v7 <= v8) {
      uint64_t v7 = *(void *)(v4 + 16 * a3);
    }
    uint64_t v10 = result;
    uint64_t v11 = (void *)v5;
    while (1)
    {
      uint64_t v12 = *v11;
      uint64_t v13 = v11[1];
      if (v13 >= *v11) {
        uint64_t v14 = *v11;
      }
      else {
        uint64_t v14 = v11[1];
      }
      if (v14 >= v9)
      {
        if (v13 > v12) {
          uint64_t v12 = v11[1];
        }
        if (v9 < v14 || v12 >= v7)
        {
LABEL_4:
          ++a3;
          v5 += 16;
          if (a3 == a2) {
            return result;
          }
          goto LABEL_5;
        }
      }
      if (!v4) {
        break;
      }
      uint64_t v16 = v11 + 2;
      long long v17 = *(_OWORD *)v11;
      *(_OWORD *)uint64_t v11 = v6;
      v11 -= 2;
      _OWORD *v16 = v17;
      if (a3 == ++v10) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_260DC3D4C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  long long v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  long long v35 = __src;
  BOOL v34 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      int v22 = &v4[16 * v13];
      uint64_t v33 = v22;
      long long v35 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v23 = (char *)(a3 - 16);
        uint64_t v24 = v6;
        while (1)
        {
          uint64_t v25 = v23 + 16;
          uint64_t v26 = *((void *)v22 - 2);
          uint64_t v27 = *((void *)v22 - 1);
          uint64_t v28 = *((void *)v24 - 2);
          uint64_t v29 = *((void *)v24 - 1);
          v24 -= 16;
          if (v29 >= v28) {
            uint64_t v30 = v28;
          }
          else {
            uint64_t v30 = v29;
          }
          if (v27 >= v26) {
            uint64_t v31 = *((void *)v22 - 2);
          }
          else {
            uint64_t v31 = *((void *)v22 - 1);
          }
          if (v30 < v31) {
            goto LABEL_50;
          }
          if (v31 < v30) {
            goto LABEL_60;
          }
          if (v29 > v28) {
            uint64_t v28 = v29;
          }
          if (v27 > v26) {
            uint64_t v26 = *((void *)v22 - 1);
          }
          if (v28 < v26)
          {
LABEL_50:
            if (v25 != v6 || v23 >= v6) {
              *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
            }
            long long v35 = v24;
            if (v24 <= v7) {
              goto LABEL_66;
            }
          }
          else
          {
LABEL_60:
            uint64_t v33 = v22 - 16;
            if (v25 < v22 || v23 >= v22 || v25 != v22) {
              *(_OWORD *)uint64_t v23 = *((_OWORD *)v22 - 1);
            }
            uint64_t v24 = v6;
            v22 -= 16;
            if (v6 <= v7) {
              goto LABEL_66;
            }
          }
          v23 -= 16;
          long long v6 = v24;
          if (v22 <= v4) {
            goto LABEL_66;
          }
        }
      }
      goto LABEL_66;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v33 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        uint64_t v15 = *(void *)v6;
        uint64_t v16 = *((void *)v6 + 1);
        uint64_t v17 = *(void *)v4;
        uint64_t v18 = *((void *)v4 + 1);
        if (v18 >= *(void *)v4) {
          uint64_t v19 = *(void *)v4;
        }
        else {
          uint64_t v19 = *((void *)v4 + 1);
        }
        if (v16 >= v15) {
          uint64_t v20 = *(void *)v6;
        }
        else {
          uint64_t v20 = *((void *)v6 + 1);
        }
        if (v19 < v20) {
          goto LABEL_19;
        }
        if (v20 < v19) {
          goto LABEL_29;
        }
        if (v18 > v17) {
          uint64_t v17 = *((void *)v4 + 1);
        }
        if (v16 > v15) {
          uint64_t v15 = *((void *)v6 + 1);
        }
        if (v17 < v15)
        {
LABEL_19:
          uint64_t v21 = v6 + 16;
          if (v7 < v6 || v7 >= v21 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        else
        {
LABEL_29:
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          BOOL v34 = v4;
          uint64_t v21 = v6;
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        long long v6 = v21;
      }
      while ((unint64_t)v21 < a3);
      long long v35 = v7;
    }
LABEL_66:
    sub_260DECDE4(&v35, &v34, &v33);
    return 1;
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DC4028(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_260DC4228(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(void *)(*(void *)(a4 + 48) + 8 * v16);
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_260DC4424(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_260DC45B8(void *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_OWORD *)(*(void *)(a4 + 48) + 16 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_260DC474C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for GeneratedImage();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v8 - 8, v10);
  int64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v11, v14);
  int64_t v17 = (char *)&v31 - v16;
  uint64_t v36 = a4;
  uint64_t v19 = a4 + 64;
  uint64_t v18 = *(void *)(a4 + 64);
  uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
  if (-v33 < 64) {
    uint64_t v20 = ~(-1 << -(char)v33);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v18;
  if (!a2)
  {
    int64_t v22 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v30 = ~v33;
    *a1 = v36;
    a1[1] = v19;
    a1[2] = v30;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    int64_t v22 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v32 = a1;
  int64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v34 = v19;
  int64_t v35 = (unint64_t)(63 - v33) >> 6;
  int64_t v31 = v35 - 1;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    uint64_t v29 = *(void *)(v9 + 72);
    sub_260DC713C(*(void *)(v36 + 56) + v29 * v25, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260DC79D4((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    uint64_t result = sub_260DC79D4((uint64_t)v17, a2, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    if (v23 == a3) {
      goto LABEL_33;
    }
    a2 += v29;
    if (v21) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v26 >= v35)
    {
      unint64_t v21 = 0;
      a3 = v23;
LABEL_33:
      a1 = v32;
      uint64_t v19 = v34;
      goto LABEL_34;
    }
    uint64_t v19 = v34;
    unint64_t v27 = *(void *)(v34 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v35)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26;
LABEL_39:
    a3 = v23;
    a1 = v32;
    goto LABEL_34;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v22);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v35) {
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v22 = v26 + 3;
  if (v26 + 3 >= v35)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26 + 2;
    goto LABEL_39;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v22);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v22;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v35)
  {
LABEL_36:
    unint64_t v21 = 0;
    goto LABEL_39;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v35)
    {
      unint64_t v21 = 0;
      int64_t v22 = v31;
      goto LABEL_39;
    }
    unint64_t v27 = *(void *)(v34 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

void *sub_260DC4A70(void *result, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a4;
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a4 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v8 = 0;
LABEL_39:
    *uint64_t result = v43;
    result[1] = v4;
    result[2] = ~v5;
    result[3] = v12;
    result[4] = v7;
    return (void *)v8;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  char v44 = a2;
  uint64_t v34 = result;
  uint64_t v35 = a4 + 56;
  uint64_t v9 = sub_260FE3110();
  uint64_t v11 = v9;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = *(void *)(v9 - 8);
  uint64_t v42 = *(void *)(v14 + 64);
  uint64_t v40 = v14 + 16;
  uint64_t v41 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v38 = v14;
  uint64_t v39 = v14 + 48;
  int64_t v36 = (unint64_t)(63 - v5) >> 6;
  unint64_t v37 = (uint64_t (**)(char *, char *, uint64_t))(v14 + 32);
  int64_t v32 = v36 - 1;
  uint64_t v33 = v5;
  while (1)
  {
    uint64_t v45 = &v32;
    MEMORY[0x270FA5388](v9, v10);
    uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    uint64_t result = (void *)MEMORY[0x270FA5388](v17 - 8, v18);
    uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v7)
    {
      unint64_t v21 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v22 = v21 | (v12 << 6);
      goto LABEL_23;
    }
    int64_t v23 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v4 = v35;
    if (v23 >= v36) {
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v35 + 8 * v23);
    if (v24) {
      goto LABEL_22;
    }
    int64_t v25 = v12 + 2;
    ++v12;
    if (v23 + 1 >= v36) {
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v35 + 8 * v25);
    if (!v24)
    {
      int64_t v12 = v23 + 1;
      if (v23 + 2 >= v36) {
        goto LABEL_37;
      }
      unint64_t v24 = *(void *)(v35 + 8 * (v23 + 2));
      if (v24)
      {
        v23 += 2;
        goto LABEL_22;
      }
      int64_t v12 = v23 + 2;
      if (v23 + 3 >= v36) {
        goto LABEL_37;
      }
      unint64_t v24 = *(void *)(v35 + 8 * (v23 + 3));
      if (v24)
      {
        v23 += 3;
        goto LABEL_22;
      }
      int64_t v25 = v23 + 4;
      int64_t v12 = v23 + 3;
      if (v23 + 4 >= v36)
      {
LABEL_37:
        (*v41)(v20, 1, 1, v11);
        unint64_t v7 = 0;
        goto LABEL_38;
      }
      unint64_t v24 = *(void *)(v35 + 8 * v25);
      if (!v24) {
        break;
      }
    }
    int64_t v23 = v25;
LABEL_22:
    unint64_t v7 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v12 = v23;
LABEL_23:
    uint64_t v26 = v38;
    uint64_t v27 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v20, *(void *)(v43 + 48) + v27 * v22, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v20, 1, v11) == 1)
    {
      uint64_t v4 = v35;
LABEL_38:
      sub_260D90820((uint64_t)v20, &qword_26A8E67F8);
      uint64_t v5 = v33;
      uint64_t result = v34;
      uint64_t v8 = v13;
      goto LABEL_39;
    }
    uint64_t v28 = v13 + 1;
    uint64_t v29 = v8;
    uint64_t v30 = *v37;
    (*v37)(v16, v20, v11);
    int64_t v31 = v44;
    uint64_t v9 = v30(v44, v16, v11);
    uint64_t v8 = v29;
    if (v28 == v29)
    {
      uint64_t result = v34;
      uint64_t v4 = v35;
      uint64_t v5 = v33;
      goto LABEL_39;
    }
    uint64_t v13 = v28;
    char v44 = &v31[v27];
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v36)
    {
      int64_t v12 = v32;
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v35 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_260DC4EA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Concept(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v8 - 8, v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v11, v14);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v36 = a4;
  uint64_t v19 = a4 + 56;
  uint64_t v18 = *(void *)(a4 + 56);
  uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
  if (-v33 < 64) {
    uint64_t v20 = ~(-1 << -(char)v33);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v18;
  if (!a2)
  {
    int64_t v22 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v30 = ~v33;
    *a1 = v36;
    a1[1] = v19;
    a1[2] = v30;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    int64_t v22 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  int64_t v32 = a1;
  int64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v34 = v19;
  int64_t v35 = (unint64_t)(63 - v33) >> 6;
  int64_t v31 = v35 - 1;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    uint64_t v29 = *(void *)(v9 + 72);
    sub_260DC713C(*(void *)(v36 + 48) + v29 * v25, (uint64_t)v13, type metadata accessor for Concept);
    sub_260DC79D4((uint64_t)v13, (uint64_t)v17, type metadata accessor for Concept);
    uint64_t result = sub_260DC79D4((uint64_t)v17, a2, type metadata accessor for Concept);
    if (v23 == a3) {
      goto LABEL_33;
    }
    a2 += v29;
    if (v21) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v26 >= v35)
    {
      unint64_t v21 = 0;
      a3 = v23;
LABEL_33:
      a1 = v32;
      uint64_t v19 = v34;
      goto LABEL_34;
    }
    uint64_t v19 = v34;
    unint64_t v27 = *(void *)(v34 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v35)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26;
LABEL_39:
    a3 = v23;
    a1 = v32;
    goto LABEL_34;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v22);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v35) {
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v22 = v26 + 3;
  if (v26 + 3 >= v35)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26 + 2;
    goto LABEL_39;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v22);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v22;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v35)
  {
LABEL_36:
    unint64_t v21 = 0;
    goto LABEL_39;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v35)
    {
      unint64_t v21 = 0;
      int64_t v22 = v31;
      goto LABEL_39;
    }
    unint64_t v27 = *(void *)(v34 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_260DC51CC()
{
  return sub_260FE5340();
}

uint64_t sub_260DC52E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v46 = a7;
  uint64_t v47 = a8;
  uint64_t v48 = a5;
  int v44 = a3;
  uint64_t v41 = a1;
  uint64_t v42 = a9;
  uint64_t v43 = a2;
  uint64_t v15 = type metadata accessor for GenerationState();
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15, v17);
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F60);
  BOOL v51 = &off_270D1D7A8;
  *(void *)&long long v49 = a11;
  uint64_t v45 = a4;
  sub_260DC713C(a4, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for GenerationState);
  *(void *)&v19[*(int *)(v16 + 36) + 48] = *(void *)(a6 + 48);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v16 + 28)];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  uint64_t v22 = *(void *)(*(void *)(v21 - 8) + 64);
  MEMORY[0x270FA5388](v21 - 8, v23);
  unint64_t v24 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v40 = v20;
  sub_260D907BC(v20, (uint64_t)&v40 - v24, &qword_26A8E67F8);
  uint64_t v25 = sub_260FE3110();
  uint64_t v26 = *(void *)(v25 - 8);
  int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))((char *)&v40 - v24, 1, v25);
  uint64_t v28 = sub_260D90820((uint64_t)&v40 - v24, &qword_26A8E67F8);
  if (v27 == 1)
  {
    MEMORY[0x270FA5388](v28, v29);
    sub_260FE3100();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))((char *)&v40 - v24, 0, 1, v25);
    sub_260DC6AB8((uint64_t)&v40 - v24, v40);
  }
  sub_260DC713C((uint64_t)v19, a13 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__initialGenerationState, (uint64_t (*)(void))type metadata accessor for GenerationState);
  uint64_t v30 = a13 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__client;
  id v31 = v42;
  uint64_t v32 = v43;
  *(void *)uint64_t v30 = v41;
  *(void *)(v30 + 8) = v32;
  *(_DWORD *)(v30 + 16) = v44;
  if (!v31) {
    id v31 = objc_msgSend(self, sel_service);
  }
  sub_260DC6C10(v45, (uint64_t (*)(void))type metadata accessor for GenerationState);
  *(void *)(a13 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__mediaAnalysisService) = v31;
  uint64_t v33 = a13 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__options;
  *(unsigned char *)(v33 + 64) = *(unsigned char *)(a6 + 64);
  long long v34 = *(_OWORD *)(a6 + 48);
  *(_OWORD *)(v33 + 32) = *(_OWORD *)(a6 + 32);
  *(_OWORD *)(v33 + 48) = v34;
  long long v35 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)a6;
  *(_OWORD *)(v33 + 16) = v35;
  sub_260DD7B40(&v49, a13 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller);
  uint64_t v36 = (void *)(a13 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__forensicsReporter);
  uint64_t v38 = v47;
  uint64_t v37 = v48;
  *uint64_t v36 = v46;
  v36[1] = v38;
  sub_260DD7C14(v37, a13 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__recipePreparer, &qword_26A8E69D0);
  *(void *)(a13 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__visionSession) = a10;
  *(void *)(a13 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__imageChecker) = a12;
  sub_260DC6C10((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for GenerationState);
  return a13;
}

uint64_t sub_260DC5654(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v45 = a7;
  uint64_t v46 = a8;
  uint64_t v47 = a5;
  int v43 = a3;
  uint64_t v40 = a1;
  uint64_t v41 = a9;
  uint64_t v42 = a2;
  uint64_t v14 = type metadata accessor for GenerationState();
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v49 = &type metadata for CurrentTaskCanceller;
  uint64_t v50 = &off_270D1D7D8;
  uint64_t v44 = a4;
  sub_260DC713C(a4, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for GenerationState);
  *(void *)&v18[*(int *)(v15 + 36) + 48] = *(void *)(a6 + 48);
  uint64_t v19 = (uint64_t)&v18[*(int *)(v15 + 28)];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  uint64_t v21 = *(void *)(*(void *)(v20 - 8) + 64);
  MEMORY[0x270FA5388](v20 - 8, v22);
  unint64_t v23 = (v21 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v39 = v19;
  sub_260D907BC(v19, (uint64_t)&v39 - v23, &qword_26A8E67F8);
  uint64_t v24 = sub_260FE3110();
  uint64_t v25 = *(void *)(v24 - 8);
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))((char *)&v39 - v23, 1, v24);
  uint64_t v27 = sub_260D90820((uint64_t)&v39 - v23, &qword_26A8E67F8);
  if (v26 == 1)
  {
    MEMORY[0x270FA5388](v27, v28);
    sub_260FE3100();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))((char *)&v39 - v23, 0, 1, v24);
    sub_260DC6AB8((uint64_t)&v39 - v23, v39);
  }
  sub_260DC713C((uint64_t)v18, a12 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__initialGenerationState, (uint64_t (*)(void))type metadata accessor for GenerationState);
  uint64_t v29 = a12 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__client;
  id v30 = v41;
  uint64_t v31 = v42;
  *(void *)uint64_t v29 = v40;
  *(void *)(v29 + 8) = v31;
  *(_DWORD *)(v29 + 16) = v43;
  if (!v30) {
    id v30 = objc_msgSend(self, sel_service);
  }
  sub_260DC6C10(v44, (uint64_t (*)(void))type metadata accessor for GenerationState);
  *(void *)(a12 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__mediaAnalysisService) = v30;
  uint64_t v32 = a12 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__options;
  *(unsigned char *)(v32 + 64) = *(unsigned char *)(a6 + 64);
  long long v33 = *(_OWORD *)(a6 + 48);
  *(_OWORD *)(v32 + 32) = *(_OWORD *)(a6 + 32);
  *(_OWORD *)(v32 + 48) = v33;
  long long v34 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)a6;
  *(_OWORD *)(v32 + 16) = v34;
  sub_260DD7B40(&v48, a12 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__sendableCanceller);
  long long v35 = (void *)(a12 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__forensicsReporter);
  uint64_t v37 = v46;
  uint64_t v36 = v47;
  void *v35 = v45;
  v35[1] = v37;
  sub_260DD7C14(v36, a12 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__recipePreparer, &qword_26A8E69D0);
  *(void *)(a12 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__visionSession) = a10;
  *(void *)(a12 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground14GenerationTask__imageChecker) = a11;
  sub_260DC6C10((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for GenerationState);
  return a12;
}

uint64_t sub_260DC59B0()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260DC5B20()
{
  return sub_260FE5340();
}

uint64_t sub_260DC5C3C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_260FE46F0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_260DB65FC(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_260DC5CD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DC5DCC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = sub_260FE3130();
  sub_260DD8CC8(&qword_26A8E7058, MEMORY[0x270FA9728]);
  uint64_t v26 = sub_260FE46F0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7060);
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = *(void *)(v3 - 8);
  v20[1] = v3 - 8;
  if (v2)
  {
    uint64_t v8 = v20[0];
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v21 = *(void *)(v20[0] + 72);
    uint64_t v25 = (void (**)(char *, void, uint64_t, uint64_t))(v20[0] + 56);
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v20[0] + 16);
    uint64_t v23 = v20[0] + 16;
    uint64_t v24 = v10;
    uint64_t v22 = (uint64_t (**)(char *, uint64_t, uint64_t))(v20[0] + 48);
    v20[2] = v20[0] + 8;
    v20[3] = v20[0] + 32;
    while (1)
    {
      v24(v7, v9, v3);
      (*v25)(v7, 0, 1, v3);
      uint64_t v11 = (*v22)(v7, 1, v3);
      if (v11 == 1) {
        break;
      }
      uint64_t v13 = MEMORY[0x270FA5388](v11, v12);
      uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v13, v16);
      uint64_t v18 = (char *)v20 - v17;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))((char *)v20 - v17, v7, v3);
      sub_260DB6A3C(v15, v18);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v3);
      v9 += v21;
      if (!--v2) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20[0] + 56))(v7, 1, 1, v3);
  }
  return v26;
}

uint64_t sub_260DC608C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_260DC8DAC();
  uint64_t result = sub_260FE46F0();
  uint64_t v6 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      sub_260DB6D74(&v5, *(v4 - 1), *v4);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_260DC6104(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

char *sub_260DC61F8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_260FE4E90();
  __break(1u);
  return result;
}

char *sub_260DC62E0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DC63CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DC64C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

unint64_t sub_260DC65B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CA0);
    uint64_t v3 = (void *)sub_260FE4E80();
    for (unint64_t i = (char *)(a1 + 35); ; i += 4)
    {
      char v5 = *(i - 3);
      char v6 = *(i - 2);
      char v7 = *(i - 1);
      char v8 = *i;
      unint64_t result = sub_260DBAF94(v5);
      if (v10) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      uint64_t v11 = (unsigned char *)(v3[7] + 3 * result);
      *uint64_t v11 = v6;
      v11[1] = v7;
      v11[2] = v8;
      uint64_t v12 = v3[2];
      BOOL v13 = __OFADD__(v12, 1);
      uint64_t v14 = v12 + 1;
      if (v13) {
        goto LABEL_10;
      }
      v3[2] = v14;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

void *sub_260DC66AC()
{
  uint64_t v0 = (void *)MEMORY[0x263F8EE78];
  char v5 = (void *)MEMORY[0x263F8EE78];
  uint64_t v1 = sub_260F3E7A4();
  if (v1)
  {
    sub_260EE00FC(v1);
    uint64_t v0 = v5;
  }
  if (!v0[2])
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v0 = sub_260DB12A8(0, 1, 1, v0, &qword_26A8E6A88);
    }
    unint64_t v3 = v0[2];
    unint64_t v2 = v0[3];
    if (v3 >= v2 >> 1) {
      uint64_t v0 = sub_260DB12A8((void *)(v2 > 1), v3 + 1, 1, v0, &qword_26A8E6A88);
    }
    v0[2] = v3 + 1;
    *(int64x2_t *)&v0[2 * v3 + 4] = vdupq_n_s64(0x200uLL);
  }
  return v0;
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC6clientAcA14ClientIdentityV_tcfC_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DefinitionSession();
  uint64_t v4 = MEMORY[0x270FA5388](v2 - 8, v3);
  char v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4, v7);
  uint64_t v9 = (char *)v22 - v8;
  uint64_t v11 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  int v23 = *(_DWORD *)(a1 + 16);
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_260FE3A10();
  __swift_project_value_buffer(v12, (uint64_t)qword_26A90FB90);
  swift_bridgeObjectRetain_n();
  BOOL v13 = sub_260FE39F0();
  os_log_type_t v14 = sub_260FE48A0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v24 = v16;
    uint64_t v25 = v11;
    v22[1] = v15 + 4;
    uint64_t v26 = v10;
    int v27 = v23;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_260FE4150();
    uint64_t v25 = sub_260DB2844(v17, v18, &v24);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_260D82000, v13, v14, "Creating generator for %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v16, -1, -1);
    MEMORY[0x26122CA00](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  type metadata accessor for AppleDiffusionResourceFactory(0);
  static AppleDiffusionResourceFactory.shared(reset:)(0, v19);
  uint64_t v25 = v11;
  uint64_t v26 = v10;
  int v27 = v23;
  sub_260F3C4F0((uint64_t)&v25, 1, 0, 0, (uint64_t)v9);
  sub_260DC713C((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  type metadata accessor for GenerativePlayground();
  swift_allocObject();
  uint64_t v20 = sub_260D91CA8((uint64_t)v6);
  sub_260DC6C10((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_release();
  return v20;
}

uint64_t type metadata accessor for GenerativePlayground.PromptAssignmentOptions(uint64_t a1)
{
  return sub_260DD5A3C(a1, (uint64_t *)&unk_26A8E6BE0);
}

uint64_t sub_260DC6AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_260DC6B20(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_260DD8D28;
  return sub_260D9392C(a1, a2, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_260DC6C10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_260DC6C70()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_260DD8D28;
  return sub_260D94130();
}

uint64_t sub_260DC6D10()
{
  uint64_t v3 = v0[4];
  uint64_t v2 = (int *)v0[5];
  uint64_t v4 = v0[7];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  uint64_t v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_260DD8D28;
  uint64_t v8 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[4] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_260DB0820;
  return v8();
}

uint64_t sub_260DC6E3C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_260DD8D28;
  return sub_260D9521C();
}

uint64_t sub_260DC6EDC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a4)
  {

    return swift_release();
  }
  return result;
}

void sub_260DC6F1C(id a1, char a2)
{
  if (a2 != -1) {
}
  }

id sub_260DC6F30(id result, char a2)
{
  if (a2 != -1) {
    return result;
  }
  return result;
}

uint64_t sub_260DC6F44()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_260DD8D28;
  return sub_260D96228();
}

void sub_260DC6FE4(void *a1, char a2, void *a3, uint64_t a4, void *a5)
{
  if (a2 != -1)
  {
  }
}

uint64_t sub_260DC703C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_260DD8D28;
  return sub_260D9770C();
}

uint64_t sub_260DC70DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a4)
  {

    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_260DC713C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_260DC71A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a4)
  {
    id v4 = a4;
    return swift_retain();
  }
  return result;
}

uint64_t sub_260DC71E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DC72D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DC73CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  type metadata accessor for DefinitionSession();
  v3[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DC7460, 0, 0);
}

uint64_t sub_260DC7460()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  v0[10] = v0[12];
  v0[11] = v1;
  uint64_t v3 = sub_260FE2A90();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_task_alloc();
  sub_260FE2A70();
  sub_260D86D20();
  uint64_t v6 = sub_260FE4B10();
  uint64_t v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  swift_task_dealloc();
  v0[8] = v6;
  v0[9] = v8;
  return MEMORY[0x270FA2498](sub_260DC7590, v2, 0);
}

uint64_t sub_260DC7590()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[16] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_260DC767C;
  uint64_t v6 = v0[15];
  return sub_260F2215C(v6, (uint64_t)(v0 + 8));
}

uint64_t sub_260DC767C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v4 = sub_260DC78E8;
  }
  else {
    uint64_t v4 = sub_260DC77A8;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_260DC77A8()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[14] + v0[16];
  swift_beginAccess();
  sub_260DC7A3C(v1, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DC7878, 0, 0);
}

uint64_t sub_260DC7878()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260DC78E8()
{
  sub_260DC6C10(*(void *)(v0 + 120), (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DC7964, 0, 0);
}

uint64_t sub_260DC7964()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260DC79D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_260DC7A3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_260DC7AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  type metadata accessor for DefinitionSession();
  v3[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DC7B38, 0, 0);
}

uint64_t sub_260DC7B38()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  v0[10] = v0[12];
  v0[11] = v1;
  uint64_t v3 = sub_260FE2A90();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_task_alloc();
  sub_260FE2A70();
  sub_260D86D20();
  uint64_t v6 = sub_260FE4B10();
  uint64_t v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  swift_task_dealloc();
  v0[8] = v6;
  v0[9] = v8;
  return MEMORY[0x270FA2498](sub_260DC7C68, v2, 0);
}

uint64_t sub_260DC7C68()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[16] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_260DC7D54;
  uint64_t v6 = v0[15];
  return sub_260F2215C(v6, (uint64_t)(v0 + 8));
}

uint64_t sub_260DC7D54()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v4 = sub_260DC7F50;
  }
  else {
    uint64_t v4 = sub_260DC7E80;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_260DC7E80()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[14] + v0[16];
  swift_beginAccess();
  sub_260DC7A3C(v1, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DD8D1C, 0, 0);
}

uint64_t sub_260DC7F50()
{
  sub_260DC6C10(*(void *)(v0 + 120), (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DD8D8C, 0, 0);
}

uint64_t sub_260DC7FCC(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  type metadata accessor for DefinitionSession();
  *(void *)(v1 + 72) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DC8060, a1, 0);
}

uint64_t sub_260DC8060()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[10] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DC8108, 0, 0);
}

uint64_t sub_260DC8108()
{
  uint64_t v1 = *(void *)(v0 + 64);
  id v2 = *(id *)(sub_260F42374() + 24);
  swift_release();
  objc_msgSend(v2, sel_preheat);

  return MEMORY[0x270FA2498](sub_260DC81A4, v1, 0);
}

uint64_t sub_260DC81A4()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[8] + v0[10];
  swift_beginAccess();
  sub_260DC7A3C(v1, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_endAccess();
  sub_260DC6C10(v1, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_260DC8274(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  type metadata accessor for DefinitionSession();
  *(void *)(v1 + 72) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DC8308, a1, 0);
}

uint64_t sub_260DC8308()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[10] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DC83B0, 0, 0);
}

uint64_t sub_260DC83B0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  id v2 = *(id *)(sub_260F42374() + 24);
  swift_release();
  objc_msgSend(v2, sel_preheat);

  return MEMORY[0x270FA2498](sub_260DD8D5C, v1, 0);
}

uint64_t sub_260DC844C(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  type metadata accessor for DefinitionSession();
  *(void *)(v1 + 72) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DC84E0, a1, 0);
}

uint64_t sub_260DC84E0()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  v0[10] = OBJC_IVAR____TtC16VisualGeneration25DefinitionSessionAccessor__definitionSession;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_260DC713C(v4, v2, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  return MEMORY[0x270FA2498](sub_260DC8588, 0, 0);
}

uint64_t sub_260DC8588()
{
  uint64_t v1 = *(void *)(v0 + 64);
  id v2 = *(id *)(sub_260F42374() + 24);
  swift_release();
  objc_msgSend(v2, sel_cooldown);

  return MEMORY[0x270FA2498](sub_260DD8D5C, v1, 0);
}

uint64_t type metadata accessor for GenerativePlayground.PreviewGenerationSession(uint64_t a1)
{
  return sub_260DD5A3C(a1, (uint64_t *)&unk_26A8E6C10);
}

uint64_t sub_260DC8644(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_260DC8654(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_260DD8D28;
  return sub_260DA0850(a1, v1);
}

uint64_t sub_260DC86F4()
{
  uint64_t v3 = v0[4];
  uint64_t v2 = (int *)v0[5];
  uint64_t v4 = v0[7];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_260DACD28;
  v5[4] = v3;
  v5[5] = v4;
  uint64_t v8 = (uint64_t (*)(void *))((char *)v2 + *v2);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[6] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_260DB0A60;
  return v8(v5 + 2);
}

uint64_t sub_260DC882C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 33, 7);
}

uint64_t sub_260DC8864(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_260DD8D28;
  return sub_260DA0C4C(a1, v4, v5, v6);
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_260DC896C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_260DACD28;
  return sub_260DA20E4(a1, a2, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_260DC8A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t type metadata accessor for GenerativePlayground.ImageGenerationSession(uint64_t a1)
{
  return sub_260DD5A3C(a1, (uint64_t *)&unk_26A8E6C58);
}

uint64_t sub_260DC8A90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DC8B84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F20);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

unint64_t sub_260DC8C94(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F50);
  uint64_t v3 = (void *)sub_260FE4E80();
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_260DBB2E4(v4, v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v10 = v4;
    v10[1] = v5;
    *(void *)(v3[7] + 8 * result) = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    uint64_t v4 = *(v9 - 2);
    uint64_t v5 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_260DBB2E4(v4, v5);
    uint64_t v9 = v14;
    uint64_t v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_260DC8DAC()
{
  unint64_t result = qword_26A8E6A80;
  if (!qword_26A8E6A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6A80);
  }
  return result;
}

unint64_t sub_260DC8E04()
{
  unint64_t result = qword_26A8E6A98;
  if (!qword_26A8E6A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6A98);
  }
  return result;
}

uint64_t sub_260DC8E58(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_260DC8E68()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_260DC8E94()
{
  unint64_t result = qword_26A8E6B00;
  if (!qword_26A8E6B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6B00);
  }
  return result;
}

unint64_t sub_260DC8EF0()
{
  unint64_t result = qword_26A8E6B08;
  if (!qword_26A8E6B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6B08);
  }
  return result;
}

unint64_t sub_260DC8F48()
{
  unint64_t result = qword_26A8E6B10;
  if (!qword_26A8E6B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6B10);
  }
  return result;
}

uint64_t sub_260DC8F9C()
{
  return sub_260DD8CC8((unint64_t *)&qword_26A8E67C8, MEMORY[0x270FA9410]);
}

uint64_t sub_260DC8FDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = GenerativePlayground.generationSeed.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_260DC9010(uint64_t a1)
{
}

uint64_t type metadata accessor for GenerativePlayground()
{
  return self;
}

uint64_t method lookup function for GenerativePlayground(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GenerativePlayground);
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.Error()
{
  return &type metadata for GenerativePlayground.Error;
}

void *initializeBufferWithCopyOfBuffer for GenerativePlayground.PromptAssignmentOptions(_WORD *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    uint64_t v7 = a3[6];
    char v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_260FE3110();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v15 = (char *)v4 + v14;
    char v16 = (char *)a2 + v14;
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    *((_DWORD *)v15 + 4) = *((_DWORD *)v16 + 4);
    uint64_t v18 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for GenerativePlayground.PromptAssignmentOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_260FE3110();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  return swift_bridgeObjectRelease();
}

_WORD *initializeWithCopy for GenerativePlayground.PromptAssignmentOptions(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_260FE3110();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
  uint64_t v16 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *assignWithCopy for GenerativePlayground.PromptAssignmentOptions(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  char v8 = &a2[v6];
  uint64_t v9 = sub_260FE3110();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  a1[a3[7]] = a2[a3[7]];
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  *((_DWORD *)v16 + 4) = *((_DWORD *)v17 + 4);
  a1[a3[9]] = a2[a3[9]];
  uint64_t v18 = a3[10];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(void *)v20;
  v19[8] = v20[8];
  *(void *)uint64_t v19 = v21;
  return a1;
}

_WORD *initializeWithTake for GenerativePlayground.PromptAssignmentOptions(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_260FE3110();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(_OWORD *)int v13 = *(_OWORD *)v14;
  *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
  uint64_t v15 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  return a1;
}

unsigned char *assignWithTake for GenerativePlayground.PromptAssignmentOptions(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  char v8 = &a2[v6];
  uint64_t v9 = sub_260FE3110();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)&a1[v15] = *(void *)&a2[v15];
  swift_bridgeObjectRelease();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  *((_DWORD *)v16 + 4) = *((_DWORD *)v17 + 4);
  uint64_t v18 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  v19[8] = v20[8];
  *(void *)uint64_t v19 = *(void *)v20;
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PromptAssignmentOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260DC9A18);
}

uint64_t sub_260DC9A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PromptAssignmentOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260DC9AF4);
}

uint64_t sub_260DC9AF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

void sub_260DC9BB8()
{
  sub_260DD11AC(319, (unint64_t *)&qword_26B409870, MEMORY[0x270FA95B0], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

id sub_260DC9C90(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 4:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 3:
      uint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for GenerativePlayground.PromptAssignmentEvent(uint64_t a1)
{
}

void sub_260DC9CF8(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 4:
      swift_bridgeObjectRelease();
      break;
    case 3:

      break;
    default:
      return;
  }
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC21PromptAssignmentEventOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_260DC9C90(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for GenerativePlayground.PromptAssignmentEvent(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_260DC9C90(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_260DC9CF8(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for GenerativePlayground.PromptAssignmentEvent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_260DC9CF8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PromptAssignmentEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PromptAssignmentEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 251;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_260DC9EDC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 4u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_260DC9EF4(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(void *)__n128 result = a2 - 5;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptAssignmentEvent()
{
  return &type metadata for GenerativePlayground.PromptAssignmentEvent;
}

void *destroy for GenerativePlayground.PromptAssignmentInteractable(void *result)
{
  uint64_t v1 = result;
  if (*result) {
    __n128 result = (void *)swift_release();
  }
  if (v1[2])
  {
    return (void *)swift_release();
  }
  return result;
}

void *initializeWithCopy for GenerativePlayground.PromptAssignmentInteractable(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[2];
  if (v5)
  {
    uint64_t v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  return a1;
}

void *assignWithCopy for GenerativePlayground.PromptAssignmentInteractable(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      swift_retain();
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for GenerativePlayground.PromptAssignmentInteractable(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PromptAssignmentInteractable(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PromptAssignmentInteractable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptAssignmentInteractable()
{
  return &type metadata for GenerativePlayground.PromptAssignmentInteractable;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PromptGuidanceSketchAssignmentOptions(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PromptGuidanceSketchAssignmentOptions(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptGuidanceSketchAssignmentOptions()
{
  return &type metadata for GenerativePlayground.PromptGuidanceSketchAssignmentOptions;
}

uint64_t initializeBufferWithCopyOfBuffer for GenerativePlayground.PromptGuidanceSketchAssignmentEvent(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_260DCB244(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for GenerativePlayground.PromptGuidanceSketchAssignmentEvent(uint64_t a1)
{
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t assignWithTake for GenerativePlayground.PromptGuidanceSketchAssignmentEvent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_260DCB268(v4, v5);
  return a1;
}

uint64_t sub_260DCA378(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 6;
}

uint64_t sub_260DCA384(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_260DCA394(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptGuidanceSketchAssignmentEvent()
{
  return &type metadata for GenerativePlayground.PromptGuidanceSketchAssignmentEvent;
}

void destroy for DefinitionSession.DrawOnImageConfiguration(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for DefinitionSession.DrawOnImageConfiguration(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  unsigned __int8 v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  uint64_t v7 = *(void **)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  id v9 = v3;
  id v10 = v5;
  id v11 = v7;
  return a1;
}

uint64_t assignWithCopy for DefinitionSession.DrawOnImageConfiguration(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  char v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v5;
  id v7 = v4;

  char v8 = *(void **)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  id v10 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  id v11 = v8;

  unint64_t v12 = *(void **)(a2 + 32);
  char v13 = *(unsigned char *)(a2 + 40);
  uint64_t v14 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v12;
  *(unsigned char *)(a1 + 40) = v13;
  id v15 = v12;

  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DefinitionSession.DrawOnImageConfiguration(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;

  char v6 = *(unsigned char *)(a2 + 24);
  id v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v6;

  char v8 = *(unsigned char *)(a2 + 40);
  char v9 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;

  return a1;
}

uint64_t getEnumTagSinglePayload for DefinitionSession.DrawOnImageConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DefinitionSession.DrawOnImageConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.DrawOnImageConfiguration()
{
  return &type metadata for GenerativePlayground.DrawOnImageConfiguration;
}

uint64_t __swift_memcpy9_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.DrawOnImageAssignmentOptions(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[9]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.DrawOnImageAssignmentOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.DrawOnImageAssignmentOptions()
{
  return &type metadata for GenerativePlayground.DrawOnImageAssignmentOptions;
}

uint64_t getEnumTagSinglePayload for TextSanitizer.Granularity(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s16VisualGeneration20GenerativePlaygroundC5ErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260DCA81CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_260DCA844(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_260DCA84C(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.DrawOnImageAssignmentOptions.RenderMode()
{
  return &type metadata for GenerativePlayground.DrawOnImageAssignmentOptions.RenderMode;
}

uint64_t sub_260DCA874(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.DrawnOnImageAssignmentEventInfo()
{
  return &type metadata for GenerativePlayground.DrawnOnImageAssignmentEventInfo;
}

void _s16VisualGeneration20GenerativePlaygroundC31DrawnOnImageAssignmentEventInfoVwxx_0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) != 255) {

  }
  if (*(unsigned __int8 *)(a1 + 24) != 255)
  {
    int v2 = *(void **)(a1 + 16);
  }
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC31DrawnOnImageAssignmentEventInfoVwcp_0(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 8);
  if (v4 == 255)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  }
  else
  {
    uint64_t v5 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = v4;
    id v6 = v5;
  }
  BOOL v7 = (void *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a2 + 24);
  if (v8 == 255)
  {
    *(void *)(a1 + 16) = *v7;
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  }
  else
  {
    char v9 = (void *)*v7;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v8;
    id v10 = v9;
  }
  return a1;
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC31DrawnOnImageAssignmentEventInfoVwca_0(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned __int8 *)(a1 + 8) == 255)
  {
    if (v4 == 255)
    {
      id v11 = *(void **)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)a1 = v11;
    }
    else
    {
      int v8 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = v4;
      id v9 = v8;
    }
  }
  else if (v4 == 255)
  {
    sub_260DCA874(a1);
    char v10 = *(unsigned char *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = v10;
  }
  else
  {
    uint64_t v5 = *(void **)a2;
    id v6 = *(void **)a1;
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = v4;
    id v7 = v5;
  }
  unint64_t v12 = (void **)(a1 + 16);
  char v13 = (void **)(a2 + 16);
  int v14 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v14 == 255)
    {
      uint64_t v21 = *v13;
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *unint64_t v12 = v21;
    }
    else
    {
      uint64_t v18 = *v13;
      *(void *)(a1 + 16) = *v13;
      *(unsigned char *)(a1 + 24) = v14;
      id v19 = v18;
    }
  }
  else if (v14 == 255)
  {
    sub_260DCA874(a1 + 16);
    char v20 = *(unsigned char *)(a2 + 24);
    *unint64_t v12 = *v13;
    *(unsigned char *)(a1 + 24) = v20;
  }
  else
  {
    id v15 = *v13;
    uint64_t v16 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = *v13;
    *(unsigned char *)(a1 + 24) = v14;
    id v17 = v15;
  }
  return a1;
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC31DrawnOnImageAssignmentEventInfoVwta_0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 8) != 255)
  {
    int v4 = *(unsigned __int8 *)(a2 + 8);
    if (v4 != 255)
    {
      uint64_t v5 = *(void **)a1;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = v4;

      goto LABEL_6;
    }
    sub_260DCA874(a1);
  }
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
LABEL_6:
  id v6 = (void *)(a2 + 16);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
LABEL_10:
    *(void *)(a1 + 16) = *v6;
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    return a1;
  }
  int v7 = *(unsigned __int8 *)(a2 + 24);
  if (v7 == 255)
  {
    sub_260DCA874(a1 + 16);
    goto LABEL_10;
  }
  int v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *v6;
  *(unsigned char *)(a1 + 24) = v7;

  return a1;
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC31DrawnOnImageAssignmentEventInfoVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t _s16VisualGeneration20GenerativePlaygroundC31DrawnOnImageAssignmentEventInfoVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.DrawOnImagePromptSynthesisEventInfo()
{
  return &type metadata for GenerativePlayground.DrawOnImagePromptSynthesisEventInfo;
}

id sub_260DCAC84(id result, unint64_t a2, void *a3, char a4)
{
  switch(a2 >> 61)
  {
    case 0uLL:
    case 2uLL:
    case 3uLL:
    case 5uLL:
      sub_260DC6F30(result, a2);
      __n128 result = sub_260DC6F30(a3, a4);
      break;
    case 1uLL:
    case 4uLL:
      __n128 result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for GenerativePlayground.DrawOnImageAssignmentEvent(uint64_t a1)
{
}

void sub_260DCAD44(void *a1, unint64_t a2, void *a3, char a4)
{
  switch(a2 >> 61)
  {
    case 0uLL:
    case 2uLL:
    case 3uLL:
    case 5uLL:
      sub_260DC6F1C(a1, a2);
      sub_260DC6F1C(a3, a4);
      break;
    case 1uLL:
    case 4uLL:

      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for GenerativePlayground.DrawOnImageAssignmentEvent(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_260DCAC84(*(id *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for GenerativePlayground.DrawOnImageAssignmentEvent(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_260DCAC84(*(id *)a2, v4, v5, v6);
  int v7 = *(void **)a1;
  unint64_t v8 = *(void *)(a1 + 8);
  id v9 = *(void **)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_260DCAD44(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for GenerativePlayground.DrawOnImageAssignmentEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  char v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_260DCAD44(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.DrawOnImageAssignmentEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 9);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.DrawOnImageAssignmentEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)-a2 << 8;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 0;
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_260DCAFAC(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 61;
}

uint64_t sub_260DCAFB8(uint64_t result)
{
  *(void *)(result + 8) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_260DCAFC8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = *(unsigned __int8 *)(result + 8) | (unint64_t)(a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.DrawOnImageAssignmentEvent()
{
  return &type metadata for GenerativePlayground.DrawOnImageAssignmentEvent;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptConditioningImageFaceInfo()
{
  return &type metadata for GenerativePlayground.PromptConditioningImageFaceInfo;
}

uint64_t getEnumTagSinglePayload for ForensicsReportType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GenerativePlayground.PromptConditioningImageSanitizationCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260DCB154);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_260DCB17C(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptConditioningImageSanitizationCategory()
{
  return &type metadata for GenerativePlayground.PromptConditioningImageSanitizationCategory;
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PromptConditioningImageAssignmentOptions(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[4]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PromptConditioningImageAssignmentOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptConditioningImageAssignmentOptions()
{
  return &type metadata for GenerativePlayground.PromptConditioningImageAssignmentOptions;
}

id sub_260DCB244(id result, unsigned __int8 a2)
{
  if ((a2 >> 6) <= 2u) {
    return result;
  }
  return result;
}

void sub_260DCB268(id a1, unsigned __int8 a2)
{
  if ((a2 >> 6) <= 2u) {
}
  }

uint64_t assignWithCopy for KeyboardEmojiGenerator.ConditioningImageAssignmentEvent(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_260DCB244(*(id *)a2, v4);
  int v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_260DCB268(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyboardEmojiGenerator.ConditioningImageAssignmentEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3E && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 62);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 8) & 0x3C | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for KeyboardEmojiGenerator.ConditioningImageAssignmentEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 62;
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(unsigned char *)(result + 8) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PromptConditioningImageAssignmentEvent()
{
  return &type metadata for GenerativePlayground.PromptConditioningImageAssignmentEvent;
}

uint64_t destroy for ClientIdentity()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GenerativePlayground.PreviewGenerationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GenerativePlayground.PreviewGenerationOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy28_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GenerativePlayground.PreviewGenerationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PreviewGenerationOptions(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 28)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PreviewGenerationOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 28) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 28) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.PreviewGenerationOptions()
{
  return &type metadata for GenerativePlayground.PreviewGenerationOptions;
}

char *initializeBufferWithCopyOfBuffer for GenerativePlayground.PreviewGenerationEvent(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = &v16[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v18 = *a2;
      id v19 = v18;
      *(void *)a1 = v18;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_260FE3110();
      uint64_t v9 = *(void *)(v8 - 8);
      char v10 = *(void (**)(char *, char **, uint64_t))(v9 + 16);
      v10(a1, a2, v8);
      id v11 = (int *)type metadata accessor for GenerationState();
      uint64_t v12 = v11[5];
      char v13 = &a1[v12];
      int v14 = (char *)a2 + v12;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))((char *)a2 + v12, 1, v8))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        v10(v13, (char **)v14, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
      }
      uint64_t v20 = v11[6];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = (char **)((char *)a2 + v20);
      uint64_t v117 = v22[1];
      *(void *)uint64_t v21 = *v22;
      *((void *)v21 + 1) = v117;
      uint64_t v23 = v11[7];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = (char *)a2 + v23;
      char *v24 = *((unsigned char *)a2 + v23);
      uint64_t v26 = *(uint64_t *)((char *)a2 + v23 + 16);
      *((void *)v24 + 1) = *(char **)((char *)a2 + v23 + 8);
      *((void *)v24 + 2) = v26;
      v24[40] = *((unsigned char *)a2 + v23 + 40);
      *(_OWORD *)(v24 + 24) = *(_OWORD *)((char *)a2 + v23 + 24);
      *((void *)v24 + 6) = *(char **)((char *)a2 + v23 + 48);
      *((_DWORD *)v24 + 14) = *(_DWORD *)((char *)a2 + v23 + 56);
      v24[60] = *((unsigned char *)a2 + v23 + 60);
      v24[61] = *((unsigned char *)a2 + v23 + 61);
      v24[62] = *((unsigned char *)a2 + v23 + 62);
      uint64_t v28 = *(uint64_t *)((char *)a2 + v23 + 64);
      uint64_t v27 = *(uint64_t *)((char *)a2 + v23 + 72);
      v24[80] = v25[80];
      *((void *)v24 + 8) = v28;
      *((void *)v24 + 9) = v27;
      uint64_t v29 = type metadata accessor for GenerationRecipe(0);
      uint64_t v30 = *(int *)(v29 + 32);
      __dst = &v24[v30];
      long long v120 = (int *)v29;
      uint64_t v31 = &v25[v30];
      uint64_t v32 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      uint64_t v33 = *((void *)v32 - 1);
      long long v34 = *(unsigned int (**)(char *, uint64_t, int *))(v33 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v34(v31, 1, v32))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
        memcpy(__dst, v31, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        uint64_t v118 = v33;
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
        v37(__dst, v31, v36);
        v37(&__dst[v32[5]], &v31[v32[5]], v36);
        uint64_t v38 = v32[6];
        uint64_t v39 = (uint64_t *)&__dst[v38];
        uint64_t v40 = (uint64_t *)&v31[v38];
        if (*(void *)&v31[v38 + 16])
        {
          uint64_t v41 = v31;
          uint64_t v42 = *v40;
          unint64_t v43 = v40[1];
          sub_260DCBD18(*v40, v43);
          *uint64_t v39 = v42;
          v39[1] = v43;
          uint64_t v31 = v41;
          v39[2] = v40[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
          v39[2] = v40[2];
        }
        __dst[v32[7]] = v31[v32[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v118 + 56))(__dst, 0, 1, v32);
      }
      uint64_t v44 = v120[9];
      uint64_t v45 = &v24[v44];
      uint64_t v46 = &v25[v44];
      *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
      v45[4] = v46[4];
      uint64_t v47 = v120[10];
      long long v48 = &v24[v47];
      long long v49 = &v25[v47];
      v48[4] = v49[4];
      *(_DWORD *)long long v48 = *(_DWORD *)v49;
      uint64_t v50 = v120[11];
      BOOL v51 = &v24[v50];
      unint64_t v52 = &v25[v50];
      *(_WORD *)BOOL v51 = *(_WORD *)v52;
      v51[2] = v52[2];
      uint64_t v53 = *((void *)v52 + 2);
      *((void *)v51 + 1) = *((void *)v52 + 1);
      *((void *)v51 + 2) = v53;
      uint64_t v54 = v120[12];
      uint64_t v55 = &v24[v54];
      uint64_t v56 = &v25[v54];
      uint64_t v57 = *(void **)&v25[v54];
      swift_bridgeObjectRetain();
      if (v57)
      {
        uint64_t v58 = *((void *)v56 + 1);
        uint64_t v59 = *((void *)v56 + 2);
        *(void *)uint64_t v55 = v57;
        *((void *)v55 + 1) = v58;
        *((void *)v55 + 2) = v59;
        id v60 = v57;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
        *((void *)v55 + 2) = *((void *)v56 + 2);
      }
      uint64_t v61 = v120[13];
      uint64_t v62 = &v24[v61];
      char v63 = &v25[v61];
      long long v64 = *((_OWORD *)v63 + 1);
      *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
      *((_OWORD *)v62 + 1) = v64;
      v62[32] = v63[32];
      uint64_t v65 = v120[14];
      uint64_t v66 = &v24[v65];
      uint64_t v67 = &v25[v65];
      v66[8] = v67[8];
      *(void *)uint64_t v66 = *(void *)v67;
      *(void *)&v24[v120[15]] = *(void *)&v25[v120[15]];
      *(void *)&v24[v120[16]] = *(void *)&v25[v120[16]];
      uint64_t v68 = v120[17];
      uint64_t v69 = &v24[v68];
      uint64_t v70 = &v25[v68];
      char v71 = *(void **)&v25[v68 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v71)
      {
        *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
        *((_DWORD *)v69 + 4) = *((_DWORD *)v70 + 4);
        uint64_t v72 = *((void *)v70 + 4);
        *((void *)v69 + 3) = v71;
        *((void *)v69 + 4) = v72;
        id v73 = v71;
        swift_retain();
      }
      else
      {
        long long v74 = *((_OWORD *)v70 + 1);
        *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
        *((_OWORD *)v69 + 1) = v74;
        *((void *)v69 + 4) = *((void *)v70 + 4);
      }
      uint64_t v75 = v120[18];
      uint64_t v76 = &v24[v75];
      uint64_t v77 = &v25[v75];
      uint64_t v78 = (void *)*((void *)v77 + 3);
      if (v78)
      {
        *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
        *((_DWORD *)v76 + 4) = *((_DWORD *)v77 + 4);
        uint64_t v79 = *((void *)v77 + 4);
        *((void *)v76 + 3) = v78;
        *((void *)v76 + 4) = v79;
        id v80 = v78;
        swift_retain();
      }
      else
      {
        long long v81 = *((_OWORD *)v77 + 1);
        *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
        *((_OWORD *)v76 + 1) = v81;
        *((void *)v76 + 4) = *((void *)v77 + 4);
      }
      uint64_t v82 = v120[19];
      uint64_t v83 = &v24[v82];
      unint64_t v84 = &v25[v82];
      char v85 = (void *)*((void *)v84 + 3);
      if (v85)
      {
        *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
        *((_DWORD *)v83 + 4) = *((_DWORD *)v84 + 4);
        uint64_t v86 = *((void *)v84 + 4);
        *((void *)v83 + 3) = v85;
        *((void *)v83 + 4) = v86;
        id v87 = v85;
        swift_retain();
      }
      else
      {
        long long v88 = *((_OWORD *)v84 + 1);
        *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
        *((_OWORD *)v83 + 1) = v88;
        *((void *)v83 + 4) = *((void *)v84 + 4);
      }
      uint64_t v89 = v120[20];
      uint64_t v90 = &v24[v89];
      unint64_t v91 = &v25[v89];
      uint64_t v92 = *(void **)&v25[v89 + 24];
      if (v92)
      {
        *(_OWORD *)uint64_t v90 = *(_OWORD *)v91;
        *((_DWORD *)v90 + 4) = *((_DWORD *)v91 + 4);
        uint64_t v93 = *((void *)v91 + 4);
        *((void *)v90 + 3) = v92;
        *((void *)v90 + 4) = v93;
        id v94 = v92;
        swift_retain();
      }
      else
      {
        long long v95 = *((_OWORD *)v91 + 1);
        *(_OWORD *)uint64_t v90 = *(_OWORD *)v91;
        *((_OWORD *)v90 + 1) = v95;
        *((void *)v90 + 4) = *((void *)v91 + 4);
      }
      uint64_t v96 = v90 + 40;
      long long v97 = v91 + 40;
      uint64_t v98 = (void *)*((void *)v91 + 8);
      if (v98)
      {
        *uint64_t v96 = *v97;
        *((_DWORD *)v90 + 14) = *((_DWORD *)v91 + 14);
        uint64_t v99 = *((void *)v91 + 9);
        *((void *)v90 + 8) = v98;
        *((void *)v90 + 9) = v99;
        id v100 = v98;
        swift_retain();
      }
      else
      {
        long long v101 = *(_OWORD *)(v91 + 56);
        *uint64_t v96 = *v97;
        *(_OWORD *)(v90 + 56) = v101;
        *((void *)v90 + 9) = *((void *)v91 + 9);
      }
      v90[80] = v91[80];
      *(void *)&v24[v120[21]] = *(void *)&v25[v120[21]];
      uint64_t v102 = v120[22];
      unint64_t v103 = &v24[v102];
      char v104 = &v25[v102];
      uint64_t v105 = *(void **)&v25[v102 + 24];
      swift_bridgeObjectRetain();
      if (v105)
      {
        *((_DWORD *)v103 + 4) = *((_DWORD *)v104 + 4);
        uint64_t v106 = *((void *)v104 + 4);
        uint64_t v107 = *((void *)v104 + 6);
        uint64_t v108 = *((void *)v104 + 7);
        *((void *)v103 + 5) = *((void *)v104 + 5);
        *((void *)v103 + 6) = v107;
        *(_OWORD *)unint64_t v103 = *(_OWORD *)v104;
        *((void *)v103 + 3) = v105;
        *((void *)v103 + 4) = v106;
        *((void *)v103 + 7) = v108;
        v103[64] = v104[64];
        id v109 = v105;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v110 = *((_OWORD *)v104 + 3);
        *((_OWORD *)v103 + 2) = *((_OWORD *)v104 + 2);
        *((_OWORD *)v103 + 3) = v110;
        v103[64] = v104[64];
        long long v111 = *((_OWORD *)v104 + 1);
        *(_OWORD *)unint64_t v103 = *(_OWORD *)v104;
        *((_OWORD *)v103 + 1) = v111;
      }
      uint64_t v112 = v120[23];
      uint64_t v113 = &v24[v112];
      uint64_t v114 = &v25[v112];
      uint64_t v115 = *((void *)v114 + 1);
      *(void *)uint64_t v113 = *(void *)v114;
      *((void *)v113 + 1) = v115;
      uint64_t v116 = *((void *)v114 + 3);
      *((void *)v113 + 2) = *((void *)v114 + 2);
      *((void *)v113 + 3) = v116;
      *(void *)&v24[v120[24]] = *(void *)&v25[v120[24]];
      v24[v120[25]] = v25[v120[25]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_260DCBD18(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

void destroy for GenerativePlayground.PreviewGenerationEvent(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v23 = *a1;

      break;
    case 2:
      swift_release();
      break;
    case 0:
      uint64_t v3 = sub_260FE3110();
      uint64_t v4 = *(void *)(v3 - 8);
      int v5 = *(void (**)(void **, uint64_t))(v4 + 8);
      v5(a1, v3);
      uint64_t v6 = type metadata accessor for GenerationState();
      BOOL v7 = (char *)a1 + *(int *)(v6 + 20);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v7, 1, v3)) {
        v5((void **)v7, v3);
      }
      swift_bridgeObjectRelease();
      uint64_t v8 = (char *)a1 + *(int *)(v6 + 28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = (int *)type metadata accessor for GenerationRecipe(0);
      char v10 = &v8[v9[8]];
      uint64_t v11 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        char v13 = *(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8);
        v13(v10, v12);
        v13(&v10[*(int *)(v11 + 20)], v12);
        int v14 = (uint64_t *)&v10[*(int *)(v11 + 24)];
        if (v14[2])
        {
          sub_260DCC110(*v14, v14[1]);
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v15 = (id *)&v8[v9[12]];
      if (*v15)
      {

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void **)&v8[v9[17] + 24];
      if (v16)
      {

        swift_release();
      }
      id v17 = *(void **)&v8[v9[18] + 24];
      if (v17)
      {

        swift_release();
      }
      uint64_t v18 = *(void **)&v8[v9[19] + 24];
      if (v18)
      {

        swift_release();
      }
      id v19 = &v8[v9[20]];
      uint64_t v20 = (void *)*((void *)v19 + 3);
      if (v20)
      {

        swift_release();
      }
      uint64_t v21 = (void *)*((void *)v19 + 8);
      if (v21)
      {

        swift_release();
      }
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void **)&v8[v9[22] + 24];
      if (v22)
      {

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
}

uint64_t sub_260DCC110(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

void **initializeWithCopy for GenerativePlayground.PreviewGenerationEvent(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v15 = *a2;
      id v16 = v15;
      *a1 = v15;
LABEL_38:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2:
      *a1 = *a2;
      swift_retain();
      goto LABEL_38;
    case 0:
      uint64_t v7 = sub_260FE3110();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(void (**)(void **, void **, uint64_t))(v8 + 16);
      v9(a1, a2, v7);
      char v10 = (int *)type metadata accessor for GenerationState();
      uint64_t v11 = v10[5];
      uint64_t v12 = (char *)a1 + v11;
      char v13 = (char *)a2 + v11;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))((char *)a2 + v11, 1, v7))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v9((void **)v12, (void **)v13, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
      }
      uint64_t v17 = v10[6];
      uint64_t v18 = (void **)((char *)a1 + v17);
      id v19 = (void **)((char *)a2 + v17);
      uint64_t v115 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v115;
      uint64_t v20 = v10[7];
      uint64_t v118 = a1;
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      *uint64_t v21 = *((unsigned char *)a2 + v20);
      uint64_t v23 = *(uint64_t *)((char *)a2 + v20 + 16);
      *((void *)v21 + 1) = *(void **)((char *)a2 + v20 + 8);
      *((void *)v21 + 2) = v23;
      v21[40] = *((unsigned char *)a2 + v20 + 40);
      *(_OWORD *)(v21 + 24) = *(_OWORD *)((char *)a2 + v20 + 24);
      *((void *)v21 + 6) = *(void **)((char *)a2 + v20 + 48);
      *((_DWORD *)v21 + 14) = *(_DWORD *)((char *)a2 + v20 + 56);
      v21[60] = *((unsigned char *)a2 + v20 + 60);
      v21[61] = *((unsigned char *)a2 + v20 + 61);
      v21[62] = *((unsigned char *)a2 + v20 + 62);
      uint64_t v25 = *(uint64_t *)((char *)a2 + v20 + 64);
      uint64_t v24 = *(uint64_t *)((char *)a2 + v20 + 72);
      v21[80] = v22[80];
      *((void *)v21 + 8) = v25;
      *((void *)v21 + 9) = v24;
      uint64_t v26 = (int *)type metadata accessor for GenerationRecipe(0);
      uint64_t v27 = v26[8];
      __dst = &v21[v27];
      uint64_t v28 = &v22[v27];
      uint64_t v29 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      uint64_t v30 = *((void *)v29 - 1);
      uint64_t v31 = *(unsigned int (**)(char *, uint64_t, int *))(v30 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31(v28, 1, v29))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
        memcpy(__dst, v28, *(void *)(*(void *)(v32 - 8) + 64));
        a1 = v118;
      }
      else
      {
        uint64_t v116 = v30;
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        long long v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
        v34(__dst, v28, v33);
        v34(&__dst[v29[5]], &v28[v29[5]], v33);
        uint64_t v35 = v29[6];
        uint64_t v36 = (uint64_t *)&__dst[v35];
        uint64_t v37 = (uint64_t *)&v28[v35];
        if (*(void *)&v28[v35 + 16])
        {
          uint64_t v38 = v28;
          uint64_t v39 = *v37;
          unint64_t v40 = v37[1];
          sub_260DCBD18(*v37, v40);
          *uint64_t v36 = v39;
          v36[1] = v40;
          uint64_t v28 = v38;
          v36[2] = v37[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
          v36[2] = v37[2];
        }
        a1 = v118;
        __dst[v29[7]] = v28[v29[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v116 + 56))(__dst, 0, 1, v29);
      }
      uint64_t v41 = v26[9];
      uint64_t v42 = &v21[v41];
      unint64_t v43 = &v22[v41];
      *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      uint64_t v44 = v26[10];
      uint64_t v45 = &v21[v44];
      uint64_t v46 = &v22[v44];
      v45[4] = v46[4];
      *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
      uint64_t v47 = v26[11];
      long long v48 = &v21[v47];
      long long v49 = &v22[v47];
      *(_WORD *)long long v48 = *(_WORD *)v49;
      _OWORD v48[2] = v49[2];
      uint64_t v50 = *((void *)v49 + 2);
      *((void *)v48 + 1) = *((void *)v49 + 1);
      *((void *)v48 + 2) = v50;
      uint64_t v51 = v26[12];
      unint64_t v52 = &v21[v51];
      uint64_t v53 = &v22[v51];
      uint64_t v54 = *(void **)&v22[v51];
      swift_bridgeObjectRetain();
      if (v54)
      {
        uint64_t v55 = *((void *)v53 + 1);
        uint64_t v56 = *((void *)v53 + 2);
        *(void *)unint64_t v52 = v54;
        *((void *)v52 + 1) = v55;
        *((void *)v52 + 2) = v56;
        id v57 = v54;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)unint64_t v52 = *(_OWORD *)v53;
        *((void *)v52 + 2) = *((void *)v53 + 2);
      }
      uint64_t v58 = v26[13];
      uint64_t v59 = &v21[v58];
      id v60 = &v22[v58];
      long long v61 = *((_OWORD *)v60 + 1);
      *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
      *((_OWORD *)v59 + 1) = v61;
      v59[32] = v60[32];
      uint64_t v62 = v26[14];
      char v63 = &v21[v62];
      long long v64 = &v22[v62];
      v63[8] = v64[8];
      *(void *)char v63 = *(void *)v64;
      *(void *)&v21[v26[15]] = *(void *)&v22[v26[15]];
      *(void *)&v21[v26[16]] = *(void *)&v22[v26[16]];
      uint64_t v65 = v26[17];
      uint64_t v66 = &v21[v65];
      uint64_t v67 = &v22[v65];
      uint64_t v68 = *(void **)&v22[v65 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v68)
      {
        *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
        *((_DWORD *)v66 + 4) = *((_DWORD *)v67 + 4);
        uint64_t v69 = *((void *)v67 + 4);
        *((void *)v66 + 3) = v68;
        *((void *)v66 + 4) = v69;
        id v70 = v68;
        swift_retain();
      }
      else
      {
        long long v71 = *((_OWORD *)v67 + 1);
        *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
        *((_OWORD *)v66 + 1) = v71;
        *((void *)v66 + 4) = *((void *)v67 + 4);
      }
      uint64_t v72 = v26[18];
      id v73 = &v21[v72];
      long long v74 = &v22[v72];
      uint64_t v75 = (void *)*((void *)v74 + 3);
      if (v75)
      {
        *(_OWORD *)id v73 = *(_OWORD *)v74;
        *((_DWORD *)v73 + 4) = *((_DWORD *)v74 + 4);
        uint64_t v76 = *((void *)v74 + 4);
        *((void *)v73 + 3) = v75;
        *((void *)v73 + 4) = v76;
        id v77 = v75;
        swift_retain();
      }
      else
      {
        long long v78 = *((_OWORD *)v74 + 1);
        *(_OWORD *)id v73 = *(_OWORD *)v74;
        *((_OWORD *)v73 + 1) = v78;
        *((void *)v73 + 4) = *((void *)v74 + 4);
      }
      uint64_t v79 = v26[19];
      id v80 = &v21[v79];
      long long v81 = &v22[v79];
      uint64_t v82 = (void *)*((void *)v81 + 3);
      if (v82)
      {
        *(_OWORD *)id v80 = *(_OWORD *)v81;
        *((_DWORD *)v80 + 4) = *((_DWORD *)v81 + 4);
        uint64_t v83 = *((void *)v81 + 4);
        *((void *)v80 + 3) = v82;
        *((void *)v80 + 4) = v83;
        id v84 = v82;
        swift_retain();
      }
      else
      {
        long long v85 = *((_OWORD *)v81 + 1);
        *(_OWORD *)id v80 = *(_OWORD *)v81;
        *((_OWORD *)v80 + 1) = v85;
        *((void *)v80 + 4) = *((void *)v81 + 4);
      }
      uint64_t v86 = v26[20];
      id v87 = &v21[v86];
      long long v88 = &v22[v86];
      uint64_t v89 = *(void **)&v22[v86 + 24];
      if (v89)
      {
        *(_OWORD *)id v87 = *(_OWORD *)v88;
        *((_DWORD *)v87 + 4) = *((_DWORD *)v88 + 4);
        uint64_t v90 = *((void *)v88 + 4);
        *((void *)v87 + 3) = v89;
        *((void *)v87 + 4) = v90;
        id v91 = v89;
        swift_retain();
      }
      else
      {
        long long v92 = *((_OWORD *)v88 + 1);
        *(_OWORD *)id v87 = *(_OWORD *)v88;
        *((_OWORD *)v87 + 1) = v92;
        *((void *)v87 + 4) = *((void *)v88 + 4);
      }
      uint64_t v93 = v87 + 40;
      id v94 = v88 + 40;
      long long v95 = (void *)*((void *)v88 + 8);
      if (v95)
      {
        *uint64_t v93 = *v94;
        *((_DWORD *)v87 + 14) = *((_DWORD *)v88 + 14);
        uint64_t v96 = *((void *)v88 + 9);
        *((void *)v87 + 8) = v95;
        *((void *)v87 + 9) = v96;
        id v97 = v95;
        swift_retain();
      }
      else
      {
        long long v98 = *(_OWORD *)(v88 + 56);
        *uint64_t v93 = *v94;
        *(_OWORD *)(v87 + 56) = v98;
        *((void *)v87 + 9) = *((void *)v88 + 9);
      }
      v87[80] = v88[80];
      *(void *)&v21[v26[21]] = *(void *)&v22[v26[21]];
      uint64_t v99 = v26[22];
      id v100 = &v21[v99];
      long long v101 = &v22[v99];
      uint64_t v102 = *(void **)&v22[v99 + 24];
      swift_bridgeObjectRetain();
      if (v102)
      {
        *((_DWORD *)v100 + 4) = *((_DWORD *)v101 + 4);
        uint64_t v103 = *((void *)v101 + 4);
        uint64_t v104 = *((void *)v101 + 6);
        uint64_t v105 = *((void *)v101 + 7);
        *((void *)v100 + 5) = *((void *)v101 + 5);
        *((void *)v100 + 6) = v104;
        *(_OWORD *)id v100 = *(_OWORD *)v101;
        *((void *)v100 + 3) = v102;
        *((void *)v100 + 4) = v103;
        *((void *)v100 + 7) = v105;
        v100[64] = v101[64];
        id v106 = v102;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v107 = *((_OWORD *)v101 + 3);
        *((_OWORD *)v100 + 2) = *((_OWORD *)v101 + 2);
        *((_OWORD *)v100 + 3) = v107;
        v100[64] = v101[64];
        long long v108 = *((_OWORD *)v101 + 1);
        *(_OWORD *)id v100 = *(_OWORD *)v101;
        *((_OWORD *)v100 + 1) = v108;
      }
      uint64_t v109 = v26[23];
      long long v110 = &v21[v109];
      long long v111 = &v22[v109];
      uint64_t v112 = *((void *)v111 + 1);
      *(void *)long long v110 = *(void *)v111;
      *((void *)v110 + 1) = v112;
      uint64_t v113 = *((void *)v111 + 3);
      *((void *)v110 + 2) = *((void *)v111 + 2);
      *((void *)v110 + 3) = v113;
      *(void *)&v21[v26[24]] = *(void *)&v22[v26[24]];
      v21[v26[25]] = v22[v26[25]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void **assignWithCopy for GenerativePlayground.PreviewGenerationEvent(void **a1, void **a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_260DC6C10((uint64_t)a1, type metadata accessor for GenerativePlayground.PreviewGenerationEvent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v15 = *a2;
      id v16 = v15;
      *a1 = v15;
LABEL_39:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2:
      *a1 = *a2;
      swift_retain();
      goto LABEL_39;
    case 0:
      uint64_t v7 = sub_260FE3110();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(void (**)(void **, void **, uint64_t))(v8 + 16);
      v9(a1, a2, v7);
      char v10 = (int *)type metadata accessor for GenerationState();
      uint64_t v11 = v10[5];
      uint64_t v12 = (char *)a1 + v11;
      char v13 = (char *)a2 + v11;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))((char *)a2 + v11, 1, v7))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v9((void **)v12, (void **)v13, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
      }
      uint64_t v17 = v10[6];
      uint64_t v18 = (void **)((char *)a1 + v17);
      id v19 = (void **)((char *)a2 + v17);
      *uint64_t v18 = *v19;
      v18[1] = v19[1];
      uint64_t v20 = v10[7];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      *uint64_t v21 = *((unsigned char *)a2 + v20);
      *((void *)v21 + 1) = *(void **)((char *)a2 + v20 + 8);
      *((void *)v21 + 2) = *(void **)((char *)a2 + v20 + 16);
      long long v23 = *(_OWORD *)((char *)a2 + v20 + 24);
      v21[40] = *((unsigned char *)a2 + v20 + 40);
      *(_OWORD *)(v21 + 24) = v23;
      *((void *)v21 + 6) = *(void **)((char *)a2 + v20 + 48);
      v21[56] = *((unsigned char *)a2 + v20 + 56);
      v21[57] = *((unsigned char *)a2 + v20 + 57);
      v21[58] = *((unsigned char *)a2 + v20 + 58);
      v21[59] = *((unsigned char *)a2 + v20 + 59);
      v21[60] = *((unsigned char *)a2 + v20 + 60);
      v21[61] = *((unsigned char *)a2 + v20 + 61);
      v21[62] = *((unsigned char *)a2 + v20 + 62);
      *((void *)v21 + 8) = *(void **)((char *)a2 + v20 + 64);
      uint64_t v24 = *(uint64_t *)((char *)a2 + v20 + 72);
      v21[80] = v22[80];
      *((void *)v21 + 9) = v24;
      uint64_t v25 = (int *)type metadata accessor for GenerationRecipe(0);
      uint64_t v26 = v25[8];
      __dst = &v21[v26];
      uint64_t v27 = &v22[v26];
      uint64_t v28 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v30(v27, 1, v28))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
        memcpy(__dst, v27, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        uint64_t v116 = v29;
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
        v33(__dst, v27, v32);
        v33(&__dst[*(int *)(v28 + 20)], &v27[*(int *)(v28 + 20)], v32);
        uint64_t v115 = v28;
        uint64_t v34 = *(int *)(v28 + 24);
        uint64_t v35 = (uint64_t *)&__dst[v34];
        uint64_t v36 = (uint64_t *)&v27[v34];
        if (*(void *)&v27[v34 + 16])
        {
          uint64_t v37 = v27;
          uint64_t v38 = *v36;
          unint64_t v39 = v36[1];
          sub_260DCBD18(*v36, v39);
          uint64_t *v35 = v38;
          v35[1] = v39;
          uint64_t v27 = v37;
          _OWORD v35[2] = v36[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v40 = *(_OWORD *)v36;
          _OWORD v35[2] = v36[2];
          *(_OWORD *)uint64_t v35 = v40;
        }
        __dst[*(int *)(v115 + 28)] = v27[*(int *)(v115 + 28)];
        (*(void (**)(char *, void, uint64_t))(v116 + 56))(__dst, 0, 1);
      }
      uint64_t v41 = v25[9];
      uint64_t v42 = &v21[v41];
      unint64_t v43 = &v22[v41];
      int v44 = *(_DWORD *)v43;
      v42[4] = v43[4];
      *(_DWORD *)uint64_t v42 = v44;
      uint64_t v45 = v25[10];
      uint64_t v46 = &v21[v45];
      uint64_t v47 = &v22[v45];
      int v48 = *(_DWORD *)v47;
      v46[4] = v47[4];
      *(_DWORD *)uint64_t v46 = v48;
      uint64_t v49 = v25[11];
      uint64_t v50 = &v21[v49];
      uint64_t v51 = &v22[v49];
      char *v50 = *v51;
      v50[1] = v51[1];
      v50[2] = v51[2];
      *((void *)v50 + 1) = *((void *)v51 + 1);
      *((void *)v50 + 2) = *((void *)v51 + 2);
      uint64_t v52 = v25[12];
      uint64_t v53 = &v21[v52];
      uint64_t v54 = &v22[v52];
      uint64_t v55 = *(void **)&v22[v52];
      swift_bridgeObjectRetain();
      if (v55)
      {
        *(void *)uint64_t v53 = v55;
        *((void *)v53 + 1) = *((void *)v54 + 1);
        *((void *)v53 + 2) = *((void *)v54 + 2);
        id v56 = v55;
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v57 = *(_OWORD *)v54;
        *((void *)v53 + 2) = *((void *)v54 + 2);
        *(_OWORD *)uint64_t v53 = v57;
      }
      uint64_t v58 = v25[13];
      uint64_t v59 = &v21[v58];
      id v60 = &v22[v58];
      long long v61 = *(_OWORD *)v60;
      long long v62 = *((_OWORD *)v60 + 1);
      v59[32] = v60[32];
      *(_OWORD *)uint64_t v59 = v61;
      *((_OWORD *)v59 + 1) = v62;
      uint64_t v63 = v25[14];
      long long v64 = &v21[v63];
      uint64_t v65 = &v22[v63];
      uint64_t v66 = *(void *)v65;
      v64[8] = v65[8];
      *(void *)long long v64 = v66;
      *(void *)&v21[v25[15]] = *(void *)&v22[v25[15]];
      *(void *)&v21[v25[16]] = *(void *)&v22[v25[16]];
      uint64_t v67 = v25[17];
      uint64_t v68 = &v21[v67];
      uint64_t v69 = &v22[v67];
      uint64_t v70 = *(void *)&v22[v67 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      long long v71 = *(_OWORD *)v69;
      if (v70)
      {
        *((_DWORD *)v68 + 4) = *((_DWORD *)v69 + 4);
        *(_OWORD *)uint64_t v68 = v71;
        uint64_t v72 = (void *)*((void *)v69 + 3);
        *((void *)v68 + 3) = v72;
        *((void *)v68 + 4) = *((void *)v69 + 4);
        id v73 = v72;
        swift_retain();
      }
      else
      {
        long long v74 = *((_OWORD *)v69 + 1);
        *((void *)v68 + 4) = *((void *)v69 + 4);
        *(_OWORD *)uint64_t v68 = v71;
        *((_OWORD *)v68 + 1) = v74;
      }
      uint64_t v75 = v25[18];
      uint64_t v76 = &v21[v75];
      id v77 = &v22[v75];
      long long v78 = *(_OWORD *)v77;
      if (*((void *)v77 + 3))
      {
        *((_DWORD *)v76 + 4) = *((_DWORD *)v77 + 4);
        *(_OWORD *)uint64_t v76 = v78;
        uint64_t v79 = (void *)*((void *)v77 + 3);
        *((void *)v76 + 3) = v79;
        *((void *)v76 + 4) = *((void *)v77 + 4);
        id v80 = v79;
        swift_retain();
      }
      else
      {
        long long v81 = *((_OWORD *)v77 + 1);
        *((void *)v76 + 4) = *((void *)v77 + 4);
        *(_OWORD *)uint64_t v76 = v78;
        *((_OWORD *)v76 + 1) = v81;
      }
      uint64_t v82 = v25[19];
      uint64_t v83 = &v21[v82];
      id v84 = &v22[v82];
      long long v85 = *(_OWORD *)v84;
      if (*((void *)v84 + 3))
      {
        *((_DWORD *)v83 + 4) = *((_DWORD *)v84 + 4);
        *(_OWORD *)uint64_t v83 = v85;
        uint64_t v86 = (void *)*((void *)v84 + 3);
        *((void *)v83 + 3) = v86;
        *((void *)v83 + 4) = *((void *)v84 + 4);
        id v87 = v86;
        swift_retain();
      }
      else
      {
        long long v88 = *((_OWORD *)v84 + 1);
        *((void *)v83 + 4) = *((void *)v84 + 4);
        *(_OWORD *)uint64_t v83 = v85;
        *((_OWORD *)v83 + 1) = v88;
      }
      uint64_t v89 = v25[20];
      uint64_t v90 = &v21[v89];
      id v91 = &v22[v89];
      long long v92 = *(_OWORD *)&v22[v89];
      if (*(void *)&v22[v89 + 24])
      {
        *((_DWORD *)v90 + 4) = *((_DWORD *)v91 + 4);
        *(_OWORD *)uint64_t v90 = v92;
        uint64_t v93 = (void *)*((void *)v91 + 3);
        *((void *)v90 + 3) = v93;
        *((void *)v90 + 4) = *((void *)v91 + 4);
        id v94 = v93;
        swift_retain();
      }
      else
      {
        long long v95 = *((_OWORD *)v91 + 1);
        *((void *)v90 + 4) = *((void *)v91 + 4);
        *(_OWORD *)uint64_t v90 = v92;
        *((_OWORD *)v90 + 1) = v95;
      }
      uint64_t v96 = v90 + 40;
      long long v97 = *(_OWORD *)(v91 + 40);
      if (*((void *)v91 + 8))
      {
        *((_DWORD *)v90 + 14) = *((_DWORD *)v91 + 14);
        *uint64_t v96 = v97;
        long long v98 = (void *)*((void *)v91 + 8);
        *((void *)v90 + 8) = v98;
        *((void *)v90 + 9) = *((void *)v91 + 9);
        id v99 = v98;
        swift_retain();
      }
      else
      {
        long long v100 = *(_OWORD *)(v91 + 56);
        *((void *)v90 + 9) = *((void *)v91 + 9);
        *uint64_t v96 = v97;
        *(_OWORD *)(v90 + 56) = v100;
      }
      v90[80] = v91[80];
      *(void *)&v21[v25[21]] = *(void *)&v22[v25[21]];
      uint64_t v101 = v25[22];
      uint64_t v102 = &v21[v101];
      uint64_t v103 = &v22[v101];
      uint64_t v104 = *(void *)&v22[v101 + 24];
      swift_bridgeObjectRetain();
      if (v104)
      {
        long long v105 = *(_OWORD *)v103;
        *((_DWORD *)v102 + 4) = *((_DWORD *)v103 + 4);
        *(_OWORD *)uint64_t v102 = v105;
        id v106 = (void *)*((void *)v103 + 3);
        *((void *)v102 + 3) = v106;
        *((void *)v102 + 4) = *((void *)v103 + 4);
        *((void *)v102 + 5) = *((void *)v103 + 5);
        *((void *)v102 + 6) = *((void *)v103 + 6);
        *((void *)v102 + 7) = *((void *)v103 + 7);
        v102[64] = v103[64];
        id v107 = v106;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
        long long v108 = *((_OWORD *)v103 + 1);
        long long v109 = *((_OWORD *)v103 + 2);
        long long v110 = *((_OWORD *)v103 + 3);
        v102[64] = v103[64];
        *((_OWORD *)v102 + 2) = v109;
        *((_OWORD *)v102 + 3) = v110;
        *((_OWORD *)v102 + 1) = v108;
      }
      uint64_t v111 = v25[23];
      uint64_t v112 = &v21[v111];
      uint64_t v113 = &v22[v111];
      *(void *)uint64_t v112 = *(void *)v113;
      *((void *)v112 + 1) = *((void *)v113 + 1);
      *((void *)v112 + 2) = *((void *)v113 + 2);
      *((void *)v112 + 3) = *((void *)v113 + 3);
      *(void *)&v21[v25[24]] = *(void *)&v22[v25[24]];
      v21[v25[25]] = v22[v25[25]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_39;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t type metadata accessor for GenerativePlayground.PreviewGenerationEvent(uint64_t a1)
{
  return sub_260DD5A3C(a1, (uint64_t *)&unk_26A8E6C00);
}

char *initializeWithTake for GenerativePlayground.PreviewGenerationEvent(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_260FE3110();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v8(a1, a2, v6);
    uint64_t v9 = (int *)type metadata accessor for GenerationState();
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
    }
    *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
    uint64_t v14 = v9[7];
    uint64_t v15 = &a1[v14];
    id v16 = &a2[v14];
    *uint64_t v15 = a2[v14];
    *(void *)(v15 + 55) = *(void *)&a2[v14 + 55];
    *(_OWORD *)(v15 + 40) = *(_OWORD *)&a2[v14 + 40];
    *(_OWORD *)(v15 + 24) = *(_OWORD *)&a2[v14 + 24];
    *(_OWORD *)(v15 + 8) = *(_OWORD *)&a2[v14 + 8];
    v15[80] = a2[v14 + 80];
    uint64_t v17 = *(void *)&a2[v14 + 72];
    *((void *)v15 + 8) = *(void *)&a2[v14 + 64];
    *((void *)v15 + 9) = v17;
    uint64_t v18 = (int *)type metadata accessor for GenerationRecipe(0);
    uint64_t v19 = v18[8];
    uint64_t v20 = &v15[v19];
    uint64_t v21 = &v16[v19];
    uint64_t v22 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    uint64_t v23 = *((void *)v22 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32);
      v26(v20, v21, v25);
      v26(&v20[v22[5]], &v21[v22[5]], v25);
      uint64_t v27 = v22[6];
      uint64_t v28 = &v20[v27];
      uint64_t v29 = &v21[v27];
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      *((void *)v28 + 2) = *((void *)v29 + 2);
      v20[v22[7]] = v21[v22[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v30 = v18[9];
    uint64_t v31 = &v15[v30];
    uint64_t v32 = &v16[v30];
    *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    uint64_t v33 = v18[10];
    uint64_t v34 = &v15[v33];
    uint64_t v35 = &v16[v33];
    v34[4] = v35[4];
    *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
    uint64_t v36 = v18[11];
    uint64_t v37 = &v15[v36];
    uint64_t v38 = &v16[v36];
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *((void *)v37 + 2) = *((void *)v38 + 2);
    uint64_t v39 = v18[12];
    long long v40 = &v15[v39];
    uint64_t v41 = &v16[v39];
    *(_OWORD *)long long v40 = *(_OWORD *)v41;
    *((void *)v40 + 2) = *((void *)v41 + 2);
    uint64_t v42 = v18[13];
    unint64_t v43 = &v15[v42];
    int v44 = &v16[v42];
    long long v45 = *((_OWORD *)v44 + 1);
    *(_OWORD *)unint64_t v43 = *(_OWORD *)v44;
    *((_OWORD *)v43 + 1) = v45;
    v43[32] = v44[32];
    uint64_t v46 = v18[14];
    uint64_t v47 = &v15[v46];
    int v48 = &v16[v46];
    *(void *)uint64_t v47 = *(void *)v48;
    v47[8] = v48[8];
    *(void *)&v15[v18[15]] = *(void *)&v16[v18[15]];
    *(void *)&v15[v18[16]] = *(void *)&v16[v18[16]];
    uint64_t v49 = v18[17];
    uint64_t v50 = &v15[v49];
    uint64_t v51 = &v16[v49];
    long long v52 = *((_OWORD *)v51 + 1);
    *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
    *((_OWORD *)v50 + 1) = v52;
    *((void *)v50 + 4) = *((void *)v51 + 4);
    uint64_t v53 = v18[18];
    uint64_t v54 = &v15[v53];
    uint64_t v55 = &v16[v53];
    long long v56 = *((_OWORD *)v55 + 1);
    *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
    *((_OWORD *)v54 + 1) = v56;
    *((void *)v54 + 4) = *((void *)v55 + 4);
    uint64_t v57 = v18[19];
    uint64_t v58 = &v15[v57];
    uint64_t v59 = &v16[v57];
    *((void *)v58 + 4) = *((void *)v59 + 4);
    long long v60 = *((_OWORD *)v59 + 1);
    *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
    *((_OWORD *)v58 + 1) = v60;
    uint64_t v61 = v18[20];
    long long v62 = &v15[v61];
    uint64_t v63 = &v16[v61];
    long long v64 = *((_OWORD *)v63 + 1);
    *(_OWORD *)long long v62 = *(_OWORD *)v63;
    *((_OWORD *)v62 + 1) = v64;
    v62[80] = v63[80];
    long long v65 = *((_OWORD *)v63 + 4);
    long long v66 = *((_OWORD *)v63 + 2);
    *((_OWORD *)v62 + 3) = *((_OWORD *)v63 + 3);
    *((_OWORD *)v62 + 4) = v65;
    *((_OWORD *)v62 + 2) = v66;
    *(void *)&v15[v18[21]] = *(void *)&v16[v18[21]];
    uint64_t v67 = v18[22];
    uint64_t v68 = &v15[v67];
    uint64_t v69 = &v16[v67];
    long long v70 = *((_OWORD *)v69 + 3);
    *((_OWORD *)v68 + 2) = *((_OWORD *)v69 + 2);
    *((_OWORD *)v68 + 3) = v70;
    v68[64] = v69[64];
    long long v71 = *((_OWORD *)v69 + 1);
    *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
    *((_OWORD *)v68 + 1) = v71;
    uint64_t v72 = v18[23];
    id v73 = &v15[v72];
    long long v74 = &v16[v72];
    long long v75 = *((_OWORD *)v74 + 1);
    *(_OWORD *)id v73 = *(_OWORD *)v74;
    *((_OWORD *)v73 + 1) = v75;
    *(void *)&v15[v18[24]] = *(void *)&v16[v18[24]];
    v15[v18[25]] = v16[v18[25]];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for GenerativePlayground.PreviewGenerationEvent(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_260DC6C10((uint64_t)a1, type metadata accessor for GenerativePlayground.PreviewGenerationEvent);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_260FE3110();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v8(a1, a2, v6);
      uint64_t v9 = (int *)type metadata accessor for GenerationState();
      uint64_t v10 = v9[5];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        v8(v11, v12, v6);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
      }
      *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
      uint64_t v14 = v9[7];
      uint64_t v15 = &a1[v14];
      id v16 = &a2[v14];
      *uint64_t v15 = a2[v14];
      *(void *)(v15 + 55) = *(void *)&a2[v14 + 55];
      *(_OWORD *)(v15 + 40) = *(_OWORD *)&a2[v14 + 40];
      *(_OWORD *)(v15 + 24) = *(_OWORD *)&a2[v14 + 24];
      *(_OWORD *)(v15 + 8) = *(_OWORD *)&a2[v14 + 8];
      v15[80] = a2[v14 + 80];
      uint64_t v17 = *(void *)&a2[v14 + 72];
      *((void *)v15 + 8) = *(void *)&a2[v14 + 64];
      *((void *)v15 + 9) = v17;
      uint64_t v18 = (int *)type metadata accessor for GenerationRecipe(0);
      uint64_t v19 = v18[8];
      uint64_t v20 = &v15[v19];
      uint64_t v21 = &v16[v19];
      uint64_t v22 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      uint64_t v23 = *((void *)v22 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32);
        v26(v20, v21, v25);
        v26(&v20[v22[5]], &v21[v22[5]], v25);
        uint64_t v27 = v22[6];
        uint64_t v28 = &v20[v27];
        uint64_t v29 = &v21[v27];
        *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
        *((void *)v28 + 2) = *((void *)v29 + 2);
        v20[v22[7]] = v21[v22[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      }
      uint64_t v30 = v18[9];
      uint64_t v31 = &v15[v30];
      uint64_t v32 = &v16[v30];
      *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
      v31[4] = v32[4];
      uint64_t v33 = v18[10];
      uint64_t v34 = &v15[v33];
      uint64_t v35 = &v16[v33];
      v34[4] = v35[4];
      *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
      uint64_t v36 = v18[11];
      uint64_t v37 = &v15[v36];
      uint64_t v38 = &v16[v36];
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
      *((void *)v37 + 2) = *((void *)v38 + 2);
      uint64_t v39 = v18[12];
      long long v40 = &v15[v39];
      uint64_t v41 = &v16[v39];
      *(_OWORD *)long long v40 = *(_OWORD *)v41;
      *((void *)v40 + 2) = *((void *)v41 + 2);
      uint64_t v42 = v18[13];
      unint64_t v43 = &v15[v42];
      int v44 = &v16[v42];
      long long v45 = *((_OWORD *)v44 + 1);
      *(_OWORD *)unint64_t v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v45;
      v43[32] = v44[32];
      uint64_t v46 = v18[14];
      uint64_t v47 = &v15[v46];
      int v48 = &v16[v46];
      *(void *)uint64_t v47 = *(void *)v48;
      v47[8] = v48[8];
      *(void *)&v15[v18[15]] = *(void *)&v16[v18[15]];
      *(void *)&v15[v18[16]] = *(void *)&v16[v18[16]];
      uint64_t v49 = v18[17];
      uint64_t v50 = &v15[v49];
      uint64_t v51 = &v16[v49];
      long long v52 = *((_OWORD *)v51 + 1);
      *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v52;
      *((void *)v50 + 4) = *((void *)v51 + 4);
      uint64_t v53 = v18[18];
      uint64_t v54 = &v15[v53];
      uint64_t v55 = &v16[v53];
      long long v56 = *((_OWORD *)v55 + 1);
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v56;
      *((void *)v54 + 4) = *((void *)v55 + 4);
      uint64_t v57 = v18[19];
      uint64_t v58 = &v15[v57];
      uint64_t v59 = &v16[v57];
      *((void *)v58 + 4) = *((void *)v59 + 4);
      long long v60 = *((_OWORD *)v59 + 1);
      *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v60;
      uint64_t v61 = v18[20];
      long long v62 = &v15[v61];
      uint64_t v63 = &v16[v61];
      long long v64 = *((_OWORD *)v63 + 1);
      *(_OWORD *)long long v62 = *(_OWORD *)v63;
      *((_OWORD *)v62 + 1) = v64;
      v62[80] = v63[80];
      long long v65 = *((_OWORD *)v63 + 4);
      long long v66 = *((_OWORD *)v63 + 2);
      *((_OWORD *)v62 + 3) = *((_OWORD *)v63 + 3);
      *((_OWORD *)v62 + 4) = v65;
      *((_OWORD *)v62 + 2) = v66;
      *(void *)&v15[v18[21]] = *(void *)&v16[v18[21]];
      uint64_t v67 = v18[22];
      uint64_t v68 = &v15[v67];
      uint64_t v69 = &v16[v67];
      long long v70 = *((_OWORD *)v69 + 3);
      *((_OWORD *)v68 + 2) = *((_OWORD *)v69 + 2);
      *((_OWORD *)v68 + 3) = v70;
      v68[64] = v69[64];
      long long v71 = *((_OWORD *)v69 + 1);
      *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
      *((_OWORD *)v68 + 1) = v71;
      uint64_t v72 = v18[23];
      id v73 = &v15[v72];
      long long v74 = &v16[v72];
      long long v75 = *((_OWORD *)v74 + 1);
      *(_OWORD *)id v73 = *(_OWORD *)v74;
      *((_OWORD *)v73 + 1) = v75;
      *(void *)&v15[v18[24]] = *(void *)&v16[v18[24]];
      v15[v18[25]] = v16[v18[25]];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_260DCDB44()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_260DCDB54()
{
  uint64_t result = type metadata accessor for GenerationState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for GenerativePlayground.PreviewGenerationSession(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *(void *)a1 = *a2;
    uint64_t v24 = v23 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E69B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v132 = a3;
    v133 = a2;
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v134 = a1;
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_260FE3110();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    v17(v13, v14, v15);
    uint64_t v18 = (int *)type metadata accessor for GenerationState();
    uint64_t v19 = v18[5];
    uint64_t v20 = (void *)(v13 + v19);
    uint64_t v21 = (const void *)(v14 + v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14 + v19, 1, v15))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v17((uint64_t)v20, (uint64_t)v21, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
    }
    uint64_t v25 = v18[6];
    uint64_t v26 = (void *)(v13 + v25);
    uint64_t v27 = (void *)(v14 + v25);
    uint64_t v129 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v129;
    uint64_t v28 = v18[7];
    uint64_t v29 = v13 + v28;
    uint64_t v30 = v14 + v28;
    *(unsigned char *)uint64_t v29 = *(unsigned char *)(v14 + v28);
    uint64_t v31 = *(void *)(v14 + v28 + 16);
    *(void *)(v29 + 8) = *(void *)(v14 + v28 + 8);
    *(void *)(v29 + 16) = v31;
    *(unsigned char *)(v29 + 40) = *(unsigned char *)(v14 + v28 + 40);
    *(_OWORD *)(v29 + 24) = *(_OWORD *)(v14 + v28 + 24);
    *(void *)(v29 + 48) = *(void *)(v14 + v28 + 48);
    *(_DWORD *)(v29 + 56) = *(_DWORD *)(v14 + v28 + 56);
    *(unsigned char *)(v29 + 60) = *(unsigned char *)(v14 + v28 + 60);
    *(unsigned char *)(v29 + 61) = *(unsigned char *)(v14 + v28 + 61);
    *(unsigned char *)(v29 + 62) = *(unsigned char *)(v14 + v28 + 62);
    uint64_t v33 = *(void *)(v14 + v28 + 64);
    uint64_t v32 = *(void *)(v14 + v28 + 72);
    *(unsigned char *)(v29 + 80) = *(unsigned char *)(v30 + 80);
    *(void *)(v29 + 64) = v33;
    *(void *)(v29 + 72) = v32;
    uint64_t v34 = (int *)type metadata accessor for GenerationRecipe(0);
    uint64_t v35 = v34[8];
    __dst = (char *)(v29 + v35);
    uint64_t v36 = (char *)(v30 + v35);
    uint64_t v37 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    uint64_t v38 = *((void *)v37 - 1);
    uint64_t v39 = *(unsigned int (**)(char *, uint64_t, int *))(v38 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39(v36, 1, v37))
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
      memcpy(__dst, v36, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      uint64_t v130 = v38;
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
      v42(__dst, v36, v41);
      v42(&__dst[v37[5]], &v36[v37[5]], v41);
      uint64_t v43 = v37[6];
      int v44 = (uint64_t *)&__dst[v43];
      long long v45 = (uint64_t *)&v36[v43];
      if (*(void *)&v36[v43 + 16])
      {
        uint64_t v46 = v36;
        uint64_t v47 = *v45;
        unint64_t v48 = v45[1];
        sub_260DCBD18(*v45, v48);
        uint64_t *v44 = v47;
        v44[1] = v48;
        uint64_t v36 = v46;
        v44[2] = v45[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)int v44 = *(_OWORD *)v45;
        v44[2] = v45[2];
      }
      __dst[v37[7]] = v36[v37[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v130 + 56))(__dst, 0, 1, v37);
    }
    uint64_t v49 = v34[9];
    uint64_t v50 = v29 + v49;
    uint64_t v51 = v30 + v49;
    *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
    *(unsigned char *)(v50 + 4) = *(unsigned char *)(v51 + 4);
    uint64_t v52 = v34[10];
    uint64_t v53 = v29 + v52;
    uint64_t v54 = v30 + v52;
    *(unsigned char *)(v53 + 4) = *(unsigned char *)(v54 + 4);
    *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
    uint64_t v55 = v34[11];
    uint64_t v56 = v29 + v55;
    uint64_t v57 = v30 + v55;
    *(_WORD *)uint64_t v56 = *(_WORD *)v57;
    *(unsigned char *)(v56 + 2) = *(unsigned char *)(v57 + 2);
    uint64_t v58 = *(void *)(v57 + 16);
    *(void *)(v56 + 8) = *(void *)(v57 + 8);
    *(void *)(v56 + 16) = v58;
    uint64_t v59 = v34[12];
    long long v60 = (void *)(v29 + v59);
    uint64_t v61 = v30 + v59;
    long long v62 = *(void **)(v30 + v59);
    swift_bridgeObjectRetain();
    if (v62)
    {
      uint64_t v63 = *(void *)(v61 + 8);
      uint64_t v64 = *(void *)(v61 + 16);
      *long long v60 = v62;
      v60[1] = v63;
      uint64_t v60[2] = v64;
      id v65 = v62;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)long long v60 = *(_OWORD *)v61;
      uint64_t v60[2] = *(void *)(v61 + 16);
    }
    uint64_t v66 = v34[13];
    uint64_t v67 = v29 + v66;
    uint64_t v68 = v30 + v66;
    long long v69 = *(_OWORD *)(v68 + 16);
    *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
    *(_OWORD *)(v67 + 16) = v69;
    *(unsigned char *)(v67 + 32) = *(unsigned char *)(v68 + 32);
    uint64_t v70 = v34[14];
    uint64_t v71 = v29 + v70;
    uint64_t v72 = v30 + v70;
    *(unsigned char *)(v71 + 8) = *(unsigned char *)(v72 + 8);
    *(void *)uint64_t v71 = *(void *)v72;
    *(void *)(v29 + v34[15]) = *(void *)(v30 + v34[15]);
    *(void *)(v29 + v34[16]) = *(void *)(v30 + v34[16]);
    uint64_t v73 = v34[17];
    uint64_t v74 = v29 + v73;
    uint64_t v75 = v30 + v73;
    uint64_t v76 = *(void **)(v30 + v73 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v76)
    {
      *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
      *(_DWORD *)(v74 + 16) = *(_DWORD *)(v75 + 16);
      uint64_t v77 = *(void *)(v75 + 32);
      *(void *)(v74 + 24) = v76;
      *(void *)(v74 + 32) = v77;
      id v78 = v76;
      swift_retain();
    }
    else
    {
      long long v79 = *(_OWORD *)(v75 + 16);
      *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
      *(_OWORD *)(v74 + 16) = v79;
      *(void *)(v74 + 32) = *(void *)(v75 + 32);
    }
    uint64_t v80 = v34[18];
    uint64_t v81 = v29 + v80;
    uint64_t v82 = v30 + v80;
    uint64_t v83 = *(void **)(v82 + 24);
    if (v83)
    {
      *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
      *(_DWORD *)(v81 + 16) = *(_DWORD *)(v82 + 16);
      uint64_t v84 = *(void *)(v82 + 32);
      *(void *)(v81 + 24) = v83;
      *(void *)(v81 + 32) = v84;
      id v85 = v83;
      swift_retain();
    }
    else
    {
      long long v86 = *(_OWORD *)(v82 + 16);
      *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
      *(_OWORD *)(v81 + 16) = v86;
      *(void *)(v81 + 32) = *(void *)(v82 + 32);
    }
    uint64_t v87 = v34[19];
    uint64_t v88 = v29 + v87;
    uint64_t v89 = v30 + v87;
    uint64_t v90 = *(void **)(v89 + 24);
    if (v90)
    {
      *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
      *(_DWORD *)(v88 + 16) = *(_DWORD *)(v89 + 16);
      uint64_t v91 = *(void *)(v89 + 32);
      *(void *)(v88 + 24) = v90;
      *(void *)(v88 + 32) = v91;
      id v92 = v90;
      swift_retain();
    }
    else
    {
      long long v93 = *(_OWORD *)(v89 + 16);
      *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
      *(_OWORD *)(v88 + 16) = v93;
      *(void *)(v88 + 32) = *(void *)(v89 + 32);
    }
    uint64_t v94 = v34[20];
    uint64_t v95 = v29 + v94;
    uint64_t v96 = v30 + v94;
    long long v97 = *(void **)(v30 + v94 + 24);
    if (v97)
    {
      *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
      *(_DWORD *)(v95 + 16) = *(_DWORD *)(v96 + 16);
      uint64_t v98 = *(void *)(v96 + 32);
      *(void *)(v95 + 24) = v97;
      *(void *)(v95 + 32) = v98;
      id v99 = v97;
      swift_retain();
    }
    else
    {
      long long v100 = *(_OWORD *)(v96 + 16);
      *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
      *(_OWORD *)(v95 + 16) = v100;
      *(void *)(v95 + 32) = *(void *)(v96 + 32);
    }
    uint64_t v101 = (_OWORD *)(v95 + 40);
    uint64_t v102 = (_OWORD *)(v96 + 40);
    uint64_t v103 = *(void **)(v96 + 64);
    if (v103)
    {
      *uint64_t v101 = *v102;
      *(_DWORD *)(v95 + 56) = *(_DWORD *)(v96 + 56);
      uint64_t v104 = *(void *)(v96 + 72);
      *(void *)(v95 + 64) = v103;
      *(void *)(v95 + 72) = v104;
      id v105 = v103;
      swift_retain();
    }
    else
    {
      long long v106 = *(_OWORD *)(v96 + 56);
      *uint64_t v101 = *v102;
      *(_OWORD *)(v95 + 56) = v106;
      *(void *)(v95 + 72) = *(void *)(v96 + 72);
    }
    *(unsigned char *)(v95 + 80) = *(unsigned char *)(v96 + 80);
    *(void *)(v29 + v34[21]) = *(void *)(v30 + v34[21]);
    uint64_t v107 = v34[22];
    uint64_t v108 = v29 + v107;
    uint64_t v109 = v30 + v107;
    long long v110 = *(void **)(v30 + v107 + 24);
    swift_bridgeObjectRetain();
    if (v110)
    {
      *(_DWORD *)(v108 + 16) = *(_DWORD *)(v109 + 16);
      uint64_t v111 = *(void *)(v109 + 32);
      uint64_t v112 = *(void *)(v109 + 48);
      uint64_t v113 = *(void *)(v109 + 56);
      *(void *)(v108 + 40) = *(void *)(v109 + 40);
      *(void *)(v108 + 48) = v112;
      *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
      *(void *)(v108 + 24) = v110;
      *(void *)(v108 + 32) = v111;
      *(void *)(v108 + 56) = v113;
      *(unsigned char *)(v108 + 64) = *(unsigned char *)(v109 + 64);
      id v114 = v110;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v115 = *(_OWORD *)(v109 + 48);
      *(_OWORD *)(v108 + 32) = *(_OWORD *)(v109 + 32);
      *(_OWORD *)(v108 + 48) = v115;
      *(unsigned char *)(v108 + 64) = *(unsigned char *)(v109 + 64);
      long long v116 = *(_OWORD *)(v109 + 16);
      *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
      *(_OWORD *)(v108 + 16) = v116;
    }
    uint64_t v117 = v34[23];
    uint64_t v118 = (void *)(v29 + v117);
    uint64_t v119 = (void *)(v30 + v117);
    uint64_t v120 = v119[1];
    *uint64_t v118 = *v119;
    v118[1] = v120;
    uint64_t v121 = v119[3];
    v118[2] = v119[2];
    v118[3] = v121;
    *(void *)(v29 + v34[24]) = *(void *)(v30 + v34[24]);
    *(unsigned char *)(v29 + v34[25]) = *(unsigned char *)(v30 + v34[25]);
    uint64_t v122 = *(int *)(v132 + 28);
    uint64_t v24 = v134;
    uint64_t v123 = v134 + v122;
    uint64_t v124 = (uint64_t)v133 + v122;
    long long v125 = *(_OWORD *)((char *)v133 + v122 + 24);
    *(_OWORD *)(v134 + v122 + 24) = v125;
    uint64_t v126 = v125;
    v127 = **(void (***)(uint64_t, uint64_t, uint64_t))(v125 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v127(v123, v124, v126);
  }
  return v24;
}

uint64_t destroy for GenerativePlayground.PreviewGenerationSession(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E69B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_260FE3110();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  uint64_t v10 = type metadata accessor for GenerationState();
  uint64_t v11 = v6 + *(int *)(v10 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7)) {
    v9(v11, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v6 + *(int *)(v10 + 28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v14 = v12 + v13[8];
  uint64_t v15 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
    v17(v14, v16);
    v17(v14 + *(int *)(v15 + 20), v16);
    uint64_t v18 = (uint64_t *)(v14 + *(int *)(v15 + 24));
    if (v18[2])
    {
      sub_260DCC110(*v18, v18[1]);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = (id *)(v12 + v13[12]);
  if (*v19)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void **)(v12 + v13[17] + 24);
  if (v20)
  {

    swift_release();
  }
  uint64_t v21 = *(void **)(v12 + v13[18] + 24);
  if (v21)
  {

    swift_release();
  }
  uint64_t v22 = *(void **)(v12 + v13[19] + 24);
  if (v22)
  {

    swift_release();
  }
  uint64_t v23 = v12 + v13[20];
  uint64_t v24 = *(void **)(v23 + 24);
  if (v24)
  {

    swift_release();
  }
  uint64_t v25 = *(void **)(v23 + 64);
  if (v25)
  {

    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void **)(v12 + v13[22] + 24);
  if (v26)
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + a2[7]);
}

uint64_t initializeWithCopy for GenerativePlayground.PreviewGenerationSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E69B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v129 = a3;
  uint64_t v130 = a2;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v131 = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_260FE3110();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v16(v12, v13, v14);
  uint64_t v17 = (int *)type metadata accessor for GenerationState();
  uint64_t v18 = v17[5];
  uint64_t v19 = (void *)(v12 + v18);
  uint64_t v20 = (const void *)(v13 + v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13 + v18, 1, v14))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v16((uint64_t)v19, (uint64_t)v20, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  uint64_t v22 = v17[6];
  uint64_t v23 = (void *)(v12 + v22);
  uint64_t v24 = (void *)(v13 + v22);
  uint64_t v126 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v126;
  uint64_t v25 = v17[7];
  uint64_t v26 = v12 + v25;
  uint64_t v27 = v13 + v25;
  *(unsigned char *)uint64_t v26 = *(unsigned char *)(v13 + v25);
  uint64_t v28 = *(void *)(v13 + v25 + 16);
  *(void *)(v26 + 8) = *(void *)(v13 + v25 + 8);
  *(void *)(v26 + 16) = v28;
  *(unsigned char *)(v26 + 40) = *(unsigned char *)(v13 + v25 + 40);
  *(_OWORD *)(v26 + 24) = *(_OWORD *)(v13 + v25 + 24);
  *(void *)(v26 + 48) = *(void *)(v13 + v25 + 48);
  *(_DWORD *)(v26 + 56) = *(_DWORD *)(v13 + v25 + 56);
  *(unsigned char *)(v26 + 60) = *(unsigned char *)(v13 + v25 + 60);
  *(unsigned char *)(v26 + 61) = *(unsigned char *)(v13 + v25 + 61);
  *(unsigned char *)(v26 + 62) = *(unsigned char *)(v13 + v25 + 62);
  uint64_t v30 = *(void *)(v13 + v25 + 64);
  uint64_t v29 = *(void *)(v13 + v25 + 72);
  *(unsigned char *)(v26 + 80) = *(unsigned char *)(v27 + 80);
  *(void *)(v26 + 64) = v30;
  *(void *)(v26 + 72) = v29;
  uint64_t v31 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v32 = v31[8];
  __dst = (char *)(v26 + v32);
  uint64_t v33 = (char *)(v27 + v32);
  uint64_t v34 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v35 = *((void *)v34 - 1);
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, int *))(v35 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36(v33, 1, v34))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(__dst, v33, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    uint64_t v127 = v35;
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
    v39(__dst, v33, v38);
    v39(&__dst[v34[5]], &v33[v34[5]], v38);
    uint64_t v40 = v34[6];
    uint64_t v41 = (uint64_t *)&__dst[v40];
    uint64_t v42 = (uint64_t *)&v33[v40];
    if (*(void *)&v33[v40 + 16])
    {
      uint64_t v43 = v33;
      uint64_t v44 = *v42;
      unint64_t v45 = v42[1];
      sub_260DCBD18(*v42, v45);
      *uint64_t v41 = v44;
      v41[1] = v45;
      uint64_t v33 = v43;
      v41[2] = v42[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      v41[2] = v42[2];
    }
    __dst[v34[7]] = v33[v34[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v127 + 56))(__dst, 0, 1, v34);
  }
  uint64_t v46 = v31[9];
  uint64_t v47 = v26 + v46;
  uint64_t v48 = v27 + v46;
  *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
  *(unsigned char *)(v47 + 4) = *(unsigned char *)(v48 + 4);
  uint64_t v49 = v31[10];
  uint64_t v50 = v26 + v49;
  uint64_t v51 = v27 + v49;
  *(unsigned char *)(v50 + 4) = *(unsigned char *)(v51 + 4);
  *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
  uint64_t v52 = v31[11];
  uint64_t v53 = v26 + v52;
  uint64_t v54 = v27 + v52;
  *(_WORD *)uint64_t v53 = *(_WORD *)v54;
  *(unsigned char *)(v53 + 2) = *(unsigned char *)(v54 + 2);
  uint64_t v55 = *(void *)(v54 + 16);
  *(void *)(v53 + 8) = *(void *)(v54 + 8);
  *(void *)(v53 + 16) = v55;
  uint64_t v56 = v31[12];
  uint64_t v57 = (void *)(v26 + v56);
  uint64_t v58 = v27 + v56;
  uint64_t v59 = *(void **)(v27 + v56);
  swift_bridgeObjectRetain();
  if (v59)
  {
    uint64_t v60 = *(void *)(v58 + 8);
    uint64_t v61 = *(void *)(v58 + 16);
    void *v57 = v59;
    v57[1] = v60;
    v57[2] = v61;
    id v62 = v59;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    v57[2] = *(void *)(v58 + 16);
  }
  uint64_t v63 = v31[13];
  uint64_t v64 = v26 + v63;
  uint64_t v65 = v27 + v63;
  long long v66 = *(_OWORD *)(v65 + 16);
  *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
  *(_OWORD *)(v64 + 16) = v66;
  *(unsigned char *)(v64 + 32) = *(unsigned char *)(v65 + 32);
  uint64_t v67 = v31[14];
  uint64_t v68 = v26 + v67;
  uint64_t v69 = v27 + v67;
  *(unsigned char *)(v68 + 8) = *(unsigned char *)(v69 + 8);
  *(void *)uint64_t v68 = *(void *)v69;
  *(void *)(v26 + v31[15]) = *(void *)(v27 + v31[15]);
  *(void *)(v26 + v31[16]) = *(void *)(v27 + v31[16]);
  uint64_t v70 = v31[17];
  uint64_t v71 = v26 + v70;
  uint64_t v72 = v27 + v70;
  uint64_t v73 = *(void **)(v27 + v70 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v73)
  {
    *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
    *(_DWORD *)(v71 + 16) = *(_DWORD *)(v72 + 16);
    uint64_t v74 = *(void *)(v72 + 32);
    *(void *)(v71 + 24) = v73;
    *(void *)(v71 + 32) = v74;
    id v75 = v73;
    swift_retain();
  }
  else
  {
    long long v76 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v76;
    *(void *)(v71 + 32) = *(void *)(v72 + 32);
  }
  uint64_t v77 = v31[18];
  uint64_t v78 = v26 + v77;
  uint64_t v79 = v27 + v77;
  uint64_t v80 = *(void **)(v79 + 24);
  if (v80)
  {
    *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
    *(_DWORD *)(v78 + 16) = *(_DWORD *)(v79 + 16);
    uint64_t v81 = *(void *)(v79 + 32);
    *(void *)(v78 + 24) = v80;
    *(void *)(v78 + 32) = v81;
    id v82 = v80;
    swift_retain();
  }
  else
  {
    long long v83 = *(_OWORD *)(v79 + 16);
    *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
    *(_OWORD *)(v78 + 16) = v83;
    *(void *)(v78 + 32) = *(void *)(v79 + 32);
  }
  uint64_t v84 = v31[19];
  uint64_t v85 = v26 + v84;
  uint64_t v86 = v27 + v84;
  uint64_t v87 = *(void **)(v86 + 24);
  if (v87)
  {
    *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
    *(_DWORD *)(v85 + 16) = *(_DWORD *)(v86 + 16);
    uint64_t v88 = *(void *)(v86 + 32);
    *(void *)(v85 + 24) = v87;
    *(void *)(v85 + 32) = v88;
    id v89 = v87;
    swift_retain();
  }
  else
  {
    long long v90 = *(_OWORD *)(v86 + 16);
    *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
    *(_OWORD *)(v85 + 16) = v90;
    *(void *)(v85 + 32) = *(void *)(v86 + 32);
  }
  uint64_t v91 = v31[20];
  uint64_t v92 = v26 + v91;
  uint64_t v93 = v27 + v91;
  uint64_t v94 = *(void **)(v27 + v91 + 24);
  if (v94)
  {
    *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
    *(_DWORD *)(v92 + 16) = *(_DWORD *)(v93 + 16);
    uint64_t v95 = *(void *)(v93 + 32);
    *(void *)(v92 + 24) = v94;
    *(void *)(v92 + 32) = v95;
    id v96 = v94;
    swift_retain();
  }
  else
  {
    long long v97 = *(_OWORD *)(v93 + 16);
    *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
    *(_OWORD *)(v92 + 16) = v97;
    *(void *)(v92 + 32) = *(void *)(v93 + 32);
  }
  uint64_t v98 = (_OWORD *)(v92 + 40);
  id v99 = (_OWORD *)(v93 + 40);
  long long v100 = *(void **)(v93 + 64);
  if (v100)
  {
    *uint64_t v98 = *v99;
    *(_DWORD *)(v92 + 56) = *(_DWORD *)(v93 + 56);
    uint64_t v101 = *(void *)(v93 + 72);
    *(void *)(v92 + 64) = v100;
    *(void *)(v92 + 72) = v101;
    id v102 = v100;
    swift_retain();
  }
  else
  {
    long long v103 = *(_OWORD *)(v93 + 56);
    *uint64_t v98 = *v99;
    *(_OWORD *)(v92 + 56) = v103;
    *(void *)(v92 + 72) = *(void *)(v93 + 72);
  }
  *(unsigned char *)(v92 + 80) = *(unsigned char *)(v93 + 80);
  *(void *)(v26 + v31[21]) = *(void *)(v27 + v31[21]);
  uint64_t v104 = v31[22];
  uint64_t v105 = v26 + v104;
  uint64_t v106 = v27 + v104;
  uint64_t v107 = *(void **)(v27 + v104 + 24);
  swift_bridgeObjectRetain();
  if (v107)
  {
    *(_DWORD *)(v105 + 16) = *(_DWORD *)(v106 + 16);
    uint64_t v108 = *(void *)(v106 + 32);
    uint64_t v109 = *(void *)(v106 + 48);
    uint64_t v110 = *(void *)(v106 + 56);
    *(void *)(v105 + 40) = *(void *)(v106 + 40);
    *(void *)(v105 + 48) = v109;
    *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
    *(void *)(v105 + 24) = v107;
    *(void *)(v105 + 32) = v108;
    *(void *)(v105 + 56) = v110;
    *(unsigned char *)(v105 + 64) = *(unsigned char *)(v106 + 64);
    id v111 = v107;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v112 = *(_OWORD *)(v106 + 48);
    *(_OWORD *)(v105 + 32) = *(_OWORD *)(v106 + 32);
    *(_OWORD *)(v105 + 48) = v112;
    *(unsigned char *)(v105 + 64) = *(unsigned char *)(v106 + 64);
    long long v113 = *(_OWORD *)(v106 + 16);
    *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
    *(_OWORD *)(v105 + 16) = v113;
  }
  uint64_t v114 = v31[23];
  long long v115 = (void *)(v26 + v114);
  long long v116 = (void *)(v27 + v114);
  uint64_t v117 = v116[1];
  *long long v115 = *v116;
  v115[1] = v117;
  uint64_t v118 = v116[3];
  v115[2] = v116[2];
  v115[3] = v118;
  *(void *)(v26 + v31[24]) = *(void *)(v27 + v31[24]);
  *(unsigned char *)(v26 + v31[25]) = *(unsigned char *)(v27 + v31[25]);
  uint64_t v119 = *(int *)(v129 + 28);
  uint64_t v120 = v131 + v119;
  uint64_t v121 = v130 + v119;
  long long v122 = *(_OWORD *)(v130 + v119 + 24);
  *(_OWORD *)(v131 + v119 + 24) = v122;
  uint64_t v123 = v122;
  uint64_t v124 = **(void (***)(uint64_t, uint64_t, uint64_t))(v122 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v124(v120, v121, v123);
  return v131;
}

uint64_t assignWithCopy for GenerativePlayground.PreviewGenerationSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E69B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v179 = a3;
  uint64_t v180 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v181 = a1;
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_260FE3110();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  v176 = (int *)type metadata accessor for GenerationState();
  uint64_t v177 = v11;
  uint64_t v16 = v176[5];
  uint64_t v17 = (void *)(v11 + v16);
  uint64_t v18 = (void *)(v12 + v16);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v20 = v19(v17, 1, v13);
  int v21 = v19(v18, 1, v13);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v17, v18, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v15((uint64_t)v17, (uint64_t)v18, v13);
LABEL_7:
  uint64_t v23 = v176[6];
  uint64_t v24 = (void *)(v177 + v23);
  uint64_t v25 = (void *)(v12 + v23);
  void *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = v176[7];
  uint64_t v27 = v177 + v26;
  uint64_t v28 = v12 + v26;
  *(unsigned char *)uint64_t v27 = *(unsigned char *)(v12 + v26);
  *(void *)(v27 + 8) = *(void *)(v12 + v26 + 8);
  *(void *)(v27 + 16) = *(void *)(v12 + v26 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v29 = *(_OWORD *)(v28 + 24);
  *(unsigned char *)(v27 + 40) = *(unsigned char *)(v28 + 40);
  *(_OWORD *)(v27 + 24) = v29;
  *(void *)(v27 + 48) = *(void *)(v28 + 48);
  *(unsigned char *)(v27 + 56) = *(unsigned char *)(v28 + 56);
  *(unsigned char *)(v27 + 57) = *(unsigned char *)(v28 + 57);
  *(unsigned char *)(v27 + 58) = *(unsigned char *)(v28 + 58);
  *(unsigned char *)(v27 + 59) = *(unsigned char *)(v28 + 59);
  *(unsigned char *)(v27 + 60) = *(unsigned char *)(v28 + 60);
  *(unsigned char *)(v27 + 61) = *(unsigned char *)(v28 + 61);
  *(unsigned char *)(v27 + 62) = *(unsigned char *)(v28 + 62);
  *(void *)(v27 + 64) = *(void *)(v28 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v28 + 72);
  *(unsigned char *)(v27 + 80) = *(unsigned char *)(v28 + 80);
  *(void *)(v27 + 72) = v30;
  uint64_t v31 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v32 = v31[8];
  uint64_t v33 = (unsigned char *)(v27 + v32);
  uint64_t v34 = (unsigned char *)(v28 + v32);
  uint64_t v35 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v36 = *((void *)v35 - 1);
  uint64_t v37 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v36 + 48);
  int v38 = v37(v33, 1, v35);
  int v39 = v37(v34, 1, v35);
  if (v38)
  {
    if (!v39)
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v41 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v40 - 8) + 16);
      v41(v33, v34, v40);
      v41(&v33[v35[5]], &v34[v35[5]], v40);
      uint64_t v42 = v35[6];
      uint64_t v43 = (uint64_t *)&v33[v42];
      uint64_t v44 = (uint64_t *)&v34[v42];
      if (*(void *)&v34[v42 + 16])
      {
        unint64_t v45 = v44[1];
        uint64_t v178 = *v44;
        sub_260DCBD18(*v44, v45);
        *uint64_t v43 = v178;
        v43[1] = v45;
        v43[2] = v44[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v58 = *(_OWORD *)v44;
        v43[2] = v44[2];
        *(_OWORD *)uint64_t v43 = v58;
      }
      v33[v35[7]] = v34[v35[7]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v36 + 56))(v33, 0, 1, v35);
      goto LABEL_25;
    }
LABEL_13:
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v33, v34, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_25;
  }
  if (v39)
  {
    sub_260DC6C10((uint64_t)v33, type metadata accessor for PipelineConfiguration.InputConditioning);
    goto LABEL_13;
  }
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v48 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 24);
  v48(v33, v34, v47);
  v48(&v33[v35[5]], &v34[v35[5]], v47);
  uint64_t v49 = v35[6];
  uint64_t v50 = (uint64_t *)&v33[v49];
  uint64_t v51 = (uint64_t *)&v34[v49];
  uint64_t v52 = *(void *)&v33[v49 + 16];
  uint64_t v53 = *(void *)&v34[v49 + 16];
  if (v52)
  {
    if (v53)
    {
      uint64_t v55 = *v51;
      unint64_t v54 = v51[1];
      sub_260DCBD18(*v51, v54);
      uint64_t v56 = *v50;
      unint64_t v57 = v50[1];
      uint64_t *v50 = v55;
      v50[1] = v54;
      sub_260DCC110(v56, v57);
      v50[2] = v51[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260DCFC50((uint64_t)v50);
      uint64_t v61 = v51[2];
      *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
      v50[2] = v61;
    }
  }
  else if (v53)
  {
    uint64_t v60 = *v51;
    unint64_t v59 = v51[1];
    sub_260DCBD18(*v51, v59);
    uint64_t *v50 = v60;
    v50[1] = v59;
    v50[2] = v51[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v62 = *(_OWORD *)v51;
    v50[2] = v51[2];
    *(_OWORD *)uint64_t v50 = v62;
  }
  v33[v35[7]] = v34[v35[7]];
LABEL_25:
  uint64_t v63 = v31[9];
  uint64_t v64 = v27 + v63;
  uint64_t v65 = (int *)(v28 + v63);
  int v66 = *v65;
  *(unsigned char *)(v64 + 4) = *((unsigned char *)v65 + 4);
  *(_DWORD *)uint64_t v64 = v66;
  uint64_t v67 = v31[10];
  uint64_t v68 = v27 + v67;
  uint64_t v69 = (int *)(v28 + v67);
  int v70 = *v69;
  *(unsigned char *)(v68 + 4) = *((unsigned char *)v69 + 4);
  *(_DWORD *)uint64_t v68 = v70;
  uint64_t v71 = v31[11];
  uint64_t v72 = v27 + v71;
  uint64_t v73 = v28 + v71;
  *(unsigned char *)uint64_t v72 = *(unsigned char *)v73;
  *(unsigned char *)(v72 + 1) = *(unsigned char *)(v73 + 1);
  *(unsigned char *)(v72 + 2) = *(unsigned char *)(v73 + 2);
  *(void *)(v72 + 8) = *(void *)(v73 + 8);
  *(void *)(v72 + 16) = *(void *)(v73 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v74 = v31[12];
  id v75 = (void *)(v27 + v74);
  long long v76 = (long long *)(v28 + v74);
  uint64_t v77 = *(void **)(v27 + v74);
  uint64_t v78 = *(void **)(v28 + v74);
  if (v77)
  {
    if (v78)
    {
      *id v75 = v78;
      id v79 = v78;

      v75[1] = *((void *)v76 + 1);
      v75[2] = *((void *)v76 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260DCFCA4((uint64_t)v75);
      uint64_t v81 = *((void *)v76 + 2);
      *(_OWORD *)id v75 = *v76;
      v75[2] = v81;
    }
  }
  else if (v78)
  {
    *id v75 = v78;
    v75[1] = *((void *)v76 + 1);
    v75[2] = *((void *)v76 + 2);
    id v80 = v78;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v82 = *v76;
    v75[2] = *((void *)v76 + 2);
    *(_OWORD *)id v75 = v82;
  }
  uint64_t v83 = v31[13];
  uint64_t v84 = v27 + v83;
  uint64_t v85 = (long long *)(v28 + v83);
  long long v86 = *v85;
  long long v87 = v85[1];
  *(unsigned char *)(v84 + 32) = *((unsigned char *)v85 + 32);
  *(_OWORD *)uint64_t v84 = v86;
  *(_OWORD *)(v84 + 16) = v87;
  uint64_t v88 = v31[14];
  uint64_t v89 = v27 + v88;
  long long v90 = (uint64_t *)(v28 + v88);
  uint64_t v91 = *v90;
  *(unsigned char *)(v89 + 8) = *((unsigned char *)v90 + 8);
  *(void *)uint64_t v89 = v91;
  *(void *)(v27 + v31[15]) = *(void *)(v28 + v31[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v27 + v31[16]) = *(void *)(v28 + v31[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v92 = v31[17];
  uint64_t v93 = v27 + v92;
  uint64_t v94 = (long long *)(v28 + v92);
  uint64_t v95 = *(void **)(v27 + v92 + 24);
  uint64_t v96 = *(void *)(v28 + v92 + 24);
  if (v95)
  {
    if (v96)
    {
      *(void *)uint64_t v93 = *(void *)v94;
      *(void *)(v93 + 8) = *((void *)v94 + 1);
      *(_DWORD *)(v93 + 16) = *((_DWORD *)v94 + 4);
      long long v97 = (void *)*((void *)v94 + 3);
      *(void *)(v93 + 24) = v97;
      id v98 = v97;

      *(void *)(v93 + 32) = *((void *)v94 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_260DCFCF8(v93);
      uint64_t v102 = *((void *)v94 + 4);
      long long v103 = v94[1];
      *(_OWORD *)uint64_t v93 = *v94;
      *(_OWORD *)(v93 + 16) = v103;
      *(void *)(v93 + 32) = v102;
    }
  }
  else
  {
    long long v99 = *v94;
    if (v96)
    {
      *(_DWORD *)(v93 + 16) = *((_DWORD *)v94 + 4);
      *(_OWORD *)uint64_t v93 = v99;
      long long v100 = (void *)*((void *)v94 + 3);
      *(void *)(v93 + 24) = v100;
      *(void *)(v93 + 32) = *((void *)v94 + 4);
      id v101 = v100;
      swift_retain();
    }
    else
    {
      long long v104 = v94[1];
      *(void *)(v93 + 32) = *((void *)v94 + 4);
      *(_OWORD *)uint64_t v93 = v99;
      *(_OWORD *)(v93 + 16) = v104;
    }
  }
  uint64_t v105 = v31[18];
  uint64_t v106 = v27 + v105;
  uint64_t v107 = (long long *)(v28 + v105);
  uint64_t v108 = *(void **)(v27 + v105 + 24);
  uint64_t v109 = *(void *)(v28 + v105 + 24);
  if (v108)
  {
    if (v109)
    {
      *(void *)uint64_t v106 = *(void *)v107;
      *(void *)(v106 + 8) = *((void *)v107 + 1);
      *(_DWORD *)(v106 + 16) = *((_DWORD *)v107 + 4);
      uint64_t v110 = (void *)*((void *)v107 + 3);
      *(void *)(v106 + 24) = v110;
      id v111 = v110;

      *(void *)(v106 + 32) = *((void *)v107 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_260DCFCF8(v106);
      uint64_t v115 = *((void *)v107 + 4);
      long long v116 = v107[1];
      *(_OWORD *)uint64_t v106 = *v107;
      *(_OWORD *)(v106 + 16) = v116;
      *(void *)(v106 + 32) = v115;
    }
  }
  else
  {
    long long v112 = *v107;
    if (v109)
    {
      *(_DWORD *)(v106 + 16) = *((_DWORD *)v107 + 4);
      *(_OWORD *)uint64_t v106 = v112;
      long long v113 = (void *)*((void *)v107 + 3);
      *(void *)(v106 + 24) = v113;
      *(void *)(v106 + 32) = *((void *)v107 + 4);
      id v114 = v113;
      swift_retain();
    }
    else
    {
      long long v117 = v107[1];
      *(void *)(v106 + 32) = *((void *)v107 + 4);
      *(_OWORD *)uint64_t v106 = v112;
      *(_OWORD *)(v106 + 16) = v117;
    }
  }
  uint64_t v118 = v31[19];
  uint64_t v119 = v27 + v118;
  uint64_t v120 = (long long *)(v28 + v118);
  uint64_t v121 = *(void **)(v27 + v118 + 24);
  uint64_t v122 = *(void *)(v28 + v118 + 24);
  if (v121)
  {
    if (v122)
    {
      *(void *)uint64_t v119 = *(void *)v120;
      *(void *)(v119 + 8) = *((void *)v120 + 1);
      *(_DWORD *)(v119 + 16) = *((_DWORD *)v120 + 4);
      uint64_t v123 = (void *)*((void *)v120 + 3);
      *(void *)(v119 + 24) = v123;
      id v124 = v123;

      *(void *)(v119 + 32) = *((void *)v120 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_260DCFCF8(v119);
      uint64_t v128 = *((void *)v120 + 4);
      long long v129 = v120[1];
      *(_OWORD *)uint64_t v119 = *v120;
      *(_OWORD *)(v119 + 16) = v129;
      *(void *)(v119 + 32) = v128;
    }
  }
  else
  {
    long long v125 = *v120;
    if (v122)
    {
      *(_DWORD *)(v119 + 16) = *((_DWORD *)v120 + 4);
      *(_OWORD *)uint64_t v119 = v125;
      uint64_t v126 = (void *)*((void *)v120 + 3);
      *(void *)(v119 + 24) = v126;
      *(void *)(v119 + 32) = *((void *)v120 + 4);
      id v127 = v126;
      swift_retain();
    }
    else
    {
      long long v130 = v120[1];
      *(void *)(v119 + 32) = *((void *)v120 + 4);
      *(_OWORD *)uint64_t v119 = v125;
      *(_OWORD *)(v119 + 16) = v130;
    }
  }
  uint64_t v131 = v31[20];
  uint64_t v132 = v27 + v131;
  v133 = (long long *)(v28 + v131);
  uint64_t v134 = *(void **)(v27 + v131 + 24);
  uint64_t v135 = *(void *)(v28 + v131 + 24);
  if (v134)
  {
    if (v135)
    {
      *(void *)uint64_t v132 = *(void *)v133;
      *(void *)(v132 + 8) = *((void *)v133 + 1);
      *(_DWORD *)(v132 + 16) = *((_DWORD *)v133 + 4);
      v136 = (void *)*((void *)v133 + 3);
      *(void *)(v132 + 24) = v136;
      id v137 = v136;

      *(void *)(v132 + 32) = *((void *)v133 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_260DCFCF8(v132);
      uint64_t v141 = *((void *)v133 + 4);
      long long v142 = v133[1];
      *(_OWORD *)uint64_t v132 = *v133;
      *(_OWORD *)(v132 + 16) = v142;
      *(void *)(v132 + 32) = v141;
    }
  }
  else
  {
    long long v138 = *v133;
    if (v135)
    {
      *(_DWORD *)(v132 + 16) = *((_DWORD *)v133 + 4);
      *(_OWORD *)uint64_t v132 = v138;
      v139 = (void *)*((void *)v133 + 3);
      *(void *)(v132 + 24) = v139;
      *(void *)(v132 + 32) = *((void *)v133 + 4);
      id v140 = v139;
      swift_retain();
    }
    else
    {
      long long v143 = v133[1];
      *(void *)(v132 + 32) = *((void *)v133 + 4);
      *(_OWORD *)uint64_t v132 = v138;
      *(_OWORD *)(v132 + 16) = v143;
    }
  }
  v144 = (_OWORD *)(v132 + 40);
  v145 = (long long *)((char *)v133 + 40);
  v146 = *(void **)(v132 + 64);
  uint64_t v147 = *((void *)v133 + 8);
  if (v146)
  {
    if (v147)
    {
      *(void *)(v132 + 40) = *((void *)v133 + 5);
      *(void *)(v132 + 48) = *((void *)v133 + 6);
      *(_DWORD *)(v132 + 56) = *((_DWORD *)v133 + 14);
      v148 = (void *)*((void *)v133 + 8);
      *(void *)(v132 + 64) = v148;
      id v149 = v148;

      *(void *)(v132 + 72) = *((void *)v133 + 9);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_260DCFCF8(v132 + 40);
      uint64_t v153 = *((void *)v133 + 9);
      long long v154 = *(long long *)((char *)v133 + 56);
      _OWORD *v144 = *v145;
      *(_OWORD *)(v132 + 56) = v154;
      *(void *)(v132 + 72) = v153;
    }
  }
  else
  {
    long long v150 = *v145;
    if (v147)
    {
      *(_DWORD *)(v132 + 56) = *((_DWORD *)v133 + 14);
      _OWORD *v144 = v150;
      v151 = (void *)*((void *)v133 + 8);
      *(void *)(v132 + 64) = v151;
      *(void *)(v132 + 72) = *((void *)v133 + 9);
      id v152 = v151;
      swift_retain();
    }
    else
    {
      long long v155 = *(long long *)((char *)v133 + 56);
      *(void *)(v132 + 72) = *((void *)v133 + 9);
      _OWORD *v144 = v150;
      *(_OWORD *)(v132 + 56) = v155;
    }
  }
  *(unsigned char *)(v132 + 80) = *((unsigned char *)v133 + 80);
  *(void *)(v27 + v31[21]) = *(void *)(v28 + v31[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v156 = v31[22];
  uint64_t v157 = v27 + v156;
  v158 = (long long *)(v28 + v156);
  v159 = *(void **)(v27 + v156 + 24);
  uint64_t v160 = *(void *)(v28 + v156 + 24);
  if (v159)
  {
    if (v160)
    {
      *(void *)uint64_t v157 = *(void *)v158;
      *(void *)(v157 + 8) = *((void *)v158 + 1);
      *(_DWORD *)(v157 + 16) = *((_DWORD *)v158 + 4);
      v161 = (void *)*((void *)v158 + 3);
      *(void *)(v157 + 24) = v161;
      id v162 = v161;

      *(void *)(v157 + 32) = *((void *)v158 + 4);
      swift_retain();
      swift_release();
      *(void *)(v157 + 40) = *((void *)v158 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v157 + 48) = *((void *)v158 + 6);
      *(void *)(v157 + 56) = *((void *)v158 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v157 + 64) = *((unsigned char *)v158 + 64);
    }
    else
    {
      sub_260DCFD4C(v157);
      *(_OWORD *)uint64_t v157 = *v158;
      long long v167 = v158[2];
      long long v166 = v158[3];
      long long v168 = v158[1];
      *(unsigned char *)(v157 + 64) = *((unsigned char *)v158 + 64);
      *(_OWORD *)(v157 + 32) = v167;
      *(_OWORD *)(v157 + 48) = v166;
      *(_OWORD *)(v157 + 16) = v168;
    }
  }
  else if (v160)
  {
    long long v163 = *v158;
    *(_DWORD *)(v157 + 16) = *((_DWORD *)v158 + 4);
    *(_OWORD *)uint64_t v157 = v163;
    v164 = (void *)*((void *)v158 + 3);
    *(void *)(v157 + 24) = v164;
    *(void *)(v157 + 32) = *((void *)v158 + 4);
    *(void *)(v157 + 40) = *((void *)v158 + 5);
    *(void *)(v157 + 48) = *((void *)v158 + 6);
    *(void *)(v157 + 56) = *((void *)v158 + 7);
    *(unsigned char *)(v157 + 64) = *((unsigned char *)v158 + 64);
    id v165 = v164;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v157 = *v158;
    long long v169 = v158[1];
    long long v170 = v158[2];
    long long v171 = v158[3];
    *(unsigned char *)(v157 + 64) = *((unsigned char *)v158 + 64);
    *(_OWORD *)(v157 + 32) = v170;
    *(_OWORD *)(v157 + 48) = v171;
    *(_OWORD *)(v157 + 16) = v169;
  }
  uint64_t v172 = v31[23];
  v173 = (void *)(v27 + v172);
  uint64_t v174 = v28 + v172;
  void *v173 = *(void *)(v28 + v172);
  v173[1] = *(void *)(v28 + v172 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v173[2] = *(void *)(v174 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v173[3] = *(void *)(v174 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v27 + v31[24]) = *(void *)(v28 + v31[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v27 + v31[25]) = *(unsigned char *)(v28 + v31[25]);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v181 + *(int *)(v179 + 28)), (uint64_t *)(v180 + *(int *)(v179 + 28)));
  return v181;
}

uint64_t sub_260DCFC50(uint64_t a1)
{
  return a1;
}

uint64_t sub_260DCFCA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_260DCFCF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_260DCFD4C(uint64_t a1)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

_OWORD *initializeWithTake for GenerativePlayground.PreviewGenerationSession(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 12) = *(_OWORD *)((char *)a2 + 12);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E69B8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v88 = a3;
  uint64_t v89 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_260FE3110();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v15(v11, v12, v13);
  uint64_t v16 = (int *)type metadata accessor for GenerationState();
  uint64_t v17 = v16[5];
  uint64_t v18 = &v11[v17];
  uint64_t v19 = &v12[v17];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(&v12[v17], 1, v13))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    v15(v18, v19, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  *(_OWORD *)&v11[v16[6]] = *(_OWORD *)&v12[v16[6]];
  uint64_t v21 = v16[7];
  uint64_t v22 = &v11[v21];
  uint64_t v23 = &v12[v21];
  char *v22 = v12[v21];
  *(void *)(v22 + 55) = *(void *)&v12[v21 + 55];
  *(_OWORD *)(v22 + 40) = *(_OWORD *)&v12[v21 + 40];
  *(_OWORD *)(v22 + 24) = *(_OWORD *)&v12[v21 + 24];
  *(_OWORD *)(v22 + 8) = *(_OWORD *)&v12[v21 + 8];
  v22[80] = v12[v21 + 80];
  uint64_t v24 = *(void *)&v12[v21 + 72];
  *((void *)v22 + 8) = *(void *)&v12[v21 + 64];
  *((void *)v22 + 9) = v24;
  uint64_t v25 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v26 = v25[8];
  uint64_t v27 = &v22[v26];
  uint64_t v28 = &v23[v26];
  long long v29 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v30 = *((void *)v29 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32);
    v33(v27, v28, v32);
    v33(&v27[v29[5]], &v28[v29[5]], v32);
    uint64_t v34 = v29[6];
    uint64_t v35 = &v27[v34];
    uint64_t v36 = &v28[v34];
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *((void *)v35 + 2) = *((void *)v36 + 2);
    v27[v29[7]] = v28[v29[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v30 + 56))(v27, 0, 1, v29);
  }
  uint64_t v37 = v25[9];
  int v38 = &v22[v37];
  int v39 = &v23[v37];
  *(_DWORD *)int v38 = *(_DWORD *)v39;
  v38[4] = v39[4];
  uint64_t v40 = v25[10];
  uint64_t v41 = &v22[v40];
  uint64_t v42 = &v23[v40];
  v41[4] = v42[4];
  *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
  uint64_t v43 = v25[11];
  uint64_t v44 = &v22[v43];
  unint64_t v45 = &v23[v43];
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *((void *)v44 + 2) = *((void *)v45 + 2);
  uint64_t v46 = v25[12];
  uint64_t v47 = &v22[v46];
  uint64_t v48 = &v23[v46];
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *((void *)v47 + 2) = *((void *)v48 + 2);
  uint64_t v49 = v25[13];
  uint64_t v50 = &v22[v49];
  uint64_t v51 = &v23[v49];
  long long v52 = *((_OWORD *)v51 + 1);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *((_OWORD *)v50 + 1) = v52;
  v50[32] = v51[32];
  uint64_t v53 = v25[14];
  unint64_t v54 = &v22[v53];
  uint64_t v55 = &v23[v53];
  *(void *)unint64_t v54 = *(void *)v55;
  v54[8] = v55[8];
  *(void *)&v22[v25[15]] = *(void *)&v23[v25[15]];
  *(void *)&v22[v25[16]] = *(void *)&v23[v25[16]];
  uint64_t v56 = v25[17];
  unint64_t v57 = &v22[v56];
  long long v58 = &v23[v56];
  long long v59 = *((_OWORD *)v58 + 1);
  *(_OWORD *)unint64_t v57 = *(_OWORD *)v58;
  *((_OWORD *)v57 + 1) = v59;
  *((void *)v57 + 4) = *((void *)v58 + 4);
  uint64_t v60 = v25[18];
  uint64_t v61 = &v22[v60];
  long long v62 = &v23[v60];
  long long v63 = *((_OWORD *)v62 + 1);
  *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
  *((_OWORD *)v61 + 1) = v63;
  *((void *)v61 + 4) = *((void *)v62 + 4);
  uint64_t v64 = v25[19];
  uint64_t v65 = &v22[v64];
  int v66 = &v23[v64];
  *((void *)v65 + 4) = *((void *)v66 + 4);
  long long v67 = *((_OWORD *)v66 + 1);
  *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
  *((_OWORD *)v65 + 1) = v67;
  uint64_t v68 = v25[20];
  uint64_t v69 = &v22[v68];
  int v70 = &v23[v68];
  long long v71 = *((_OWORD *)v70 + 1);
  *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
  *((_OWORD *)v69 + 1) = v71;
  v69[80] = v70[80];
  long long v72 = *((_OWORD *)v70 + 4);
  long long v73 = *((_OWORD *)v70 + 2);
  *((_OWORD *)v69 + 3) = *((_OWORD *)v70 + 3);
  *((_OWORD *)v69 + 4) = v72;
  *((_OWORD *)v69 + 2) = v73;
  *(void *)&v22[v25[21]] = *(void *)&v23[v25[21]];
  uint64_t v74 = v25[22];
  id v75 = &v22[v74];
  long long v76 = &v23[v74];
  long long v77 = *((_OWORD *)v76 + 3);
  *((_OWORD *)v75 + 2) = *((_OWORD *)v76 + 2);
  *((_OWORD *)v75 + 3) = v77;
  v75[64] = v76[64];
  long long v78 = *((_OWORD *)v76 + 1);
  *(_OWORD *)id v75 = *(_OWORD *)v76;
  *((_OWORD *)v75 + 1) = v78;
  uint64_t v79 = v25[23];
  id v80 = &v22[v79];
  uint64_t v81 = &v23[v79];
  long long v82 = *((_OWORD *)v81 + 1);
  *(_OWORD *)id v80 = *(_OWORD *)v81;
  *((_OWORD *)v80 + 1) = v82;
  *(void *)&v22[v25[24]] = *(void *)&v23[v25[24]];
  v22[v25[25]] = v23[v25[25]];
  uint64_t v83 = *(int *)(v88 + 28);
  uint64_t v84 = (char *)a1 + v83;
  uint64_t v85 = (char *)v89 + v83;
  long long v86 = *((_OWORD *)v85 + 1);
  *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
  *((_OWORD *)v84 + 1) = v86;
  *((void *)v84 + 4) = *((void *)v85 + 4);
  return a1;
}

uint64_t assignWithTake for GenerativePlayground.PreviewGenerationSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E69B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v126 = a3;
  uint64_t v127 = a2;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v123 = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_260FE3110();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40);
  v16(v12, v13, v14);
  uint64_t v124 = v12;
  long long v125 = (int *)type metadata accessor for GenerationState();
  uint64_t v17 = v125[5];
  uint64_t v18 = (void *)(v12 + v17);
  uint64_t v19 = (void *)(v13 + v17);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v21 = v20(v18, 1, v14);
  int v22 = v20(v19, 1, v14);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v18, v19, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v18, v14);
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  v16((uint64_t)v18, (uint64_t)v19, v14);
LABEL_7:
  uint64_t v24 = v125[6];
  uint64_t v25 = (void *)(v124 + v24);
  uint64_t v26 = (uint64_t *)(v13 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v125[7];
  uint64_t v30 = v124 + v29;
  uint64_t v31 = v13 + v29;
  *(unsigned char *)uint64_t v30 = *(unsigned char *)(v13 + v29);
  uint64_t v32 = *(void *)(v13 + v29 + 16);
  *(void *)(v30 + 8) = *(void *)(v13 + v29 + 8);
  *(void *)(v30 + 16) = v32;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
  *(unsigned char *)(v30 + 40) = *(unsigned char *)(v31 + 40);
  *(void *)(v30 + 48) = *(void *)(v31 + 48);
  *(unsigned char *)(v30 + 56) = *(unsigned char *)(v31 + 56);
  *(unsigned char *)(v30 + 57) = *(unsigned char *)(v31 + 57);
  *(unsigned char *)(v30 + 58) = *(unsigned char *)(v31 + 58);
  *(unsigned char *)(v30 + 59) = *(unsigned char *)(v31 + 59);
  *(unsigned char *)(v30 + 60) = *(unsigned char *)(v31 + 60);
  *(unsigned char *)(v30 + 61) = *(unsigned char *)(v31 + 61);
  *(unsigned char *)(v30 + 62) = *(unsigned char *)(v31 + 62);
  *(void *)(v30 + 64) = *(void *)(v31 + 64);
  swift_bridgeObjectRelease();
  *(void *)(v30 + 72) = *(void *)(v31 + 72);
  *(unsigned char *)(v30 + 80) = *(unsigned char *)(v31 + 80);
  uint64_t v33 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v34 = v33[8];
  uint64_t v35 = (unsigned char *)(v30 + v34);
  uint64_t v36 = (unsigned char *)(v31 + v34);
  uint64_t v37 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v38 = *((void *)v37 - 1);
  int v39 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v38 + 48);
  int v40 = v39(v35, 1, v37);
  int v41 = v39(v36, 1, v37);
  if (v40)
  {
    if (!v41)
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v43 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32);
      v43(v35, v36, v42);
      v43(&v35[v37[5]], &v36[v37[5]], v42);
      uint64_t v44 = v37[6];
      unint64_t v45 = &v35[v44];
      uint64_t v46 = &v36[v44];
      *(_OWORD *)unint64_t v45 = *(_OWORD *)v46;
      *((void *)v45 + 2) = *((void *)v46 + 2);
      v35[v37[7]] = v36[v37[7]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
LABEL_13:
      uint64_t v48 = v123;
      goto LABEL_14;
    }
LABEL_12:
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v35, v36, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_13;
  }
  if (v41)
  {
    sub_260DC6C10((uint64_t)v35, type metadata accessor for PipelineConfiguration.InputConditioning);
    goto LABEL_12;
  }
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  long long v117 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v116 - 8) + 40);
  v117(v35, v36, v116);
  v117(&v35[v37[5]], &v36[v37[5]], v116);
  uint64_t v118 = v37[6];
  uint64_t v119 = (uint64_t)&v35[v118];
  uint64_t v120 = &v36[v118];
  if (!*(void *)&v35[v118 + 16]) {
    goto LABEL_55;
  }
  if (!*((void *)v120 + 2))
  {
    sub_260DCFC50(v119);
LABEL_55:
    *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
    *(void *)(v119 + 16) = *((void *)v120 + 2);
    goto LABEL_56;
  }
  uint64_t v121 = *(void *)v119;
  unint64_t v122 = *(void *)(v119 + 8);
  *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
  sub_260DCC110(v121, v122);
  *(void *)(v119 + 16) = *((void *)v120 + 2);
  swift_bridgeObjectRelease();
LABEL_56:
  uint64_t v48 = v123;
  v35[v37[7]] = v36[v37[7]];
LABEL_14:
  uint64_t v49 = v33[9];
  uint64_t v50 = v30 + v49;
  uint64_t v51 = v31 + v49;
  *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
  *(unsigned char *)(v50 + 4) = *(unsigned char *)(v51 + 4);
  uint64_t v52 = v33[10];
  uint64_t v53 = v30 + v52;
  uint64_t v54 = v31 + v52;
  *(unsigned char *)(v53 + 4) = *(unsigned char *)(v54 + 4);
  *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
  uint64_t v55 = v33[11];
  uint64_t v56 = v30 + v55;
  uint64_t v57 = v31 + v55;
  *(_WORD *)uint64_t v56 = *(_WORD *)v57;
  *(unsigned char *)(v56 + 2) = *(unsigned char *)(v57 + 2);
  uint64_t v59 = *(void *)(v57 + 8);
  uint64_t v58 = *(void *)(v57 + 16);
  *(void *)(v56 + 8) = v59;
  *(void *)(v56 + 16) = v58;
  swift_bridgeObjectRelease();
  uint64_t v60 = v33[12];
  uint64_t v61 = (void *)(v30 + v60);
  long long v62 = (void *)(v31 + v60);
  long long v63 = *(void **)(v30 + v60);
  if (v63)
  {
    if (*v62)
    {
      *uint64_t v61 = *v62;

      uint64_t v64 = v62[2];
      v61[1] = v62[1];
      _OWORD v61[2] = v64;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_260DCFCA4((uint64_t)v61);
  }
  *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
  _OWORD v61[2] = v62[2];
LABEL_19:
  uint64_t v65 = v33[13];
  uint64_t v66 = v30 + v65;
  uint64_t v67 = v31 + v65;
  long long v68 = *(_OWORD *)(v67 + 16);
  *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
  *(_OWORD *)(v66 + 16) = v68;
  *(unsigned char *)(v66 + 32) = *(unsigned char *)(v67 + 32);
  uint64_t v69 = v33[14];
  uint64_t v70 = v30 + v69;
  uint64_t v71 = v31 + v69;
  *(unsigned char *)(v70 + 8) = *(unsigned char *)(v71 + 8);
  *(void *)uint64_t v70 = *(void *)v71;
  *(void *)(v30 + v33[15]) = *(void *)(v31 + v33[15]);
  swift_bridgeObjectRelease();
  *(void *)(v30 + v33[16]) = *(void *)(v31 + v33[16]);
  swift_bridgeObjectRelease();
  uint64_t v72 = v33[17];
  uint64_t v73 = v30 + v72;
  uint64_t v74 = v31 + v72;
  id v75 = *(void **)(v30 + v72 + 24);
  if (v75)
  {
    uint64_t v76 = *(void *)(v74 + 24);
    if (v76)
    {
      *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
      *(_DWORD *)(v73 + 16) = *(_DWORD *)(v74 + 16);
      *(void *)(v73 + 24) = v76;

      *(void *)(v73 + 32) = *(void *)(v74 + 32);
      swift_release();
      goto LABEL_24;
    }
    sub_260DCFCF8(v73);
  }
  long long v77 = *(_OWORD *)(v74 + 16);
  *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
  *(_OWORD *)(v73 + 16) = v77;
  *(void *)(v73 + 32) = *(void *)(v74 + 32);
LABEL_24:
  uint64_t v78 = v33[18];
  uint64_t v79 = v30 + v78;
  uint64_t v80 = v31 + v78;
  uint64_t v81 = *(void **)(v30 + v78 + 24);
  if (v81)
  {
    uint64_t v82 = *(void *)(v80 + 24);
    if (v82)
    {
      *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
      *(_DWORD *)(v79 + 16) = *(_DWORD *)(v80 + 16);
      *(void *)(v79 + 24) = v82;

      *(void *)(v79 + 32) = *(void *)(v80 + 32);
      swift_release();
      goto LABEL_29;
    }
    sub_260DCFCF8(v79);
  }
  long long v83 = *(_OWORD *)(v80 + 16);
  *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
  *(_OWORD *)(v79 + 16) = v83;
  *(void *)(v79 + 32) = *(void *)(v80 + 32);
LABEL_29:
  uint64_t v84 = v33[19];
  uint64_t v85 = v30 + v84;
  uint64_t v86 = v31 + v84;
  long long v87 = *(void **)(v30 + v84 + 24);
  if (v87)
  {
    uint64_t v88 = *(void *)(v86 + 24);
    if (v88)
    {
      *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
      *(_DWORD *)(v85 + 16) = *(_DWORD *)(v86 + 16);
      *(void *)(v85 + 24) = v88;

      *(void *)(v85 + 32) = *(void *)(v86 + 32);
      swift_release();
      goto LABEL_34;
    }
    sub_260DCFCF8(v85);
  }
  long long v89 = *(_OWORD *)(v86 + 16);
  *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
  *(_OWORD *)(v85 + 16) = v89;
  *(void *)(v85 + 32) = *(void *)(v86 + 32);
LABEL_34:
  uint64_t v90 = v33[20];
  uint64_t v91 = v30 + v90;
  uint64_t v92 = v31 + v90;
  uint64_t v93 = *(void **)(v30 + v90 + 24);
  if (v93)
  {
    uint64_t v94 = *(void *)(v92 + 24);
    if (v94)
    {
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
      *(_DWORD *)(v91 + 16) = *(_DWORD *)(v92 + 16);
      *(void *)(v91 + 24) = v94;

      *(void *)(v91 + 32) = *(void *)(v92 + 32);
      swift_release();
      goto LABEL_39;
    }
    sub_260DCFCF8(v91);
  }
  long long v95 = *(_OWORD *)(v92 + 16);
  *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
  *(_OWORD *)(v91 + 16) = v95;
  *(void *)(v91 + 32) = *(void *)(v92 + 32);
LABEL_39:
  uint64_t v96 = *(void **)(v91 + 64);
  if (v96)
  {
    uint64_t v97 = *(void *)(v92 + 64);
    if (v97)
    {
      *(_OWORD *)(v91 + 40) = *(_OWORD *)(v92 + 40);
      *(_DWORD *)(v91 + 56) = *(_DWORD *)(v92 + 56);
      *(void *)(v91 + 64) = v97;

      *(void *)(v91 + 72) = *(void *)(v92 + 72);
      swift_release();
      goto LABEL_44;
    }
    sub_260DCFCF8(v91 + 40);
  }
  long long v98 = *(_OWORD *)(v92 + 56);
  *(_OWORD *)(v91 + 40) = *(_OWORD *)(v92 + 40);
  *(_OWORD *)(v91 + 56) = v98;
  *(void *)(v91 + 72) = *(void *)(v92 + 72);
LABEL_44:
  *(unsigned char *)(v91 + 80) = *(unsigned char *)(v92 + 80);
  *(void *)(v30 + v33[21]) = *(void *)(v31 + v33[21]);
  swift_bridgeObjectRelease();
  uint64_t v99 = v33[22];
  uint64_t v100 = v30 + v99;
  uint64_t v101 = v31 + v99;
  uint64_t v102 = *(void **)(v30 + v99 + 24);
  if (!v102)
  {
LABEL_48:
    long long v105 = *(_OWORD *)(v101 + 48);
    *(_OWORD *)(v100 + 32) = *(_OWORD *)(v101 + 32);
    *(_OWORD *)(v100 + 48) = v105;
    *(unsigned char *)(v100 + 64) = *(unsigned char *)(v101 + 64);
    long long v106 = *(_OWORD *)(v101 + 16);
    *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
    *(_OWORD *)(v100 + 16) = v106;
    goto LABEL_49;
  }
  uint64_t v103 = *(void *)(v101 + 24);
  if (!v103)
  {
    sub_260DCFD4C(v100);
    goto LABEL_48;
  }
  *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
  *(_DWORD *)(v100 + 16) = *(_DWORD *)(v101 + 16);
  *(void *)(v100 + 24) = v103;

  *(void *)(v100 + 32) = *(void *)(v101 + 32);
  swift_release();
  *(void *)(v100 + 40) = *(void *)(v101 + 40);
  swift_bridgeObjectRelease();
  uint64_t v104 = *(void *)(v101 + 56);
  *(void *)(v100 + 48) = *(void *)(v101 + 48);
  *(void *)(v100 + 56) = v104;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v100 + 64) = *(unsigned char *)(v101 + 64);
LABEL_49:
  uint64_t v107 = v33[23];
  uint64_t v108 = (void *)(v30 + v107);
  uint64_t v109 = v31 + v107;
  uint64_t v110 = *(void *)(v31 + v107 + 8);
  *uint64_t v108 = *(void *)(v31 + v107);
  v108[1] = v110;
  swift_bridgeObjectRelease();
  v108[2] = *(void *)(v109 + 16);
  swift_bridgeObjectRelease();
  v108[3] = *(void *)(v109 + 24);
  swift_bridgeObjectRelease();
  *(void *)(v30 + v33[24]) = *(void *)(v31 + v33[24]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v30 + v33[25]) = *(unsigned char *)(v31 + v33[25]);
  uint64_t v111 = *(int *)(v126 + 28);
  uint64_t v112 = v48 + v111;
  uint64_t v113 = v127 + v111;
  __swift_destroy_boxed_opaque_existential_1Tm(v48 + v111);
  long long v114 = *(_OWORD *)(v113 + 16);
  *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
  *(_OWORD *)(v112 + 16) = v114;
  *(void *)(v112 + 32) = *(void *)(v113 + 32);
  return v48;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.PreviewGenerationSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260DD0E60);
}

uint64_t sub_260DD0E60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E69B8);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = type metadata accessor for GenerationState();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[7] + 24);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.PreviewGenerationSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260DD0F8C);
}

uint64_t sub_260DD0F8C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E69B8);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = type metadata accessor for GenerationState();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[7] + 24) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  return v13(a1 + v11, a2, a2, v9);
}

void sub_260DD10A0()
{
  sub_260DD11AC(319, &qword_26A8E6C20, type metadata accessor for GenerativePlayground.PreviewGenerationEvent, MEMORY[0x263F8F5B8]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for GenerationState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_260DD11AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_260DD1210()
{
  return type metadata accessor for GenerativePlayground.PreviewRepresentation(0);
}

uint64_t type metadata accessor for GenerativePlayground.PreviewRepresentation(uint64_t a1)
{
  return sub_260DD5A3C(a1, (uint64_t *)&unk_26A8E6C28);
}

uint64_t sub_260DD1238()
{
  uint64_t result = type metadata accessor for GeneratedImage();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for GenerationState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for GenerativePlayground.PreviewRepresentation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GenerativePlayground.PreviewRepresentation);
}

uint64_t destroy for GenerativePlayground.GenerationOptions()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GenerativePlayground.GenerationOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GenerativePlayground.GenerationOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  int v4 = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 20) = v4;
  int v5 = *(_DWORD *)(a2 + 28);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 28) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy60_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 44) = *(_OWORD *)(a2 + 44);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GenerativePlayground.GenerationOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerativePlayground.GenerationOptions(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 60)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerativePlayground.GenerationOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 60) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 60) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.GenerationOptions()
{
  return &type metadata for GenerativePlayground.GenerationOptions;
}

void *initializeBufferWithCopyOfBuffer for GenerativePlayground.GenerationEvent(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v10 = sub_260FE3110();
        uint64_t v11 = *(void *)(v10 - 8);
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
        v12((char *)a1, (char *)a2, v10);
        unint64_t v13 = (int *)type metadata accessor for GenerationState();
        uint64_t v14 = v13[5];
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)a2 + v14, 1, v10))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
          memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          v12(v15, v16, v10);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
        }
        uint64_t v20 = v13[6];
        int v21 = (void *)((char *)a1 + v20);
        int v22 = (void *)((char *)a2 + v20);
        uint64_t v118 = v22[1];
        *int v21 = *v22;
        v21[1] = v118;
        uint64_t v23 = v13[7];
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        char *v24 = *((unsigned char *)a2 + v23);
        uint64_t v26 = *(void *)((char *)a2 + v23 + 16);
        *((void *)v24 + 1) = *(void *)((char *)a2 + v23 + 8);
        *((void *)v24 + 2) = v26;
        v24[40] = *((unsigned char *)a2 + v23 + 40);
        *(_OWORD *)(v24 + 24) = *(_OWORD *)((char *)a2 + v23 + 24);
        *((void *)v24 + 6) = *(void *)((char *)a2 + v23 + 48);
        *((_DWORD *)v24 + 14) = *(_DWORD *)((char *)a2 + v23 + 56);
        v24[60] = *((unsigned char *)a2 + v23 + 60);
        v24[61] = *((unsigned char *)a2 + v23 + 61);
        v24[62] = *((unsigned char *)a2 + v23 + 62);
        uint64_t v28 = *(void *)((char *)a2 + v23 + 64);
        uint64_t v27 = *(void *)((char *)a2 + v23 + 72);
        v24[80] = v25[80];
        *((void *)v24 + 8) = v28;
        *((void *)v24 + 9) = v27;
        uint64_t v120 = (int *)type metadata accessor for GenerationRecipe(0);
        uint64_t v29 = v120[8];
        __dst = &v24[v29];
        uint64_t v30 = &v25[v29];
        uint64_t v31 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
        uint64_t v32 = *((void *)v31 - 1);
        uint64_t v33 = *(unsigned int (**)(char *, uint64_t, int *))(v32 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v33(v30, 1, v31))
        {
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
          memcpy(__dst, v30, *(void *)(*(void *)(v34 - 8) + 64));
          uint64_t v35 = v120;
        }
        else
        {
          uint64_t v117 = v32;
          uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
          uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
          v37(__dst, v30, v36);
          v37(&__dst[v31[5]], &v30[v31[5]], v36);
          uint64_t v38 = v31[6];
          int v39 = (uint64_t *)&__dst[v38];
          uint64_t v119 = v30;
          int v40 = (uint64_t *)&v30[v38];
          if (*(void *)&v30[v38 + 16])
          {
            uint64_t v41 = *v40;
            unint64_t v42 = v40[1];
            sub_260DCBD18(*v40, v42);
            *int v39 = v41;
            v39[1] = v42;
            v39[2] = v40[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)int v39 = *(_OWORD *)v40;
            v39[2] = v40[2];
          }
          uint64_t v35 = v120;
          __dst[v31[7]] = v119[v31[7]];
          (*(void (**)(char *, void, uint64_t, int *))(v117 + 56))(__dst, 0, 1, v31);
        }
        uint64_t v43 = v35[9];
        uint64_t v44 = &v24[v43];
        unint64_t v45 = &v25[v43];
        *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
        v44[4] = v45[4];
        uint64_t v46 = v35[10];
        uint64_t v47 = &v24[v46];
        uint64_t v48 = &v25[v46];
        v47[4] = v48[4];
        *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
        uint64_t v49 = v35[11];
        uint64_t v50 = &v24[v49];
        uint64_t v51 = &v25[v49];
        *(_WORD *)uint64_t v50 = *(_WORD *)v51;
        v50[2] = v51[2];
        uint64_t v52 = *((void *)v51 + 2);
        *((void *)v50 + 1) = *((void *)v51 + 1);
        *((void *)v50 + 2) = v52;
        uint64_t v53 = v35[12];
        uint64_t v54 = &v24[v53];
        uint64_t v55 = &v25[v53];
        uint64_t v56 = *(void **)&v25[v53];
        swift_bridgeObjectRetain();
        if (v56)
        {
          uint64_t v57 = *((void *)v55 + 1);
          uint64_t v58 = *((void *)v55 + 2);
          *(void *)uint64_t v54 = v56;
          *((void *)v54 + 1) = v57;
          *((void *)v54 + 2) = v58;
          id v59 = v56;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
          *((void *)v54 + 2) = *((void *)v55 + 2);
        }
        uint64_t v60 = v35[13];
        uint64_t v61 = &v24[v60];
        long long v62 = &v25[v60];
        long long v63 = *((_OWORD *)v62 + 1);
        *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
        *((_OWORD *)v61 + 1) = v63;
        v61[32] = v62[32];
        uint64_t v64 = v35[14];
        uint64_t v65 = &v24[v64];
        uint64_t v66 = &v25[v64];
        v65[8] = v66[8];
        *(void *)uint64_t v65 = *(void *)v66;
        *(void *)&v24[v35[15]] = *(void *)&v25[v35[15]];
        *(void *)&v24[v35[16]] = *(void *)&v25[v35[16]];
        uint64_t v67 = v35[17];
        long long v68 = &v24[v67];
        uint64_t v69 = &v25[v67];
        uint64_t v70 = *(void **)&v25[v67 + 24];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v70)
        {
          *(_OWORD *)long long v68 = *(_OWORD *)v69;
          *((_DWORD *)v68 + 4) = *((_DWORD *)v69 + 4);
          uint64_t v71 = *((void *)v69 + 4);
          *((void *)v68 + 3) = v70;
          *((void *)v68 + 4) = v71;
          id v72 = v70;
          swift_retain();
        }
        else
        {
          long long v73 = *((_OWORD *)v69 + 1);
          *(_OWORD *)long long v68 = *(_OWORD *)v69;
          *((_OWORD *)v68 + 1) = v73;
          *((void *)v68 + 4) = *((void *)v69 + 4);
        }
        uint64_t v74 = v35[18];
        id v75 = &v24[v74];
        uint64_t v76 = &v25[v74];
        long long v77 = (void *)*((void *)v76 + 3);
        if (v77)
        {
          *(_OWORD *)id v75 = *(_OWORD *)v76;
          *((_DWORD *)v75 + 4) = *((_DWORD *)v76 + 4);
          uint64_t v78 = *((void *)v76 + 4);
          *((void *)v75 + 3) = v77;
          *((void *)v75 + 4) = v78;
          id v79 = v77;
          swift_retain();
        }
        else
        {
          long long v80 = *((_OWORD *)v76 + 1);
          *(_OWORD *)id v75 = *(_OWORD *)v76;
          *((_OWORD *)v75 + 1) = v80;
          *((void *)v75 + 4) = *((void *)v76 + 4);
        }
        uint64_t v81 = v35[19];
        uint64_t v82 = &v24[v81];
        long long v83 = &v25[v81];
        uint64_t v84 = (void *)*((void *)v83 + 3);
        if (v84)
        {
          *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
          *((_DWORD *)v82 + 4) = *((_DWORD *)v83 + 4);
          uint64_t v85 = *((void *)v83 + 4);
          *((void *)v82 + 3) = v84;
          *((void *)v82 + 4) = v85;
          id v86 = v84;
          swift_retain();
        }
        else
        {
          long long v87 = *((_OWORD *)v83 + 1);
          *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
          *((_OWORD *)v82 + 1) = v87;
          *((void *)v82 + 4) = *((void *)v83 + 4);
        }
        uint64_t v88 = v35[20];
        long long v89 = &v24[v88];
        uint64_t v90 = &v25[v88];
        uint64_t v91 = *(void **)&v25[v88 + 24];
        if (v91)
        {
          *(_OWORD *)long long v89 = *(_OWORD *)v90;
          *((_DWORD *)v89 + 4) = *((_DWORD *)v90 + 4);
          uint64_t v92 = *((void *)v90 + 4);
          *((void *)v89 + 3) = v91;
          *((void *)v89 + 4) = v92;
          id v93 = v91;
          swift_retain();
        }
        else
        {
          long long v94 = *((_OWORD *)v90 + 1);
          *(_OWORD *)long long v89 = *(_OWORD *)v90;
          *((_OWORD *)v89 + 1) = v94;
          *((void *)v89 + 4) = *((void *)v90 + 4);
        }
        long long v95 = v89 + 40;
        uint64_t v96 = v90 + 40;
        uint64_t v97 = (void *)*((void *)v90 + 8);
        if (v97)
        {
          *long long v95 = *v96;
          *((_DWORD *)v89 + 14) = *((_DWORD *)v90 + 14);
          uint64_t v98 = *((void *)v90 + 9);
          *((void *)v89 + 8) = v97;
          *((void *)v89 + 9) = v98;
          id v99 = v97;
          swift_retain();
        }
        else
        {
          long long v100 = *(_OWORD *)(v90 + 56);
          *long long v95 = *v96;
          *(_OWORD *)(v89 + 56) = v100;
          *((void *)v89 + 9) = *((void *)v90 + 9);
        }
        v89[80] = v90[80];
        *(void *)&v24[v35[21]] = *(void *)&v25[v35[21]];
        uint64_t v101 = v35[22];
        uint64_t v102 = &v24[v101];
        uint64_t v103 = &v25[v101];
        uint64_t v104 = *(void **)&v25[v101 + 24];
        swift_bridgeObjectRetain();
        if (v104)
        {
          *((_DWORD *)v102 + 4) = *((_DWORD *)v103 + 4);
          uint64_t v105 = *((void *)v103 + 4);
          uint64_t v106 = *((void *)v103 + 6);
          uint64_t v107 = *((void *)v103 + 7);
          *((void *)v102 + 5) = *((void *)v103 + 5);
          *((void *)v102 + 6) = v106;
          *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
          *((void *)v102 + 3) = v104;
          *((void *)v102 + 4) = v105;
          *((void *)v102 + 7) = v107;
          v102[64] = v103[64];
          id v108 = v104;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v109 = *((_OWORD *)v103 + 3);
          *((_OWORD *)v102 + 2) = *((_OWORD *)v103 + 2);
          *((_OWORD *)v102 + 3) = v109;
          v102[64] = v103[64];
          long long v110 = *((_OWORD *)v103 + 1);
          *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
          *((_OWORD *)v102 + 1) = v110;
        }
        uint64_t v111 = v120[23];
        uint64_t v112 = &v24[v111];
        uint64_t v113 = &v25[v111];
        uint64_t v114 = *((void *)v113 + 1);
        *(void *)uint64_t v112 = *(void *)v113;
        *((void *)v112 + 1) = v114;
        uint64_t v115 = *((void *)v113 + 3);
        *((void *)v112 + 2) = *((void *)v113 + 2);
        *((void *)v112 + 3) = v115;
        *(void *)&v24[v120[24]] = *(void *)&v25[v120[24]];
        v24[v120[25]] = v25[v120[25]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v18 = (void *)*a2;
        id v19 = v18;
        *a1 = v18;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void destroy for GenerativePlayground.GenerationEvent(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
      goto LABEL_25;
    case 1u:
      uint64_t v2 = sub_260FE3110();
      uint64_t v3 = *(void *)(v2 - 8);
      int v4 = *(void (**)(void **, uint64_t))(v3 + 8);
      v4(a1, v2);
      uint64_t v5 = type metadata accessor for GenerationState();
      uint64_t v6 = (char *)a1 + *(int *)(v5 + 20);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v6, 1, v2)) {
        v4((void **)v6, v2);
      }
      swift_bridgeObjectRelease();
      uint64_t v7 = (char *)a1 + *(int *)(v5 + 28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = (int *)type metadata accessor for GenerationRecipe(0);
      uint64_t v9 = &v7[v8[8]];
      uint64_t v10 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        uint64_t v12 = *(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
        v12(v9, v11);
        v12(&v9[*(int *)(v10 + 20)], v11);
        unint64_t v13 = (uint64_t *)&v9[*(int *)(v10 + 24)];
        if (v13[2])
        {
          sub_260DCC110(*v13, v13[1]);
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v14 = (id *)&v7[v8[12]];
      if (*v14)
      {

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void **)&v7[v8[17] + 24];
      if (v15)
      {

        swift_release();
      }
      uint64_t v16 = *(void **)&v7[v8[18] + 24];
      if (v16)
      {

        swift_release();
      }
      uint64_t v17 = *(void **)&v7[v8[19] + 24];
      if (v17)
      {

        swift_release();
      }
      uint64_t v18 = &v7[v8[20]];
      id v19 = (void *)*((void *)v18 + 3);
      if (v19)
      {

        swift_release();
      }
      uint64_t v20 = (void *)*((void *)v18 + 8);
      if (v20)
      {

        swift_release();
      }
      swift_bridgeObjectRelease();
      int v21 = *(void **)&v7[v8[22] + 24];
      if (v21)
      {

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      int v22 = *a1;

      break;
    default:
      return;
  }
}

void *initializeWithCopy for GenerativePlayground.GenerationEvent(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      goto LABEL_37;
    case 1u:
      uint64_t v7 = sub_260FE3110();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v9((char *)a1, (char *)a2, v7);
      uint64_t v10 = (int *)type metadata accessor for GenerationState();
      uint64_t v11 = v10[5];
      uint64_t v12 = (char *)a1 + v11;
      unint64_t v13 = (char *)a2 + v11;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))((char *)a2 + v11, 1, v7))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v9(v12, v13, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
      }
      uint64_t v17 = v10[6];
      uint64_t v18 = (void *)((char *)a1 + v17);
      id v19 = (void *)((char *)a2 + v17);
      uint64_t v117 = a1;
      uint64_t v118 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v118;
      uint64_t v20 = v10[7];
      int v21 = (char *)a1 + v20;
      int v22 = (char *)a2 + v20;
      *int v21 = *((unsigned char *)a2 + v20);
      uint64_t v23 = *(void *)((char *)a2 + v20 + 16);
      *((void *)v21 + 1) = *(void *)((char *)a2 + v20 + 8);
      *((void *)v21 + 2) = v23;
      v21[40] = *((unsigned char *)a2 + v20 + 40);
      *(_OWORD *)(v21 + 24) = *(_OWORD *)((char *)a2 + v20 + 24);
      *((void *)v21 + 6) = *(void *)((char *)a2 + v20 + 48);
      *((_DWORD *)v21 + 14) = *(_DWORD *)((char *)a2 + v20 + 56);
      v21[60] = *((unsigned char *)a2 + v20 + 60);
      v21[61] = *((unsigned char *)a2 + v20 + 61);
      v21[62] = *((unsigned char *)a2 + v20 + 62);
      uint64_t v25 = *(void *)((char *)a2 + v20 + 64);
      uint64_t v24 = *(void *)((char *)a2 + v20 + 72);
      v21[80] = v22[80];
      *((void *)v21 + 8) = v25;
      *((void *)v21 + 9) = v24;
      uint64_t v26 = (int *)type metadata accessor for GenerationRecipe(0);
      uint64_t v27 = v26[8];
      __dst = &v21[v27];
      uint64_t v28 = &v22[v27];
      uint64_t v29 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31(v28, 1, v29))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
        memcpy(__dst, v28, *(void *)(*(void *)(v32 - 8) + 64));
        a1 = v117;
      }
      else
      {
        uint64_t v119 = v30;
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
        v34(__dst, v28, v33);
        v34(&__dst[*(int *)(v29 + 20)], &v28[*(int *)(v29 + 20)], v33);
        uint64_t v35 = v29;
        uint64_t v36 = *(int *)(v29 + 24);
        uint64_t v37 = (uint64_t *)&__dst[v36];
        uint64_t v38 = (uint64_t *)&v28[v36];
        if (*(void *)&v28[v36 + 16])
        {
          int v39 = v28;
          uint64_t v40 = *v38;
          unint64_t v41 = v38[1];
          sub_260DCBD18(*v38, v41);
          *uint64_t v37 = v40;
          v37[1] = v41;
          uint64_t v28 = v39;
          _OWORD v37[2] = v38[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
          _OWORD v37[2] = v38[2];
        }
        __dst[*(int *)(v35 + 28)] = v28[*(int *)(v35 + 28)];
        a1 = v117;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(__dst, 0, 1, v35);
      }
      uint64_t v42 = v26[9];
      uint64_t v43 = &v21[v42];
      uint64_t v44 = &v22[v42];
      *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
      v43[4] = v44[4];
      uint64_t v45 = v26[10];
      uint64_t v46 = &v21[v45];
      uint64_t v47 = &v22[v45];
      v46[4] = v47[4];
      *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
      uint64_t v48 = v26[11];
      uint64_t v49 = &v21[v48];
      uint64_t v50 = &v22[v48];
      *(_WORD *)uint64_t v49 = *(_WORD *)v50;
      v49[2] = v50[2];
      uint64_t v51 = *((void *)v50 + 2);
      *((void *)v49 + 1) = *((void *)v50 + 1);
      *((void *)v49 + 2) = v51;
      uint64_t v52 = v26[12];
      uint64_t v53 = &v21[v52];
      uint64_t v54 = &v22[v52];
      uint64_t v55 = *(void **)&v22[v52];
      swift_bridgeObjectRetain();
      if (v55)
      {
        uint64_t v56 = *((void *)v54 + 1);
        uint64_t v57 = *((void *)v54 + 2);
        *(void *)uint64_t v53 = v55;
        *((void *)v53 + 1) = v56;
        *((void *)v53 + 2) = v57;
        id v58 = v55;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
        *((void *)v53 + 2) = *((void *)v54 + 2);
      }
      uint64_t v59 = v26[13];
      uint64_t v60 = &v21[v59];
      uint64_t v61 = &v22[v59];
      long long v62 = *((_OWORD *)v61 + 1);
      *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v62;
      v60[32] = v61[32];
      uint64_t v63 = v26[14];
      uint64_t v64 = &v21[v63];
      uint64_t v65 = &v22[v63];
      v64[8] = v65[8];
      *(void *)uint64_t v64 = *(void *)v65;
      *(void *)&v21[v26[15]] = *(void *)&v22[v26[15]];
      *(void *)&v21[v26[16]] = *(void *)&v22[v26[16]];
      uint64_t v66 = v26[17];
      uint64_t v67 = &v21[v66];
      long long v68 = &v22[v66];
      uint64_t v69 = *(void **)&v22[v66 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v69)
      {
        *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
        *((_DWORD *)v67 + 4) = *((_DWORD *)v68 + 4);
        uint64_t v70 = *((void *)v68 + 4);
        *((void *)v67 + 3) = v69;
        *((void *)v67 + 4) = v70;
        id v71 = v69;
        swift_retain();
      }
      else
      {
        long long v72 = *((_OWORD *)v68 + 1);
        *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
        *((_OWORD *)v67 + 1) = v72;
        *((void *)v67 + 4) = *((void *)v68 + 4);
      }
      uint64_t v73 = v26[18];
      uint64_t v74 = &v21[v73];
      id v75 = &v22[v73];
      uint64_t v76 = (void *)*((void *)v75 + 3);
      if (v76)
      {
        *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
        *((_DWORD *)v74 + 4) = *((_DWORD *)v75 + 4);
        uint64_t v77 = *((void *)v75 + 4);
        *((void *)v74 + 3) = v76;
        *((void *)v74 + 4) = v77;
        id v78 = v76;
        swift_retain();
      }
      else
      {
        long long v79 = *((_OWORD *)v75 + 1);
        *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
        *((_OWORD *)v74 + 1) = v79;
        *((void *)v74 + 4) = *((void *)v75 + 4);
      }
      uint64_t v80 = v26[19];
      uint64_t v81 = &v21[v80];
      uint64_t v82 = &v22[v80];
      long long v83 = (void *)*((void *)v82 + 3);
      if (v83)
      {
        *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
        *((_DWORD *)v81 + 4) = *((_DWORD *)v82 + 4);
        uint64_t v84 = *((void *)v82 + 4);
        *((void *)v81 + 3) = v83;
        *((void *)v81 + 4) = v84;
        id v85 = v83;
        swift_retain();
      }
      else
      {
        long long v86 = *((_OWORD *)v82 + 1);
        *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
        *((_OWORD *)v81 + 1) = v86;
        *((void *)v81 + 4) = *((void *)v82 + 4);
      }
      uint64_t v87 = v26[20];
      uint64_t v88 = &v21[v87];
      long long v89 = &v22[v87];
      uint64_t v90 = *(void **)&v22[v87 + 24];
      if (v90)
      {
        *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
        *((_DWORD *)v88 + 4) = *((_DWORD *)v89 + 4);
        uint64_t v91 = *((void *)v89 + 4);
        *((void *)v88 + 3) = v90;
        *((void *)v88 + 4) = v91;
        id v92 = v90;
        swift_retain();
      }
      else
      {
        long long v93 = *((_OWORD *)v89 + 1);
        *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
        *((_OWORD *)v88 + 1) = v93;
        *((void *)v88 + 4) = *((void *)v89 + 4);
      }
      long long v94 = v88 + 40;
      long long v95 = v89 + 40;
      uint64_t v96 = (void *)*((void *)v89 + 8);
      if (v96)
      {
        *long long v94 = *v95;
        *((_DWORD *)v88 + 14) = *((_DWORD *)v89 + 14);
        uint64_t v97 = *((void *)v89 + 9);
        *((void *)v88 + 8) = v96;
        *((void *)v88 + 9) = v97;
        id v98 = v96;
        swift_retain();
      }
      else
      {
        long long v99 = *(_OWORD *)(v89 + 56);
        *long long v94 = *v95;
        *(_OWORD *)(v88 + 56) = v99;
        *((void *)v88 + 9) = *((void *)v89 + 9);
      }
      v88[80] = v89[80];
      *(void *)&v21[v26[21]] = *(void *)&v22[v26[21]];
      uint64_t v100 = v26[22];
      uint64_t v101 = &v21[v100];
      uint64_t v102 = &v22[v100];
      uint64_t v103 = *(void **)&v22[v100 + 24];
      swift_bridgeObjectRetain();
      if (v103)
      {
        *((_DWORD *)v101 + 4) = *((_DWORD *)v102 + 4);
        uint64_t v104 = *((void *)v102 + 4);
        uint64_t v105 = *((void *)v102 + 6);
        uint64_t v106 = *((void *)v102 + 7);
        *((void *)v101 + 5) = *((void *)v102 + 5);
        *((void *)v101 + 6) = v105;
        *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
        *((void *)v101 + 3) = v103;
        *((void *)v101 + 4) = v104;
        *((void *)v101 + 7) = v106;
        v101[64] = v102[64];
        id v107 = v103;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v108 = *((_OWORD *)v102 + 3);
        *((_OWORD *)v101 + 2) = *((_OWORD *)v102 + 2);
        *((_OWORD *)v101 + 3) = v108;
        v101[64] = v102[64];
        long long v109 = *((_OWORD *)v102 + 1);
        *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
        *((_OWORD *)v101 + 1) = v109;
      }
      uint64_t v110 = v26[23];
      uint64_t v111 = &v21[v110];
      uint64_t v112 = &v22[v110];
      uint64_t v113 = *((void *)v112 + 1);
      *(void *)uint64_t v111 = *(void *)v112;
      *((void *)v111 + 1) = v113;
      uint64_t v114 = *((void *)v112 + 3);
      *((void *)v111 + 2) = *((void *)v112 + 2);
      *((void *)v111 + 3) = v114;
      *(void *)&v21[v26[24]] = *(void *)&v22[v26[24]];
      v21[v26[25]] = v22[v26[25]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_37;
    case 2u:
      uint64_t v15 = (void *)*a2;
      id v16 = v15;
      *a1 = v15;
      goto LABEL_37;
    case 3u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_37:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for GenerativePlayground.GenerationEvent(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_260DC6C10((uint64_t)a1, type metadata accessor for GenerativePlayground.GenerationEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        uint64_t v6 = *((void *)a2 + 1);
        a1[16] = a2[16];
        *((void *)a1 + 1) = v6;
        *((void *)a1 + 3) = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        goto LABEL_38;
      case 1u:
        uint64_t v7 = sub_260FE3110();
        uint64_t v8 = *(void *)(v7 - 8);
        uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        v9(a1, a2, v7);
        uint64_t v10 = (int *)type metadata accessor for GenerationState();
        uint64_t v11 = v10[5];
        uint64_t v12 = &a1[v11];
        unint64_t v13 = &a2[v11];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
          memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          v9(v12, v13, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
        }
        uint64_t v17 = v10[6];
        uint64_t v18 = &a1[v17];
        id v19 = &a2[v17];
        *(void *)uint64_t v18 = *(void *)v19;
        *((void *)v18 + 1) = *((void *)v19 + 1);
        uint64_t v20 = v10[7];
        int v21 = &a1[v20];
        int v22 = &a2[v20];
        *int v21 = a2[v20];
        *((void *)v21 + 1) = *(void *)&a2[v20 + 8];
        *((void *)v21 + 2) = *(void *)&a2[v20 + 16];
        long long v23 = *(_OWORD *)&a2[v20 + 24];
        v21[40] = a2[v20 + 40];
        *(_OWORD *)(v21 + 24) = v23;
        *((void *)v21 + 6) = *(void *)&a2[v20 + 48];
        v21[56] = a2[v20 + 56];
        v21[57] = a2[v20 + 57];
        v21[58] = a2[v20 + 58];
        v21[59] = a2[v20 + 59];
        v21[60] = a2[v20 + 60];
        v21[61] = a2[v20 + 61];
        v21[62] = a2[v20 + 62];
        *((void *)v21 + 8) = *(void *)&a2[v20 + 64];
        uint64_t v24 = *(void *)&a2[v20 + 72];
        v21[80] = v22[80];
        *((void *)v21 + 9) = v24;
        uint64_t v25 = (int *)type metadata accessor for GenerationRecipe(0);
        uint64_t v26 = v25[8];
        __dst = &v21[v26];
        uint64_t v27 = &v22[v26];
        uint64_t v28 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
        uint64_t v29 = *(void *)(v28 - 8);
        uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30(v27, 1, v28))
        {
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
          memcpy(__dst, v27, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          uint64_t v116 = v29;
          uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
          uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
          v33(__dst, v27, v32);
          v33(&__dst[*(int *)(v28 + 20)], &v27[*(int *)(v28 + 20)], v32);
          uint64_t v115 = v28;
          uint64_t v34 = *(int *)(v28 + 24);
          uint64_t v35 = (uint64_t *)&__dst[v34];
          uint64_t v36 = (uint64_t *)&v27[v34];
          if (*(void *)&v27[v34 + 16])
          {
            uint64_t v37 = v27;
            uint64_t v38 = *v36;
            unint64_t v39 = v36[1];
            sub_260DCBD18(*v36, v39);
            uint64_t *v35 = v38;
            v35[1] = v39;
            uint64_t v27 = v37;
            _OWORD v35[2] = v36[2];
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v40 = *(_OWORD *)v36;
            _OWORD v35[2] = v36[2];
            *(_OWORD *)uint64_t v35 = v40;
          }
          __dst[*(int *)(v115 + 28)] = v27[*(int *)(v115 + 28)];
          (*(void (**)(char *, void, uint64_t))(v116 + 56))(__dst, 0, 1);
        }
        uint64_t v41 = v25[9];
        uint64_t v42 = &v21[v41];
        uint64_t v43 = &v22[v41];
        int v44 = *(_DWORD *)v43;
        v42[4] = v43[4];
        *(_DWORD *)uint64_t v42 = v44;
        uint64_t v45 = v25[10];
        uint64_t v46 = &v21[v45];
        uint64_t v47 = &v22[v45];
        int v48 = *(_DWORD *)v47;
        v46[4] = v47[4];
        *(_DWORD *)uint64_t v46 = v48;
        uint64_t v49 = v25[11];
        uint64_t v50 = &v21[v49];
        uint64_t v51 = &v22[v49];
        char *v50 = *v51;
        v50[1] = v51[1];
        v50[2] = v51[2];
        *((void *)v50 + 1) = *((void *)v51 + 1);
        *((void *)v50 + 2) = *((void *)v51 + 2);
        uint64_t v52 = v25[12];
        uint64_t v53 = &v21[v52];
        uint64_t v54 = &v22[v52];
        uint64_t v55 = *(void **)&v22[v52];
        swift_bridgeObjectRetain();
        if (v55)
        {
          *(void *)uint64_t v53 = v55;
          *((void *)v53 + 1) = *((void *)v54 + 1);
          *((void *)v53 + 2) = *((void *)v54 + 2);
          id v56 = v55;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v57 = *(_OWORD *)v54;
          *((void *)v53 + 2) = *((void *)v54 + 2);
          *(_OWORD *)uint64_t v53 = v57;
        }
        uint64_t v58 = v25[13];
        uint64_t v59 = &v21[v58];
        uint64_t v60 = &v22[v58];
        long long v61 = *(_OWORD *)v60;
        long long v62 = *((_OWORD *)v60 + 1);
        v59[32] = v60[32];
        *(_OWORD *)uint64_t v59 = v61;
        *((_OWORD *)v59 + 1) = v62;
        uint64_t v63 = v25[14];
        uint64_t v64 = &v21[v63];
        uint64_t v65 = &v22[v63];
        uint64_t v66 = *(void *)v65;
        v64[8] = v65[8];
        *(void *)uint64_t v64 = v66;
        *(void *)&v21[v25[15]] = *(void *)&v22[v25[15]];
        *(void *)&v21[v25[16]] = *(void *)&v22[v25[16]];
        uint64_t v67 = v25[17];
        long long v68 = &v21[v67];
        uint64_t v69 = &v22[v67];
        uint64_t v70 = *(void *)&v22[v67 + 24];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v71 = *(_OWORD *)v69;
        if (v70)
        {
          *((_DWORD *)v68 + 4) = *((_DWORD *)v69 + 4);
          *(_OWORD *)long long v68 = v71;
          long long v72 = (void *)*((void *)v69 + 3);
          *((void *)v68 + 3) = v72;
          *((void *)v68 + 4) = *((void *)v69 + 4);
          id v73 = v72;
          swift_retain();
        }
        else
        {
          long long v74 = *((_OWORD *)v69 + 1);
          *((void *)v68 + 4) = *((void *)v69 + 4);
          *(_OWORD *)long long v68 = v71;
          *((_OWORD *)v68 + 1) = v74;
        }
        uint64_t v75 = v25[18];
        uint64_t v76 = &v21[v75];
        uint64_t v77 = &v22[v75];
        long long v78 = *(_OWORD *)v77;
        if (*((void *)v77 + 3))
        {
          *((_DWORD *)v76 + 4) = *((_DWORD *)v77 + 4);
          *(_OWORD *)uint64_t v76 = v78;
          long long v79 = (void *)*((void *)v77 + 3);
          *((void *)v76 + 3) = v79;
          *((void *)v76 + 4) = *((void *)v77 + 4);
          id v80 = v79;
          swift_retain();
        }
        else
        {
          long long v81 = *((_OWORD *)v77 + 1);
          *((void *)v76 + 4) = *((void *)v77 + 4);
          *(_OWORD *)uint64_t v76 = v78;
          *((_OWORD *)v76 + 1) = v81;
        }
        uint64_t v82 = v25[19];
        long long v83 = &v21[v82];
        uint64_t v84 = &v22[v82];
        long long v85 = *(_OWORD *)v84;
        if (*((void *)v84 + 3))
        {
          *((_DWORD *)v83 + 4) = *((_DWORD *)v84 + 4);
          *(_OWORD *)long long v83 = v85;
          long long v86 = (void *)*((void *)v84 + 3);
          *((void *)v83 + 3) = v86;
          *((void *)v83 + 4) = *((void *)v84 + 4);
          id v87 = v86;
          swift_retain();
        }
        else
        {
          long long v88 = *((_OWORD *)v84 + 1);
          *((void *)v83 + 4) = *((void *)v84 + 4);
          *(_OWORD *)long long v83 = v85;
          *((_OWORD *)v83 + 1) = v88;
        }
        uint64_t v89 = v25[20];
        uint64_t v90 = &v21[v89];
        uint64_t v91 = &v22[v89];
        long long v92 = *(_OWORD *)&v22[v89];
        if (*(void *)&v22[v89 + 24])
        {
          *((_DWORD *)v90 + 4) = *((_DWORD *)v91 + 4);
          *(_OWORD *)uint64_t v90 = v92;
          long long v93 = (void *)*((void *)v91 + 3);
          *((void *)v90 + 3) = v93;
          *((void *)v90 + 4) = *((void *)v91 + 4);
          id v94 = v93;
          swift_retain();
        }
        else
        {
          long long v95 = *((_OWORD *)v91 + 1);
          *((void *)v90 + 4) = *((void *)v91 + 4);
          *(_OWORD *)uint64_t v90 = v92;
          *((_OWORD *)v90 + 1) = v95;
        }
        uint64_t v96 = v90 + 40;
        long long v97 = *(_OWORD *)(v91 + 40);
        if (*((void *)v91 + 8))
        {
          *((_DWORD *)v90 + 14) = *((_DWORD *)v91 + 14);
          *uint64_t v96 = v97;
          id v98 = (void *)*((void *)v91 + 8);
          *((void *)v90 + 8) = v98;
          *((void *)v90 + 9) = *((void *)v91 + 9);
          id v99 = v98;
          swift_retain();
        }
        else
        {
          long long v100 = *(_OWORD *)(v91 + 56);
          *((void *)v90 + 9) = *((void *)v91 + 9);
          *uint64_t v96 = v97;
          *(_OWORD *)(v90 + 56) = v100;
        }
        v90[80] = v91[80];
        *(void *)&v21[v25[21]] = *(void *)&v22[v25[21]];
        uint64_t v101 = v25[22];
        uint64_t v102 = &v21[v101];
        uint64_t v103 = &v22[v101];
        uint64_t v104 = *(void *)&v22[v101 + 24];
        swift_bridgeObjectRetain();
        if (v104)
        {
          long long v105 = *(_OWORD *)v103;
          *((_DWORD *)v102 + 4) = *((_DWORD *)v103 + 4);
          *(_OWORD *)uint64_t v102 = v105;
          uint64_t v106 = (void *)*((void *)v103 + 3);
          *((void *)v102 + 3) = v106;
          *((void *)v102 + 4) = *((void *)v103 + 4);
          *((void *)v102 + 5) = *((void *)v103 + 5);
          *((void *)v102 + 6) = *((void *)v103 + 6);
          *((void *)v102 + 7) = *((void *)v103 + 7);
          v102[64] = v103[64];
          id v107 = v106;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
          long long v108 = *((_OWORD *)v103 + 1);
          long long v109 = *((_OWORD *)v103 + 2);
          long long v110 = *((_OWORD *)v103 + 3);
          v102[64] = v103[64];
          *((_OWORD *)v102 + 2) = v109;
          *((_OWORD *)v102 + 3) = v110;
          *((_OWORD *)v102 + 1) = v108;
        }
        uint64_t v111 = v25[23];
        uint64_t v112 = &v21[v111];
        uint64_t v113 = &v22[v111];
        *(void *)uint64_t v112 = *(void *)v113;
        *((void *)v112 + 1) = *((void *)v113 + 1);
        *((void *)v112 + 2) = *((void *)v113 + 2);
        *((void *)v112 + 3) = *((void *)v113 + 3);
        *(void *)&v21[v25[24]] = *(void *)&v22[v25[24]];
        v21[v25[25]] = v22[v25[25]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_38;
      case 2u:
        uint64_t v15 = *(void **)a2;
        id v16 = v15;
        *(void *)a1 = v15;
        goto LABEL_38;
      case 3u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
LABEL_38:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for GenerativePlayground.GenerationEvent(uint64_t a1)
{
  return sub_260DD5A3C(a1, (uint64_t *)&unk_26A8E6C38);
}

char *initializeWithTake for GenerativePlayground.GenerationEvent(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_260FE3110();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v8(a1, a2, v6);
    uint64_t v9 = (int *)type metadata accessor for GenerationState();
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
    }
    *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
    uint64_t v14 = v9[7];
    uint64_t v15 = &a1[v14];
    id v16 = &a2[v14];
    *uint64_t v15 = a2[v14];
    *(void *)(v15 + 55) = *(void *)&a2[v14 + 55];
    *(_OWORD *)(v15 + 40) = *(_OWORD *)&a2[v14 + 40];
    *(_OWORD *)(v15 + 24) = *(_OWORD *)&a2[v14 + 24];
    *(_OWORD *)(v15 + 8) = *(_OWORD *)&a2[v14 + 8];
    v15[80] = a2[v14 + 80];
    uint64_t v17 = *(void *)&a2[v14 + 72];
    *((void *)v15 + 8) = *(void *)&a2[v14 + 64];
    *((void *)v15 + 9) = v17;
    uint64_t v18 = (int *)type metadata accessor for GenerationRecipe(0);
    uint64_t v19 = v18[8];
    uint64_t v20 = &v15[v19];
    int v21 = &v16[v19];
    int v22 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    uint64_t v23 = *((void *)v22 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32);
      v26(v20, v21, v25);
      v26(&v20[v22[5]], &v21[v22[5]], v25);
      uint64_t v27 = v22[6];
      uint64_t v28 = &v20[v27];
      uint64_t v29 = &v21[v27];
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      *((void *)v28 + 2) = *((void *)v29 + 2);
      v20[v22[7]] = v21[v22[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v30 = v18[9];
    uint64_t v31 = &v15[v30];
    uint64_t v32 = &v16[v30];
    *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    uint64_t v33 = v18[10];
    uint64_t v34 = &v15[v33];
    uint64_t v35 = &v16[v33];
    v34[4] = v35[4];
    *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
    uint64_t v36 = v18[11];
    uint64_t v37 = &v15[v36];
    uint64_t v38 = &v16[v36];
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *((void *)v37 + 2) = *((void *)v38 + 2);
    uint64_t v39 = v18[12];
    long long v40 = &v15[v39];
    uint64_t v41 = &v16[v39];
    *(_OWORD *)long long v40 = *(_OWORD *)v41;
    *((void *)v40 + 2) = *((void *)v41 + 2);
    uint64_t v42 = v18[13];
    uint64_t v43 = &v15[v42];
    int v44 = &v16[v42];
    long long v45 = *((_OWORD *)v44 + 1);
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    *((_OWORD *)v43 + 1) = v45;
    v43[32] = v44[32];
    uint64_t v46 = v18[14];
    uint64_t v47 = &v15[v46];
    int v48 = &v16[v46];
    *(void *)uint64_t v47 = *(void *)v48;
    v47[8] = v48[8];
    *(void *)&v15[v18[15]] = *(void *)&v16[v18[15]];
    *(void *)&v15[v18[16]] = *(void *)&v16[v18[16]];
    uint64_t v49 = v18[17];
    uint64_t v50 = &v15[v49];
    uint64_t v51 = &v16[v49];
    long long v52 = *((_OWORD *)v51 + 1);
    *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
    *((_OWORD *)v50 + 1) = v52;
    *((void *)v50 + 4) = *((void *)v51 + 4);
    uint64_t v53 = v18[18];
    uint64_t v54 = &v15[v53];
    uint64_t v55 = &v16[v53];
    long long v56 = *((_OWORD *)v55 + 1);
    *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
    *((_OWORD *)v54 + 1) = v56;
    *((void *)v54 + 4) = *((void *)v55 + 4);
    uint64_t v57 = v18[19];
    uint64_t v58 = &v15[v57];
    uint64_t v59 = &v16[v57];
    *((void *)v58 + 4) = *((void *)v59 + 4);
    long long v60 = *((_OWORD *)v59 + 1);
    *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
    *((_OWORD *)v58 + 1) = v60;
    uint64_t v61 = v18[20];
    long long v62 = &v15[v61];
    uint64_t v63 = &v16[v61];
    long long v64 = *((_OWORD *)v63 + 1);
    *(_OWORD *)long long v62 = *(_OWORD *)v63;
    *((_OWORD *)v62 + 1) = v64;
    v62[80] = v63[80];
    long long v65 = *((_OWORD *)v63 + 4);
    long long v66 = *((_OWORD *)v63 + 2);
    *((_OWORD *)v62 + 3) = *((_OWORD *)v63 + 3);
    *((_OWORD *)v62 + 4) = v65;
    *((_OWORD *)v62 + 2) = v66;
    *(void *)&v15[v18[21]] = *(void *)&v16[v18[21]];
    uint64_t v67 = v18[22];
    long long v68 = &v15[v67];
    uint64_t v69 = &v16[v67];
    long long v70 = *((_OWORD *)v69 + 3);
    *((_OWORD *)v68 + 2) = *((_OWORD *)v69 + 2);
    *((_OWORD *)v68 + 3) = v70;
    v68[64] = v69[64];
    long long v71 = *((_OWORD *)v69 + 1);
    *(_OWORD *)long long v68 = *(_OWORD *)v69;
    *((_OWORD *)v68 + 1) = v71;
    uint64_t v72 = v18[23];
    id v73 = &v15[v72];
    long long v74 = &v16[v72];
    long long v75 = *((_OWORD *)v74 + 1);
    *(_OWORD *)id v73 = *(_OWORD *)v74;
    *((_OWORD *)v73 + 1) = v75;
    *(void *)&v15[v18[24]] = *(void *)&v16[v18[24]];
    v15[v18[25]] = v16[v18[25]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for GenerativePlayground.GenerationEvent(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_260DC6C10((uint64_t)a1, type metadata accessor for GenerativePlayground.GenerationEvent);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_260FE3110();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v7(a1, a2, v5);
      uint64_t v8 = (int *)type metadata accessor for GenerationState();
      uint64_t v9 = v8[5];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(&a2[v9], 1, v5))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        v7(v10, v11, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v5);
      }
      *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
      uint64_t v13 = v8[7];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      *uint64_t v14 = a2[v13];
      *(void *)(v14 + 55) = *(void *)&a2[v13 + 55];
      *(_OWORD *)(v14 + 40) = *(_OWORD *)&a2[v13 + 40];
      *(_OWORD *)(v14 + 24) = *(_OWORD *)&a2[v13 + 24];
      *(_OWORD *)(v14 + 8) = *(_OWORD *)&a2[v13 + 8];
      v14[80] = a2[v13 + 80];
      uint64_t v16 = *(void *)&a2[v13 + 72];
      *((void *)v14 + 8) = *(void *)&a2[v13 + 64];
      *((void *)v14 + 9) = v16;
      uint64_t v17 = (int *)type metadata accessor for GenerationRecipe(0);
      uint64_t v18 = v17[8];
      uint64_t v19 = &v14[v18];
      uint64_t v20 = &v15[v18];
      int v21 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      uint64_t v22 = *((void *)v21 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32);
        v24(v19, v20, v75);
        v24(&v19[v21[5]], &v20[v21[5]], v75);
        uint64_t v25 = v21[6];
        uint64_t v26 = &v19[v25];
        uint64_t v27 = &v20[v25];
        *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        *((void *)v26 + 2) = *((void *)v27 + 2);
        v19[v21[7]] = v20[v21[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
      }
      uint64_t v28 = v17[9];
      uint64_t v29 = &v14[v28];
      uint64_t v30 = &v15[v28];
      *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
      v29[4] = v30[4];
      uint64_t v31 = v17[10];
      uint64_t v32 = &v14[v31];
      uint64_t v33 = &v15[v31];
      v32[4] = v33[4];
      *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
      uint64_t v34 = v17[11];
      uint64_t v35 = &v14[v34];
      uint64_t v36 = &v15[v34];
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      *((void *)v35 + 2) = *((void *)v36 + 2);
      uint64_t v37 = v17[12];
      uint64_t v38 = &v14[v37];
      uint64_t v39 = &v15[v37];
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
      *((void *)v38 + 2) = *((void *)v39 + 2);
      uint64_t v40 = v17[13];
      uint64_t v41 = &v14[v40];
      uint64_t v42 = &v15[v40];
      long long v43 = *((_OWORD *)v42 + 1);
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v43;
      v41[32] = v42[32];
      uint64_t v44 = v17[14];
      long long v45 = &v14[v44];
      uint64_t v46 = &v15[v44];
      *(void *)long long v45 = *(void *)v46;
      v45[8] = v46[8];
      *(void *)&v14[v17[15]] = *(void *)&v15[v17[15]];
      *(void *)&v14[v17[16]] = *(void *)&v15[v17[16]];
      uint64_t v47 = v17[17];
      int v48 = &v14[v47];
      uint64_t v49 = &v15[v47];
      long long v50 = *((_OWORD *)v49 + 1);
      *(_OWORD *)int v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v50;
      *((void *)v48 + 4) = *((void *)v49 + 4);
      uint64_t v51 = v17[18];
      long long v52 = &v14[v51];
      uint64_t v53 = &v15[v51];
      long long v54 = *((_OWORD *)v53 + 1);
      *(_OWORD *)long long v52 = *(_OWORD *)v53;
      *((_OWORD *)v52 + 1) = v54;
      *((void *)v52 + 4) = *((void *)v53 + 4);
      uint64_t v55 = v17[19];
      long long v56 = &v14[v55];
      uint64_t v57 = &v15[v55];
      *((void *)v56 + 4) = *((void *)v57 + 4);
      long long v58 = *((_OWORD *)v57 + 1);
      *(_OWORD *)long long v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v58;
      uint64_t v59 = v17[20];
      long long v60 = &v14[v59];
      uint64_t v61 = &v15[v59];
      long long v62 = *((_OWORD *)v61 + 1);
      *(_OWORD *)long long v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v62;
      v60[80] = v61[80];
      long long v63 = *((_OWORD *)v61 + 4);
      long long v64 = *((_OWORD *)v61 + 2);
      *((_OWORD *)v60 + 3) = *((_OWORD *)v61 + 3);
      *((_OWORD *)v60 + 4) = v63;
      *((_OWORD *)v60 + 2) = v64;
      *(void *)&v14[v17[21]] = *(void *)&v15[v17[21]];
      uint64_t v65 = v17[22];
      long long v66 = &v14[v65];
      uint64_t v67 = &v15[v65];
      long long v68 = *((_OWORD *)v67 + 3);
      *((_OWORD *)v66 + 2) = *((_OWORD *)v67 + 2);
      *((_OWORD *)v66 + 3) = v68;
      v66[64] = v67[64];
      long long v69 = *((_OWORD *)v67 + 1);
      *(_OWORD *)long long v66 = *(_OWORD *)v67;
      *((_OWORD *)v66 + 1) = v69;
      uint64_t v70 = v17[23];
      long long v71 = &v14[v70];
      uint64_t v72 = &v15[v70];
      long long v73 = *((_OWORD *)v72 + 1);
      *(_OWORD *)long long v71 = *(_OWORD *)v72;
      *((_OWORD *)v71 + 1) = v73;
      *(void *)&v14[v17[24]] = *(void *)&v15[v17[24]];
      v14[v17[25]] = v15[v17[25]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_260DD3BE0()
{
  uint64_t result = type metadata accessor for GenerationState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerativePlayground.ImageGenerationOptions()
{
  return &type metadata for GenerativePlayground.ImageGenerationOptions;
}

char *initializeBufferWithCopyOfBuffer for GenerativePlayground.ImageGenerationEvent(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    a1 = &v16[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v18 = *(void **)a2;
      id v19 = v18;
      *(void *)a1 = v18;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      uint64_t v20 = *(void **)a2;
      char v21 = a2[8];
      *(void *)a1 = *(void *)a2;
      a1[8] = v21;
      uint64_t v132 = type metadata accessor for GeneratedImage();
      uint64_t v22 = *(int *)(v132 + 20);
      uint64_t v23 = &a1[v22];
      uint64_t v24 = &a2[v22];
      a1[v22] = a2[v22];
      uint64_t v25 = (int *)type metadata accessor for ImageProvenance();
      uint64_t v26 = v25[5];
      __dsta = &v23[v26];
      uint64_t v27 = &v24[v26];
      uint64_t v28 = sub_260FE3110();
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
      id v30 = v20;
      v29(__dsta, v27, v28);
      *(void *)&v23[v25[6]] = *(void *)&v24[v25[6]];
      *(void *)&v23[v25[7]] = *(void *)&v24[v25[7]];
      a1[*(int *)(v132 + 24)] = a2[*(int *)(v132 + 24)];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_260FE3110();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v10(a1, a2, v8);
      uint64_t v11 = (int *)type metadata accessor for GenerationState();
      uint64_t v12 = v11[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a2[v12], 1, v8))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        v10(v13, v14, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
      }
      uint64_t v31 = v11[6];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      uint64_t v128 = *((void *)v33 + 1);
      *(void *)uint64_t v32 = *(void *)v33;
      *((void *)v32 + 1) = v128;
      uint64_t v34 = v11[7];
      uint64_t v35 = &a1[v34];
      uint64_t v36 = &a2[v34];
      char *v35 = a2[v34];
      uint64_t v37 = *(void *)&a2[v34 + 16];
      *((void *)v35 + 1) = *(void *)&a2[v34 + 8];
      *((void *)v35 + 2) = v37;
      v35[40] = a2[v34 + 40];
      *(_OWORD *)(v35 + 24) = *(_OWORD *)&a2[v34 + 24];
      *((void *)v35 + 6) = *(void *)&a2[v34 + 48];
      *((_DWORD *)v35 + 14) = *(_DWORD *)&a2[v34 + 56];
      v35[60] = a2[v34 + 60];
      v35[61] = a2[v34 + 61];
      v35[62] = a2[v34 + 62];
      uint64_t v39 = *(void *)&a2[v34 + 64];
      uint64_t v38 = *(void *)&a2[v34 + 72];
      v35[80] = v36[80];
      *((void *)v35 + 8) = v39;
      *((void *)v35 + 9) = v38;
      uint64_t v40 = type metadata accessor for GenerationRecipe(0);
      uint64_t v41 = *(int *)(v40 + 32);
      __dst = &v35[v41];
      v133 = (int *)v40;
      uint64_t v42 = &v36[v41];
      long long v43 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      uint64_t v44 = *((void *)v43 - 1);
      long long v45 = *(unsigned int (**)(char *, uint64_t, int *))(v44 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v45(v42, 1, v43))
      {
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
        memcpy(__dst, v42, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        uint64_t v129 = v44;
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        int v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
        v48(__dst, v42, v47);
        v48(&__dst[v43[5]], &v42[v43[5]], v47);
        uint64_t v49 = v43[6];
        long long v50 = (uint64_t *)&__dst[v49];
        uint64_t v51 = (uint64_t *)&v42[v49];
        if (*(void *)&v42[v49 + 16])
        {
          long long v52 = v42;
          uint64_t v53 = *v51;
          unint64_t v54 = v51[1];
          sub_260DCBD18(*v51, v54);
          uint64_t *v50 = v53;
          v50[1] = v54;
          uint64_t v42 = v52;
          v50[2] = v51[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)long long v50 = *(_OWORD *)v51;
          v50[2] = v51[2];
        }
        __dst[v43[7]] = v42[v43[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v129 + 56))(__dst, 0, 1, v43);
      }
      uint64_t v55 = v133[9];
      long long v56 = &v35[v55];
      uint64_t v57 = &v36[v55];
      *(_DWORD *)long long v56 = *(_DWORD *)v57;
      v56[4] = v57[4];
      uint64_t v58 = v133[10];
      uint64_t v59 = &v35[v58];
      long long v60 = &v36[v58];
      unsigned char v59[4] = v60[4];
      *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
      uint64_t v61 = v133[11];
      long long v62 = &v35[v61];
      long long v63 = &v36[v61];
      *(_WORD *)long long v62 = *(_WORD *)v63;
      _OWORD v62[2] = v63[2];
      uint64_t v64 = *((void *)v63 + 2);
      *((void *)v62 + 1) = *((void *)v63 + 1);
      *((void *)v62 + 2) = v64;
      uint64_t v65 = v133[12];
      long long v66 = &v35[v65];
      uint64_t v67 = &v36[v65];
      long long v68 = *(void **)&v36[v65];
      swift_bridgeObjectRetain();
      if (v68)
      {
        uint64_t v69 = *((void *)v67 + 1);
        uint64_t v70 = *((void *)v67 + 2);
        *(void *)long long v66 = v68;
        *((void *)v66 + 1) = v69;
        *((void *)v66 + 2) = v70;
        id v71 = v68;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)long long v66 = *(_OWORD *)v67;
        *((void *)v66 + 2) = *((void *)v67 + 2);
      }
      uint64_t v72 = v133[13];
      long long v73 = &v35[v72];
      long long v74 = &v36[v72];
      long long v75 = *((_OWORD *)v74 + 1);
      *(_OWORD *)long long v73 = *(_OWORD *)v74;
      *((_OWORD *)v73 + 1) = v75;
      v73[32] = v74[32];
      uint64_t v76 = v133[14];
      uint64_t v77 = &v35[v76];
      long long v78 = &v36[v76];
      v77[8] = v78[8];
      *(void *)uint64_t v77 = *(void *)v78;
      *(void *)&v35[v133[15]] = *(void *)&v36[v133[15]];
      *(void *)&v35[v133[16]] = *(void *)&v36[v133[16]];
      uint64_t v79 = v133[17];
      id v80 = &v35[v79];
      long long v81 = &v36[v79];
      uint64_t v82 = *(void **)&v36[v79 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v82)
      {
        *(_OWORD *)id v80 = *(_OWORD *)v81;
        *((_DWORD *)v80 + 4) = *((_DWORD *)v81 + 4);
        uint64_t v83 = *((void *)v81 + 4);
        *((void *)v80 + 3) = v82;
        *((void *)v80 + 4) = v83;
        id v84 = v82;
        swift_retain();
      }
      else
      {
        long long v85 = *((_OWORD *)v81 + 1);
        *(_OWORD *)id v80 = *(_OWORD *)v81;
        *((_OWORD *)v80 + 1) = v85;
        *((void *)v80 + 4) = *((void *)v81 + 4);
      }
      uint64_t v86 = v133[18];
      id v87 = &v35[v86];
      long long v88 = &v36[v86];
      uint64_t v89 = (void *)*((void *)v88 + 3);
      if (v89)
      {
        *(_OWORD *)id v87 = *(_OWORD *)v88;
        *((_DWORD *)v87 + 4) = *((_DWORD *)v88 + 4);
        uint64_t v90 = *((void *)v88 + 4);
        *((void *)v87 + 3) = v89;
        *((void *)v87 + 4) = v90;
        id v91 = v89;
        swift_retain();
      }
      else
      {
        long long v92 = *((_OWORD *)v88 + 1);
        *(_OWORD *)id v87 = *(_OWORD *)v88;
        *((_OWORD *)v87 + 1) = v92;
        *((void *)v87 + 4) = *((void *)v88 + 4);
      }
      uint64_t v93 = v133[19];
      id v94 = &v35[v93];
      long long v95 = &v36[v93];
      uint64_t v96 = (void *)*((void *)v95 + 3);
      if (v96)
      {
        *(_OWORD *)id v94 = *(_OWORD *)v95;
        *((_DWORD *)v94 + 4) = *((_DWORD *)v95 + 4);
        uint64_t v97 = *((void *)v95 + 4);
        *((void *)v94 + 3) = v96;
        *((void *)v94 + 4) = v97;
        id v98 = v96;
        swift_retain();
      }
      else
      {
        long long v99 = *((_OWORD *)v95 + 1);
        *(_OWORD *)id v94 = *(_OWORD *)v95;
        *((_OWORD *)v94 + 1) = v99;
        *((void *)v94 + 4) = *((void *)v95 + 4);
      }
      uint64_t v100 = v133[20];
      uint64_t v101 = &v35[v100];
      uint64_t v102 = &v36[v100];
      uint64_t v103 = *(void **)&v36[v100 + 24];
      if (v103)
      {
        *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
        *((_DWORD *)v101 + 4) = *((_DWORD *)v102 + 4);
        uint64_t v104 = *((void *)v102 + 4);
        *((void *)v101 + 3) = v103;
        *((void *)v101 + 4) = v104;
        id v105 = v103;
        swift_retain();
      }
      else
      {
        long long v106 = *((_OWORD *)v102 + 1);
        *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
        *((_OWORD *)v101 + 1) = v106;
        *((void *)v101 + 4) = *((void *)v102 + 4);
      }
      id v107 = v101 + 40;
      long long v108 = v102 + 40;
      long long v109 = (void *)*((void *)v102 + 8);
      if (v109)
      {
        *id v107 = *v108;
        *((_DWORD *)v101 + 14) = *((_DWORD *)v102 + 14);
        uint64_t v110 = *((void *)v102 + 9);
        *((void *)v101 + 8) = v109;
        *((void *)v101 + 9) = v110;
        id v111 = v109;
        swift_retain();
      }
      else
      {
        long long v112 = *(_OWORD *)(v102 + 56);
        *id v107 = *v108;
        *(_OWORD *)(v101 + 56) = v112;
        *((void *)v101 + 9) = *((void *)v102 + 9);
      }
      v101[80] = v102[80];
      *(void *)&v35[v133[21]] = *(void *)&v36[v133[21]];
      uint64_t v113 = v133[22];
      uint64_t v114 = &v35[v113];
      uint64_t v115 = &v36[v113];
      uint64_t v116 = *(void **)&v36[v113 + 24];
      swift_bridgeObjectRetain();
      if (v116)
      {
        *((_DWORD *)v114 + 4) = *((_DWORD *)v115 + 4);
        uint64_t v117 = *((void *)v115 + 4);
        uint64_t v118 = *((void *)v115 + 6);
        uint64_t v119 = *((void *)v115 + 7);
        *((void *)v114 + 5) = *((void *)v115 + 5);
        *((void *)v114 + 6) = v118;
        *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
        *((void *)v114 + 3) = v116;
        *((void *)v114 + 4) = v117;
        *((void *)v114 + 7) = v119;
        v114[64] = v115[64];
        id v120 = v116;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v121 = *((_OWORD *)v115 + 3);
        *((_OWORD *)v114 + 2) = *((_OWORD *)v115 + 2);
        *((_OWORD *)v114 + 3) = v121;
        v114[64] = v115[64];
        long long v122 = *((_OWORD *)v115 + 1);
        *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
        *((_OWORD *)v114 + 1) = v122;
      }
      uint64_t v123 = v133[23];
      uint64_t v124 = &v35[v123];
      long long v125 = &v36[v123];
      uint64_t v126 = *((void *)v125 + 1);
      *(void *)uint64_t v124 = *(void *)v125;
      *((void *)v124 + 1) = v126;
      uint64_t v127 = *((void *)v125 + 3);
      *((void *)v124 + 2) = *((void *)v125 + 2);
      *((void *)v124 + 3) = v127;
      *(void *)&v35[v133[24]] = *(void *)&v36[v133[24]];
      v35[v133[25]] = v36[v133[25]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void destroy for GenerativePlayground.ImageGenerationEvent(id *a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    id v23 = *a1;
  }
  else
  {
    if (EnumCaseMultiPayload == 2)
    {

      uint64_t v24 = (char *)a1 + *(int *)(type metadata accessor for GeneratedImage() + 20);
      uint64_t v25 = &v24[*(int *)(type metadata accessor for ImageProvenance() + 20)];
      uint64_t v26 = sub_260FE3110();
      (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
    }
    else
    {
      if (EnumCaseMultiPayload) {
        return;
      }
      uint64_t v3 = sub_260FE3110();
      uint64_t v4 = *(void *)(v3 - 8);
      int v5 = *(void (**)(id *, uint64_t))(v4 + 8);
      v5(a1, v3);
      uint64_t v6 = type metadata accessor for GenerationState();
      uint64_t v7 = (char *)a1 + *(int *)(v6 + 20);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v7, 1, v3)) {
        v5((id *)v7, v3);
      }
      swift_bridgeObjectRelease();
      uint64_t v8 = (char *)a1 + *(int *)(v6 + 28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = (int *)type metadata accessor for GenerationRecipe(0);
      uint64_t v10 = &v8[v9[8]];
      uint64_t v11 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        uint64_t v13 = *(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8);
        v13(v10, v12);
        v13(&v10[*(int *)(v11 + 20)], v12);
        uint64_t v14 = (uint64_t *)&v10[*(int *)(v11 + 24)];
        if (v14[2])
        {
          sub_260DCC110(*v14, v14[1]);
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v15 = (id *)&v8[v9[12]];
      if (*v15)
      {

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void **)&v8[v9[17] + 24];
      if (v16)
      {

        swift_release();
      }
      uint64_t v17 = *(void **)&v8[v9[18] + 24];
      if (v17)
      {

        swift_release();
      }
      uint64_t v18 = *(void **)&v8[v9[19] + 24];
      if (v18)
      {

        swift_release();
      }
      id v19 = &v8[v9[20]];
      uint64_t v20 = (void *)*((void *)v19 + 3);
      if (v20)
      {

        swift_release();
      }
      char v21 = (void *)*((void *)v19 + 8);
      if (v21)
      {

        swift_release();
      }
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void **)&v8[v9[22] + 24];
      if (v22)
      {

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
}

char *initializeWithCopy for GenerativePlayground.ImageGenerationEvent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v15 = *(void **)a2;
      id v16 = v15;
      *(void *)a1 = v15;
LABEL_38:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2:
      uint64_t v17 = *(void **)a2;
      char v18 = a2[8];
      *(void *)a1 = *(void *)a2;
      a1[8] = v18;
      uint64_t v131 = type metadata accessor for GeneratedImage();
      uint64_t v19 = *(int *)(v131 + 20);
      uint64_t v20 = &a1[v19];
      char v21 = &a2[v19];
      a1[v19] = a2[v19];
      uint64_t v22 = (int *)type metadata accessor for ImageProvenance();
      uint64_t v23 = v22[5];
      __dsta = &v20[v23];
      uint64_t v24 = &v21[v23];
      uint64_t v25 = sub_260FE3110();
      uint64_t v26 = a1;
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      id v28 = v17;
      v27(__dsta, v24, v25);
      a1 = v26;
      *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
      *(void *)&v20[v22[7]] = *(void *)&v21[v22[7]];
      v26[*(int *)(v131 + 24)] = a2[*(int *)(v131 + 24)];
      swift_bridgeObjectRetain();
      goto LABEL_38;
    case 0:
      uint64_t v7 = sub_260FE3110();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v9(a1, a2, v7);
      uint64_t v10 = (int *)type metadata accessor for GenerationState();
      uint64_t v11 = v10[5];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v9(v12, v13, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
      }
      uint64_t v29 = v10[6];
      id v30 = &a1[v29];
      uint64_t v31 = &a2[v29];
      uint64_t v127 = *((void *)v31 + 1);
      *(void *)id v30 = *(void *)v31;
      *((void *)v30 + 1) = v127;
      uint64_t v32 = v10[7];
      uint64_t v132 = a1;
      uint64_t v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      *uint64_t v33 = a2[v32];
      uint64_t v35 = *(void *)&a2[v32 + 16];
      *((void *)v33 + 1) = *(void *)&a2[v32 + 8];
      *((void *)v33 + 2) = v35;
      v33[40] = a2[v32 + 40];
      *(_OWORD *)(v33 + 24) = *(_OWORD *)&a2[v32 + 24];
      *((void *)v33 + 6) = *(void *)&a2[v32 + 48];
      *((_DWORD *)v33 + 14) = *(_DWORD *)&a2[v32 + 56];
      v33[60] = a2[v32 + 60];
      v33[61] = a2[v32 + 61];
      v33[62] = a2[v32 + 62];
      uint64_t v37 = *(void *)&a2[v32 + 64];
      uint64_t v36 = *(void *)&a2[v32 + 72];
      v33[80] = v34[80];
      *((void *)v33 + 8) = v37;
      *((void *)v33 + 9) = v36;
      uint64_t v38 = (int *)type metadata accessor for GenerationRecipe(0);
      uint64_t v39 = v38[8];
      __dst = &v33[v39];
      uint64_t v40 = &v34[v39];
      uint64_t v41 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      uint64_t v42 = *((void *)v41 - 1);
      long long v43 = *(unsigned int (**)(char *, uint64_t, int *))(v42 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v43(v40, 1, v41))
      {
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
        memcpy(__dst, v40, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        uint64_t v128 = v42;
        uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
        v46(__dst, v40, v45);
        v46(&__dst[v41[5]], &v40[v41[5]], v45);
        uint64_t v47 = v41[6];
        int v48 = (uint64_t *)&__dst[v47];
        uint64_t v49 = (uint64_t *)&v40[v47];
        if (*(void *)&v40[v47 + 16])
        {
          long long v50 = v40;
          uint64_t v51 = *v49;
          unint64_t v52 = v49[1];
          sub_260DCBD18(*v49, v52);
          *int v48 = v51;
          v48[1] = v52;
          uint64_t v40 = v50;
          _OWORD v48[2] = v49[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)int v48 = *(_OWORD *)v49;
          _OWORD v48[2] = v49[2];
        }
        __dst[v41[7]] = v40[v41[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v128 + 56))(__dst, 0, 1, v41);
      }
      uint64_t v53 = v38[9];
      unint64_t v54 = &v33[v53];
      uint64_t v55 = &v34[v53];
      *(_DWORD *)unint64_t v54 = *(_DWORD *)v55;
      v54[4] = v55[4];
      uint64_t v56 = v38[10];
      uint64_t v57 = &v33[v56];
      uint64_t v58 = &v34[v56];
      v57[4] = v58[4];
      *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
      uint64_t v59 = v38[11];
      long long v60 = &v33[v59];
      uint64_t v61 = &v34[v59];
      *(_WORD *)long long v60 = *(_WORD *)v61;
      uint64_t v60[2] = v61[2];
      uint64_t v62 = *((void *)v61 + 2);
      *((void *)v60 + 1) = *((void *)v61 + 1);
      *((void *)v60 + 2) = v62;
      uint64_t v63 = v38[12];
      uint64_t v64 = &v33[v63];
      uint64_t v65 = &v34[v63];
      long long v66 = *(void **)&v34[v63];
      swift_bridgeObjectRetain();
      if (v66)
      {
        uint64_t v67 = *((void *)v65 + 1);
        uint64_t v68 = *((void *)v65 + 2);
        *(void *)uint64_t v64 = v66;
        *((void *)v64 + 1) = v67;
        *((void *)v64 + 2) = v68;
        id v69 = v66;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
        *((void *)v64 + 2) = *((void *)v65 + 2);
      }
      uint64_t v70 = v38[13];
      id v71 = &v33[v70];
      uint64_t v72 = &v34[v70];
      long long v73 = *((_OWORD *)v72 + 1);
      *(_OWORD *)id v71 = *(_OWORD *)v72;
      *((_OWORD *)v71 + 1) = v73;
      v71[32] = v72[32];
      uint64_t v74 = v38[14];
      long long v75 = &v33[v74];
      uint64_t v76 = &v34[v74];
      v75[8] = v76[8];
      *(void *)long long v75 = *(void *)v76;
      *(void *)&v33[v38[15]] = *(void *)&v34[v38[15]];
      *(void *)&v33[v38[16]] = *(void *)&v34[v38[16]];
      uint64_t v77 = v38[17];
      long long v78 = &v33[v77];
      uint64_t v79 = &v34[v77];
      id v80 = *(void **)&v34[v77 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v80)
      {
        *(_OWORD *)long long v78 = *(_OWORD *)v79;
        *((_DWORD *)v78 + 4) = *((_DWORD *)v79 + 4);
        uint64_t v81 = *((void *)v79 + 4);
        *((void *)v78 + 3) = v80;
        *((void *)v78 + 4) = v81;
        id v82 = v80;
        swift_retain();
      }
      else
      {
        long long v83 = *((_OWORD *)v79 + 1);
        *(_OWORD *)long long v78 = *(_OWORD *)v79;
        *((_OWORD *)v78 + 1) = v83;
        *((void *)v78 + 4) = *((void *)v79 + 4);
      }
      uint64_t v84 = v38[18];
      long long v85 = &v33[v84];
      uint64_t v86 = &v34[v84];
      id v87 = (void *)*((void *)v86 + 3);
      if (v87)
      {
        *(_OWORD *)long long v85 = *(_OWORD *)v86;
        *((_DWORD *)v85 + 4) = *((_DWORD *)v86 + 4);
        uint64_t v88 = *((void *)v86 + 4);
        *((void *)v85 + 3) = v87;
        *((void *)v85 + 4) = v88;
        id v89 = v87;
        swift_retain();
      }
      else
      {
        long long v90 = *((_OWORD *)v86 + 1);
        *(_OWORD *)long long v85 = *(_OWORD *)v86;
        *((_OWORD *)v85 + 1) = v90;
        *((void *)v85 + 4) = *((void *)v86 + 4);
      }
      uint64_t v91 = v38[19];
      long long v92 = &v33[v91];
      uint64_t v93 = &v34[v91];
      id v94 = (void *)*((void *)v93 + 3);
      if (v94)
      {
        *(_OWORD *)long long v92 = *(_OWORD *)v93;
        *((_DWORD *)v92 + 4) = *((_DWORD *)v93 + 4);
        uint64_t v95 = *((void *)v93 + 4);
        *((void *)v92 + 3) = v94;
        *((void *)v92 + 4) = v95;
        id v96 = v94;
        swift_retain();
      }
      else
      {
        long long v97 = *((_OWORD *)v93 + 1);
        *(_OWORD *)long long v92 = *(_OWORD *)v93;
        *((_OWORD *)v92 + 1) = v97;
        *((void *)v92 + 4) = *((void *)v93 + 4);
      }
      uint64_t v98 = v38[20];
      long long v99 = &v33[v98];
      uint64_t v100 = &v34[v98];
      uint64_t v101 = *(void **)&v34[v98 + 24];
      if (v101)
      {
        *(_OWORD *)long long v99 = *(_OWORD *)v100;
        *((_DWORD *)v99 + 4) = *((_DWORD *)v100 + 4);
        uint64_t v102 = *((void *)v100 + 4);
        *((void *)v99 + 3) = v101;
        *((void *)v99 + 4) = v102;
        id v103 = v101;
        swift_retain();
      }
      else
      {
        long long v104 = *((_OWORD *)v100 + 1);
        *(_OWORD *)long long v99 = *(_OWORD *)v100;
        *((_OWORD *)v99 + 1) = v104;
        *((void *)v99 + 4) = *((void *)v100 + 4);
      }
      id v105 = v99 + 40;
      long long v106 = v100 + 40;
      id v107 = (void *)*((void *)v100 + 8);
      if (v107)
      {
        *id v105 = *v106;
        *((_DWORD *)v99 + 14) = *((_DWORD *)v100 + 14);
        uint64_t v108 = *((void *)v100 + 9);
        *((void *)v99 + 8) = v107;
        *((void *)v99 + 9) = v108;
        id v109 = v107;
        swift_retain();
      }
      else
      {
        long long v110 = *(_OWORD *)(v100 + 56);
        *id v105 = *v106;
        *(_OWORD *)(v99 + 56) = v110;
        *((void *)v99 + 9) = *((void *)v100 + 9);
      }
      v99[80] = v100[80];
      *(void *)&v33[v38[21]] = *(void *)&v34[v38[21]];
      uint64_t v111 = v38[22];
      long long v112 = &v33[v111];
      uint64_t v113 = &v34[v111];
      uint64_t v114 = *(void **)&v34[v111 + 24];
      swift_bridgeObjectRetain();
      if (v114)
      {
        *((_DWORD *)v112 + 4) = *((_DWORD *)v113 + 4);
        uint64_t v115 = *((void *)v113 + 4);
        uint64_t v116 = *((void *)v113 + 6);
        uint64_t v117 = *((void *)v113 + 7);
        *((void *)v112 + 5) = *((void *)v113 + 5);
        *((void *)v112 + 6) = v116;
        *(_OWORD *)long long v112 = *(_OWORD *)v113;
        *((void *)v112 + 3) = v114;
        *((void *)v112 + 4) = v115;
        *((void *)v112 + 7) = v117;
        v112[64] = v113[64];
        id v118 = v114;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v119 = *((_OWORD *)v113 + 3);
        *((_OWORD *)v112 + 2) = *((_OWORD *)v113 + 2);
        *((_OWORD *)v112 + 3) = v119;
        v112[64] = v113[64];
        long long v120 = *((_OWORD *)v113 + 1);
        *(_OWORD *)long long v112 = *(_OWORD *)v113;
        *((_OWORD *)v112 + 1) = v120;
      }
      uint64_t v121 = v38[23];
      long long v122 = &v33[v121];
      uint64_t v123 = &v34[v121];
      uint64_t v124 = *((void *)v123 + 1);
      *(void *)long long v122 = *(void *)v123;
      *((void *)v122 + 1) = v124;
      uint64_t v125 = *((void *)v123 + 3);
      *((void *)v122 + 2) = *((void *)v123 + 2);
      *((void *)v122 + 3) = v125;
      *(void *)&v33[v38[24]] = *(void *)&v34[v38[24]];
      v33[v38[25]] = v34[v38[25]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = v132;
      goto LABEL_38;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithCopy for GenerativePlayground.ImageGenerationEvent(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_260DC6C10((uint64_t)a1, type metadata accessor for GenerativePlayground.ImageGenerationEvent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v15 = *(void **)a2;
      id v16 = v15;
      *(void *)a1 = v15;
LABEL_39:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2:
      uint64_t v17 = *(void **)a2;
      char v18 = a2[8];
      *(void *)a1 = *(void *)a2;
      a1[8] = v18;
      __dsta = (int *)type metadata accessor for GeneratedImage();
      uint64_t v19 = __dsta[5];
      uint64_t v20 = &a1[v19];
      char v21 = &a2[v19];
      a1[v19] = a2[v19];
      uint64_t v22 = (int *)type metadata accessor for ImageProvenance();
      uint64_t v23 = v22[5];
      uint64_t v127 = &v20[v23];
      uint64_t v24 = &v21[v23];
      uint64_t v25 = sub_260FE3110();
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      id v27 = v17;
      v26(v127, v24, v25);
      *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
      *(void *)&v20[v22[7]] = *(void *)&v21[v22[7]];
      a1[__dsta[6]] = a2[__dsta[6]];
      swift_bridgeObjectRetain();
      goto LABEL_39;
    case 0:
      uint64_t v7 = sub_260FE3110();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v9(a1, a2, v7);
      uint64_t v10 = (int *)type metadata accessor for GenerationState();
      uint64_t v11 = v10[5];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v9(v12, v13, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
      }
      uint64_t v28 = v10[6];
      uint64_t v29 = &a1[v28];
      id v30 = &a2[v28];
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = *((void *)v30 + 1);
      uint64_t v31 = v10[7];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      *uint64_t v32 = a2[v31];
      *((void *)v32 + 1) = *(void *)&a2[v31 + 8];
      *((void *)v32 + 2) = *(void *)&a2[v31 + 16];
      long long v34 = *(_OWORD *)&a2[v31 + 24];
      v32[40] = a2[v31 + 40];
      *(_OWORD *)(v32 + 24) = v34;
      *((void *)v32 + 6) = *(void *)&a2[v31 + 48];
      v32[56] = a2[v31 + 56];
      v32[57] = a2[v31 + 57];
      v32[58] = a2[v31 + 58];
      v32[59] = a2[v31 + 59];
      v32[60] = a2[v31 + 60];
      v32[61] = a2[v31 + 61];
      v32[62] = a2[v31 + 62];
      *((void *)v32 + 8) = *(void *)&a2[v31 + 64];
      uint64_t v35 = *(void *)&a2[v31 + 72];
      v32[80] = v33[80];
      *((void *)v32 + 9) = v35;
      uint64_t v36 = (int *)type metadata accessor for GenerationRecipe(0);
      uint64_t v37 = v36[8];
      __dst = &v32[v37];
      uint64_t v38 = &v33[v37];
      uint64_t v39 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v41(v38, 1, v39))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
        memcpy(__dst, v38, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        uint64_t v128 = v40;
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
        v44(__dst, v38, v43);
        v44(&__dst[*(int *)(v39 + 20)], &v38[*(int *)(v39 + 20)], v43);
        uint64_t v126 = v39;
        uint64_t v45 = *(int *)(v39 + 24);
        uint64_t v46 = (uint64_t *)&__dst[v45];
        uint64_t v47 = (uint64_t *)&v38[v45];
        if (*(void *)&v38[v45 + 16])
        {
          int v48 = v38;
          uint64_t v49 = *v47;
          unint64_t v50 = v47[1];
          sub_260DCBD18(*v47, v50);
          uint64_t *v46 = v49;
          v46[1] = v50;
          uint64_t v38 = v48;
          v46[2] = v47[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v51 = *(_OWORD *)v47;
          v46[2] = v47[2];
          *(_OWORD *)uint64_t v46 = v51;
        }
        __dst[*(int *)(v126 + 28)] = v38[*(int *)(v126 + 28)];
        (*(void (**)(char *, void, uint64_t))(v128 + 56))(__dst, 0, 1);
      }
      uint64_t v52 = v36[9];
      uint64_t v53 = &v32[v52];
      unint64_t v54 = &v33[v52];
      int v55 = *(_DWORD *)v54;
      v53[4] = v54[4];
      *(_DWORD *)uint64_t v53 = v55;
      uint64_t v56 = v36[10];
      uint64_t v57 = &v32[v56];
      uint64_t v58 = &v33[v56];
      int v59 = *(_DWORD *)v58;
      v57[4] = v58[4];
      *(_DWORD *)uint64_t v57 = v59;
      uint64_t v60 = v36[11];
      uint64_t v61 = &v32[v60];
      uint64_t v62 = &v33[v60];
      *uint64_t v61 = *v62;
      v61[1] = v62[1];
      _OWORD v61[2] = v62[2];
      *((void *)v61 + 1) = *((void *)v62 + 1);
      *((void *)v61 + 2) = *((void *)v62 + 2);
      uint64_t v63 = v36[12];
      uint64_t v64 = &v32[v63];
      uint64_t v65 = &v33[v63];
      long long v66 = *(void **)&v33[v63];
      swift_bridgeObjectRetain();
      if (v66)
      {
        *(void *)uint64_t v64 = v66;
        *((void *)v64 + 1) = *((void *)v65 + 1);
        *((void *)v64 + 2) = *((void *)v65 + 2);
        id v67 = v66;
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v68 = *(_OWORD *)v65;
        *((void *)v64 + 2) = *((void *)v65 + 2);
        *(_OWORD *)uint64_t v64 = v68;
      }
      uint64_t v69 = v36[13];
      uint64_t v70 = &v32[v69];
      id v71 = &v33[v69];
      long long v72 = *(_OWORD *)v71;
      long long v73 = *((_OWORD *)v71 + 1);
      v70[32] = v71[32];
      *(_OWORD *)uint64_t v70 = v72;
      *((_OWORD *)v70 + 1) = v73;
      uint64_t v74 = v36[14];
      long long v75 = &v32[v74];
      uint64_t v76 = &v33[v74];
      uint64_t v77 = *(void *)v76;
      v75[8] = v76[8];
      *(void *)long long v75 = v77;
      *(void *)&v32[v36[15]] = *(void *)&v33[v36[15]];
      *(void *)&v32[v36[16]] = *(void *)&v33[v36[16]];
      uint64_t v78 = v36[17];
      uint64_t v79 = &v32[v78];
      id v80 = &v33[v78];
      uint64_t v81 = *(void *)&v33[v78 + 24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      long long v82 = *(_OWORD *)v80;
      if (v81)
      {
        *((_DWORD *)v79 + 4) = *((_DWORD *)v80 + 4);
        *(_OWORD *)uint64_t v79 = v82;
        long long v83 = (void *)*((void *)v80 + 3);
        *((void *)v79 + 3) = v83;
        *((void *)v79 + 4) = *((void *)v80 + 4);
        id v84 = v83;
        swift_retain();
      }
      else
      {
        long long v85 = *((_OWORD *)v80 + 1);
        *((void *)v79 + 4) = *((void *)v80 + 4);
        *(_OWORD *)uint64_t v79 = v82;
        *((_OWORD *)v79 + 1) = v85;
      }
      uint64_t v86 = v36[18];
      id v87 = &v32[v86];
      uint64_t v88 = &v33[v86];
      long long v89 = *(_OWORD *)v88;
      if (*((void *)v88 + 3))
      {
        *((_DWORD *)v87 + 4) = *((_DWORD *)v88 + 4);
        *(_OWORD *)id v87 = v89;
        long long v90 = (void *)*((void *)v88 + 3);
        *((void *)v87 + 3) = v90;
        *((void *)v87 + 4) = *((void *)v88 + 4);
        id v91 = v90;
        swift_retain();
      }
      else
      {
        long long v92 = *((_OWORD *)v88 + 1);
        *((void *)v87 + 4) = *((void *)v88 + 4);
        *(_OWORD *)id v87 = v89;
        *((_OWORD *)v87 + 1) = v92;
      }
      uint64_t v93 = v36[19];
      id v94 = &v32[v93];
      uint64_t v95 = &v33[v93];
      long long v96 = *(_OWORD *)v95;
      if (*((void *)v95 + 3))
      {
        *((_DWORD *)v94 + 4) = *((_DWORD *)v95 + 4);
        *(_OWORD *)id v94 = v96;
        long long v97 = (void *)*((void *)v95 + 3);
        *((void *)v94 + 3) = v97;
        *((void *)v94 + 4) = *((void *)v95 + 4);
        id v98 = v97;
        swift_retain();
      }
      else
      {
        long long v99 = *((_OWORD *)v95 + 1);
        *((void *)v94 + 4) = *((void *)v95 + 4);
        *(_OWORD *)id v94 = v96;
        *((_OWORD *)v94 + 1) = v99;
      }
      uint64_t v100 = v36[20];
      uint64_t v101 = &v32[v100];
      uint64_t v102 = &v33[v100];
      long long v103 = *(_OWORD *)&v33[v100];
      if (*(void *)&v33[v100 + 24])
      {
        *((_DWORD *)v101 + 4) = *((_DWORD *)v102 + 4);
        *(_OWORD *)uint64_t v101 = v103;
        long long v104 = (void *)*((void *)v102 + 3);
        *((void *)v101 + 3) = v104;
        *((void *)v101 + 4) = *((void *)v102 + 4);
        id v105 = v104;
        swift_retain();
      }
      else
      {
        long long v106 = *((_OWORD *)v102 + 1);
        *((void *)v101 + 4) = *((void *)v102 + 4);
        *(_OWORD *)uint64_t v101 = v103;
        *((_OWORD *)v101 + 1) = v106;
      }
      id v107 = v101 + 40;
      long long v108 = *(_OWORD *)(v102 + 40);
      if (*((void *)v102 + 8))
      {
        *((_DWORD *)v101 + 14) = *((_DWORD *)v102 + 14);
        *id v107 = v108;
        id v109 = (void *)*((void *)v102 + 8);
        *((void *)v101 + 8) = v109;
        *((void *)v101 + 9) = *((void *)v102 + 9);
        id v110 = v109;
        swift_retain();
      }
      else
      {
        long long v111 = *(_OWORD *)(v102 + 56);
        *((void *)v101 + 9) = *((void *)v102 + 9);
        *id v107 = v108;
        *(_OWORD *)(v101 + 56) = v111;
      }
      v101[80] = v102[80];
      *(void *)&v32[v36[21]] = *(void *)&v33[v36[21]];
      uint64_t v112 = v36[22];
      uint64_t v113 = &v32[v112];
      uint64_t v114 = &v33[v112];
      uint64_t v115 = *(void *)&v33[v112 + 24];
      swift_bridgeObjectRetain();
      if (v115)
      {
        long long v116 = *(_OWORD *)v114;
        *((_DWORD *)v113 + 4) = *((_DWORD *)v114 + 4);
        *(_OWORD *)uint64_t v113 = v116;
        uint64_t v117 = (void *)*((void *)v114 + 3);
        *((void *)v113 + 3) = v117;
        *((void *)v113 + 4) = *((void *)v114 + 4);
        *((void *)v113 + 5) = *((void *)v114 + 5);
        *((void *)v113 + 6) = *((void *)v114 + 6);
        *((void *)v113 + 7) = *((void *)v114 + 7);
        v113[64] = v114[64];
        id v118 = v117;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v113 = *(_OWORD *)v114;
        long long v119 = *((_OWORD *)v114 + 1);
        long long v120 = *((_OWORD *)v114 + 2);
        long long v121 = *((_OWORD *)v114 + 3);
        v113[64] = v114[64];
        *((_OWORD *)v113 + 2) = v120;
        *((_OWORD *)v113 + 3) = v121;
        *((_OWORD *)v113 + 1) = v119;
      }
      uint64_t v122 = v36[23];
      uint64_t v123 = &v32[v122];
      uint64_t v124 = &v33[v122];
      *(void *)uint64_t v123 = *(void *)v124;
      *((void *)v123 + 1) = *((void *)v124 + 1);
      *((void *)v123 + 2) = *((void *)v124 + 2);
      *((void *)v123 + 3) = *((void *)v124 + 3);
      *(void *)&v32[v36[24]] = *(void *)&v33[v36[24]];
      v32[v36[25]] = v33[v36[25]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_39;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t type metadata accessor for GenerativePlayground.ImageGenerationEvent(uint64_t a1)
{
  return sub_260DD5A3C(a1, (uint64_t *)&unk_26A8E6C48);
}

uint64_t sub_260DD5A3C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *initializeWithTake for GenerativePlayground.ImageGenerationEvent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(void *)a1 = *(void *)a2;
    a1[8] = a2[8];
    uint64_t v15 = type metadata accessor for GeneratedImage();
    uint64_t v16 = *(int *)(v15 + 20);
    uint64_t v17 = &a1[v16];
    char v18 = &a2[v16];
    a1[v16] = a2[v16];
    uint64_t v19 = (int *)type metadata accessor for ImageProvenance();
    uint64_t v20 = v19[5];
    char v21 = &v17[v20];
    uint64_t v22 = &v18[v20];
    uint64_t v23 = sub_260FE3110();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    *(void *)&v17[v19[6]] = *(void *)&v18[v19[6]];
    *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
    a1[*(int *)(v15 + 24)] = a2[*(int *)(v15 + 24)];
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_260FE3110();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v9(a1, a2, v7);
    uint64_t v10 = (int *)type metadata accessor for GenerationState();
    uint64_t v11 = v10[5];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v9(v12, v13, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
    }
    *(_OWORD *)&a1[v10[6]] = *(_OWORD *)&a2[v10[6]];
    uint64_t v24 = v10[7];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    *uint64_t v25 = a2[v24];
    *(void *)(v25 + 55) = *(void *)&a2[v24 + 55];
    *(_OWORD *)(v25 + 40) = *(_OWORD *)&a2[v24 + 40];
    *(_OWORD *)(v25 + 24) = *(_OWORD *)&a2[v24 + 24];
    *(_OWORD *)(v25 + 8) = *(_OWORD *)&a2[v24 + 8];
    v25[80] = a2[v24 + 80];
    uint64_t v27 = *(void *)&a2[v24 + 72];
    *((void *)v25 + 8) = *(void *)&a2[v24 + 64];
    *((void *)v25 + 9) = v27;
    uint64_t v28 = (int *)type metadata accessor for GenerationRecipe(0);
    uint64_t v29 = v28[8];
    id v30 = &v25[v29];
    uint64_t v31 = &v26[v29];
    uint64_t v32 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    uint64_t v33 = *((void *)v32 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32);
      v35(v30, v31, v86);
      v35(&v30[v32[5]], &v31[v32[5]], v86);
      uint64_t v36 = v32[6];
      uint64_t v37 = &v30[v36];
      uint64_t v38 = &v31[v36];
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
      *((void *)v37 + 2) = *((void *)v38 + 2);
      v30[v32[7]] = v31[v32[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
    }
    uint64_t v39 = v28[9];
    uint64_t v40 = &v25[v39];
    uint64_t v41 = &v26[v39];
    *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
    v40[4] = v41[4];
    uint64_t v42 = v28[10];
    uint64_t v43 = &v25[v42];
    uint64_t v44 = &v26[v42];
    v43[4] = v44[4];
    *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
    uint64_t v45 = v28[11];
    uint64_t v46 = &v25[v45];
    uint64_t v47 = &v26[v45];
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    *((void *)v46 + 2) = *((void *)v47 + 2);
    uint64_t v48 = v28[12];
    uint64_t v49 = &v25[v48];
    unint64_t v50 = &v26[v48];
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    *((void *)v49 + 2) = *((void *)v50 + 2);
    uint64_t v51 = v28[13];
    uint64_t v52 = &v25[v51];
    uint64_t v53 = &v26[v51];
    long long v54 = *((_OWORD *)v53 + 1);
    *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
    *((_OWORD *)v52 + 1) = v54;
    v52[32] = v53[32];
    uint64_t v55 = v28[14];
    uint64_t v56 = &v25[v55];
    uint64_t v57 = &v26[v55];
    *(void *)uint64_t v56 = *(void *)v57;
    v56[8] = v57[8];
    *(void *)&v25[v28[15]] = *(void *)&v26[v28[15]];
    *(void *)&v25[v28[16]] = *(void *)&v26[v28[16]];
    uint64_t v58 = v28[17];
    int v59 = &v25[v58];
    uint64_t v60 = &v26[v58];
    long long v61 = *((_OWORD *)v60 + 1);
    *(_OWORD *)int v59 = *(_OWORD *)v60;
    *((_OWORD *)v59 + 1) = v61;
    *((void *)v59 + 4) = *((void *)v60 + 4);
    uint64_t v62 = v28[18];
    uint64_t v63 = &v25[v62];
    uint64_t v64 = &v26[v62];
    long long v65 = *((_OWORD *)v64 + 1);
    *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
    *((_OWORD *)v63 + 1) = v65;
    *((void *)v63 + 4) = *((void *)v64 + 4);
    uint64_t v66 = v28[19];
    id v67 = &v25[v66];
    long long v68 = &v26[v66];
    *((void *)v67 + 4) = *((void *)v68 + 4);
    long long v69 = *((_OWORD *)v68 + 1);
    *(_OWORD *)id v67 = *(_OWORD *)v68;
    *((_OWORD *)v67 + 1) = v69;
    uint64_t v70 = v28[20];
    id v71 = &v25[v70];
    long long v72 = &v26[v70];
    long long v73 = *((_OWORD *)v72 + 1);
    *(_OWORD *)id v71 = *(_OWORD *)v72;
    *((_OWORD *)v71 + 1) = v73;
    v71[80] = v72[80];
    long long v74 = *((_OWORD *)v72 + 4);
    long long v75 = *((_OWORD *)v72 + 2);
    *((_OWORD *)v71 + 3) = *((_OWORD *)v72 + 3);
    *((_OWORD *)v71 + 4) = v74;
    *((_OWORD *)v71 + 2) = v75;
    *(void *)&v25[v28[21]] = *(void *)&v26[v28[21]];
    uint64_t v76 = v28[22];
    uint64_t v77 = &v25[v76];
    uint64_t v78 = &v26[v76];
    long long v79 = *((_OWORD *)v78 + 3);
    *((_OWORD *)v77 + 2) = *((_OWORD *)v78 + 2);
    *((_OWORD *)v77 + 3) = v79;
    v77[64] = v78[64];
    long long v80 = *((_OWORD *)v78 + 1);
    *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
    *((_OWORD *)v77 + 1) = v80;
    uint64_t v81 = v28[23];
    long long v82 = &v25[v81];
    long long v83 = &v26[v81];
    long long v84 = *((_OWORD *)v83 + 1);
    *(_OWORD *)long long v82 = *(_OWORD *)v83;
    *((_OWORD *)v82 + 1) = v84;
    *(void *)&v25[v28[24]] = *(void *)&v26[v28[24]];
    v25[v28[25]] = v26[v28[25]];
    goto LABEL_12;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for GenerativePlayground.ImageGenerationEvent(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_260DC6C10((uint64_t)a1, type metadata accessor for GenerativePlayground.ImageGenerationEvent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v15 = type metadata accessor for GeneratedImage();
      uint64_t v16 = *(int *)(v15 + 20);
      uint64_t v17 = &a1[v16];
      char v18 = &a2[v16];
      a1[v16] = a2[v16];
      uint64_t v19 = (int *)type metadata accessor for ImageProvenance();
      uint64_t v20 = v19[5];
      char v21 = &v17[v20];
      uint64_t v22 = &v18[v20];
      uint64_t v23 = sub_260FE3110();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      *(void *)&v17[v19[6]] = *(void *)&v18[v19[6]];
      *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
      a1[*(int *)(v15 + 24)] = a2[*(int *)(v15 + 24)];
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_260FE3110();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v9(a1, a2, v7);
      uint64_t v10 = (int *)type metadata accessor for GenerationState();
      uint64_t v11 = v10[5];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v9(v12, v13, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
      }
      *(_OWORD *)&a1[v10[6]] = *(_OWORD *)&a2[v10[6]];
      uint64_t v24 = v10[7];
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      *uint64_t v25 = a2[v24];
      *(void *)(v25 + 55) = *(void *)&a2[v24 + 55];
      *(_OWORD *)(v25 + 40) = *(_OWORD *)&a2[v24 + 40];
      *(_OWORD *)(v25 + 24) = *(_OWORD *)&a2[v24 + 24];
      *(_OWORD *)(v25 + 8) = *(_OWORD *)&a2[v24 + 8];
      v25[80] = a2[v24 + 80];
      uint64_t v27 = *(void *)&a2[v24 + 72];
      *((void *)v25 + 8) = *(void *)&a2[v24 + 64];
      *((void *)v25 + 9) = v27;
      uint64_t v28 = (int *)type metadata accessor for GenerationRecipe(0);
      uint64_t v29 = v28[8];
      id v30 = &v25[v29];
      uint64_t v31 = &v26[v29];
      uint64_t v32 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
      uint64_t v33 = *((void *)v32 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32);
        v35(v30, v31, v86);
        v35(&v30[v32[5]], &v31[v32[5]], v86);
        uint64_t v36 = v32[6];
        uint64_t v37 = &v30[v36];
        uint64_t v38 = &v31[v36];
        *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
        *((void *)v37 + 2) = *((void *)v38 + 2);
        v30[v32[7]] = v31[v32[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
      }
      uint64_t v39 = v28[9];
      uint64_t v40 = &v25[v39];
      uint64_t v41 = &v26[v39];
      *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
      v40[4] = v41[4];
      uint64_t v42 = v28[10];
      uint64_t v43 = &v25[v42];
      uint64_t v44 = &v26[v42];
      v43[4] = v44[4];
      *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
      uint64_t v45 = v28[11];
      uint64_t v46 = &v25[v45];
      uint64_t v47 = &v26[v45];
      *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
      *((void *)v46 + 2) = *((void *)v47 + 2);
      uint64_t v48 = v28[12];
      uint64_t v49 = &v25[v48];
      unint64_t v50 = &v26[v48];
      *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
      *((void *)v49 + 2) = *((void *)v50 + 2);
      uint64_t v51 = v28[13];
      uint64_t v52 = &v25[v51];
      uint64_t v53 = &v26[v51];
      long long v54 = *((_OWORD *)v53 + 1);
      *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
      *((_OWORD *)v52 + 1) = v54;
      v52[32] = v53[32];
      uint64_t v55 = v28[14];
      uint64_t v56 = &v25[v55];
      uint64_t v57 = &v26[v55];
      *(void *)uint64_t v56 = *(void *)v57;
      v56[8] = v57[8];
      *(void *)&v25[v28[15]] = *(void *)&v26[v28[15]];
      *(void *)&v25[v28[16]] = *(void *)&v26[v28[16]];
      uint64_t v58 = v28[17];
      int v59 = &v25[v58];
      uint64_t v60 = &v26[v58];
      long long v61 = *((_OWORD *)v60 + 1);
      *(_OWORD *)int v59 = *(_OWORD *)v60;
      *((_OWORD *)v59 + 1) = v61;
      *((void *)v59 + 4) = *((void *)v60 + 4);
      uint64_t v62 = v28[18];
      uint64_t v63 = &v25[v62];
      uint64_t v64 = &v26[v62];
      long long v65 = *((_OWORD *)v64 + 1);
      *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
      *((_OWORD *)v63 + 1) = v65;
      *((void *)v63 + 4) = *((void *)v64 + 4);
      uint64_t v66 = v28[19];
      id v67 = &v25[v66];
      long long v68 = &v26[v66];
      *((void *)v67 + 4) = *((void *)v68 + 4);
      long long v69 = *((_OWORD *)v68 + 1);
      *(_OWORD *)id v67 = *(_OWORD *)v68;
      *((_OWORD *)v67 + 1) = v69;
      uint64_t v70 = v28[20];
      id v71 = &v25[v70];
      long long v72 = &v26[v70];
      long long v73 = *((_OWORD *)v72 + 1);
      *(_OWORD *)id v71 = *(_OWORD *)v72;
      *((_OWORD *)v71 + 1) = v73;
      v71[80] = v72[80];
      long long v74 = *((_OWORD *)v72 + 4);
      long long v75 = *((_OWORD *)v72 + 2);
      *((_OWORD *)v71 + 3) = *((_OWORD *)v72 + 3);
      *((_OWORD *)v71 + 4) = v74;
      *((_OWORD *)v71 + 2) = v75;
      *(void *)&v25[v28[21]] = *(void *)&v26[v28[21]];
      uint64_t v76 = v28[22];
      uint64_t v77 = &v25[v76];
      uint64_t v78 = &v26[v76];
      long long v79 = *((_OWORD *)v78 + 3);
      *((_OWORD *)v77 + 2) = *((_OWORD *)v78 + 2);
      *((_OWORD *)v77 + 3) = v79;
      v77[64] = v78[64];
      long long v80 = *((_OWORD *)v78 + 1);
      *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
      *((_OWORD *)v77 + 1) = v80;
      uint64_t v81 = v28[23];
      long long v82 = &v25[v81];
      long long v83 = &v26[v81];
      long long v84 = *((_OWORD *)v83 + 1);
      *(_OWORD *)long long v82 = *(_OWORD *)v83;
      *((_OWORD *)v82 + 1) = v84;
      *(void *)&v25[v28[24]] = *(void *)&v26[v28[24]];
      v25[v28[25]] = v26[v28[25]];
      goto LABEL_13;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Concept(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for Concept(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_260DD6630()
{
  uint64_t result = type metadata accessor for GenerationState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for GeneratedImage();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_260DD6704()
{
  return type metadata accessor for GenerativePlayground.ImageGenerationSession(0);
}

void sub_260DD670C()
{
  sub_260DD11AC(319, &qword_26A8E6C68, type metadata accessor for GenerativePlayground.ImageGenerationEvent, MEMORY[0x263F8F5B8]);
  if (v0 <= 0x3F)
  {
    sub_260FE3110();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for GenerativePlayground.ImageGenerationSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GenerativePlayground.ImageGenerationSession);
}

unint64_t sub_260DD6834(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DE0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DD8);
    uint64_t v8 = (void *)sub_260FE4E80();
    uint64_t v9 = (uint64_t)v6 + *(int *)(v2 + 48);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v11 = *(void *)(v3 + 72);
    while (1)
    {
      sub_260D907BC(v10, (uint64_t)v6, &qword_26A8E6DE0);
      uint64_t v12 = *v6;
      uint64_t v13 = v6[1];
      unint64_t result = sub_260DBB2E4(*v6, v13);
      if (v15) {
        break;
      }
      unint64_t v16 = result;
      *(void *)((char *)v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v17 = (uint64_t *)(v8[6] + 16 * result);
      *uint64_t v17 = v12;
      v17[1] = v13;
      uint64_t v18 = v8[7];
      uint64_t v19 = type metadata accessor for GeneratedImage();
      unint64_t result = sub_260DC79D4(v9, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v16, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      uint64_t v20 = v8[2];
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        goto LABEL_10;
      }
      v8[2] = v22;
      v10 += v11;
      if (!--v7) {
        return (unint64_t)v8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_260DD6A00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C98);
  uint64_t v3 = (void *)sub_260FE4E80();
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void **)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  unint64_t result = sub_260DBB2E4(v4, v5);
  if (v9)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v20 = v6;
    return (unint64_t)v3;
  }
  uint64_t v10 = (unsigned char *)(a1 + 88);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v4;
    v11[1] = v5;
    uint64_t v12 = v3[7] + 16 * result;
    *(void *)uint64_t v12 = v6;
    *(unsigned char *)(v12 + 8) = v7;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      break;
    }
    v3[2] = v15;
    if (!--v1) {
      goto LABEL_8;
    }
    unint64_t v16 = v10 + 32;
    uint64_t v4 = *((void *)v10 - 3);
    uint64_t v5 = *((void *)v10 - 2);
    uint64_t v17 = (void *)*((void *)v10 - 1);
    char v7 = *v10;
    id v18 = v6;
    unint64_t result = sub_260DBB2E4(v4, v5);
    uint64_t v10 = v16;
    uint64_t v6 = v17;
    if (v19) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_260DD6B24()
{
  unint64_t result = qword_26A8E6CD0;
  if (!qword_26A8E6CD0)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6CD0);
  }
  return result;
}

uint64_t sub_260DD6B7C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_260DD6BD8(uint64_t a1)
{
  return a1;
}

char *sub_260DD6C2C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    char v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  unint64_t result = (char *)sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DD6D18()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_260DD6D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v14 = *(int **)(v6 + 16);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_260DD8D28;
  unint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int *))((char *)&dword_26A8E8908
                                                                                            + dword_26A8E8908);
  return v16(a1, a2, a3, a4, a5, a6, v14);
}

uint64_t sub_260DD6E48(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(v4 + 16);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_260DD8D28;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t *, uint64_t *, uint64_t, int *))((char *)&dword_26A8E8910
                                                                              + dword_26A8E8910);
  return v12(a1, a2, a3, a4, v10);
}

uint64_t sub_260DD6F28(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_260DD6F60(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_260DD6F8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

char *sub_260DD7098(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DD7184(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DD727C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DD73D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DD7530(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6EC8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DD7640(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DD7734(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DD782C()
{
  return swift_release();
}

unint64_t sub_260DD7834()
{
  unint64_t result = qword_26A8E6DF0;
  if (!qword_26A8E6DF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8E66D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6DF0);
  }
  return result;
}

uint64_t sub_260DD78A0(uint64_t a1)
{
  return sub_260DA7540(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_260DD78AC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

void sub_260DD7954(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  sub_260DA7880(a1, a2, v6);
}

uint64_t sub_260DD7A04()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_260DD7A4C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_260DD8D28;
  return sub_260DA81D8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_260DD7B14(uint64_t a1)
{
  return sub_260DA8574(a1, v1, &qword_26A8E6F88, "ImageGenerationSession terminated.");
}

uint64_t sub_260DD7B40(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_260DD7B58(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
      goto LABEL_3;
    case 6:
      swift_bridgeObjectRelease();
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260DD7BF8(uint64_t *a1)
{
  return sub_260D92388(a1, *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_260DD7C14(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_260DD7C78()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 81, 7);
}

uint64_t sub_260DD7CB0(uint64_t a1)
{
  return sub_260DA31E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(_DWORD *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112));
}

uint64_t sub_260DD7CFC()
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70);
  uint64_t v1 = *(void *)(v9 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v2 = (v12 + 32) & ~v12;
  unint64_t v3 = (((((((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = sub_260FE3110();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v10 = v4;
  uint64_t v11 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v6 = (v11 + v3 + 8) & ~v11;
  unint64_t v8 = (((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 27) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v2, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v6, v10);
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8)) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, ((((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v12 | v11 | 7);
}

uint64_t sub_260DD7F18(uint64_t a1)
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F70) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_260FE3110();
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = *(void *)(v1 + v4);
  uint64_t v9 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v15 + 16) = v7;
  *uint64_t v7 = v15;
  v7[1] = sub_260DD8D28;
  return sub_260DA36FC(a1, v14, v13, v1 + v3, v12, v11, v10, v9);
}

uint64_t sub_260DD814C(uint64_t a1)
{
  return a1;
}

uint64_t sub_260DD8178()
{
  return objectdestroy_202Tm(&qword_26A8E6F70);
}

uint64_t sub_260DD8184(uint64_t a1, uint64_t a2)
{
  return sub_260DD8AD4(a1, a2, &qword_26A8E6F70, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_260DA6C70);
}

uint64_t sub_260DD81A4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_260DD8D28;
  return sub_260F1A780(a1, a2, v6, v7, v8);
}

uint64_t sub_260DD8268(uint64_t a1)
{
  return a1;
}

uint64_t sub_260DD8294(uint64_t a1)
{
  return sub_260D9D360(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(_DWORD *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void **)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120));
}

uint64_t sub_260DD82E0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FE8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v33 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v33 + 32) & ~v33;
  unint64_t v4 = (((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = type metadata accessor for GenerationState();
  uint64_t v32 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v6 = (v32 + v4 + 20) & ~v32;
  uint64_t v7 = *(void *)(*(void *)(v5 - 8) + 64);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_260FE3110();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v0 + v6, v8);
  uint64_t v11 = v0 + v6 + *(int *)(v5 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
    v10(v11, v8);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v0 + v6 + *(int *)(v5 + 28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v14 = v12 + v13[8];
  uint64_t v15 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
    v17(v14, v16);
    v17(v14 + *(int *)(v15 + 20), v16);
    uint64_t v18 = (uint64_t *)(v14 + *(int *)(v15 + 24));
    if (v18[2])
    {
      sub_260DCC110(*v18, v18[1]);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  char v19 = (id *)(v12 + v13[12]);
  if (*v19)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v20 = *(void **)(v12 + v13[17] + 24);
  if (v20)
  {

    swift_release();
  }
  unint64_t v21 = (v7 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void **)(v12 + v13[18] + 24);
  if (v22)
  {

    swift_release();
  }
  uint64_t v23 = *(void **)(v12 + v13[19] + 24);
  if (v23)
  {

    swift_release();
  }
  uint64_t v24 = v12 + v13[20];
  uint64_t v25 = *(void **)(v24 + 24);
  if (v25)
  {

    swift_release();
  }
  uint64_t v26 = *(void **)(v24 + 64);
  if (v26)
  {

    swift_release();
  }
  unint64_t v27 = (((v21 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void **)(v12 + v13[22] + 24);
  if (v28)
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + v21);
  swift_release();
  if (*(void *)(v0 + v27)) {
    swift_release();
  }
  unint64_t v29 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (((((v29 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, v30 + 8, v33 | v32 | 7);
}

uint64_t sub_260DD87A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FE8) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for GenerationState();
  uint64_t v14 = *(void *)(v1 + v4);
  uint64_t v13 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = *(void *)(v1 + v6);
  uint64_t v12 = *(void *)(v1 + v6 + 8);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v15 + 16) = v7;
  *uint64_t v7 = v15;
  v7[1] = sub_260DD8D28;
  return sub_260D9D8A8(a1, v9, v10, v1 + v3, v14, v13, v11, v12);
}

uint64_t sub_260DD89F0(uint64_t a1)
{
  return sub_260DA8574(a1, v1, &qword_26A8E7000, "PreviewGenerationSession terminated.");
}

uint64_t sub_260DD8A1C()
{
  return objectdestroy_202Tm(&qword_26A8E6FE8);
}

uint64_t objectdestroy_202Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t sub_260DD8AB4(uint64_t a1, uint64_t a2)
{
  return sub_260DD8AD4(a1, a2, &qword_26A8E6FE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_260D9F504);
}

uint64_t sub_260DD8AD4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  uint64_t v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a4(a1, a2, v8);
}

unint64_t sub_260DD8B68()
{
  unint64_t result = qword_26A8E7018;
  if (!qword_26A8E7018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A8E7018);
  }
  return result;
}

uint64_t sub_260DD8BBC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_260DD8D28;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A8E7040 + dword_26A8E7040);
  return v6(a1, v4);
}

unint64_t sub_260DD8C74()
{
  unint64_t result = qword_26A8E7050;
  if (!qword_26A8E7050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7050);
  }
  return result;
}

uint64_t sub_260DD8CC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_260DD8D60@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_260DAE680(a1, a2);
}

uint64_t sub_260DD8D98(uint64_t *a1)
{
  return sub_260DD7BF8(a1);
}

unint64_t _s13DiffusionBase21PipelineConfigurationV17InputConditioningV16VisualGeneration27RadarDescriptionConvertibleA2fGP05radarJ0SSvgTW_0()
{
  return 0xD00000000000001FLL;
}

uint64_t dispatch thunk of ImageStyleAvailability.availableImageStyles.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_260DD8E78()
{
  return 0;
}

uint64_t destroy for ImageGenerationPolicyEvaluationContext(id *a1)
{
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 2));
}

uint64_t initializeWithCopy for ImageGenerationPolicyEvaluationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a1 + 16;
  uint64_t v6 = a2 + 16;
  long long v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  id v10 = v3;
  swift_retain();
  v9(v5, v6, v8);
  return a1;
}

uint64_t assignWithCopy for ImageGenerationPolicyEvaluationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ImageGenerationPolicyEvaluationContext(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageGenerationPolicyEvaluationContext(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageGenerationPolicyEvaluationContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageGenerationPolicyEvaluationContext()
{
  return &type metadata for ImageGenerationPolicyEvaluationContext;
}

ValueMetadata *type metadata accessor for CodableStringIndexRange()
{
  return &type metadata for CodableStringIndexRange;
}

uint64_t sub_260DD90F4(char *a1, char *a2)
{
  return sub_260DDA958(*a1, *a2);
}

uint64_t sub_260DD9100()
{
  return sub_260DDB30C();
}

uint64_t sub_260DD9108()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260DD9174()
{
  return sub_260DDB530();
}

uint64_t sub_260DD917C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_260FE4EC0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_260DD91DC(void *a1@<X8>)
{
  unint64_t v2 = 0x8000000260FFB440;
  if (*v1) {
    unint64_t v2 = 0x8000000260FFB460;
  }
  *a1 = 0xD000000000000010;
  a1[1] = v2;
}

unint64_t sub_260DD9218()
{
  return 0xD000000000000010;
}

uint64_t sub_260DD9248@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_260FE4EC0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_260DD92AC()
{
  return 0;
}

void sub_260DD92B8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_260DD92C4(uint64_t a1)
{
  unint64_t v2 = sub_260DD9670();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260DD9300(uint64_t a1)
{
  unint64_t v2 = sub_260DD9670();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260DD933C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7080);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  long long v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DD9670();
  sub_260FE53E0();
  char v11 = 0;
  sub_260FE50A0();
  if (!v1)
  {
    char v10 = 1;
    sub_260FE50A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_260DD94A4()
{
  return sub_260FE5340();
}

uint64_t sub_260DD9500()
{
  return sub_260FE5330();
}

uint64_t sub_260DD9540()
{
  return sub_260FE5340();
}

void *sub_260DD9598@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_260DD96C4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_260DD95C4(void *a1)
{
  return sub_260DD933C(a1);
}

BOOL sub_260DD95E0(void *a1, void *a2)
{
  return !((*a2 ^ *a1) >> 14) && (a1[1] ^ a2[1]) < 0x4000;
}

unint64_t sub_260DD961C()
{
  unint64_t result = qword_26A8E7078;
  if (!qword_26A8E7078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7078);
  }
  return result;
}

unint64_t sub_260DD9670()
{
  unint64_t result = qword_26A8E7088;
  if (!qword_26A8E7088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7088);
  }
  return result;
}

void *sub_260DD96C4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7090);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  long long v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DD9670();
  sub_260FE53B0();
  if (v1) {
    goto LABEL_11;
  }
  LOBYTE(v15) = 0;
  unint64_t v9 = sub_260FE4FA0();
  if ((v9 & 0x8000000000000000) != 0)
  {
    char v17 = 0;
    unint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_260FE4C20();
    swift_bridgeObjectRelease();
    unint64_t v15 = 0xD000000000000014;
    unint64_t v16 = 0x8000000260FFC770;
    unint64_t v14 = v9;
    sub_260FE5110();
    sub_260FE4250();
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v15) = 1;
    unint64_t v10 = sub_260FE4FA0();
    unint64_t v11 = v10;
    if ((v10 & 0x8000000000000000) == 0)
    {
      if (v10 >= v9)
      {
        uint64_t v8 = (void *)(v9 << 16);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
        return v8;
      }
      char v17 = 1;
      unint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
      sub_260FE4C20();
      sub_260FE4250();
      unint64_t v14 = v11;
      sub_260FE5110();
      sub_260FE4250();
      swift_bridgeObjectRelease();
      sub_260FE4250();
      unint64_t v14 = v9;
      sub_260FE5110();
      sub_260FE4250();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    char v17 = 1;
    unint64_t v15 = 0;
    unint64_t v16 = 0xE000000000000000;
    sub_260FE4C20();
    swift_bridgeObjectRelease();
    unint64_t v15 = 0xD000000000000014;
    unint64_t v16 = 0x8000000260FFC700;
    unint64_t v14 = v11;
    sub_260FE5110();
    sub_260FE4250();
    swift_bridgeObjectRelease();
  }
  sub_260FE4250();
LABEL_9:
  uint64_t v8 = (void *)v15;
  sub_260FE4CC0();
  swift_allocError();
  sub_260DD9AA0();
  sub_260FE4C90();
  swift_bridgeObjectRelease();
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
LABEL_11:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v8;
}

unint64_t sub_260DD9AA0()
{
  unint64_t result = qword_26A8E7098;
  if (!qword_26A8E7098)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8E7090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7098);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CodableStringIndexRange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260DD9BC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableStringIndexRange.CodingKeys()
{
  return &type metadata for CodableStringIndexRange.CodingKeys;
}

unint64_t sub_260DD9C04()
{
  unint64_t result = qword_26A8E70A0;
  if (!qword_26A8E70A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E70A0);
  }
  return result;
}

unint64_t sub_260DD9C5C()
{
  unint64_t result = qword_26A8E70A8;
  if (!qword_26A8E70A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E70A8);
  }
  return result;
}

unint64_t sub_260DD9CB4()
{
  unint64_t result = qword_26A8E70B0;
  if (!qword_26A8E70B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E70B0);
  }
  return result;
}

unint64_t sub_260DD9D0C()
{
  unint64_t result = qword_26A8E70B8;
  if (!qword_26A8E70B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E70B8);
  }
  return result;
}

unint64_t sub_260DD9D64()
{
  unint64_t result = qword_26A8E70C0;
  if (!qword_26A8E70C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E70C0);
  }
  return result;
}

_UNKNOWN **sub_260DD9DB8()
{
  return &off_270D193C8;
}

unint64_t sub_260DD9DC4(uint64_t a1)
{
  unint64_t result = sub_260DD9DEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_260DD9DEC()
{
  unint64_t result = qword_26A8E70C8;
  if (!qword_26A8E70C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E70C8);
  }
  return result;
}

uint64_t sub_260DD9E40()
{
  return sub_260DD9EA8(&qword_26A8E70D0);
}

uint64_t sub_260DD9E74()
{
  return sub_260DD9EA8(&qword_26A8E70E0);
}

uint64_t sub_260DD9EA8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8E70D8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_260DD9EF0()
{
  return &off_270D21110;
}

uint64_t sub_260DD9EFC()
{
  return 0;
}

uint64_t sub_260DD9F08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_260DD9F38(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_260DD9F44(uint64_t a1)
{
  unint64_t v2 = sub_260DDA2AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260DD9F80(uint64_t a1)
{
  unint64_t v2 = sub_260DDA2AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260DD9FBC(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t sub_260DD9FE4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E70F8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DDA2AC();
  sub_260FE53E0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_260DDA0F4@<X0>(__IOSurface *a1@<X1>, uint64_t a2@<X8>)
{
  v6[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  v6[0] = 0;
  uint64_t result = CVPixelBufferCreateWithIOSurface((CFAllocatorRef)*MEMORY[0x263EFFB10], a1, 0, v6);
  int v4 = result;
  if (result || !v6[0])
  {
    sub_260DDA300();
    swift_allocError();
    *(_DWORD *)uint64_t v5 = v4;
    *(unsigned char *)(v5 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    *(CVPixelBufferRef *)a2 = v6[0];
    *(unsigned char *)(a2 + 8) = 2;
  }
  return result;
}

unint64_t sub_260DDA1C4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_260DDA1F4();
  unint64_t result = sub_260DDA248();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_260DDA1F4()
{
  unint64_t result = qword_26A8E70E8;
  if (!qword_26A8E70E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E70E8);
  }
  return result;
}

unint64_t sub_260DDA248()
{
  unint64_t result = qword_26A8E70F0;
  if (!qword_26A8E70F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E70F0);
  }
  return result;
}

ValueMetadata *_s19EmptyShareableProxyVMa()
{
  return &_s19EmptyShareableProxyVN;
}

unint64_t sub_260DDA2AC()
{
  unint64_t result = qword_26A8E7100;
  if (!qword_26A8E7100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7100);
  }
  return result;
}

unint64_t sub_260DDA300()
{
  unint64_t result = qword_26A8E7108;
  if (!qword_26A8E7108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7108);
  }
  return result;
}

ValueMetadata *_s19EmptyShareableProxyV10CodingKeysOMa()
{
  return &_s19EmptyShareableProxyV10CodingKeysON;
}

unint64_t sub_260DDA368()
{
  unint64_t result = qword_26A8E7110;
  if (!qword_26A8E7110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7110);
  }
  return result;
}

unint64_t sub_260DDA3C0()
{
  unint64_t result = qword_26A8E7118;
  if (!qword_26A8E7118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7118);
  }
  return result;
}

uint64_t sub_260DDA414(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000776F6CLL;
  uint64_t v3 = 0x6C6559696A6F6D65;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6C6559696A6F6D65;
  unint64_t v6 = 0xEB00000000776F6CLL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      unsigned int v7 = 1919508838;
      goto LABEL_11;
    case 2:
      uint64_t v5 = 0x696146746867696CLL;
      unint64_t v6 = 0xE900000000000072;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1919508838;
      break;
    case 4:
      uint64_t v5 = 0x64654D746867696CLL;
      unint64_t v6 = 0xEB000000006D7569;
      break;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x6D756964656DLL;
      break;
    case 6:
      uint64_t v5 = 0x61446D756964656DLL;
      unint64_t v6 = 0xEA00000000006B72;
      break;
    case 7:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1802658148;
      break;
    case 8:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x6B72614470656564;
      break;
    case 9:
      unint64_t v6 = 0xE700000000000000;
      unsigned int v7 = 1802658148;
LABEL_11:
      uint64_t v5 = v7 | 0x74736500000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      unsigned int v8 = 1919508838;
      goto LABEL_31;
    case 2:
      unint64_t v2 = 0xE900000000000072;
      if (v5 != 0x696146746867696CLL) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 3:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1919508838) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 4:
      unint64_t v2 = 0xEB000000006D7569;
      if (v5 != 0x64654D746867696CLL) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 5:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x6D756964656DLL) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 6:
      unint64_t v2 = 0xEA00000000006B72;
      if (v5 != 0x61446D756964656DLL) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 7:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1802658148) {
        goto LABEL_32;
      }
      goto LABEL_28;
    case 8:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6B72614470656564;
      goto LABEL_27;
    case 9:
      unint64_t v2 = 0xE700000000000000;
      unsigned int v8 = 1802658148;
LABEL_31:
      if (v5 != (v8 | 0x74736500000000)) {
        goto LABEL_32;
      }
      goto LABEL_28;
    default:
LABEL_27:
      if (v5 != v3) {
        goto LABEL_32;
      }
LABEL_28:
      if (v6 == v2) {
        char v9 = 1;
      }
      else {
LABEL_32:
      }
        char v9 = sub_260FE5150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_260DDA710(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656C616D6566;
  }
  else {
    uint64_t v3 = 1701601645;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x656C616D6566;
  }
  else {
    uint64_t v5 = 1701601645;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_260FE5150();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_260DDA7AC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 2036490594;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 2036490594;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x646C696863;
      break;
    case 2:
      uint64_t v5 = 0x756441676E756F79;
      unint64_t v3 = 0xEA0000000000746CLL;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x746C756461;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x726F696E6573;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x646C696863) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEA0000000000746CLL;
      if (v5 != 0x756441676E756F79) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x746C756461;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x726F696E6573) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_260FE5150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_260DDA958(char a1, char a2)
{
  if (a1) {
    unint64_t v2 = 0x8000000260FFB460;
  }
  else {
    unint64_t v2 = 0x8000000260FFB440;
  }
  if (a2) {
    unint64_t v3 = 0x8000000260FFB460;
  }
  else {
    unint64_t v3 = 0x8000000260FFB440;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_260FE5150();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_260DDA9F8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x8000000260FFB480;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v6 = "textSanitization";
      goto LABEL_5;
    case 2:
      unint64_t v5 = 0xD000000000000011;
      unint64_t v6 = "imageSanitization";
      goto LABEL_5;
    case 3:
      unint64_t v6 = "generationRecipe";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x8000000260FFB480;
  switch(a2)
  {
    case 1:
      unsigned int v8 = "textSanitization";
      goto LABEL_10;
    case 2:
      unint64_t v2 = 0xD000000000000011;
      unsigned int v8 = "imageSanitization";
      goto LABEL_10;
    case 3:
      unsigned int v8 = "generationRecipe";
LABEL_10:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_260FE5150();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_260DDAB44(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x65746E656D677561;
  }
  else {
    uint64_t v3 = 0x6574746972776572;
  }
  if (v2) {
    unint64_t v4 = 0xEF74706D6F72506ELL;
  }
  else {
    unint64_t v4 = 0xEF74706D6F725064;
  }
  if (a2) {
    uint64_t v5 = 0x65746E656D677561;
  }
  else {
    uint64_t v5 = 0x6574746972776572;
  }
  if (a2) {
    unint64_t v6 = 0xEF74706D6F725064;
  }
  else {
    unint64_t v6 = 0xEF74706D6F72506ELL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_260FE5150();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_260DDABFC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0x746E65696C63;
    }
    else {
      unint64_t v3 = 0xD000000000000010;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0x8000000260FFB4E0;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0x746E65696C63;
      }
      else {
        unint64_t v6 = 0xD000000000000010;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0x8000000260FFB4E0;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE200000000000000;
    unint64_t v3 = 25705;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE200000000000000;
  if (v3 != 25705)
  {
LABEL_21:
    char v8 = sub_260FE5150();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_260DDACF8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xED0000676E697274;
  unint64_t v3 = 0x53746E6572727563;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x6C616E696769726FLL;
    }
    else {
      unint64_t v5 = 0xD000000000000016;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEE00676E69727453;
    }
    else {
      unint64_t v6 = 0x8000000260FFB530;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x53746E6572727563;
  unint64_t v6 = 0xED0000676E697274;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0x6C616E696769726FLL;
    }
    else {
      unint64_t v3 = 0xD000000000000016;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEE00676E69727453;
    }
    else {
      unint64_t v2 = 0x8000000260FFB530;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_260FE5150();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_260DDAE3C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000007265;
  unint64_t v3 = 0x696669746E656469;
  uint64_t v4 = a1;
  unint64_t v5 = 0x696669746E656469;
  unint64_t v6 = 0xEA00000000007265;
  switch(v4)
  {
    case 1:
      int v7 = "generatedImageDimensions";
      goto LABEL_7;
    case 2:
      unint64_t v5 = 0xD00000000000001DLL;
      char v8 = "generatedRepresentationsCount";
      goto LABEL_11;
    case 3:
      unint64_t v5 = 0xD000000000000013;
      char v8 = "allowImageRejection";
      goto LABEL_11;
    case 4:
      int v7 = "forceInProcessGeneration";
      goto LABEL_7;
    case 5:
      int v7 = "performBackgroundRemoval";
LABEL_7:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000018;
      break;
    case 6:
      unint64_t v5 = 0xD000000000000029;
      char v8 = "allowPersonalizationFromConditioningImage";
      goto LABEL_11;
    case 7:
      unint64_t v5 = 0xD000000000000024;
      char v8 = "generateCaptionFromConditioningImage";
      goto LABEL_11;
    case 8:
      unint64_t v5 = 0xD000000000000010;
      char v8 = "collectForensics";
LABEL_11:
      unint64_t v6 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      char v9 = "generatedImageDimensions";
      goto LABEL_18;
    case 2:
      unint64_t v10 = 0xD00000000000001DLL;
      unint64_t v11 = "generatedRepresentationsCount";
      goto LABEL_24;
    case 3:
      unint64_t v10 = 0xD000000000000013;
      unint64_t v11 = "allowImageRejection";
      goto LABEL_24;
    case 4:
      char v9 = "forceInProcessGeneration";
      goto LABEL_18;
    case 5:
      char v9 = "performBackgroundRemoval";
LABEL_18:
      unint64_t v2 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000018;
      goto LABEL_19;
    case 6:
      unint64_t v10 = 0xD000000000000029;
      unint64_t v11 = "allowPersonalizationFromConditioningImage";
      goto LABEL_24;
    case 7:
      unint64_t v10 = 0xD000000000000024;
      unint64_t v11 = "generateCaptionFromConditioningImage";
      goto LABEL_24;
    case 8:
      unint64_t v10 = 0xD000000000000010;
      unint64_t v11 = "collectForensics";
LABEL_24:
      unint64_t v2 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      if (v5 == v10) {
        goto LABEL_25;
      }
      goto LABEL_27;
    default:
LABEL_19:
      if (v5 != v3) {
        goto LABEL_27;
      }
LABEL_25:
      if (v6 == v2) {
        char v12 = 1;
      }
      else {
LABEL_27:
      }
        char v12 = sub_260FE5150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_260DDB084(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656D616E656C6966;
  }
  else {
    uint64_t v3 = 0x6E69727065636166;
  }
  if (v2) {
    unint64_t v4 = 0xED00006174614474;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x656D616E656C6966;
  }
  else {
    uint64_t v5 = 0x6E69727065636166;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xED00006174614474;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_260FE5150();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_260DDB138(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE90000000000006ELL;
  uint64_t v3 = 0x6F6974616D696E61;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6F6974616D696E61;
  unint64_t v6 = 0xE90000000000006ELL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x696A6F6D65;
      break;
    case 2:
      uint64_t v5 = 0x61727473756C6C69;
      unint64_t v6 = 0xEC0000006E6F6974;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x747241656E696CLL;
      break;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x686374656B73;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      if (v5 == 0x696A6F6D65) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xEC0000006E6F6974;
      if (v5 != 0x61727473756C6C69) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x747241656E696CLL;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x686374656B73) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_260FE5150();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_260DDB30C()
{
  return sub_260FE5340();
}

uint64_t sub_260DDB38C()
{
  return sub_260FE5340();
}

uint64_t sub_260DDB460()
{
  return sub_260FE5340();
}

uint64_t sub_260DDB530()
{
  return sub_260FE5340();
}

VisualGeneration::ForensicsReportType_optional __swiftcall ForensicsReportType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_260FE4EC0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

unint64_t ForensicsReportType.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260DDB684(unsigned __int8 *a1, char *a2)
{
  return sub_260DDA9F8(*a1, *a2);
}

uint64_t sub_260DDB690()
{
  return sub_260DDB38C();
}

uint64_t sub_260DDB698()
{
  return sub_260DB04E0();
}

uint64_t sub_260DDB6A0()
{
  return sub_260DDB460();
}

VisualGeneration::ForensicsReportType_optional sub_260DDB6A8(Swift::String *a1)
{
  return ForensicsReportType.init(rawValue:)(*a1);
}

unint64_t sub_260DDB6B4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ForensicsReportType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_260DDB6DC()
{
  return sub_260FE4370();
}

uint64_t sub_260DDB73C()
{
  return sub_260FE4350();
}

void ForensicsReport.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t JSONValue.init(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = v2;
  sub_260D90650((uint64_t)a1, (uint64_t)v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7120);
  if (swift_dynamicCast())
  {
    sub_260DD7B40(v33, (uint64_t)v36);
    uint64_t v6 = v37;
    uint64_t v7 = v38;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v7 + 16))(v33, v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    uint64_t v8 = *(void *)&v33[0];
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
    *a2 = v8;
    return result;
  }
  uint64_t v34 = 0;
  memset(v33, 0, sizeof(v33));
  sub_260D90820((uint64_t)v33, &qword_26A8E7128);
  sub_260D90650((uint64_t)a1, (uint64_t)v36);
  if (swift_dynamicCast())
  {
    long long v10 = v33[0];
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = v10;
    *a2 = result;
    return result;
  }
  sub_260D90650((uint64_t)a1, (uint64_t)v36);
  if (swift_dynamicCast())
  {
    uint64_t v11 = *(void *)&v33[0];
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v11;
    unint64_t v12 = result | 0x2000000000000000;
LABEL_32:
    *a2 = v12;
    return result;
  }
  sub_260D90650((uint64_t)a1, (uint64_t)v36);
  if (swift_dynamicCast())
  {
    uint64_t v13 = *(void *)&v33[0];
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v13;
    unint64_t v12 = result | 0x4000000000000000;
    goto LABEL_32;
  }
  sub_260D90650((uint64_t)a1, (uint64_t)v36);
  if (swift_dynamicCast())
  {
    char v14 = v33[0];
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    uint64_t result = swift_allocObject();
    *(unsigned char *)(result + 16) = v14;
    unint64_t v12 = result | 0x6000000000000000;
    goto LABEL_32;
  }
  sub_260D90650((uint64_t)a1, (uint64_t)v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7130);
  if (swift_dynamicCast())
  {
    uint64_t v15 = *(void *)(*(void *)&v33[0] + 16);
    if (v15)
    {
      uint64_t v16 = *(void *)&v33[0] + 32;
      swift_bridgeObjectRetain();
      char v17 = (void *)MEMORY[0x263F8EE78];
      do
      {
        sub_260D90650(v16, (uint64_t)v36);
        sub_260D90650((uint64_t)v36, (uint64_t)v33);
        JSONValue.init(_:)(v35, v33);
        if (v3)
        {

          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
          unint64_t v3 = 0;
        }
        else
        {
          uint64_t v18 = v35[0];
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v17 = sub_260DB1B78(0, v17[2] + 1, 1, v17);
          }
          unint64_t v19 = v17[2];
          unint64_t v20 = v17[3];
          unint64_t v21 = v19 + 1;
          if (v19 >= v20 >> 1)
          {
            unint64_t v39 = v19 + 1;
            uint64_t v22 = v17;
            unint64_t v23 = v19;
            uint64_t v24 = sub_260DB1B78((void *)(v20 > 1), v19 + 1, 1, v22);
            unint64_t v19 = v23;
            unint64_t v21 = v39;
            char v17 = v24;
          }
          v17[2] = v21;
          v17[v19 + 4] = v18;
        }
        v16 += 32;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      char v17 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v29 = swift_allocObject();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v29 + 16) = v17;
    unint64_t v12 = v29 | 0x8000000000000000;
    goto LABEL_32;
  }
  sub_260D90650((uint64_t)a1, (uint64_t)v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7138);
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t DynamicType = swift_getDynamicType();
    sub_260DDBCE0();
    swift_allocError();
    *(void *)uint64_t v28 = DynamicType;
    *(unsigned char *)(v28 + 8) = 0;
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v25 = sub_260DDD9DC(*(uint64_t *)&v33[0]);
  swift_bridgeObjectRelease();
  if (*(void *)(v25 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CB0);
    uint64_t v26 = sub_260FE4E80();
  }
  else
  {
    uint64_t v26 = MEMORY[0x263F8EE80];
  }
  v36[0] = v26;
  unint64_t v30 = (void *)swift_bridgeObjectRetain();
  sub_260DE1028(v30, 1, v36);
  if (!v2)
  {
    uint64_t v31 = swift_allocObject();
    swift_bridgeObjectRelease();
    uint64_t v32 = v36[0];
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    *(void *)(v31 + 16) = v32;
    unint64_t v12 = v31 | 0xA000000000000000;
    goto LABEL_32;
  }
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_260DDBCE0()
{
  unint64_t result = qword_26A8E7140;
  if (!qword_26A8E7140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7140);
  }
  return result;
}

uint64_t ForensicsReport.append(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_260D90650(a1, (uint64_t)v10);
  uint64_t result = JSONValue.init(_:)(v10, &v11);
  if (!v4)
  {
    uint64_t v8 = v11;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10[0] = *(void *)(v3 + 8);
    *(void *)(v3 + 8) = 0x8000000000000000;
    sub_260DE04AC(v8, a2, a3, isUniquelyReferenced_nonNull_native);
    *(void *)(v3 + 8) = v10[0];
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

double ForensicsReport.value(forKey:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!*(void *)(*(void *)(v3 + 8) + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  sub_260DBACB4(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  JSONValue.value.getter((uint64_t *)a3);
  swift_release();
  return result;
}

void JSONValue.value.getter(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      uint64_t v6 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      a1[3] = MEMORY[0x263F8D6C8];
      *a1 = v6;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      a1[3] = MEMORY[0x263F8D538];
      *a1 = v7;
      break;
    case 3uLL:
      char v8 = *(unsigned char *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      a1[3] = MEMORY[0x263F8D4F8];
      *(unsigned char *)a1 = v8;
      break;
    case 4uLL:
      uint64_t v9 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      int64_t v10 = *(void *)(v9 + 16);
      uint64_t v11 = MEMORY[0x263F8EE78];
      if (v10)
      {
        uint64_t v18 = MEMORY[0x263F8EE78];
        uint64_t v12 = sub_260DB48AC(0, v10, 0);
        uint64_t v11 = v18;
        uint64_t v13 = v9 + 32;
        do
        {
          v13 += 8;
          JSONValue.value.getter(v17, v12);
          uint64_t v18 = v11;
          unint64_t v15 = *(void *)(v11 + 16);
          unint64_t v14 = *(void *)(v11 + 24);
          if (v15 >= v14 >> 1)
          {
            sub_260DB48AC(v14 > 1, v15 + 1, 1);
            uint64_t v11 = v18;
          }
          *(void *)(v11 + 16) = v15 + 1;
          uint64_t v12 = (uint64_t)sub_260D906FC(v17, (_OWORD *)(v11 + 32 * v15 + 32));
          --v10;
        }
        while (v10);
      }
      a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7130);
      *a1 = v11;
      break;
    case 5uLL:
      uint64_t v16 = sub_260DE1464(*(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
      a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7138);
      *a1 = v16;
      break;
    default:
      uint64_t v5 = *(void *)(v3 + 16);
      uint64_t v4 = *(void *)(v3 + 24);
      a1[3] = MEMORY[0x263F8D310];
      *a1 = v5;
      a1[1] = v4;
      swift_bridgeObjectRetain();
      break;
  }
}

uint64_t ForensicsReport.value(forKeyPath:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  sub_260D86D20();
  uint64_t v4 = (void *)sub_260FE4B40();
  uint64_t v5 = v4;
  uint64_t v6 = v4[2];
  if (v6)
  {
    uint64_t v7 = v4[4];
    uint64_t v8 = v4[5];
    uint64_t v9 = v4[6];
    uint64_t v10 = v4[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = MEMORY[0x26122A9E0](v7, v8, v9, v10);
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v29 = a1;
    if (*(void *)(v3 + 16) && (unint64_t v14 = sub_260DBACB4(v11, v13), (v15 & 1) != 0))
    {
      uint64_t v16 = v5 + 11;
      unint64_t v17 = 0xF000000000000007;
      unint64_t v18 = 1;
      while (1)
      {
        uint64_t v19 = v17;
        unint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v14);
        swift_retain_n();
        swift_bridgeObjectRelease();
        sub_260DE1670(v19);
        if (v17 >> 61 != 5) {
          break;
        }
        swift_bridgeObjectRelease();
        uint64_t v3 = *(void *)((v17 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_bridgeObjectRetain();
        uint64_t result = swift_release();
        if (v6 == v18) {
          goto LABEL_15;
        }
        if (v18 >= v5[2]) {
          goto LABEL_20;
        }
        uint64_t v21 = *(v16 - 1);
        uint64_t v22 = *v16;
        uint64_t v24 = *(v16 - 3);
        uint64_t v23 = *(v16 - 2);
        swift_bridgeObjectRetain();
        uint64_t v25 = MEMORY[0x26122A9E0](v24, v23, v21, v22);
        uint64_t v27 = v26;
        swift_bridgeObjectRelease();
        if (*(void *)(v3 + 16))
        {
          ++v18;
          unint64_t v14 = sub_260DBACB4(v25, v27);
          v16 += 4;
          if (v28) {
            continue;
          }
        }
        goto LABEL_12;
      }
      uint64_t result = swift_release();
      if (v6 == v18)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        JSONValue.value.getter(v29);
        return swift_release();
      }
      if (v18 < v5[2])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_OWORD *)uint64_t v29 = 0u;
        *((_OWORD *)v29 + 1) = 0u;
        return swift_release();
      }
LABEL_20:
      __break(1u);
    }
    else
    {
      unint64_t v17 = 0xF000000000000007;
LABEL_12:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_OWORD *)uint64_t v29 = 0u;
      *((_OWORD *)v29 + 1) = 0u;
      return sub_260DE1670(v17);
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
  }
  return result;
}

uint64_t ForensicsReport.value<A>(_:forKeyPath:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  ForensicsReport.value(forKeyPath:)(v6);
  if (v7)
  {
    sub_260D906FC(v6, v8);
    sub_260D906FC(v8, v6);
    int v4 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v4 ^ 1u, 1, a1);
  }
  else
  {
    sub_260D90820((uint64_t)v6, (uint64_t *)&unk_26A8EA270);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1, a1);
  }
}

uint64_t static ForensicsReport.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if ((sub_260DDA9F8(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  return sub_260DDC46C(v2, v3);
}

uint64_t sub_260DDC46C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    char v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    unint64_t v23 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_260DBACB4(v16, v17);
    char v20 = v19;
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      swift_release();
      return 0;
    }
    uint64_t v22 = *(void *)(*(void *)(a2 + 56) + 8 * v18);
    char v21 = _s16VisualGeneration9JSONValueO2eeoiySbAC_ACtFZ_0(&v22, &v23);
    uint64_t result = swift_release();
    if ((v21 & 1) == 0) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_260DDC640(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            return 1;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_24:
    uint64_t v14 = *(void *)(*(void *)(v2 + 56) + 8 * v10);
    unsigned __int8 v15 = *(unsigned char *)(*(void *)(v2 + 48) + v10);
    swift_bridgeObjectRetain();
    sub_260DBAD2C(v15);
    if ((v16 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_260DDC800(v17, v14);
    char v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_260DDC800(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v36 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v33 = a1 + 64;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v37 = (v8 - 1) & v8;
  int64_t v38 = v4;
  for (unint64_t i = __clz(__rbit64(v8)) | (v4 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v12 << 6))
  {
    uint64_t v14 = *(void *)(*(void *)(v3 + 56) + 8 * i);
    uint64_t v15 = *(unsigned __int8 *)(*(void *)(v3 + 48) + i);
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_260DBADF0(v15);
    if ((v17 & 1) == 0
      || (uint64_t v18 = *(void *)(*(void *)(v2 + 56) + 8 * v16), v19 = *(void *)(v18 + 16), v19 != *(void *)(v14 + 16)))
    {
LABEL_47:
      swift_bridgeObjectRelease();
      return;
    }
    if (v19) {
      BOOL v20 = v18 == v14;
    }
    else {
      BOOL v20 = 1;
    }
    if (!v20)
    {
      sub_260DE2A60();
      swift_bridgeObjectRetain();
      uint64_t v21 = 0;
      unint64_t v22 = 0;
      uint64_t v40 = v14;
      uint64_t v41 = v18;
      uint64_t v39 = v19;
      while (v22 < *(void *)(v14 + 16))
      {
        unint64_t v23 = *(void **)(v18 + v21 + 32);
        uint64_t v24 = *(void *)(v18 + v21 + 40);
        uint64_t v25 = *(void *)(v18 + v21 + 48);
        uint64_t v26 = v14 + v21;
        char v28 = *(void **)(v14 + v21 + 32);
        uint64_t v27 = *(void *)(v26 + 40);
        uint64_t v29 = *(void *)(v26 + 48);
        swift_bridgeObjectRetain();
        id v30 = v23;
        swift_bridgeObjectRetain();
        id v31 = v28;
        if ((sub_260FE4A40() & 1) == 0) {
          goto LABEL_45;
        }
        if (v25)
        {
          if (!v29)
          {
LABEL_45:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            return;
          }
          if (v24 == v27 && v25 == v29)
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
          }
          else
          {
            char v32 = sub_260FE5150();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            if ((v32 & 1) == 0)
            {
LABEL_46:
              swift_bridgeObjectRelease();
              goto LABEL_47;
            }
          }
        }
        else
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          if (v29) {
            goto LABEL_46;
          }
        }
        ++v22;
        v21 += 24;
        uint64_t v14 = v40;
        uint64_t v18 = v41;
        if (v39 == v22)
        {
          swift_bridgeObjectRelease();
          uint64_t v3 = a1;
          uint64_t v2 = a2;
          uint64_t v5 = v33;
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    unint64_t v8 = v37;
    int64_t v4 = v38;
    if (v37) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_50;
    }
    if (v10 >= v36) {
      return;
    }
    unint64_t v11 = *(void *)(v5 + 8 * v10);
    int64_t v12 = v4 + 1;
    if (!v11)
    {
      int64_t v12 = v4 + 2;
      if (v4 + 2 >= v36) {
        return;
      }
      unint64_t v11 = *(void *)(v5 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v4 + 3;
        if (v4 + 3 >= v36) {
          return;
        }
        unint64_t v11 = *(void *)(v5 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v4 + 4;
          if (v4 + 4 >= v36) {
            return;
          }
          unint64_t v11 = *(void *)(v5 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v37 = (v11 - 1) & v11;
    int64_t v38 = v12;
  }
  uint64_t v13 = v4 + 5;
  if (v4 + 5 >= v36) {
    return;
  }
  unint64_t v11 = *(void *)(v5 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v4 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v36) {
      return;
    }
    unint64_t v11 = *(void *)(v5 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_51:
  __break(1u);
}

uint64_t sub_260DDCB6C()
{
  if (*v0) {
    return 0x746E65746E6F63;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_260DDCBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260DE1D58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260DDCBC8(uint64_t a1)
{
  unint64_t v2 = sub_260DE1688();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260DDCC04(uint64_t a1)
{
  unint64_t v2 = sub_260DE1688();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ForensicsReport.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7148);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  unint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *v1;
  v11[0] = *((void *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DE1688();
  sub_260FE53E0();
  char v14 = v9;
  char v13 = 0;
  sub_260DE16DC();
  sub_260FE50B0();
  if (!v2)
  {
    v11[1] = v11[0];
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7160);
    sub_260DE17D8(&qword_26A8E7168, (void (*)(void))sub_260DE1730);
    sub_260FE50B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t ForensicsReport.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7178);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DE1688();
  sub_260FE53B0();
  if (!v2)
  {
    char v15 = 0;
    sub_260DE1784();
    sub_260FE4FB0();
    char v10 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7160);
    char v14 = 1;
    sub_260DE17D8(&qword_26A8E7188, (void (*)(void))sub_260DE1854);
    sub_260FE4FB0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v11 = v13[1];
    *(unsigned char *)a2 = v10;
    *(void *)(a2 + 8) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_260DDD038@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ForensicsReport.init(from:)(a1, a2);
}

uint64_t sub_260DDD050(void *a1)
{
  return ForensicsReport.encode(to:)(a1);
}

uint64_t sub_260DDD068(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if ((sub_260DDA9F8(*(unsigned char *)a1, *(unsigned char *)a2) & 1) == 0) {
    return 0;
  }
  return sub_260DDC46C(v2, v3);
}

Swift::Bool __swiftcall isForensicsReportingSupported()()
{
  return 1;
}

uint64_t ForensicRecord.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F68);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  return v0;
}

uint64_t ForensicRecord.init()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F68);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  return v0;
}

void sub_260DDD168()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_260DE18CC();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_260DDD1E4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = (void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v7 = *(void **)(a1 + 24);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 24) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_260DB190C(0, v7[2] + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_260DB190C((void *)(v9 > 1), v10 + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  void v7[2] = v10 + 1;
  uint64_t v11 = &v7[2 * v10];
  *((unsigned char *)v11 + 32) = a2;
  v11[5] = a3;
  return swift_endAccess();
}

uint64_t sub_260DDD2D8()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  sub_260DE1944(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

void (*sub_260DDD344())(uint64_t a1)
{
  return sub_260DE1988;
}

void sub_260DDD384(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(a2 + 16) + 16);
  os_unfair_lock_lock(v2);
  sub_260DE2B18();
  os_unfair_lock_unlock(v2);
}

uint64_t ForensicRecord.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ForensicRecord.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_260DDD468(uint64_t a1)
{
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = *(void *)(v1 + 16);
    swift_bridgeObjectRetain();
    uint64_t v2 = swift_bridgeObjectRetain();
    sub_260EE04EC(v2);
    *(void *)(v1 + 16) = v4;
  }
  else
  {
    *(void *)(v1 + 16) = a1;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_260DDD4EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_260DDD524(uint64_t a1)
{
  return sub_260DDD468(a1);
}

uint64_t sub_260DDD548(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_260D907BC(v2 + 24, (uint64_t)v11, &qword_26A8E7200);
  if (!v12) {
    return sub_260D90820((uint64_t)v11, &qword_26A8E7200);
  }
  sub_260D90158((uint64_t)v11, (uint64_t)v8);
  sub_260D90820((uint64_t)v11, &qword_26A8E7200);
  uint64_t v5 = v9;
  uint64_t v6 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
}

uint64_t sub_260DDD628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  sub_260D907BC(v3 + 24, (uint64_t)v13, &qword_26A8E7200);
  if (!v14) {
    return sub_260D90820((uint64_t)v13, &qword_26A8E7200);
  }
  sub_260D90158((uint64_t)v13, (uint64_t)v10);
  sub_260D90820((uint64_t)v13, &qword_26A8E7200);
  uint64_t v7 = v11;
  uint64_t v8 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, a3, v7, v8);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t sub_260DDD710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  sub_260D907BC(v3 + 24, (uint64_t)v13, &qword_26A8E7200);
  if (!v14) {
    return sub_260D90820((uint64_t)v13, &qword_26A8E7200);
  }
  sub_260D90158((uint64_t)v13, (uint64_t)v10);
  sub_260D90820((uint64_t)v13, &qword_26A8E7200);
  uint64_t v7 = v11;
  uint64_t v8 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(a1, a2, a3, v7, v8);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t sub_260DDD7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  sub_260D907BC(v3 + 24, (uint64_t)v13, &qword_26A8E7200);
  if (!v14) {
    return sub_260D90820((uint64_t)v13, &qword_26A8E7200);
  }
  sub_260D90158((uint64_t)v13, (uint64_t)v10);
  sub_260D90820((uint64_t)v13, &qword_26A8E7200);
  uint64_t v7 = v11;
  uint64_t v8 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, a2, a3, v7, v8);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t sub_260DDD8E0()
{
  return sub_260D90820(v0 + 24, &qword_26A8E7200);
}

uint64_t sub_260DDD904()
{
  swift_bridgeObjectRelease();
  sub_260D90820(v0 + 24, &qword_26A8E7200);
  return swift_deallocClassInstance();
}

uint64_t sub_260DDD94C(uint64_t a1, uint64_t a2)
{
  return sub_260DDD548(a1, a2);
}

uint64_t sub_260DDD970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_260DDD628(a1, a2, a3);
}

uint64_t sub_260DDD994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_260DDD710(a1, a2, a3);
}

uint64_t sub_260DDD9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_260DDD7F8(a1, a2, a3);
}

uint64_t sub_260DDD9DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v32 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v33 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v6 = v39;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v35 = (void *)MEMORY[0x263F8EE78];
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    sub_260D90650(*(void *)(a1 + 56) + 32 * i, (uint64_t)&v41);
    *(void *)&long long v40 = v15;
    *((void *)&v40 + 1) = v16;
    long long v38 = v40;
    v39[0] = v41;
    v39[1] = v42;
    uint64_t v17 = v16;
    uint64_t v18 = v15;
    __swift_project_boxed_opaque_existential_1(v6, *((uint64_t *)&v42 + 1));
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t v20 = swift_conformsToProtocol2();
    if (v20) {
      uint64_t v21 = v20;
    }
    else {
      uint64_t v21 = 0;
    }
    if (!v20) {
      uint64_t DynamicType = 0;
    }
    if (DynamicType)
    {
      unint64_t v36 = v5;
      int64_t v22 = v8;
      unint64_t v23 = v2;
      uint64_t v24 = v6;
      uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8);
      swift_bridgeObjectRetain();
      uint64_t v26 = v25(v15, v16, DynamicType, v21);
      uint64_t v6 = v24;
      uint64_t v2 = v23;
      int64_t v8 = v22;
      unint64_t v5 = v36;
      uint64_t v18 = v26;
      uint64_t v17 = v27;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_260D90650((uint64_t)v6, (uint64_t)v37);
    JSONValue.init(_:)(&v43, v37);
    if (v2)
    {
      swift_bridgeObjectRelease();

      uint64_t result = sub_260D90820((uint64_t)&v38, &qword_26A8E7228);
      uint64_t v2 = 0;
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v28 = v43;
      sub_260D90820((uint64_t)&v38, &qword_26A8E7228);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_260DB1A50(0, v35[2] + 1, 1, v35);
        uint64_t v35 = (void *)result;
      }
      unint64_t v30 = v35[2];
      unint64_t v29 = v35[3];
      if (v30 >= v29 >> 1)
      {
        uint64_t result = (uint64_t)sub_260DB1A50((void *)(v29 > 1), v30 + 1, 1, v35);
        uint64_t v35 = (void *)result;
      }
      _OWORD v35[2] = v30 + 1;
      id v31 = &v35[3 * v30];
      v31[4] = v18;
      v31[5] = v17;
      v31[6] = v28;
      if (v5) {
        goto LABEL_4;
      }
    }
LABEL_5:
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v8 >= v33) {
      goto LABEL_39;
    }
    unint64_t v12 = *(void *)(v32 + 8 * v8);
    if (!v12) {
      break;
    }
LABEL_17:
    unint64_t v5 = (v12 - 1) & v12;
  }
  int64_t v13 = v8 + 1;
  if (v8 + 1 >= v33) {
    goto LABEL_39;
  }
  unint64_t v12 = *(void *)(v32 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v8 + 2;
  if (v8 + 2 >= v33) {
    goto LABEL_39;
  }
  unint64_t v12 = *(void *)(v32 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v8 + 3;
  if (v8 + 3 >= v33) {
    goto LABEL_39;
  }
  unint64_t v12 = *(void *)(v32 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v8 + 4;
  if (v8 + 4 >= v33)
  {
LABEL_39:
    swift_release();
    return (uint64_t)v35;
  }
  unint64_t v12 = *(void *)(v32 + 8 * v13);
  if (v12)
  {
LABEL_16:
    int64_t v8 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v33) {
      goto LABEL_39;
    }
    unint64_t v12 = *(void *)(v32 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_17;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t JSONValue.encode(to:)(void *a1)
{
  unint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FE53C0();
  switch(v2 >> 61)
  {
    case 1uLL:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
      sub_260FE5200();
      break;
    case 2uLL:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
      sub_260FE51F0();
      break;
    case 3uLL:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
      sub_260FE51E0();
      break;
    case 4uLL:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7198);
      sub_260DE1990(&qword_26A8E71A0, (void (*)(void))sub_260DE1730);
      goto LABEL_8;
    case 5uLL:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7160);
      sub_260DE17D8(&qword_26A8E7168, (void (*)(void))sub_260DE1730);
LABEL_8:
      sub_260FE5210();
      break;
    default:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
      sub_260FE51D0();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
}

uint64_t JSONValue.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FE5390();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    uint64_t v5 = sub_260FE5180();
    uint64_t v7 = v6;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v5;
    *(void *)(v8 + 24) = v7;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
    *a2 = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_260DDE388@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return JSONValue.init(from:)(a1, a2);
}

uint64_t sub_260DDE3A0(void *a1)
{
  return JSONValue.encode(to:)(a1);
}

uint64_t sub_260DDE3BC(uint64_t a1)
{
  uint64_t v1 = nullsub_1(a1);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static JSONKeyValueConvertible.jsonKey(from:)(uint64_t a1)
{
  uint64_t v1 = nullsub_1(a1);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_260DDE42C()
{
  uint64_t v0 = sub_260FE41F0();
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t result = sub_260DB484C(0, v0 & ~(v0 >> 63), 0);
    if ((v1 & 0x8000000000000000) == 0)
    {
      uint64_t v3 = 0;
      if ((0x8000000260FFC7B0 & 0x2000000000000000) != 0) {
        unint64_t v4 = (0x8000000260FFC7B0 & 0xF00000000000000) >> 54;
      }
      else {
        unint64_t v4 = 104;
      }
      uint64_t v17 = v1;
      while (v3 != v1)
      {
        uint64_t v5 = sub_260FE42D0();
        uint64_t v7 = v6;
        if ((((unint64_t)"Swift/Dictionary.swift" >> 61) & ((0x8000000260FFC7B0 & 0xF00000000000000) >> 54 == 0)) == 0)
        {
          unint64_t v8 = 15;
          while (sub_260FE42D0() != v5 || v9 != v7)
          {
            char v11 = sub_260FE5150();
            swift_bridgeObjectRelease();
            if (v11) {
              goto LABEL_18;
            }
            unint64_t v8 = sub_260FE4200();
            if (v4 == v8 >> 14) {
              goto LABEL_23;
            }
          }
          swift_bridgeObjectRelease();
LABEL_18:
          if (v8 >= 0x4000)
          {
            sub_260FE4210();
            uint64_t result = sub_260FE42D0();
          }
          else
          {
            uint64_t result = sub_260DDE698(0xD00000000000001ALL, 0x8000000260FFC7B0);
            if (!v12) {
              goto LABEL_29;
            }
          }
          uint64_t v5 = result;
          uint64_t v13 = v12;
          swift_bridgeObjectRelease();
          uint64_t v7 = v13;
        }
LABEL_23:
        unint64_t v15 = *(void *)(v18 + 16);
        unint64_t v14 = *(void *)(v18 + 24);
        if (v15 >= v14 >> 1) {
          sub_260DB484C(v14 > 1, v15 + 1, 1);
        }
        ++v3;
        *(void *)(v18 + 16) = v15 + 1;
        uint64_t v16 = v18 + 16 * v15;
        *(void *)(v16 + 32) = v5;
        *(void *)(v16 + 40) = v7;
        uint64_t result = sub_260FE4200();
        uint64_t v1 = v17;
        if (v3 == v17) {
          goto LABEL_26;
        }
      }
      __break(1u);
    }
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
LABEL_26:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E71B0);
    sub_260DE1E3C();
    return sub_260FE42E0();
  }
  return result;
}

uint64_t sub_260DDE698(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_260FE4210();
  return sub_260FE42D0();
}

uint64_t sub_260DDE718@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  id v4 = objc_msgSend(v1, sel_label);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_260FE40A0();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = objc_msgSend(v2, sel_label);
  if (v9)
  {
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_260FE40A0();

    uint64_t v6 = sub_260DDE42C();
    uint64_t v8 = v11;
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7218);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE8090;
  *(void *)(inited + 32) = 1701208435;
  *(void *)(inited + 40) = 0xE400000000000000;
  unsigned __int8 v13 = objc_msgSend(v2, sel_safe);
  uint64_t v14 = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 48) = v13;
  *(void *)(inited + 72) = v14;
  *(void *)(inited + 80) = 0x6C6562616CLL;
  *(void *)(inited + 88) = 0xE500000000000000;
  if (v8)
  {
    uint64_t v15 = MEMORY[0x263F8D310];
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v15 = 0;
    *(void *)(inited + 112) = 0;
  }
  *(void *)(inited + 96) = v6;
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 120) = v15;
  *(void *)(inited + 128) = 0x65726F6373;
  *(void *)(inited + 136) = 0xE500000000000000;
  id v16 = objc_msgSend(v2, sel_score);
  if (v16)
  {
    uint64_t v17 = v16;
    objc_msgSend(v16, sel_doubleValue);
    uint64_t v19 = v18;

    uint64_t v20 = MEMORY[0x263F8D538];
  }
  else
  {
    uint64_t v20 = 0;
    *(void *)(inited + 152) = 0;
    *(void *)(inited + 160) = 0;
    uint64_t v19 = 0;
  }
  *(void *)(inited + 144) = v19;
  *(void *)(inited + 168) = v20;
  unint64_t v21 = sub_260DAADC4(inited);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = sub_260DDEDC0(v21);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v22 + 16) = v23;
  *a1 = v22 | 0xA000000000000000;
  return result;
}

uint64_t sub_260DDE950(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v42 = a1 + 64;
  uint64_t v40 = MEMORY[0x263F8EE80];
  uint64_t v46 = MEMORY[0x263F8EE80];
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & v3;
  int64_t v41 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_21:
    uint64_t v14 = (uint64_t *)(*(void *)(v2 + 56) + 40 * v10);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v18 = v14[2];
    uint64_t v17 = (void *)v14[3];
    uint64_t v19 = v14[4];
    if (v17)
    {
      unint64_t v43 = v6;
      uint64_t v20 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
      uint64_t v22 = *v20;
      uint64_t v21 = v20[1];
      v44[3] = &type metadata for ResolvedImage;
      uint64_t v23 = swift_allocObject();
      v44[0] = v23;
      *(void *)(v23 + 16) = v16;
      *(void *)(v23 + 24) = v15;
      *(_DWORD *)(v23 + 32) = v18;
      *(void *)(v23 + 40) = v17;
      *(void *)(v23 + 48) = v19;
      sub_260DC71A4(v16, v15, v18, v17);
      sub_260DC71A4(v16, v15, v18, v17);
      sub_260DC71A4(v16, v15, v18, v17);
      swift_bridgeObjectRetain();
      JSONValue.init(_:)(v44, &v45);
      if (v1)
      {

        sub_260DC6EDC(v16, v15, v18, v17);
        swift_bridgeObjectRelease();
        uint64_t result = sub_260DC6EDC(v16, v15, v18, v17);
        uint64_t v1 = 0;
        unint64_t v6 = v43;
      }
      else
      {
        uint64_t v39 = v22;
        uint64_t v38 = v2;
        sub_260DC6EDC(v16, v15, v18, v17);
        uint64_t v24 = v45;
        uint64_t v25 = v40;
        unint64_t v26 = *(void *)(v40 + 16);
        if (*(void *)(v40 + 24) <= v26)
        {
          sub_260DBF144(v26 + 1, 1);
          uint64_t v25 = v46;
        }
        uint64_t v40 = v25;
        sub_260FE52F0();
        sub_260FE41D0();
        uint64_t result = sub_260FE5340();
        uint64_t v27 = v40 + 64;
        uint64_t v28 = -1 << *(unsigned char *)(v40 + 32);
        unint64_t v29 = result & ~v28;
        unint64_t v30 = v29 >> 6;
        unint64_t v6 = v43;
        uint64_t v31 = v24;
        if (((-1 << v29) & ~*(void *)(v40 + 64 + 8 * (v29 >> 6))) == 0)
        {
          char v33 = 0;
          unint64_t v34 = (unint64_t)(63 - v28) >> 6;
          uint64_t v2 = v38;
          while (++v30 != v34 || (v33 & 1) == 0)
          {
            BOOL v35 = v30 == v34;
            if (v30 == v34) {
              unint64_t v30 = 0;
            }
            v33 |= v35;
            uint64_t v36 = *(void *)(v27 + 8 * v30);
            if (v36 != -1)
            {
              unint64_t v32 = __clz(__rbit64(~v36)) + (v30 << 6);
              goto LABEL_40;
            }
          }
          goto LABEL_43;
        }
        unint64_t v32 = __clz(__rbit64((-1 << v29) & ~*(void *)(v40 + 64 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
        uint64_t v2 = v38;
LABEL_40:
        *(void *)(v27 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
        uint64_t v37 = (void *)(*(void *)(v40 + 48) + 16 * v32);
        *uint64_t v37 = v39;
        v37[1] = v21;
        *(void *)(*(void *)(v40 + 56) + 8 * v32) = v31;
        ++*(void *)(v40 + 16);
        uint64_t result = sub_260DC6EDC(v16, v15, v18, v17);
        uint64_t v1 = 0;
      }
    }
    else
    {
      uint64_t result = sub_260DC6EDC(*v14, v14[1], v14[2], 0);
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v11 >= v41) {
    goto LABEL_41;
  }
  unint64_t v12 = *(void *)(v42 + 8 * v11);
  if (v12)
  {
LABEL_20:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v11 << 6);
    int64_t v8 = v11;
    goto LABEL_21;
  }
  int64_t v13 = v8 + 2;
  if (v8 + 2 >= v41) {
    goto LABEL_41;
  }
  unint64_t v12 = *(void *)(v42 + 8 * v13);
  if (v12) {
    goto LABEL_19;
  }
  int64_t v13 = v8 + 3;
  if (v8 + 3 >= v41) {
    goto LABEL_41;
  }
  unint64_t v12 = *(void *)(v42 + 8 * v13);
  if (v12) {
    goto LABEL_19;
  }
  int64_t v13 = v8 + 4;
  if (v8 + 4 >= v41) {
    goto LABEL_41;
  }
  unint64_t v12 = *(void *)(v42 + 8 * v13);
  if (v12) {
    goto LABEL_19;
  }
  int64_t v13 = v8 + 5;
  if (v8 + 5 >= v41)
  {
LABEL_41:
    sub_260DD782C();
    return v40;
  }
  unint64_t v12 = *(void *)(v42 + 8 * v13);
  if (v12)
  {
LABEL_19:
    int64_t v11 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v11 >= v41) {
      goto LABEL_41;
    }
    unint64_t v12 = *(void *)(v42 + 8 * v11);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_260DDEDC0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = MEMORY[0x263F8EE80];
  uint64_t v41 = MEMORY[0x263F8EE80];
  uint64_t v5 = a1 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v32 = (unint64_t)(63 - v6) >> 6;
  uint64_t v42 = v38;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v31 = v5;
  if (!v8) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v12 = v11 | (v10 << 6);
  while (1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_260D907BC(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40, (uint64_t *)&unk_26A8EA270);
    *(void *)&long long v39 = v18;
    *((void *)&v39 + 1) = v17;
    long long v37 = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    sub_260D907BC((uint64_t)v42, (uint64_t)&v34, (uint64_t *)&unk_26A8EA270);
    if (!v35[1])
    {
      swift_bridgeObjectRetain();
      sub_260D90820((uint64_t)&v34, (uint64_t *)&unk_26A8EA270);
LABEL_23:
      uint64_t result = sub_260D90820((uint64_t)&v37, &qword_26A8E7220);
      if (v8) {
        goto LABEL_5;
      }
      goto LABEL_6;
    }
    sub_260D906FC(&v34, v33);
    sub_260D90650((uint64_t)v33, (uint64_t)&v34);
    swift_bridgeObjectRetain();
    JSONValue.init(_:)(&v34, &v36);
    if (v2)
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
      uint64_t v2 = 0;
      goto LABEL_23;
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
    uint64_t v19 = v36;
    long long v20 = v37;
    long long v34 = v37;
    sub_260DE2AA0((uint64_t)v42, (uint64_t)v35);
    unint64_t v21 = *(void *)(v4 + 16);
    if (*(void *)(v4 + 24) <= v21)
    {
      sub_260DBF144(v21 + 1, 1);
      uint64_t v4 = v41;
    }
    sub_260FE52F0();
    sub_260FE41D0();
    uint64_t result = sub_260FE5340();
    uint64_t v22 = v4 + 64;
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v4 + 64 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v4 + 64 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v22 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v22 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v26) = v20;
    *(void *)(*(void *)(v4 + 56) + 8 * v26) = v19;
    ++*(void *)(v4 + 16);
    uint64_t result = sub_260D90820((uint64_t)v35, (uint64_t *)&unk_26A8EA270);
    uint64_t v5 = v31;
    if (v8) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v13 >= v32) {
      goto LABEL_43;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    if (!v14) {
      break;
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    int64_t v10 = v13;
  }
  int64_t v15 = v10 + 2;
  if (v10 + 2 >= v32) {
    goto LABEL_43;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v10 + 3;
  if (v10 + 3 >= v32) {
    goto LABEL_43;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v10 + 4;
  if (v10 + 4 >= v32) {
    goto LABEL_43;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  int64_t v15 = v10 + 5;
  if (v10 + 5 >= v32)
  {
LABEL_43:
    sub_260DD782C();
    return v4;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
LABEL_17:
    int64_t v13 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v32) {
      goto LABEL_43;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t protocol witness for JSONKeyValueConvertible.jsonValue.getter in conformance SCMLTextSanitizationSignal@<X0>(unint64_t *a1@<X8>)
{
  return sub_260DDE718(a1);
}

uint64_t sub_260DDF1D4@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7218);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7060;
  *(void *)(inited + 32) = 1701208435;
  *(void *)(inited + 40) = 0xE400000000000000;
  unsigned __int8 v5 = objc_msgSend(v2, sel_safe);
  uint64_t v6 = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 48) = v5;
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = 0x65726F6373;
  *(void *)(inited + 88) = 0xE500000000000000;
  id v7 = objc_msgSend(v2, sel_score);
  if (v7)
  {
    unint64_t v8 = v7;
    objc_msgSend(v7, sel_doubleValue);
    uint64_t v10 = v9;

    uint64_t v11 = MEMORY[0x263F8D538];
  }
  else
  {
    uint64_t v11 = 0;
    *(void *)(inited + 104) = 0;
    *(void *)(inited + 112) = 0;
    uint64_t v10 = 0;
  }
  *(void *)(inited + 96) = v10;
  *(void *)(inited + 120) = v11;
  unint64_t v12 = sub_260DAADC4(inited);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = sub_260DDEDC0(v12);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v13 + 16) = v14;
  *a1 = v13 | 0xA000000000000000;
  return result;
}

uint64_t _sSo26SCMLTextSanitizationSignalC16VisualGeneration23JSONKeyValueConvertibleA2cDP7jsonKey4fromS2S_tFZTW_0(uint64_t a1, uint64_t a2)
{
  return sub_260FE42E0();
}

uint64_t protocol witness for JSONKeyValueConvertible.jsonValue.getter in conformance SCMLImageSanitizationSignal@<X0>(unint64_t *a1@<X8>)
{
  return sub_260DDF1D4(a1);
}

uint64_t Concept.jsonValue.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for NamedEntityData(0);
  MEMORY[0x270FA5388](v4 - 8, v5);
  id v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for Concept(0);
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (uint64_t *)&v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_260DE1E98(v2, (uint64_t)v11);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v12 = *v11;
      uint64_t v13 = v11[1];
      uint64_t v14 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F18);
      uint64_t inited = swift_initStackObject();
      uint64_t v16 = inited;
      *(_OWORD *)(inited + 16) = xmmword_260FE7080;
      uint64_t v17 = 0x696A6F6D65;
      unint64_t v18 = 0xE500000000000000;
      goto LABEL_6;
    case 2u:
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = sub_260DAACA8(MEMORY[0x263F8EE78]);
      *a1 = v19 | 0xA000000000000000;
      return sub_260DE28F4((uint64_t)v11, type metadata accessor for Concept);
    case 3u:
      uint64_t v12 = *v11;
      uint64_t v13 = v11[1];
      uint64_t v14 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F18);
      uint64_t inited = swift_initStackObject();
      uint64_t v16 = inited;
      *(_OWORD *)(inited + 16) = xmmword_260FE7080;
      uint64_t v17 = 0x45636972656E6567;
      unint64_t v18 = 0xED0000797469746ELL;
      goto LABEL_6;
    case 4u:
      sub_260DE2844((uint64_t)v11, (uint64_t)v7, type metadata accessor for NamedEntityData);
      uint64_t v23 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F18);
      uint64_t v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_260FE7080;
      *(void *)(v24 + 32) = 0x746E4564656D616ELL;
      *(void *)(v24 + 40) = 0xEB00000000797469;
      uint64_t v25 = swift_allocObject();
      uint64_t v26 = v7[1];
      *(void *)(v25 + 16) = *v7;
      *(void *)(v25 + 24) = v26;
      *(void *)(v24 + 48) = v25;
      swift_bridgeObjectRetain();
      unint64_t v27 = sub_260DAACA8(v24);
      uint64_t result = sub_260DE28F4((uint64_t)v7, type metadata accessor for NamedEntityData);
      *(void *)(v23 + 16) = v27;
      unint64_t v22 = v23 | 0xA000000000000000;
      goto LABEL_8;
    default:
      uint64_t v12 = *v11;
      uint64_t v13 = v11[1];
      uint64_t v14 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F18);
      uint64_t inited = swift_initStackObject();
      uint64_t v16 = inited;
      *(_OWORD *)(inited + 16) = xmmword_260FE7080;
      uint64_t v17 = 1853189998;
      unint64_t v18 = 0xE400000000000000;
LABEL_6:
      *(void *)(inited + 32) = v17;
      *(void *)(inited + 40) = v18;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v12;
      *(void *)(v21 + 24) = v13;
      *(void *)(v16 + 48) = v21;
      uint64_t result = sub_260DAACA8(v16);
      *(void *)(v14 + 16) = result;
      unint64_t v22 = v14 | 0xA000000000000000;
LABEL_8:
      *a1 = v22;
      return result;
  }
}

uint64_t sub_260DDF744@<X0>(unint64_t *a1@<X8>)
{
  long long v92 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E71E0);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v90 = (uint64_t)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AugmentedPrompt();
  uint64_t v88 = *(void *)(v5 - 8);
  uint64_t v89 = v5;
  MEMORY[0x270FA5388](v5, v6);
  uint64_t v79 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E71E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE80A0;
  *(void *)(inited + 32) = 0xD000000000000014;
  *(void *)(inited + 40) = 0x8000000260FFB5F0;
  uint64_t v9 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v10 = (uint64_t *)(v1 + v9[17]);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = v10[2];
  uint64_t v14 = (void *)v10[3];
  uint64_t v15 = v10[4];
  *(void *)(inited + 48) = *v10;
  *(void *)(inited + 56) = v12;
  *(void *)(inited + 64) = v13;
  *(void *)(inited + 72) = v14;
  *(void *)(inited + 80) = v15;
  *(void *)(inited + 88) = 0xD000000000000012;
  *(void *)(inited + 96) = 0x8000000260FFB610;
  uint64_t v16 = (uint64_t *)(v1 + v9[18]);
  uint64_t v17 = *v16;
  uint64_t v19 = v16[2];
  long long v20 = (void *)v16[3];
  uint64_t v21 = v16[4];
  uint64_t v86 = v16[1];
  uint64_t v18 = v86;
  uint64_t v87 = v17;
  *(void *)(inited + 104) = v17;
  *(void *)(inited + 112) = v18;
  long long v84 = v20;
  uint64_t v85 = v19;
  *(void *)(inited + 120) = v19;
  *(void *)(inited + 128) = v20;
  uint64_t v83 = v21;
  *(void *)(inited + 136) = v21;
  *(void *)(inited + 144) = 0xD000000000000017;
  *(void *)(inited + 152) = 0x8000000260FFC8D0;
  unint64_t v22 = (long long *)(v1 + v9[22]);
  uint64_t v23 = (void *)*((void *)v22 + 3);
  if (v23)
  {
    uint64_t v24 = *((void *)v22 + 4);
    id v91 = (int *)*((unsigned int *)v22 + 4);
    long long v82 = *v22;
    uint64_t v93 = v11;
    uint64_t v25 = v12;
    uint64_t v26 = v13;
    unint64_t v27 = v14;
    id v28 = v23;
    swift_retain();
    long long v29 = v82;
    uint64_t v30 = v91;
    uint64_t v14 = v27;
    uint64_t v13 = v26;
    uint64_t v12 = v25;
    uint64_t v11 = v93;
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v24 = 0;
    long long v29 = 0uLL;
  }
  *(_OWORD *)(inited + 160) = v29;
  *(void *)(inited + 176) = v30;
  *(void *)(inited + 184) = v23;
  *(void *)(inited + 192) = v24;
  strcpy((char *)(inited + 200), "doiBaseImage");
  *(unsigned char *)(inited + 213) = 0;
  *(_WORD *)(inited + 214) = -5120;
  id v91 = v9;
  uint64_t v31 = (uint64_t *)(v1 + v9[20]);
  uint64_t v32 = *v31;
  uint64_t v33 = v31[1];
  BOOL v35 = (void *)v31[3];
  uint64_t v81 = v31[2];
  uint64_t v34 = v81;
  *(void *)&long long v82 = v32;
  long long v80 = v35;
  uint64_t v36 = v31[4];
  *(void *)(inited + 216) = v32;
  *(void *)(inited + 224) = v33;
  *(void *)(inited + 232) = v34;
  *(void *)(inited + 240) = v35;
  *(void *)(inited + 248) = v36;
  strcpy((char *)(inited + 256), "doiSketchMask");
  *(_WORD *)(inited + 270) = -4864;
  uint64_t v93 = v1;
  uint64_t v38 = v31[5];
  uint64_t v37 = v31[6];
  uint64_t v40 = v31[7];
  long long v39 = (void *)v31[8];
  uint64_t v41 = v31[9];
  *(void *)(inited + 272) = v38;
  *(void *)(inited + 280) = v37;
  *(void *)(inited + 288) = v40;
  *(void *)(inited + 296) = v39;
  *(void *)(inited + 304) = v41;
  sub_260DC71A4(v11, v12, v13, v14);
  sub_260DC71A4(v87, v86, v85, v84);
  sub_260DC71A4(v82, v33, v81, v80);
  uint64_t v42 = v38;
  uint64_t v43 = v93;
  sub_260DC71A4(v42, v37, v40, v39);
  unint64_t v44 = sub_260DAAB4C(inited);
  uint64_t v45 = sub_260DDE950(v44);
  swift_bridgeObjectRelease();
  uint64_t v46 = v90;
  sub_260E06808(v90);
  uint64_t v48 = v88;
  uint64_t v47 = v89;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v88 + 56))(v46, 0, 1, v89);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
  {
    sub_260D90820(v46, &qword_26A8E71E0);
  }
  else
  {
    uint64_t v68 = v79;
    sub_260DE2844(v46, v79, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    uint64_t v69 = swift_allocObject();
    uint64_t v70 = sub_260FE2BC0();
    MEMORY[0x270FA5388](v70, v71);
    sub_260FE2BA0();
    sub_260DE28AC((unint64_t *)&qword_26A8E71F0, MEMORY[0x270FA8470]);
    *(void *)(v69 + 16) = sub_260FE42E0();
    *(void *)(v69 + 24) = v72;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v94 = v45;
    sub_260DE04AC(v69, 0x656C626D65737361, 0xEF74706D6F725064, isUniquelyReferenced_nonNull_native);
    uint64_t v74 = v94;
    swift_bridgeObjectRelease();
    uint64_t v75 = swift_allocObject();
    sub_260FE2D00();
    sub_260DE28AC((unint64_t *)&qword_26A8E71F8, MEMORY[0x270FA8638]);
    *(void *)(v75 + 16) = sub_260FE2E80();
    *(void *)(v75 + 24) = v76;
    char v77 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v94 = v74;
    sub_260DE04AC(v75, 0xD000000000000018, 0x8000000260FFC8F0, v77);
    uint64_t v45 = v94;
    swift_bridgeObjectRelease();
    sub_260DE28F4(v68, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  }
  uint64_t v49 = *(void *)(v43 + 64);
  int64_t v50 = *(void *)(v49 + 16);
  uint64_t v51 = MEMORY[0x263F8EE78];
  if (v50)
  {
    uint64_t v94 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_260DB482C(0, v50, 0);
    uint64_t v52 = 0;
    uint64_t v51 = v94;
    do
    {
      unint64_t v53 = 0xE90000000000006ELL;
      uint64_t v54 = 0x6F6974616D696E61;
      switch(*(unsigned char *)(v49 + v52 + 32))
      {
        case 1:
          unint64_t v53 = 0xE500000000000000;
          uint64_t v54 = 0x696A6F6D65;
          break;
        case 2:
          unint64_t v53 = 0xEC0000006E6F6974;
          uint64_t v54 = 0x61727473756C6C69;
          break;
        case 3:
          unint64_t v53 = 0xE700000000000000;
          uint64_t v54 = 0x747241656E696CLL;
          break;
        case 4:
          unint64_t v53 = 0xE600000000000000;
          uint64_t v54 = 0x686374656B73;
          break;
        default:
          break;
      }
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = v54;
      *(void *)(v55 + 24) = v53;
      uint64_t v94 = v51;
      unint64_t v57 = *(void *)(v51 + 16);
      unint64_t v56 = *(void *)(v51 + 24);
      if (v57 >= v56 >> 1)
      {
        sub_260DB482C(v56 > 1, v57 + 1, 1);
        uint64_t v51 = v94;
      }
      ++v52;
      *(void *)(v51 + 16) = v57 + 1;
      *(void *)(v51 + 8 * v57 + 32) = v55;
    }
    while (v50 != v52);
    swift_bridgeObjectRelease();
    uint64_t v43 = v93;
  }
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = v51;
  unint64_t v59 = v58 | 0x8000000000000000;
  char v60 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v94 = v45;
  sub_260DE04AC(v59, 0x7974536567616D69, 0xEB0000000073656CLL, v60);
  uint64_t v61 = v94;
  swift_bridgeObjectRelease();
  uint64_t v62 = v43 + v91[9];
  if ((*(unsigned char *)(v62 + 4) & 1) == 0)
  {
    float v63 = *(float *)v62;
    uint64_t v64 = swift_allocObject();
    *(double *)(v64 + 16) = v63;
    uint64_t v65 = v64 | 0x4000000000000000;
    char v66 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v94 = v61;
    sub_260DE04AC(v65, 0xD000000000000010, 0x8000000260FFB6E0, v66);
    uint64_t v61 = v94;
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v61;
  unint64_t *v92 = result | 0xA000000000000000;
  return result;
}

uint64_t sub_260DDFF64(uint64_t a1)
{
  return a1;
}

uint64_t sub_260DDFF9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_260F4DC30();
  if (v3 >> 60 == 15)
  {
    uint64_t result = swift_allocObject();
    uint64_t v5 = result;
    *(void *)(result + 16) = 0xD000000000000017;
    unint64_t v6 = 0x8000000260FFC910;
  }
  else
  {
    uint64_t v7 = v2;
    unint64_t v8 = v3;
    uint64_t v5 = swift_allocObject();
    uint64_t v9 = sub_260FE3000();
    unint64_t v6 = v10;
    uint64_t result = sub_260DE2994(v7, v8);
    *(void *)(v5 + 16) = v9;
  }
  *(void *)(v5 + 24) = v6;
  *a1 = v5;
  return result;
}

_OWORD *sub_260DE0084(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_260FE4DD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v3;
  unint64_t v15 = sub_260DBB004(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 < v18 || (a3 & 1) == 0)
  {
    if (v20 >= v18 && (a3 & 1) == 0)
    {
      sub_260DC1CA0();
      goto LABEL_7;
    }
    sub_260DBD9D8(v18, a3 & 1);
    unint64_t v24 = sub_260DBB004(a2);
    if ((v19 & 1) == (v25 & 1))
    {
      unint64_t v15 = v24;
      uint64_t v21 = *v4;
      if (v19) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
      return sub_260DEBF64(v15, (uint64_t)v12, a1, v21);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_260FE5280();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v21 = *v4;
  if ((v19 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  unint64_t v22 = (_OWORD *)(v21[7] + 32 * v15);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  return sub_260D906FC(a1, v22);
}

uint64_t sub_260DE025C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v10 = sub_260DBADF0(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = *(void *)(v16 + 56);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_260DC20E8();
    goto LABEL_7;
  }
  sub_260DBE0C4(v13, a3 & 1);
  uint64_t v19 = sub_260DBADF0(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    uint64_t result = sub_260FE5280();
    __break(1u);
    return result;
  }
  uint64_t v10 = v19;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_260DEC024(v10, a2, a1, v16);
}

uint64_t sub_260DE0384(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_260DBAD2C(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = *(void *)(v16 + 56);
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_260DC20F4();
    goto LABEL_7;
  }
  sub_260DBE4D8(v13, a3 & 1);
  unint64_t v19 = sub_260DBAD2C(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    uint64_t result = sub_260FE5280();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_260DEC024(v10, a2, a1, v16);
}

uint64_t sub_260DE04AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_260DBACB4(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_260DC27B8();
    goto LABEL_7;
  }
  sub_260DBF144(v15, a4 & 1);
  unint64_t v21 = sub_260DBACB4(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_260FE5280();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_260DEBF1C(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_260DE05F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_260DBACB4(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_260DC1AF0();
    goto LABEL_7;
  }
  sub_260DBD6CC(result, a4 & 1);
  uint64_t result = sub_260DBACB4(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_15:
    uint64_t result = sub_260FE5280();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_260DEBF1C(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

void sub_260DE0724(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  unint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_260DBB2E4(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    char v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 16 * v14;

      *(void *)uint64_t v21 = a1;
      *(unsigned char *)(v21 + 8) = a2;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_260DC2974();
    goto LABEL_7;
  }
  sub_260DBF458(v17, a5 & 1);
  unint64_t v22 = sub_260DBB2E4(a3, a4);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_15:
    sub_260FE5280();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  char v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_260DEC06C(v14, a3, a4, a1, a2, v20);
}

_OWORD *sub_260DE0874(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_260DBACB4(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_260DC2B28();
      goto LABEL_7;
    }
    sub_260DBF760(v15, a4 & 1);
    unint64_t v21 = sub_260DBACB4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_260FE5280();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
    return sub_260D906FC(a1, v19);
  }
LABEL_13:
  sub_260DEC0C0(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_260DE09C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  unint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_260DBACB4(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    char v20 = *v6;
    if (v18)
    {
LABEL_8:
      unint64_t v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_260DC2D10();
    goto LABEL_7;
  }
  sub_260DBFA60(v17, a5 & 1);
  unint64_t v23 = sub_260DBACB4(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_260FE5280();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_260DEC12C(v14, a3, a4, a1, a2, v20);
  return swift_bridgeObjectRetain();
}

_OWORD *sub_260DE0B1C(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_260DBAEA0(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_260DC2EC8();
      goto LABEL_7;
    }
    sub_260DBFD6C(v13, a3 & 1);
    unint64_t v19 = sub_260DBAEA0(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_260DD6B7C(a2, (uint64_t)v21);
      return sub_260DEC17C(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_260FE5280();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return sub_260D906FC(a1, v17);
}

uint64_t sub_260DE0C68(int a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v7 = a2 & 1;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_260DBAF94(a2 & 1);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7] + 3 * v10;
      *(_WORD *)uint64_t v17 = a1;
      *(unsigned char *)(v17 + 2) = BYTE2(a1);
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_260DC1F48();
    goto LABEL_7;
  }
  sub_260DBDDD4(result, a3 & 1);
  uint64_t result = sub_260DBAF94(v7);
  if ((v14 & 1) != (v18 & 1))
  {
LABEL_15:
    uint64_t result = sub_260FE5280();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  BOOL v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_260DEC1F8(v10, v7, a1 & 0xFFFFFF, v16);
}

uint64_t sub_260DE0D9C(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_260DBB068(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_260DC3330();
      goto LABEL_7;
    }
    sub_260DC0430(v13, a3 & 1);
    unint64_t v20 = sub_260DBB068(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_260FE5280();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = v17
        + *(void *)(*(void *)(type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(0)
                                - 8)
                    + 72)
        * v10;
    return sub_260DE29A8(a1, v18);
  }
LABEL_13:
  return sub_260DEC258(v10, a2, a1, v16);
}

uint64_t sub_260DE0EE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_260DBACB4(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_260DC2458();
    goto LABEL_7;
  }
  sub_260DBEB40(v15, a4 & 1);
  unint64_t v21 = sub_260DBACB4(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_260FE5280();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_260DEBF1C(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

void sub_260DE1028(void *a1, char a2, void *a3)
{
  LOBYTE(v4) = a2;
  uint64_t v6 = a1[2];
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_23;
  }
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[4];
  swift_bridgeObjectRetain();
  swift_retain();
  if (!v7) {
    goto LABEL_23;
  }
  unint64_t v10 = (void *)*a3;
  unint64_t v11 = sub_260DBACB4(v9, v7);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  BOOL v15 = __OFADD__(v13, v14);
  uint64_t v16 = v13 + v14;
  if (v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v17 = v12;
  if (v10[3] < v16)
  {
    sub_260DBF144(v16, v4 & 1);
    unint64_t v11 = sub_260DBACB4(v9, v7);
    if ((v17 & 1) == (v18 & 1)) {
      goto LABEL_8;
    }
LABEL_6:
    unint64_t v11 = sub_260FE5280();
    __break(1u);
  }
  if (v4)
  {
LABEL_8:
    if (v17) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  unint64_t v21 = v11;
  sub_260DC27B8();
  unint64_t v11 = v21;
  if (v17)
  {
LABEL_9:
    uint64_t v19 = (void *)swift_allocError();
    swift_willThrow();
    id v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_release();

      return;
    }
    goto LABEL_28;
  }
LABEL_12:
  char v22 = (void *)*a3;
  *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
  unint64_t v23 = (uint64_t *)(v22[6] + 16 * v11);
  *unint64_t v23 = v9;
  v23[1] = v7;
  *(void *)(v22[7] + 8 * v11) = v8;
  uint64_t v24 = v22[2];
  BOOL v15 = __OFADD__(v24, 1);
  uint64_t v25 = v24 + 1;
  if (v15)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_260FE4C20();
    sub_260FE4250();
    sub_260FE4DA0();
    sub_260FE4250();
    sub_260FE4E20();
    __break(1u);
    return;
  }
  void v22[2] = v25;
  if (v6 != 1)
  {
    uint64_t v4 = a1 + 9;
    unint64_t v26 = 1;
    while (v26 < a1[2])
    {
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      uint64_t v9 = *(v4 - 2);
      swift_bridgeObjectRetain();
      swift_retain();
      if (!v7) {
        goto LABEL_23;
      }
      unint64_t v27 = (void *)*a3;
      unint64_t v28 = sub_260DBACB4(v9, v7);
      uint64_t v30 = v27[2];
      BOOL v31 = (v29 & 1) == 0;
      BOOL v15 = __OFADD__(v30, v31);
      uint64_t v32 = v30 + v31;
      if (v15) {
        goto LABEL_25;
      }
      char v17 = v29;
      if (v27[3] < v32)
      {
        sub_260DBF144(v32, 1);
        unint64_t v28 = sub_260DBACB4(v9, v7);
        if ((v17 & 1) != (v33 & 1)) {
          goto LABEL_6;
        }
      }
      if (v17) {
        goto LABEL_9;
      }
      uint64_t v34 = (void *)*a3;
      *(void *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
      BOOL v35 = (uint64_t *)(v34[6] + 16 * v28);
      uint64_t *v35 = v9;
      v35[1] = v7;
      *(void *)(v34[7] + 8 * v28) = v8;
      uint64_t v36 = v34[2];
      BOOL v15 = __OFADD__(v36, 1);
      uint64_t v37 = v36 + 1;
      if (v15) {
        goto LABEL_26;
      }
      ++v26;
      v34[2] = v37;
      v4 += 3;
      if (v6 == v26) {
        goto LABEL_23;
      }
    }
    goto LABEL_27;
  }
LABEL_23:
  swift_bridgeObjectRelease_n();
}

uint64_t sub_260DE13D4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_260DE140C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_260DE141C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_260DE142C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_260DE1464(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D18);
  uint64_t result = sub_260FE4E60();
  unint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v27 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v25 = v6;
  int64_t v26 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    char v17 = (uint64_t *)(*(void *)(v27 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v29 = *(void *)(*(void *)(v27 + 56) + 8 * i);
    uint64_t v20 = swift_bridgeObjectRetain();
    JSONValue.value.getter(v28, v20);
    *(void *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    unint64_t v21 = (void *)(v3[6] + 16 * i);
    *unint64_t v21 = v18;
    v21[1] = v19;
    uint64_t result = (uint64_t)sub_260D906FC(v28, (_OWORD *)(v3[7] + 32 * i));
    uint64_t v22 = v3[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v24;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v14 >= v26) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v26) {
        return (uint64_t)v3;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v14 + 2;
        if (v14 + 2 >= v26) {
          return (uint64_t)v3;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v4);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v26) {
    return (uint64_t)v3;
  }
  unint64_t v15 = *(void *)(v25 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v26) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_260DE1670(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

unint64_t sub_260DE1688()
{
  unint64_t result = qword_26A8E7150;
  if (!qword_26A8E7150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7150);
  }
  return result;
}

unint64_t sub_260DE16DC()
{
  unint64_t result = qword_26A8E7158;
  if (!qword_26A8E7158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7158);
  }
  return result;
}

unint64_t sub_260DE1730()
{
  unint64_t result = qword_26A8E7170;
  if (!qword_26A8E7170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7170);
  }
  return result;
}

unint64_t sub_260DE1784()
{
  unint64_t result = qword_26A8E7180;
  if (!qword_26A8E7180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7180);
  }
  return result;
}

uint64_t sub_260DE17D8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8E7160);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_260DE1854()
{
  unint64_t result = qword_26A8E7190;
  if (!qword_26A8E7190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7190);
  }
  return result;
}

uint64_t sub_260DE18A8()
{
  return sub_260DDD1E4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_260DE18CC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_260DE18F4@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

void *sub_260DE1944@<X0>(void *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

void sub_260DE1988(uint64_t a1)
{
  sub_260DDD384(a1, v1);
}

uint64_t sub_260DE1990(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8E7198);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s16VisualGeneration9JSONValueO2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch((unint64_t)*a1 >> 61)
  {
    case 1uLL:
      if (v3 >> 61 != 1) {
        goto LABEL_22;
      }
      char v6 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      return v6 & 1;
    case 2uLL:
      if (v3 >> 61 == 2
        && *(double *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) == *(double *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10))
      {
        goto LABEL_14;
      }
      goto LABEL_22;
    case 3uLL:
      if (v3 >> 61 != 3) {
        goto LABEL_22;
      }
      char v6 = *(unsigned char *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) ^ *(unsigned char *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) ^ 1;
      return v6 & 1;
    case 4uLL:
      if (v3 >> 61 != 4) {
        goto LABEL_22;
      }
      uint64_t v7 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v8 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      char v9 = sub_260E3A838(v7, v8);
      goto LABEL_21;
    case 5uLL:
      if (v3 >> 61 != 5) {
        goto LABEL_22;
      }
      uint64_t v10 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      char v9 = sub_260DDC46C(v10, v11);
LABEL_21:
      char v12 = v9;
      swift_release();
      swift_release();
      return v12 & 1;
    default:
      if (v3 >> 61)
      {
LABEL_22:
        char v6 = 0;
        return v6 & 1;
      }
      if (*(void *)(v2 + 16) == *(void *)(v3 + 16) && *(void *)(v2 + 24) == *(void *)(v3 + 24))
      {
LABEL_14:
        char v6 = 1;
        return v6 & 1;
      }
      return sub_260FE5150();
  }
}

uint64_t sub_260DE1BBC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = sub_260FE41F0();
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  uint64_t v7 = v5;
  uint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t result = sub_260DB484C(0, v5 & ~(v5 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = v21;
    do
    {
      uint64_t v9 = sub_260FE42D0();
      uint64_t v11 = v10;
      unint64_t v12 = sub_260DE5038(v9, v10, a3, a4);
      if ((v13 & 1) == 0)
      {
        if (v12 >= 0x4000)
        {
          sub_260FE4210();
          uint64_t v9 = sub_260FE42D0();
          uint64_t v15 = v16;
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v9 = sub_260DDE698(a3, a4);
          uint64_t v15 = v14;
          uint64_t result = swift_bridgeObjectRelease();
          if (!v15) {
            goto LABEL_15;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v11 = v15;
      }
      unint64_t v18 = *(void *)(v21 + 16);
      unint64_t v17 = *(void *)(v21 + 24);
      if (v18 >= v17 >> 1) {
        sub_260DB484C(v17 > 1, v18 + 1, 1);
      }
      *(void *)(v21 + 16) = v18 + 1;
      uint64_t v19 = v21 + 16 * v18;
      *(void *)(v19 + 32) = v9;
      *(void *)(v19 + 40) = v11;
      sub_260FE4200();
      --v7;
    }
    while (v7);
    return v6;
  }
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_260DE1D58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_260DE1E3C()
{
  unint64_t result = qword_26A8E71B8;
  if (!qword_26A8E71B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8E71B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E71B8);
  }
  return result;
}

uint64_t sub_260DE1E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Concept(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_260DE1F00()
{
  unint64_t result = qword_26A8E71C0;
  if (!qword_26A8E71C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E71C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ForensicsReportType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260DE2020);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForensicsReportType()
{
  return &type metadata for ForensicsReportType;
}

uint64_t initializeBufferWithCopyOfBuffer for ForensicsReport(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ForensicsReport(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ForensicsReport(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ForensicsReport(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForensicsReport(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForensicsReport()
{
  return &type metadata for ForensicsReport;
}

uint64_t type metadata accessor for ForensicRecord()
{
  return self;
}

uint64_t method lookup function for ForensicRecord(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ForensicRecord);
}

uint64_t dispatch thunk of ForensicRecord.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ForensicRecord.record(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ForensicRecord.reports.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ForensicRecord.createForensicsReporter()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t type metadata accessor for ForensicsHandler()
{
  return self;
}

uint64_t type metadata accessor for ForensicsReportingImageGenerationDelegate()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for JSONValueError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_260DE22F0(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_260DE22F0(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for JSONValueError(uint64_t a1)
{
  return sub_260DE230C(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_260DE230C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t assignWithCopy for JSONValueError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_260DE22F0(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_260DE230C(v5, v6);
  return a1;
}

uint64_t assignWithTake for JSONValueError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_260DE230C(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PipelineConfiguration.LatentInitializer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PipelineConfiguration.LatentInitializer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_260DE2438(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_260DE2440(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for JSONValueError()
{
  return &type metadata for JSONValueError;
}

void *initializeBufferWithCopyOfBuffer for JSONValue(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for JSONValue()
{
  return swift_release();
}

void *assignWithCopy for JSONValue(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void *assignWithTake for JSONValue(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7B && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 123);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7A) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for JSONValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7A)
  {
    *(void *)uint64_t result = a2 - 123;
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7B) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_260DE25D0(void *a1)
{
  return *a1 >> 61;
}

void *sub_260DE25DC(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_260DE25EC(uint64_t *result, uint64_t a2)
{
  *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for JSONValue()
{
  return &type metadata for JSONValue;
}

uint64_t dispatch thunk of static JSONKeyValueConvertible.jsonKey(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of JSONKeyValueConvertible.jsonValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unsigned char *storeEnumTagSinglePayload for ForensicsReport.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260DE2704);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForensicsReport.CodingKeys()
{
  return &type metadata for ForensicsReport.CodingKeys;
}

unint64_t sub_260DE2740()
{
  unint64_t result = qword_26A8E71C8;
  if (!qword_26A8E71C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E71C8);
  }
  return result;
}

unint64_t sub_260DE2798()
{
  unint64_t result = qword_26A8E71D0;
  if (!qword_26A8E71D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E71D0);
  }
  return result;
}

unint64_t sub_260DE27F0()
{
  unint64_t result = qword_26A8E71D8;
  if (!qword_26A8E71D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E71D8);
  }
  return result;
}

uint64_t sub_260DE2844(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_260DE28AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_260DE28F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_260DE2954()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_260DE2994(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_260DCC110(a1, a2);
  }
  return a1;
}

uint64_t sub_260DE29A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_260DE2A0C()
{
  unint64_t result = qword_26A8E7208;
  if (!qword_26A8E7208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7208);
  }
  return result;
}

unint64_t sub_260DE2A60()
{
  unint64_t result = qword_26A8E7210;
  if (!qword_26A8E7210)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A8E7210);
  }
  return result;
}

uint64_t sub_260DE2AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8EA270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_260DE2B18()
{
  return sub_260DE18CC();
}

uint64_t sub_260DE2B30()
{
  return sub_260DE18A8();
}

uint64_t sub_260DE2B4C()
{
  return sub_260FE5340();
}

uint64_t sub_260DE2BA0()
{
  return sub_260FE41D0();
}

uint64_t sub_260DE2BB8()
{
  return sub_260FE5340();
}

uint64_t sub_260DE2C08@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_260FE4EC0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_260DE2C5C(void *a1@<X8>)
{
  *a1 = 0x61746144676E70;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_260DE2C78()
{
  return 0x61746144676E70;
}

uint64_t sub_260DE2C90@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_260FE4EC0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_260DE2CE8(uint64_t a1)
{
  unint64_t v2 = sub_260DE3EAC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260DE2D24(uint64_t a1)
{
  unint64_t v2 = sub_260DE3EAC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Image.CodingError.errorDescription.getter()
{
  uint64_t v0 = sub_260FE4060();
  MEMORY[0x270FA5388](v0 - 8, v1);
  sub_260FE3FF0();
  uint64_t v2 = sub_260FE3180();
  MEMORY[0x270FA5388](v2 - 8, v3);
  sub_260FE3170();
  return sub_260FE4120();
}

BOOL static Image.CodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Image.CodingError.hash(into:)()
{
  return sub_260FE5300();
}

unint64_t sub_260DE2F80(char a1)
{
  if (!a1) {
    return 0xD000000000000015;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0xD000000000000016;
}

unint64_t sub_260DE2FE0()
{
  return sub_260DE2F80(*v0);
}

uint64_t sub_260DE2FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260DE4AFC(a1, a2);
  *a3 = result;
  return result;
}

void sub_260DE3010(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_260DE301C(uint64_t a1)
{
  unint64_t v2 = sub_260DE3560();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260DE3058(uint64_t a1)
{
  unint64_t v2 = sub_260DE3560();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260DE3094(uint64_t a1)
{
  unint64_t v2 = sub_260DE365C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260DE30D0(uint64_t a1)
{
  unint64_t v2 = sub_260DE365C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260DE310C(uint64_t a1)
{
  unint64_t v2 = sub_260DE3608();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260DE3148(uint64_t a1)
{
  unint64_t v2 = sub_260DE3608();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260DE3184(uint64_t a1)
{
  unint64_t v2 = sub_260DE35B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260DE31C0(uint64_t a1)
{
  unint64_t v2 = sub_260DE35B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Image.CodingError.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7230);
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v27 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7238);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7240);
  uint64_t v23 = *(void *)(v11 - 8);
  uint64_t v24 = v11;
  MEMORY[0x270FA5388](v11, v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7248);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15, v17);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v20 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DE3560();
  sub_260FE53E0();
  if (v20)
  {
    if (v20 == 1)
    {
      char v31 = 1;
      sub_260DE3608();
      sub_260FE5010();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v26);
    }
    else
    {
      char v32 = 2;
      sub_260DE35B4();
      uint64_t v21 = v27;
      sub_260FE5010();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v29);
    }
  }
  else
  {
    char v30 = 0;
    sub_260DE365C();
    sub_260FE5010();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v24);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

unint64_t sub_260DE3560()
{
  unint64_t result = qword_26A8E7250;
  if (!qword_26A8E7250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7250);
  }
  return result;
}

unint64_t sub_260DE35B4()
{
  unint64_t result = qword_26A8E7258;
  if (!qword_26A8E7258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7258);
  }
  return result;
}

unint64_t sub_260DE3608()
{
  unint64_t result = qword_26A8E7260;
  if (!qword_26A8E7260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7260);
  }
  return result;
}

unint64_t sub_260DE365C()
{
  unint64_t result = qword_26A8E7268;
  if (!qword_26A8E7268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7268);
  }
  return result;
}

uint64_t Image.CodingError.hashValue.getter()
{
  return sub_260FE5340();
}

uint64_t Image.CodingError.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v39 = a2;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7270);
  uint64_t v37 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42, v3);
  uint64_t v41 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7278);
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38, v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7280);
  uint64_t v35 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7288);
  uint64_t v40 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DE3560();
  uint64_t v16 = (uint64_t)v43;
  sub_260FE53B0();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v33 = v8;
  uint64_t v34 = 0;
  uint64_t v18 = v41;
  uint64_t v17 = v42;
  uint64_t v43 = a1;
  uint64_t v19 = v15;
  uint64_t v20 = sub_260FE4FE0();
  if (*(void *)(v20 + 16) != 1)
  {
    uint64_t v25 = sub_260FE4CC0();
    swift_allocError();
    uint64_t v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7290);
    *uint64_t v27 = &type metadata for Image.CodingError;
    sub_260FE4F10();
    sub_260FE4CA0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v12);
    a1 = v43;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  int v21 = *(unsigned __int8 *)(v20 + 32);
  if (*(unsigned char *)(v20 + 32))
  {
    if (v21 == 1)
    {
      char v45 = 1;
      sub_260DE3608();
      uint64_t v22 = v34;
      sub_260FE4EF0();
      uint64_t v24 = v39;
      uint64_t v23 = v40;
      uint64_t v34 = v22;
      if (v22)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v12);
LABEL_12:
        a1 = v43;
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v12);
    }
    else
    {
      char v46 = 2;
      sub_260DE35B4();
      uint64_t v29 = v34;
      sub_260FE4EF0();
      uint64_t v24 = v39;
      uint64_t v30 = v40;
      uint64_t v34 = v29;
      if (v29)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v12);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v17);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v12);
    }
  }
  else
  {
    char v44 = 0;
    sub_260DE365C();
    uint64_t v28 = v34;
    sub_260FE4EF0();
    uint64_t v34 = v28;
    if (v28)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v12);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v12);
    uint64_t v24 = v39;
  }
  unsigned char *v24 = v21;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
}

uint64_t sub_260DE3CB4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Image.CodingError.init(from:)(a1, a2);
}

uint64_t sub_260DE3CCC(void *a1)
{
  return Image.CodingError.encode(to:)(a1);
}

uint64_t Image.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7298);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)v1;
  char v9 = *(unsigned char *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DE3EAC();
  sub_260FE53E0();
  uint64_t v16 = v8;
  LOBYTE(v17) = v9;
  uint64_t v10 = sub_260F4DC30();
  if (v11 >> 60 == 15)
  {
    sub_260DE3F00();
    swift_allocError();
    *uint64_t v12 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {
    uint64_t v14 = v10;
    unint64_t v15 = v11;
    uint64_t v16 = v10;
    unint64_t v17 = v11;
    sub_260DE3F54();
    sub_260FE50B0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    return sub_260DE2994(v14, v15);
  }
}

unint64_t sub_260DE3EAC()
{
  unint64_t result = qword_26A8E72A0;
  if (!qword_26A8E72A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E72A0);
  }
  return result;
}

unint64_t sub_260DE3F00()
{
  unint64_t result = qword_26A8E72A8;
  if (!qword_26A8E72A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E72A8);
  }
  return result;
}

unint64_t sub_260DE3F54()
{
  unint64_t result = qword_26A8E72B0;
  if (!qword_26A8E72B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E72B0);
  }
  return result;
}

uint64_t Image.init(from:)@<X0>(void *a1@<X0>, CGImageRef *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E72B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  char v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DE3EAC();
  sub_260FE53B0();
  if (!v2)
  {
    sub_260DE421C();
    sub_260FE4F60();
    unint64_t v10 = v25;
    if (v25 >> 60 == 15)
    {
      sub_260DE3F00();
      swift_allocError();
      *unint64_t v11 = 2;
      swift_willThrow();
LABEL_11:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    }
    uint64_t v26 = a2;
    uint64_t v12 = v24;
    CFDataRef v13 = (const __CFData *)sub_260FE2FF0();
    uint64_t v14 = CGDataProviderCreateWithCFData(v13);

    if (v14)
    {
      unint64_t v15 = CGImageSourceCreateWithDataProvider(v14, 0);
      if (v15)
      {
        uint64_t v16 = v15;
        size_t PrimaryImageIndex = CGImageSourceGetPrimaryImageIndex(v15);
        CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(v16, PrimaryImageIndex, 0);

        CGImageRef v18 = ImageAtIndex;
        if (ImageAtIndex)
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
          sub_260DE2994(v12, v10);
          uint64_t v19 = v26;
          *uint64_t v26 = v18;
          *((unsigned char *)v19 + 8) = 0;
          return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
        }
      }
      else
      {
      }
    }
    sub_260DE3F00();
    swift_allocError();
    *uint64_t v20 = 1;
    swift_willThrow();
    sub_260DE2994(v12, v10);
    goto LABEL_11;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

unint64_t sub_260DE421C()
{
  unint64_t result = qword_26A8E72C0;
  if (!qword_26A8E72C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E72C0);
  }
  return result;
}

unint64_t sub_260DE4268()
{
  unint64_t result = qword_26A8E72C8;
  if (!qword_26A8E72C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E72C8);
  }
  return result;
}

unint64_t sub_260DE42BC(void *a1)
{
  a1[1] = sub_260DE42F4();
  a1[2] = sub_260DE4348();
  unint64_t result = sub_260DE3F00();
  a1[3] = result;
  return result;
}

unint64_t sub_260DE42F4()
{
  unint64_t result = qword_26A8E72D0;
  if (!qword_26A8E72D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E72D0);
  }
  return result;
}

unint64_t sub_260DE4348()
{
  unint64_t result = qword_26A8E72D8;
  if (!qword_26A8E72D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E72D8);
  }
  return result;
}

uint64_t sub_260DE43A0@<X0>(void *a1@<X0>, CGImageRef *a2@<X8>)
{
  return Image.init(from:)(a1, a2);
}

uint64_t sub_260DE43B8(void *a1)
{
  return Image.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for Image.CodingError()
{
  return &type metadata for Image.CodingError;
}

uint64_t _s10CodingKeysOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x260DE44D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260DE4500()
{
  return 0;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

uint64_t getEnumTagSinglePayload for DiffusionBaseRNG(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11CodingErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260DE4674);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11CodingErrorO10CodingKeysOMa()
{
  return &_s11CodingErrorO10CodingKeysON;
}

ValueMetadata *_s11CodingErrorO31ImageDataNotAvailableCodingKeysOMa()
{
  return &_s11CodingErrorO31ImageDataNotAvailableCodingKeysON;
}

ValueMetadata *_s11CodingErrorO26InvalidImageDataCodingKeysOMa()
{
  return &_s11CodingErrorO26InvalidImageDataCodingKeysON;
}

ValueMetadata *_s11CodingErrorO32UnsupportedImageFormatCodingKeysOMa()
{
  return &_s11CodingErrorO32UnsupportedImageFormatCodingKeysON;
}

unint64_t sub_260DE46E0()
{
  unint64_t result = qword_26A8E72E0;
  if (!qword_26A8E72E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E72E0);
  }
  return result;
}

unint64_t sub_260DE4738()
{
  unint64_t result = qword_26A8E72E8;
  if (!qword_26A8E72E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E72E8);
  }
  return result;
}

unint64_t sub_260DE4790()
{
  unint64_t result = qword_26A8E72F0;
  if (!qword_26A8E72F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E72F0);
  }
  return result;
}

unint64_t sub_260DE47E8()
{
  unint64_t result = qword_26A8E72F8;
  if (!qword_26A8E72F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E72F8);
  }
  return result;
}

unint64_t sub_260DE4840()
{
  unint64_t result = qword_26A8E7300;
  if (!qword_26A8E7300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7300);
  }
  return result;
}

unint64_t sub_260DE4898()
{
  unint64_t result = qword_26A8E7308;
  if (!qword_26A8E7308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7308);
  }
  return result;
}

unint64_t sub_260DE48F0()
{
  unint64_t result = qword_26A8E7310;
  if (!qword_26A8E7310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7310);
  }
  return result;
}

unint64_t sub_260DE4948()
{
  unint64_t result = qword_26A8E7318;
  if (!qword_26A8E7318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7318);
  }
  return result;
}

unint64_t sub_260DE49A0()
{
  unint64_t result = qword_26A8E7320;
  if (!qword_26A8E7320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7320);
  }
  return result;
}

unint64_t sub_260DE49F8()
{
  unint64_t result = qword_26A8E7328;
  if (!qword_26A8E7328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7328);
  }
  return result;
}

unint64_t sub_260DE4A50()
{
  unint64_t result = qword_26A8E7330;
  if (!qword_26A8E7330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7330);
  }
  return result;
}

unint64_t sub_260DE4AA8()
{
  unint64_t result = qword_26A8E7338;
  if (!qword_26A8E7338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7338);
  }
  return result;
}

uint64_t sub_260DE4AFC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000260FFCA00 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000260FFCA20 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000260FFCA40)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t dispatch thunk of PersonDescriptionDirectiveSpecifying.personDescriptionDirective.getter(uint64_t a1, uint64_t a2)
{
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_260DE4D38;
  return v7(a1, a2);
}

uint64_t sub_260DE4D38(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t dispatch thunk of PersonDescriptionDirectiveSpecifying.specifyPersonDescriptionDirective(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  char v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *char v9 = v4;
  v9[1] = sub_260DACD28;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PersonDescriptionDirectiveSpecifying.dropPersonDescriptionDirective()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_260DACD28;
  return v7(a1, a2);
}

unint64_t sub_260DE5038(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_260FE42D0() != a1 || v9 != a2)
  {
    char v10 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_260FE4200();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

void sub_260DE5128(int64x2_t *a1@<X8>)
{
  *a1 = vdupq_n_s64(0x200uLL);
  strcpy(a1[1].i8, "800L");
}

void sub_260DE5148(int64x2_t *a1@<X8>)
{
  *a1 = vdupq_n_s64(0x200uLL);
  strcpy(a1[1].i8, "ARGB");
}

unint64_t sub_260DE5168()
{
  return 0xD000000000000024;
}

uint64_t sub_260DE5184()
{
  if (qword_26A8E6078 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void sub_260DE5200(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_260DE5208()
{
  return *(void *)v0;
}

uint64_t sub_260DE5210()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_260DE521C()
{
  return swift_deallocClassInstance();
}

void sub_260DE522C(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for WordCloudImageGenerator.Descriptor;
  *(void *)(a1 + 32) = &off_270D19BB0;
}

uint64_t sub_260DE5244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[33] = a3;
  v4[34] = v3;
  v4[31] = a1;
  v4[32] = a2;
  v4[35] = *(void *)(type metadata accessor for GeneratedImage() - 8);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  v4[38] = type metadata accessor for ImageProvenance();
  v4[39] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DE5344, 0, 0);
}

uint64_t sub_260DE5344()
{
  sub_260EBEE00();
  uint64_t v1 = v0[31];
  uint64_t v2 = *(void *)(v1 + 48);
  v0[40] = v2;
  if (v2 < 1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v5 = MEMORY[0x263F8EE78];
    return v4(v5);
  }
  else
  {
    if (*(unsigned char *)(v1 + 80) == 1) {
      unint64_t v3 = sub_260F2FB54(0x8000000000000000);
    }
    else {
      unint64_t v3 = *(void *)(v1 + 72);
    }
    if ((v3 & 0x8000000000000000) != 0)
    {
      return sub_260FE4E10();
    }
    else
    {
      v0[5] = &type metadata for BarelyRandomNumberGenerator;
      v0[6] = sub_260DE7C64();
      v0[2] = v3;
      uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_26A8E7368 + dword_26A8E7368);
      uint64_t v7 = (void *)swift_task_alloc();
      v0[41] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_260DE5564;
      uint64_t v8 = v0[31];
      return v9(v8, (uint64_t)(v0 + 2));
    }
  }
}

uint64_t sub_260DE5564(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 336) = a1;
  *(void *)(v3 + 344) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_260DE5D74;
  }
  else {
    uint64_t v4 = sub_260DE5678;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_260DE5678()
{
  uint64_t v80 = v0;
  unint64_t v1 = *(void *)(v0 + 336);
  if (v1 >> 62)
  {
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_260FE4E40();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = *(void *)(v0 + 248);
  uint64_t v4 = *(void *)(v3 + 64);
  if (*(void *)(v4 + 16)) {
    char v5 = *(unsigned char *)(v4 + 32);
  }
  else {
    char v5 = 5;
  }
  __int8 v64 = v5;
  uint64_t v6 = *(void *)(v0 + 320);
  uint64_t v7 = *(void *)(v0 + 256);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  BOOL v10 = *(unsigned char *)(v3 + 40) == 0;
  uint64_t v11 = 512;
  if (v10) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v8 = 512;
  }
  uint64_t v62 = v11;
  uint64_t v63 = v8;
  uint64_t v12 = sub_260FE3110();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = swift_task_alloc();
  uint64_t v71 = v12;
  uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  uint64_t result = v61(v14, v7 + OBJC_IVAR____TtCC16VisualGeneration14ImageGenerator14GenerationTask_id, v12);
  uint64_t v16 = v2 * v6;
  if ((unsigned __int128)(v2 * (__int128)v6) >> 64 == (v2 * v6) >> 63)
  {
    uint64_t v58 = v13;
    uint64_t v70 = v14;
    uint64_t v17 = *(void *)(v0 + 264);
    type metadata accessor for WordCloudImageGenerator.RemainingProgressItems();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v16;
    *(void *)(inited + 24) = 0;
    uint64_t v69 = inited;
    sub_260DE8D78(v17, v0 + 96);
    if (*(void *)(v0 + 120))
    {
      uint64_t v19 = *(void *)(v0 + 272);
      uint64_t v20 = *(void *)(v0 + 256);
      sub_260DD7B40((long long *)(v0 + 96), v0 + 56);
      uint64_t v21 = *(void *)(v0 + 80);
      uint64_t v22 = *(void *)(v0 + 88);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), v21);
      *(void *)(v0 + 200) = &type metadata for WordCloudImageGenerator.ProgressInfo;
      *(void *)(v0 + 208) = &off_270D19C00;
      uint64_t v23 = swift_allocObject();
      *(void *)(v0 + 176) = v23;
      *(void *)(v23 + 16) = 0;
      *(void *)(v23 + 24) = v16;
      *(unsigned char *)(v23 + 32) = 0;
      *(void *)(v23 + 40) = 0;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16))(v19, v20, v0 + 176, v21, v22);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 176);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
    }
    else
    {
      sub_260DE8DE0(v0 + 96);
    }
    uint64_t v24 = *(void *)(v0 + 248);
    uint64_t v25 = type metadata accessor for GenerationRecipe(0);
    uint64_t v26 = *(void **)(v24 + *(int *)(v25 + 68) + 24);
    if (v26)
    {
      id v27 = v26;
      char v28 = 2;
    }
    else
    {
      char v28 = -1;
    }
    char v67 = v28;
    uint64_t v68 = v0 + 16;
    unint64_t v57 = (void *)(v0 + 136);
    uint64_t v29 = *(void **)(v24 + *(int *)(v25 + 88) + 24);
    uint64_t v65 = v29;
    if (v29)
    {
      id v30 = v29;
      char v31 = 2;
    }
    else
    {
      char v31 = -1;
    }
    char v66 = v31;
    uint64_t v59 = *(void *)(v0 + 280);
    char v60 = *(int **)(v0 + 304);
    uint64_t v32 = *(void *)(v0 + 344);
    uint64_t v33 = 1;
    unint64_t v34 = MEMORY[0x263F8EE78];
    while (1)
    {
      unint64_t v35 = v34;
      uint64_t v36 = *(unsigned char **)(v0 + 312);
      uint64_t v72 = *(void *)(v0 + 296);
      uint64_t v37 = *(void *)(v0 + 264);
      long long v73 = *(double **)(v0 + 336);
      uint64_t v38 = *(void *)(v0 + 256);
      long long v39 = v26;
      char v40 = **(unsigned char **)(v0 + 248);
      v61((uint64_t)&v36[v60[5]], v70, v71);
      *uint64_t v36 = v40;
      uint64_t v26 = v39;
      *(void *)&v36[v60[6]] = v33;
      *(void *)&v36[v60[7]] = 0;
      __int8 v74 = v64;
      v75[0] = v63;
      v75[1] = v62;
      uint64_t v76 = v39;
      char v77 = v67;
      uint64_t v78 = v65;
      char v79 = v66;
      sub_260DE6030(v73, &v74, (uint64_t)v75, (uint64_t)v36, (uint64_t)&v76, (uint64_t)&v78, v68, v69, v72, v37, v38);
      if (v32) {
        break;
      }
      sub_260DE9094(*(void *)(v0 + 296), *(void *)(v0 + 288), (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      unint64_t v34 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v34 = sub_260DB1A1C(0, *(void *)(v35 + 16) + 1, 1, v35);
      }
      unint64_t v42 = *(void *)(v34 + 16);
      unint64_t v41 = *(void *)(v34 + 24);
      if (v42 >= v41 >> 1) {
        unint64_t v34 = sub_260DB1A1C(v41 > 1, v42 + 1, 1, v34);
      }
      uint64_t v43 = *(void *)(v0 + 312);
      uint64_t v44 = *(void *)(v0 + 320);
      uint64_t v45 = *(void *)(v0 + 288);
      uint64_t v46 = *(void *)(v0 + 296);
      *(void *)(v34 + 16) = v42 + 1;
      sub_260DE8F18(v45, v34+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v42, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      sub_260DE9034(v46, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      sub_260DE9034(v43, (uint64_t (*)(void))type metadata accessor for ImageProvenance);
      if (v33 == v44)
      {
        uint64_t v50 = *(void *)(v0 + 264);
        swift_bridgeObjectRelease();
        sub_260DE8D78(v50, (uint64_t)v57);
        uint64_t v51 = *(void *)(v0 + 160);
        if (v51)
        {
          uint64_t v52 = *(void *)(v0 + 272);
          uint64_t v53 = *(void *)(v0 + 256);
          uint64_t v54 = *(void *)(v0 + 168);
          __swift_project_boxed_opaque_existential_1(v57, *(void *)(v0 + 160));
          uint64_t v55 = *(void (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v54 + 32);
          swift_bridgeObjectRetain();
          v55(v52, v53, v34, v51, v54);
          swift_bridgeObjectRelease();
          sub_260DC6F1C(v65, v66);
          sub_260DC6F1C(v39, v67);
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v70, v71);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v57);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v70, v71);
          sub_260DC6F1C(v65, v66);
          sub_260DC6F1C(v39, v67);
          swift_release();
          sub_260DE8DE0((uint64_t)v57);
        }
        swift_task_dealloc();
        __swift_destroy_boxed_opaque_existential_1Tm(v68);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        unint64_t v56 = *(uint64_t (**)(unint64_t))(v0 + 8);
        return v56(v34);
      }
      uint64_t v32 = 0;
      if (__OFADD__(v33++, 1))
      {
        __break(1u);
        goto LABEL_38;
      }
    }
    uint64_t v48 = *(void *)(v0 + 312);
    swift_release();
    swift_bridgeObjectRelease();
    sub_260DE9034(v48, (uint64_t (*)(void))type metadata accessor for ImageProvenance);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v70, v71);
    sub_260DC6F1C(v65, v66);
    sub_260DC6F1C(v39, v67);
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1Tm(v68);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v49 = *(uint64_t (**)(void))(v0 + 8);
    return v49();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_260DE5D74()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260DE5DFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  char v17 = a4;
  uint64_t v8 = sub_260DE5E98(&v17, a5);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  char v14 = v13;
  type metadata accessor for WordCloudImageGenerator.WordModel();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = a3;
  *(void *)(v15 + 40) = v8;
  *(void *)(v15 + 48) = v10;
  *(void *)(v15 + 56) = v12;
  *(unsigned char *)(v15 + 64) = v14 & 1;
  swift_bridgeObjectRetain();
  return v15;
}

uint64_t sub_260DE5E98(unsigned char *a1, uint64_t a2)
{
  int v2 = *a1;
  if (*a1) {
    uint64_t v3 = &unk_270D171C8;
  }
  else {
    uint64_t v3 = &unk_270D17148;
  }
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(void *)(a2 + 24));
  sub_260DE8F80();
  sub_260DE8FD4();
  swift_bridgeObjectRetain();
  uint64_t result = sub_260FE3EE0();
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v7 >= v3[2])
  {
LABEL_10:
    __break(1u);
    return result;
  }
  char v5 = &unk_270D171E8;
  if (!v2) {
    char v5 = &unk_270D17168;
  }
  uint64_t v6 = v5[4 * v7];
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_260DE5FA8(unint64_t *a1)
{
  unint64_t v2 = *a1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v2 & 0x8000000000000000) != 0
    || (v2 & 0x4000000000000000) != 0)
  {
    sub_260EAF8C0(v2);
    unint64_t v2 = v4;
    *a1 = v4;
  }
  uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v7[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v7[1] = v5;
  sub_260DE70B4(v7);
  return sub_260FE4420();
}

uint64_t sub_260DE6030@<X0>(double *a1@<X0>, __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  __int8 v14 = *a2;
  CGFloat v156 = *(double *)a3;
  uint64_t rect2 = *(void *)(a3 + 8);
  int64_t v15 = *(void *)a5;
  int v16 = *(unsigned __int8 *)(a5 + 8);
  double v17 = *(double *)a6;
  int v18 = *(unsigned __int8 *)(a6 + 8);
  uint64_t result = sub_260EBEE00();
  if (v11) {
    return result;
  }
  LODWORD(v144) = v18;
  int64_t v141 = v15;
  double v142 = v17;
  LODWORD(v143) = v16;
  __int8 v129 = v14;
  uint64_t v135 = a9;
  long long v119 = a1;
  uint64_t v20 = 0;
  id v21 = objc_msgSend(self, sel_blackImage);
  double v22 = (double)*(uint64_t *)&v156;
  uint64_t v23 = rect2;
  double v24 = (double)rect2;
  id v25 = objc_msgSend(v21, sel_imageByCroppingToRect_, 0.0, 0.0, (double)*(uint64_t *)&v156, (double)rect2);

  id v26 = v25;
  id v27 = sub_260ED3B9C(v26);
  swift_retain();
  CGImageRef v127 = (CGImageRef)v26;

  if (!v27)
  {
    uint64_t v34 = type metadata accessor for GeneratedImage();
    char v35 = 1;
    uint64_t v28 = v135;
    uint64_t v36 = a4;
    goto LABEL_9;
  }
  v139 = v27;
  swift_release();
  uint64_t v28 = v135;
  unint64_t v29 = (unint64_t)a1;
  int64_t v30 = v141;
  LODWORD(v31) = LODWORD(v143);
  if (v18 != 255)
  {
    uint64_t v32 = qword_26A8E60C0;
    uint64_t v33 = (uint64_t)*(id *)&v142;
    if (v32 != -1) {
      goto LABEL_148;
    }
    goto LABEL_5;
  }
LABEL_14:
  if (v31 != 255)
  {
    uint64_t v39 = qword_26A8E60C0;
    id v40 = (id)v30;
    if (v39 != -1) {
      swift_once();
    }
    sub_260DE9154((uint64_t)&qword_26A90FB18, (uint64_t)v154);
    if (v31)
    {
      if (v31 == 1)
      {
        sub_260ED3714((uint64_t)v40, (uint64_t)v154, 0.2);
LABEL_23:
        sub_260DC6F1C((id)v30, v31);
        sub_260DC6F1C((id)v30, v31);
        goto LABEL_24;
      }
      id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCVPixelBuffer_, v40, *(void *)&v115, *(void *)&v116, *(void *)&v117);
    }
    else
    {
      id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCGImage_, v40, *(void *)&v115, *(void *)&v116, *(void *)&v117);
    }
    uint64_t v31 = (uint64_t)v41;
    sub_260ED3714((uint64_t)v41, (uint64_t)v154, 0.2);

    LOBYTE(v31) = LOBYTE(v143);
    goto LABEL_23;
  }
LABEL_24:
  sub_260EBEE00();
  if (v20)
  {

    return swift_release();
  }
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_260FE4E40();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v42 = v23 / 20;
  if (v23 / 20 >= 12) {
    uint64_t v42 = 12;
  }
  if (v23 / 5 <= 18) {
    uint64_t v31 = 18;
  }
  else {
    uint64_t v31 = v23 / 5;
  }
  if (v20 >= 1)
  {
    uint64_t rect2a = v42;
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_260FE4E40();
      if (v43)
      {
LABEL_37:
        if (v43 < 1) {
          goto LABEL_152;
        }
        if ((v29 & 0xC000000000000001) != 0)
        {
          uint64_t v44 = (double *)v29;
          uint64_t v45 = 0;
          uint64_t v46 = 0x7FFFFFFFFFFFFFFFLL;
          int64_t v30 = 0x8000000000000000;
          do
          {
            uint64_t v47 = MEMORY[0x26122B4C0](v45++, v44);
            uint64_t v48 = *(void *)(v47 + 32);
            swift_unknownObjectRelease();
            if (v48 < v46) {
              uint64_t v46 = v48;
            }
            if (v48 > v30) {
              int64_t v30 = v48;
            }
          }
          while (v43 != v45);
          swift_bridgeObjectRelease();
          unint64_t v29 = (unint64_t)v44;
          goto LABEL_75;
        }
        if ((unint64_t)v43 >= 2)
        {
          unint64_t v49 = v43 & 0xFFFFFFFFFFFFFFFELL;
          uint64_t v50 = (void *)(v29 + 40);
          uint64_t v51 = 0x7FFFFFFFFFFFFFFFLL;
          int64_t v52 = 0x8000000000000000;
          unint64_t v53 = v43 & 0xFFFFFFFFFFFFFFFELL;
          int64_t v54 = 0x8000000000000000;
          uint64_t v55 = 0x7FFFFFFFFFFFFFFFLL;
          do
          {
            uint64_t v56 = *(void *)(*(v50 - 1) + 32);
            uint64_t v57 = *(void *)(*v50 + 32);
            if (v56 < v51) {
              uint64_t v51 = *(void *)(*(v50 - 1) + 32);
            }
            if (v57 < v55) {
              uint64_t v55 = *(void *)(*v50 + 32);
            }
            if (v56 > v52) {
              int64_t v52 = *(void *)(*(v50 - 1) + 32);
            }
            if (v57 > v54) {
              int64_t v54 = *(void *)(*v50 + 32);
            }
            v50 += 2;
            v53 -= 2;
          }
          while (v53);
          if (v51 >= v55) {
            uint64_t v46 = v55;
          }
          else {
            uint64_t v46 = v51;
          }
          if (v52 <= v54) {
            int64_t v30 = v54;
          }
          else {
            int64_t v30 = v52;
          }
          if (v43 == v49) {
            goto LABEL_74;
          }
        }
        else
        {
          unint64_t v49 = 0;
          uint64_t v46 = 0x7FFFFFFFFFFFFFFFLL;
          int64_t v30 = 0x8000000000000000;
        }
        unint64_t v58 = v43 - v49;
        uint64_t v59 = (double *)(v29 + 8 * v49 + 32);
        do
        {
          uint64_t v60 = *(void *)v59++;
          uint64_t v61 = *(void *)(v60 + 32);
          if (v61 < v46) {
            uint64_t v46 = v61;
          }
          if (v61 > v30) {
            int64_t v30 = v61;
          }
          --v58;
        }
        while (v58);
LABEL_74:
        swift_bridgeObjectRelease();
        goto LABEL_75;
      }
    }
    else
    {
      uint64_t v43 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v43) {
        goto LABEL_37;
      }
    }
    swift_bridgeObjectRelease();
    int64_t v30 = 0x8000000000000000;
    uint64_t v46 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_75:
    uint64_t v42 = rect2a;
    goto LABEL_76;
  }
  uint64_t v46 = 0;
  int64_t v30 = 0;
LABEL_76:
  uint64_t v128 = v30 - v46;
  if (__OFSUB__(v30, v46))
  {
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
    JUMPOUT(0x260DE6E5CLL);
  }
  if (v20 < 0) {
    goto LABEL_151;
  }
  if (v20)
  {
    uint64_t v118 = v46;
    uint64_t v23 = 0;
    uint64_t v125 = v29 & 0xFFFFFFFFFFFFFF8;
    unint64_t v126 = v29 & 0xC000000000000001;
    long long v120 = (void *)(v29 + 32);
    double v115 = (double)v128;
    double v116 = (double)v31 - (double)v42;
    double v117 = (double)v42;
    double v124 = ((double)v42 + (double)v31) * 0.5;
    uint64_t v123 = (void *)*MEMORY[0x263F03C60];
    long long v121 = (void *)*MEMORY[0x263F039A0];
    uint64_t v122 = (CGFloat *)*MEMORY[0x263F03CB0];
    unint64_t v29 = MEMORY[0x263F8EE78];
    double v62 = 15.0;
    uint64_t v63 = a11;
    LODWORD(v31) = 0;
    uint64_t v130 = v20;
    while (1)
    {
      uint64_t v33 = v63;
      sub_260EBEE00();
      if (v126)
      {
        uint64_t v28 = MEMORY[0x26122B4C0](v23, v119);
      }
      else
      {
        if ((unint64_t)v23 >= *(void *)(v125 + 16)) {
          goto LABEL_146;
        }
        uint64_t v28 = v120[v23];
        swift_retain();
      }
      uint64_t v33 = (uint64_t)sub_260ED3290(*(void *)(v28 + 40), *(void *)(v28 + 48), *(void *)(v28 + 56), *(unsigned char *)(v28 + 64));
      double v66 = v124;
      if (v128)
      {
        uint64_t v67 = *(void *)(v28 + 32);
        BOOL v68 = __OFSUB__(v67, v118);
        uint64_t v69 = v67 - v118;
        if (v68) {
          goto LABEL_147;
        }
        double v66 = v116 * ((double)v69 / v115) + v117;
      }
      id v137 = (CGFloat *)(v23 + 1);
      uint64_t v70 = *(void *)(v28 + 16);
      uint64_t v71 = *(void *)(v28 + 24);
      v151.i8[0] = v129;
      uint64_t v31 = sub_260DE6E6C(v66, v70, v71, &v151, a7);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A8E7380);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_260FE8090;
      *(void *)(inited + 32) = v123;
      type metadata accessor for CGColor(0);
      *(void *)(inited + 40) = v33;
      uint64_t v23 = (uint64_t)v122;
      *(void *)(inited + 64) = v73;
      *(void *)(inited + 72) = v122;
      *(void *)(inited + 80) = v33;
      *(void *)(inited + 104) = v73;
      *(void *)(inited + 112) = v121;
      type metadata accessor for CTFont(0);
      *(void *)(inited + 144) = v74;
      *(void *)(inited + 120) = v31;
      id v132 = (id)v33;
      id v75 = v123;
      uint64_t v76 = v122;
      id v77 = v121;
      id v131 = (id)v31;
      sub_260DAB048(inited);
      id v78 = objc_allocWithZone(MEMORY[0x263F086A8]);
      swift_bridgeObjectRetain();
      char v79 = (void *)sub_260FE4070();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      LODWORD(v31) = v80;
      sub_260DE90FC();
      uint64_t v81 = (void *)sub_260FE3E90();
      swift_bridgeObjectRelease();
      CFAttributedStringRef v82 = (const __CFAttributedString *)objc_msgSend(v78, sel_initWithString_attributes_, v79, v81);

      CFAttributedStringRef v138 = v82;
      sub_260ED3450(v82, &v151);
      uint64_t v83 = 0;
      uint64_t v33 = 0;
      float64x2_t v84 = vcvtq_f64_s64(v151);
      double v85 = 0.5 * v84.f64[0];
      CGFloat v156 = v84.f64[1];
      double v86 = vmuld_lane_f64(0.5, v84, 1);
      float64x2_t rect2b = v84;
      double v143 = 0.5 * v84.f64[0];
      double v144 = vmuld_lane_f64(v84.f64[0], v84, 1);
      uint64_t v20 = -1;
      int64_t v30 = 1;
      double v142 = v86;
      while (2)
      {
        switch(v33)
        {
          case 0:
            BOOL v68 = __OFADD__(v20++, 1);
            if (v68) {
              goto LABEL_138;
            }
            uint64_t v33 = v20 == v30;
            goto LABEL_108;
          case 1:
            BOOL v68 = __OFADD__(v83++, 1);
            if (v68) {
              goto LABEL_139;
            }
            if (v83 == v30) {
              uint64_t v33 = 2;
            }
            else {
              uint64_t v33 = 1;
            }
            goto LABEL_108;
          case 2:
            BOOL v68 = __OFSUB__(v20--, 1);
            if (v68) {
              goto LABEL_140;
            }
            if (__OFSUB__(0, v20)) {
              goto LABEL_141;
            }
            if (-v20 == v30) {
              uint64_t v33 = 3;
            }
            else {
              uint64_t v33 = 2;
            }
            goto LABEL_108;
          case 3:
            BOOL v68 = __OFSUB__(v83--, 1);
            if (v68) {
              goto LABEL_142;
            }
            if (__OFSUB__(0, v83)) {
              goto LABEL_143;
            }
            if (-v83 == v30)
            {
              BOOL v68 = __OFADD__(v30++, 1);
              if (v68) {
                goto LABEL_145;
              }
              uint64_t v33 = 0;
            }
            else
            {
              uint64_t v33 = 3;
            }
LABEL_108:
            v158.origin.x = 0.0;
            v158.origin.y = 0.0;
            v158.size.width = v22;
            v158.size.height = v24;
            double MidX = CGRectGetMidX(v158);
            v159.origin.x = 0.0;
            v159.origin.y = 0.0;
            v159.size.width = v22;
            v159.size.height = v24;
            double v88 = MidX + (double)v20 * v62;
            double v89 = (double)v83 * v62 + CGRectGetMidY(v159);
            v160.origin.x = 0.0;
            v160.origin.y = 0.0;
            v160.size.width = v22;
            v160.size.height = v24;
            v157.x = v88;
            v157.y = v89;
            if (CGRectContainsPoint(v160, v157))
            {
              double v90 = v88 - v85;
              double v91 = v89 - v86;
              v161.origin.x = 0.0;
              v161.origin.y = 0.0;
              v161.size.width = v22;
              v161.size.height = v24;
              v170.origin.x = v90;
              v170.origin.y = v91;
              v170.size.width = rect2b.f64[0];
              v170.size.height = v156;
              if (CGRectContainsRect(v161, v170))
              {
                uint64_t v92 = *(void *)(v29 + 16);
                if (!v92) {
                  goto LABEL_121;
                }
                double v93 = v24;
                double v94 = v22;
                CGFloat v95 = *(double *)(v29 + 32);
                CGFloat v96 = *(double *)(v29 + 40);
                double v98 = *(double *)(v29 + 48);
                double v97 = *(double *)(v29 + 56);
                swift_bridgeObjectRetain_n();
                v162.origin.x = v90;
                v162.origin.y = v91;
                v162.size.width = rect2b.f64[0];
                v162.size.height = v156;
                v171.origin.x = v95;
                v171.origin.y = v96;
                double v22 = v94;
                double v24 = v93;
                double v62 = 15.0;
                v171.size.width = v98;
                v171.size.height = v97;
                CGRect v163 = CGRectIntersection(v162, v171);
                if (v163.size.width * v163.size.height / (v144 + v98 * v97 - v163.size.width * v163.size.height) <= 0.01)
                {
                  if (v92 == 1)
                  {
LABEL_120:
                    swift_bridgeObjectRelease_n();
LABEL_121:
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      unint64_t v29 = (unint64_t)sub_260DB1C88(0, *(void *)(v29 + 16) + 1, 1, (void *)v29);
                    }
                    LODWORD(v31) = 0;
                    uint64_t v36 = a4;
                    uint64_t v20 = v130;
                    uint64_t v23 = (uint64_t)v137;
                    unint64_t v105 = *(void *)(v29 + 16);
                    unint64_t v104 = *(void *)(v29 + 24);
                    if (v105 >= v104 >> 1) {
                      unint64_t v29 = (unint64_t)sub_260DB1C88((void *)(v104 > 1), v105 + 1, 1, (void *)v29);
                    }
                    *(void *)(v29 + 16) = v105 + 1;
                    long long v106 = (float64x2_t *)(v29 + 32 * v105);
                    v106[2].f64[0] = v90;
                    v106[2].f64[1] = v91;
                    v168.size.width = rect2b.f64[0];
                    v106[3] = rect2b;
                    v168.origin.x = v90;
                    v168.origin.y = v91;
                    CGFloat v107 = v91;
                    CGFloat v108 = v90;
                    CGFloat v109 = v156;
                    v168.size.height = v156;
                    uint64_t v110 = CGRectGetMidX(v168);
                    v169.origin.x = v108;
                    v169.origin.y = v107;
                    v169.size.width = rect2b.f64[0];
                    v169.size.height = v109;
                    *(double *)&uint64_t v111 = CGRectGetMidY(v169);
                    sub_260ED3570(v138, v110, v111, 0);
                    goto LABEL_127;
                  }
                  if (*(void *)(v29 + 16) < 2uLL) {
                    goto LABEL_144;
                  }
                  v172.origin.x = *(CGFloat *)(v29 + 64);
                  v172.origin.y = *(CGFloat *)(v29 + 72);
                  double v99 = *(double *)(v29 + 80);
                  double v100 = *(double *)(v29 + 88);
                  v164.origin.x = v90;
                  v164.origin.y = v91;
                  v164.size.width = rect2b.f64[0];
                  v164.size.height = v156;
                  v172.size.width = v99;
                  v172.size.height = v100;
                  CGRect v165 = CGRectIntersection(v164, v172);
                  if (v165.size.width * v165.size.height / (v144 + v99 * v100 - v165.size.width * v165.size.height) <= 0.01)
                  {
                    uint64_t v101 = (CGFloat *)(v29 + 120);
                    uint64_t v31 = 2;
                    while (1)
                    {
                      if (v92 == v31) {
                        goto LABEL_120;
                      }
                      if ((unint64_t)v31 >= *(void *)(v29 + 16)) {
                        break;
                      }
                      uint64_t v23 = (uint64_t)(v101 + 4);
                      ++v31;
                      double v103 = *(v101 - 1);
                      double v102 = *v101;
                      v173.origin.x = *(v101 - 3);
                      v173.origin.y = *(v101 - 2);
                      v166.origin.x = v90;
                      v166.origin.y = v91;
                      v166.size.width = rect2b.f64[0];
                      v166.size.height = v156;
                      v173.size.width = v103;
                      v173.size.height = *v101;
                      CGRect v167 = CGRectIntersection(v166, v173);
                      uint64_t v101 = (CGFloat *)v23;
                      if (v167.size.width
                         * v167.size.height
                         / (v144 + v102 * v103 - v167.size.width * v167.size.height) > 0.01)
                        goto LABEL_89;
                    }
                    __break(1u);
LABEL_138:
                    __break(1u);
LABEL_139:
                    __break(1u);
LABEL_140:
                    __break(1u);
LABEL_141:
                    __break(1u);
LABEL_142:
                    __break(1u);
LABEL_143:
                    __break(1u);
LABEL_144:
                    __break(1u);
LABEL_145:
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    swift_once();
LABEL_5:
                    sub_260DE9154((uint64_t)&qword_26A90FB18, (uint64_t)v155);
                    if (LODWORD(v144))
                    {
                      if (LODWORD(v144) == 1)
                      {
                        sub_260ED3714((uint64_t)(id)v33, (uint64_t)v155, 0.2);
                        goto LABEL_13;
                      }
                      id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCVPixelBuffer_, (id)v33, *(void *)&v115, *(void *)&v116, *(void *)&v117);
                    }
                    else
                    {
                      id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCGImage_, (id)v33, *(void *)&v115, *(void *)&v116, *(void *)&v117);
                    }
                    uint64_t v38 = v37;
                    sub_260ED3714((uint64_t)v37, (uint64_t)v155, 0.2);

                    uint64_t v28 = v135;
LABEL_13:
                    sub_260DC6F1C(*(id *)&v142, SLOBYTE(v144));
                    sub_260DC6F1C(*(id *)&v142, SLOBYTE(v144));
                    goto LABEL_14;
                  }
                }
LABEL_89:
                swift_bridgeObjectRelease_n();
                double v86 = v142;
                double v85 = v143;
              }
              continue;
            }
LABEL_126:
            LODWORD(v31) = 0;
            uint64_t v36 = a4;
            uint64_t v20 = v130;
            uint64_t v23 = (uint64_t)v137;
LABEL_127:
            sub_260DE8D78(a10, (uint64_t)&v148);
            if (v149)
            {
              sub_260DD7B40(&v148, (uint64_t)&v151);
              uint64_t v113 = *(void *)(a8 + 16);
              uint64_t v112 = *(void *)(a8 + 24);
              uint64_t v31 = v113;
              if (v112 < v113)
              {
                uint64_t v31 = v112 + 1;
                *(void *)(a8 + 24) = v112 + 1;
              }
              uint64_t v64 = v152;
              int64_t v30 = v153;
              __swift_project_boxed_opaque_existential_1(&v151, v152);
              id v149 = &type metadata for WordCloudImageGenerator.ProgressInfo;
              long long v150 = &off_270D19C00;
              uint64_t v65 = swift_allocObject();
              *(void *)&long long v148 = v65;
              *(void *)(v65 + 16) = v31;
              *(void *)(v65 + 24) = v113;
              *(unsigned char *)(v65 + 32) = 0;
              *(void *)(v65 + 40) = 0;
              uint64_t v63 = a11;
              (*(void (**)(uint64_t, uint64_t, long long *, uint64_t, int64_t))(v30 + 16))(v134, a11, &v148, v64, v30);

              swift_release();
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v148);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v151);
              uint64_t v36 = a4;
              uint64_t v23 = (uint64_t)v137;
              LODWORD(v31) = 0;
              uint64_t v20 = v130;
            }
            else
            {

              swift_release();
              sub_260DE8DE0((uint64_t)&v148);
              uint64_t v63 = a11;
            }
            uint64_t v28 = v135;
            if (v23 == v20)
            {
              swift_bridgeObjectRelease();
              goto LABEL_134;
            }
            break;
          default:
            goto LABEL_126;
        }
        break;
      }
    }
  }
  uint64_t v36 = a4;
LABEL_134:
  CGImageRef Image = CGBitmapContextCreateImage(*((CGContextRef *)v139 + 4));
  swift_release();
  if (Image)
  {

    uint64_t v34 = type metadata accessor for GeneratedImage();
    char v35 = 0;
    CGImageRef v127 = Image;
  }
  else
  {
    uint64_t v34 = type metadata accessor for GeneratedImage();
    char v35 = 1;
  }
LABEL_9:
  uint64_t result = sub_260DE9094(v36, v28 + *(int *)(v34 + 20), (uint64_t (*)(void))type metadata accessor for ImageProvenance);
  *(void *)uint64_t v28 = v127;
  *(unsigned char *)(v28 + 8) = v35;
  *(unsigned char *)(v28 + *(int *)(v34 + 24)) = 4;
  return result;
}

uint64_t sub_260DE6E6C(CGFloat a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5)
{
  if (*a4) {
    uint64_t v6 = &unk_270D170D8;
  }
  else {
    uint64_t v6 = &unk_270D17088;
  }
  __swift_mutable_project_boxed_opaque_existential_1(a5, *(void *)(a5 + 24));
  sub_260DE8F80();
  sub_260DE8FD4();
  swift_bridgeObjectRetain();
  uint64_t result = sub_260FE3EE0();
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v12 < v6[2])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v8 = (__CFString *)sub_260FE4070();
    swift_bridgeObjectRelease();
    uint64_t v9 = CTFontCreateWithName(v8, a1, 0);

    uint64_t v10 = (__CFString *)sub_260FE4070();
    v13.length = CFStringGetLength(v10);
    v13.location = 0;
    CTFontRef v11 = CTFontCreateForString(v9, v10, v13);

    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_260DE6FF0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_260DE7028()
{
  return swift_allocObject();
}

uint64_t sub_260DE7038()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WordCloudImageGenerator()
{
  return self;
}

uint64_t type metadata accessor for WordCloudImageGenerator.RemainingProgressItems()
{
  return self;
}

uint64_t type metadata accessor for WordCloudImageGenerator.WordModel()
{
  return self;
}

uint64_t sub_260DE70B4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_260FE50F0();
  if (result >= v3)
  {
    if (v3 < 0)
    {
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      sub_260FE4E90();
      __break(1u);
      goto LABEL_191;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v12 = *(void *)(v10 + 8 * i);
        uint64_t v13 = v9;
        do
        {
          uint64_t v14 = *(void *)(v10 + v13);
          if (*(void *)(v14 + 32) >= *(void *)(v12 + 32)) {
            break;
          }
          if (!v10) {
            goto LABEL_186;
          }
          *(void *)(v10 + v13 + 8) = v14;
          *(void *)(v10 + v13) = v12;
          v13 -= 8;
        }
        while (v13 != -8);
        v9 += 8;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1)
    {
LABEL_191:
      uint64_t result = sub_260FE4E10();
      __break(1u);
      return result;
    }
    uint64_t v117 = result;
    uint64_t v119 = v1;
    double v115 = a1;
    if (v3 >= 2)
    {
      uint64_t v6 = v5 >> 1;
      type metadata accessor for WordCloudImageGenerator.WordModel();
      uint64_t v7 = sub_260FE4460();
      *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
      uint64_t v8 = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
      uint64_t v129 = v7;
      goto LABEL_18;
    }
    int64_t v15 = (char *)MEMORY[0x263F8EE78];
    uint64_t v129 = MEMORY[0x263F8EE78];
    uint64_t v8 = (char *)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 == 1)
    {
LABEL_18:
      uint64_t v16 = 0;
      uint64_t v17 = *a1;
      uint64_t v116 = v17 - 8;
      int64_t v15 = (char *)MEMORY[0x263F8EE78];
      uint64_t v18 = v3;
      uint64_t v118 = v3;
      __dst = v8;
      uint64_t v123 = v17;
      while (1)
      {
        uint64_t v20 = v16 + 1;
        if (v16 + 1 < v18)
        {
          uint64_t v21 = *(void *)(*(void *)(v17 + 8 * v20) + 32);
          uint64_t v22 = *(void *)(*(void *)(v17 + 8 * v16) + 32);
          uint64_t v20 = v16 + 2;
          if (v16 + 2 < v18)
          {
            uint64_t v23 = v21;
            while (1)
            {
              uint64_t v24 = *(void *)(*(void *)(v17 + 8 * v20) + 32);
              if (v22 < v21 == v23 >= v24) {
                break;
              }
              ++v20;
              uint64_t v23 = v24;
              if (v18 == v20)
              {
                uint64_t v20 = v18;
                break;
              }
            }
          }
          if (v22 < v21)
          {
            if (v20 < v16) {
              goto LABEL_181;
            }
            if (v16 < v20)
            {
              id v25 = (uint64_t *)(v116 + 8 * v20);
              uint64_t v26 = v20;
              uint64_t v27 = v16;
              uint64_t v28 = (uint64_t *)(v17 + 8 * v16);
              do
              {
                if (v27 != --v26)
                {
                  if (!v17) {
                    goto LABEL_188;
                  }
                  uint64_t v29 = *v28;
                  *uint64_t v28 = *v25;
                  *id v25 = v29;
                }
                ++v27;
                --v25;
                ++v28;
              }
              while (v27 < v26);
            }
          }
        }
        if (v20 < v18)
        {
          if (__OFSUB__(v20, v16)) {
            goto LABEL_176;
          }
          if (v20 - v16 < v117)
          {
            uint64_t v30 = v16 + v117;
            if (__OFADD__(v16, v117)) {
              goto LABEL_182;
            }
            if (v30 >= v18) {
              uint64_t v30 = v18;
            }
            if (v30 < v16) {
              goto LABEL_183;
            }
            if (v20 != v30)
            {
              uint64_t v31 = (void *)(v116 + 8 * v20);
              do
              {
                uint64_t v32 = *(void *)(v17 + 8 * v20);
                uint64_t v33 = v16;
                uint64_t v34 = v31;
                do
                {
                  uint64_t v35 = *v34;
                  if (*(void *)(*v34 + 32) >= *(void *)(v32 + 32)) {
                    break;
                  }
                  if (!v17) {
                    goto LABEL_184;
                  }
                  *uint64_t v34 = v32;
                  v34[1] = v35;
                  --v34;
                  ++v33;
                }
                while (v20 != v33);
                ++v20;
                ++v31;
              }
              while (v20 != v30);
              uint64_t v20 = v30;
            }
          }
        }
        if (v20 < v16) {
          goto LABEL_175;
        }
        uint64_t v120 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v15 = sub_260DECCD0(0, *((void *)v15 + 2) + 1, 1, v15);
        }
        uint64_t v8 = __dst;
        unint64_t v37 = *((void *)v15 + 2);
        unint64_t v36 = *((void *)v15 + 3);
        unint64_t v19 = v37 + 1;
        if (v37 >= v36 >> 1)
        {
          CGFloat v107 = sub_260DECCD0((char *)(v36 > 1), v37 + 1, 1, v15);
          uint64_t v8 = __dst;
          int64_t v15 = v107;
        }
        *((void *)v15 + 2) = v19;
        uint64_t v38 = v15 + 32;
        uint64_t v39 = &v15[16 * v37 + 32];
        *(void *)uint64_t v39 = v16;
        *((void *)v39 + 1) = v120;
        if (v37) {
          break;
        }
        unint64_t v19 = 1;
LABEL_20:
        uint64_t v18 = v118;
        uint64_t v16 = v120;
        if (v120 >= v118) {
          goto LABEL_147;
        }
      }
      double v124 = v15 + 32;
      long long v121 = v15;
      while (1)
      {
        int64_t v40 = v19 - 1;
        if (v19 >= 4)
        {
          uint64_t v45 = &v38[16 * v19];
          uint64_t v46 = *((void *)v45 - 8);
          uint64_t v47 = *((void *)v45 - 7);
          BOOL v51 = __OFSUB__(v47, v46);
          uint64_t v48 = v47 - v46;
          if (v51) {
            goto LABEL_164;
          }
          uint64_t v50 = *((void *)v45 - 6);
          uint64_t v49 = *((void *)v45 - 5);
          BOOL v51 = __OFSUB__(v49, v50);
          uint64_t v43 = v49 - v50;
          char v44 = v51;
          if (v51) {
            goto LABEL_165;
          }
          unint64_t v52 = v19 - 2;
          unint64_t v53 = &v38[16 * v19 - 32];
          uint64_t v55 = *(void *)v53;
          uint64_t v54 = *((void *)v53 + 1);
          BOOL v51 = __OFSUB__(v54, v55);
          uint64_t v56 = v54 - v55;
          if (v51) {
            goto LABEL_167;
          }
          BOOL v51 = __OFADD__(v43, v56);
          uint64_t v57 = v43 + v56;
          if (v51) {
            goto LABEL_170;
          }
          if (v57 >= v48)
          {
            id v75 = &v38[16 * v40];
            uint64_t v77 = *(void *)v75;
            uint64_t v76 = *((void *)v75 + 1);
            BOOL v51 = __OFSUB__(v76, v77);
            uint64_t v78 = v76 - v77;
            if (v51) {
              goto LABEL_174;
            }
            BOOL v68 = v43 < v78;
            goto LABEL_90;
          }
        }
        else
        {
          if (v19 != 3)
          {
            uint64_t v69 = *((void *)v15 + 4);
            uint64_t v70 = *((void *)v15 + 5);
            BOOL v51 = __OFSUB__(v70, v69);
            uint64_t v62 = v70 - v69;
            char v63 = v51;
            goto LABEL_84;
          }
          uint64_t v42 = *((void *)v15 + 4);
          uint64_t v41 = *((void *)v15 + 5);
          BOOL v51 = __OFSUB__(v41, v42);
          uint64_t v43 = v41 - v42;
          char v44 = v51;
        }
        if (v44) {
          goto LABEL_166;
        }
        unint64_t v52 = v19 - 2;
        unint64_t v58 = &v38[16 * v19 - 32];
        uint64_t v60 = *(void *)v58;
        uint64_t v59 = *((void *)v58 + 1);
        BOOL v61 = __OFSUB__(v59, v60);
        uint64_t v62 = v59 - v60;
        char v63 = v61;
        if (v61) {
          goto LABEL_169;
        }
        uint64_t v64 = &v38[16 * v40];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v51 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v51) {
          goto LABEL_172;
        }
        if (__OFADD__(v62, v67)) {
          goto LABEL_173;
        }
        if (v62 + v67 >= v43)
        {
          BOOL v68 = v43 < v67;
LABEL_90:
          if (v68) {
            int64_t v40 = v52;
          }
          goto LABEL_92;
        }
LABEL_84:
        if (v63) {
          goto LABEL_168;
        }
        uint64_t v71 = &v38[16 * v40];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v51 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v51) {
          goto LABEL_171;
        }
        if (v74 < v62) {
          goto LABEL_20;
        }
LABEL_92:
        if (v40 - 1 >= v19)
        {
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
          goto LABEL_177;
        }
        if (!v17) {
          goto LABEL_187;
        }
        char v79 = v15;
        int64_t v128 = v40 - 1;
        CGImageRef v127 = &v38[16 * v40 - 16];
        uint64_t v80 = *(void *)v127;
        uint64_t v81 = &v38[16 * v40];
        uint64_t v82 = *(void *)v81;
        uint64_t v83 = *((void *)v81 + 1);
        unint64_t v126 = v81;
        float64x2_t v84 = (char *)(v17 + 8 * *(void *)v127);
        double v85 = (char *)(v17 + 8 * *(void *)v81);
        double v86 = (char *)(v17 + 8 * v83);
        uint64_t v87 = v85 - v84;
        uint64_t v88 = v85 - v84 + 7;
        if (v85 - v84 >= 0) {
          uint64_t v88 = v85 - v84;
        }
        uint64_t v89 = v88 >> 3;
        uint64_t v90 = v86 - v85;
        uint64_t v91 = v86 - v85 + 7;
        if (v86 - v85 >= 0) {
          uint64_t v91 = v86 - v85;
        }
        uint64_t v92 = v91 >> 3;
        if (v89 >= v91 >> 3)
        {
          if (v90 < -7) {
            goto LABEL_190;
          }
          uint64_t v38 = v124;
          if (v8 >= v86 || (int64_t v15 = v79, v8 != v85))
          {
            int64_t v98 = v40;
            uint64_t v99 = *(void *)v127;
            memmove(v8, v85, 8 * v92);
            uint64_t v38 = v124;
            uint64_t v8 = __dst;
            uint64_t v80 = v99;
            int64_t v15 = v121;
            int64_t v40 = v98;
          }
          double v94 = &v8[8 * v92];
          if (v80 >= v82 || v90 < 8)
          {
            CGFloat v95 = v8;
            uint64_t v17 = v123;
            goto LABEL_135;
          }
          uint64_t v17 = v123;
          while (2)
          {
            uint64_t v100 = *((void *)v85 - 1);
            if (*(void *)(v100 + 32) >= *(void *)(*((void *)v94 - 1) + 32))
            {
              uint64_t v100 = *((void *)v94 - 1);
              BOOL v97 = v86 == v94;
              v94 -= 8;
              if (!v97) {
                goto LABEL_127;
              }
            }
            else
            {
              BOOL v97 = v86 == v85;
              v85 -= 8;
              if (!v97) {
LABEL_127:
              }
                *((void *)v86 - 1) = v100;
            }
            if (v84 >= v85 || (v86 -= 8, v8 >= v94))
            {
              CGFloat v95 = v8;
              goto LABEL_135;
            }
            continue;
          }
        }
        if (v87 < -7) {
          goto LABEL_190;
        }
        uint64_t v17 = v123;
        if (v8 != v84 || v8 >= v85)
        {
          int64_t v93 = v40;
          uint64_t v122 = *(void *)v127;
          memmove(v8, v84, 8 * v89);
          uint64_t v80 = v122;
          uint64_t v17 = v123;
          int64_t v40 = v93;
          uint64_t v8 = __dst;
        }
        double v94 = &v8[8 * v89];
        if (v82 >= v83)
        {
          CGFloat v95 = v8;
          double v85 = v84;
          int64_t v15 = v79;
        }
        else
        {
          int64_t v15 = v79;
          CGFloat v95 = v8;
          if (v87 >= 8)
          {
            uint64_t v38 = v124;
            while (1)
            {
              uint64_t v96 = *(void *)v85;
              if (*(void *)(*(void *)v95 + 32) >= *(void *)(*(void *)v85 + 32)) {
                break;
              }
              BOOL v97 = v84 == v85;
              v85 += 8;
              if (!v97) {
                goto LABEL_111;
              }
LABEL_112:
              v84 += 8;
              if (v95 >= v94 || v85 >= v86)
              {
                double v85 = v84;
                goto LABEL_135;
              }
            }
            uint64_t v96 = *(void *)v95;
            BOOL v97 = v84 == v95;
            v95 += 8;
            if (v97) {
              goto LABEL_112;
            }
LABEL_111:
            *(void *)float64x2_t v84 = v96;
            goto LABEL_112;
          }
          double v85 = v84;
        }
        uint64_t v38 = v124;
LABEL_135:
        uint64_t v101 = v94 - v95;
        uint64_t v102 = v94 - v95 + 7;
        if (v101 >= 0) {
          uint64_t v102 = v101;
        }
        if (v101 <= -8) {
          goto LABEL_190;
        }
        uint64_t v103 = v102 >> 3;
        if (v85 != v95 || v85 >= &v95[8 * v103])
        {
          int64_t v104 = v40;
          uint64_t v105 = v80;
          memmove(v85, v95, 8 * v103);
          uint64_t v80 = v105;
          int64_t v40 = v104;
        }
        if (v83 < v80) {
          goto LABEL_161;
        }
        if (v40 > *((void *)v15 + 2)) {
          goto LABEL_162;
        }
        *(void *)CGImageRef v127 = v80;
        *(void *)&v38[16 * v128 + 8] = v83;
        unint64_t v106 = *((void *)v15 + 2);
        if (v40 >= (uint64_t)v106) {
          goto LABEL_163;
        }
        unint64_t v19 = v106 - 1;
        memmove(v126, v126 + 16, 16 * (v106 - 1 - v40));
        *((void *)v15 + 2) = v106 - 1;
        uint64_t v8 = __dst;
        if (v106 <= 2) {
          goto LABEL_20;
        }
      }
    }
    unint64_t v19 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_147:
    if (v19 >= 2)
    {
      uint64_t v108 = *v115;
      while (1)
      {
        unint64_t v109 = v19 - 2;
        if (v19 < 2) {
          break;
        }
        if (!v108) {
          goto LABEL_189;
        }
        uint64_t v110 = v8;
        uint64_t v111 = *(void *)&v15[16 * v109 + 32];
        uint64_t v112 = *(void *)&v15[16 * v19 + 24];
        sub_260DE79E4((char *)(v108 + 8 * v111), (char *)(v108 + 8 * *(void *)&v15[16 * v19 + 16]), v108 + 8 * v112, v8);
        if (v119) {
          goto LABEL_158;
        }
        if (v112 < v111) {
          goto LABEL_178;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v15 = sub_260DED460((uint64_t)v15);
        }
        if (v109 >= *((void *)v15 + 2)) {
          goto LABEL_179;
        }
        uint64_t v113 = &v15[16 * v109 + 32];
        *(void *)uint64_t v113 = v111;
        *((void *)v113 + 1) = v112;
        unint64_t v114 = *((void *)v15 + 2);
        if (v19 > v114) {
          goto LABEL_180;
        }
        memmove(&v15[16 * v19 + 16], &v15[16 * v19 + 32], 16 * (v114 - v19));
        *((void *)v15 + 2) = v114 - 1;
        unint64_t v19 = v114 - 1;
        uint64_t v8 = v110;
        if (v114 <= 2) {
          goto LABEL_158;
        }
      }
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
      goto LABEL_185;
    }
LABEL_158:
    swift_bridgeObjectRelease();
    *(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_260FE4420();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_260DE79E4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  unint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          unint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (*(void *)(v20 + 32) >= *(void *)(*((void *)v16 - 1) + 32))
          {
            uint64_t v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)(*(void *)v4 + 32) >= *(void *)(*(void *)v6 + 32))
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          int64_t v15 = v6;
        }
        else
        {
          int64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_260DED0D0((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

unint64_t sub_260DE7C64()
{
  unint64_t result = qword_26A8E7360;
  if (!qword_26A8E7360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7360);
  }
  return result;
}

uint64_t sub_260DE7CB8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  int64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_260DE7D40(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_260FE4D30();
    uint64_t result = sub_260DE7CB8(a1);
    uint64_t v5 = result;
    int v7 = v6;
    uint64_t v8 = 0;
    uint64_t v9 = a1 + 64;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v11 = (unint64_t)v5 >> 6;
      if ((*(void *)(v9 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_23;
      }
      uint64_t v22 = v8;
      uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
      a2(v13, v14, v15);
      swift_bridgeObjectRelease();
      sub_260FE4D00();
      sub_260FE4D40();
      sub_260FE4D50();
      uint64_t result = sub_260FE4D10();
      int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
      if (v5 >= v10) {
        goto LABEL_24;
      }
      uint64_t v16 = *(void *)(v9 + 8 * v11);
      if ((v16 & (1 << v5)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_26;
      }
      unint64_t v17 = v16 & (-2 << (v5 & 0x3F));
      if (v17)
      {
        int64_t v10 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v18 = v11 + 1;
        unint64_t v19 = (unint64_t)(v10 + 63) >> 6;
        if (v11 + 1 < v19)
        {
          unint64_t v20 = *(void *)(v9 + 8 * v18);
          if (v20)
          {
LABEL_18:
            int64_t v10 = __clz(__rbit64(v20)) + (v18 << 6);
          }
          else
          {
            while (v19 - 2 != v11)
            {
              unint64_t v20 = *(void *)(a1 + 80 + 8 * v11++);
              if (v20)
              {
                unint64_t v18 = v11 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v8 = v22 + 1;
      uint64_t v5 = v10;
      if (v22 + 1 == v3) {
        return v23;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_260DE7F54(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if (qword_26A8E6078 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v4 = off_26A8E76C8;
  swift_bridgeObjectRetain();
  char v5 = sub_260EACB9C(v3, (uint64_t)v4);
  swift_bridgeObjectRelease();
  if (v5)
  {
    if (*(void *)(a2 + 16)) {
      char v6 = sub_260EACB9C(v3, a2);
    }
    else {
      char v6 = 1;
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_260DE8024(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  uint64_t v3 = type metadata accessor for NamedEntityData.PhotosPersonData(0);
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  type metadata accessor for NamedEntityData.NamedEntityType(0);
  v2[12] = swift_task_alloc();
  v2[13] = type metadata accessor for NamedEntityData(0);
  v2[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Concept(0);
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ResolvedTextPrompt(0);
  v2[18] = v5;
  v2[19] = *(void *)(v5 - 8);
  v2[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DE81F8, 0, 0);
}

uint64_t sub_260DE81F8()
{
  uint64_t v112 = v0;
  uint64_t v1 = v0[7];
  uint64_t v2 = type metadata accessor for GenerationRecipe(0);
  uint64_t v3 = *(void *)(v1 + *(int *)(v2 + 60));
  int64_t v4 = *(void *)(v3 + 16);
  unint64_t v5 = MEMORY[0x263F8EE78];
  unint64_t v109 = v0;
  uint64_t v94 = v2;
  if (v4)
  {
    uint64_t v6 = v0[19];
    unint64_t v110 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_260DB45C4(0, v4, 0);
    uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void *)(v6 + 72);
    do
    {
      uint64_t v9 = v109[20];
      sub_260DE9094(v7, v9, type metadata accessor for ResolvedTextPrompt);
      sub_260FE2BC0();
      swift_task_alloc();
      sub_260FE2BA0();
      sub_260DE8E78();
      uint64_t v10 = sub_260FE42E0();
      uint64_t v12 = v11;
      swift_task_dealloc();
      sub_260DE9034(v9, type metadata accessor for ResolvedTextPrompt);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_260DB45C4(0, *(void *)(v5 + 16) + 1, 1);
        unint64_t v5 = v110;
      }
      unint64_t v14 = *(void *)(v5 + 16);
      unint64_t v13 = *(void *)(v5 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_260DB45C4(v13 > 1, v14 + 1, 1);
        unint64_t v5 = v110;
      }
      *(void *)(v5 + 16) = v14 + 1;
      unint64_t v15 = v5 + 16 * v14;
      *(void *)(v15 + 32) = v10;
      *(void *)(v15 + 40) = v12;
      v7 += v8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v0 = v109;
    uint64_t v16 = v94;
  }
  else
  {
    uint64_t v16 = v2;
  }
  uint64_t v17 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v18 = v0[7];
    uint64_t v19 = *(void *)(v18 + 64);
    if (*(void *)(v19 + 16)) {
      char v20 = *(unsigned char *)(v19 + 32);
    }
    else {
      char v20 = 5;
    }
    char v93 = v20;
    unint64_t v24 = sub_260DAA4DC(MEMORY[0x263F8EE78]);
    uint64_t v25 = *(void *)(v18 + *(int *)(v16 + 84));
    uint64_t v26 = *(void *)(v25 + 16);
    if (v26)
    {
      uint64_t v27 = v0[16];
      uint64_t v97 = v0[14];
      uint64_t v98 = v0[17];
      uint64_t v96 = v0[13];
      uint64_t v101 = v0[8];
      uint64_t v28 = v25 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
      CGFloat v95 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[10] + 48);
      uint64_t v99 = *(void *)(v27 + 72);
      swift_bridgeObjectRetain();
      uint64_t v29 = 5;
      while (2)
      {
        uint64_t v105 = v26;
        sub_260DE9094(v28, v0[17], type metadata accessor for Concept);
        uint64_t v103 = v28;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v30 = *(void *)v0[17];
            uint64_t v31 = *(void *)(v98 + 8);
            uint64_t v29 = 2;
            if (*(void *)(v24 + 16)) {
              goto LABEL_21;
            }
            goto LABEL_28;
          case 2u:
            sub_260DE9034(v0[17], type metadata accessor for Concept);
            uint64_t v31 = 0x8000000260FFCB90;
            uint64_t v30 = 0xD000000000000019;
            if (!*(void *)(v24 + 16)) {
              goto LABEL_28;
            }
            goto LABEL_21;
          case 4u:
            uint64_t v41 = v0[14];
            uint64_t v42 = v0[12];
            uint64_t v43 = v0[9];
            sub_260DE8F18(v0[17], v41, type metadata accessor for NamedEntityData);
            sub_260DE9094(v41 + *(int *)(v96 + 20), v42, type metadata accessor for NamedEntityData.NamedEntityType);
            if ((*v95)(v42, 1, v43) == 1)
            {
              char v44 = (unint64_t *)v0[14];
              unint64_t v45 = *(void *)(v97 + 8);
              unint64_t v110 = *v44;
              unint64_t v111 = v45;
              swift_bridgeObjectRetain();
              sub_260FE4250();
              uint64_t v30 = v110;
              uint64_t v31 = v111;
              sub_260DE9034((uint64_t)v44, type metadata accessor for NamedEntityData);
              if (!*(void *)(v24 + 16)) {
                goto LABEL_28;
              }
            }
            else
            {
              sub_260DE8F18(v0[12], v0[11], type metadata accessor for NamedEntityData.PhotosPersonData);
              uint64_t v46 = sub_260FE30C0();
              sub_260DE5038(45, 0xE100000000000000, v46, v47);
              unint64_t v106 = v24;
              uint64_t v49 = v29;
              if ((v48 & 1) == 0)
              {
                uint64_t v50 = sub_260FE4300();
                uint64_t v52 = v51;
                uint64_t v54 = v53;
                uint64_t v56 = v55;
                swift_bridgeObjectRelease();
                MEMORY[0x26122A9E0](v50, v52, v54, v56);
              }
              swift_bridgeObjectRelease();
              uint64_t v57 = (unint64_t *)v0[14];
              uint64_t v58 = v0[11];
              unint64_t v110 = 0;
              unint64_t v111 = 0xE000000000000000;
              sub_260FE4C20();
              unint64_t v59 = *v57;
              unint64_t v60 = *(void *)(v97 + 8);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              unint64_t v110 = v59;
              unint64_t v111 = v60;
              sub_260FE4250();
              sub_260FE4250();
              swift_bridgeObjectRelease();
              sub_260FE4250();
              uint64_t v30 = v59;
              uint64_t v31 = v60;
              sub_260DE9034(v58, type metadata accessor for NamedEntityData.PhotosPersonData);
              sub_260DE9034((uint64_t)v57, type metadata accessor for NamedEntityData);
              unint64_t v24 = v106;
              uint64_t v29 = v49;
              if (!*(void *)(v106 + 16))
              {
LABEL_28:
                unint64_t v34 = v24;
                uint64_t v35 = 0;
                goto LABEL_29;
              }
            }
LABEL_21:
            swift_bridgeObjectRetain();
            unint64_t v32 = sub_260DBACB4(v30, v31);
            unint64_t v34 = v24;
            if (v33) {
              uint64_t v35 = *(void *)(*(void *)(v24 + 56) + 8 * v32);
            }
            else {
              uint64_t v35 = 0;
            }
            swift_bridgeObjectRelease();
LABEL_29:
            uint64_t v36 = v0[8];
            v0[3] = 3 * v29;
            __swift_mutable_project_boxed_opaque_existential_1(v36, *(void *)(v101 + 24));
            sub_260DE8F80();
            sub_260DE8FD4();
            sub_260FE3EE0();
            uint64_t v37 = v0[2];
            if (v37 < 0)
            {
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
LABEL_64:
              __break(1u);
              JUMPOUT(0x260DE8D64);
            }
            uint64_t v38 = v37 - 2 * v29;
            uint64_t v39 = v35 + v38;
            if (__OFADD__(v35, v38)) {
              goto LABEL_62;
            }
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v110 = v34;
            sub_260DE05F0(v39, v30, v31, isUniquelyReferenced_nonNull_native);
            unint64_t v24 = v34;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v28 = v103 + v99;
            uint64_t v26 = v105 - 1;
            if (v105 != 1) {
              continue;
            }
            swift_bridgeObjectRelease();
            uint64_t v16 = v94;
            break;
          default:
            uint64_t v30 = *(void *)v0[17];
            uint64_t v31 = *(void *)(v98 + 8);
            if (*(void *)(v24 + 16)) {
              goto LABEL_21;
            }
            goto LABEL_28;
        }
        break;
      }
    }
    else
    {
      uint64_t v29 = 5;
    }
    uint64_t v61 = *(void *)(v0[7] + *(int *)(v16 + 64));
    int64_t v62 = *(void *)(v61 + 16);
    unint64_t v63 = MEMORY[0x263F8EE78];
    uint64_t v104 = v29;
    if (v62)
    {
      unint64_t v107 = v24;
      uint64_t v64 = v0[19];
      unint64_t v110 = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_260DB45C4(0, v62, 0);
      uint64_t v65 = v61 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
      uint64_t v66 = *(void *)(v64 + 72);
      do
      {
        uint64_t v67 = v0[20];
        sub_260DE9094(v65, v67, type metadata accessor for ResolvedTextPrompt);
        sub_260FE2BC0();
        swift_task_alloc();
        sub_260FE2BA0();
        sub_260DE8E78();
        uint64_t v68 = sub_260FE42E0();
        uint64_t v70 = v69;
        swift_task_dealloc();
        sub_260DE9034(v67, type metadata accessor for ResolvedTextPrompt);
        unint64_t v63 = v110;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_260DB45C4(0, *(void *)(v110 + 16) + 1, 1);
          unint64_t v63 = v110;
        }
        unint64_t v72 = *(void *)(v63 + 16);
        unint64_t v71 = *(void *)(v63 + 24);
        if (v72 >= v71 >> 1)
        {
          sub_260DB45C4(v71 > 1, v72 + 1, 1);
          unint64_t v63 = v110;
        }
        *(void *)(v63 + 16) = v72 + 1;
        unint64_t v73 = v63 + 16 * v72;
        *(void *)(v73 + 32) = v68;
        *(void *)(v73 + 40) = v70;
        v65 += v66;
        --v62;
        uint64_t v0 = v109;
      }
      while (v62);
      swift_bridgeObjectRelease();
      unint64_t v24 = v107;
      uint64_t v29 = v104;
    }
    uint64_t v74 = *(void *)(v63 + 16);
    if (v74)
    {
      uint64_t v100 = 2 * v29;
      uint64_t v102 = v0[8];
      id v75 = (uint64_t *)(v63 + 40);
      do
      {
        uint64_t v76 = *(v75 - 1);
        uint64_t v77 = *v75;
        uint64_t v78 = *(void *)(v24 + 16);
        swift_bridgeObjectRetain();
        unint64_t v108 = v24;
        if (v78 && (unint64_t v79 = sub_260DBACB4(v76, v77), (v80 & 1) != 0)) {
          uint64_t v81 = *(void *)(*(void *)(v24 + 56) + 8 * v79);
        }
        else {
          uint64_t v81 = 0;
        }
        uint64_t v82 = v109[8];
        v109[5] = v100;
        __swift_mutable_project_boxed_opaque_existential_1(v82, *(void *)(v102 + 24));
        sub_260DE8F80();
        sub_260DE8FD4();
        sub_260FE3EE0();
        uint64_t v83 = v109[4];
        if (v83 < 0) {
          goto LABEL_63;
        }
        uint64_t v84 = v83 - v104;
        uint64_t v85 = v81 - v84;
        if (__OFSUB__(v81, v84)) {
          goto LABEL_64;
        }
        char v86 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v110 = v108;
        sub_260DE05F0(v85, v76, v77, v86);
        unint64_t v24 = v108;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v75 += 2;
        --v74;
        uint64_t v0 = v109;
      }
      while (v74);
    }
    uint64_t v87 = v0[8];
    swift_bridgeObjectRelease();
    uint64_t v88 = swift_task_alloc();
    *(unsigned char *)(v88 + 16) = v93;
    *(void *)(v88 + 24) = v87;
    uint64_t v89 = swift_bridgeObjectRetain();
    uint64_t v90 = sub_260DE7D40(v89, (void (*)(uint64_t, uint64_t, uint64_t))sub_260DE9028);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    unint64_t v110 = v90;
    sub_260DE5FA8(&v110);
    unint64_t v91 = v110;
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v92 = (uint64_t (*)(unint64_t))v0[1];
    return v92(v91);
  }
  else
  {
    sub_260DE8EC4();
    swift_allocError();
    *(void *)(v21 + 8) = 0;
    *(void *)(v21 + 16) = 0;
    *(void *)uint64_t v21 = 0;
    *(unsigned char *)(v21 + 24) = 8;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
}

uint64_t sub_260DE8D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_260DE8DE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7200);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_260DE8E40()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

unint64_t sub_260DE8E78()
{
  unint64_t result = qword_26A8E71F0;
  if (!qword_26A8E71F0)
  {
    sub_260FE2BC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E71F0);
  }
  return result;
}

unint64_t sub_260DE8EC4()
{
  unint64_t result = qword_26A8E91A0;
  if (!qword_26A8E91A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E91A0);
  }
  return result;
}

uint64_t sub_260DE8F18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_260DE8F80()
{
  unint64_t result = qword_26A8E7370;
  if (!qword_26A8E7370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7370);
  }
  return result;
}

unint64_t sub_260DE8FD4()
{
  unint64_t result = qword_26A8E7378;
  if (!qword_26A8E7378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7378);
  }
  return result;
}

uint64_t sub_260DE9028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_260DE5DFC(a1, a2, a3, *(unsigned char *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_260DE9034(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_260DE9094(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_260DE90FC()
{
  unint64_t result = qword_26A8E64E8;
  if (!qword_26A8E64E8)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E64E8);
  }
  return result;
}

uint64_t sub_260DE9154(uint64_t a1, uint64_t a2)
{
  return a2;
}

ValueMetadata *type metadata accessor for WordCloudImageGenerator.Descriptor()
{
  return &type metadata for WordCloudImageGenerator.Descriptor;
}

uint64_t _s14GenerationTaskC8ProgressVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s14GenerationTaskC8ProgressVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14GenerationTaskC8ProgressVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14GenerationTaskC8ProgressVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14GenerationTaskC8ProgressVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s14GenerationTaskC8ProgressVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WordCloudImageGenerator.ProgressInfo()
{
  return &type metadata for WordCloudImageGenerator.ProgressInfo;
}

uint64_t GenerativePlayground.imageGeneratorIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_260DE9390()
{
  uint64_t v0 = sub_260FE3A10();
  __swift_allocate_value_buffer(v0, qword_26A90FA70);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A90FA70);
  return sub_260FE3A00();
}

uint64_t sub_260DE9414()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_260DE94AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 >= a3) {
    uint64_t v4 = a3;
  }
  else {
    uint64_t v4 = a4;
  }
  if (a2 >= a1) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = a2;
  }
  if (a4 <= a3) {
    uint64_t v6 = a3;
  }
  else {
    uint64_t v6 = a4;
  }
  if (a2 <= a1) {
    uint64_t v7 = a1;
  }
  else {
    uint64_t v7 = a2;
  }
  BOOL v8 = v6 < v7;
  if (v5 < v4) {
    BOOL v8 = 0;
  }
  return v4 < v5 || v8;
}

uint64_t sub_260DE94EC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_260DED488(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_260DEC2EC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_260DE9558(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4 = MEMORY[0x263F8EE88];
  uint64_t v23 = MEMORY[0x263F8EE88];
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    int v9 = a4 ^ 1;
    if (a2 <= a1) {
      uint64_t v10 = a1;
    }
    else {
      uint64_t v10 = a2;
    }
    if (a2 >= a1) {
      uint64_t v11 = a1;
    }
    else {
      uint64_t v11 = a2;
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = (uint64_t *)(a3 + 40);
    do
    {
      uint64_t v13 = *(v12 - 1);
      uint64_t v14 = *v12;
      BOOL v16 = v13 == a1 && v14 == a2;
      if (((v16 | v9) & 1) != 0
        || (v14 <= v13 ? (uint64_t v17 = *(v12 - 1)) : (uint64_t v17 = *v12),
            v14 >= v13 ? (uint64_t v18 = *(v12 - 1)) : (uint64_t v18 = *v12),
            v10 >= v17 ? (BOOL v19 = v11 < v18) : (BOOL v19 = 1),
            !v19))
      {
        sub_260DB6D74(&v22, v13, v14);
      }
      v12 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    uint64_t v4 = v23;
  }
  swift_bridgeObjectRetain_n();
  char v20 = sub_260DBA658(v4);
  swift_bridgeObjectRelease();
  *(void *)&long long v22 = v20;
  sub_260DE94EC((uint64_t *)&v22);
  swift_bridgeObjectRelease_n();
  return v22;
}

uint64_t sub_260DE9684(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v13 = *a1;
  uint64_t v4 = MEMORY[0x263F8EE88];
  uint64_t v17 = MEMORY[0x263F8EE88];
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    int v9 = *(uint64_t (**)(uint64_t *, long long *, uint64_t, uint64_t))(a4 + 16);
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v5; ++i)
    {
      long long v14 = *(_OWORD *)(a2 + 16 * i + 32);
      long long v15 = v14;
      *(_OWORD *)BOOL v16 = v13;
      if (v9(v16, &v15, a3, a4)) {
        sub_260DB6D74(v16, v14, *((uint64_t *)&v14 + 1));
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = v17;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_260DBA658(v4);
  swift_bridgeObjectRelease();
  v16[0] = (uint64_t)v11;
  sub_260DE94EC(v16);
  swift_bridgeObjectRelease_n();
  return v16[0];
}

uint64_t sub_260DE97C8(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 64) = a2;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a3;
  return MEMORY[0x270FA2498](sub_260DE97EC, 0, 0);
}

uint64_t sub_260DE97EC()
{
  char v1 = *(unsigned char *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7398);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 40) = v5;
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 32) = v3;
  *(unsigned char *)(v5 + 40) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_260DE9904;
  return MEMORY[0x270FA22B8](v0 + 16, &type metadata for Image, v4, 0, 0, &unk_26A8E73A8, v5, &type metadata for Image);
}

uint64_t sub_260DE9904()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_260DE9A3C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_260DE9A20;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260DE9A20()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_260DE9A3C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260DE9AA0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(v5 + 80) = a2;
  *(void *)(v5 + 40) = a1;
  *(void *)(v5 + 48) = a3;
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_260DE9AC8, 0, 0);
}

uint64_t sub_260DE9AC8()
{
  char v1 = *(unsigned char *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7398);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v0 + 16;
  *(void *)(v5 + 32) = v3;
  *(unsigned char *)(v5 + 40) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_260DE9BEC;
  return MEMORY[0x270FA22B8](v0 + 32, &type metadata for Image, v4, 0, 0, &unk_26A8E73E8, v5, &type metadata for Image);
}

uint64_t sub_260DE9BEC()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_260DE9D24;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_260DE9D08;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260DE9D08()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 32));
}

uint64_t sub_260DE9D24()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260DE9D88(uint64_t a1, char a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 65) = a2;
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a3;
  *(unsigned char *)(v4 + 64) = a4;
  return MEMORY[0x270FA2498](sub_260DE9DB0, 0, 0);
}

uint64_t sub_260DE9DB0()
{
  char v1 = *(unsigned char *)(v0 + 65);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7398);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 40) = v5;
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v0 + 64;
  *(void *)(v5 + 32) = v3;
  *(unsigned char *)(v5 + 40) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_260DE9904;
  return MEMORY[0x270FA22B8](v0 + 16, &type metadata for Image, v4, 0, 0, &unk_26A8E7420, v5, &type metadata for Image);
}

uint64_t sub_260DE9ED4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 81) = a4;
  *(void *)(v4 + 112) = a2;
  *(void *)(v4 + 120) = a3;
  *(void *)(v4 + 104) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  *(void *)(v4 + 128) = swift_task_alloc();
  *(void *)(v4 + 136) = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E73B8);
  *(void *)(v4 + 144) = v5;
  *(void *)(v4 + 152) = *(void *)(v5 - 8);
  *(void *)(v4 + 160) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DE9FE0, 0, 0);
}

uint64_t sub_260DE9FE0()
{
  uint64_t v1 = *(void *)(v0 + 112);
  unint64_t v2 = sub_260DD6A00(MEMORY[0x263F8EE78]);
  unint64_t v3 = v2;
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    unint64_t v27 = v2;
    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v31 = *(void **)(v0 + 120);
    uint64_t v6 = sub_260FE4520();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v29 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v28 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t *)(v5 + 40);
    do
    {
      uint64_t v32 = v4;
      uint64_t v11 = *(void *)(v0 + 128);
      uint64_t v10 = *(void *)(v0 + 136);
      char v12 = *(unsigned char *)(v0 + 81);
      uint64_t v13 = *(void *)(v0 + 120);
      uint64_t v14 = *(v8 - 1);
      uint64_t v15 = *v8;
      v30(v10, 1, 1, v6);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = 0;
      *(void *)(v16 + 24) = 0;
      *(void *)(v16 + 32) = v13;
      *(unsigned char *)(v16 + 40) = v12;
      *(void *)(v16 + 48) = v14;
      *(void *)(v16 + 56) = v15;
      sub_260DEDF3C(v10, v11);
      LODWORD(v11) = (*v29)(v11, 1, v6);
      id v17 = v31;
      uint64_t v18 = *(void *)(v0 + 128);
      if (v11 == 1)
      {
        sub_260DEDFA4(*(void *)(v0 + 128));
      }
      else
      {
        sub_260FE4510();
        (*v28)(v18, v6);
      }
      if (*(void *)(v16 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v19 = sub_260FE44A0();
        uint64_t v21 = v20;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v21 = 0;
      }
      uint64_t v22 = **(void **)(v0 + 104);
      uint64_t v23 = v21 | v19;
      if (v21 | v19)
      {
        uint64_t v23 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v19;
        *(void *)(v0 + 40) = v21;
      }
      v8 += 2;
      uint64_t v9 = *(void *)(v0 + 136);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v23;
      *(void *)(v0 + 64) = v22;
      swift_task_create();
      swift_release();
      sub_260DEDFA4(v9);
      uint64_t v4 = v32 - 1;
    }
    while (v32 != 1);
    swift_bridgeObjectRelease();
    unint64_t v3 = v27;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
  sub_260FE45C0();
  *(void *)(v0 + 168) = v3;
  unint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v24;
  void *v24 = v0;
  v24[1] = sub_260DEA320;
  uint64_t v25 = *(void *)(v0 + 144);
  return MEMORY[0x270FA2058](v0 + 72, 0, 0, v25, v0 + 88);
}

uint64_t sub_260DEA320()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_260DEA7E0;
  }
  else
  {
    uint64_t v1 = sub_260DEA438;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_260DEA438()
{
  uint64_t v1 = (void *)v0[9];
  unsigned int v2 = *((unsigned __int8 *)v0 + 80);
  if (v2 <= 1)
  {
    if (*((unsigned char *)v0 + 80))
    {
      id v7 = objc_msgSend(v1, sel_extent);
      if (v12 <= -9.22337204e18)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (v12 >= 9.22337204e18)
      {
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      if ((*(void *)&v12 & 0x7FF0000000000000) == 0x7FF0000000000000
        || (*(void *)&v13 & 0x7FF0000000000000) == 0x7FF0000000000000)
      {
        goto LABEL_38;
      }
      if (v13 <= -9.22337204e18)
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      if (v13 >= 9.22337204e18)
      {
LABEL_40:
        __break(1u);
        return MEMORY[0x270FA2058](v7, v8, v9, v10, v11);
      }
      size_t Width = (uint64_t)v12;
      size_t Height = (uint64_t)v13;
    }
    else
    {
      uint64_t v3 = v1;
      size_t Width = CGImageGetWidth(v3);
      size_t Height = CGImageGetHeight(v3);
    }
LABEL_15:
    uint64_t v15 = v0[21];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v0[12] = v15;
    unint64_t v17 = sub_260DBB2E4(Width, Height);
    uint64_t v18 = *(void *)(v15 + 16);
    BOOL v19 = (v8 & 1) == 0;
    id v7 = (id)(v18 + v19);
    if (__OFADD__(v18, v19))
    {
      __break(1u);
    }
    else
    {
      char v20 = v8;
      if (*(void *)(v0[21] + 24) >= (uint64_t)v7)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          id v7 = sub_260DC2974();
        }
      }
      else
      {
        sub_260DBF458((uint64_t)v7, isUniquelyReferenced_nonNull_native);
        id v7 = (id)sub_260DBB2E4(Width, Height);
        if ((v20 & 1) != (v8 & 1))
        {
          return sub_260FE5280();
        }
        unint64_t v17 = (unint64_t)v7;
      }
      unint64_t v24 = (void *)v0[12];
      if (v20)
      {
        uint64_t v25 = v24[7] + 16 * v17;

        uint64_t v26 = v1;
        *(void *)uint64_t v25 = v1;
        *(unsigned char *)(v25 + 8) = v2;
        goto LABEL_31;
      }
      v24[(v17 >> 6) + 8] |= 1 << v17;
      unint64_t v27 = (size_t *)(v24[6] + 16 * v17);
      *unint64_t v27 = Width;
      v27[1] = Height;
      uint64_t v28 = v24[7] + 16 * v17;
      uint64_t v26 = v1;
      *(void *)uint64_t v28 = v1;
      *(unsigned char *)(v28 + 8) = v2;
      uint64_t v29 = v24[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (!v30)
      {
        _OWORD v24[2] = v31;
LABEL_31:
        swift_bridgeObjectRelease();
        sub_260DC6F1C(v26, v2);
        v0[21] = v24;
        uint64_t v32 = (void *)swift_task_alloc();
        v0[22] = v32;
        *uint64_t v32 = v0;
        v32[1] = sub_260DEA320;
        uint64_t v10 = v0[18];
        id v7 = v0 + 9;
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        uint64_t v11 = v0 + 11;
        return MEMORY[0x270FA2058](v7, v8, v9, v10, v11);
      }
    }
    __break(1u);
    goto LABEL_36;
  }
  if (v2 == 2)
  {
    uint64_t v6 = v1;
    size_t Width = CVPixelBufferGetWidth(v6);
    size_t Height = CVPixelBufferGetHeight(v6);
    goto LABEL_15;
  }
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v23 = v0[21];
  return v22(v23);
}

uint64_t sub_260DEA7E0()
{
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_260DEA87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 81) = a6;
  *(void *)(v6 + 128) = a4;
  *(void *)(v6 + 136) = a5;
  *(void *)(v6 + 112) = a2;
  *(void *)(v6 + 120) = a3;
  *(void *)(v6 + 104) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  *(void *)(v6 + 144) = swift_task_alloc();
  *(void *)(v6 + 152) = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E73B8);
  *(void *)(v6 + 160) = v7;
  *(void *)(v6 + 168) = *(void *)(v7 - 8);
  *(void *)(v6 + 176) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DEA98C, 0, 0);
}

uint64_t sub_260DEA98C()
{
  uint64_t v1 = *(void *)(v0 + 112);
  unint64_t v2 = sub_260DD6A00(MEMORY[0x263F8EE78]);
  unint64_t v3 = v2;
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    unint64_t v27 = v2;
    uint64_t v31 = *(void **)(v0 + 136);
    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v6 = sub_260FE4520();
    uint64_t v7 = *(void *)(v6 - 8);
    BOOL v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v29 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v28 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t *)(v5 + 40);
    do
    {
      uint64_t v32 = v4;
      uint64_t v11 = *(void *)(v0 + 144);
      uint64_t v10 = *(void *)(v0 + 152);
      char v34 = *(unsigned char *)(v0 + 81);
      uint64_t v12 = *(void *)(v0 + 128);
      uint64_t v33 = *(void *)(v0 + 136);
      uint64_t v13 = *(void *)(v0 + 120);
      uint64_t v15 = *(v8 - 1);
      uint64_t v14 = *v8;
      v30(v10, 1, 1, v6);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = 0;
      *(void *)(v16 + 24) = 0;
      *(void *)(v16 + 32) = v13;
      *(void *)(v16 + 40) = v12;
      *(void *)(v16 + 48) = v33;
      *(unsigned char *)(v16 + 56) = v34;
      *(void *)(v16 + 64) = v15;
      *(void *)(v16 + 72) = v14;
      sub_260DEDF3C(v10, v11);
      LODWORD(v11) = (*v29)(v11, 1, v6);
      swift_bridgeObjectRetain();
      id v17 = v31;
      uint64_t v18 = *(void *)(v0 + 144);
      if (v11 == 1)
      {
        sub_260DEDFA4(*(void *)(v0 + 144));
      }
      else
      {
        sub_260FE4510();
        (*v28)(v18, v6);
      }
      if (*(void *)(v16 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v19 = sub_260FE44A0();
        uint64_t v21 = v20;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v21 = 0;
      }
      uint64_t v22 = **(void **)(v0 + 104);
      uint64_t v23 = v21 | v19;
      if (v21 | v19)
      {
        uint64_t v23 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v19;
        *(void *)(v0 + 40) = v21;
      }
      v8 += 2;
      uint64_t v9 = *(void *)(v0 + 152);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v23;
      *(void *)(v0 + 64) = v22;
      swift_task_create();
      swift_release();
      sub_260DEDFA4(v9);
      uint64_t v4 = v32 - 1;
    }
    while (v32 != 1);
    swift_bridgeObjectRelease();
    unint64_t v3 = v27;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
  sub_260FE45C0();
  *(void *)(v0 + 184) = v3;
  unint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v24;
  void *v24 = v0;
  v24[1] = sub_260DEACF4;
  uint64_t v25 = *(void *)(v0 + 160);
  return MEMORY[0x270FA2058](v0 + 72, 0, 0, v25, v0 + 88);
}

uint64_t sub_260DEACF4()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_260DEB1B4;
  }
  else
  {
    uint64_t v1 = sub_260DEAE0C;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_260DEAE0C()
{
  uint64_t v1 = (void *)v0[9];
  unsigned int v2 = *((unsigned __int8 *)v0 + 80);
  if (v2 <= 1)
  {
    if (*((unsigned char *)v0 + 80))
    {
      id v7 = objc_msgSend(v1, sel_extent);
      if (v12 <= -9.22337204e18)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (v12 >= 9.22337204e18)
      {
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      if ((*(void *)&v12 & 0x7FF0000000000000) == 0x7FF0000000000000
        || (*(void *)&v13 & 0x7FF0000000000000) == 0x7FF0000000000000)
      {
        goto LABEL_38;
      }
      if (v13 <= -9.22337204e18)
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      if (v13 >= 9.22337204e18)
      {
LABEL_40:
        __break(1u);
        return MEMORY[0x270FA2058](v7, v8, v9, v10, v11);
      }
      size_t Width = (uint64_t)v12;
      size_t Height = (uint64_t)v13;
    }
    else
    {
      uint64_t v3 = v1;
      size_t Width = CGImageGetWidth(v3);
      size_t Height = CGImageGetHeight(v3);
    }
LABEL_15:
    uint64_t v15 = v0[23];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v0[12] = v15;
    unint64_t v17 = sub_260DBB2E4(Width, Height);
    uint64_t v18 = *(void *)(v15 + 16);
    BOOL v19 = (v8 & 1) == 0;
    id v7 = (id)(v18 + v19);
    if (__OFADD__(v18, v19))
    {
      __break(1u);
    }
    else
    {
      char v20 = v8;
      if (*(void *)(v0[23] + 24) >= (uint64_t)v7)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          id v7 = sub_260DC2974();
        }
      }
      else
      {
        sub_260DBF458((uint64_t)v7, isUniquelyReferenced_nonNull_native);
        id v7 = (id)sub_260DBB2E4(Width, Height);
        if ((v20 & 1) != (v8 & 1))
        {
          return sub_260FE5280();
        }
        unint64_t v17 = (unint64_t)v7;
      }
      unint64_t v24 = (void *)v0[12];
      if (v20)
      {
        uint64_t v25 = v24[7] + 16 * v17;

        uint64_t v26 = v1;
        *(void *)uint64_t v25 = v1;
        *(unsigned char *)(v25 + 8) = v2;
        goto LABEL_31;
      }
      v24[(v17 >> 6) + 8] |= 1 << v17;
      unint64_t v27 = (size_t *)(v24[6] + 16 * v17);
      *unint64_t v27 = Width;
      v27[1] = Height;
      uint64_t v28 = v24[7] + 16 * v17;
      uint64_t v26 = v1;
      *(void *)uint64_t v28 = v1;
      *(unsigned char *)(v28 + 8) = v2;
      uint64_t v29 = v24[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (!v30)
      {
        _OWORD v24[2] = v31;
LABEL_31:
        swift_bridgeObjectRelease();
        sub_260DC6F1C(v26, v2);
        v0[23] = v24;
        uint64_t v32 = (void *)swift_task_alloc();
        v0[24] = v32;
        *uint64_t v32 = v0;
        v32[1] = sub_260DEACF4;
        uint64_t v10 = v0[20];
        id v7 = v0 + 9;
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        uint64_t v11 = v0 + 11;
        return MEMORY[0x270FA2058](v7, v8, v9, v10, v11);
      }
    }
    __break(1u);
    goto LABEL_36;
  }
  if (v2 == 2)
  {
    uint64_t v6 = v1;
    size_t Width = CVPixelBufferGetWidth(v6);
    size_t Height = CVPixelBufferGetHeight(v6);
    goto LABEL_15;
  }
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v23 = v0[23];
  return v22(v23);
}

uint64_t sub_260DEB1B4()
{
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_260DEB250(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 82) = a5;
  *(void *)(v5 + 112) = a2;
  *(void *)(v5 + 120) = a4;
  *(unsigned char *)(v5 + 81) = a3;
  *(void *)(v5 + 104) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  *(void *)(v5 + 128) = swift_task_alloc();
  *(void *)(v5 + 136) = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E73B8);
  *(void *)(v5 + 144) = v6;
  *(void *)(v5 + 152) = *(void *)(v6 - 8);
  *(void *)(v5 + 160) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DEB360, 0, 0);
}

uint64_t sub_260DEB360()
{
  uint64_t v1 = *(void *)(v0 + 112);
  unint64_t v2 = sub_260DD6A00(MEMORY[0x263F8EE78]);
  unint64_t v3 = v2;
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    unint64_t v27 = v2;
    char v32 = *(unsigned char *)(v0 + 81);
    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v31 = *(void **)(v0 + 120);
    uint64_t v6 = sub_260FE4520();
    uint64_t v7 = *(void *)(v6 - 8);
    BOOL v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v29 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v28 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t *)(v5 + 40);
    do
    {
      uint64_t v33 = v4;
      uint64_t v11 = *(void *)(v0 + 128);
      uint64_t v10 = *(void *)(v0 + 136);
      char v12 = *(unsigned char *)(v0 + 82);
      uint64_t v13 = *(void *)(v0 + 120);
      uint64_t v14 = *(v8 - 1);
      uint64_t v15 = *v8;
      v30(v10, 1, 1, v6);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = 0;
      *(void *)(v16 + 24) = 0;
      *(unsigned char *)(v16 + 32) = v32;
      *(void *)(v16 + 40) = v13;
      *(unsigned char *)(v16 + 48) = v12;
      *(void *)(v16 + 56) = v14;
      *(void *)(v16 + 64) = v15;
      sub_260DEDF3C(v10, v11);
      LODWORD(v11) = (*v29)(v11, 1, v6);
      id v17 = v31;
      uint64_t v18 = *(void *)(v0 + 128);
      if (v11 == 1)
      {
        sub_260DEDFA4(*(void *)(v0 + 128));
      }
      else
      {
        sub_260FE4510();
        (*v28)(v18, v6);
      }
      if (*(void *)(v16 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v19 = sub_260FE44A0();
        uint64_t v21 = v20;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v21 = 0;
      }
      uint64_t v22 = **(void **)(v0 + 104);
      uint64_t v23 = v21 | v19;
      if (v21 | v19)
      {
        uint64_t v23 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v19;
        *(void *)(v0 + 40) = v21;
      }
      v8 += 2;
      uint64_t v9 = *(void *)(v0 + 136);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v23;
      *(void *)(v0 + 64) = v22;
      swift_task_create();
      swift_release();
      sub_260DEDFA4(v9);
      uint64_t v4 = v33 - 1;
    }
    while (v33 != 1);
    swift_bridgeObjectRelease();
    unint64_t v3 = v27;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
  sub_260FE45C0();
  *(void *)(v0 + 168) = v3;
  unint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v24;
  void *v24 = v0;
  v24[1] = sub_260DEB6B8;
  uint64_t v25 = *(void *)(v0 + 144);
  return MEMORY[0x270FA2058](v0 + 72, 0, 0, v25, v0 + 88);
}

uint64_t sub_260DEB6B8()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_260DEA7E0;
  }
  else
  {
    uint64_t v1 = sub_260DEB7D0;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_260DEB7D0()
{
  uint64_t v1 = (void *)v0[9];
  unsigned int v2 = *((unsigned __int8 *)v0 + 80);
  if (v2 <= 1)
  {
    if (*((unsigned char *)v0 + 80))
    {
      id v7 = objc_msgSend(v1, sel_extent);
      if (v12 <= -9.22337204e18)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if (v12 >= 9.22337204e18)
      {
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      if ((*(void *)&v12 & 0x7FF0000000000000) == 0x7FF0000000000000
        || (*(void *)&v13 & 0x7FF0000000000000) == 0x7FF0000000000000)
      {
        goto LABEL_38;
      }
      if (v13 <= -9.22337204e18)
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      if (v13 >= 9.22337204e18)
      {
LABEL_40:
        __break(1u);
        return MEMORY[0x270FA2058](v7, v8, v9, v10, v11);
      }
      size_t Width = (uint64_t)v12;
      size_t Height = (uint64_t)v13;
    }
    else
    {
      uint64_t v3 = v1;
      size_t Width = CGImageGetWidth(v3);
      size_t Height = CGImageGetHeight(v3);
    }
LABEL_15:
    uint64_t v15 = v0[21];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v0[12] = v15;
    unint64_t v17 = sub_260DBB2E4(Width, Height);
    uint64_t v18 = *(void *)(v15 + 16);
    BOOL v19 = (v8 & 1) == 0;
    id v7 = (id)(v18 + v19);
    if (__OFADD__(v18, v19))
    {
      __break(1u);
    }
    else
    {
      char v20 = v8;
      if (*(void *)(v0[21] + 24) >= (uint64_t)v7)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          id v7 = sub_260DC2974();
        }
      }
      else
      {
        sub_260DBF458((uint64_t)v7, isUniquelyReferenced_nonNull_native);
        id v7 = (id)sub_260DBB2E4(Width, Height);
        if ((v20 & 1) != (v8 & 1))
        {
          return sub_260FE5280();
        }
        unint64_t v17 = (unint64_t)v7;
      }
      unint64_t v24 = (void *)v0[12];
      if (v20)
      {
        uint64_t v25 = v24[7] + 16 * v17;

        uint64_t v26 = v1;
        *(void *)uint64_t v25 = v1;
        *(unsigned char *)(v25 + 8) = v2;
        goto LABEL_31;
      }
      v24[(v17 >> 6) + 8] |= 1 << v17;
      unint64_t v27 = (size_t *)(v24[6] + 16 * v17);
      *unint64_t v27 = Width;
      v27[1] = Height;
      uint64_t v28 = v24[7] + 16 * v17;
      uint64_t v26 = v1;
      *(void *)uint64_t v28 = v1;
      *(unsigned char *)(v28 + 8) = v2;
      uint64_t v29 = v24[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (!v30)
      {
        _OWORD v24[2] = v31;
LABEL_31:
        swift_bridgeObjectRelease();
        sub_260DC6F1C(v26, v2);
        v0[21] = v24;
        char v32 = (void *)swift_task_alloc();
        v0[22] = v32;
        *char v32 = v0;
        v32[1] = sub_260DEB6B8;
        uint64_t v10 = v0[18];
        id v7 = v0 + 9;
        uint64_t v8 = 0;
        uint64_t v9 = 0;
        uint64_t v11 = v0 + 11;
        return MEMORY[0x270FA2058](v7, v8, v9, v10, v11);
      }
    }
    __break(1u);
    goto LABEL_36;
  }
  if (v2 == 2)
  {
    uint64_t v6 = v1;
    size_t Width = CVPixelBufferGetWidth(v6);
    size_t Height = CVPixelBufferGetHeight(v6);
    goto LABEL_15;
  }
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v23 = v0[21];
  return v22(v23);
}

uint64_t sub_260DEBB78(uint64_t *a1, uint64_t a2)
{
  return sub_260DEE004(*a1, a1[1], a2);
}

uint64_t sub_260DEBB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v8 = (uint64_t (*)(uint64_t, char, uint64_t))((char *)&dword_26A8E7390 + dword_26A8E7390);
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_260DEE8D0;
  return v8(v4, v5, a2);
}

uint64_t sub_260DEBC50(uint64_t *a1, uint64_t a2)
{
  return sub_260DEE5B4(*a1, a1[1], a2);
}

uint64_t sub_260DEBC60(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v11 = (uint64_t (*)(uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_26A8E73D8 + dword_26A8E73D8);
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_260DEBD38;
  return v11(v5, v8, a2, v7, v6);
}

uint64_t sub_260DEBD38(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_260DEBE38(uint64_t *a1, uint64_t a2)
{
  return sub_260DE9558(*a1, a1[1], a2, *v2);
}

uint64_t sub_260DEBE4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *v2;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_26A8E7410 + dword_26A8E7410);
  uint64_t v7 = *((unsigned __int8 *)a1 + 8);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_260DEE8D0;
  return v10(v5, v7, a2, v6);
}

unint64_t sub_260DEBF1C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

_OWORD *sub_260DEBF64(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_260FE4DD0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_260D906FC(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_260DEC028(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t sub_260DEC06C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = a6[7] + 16 * result;
  *(void *)uint64_t v7 = a4;
  *(unsigned char *)(v7 + 8) = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

_OWORD *sub_260DEC0C0(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_260D906FC(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_260DEC12C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = (void *)(a6[7] + 16 * result);
  *uint64_t v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

_OWORD *sub_260DEC17C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_260D906FC(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

unint64_t sub_260DEC1F8(unint64_t result, char a2, int a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2 & 1;
  uint64_t v4 = a4[7] + 3 * result;
  *(_WORD *)uint64_t v4 = a3;
  *(unsigned char *)(v4 + 2) = BYTE2(a3);
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_260DEC258(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(0);
  uint64_t result = sub_260DEE0F8(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_260DEC2EC(uint64_t *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_260FE50F0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_181;
    }
    if (v3) {
      return sub_260DC3CB0(0, v3, 1, v2);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_189;
  }
  uint64_t v6 = result;
  if (v3 < 2)
  {
    BOOL v9 = (char *)MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v106 = MEMORY[0x263F8EE78];
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (v12 < 2) {
        goto LABEL_159;
      }
      goto LABEL_147;
    }
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_260FE4460();
    *(void *)(v8 + 16) = v7;
    uint64_t v106 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v104 = v2;
  uint64_t v11 = *v2;
  uint64_t v105 = v11 - 16;
  BOOL v9 = (char *)MEMORY[0x263F8EE78];
  uint64_t v107 = v6;
  uint64_t v108 = v3;
  while (2)
  {
    uint64_t v13 = v10 + 1;
    if (v10 + 1 >= v3) {
      goto LABEL_66;
    }
    uint64_t v14 = (uint64_t *)(v11 + 16 * v13);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = (uint64_t *)(v11 + 16 * v10);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    if (v19 >= v18) {
      uint64_t v20 = v18;
    }
    else {
      uint64_t v20 = v19;
    }
    if (v16 >= v15) {
      uint64_t v21 = v15;
    }
    else {
      uint64_t v21 = v16;
    }
    if (v20 >= v21)
    {
      if (v21 >= v20)
      {
        if (v19 <= v18) {
          uint64_t v19 = v18;
        }
        if (v16 <= v15) {
          uint64_t v23 = v15;
        }
        else {
          uint64_t v23 = v16;
        }
        uint64_t v13 = v10 + 2;
        if (v19 < v23) {
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v13 = v10 + 2;
      }
      if (v13 >= v3) {
        goto LABEL_66;
      }
      int v22 = 0;
      goto LABEL_36;
    }
    uint64_t v13 = v10 + 2;
LABEL_24:
    if (v13 >= v3) {
      goto LABEL_60;
    }
    int v22 = 1;
LABEL_36:
    if (v3 <= v13 + 1) {
      uint64_t v24 = v13 + 1;
    }
    else {
      uint64_t v24 = v3;
    }
    uint64_t v25 = (uint64_t *)(v11 + 8 + 16 * v13);
    while (1)
    {
      uint64_t v26 = *(v25 - 1);
      uint64_t v27 = *v25;
      if (v16 >= v15) {
        uint64_t v28 = v15;
      }
      else {
        uint64_t v28 = v16;
      }
      if (v27 >= v26) {
        uint64_t v29 = *(v25 - 1);
      }
      else {
        uint64_t v29 = *v25;
      }
      if (v28 < v29) {
        goto LABEL_40;
      }
      if (v29 >= v28)
      {
        if (v16 > v15) {
          uint64_t v15 = v16;
        }
        uint64_t v30 = v27 <= v26 ? *(v25 - 1) : *v25;
        if (v15 < v30)
        {
LABEL_40:
          if ((v22 & 1) == 0) {
            goto LABEL_66;
          }
          goto LABEL_41;
        }
      }
      if (v22) {
        break;
      }
LABEL_41:
      v25 += 2;
      ++v13;
      uint64_t v16 = v27;
      uint64_t v15 = v26;
      if (v13 >= v3)
      {
        if (v22) {
          goto LABEL_59;
        }
        goto LABEL_76;
      }
    }
    uint64_t v24 = v13;
LABEL_59:
    uint64_t v13 = v24;
    if (v24 < v10) {
      goto LABEL_182;
    }
LABEL_60:
    if (v10 < v13)
    {
      uint64_t v31 = (long long *)(v105 + 16 * v13);
      uint64_t v32 = v13;
      uint64_t v33 = v10;
      uint64_t v34 = (long long *)(v11 + 16 * v10);
      do
      {
        if (v33 != --v32)
        {
          if (!v11) {
            goto LABEL_187;
          }
          long long v35 = *v34;
          *uint64_t v34 = *v31;
          *uint64_t v31 = v35;
        }
        ++v33;
        --v31;
        ++v34;
      }
      while (v33 < v32);
    }
LABEL_66:
    if (v13 >= v3) {
      goto LABEL_75;
    }
    if (__OFSUB__(v13, v10)) {
      goto LABEL_180;
    }
    if (v13 - v10 >= v6)
    {
LABEL_75:
      uint64_t v24 = v13;
      goto LABEL_76;
    }
    if (__OFADD__(v10, v6)) {
      goto LABEL_183;
    }
    if (v10 + v6 >= v3) {
      uint64_t v24 = v3;
    }
    else {
      uint64_t v24 = v10 + v6;
    }
    if (v24 >= v10)
    {
      if (v13 == v24) {
        goto LABEL_75;
      }
      uint64_t v85 = (void *)(v105 + 16 * v13);
      do
      {
        long long v86 = *(_OWORD *)(v11 + 16 * v13);
        uint64_t v87 = *(void *)(v11 + 16 * v13 + 8);
        uint64_t v88 = *(void *)(v11 + 16 * v13);
        if (v87 >= v88) {
          uint64_t v89 = *(void *)(v11 + 16 * v13);
        }
        else {
          uint64_t v89 = *(void *)(v11 + 16 * v13 + 8);
        }
        if (v87 <= v88) {
          uint64_t v87 = *(void *)(v11 + 16 * v13);
        }
        uint64_t v90 = v10;
        unint64_t v91 = v85;
        do
        {
          uint64_t v92 = *v91;
          uint64_t v93 = v91[1];
          if (v93 >= *v91) {
            uint64_t v94 = *v91;
          }
          else {
            uint64_t v94 = v91[1];
          }
          if (v94 >= v89)
          {
            if (v93 > v92) {
              uint64_t v92 = v91[1];
            }
            if (v89 < v94 || v92 >= v87) {
              break;
            }
          }
          if (!v11) {
            goto LABEL_185;
          }
          uint64_t v96 = v91 + 2;
          long long v97 = *(_OWORD *)v91;
          *(_OWORD *)unint64_t v91 = v86;
          v91 -= 2;
          *uint64_t v96 = v97;
          ++v90;
        }
        while (v13 != v90);
        ++v13;
        v85 += 2;
      }
      while (v13 != v24);
LABEL_76:
      if (v24 < v10) {
        goto LABEL_175;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        BOOL v9 = sub_260DECCD0(0, *((void *)v9 + 2) + 1, 1, v9);
      }
      unint64_t v37 = *((void *)v9 + 2);
      unint64_t v36 = *((void *)v9 + 3);
      unint64_t v12 = v37 + 1;
      if (v37 >= v36 >> 1) {
        BOOL v9 = sub_260DECCD0((char *)(v36 > 1), v37 + 1, 1, v9);
      }
      *((void *)v9 + 2) = v12;
      uint64_t v38 = v9 + 32;
      uint64_t v39 = &v9[16 * v37 + 32];
      *(void *)uint64_t v39 = v10;
      *((void *)v39 + 1) = v24;
      uint64_t v109 = v24;
      if (v37)
      {
        while (2)
        {
          unint64_t v40 = v12 - 1;
          if (v12 >= 4)
          {
            unint64_t v45 = &v38[16 * v12];
            uint64_t v46 = *((void *)v45 - 8);
            uint64_t v47 = *((void *)v45 - 7);
            BOOL v51 = __OFSUB__(v47, v46);
            uint64_t v48 = v47 - v46;
            if (v51) {
              goto LABEL_164;
            }
            uint64_t v50 = *((void *)v45 - 6);
            uint64_t v49 = *((void *)v45 - 5);
            BOOL v51 = __OFSUB__(v49, v50);
            uint64_t v43 = v49 - v50;
            char v44 = v51;
            if (v51) {
              goto LABEL_165;
            }
            unint64_t v52 = v12 - 2;
            uint64_t v53 = &v38[16 * v12 - 32];
            uint64_t v55 = *(void *)v53;
            uint64_t v54 = *((void *)v53 + 1);
            BOOL v51 = __OFSUB__(v54, v55);
            uint64_t v56 = v54 - v55;
            if (v51) {
              goto LABEL_167;
            }
            BOOL v51 = __OFADD__(v43, v56);
            uint64_t v57 = v43 + v56;
            if (v51) {
              goto LABEL_170;
            }
            if (v57 >= v48)
            {
              id v75 = &v38[16 * v40];
              uint64_t v77 = *(void *)v75;
              uint64_t v76 = *((void *)v75 + 1);
              BOOL v51 = __OFSUB__(v76, v77);
              uint64_t v78 = v76 - v77;
              if (v51) {
                goto LABEL_174;
              }
              BOOL v68 = v43 < v78;
            }
            else
            {
LABEL_95:
              if (v44) {
                goto LABEL_166;
              }
              unint64_t v52 = v12 - 2;
              uint64_t v58 = &v38[16 * v12 - 32];
              uint64_t v60 = *(void *)v58;
              uint64_t v59 = *((void *)v58 + 1);
              BOOL v61 = __OFSUB__(v59, v60);
              uint64_t v62 = v59 - v60;
              char v63 = v61;
              if (v61) {
                goto LABEL_169;
              }
              uint64_t v64 = &v38[16 * v40];
              uint64_t v66 = *(void *)v64;
              uint64_t v65 = *((void *)v64 + 1);
              BOOL v51 = __OFSUB__(v65, v66);
              uint64_t v67 = v65 - v66;
              if (v51) {
                goto LABEL_172;
              }
              if (__OFADD__(v62, v67)) {
                goto LABEL_173;
              }
              if (v62 + v67 < v43) {
                goto LABEL_107;
              }
              BOOL v68 = v43 < v67;
            }
            if (v68) {
              unint64_t v40 = v52;
            }
          }
          else
          {
            if (v12 == 3)
            {
              uint64_t v42 = *((void *)v9 + 4);
              uint64_t v41 = *((void *)v9 + 5);
              BOOL v51 = __OFSUB__(v41, v42);
              uint64_t v43 = v41 - v42;
              char v44 = v51;
              goto LABEL_95;
            }
            uint64_t v69 = *((void *)v9 + 4);
            uint64_t v70 = *((void *)v9 + 5);
            BOOL v51 = __OFSUB__(v70, v69);
            uint64_t v62 = v70 - v69;
            char v63 = v51;
LABEL_107:
            if (v63) {
              goto LABEL_168;
            }
            unint64_t v71 = &v38[16 * v40];
            uint64_t v73 = *(void *)v71;
            uint64_t v72 = *((void *)v71 + 1);
            BOOL v51 = __OFSUB__(v72, v73);
            uint64_t v74 = v72 - v73;
            if (v51) {
              goto LABEL_171;
            }
            if (v74 < v62) {
              goto LABEL_14;
            }
          }
          unint64_t v79 = v40 - 1;
          if (v40 - 1 >= v12)
          {
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
            goto LABEL_184;
          }
          if (!v11) {
            goto LABEL_186;
          }
          char v80 = &v38[16 * v79];
          uint64_t v81 = *(void *)v80;
          uint64_t v82 = &v38[16 * v40];
          uint64_t v83 = *((void *)v82 + 1);
          sub_260DEC9F4((char *)(v11 + 16 * *(void *)v80), (char *)(v11 + 16 * *(void *)v82), v11 + 16 * v83, __dst);
          if (v1) {
            goto LABEL_159;
          }
          if (v83 < v81) {
            goto LABEL_161;
          }
          if (v40 > *((void *)v9 + 2)) {
            goto LABEL_162;
          }
          *(void *)char v80 = v81;
          *(void *)&v38[16 * v79 + 8] = v83;
          unint64_t v84 = *((void *)v9 + 2);
          if (v40 >= v84) {
            goto LABEL_163;
          }
          unint64_t v12 = v84 - 1;
          memmove(&v38[16 * v40], v82 + 16, 16 * (v84 - 1 - v40));
          *((void *)v9 + 2) = v84 - 1;
          if (v84 <= 2) {
            goto LABEL_14;
          }
          continue;
        }
      }
      unint64_t v12 = 1;
LABEL_14:
      uint64_t v3 = v108;
      uint64_t v10 = v109;
      uint64_t v6 = v107;
      if (v109 >= v108)
      {
        uint64_t v2 = v104;
        if (v12 < 2)
        {
LABEL_159:
          swift_bridgeObjectRelease();
          *(void *)(v106 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
LABEL_147:
        uint64_t v98 = *v2;
        while (1)
        {
          unint64_t v99 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_176;
          }
          if (!v98) {
            goto LABEL_188;
          }
          uint64_t v100 = *(void *)&v9[16 * v99 + 32];
          uint64_t v101 = *(void *)&v9[16 * v12 + 24];
          sub_260DEC9F4((char *)(v98 + 16 * v100), (char *)(v98 + 16 * *(void *)&v9[16 * v12 + 16]), v98 + 16 * v101, __dst);
          if (v1) {
            goto LABEL_159;
          }
          if (v101 < v100) {
            goto LABEL_177;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v9 = sub_260DED460((uint64_t)v9);
          }
          if (v99 >= *((void *)v9 + 2)) {
            goto LABEL_178;
          }
          uint64_t v102 = &v9[16 * v99 + 32];
          *(void *)uint64_t v102 = v100;
          *((void *)v102 + 1) = v101;
          unint64_t v103 = *((void *)v9 + 2);
          if (v12 > v103) {
            goto LABEL_179;
          }
          memmove(&v9[16 * v12 + 16], &v9[16 * v12 + 32], 16 * (v103 - v12));
          *((void *)v9 + 2) = v103 - 1;
          unint64_t v12 = v103 - 1;
          if (v103 <= 2) {
            goto LABEL_159;
          }
        }
      }
      continue;
    }
    break;
  }
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  uint64_t result = sub_260FE4E10();
  __break(1u);
  return result;
}

uint64_t sub_260DEC9F4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = (uint64_t *)__dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  long long v35 = __src;
  uint64_t v34 = (uint64_t *)__dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      int v22 = &v4[2 * v13];
      uint64_t v33 = v22;
      long long v35 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v23 = (char *)(a3 - 16);
        uint64_t v24 = v6;
        while (1)
        {
          uint64_t v25 = v23 + 16;
          uint64_t v26 = *(v22 - 2);
          uint64_t v27 = *(v22 - 1);
          uint64_t v28 = *((void *)v24 - 2);
          uint64_t v29 = *((void *)v24 - 1);
          v24 -= 16;
          if (v29 >= v28) {
            uint64_t v30 = v28;
          }
          else {
            uint64_t v30 = v29;
          }
          if (v27 >= v26) {
            uint64_t v31 = *(v22 - 2);
          }
          else {
            uint64_t v31 = *(v22 - 1);
          }
          if (v30 < v31) {
            goto LABEL_50;
          }
          if (v31 < v30) {
            goto LABEL_60;
          }
          if (v29 > v28) {
            uint64_t v28 = v29;
          }
          if (v27 > v26) {
            uint64_t v26 = *(v22 - 1);
          }
          if (v28 < v26)
          {
LABEL_50:
            if (v25 != v6 || v23 >= v6) {
              *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
            }
            long long v35 = v24;
            if (v24 <= v7) {
              goto LABEL_66;
            }
          }
          else
          {
LABEL_60:
            uint64_t v33 = v22 - 2;
            if (v25 < (char *)v22 || v23 >= (char *)v22 || v25 != (char *)v22) {
              *(_OWORD *)uint64_t v23 = *((_OWORD *)v22 - 1);
            }
            uint64_t v24 = v6;
            v22 -= 2;
            if (v6 <= v7) {
              goto LABEL_66;
            }
          }
          v23 -= 16;
          uint64_t v6 = v24;
          if (v22 <= v4) {
            goto LABEL_66;
          }
        }
      }
      goto LABEL_66;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[2 * v10];
    uint64_t v33 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        uint64_t v15 = *(void *)v6;
        uint64_t v16 = *((void *)v6 + 1);
        uint64_t v17 = *v4;
        uint64_t v18 = v4[1];
        if (v18 >= *v4) {
          uint64_t v19 = *v4;
        }
        else {
          uint64_t v19 = v4[1];
        }
        if (v16 >= v15) {
          uint64_t v20 = *(void *)v6;
        }
        else {
          uint64_t v20 = *((void *)v6 + 1);
        }
        if (v19 < v20) {
          goto LABEL_19;
        }
        if (v20 < v19) {
          goto LABEL_29;
        }
        if (v18 > v17) {
          uint64_t v17 = v4[1];
        }
        if (v16 > v15) {
          uint64_t v15 = *((void *)v6 + 1);
        }
        if (v17 < v15)
        {
LABEL_19:
          uint64_t v21 = v6 + 16;
          if (v7 < v6 || v7 >= v21 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        else
        {
LABEL_29:
          if (v7 != (char *)v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 2;
          uint64_t v34 = v4;
          uint64_t v21 = v6;
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v21;
      }
      while ((unint64_t)v21 < a3);
      long long v35 = v7;
    }
LABEL_66:
    sub_260DED3A4((void **)&v35, (const void **)&v34, &v33);
    return 1;
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

char *sub_260DECCD0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E08);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_260DECDCC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_260DED1A4(a1, a2, a3, MEMORY[0x263F1ED70]);
}

uint64_t sub_260DECDE8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DB0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_260FE4E90();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_260DECF2C(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_260FE4E90();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_260DECFFC(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 63;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -64)
  {
    uint64_t result = (char *)sub_260FE4E90();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 6;
    if (result != v3 || result >= &v3[64 * v7])
    {
      return (char *)memmove(result, v3, v7 << 6);
    }
  }
  return result;
}

uint64_t sub_260DED0B8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_260DED1A4(a1, a2, a3, type metadata accessor for PromptEdit);
}

char *sub_260DED0D0(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_260FE4E90();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_260DED18C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_260DED1A4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
}

uint64_t sub_260DED1A4(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_260FE4E90();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_260DED2E8(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 31;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -32)
  {
    uint64_t result = (char *)sub_260FE4E90();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
    {
      return (char *)memmove(result, v3, 32 * v7);
    }
  }
  return result;
}

char *sub_260DED3A4(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_260FE4E90();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_260DED460(uint64_t a1)
{
  return sub_260DECCD0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_260DED474(void *a1)
{
  return sub_260DB4CF8(0, a1[2], 0, a1);
}

uint64_t sub_260DED488(uint64_t a1)
{
  return sub_260DB4E7C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_260DED49C(uint64_t a1)
{
  return sub_260DB4FF4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_260DED4B0(uint64_t a1)
{
  return sub_260DB4E88(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_260DED4C4(void *a1)
{
  return sub_260DB52DC(0, a1[2], 0, a1);
}

uint64_t sub_260DED4D8(void *a1)
{
  return sub_260DB5B80(0, a1[2], 0, a1);
}

uint64_t sub_260DED4EC(uint64_t a1)
{
  return sub_260DB6028(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_260DED500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(void *)(v6 + 16) = a1;
  int64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v11;
  *int64_t v11 = v6;
  v11[1] = sub_260DEE8CC;
  return sub_260DE9ED4(a2, a3, a5, a6);
}

uint64_t sub_260DED5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  char v9 = *(unsigned char *)(v2 + 40);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_260DD8D28;
  int64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_26A8E73A0
                                                                                  + dword_26A8E73A0);
  return v11(a1, a2, v6, v7, v8, v9);
}

uint64_t sub_260DED698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 32) = a5;
  *(unsigned char *)(v8 + 40) = a6;
  *(void *)(v8 + 16) = a7;
  *(void *)(v8 + 24) = a8;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v8 + 48) = v10;
  *uint64_t v10 = v8;
  v10[1] = sub_260DED758;
  return sub_260E313EC(a1, (uint64_t *)(v8 + 32), (_OWORD *)(v8 + 16));
}

uint64_t sub_260DED758()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_260DEE8D4, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_260DED88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, char a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t v11 = *a4;
  uint64_t v12 = a4[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v13;
  void *v13 = v6;
  v13[1] = sub_260DEE8CC;
  return sub_260DEA87C(a2, a3, v11, v12, a5, a6);
}

uint64_t sub_260DED958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = *a4;
  uint64_t v11 = a4[1];
  *(void *)(v8 + 32) = a5;
  *(unsigned char *)(v8 + 40) = a6;
  *(void *)(v8 + 16) = a7;
  *(void *)(v8 + 24) = a8;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v8 + 48) = v12;
  *uint64_t v12 = v8;
  v12[1] = sub_260DED758;
  return sub_260EC94D0(a1, (uint64_t *)(v8 + 32), (_OWORD *)(v8 + 16), v10, v11);
}

uint64_t sub_260DEDA2C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, char a6)
{
  *(void *)(v6 + 16) = a1;
  char v11 = *a4;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_260DEDAF4;
  return sub_260DEB250(a2, a3, v11, a5, a6);
}

uint64_t sub_260DEDAF4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_260DEDC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 32) = a5;
  *(unsigned char *)(v8 + 40) = a6;
  *(void *)(v8 + 16) = a7;
  *(void *)(v8 + 24) = a8;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v8 + 48) = v10;
  *uint64_t v10 = v8;
  v10[1] = sub_260DEDCCC;
  return sub_260F4E024(a1, (uint64_t *)(v8 + 32), (_OWORD *)(v8 + 16));
}

uint64_t sub_260DEDCCC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_260DEDE00, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_260DEDE00()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_260DEDE18()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_260DEDE58(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 40);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_260DD8D28;
  char v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t))((char *)&dword_26A8E73C0 + dword_26A8E73C0);
  return v11(a1, v4, v5, (uint64_t)v11, v6, v9, v7, v8);
}

uint64_t sub_260DEDF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_260DEDFA4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_260DEE004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v13 = MEMORY[0x263F8EE88];
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)(a3 + 40);
    do
    {
      if (*(v8 - 1) == a1 && *v8 == a2) {
        sub_260DB6D74(v12, a1, a2);
      }
      v8 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v3 = v13;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_260DBA658(v3);
  swift_bridgeObjectRelease();
  v12[0] = (uint64_t)v10;
  sub_260DE94EC(v12);
  swift_bridgeObjectRelease_n();
  return v12[0];
}

uint64_t sub_260DEE0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppleDiffusionImageGenerator.PipelineCollectionManager.CacheEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_260DEE15C(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2) {
    return (id)swift_bridgeObjectRetain();
  }
  if (!a5) {
    return result;
  }
  return result;
}

void destroy for ImageScalerError(uint64_t a1)
{
}

void sub_260DEE190(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a5)
  {
  }
}

uint64_t initializeWithCopy for ImageScalerError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_260DEE15C(*(id *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ImageScalerError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_260DEE15C(*(id *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_260DEE190(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ImageScalerError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_260DEE190(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageScalerError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageScalerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_260DEE378(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_260DEE380(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ImageScalerError()
{
  return &type metadata for ImageScalerError;
}

uint64_t sub_260DEE398(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(uint64_t **)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  char v9 = *(unsigned char *)(v2 + 40);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_260DD8D28;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, char))((char *)&dword_26A8E73E0
                                                                                    + dword_26A8E73E0);
  return v11(a1, a2, v6, v7, v8, v9);
}

uint64_t sub_260DEE478()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_260DEE4C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (uint64_t *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  char v10 = *(unsigned char *)(v1 + 56);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_260DD8D28;
  char v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, char, uint64_t, uint64_t))((char *)&dword_26A8E73F8 + dword_26A8E73F8);
  return v12(a1, v4, v5, v6, v7, v10, v8, v9);
}

uint64_t sub_260DEE5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v17 = MEMORY[0x263F8EE88];
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t *)(a3 + 40);
    do
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      BOOL v11 = v9 == a1 && v10 == a2;
      if (v11 || a1 == a2 && (v9 == v10 ? (BOOL v12 = v10 <= a2) : (BOOL v12 = 0), v12 ? (v13 = v9 <= a1) : (v13 = 0), v13)) {
        sub_260DB6D74(v16, v9, v10);
      }
      v8 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v3 = v17;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_260DBA658(v3);
  swift_bridgeObjectRelease();
  v16[0] = (uint64_t)v14;
  sub_260DE94EC(v16);
  swift_bridgeObjectRelease_n();
  return v16[0];
}

uint64_t sub_260DEE6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(char **)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  char v9 = *(unsigned char *)(v2 + 40);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_260DD8D28;
  BOOL v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, char))((char *)&dword_26A8E7418
                                                                                 + dword_26A8E7418);
  return v11(a1, a2, v6, v7, v8, v9);
}

uint64_t sub_260DEE798()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_260DEE7D8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + 32;
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  char v10 = *(unsigned char *)(v1 + 48);
  BOOL v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *BOOL v11 = v2;
  v11[1] = sub_260DD8D28;
  BOOL v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t))((char *)&dword_26A8E7430 + dword_26A8E7430);
  return v12(a1, v4, v5, v6, v7, v10, v8, v9);
}

uint64_t sub_260DEE8D8()
{
  sub_260DB0DA4();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_260FE8E10;
  *(void *)(v0 + 32) = type metadata accessor for AppleDiffusionImageGenerator();
  *(void *)(v0 + 40) = type metadata accessor for WordCloudImageGenerator();
  *(void *)(v0 + 48) = type metadata accessor for UnsupportedArchitectureImageGenerator();
  uint64_t result = type metadata accessor for UnavailableImageGenerator();
  *(void *)(v0 + 56) = result;
  qword_26A90FA88 = v0;
  return result;
}

uint64_t availableImageGeneratorIdentifiers()()
{
  uint64_t v0 = sub_260DEEA6C();
  int64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    uint64_t v2 = sub_260DB45C4(0, v1, 0);
    uint64_t v3 = 0;
    uint64_t v4 = v12;
    do
    {
      uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)(v0 + 8 * v3 + 32) + 88))(v2);
      uint64_t v5 = v2;
      uint64_t v7 = v6;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      if (v9 >= v8 >> 1) {
        uint64_t v2 = sub_260DB45C4(v8 > 1, v9 + 1, 1);
      }
      ++v3;
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 16 * v9;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v7;
    }
    while (v1 != v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v4;
}

uint64_t sub_260DEEA6C()
{
  if (qword_26A8E6070 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_26A90FA88;
  uint64_t v1 = *(void *)(qword_26A90FA88 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v4 = MEMORY[0x263F8EE78];
  do
  {
    uint64_t v7 = *(void *)(v0 + 8 * v3 + 32);
    uint64_t isUniquelyReferenced_nonNull_native = (*(uint64_t (**)(uint64_t))(v7 + 104))(isUniquelyReferenced_nonNull_native);
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t isUniquelyReferenced_nonNull_native = sub_260DB46E8(0, *(void *)(v4 + 16) + 1, 1);
      }
      unint64_t v6 = *(void *)(v4 + 16);
      unint64_t v5 = *(void *)(v4 + 24);
      if (v6 >= v5 >> 1) {
        uint64_t isUniquelyReferenced_nonNull_native = sub_260DB46E8(v5 > 1, v6 + 1, 1);
      }
      *(void *)(v4 + 16) = v6 + 1;
      *(void *)(v4 + 8 * v6 + 32) = v7;
    }
    ++v3;
  }
  while (v1 != v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t dispatch thunk of ImageGeneratorIdentifiable.imageGeneratorIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_260DEEBC8(uint64_t a1, double a2)
{
  uint64_t v4 = sub_260FE3CE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  unint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = (void *)MEMORY[0x263F8EE78];
  uint64_t v26 = (void *)MEMORY[0x263F8EE78];
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    uint64_t v19 = a1;
    uint64_t v20 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = *(void *)(v20 + 8 * v10);
      int64_t v12 = *(void *)(v11 + 16);
      if (v12)
      {
        uint64_t v23 = v10;
        uint64_t v25 = v9;
        swift_bridgeObjectRetain();
        sub_260DB4640(0, v12, 0);
        uint64_t v22 = v11;
        uint64_t v13 = v11 + 32;
        uint64_t v14 = (uint64_t)v25;
        do
        {
          sub_260D90158(v13, (uint64_t)v24);
          __swift_project_boxed_opaque_existential_1(v24, v24[3]);
          sub_260FE3D90();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_260DB4640(0, *(void *)(v14 + 16) + 1, 1);
            uint64_t v14 = (uint64_t)v25;
          }
          unint64_t v16 = *(void *)(v14 + 16);
          unint64_t v15 = *(void *)(v14 + 24);
          if (v16 >= v15 >> 1)
          {
            sub_260DB4640(v15 > 1, v16 + 1, 1);
            uint64_t v14 = (uint64_t)v25;
          }
          *(void *)(v14 + 16) = v16 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v16, v8, v4);
          uint64_t v25 = (void *)v14;
          v13 += 40;
          --v12;
        }
        while (v12);
        swift_bridgeObjectRelease();
        unint64_t v9 = (void *)MEMORY[0x263F8EE78];
        uint64_t v10 = v23;
      }
      else
      {
        uint64_t v14 = (uint64_t)v9;
      }
      ++v10;
      sub_260EDFF58(v14);
    }
    while (v10 != v21);
    swift_bridgeObjectRelease();
    unint64_t v9 = v26;
  }
  uint64_t v17 = sub_260DEEEE8(v9, a2);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_260DEEE40(void **a1)
{
  uint64_t v2 = *(void *)(sub_260FE3CE0() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_260DED474(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_260DEF4A4(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_260DEEEE8(void *a1, double a2)
{
  uint64_t v4 = sub_260FE3CE0();
  uint64_t v70 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4, v5);
  unint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v6, v9);
  uint64_t v73 = (char *)&v67 - v11;
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v14 = (char *)&v67 - v13;
  size_t v15 = a1[2];
  if (v15 < 2) {
    return swift_bridgeObjectRetain();
  }
  uint64_t v82 = a1;
  swift_bridgeObjectRetain();
  sub_260DEEE40(&v82);
  unint64_t v16 = (unint64_t)v82;
  uint64_t v17 = sub_260DEF3E8(0, v15);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_37:
  }
    uint64_t v17 = (uint64_t)sub_260EAF834(v17);
  unint64_t v18 = 0;
  uint64_t v19 = v17 + 32;
  uint64_t v79 = v70 + 16;
  uint64_t v69 = (void (**)(unint64_t, char *, uint64_t))(v70 + 32);
  uint64_t v20 = (void (**)(char *, uint64_t))(v70 + 8);
  size_t v81 = v15 - 1;
  uint64_t v21 = v17 + 33;
  unint64_t v76 = MEMORY[0x263F8EE78];
  uint64_t v22 = 1;
  uint64_t v78 = v4;
  char v80 = (void *)v16;
  size_t v72 = v15;
  uint64_t v68 = v17 + 32;
  do
  {
    if (v18 == v15) {
      goto LABEL_33;
    }
    if (v18 >= *(void *)(v17 + 16)) {
      goto LABEL_34;
    }
    size_t v23 = v18 + 1;
    if ((*(unsigned char *)(v19 + v18) & 1) == 0)
    {
      if (v18 >= *(void *)(v16 + 16)) {
        goto LABEL_35;
      }
      uint64_t v74 = v22;
      size_t v75 = v18 + 1;
      unint64_t v71 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      size_t v15 = *(void *)(v70 + 72);
      uint64_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v70 + 16);
      v24(v14, v16 + v71 + v15 * v18, v4);
      uint64_t v77 = v24;
      v24(v73, (unint64_t)v14, v4);
      unint64_t v25 = v76;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v25 = sub_260DB1144(0, *(void *)(v25 + 16) + 1, 1, v25);
      }
      unint64_t v16 = *(void *)(v25 + 16);
      unint64_t v26 = *(void *)(v25 + 24);
      unint64_t v76 = v25;
      unint64_t v27 = v71;
      if (v16 >= v26 >> 1) {
        unint64_t v76 = sub_260DB1144(v26 > 1, v16 + 1, 1, v76);
      }
      unint64_t v28 = v76;
      *(void *)(v76 + 16) = v16 + 1;
      uint64_t v4 = v78;
      (*v69)(v28 + v27 + v16 * v15, v73, v78);
      if (v75 != v72)
      {
        if (v75 < v72)
        {
          unint64_t v16 = (unint64_t)v80 + v27 + v15 * v74;
          while (1)
          {
            unint64_t v29 = v18 + 1;
            if (v18 + 1 >= *(void *)(v17 + 16)) {
              break;
            }
            if ((*(unsigned char *)(v21 + v18) & 1) == 0)
            {
              if (v29 >= v80[2]) {
                goto LABEL_31;
              }
              v77(v8, v16, v4);
              sub_260FE3CB0();
              CGFloat v31 = v30;
              CGFloat v33 = v32;
              CGFloat v35 = v34;
              CGFloat v37 = v36;
              uint64_t v4 = (uint64_t)v8;
              sub_260FE3CB0();
              v86.origin.x = v38;
              v86.origin.y = v39;
              v86.size.width = v40;
              v86.size.height = v41;
              v83.origin.x = v31;
              v83.origin.y = v33;
              v83.size.width = v35;
              v83.size.height = v37;
              if (CGRectContainsRect(v83, v86)) {
                goto LABEL_26;
              }
              sub_260FE3CB0();
              CGFloat v43 = v42;
              CGFloat v45 = v44;
              CGFloat v47 = v46;
              CGFloat v49 = v48;
              sub_260FE3CB0();
              v87.origin.x = v50;
              v87.origin.y = v51;
              v87.size.width = v52;
              v87.size.height = v53;
              v84.origin.x = v43;
              v84.origin.y = v45;
              v84.size.width = v47;
              v84.size.height = v49;
              CGRect v85 = CGRectIntersection(v84, v87);
              CGFloat v54 = v85.size.width * v85.size.height;
              sub_260FE3CC0();
              double v56 = v55;
              sub_260FE3CD0();
              double v58 = v56 * v57;
              uint64_t v4 = (uint64_t)v8;
              sub_260FE3CC0();
              double v60 = v59;
              sub_260FE3CD0();
              double v62 = v58 + v60 * v61 - v54;
              double v63 = v54 / v62;
              BOOL v64 = v62 <= 0.0;
              double v65 = INFINITY;
              if (!v64) {
                double v65 = v63;
              }
              if (v65 >= a2)
              {
LABEL_26:
                if (v29 >= *(void *)(v17 + 16)) {
                  goto LABEL_32;
                }
                *(unsigned char *)(v21 + v18) = 1;
              }
              uint64_t v4 = v78;
              (*v20)(v8, v78);
            }
            ++v18;
            v16 += v15;
            if (v81 == v18) {
              goto LABEL_4;
            }
          }
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
        }
        __break(1u);
        goto LABEL_37;
      }
LABEL_4:
      (*v20)(v14, v4);
      size_t v15 = v72;
      unint64_t v16 = (unint64_t)v80;
      uint64_t v19 = v68;
      uint64_t v22 = v74;
      size_t v23 = v75;
    }
    ++v22;
    unint64_t v18 = v23;
  }
  while (v23 != v15);
  swift_bridgeObjectRelease();
  swift_release();
  return v76;
}

uint64_t sub_260DEF3E8(char a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_260FE4E10();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v4 = sub_260FE4460();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1 & 1, a2);
    return v4;
  }
  return result;
}

uint64_t sub_260DEF4A4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_260FE3CE0();
  uint64_t v157 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4, v5);
  long long v154 = (char *)&v149 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6, v8);
  CGRect v169 = (char *)&v149 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9, v11);
  CGRect v165 = (char *)&v149 - v13;
  MEMORY[0x270FA5388](v12, v14);
  CGRect v164 = (char *)&v149 - v15;
  uint64_t v16 = a1[1];
  uint64_t result = sub_260FE50F0();
  if (result >= v16)
  {
    if (v16 < 0) {
      goto LABEL_140;
    }
    if (v16) {
      return sub_260DF0044(0, v16, 1, a1);
    }
    return result;
  }
  if (v16 >= 0) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v16 + 1;
  }
  if (v16 < -1) {
    goto LABEL_148;
  }
  uint64_t v150 = result;
  if (v16 < 2)
  {
    size_t v23 = (char *)MEMORY[0x263F8EE78];
    unint64_t v156 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80));
    uint64_t v149 = MEMORY[0x263F8EE78];
    if (v16 != 1)
    {
      unint64_t v25 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_106:
      uint64_t v142 = v157;
      if (v25 >= 2)
      {
        uint64_t v143 = *a1;
        do
        {
          unint64_t v144 = v25 - 2;
          if (v25 < 2) {
            goto LABEL_135;
          }
          if (!v143) {
            goto LABEL_147;
          }
          uint64_t v145 = *(void *)&v23[16 * v144 + 32];
          uint64_t v146 = *(void *)&v23[16 * v25 + 24];
          sub_260DF0350(v143 + *(void *)(v142 + 72) * v145, v143 + *(void *)(v142 + 72) * *(void *)&v23[16 * v25 + 16], v143 + *(void *)(v142 + 72) * v146, v156);
          if (v2) {
            break;
          }
          if (v146 < v145) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            size_t v23 = sub_260DED460((uint64_t)v23);
          }
          if (v144 >= *((void *)v23 + 2)) {
            goto LABEL_137;
          }
          uint64_t v147 = &v23[16 * v144 + 32];
          *(void *)uint64_t v147 = v145;
          *((void *)v147 + 1) = v146;
          unint64_t v148 = *((void *)v23 + 2);
          if (v25 > v148) {
            goto LABEL_138;
          }
          memmove(&v23[16 * v25 + 16], &v23[16 * v25 + 32], 16 * (v148 - v25));
          *((void *)v23 + 2) = v148 - 1;
          unint64_t v25 = v148 - 1;
        }
        while (v148 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v149 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v21 = v157;
  }
  else
  {
    uint64_t v19 = v18 >> 1;
    uint64_t v20 = sub_260FE4460();
    *(void *)(v20 + 16) = v19;
    uint64_t v21 = v157;
    unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    uint64_t v149 = v20;
    unint64_t v156 = v20 + v22;
  }
  uint64_t v24 = 0;
  CGRect v162 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v163 = v21 + 16;
  CGRect v172 = (uint64_t *)(v21 + 32);
  size_t v23 = (char *)MEMORY[0x263F8EE78];
  CGRect v167 = a1;
  uint64_t v168 = v4;
  while (1)
  {
    uint64_t v26 = v24 + 1;
    uint64_t v155 = v24;
    if (v24 + 1 >= v16)
    {
      uint64_t v43 = v24;
    }
    else
    {
      uint64_t v27 = *a1;
      uint64_t v28 = *(void *)(v157 + 72);
      uint64_t v166 = v24 + 1;
      uint64_t v171 = v28;
      unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v157 + 16);
      double v30 = v164;
      v29(v164, v27 + v28 * v26, v4);
      uint64_t v170 = v16;
      CGFloat v31 = v165;
      v29(v165, v27 + v28 * v155, v4);
      sub_260FE3CC0();
      double v33 = v32;
      sub_260FE3CD0();
      double v35 = v33 * v34;
      sub_260FE3CC0();
      double v37 = v36;
      sub_260FE3CD0();
      double v39 = v37 * v38;
      CGFloat v40 = *(void (**)(char *, uint64_t))(v157 + 8);
      CGFloat v41 = v31;
      uint64_t v16 = v170;
      v40(v41, v4);
      double v42 = v30;
      uint64_t v43 = v155;
      v40(v42, v4);
      uint64_t v44 = v171;
      uint64_t v26 = v43 + 2;
      uint64_t v160 = v27;
      if (v43 + 2 < v16)
      {
        uint64_t v153 = v2;
        int64x2_t v151 = v23;
        v166 *= v171;
        uint64_t v45 = v27;
        uint64_t v161 = v171 * v26;
        while (1)
        {
          uint64_t v46 = v26;
          CGFloat v47 = v164;
          v29(v164, v45 + v161, v4);
          double v48 = v165;
          v29(v165, v45 + v166, v4);
          sub_260FE3CC0();
          double v50 = v49;
          sub_260FE3CD0();
          double v52 = v50 * v51;
          sub_260FE3CC0();
          double v54 = v53;
          sub_260FE3CD0();
          BOOL v56 = v54 * v55 >= v52;
          v40(v48, v4);
          v40(v47, v4);
          if (v39 < v35 == v56) {
            break;
          }
          uint64_t v26 = v46 + 1;
          uint64_t v44 = v171;
          v45 += v171;
          if (v170 == v46 + 1)
          {
            uint64_t v16 = v170;
            uint64_t v26 = v170;
            size_t v23 = v151;
            uint64_t v2 = v153;
            uint64_t v43 = v155;
            goto LABEL_24;
          }
        }
        size_t v23 = v151;
        uint64_t v26 = v46;
        uint64_t v2 = v153;
        uint64_t v43 = v155;
        uint64_t v16 = v170;
        uint64_t v44 = v171;
      }
LABEL_24:
      a1 = v167;
      if (v39 < v35)
      {
        if (v26 < v43) {
          goto LABEL_141;
        }
        if (v43 < v26)
        {
          int64x2_t v151 = v23;
          uint64_t v57 = 0;
          uint64_t v58 = v44 * (v26 - 1);
          uint64_t v59 = v26 * v44;
          uint64_t v60 = v43 * v44;
          do
          {
            if (v43 != v26 + v57 - 1)
            {
              uint64_t v153 = v2;
              uint64_t v61 = v160;
              if (!v160) {
                goto LABEL_146;
              }
              unint64_t v62 = v160 + v60;
              uint64_t v63 = v160 + v58;
              uint64_t v166 = *v172;
              ((void (*)(char *, uint64_t, uint64_t))v166)(v154, v160 + v60, v168);
              if (v60 < v58 || v62 >= v61 + v59)
              {
                uint64_t v4 = v168;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v4 = v168;
                if (v60 != v58) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(uint64_t, char *, uint64_t))v166)(v63, v154, v4);
              a1 = v167;
              uint64_t v2 = v153;
              uint64_t v44 = v171;
            }
            ++v43;
            --v57;
            v58 -= v44;
            v59 -= v44;
            v60 += v44;
          }
          while (v43 < v26 + v57);
          size_t v23 = v151;
          uint64_t v43 = v155;
          uint64_t v16 = v170;
        }
      }
    }
    if (v26 < v16)
    {
      if (__OFSUB__(v26, v43)) {
        goto LABEL_139;
      }
      if (v26 - v43 < v150) {
        break;
      }
    }
LABEL_56:
    if (v26 < v43) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v166 = v26;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      size_t v23 = sub_260DECCD0(0, *((void *)v23 + 2) + 1, 1, v23);
    }
    unint64_t v91 = *((void *)v23 + 2);
    unint64_t v90 = *((void *)v23 + 3);
    unint64_t v25 = v91 + 1;
    if (v91 >= v90 >> 1) {
      size_t v23 = sub_260DECCD0((char *)(v90 > 1), v91 + 1, 1, v23);
    }
    *((void *)v23 + 2) = v25;
    uint64_t v92 = v23 + 32;
    uint64_t v93 = &v23[16 * v91 + 32];
    uint64_t v94 = v166;
    *(void *)uint64_t v93 = v43;
    *((void *)v93 + 1) = v94;
    if (v91)
    {
      a1 = v167;
      while (1)
      {
        unint64_t v95 = v25 - 1;
        if (v25 >= 4)
        {
          uint64_t v100 = &v92[16 * v25];
          uint64_t v101 = *((void *)v100 - 8);
          uint64_t v102 = *((void *)v100 - 7);
          BOOL v106 = __OFSUB__(v102, v101);
          uint64_t v103 = v102 - v101;
          if (v106) {
            goto LABEL_123;
          }
          uint64_t v105 = *((void *)v100 - 6);
          uint64_t v104 = *((void *)v100 - 5);
          BOOL v106 = __OFSUB__(v104, v105);
          uint64_t v98 = v104 - v105;
          char v99 = v106;
          if (v106) {
            goto LABEL_124;
          }
          unint64_t v107 = v25 - 2;
          uint64_t v108 = &v92[16 * v25 - 32];
          uint64_t v110 = *(void *)v108;
          uint64_t v109 = *((void *)v108 + 1);
          BOOL v106 = __OFSUB__(v109, v110);
          uint64_t v111 = v109 - v110;
          if (v106) {
            goto LABEL_126;
          }
          BOOL v106 = __OFADD__(v98, v111);
          uint64_t v112 = v98 + v111;
          if (v106) {
            goto LABEL_129;
          }
          if (v112 >= v103)
          {
            uint64_t v130 = &v92[16 * v95];
            uint64_t v132 = *(void *)v130;
            uint64_t v131 = *((void *)v130 + 1);
            BOOL v106 = __OFSUB__(v131, v132);
            uint64_t v133 = v131 - v132;
            if (v106) {
              goto LABEL_133;
            }
            BOOL v123 = v98 < v133;
            goto LABEL_94;
          }
        }
        else
        {
          if (v25 != 3)
          {
            uint64_t v124 = *((void *)v23 + 4);
            uint64_t v125 = *((void *)v23 + 5);
            BOOL v106 = __OFSUB__(v125, v124);
            uint64_t v117 = v125 - v124;
            char v118 = v106;
            goto LABEL_88;
          }
          uint64_t v97 = *((void *)v23 + 4);
          uint64_t v96 = *((void *)v23 + 5);
          BOOL v106 = __OFSUB__(v96, v97);
          uint64_t v98 = v96 - v97;
          char v99 = v106;
        }
        if (v99) {
          goto LABEL_125;
        }
        unint64_t v107 = v25 - 2;
        uint64_t v113 = &v92[16 * v25 - 32];
        uint64_t v115 = *(void *)v113;
        uint64_t v114 = *((void *)v113 + 1);
        BOOL v116 = __OFSUB__(v114, v115);
        uint64_t v117 = v114 - v115;
        char v118 = v116;
        if (v116) {
          goto LABEL_128;
        }
        uint64_t v119 = &v92[16 * v95];
        uint64_t v121 = *(void *)v119;
        uint64_t v120 = *((void *)v119 + 1);
        BOOL v106 = __OFSUB__(v120, v121);
        uint64_t v122 = v120 - v121;
        if (v106) {
          goto LABEL_131;
        }
        if (__OFADD__(v117, v122)) {
          goto LABEL_132;
        }
        if (v117 + v122 >= v98)
        {
          BOOL v123 = v98 < v122;
LABEL_94:
          if (v123) {
            unint64_t v95 = v107;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v118) {
          goto LABEL_127;
        }
        unint64_t v126 = &v92[16 * v95];
        uint64_t v128 = *(void *)v126;
        uint64_t v127 = *((void *)v126 + 1);
        BOOL v106 = __OFSUB__(v127, v128);
        uint64_t v129 = v127 - v128;
        if (v106) {
          goto LABEL_130;
        }
        if (v129 < v117) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v134 = v95 - 1;
        if (v95 - 1 >= v25)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v135 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        v136 = v23;
        id v137 = &v92[16 * v134];
        uint64_t v138 = *(void *)v137;
        v139 = &v92[16 * v95];
        uint64_t v140 = *((void *)v139 + 1);
        sub_260DF0350(v135 + *(void *)(v157 + 72) * *(void *)v137, v135 + *(void *)(v157 + 72) * *(void *)v139, v135 + *(void *)(v157 + 72) * v140, v156);
        if (v2) {
          goto LABEL_117;
        }
        if (v140 < v138) {
          goto LABEL_120;
        }
        if (v95 > *((void *)v136 + 2)) {
          goto LABEL_121;
        }
        *(void *)id v137 = v138;
        *(void *)&v92[16 * v134 + 8] = v140;
        unint64_t v141 = *((void *)v136 + 2);
        if (v95 >= v141) {
          goto LABEL_122;
        }
        size_t v23 = v136;
        unint64_t v25 = v141 - 1;
        memmove(&v92[16 * v95], v139 + 16, 16 * (v141 - 1 - v95));
        *((void *)v136 + 2) = v141 - 1;
        a1 = v167;
        uint64_t v4 = v168;
        if (v141 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v25 = 1;
    a1 = v167;
LABEL_15:
    uint64_t v16 = a1[1];
    uint64_t v24 = v166;
    if (v166 >= v16) {
      goto LABEL_106;
    }
  }
  if (__OFADD__(v43, v150)) {
    goto LABEL_142;
  }
  if (v43 + v150 >= v16) {
    uint64_t v64 = v16;
  }
  else {
    uint64_t v64 = v43 + v150;
  }
  if (v64 >= v43)
  {
    if (v26 != v64)
    {
      int64x2_t v151 = v23;
      uint64_t v153 = v2;
      uint64_t v65 = *(void *)(v157 + 72);
      CGRect v158 = *(void (**)(char *, uint64_t, uint64_t))(v157 + 16);
      uint64_t v159 = v65;
      uint64_t v66 = v65 * (v26 - 1);
      uint64_t v67 = v26 * v65;
      uint64_t v152 = v64;
      do
      {
        uint64_t v69 = 0;
        uint64_t v166 = v26;
        uint64_t v160 = v67;
        uint64_t v161 = v66;
        while (1)
        {
          uint64_t v70 = *a1;
          uint64_t v170 = v67 + v69;
          uint64_t v171 = v43;
          uint64_t v71 = v67 + v69 + v70;
          size_t v72 = v164;
          uint64_t v73 = v158;
          v158(v164, v71, v4);
          uint64_t v74 = v66 + v69 + v70;
          size_t v75 = a1;
          unint64_t v76 = v165;
          v73(v165, v74, v4);
          sub_260FE3CC0();
          double v78 = v77;
          sub_260FE3CD0();
          double v80 = v78 * v79;
          sub_260FE3CC0();
          double v82 = v81;
          sub_260FE3CD0();
          double v84 = v82 * v83;
          CGRect v85 = *v162;
          (*v162)(v76, v4);
          v85(v72, v4);
          if (v84 >= v80) {
            break;
          }
          uint64_t v86 = *v75;
          if (!*v75) {
            goto LABEL_144;
          }
          uint64_t v67 = v160;
          uint64_t v66 = v161;
          uint64_t v87 = v86 + v161 + v69;
          uint64_t v88 = (void (*)(uint64_t, char *, uint64_t))*v172;
          uint64_t v4 = v168;
          ((void (*)(char *, uint64_t, uint64_t))*v172)(v169, v86 + v160 + v69, v168);
          swift_arrayInitWithTakeFrontToBack();
          v88(v87, v169, v4);
          v69 -= v159;
          uint64_t v43 = v171 + 1;
          uint64_t v68 = v166;
          a1 = v167;
          if (v166 == v171 + 1) {
            goto LABEL_49;
          }
        }
        uint64_t v4 = v168;
        uint64_t v68 = v166;
        a1 = v75;
        uint64_t v67 = v160;
        uint64_t v66 = v161;
LABEL_49:
        uint64_t v26 = v68 + 1;
        v66 += v159;
        v67 += v159;
        uint64_t v43 = v155;
      }
      while (v26 != v152);
      uint64_t v26 = v152;
      uint64_t v2 = v153;
      size_t v23 = v151;
    }
    goto LABEL_56;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_260FE4E10();
  __break(1u);
  return result;
}

uint64_t sub_260DF0044(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v43 = a1;
  uint64_t v7 = sub_260FE3CE0();
  uint64_t v9 = MEMORY[0x270FA5388](v7, v8);
  double v53 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9, v11);
  double v49 = (char *)&v41 - v13;
  uint64_t result = MEMORY[0x270FA5388](v12, v14);
  double v48 = (char *)&v41 - v17;
  uint64_t v51 = a3;
  uint64_t v42 = a2;
  if (a3 != a2)
  {
    uint64_t v19 = *(void (**)(void, void, void))(v16 + 16);
    uint64_t v18 = v16 + 16;
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v44 = (uint64_t (**)(char *, uint64_t))(v18 - 8);
    uint64_t v45 = v19;
    uint64_t v46 = a4;
    uint64_t v47 = v18;
    double v52 = (void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v56 = v20 * (v51 - 1);
    uint64_t v50 = v20;
    uint64_t v21 = v20 * v51;
    unint64_t v22 = (void (*)(char *, uint64_t, uint64_t))v19;
LABEL_5:
    uint64_t v23 = 0;
    uint64_t v55 = v43;
    while (1)
    {
      uint64_t v24 = *a4;
      uint64_t v54 = v21 + v23;
      uint64_t v25 = v7;
      uint64_t v26 = v48;
      v22(v48, v21 + v23 + v24, v25);
      uint64_t v27 = v49;
      v22(v49, v56 + v23 + v24, v25);
      sub_260FE3CC0();
      double v29 = v28;
      sub_260FE3CD0();
      double v31 = v29 * v30;
      sub_260FE3CC0();
      double v33 = v32;
      sub_260FE3CD0();
      double v35 = v33 * v34;
      double v36 = *v44;
      (*v44)(v27, v25);
      double v37 = v26;
      uint64_t v7 = v25;
      a4 = v46;
      uint64_t result = v36(v37, v7);
      if (v35 >= v31)
      {
LABEL_4:
        v56 += v50;
        v21 += v50;
        if (++v51 == v42) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v38 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v39 = v38 + v56 + v23;
      CGFloat v40 = *v52;
      (*v52)(v53, v38 + v21 + v23, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v40)(v39, v53, v7);
      v23 -= v50;
      if (v51 == ++v55) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_260DF0350(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v70 = a3;
  uint64_t v7 = sub_260FE3CE0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v7, v9);
  uint64_t v73 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v12);
  size_t v72 = (char *)&v65 - v13;
  uint64_t v15 = *(void *)(v14 + 72);
  if (!v15)
  {
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (a2 - a1 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_63;
  }
  int64_t v16 = v70 - a2;
  if (v70 - a2 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_64;
  }
  uint64_t v17 = (uint64_t)(a2 - a1) / v15;
  unint64_t v76 = a1;
  unint64_t v75 = a4;
  uint64_t v18 = v16 / v15;
  if (v17 >= v16 / v15)
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      uint64_t v20 = v18 * v15;
      if (a4 < a2 || a2 + v20 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v38 = a4 + v20;
      unint64_t v74 = a4 + v20;
      unint64_t v76 = a2;
      BOOL v39 = v20 < 1 || a1 >= a2;
      unint64_t v40 = v70;
      if (!v39)
      {
        uint64_t v41 = -v15;
        uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        unint64_t v68 = a4;
        uint64_t v69 = v42;
        uint64_t v71 = v8 + 16;
        unint64_t v66 = a1;
        uint64_t v67 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v43 = v73;
        do
        {
          unint64_t v70 = v40 + v41;
          uint64_t v44 = v72;
          uint64_t v45 = v7;
          unint64_t v46 = v40;
          uint64_t v47 = v7;
          double v48 = v69;
          v69(v72, v38 + v41, v45);
          unint64_t v49 = a2 + v41;
          v48(v43, a2 + v41, v47);
          uint64_t v7 = v47;
          sub_260FE3CC0();
          double v51 = v50;
          sub_260FE3CD0();
          double v53 = v51 * v52;
          sub_260FE3CC0();
          double v55 = v54;
          sub_260FE3CD0();
          double v57 = v55 * v56;
          uint64_t v58 = *v67;
          (*v67)(v43, v47);
          v58(v44, v47);
          if (v57 >= v53)
          {
            unint64_t v63 = v74;
            v74 += v41;
            unint64_t v59 = v70;
            if (v46 < v63 || v70 >= v63)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v49 = a2;
              unint64_t v61 = v68;
            }
            else
            {
              unint64_t v61 = v68;
              if (v46 != v63) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v49 = a2;
            }
            unint64_t v62 = v66;
          }
          else
          {
            unint64_t v59 = v70;
            if (v46 < a2 || v70 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v61 = v68;
              unint64_t v62 = v66;
            }
            else
            {
              BOOL v60 = v46 == a2;
              unint64_t v61 = v68;
              unint64_t v62 = v66;
              if (!v60) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v76 += v41;
          }
          unint64_t v38 = v74;
          if (v74 <= v61) {
            break;
          }
          a2 = v49;
          unint64_t v40 = v59;
        }
        while (v49 > v62);
      }
      goto LABEL_61;
    }
  }
  else if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = v17 * v15;
    if (a4 < a1 || a1 + v19 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v69 = (void (*)(char *, unint64_t, uint64_t))(a4 + v19);
    unint64_t v74 = a4 + v19;
    if (v19 >= 1 && a2 < v70)
    {
      unint64_t v22 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v71 = v8 + 16;
      uint64_t v23 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v24 = v72;
      do
      {
        v22(v24, a2, v7);
        uint64_t v25 = v73;
        v22(v73, a4, v7);
        sub_260FE3CC0();
        double v27 = v26;
        sub_260FE3CD0();
        double v29 = v27 * v28;
        sub_260FE3CC0();
        double v31 = v30;
        sub_260FE3CD0();
        double v33 = v31 * v32;
        double v34 = *v23;
        (*v23)(v25, v7);
        v34(v24, v7);
        unint64_t v35 = v76;
        if (v33 >= v29)
        {
          unint64_t v37 = v75 + v15;
          if (v76 < v75 || v76 >= v37)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v76 != v75)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v75 = v37;
          unint64_t v36 = a2;
        }
        else
        {
          unint64_t v36 = a2 + v15;
          if (v76 < a2 || v76 >= v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v76 == a2)
          {
            unint64_t v35 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v76 = v35 + v15;
        a4 = v75;
        if (v75 >= (unint64_t)v69) {
          break;
        }
        a2 = v36;
      }
      while (v36 < v70);
    }
LABEL_61:
    sub_260DECDCC(&v76, &v75, (uint64_t *)&v74);
    return 1;
  }
LABEL_65:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260DF0920@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    int v4 = 0;
    uint64_t v5 = (int *)(a1 + 32);
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if ((v7 & ~v4) == 0) {
        int v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    int v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void sub_260DF0978(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  unsigned int v7 = 3;
  uint64_t v8 = type metadata accessor for GeneratedImage();
  switch(*(unsigned char *)(a1 + *(int *)(v8 + 24)))
  {
    case 1:
      unsigned int v7 = 4;
      break;
    case 2:
      unsigned int v7 = 1;
      break;
    case 3:
      if (qword_26A8E6118 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_260FE3A10();
      __swift_project_value_buffer(v9, (uint64_t)qword_26A90FB90);
      uint64_t v10 = sub_260FE39F0();
      os_log_type_t v11 = sub_260FE4890();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl(&dword_260D82000, v10, v11, "encountered unexpected image style.", v12, 2u);
        MEMORY[0x26122CA00](v12, -1, -1);
      }

      unsigned int v7 = 0;
      break;
    case 4:
      unsigned int v7 = 2;
      break;
    default:
      break;
  }
  char v13 = *(unsigned char *)(a1 + 8);
  id v28 = *(id *)a1;
  char v29 = v13;
  id v14 = v28;
  sub_260DF1608((uint64_t)&v28, v7, a2 & 1, &v31);

  if (!v3)
  {
    uint64_t v15 = v32;
    if (v32)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_260FE7060;
      *(void *)(inited + 32) = 25705;
      *(void *)(inited + 40) = 0xE200000000000000;
      uint64_t v17 = a1 + *(int *)(v8 + 20);
      uint64_t v18 = type metadata accessor for ImageProvenance();
      uint64_t v19 = sub_260FE30C0();
      uint64_t v20 = MEMORY[0x263F8D310];
      *(void *)(inited + 48) = v19;
      *(void *)(inited + 56) = v21;
      *(void *)(inited + 72) = v20;
      strcpy((char *)(inited + 80), "representation");
      *(unsigned char *)(inited + 95) = -18;
      uint64_t v22 = *(void *)(v17 + *(int *)(v18 + 24));
      *(void *)(inited + 120) = MEMORY[0x263F8D6C8];
      *(void *)(inited + 96) = v22;
      uint64_t v23 = (void *)sub_260DAAF10(inited);
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7138);
      id v28 = v23;
      sub_260D90650((uint64_t)&v28, (uint64_t)v27);
      JSONValue.init(_:)(v27, &v33);
      uint64_t v24 = v33;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v27[0] = v15;
      sub_260DE04AC(v24, 0x69746172656E6567, 0xEA00000000006E6FLL, isUniquelyReferenced_nonNull_native);
      uint64_t v26 = v27[0];
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
    }
    else
    {
      uint64_t v26 = 0;
    }
    *a3 = v31;
    a3[1] = v26;
  }
}

uint64_t sub_260DF0C88()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = 0xD000000000000019;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t v4 = sub_260FE2E60();
      uint64_t v5 = *(void *)(v4 - 8);
      uint64_t v16 = *(void *)(v5 + 64);
      MEMORY[0x270FA5388](v4, v17);
      uint64_t v8 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v18 = v2;
      uint64_t v19 = sub_260FE2E40();
      MEMORY[0x270FA5388](v19, v20);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v8, v4);
      uint64_t v3 = sub_260FE4130();
      uint64_t v28 = v3;
      unint64_t v29 = v21;
      sub_260F00944(v2);
      if (v22)
      {
        *(void *)&v25[0] = 8250;
        *((void *)&v25[0] + 1) = 0xE200000000000000;
        sub_260FE4250();
        swift_bridgeObjectRelease();
        sub_260FE4250();
        swift_bridgeObjectRelease();
        sub_260DF29F8(v2, v1, 1u);
        uint64_t v3 = v28;
      }
      else
      {
        sub_260DF29F8(v2, v1, 1u);
      }
      goto LABEL_11;
    case 2:
      return v3;
    case 3:
      uint64_t v3 = 0xD000000000000016;
      break;
    default:
      uint64_t v4 = sub_260FE2E60();
      uint64_t v5 = *(void *)(v4 - 8);
      uint64_t v6 = *(void *)(v5 + 64);
      MEMORY[0x270FA5388](v4, v7);
      uint64_t v8 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v9 = v2;
      uint64_t v10 = sub_260FE2E40();
      MEMORY[0x270FA5388](v10, v11);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v8, v4);
      sub_260DF29C0(v2, v1, 0);
      uint64_t v3 = sub_260FE4130();
      uint64_t v31 = v3;
      uint64_t v32 = v12;
      double v27 = v2;
      id v13 = v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7480);
      if (swift_dynamicCast())
      {
        v24[1] = v24;
        sub_260DD7B40(v25, (uint64_t)&v28);
        __swift_project_boxed_opaque_existential_1(&v28, v30);
        sub_260FE2B40();
        uint64_t v15 = v14;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
        if (v15)
        {
          uint64_t v28 = 8250;
          unint64_t v29 = 0xE200000000000000;
          sub_260FE4250();
          swift_bridgeObjectRelease();
          sub_260FE4250();
          swift_bridgeObjectRelease();
          sub_260DF29F8(v2, v1, 0);
          sub_260DF29F8(v2, v1, 0);
          uint64_t v3 = v31;
        }
        else
        {
          sub_260DF29F8(v2, v1, 0);
          sub_260DF29F8(v2, v1, 0);
        }
      }
      else
      {
        uint64_t v26 = 0;
        memset(v25, 0, sizeof(v25));
        sub_260DF2BDC((uint64_t)v25);
        sub_260DF29F8(v2, v1, 0);
        sub_260DF29F8(v2, v1, 0);
      }
LABEL_11:
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      break;
  }
  return v3;
}

void *sub_260DF1130@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_260DF113C(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_260DF1144@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_260DF1158@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_260DF116C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_260DF1180(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_260DF11B0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_260DF11DC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_260DF1200(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_260DF1214(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_260DF1228(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_260DF123C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_260DF1250(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_260DF1264(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_260DF1278(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_260DF128C()
{
  return *v0 == 0;
}

uint64_t sub_260DF129C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_260DF12B4(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_260DF12C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_260DF28F0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_260DF1308()
{
  uint64_t v1 = v0;
  v26[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v2;
  if (!v2)
  {
    if ((*(unsigned char *)(v1 + 24) & 3) != 0)
    {
      id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F67D30]), sel_init);
      uint64_t v5 = v4;
      if ((*(void *)(v1 + 24) & 4) != 0) {
        uint64_t v6 = 1;
      }
      else {
        uint64_t v6 = 2;
      }
      objc_msgSend(v4, sel_setMode_, v6);
      if ((*(unsigned char *)(v1 + 24) & 2) != 0) {
        objc_msgSend(v5, sel_setGranularity_, 1);
      }
      id v7 = objc_allocWithZone(MEMORY[0x263F67D28]);
      v26[0] = 0;
      uint64_t v8 = v5;
      id v9 = objc_msgSend(v7, sel_initWithConfiguration_error_, v8, v26);
      id v10 = v26[0];
      if (v9)
      {

        uint64_t v11 = *(void **)(v1 + 16);
        *(void *)(v1 + 16) = v9;
      }
      else
      {
        uint64_t v12 = v10;
        id v13 = (void *)sub_260FE2E30();

        swift_willThrow();
        if (qword_26A8E6118 != -1) {
          swift_once();
        }
        uint64_t v14 = sub_260FE3A10();
        __swift_project_value_buffer(v14, (uint64_t)qword_26A90FB90);
        id v15 = v13;
        id v16 = v13;
        uint64_t v17 = sub_260FE39F0();
        os_log_type_t v18 = sub_260FE4890();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = (uint8_t *)swift_slowAlloc();
          uint64_t v25 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v19 = 138412290;
          id v20 = v13;
          unint64_t v21 = (void *)_swift_stdlib_bridgeErrorToNSError();
          v26[0] = v21;
          sub_260FE4AE0();
          *uint64_t v25 = v21;

          _os_log_impl(&dword_260D82000, v17, v18, "Unexpected error initializing image sanitization: %@", v19, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FB0);
          swift_arrayDestroy();
          MEMORY[0x26122CA00](v25, -1, -1);
          MEMORY[0x26122CA00](v19, -1, -1);
        }
        else
        {

          uint64_t v8 = v17;
        }

        uint64_t v11 = *(void **)(v1 + 16);
        *(void *)(v1 + 16) = 0;
      }
    }
    else
    {
      *(void *)(v1 + 16) = 0;
    }
    uint64_t v3 = *(void **)(v1 + 16);
    id v22 = v3;
  }
  id v23 = v2;
  return v3;
}

uint64_t sub_260DF1608@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  int v93 = a3;
  unsigned int v92 = a2;
  uint64_t v96 = a4;
  uint64_t v104 = *MEMORY[0x263EF8340];
  unint64_t v95 = *(void **)a1;
  int v94 = *(unsigned __int8 *)(a1 + 8);
  if (qword_26A8E6120 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_260FE3990();
  __swift_project_value_buffer(v6, (uint64_t)qword_26A90FBA8);
  uint64_t v7 = sub_260FE3940();
  uint64_t v97 = v88;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7, v10);
  unint64_t v11 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v12 = &v88[-v11];
  sub_260FE3970();
  sub_260FE3910();
  id v13 = sub_260FE3970();
  int v14 = sub_260FE4940();
  uint64_t v15 = sub_260FE4A60();
  if (v15)
  {
    unint64_t v90 = v88;
    MEMORY[0x270FA5388](v15, v16);
    uint64_t v17 = &v88[-v11];
    os_log_type_t v18 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16);
    int v89 = v14;
    v18(v17, v12, v7);
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    unint64_t v91 = v4;
    id v20 = v19;
    *(_WORD *)uint64_t v19 = 0;
    os_signpost_id_t v21 = sub_260FE3920();
    _os_signpost_emit_with_name_impl(&dword_260D82000, v13, (os_signpost_type_t)v89, v21, "checkImage", "", v20, 2u);
    id v22 = v20;
    uint64_t v5 = v91;
    MEMORY[0x26122CA00](v22, -1, -1);

    uint64_t v23 = (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v17, v7);
  }
  else
  {

    os_log_type_t v18 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16);
  }
  MEMORY[0x270FA5388](v23, v24);
  v18(&v88[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], v12, v7);
  sub_260FE39D0();
  swift_allocObject();
  uint64_t v25 = sub_260FE39C0();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v12, v7);
  uint64_t v26 = v98;
  if ((v98[24] & 3) == 0)
  {
    if (qword_26A8E6118 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_260FE3A10();
    __swift_project_value_buffer(v40, (uint64_t)qword_26A90FB90);
    swift_retain_n();
    uint64_t v41 = sub_260FE39F0();
    os_log_type_t v42 = sub_260FE4890();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = (void *)swift_slowAlloc();
      id v101 = v44;
      uint64_t v97 = (unsigned char *)v25;
      *(_DWORD *)uint64_t v43 = 136315138;
      v99[0] = *((void *)v26 + 3);
      uint64_t v45 = sub_260FE4150();
      v99[0] = sub_260DB2844(v45, v46, (uint64_t *)&v101);
      sub_260FE4AE0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_260D82000, v41, v42, "checkImage called but skipped due to configuration %s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26122CA00](v44, -1, -1);
      MEMORY[0x26122CA00](v43, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    double v52 = v96;
    *uint64_t v96 = 0;
    v52[1] = 0;
    goto LABEL_27;
  }
  double v27 = sub_260DF1308();
  if (!v27)
  {
    if (qword_26A8E6118 != -1) {
      swift_once();
    }
    uint64_t v47 = sub_260FE3A10();
    __swift_project_value_buffer(v47, (uint64_t)qword_26A90FB90);
    double v48 = sub_260FE39F0();
    os_log_type_t v49 = sub_260FE4890();
    if (os_log_type_enabled(v48, v49))
    {
      double v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v50 = 0;
      _os_log_impl(&dword_260D82000, v48, v49, "Image sanitizer missing; can't check images without an image sanitizer.",
        v50,
        2u);
      MEMORY[0x26122CA00](v50, -1, -1);
    }

    sub_260DF2928();
    swift_allocError();
    *(void *)uint64_t v51 = 0;
    *(void *)(v51 + 8) = 0;
    *(unsigned char *)(v51 + 16) = 1;
    swift_willThrow();
    goto LABEL_27;
  }
  uint64_t v28 = v27;
  id v101 = v95;
  LOBYTE(v102) = v94;
  unint64_t v29 = sub_260DF25F8();
  if (v5)
  {
    uint64_t v98 = v28;
    uint64_t v30 = v5;
LABEL_10:
    if (qword_26A8E6118 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_260FE3A10();
    __swift_project_value_buffer(v31, (uint64_t)qword_26A90FB90);
    id v32 = v30;
    id v33 = v30;
    double v34 = sub_260FE39F0();
    os_log_type_t v35 = sub_260FE4890();
    if (os_log_type_enabled(v34, v35))
    {
      unint64_t v36 = (uint8_t *)swift_slowAlloc();
      unint64_t v37 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v36 = 138412290;
      id v38 = v30;
      BOOL v39 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v101 = v39;
      sub_260FE4AE0();
      *unint64_t v37 = v39;

      _os_log_impl(&dword_260D82000, v34, v35, "Unexpected error trying to run image sanitization: %@", v36, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FB0);
      swift_arrayDestroy();
      MEMORY[0x26122CA00](v37, -1, -1);
      MEMORY[0x26122CA00](v36, -1, -1);
    }
    else
    {
    }
    sub_260DF2928();
    swift_allocError();
    *(void *)uint64_t v53 = v30;
    *(void *)(v53 + 8) = 0;
    *(unsigned char *)(v53 + 16) = 0;
    id v54 = v30;
    swift_willThrow();

LABEL_27:
    sub_260DF2280("checkImage", 10, 2);
    return swift_release();
  }
  double v56 = v29;
  uint64_t v57 = (*((void *)v26 + 3) >> 1) & 1;
  id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F67D38]), sel_initWithPixelBuffer_, v29);
  objc_msgSend(v58, sel_setKeepGoing_, v57);
  objc_msgSend(v58, sel_setStyle_, v92);
  objc_msgSend(v58, sel_setIsChildPresent_, v93 & 1);
  id v101 = 0;
  id v59 = objc_msgSend(v28, sel_sanitizeRequest_error_, v58, &v101);
  if (!v59)
  {
    uint64_t v98 = v28;
    id v72 = v101;
    uint64_t v30 = (void *)sub_260FE2E30();

    swift_willThrow();
    goto LABEL_10;
  }
  BOOL v60 = v59;
  id v61 = v101;

  uint64_t v62 = *((void *)v26 + 3);
  id v63 = v60;
  uint64_t v64 = v63;
  if ((v62 & 2) == 0 || (id v65 = objc_msgSend(v63, sel_signals)) == 0)
  {
    uint64_t v68 = 0;
    goto LABEL_34;
  }
  unint64_t v66 = v65;
  id v101 = 0;
  sub_260DF297C();
  uint64_t v67 = MEMORY[0x263F8D310];
  sub_260FE3EA0();

  uint64_t v68 = (uint64_t)v101;
  if (!v101)
  {
LABEL_34:
    uint64_t v71 = 0;
    goto LABEL_35;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7080;
  *(void *)(inited + 32) = 0x736C616E676973;
  *(void *)(inited + 40) = 0xE700000000000000;
  *(void *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7478);
  *(void *)(inited + 48) = v68;
  unint64_t v70 = sub_260DAAF10(inited);
  uint64_t v71 = sub_260F4D944(v70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v101 = v95;
  LOBYTE(v102) = v94;
  uint64_t v80 = sub_260F4DC30();
  if (v81 >> 60 != 15)
  {
    uint64_t v82 = v80;
    unint64_t v83 = v81;
    uint64_t v97 = (unsigned char *)sub_260FE3000();
    uint64_t v85 = v84;
    sub_260DE2994(v82, v83);
    if (v71)
    {
      uint64_t v103 = v67;
      id v101 = v97;
      uint64_t v102 = v85;
      sub_260D90650((uint64_t)&v101, (uint64_t)v99);
      JSONValue.init(_:)(v99, &v100);
      uint64_t v86 = v100;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v99[0] = v71;
      sub_260DE04AC(v86, 0x6567616D49676E70, 0xEC00000061746144, isUniquelyReferenced_nonNull_native);
      uint64_t v71 = v99[0];
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v101);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v68 = 2;
LABEL_35:
  if (v98[24])
  {
    unsigned __int8 v73 = objc_msgSend(v64, sel_safe);

    if ((v73 & 1) == 0)
    {
      if (qword_26A8E6118 != -1) {
        swift_once();
      }
      uint64_t v75 = sub_260FE3A10();
      __swift_project_value_buffer(v75, (uint64_t)qword_26A90FB90);
      unint64_t v76 = sub_260FE39F0();
      os_log_type_t v77 = sub_260FE4870();
      if (os_log_type_enabled(v76, v77))
      {
        double v78 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v78 = 0;
        _os_log_impl(&dword_260D82000, v76, v77, "An image was rejected by the image checker.", v78, 2u);
        MEMORY[0x26122CA00](v78, -1, -1);
      }

      sub_260DF2928();
      swift_allocError();
      *(void *)uint64_t v79 = v68;
      *(void *)(v79 + 8) = v71;
      *(unsigned char *)(v79 + 16) = 2;
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_bridgeObjectRelease();

      goto LABEL_27;
    }
  }
  else
  {

    uint64_t v28 = v64;
  }

  unint64_t v74 = v96;
  *uint64_t v96 = v68;
  v74[1] = v71;
  sub_260DF2280("checkImage", 10, 2);
  return swift_release();
}

uint64_t sub_260DF2280(char *a1, uint64_t a2, char a3)
{
  if (qword_26A8E6120 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_260FE3990();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A90FBA8);
  uint64_t v6 = sub_260FE3970();
  uint64_t v7 = sub_260FE3940();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7, v10);
  sub_260FE39B0();
  int v11 = sub_260FE4930();
  uint64_t result = sub_260FE4A60();
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  int v25 = v11;
  if ((a3 & 1) == 0)
  {
    if (!a1)
    {
      __break(1u);
LABEL_7:

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    }
    goto LABEL_12;
  }
  if ((unint64_t)a1 >> 32)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (a1 >> 11 == 27)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  if (a1 >> 16 > 0x10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  a1 = sub_260E5BF60();
LABEL_12:
  uint64_t v13 = sub_260FE39A0();
  v24[1] = v24;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v15);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_260FE39E0();
  swift_release();
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v17, v13);
  if (MEMORY[0x263F90230] && v18 == *MEMORY[0x263F90230])
  {
    id v20 = "[Error] Interval already ended";
  }
  else
  {
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    id v20 = "";
  }
  MEMORY[0x270FA5388](v18, v19);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  os_signpost_id_t v21 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)os_signpost_id_t v21 = 0;
  os_signpost_id_t v22 = sub_260FE3920();
  _os_signpost_emit_with_name_impl(&dword_260D82000, v6, (os_signpost_type_t)v25, v22, a1, v20, v21, 2u);
  MEMORY[0x26122CA00](v21, -1, -1);

  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  return ((uint64_t (*)(char *, uint64_t))v23)((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
}

__CVBuffer *sub_260DF25F8()
{
  uint64_t v1 = *(void **)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  if (v2 == 2) {
    return (__CVBuffer *)v1;
  }
  void v10[2] = *(void *)v0;
  char v11 = v2;
  if (!v2)
  {
    uint64_t v9 = v1;
    size_t Width = CGImageGetWidth(v9);
    size_t Height = CGImageGetHeight(v9);

    goto LABEL_14;
  }
  uint64_t result = (__CVBuffer *)objc_msgSend(v1, sel_extent);
  if (v4 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if ((*(void *)&v4 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&v5 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_18;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  size_t Width = (uint64_t)v4;
  size_t Height = (uint64_t)v5;
LABEL_14:
  v10[0] = Width;
  v10[1] = Height;
  return sub_260EB7464(0x42475241u, v10, 0);
}

uint64_t sub_260DF2724()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImageChecker()
{
  return self;
}

ValueMetadata *type metadata accessor for ImageChecker.Options()
{
  return &type metadata for ImageChecker.Options;
}

unint64_t sub_260DF2794()
{
  unint64_t result = qword_26A8E7440;
  if (!qword_26A8E7440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7440);
  }
  return result;
}

unint64_t sub_260DF27EC()
{
  unint64_t result = qword_26A8E7448;
  if (!qword_26A8E7448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7448);
  }
  return result;
}

unint64_t sub_260DF2844()
{
  unint64_t result = qword_26A8E7450;
  if (!qword_26A8E7450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7450);
  }
  return result;
}

unint64_t sub_260DF289C()
{
  unint64_t result = qword_26A8E7458;
  if (!qword_26A8E7458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7458);
  }
  return result;
}

uint64_t sub_260DF28F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  double v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_260DF2928()
{
  unint64_t result = qword_26A8E7460;
  if (!qword_26A8E7460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7460);
  }
  return result;
}

unint64_t sub_260DF297C()
{
  unint64_t result = qword_26A8E7468;
  if (!qword_26A8E7468)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A8E7468);
  }
  return result;
}

id sub_260DF29C0(id result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2) {
    return (id)swift_bridgeObjectRetain();
  }
  if (a3 <= 1u) {
    return result;
  }
  return result;
}

void destroy for ImageChecker.Error(uint64_t a1)
{
}

void sub_260DF29F8(void *a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a3 <= 1u)
  {
  }
}

uint64_t _s16VisualGeneration12ImageCheckerC5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_260DF29C0(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ImageChecker.Error(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_260DF29C0(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_260DF29F8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ImageChecker.Error(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_260DF29F8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageChecker.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageChecker.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_260DF2B98(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_260DF2BB0(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ImageChecker.Error()
{
  return &type metadata for ImageChecker.Error;
}

uint64_t sub_260DF2BDC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7488);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for Sex(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260DF2D0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Sex()
{
  return &type metadata for Sex;
}

uint64_t sub_260DF2D44()
{
  return sub_260FE5340();
}

uint64_t sub_260DF2DBC()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260DF2E20()
{
  return sub_260FE5340();
}

uint64_t sub_260DF2E94@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_260FE4EC0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_260DF2EF4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701601645;
  if (*v1) {
    uint64_t v2 = 0x656C616D6566;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_260DF2F28(void *a1@<X8>)
{
  *a1 = &unk_270D17358;
}

uint64_t sub_260DF2F38(char *a1, char *a2)
{
  return sub_260DDA710(*a1, *a2);
}

uint64_t sub_260DF2F44()
{
  return sub_260FE4370();
}

uint64_t sub_260DF2FA4()
{
  return sub_260FE4350();
}

unint64_t sub_260DF2FF8()
{
  unint64_t result = qword_26A8E7490;
  if (!qword_26A8E7490)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8E7498);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7490);
  }
  return result;
}

unint64_t sub_260DF3058()
{
  unint64_t result = qword_26A8E74A0;
  if (!qword_26A8E74A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E74A0);
  }
  return result;
}

unint64_t sub_260DF30AC()
{
  unint64_t result = qword_26A8E74A8;
  if (!qword_26A8E74A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E74A8);
  }
  return result;
}

uint64_t sub_260DF3100()
{
  sub_260DE2994(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResolvedImage.HiddenBufferData()
{
  return self;
}

uint64_t destroy for ResolvedImage(uint64_t a1)
{
  return swift_release();
}

uint64_t initializeWithCopy for ResolvedImage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  unint64_t v3 = *(void **)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ResolvedImage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void **)(a2 + 24);
  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  id v6 = v4;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ResolvedImage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResolvedImage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResolvedImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResolvedImage()
{
  return &type metadata for ResolvedImage;
}

uint64_t sub_260DF3358()
{
  unint64_t v1 = 0x6144726566667562;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000015;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7265666552637078;
  }
}

uint64_t sub_260DF33C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260DF45F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260DF33EC(uint64_t a1)
{
  unint64_t v2 = sub_260DF408C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260DF3428(uint64_t a1)
{
  unint64_t v2 = sub_260DF408C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260DF3464(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7528);
  uint64_t v28 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4);
  id v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)v1;
  unint64_t v8 = *(void *)(v1 + 8);
  int v35 = *(_DWORD *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 32);
  id v29 = *(id *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DF408C();
  sub_260FE53E0();
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (sub_260F37234(v10, v11))
  {
    uint64_t v30 = v7;
    unint64_t v31 = v8;
    int v32 = v35;
    id v33 = v29;
    uint64_t v34 = v9;
    char v36 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7518);
    sub_260D90340(&qword_26A8E7538, &qword_26A8E7518);
    sub_260FE50B0();
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v6, v3);
  }
  uint64_t v25 = v7;
  unint64_t v26 = v8;
  id v13 = *(id *)(v9 + 16);
  unint64_t v14 = *(void *)(v9 + 24);
  uint64_t v15 = (__CVBuffer *)v29;
  swift_retain();
  uint64_t v16 = (uint64_t)v13;
  unint64_t v17 = v14;
  int v18 = v35;
  if (v14 >> 60 != 15) {
    goto LABEL_7;
  }
  int64_t BytesPerRow = CVPixelBufferGetBytesPerRow(v15);
  uint64_t result = CVPixelBufferGetHeight(v15);
  uint64_t v20 = BytesPerRow * result;
  if ((unsigned __int128)(BytesPerRow * (__int128)result) >> 64 != (BytesPerRow * result) >> 63)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v29 = v13;
  CVPixelBufferLockBaseAddress(v15, 1uLL);
  uint64_t result = (uint64_t)CVPixelBufferGetBaseAddress(v15);
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v16 = sub_260DF41F8((unsigned char *)result, v20);
  unint64_t v17 = v21;
  uint64_t v22 = *(void *)(v9 + 16);
  unint64_t v23 = *(void *)(v9 + 24);
  *(void *)(v9 + 16) = v16;
  *(void *)(v9 + 24) = v21;
  sub_260DCBD18(v16, v21);
  sub_260DE2994(v22, v23);
  CVPixelBufferUnlockBaseAddress(v15, 1uLL);
  int v18 = v35;
  id v13 = v29;
LABEL_7:
  sub_260DF42AC((uint64_t)v13, v14);
  swift_release();

  uint64_t v30 = v16;
  unint64_t v31 = v17;
  char v36 = 1;
  sub_260DE3F54();
  uint64_t v24 = v27;
  sub_260FE50B0();
  sub_260DCC110(v16, v17);
  if (!v24)
  {
    uint64_t v30 = v25;
    unint64_t v31 = v26;
    int v32 = v18;
    char v36 = 2;
    sub_260DF42C0();
    sub_260FE50B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v6, v3);
}

uint64_t sub_260DF379C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7500);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DF408C();
  sub_260FE53B0();
  if (!v2)
  {
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v11);
    if (sub_260F3724C(v11, v12))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7518);
      char v29 = 0;
      sub_260D90340(&qword_26A8E7520, &qword_26A8E7518);
      sub_260FE4FB0();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      uint64_t v14 = *((void *)&v25 + 1);
      uint64_t v13 = v25;
      int v15 = v26;
      unint64_t v17 = v27;
      uint64_t v16 = v28;
    }
    else
    {
      char v29 = 1;
      sub_260DE421C();
      sub_260FE4FB0();
      unint64_t v18 = *((void *)&v25 + 1);
      uint64_t v19 = v25;
      char v29 = 2;
      sub_260DF40E0();
      sub_260FE4FB0();
      uint64_t v20 = v19;
      uint64_t v14 = *((void *)&v25 + 1);
      unint64_t v21 = v18;
      int v15 = v26;
      uint64_t v22 = v25;
      uint64_t v23 = v20;
      unint64_t v24 = v21;
      unint64_t v17 = sub_260E31794(v20, v21, &v25);
      sub_260DCC110(v23, v24);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      type metadata accessor for ResolvedImage.HiddenBufferData();
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_260FE7230;
      uint64_t v13 = v22;
    }
    *(void *)a2 = v13;
    *(void *)(a2 + 8) = v14;
    *(_DWORD *)(a2 + 16) = v15;
    *(void *)(a2 + 24) = v17;
    *(void *)(a2 + 32) = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_260DF3AD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_260DF379C(a1, a2);
}

uint64_t sub_260DF3AF0(void *a1)
{
  return sub_260DF3464(a1);
}

uint64_t sub_260DF3B08()
{
  return sub_260D90340(&qword_26A8E74B0, &qword_26A8E74B8);
}

uint64_t sub_260DF3B44()
{
  return sub_260D90340(&qword_26A8E74C0, &qword_26A8E74B8);
}

uint64_t sub_260DF3B80(uint64_t a1)
{
  unint64_t v2 = sub_260DF4038();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260DF3BBC(uint64_t a1)
{
  unint64_t v2 = sub_260DF4038();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260DF3BF8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E74F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DF4038();
  sub_260FE53E0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_260DF3D08@<X0>(__IOSurface *a1@<X1>, uint64_t a2@<X8>)
{
  v10[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  v10[0] = 0;
  CVReturn v3 = CVPixelBufferCreateWithIOSurface((CFAllocatorRef)*MEMORY[0x263EFFB10], a1, 0, v10);
  if (v3 || !v10[0])
  {
    sub_260DDA300();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = v3;
    *(unsigned char *)(v4 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    uint64_t v6 = v10[0];
    size_t Width = CVPixelBufferGetWidth(v6);
    size_t Height = CVPixelBufferGetHeight(v6);
    OSType PixelFormatType = CVPixelBufferGetPixelFormatType(v6);

    type metadata accessor for ResolvedImage.HiddenBufferData();
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_260FE7230;
    *(void *)a2 = Width;
    *(void *)(a2 + 8) = Height;
    *(_DWORD *)(a2 + 16) = PixelFormatType;
    *(void *)(a2 + 24) = v6;
    *(void *)(a2 + 32) = result;
  }
  return result;
}

unint64_t sub_260DF3E28(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_260DF3E58();
  unint64_t result = sub_260DF3EAC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_260DF3E58()
{
  unint64_t result = qword_26A8E74C8;
  if (!qword_26A8E74C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E74C8);
  }
  return result;
}

unint64_t sub_260DF3EAC()
{
  unint64_t result = qword_26A8E74D0;
  if (!qword_26A8E74D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E74D0);
  }
  return result;
}

unint64_t sub_260DF3F04()
{
  unint64_t result = qword_26A8E74D8;
  if (!qword_26A8E74D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E74D8);
  }
  return result;
}

unint64_t sub_260DF3F5C()
{
  unint64_t result = qword_26A8E74E0;
  if (!qword_26A8E74E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E74E0);
  }
  return result;
}

_UNKNOWN **sub_260DF3FB0()
{
  return &off_270D19F08;
}

unint64_t sub_260DF3FBC(uint64_t a1)
{
  unint64_t result = sub_260DF3FE4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_260DF3FE4()
{
  unint64_t result = qword_26A8E74E8;
  if (!qword_26A8E74E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E74E8);
  }
  return result;
}

unint64_t sub_260DF4038()
{
  unint64_t result = qword_26A8E74F8;
  if (!qword_26A8E74F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E74F8);
  }
  return result;
}

unint64_t sub_260DF408C()
{
  unint64_t result = qword_26A8E7508;
  if (!qword_26A8E7508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7508);
  }
  return result;
}

unint64_t sub_260DF40E0()
{
  unint64_t result = qword_26A8E7510;
  if (!qword_26A8E7510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7510);
  }
  return result;
}

uint64_t sub_260DF4134(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_260DF41F8(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_260DF4134(__src, &__src[a2]);
  }
  sub_260FE2B10();
  swift_allocObject();
  sub_260FE2AB0();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_260FE2FC0();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_260DF42AC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_260DCBD18(a1, a2);
  }
  return a1;
}

unint64_t sub_260DF42C0()
{
  unint64_t result = qword_26A8E7530;
  if (!qword_26A8E7530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7530);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ResolvedImage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260DF43E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResolvedImage.CodingKeys()
{
  return &type metadata for ResolvedImage.CodingKeys;
}

ValueMetadata *type metadata accessor for ResolvedImage.Empty.CodingKeys()
{
  return &type metadata for ResolvedImage.Empty.CodingKeys;
}

ValueMetadata *type metadata accessor for ResolvedImage.Empty()
{
  return &type metadata for ResolvedImage.Empty;
}

unint64_t sub_260DF443C()
{
  unint64_t result = qword_26A8E7540;
  if (!qword_26A8E7540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7540);
  }
  return result;
}

unint64_t sub_260DF4494()
{
  unint64_t result = qword_26A8E7548;
  if (!qword_26A8E7548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7548);
  }
  return result;
}

unint64_t sub_260DF44EC()
{
  unint64_t result = qword_26A8E7550;
  if (!qword_26A8E7550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7550);
  }
  return result;
}

unint64_t sub_260DF4544()
{
  unint64_t result = qword_26A8E7558;
  if (!qword_26A8E7558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7558);
  }
  return result;
}

unint64_t sub_260DF459C()
{
  unint64_t result = qword_26A8E7560;
  if (!qword_26A8E7560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7560);
  }
  return result;
}

uint64_t sub_260DF45F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265666552637078 && a2 == 0xEC00000065636E65;
  if (v2 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144726566667562 && a2 == 0xEA00000000006174 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000260FFCD40)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_260DF4768()
{
  int v1 = *v0;
  int v2 = v0[1];
  int v3 = v0[2];
  uint64_t v4 = *((void *)v0 + 2);
  sub_260FE4C20();
  sub_260FE4250();
  if (v1 != 5) {
    sub_260FE4150();
  }
  sub_260FE4250();
  swift_bridgeObjectRelease();
  sub_260FE4250();
  if (v2 != 3) {
    sub_260FE4150();
  }
  sub_260FE4250();
  swift_bridgeObjectRelease();
  sub_260FE4250();
  if (v3 != 10) {
    sub_260FE4150();
  }
  sub_260FE4250();
  swift_bridgeObjectRelease();
  sub_260FE4250();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_260FE4250();
    sub_260FE4250();
    swift_bridgeObjectRelease();
  }
  sub_260FE4250();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t dispatch thunk of DirectableDemographicCategoriesProviding.directableDemographicCategories.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_260DF4988()
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7568);
  uint64_t v1 = *(void *)(*(void *)(v0 - 8) + 64);
  MEMORY[0x270FA5388](v0 - 8, v2);
  sub_260FE3640();
  uint64_t v3 = sub_260FE3AC0();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))((char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v3) == 1)
  {
    sub_260DF4C80((uint64_t)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
    sub_260DF4CE0();
    swift_allocError();
    *(void *)uint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    *(unsigned char *)(v5 + 16) = 4;
    return swift_willThrow();
  }
  uint64_t v7 = sub_260FE3AA0();
  (*(void (**)(char *, uint64_t))(v4 + 8))((char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t v8 = MEMORY[0x26122CD00](v7);
  if (v8 == sub_260FE3A50())
  {
    task_id_token_t token = 0;
    if (!task_create_identity_token(*MEMORY[0x263EF8968], &token))
    {
      task_id_token_t v10 = token;
      xpc_dictionary_set_mach_send();
      uint64_t v11 = sub_260FE3660();
      v13[1] = v13;
      MEMORY[0x270FA5388](v11, v12);
      swift_unknownObjectRetain();
      sub_260FE3AB0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))((char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v3);
      sub_260FE3650();
      mach_port_deallocate(*MEMORY[0x263EF8968], v10);
      return swift_unknownObjectRelease();
    }
    sub_260DF4CE0();
    swift_allocError();
    *(_OWORD *)uint64_t v9 = xmmword_260FE9500;
  }
  else
  {
    sub_260DF4CE0();
    swift_allocError();
    *(void *)uint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
  }
  *(unsigned char *)(v9 + 16) = 4;
  swift_willThrow();
  return swift_unknownObjectRelease();
}

uint64_t sub_260DF4C80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7568);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_260DF4CE0()
{
  unint64_t result = qword_26A8E7570;
  if (!qword_26A8E7570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7570);
  }
  return result;
}

uint64_t sub_260DF4D34(void *a1, xpc_object_t value)
{
  return sub_260FE3AB0();
}

uint64_t sub_260DF4D88()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7568);
  MEMORY[0x270FA5388](v0 - 8, v1);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260FE3640();
  uint64_t v4 = sub_260FE3AC0();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_260DF4C80((uint64_t)v3);
    sub_260DF4CE0();
    swift_allocError();
    *(void *)uint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    *(unsigned char *)(v6 + 16) = 4;
    return swift_willThrow();
  }
  uint64_t v8 = sub_260FE3AA0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  uint64_t v9 = MEMORY[0x26122CD00](v8);
  if (v9 == sub_260FE3A50())
  {
    if (xpc_dictionary_copy_mach_send())
    {
      sub_260FE3C70();
      return swift_unknownObjectRelease();
    }
    sub_260DF4CE0();
    swift_allocError();
    *(_OWORD *)uint64_t v10 = xmmword_260FE9510;
  }
  else
  {
    sub_260DF4CE0();
    swift_allocError();
    *(void *)uint64_t v10 = 0;
    *(void *)(v10 + 8) = 0;
  }
  *(unsigned char *)(v10 + 16) = 4;
  swift_willThrow();
  return swift_unknownObjectRelease();
}

void sub_260DF4F90(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  id v90 = a1;
  uint64_t v88 = a2;
  v91[1] = *(id *)MEMORY[0x263EF8340];
  if (qword_26A8E6120 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_260FE3990();
  __swift_project_value_buffer(v10, (uint64_t)qword_26A90FBA8);
  uint64_t v11 = sub_260FE3940();
  *(void *)&long long v89 = &v87;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11, v14);
  unint64_t v15 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v16 = (char *)&v87 - v15;
  sub_260FE3970();
  sub_260FE3910();
  unint64_t v17 = sub_260FE3970();
  os_signpost_type_t v18 = sub_260FE4940();
  uint64_t v19 = sub_260FE4A60();
  if (v19)
  {
    uint64_t v87 = (uint64_t)&v87;
    MEMORY[0x270FA5388](v19, v20);
    unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v21((char *)&v87 - v15, v16, v11);
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    os_signpost_id_t v23 = sub_260FE3920();
    _os_signpost_emit_with_name_impl(&dword_260D82000, v17, v18, v23, "fetchFaceAttributes.vision", "", v22, 2u);
    MEMORY[0x26122CA00](v22, -1, -1);

    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))((char *)&v87 - v15, v11);
  }
  else
  {

    unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  }
  MEMORY[0x270FA5388](v24, v25);
  v21((char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v16, v11);
  sub_260FE39D0();
  swift_allocObject();
  int v26 = (void *)sub_260FE39C0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F1EE10]), sel_init);
  v91[0] = 0;
  if (objc_msgSend(v27, sel_setRevision_error_, 3737841669, v91))
  {
    id v28 = v91[0];
  }
  else
  {
    id v29 = v91[0];
    uint64_t v30 = (void *)sub_260FE2E30();

    swift_willThrow();
    if (qword_26A8E6118 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_260FE3A10();
    __swift_project_value_buffer(v31, (uint64_t)qword_26A90FB90);
    int v32 = sub_260FE39F0();
    os_log_type_t v33 = sub_260FE4890();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_260D82000, v32, v33, "Failed to set private faceAttributes revision. Using default revision.", v34, 2u);
      MEMORY[0x26122CA00](v34, -1, -1);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
  uint64_t v35 = swift_allocObject();
  long long v89 = xmmword_260FE7020;
  *(_OWORD *)(v35 + 16) = xmmword_260FE7020;
  *(void *)(v35 + 32) = objc_msgSend(self, sel_observationWithRequestRevision_boundingBox_, 3737841670, a3, a4, a5, a6);
  v91[0] = (id)v35;
  sub_260FE4420();
  sub_260D905B0(0, &qword_26A8E7578);
  char v36 = (void *)sub_260FE43F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setInputFaceObservations_, v36);

  id v37 = v90;
  sub_260DAB05C(MEMORY[0x263F8EE78]);
  id v38 = objc_allocWithZone(MEMORY[0x263F1EF40]);
  type metadata accessor for VNImageOption(0);
  sub_260DF61C4();
  BOOL v39 = (void *)sub_260FE3E90();
  swift_bridgeObjectRelease();
  id v40 = objc_msgSend(v38, sel_initWithCVPixelBuffer_options_, v37, v39);

  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v89;
  *(void *)(v41 + 32) = v27;
  v91[0] = (id)v41;
  sub_260FE4420();
  sub_260D905B0(0, &qword_26A8E7580);
  os_log_type_t v42 = v27;
  uint64_t v43 = (void *)sub_260FE43F0();
  swift_bridgeObjectRelease();
  v91[0] = 0;
  LODWORD(v39) = objc_msgSend(v40, sel_performRequests_error_, v43, v91);

  if (v39)
  {
    id v44 = v91[0];
    id v45 = [v42 results];
    if (!v45)
    {
LABEL_26:

LABEL_31:
      sub_260DF5A60("fetchFaceAttributes.vision", 26, 2);
      swift_release();

      int v70 = 3;
      goto LABEL_32;
    }
    unint64_t v46 = v45;
    unint64_t v47 = sub_260FE4400();

    if (v47 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v86 = sub_260FE4E40();
      swift_bridgeObjectRelease();
      if (v86)
      {
LABEL_17:
        if ((v47 & 0xC000000000000001) != 0)
        {
          id v48 = (id)MEMORY[0x26122B4C0](0, v47);
        }
        else
        {
          if (!*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            __break(1u);
          }
          id v48 = *(id *)(v47 + 32);
        }
        os_log_type_t v49 = v48;
        swift_bridgeObjectRelease();
        id v50 = objc_msgSend(v49, sel_faceAttributes);

        if (v50)
        {
          id v51 = objc_msgSend(v50, sel_ageCategory);
          id v90 = v40;
          id v52 = objc_msgSend(v51, sel_label);

          id v53 = objc_msgSend(v52, sel_identifier);
          uint64_t v54 = sub_260FE40A0();
          unint64_t v56 = v55;

          LODWORD(v89) = sub_260DF621C(v54, v56);
          id v57 = objc_msgSend(v50, sel_VN7exwFFmQF0AI9P7FjBljwEFu7QYUGCYE);
          id v58 = objc_msgSend(v57, sel_label);

          id v59 = objc_msgSend(v58, sel_identifier);
          uint64_t v60 = sub_260FE40A0();
          unint64_t v62 = v61;

          LOBYTE(v59) = sub_260DF65CC(v60, v62);
          id v63 = objc_msgSend(v50, sel_VN3iT1YRjjnIuELobV1olJiO1vvItN6Kdq);
          id v64 = objc_msgSend(v63, sel_label);

          id v65 = objc_msgSend(v64, sel_identifier);
          uint64_t v66 = sub_260FE40A0();
          unint64_t v68 = v67;

          sub_260DF5DD8(v66, v68, (char *)v91);
          int v69 = LOBYTE(v91[0]);
          sub_260DF5A60("fetchFaceAttributes.vision", 26, 2);
          swift_release();

          int v70 = v59 | (v89 << 8) | (v69 << 16);
LABEL_32:
          uint64_t v85 = v88;
          goto LABEL_33;
        }
        goto LABEL_26;
      }
    }
    else if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_17;
    }

    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  id v90 = v26;
  id v71 = v91[0];
  id v72 = (void *)sub_260FE2E30();

  swift_willThrow();
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v73 = sub_260FE3A10();
  __swift_project_value_buffer(v73, (uint64_t)qword_26A90FB90);
  id v74 = v72;
  id v75 = v72;
  unint64_t v76 = sub_260FE39F0();
  os_log_type_t v77 = sub_260FE4890();
  if (os_log_type_enabled(v76, v77))
  {
    double v78 = (uint8_t *)swift_slowAlloc();
    uint64_t v79 = (void *)swift_slowAlloc();
    *(_DWORD *)double v78 = 138412290;
    id v80 = v72;
    unint64_t v81 = (void *)_swift_stdlib_bridgeErrorToNSError();
    *(void *)&long long v89 = v37;
    uint64_t v82 = v42;
    unint64_t v83 = v40;
    uint64_t v84 = v81;
    v91[0] = v81;
    sub_260FE4AE0();
    *uint64_t v79 = v84;

    _os_log_impl(&dword_260D82000, v76, v77, "Unexpected error requesting FaceAttributes from pixelBuffer: %@", v78, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FB0);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v79, -1, -1);
    MEMORY[0x26122CA00](v78, -1, -1);

    unint64_t v76 = v82;
    id v37 = (id)v89;
  }
  else
  {
  }
  uint64_t v85 = v88;

  sub_260DF5A60("fetchFaceAttributes.vision", 26, 2);
  swift_release();

  int v70 = 3;
LABEL_33:
  *(_WORD *)uint64_t v85 = v70;
  *(unsigned char *)(v85 + 2) = BYTE2(v70);
}

uint64_t sub_260DF5A60(char *a1, uint64_t a2, char a3)
{
  if (qword_26A8E6120 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_260FE3990();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A90FBA8);
  uint64_t v6 = sub_260FE3970();
  uint64_t v7 = sub_260FE3940();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7, v10);
  sub_260FE39B0();
  int v11 = sub_260FE4930();
  uint64_t result = sub_260FE4A60();
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  int v25 = v11;
  if ((a3 & 1) == 0)
  {
    if (!a1)
    {
      __break(1u);
LABEL_7:

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    }
    goto LABEL_12;
  }
  if ((unint64_t)a1 >> 32)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (a1 >> 11 == 27)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  if (a1 >> 16 > 0x10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  a1 = sub_260E5BF60();
LABEL_12:
  uint64_t v13 = sub_260FE39A0();
  v24[1] = v24;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v15);
  unint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_260FE39E0();
  swift_release();
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v17, v13);
  if (MEMORY[0x263F90230] && v18 == *MEMORY[0x263F90230])
  {
    uint64_t v20 = "[Error] Interval already ended";
  }
  else
  {
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    uint64_t v20 = "";
  }
  MEMORY[0x270FA5388](v18, v19);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  unint64_t v21 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)unint64_t v21 = 0;
  os_signpost_id_t v22 = sub_260FE3920();
  _os_signpost_emit_with_name_impl(&dword_260D82000, v6, (os_signpost_type_t)v25, v22, a1, v20, v21, 2u);
  MEMORY[0x26122CA00](v21, -1, -1);

  os_signpost_id_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  return ((uint64_t (*)(char *, uint64_t))v23)((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
}

void sub_260DF5DD8(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  if (sub_260FE40A0() == a1 && v6 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  char v8 = sub_260FE5150();
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    char v16 = 2;
    goto LABEL_21;
  }
  if (sub_260FE40A0() == a1 && v9 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  char v11 = sub_260FE5150();
  swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    char v16 = 3;
    goto LABEL_21;
  }
  if (sub_260FE40A0() == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  char v14 = sub_260FE5150();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    char v16 = 4;
    goto LABEL_21;
  }
  if (sub_260FE40A0() == a1 && v15 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    char v16 = 5;
    goto LABEL_21;
  }
  char v17 = sub_260FE5150();
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_27;
  }
  if (sub_260FE40A0() == a1 && v18 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_32:
    swift_bridgeObjectRelease();
    char v16 = 8;
    goto LABEL_21;
  }
  char v19 = sub_260FE5150();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_32;
  }
  if (sub_260FE40A0() == a1 && v20 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_37:
    swift_bridgeObjectRelease();
    char v16 = 9;
    goto LABEL_21;
  }
  char v21 = sub_260FE5150();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_37;
  }
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_260FE3A10();
  __swift_project_value_buffer(v22, (uint64_t)qword_26A90FB90);
  swift_bridgeObjectRetain();
  os_signpost_id_t v23 = sub_260FE39F0();
  os_log_type_t v24 = sub_260FE4890();
  if (os_log_type_enabled(v23, v24))
  {
    int v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = v26;
    *(_DWORD *)int v25 = 136315138;
    swift_bridgeObjectRetain();
    sub_260DB2844(a1, a2, &v27);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v23, v24, "Unexpected label for skin tone from Vision: %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v26, -1, -1);
    MEMORY[0x26122CA00](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  char v16 = 10;
LABEL_21:
  *a3 = v16;
}

unint64_t sub_260DF61C4()
{
  unint64_t result = qword_26A8E6508;
  if (!qword_26A8E6508)
  {
    type metadata accessor for VNImageOption(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E6508);
  }
  return result;
}

uint64_t sub_260DF621C(uint64_t a1, unint64_t a2)
{
  if (sub_260FE40A0() == a1 && v4 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    else if (sub_260FE40A0() == a1 && v8 == a2)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    else
    {
      char v10 = sub_260FE5150();
      swift_bridgeObjectRelease();
      if (v10)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      else if (sub_260FE40A0() == a1 && v11 == a2)
      {
        uint64_t v7 = 2;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v13 = sub_260FE5150();
        swift_bridgeObjectRelease();
        if (v13)
        {
          swift_bridgeObjectRelease();
          return 2;
        }
        else if (sub_260FE40A0() == a1 && v14 == a2)
        {
          swift_bridgeObjectRelease_n();
          return 3;
        }
        else
        {
          char v15 = sub_260FE5150();
          swift_bridgeObjectRelease();
          if (v15)
          {
            swift_bridgeObjectRelease();
            return 3;
          }
          else if (sub_260FE40A0() == a1 && v16 == a2)
          {
            swift_bridgeObjectRelease_n();
            return 4;
          }
          else
          {
            char v17 = sub_260FE5150();
            swift_bridgeObjectRelease();
            if (v17)
            {
              swift_bridgeObjectRelease();
              return 4;
            }
            else
            {
              if (qword_26A8E6118 != -1) {
                swift_once();
              }
              uint64_t v18 = sub_260FE3A10();
              __swift_project_value_buffer(v18, (uint64_t)qword_26A90FB90);
              swift_bridgeObjectRetain();
              char v19 = sub_260FE39F0();
              os_log_type_t v20 = sub_260FE4890();
              if (os_log_type_enabled(v19, v20))
              {
                char v21 = (uint8_t *)swift_slowAlloc();
                uint64_t v22 = swift_slowAlloc();
                uint64_t v24 = v22;
                *(_DWORD *)char v21 = 136315138;
                swift_bridgeObjectRetain();
                sub_260DB2844(a1, a2, &v24);
                sub_260FE4AE0();
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_260D82000, v19, v20, "Unexpected label for age from Vision: %s", v21, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x26122CA00](v22, -1, -1);
                MEMORY[0x26122CA00](v21, -1, -1);
              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              return 5;
            }
          }
        }
      }
    }
  }
  return v7;
}

uint64_t sub_260DF65CC(uint64_t a1, unint64_t a2)
{
  if (sub_260FE40A0() == a1 && v4 == a2)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    else if (sub_260FE40A0() == a1 && v8 == a2)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    else
    {
      char v10 = sub_260FE5150();
      swift_bridgeObjectRelease();
      if (v10)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      else
      {
        if (qword_26A8E6118 != -1) {
          swift_once();
        }
        uint64_t v11 = sub_260FE3A10();
        __swift_project_value_buffer(v11, (uint64_t)qword_26A90FB90);
        swift_bridgeObjectRetain();
        uint64_t v12 = sub_260FE39F0();
        os_log_type_t v13 = sub_260FE4890();
        if (os_log_type_enabled(v12, v13))
        {
          uint64_t v14 = (uint8_t *)swift_slowAlloc();
          uint64_t v15 = swift_slowAlloc();
          uint64_t v17 = v15;
          *(_DWORD *)uint64_t v14 = 136315138;
          swift_bridgeObjectRetain();
          sub_260DB2844(a1, a2, &v17);
          sub_260FE4AE0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_260D82000, v12, v13, "Unexpected label for sex from Vision: %s", v14, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x26122CA00](v15, -1, -1);
          MEMORY[0x26122CA00](v14, -1, -1);

          return 2;
        }
        else
        {

          uint64_t v7 = 2;
          swift_bridgeObjectRelease_n();
        }
      }
    }
  }
  return v7;
}

uint64_t Ambiguity.concepts.getter()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for Ambiguity()
{
  return &type metadata for Ambiguity;
}

uint64_t TextEncoderMockedTokenizer.encode(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  return TextEncoderXL.encode(_:)(a1, a2, a3);
}

uint64_t destroy for TextEncoderMockedTokenizer(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
  return swift_release();
}

uint64_t initializeWithCopy for TextEncoderMockedTokenizer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = a2 + 24;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 24, v4, v6);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  return a1;
}

void *assignWithCopy for TextEncoderMockedTokenizer(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TextEncoderMockedTokenizer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextEncoderMockedTokenizer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextEncoderMockedTokenizer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextEncoderMockedTokenizer()
{
  return &type metadata for TextEncoderMockedTokenizer;
}

uint64_t _s16VisualGeneration14CharacterFacesV5ErrorO9hashValueSivg_0()
{
  return sub_260FE5340();
}

uint64_t sub_260DF6B3C()
{
  return sub_260FE5300();
}

uint64_t sub_260DF6B64()
{
  return sub_260FE5340();
}

CVPixelBufferRef sub_260DF6BA4(uint64_t a1)
{
  CVPixelBufferRef v3 = v1;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCVPixelBuffer_, a1);
  *(int64x2_t *)&v11.a = vdupq_n_s64(0x1A4uLL);
  id v5 = sub_260F570F8((uint64_t *)&v11);
  if (v2)
  {
  }
  else
  {
    uint64_t v6 = v5;
    CGAffineTransformMakeTranslation(&v11, 46.0, 46.0);
    id v7 = objc_msgSend(v6, sel_imageByApplyingTransform_, &v11);
    id v8 = objc_msgSend(*((id *)v3 + 2), sel_imageByPremultiplyingAlpha);
    id v9 = objc_msgSend(v8, sel_imageByCompositingOverImage_, v7);

    *(_OWORD *)&v11.a = 0uLL;
    LOBYTE(v11.c) = 1;
    CVPixelBufferRef v3 = sub_260E31910(v9, 0x42475241u, (uint64_t)&v11, 0);
  }
  return v3;
}

uint64_t sub_260DF6CF8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EmojiFramer()
{
  return self;
}

char *sub_260DF6D54(void *a1)
{
  uint64_t v2 = sub_260FE2F90();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2, v5);
  unint64_t v6 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v22 = (char *)&v21 - v6;
  id v7 = (void *)sub_260FE4070();
  id v8 = (void *)sub_260FE4070();
  id v9 = objc_msgSend(a1, sel_URLForResource_withExtension_, v7, v8);

  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7588);
  uint64_t v12 = MEMORY[0x270FA5388](v10 - 8, v11);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v15, 1, 1, v2);
    goto LABEL_7;
  }
  MEMORY[0x270FA5388](v12, v13);
  sub_260FE2F20();

  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v16(v15, (char *)&v21 - v6, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v15, 1, v2) == 1)
  {
LABEL_7:
    sub_260DF7070((uint64_t)v15);
    sub_260DF70D0();
    swift_allocError();
    swift_willThrow();
    return v15;
  }
  uint64_t v17 = v22;
  v16(v22, v15, v2);
  id v18 = objc_allocWithZone(MEMORY[0x263F00650]);
  char v19 = (void *)sub_260FE2EF0();
  uint64_t v15 = (char *)objc_msgSend(v18, sel_initWithContentsOfURL_, v19);

  if (!v15)
  {
    sub_260DF70D0();
    swift_allocError();
    swift_willThrow();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v17, v2);
  return v15;
}

uint64_t sub_260DF7070(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7588);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_260DF70D0()
{
  unint64_t result = qword_26A8E7590;
  if (!qword_26A8E7590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7590);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EmojiFramer.EmojiFrameError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x260DF71C0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiFramer.EmojiFrameError()
{
  return &type metadata for EmojiFramer.EmojiFrameError;
}

unint64_t sub_260DF71FC()
{
  unint64_t result = qword_26A8E7598;
  if (!qword_26A8E7598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7598);
  }
  return result;
}

uint64_t DetectedPersonsPolicy.generatedImage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_260DF725C(v1, a1);
}

uint64_t sub_260DF725C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GeneratedImage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t DetectedPersonsPolicy.allowedPersonsCountRange.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DetectedPersonsPolicy() + 20));
}

uint64_t type metadata accessor for DetectedPersonsPolicy()
{
  uint64_t result = qword_26A8E75A8;
  if (!qword_26A8E75A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DetectedPersonsPolicy.personsBounds.getter()
{
  type metadata accessor for DetectedPersonsPolicy();
  return swift_bridgeObjectRetain();
}

uint64_t DetectedPersonsPolicy.detectedFaces.getter()
{
  type metadata accessor for DetectedPersonsPolicy();
  return swift_bridgeObjectRetain();
}

uint64_t DetectedPersonsPolicy.detectedHumanHeads.getter()
{
  type metadata accessor for DetectedPersonsPolicy();
  return swift_bridgeObjectRetain();
}

uint64_t DetectedPersonsPolicy.description.getter()
{
  sub_260FE4C20();
  type metadata accessor for DetectedPersonsPolicy();
  uint64_t v0 = sub_260FE5110();
  swift_bridgeObjectRelease();
  sub_260FE4250();
  sub_260FE4DA0();
  sub_260FE4250();
  sub_260FE4DA0();
  sub_260FE4250();
  swift_bridgeObjectRelease();
  sub_260FE4250();
  return v0;
}

uint64_t sub_260DF7534@<X0>(uint64_t a1@<X8>)
{
  return sub_260DF725C(v1, a1);
}

uint64_t sub_260DF7540(uint64_t a1)
{
  uint64_t result = sub_260DF75C8(&qword_26A8E66C8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_260DF7584(uint64_t a1)
{
  uint64_t result = sub_260DF75C8(&qword_26A8E75A0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_260DF75C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DetectedPersonsPolicy();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_260DF7610()
{
  uint64_t result = type metadata accessor for DetectedPersonsPolicy();
  uint64_t v2 = (uint64_t *)(v0 + *(int *)(result + 20));
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  if (v4 == v3)
  {
    uint64_t v5 = sub_260FE4060();
    MEMORY[0x270FA5388](v5 - 8, v6);
    sub_260FE3FF0();
    uint64_t v7 = sub_260FE3180();
    MEMORY[0x270FA5388](v7 - 8, v8);
    sub_260FE3170();
    return sub_260FE4120();
  }
  if (__OFSUB__(v3, v4))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v3 - v4 != 1)
  {
    if (!__OFSUB__(v3, 1))
    {
      uint64_t v11 = sub_260FE4040();
      MEMORY[0x270FA5388](v11 - 8, v12);
      sub_260FE4030();
      sub_260FE4020();
      sub_260FE4000();
      sub_260FE4020();
      sub_260FE4000();
      sub_260FE4020();
      goto LABEL_8;
    }
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v9 = sub_260FE4040();
  MEMORY[0x270FA5388](v9 - 8, v10);
  sub_260FE4030();
  sub_260FE4020();
  sub_260FE4000();
  sub_260FE4020();
LABEL_8:
  sub_260FE4000();
  sub_260FE4020();
  uint64_t v13 = sub_260FE4060();
  MEMORY[0x270FA5388](v13 - 8, v14);
  sub_260FE4050();
  uint64_t v15 = sub_260FE3180();
  MEMORY[0x270FA5388](v15 - 8, v16);
  sub_260FE3170();
  return sub_260FE4120();
}

char *initializeBufferWithCopyOfBuffer for DetectedPersonsPolicy(char *a1, char **a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    char v19 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = &v19[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    char v8 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    a1[8] = v8;
    uint64_t v23 = type metadata accessor for GeneratedImage();
    uint64_t v9 = *(int *)(v23 + 20);
    uint64_t v10 = &v4[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    v4[v9] = *((unsigned char *)a2 + v9);
    uint64_t v12 = (int *)type metadata accessor for ImageProvenance();
    uint64_t v13 = v12[5];
    uint64_t v21 = v11 + v13;
    uint64_t v22 = &v10[v13];
    uint64_t v14 = sub_260FE3110();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    uint64_t v16 = v7;
    v15(v22, v21, v14);
    *(void *)&v10[v12[6]] = *(void *)(v11 + v12[6]);
    *(void *)&v10[v12[7]] = *(void *)(v11 + v12[7]);
    v4[*(int *)(v23 + 24)] = *((unsigned char *)a2 + *(int *)(v23 + 24));
    uint64_t v17 = a3[6];
    *(_OWORD *)&v4[a3[5]] = *(_OWORD *)((char *)a2 + a3[5]);
    *(void *)&v4[v17] = *(char **)((char *)a2 + v17);
    uint64_t v18 = a3[8];
    *(void *)&v4[a3[7]] = *(char **)((char *)a2 + a3[7]);
    *(void *)&v4[v18] = *(char **)((char *)a2 + v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for DetectedPersonsPolicy(id *a1)
{
  uint64_t v2 = (char *)a1 + *(int *)(type metadata accessor for GeneratedImage() + 20);
  uint64_t v3 = &v2[*(int *)(type metadata accessor for ImageProvenance() + 20)];
  uint64_t v4 = sub_260FE3110();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectedPersonsPolicy(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v21 = type metadata accessor for GeneratedImage();
  uint64_t v8 = *(int *)(v21 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for ImageProvenance();
  uint64_t v12 = v11[5];
  uint64_t v19 = v10 + v12;
  uint64_t v20 = v9 + v12;
  uint64_t v13 = sub_260FE3110();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  id v15 = v6;
  v14(v20, v19, v13);
  *(void *)(v9 + v11[6]) = *(void *)(v10 + v11[6]);
  *(void *)(v9 + v11[7]) = *(void *)(v10 + v11[7]);
  *(unsigned char *)(a1 + *(int *)(v21 + 24)) = *(unsigned char *)(a2 + *(int *)(v21 + 24));
  uint64_t v16 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectedPersonsPolicy(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  uint64_t v8 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v7;
  id v9 = v6;

  uint64_t v10 = type metadata accessor for GeneratedImage();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for ImageProvenance();
  uint64_t v15 = v14[5];
  uint64_t v16 = v12 + v15;
  uint64_t v17 = v13 + v15;
  uint64_t v18 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  *(void *)(v12 + v14[6]) = *(void *)(v13 + v14[6]);
  *(void *)(v12 + v14[7]) = *(void *)(v13 + v14[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(v10 + 24)) = *(unsigned char *)(a2 + *(int *)(v10 + 24));
  uint64_t v19 = a3[5];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DetectedPersonsPolicy(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = type metadata accessor for GeneratedImage();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ImageProvenance();
  uint64_t v11 = v10[5];
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)(v8 + v10[6]) = *(void *)(v9 + v10[6]);
  *(void *)(v8 + v10[7]) = *(void *)(v9 + v10[7]);
  *(unsigned char *)(a1 + *(int *)(v6 + 24)) = *(unsigned char *)(a2 + *(int *)(v6 + 24));
  uint64_t v15 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  return a1;
}

uint64_t assignWithTake for DetectedPersonsPolicy(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;

  uint64_t v8 = type metadata accessor for GeneratedImage();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for ImageProvenance();
  uint64_t v13 = v12[5];
  uint64_t v14 = v10 + v13;
  uint64_t v15 = v11 + v13;
  uint64_t v16 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  *(void *)(v10 + v12[6]) = *(void *)(v11 + v12[6]);
  *(void *)(v10 + v12[7]) = *(void *)(v11 + v12[7]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(v8 + 24)) = *(unsigned char *)(a2 + *(int *)(v8 + 24));
  uint64_t v17 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectedPersonsPolicy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260DF81F8);
}

uint64_t sub_260DF81F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for GeneratedImage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DetectedPersonsPolicy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260DF82CC);
}

uint64_t sub_260DF82CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for GeneratedImage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_260DF8388()
{
  uint64_t result = type metadata accessor for GeneratedImage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of ImageGeneratorIdentifierInitializable.init(imageGeneratorIdentifier:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_260DF8444(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for GeneratedImage() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_260DED4D8(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_260E014AC(v6);
  *a1 = v3;
  return result;
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Error.errorDescription.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_260DF8524()
{
  return 0xD000000000000013;
}

uint64_t sub_260DF8540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260E02C24(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_260DF856C(uint64_t a1)
{
  unint64_t v2 = sub_260DF88E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260DF85A8(uint64_t a1)
{
  unint64_t v2 = sub_260DF88E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260DF85E4()
{
  return 12383;
}

uint64_t sub_260DF85F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_260FE5150();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_260DF8670(uint64_t a1)
{
  unint64_t v2 = sub_260DF8938();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260DF86AC(uint64_t a1)
{
  unint64_t v2 = sub_260DF8938();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Error.encode(to:)(void *a1)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E75B8);
  uint64_t v3 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v4);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E75C0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  v15[1] = v1[1];
  _OWORD v15[2] = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DF88E4();
  sub_260FE53E0();
  sub_260DF8938();
  sub_260FE5010();
  uint64_t v13 = v16;
  sub_260FE5070();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

unint64_t sub_260DF88E4()
{
  unint64_t result = qword_26A8E75C8;
  if (!qword_26A8E75C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E75C8);
  }
  return result;
}

unint64_t sub_260DF8938()
{
  unint64_t result = qword_26A8E75D0;
  if (!qword_26A8E75D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E75D0);
  }
  return result;
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Error.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v28 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E75D8);
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E75E0);
  uint64_t v30 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260DF88E4();
  sub_260FE53B0();
  if (v2) {
    goto LABEL_7;
  }
  uint64_t v27 = a1;
  uint64_t v12 = v11;
  if (*(void *)(sub_260FE4FE0() + 16) != 1)
  {
    uint64_t v15 = sub_260FE4CC0();
    swift_allocError();
    uint64_t v16 = v8;
    uint64_t v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7290);
    *uint64_t v18 = &type metadata for KeyboardEmojiGenerator.GenerationTask.Error;
    sub_260FE4F10();
    sub_260FE4CA0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v15);
    swift_willThrow();
    uint64_t v19 = v30;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v16);
    a1 = v27;
LABEL_7:
    uint64_t v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1Tm(v24);
  }
  sub_260DF8938();
  uint64_t v13 = v7;
  sub_260FE4EF0();
  uint64_t v14 = v30;
  uint64_t v21 = sub_260FE4F70();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v8);
  uint64_t v24 = (uint64_t)v27;
  int v25 = v28;
  *id v28 = v21;
  v25[1] = v23;
  return __swift_destroy_boxed_opaque_existential_1Tm(v24);
}

uint64_t sub_260DF8CF4()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_260DF8D24@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return KeyboardEmojiGenerator.GenerationTask.Error.init(from:)(a1, a2);
}

uint64_t sub_260DF8D3C(void *a1)
{
  return KeyboardEmojiGenerator.GenerationTask.Error.encode(to:)(a1);
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Progress.currentStep.getter()
{
  return *(void *)v0;
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Progress.totalSteps.getter()
{
  return *(void *)(v0 + 8);
}

unint64_t KeyboardEmojiGenerator.GenerationTask.Progress.completionPercentage.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 16) | (v1 < 1);
  if (*(unsigned char *)(v0 + 16) & 1 | (v1 < 1))
  {
    uint64_t v3 = 0;
  }
  else
  {
    float v4 = (float)*(uint64_t *)v0 / (float)v1;
    if (v4 > 1.0) {
      float v4 = 1.0;
    }
    uint64_t v3 = LODWORD(v4);
  }
  return v3 | ((unint64_t)(v2 & 1) << 32);
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Progress.emoji.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t KeyboardEmojiGenerator.GenerationTask.Progress.description.getter()
{
  char v1 = *(unsigned char *)(v0 + 16);
  uint64_t result = sub_260FE5110();
  uint64_t v3 = result;
  if ((v1 & 1) == 0)
  {
    sub_260FE5110();
    sub_260FE4250();
    swift_bridgeObjectRelease();
    sub_260FE4250();
    swift_bridgeObjectRelease();
    return v3;
  }
  return result;
}

uint64_t sub_260DF8E88(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v59 = a8;
  uint64_t v60 = a5;
  uint64_t v47 = a3;
  id v48 = a7;
  uint64_t v61 = a6;
  uint64_t v63 = a9;
  uint64_t v14 = type metadata accessor for GenerationState();
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v18 = &v43[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = *a1;
  uint64_t v45 = a1[1];
  int v44 = *((_DWORD *)a1 + 4);
  uint64_t v58 = *a4;
  int v19 = *((unsigned __int8 *)a4 + 8);
  int v56 = *((unsigned __int8 *)a4 + 9);
  int v57 = v19;
  uint64_t v62 = a4[2];
  int v20 = *((unsigned __int8 *)a4 + 24);
  int v54 = *((_DWORD *)a4 + 7);
  int v55 = v20;
  int v53 = *((unsigned __int8 *)a4 + 32);
  uint64_t v21 = a4[5];
  uint64_t v51 = a4[6];
  uint64_t v52 = v21;
  LODWORD(v21) = *((_DWORD *)a4 + 14);
  int v49 = *((unsigned __int8 *)a4 + 60);
  int v50 = v21;
  uint64_t v64 = a2;
  sub_260E03034(a2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for GenerationState);
  uint64_t v22 = (uint64_t)&v18[*(int *)(v15 + 28)];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  uint64_t v24 = *(void *)(*(void *)(v23 - 8) + 64);
  MEMORY[0x270FA5388](v23 - 8, v25);
  unint64_t v26 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_260DFB47C(v22, (uint64_t)&v43[-v26]);
  uint64_t v27 = sub_260FE3110();
  uint64_t v28 = *(void *)(v27 - 8);
  int v29 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48))(&v43[-v26], 1, v27);
  uint64_t v30 = sub_260D90820((uint64_t)&v43[-v26], &qword_26A8E67F8);
  if (v29 == 1)
  {
    MEMORY[0x270FA5388](v30, v31);
    sub_260FE3100();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56))(&v43[-v26], 0, 1, v27);
    sub_260DC6AB8((uint64_t)&v43[-v26], v22);
  }
  uint64_t v32 = v47;
  sub_260D9D1B0(v47, v65);
  sub_260E03034((uint64_t)v18, v10 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__initialGenerationState, (uint64_t (*)(void))type metadata accessor for GenerationState);
  uint64_t v33 = v10 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__client;
  uint64_t v34 = v45;
  *(void *)uint64_t v33 = v46;
  *(void *)(v33 + 8) = v34;
  *(_DWORD *)(v33 + 16) = v44;
  id v35 = v48;
  if (!v48) {
    id v35 = objc_msgSend(self, sel_service);
  }
  *(void *)(v10 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__mediaAnalysisService) = v35;
  *(void *)(v10 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__visionSession) = v59;
  uint64_t v36 = v10 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__generationOptions;
  *(void *)uint64_t v36 = v58;
  *(unsigned char *)(v36 + 8) = v57;
  *(unsigned char *)(v36 + 9) = v56;
  uint64_t v37 = v62;
  *(void *)(v36 + 16) = v62;
  *(unsigned char *)(v36 + 24) = v55;
  *(_DWORD *)(v36 + 28) = v54;
  *(unsigned char *)(v36 + 32) = v53;
  uint64_t v38 = v51;
  *(void *)(v36 + 40) = v52;
  *(void *)(v36 + 48) = v38;
  *(_DWORD *)(v36 + 56) = v50;
  *(unsigned char *)(v36 + 60) = v49;
  sub_260D90158((uint64_t)v65, v10 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__recipePreparer);
  BOOL v39 = (void *)(v10 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__forensicsReporter);
  uint64_t v40 = v61;
  *BOOL v39 = v60;
  v39[1] = v40;
  uint64_t v41 = v63;
  sub_260D90158(v63, v10 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm(v41);
  sub_260D90820(v32, &qword_26A8E69D0);
  sub_260E03148(v64, (uint64_t (*)(void))type metadata accessor for GenerationState);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v65);
  *(void *)(v10 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__strikeSizes) = v37;
  *(void *)(v10 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__imageChecker) = a10;
  sub_260E03148((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for GenerationState);
  return v10;
}

uint64_t sub_260DF92B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[31] = a4;
  v5[32] = v4;
  v5[29] = a2;
  v5[30] = a3;
  v5[28] = a1;
  v5[33] = type metadata accessor for KeyboardEmojiGenerator.GenerationEvent(0);
  v5[34] = swift_task_alloc();
  v5[35] = type metadata accessor for GenerationState();
  v5[36] = swift_task_alloc();
  type metadata accessor for GenerationRecipe(0);
  v5[37] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DF93A8, 0, 0);
}

uint64_t sub_260DF93A8()
{
  uint64_t v73 = v0;
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 256)
     + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__initialGenerationState;
  uint64_t v3 = v2 + *(int *)(v1 + 28);
  sub_260E03034(v3, *(void *)(v0 + 296), type metadata accessor for GenerationRecipe);
  uint64_t v68 = v2;
  uint64_t v4 = v2 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v69 = v4;
  sub_260DFB47C(v4, v5);
  uint64_t v6 = sub_260FE3110();
  *(void *)(v0 + 304) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v9 = v8(v5, 1, v6);
  if (v9 == 1)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v17 = *(void *)(v0 + 296);
  sub_260E53548(v17, v5, v0 + 56);
  sub_260E03148(v17, type metadata accessor for GenerationRecipe);
  uint64_t v18 = *(NSObject **)(v7 + 8);
  *(void *)(v0 + 312) = v18;
  *(void *)(v0 + 320) = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  os_log_t v67 = v18;
  ((void (*)(uint64_t, uint64_t))v18)(v5, v6);
  swift_task_dealloc();
  if (*(void *)(v0 + 80))
  {
    sub_260DD7B40((long long *)(v0 + 56), v0 + 16);
    uint64_t v71 = swift_task_alloc();
    *(void *)(v0 + 328) = v71;
    uint64_t v19 = swift_task_alloc();
    sub_260DFB47C(v69, v19);
    uint64_t v9 = v8(v19, 1, v6);
    if (v9 != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v71, v19, v6);
      swift_task_dealloc();
      v72[0] = 0x206B736154;
      v72[1] = 0xE500000000000000;
      sub_260E03100((unint64_t *)&qword_26A8E67B0, MEMORY[0x270FA96C8]);
      uint64_t v63 = v6;
      sub_260FE5110();
      sub_260FE4250();
      swift_bridgeObjectRelease();
      sub_260FE4250();
      *(void *)(v0 + 336) = 0x206B736154;
      *(void *)(v0 + 344) = 0xE500000000000000;
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
      uint64_t v65 = sub_260E5C064();
      unint64_t v21 = v20;
      *(void *)(v0 + 352) = v20;
      if (qword_26A8E60B8 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_260FE3A10();
      *(void *)(v0 + 360) = v22;
      *(void *)(v0 + 368) = __swift_project_value_buffer(v22, (uint64_t)qword_26A90FAF0);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v23 = sub_260FE39F0();
      os_log_type_t v24 = sub_260FE48A0();
      if (os_log_type_enabled(v23, v24))
      {
        unint64_t v25 = v21;
        uint64_t v26 = swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        v72[0] = v27;
        *(_DWORD *)uint64_t v26 = 136446466;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 208) = sub_260DB2844(0x206B736154, 0xE500000000000000, v72);
        sub_260FE4AE0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v26 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 216) = sub_260DB2844(v65, v25, v72);
        sub_260FE4AE0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_260D82000, v23, v24, "%{public}s generating emoji with %s", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x26122CA00](v27, -1, -1);
        uint64_t v28 = v26;
        unint64_t v21 = v25;
        MEMORY[0x26122CA00](v28, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      uint64_t v66 = (void *)(v0 + 128);
      uint64_t v32 = sub_260FE3940();
      *(void *)(v0 + 376) = v32;
      uint64_t v33 = *(void *)(v32 - 8);
      *(void *)(v0 + 384) = v33;
      uint64_t v34 = swift_task_alloc();
      *(void *)(v0 + 392) = v34;
      if (qword_26A8E6120 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_260FE3990();
      __swift_project_value_buffer(v35, (uint64_t)qword_26A90FBA8);
      sub_260FE3970();
      sub_260FE3910();
      uint64_t v70 = v34;
      uint64_t v36 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v36, v71, v63);
      swift_bridgeObjectRetain_n();
      uint64_t v37 = sub_260FE3970();
      os_signpost_type_t v38 = sub_260FE4940();
      if (sub_260FE4A60())
      {
        uint64_t v62 = swift_task_alloc();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v62, v70, v32);
        uint64_t v39 = swift_slowAlloc();
        uint64_t v64 = swift_slowAlloc();
        v72[0] = v64;
        *(_DWORD *)uint64_t v39 = 136446466;
        uint64_t v40 = sub_260FE5110();
        *(void *)(v0 + 192) = sub_260DB2844(v40, v41, v72);
        uint64_t v42 = v32;
        sub_260FE4AE0();
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t))v67)(v36, v63);
        *(_WORD *)(v39 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 200) = sub_260DB2844(v65, v21, v72);
        sub_260FE4AE0();
        unint64_t v43 = v21;
        swift_bridgeObjectRelease_n();
        os_signpost_id_t v44 = sub_260FE3920();
        _os_signpost_emit_with_name_impl(&dword_260D82000, v37, v38, v44, "generateEmojiTask", "%{public}s %{public}s", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x26122CA00](v64, -1, -1);
        MEMORY[0x26122CA00](v39, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v62, v42);
        swift_task_dealloc();
      }
      else
      {

        ((void (*)(uint64_t, uint64_t))v67)(v36, v63);
        unint64_t v43 = v21;
        swift_bridgeObjectRelease_n();
      }
      uint64_t v45 = *(void *)(v0 + 288);
      uint64_t v46 = *(void *)(v0 + 232);
      swift_task_dealloc();
      swift_task_alloc();
      (*(void (**)(void))(v33 + 16))();
      sub_260FE39D0();
      swift_allocObject();
      *(void *)(v0 + 400) = sub_260FE39C0();
      swift_task_dealloc();
      sub_260E03034(v68, v45, (uint64_t (*)(void))type metadata accessor for GenerationState);
      *uint64_t v66 = 0;
      *(void *)(v0 + 136) = 0;
      if (v46)
      {
        uint64_t v47 = *(void *)(v0 + 288);
        uint64_t v48 = *(void *)(v0 + 272);
        uint64_t v49 = *(void *)(v0 + 256);
        uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
        uint64_t v50 = *(void *)(v0 + 240);
        uint64_t v52 = (void *)swift_allocObject();
        v52[2] = v51;
        v52[3] = v50;
        v52[4] = v49;
        sub_260DC8644((uint64_t)v51);
        sub_260DC8644((uint64_t)v51);
        swift_retain();
        sub_260DC8E58(0);
        *(void *)(v0 + 128) = sub_260E02E98;
        *(void *)(v0 + 136) = v52;
        swift_storeEnumTagMultiPayload();
        v51(v49, v48);
        sub_260E03148(v48, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
        sub_260E03034(v47, v48, (uint64_t (*)(void))type metadata accessor for GenerationState);
        swift_storeEnumTagMultiPayload();
        v51(v49, v48);
        sub_260E03148(v48, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
        *(void *)uint64_t v48 = 0;
        *(void *)(v48 + 8) = 0;
        *(unsigned char *)(v48 + 16) = 1;
        *(void *)(v48 + 24) = 0;
        swift_storeEnumTagMultiPayload();
        v51(v49, v48);
        sub_260DC8E58((uint64_t)v51);
        sub_260E03148(v48, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
      }
      sub_260EBF1B8();
      uint64_t v53 = *(void *)(v0 + 288);
      uint64_t v54 = *(void *)(v0 + 256);
      uint64_t v56 = *(void *)(v0 + 232);
      uint64_t v55 = *(void *)(v0 + 240);
      int v57 = (void *)swift_task_alloc();
      *(void *)(v0 + 408) = v57;
      v57[2] = v65;
      v57[3] = v43;
      v57[4] = v54;
      v57[5] = v53;
      v57[6] = v71;
      v57[7] = v0 + 16;
      v57[8] = v56;
      v57[9] = v55;
      v57[10] = v66;
      v57[11] = 0x206B736154;
      v57[12] = 0xE500000000000000;
      uint64_t v58 = swift_task_alloc();
      *(void *)(v0 + 416) = v58;
      *(void *)(v58 + 16) = 0x206B736154;
      *(void *)(v58 + 24) = 0xE500000000000000;
      uint64_t v59 = (void *)swift_task_alloc();
      *(void *)(v0 + 424) = v59;
      *uint64_t v59 = v0;
      v59[1] = sub_260DFA7C4;
      uint64_t v9 = *(void *)(v0 + 224);
      uint64_t v16 = &type metadata for KeyboardEmojiGenerator.GeneratedEmoji;
      uint64_t v10 = &unk_26A8E76B0;
      uint64_t v12 = sub_260E02E50;
      uint64_t v11 = v57;
      uint64_t v13 = v58;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      return MEMORY[0x270FA2338](v9, v10, v11, v12, v13, v14, v15, v16);
    }
LABEL_24:
    __break(1u);
    return MEMORY[0x270FA2338](v9, v10, v11, v12, v13, v14, v15, v16);
  }
  sub_260D90820(v0 + 56, &qword_26A8E76A0);
  uint64_t v29 = *(void *)(v3 + 8);
  uint64_t v30 = *(void *)(v3 + 16);
  sub_260D9055C();
  swift_allocError();
  *(void *)uint64_t v31 = v29;
  *(void *)(v31 + 8) = v30;
  *(unsigned char *)(v31 + 16) = 0;
  swift_bridgeObjectRetain();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v60 = *(uint64_t (**)(void))(v0 + 8);
  return v60();
}

uint64_t sub_260DFA7C4()
{
  *(void *)(*(void *)v1 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_260DFAA3C;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_260DFA904;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260DFA904()
{
  uint64_t v1 = v0[49];
  uint64_t v3 = v0[47];
  uint64_t v2 = v0[48];
  uint64_t v4 = v0[41];
  uint64_t v5 = v0[38];
  uint64_t v6 = (void (*)(uint64_t, uint64_t))v0[39];
  uint64_t v7 = v0[36];
  sub_260DC8E58(v0[16]);
  sub_260E03148(v7, (uint64_t (*)(void))type metadata accessor for GenerationState);
  sub_260DFB4E4("generateEmojiTask", 17, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_260DFAA3C()
{
  uint64_t v60 = v0;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(void **)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 288);
  sub_260DC8E58(*(void *)(v0 + 128));
  sub_260E03148(v2, (uint64_t (*)(void))type metadata accessor for GenerationState);
  *(void *)(v0 + 144) = v1;
  id v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
  if (swift_dynamicCast())
  {
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 112);
    int v7 = *(unsigned __int8 *)(v0 + 120);
    if (v7 == 7)
    {

      sub_260E02CAC(v4, v5, v6, 7);
      swift_bridgeObjectRetain();
      sub_260E02CAC(v4, v5, v6, 7);
      uint64_t v8 = sub_260FE39F0();
      os_log_type_t v9 = sub_260FE4890();
      BOOL v10 = os_log_type_enabled(v8, v9);
      unint64_t v11 = *(void *)(v0 + 344);
      uint64_t v57 = v4;
      if (v10)
      {
        uint64_t v12 = *(void *)(v0 + 336);
        os_log_type_t type = v9;
        uint64_t v13 = swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        v59[0] = v55;
        *(_DWORD *)uint64_t v13 = 136446466;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 176) = sub_260DB2844(v12, v11, v59);
        sub_260FE4AE0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v13 + 12) = 2080;
        uint64_t v14 = swift_bridgeObjectRetain();
        uint64_t v15 = MEMORY[0x26122AC60](v14, &type metadata for GeneratorError.VersionTriple);
        unint64_t v17 = v16;
        sub_260DD7B58(v4, v5, v6, 7);
        *(void *)(v0 + 184) = sub_260DB2844(v15, v17, v59);
        sub_260FE4AE0();
        swift_bridgeObjectRelease();
        sub_260DD7B58(v4, v5, v6, 7);
        sub_260DD7B58(v4, v5, v6, 7);
        _os_log_impl(&dword_260D82000, v8, type, "%{public}s emoji generation failed due to asset version mismatch - %s, resetting resources", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x26122CA00](v55, -1, -1);
        MEMORY[0x26122CA00](v13, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_260DD7B58(v4, v5, v6, 7);
        sub_260DD7B58(v4, v5, v6, 7);
      }

      uint64_t v39 = *(void *)(v0 + 248);
      if (v39)
      {
        uint64_t v40 = *(void *)(v39 + 96);
        *(unsigned char *)(swift_task_alloc() + 16) = 1;
        os_unfair_lock_lock((os_unfair_lock_t)(v40 + 24));
        sub_260DD7BF8((uint64_t *)(v40 + 16));
        os_unfair_lock_unlock((os_unfair_lock_t)(v40 + 24));
        swift_task_dealloc();
      }
      unint64_t v41 = *(void (**)(uint64_t, uint64_t *))(v0 + 232);
      if (v41)
      {
        uint64_t v42 = *(uint64_t **)(v0 + 272);
        uint64_t v43 = *(void *)(v0 + 256);
        sub_260DE8EC4();
        uint64_t v44 = swift_allocError();
        *(void *)(v45 + 8) = 0;
        *(void *)(v45 + 16) = 0;
        *(void *)uint64_t v45 = v57;
        *(unsigned char *)(v45 + 24) = 7;
        *uint64_t v42 = v44;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        v41(v43, v42);
        sub_260E03148((uint64_t)v42, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
      }
      uint64_t v46 = *(void *)(v0 + 392);
      uint64_t v47 = *(void *)(v0 + 376);
      uint64_t v48 = *(void *)(v0 + 384);
      uint64_t v49 = *(void *)(v0 + 328);
      uint64_t v50 = *(void *)(v0 + 304);
      uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
      sub_260DE8EC4();
      swift_allocError();
      *(void *)(v51 + 8) = 0;
      *(void *)(v51 + 16) = 0;
      *(void *)uint64_t v51 = v57;
      *(unsigned char *)(v51 + 24) = 7;
      swift_willThrow();

      sub_260DFB4E4("generateEmojiTask", 17, 2);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
      v56(v49, v50);
      goto LABEL_18;
    }
    sub_260DD7B58(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), v7);
  }

  id v18 = v1;
  swift_bridgeObjectRetain();
  id v19 = v1;
  unint64_t v20 = sub_260FE39F0();
  os_log_type_t v21 = sub_260FE4890();
  BOOL v22 = os_log_type_enabled(v20, v21);
  unint64_t v23 = *(void *)(v0 + 344);
  if (v22)
  {
    uint64_t v24 = *(void *)(v0 + 336);
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    v59[0] = v58;
    *(_DWORD *)uint64_t v25 = 136446466;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 152) = sub_260DB2844(v24, v23, v59);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2112;
    id v27 = v1;
    uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 160) = v28;
    sub_260FE4AE0();
    *uint64_t v26 = v28;

    _os_log_impl(&dword_260D82000, v20, v21, "%{public}s emoji generation failed - %@", (uint8_t *)v25, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FB0);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v26, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v58, -1, -1);
    MEMORY[0x26122CA00](v25, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v29 = *(void (**)(uint64_t, void *))(v0 + 232);
  if (v29)
  {
    uint64_t v30 = *(void **)(v0 + 272);
    uint64_t v31 = *(void *)(v0 + 256);
    *uint64_t v30 = v1;
    swift_storeEnumTagMultiPayload();
    id v32 = v1;
    v29(v31, v30);
    sub_260E03148((uint64_t)v30, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
  }
  uint64_t v33 = *(void *)(v0 + 392);
  uint64_t v34 = *(void *)(v0 + 376);
  uint64_t v35 = *(void *)(v0 + 384);
  uint64_t v36 = *(void *)(v0 + 328);
  uint64_t v37 = *(void *)(v0 + 304);
  os_signpost_type_t v38 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
  swift_willThrow();
  sub_260DFB4E4("generateEmojiTask", 17, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
  v38(v36, v37);
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v52 = *(uint64_t (**)(void))(v0 + 8);
  return v52();
}

uint64_t KeyboardEmojiGenerator.GenerationTask.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__initialGenerationState;
  uint64_t v4 = v3 + *(int *)(type metadata accessor for GenerationState() + 20);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260DFB47C(v4, (uint64_t)v8);
  uint64_t v9 = sub_260FE3110();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v8, v9);
  }
  __break(1u);
  return result;
}

uint64_t sub_260DFB47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_260DFB4E4(char *a1, uint64_t a2, char a3)
{
  if (qword_26A8E6120 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_260FE3990();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A90FBA8);
  uint64_t v6 = sub_260FE3970();
  uint64_t v7 = sub_260FE3940();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7, v10);
  sub_260FE39B0();
  int v11 = sub_260FE4930();
  uint64_t result = sub_260FE4A60();
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  int v25 = v11;
  if ((a3 & 1) == 0)
  {
    if (!a1)
    {
      __break(1u);
LABEL_7:

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    }
    goto LABEL_12;
  }
  if ((unint64_t)a1 >> 32)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (a1 >> 11 == 27)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  if (a1 >> 16 > 0x10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  a1 = sub_260E5BF60();
LABEL_12:
  uint64_t v13 = sub_260FE39A0();
  v24[1] = v24;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v15);
  unint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_260FE39E0();
  swift_release();
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v17, v13);
  if (MEMORY[0x263F90230] && v18 == *MEMORY[0x263F90230])
  {
    unint64_t v20 = "[Error] Interval already ended";
  }
  else
  {
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    unint64_t v20 = "";
  }
  MEMORY[0x270FA5388](v18, v19);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)os_log_type_t v21 = 0;
  os_signpost_id_t v22 = sub_260FE3920();
  _os_signpost_emit_with_name_impl(&dword_260D82000, v6, (os_signpost_type_t)v25, v22, a1, v20, v21, 2u);
  MEMORY[0x26122CA00](v21, -1, -1);

  unint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  return ((uint64_t (*)(char *, uint64_t))v23)((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
}

uint64_t sub_260DFB85C(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, char *), uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for KeyboardEmojiGenerator.GenerationEvent(0);
  MEMORY[0x270FA5388](v11, v11);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v13 = a1;
  *((void *)v13 + 1) = a2;
  v13[16] = a3 & 1;
  *((void *)v13 + 3) = 0;
  swift_storeEnumTagMultiPayload();
  a4(a6, v13);
  return sub_260E03148((uint64_t)v13, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
}

uint64_t sub_260DFB940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 440) = v13;
  *(void *)(v8 + 448) = v14;
  *(_OWORD *)(v8 + 424) = v12;
  *(void *)(v8 + 408) = a7;
  *(void *)(v8 + 416) = a8;
  *(void *)(v8 + 392) = a5;
  *(void *)(v8 + 400) = a6;
  *(void *)(v8 + 376) = a3;
  *(void *)(v8 + 384) = a4;
  *(void *)(v8 + 360) = a1;
  *(void *)(v8 + 368) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FC8);
  *(void *)(v8 + 456) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for GeneratedImage();
  *(void *)(v8 + 464) = v9;
  *(void *)(v8 + 472) = *(void *)(v9 - 8);
  *(void *)(v8 + 480) = swift_task_alloc();
  *(void *)(v8 + 488) = swift_task_alloc();
  type metadata accessor for AugmentedPrompt();
  *(void *)(v8 + 496) = swift_task_alloc();
  *(void *)(v8 + 504) = type metadata accessor for KeyboardEmojiGenerator.GenerationEvent(0);
  *(void *)(v8 + 512) = swift_task_alloc();
  type metadata accessor for GenerationRecipe(0);
  *(void *)(v8 + 520) = swift_task_alloc();
  *(void *)(v8 + 528) = swift_task_alloc();
  *(void *)(v8 + 536) = swift_task_alloc();
  *(void *)(v8 + 544) = swift_task_alloc();
  *(void *)(v8 + 552) = swift_task_alloc();
  *(void *)(v8 + 560) = swift_task_alloc();
  *(void *)(v8 + 568) = swift_task_alloc();
  *(void *)(v8 + 576) = swift_task_alloc();
  *(void *)(v8 + 584) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260DFBB50, 0, 0);
}

uint64_t sub_260DFBB50()
{
  uint64_t v21 = v0;
  if (qword_26A8E6068 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_260FE3A10();
  *(void *)(v0 + 592) = v1;
  *(void *)(v0 + 600) = __swift_project_value_buffer(v1, (uint64_t)qword_26A90FA70);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_260FE39F0();
  os_log_type_t v3 = sub_260FE48A0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 376);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 368);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v20 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 352) = sub_260DB2844(v6, v5, &v20);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v2, v3, "unprepared generation recipe policy check for %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v8, -1, -1);
    MEMORY[0x26122CA00](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = *(void *)(v0 + 584);
  uint64_t v10 = *(void *)(v0 + 384);
  uint64_t v11 = *(void *)(v0 + 392);
  long long v12 = *(void **)(v10
                 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__mediaAnalysisService);
  uint64_t v13 = *(void *)(v10 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__visionSession);
  *(void *)(v0 + 120) = type metadata accessor for KeyboardEmojiGenerator.GenerationTask();
  *(void *)(v0 + 128) = &off_270D1A1A8;
  *(void *)(v0 + 80) = v12;
  *(void *)(v0 + 88) = v13;
  *(void *)(v0 + 96) = v10;
  uint64_t v14 = *(int *)(type metadata accessor for GenerationState() + 28);
  *(_DWORD *)(v0 + 236) = v14;
  sub_260E03034(v11 + v14, v9, type metadata accessor for GenerationRecipe);
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_26A8E6788 + dword_26A8E6788);
  id v15 = v12;
  swift_retain();
  swift_retain();
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 608) = v16;
  void *v16 = v0;
  v16[1] = sub_260DFBE1C;
  uint64_t v17 = *(void *)(v0 + 584);
  return v19(v17, v0 + 80);
}

uint64_t sub_260DFBE1C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 616) = v0;
  swift_task_dealloc();
  sub_260E03148(*(void *)(v2 + 584), type metadata accessor for GenerationRecipe);
  if (v0) {
    os_log_type_t v3 = sub_260DFC588;
  }
  else {
    os_log_type_t v3 = sub_260DFBF64;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_260DFBF64()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void *)(v0 + 616);
  sub_260EBF1B8();
  if (v1)
  {
    sub_260E02EA8(v0 + 80);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = sub_260FE3940();
    *(void *)(v0 + 624) = v4;
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = v5;
    *(void *)(v0 + 632) = v5;
    *(void *)(v0 + 640) = *(void *)(v5 + 64);
    uint64_t v7 = swift_task_alloc();
    *(void *)(v0 + 648) = v7;
    if (qword_26A8E6120 != -1) {
      swift_once();
    }
    uint64_t v8 = *(void *)(v0 + 400);
    uint64_t v9 = sub_260FE3990();
    *(void *)(v0 + 656) = __swift_project_value_buffer(v9, (uint64_t)qword_26A90FBA8);
    sub_260FE3970();
    sub_260FE3910();
    uint64_t v10 = sub_260FE3110();
    *(void *)(v0 + 664) = v10;
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = v11;
    *(void *)(v0 + 672) = v11;
    *(void *)(v0 + 680) = *(void *)(v11 + 64);
    uint64_t v13 = swift_task_alloc();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    *(void *)(v0 + 688) = v14;
    *(void *)(v0 + 696) = (v12 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v14(v13, v8, v10);
    id v15 = sub_260FE3970();
    os_signpost_type_t v16 = sub_260FE4940();
    if (sub_260FE4A60())
    {
      uint64_t v35 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v35, v7, v4);
      uint64_t v36 = v4;
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v38 = v18;
      os_signpost_type_t v34 = v16;
      *(_DWORD *)uint64_t v17 = 136446210;
      sub_260E03100((unint64_t *)&qword_26A8E67B0, MEMORY[0x270FA96C8]);
      uint64_t v19 = sub_260FE5110();
      *(void *)(v0 + 344) = sub_260DB2844(v19, v20, &v38);
      sub_260FE4AE0();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v21(v13, v10);
      os_signpost_id_t v22 = sub_260FE3920();
      _os_signpost_emit_with_name_impl(&dword_260D82000, v15, v34, v22, "prepareRecipe", "%{public}s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26122CA00](v18, -1, -1);
      MEMORY[0x26122CA00](v17, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v35, v36);
      swift_task_dealloc();
    }
    else
    {

      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v21(v13, v10);
    }
    *(void *)(v0 + 704) = v21;
    uint64_t v23 = *(void *)(v0 + 568);
    uint64_t v24 = *(void **)(v0 + 408);
    uint64_t v25 = *(void *)(v0 + 384);
    uint64_t v26 = *(void *)(v0 + 392) + *(int *)(v0 + 236);
    swift_task_dealloc();
    swift_task_alloc();
    id v27 = *(void (**)(void))(v6 + 16);
    *(void *)(v0 + 712) = v27;
    *(void *)(v0 + 720) = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v27();
    *(void *)(v0 + 728) = sub_260FE39D0();
    swift_allocObject();
    *(void *)(v0 + 736) = sub_260FE39C0();
    swift_task_dealloc();
    uint64_t v28 = v24[3];
    uint64_t v29 = v24[4];
    __swift_project_boxed_opaque_existential_1(v24, v28);
    sub_260E03034(v26, v23, type metadata accessor for GenerationRecipe);
    uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 + 32)
                                                                              + **(int **)(v29 + 32));
    uint64_t v30 = v25 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__recipePreparer;
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 744) = v31;
    *uint64_t v31 = v0;
    v31[1] = sub_260DFC6C0;
    uint64_t v32 = *(void *)(v0 + 576);
    uint64_t v33 = *(void *)(v0 + 568);
    return v37(v32, v33, v30, v28, v29);
  }
}

uint64_t sub_260DFC588()
{
  sub_260E02EA8(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260DFC6C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 752) = v0;
  swift_task_dealloc();
  sub_260E03148(*(void *)(v2 + 568), type metadata accessor for GenerationRecipe);
  if (v0) {
    uint64_t v3 = sub_260DFF84C;
  }
  else {
    uint64_t v3 = sub_260DFC808;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_260DFC808()
{
  uint64_t v41 = v0;
  uint64_t v1 = v0 + 80;
  sub_260E02EFC(*(void *)(v0 + 576), *(void *)(v0 + 392) + *(int *)(v0 + 236));
  uint64_t v2 = sub_260FE3970();
  uint64_t v3 = swift_task_alloc();
  sub_260FE39B0();
  os_signpost_type_t v4 = sub_260FE4930();
  if (sub_260FE4A60())
  {
    os_signpost_type_t v38 = v4;
    uint64_t v5 = sub_260FE39A0();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = swift_task_alloc();
    swift_retain();
    sub_260FE39E0();
    swift_release();
    int v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v7, v5);
    if (MEMORY[0x263F90230] && v8 == *MEMORY[0x263F90230])
    {
      uint64_t v9 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v5);
      uint64_t v9 = "";
    }
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 712);
    uint64_t v14 = *(void *)(v0 + 632);
    uint64_t v15 = *(void *)(v0 + 624);
    swift_task_dealloc();
    uint64_t v16 = swift_task_alloc();
    v13(v16, v3, v15);
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    os_signpost_id_t v18 = sub_260FE3920();
    _os_signpost_emit_with_name_impl(&dword_260D82000, v2, v38, v18, "prepareRecipe", v9, v17, 2u);
    MEMORY[0x26122CA00](v17, -1, -1);

    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v12(v3, v15);
    v12(v16, v15);
    swift_task_dealloc();
    uint64_t v1 = v0 + 80;
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 632);
    uint64_t v11 = *(void *)(v0 + 624);

    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v12(v3, v11);
  }
  *(void *)(v0 + 760) = v12;
  uint64_t v19 = *(void *)(v0 + 752);
  swift_task_dealloc();
  sub_260EBF1B8();
  if (v19)
  {
    uint64_t v20 = *(void *)(v0 + 648);
    uint64_t v21 = *(void *)(v0 + 624);
    swift_release();
    v12(v20, v21);
    sub_260E02EA8(v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_signpost_id_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  else
  {
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
    if (v24)
    {
      uint64_t v25 = *(void *)(v0 + 512);
      uint64_t v26 = *(void *)(v0 + 384);
      sub_260E03034(*(void *)(v0 + 392), v25, (uint64_t (*)(void))type metadata accessor for GenerationState);
      swift_storeEnumTagMultiPayload();
      swift_retain();
      v24(v26, v25);
      sub_260DC8E58((uint64_t)v24);
      sub_260E03148(v25, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
    }
    swift_bridgeObjectRetain_n();
    id v27 = sub_260FE39F0();
    os_log_type_t v28 = sub_260FE48A0();
    BOOL v29 = os_log_type_enabled(v27, v28);
    unint64_t v30 = *(void *)(v0 + 376);
    if (v29)
    {
      uint64_t v31 = v1;
      uint64_t v32 = *(void *)(v0 + 368);
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v40 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v35 = v32;
      uint64_t v1 = v31;
      *(void *)(v0 + 336) = sub_260DB2844(v35, v30, &v40);
      sub_260FE4AE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_260D82000, v27, v28, "prepared recipe policy check for %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26122CA00](v34, -1, -1);
      MEMORY[0x26122CA00](v33, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_260E03034(*(void *)(v0 + 392) + *(int *)(v0 + 236), *(void *)(v0 + 560), type metadata accessor for GenerationRecipe);
    uint64_t v39 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_26A8E6780 + dword_26A8E6780);
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 768) = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_260DFCE38;
    uint64_t v37 = *(void *)(v0 + 560);
    return v39(v37, v1);
  }
}

uint64_t sub_260DFCE38()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 776) = v0;
  swift_task_dealloc();
  sub_260E03148(*(void *)(v2 + 560), type metadata accessor for GenerationRecipe);
  if (v0) {
    uint64_t v3 = sub_260DFDCA8;
  }
  else {
    uint64_t v3 = sub_260DFCF80;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_260DFCF80()
{
  uint64_t v87 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)(v0 + 10);
  uint64_t v3 = v0[97];
  sub_260EBF1B8();
  if (v3)
  {
    os_signpost_type_t v4 = (void (*)(uint64_t, uint64_t))v0[95];
    uint64_t v5 = v1[81];
    uint64_t v6 = v1[78];
    swift_release();
LABEL_9:
    v4(v5, v6);
    sub_260E02EA8(v2);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v1[1];
    return v26();
  }
  uint64_t v7 = v0[48] + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__generationOptions;
  uint64_t v8 = *(void *)(v7 + 40);
  if (v8)
  {
    uint64_t v9 = *(void *)(v7 + 48);
    int v10 = *(_DWORD *)(v7 + 56);
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_260FE39F0();
    os_log_type_t v12 = sub_260FE48A0();
    BOOL v13 = os_log_type_enabled(v11, v12);
    unint64_t v14 = v1[47];
    if (v13)
    {
      uint64_t v15 = v1[46];
      uint64_t v80 = v8;
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v77 = v9;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v84 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      swift_bridgeObjectRetain();
      v1[41] = sub_260DB2844(v15, v14, &v84);
      sub_260FE4AE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_260D82000, v11, v12, "engineered prompt language check for %s", v16, 0xCu);
      swift_arrayDestroy();
      uint64_t v18 = v17;
      uint64_t v9 = v77;
      MEMORY[0x26122CA00](v18, -1, -1);
      uint64_t v19 = v16;
      uint64_t v8 = v80;
      MEMORY[0x26122CA00](v19, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v20 = v1[62];
    sub_260E03034(v1[49] + *((int *)v1 + 59), v1[69], type metadata accessor for GenerationRecipe);
    sub_260E06808(v20);
    sub_260FE2BC0();
    swift_task_alloc();
    sub_260FE2BA0();
    sub_260E03100((unint64_t *)&qword_26A8E71F0, MEMORY[0x270FA84B8]);
    uint64_t v21 = sub_260FE42E0();
    uint64_t v23 = v22;
    swift_task_dealloc();
    uint64_t v84 = v8;
    uint64_t v85 = v9;
    int v86 = v10;
    v24._countAndFlagsBits = v21;
    v24._object = v23;
    LanguageCheckingParameters.check(text:)(v24);
    if (v25)
    {
      sub_260E03148(v1[62], (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      swift_bridgeObjectRelease();
      swift_release();
      os_signpost_type_t v4 = (void (*)(uint64_t, uint64_t))v1[95];
      uint64_t v5 = v1[81];
      uint64_t v6 = v1[78];
      sub_260E03148(v1[69], type metadata accessor for GenerationRecipe);
      goto LABEL_9;
    }
    uint64_t v28 = v1[69];
    sub_260E03148(v1[62], (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    swift_bridgeObjectRelease();
    sub_260E03148(v28, type metadata accessor for GenerationRecipe);
  }
  sub_260EBF1B8();
  BOOL v29 = (uint64_t *)(v1[48]
                  + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__forensicsReporter);
  uint64_t v30 = *v29;
  v1[98] = *v29;
  v1[99] = v29[1];
  if (v30)
  {
    type metadata accessor for ForensicsHandler();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = 0;
  }
  else
  {
    uint64_t v31 = 0;
  }
  v1[100] = v31;
  uint64_t v32 = (void (*)(uint64_t, uint64_t, uint64_t))v1[86];
  uint64_t v33 = v1[83];
  uint64_t v34 = v1[50];
  uint64_t v35 = swift_task_alloc();
  v1[101] = v35;
  sub_260FE3970();
  uint64_t v78 = v35;
  sub_260FE3910();
  uint64_t v36 = swift_task_alloc();
  v32(v36, v34, v33);
  uint64_t v37 = sub_260FE3970();
  os_signpost_type_t v38 = sub_260FE4940();
  uint64_t v81 = v31;
  if (sub_260FE4A60())
  {
    uint64_t v39 = (void (*)(uint64_t, uint64_t, uint64_t))v1[89];
    id v72 = (void (*)(uint64_t, uint64_t))v1[88];
    os_signpost_type_t v73 = v38;
    uint64_t v40 = v1[83];
    id v75 = (void (*)(uint64_t, uint64_t))v1[95];
    uint64_t v41 = v1[78];
    uint64_t v74 = v41;
    uint64_t v42 = swift_task_alloc();
    v39(v42, v78, v41);
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v84 = v44;
    *(_DWORD *)uint64_t v43 = 136446210;
    sub_260E03100((unint64_t *)&qword_26A8E67B0, MEMORY[0x270FA96C8]);
    uint64_t v45 = sub_260FE5110();
    v1[40] = sub_260DB2844(v45, v46, &v84);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    v72(v36, v40);
    os_signpost_id_t v47 = sub_260FE3920();
    _os_signpost_emit_with_name_impl(&dword_260D82000, v37, v73, v47, "generateImages", "%{public}s", v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v44, -1, -1);
    MEMORY[0x26122CA00](v43, -1, -1);

    v75(v42, v74);
    swift_task_dealloc();
  }
  else
  {
    uint64_t v48 = (void (*)(uint64_t, uint64_t))v1[88];
    uint64_t v49 = v1[83];

    v48(v36, v49);
  }
  uint64_t v50 = (void (*)(void))v1[89];
  uint64_t v51 = v1[68];
  uint64_t v52 = v1[48];
  uint64_t v53 = v1[49] + *((int *)v1 + 59);
  swift_task_dealloc();
  swift_task_alloc();
  v50();
  swift_allocObject();
  v1[102] = sub_260FE39C0();
  swift_task_dealloc();
  sub_260E03034(v53, v51, type metadata accessor for GenerationRecipe);
  uint64_t v55 = *(void *)(v52 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__client + 8);
  int v56 = *(_DWORD *)(v52 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__client + 16);
  uint64_t v84 = *(void *)(v52 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__client);
  uint64_t v54 = v84;
  uint64_t v85 = v55;
  int v76 = v56;
  int v86 = v56;
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_260EAA69C(v51, &v84);
  uint64_t v82 = v54;
  uint64_t v79 = v1 + 2;
  uint64_t v58 = v1 + 22;
  v1[103] = v57;
  uint64_t v59 = (uint64_t *)v1[54];
  uint64_t v60 = *v59;
  uint64_t v61 = v59[1];
  if (v81)
  {
    v1[25] = type metadata accessor for ForensicsHandler();
    v1[26] = &off_270D19820;
    v1[22] = v81;
  }
  else
  {
    v1[26] = 0;
    *uint64_t v58 = 0u;
    *((_OWORD *)v1 + 12) = 0u;
  }
  v1[104] = v81;
  uint64_t v62 = *((int *)v1 + 59);
  uint64_t v63 = v1;
  uint64_t v64 = v1[67];
  uint64_t v65 = (void *)v63[51];
  uint64_t v66 = v63[49] + v62;
  v63[2] = v57;
  v63[3] = v60;
  v63[4] = v61;
  sub_260E02F78((uint64_t)v58, (uint64_t)(v63 + 5));
  uint64_t v67 = v65[3];
  uint64_t v68 = v65[4];
  __swift_project_boxed_opaque_existential_1(v65, v67);
  sub_260E03034(v66, v64, type metadata accessor for GenerationRecipe);
  v63[27] = v82;
  v63[28] = v55;
  *((_DWORD *)v63 + 58) = v76;
  uint64_t v69 = *(int **)(v68 + 40);
  sub_260DC8644(v60);
  unint64_t v83 = (int *)((char *)v69 + *v69);
  swift_retain();
  swift_retain();
  uint64_t v70 = (void *)swift_task_alloc();
  v63[105] = v70;
  *uint64_t v70 = v63;
  v70[1] = sub_260DFDE1C;
  uint64_t v71 = v63[67];
  return ((uint64_t (*)(uint64_t, void *, void *, uint64_t, uint64_t))v83)(v71, v63 + 27, v79, v67, v68);
}

uint64_t sub_260DFDCA8()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[95];
  uint64_t v2 = v0[81];
  uint64_t v3 = v0[78];
  swift_release();
  v1(v2, v3);
  sub_260E02EA8((uint64_t)(v0 + 10));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_signpost_type_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_260DFDE1C(uint64_t a1)
{
  uint64_t v3 = *v2;
  v3[106] = a1;
  v3[107] = v1;
  swift_task_dealloc();
  sub_260E03148(v3[67], type metadata accessor for GenerationRecipe);
  if (v1) {
    os_signpost_type_t v4 = sub_260DFF9BC;
  }
  else {
    os_signpost_type_t v4 = sub_260DFDF6C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_260DFDF6C()
{
  uint64_t v77 = v0;
  uint64_t v73 = v0 + 80;
  uint64_t v1 = sub_260FE3970();
  uint64_t v2 = swift_task_alloc();
  sub_260FE39B0();
  os_signpost_type_t v3 = sub_260FE4930();
  uint64_t v71 = v0 + 16;
  if (sub_260FE4A60())
  {
    uint64_t v4 = sub_260FE39A0();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = swift_task_alloc();
    swift_retain();
    sub_260FE39E0();
    swift_release();
    int v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v6, v4);
    if (MEMORY[0x263F90230] && v7 == *MEMORY[0x263F90230])
    {
      uint64_t v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
      uint64_t v8 = "";
    }
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 760);
    os_log_type_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 712);
    uint64_t v13 = *(void *)(v0 + 624);
    swift_task_dealloc();
    uint64_t v14 = swift_task_alloc();
    v12(v14, v2, v13);
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    os_signpost_id_t v16 = sub_260FE3920();
    _os_signpost_emit_with_name_impl(&dword_260D82000, v1, v3, v16, "generateImages", v8, v15, 2u);
    MEMORY[0x26122CA00](v15, -1, -1);

    v11(v2, v13);
    v11(v14, v13);
    swift_task_dealloc();
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 760);
    uint64_t v10 = *(void *)(v0 + 624);

    v9(v2, v10);
  }
  uint64_t v17 = *(void *)(v0 + 856);
  uint64_t v18 = *(void *)(v0 + 848);
  uint64_t v19 = *(void *)(v0 + 528);
  uint64_t v20 = *(void *)(v0 + 384);
  uint64_t v21 = *(void *)(v0 + 392) + *(int *)(v0 + 236);
  swift_task_dealloc();
  sub_260E03034(v21, v19, type metadata accessor for GenerationRecipe);
  sub_260E3B410((uint64_t)&v75);
  sub_260E03148(v19, type metadata accessor for GenerationRecipe);
  LOBYTE(v19) = v75;
  swift_bridgeObjectRelease();
  LOBYTE(v19) = sub_260EACDE4(v19, (uint64_t)&unk_270D17380);
  swift_retain();
  os_signpost_id_t v22 = sub_260E02A74(v18, v20, v19 & 1);
  if (v17)
  {
    uint64_t v23 = *(void *)(v0 + 808);
    Swift::String v24 = *(void (**)(uint64_t, uint64_t))(v0 + 760);
    uint64_t v25 = *(void *)(v0 + 648);
    uint64_t v26 = *(void *)(v0 + 624);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_260E02FE0(v71);
    v24(v23, v26);
    v24(v25, v26);
    sub_260E02EA8(v73);
    swift_bridgeObjectRelease();
LABEL_24:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
    return v36();
  }
  uint64_t v27 = (uint64_t)v22;
  uint64_t v28 = *(void *)(v0 + 800);
  swift_release();
  if (!v28) {
    goto LABEL_21;
  }
  uint64_t v29 = *(void *)(v0 + 832);
  if (*(void *)(v29 + 16))
  {
    uint64_t v75 = *(void *)(v29 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_260EE04EC(v27);
    *(void *)(v29 + 16) = v75;
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    *(void *)(v29 + 16) = v27;
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v29 + 16);
  if (v30)
  {
    uint64_t v31 = *(void *)(v30 + 16);
    if (v31)
    {
      uint64_t v32 = *(void (**)(uint64_t *))(v0 + 784);
      swift_bridgeObjectRetain();
      uint64_t v33 = (unint64_t *)(v30 + 40);
      do
      {
        if (*(void *)(v0 + 784))
        {
          unint64_t v34 = *v33;
          LOBYTE(v75) = *((unsigned char *)v33 - 8);
          unint64_t v76 = v34;
          swift_bridgeObjectRetain();
          v32(&v75);
          swift_bridgeObjectRelease();
        }
        v33 += 2;
        --v31;
      }
      while (v31);
LABEL_21:
      swift_bridgeObjectRelease();
    }
  }
  sub_260EBF1B8();
  uint64_t v35 = *(void *)(v0 + 848);
  uint64_t v38 = *(void *)(v35 + 16);
  if (!v38)
  {
    uint64_t v70 = *(void *)(v0 + 808);
    uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v0 + 760);
    uint64_t v54 = *(void *)(v0 + 648);
    uint64_t v55 = *(void *)(v0 + 624);
    swift_bridgeObjectRelease();
    sub_260E00F10();
    swift_allocError();
    *int v56 = 0xD000000000000015;
    v56[1] = 0x8000000260FFD000;
    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_260E02FE0(v71);
    v53(v70, v55);
    v53(v54, v55);
LABEL_23:
    sub_260E02EA8(v73);
    goto LABEL_24;
  }
  if (v38 != 1)
  {
    uint64_t v57 = *(void *)(v0 + 808);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v0 + 760);
    uint64_t v59 = *(void *)(v0 + 648);
    uint64_t v60 = *(void *)(v0 + 624);
    uint64_t v75 = 0;
    unint64_t v76 = 0xE000000000000000;
    sub_260FE4C20();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 264) = v38;
    uint64_t v61 = sub_260FE5110();
    unint64_t v63 = v62;
    swift_bridgeObjectRelease();
    uint64_t v75 = v61;
    unint64_t v76 = v63;
    sub_260FE4250();
    uint64_t v65 = v75;
    unint64_t v64 = v76;
    sub_260E00F10();
    swift_allocError();
    *uint64_t v66 = v65;
    v66[1] = v64;
    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_260E02FE0(v71);
    v58(v57, v60);
    v58(v59, v60);
    goto LABEL_23;
  }
  uint64_t v39 = *(void *)(v0 + 464);
  uint64_t v40 = *(void *)(v0 + 472);
  uint64_t v41 = *(void *)(v0 + 456);
  sub_260E03034(v35 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80)), v41, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v39);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v41, 1, v39) == 1)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v43 = *(void *)(v0 + 480);
    uint64_t v42 = *(void *)(v0 + 488);
    sub_260E0309C(*(void *)(v0 + 456), v42);
    sub_260E03034(v42, v43, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    swift_bridgeObjectRetain_n();
    uint64_t v44 = sub_260FE39F0();
    os_log_type_t v45 = sub_260FE48A0();
    BOOL v46 = os_log_type_enabled(v44, v45);
    uint64_t v47 = *(void *)(v0 + 480);
    unint64_t v48 = *(void *)(v0 + 376);
    if (v46)
    {
      uint64_t v72 = *(void *)(v0 + 368);
      uint64_t v49 = swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v75 = v50;
      *(_DWORD *)uint64_t v49 = 136315394;
      uint64_t v51 = GeneratedImage.description.getter();
      *(void *)(v0 + 296) = sub_260DB2844(v51, v52, &v75);
      sub_260FE4AE0();
      swift_bridgeObjectRelease();
      sub_260E03148(v47, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      *(_WORD *)(v49 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 304) = sub_260DB2844(v72, v48, &v75);
      sub_260FE4AE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_260D82000, v44, v45, "%s policy check of %s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x26122CA00](v50, -1, -1);
      MEMORY[0x26122CA00](v49, -1, -1);
    }
    else
    {
      sub_260E03148(*(void *)(v0 + 480), (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      swift_bridgeObjectRelease_n();
    }

    sub_260E03034(*(void *)(v0 + 392) + *(int *)(v0 + 236), *(void *)(v0 + 520), type metadata accessor for GenerationRecipe);
    uint64_t v74 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26A8E6678 + dword_26A8E6678);
    uint64_t v67 = (void *)swift_task_alloc();
    *(void *)(v0 + 864) = v67;
    *uint64_t v67 = v0;
    v67[1] = sub_260DFEADC;
    uint64_t v68 = *(void *)(v0 + 520);
    uint64_t v69 = *(void *)(v0 + 488);
    return v74(v69, v68, v0 + 80);
  }
  return result;
}

uint64_t sub_260DFEADC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 872) = v0;
  swift_task_dealloc();
  sub_260E03148(*(void *)(v2 + 520), type metadata accessor for GenerationRecipe);
  if (v0) {
    os_signpost_type_t v3 = sub_260DFEEB0;
  }
  else {
    os_signpost_type_t v3 = sub_260DFEC24;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_260DFEC24()
{
  uint64_t v1 = v0[109];
  sub_260EBF1B8();
  if (v1)
  {
    uint64_t v2 = v0[101];
    os_signpost_type_t v3 = (void (*)(uint64_t, uint64_t))v0[95];
    uint64_t v4 = v0[81];
    uint64_t v5 = v0[78];
    uint64_t v6 = v0[61];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_260E03148(v6, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260E02FE0((uint64_t)(v0 + 2));
    v3(v2, v5);
    v3(v4, v5);
    sub_260E02EA8((uint64_t)(v0 + 10));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    v0[110] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_260DFF098;
    uint64_t v10 = v0[48];
    v9[3] = v0[61];
    v9[4] = v10;
    return MEMORY[0x270FA2498](sub_260DFFD8C, 0, 0);
  }
}

uint64_t sub_260DFEEB0()
{
  uint64_t v1 = v0[101];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[95];
  uint64_t v3 = v0[81];
  uint64_t v4 = v0[78];
  uint64_t v5 = v0[61];
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_260E03148(v5, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  sub_260E02FE0((uint64_t)(v0 + 2));
  v2(v1, v4);
  v2(v3, v4);
  sub_260E02EA8((uint64_t)(v0 + 10));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_260DFF098(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 888) = a1;
  *(void *)(v3 + 896) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_260DFFB84;
  }
  else {
    uint64_t v4 = sub_260DFF1B0;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_260DFF1B0()
{
  uint64_t v32 = v0;
  if (*(void *)(*(void *)(v0 + 888) + 16))
  {
    uint64_t v1 = *(void *)(v0 + 896);
    v31[0] = *(void **)(v0 + 888);
    swift_bridgeObjectRetain();
    sub_260DF8444(v31);
    if (v1)
    {
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = v31[0];
    if (qword_26A8E60B8 != -1) {
      swift_once();
    }
    uint64_t v11 = *(void *)(v0 + 408);
    __swift_project_value_buffer(*(void *)(v0 + 592), (uint64_t)qword_26A90FAF0);
    sub_260D90158(v11, v0 + 136);
    swift_bridgeObjectRetain_n();
    os_log_type_t v12 = sub_260FE39F0();
    os_log_type_t v13 = sub_260FE48A0();
    BOOL v14 = os_log_type_enabled(v12, v13);
    unint64_t v15 = *(void *)(v0 + 448);
    if (v14)
    {
      uint64_t v16 = *(void *)(v0 + 440);
      uint64_t v17 = swift_slowAlloc();
      uint64_t v30 = v10;
      uint64_t v18 = (void *)swift_slowAlloc();
      v31[0] = v18;
      *(_DWORD *)uint64_t v17 = 136446466;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 280) = sub_260DB2844(v16, v15, (uint64_t *)v31);
      sub_260FE4AE0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2080;
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 136), *(void *)(v0 + 160));
      uint64_t v19 = sub_260FE5110();
      *(void *)(v0 + 288) = sub_260DB2844(v19, v20, (uint64_t *)v31);
      sub_260FE4AE0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
      _os_log_impl(&dword_260D82000, v12, v13, "%{public}s generated emoji with %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      uint64_t v21 = v18;
      uint64_t v10 = v30;
      MEMORY[0x26122CA00](v21, -1, -1);
      MEMORY[0x26122CA00](v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 136);
    }

    os_signpost_id_t v22 = *(void (**)(uint64_t, void *))(v0 + 416);
    if (v22)
    {
      uint64_t v23 = *(void **)(v0 + 512);
      uint64_t v24 = *(void *)(v0 + 384);
      *uint64_t v23 = v10;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      v22(v24, v23);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_260E03148((uint64_t)v23, type metadata accessor for KeyboardEmojiGenerator.GenerationEvent);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    uint64_t v25 = *(void *)(v0 + 808);
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v0 + 760);
    uint64_t v27 = *(void *)(v0 + 648);
    uint64_t v28 = *(void *)(v0 + 624);
    uint64_t v29 = *(void **)(v0 + 360);
    sub_260E03148(*(void *)(v0 + 488), (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260E02FE0(v0 + 16);
    v26(v25, v28);
    v26(v27, v28);
    sub_260E02EA8(v0 + 80);
    *uint64_t v29 = v10;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 808);
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0 + 760);
    uint64_t v5 = *(void *)(v0 + 648);
    uint64_t v6 = *(void *)(v0 + 624);
    uint64_t v7 = *(void *)(v0 + 488);
    swift_bridgeObjectRelease();
    sub_260E00F10();
    swift_allocError();
    *uint64_t v8 = 0xD000000000000027;
    v8[1] = 0x8000000260FFD020;
    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_260E03148(v7, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260E02FE0(v0 + 16);
    v4(v3, v6);
    v4(v5, v6);
    sub_260E02EA8(v0 + 80);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v9();
}

uint64_t sub_260DFF84C()
{
  uint64_t v1 = v0[81];
  uint64_t v2 = v0[79];
  uint64_t v3 = v0[78];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_260E02EA8((uint64_t)(v0 + 10));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_260DFF9BC()
{
  uint64_t v1 = v0[101];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[95];
  uint64_t v3 = v0[81];
  uint64_t v4 = v0[78];
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_260E02FE0((uint64_t)(v0 + 2));
  v2(v1, v4);
  v2(v3, v4);
  sub_260E02EA8((uint64_t)(v0 + 10));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_260DFFB84()
{
  uint64_t v1 = v0[101];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[95];
  uint64_t v3 = v0[81];
  uint64_t v4 = v0[78];
  uint64_t v5 = v0[61];
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_260E03148(v5, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  sub_260E02FE0((uint64_t)(v0 + 2));
  v2(v1, v4);
  v2(v3, v4);
  sub_260E02EA8((uint64_t)(v0 + 10));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_260DFFD6C(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_260DFFD8C, 0, 0);
}

id sub_260DFFD8C()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0[4] + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__strikeSizes);
  if (v1)
  {
    int64_t v2 = *(void *)(v1 + 16);
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (v2)
    {
      uint64_t v28 = MEMORY[0x263F8EE78];
      sub_260DB48CC(0, v2, 0);
      uint64_t v3 = v28;
      uint64_t v4 = (unint64_t *)(v1 + 32);
      unint64_t v5 = *(void *)(v28 + 16);
      do
      {
        unint64_t v7 = *v4++;
        unint64_t v6 = v7;
        uint64_t v29 = v3;
        unint64_t v8 = *(void *)(v3 + 24);
        if (v5 >= v8 >> 1)
        {
          sub_260DB48CC(v8 > 1, v5 + 1, 1);
          uint64_t v3 = v29;
        }
        *(void *)(v3 + 16) = v5 + 1;
        *(int64x2_t *)(v3 + 16 * v5++ + 32) = vdupq_n_s64(v6);
        --v2;
      }
      while (v2);
    }
    uint64_t v9 = v0[3];
    v0[2] = v3;
    uint64_t v10 = *(void **)v9;
    if (*(unsigned char *)(v9 + 8))
    {
      if (*(unsigned char *)(v9 + 8) == 1)
      {
        id result = objc_msgSend(v10, sel_extent);
        if (v12 <= -9.22337204e18)
        {
          __break(1u);
        }
        else if (v12 < 9.22337204e18)
        {
          if ((*(void *)&v12 & 0x7FF0000000000000) != 0x7FF0000000000000
            && (*(void *)&v13 & 0x7FF0000000000000) != 0x7FF0000000000000)
          {
            if (v13 > -9.22337204e18)
            {
              if (v13 < 9.22337204e18)
              {
                size_t Width = (uint64_t)v12;
                uint64_t v16 = (uint64_t)v13;
LABEL_24:
                uint64_t v24 = v0[4];
                sub_260EAF52C(0, 0, Width, v16);
                unsigned __int8 v30 = *(unsigned char *)(v24
                               + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__generationOptions
                               + 24);
                uint64_t v25 = sub_260EB3110(&v30, *(void **)(v24+ OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__mediaAnalysisService));
                uint64_t v26 = v0[2];
                v0[5] = v25;
                v0[6] = v26;
                uint64_t v27 = (void *)swift_task_alloc();
                v0[7] = v27;
                *uint64_t v27 = v0;
                v27[1] = sub_260E00104;
                return (id)sub_260E8544C(v26, (uint64_t)v25);
              }
LABEL_31:
              __break(1u);
              return result;
            }
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        __break(1u);
        goto LABEL_29;
      }
      os_signpost_id_t v22 = v10;
      size_t Width = CVPixelBufferGetWidth(v22);
      size_t Height = CVPixelBufferGetHeight(v22);
    }
    else
    {
      os_signpost_id_t v22 = v10;
      size_t Width = CGImageGetWidth(v22);
      size_t Height = CGImageGetHeight(v22);
    }
    uint64_t v16 = Height;

    goto LABEL_24;
  }
  uint64_t v17 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D00);
  uint64_t v18 = *(void *)(type metadata accessor for GeneratedImage() - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_260FE7080;
  sub_260E03034(v17, v20 + v19, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
  uint64_t v21 = (uint64_t (*)(uint64_t))v0[1];
  return (id)v21(v20);
}

uint64_t sub_260E00104(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v5 = sub_260E002B4;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v4 + 72) = a1;
    unint64_t v5 = sub_260E0023C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_260E0023C()
{
  size_t v1 = sub_260DBA764(*(void *)(v0 + 72));
  swift_bridgeObjectRelease();
  int64_t v2 = *(uint64_t (**)(size_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_260E002B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  size_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_260E00320(uint64_t a1, unint64_t a2)
{
  if (qword_26A8E60B8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_260FE3A10();
  __swift_project_value_buffer(v4, (uint64_t)qword_26A90FAF0);
  swift_bridgeObjectRetain_n();
  unint64_t v5 = sub_260FE39F0();
  os_log_type_t v6 = sub_260FE48A0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_bridgeObjectRetain();
    sub_260DB2844(a1, a2, &v9);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v5, v6, "Task running %{public}s was cancelled", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v8, -1, -1);
    MEMORY[0x26122CA00](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t KeyboardEmojiGenerator.GenerationTask.isCancelled.getter()
{
  uint64_t v1 = v0;
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_260FE3A10();
  __swift_project_value_buffer(v2, (uint64_t)qword_26A90FB90);
  swift_retain_n();
  uint64_t v3 = sub_260FE39F0();
  os_log_type_t v4 = sub_260FE4880();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v14 = v6;
    *(_DWORD *)unint64_t v5 = 136315138;
    swift_retain();
    uint64_t v7 = KeyboardEmojiGenerator.GenerationTask.description.getter();
    unint64_t v9 = v8;
    swift_release();
    sub_260DB2844(v7, v9, &v14);
    sub_260FE4AE0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_260D82000, v3, v4, "%s checking cancellation", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v6, -1, -1);
    MEMORY[0x26122CA00](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v10 = (void *)(v1 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller);
  uint64_t v11 = *(void *)(v1
                  + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller
                  + 24);
  uint64_t v12 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12) & 1;
}

Swift::Void __swiftcall KeyboardEmojiGenerator.GenerationTask.cancel()()
{
  uint64_t v1 = v0;
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_260FE3A10();
  __swift_project_value_buffer(v2, (uint64_t)qword_26A90FB90);
  swift_retain_n();
  uint64_t v3 = sub_260FE39F0();
  os_log_type_t v4 = sub_260FE4880();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = v6;
    *(_DWORD *)unint64_t v5 = 136446210;
    swift_retain();
    uint64_t v7 = KeyboardEmojiGenerator.GenerationTask.description.getter();
    unint64_t v9 = v8;
    swift_release();
    sub_260DB2844(v7, v9, &v13);
    sub_260FE4AE0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_260D82000, v3, v4, "cancelling %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v6, -1, -1);
    MEMORY[0x26122CA00](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v10 = (void *)(v1 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller);
  uint64_t v11 = *(void *)(v1
                  + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller
                  + 24);
  uint64_t v12 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
}

uint64_t KeyboardEmojiGenerator.GenerationTask.description.getter()
{
  v14[0] = sub_260FE5430();
  v14[1] = v1;
  sub_260FE4250();
  uint64_t v2 = sub_260FE3110();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__initialGenerationState;
  uint64_t v8 = v7 + *(int *)(type metadata accessor for GenerationState() + 20);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  MEMORY[0x270FA5388](v9 - 8, v10);
  uint64_t v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260DFB47C(v8, (uint64_t)v12);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_260E03100((unint64_t *)&qword_26A8E67B0, MEMORY[0x270FA96C8]);
    sub_260FE5110();
    sub_260FE4250();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return v14[0];
  }
  return result;
}

uint64_t KeyboardEmojiGenerator.GenerationTask.deinit()
{
  sub_260E03148(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__initialGenerationState, (uint64_t (*)(void))type metadata accessor for GenerationState);
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__mediaAnalysisService));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_260D90820(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__recipePreparer, &qword_26A8E69D0);
  sub_260DC8E58(*(void *)(v0
                          + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__forensicsReporter));
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__sendableCanceller);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t KeyboardEmojiGenerator.GenerationTask.__deallocating_deinit()
{
  KeyboardEmojiGenerator.GenerationTask.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_260E00C2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__initialGenerationState;
  uint64_t v4 = v3 + *(int *)(type metadata accessor for GenerationState() + 20);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260DFB47C(v4, (uint64_t)v8);
  uint64_t v9 = sub_260FE3110();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v8, v9);
  }
  __break(1u);
  return result;
}

uint64_t sub_260E00D4C()
{
  return KeyboardEmojiGenerator.GenerationTask.isCancelled.getter() & 1;
}

void sub_260E00D74()
{
}

uint64_t sub_260E00D98()
{
  return KeyboardEmojiGenerator.GenerationTask.description.getter();
}

uint64_t sub_260E00DBC()
{
  if (*(unsigned char *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration22KeyboardEmojiGenerator14GenerationTask__generationOptions
                + 60) != 1)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7690);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_260FE7080;
  *(void *)(result + 56) = &type metadata for GeneratedImageFaceDetectionPolicyEvaluator;
  *(void *)(result + 64) = &off_270D1B550;
  return result;
}

unint64_t sub_260E00E30(void *a1)
{
  a1[1] = sub_260E00E68();
  a1[2] = sub_260E00EBC();
  unint64_t result = sub_260E00F10();
  a1[3] = result;
  return result;
}

unint64_t sub_260E00E68()
{
  unint64_t result = qword_26A8E7638;
  if (!qword_26A8E7638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7638);
  }
  return result;
}

unint64_t sub_260E00EBC()
{
  unint64_t result = qword_26A8E7640;
  if (!qword_26A8E7640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7640);
  }
  return result;
}

unint64_t sub_260E00F10()
{
  unint64_t result = qword_26A8E7648;
  if (!qword_26A8E7648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7648);
  }
  return result;
}

uint64_t sub_260E00F68()
{
  return sub_260E03100((unint64_t *)&qword_26A8E67C8, MEMORY[0x270FA96C8]);
}

uint64_t sub_260E00F98()
{
  return type metadata accessor for KeyboardEmojiGenerator.GenerationTask();
}

uint64_t type metadata accessor for KeyboardEmojiGenerator.GenerationTask()
{
  uint64_t result = qword_26A8E7650;
  if (!qword_26A8E7650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_260E00FEC()
{
  uint64_t result = type metadata accessor for GenerationState();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for KeyboardEmojiGenerator.GenerationTask(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for KeyboardEmojiGenerator.GenerationTask);
}

void *_s14GenerationTaskC5ErrorOwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s14GenerationTaskC5ErrorOwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s14GenerationTaskC5ErrorOwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.GenerationTask.Error()
{
  return &type metadata for KeyboardEmojiGenerator.GenerationTask.Error;
}

ValueMetadata *type metadata accessor for KeyboardEmojiGenerator.GenerationTask.Progress()
{
  return &type metadata for KeyboardEmojiGenerator.GenerationTask.Progress;
}

ValueMetadata *_s14GenerationTaskC5ErrorO10CodingKeysOMa()
{
  return &_s14GenerationTaskC5ErrorO10CodingKeysON;
}

unsigned char *_s14GenerationTaskC5ErrorO10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x260E01264);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s14GenerationTaskC5ErrorO29UnexpectedConditionCodingKeysOMa()
{
  return &_s14GenerationTaskC5ErrorO29UnexpectedConditionCodingKeysON;
}

unint64_t sub_260E012A0()
{
  unint64_t result = qword_26A8E7660;
  if (!qword_26A8E7660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7660);
  }
  return result;
}

unint64_t sub_260E012F8()
{
  unint64_t result = qword_26A8E7668;
  if (!qword_26A8E7668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7668);
  }
  return result;
}

unint64_t sub_260E01350()
{
  unint64_t result = qword_26A8E7670;
  if (!qword_26A8E7670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7670);
  }
  return result;
}

unint64_t sub_260E013A8()
{
  unint64_t result = qword_26A8E7678;
  if (!qword_26A8E7678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7678);
  }
  return result;
}

unint64_t sub_260E01400()
{
  unint64_t result = qword_26A8E7680;
  if (!qword_26A8E7680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7680);
  }
  return result;
}

unint64_t sub_260E01458()
{
  unint64_t result = qword_26A8E7688;
  if (!qword_26A8E7688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E7688);
  }
  return result;
}

uint64_t sub_260E014AC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for GeneratedImage();
  uint64_t v157 = *(void *)(v4 - 8);
  uint64_t v158 = v4;
  uint64_t v6 = MEMORY[0x270FA5388](v4, v5);
  uint64_t v155 = (uint64_t)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6, v8);
  uint64_t v164 = (uint64_t)&v145 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9, v11);
  uint64_t v14 = (char *)&v145 - v13;
  uint64_t v16 = MEMORY[0x270FA5388](v12, v15);
  uint64_t v165 = (uint64_t)&v145 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16, v18);
  uint64_t v21 = (char *)&v145 - v20;
  uint64_t v23 = MEMORY[0x270FA5388](v19, v22);
  uint64_t v25 = (char *)&v145 - v24;
  uint64_t v27 = MEMORY[0x270FA5388](v23, v26);
  uint64_t v150 = (uint64_t)&v145 - v28;
  MEMORY[0x270FA5388](v27, v29);
  uint64_t v149 = (uint64_t)&v145 - v30;
  uint64_t v166 = a1;
  uint64_t v31 = a1[1];
  uint64_t result = sub_260FE50F0();
  if (result >= v31)
  {
    if (v31 < 0) {
      goto LABEL_194;
    }
    if (v31) {
      return sub_260E02248(0, v31, 1, v166);
    }
    return result;
  }
  if (v31 >= 0) {
    uint64_t v33 = v31;
  }
  else {
    uint64_t v33 = v31 + 1;
  }
  if (v31 < -1)
  {
LABEL_203:
    uint64_t result = sub_260FE4E10();
    __break(1u);
    return result;
  }
  uint64_t v146 = v25;
  uint64_t v147 = result;
  if (v31 < 2)
  {
    unint64_t v156 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80));
    uint64_t v148 = MEMORY[0x263F8EE78];
    if (v31 != 1)
    {
      unint64_t v88 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v38 = (char *)MEMORY[0x263F8EE78];
      goto LABEL_150;
    }
    uint64_t v152 = v21;
  }
  else
  {
    uint64_t v152 = v21;
    uint64_t v34 = v33 >> 1;
    uint64_t v35 = sub_260FE4460();
    *(void *)(v35 + 16) = v34;
    uint64_t v36 = *(unsigned __int8 *)(v157 + 80);
    uint64_t v148 = v35;
    unint64_t v156 = v35 + ((v36 + 32) & ~v36);
  }
  uint64_t v37 = 0;
  uint64_t v38 = (char *)MEMORY[0x263F8EE78];
  uint64_t v163 = v14;
  do
  {
    uint64_t v39 = v37 + 1;
    uint64_t v153 = v37;
    long long v154 = v38;
    if (v37 + 1 >= v31)
    {
      uint64_t v46 = v37 + 1;
    }
    else
    {
      uint64_t v40 = *v166;
      uint64_t v41 = *(void *)(v157 + 72);
      uint64_t v42 = v37;
      uint64_t v43 = v149;
      sub_260E03034(*v166 + v41 * v39, v149, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      uint64_t v162 = v41;
      uint64_t v44 = v40 + v41 * v42;
      uint64_t v45 = v150;
      sub_260E03034(v44, v150, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      LODWORD(v161) = sub_260E8F10C(v43, v45);
      if (v2)
      {
        sub_260E03148(v45, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
        sub_260E03148(v43, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
        goto LABEL_161;
      }
      sub_260E03148(v45, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      sub_260E03148(v43, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      uint64_t v46 = v42 + 2;
      if (v42 + 2 >= v31)
      {
        uint64_t v37 = v42;
      }
      else
      {
        uint64_t v47 = v40;
        uint64_t v159 = v162 * v46;
        uint64_t v160 = v162 * v39;
        uint64_t v48 = (uint64_t)v146;
        while (1)
        {
          uint64_t v49 = v46;
          sub_260E03034(v47 + v159, v48, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
          uint64_t v50 = (uint64_t)v152;
          sub_260E03034(v47 + v160, (uint64_t)v152, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
          int v51 = sub_260E8F10C(v48, v50);
          sub_260E03148(v50, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
          sub_260E03148(v48, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
          if ((v161 ^ v51)) {
            break;
          }
          uint64_t v46 = v49 + 1;
          v47 += v162;
          if (v31 == v49 + 1)
          {
            uint64_t v46 = v31;
            uint64_t v14 = v163;
            goto LABEL_24;
          }
        }
        uint64_t v14 = v163;
        uint64_t v46 = v49;
LABEL_24:
        uint64_t v37 = v153;
      }
      if (v161)
      {
        if (v46 < v37) {
          goto LABEL_198;
        }
        if (v37 < v46)
        {
          uint64_t v145 = 0;
          uint64_t v52 = 0;
          uint64_t v53 = v162 * (v46 - 1);
          uint64_t v54 = v37;
          uint64_t v55 = v46 * v162;
          uint64_t v56 = v54;
          uint64_t v57 = v54 * v162;
          uint64_t v160 = v40;
          do
          {
            if (v56 != v46 + v52 - 1)
            {
              if (!v40) {
                goto LABEL_201;
              }
              uint64_t v161 = v40 + v53;
              sub_260E0309C(v40 + v57, v155);
              if (v57 < v53 || v40 + v57 >= (unint64_t)(v40 + v55))
              {
                uint64_t v58 = v161;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v58 = v161;
                if (v57 != v53) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_260E0309C(v155, v58);
              uint64_t v40 = v160;
            }
            ++v56;
            --v52;
            v53 -= v162;
            v55 -= v162;
            v57 += v162;
          }
          while (v56 < v46 + v52);
          uint64_t v2 = v145;
          uint64_t v14 = v163;
          uint64_t v37 = v153;
        }
      }
    }
    if (v46 >= v31) {
      goto LABEL_97;
    }
    if (__OFSUB__(v46, v37)) {
      goto LABEL_195;
    }
    if (v46 - v37 >= v147) {
      goto LABEL_97;
    }
    if (__OFADD__(v37, v147))
    {
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
      goto LABEL_203;
    }
    if (v37 + v147 >= v31) {
      uint64_t v59 = v31;
    }
    else {
      uint64_t v59 = v37 + v147;
    }
    if (v59 < v37) {
      goto LABEL_197;
    }
    if (v46 == v59) {
      goto LABEL_97;
    }
    uint64_t v145 = v2;
    uint64_t v60 = *(void *)(v157 + 72);
    uint64_t v61 = v60 * (v46 - 1);
    uint64_t v159 = v60;
    uint64_t v62 = v46 * v60;
    uint64_t v151 = v59;
    while (2)
    {
      uint64_t v64 = 0;
      uint64_t v161 = v61;
      uint64_t v162 = v46;
      uint64_t v160 = v62;
      while (1)
      {
        uint64_t v65 = *v166;
        uint64_t v66 = v62 + v64 + *v166;
        uint64_t v67 = v165;
        sub_260E03034(v66, v165, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
        sub_260E03034(v61 + v64 + v65, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
        uint64_t v68 = *(void **)v67;
        if (!*(unsigned char *)(v67 + 8))
        {
          uint64_t v74 = v68;
          int64_t Width = CGImageGetWidth(v74);
          size_t Height = CGImageGetHeight(v74);
LABEL_66:
          uint64_t v73 = Height;

          goto LABEL_67;
        }
        if (*(unsigned char *)(v67 + 8) != 1)
        {
          uint64_t v74 = v68;
          int64_t Width = CVPixelBufferGetWidth(v74);
          size_t Height = CVPixelBufferGetHeight(v74);
          goto LABEL_66;
        }
        objc_msgSend(v68, sel_extent);
        if (v69 <= -9.22337204e18)
        {
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
          goto LABEL_189;
        }
        if (v69 >= 9.22337204e18) {
          goto LABEL_165;
        }
        if ((*(void *)&v69 & 0x7FF0000000000000) == 0x7FF0000000000000
          || (*(void *)&v70 & 0x7FF0000000000000) == 0x7FF0000000000000)
        {
          goto LABEL_167;
        }
        if (v70 <= -9.22337204e18) {
          goto LABEL_169;
        }
        if (v70 >= 9.22337204e18) {
          goto LABEL_171;
        }
        int64_t Width = (uint64_t)v69;
        uint64_t v73 = (uint64_t)v70;
LABEL_67:
        unint64_t v76 = *(void **)v14;
        if (!v14[8])
        {
          uint64_t v82 = v76;
          int64_t v79 = CGImageGetWidth(v82);
          size_t v83 = CGImageGetHeight(v82);
          goto LABEL_81;
        }
        if (v14[8] == 1) {
          break;
        }
        uint64_t v82 = v76;
        int64_t v79 = CVPixelBufferGetWidth(v82);
        size_t v83 = CVPixelBufferGetHeight(v82);
LABEL_81:
        uint64_t v80 = v83;

        if (v80 < v79) {
          goto LABEL_82;
        }
LABEL_76:
        if (v73 >= Width)
        {
          if (v79 >= Width)
          {
            BOOL v81 = Width < v79;
            int64_t Width = v73;
LABEL_88:
            int64_t v79 = v80;
            if (v81) {
              goto LABEL_49;
            }
            goto LABEL_93;
          }
        }
        else if (v79 >= v73)
        {
          BOOL v81 = v73 < v79;
          goto LABEL_88;
        }
LABEL_94:
        uint64_t v14 = v163;
        sub_260E03148((uint64_t)v163, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
        sub_260E03148(v165, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
        uint64_t v84 = *v166;
        if (!*v166) {
          goto LABEL_199;
        }
        uint64_t v62 = v160;
        uint64_t v61 = v161;
        uint64_t v85 = v84 + v161 + v64;
        sub_260E0309C(v84 + v160 + v64, v164);
        swift_arrayInitWithTakeFrontToBack();
        sub_260E0309C(v164, v85);
        v64 -= v159;
        ++v37;
        uint64_t v63 = v162;
        if (v162 == v37) {
          goto LABEL_50;
        }
      }
      objc_msgSend(v76, sel_extent);
      if (v77 <= -9.22337204e18) {
        goto LABEL_166;
      }
      if (v77 >= 9.22337204e18) {
        goto LABEL_168;
      }
      if ((*(void *)&v77 & 0x7FF0000000000000) == 0x7FF0000000000000
        || (*(void *)&v78 & 0x7FF0000000000000) == 0x7FF0000000000000)
      {
        goto LABEL_170;
      }
      if (v78 <= -9.22337204e18) {
        goto LABEL_172;
      }
      if (v78 >= 9.22337204e18) {
        goto LABEL_173;
      }
      int64_t v79 = (uint64_t)v77;
      uint64_t v80 = (uint64_t)v78;
      if ((uint64_t)v78 >= (uint64_t)v77) {
        goto LABEL_76;
      }
LABEL_82:
      if (v73 < Width)
      {
        if (v80 >= v73)
        {
          if (v73 < v80) {
            goto LABEL_49;
          }
          goto LABEL_93;
        }
        goto LABEL_94;
      }
      if (v80 < Width) {
        goto LABEL_94;
      }
      BOOL v81 = Width < v80;
      int64_t Width = v73;
      if (v81) {
        goto LABEL_49;
      }
LABEL_93:
      if (v79 < Width) {
        goto LABEL_94;
      }
LABEL_49:
      uint64_t v14 = v163;
      sub_260E03148((uint64_t)v163, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      sub_260E03148(v165, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      uint64_t v61 = v161;
      uint64_t v63 = v162;
      uint64_t v62 = v160;
LABEL_50:
      uint64_t v46 = v63 + 1;
      v61 += v159;
      v62 += v159;
      uint64_t v37 = v153;
      if (v46 != v151) {
        continue;
      }
      break;
    }
    uint64_t v46 = v151;
    uint64_t v2 = v145;
LABEL_97:
    if (v46 < v37) {
      goto LABEL_193;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v38 = v154;
    }
    else {
      uint64_t v38 = sub_260DECCD0(0, *((void *)v154 + 2) + 1, 1, v154);
    }
    unint64_t v87 = *((void *)v38 + 2);
    unint64_t v86 = *((void *)v38 + 3);
    unint64_t v88 = v87 + 1;
    uint64_t v162 = v46;
    if (v87 >= v86 >> 1) {
      uint64_t v38 = sub_260DECCD0((char *)(v86 > 1), v87 + 1, 1, v38);
    }
    *((void *)v38 + 2) = v88;
    long long v89 = v38 + 32;
    id v90 = &v38[16 * v87 + 32];
    uint64_t v91 = v162;
    *(void *)id v90 = v37;
    *((void *)v90 + 1) = v91;
    if (v87)
    {
      while (1)
      {
        unint64_t v92 = v88 - 1;
        if (v88 >= 4)
        {
          uint64_t v97 = &v89[16 * v88];
          uint64_t v98 = *((void *)v97 - 8);
          uint64_t v99 = *((void *)v97 - 7);
          BOOL v103 = __OFSUB__(v99, v98);
          uint64_t v100 = v99 - v98;
          if (v103) {
            goto LABEL_178;
          }
          uint64_t v102 = *((void *)v97 - 6);
          uint64_t v101 = *((void *)v97 - 5);
          BOOL v103 = __OFSUB__(v101, v102);
          uint64_t v95 = v101 - v102;
          char v96 = v103;
          if (v103) {
            goto LABEL_179;
          }
          unint64_t v104 = v88 - 2;
          uint64_t v105 = &v89[16 * v88 - 32];
          uint64_t v107 = *(void *)v105;
          uint64_t v106 = *((void *)v105 + 1);
          BOOL v103 = __OFSUB__(v106, v107);
          uint64_t v108 = v106 - v107;
          if (v103) {
            goto LABEL_181;
          }
          BOOL v103 = __OFADD__(v95, v108);
          uint64_t v109 = v95 + v108;
          if (v103) {
            goto LABEL_184;
          }
          if (v109 >= v100)
          {
            uint64_t v127 = &v89[16 * v92];
            uint64_t v129 = *(void *)v127;
            uint64_t v128 = *((void *)v127 + 1);
            BOOL v103 = __OFSUB__(v128, v129);
            uint64_t v130 = v128 - v129;
            if (v103) {
              goto LABEL_188;
            }
            BOOL v120 = v95 < v130;
            goto LABEL_134;
          }
        }
        else
        {
          if (v88 != 3)
          {
            uint64_t v121 = *((void *)v38 + 4);
            uint64_t v122 = *((void *)v38 + 5);
            BOOL v103 = __OFSUB__(v122, v121);
            uint64_t v114 = v122 - v121;
            char v115 = v103;
            goto LABEL_128;
          }
          uint64_t v94 = *((void *)v38 + 4);
          uint64_t v93 = *((void *)v38 + 5);
          BOOL v103 = __OFSUB__(v93, v94);
          uint64_t v95 = v93 - v94;
          char v96 = v103;
        }
        if (v96) {
          goto LABEL_180;
        }
        unint64_t v104 = v88 - 2;
        uint64_t v110 = &v89[16 * v88 - 32];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        BOOL v113 = __OFSUB__(v111, v112);
        uint64_t v114 = v111 - v112;
        char v115 = v113;
        if (v113) {
          goto LABEL_183;
        }
        BOOL v116 = &v89[16 * v92];
        uint64_t v118 = *(void *)v116;
        uint64_t v117 = *((void *)v116 + 1);
        BOOL v103 = __OFSUB__(v117, v118);
        uint64_t v119 = v117 - v118;
        if (v103) {
          goto LABEL_186;
        }
        if (__OFADD__(v114, v119)) {
          goto LABEL_187;
        }
        if (v114 + v119 >= v95)
        {
          BOOL v120 = v95 < v119;
LABEL_134:
          if (v120) {
            unint64_t v92 = v104;
          }
          goto LABEL_136;
        }
LABEL_128:
        if (v115) {
          goto LABEL_182;
        }
        BOOL v123 = &v89[16 * v92];
        uint64_t v125 = *(void *)v123;
        uint64_t v124 = *((void *)v123 + 1);
        BOOL v103 = __OFSUB__(v124, v125);
        uint64_t v126 = v124 - v125;
        if (v103) {
          goto LABEL_185;
        }
        if (v126 < v114) {
          goto LABEL_145;
        }
LABEL_136:
        unint64_t v131 = v92 - 1;
        if (v92 - 1 >= v88) {
          goto LABEL_174;
        }
        if (!*v166) {
          goto LABEL_200;
        }
        uint64_t v132 = v38;
        uint64_t v133 = &v89[16 * v131];
        uint64_t v134 = *(void *)v133;
        uint64_t v135 = &v89[16 * v92];
        uint64_t v136 = *((void *)v135 + 1);
        sub_260E024E4(*v166 + *(void *)(v157 + 72) * *(void *)v133, *v166 + *(void *)(v157 + 72) * *(void *)v135, *v166 + *(void *)(v157 + 72) * v136, v156);
        if (v2) {
          goto LABEL_161;
        }
        if (v136 < v134) {
          goto LABEL_175;
        }
        if (v92 > *((void *)v132 + 2)) {
          goto LABEL_176;
        }
        *(void *)uint64_t v133 = v134;
        *(void *)&v89[16 * v131 + 8] = v136;
        unint64_t v137 = *((void *)v132 + 2);
        if (v92 >= v137) {
          goto LABEL_177;
        }
        unint64_t v88 = v137 - 1;
        memmove(&v89[16 * v92], v135 + 16, 16 * (v137 - 1 - v92));
        uint64_t v38 = v132;
        *((void *)v132 + 2) = v137 - 1;
        uint64_t v14 = v163;
        if (v137 <= 2) {
          goto LABEL_145;
        }
      }
    }
    unint64_t v88 = 1;
LABEL_145:
    uint64_t v31 = v166[1];
    uint64_t v37 = v162;
  }
  while (v162 < v31);
LABEL_150:
  if (v88 >= 2)
  {
    uint64_t v138 = *v166;
    while (1)
    {
      unint64_t v139 = v88 - 2;
      if (v88 < 2) {
        break;
      }
      if (!v138) {
        goto LABEL_202;
      }
      uint64_t v140 = v38;
      uint64_t v141 = *(void *)&v38[16 * v139 + 32];
      uint64_t v142 = *(void *)&v38[16 * v88 + 24];
      sub_260E024E4(v138 + *(void *)(v157 + 72) * v141, v138 + *(void *)(v157 + 72) * *(void *)&v38[16 * v88 + 16], v138 + *(void *)(v157 + 72) * v142, v156);
      if (v2) {
        goto LABEL_161;
      }
      if (v142 < v141) {
        goto LABEL_190;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v140 = sub_260DED460((uint64_t)v140);
      }
      if (v139 >= *((void *)v140 + 2)) {
        goto LABEL_191;
      }
      uint64_t v143 = &v140[16 * v139 + 32];
      *(void *)uint64_t v143 = v141;
      *((void *)v143 + 1) = v142;
      unint64_t v144 = *((void *)v140 + 2);
      if (v88 > v144) {
        goto LABEL_192;
      }
      memmove(&v140[16 * v88 + 16], &v140[16 * v88 + 32], 16 * (v144 - v88));
      uint64_t v38 = v140;
      *((void *)v140 + 2) = v144 - 1;
      unint64_t v88 = v144 - 1;
      if (v144 <= 2) {
        goto LABEL_161;
      }
    }
LABEL_189:
    __break(1u);
LABEL_190:
    __break(1u);
LABEL_191:
    __break(1u);
LABEL_192:
    __break(1u);
LABEL_193:
    __break(1u);
LABEL_194:
    __break(1u);
LABEL_195:
    __break(1u);
    goto LABEL_196;
  }
LABEL_161:
  swift_bridgeObjectRelease();
  *(void *)(v148 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_260E02248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v40 = a4;
  uint64_t v32 = type metadata accessor for GeneratedImage();
  uint64_t v8 = MEMORY[0x270FA5388](v32, v7);
  uint64_t v39 = (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8, v10);
  uint64_t v37 = (uint64_t)&v29 - v12;
  uint64_t result = MEMORY[0x270FA5388](v11, v13);
  uint64_t v36 = (uint64_t)&v29 - v16;
  uint64_t v31 = a2;
  if (a3 != a2)
  {
    uint64_t v17 = *(void *)(v15 + 72);
    uint64_t v18 = v17 * (a3 - 1);
    uint64_t v33 = v17;
    uint64_t v19 = v17 * a3;
    uint64_t v30 = a1;
LABEL_4:
    uint64_t v20 = 0;
    uint64_t v34 = a3;
    uint64_t v35 = v19;
    while (1)
    {
      uint64_t v38 = a1;
      uint64_t v22 = *v40;
      uint64_t v23 = v36;
      sub_260E03034(v19 + v20 + *v40, v36, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      uint64_t v24 = v37;
      sub_260E03034(v18 + v20 + v22, v37, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      uint64_t v25 = v41;
      char v26 = sub_260E8F10C(v23, v24);
      sub_260E03148(v24, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      uint64_t result = sub_260E03148(v23, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      uint64_t v41 = v25;
      if (v25) {
        break;
      }
      if ((v26 & 1) == 0)
      {
        uint64_t v21 = v34;
        uint64_t v19 = v35;
LABEL_11:
        a3 = v21 + 1;
        v18 += v33;
        v19 += v33;
        a1 = v30;
        if (a3 != v31) {
          goto LABEL_4;
        }
        return result;
      }
      uint64_t v27 = *v40;
      uint64_t v19 = v35;
      if (!*v40)
      {
        __break(1u);
        return result;
      }
      uint64_t v28 = v27 + v18 + v20;
      sub_260E0309C(v27 + v35 + v20, v39);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_260E0309C(v39, v28);
      uint64_t v21 = v34;
      v20 -= v33;
      a1 = v38 + 1;
      if (v34 == v38 + 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_260E024E4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v53 = type metadata accessor for GeneratedImage();
  uint64_t v9 = MEMORY[0x270FA5388](v53, v8);
  uint64_t v11 = MEMORY[0x270FA5388](v9, v10);
  uint64_t v13 = (char *)&v49 - v12;
  uint64_t v15 = MEMORY[0x270FA5388](v11, v14);
  uint64_t v17 = (char *)&v49 - v16;
  MEMORY[0x270FA5388](v15, v18);
  uint64_t v21 = (char *)&v49 - v20;
  uint64_t v23 = *(void *)(v22 + 72);
  if (!v23)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (a2 - a1 == 0x8000000000000000 && v23 == -1) {
    goto LABEL_66;
  }
  int64_t v24 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v23 == -1) {
    goto LABEL_67;
  }
  uint64_t v25 = (uint64_t)(a2 - a1) / v23;
  unint64_t v57 = a1;
  unint64_t v56 = a4;
  uint64_t v26 = v24 / v23;
  if (v25 >= v24 / v23)
  {
    if ((v26 & 0x8000000000000000) == 0)
    {
      uint64_t v28 = v26 * v23;
      uint64_t v21 = v13;
      uint64_t v52 = v19;
      if (a4 < a2 || a2 + v28 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v38 = a4 + v28;
      unint64_t v55 = a4 + v28;
      unint64_t v57 = a2;
      if (v28 < 1 || a1 >= a2) {
        goto LABEL_64;
      }
      uint64_t v40 = -v23;
      unint64_t v50 = a4;
      unint64_t v51 = a1;
      uint64_t v17 = v52;
      while (1)
      {
        sub_260E03034(v38 + v40, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
        unint64_t v41 = a2 + v40;
        sub_260E03034(a2 + v40, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
        uint64_t v42 = v54;
        char v43 = sub_260E8F10C((uint64_t)v21, (uint64_t)v17);
        uint64_t v54 = v42;
        if (v42) {
          goto LABEL_63;
        }
        char v44 = v43;
        unint64_t v45 = a3 + v40;
        sub_260E03148((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
        sub_260E03148((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
        if (v44)
        {
          if (a3 < a2 || v45 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v46 = v51;
          }
          else
          {
            unint64_t v46 = v51;
            if (a3 != a2) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          v57 += v40;
        }
        else
        {
          unint64_t v47 = v55;
          v55 += v40;
          if (a3 < v47 || v45 >= v47)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v41 = a2;
            unint64_t v46 = v51;
          }
          else
          {
            unint64_t v46 = v51;
            if (a3 != v47) {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v41 = a2;
          }
        }
        unint64_t v38 = v55;
        if (v55 > v50)
        {
          a2 = v41;
          a3 += v40;
          if (v41 > v46) {
            continue;
          }
        }
        goto LABEL_64;
      }
    }
  }
  else if ((v25 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = v25 * v23;
    if (a4 < a1 || a1 + v27 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v29 = a4 + v27;
    unint64_t v55 = a4 + v27;
    BOOL v30 = v27 < 1 || a2 >= a3;
    if (v30) {
      goto LABEL_64;
    }
    while (1)
    {
      sub_260E03034(a2, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      sub_260E03034(a4, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      uint64_t v31 = v54;
      char v32 = sub_260E8F10C((uint64_t)v21, (uint64_t)v17);
      uint64_t v54 = v31;
      if (v31) {
        break;
      }
      char v33 = v32;
      unint64_t v34 = a3;
      sub_260E03148((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      sub_260E03148((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
      unint64_t v35 = v57;
      if (v33)
      {
        unint64_t v36 = a2 + v23;
        if (v57 < a2 || v57 >= v36)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v57 == a2)
        {
          unint64_t v35 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        unint64_t v37 = v56 + v23;
        if (v57 < v56 || v57 >= v37)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v57 != v56)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v56 = v37;
        unint64_t v36 = a2;
      }
      unint64_t v57 = v35 + v23;
      a4 = v56;
      if (v56 < v29)
      {
        a2 = v36;
        BOOL v30 = v36 >= v34;
        a3 = v34;
        if (!v30) {
          continue;
        }
      }
      goto LABEL_64;
    }
LABEL_63:
    sub_260E03148((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
    sub_260E03148((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for GeneratedImage);
LABEL_64:
    sub_260DED18C(&v57, &v56, (uint64_t *)&v55);
    return 1;
  }
LABEL_68:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

void *sub_260E02A74(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v7 = *(void *)(type metadata accessor for GeneratedImage() - 8);
  uint64_t v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v16 = *(void *)(v7 + 72);
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  int v19 = a3 & 1;
  do
  {
    sub_260DF0978(v8, v19, &v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
    uint64_t v11 = v18;
    if (v18)
    {
      char v12 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_260DB190C(0, v9[2] + 1, 1, v9);
      }
      unint64_t v14 = v9[2];
      unint64_t v13 = v9[3];
      if (v14 >= v13 >> 1) {
        uint64_t v9 = sub_260DB190C((void *)(v13 > 1), v14 + 1, 1, v9);
      }
      v9[2] = v14 + 1;
      uint64_t v10 = &v9[2 * v14];
      *((unsigned char *)v10 + 32) = v12;
      v10[5] = v11;
    }
    v8 += v16;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_260E02C24(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000260FFCF80)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_260FE5150();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_260E02CAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
      goto LABEL_3;
    case 6:
      swift_bridgeObjectRetain();
LABEL_3:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260E02D4C(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_260DACD28;
  return sub_260DFB940(a1, v12, v4, v5, v6, v7, v8, v9);
}

void sub_260E02E50()
{
  sub_260E00320(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_260E02E58()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_260E02E98(uint64_t a1, uint64_t a2, char a3)
{
  return sub_260DFB85C(a1, a2, a3 & 1, *(void (**)(uint64_t, char *))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_260E02EA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_260E02EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenerationRecipe(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_260E02F60(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_260E02F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E76B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_260E02FE0(uint64_t a1)
{
  return a1;
}

uint64_t sub_260E03034(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_260E0309C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GeneratedImage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_260E03100(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_260E03148(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t ImageStyle.rawValue.getter()
{
  uint64_t result = 0x6F6974616D696E61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x696A6F6D65;
      break;
    case 2:
      uint64_t result = 0x61727473756C6C69;
      break;
    case 3:
      uint64_t result = 0x747241656E696CLL;
      break;
    case 4:
      uint64_t result = 0x686374656B73;
      break;
    default:
      return result;
  }
  return result;
}

void sub_260E03260()
{
  off_26A8E76C8 = &unk_270D16E98;
}

uint64_t static ImageStyle.allCases.getter()
{
  if (qword_26A8E6078 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ImageStyle.allCases.setter(void *a1)
{
  if (qword_26A8E6078 != -1) {
    swift_once();
  }
  swift_beginAccess();
  off_26A8E76C8 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ImageStyle.allCases.modify())()
{
  if (qword_26A8E6078 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t ImageStyle.id.getter()
{
  return 0xD000000000000026;
}

uint64_t ImageStyle.name.getter()
{
  if (qword_26A8E60E0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_260FE2D60();
  swift_bridgeObjectRelease();
  return v0;
}

CGImageRef ImageStyle.representativeImage.getter()
{
  uint64_t v1 = *v0;
  v33[15] = *v0;
  sub_260E03C9C();
  uint64_t v2 = sub_260FE2F90();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2, v5);
  uint64_t v6 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26A8E60E0 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_26A90FB68;
  uint64_t v8 = (void *)sub_260FE4070();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_URLForResource_withExtension_, v8, 0);

  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7588);
  uint64_t v12 = MEMORY[0x270FA5388](v10 - 8, v11);
  uint64_t v15 = &v33[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!v9)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v15, 1, 1, v2);
    goto LABEL_9;
  }
  MEMORY[0x270FA5388](v12, v13);
  sub_260FE2F20();

  uint64_t v16 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32);
  v16(v15, &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v2);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48))(v15, 1, v2) == 1)
  {
LABEL_9:
    sub_260DF7070((uint64_t)v15);
    goto LABEL_10;
  }
  v16(v6, v15, v2);
  CFURLRef v17 = (const __CFURL *)sub_260FE2EF0();
  uint64_t v18 = CGImageSourceCreateWithURL(v17, 0);

  if (v18)
  {
    CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(v18, 0, 0);

    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
    if (ImageAtIndex) {
      return ImageAtIndex;
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
  }
LABEL_10:
  unint64_t v20 = sub_260FE42C0();
  swift_bridgeObjectRelease();
  GenericRGB = CGColorCreateGenericRGB((double)((v20 >> 24) & 0xFFF) * 0.000244140625, (double)((v20 >> 12) & 0xFFF) * 0.000244140625, (double)(v20 & 0xFFF) * 0.000244140625, 1.0);
  CGColorRef CopyWithAlpha = CGColorCreateCopyWithAlpha(GenericRGB, 1.0);

  if (!CopyWithAlpha)
  {
    __break(1u);
    goto LABEL_18;
  }
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00608]), sel_initWithCGColor_, CopyWithAlpha);
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithColor_, v23);
  id v25 = objc_msgSend(v24, sel_imageByCroppingToRect_, 0.0, 0.0, 128.0, 128.0);

  uint64_t v26 = sub_260ED3B9C(v25);
  if (!v26)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    JUMPOUT(0x260E03C74);
  }
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      uint64_t v27 = sub_260FE2D60();
      uint64_t v29 = v28;
      swift_bridgeObjectRelease();
      CFAttributedStringRef v30 = (const __CFAttributedString *)sub_260ED3D04(v27, v29, 0, 0, 0, 1, 4, 0, 0, 1);
      sub_260ED3570(v30, 0x3FE0000000000000, 0x3FE0000000000000, 1);
      swift_bridgeObjectRelease();

      CGImageRef Image = CGBitmapContextCreateImage(*((CGContextRef *)v26 + 4));
      if (!Image) {
        goto LABEL_19;
      }
      CGImageRef ImageAtIndex = Image;
      swift_release();
      break;
    default:
      JUMPOUT(0);
  }
  return ImageAtIndex;
}

uint64_t sub_260E03C9C()
{
  return 0x7974536567616D49;
}

VisualGeneration::ImageStyle_optional __swiftcall ImageStyle.init(id:)(Swift::String id)
{
  object = id._object;
  uint64_t countAndFlagsBits = id._countAndFlagsBits;
  uint64_t v4 = v1;
  if (sub_260FE42B0())
  {
    unint64_t v5 = sub_260FE41F0();
    unint64_t v6 = sub_260E04430(v5, countAndFlagsBits, (unint64_t)object);
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x26122A9E0](v6, v8, v10, v12);
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    v16._uint64_t countAndFlagsBits = v13;
    v16._object = v15;
    result.value = ImageStyle.init(rawValue:)(v16).value;
    char v18 = v19;
  }
  else
  {
    result.value = swift_bridgeObjectRelease();
    char v18 = 5;
  }
  *uint64_t v4 = v18;
  return result;
}

VisualGeneration::ImageStyle_optional __swiftcall ImageStyle.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_260FE4EC0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t sub_260E03F28(unsigned __int8 *a1, char *a2)
{
  return sub_260DDB138(*a1, *a2);
}

uint64_t sub_260E03F34()
{
  return sub_260FE5340();
}

uint64_t sub_260E04030()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260E04114()
{
  return sub_260FE5340();
}

VisualGeneration::ImageStyle_optional sub_260E0420C(Swift::String *a1)
{
  return ImageStyle.init(rawValue:)(*a1);
}

void sub_260E04218(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE90000000000006ELL;
  uint64_t v3 = 0x6F6974616D696E61;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x696A6F6D65;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "illustration");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0x747241656E696CLL;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 4:
      *(void *)a1 = 0x686374656B73;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_260E042D8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ImageStyle.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_260E04300@<X0>(void *a1@<X8>)
{
  if (qword_26A8E6078 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = off_26A8E76C8;
  return swift_bridgeObjectRetain();
}

uint64_t sub_260E04380()
{
  return sub_260FE4370();
}

uint64_t sub_260E043E0()
{
  return sub_260FE4350();
}

unint64_t sub_260E04430(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  unint64_t result = sub_260FE4220();
  if (v6) {
    unint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_260FE4300();
}

unint64_t sub_260E044E4()
{
  unint64_t result = qword_26A8E76D0;
  if (!qword_26A8E76D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E76D0);
  }
  return result;
}

uint64_t sub_260E04538()
{
  return MEMORY[0x263F8D320];
}

unint64_t sub_260E04548()
{
  unint64_t result = qword_26A8E76D8;
  if (!qword_26A8E76D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8E76E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E76D8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ImageStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ImageStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260E04700);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageStyle()
{
  return &type metadata for ImageStyle;
}

unint64_t sub_260E04738()
{
  unint64_t result = qword_26A8E76E8;
  if (!qword_26A8E76E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E76E8);
  }
  return result;
}

uint64_t sub_260E0478C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  return MEMORY[0x270FA2498](sub_260E047B0, 0, 0);
}

uint64_t sub_260E047B0()
{
  uint64_t v39 = v0;
  uint64_t v1 = sub_260FE3110();
  v0[10] = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  v0[11] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[12] = v3;
  uint64_t v36 = v2;
  unint64_t v35 = *(void (**)(void))(v2 + 16);
  v35();
  v38[0] = 0x206B736154;
  v38[1] = 0xE500000000000000;
  sub_260E063D0((unint64_t *)&qword_26A8E67B0);
  sub_260FE5110();
  sub_260FE4250();
  swift_bridgeObjectRelease();
  sub_260FE4250();
  v0[13] = 0x206B736154;
  v0[14] = 0xE500000000000000;
  if (qword_26A8E6068 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_260FE3A10();
  v0[15] = __swift_project_value_buffer(v4, (uint64_t)qword_26A90FA70);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_260FE39F0();
  os_log_type_t v6 = sub_260FE48A0();
  if (os_log_type_enabled(v5, v6))
  {
    BOOL v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = v1;
    uint64_t v8 = swift_slowAlloc();
    v38[0] = v8;
    *(_DWORD *)BOOL v7 = 136446210;
    swift_bridgeObjectRetain();
    v0[5] = sub_260DB2844(0x206B736154, 0xE500000000000000, v38);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v5, v6, "%{public}s assigning prompt guidance sketch", v7, 0xCu);
    swift_arrayDestroy();
    uint64_t v9 = v8;
    uint64_t v1 = v37;
    MEMORY[0x26122CA00](v9, -1, -1);
    MEMORY[0x26122CA00](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v10 = sub_260FE3940();
  v0[16] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v0[17] = v11;
  uint64_t v12 = swift_task_alloc();
  v0[18] = v12;
  if (qword_26A8E6120 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_260FE3990();
  __swift_project_value_buffer(v13, (uint64_t)qword_26A90FBA8);
  sub_260FE3970();
  sub_260FE3910();
  uint64_t v14 = swift_task_alloc();
  ((void (*)(uint64_t, uint64_t, uint64_t))v35)(v14, v3, v1);
  uint64_t v15 = sub_260FE3970();
  os_signpost_type_t v16 = sub_260FE4940();
  if (sub_260FE4A60())
  {
    uint64_t v33 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v33, v12, v10);
    os_signpost_type_t v32 = v16;
    CFURLRef v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    v38[0] = v18;
    *(_DWORD *)CFURLRef v17 = 136446210;
    uint64_t v34 = v10;
    uint64_t v19 = sub_260FE5110();
    v0[4] = sub_260DB2844(v19, v20, v38);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v21(v14, v1);
    os_signpost_id_t v22 = sub_260FE3920();
    _os_signpost_emit_with_name_impl(&dword_260D82000, v15, v32, v22, "promptGuidanceSketchAssignment", "%{public}s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v18, -1, -1);
    MEMORY[0x26122CA00](v17, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v33, v34);
    swift_task_dealloc();
  }
  else
  {

    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v21(v14, v1);
  }
  v0[19] = v21;
  uint64_t v23 = v0[8];
  uint64_t v24 = v0[9];
  uint64_t v25 = v0[7];
  swift_task_dealloc();
  swift_task_alloc();
  (*(void (**)(void))(v11 + 16))();
  sub_260FE39D0();
  swift_allocObject();
  v0[20] = sub_260FE39C0();
  swift_task_dealloc();
  uint64_t v26 = (void *)swift_task_alloc();
  v0[21] = v26;
  id v26[2] = v24;
  v26[3] = v25;
  v26[4] = v23;
  v26[5] = 0x206B736154;
  v26[6] = 0xE500000000000000;
  uint64_t v27 = swift_task_alloc();
  v0[22] = v27;
  *(void *)(v27 + 16) = 0x206B736154;
  *(void *)(v27 + 24) = 0xE500000000000000;
  uint64_t v28 = (void *)swift_task_alloc();
  v0[23] = v28;
  uint64_t v29 = type metadata accessor for DefinitionSession();
  *uint64_t v28 = v0;
  v28[1] = sub_260E04E90;
  uint64_t v30 = v0[6];
  return MEMORY[0x270FA2338](v30, &unk_26A8E7720, v26, sub_260E0679C, v27, 0, 0, v29);
}

uint64_t sub_260E04E90()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_260E050B0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_260E04FC8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260E04FC8()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[19];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[10];
  sub_260E055D4("promptGuidanceSketchAssignment", 30, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v1(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_260E050B0()
{
  uint64_t v29 = v0;
  uint64_t v1 = (void *)v0[24];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v4 = v0[16];
  swift_task_dealloc();
  swift_task_dealloc();
  sub_260E055D4("promptGuidanceSketchAssignment", 30, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  id v5 = v1;
  swift_bridgeObjectRetain();
  id v6 = v1;
  BOOL v7 = sub_260FE39F0();
  os_log_type_t v8 = sub_260FE4890();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (void *)v0[24];
    uint64_t v11 = v0[13];
    unint64_t v10 = v0[14];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = v26;
    *(_DWORD *)uint64_t v12 = 136446466;
    swift_bridgeObjectRetain();
    v0[2] = sub_260DB2844(v11, v10, &v27);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2112;
    id v14 = v9;
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v15;
    sub_260FE4AE0();
    void *v13 = v15;

    _os_log_impl(&dword_260D82000, v7, v8, "%{public}s prompt guidance sketch rejected - %@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FB0);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v26, -1, -1);
    MEMORY[0x26122CA00](v12, -1, -1);
  }
  else
  {
    os_signpost_type_t v16 = (void *)v0[24];
    swift_bridgeObjectRelease_n();
  }
  CFURLRef v17 = (void (*)(uint64_t, uint64_t *))v0[7];
  if (v17)
  {
    uint64_t v18 = (void *)v0[24];
    uint64_t v19 = v0[9];
    uint64_t v27 = (uint64_t)v18;
    char v28 = 64;
    id v20 = v18;
    v17(v19, &v27);
  }
  uint64_t v21 = (void (*)(uint64_t, uint64_t))v0[19];
  uint64_t v22 = v0[12];
  uint64_t v23 = v0[10];
  swift_willThrow();
  v21(v22, v23);
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

id GenerativePlayground.PromptGuidanceSketchAssignmentTask.promptGuidanceSketch.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  char v3 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  return v2;
}

unint64_t GenerativePlayground.PromptGuidanceSketchAssignmentTask.scribbleStrength.getter()
{
  return *(unsigned int *)(v0 + 28) | ((unint64_t)*(unsigned __int8 *)(v0 + 32) << 32);
}

uint64_t GenerativePlayground.PromptGuidanceSketchAssignmentTask.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask_id;
  uint64_t v4 = sub_260FE3110();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t GenerativePlayground.PromptGuidanceSketchAssignmentTask.isCancelled.getter()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller
                 + 24);
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

Swift::Void __swiftcall GenerativePlayground.PromptGuidanceSketchAssignmentTask.cancel()()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller
                 + 24);
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller
                 + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

unint64_t GenerativePlayground.PromptGuidanceSketchAssignmentTask.description.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_260E055D4(char *a1, uint64_t a2, char a3)
{
  if (qword_26A8E6120 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_260FE3990();
  __swift_project_value_buffer(v5, (uint64_t)qword_26A90FBA8);
  id v6 = sub_260FE3970();
  uint64_t v7 = sub_260FE3940();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7, v10);
  sub_260FE39B0();
  int v11 = sub_260FE4930();
  uint64_t result = sub_260FE4A60();
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  int v25 = v11;
  if ((a3 & 1) == 0)
  {
    if (!a1)
    {
      __break(1u);
LABEL_7:

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    }
    goto LABEL_12;
  }
  if ((unint64_t)a1 >> 32)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (a1 >> 11 == 27)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  if (a1 >> 16 > 0x10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  a1 = sub_260E5BF60();
LABEL_12:
  uint64_t v13 = sub_260FE39A0();
  v24[1] = v24;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v15);
  CFURLRef v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_260FE39E0();
  swift_release();
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v17, v13);
  if (MEMORY[0x263F90230] && v18 == *MEMORY[0x263F90230])
  {
    id v20 = "[Error] Interval already ended";
  }
  else
  {
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    id v20 = "";
  }
  MEMORY[0x270FA5388](v18, v19);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v21 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v21 = 0;
  os_signpost_id_t v22 = sub_260FE3920();
  _os_signpost_emit_with_name_impl(&dword_260D82000, v6, (os_signpost_type_t)v25, v22, a1, v20, v21, 2u);
  MEMORY[0x26122CA00](v21, -1, -1);

  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  return ((uint64_t (*)(char *, uint64_t))v23)((char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
}

uint64_t sub_260E0594C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  uint64_t v6[3] = a1;
  v6[4] = a2;
  return MEMORY[0x270FA2498](sub_260E05974, 0, 0);
}

uint64_t sub_260E05974()
{
  uint64_t v59 = v0;
  uint64_t v1 = v0[4];
  uint64_t v2 = (void (*)(void, void))v0[5];
  uint64_t v3 = *(void **)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 24);
  uint64_t v54 = v2;
  if (v2)
  {
    uint64_t v55 = *(void *)(v1 + 16);
    char v5 = v4;
    LOBYTE(v56) = v4;
    id v6 = v3;
    v2(v1, &v55);

    uint64_t v1 = v0[4];
  }
  else
  {
    char v5 = *(unsigned char *)(v1 + 24);
  }
  uint64_t v7 = v0[3];
  sub_260E067A4(v1+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__definitionSession, v7);
  uint64_t v8 = (int *)type metadata accessor for DefinitionSession();
  uint64_t v9 = v7 + v8[14];
  uint64_t v10 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v11 = v9 + v10[17];
  sub_260DC6EDC(*(void *)v11, *(void *)(v11 + 8), *(void *)(v11 + 16), *(void **)(v11 + 24));
  *(void *)(v11 + 32) = 0;
  *(_OWORD *)uint64_t v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  uint64_t v12 = v9 + v10[9];
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  uint64_t v13 = v9 + v10[18];
  sub_260DC6EDC(*(void *)v13, *(void *)(v13 + 8), *(void *)(v13 + 16), *(void **)(v13 + 24));
  *(void *)(v13 + 32) = 0;
  *(_OWORD *)uint64_t v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  uint64_t v14 = v9 + v10[20];
  sub_260DC6EDC(*(void *)v14, *(void *)(v14 + 8), *(void *)(v14 + 16), *(void **)(v14 + 24));
  *(void *)(v14 + 32) = 0;
  *(_OWORD *)uint64_t v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  sub_260DC6EDC(*(void *)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(void **)(v14 + 64));
  *(_OWORD *)(v14 + 65) = 0u;
  *(_OWORD *)(v14 + 56) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  uint64_t v15 = v7 + v8[9];
  sub_260DC6FE4(*(void **)v15, *(void *)(v15 + 8), *(void **)(v15 + 16), *(void *)(v15 + 24), *(void **)(v15 + 32));
  *(_OWORD *)uint64_t v15 = xmmword_260FE7220;
  *(void *)(v15 + 24) = 0;
  *(void *)(v15 + 32) = 0;
  *(void *)(v15 + 16) = 0;
  *(unsigned char *)(v15 + 40) = 0;
  uint64_t v16 = 2;
  if (*(unsigned char *)(v9 + 56)) {
    uint64_t v16 = 3;
  }
  if (*(unsigned char *)(v9 + 62)) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = *(unsigned __int8 *)(v9 + 56);
  }
  uint64_t v18 = *(void *)(v7 + v8[13]);
  if (v17 != *(void *)(v18 + 24))
  {
    uint64_t v19 = *(void **)(v18 + 16);
    *(void *)(v18 + 16) = 0;

    *(void *)(v18 + 24) = v17;
  }
  unint64_t v57 = v3;
  char v58 = v5;
  swift_retain();
  sub_260DF1608((uint64_t)&v57, 5u, 0, &v55);
  char v52 = v5;
  uint64_t v53 = v3;
  swift_release();
  swift_bridgeObjectRelease();
  sub_260EBF598();
  uint64_t v55 = (uint64_t)v3;
  LOBYTE(v56) = v5;
  id v20 = sub_260F447A8(&v55);
  uint64_t v50 = v0[3];
  uint64_t v21 = v20;
  size_t Width = CVPixelBufferGetWidth(v21);
  size_t Height = CVPixelBufferGetHeight(v21);
  OSType PixelFormatType = CVPixelBufferGetPixelFormatType(v21);
  type metadata accessor for ResolvedImage.HiddenBufferData();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_260FE7230;
  sub_260DC6EDC(*(void *)v11, *(void *)(v11 + 8), *(void *)(v11 + 16), *(void **)(v11 + 24));

  *(void *)uint64_t v11 = Width;
  *(void *)(v11 + 8) = Height;
  *(void *)(v11 + 16) = PixelFormatType;
  *(void *)(v11 + 24) = v21;
  *(void *)(v11 + 32) = v23;
  uint64_t v24 = v50 + v8[7];
  int v25 = *(void **)v24;
  LOBYTE(v23) = *(unsigned char *)(v24 + 8);
  id v26 = v53;
  sub_260DC6F1C(v25, v23);
  *(void *)uint64_t v24 = v53;
  *(unsigned char *)(v24 + 8) = v5;
  sub_260EBF598();
  type metadata accessor for HEDEdgeDetector();
  swift_allocObject();
  sub_260F57344();
  uint64_t v55 = (uint64_t)v53;
  LOBYTE(v56) = v5;
  char v28 = (void *)sub_260F5768C((uint64_t)&v55, 1);
  id v51 = v28;
  uint64_t v55 = (uint64_t)v28;
  LOBYTE(v56) = 1;
  uint64_t v29 = sub_260F447D8(&v55);
  size_t v47 = CVPixelBufferGetWidth((CVPixelBufferRef)v29);
  size_t v45 = CVPixelBufferGetHeight((CVPixelBufferRef)v29);
  OSType v30 = CVPixelBufferGetPixelFormatType((CVPixelBufferRef)v29);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_260FE7230;
  sub_260DC6EDC(*(void *)v13, *(void *)(v13 + 8), *(void *)(v13 + 16), *(void **)(v13 + 24));

  *(void *)uint64_t v13 = v47;
  *(void *)(v13 + 8) = v45;
  *(void *)(v13 + 16) = v30;
  *(void *)(v13 + 24) = v29;
  *(void *)(v13 + 32) = v31;
  sub_260EBF598();
  uint64_t v32 = v0[4];
  int v33 = *(_DWORD *)(v32 + 28);
  LOBYTE(v32) = *(unsigned char *)(v32 + 32);
  *(_DWORD *)uint64_t v12 = v33;
  *(unsigned char *)(v12 + 4) = v32;
  if (qword_26A8E6068 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_260FE3A10();
  __swift_project_value_buffer(v34, (uint64_t)qword_26A90FA70);
  swift_bridgeObjectRetain_n();
  unint64_t v35 = sub_260FE39F0();
  os_log_type_t v36 = sub_260FE48A0();
  BOOL v37 = os_log_type_enabled(v35, v36);
  unint64_t v38 = v0[8];
  if (v37)
  {
    uint64_t v48 = v0[7];
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v55 = v40;
    *(_DWORD *)uint64_t v39 = 136446210;
    swift_bridgeObjectRetain();
    v0[2] = sub_260DB2844(v48, v38, &v55);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v35, v36, "%{public}s accepted prompt guidance sketch", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v40, -1, -1);
    MEMORY[0x26122CA00](v39, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (v54)
  {
    unint64_t v41 = (void (*)(uint64_t, uint64_t *))v0[5];
    uint64_t v42 = v0[4];
    uint64_t v55 = (uint64_t)v53;
    LOBYTE(v56) = v52 | 0x80;
    id v43 = v26;
    v41(v42, &v55);
    swift_release();
  }
  else
  {

    swift_release();
  }
  char v44 = (uint64_t (*)(void))v0[1];
  return v44();
}

void sub_260E06050(uint64_t a1, unint64_t a2)
{
  if (qword_26A8E60B8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_260FE3A10();
  __swift_project_value_buffer(v4, (uint64_t)qword_26A90FAF0);
  swift_bridgeObjectRetain_n();
  char v5 = sub_260FE39F0();
  os_log_type_t v6 = sub_260FE48A0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_bridgeObjectRetain();
    sub_260DB2844(a1, a2, &v9);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v5, v6, "%{public}s cancellation requested", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v8, -1, -1);
    MEMORY[0x26122CA00](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t GenerativePlayground.PromptGuidanceSketchAssignmentTask.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask_id;
  uint64_t v2 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_260E06284(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__definitionSession);
  __swift_destroy_boxed_opaque_existential_1Tm(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller);
  return v0;
}

uint64_t sub_260E06284(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DefinitionSession();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t GenerativePlayground.PromptGuidanceSketchAssignmentTask.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask_id;
  uint64_t v2 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_260E06284(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__definitionSession);
  __swift_destroy_boxed_opaque_existential_1Tm(v0+ OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller);
  return swift_deallocClassInstance();
}

uint64_t sub_260E063A8()
{
  return sub_260E063D0((unint64_t *)&qword_26A8E67C8);
}

uint64_t sub_260E063D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_260FE3110();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_260E06414@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask_id;
  uint64_t v4 = sub_260FE3110();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_260E0648C()
{
  uint64_t v1 = (void *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1;
}

uint64_t sub_260E064F0()
{
  uint64_t v1 = (void *)(*v0
                + OBJC_IVAR____TtCC16VisualGeneration20GenerativePlayground34PromptGuidanceSketchAssignmentTask__sendableCanceller);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
}

unint64_t sub_260E06550()
{
  return GenerativePlayground.PromptGuidanceSketchAssignmentTask.description.getter();
}

uint64_t sub_260E06574()
{
  return type metadata accessor for GenerativePlayground.PromptGuidanceSketchAssignmentTask();
}

uint64_t type metadata accessor for GenerativePlayground.PromptGuidanceSketchAssignmentTask()
{
  uint64_t result = qword_26A8E7700;
  if (!qword_26A8E7700) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_260E065C8()
{
  uint64_t result = sub_260FE3110();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DefinitionSession();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for GenerativePlayground.PromptGuidanceSketchAssignmentTask(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for GenerativePlayground.PromptGuidanceSketchAssignmentTask);
}

uint64_t sub_260E066C8(uint64_t a1)
{
  long long v7 = *(_OWORD *)(v1 + 32);
  long long v8 = *(_OWORD *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_260DACD28;
  *(void *)(v5 + 64) = v4;
  *(_OWORD *)(v5 + 32) = v8;
  *(_OWORD *)(v5 + 48) = v7;
  *(void *)(v5 + 24) = a1;
  return MEMORY[0x270FA2498](sub_260E05974, 0, 0);
}

void sub_260E0679C()
{
  sub_260E06050(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_260E067A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DefinitionSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_260E06808@<X0>(uint64_t a1@<X8>)
{
  uint64_t v106 = a1;
  uint64_t v2 = _s15AssembledPromptV12PromptInputsVMa(0);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v102 = (uint64_t)v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for GenerationRecipe(0);
  uint64_t v7 = MEMORY[0x270FA5388](v5, v6);
  uint64_t v101 = (void *)((char *)v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v105 = (uint64_t)v95 - v10;
  uint64_t v109 = type metadata accessor for ResolvedTextPrompt(0);
  uint64_t v11 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109, v12);
  uint64_t v14 = (char *)v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AugmentedPrompt();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v15 - 8, v17);
  uint64_t v99 = (uint64_t)v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18, v20);
  uint64_t v100 = (void *)((char *)v95 - v22);
  MEMORY[0x270FA5388](v21, v23);
  int v25 = (char *)v95 - v24;
  uint64_t v104 = v5;
  uint64_t v26 = *(int *)(v5 + 60);
  uint64_t v107 = v1;
  uint64_t v27 = *(void *)(v1 + v26);
  int64_t v28 = *(void *)(v27 + 16);
  uint64_t v29 = MEMORY[0x263F8EE78];
  if (v28)
  {
    uint64_t v110 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_260DB4778(0, v28, 0);
    uint64_t v30 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v98 = v27;
    uint64_t v31 = v27 + ((v30 + 32) & ~v30);
    uint64_t v32 = *(void *)(v11 + 72);
    uint64_t v29 = v110;
    uint64_t v108 = v32;
    do
    {
      sub_260E1008C(v31, (uint64_t)v14, type metadata accessor for ResolvedTextPrompt);
      sub_260E1008C((uint64_t)&v14[*(int *)(v109 + 20)], (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      sub_260E100F4((uint64_t)v14, type metadata accessor for ResolvedTextPrompt);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_260DB4778(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v32 = v108;
        uint64_t v29 = v110;
      }
      unint64_t v34 = *(void *)(v29 + 16);
      unint64_t v33 = *(void *)(v29 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_260DB4778(v33 > 1, v34 + 1, 1);
        uint64_t v32 = v108;
        uint64_t v29 = v110;
      }
      *(void *)(v29 + 16) = v34 + 1;
      sub_260E13D64((uint64_t)v25, v29+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v34, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      v31 += v32;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
  }
  uint64_t v36 = *(void *)(v107 + 8);
  uint64_t v35 = *(void *)(v107 + 16);
  uint64_t v37 = qword_26A8E6070;
  swift_bridgeObjectRetain();
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v38 = qword_26A90FA88;
  uint64_t v39 = *(void *)(qword_26A90FA88 + 16);
  if (v39)
  {
    uint64_t v40 = swift_bridgeObjectRetain();
    uint64_t v41 = 0;
    while (1)
    {
      if ((*(uint64_t (**)(uint64_t))(*(void *)(v38 + 8 * v41 + 32) + 88))(v40) == v36 && v42 == v35)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_23;
      }
      char v44 = sub_260FE5150();
      uint64_t v40 = swift_bridgeObjectRelease();
      if (v44) {
        break;
      }
      if (v39 == ++v41)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease();
    type metadata accessor for ImageGenerator();
  }
LABEL_23:
  sub_260F4B54C(v29);
  swift_bridgeObjectRelease();
  uint64_t v45 = sub_260FE2BC0();
  uint64_t v46 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45, v47);
  uint64_t v49 = (char *)v95 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260FE2BA0();
  sub_260E140D0(&qword_26A8E7728, MEMORY[0x270FA8488]);
  uint64_t v50 = sub_260FE4730();
  uint64_t v51 = MEMORY[0x263F8EE78];
  if (v50)
  {
    uint64_t v52 = v50;
    uint64_t v112 = MEMORY[0x263F8EE78];
    sub_260DB45C4(0, v50 & ~(v50 >> 63), 0);
    uint64_t v98 = v112;
    uint64_t v53 = sub_260FE2CB0();
    uint64_t v108 = *(void *)(v53 - 8);
    uint64_t v109 = v53;
    MEMORY[0x270FA5388](v53, v54);
    uint64_t v56 = (char *)v95 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t result = sub_260FE4720();
    if (v52 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v58 = v52;
    v95[1] = v95;
    uint64_t v96 = v46;
    uint64_t v97 = v95;
    uint64_t v59 = v98;
    do
    {
      uint64_t v60 = (void (*)(uint64_t *, void))sub_260FE47A0();
      uint64_t v62 = *v61;
      uint64_t v63 = v61[1];
      swift_bridgeObjectRetain();
      v60(&v110, 0);
      uint64_t v112 = v59;
      uint64_t v64 = v45;
      unint64_t v66 = *(void *)(v59 + 16);
      unint64_t v65 = *(void *)(v59 + 24);
      unint64_t v67 = v66 + 1;
      if (v66 >= v65 >> 1)
      {
        uint64_t v98 = v62;
        sub_260DB45C4(v65 > 1, v66 + 1, 1);
        unint64_t v67 = v66 + 1;
        uint64_t v62 = v98;
        uint64_t v59 = v112;
      }
      *(void *)(v59 + 16) = v67;
      uint64_t v68 = v59 + 16 * v66;
      *(void *)(v68 + 32) = v62;
      *(void *)(v68 + 40) = v63;
      sub_260FE4770();
      --v58;
      uint64_t v45 = v64;
    }
    while (v58);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v56, v109);
    uint64_t v51 = v112;
    uint64_t v46 = v96;
  }
  (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v45);
  uint64_t v110 = v51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
  sub_260D90340((unint64_t *)&qword_26A8E66E0, &qword_26A8E66D8);
  uint64_t v109 = sub_260FE3F90();
  uint64_t v70 = v69;
  swift_bridgeObjectRelease();
  uint64_t v71 = v104;
  uint64_t v72 = (uint64_t *)(v107 + *(int *)(v104 + 92));
  uint64_t v74 = *v72;
  uint64_t v73 = v72[1];
  uint64_t v75 = v72[2];
  uint64_t v76 = v72[3];
  uint64_t v77 = qword_26A8E6128;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v77 != -1) {
    swift_once();
  }
  uint64_t v78 = qword_26A90FBE0;
  uint64_t v79 = unk_26A90FBE8;
  if ((v74 != qword_26A90FBD0 || v73 != *(void *)algn_26A90FBD8) && (sub_260FE5150() & 1) == 0) {
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((sub_260E3A8C8(v75, v78) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v81 = v105;
    sub_260E1008C(v107, v105, type metadata accessor for GenerationRecipe);
    goto LABEL_40;
  }
  char v80 = sub_260E3A9E4(v76, v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v81 = v105;
  sub_260E1008C(v107, v105, type metadata accessor for GenerationRecipe);
  if (v80)
  {
    sub_260E100F4(v81, type metadata accessor for GenerationRecipe);
    swift_bridgeObjectRelease();
    uint64_t v82 = v106;
    goto LABEL_49;
  }
LABEL_40:
  uint64_t v83 = *(void *)(v81 + *(int *)(v71 + 92) + 16);
  uint64_t v84 = *(void *)(v83 + 16);
  if (v84)
  {
    uint64_t v108 = v70;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v85 = 0;
    uint64_t v86 = v83 + 40;
    unint64_t v87 = 0xE000000000000000;
    do
    {
      uint64_t v110 = v85;
      unint64_t v111 = v87;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_260FE4250();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v85 = v110;
      unint64_t v87 = v111;
      v86 += 48;
      --v84;
    }
    while (v84);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v81 = v105;
    uint64_t v70 = v108;
  }
  else
  {
    uint64_t v85 = 0;
    unint64_t v87 = 0xE000000000000000;
  }
  uint64_t v82 = v106;
  if (v109 == v85 && v70 == v87)
  {
    swift_bridgeObjectRelease_n();
    sub_260E100F4(v81, type metadata accessor for GenerationRecipe);
  }
  else
  {
    char v88 = sub_260FE5150();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_260E100F4(v81, type metadata accessor for GenerationRecipe);
    if ((v88 & 1) == 0)
    {
      sub_260E10154();
      swift_allocError();
      *uint64_t v94 = 0xD000000000000068;
      v94[1] = 0x8000000260FFD170;
      swift_willThrow();
      return sub_260E100F4(v82, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    }
  }
LABEL_49:
  long long v89 = v101;
  sub_260E1008C(v107, (uint64_t)v101, type metadata accessor for GenerationRecipe);
  uint64_t v90 = v99;
  sub_260E1008C(v82, v99, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  uint64_t v91 = v102;
  sub_260E077C4(v89, v90, v102);
  unint64_t v92 = v100;
  uint64_t v93 = v103;
  sub_260E07A64(v91, v100);
  sub_260E100F4(v91, _s15AssembledPromptV12PromptInputsVMa);
  uint64_t result = sub_260E100F4(v82, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  if (!v93) {
    return sub_260E13D64((uint64_t)v92, v82, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  }
  return result;
}

unint64_t sub_260E07410(void (*a1)(long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v23 = *(void *)(a3 + 16);
  uint64_t v24 = a1;
  if (!v23) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v3 = a3;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  unint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v22 = v3;
  do
  {
    long long v26 = *(_OWORD *)(v3 + 16 * v4 + 32);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DB0);
    int v25 = &v22;
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void *)(v7 + 64);
    MEMORY[0x270FA5388](v6, v9);
    uint64_t v10 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7748);
    MEMORY[0x270FA5388](v11 - 8, v12);
    uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v15 = v27;
    v24(&v26);
    uint64_t v27 = v15;
    if (v15)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6) == 1)
    {
      sub_260D90820((uint64_t)v14, &qword_26A8E7748);
    }
    else
    {
      uint64_t v16 = sub_260DD7C14((uint64_t)v14, (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26A8E6DB0);
      MEMORY[0x270FA5388](v16, v17);
      uint64_t v18 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_260DD7C14((uint64_t)v10, (uint64_t)v18, &qword_26A8E6DB0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v5 = sub_260DB13B4(0, *(void *)(v5 + 16) + 1, 1, v5);
      }
      unint64_t v20 = *(void *)(v5 + 16);
      unint64_t v19 = *(void *)(v5 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v5 = sub_260DB13B4(v19 > 1, v20 + 1, 1, v5);
      }
      *(void *)(v5 + 16) = v20 + 1;
      sub_260DD7C14((uint64_t)v18, v5+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v20, &qword_26A8E6DB0);
    }
    ++v4;
    uint64_t v3 = v22;
  }
  while (v23 != v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_260E076F8(unint64_t *a1)
{
  unint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_260EAF85C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DB0) - 8);
  v6[0] = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v6[1] = v3;
  uint64_t result = sub_260E101A8(v6);
  *a1 = v2;
  return result;
}

uint64_t _s15AssembledPromptV12PromptInputsVMa(uint64_t a1)
{
  return sub_260DD5A3C(a1, (uint64_t *)&unk_26A8E77F8);
}

uint64_t sub_260E077C4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AugmentedPrompt();
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = a2;
  sub_260E1008C(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  uint64_t v10 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v11 = (void *)((char *)a1 + v10[23]);
  uint64_t v12 = v11[1];
  uint64_t v13 = v11[2];
  uint64_t v14 = v11[3];
  uint64_t v15 = a1[8];
  if (*(void *)(v15 + 16)) {
    int v16 = *(unsigned __int8 *)(v15 + 32);
  }
  else {
    int v16 = 5;
  }
  int v39 = v16;
  uint64_t v38 = *v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v37 = sub_260E3B608();
  sub_260E3B410((uint64_t)v41);
  int v35 = v41[1];
  int v36 = v41[0];
  int v34 = v41[2];
  uint64_t v32 = v43;
  uint64_t v33 = v42;
  int v31 = *((unsigned __int8 *)a1 + v10[25]);
  uint64_t v17 = (void *)((char *)a1 + v10[22]);
  if (v17[3])
  {
    uint64_t v18 = v17[7];
    uint64_t v30 = v17[6];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v18 = 0;
  }
  uint64_t v19 = a1[1];
  uint64_t v20 = a1[2];
  BOOL v21 = *(void *)((char *)a1 + v10[18] + 24) != 0;
  swift_bridgeObjectRetain();
  sub_260E3B6CC((uint64_t)v44);
  sub_260E100F4(v40, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  sub_260E100F4((uint64_t)a1, type metadata accessor for GenerationRecipe);
  sub_260E13D64((uint64_t)v9, a3, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  uint64_t v22 = (int *)_s15AssembledPromptV12PromptInputsVMa(0);
  uint64_t v23 = (void *)(a3 + v22[5]);
  *uint64_t v23 = v38;
  v23[1] = v12;
  v23[2] = v13;
  v23[3] = v14;
  *(unsigned char *)(a3 + v22[6]) = v39;
  *(unsigned char *)(a3 + v22[7]) = v37;
  uint64_t v24 = a3 + v22[8];
  *(unsigned char *)uint64_t v24 = v36;
  *(unsigned char *)(v24 + 1) = v35;
  *(unsigned char *)(v24 + 2) = v34;
  uint64_t v25 = v32;
  *(void *)(v24 + 8) = v33;
  *(void *)(v24 + 16) = v25;
  *(unsigned char *)(a3 + v22[9]) = v31;
  long long v26 = (void *)(a3 + v22[10]);
  *long long v26 = v30;
  v26[1] = v18;
  uint64_t v27 = (void *)(a3 + v22[11]);
  *uint64_t v27 = v19;
  v27[1] = v20;
  *(unsigned char *)(a3 + v22[12]) = v21;
  return sub_260DD7C14((uint64_t)v44, a3 + v22[13], &qword_26A8E7738);
}

uint64_t sub_260E07A64@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AugmentedPrompt();
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v85 = &v80[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = MEMORY[0x270FA5388](v6, v8);
  uint64_t v82 = &v80[-v10];
  uint64_t v12 = MEMORY[0x270FA5388](v9, v11);
  uint64_t v83 = &v80[-v13];
  MEMORY[0x270FA5388](v12, v14);
  int v16 = &v80[-v15];
  uint64_t v17 = (int *)_s15AssembledPromptV12PromptInputsVMa(0);
  uint64_t v18 = (uint64_t *)(a1 + v17[5]);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  uint64_t v98 = *(unsigned __int8 *)(a1 + v17[6]);
  uint64_t v21 = v18[2];
  uint64_t v87 = v18[3];
  uint64_t v22 = v17[8];
  unsigned int v95 = *(unsigned __int8 *)(a1 + v17[7]);
  int v88 = *(unsigned __int8 *)(a1 + v22);
  int v89 = *(unsigned __int8 *)(a1 + v22 + 1);
  int v90 = *(unsigned __int8 *)(a1 + v22 + 2);
  uint64_t v23 = *(void *)(a1 + v22 + 16);
  uint64_t v91 = *(unsigned char **)(a1 + v22 + 8);
  uint64_t v92 = v23;
  uint64_t v24 = v17[10];
  int v81 = *(unsigned __int8 *)(a1 + v17[9]);
  uint64_t v25 = *(unsigned char **)(a1 + v24 + 8);
  uint64_t v84 = *(void *)(a1 + v24);
  uint64_t v93 = v25;
  long long v26 = (uint64_t *)(a1 + v17[11]);
  uint64_t v86 = v17;
  uint64_t v27 = a1 + v17[13];
  uint64_t v28 = v26[1];
  uint64_t v97 = *v26;
  sub_260DD7C14(v27, (uint64_t)v107, &qword_26A8E7738);
  sub_260DD7C14((uint64_t)v107, (uint64_t)v108, &qword_26A8E7738);
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  uint64_t v99 = v28;
  if (*((void *)&v108[0] + 1) != 1)
  {
    long long v110 = v108[0];
    long long v111 = v108[1];
    uint64_t v112 = v109;
    sub_260DD7C14((uint64_t)&v111, (uint64_t)v113, &qword_26A8E7740);
    sub_260DD7C14((uint64_t)v113, (uint64_t)&v114, &qword_26A8E7740);
    uint64_t v29 = v114;
    if (v114)
    {
      uint64_t v31 = *(void *)(v114 + 16);
      swift_bridgeObjectRetain();
      if (!v31 || (unint64_t v32 = sub_260DBB2A0(6u), (v33 & 1) == 0))
      {
        uint64_t v29 = 0;
        uint64_t v30 = 0;
        goto LABEL_9;
      }
      int v34 = (uint64_t *)(*(void *)(v29 + 56) + 16 * v32);
      uint64_t v29 = *v34;
      uint64_t v30 = v34[1];
    }
    else
    {
      uint64_t v30 = 0;
    }
  }
  swift_bridgeObjectRetain();
LABEL_9:
  sub_260E1008C(a1, (uint64_t)a2, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  uint64_t v94 = v16;
  if (v98 == 5)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v38 = v20;
    uint64_t v102 = v20;
    uint64_t v103 = (unsigned char *)v19;
    uint64_t v104 = v21;
    uint64_t v39 = v87;
    uint64_t v105 = v87;
    LOBYTE(v100) = v98;
    unsigned int v36 = v95;
    sub_260EDED20((uint64_t)a2, (uint64_t)v16);
    sub_260E100F4((uint64_t)a2, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    sub_260E13D64((uint64_t)v16, (uint64_t)a2, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    if (v36)
    {
      uint64_t v40 = v38;
      uint64_t v41 = v82;
      sub_260E1008C((uint64_t)a2, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      int v42 = unk_270D16E94;
      if ((unk_270D16E94 & ~dword_270D16E90) == 0) {
        int v42 = 0;
      }
      uint64_t v102 = v40;
      uint64_t v103 = (unsigned char *)v19;
      uint64_t v104 = v21;
      uint64_t v105 = v39;
      LODWORD(v100) = v42 | dword_270D16E90;
      unint64_t v43 = sub_260E128FC((uint64_t)v41, (uint64_t)&v102, (int *)&v100);
      char v44 = v83;
      sub_260E1008C((uint64_t)v41, (uint64_t)v83, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      sub_260E0FCC0(v43);
      int v16 = v94;
      swift_bridgeObjectRelease();
      sub_260E100F4((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      sub_260E100F4((uint64_t)a2, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      sub_260E13D64((uint64_t)v44, (uint64_t)a2, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    }
    sub_260E08944((uint64_t)a2, (uint64_t)v16);
    sub_260E100F4((uint64_t)a2, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    sub_260E13D64((uint64_t)v16, (uint64_t)a2, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    uint64_t v45 = v85;
    uint64_t v46 = sub_260E1008C((uint64_t)a2, (uint64_t)v85, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    MEMORY[0x270FA5388](v46, v47);
    v80[-48] = v88;
    v80[-47] = v89;
    v80[-46] = v90;
    uint64_t v48 = v92;
    *(void *)&v80[-40] = v91;
    *(void *)&v80[-32] = v48;
    v80[-24] = v98;
    *(void *)&v80[-16] = a1;
    v80[-8] = v36;
    sub_260E0AE70((uint64_t)v45, (void (*)(uint64_t))sub_260E13D24, (uint64_t)&v80[-64], (uint64_t)v16);
    sub_260E100F4((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    uint64_t v37 = (uint64_t)a2;
  }
  else
  {
    switch(v98)
    {
      case 1:
        swift_bridgeObjectRelease();
        int v16 = v94;
        break;
      default:
        char v35 = sub_260FE5150();
        swift_bridgeObjectRelease();
        int v16 = v94;
        if ((v35 & 1) == 0) {
          goto LABEL_14;
        }
        break;
    }
    LOBYTE(v100) = v88;
    BYTE1(v100) = v89;
    BYTE2(v100) = v90;
    *((void *)&v100 + 1) = v91;
    uint64_t v101 = v92;
    uint64_t v102 = v20;
    uint64_t v103 = (unsigned char *)v19;
    uint64_t v104 = v21;
    uint64_t v105 = v87;
    LOBYTE(v36) = v95;
    sub_260E0860C(a2, v95, (unsigned __int8 *)&v100, &v102, (unint64_t)v107, v29, v30, v81, v16);
    swift_bridgeObjectRelease();
    uint64_t v37 = (uint64_t)a2;
  }
  sub_260E100F4(v37, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  uint64_t v49 = v93;
  sub_260E13D64((uint64_t)v16, (uint64_t)a2, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  if (v49 && (v36 - 1) >= 2u)
  {
    uint64_t v92 = sub_260FE2D00();
    uint64_t v93 = v80;
    uint64_t v50 = *(void *)(v92 - 8);
    uint64_t v52 = MEMORY[0x270FA5388](v92, v51);
    uint64_t v54 = &v80[-((v53 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v91 = v80;
    MEMORY[0x270FA5388](v52, v55);
    unint64_t v57 = &v80[-v56];
    uint64_t v102 = v84;
    uint64_t v103 = v49;
    swift_bridgeObjectRetain();
    sub_260FE4250();
    uint64_t v58 = sub_260FE2D90();
    MEMORY[0x270FA5388](v58 - 8, v59);
    sub_260FE2D80();
    sub_260FE2D10();
    sub_260FE2C20();
    uint64_t v60 = v92;
    (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v57, v92);
    sub_260E100F4((uint64_t)a2, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    (*(void (**)(void *, unsigned char *, uint64_t))(v50 + 32))(a2, v54, v60);
  }
  uint64_t v61 = v99;
  if (v98 == 5) {
    return swift_bridgeObjectRelease();
  }
  if (qword_26A8E6070 != -1) {
    swift_once();
  }
  uint64_t v63 = qword_26A90FA88;
  uint64_t v64 = *(void *)(qword_26A90FA88 + 16);
  if (v64)
  {
    uint64_t v65 = swift_bridgeObjectRetain();
    uint64_t v66 = 0;
    while (1)
    {
      uint64_t v67 = *(void *)(v63 + 8 * v66 + 32);
      uint64_t v68 = (*(uint64_t (**)(uint64_t))(v67 + 88))(v65);
      if (v68 == v97 && v69 == v61)
      {
        uint64_t v74 = a1;
        swift_bridgeObjectRelease();
        uint64_t v75 = swift_bridgeObjectRelease();
        goto LABEL_38;
      }
      char v71 = sub_260FE5150();
      uint64_t v65 = swift_bridgeObjectRelease();
      if (v71) {
        break;
      }
      ++v66;
      uint64_t v61 = v99;
      if (v64 == v66)
      {
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
    }
    uint64_t v74 = a1;
    uint64_t v75 = swift_bridgeObjectRelease();
LABEL_38:
    (*(void (**)(long long *__return_ptr, uint64_t))(v67 + 112))(&v100, v75);
    swift_bridgeObjectRelease();
    sub_260DD7B40(&v100, (uint64_t)&v102);
    uint64_t v76 = v105;
    uint64_t v77 = v106;
    __swift_project_boxed_opaque_existential_1(&v102, v105);
    LOBYTE(v100) = v98;
    uint64_t v78 = *(void (**)(void *, long long *, void, void, uint64_t))(*(void *)(v77 + 8) + 8);
    uint64_t v79 = (uint64_t)v94;
    v78(a2, &v100, *(unsigned __int8 *)(v74 + v86[12]), v95, v76);
    sub_260E100F4((uint64_t)a2, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    sub_260E13D64(v79, (uint64_t)a2, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v102);
  }
  else
  {
LABEL_35:
    sub_260D9055C();
    uint64_t v72 = swift_allocError();
    *(void *)uint64_t v73 = v97;
    *(void *)(v73 + 8) = v61;
    *(unsigned char *)(v73 + 16) = 0;
    uint64_t v96 = v72;
    swift_willThrow();
    return sub_260E100F4((uint64_t)a2, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  }
}

uint64_t sub_260E0860C@<X0>(void *a1@<X0>, unsigned __int8 a2@<W1>, unsigned __int8 *a3@<X2>, uint64_t *a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, void *a9@<X8>)
{
  unint64_t v53 = a5;
  uint64_t v55 = a1;
  uint64_t v16 = type metadata accessor for AugmentedPrompt();
  uint64_t v18 = MEMORY[0x270FA5388](v16 - 8, v17);
  uint64_t v20 = MEMORY[0x270FA5388](v18, v19);
  uint64_t v22 = &v49[-v21];
  uint64_t v24 = MEMORY[0x270FA5388](v20, v23);
  long long v26 = &v49[-v25];
  MEMORY[0x270FA5388](v24, v27);
  uint64_t v30 = &v49[-v29];
  int v31 = a2;
  if (a2)
  {
    uint64_t v54 = a9;
    int v32 = *a3;
    int v33 = a3[1];
    int v34 = a3[2];
    unsigned int v36 = (void *)*((void *)a3 + 1);
    unint64_t v35 = *((void *)a3 + 2);
    uint64_t v38 = *a4;
    uint64_t v37 = a4[1];
    uint64_t v39 = a4[2];
    uint64_t v40 = a4[3];
    if (v31 == 1)
    {
      uint64_t v56 = v38;
      uint64_t v57 = v37;
      uint64_t v58 = v39;
      uint64_t v59 = v40;
      unint64_t v53 = v35;
      uint64_t v41 = v28;
      int v42 = v55;
      uint64_t v55 = v36;
      int v51 = v32;
      int v52 = v34;
      int v50 = v33;
      sub_260EDED20((uint64_t)v42, (uint64_t)v30);
      sub_260E1008C((uint64_t)v30, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      int v43 = unk_270D16E6C;
      if ((unk_270D16E6C & ~dword_270D16E68) == 0) {
        int v43 = 0;
      }
      uint64_t v56 = v38;
      uint64_t v57 = v37;
      uint64_t v58 = v39;
      uint64_t v59 = v40;
      int v60 = v43 | dword_270D16E68;
      unint64_t v44 = sub_260E128FC((uint64_t)v22, (uint64_t)&v56, &v60);
      sub_260E1008C((uint64_t)v22, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      sub_260E0FCC0(v44);
      swift_bridgeObjectRelease();
      sub_260E100F4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      sub_260E100F4((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      sub_260E13D64((uint64_t)v26, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      sub_260E08944((uint64_t)v30, v41);
      sub_260E100F4((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      sub_260E13D64(v41, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      unsigned int v45 = v51 | (v50 << 8) | (v52 << 16);
      uint64_t v46 = v53;
      swift_bridgeObjectRetain();
      sub_260E09DBC((uint64_t)v30, v45, (uint64_t)v55, v46, (uint64_t)v54);
      return sub_260E100F4((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    }
    else
    {
      LOBYTE(v60) = *a3;
      BYTE1(v60) = v33;
      BYTE2(v60) = v34;
      uint64_t v61 = v36;
      unint64_t v62 = v35;
      uint64_t v56 = v38;
      uint64_t v57 = v37;
      uint64_t v58 = v39;
      uint64_t v59 = v40;
      return sub_260E0C5BC(v55, (unsigned __int8 *)&v60, &v56, v53, v54);
    }
  }
  else
  {
    uint64_t v48 = v55;
    if (a8)
    {
      return sub_260E0BE80((uint64_t)v48, a6, a7, (uint64_t)a9);
    }
    else
    {
      return sub_260E1008C((uint64_t)v55, (uint64_t)a9, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    }
  }
}

uint64_t sub_260E08944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_260E1008C(a1, a2, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  uint64_t v3 = sub_260FE2D00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v142 = v6;
  uint64_t v7 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(uint64_t (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v151 = a2;
  uint64_t v141 = v4 + 16;
  uint64_t v140 = v8;
  v8(v7, (char *)a2, v3);
  uint64_t v9 = sub_260FE2C80();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v149 = v12;
  sub_260FE2C90();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v144 = v3;
  uint64_t v143 = v4 + 8;
  unint64_t v139 = v13;
  v13(v7, v3);
  uint64_t v171 = MEMORY[0x263F8EE78];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7788);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v18 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260E140D0(&qword_26A8E77D8, MEMORY[0x270FA8578]);
  uint64_t v161 = (unint64_t *)v9;
  sub_260FE4310();
  uint64_t v19 = sub_260FE2C70();
  uint64_t v20 = *(int *)(v15 + 44);
  unint64_t v156 = v18;
  uint64_t v21 = &v18[v20];
  uint64_t v22 = sub_260FE2C60();
  uint64_t v162 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  uint64_t v154 = v19 - 8;
  unint64_t v155 = v19;
  uint64_t v159 = (void (**)(char *))(v24 + 16);
  uint64_t v148 = (void (**)(char *, uint64_t, unint64_t *))(v10 + 16);
  uint64_t v164 = *(void *)(v24 + 64);
  uint64_t v147 = (void (**)(char *, unint64_t *))(v10 + 8);
  unint64_t v138 = v24 + 56;
  uint64_t v160 = (void (***)(char *, uint64_t, unint64_t *))(v24 + 56);
  uint64_t v157 = (void (**)(char *, uint64_t, uint64_t))(v24 + 32);
  uint64_t v158 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v152 = v24;
  uint64_t v150 = (void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v25 = (uint64_t)v156;
  while (1)
  {
    uint64_t v165 = &v138;
    MEMORY[0x270FA5388](v22, v23);
    uint64_t v163 = (char *)&v138 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7798);
    uint64_t v166 = &v138;
    uint64_t v29 = MEMORY[0x270FA5388](v27 - 8, v28);
    unint64_t v153 = v30;
    CGRect v169 = (char *)&v138 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v168 = &v138;
    unint64_t v31 = v155;
    uint64_t v32 = *(void *)(v155 - 8);
    uint64_t v33 = *(void *)(v32 + 64);
    MEMORY[0x270FA5388](v29, v34);
    unint64_t v35 = (char *)&v138 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v36 = (*(uint64_t (**)(char *, char *, unint64_t))(v32 + 16))(v35, v21, v31);
    CGRect v167 = &v138;
    MEMORY[0x270FA5388](v36, v37);
    sub_260E140D0(&qword_26A8E7790, MEMORY[0x270FA8578]);
    uint64_t v38 = v161;
    sub_260FE4760();
    sub_260E140D0(&qword_26A8E77A0, MEMORY[0x270FA8558]);
    LOBYTE(v33) = sub_260FE3FD0();
    uint64_t v39 = *(void (**)(char *, unint64_t))(v32 + 8);
    v39(v35, v31);
    v39(v35, v31);
    if (v33)
    {
      uint64_t v41 = (uint64_t)v169;
      uint64_t v42 = v162;
      uint64_t v148 = *v160;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v148)(v169, 1, 1, v162);
      goto LABEL_13;
    }
    uint64_t v40 = (uint64_t (*)(void *, void))sub_260FE47A0();
    uint64_t v41 = (uint64_t)v169;
    uint64_t v42 = v162;
    (*v159)(v169);
    uint64_t v43 = v40(v170, 0);
    MEMORY[0x270FA5388](v43, v44);
    uint64_t v46 = (char *)&v138 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*v148)(v46, v25, v38);
    sub_260FE4770();
    (*v147)(v46, v38);
    uint64_t v47 = *v160;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))*v160)(v41, 0, 1, v42);
    if ((*v158)(v41, 1, v42) == 1) {
      break;
    }
    uint64_t v48 = *v157;
    uint64_t v49 = v163;
    (*v157)(v163, v41, v42);
    uint64_t KeyPath = swift_getKeyPath();
    *(&v138 - 2) = MEMORY[0x270FA5388](KeyPath, v51);
    swift_getKeyPath();
    sub_260E13F4C();
    sub_260FE2C40();
    uint64_t v52 = swift_release();
    if (BYTE4(v170[0]) == 1)
    {
      uint64_t v22 = ((uint64_t (*)(char *, uint64_t))*v150)(v49, v42);
    }
    else
    {
      MEMORY[0x270FA5388](v52, v53);
      uint64_t v55 = (char *)&v138 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
      v48(v55, (uint64_t)v49, v42);
      uint64_t v56 = v171;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_260DB4748(0, *(void *)(v56 + 16) + 1, 1);
        uint64_t v56 = v171;
      }
      unint64_t v58 = *(void *)(v56 + 16);
      unint64_t v57 = *(void *)(v56 + 24);
      if (v58 >= v57 >> 1)
      {
        sub_260DB4748(v57 > 1, v58 + 1, 1);
        uint64_t v56 = v171;
      }
      *(void *)(v56 + 16) = v58 + 1;
      uint64_t v22 = ((uint64_t (*)(unint64_t, char *, uint64_t))v48)(v56+ ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80))+ *(void *)(v152 + 72) * v58, v55, v42);
      uint64_t v171 = v56;
    }
  }
  uint64_t v148 = v47;
LABEL_13:
  sub_260D90820(v25, &qword_26A8E7788);
  uint64_t v59 = sub_260D90820(v41, &qword_26A8E7798);
  uint64_t v60 = v171;
  uint64_t v61 = *(char **)(v171 + 16);
  MEMORY[0x270FA5388](v59, v62);
  uint64_t v64 = (char *)&v138 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v61) {
    goto LABEL_28;
  }
  uint64_t v147 = (void (**)(char *, unint64_t *))(v60
                                                          + ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80)));
  unint64_t v138 = v138 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v146 = v60;
  uint64_t v145 = (char *)&v138 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  while ((uint64_t)v61 <= *(void *)(v60 + 16))
  {
    uint64_t v65 = v61 - 1;
    uint64_t v66 = v152;
    (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v64, (char *)v147 + *(void *)(v152 + 72) * (void)v65, v42);
    uint64_t v148 = *(void (***)(char *, uint64_t, unint64_t *))(v66 + 56);
    ((void (*)(char *, void, uint64_t, uint64_t))v148)(v64, 0, 1, v42);
    uint64_t v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v42);
    if (v67 == 1) {
      return swift_release();
    }
    uint64_t v168 = &v138;
    CGRect v169 = v65;
    MEMORY[0x270FA5388](v67, v68);
    uint64_t v70 = (char *)&v138 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*v157)(v70, (uint64_t)v64, v42);
    uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DB0);
    uint64_t v166 = &v138;
    MEMORY[0x270FA5388](v71, v72);
    uint64_t v163 = v73;
    unint64_t v155 = (unint64_t)(v73 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v74 = (char *)&v138 - v155;
    sub_260FE2C50();
    uint64_t v75 = swift_getKeyPath();
    *(&v138 - 2) = MEMORY[0x270FA5388](v75, v76);
    swift_getKeyPath();
    uint64_t v77 = sub_260FE2E10();
    uint64_t v165 = &v138;
    uint64_t v78 = *(void *)(v77 - 8);
    MEMORY[0x270FA5388](v77, v79);
    uint64_t v154 = v80;
    unint64_t v153 = (v80 + 15) & 0xFFFFFFFFFFFFFFF0;
    int v81 = (char *)&v138 - v153;
    uint64_t v82 = sub_260D90340((unint64_t *)&qword_26A8E77B8, &qword_26A8E6DB0);
    CGRect v167 = (unint64_t *)v71;
    uint64_t v161 = (unint64_t *)v82;
    sub_260FE2D40();
    sub_260D90820((uint64_t)v74, &qword_26A8E6DB0);
    uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    MEMORY[0x270FA5388](v83 - 8, v84);
    uint64_t v86 = (char *)&v138 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_260E13EE0();
    sub_260FE2DE0();
    swift_release();
    uint64_t v87 = *(void (**)(char *, uint64_t))(v78 + 8);
    unint64_t v156 = (char *)v77;
    v87(v81, v77);
    uint64_t v88 = sub_260FE3110();
    int v89 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v88 - 8) + 48))(v86, 1, v88);
    uint64_t v90 = sub_260D90820((uint64_t)v86, &qword_26A8E67F8);
    if (v89 == 1)
    {
      MEMORY[0x270FA5388](v90, v91);
      uint64_t v92 = (char *)&v138 - v155;
      uint64_t v149 = v70;
      uint64_t v93 = sub_260FE2C50();
      MEMORY[0x270FA5388](v93, v94);
      unsigned int v95 = (char *)&v138 - v153;
      sub_260FE2D40();
      sub_260D90820((uint64_t)v92, &qword_26A8E6DB0);
      uint64_t v96 = sub_260FE2BC0();
      MEMORY[0x270FA5388](v96, v97);
      sub_260FE2DD0();
      v87(v95, (uint64_t)v156);
      sub_260E140D0((unint64_t *)&qword_26A8E71F0, MEMORY[0x270FA8488]);
      sub_260FE42E0();
      uint64_t v98 = sub_260FE4160();
      uint64_t v100 = v99;
      swift_bridgeObjectRelease();
      v170[0] = v98;
      v170[1] = v100;
      uint64_t v101 = sub_260FE2A90();
      uint64_t v102 = *(void *)(v101 - 8);
      MEMORY[0x270FA5388](v101, v103);
      uint64_t v105 = (char *)&v138 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_260FE2A70();
      sub_260D86D20();
      uint64_t v106 = sub_260FE4B10();
      uint64_t v108 = v107;
      (*(void (**)(char *, uint64_t))(v102 + 8))(v105, v101);
      swift_bridgeObjectRelease();
      if (v106 == 0x6E6F73726570 && v108 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        uint64_t v42 = v162;
        goto LABEL_24;
      }
      char v109 = sub_260FE5150();
      uint64_t v110 = swift_bridgeObjectRelease();
      uint64_t v42 = v162;
      if (v109)
      {
LABEL_24:
        (*v150)(v149, v42);
      }
      else
      {
        MEMORY[0x270FA5388](v110, v111);
        uint64_t v166 = (unint64_t *)((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
        BOOL v113 = (char *)((char *)&v138 - (char *)v166);
        sub_260FE2C50();
        uint64_t v114 = swift_getKeyPath();
        *(&v138 - 2) = MEMORY[0x270FA5388](v114, v115);
        swift_getKeyPath();
        LODWORD(v171) = 0;
        BYTE4(v171) = 1;
        BOOL v116 = (void (*)(void *, void))sub_260FE2D30();
        sub_260E13F4C();
        sub_260FE2DF0();
        v116(v170, 0);
        uint64_t v117 = sub_260D90820((uint64_t)v113, &qword_26A8E6DB0);
        CGRect v167 = &v138;
        uint64_t v118 = v142;
        MEMORY[0x270FA5388](v117, v119);
        sub_260FE2BF0();
        uint64_t v120 = swift_getKeyPath();
        *(&v138 - 2) = MEMORY[0x270FA5388](v120, v121);
        swift_getKeyPath();
        uint64_t v122 = swift_getKeyPath();
        *(&v138 - 2) = MEMORY[0x270FA5388](v122, v123);
        swift_getKeyPath();
        sub_260FE2C40();
        swift_release();
        LODWORD(v171) = v170[0];
        BYTE4(v171) = BYTE4(v170[0]);
        uint64_t v124 = sub_260FE2BE0();
        uint64_t v165 = &v138;
        MEMORY[0x270FA5388](v124, v125);
        uint64_t v126 = (char *)&v138 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v127 = v144;
        uint64_t v128 = v140(v126, v126, v144);
        uint64_t v161 = &v138;
        MEMORY[0x270FA5388](v128, v129);
        uint64_t v130 = (char *)((char *)&v138 - (char *)v166);
        sub_260FE2C50();
        uint64_t v131 = sub_260FE2CB0();
        uint64_t v132 = *(void *)(v131 - 8);
        MEMORY[0x270FA5388](v131, v133);
        uint64_t v135 = (char *)&v138 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v135, v130, v131);
        sub_260D90820((uint64_t)v130, &qword_26A8E6DB0);
        sub_260E140D0((unint64_t *)&qword_26A8E71F8, MEMORY[0x270FA8658]);
        sub_260FE2CE0();
        (*(void (**)(char *, uint64_t))(v132 + 8))(v135, v131);
        uint64_t v136 = v139;
        v139(v126, v127);
        v136(v126, v127);
        uint64_t v42 = v162;
        (*v150)(v149, v162);
      }
      uint64_t v60 = v146;
      goto LABEL_16;
    }
    uint64_t v42 = v162;
    (*v150)(v70, v162);
    uint64_t v60 = v146;
LABEL_16:
    uint64_t v61 = v169;
    uint64_t v64 = v145;
    if (!v169) {
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_28:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v148)(v64, 1, 1, v42);
  return swift_release();
}

uint64_t sub_260E09D3C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W4>, int a6@<W6>, uint64_t a7@<X8>)
{
  __int16 v12 = a2;
  char v13 = BYTE2(a2);
  uint64_t v14 = a3;
  uint64_t v15 = a4;
  unsigned __int8 v11 = a5;
  _s15AssembledPromptV12PromptInputsVMa(0);
  return sub_260E363A0(a1, &v11, a6, a7);
}

uint64_t sub_260E09DBC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v134 = a4;
  uint64_t v128 = a3;
  unsigned int v127 = a2;
  uint64_t v131 = a5;
  uint64_t v6 = type metadata accessor for AugmentedPrompt();
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v126 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8, v10);
  uint64_t v132 = (uint64_t)&v125 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11, v13);
  uint64_t v133 = (uint64_t)&v125 - v15;
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v130 = (char *)&v125 - v17;
  sub_260E1008C(a1, (uint64_t)&v125 - v17, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7788);
  uint64_t v19 = v18 - 8;
  uint64_t v20 = *(void *)(*(void *)(v18 - 8) + 64);
  MEMORY[0x270FA5388](v18, v21);
  unint64_t v22 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v148 = (uint64_t *)((char *)&v125 - v22);
  uint64_t v23 = sub_260FE2C80();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23, v25);
  unint64_t v139 = v26;
  uint64_t v27 = (char *)&v125 - (((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = a1;
  uint64_t v28 = sub_260FE2C90();
  MEMORY[0x270FA5388](v28, v29);
  unint64_t v30 = (char *)&v125 - v22;
  unint64_t v137 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  unint64_t v138 = (uint64_t *)(v24 + 16);
  v137(v30, v27, v23);
  uint64_t v31 = sub_260FE2C70();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31, v33);
  uint64_t v145 = (char *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = v34;
  unint64_t v35 = (char *)((char *)&v125 - v145);
  sub_260E140D0(&qword_26A8E7790, MEMORY[0x270FA8578]);
  sub_260FE4720();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v140 = v24 + 8;
  uint64_t v136 = v36;
  v36(v27, v23);
  uint64_t v37 = &v30[*(int *)(v19 + 44)];
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  uint64_t v144 = v31;
  v38(v37, v35, v31);
  uint64_t v39 = (uint64_t)v148;
  sub_260DD7C14((uint64_t)v30, (uint64_t)v148, &qword_26A8E7788);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7798);
  uint64_t v42 = MEMORY[0x270FA5388](v40 - 8, v41);
  uint64_t v141 = (char *)&v125 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v39 + *(int *)(v19 + 44);
  uint64_t v46 = *(char **)(v32 + 16);
  uint64_t v147 = (char *)(v32 + 16);
  uint64_t v142 = (void (**)(int64_t, uint64_t))(v32 + 8);
  uint64_t v143 = v46;
  for (uint64_t i = v23; ; v23 = i)
  {
    uint64_t v150 = (char *)&v125;
    MEMORY[0x270FA5388](v42, v43);
    uint64_t v47 = v144;
    uint64_t v48 = v145;
    uint64_t v49 = (char *)((char *)&v125 - v145);
    uint64_t v50 = ((uint64_t (*)(int64_t, uint64_t, uint64_t))v143)((char *)&v125 - v145, v45, v144);
    uint64_t v149 = &v125;
    MEMORY[0x270FA5388](v50, v51);
    sub_260FE4760();
    sub_260E140D0(&qword_26A8E77A0, MEMORY[0x270FA8558]);
    char v52 = sub_260FE3FD0();
    uint64_t v53 = *v142;
    (*v142)((char *)&v125 - v48, v47);
    v53((int64_t)v49, v47);
    if (v52) {
      break;
    }
    uint64_t v54 = v39;
    uint64_t v55 = (uint64_t (*)(char *, void))sub_260FE47A0();
    uint64_t v57 = v56;
    uint64_t v58 = sub_260FE2C60();
    uint64_t v59 = *(void *)(v58 - 8);
    uint64_t v60 = v141;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v141, v57, v58);
    uint64_t v61 = v55(&v152, 0);
    MEMORY[0x270FA5388](v61, v62);
    uint64_t v64 = (char *)&v125 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
    v137(v64, (char *)v54, v23);
    sub_260FE4770();
    v136(v64, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v60, 0, 1, v58);
    uint64_t v65 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48))(v60, 1, v58);
    if (v65 == 1) {
      goto LABEL_11;
    }
    uint64_t v150 = (char *)&v125;
    MEMORY[0x270FA5388](v65, v66);
    uint64_t v68 = (char *)&v125 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v68, v60, v58);
    uint64_t KeyPath = swift_getKeyPath();
    *(&v125 - 2) = MEMORY[0x270FA5388](KeyPath, v70);
    swift_getKeyPath();
    uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    MEMORY[0x270FA5388](v71 - 8, v72);
    uint64_t v74 = (char *)&v125 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_260E13EE0();
    sub_260FE2C40();
    swift_release();
    uint64_t v75 = sub_260FE3110();
    int v76 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v75 - 8) + 48))(v74, 1, v75);
    sub_260D90820((uint64_t)v74, &qword_26A8E67F8);
    uint64_t v77 = swift_getKeyPath();
    *(&v125 - 2) = MEMORY[0x270FA5388](v77, v78);
    swift_getKeyPath();
    sub_260E13F4C();
    sub_260FE2C40();
    swift_release();
    if (v155)
    {
      if (v76 != 1) {
        goto LABEL_9;
      }
    }
    else if (v76 != 1 || (v152 & 1) != 0)
    {
LABEL_9:
      char v79 = v127;
      LODWORD(v145) = HIWORD(v127);
      LODWORD(v144) = v127 >> 8;
      uint64_t v142 = (void (**)(int64_t, uint64_t))sub_260FE2D00();
      uint64_t v146 = &v125;
      uint64_t v149 = (uint64_t *)*(v142 - 1);
      MEMORY[0x270FA5388](v142, v80);
      uint64_t v147 = (char *)&v125 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DB0);
      unint64_t v139 = &v125;
      uint64_t v140 = v82;
      uint64_t v83 = *(void *)(*(void *)(v82 - 8) + 64);
      MEMORY[0x270FA5388](v82, v84);
      uint64_t v143 = (char *)((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v85 = (char *)((char *)&v125 - v143);
      sub_260FE2C50();
      uint64_t v86 = sub_260FE2E10();
      unint64_t v138 = &v125;
      MEMORY[0x270FA5388](v86 - 8, v87);
      uint64_t v141 = (char *)sub_260D90340((unint64_t *)&qword_26A8E77B8, &qword_26A8E6DB0);
      sub_260FE2D40();
      sub_260D90820((uint64_t)v85, &qword_26A8E6DB0);
      uint64_t v88 = v147;
      sub_260FE2D50();
      uint64_t v89 = (uint64_t)v126;
      uint64_t v90 = v142;
      ((void (*)(char *, char *, void (**)(int64_t, uint64_t)))v149[2])(v126, v88, v142);
      char v152 = v79;
      char v153 = v144;
      char v154 = (char)v145;
      uint64_t v156 = v128;
      uint64_t v157 = v134;
      unsigned __int8 v151 = 1;
      uint64_t v91 = v132;
      sub_260E363A0(v89, &v151, 1, v132);
      uint64_t v92 = sub_260E100F4(v89, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      uint64_t v145 = (char *)&v125;
      MEMORY[0x270FA5388](v92, v93);
      uint64_t v94 = (char *)((char *)&v125 - v143);
      sub_260FE2C50();
      sub_260E140D0((unint64_t *)&qword_26A8E71F8, MEMORY[0x270FA8658]);
      uint64_t v95 = (uint64_t)v130;
      sub_260FE2C10();
      sub_260D90820((uint64_t)v94, &qword_26A8E6DB0);
      sub_260E100F4(v91, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      ((void (*)(char *, void))v149[1])(v147, v90);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v68, v58);
      sub_260D90820((uint64_t)v148, &qword_26A8E7788);
      sub_260E13D64(v95, v131, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      return swift_bridgeObjectRelease();
    }
    uint64_t v42 = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v68, v58);
    uint64_t v39 = (uint64_t)v148;
  }
  uint64_t v97 = sub_260FE2C60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v141, 1, 1, v97);
  uint64_t v54 = v39;
LABEL_11:
  char v98 = v127;
  unsigned int v99 = HIWORD(v127);
  unsigned int v100 = v127 >> 8;
  sub_260D90820(v54, &qword_26A8E7788);
  uint64_t v101 = sub_260FE2D90();
  MEMORY[0x270FA5388](v101 - 8, v102);
  uint64_t v145 = (char *)(((unint64_t)v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = v103;
  sub_260FE2D80();
  uint64_t v104 = v132;
  sub_260FE2D10();
  char v152 = v98;
  char v153 = v100;
  char v154 = v99;
  uint64_t v156 = v128;
  uint64_t v157 = v134;
  unsigned __int8 v151 = 1;
  sub_260E363A0(v104, &v151, 1, v133);
  sub_260E100F4(v104, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  uint64_t v105 = sub_260FE2BC0();
  uint64_t v149 = &v125;
  uint64_t v106 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105, v107);
  char v109 = (char *)&v125 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260FE2BA0();
  uint64_t v110 = sub_260FE2CB0();
  uint64_t v148 = &v125;
  uint64_t v111 = *(void *)(v110 - 8);
  uint64_t v112 = *(void *)(v111 + 64);
  MEMORY[0x270FA5388](v110, v113);
  unint64_t v114 = (v112 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_260E140D0(&qword_26A8E7728, MEMORY[0x270FA8488]);
  uint64_t v115 = sub_260FE4720();
  uint64_t v147 = (char *)&v125;
  MEMORY[0x270FA5388](v115, v116);
  uint64_t v150 = (char *)v114;
  sub_260FE4760();
  sub_260E140D0(&qword_26A8E7760, MEMORY[0x270FA85F0]);
  LOBYTE(v99) = sub_260FE3FD0();
  uint64_t v117 = *(void (**)(char *, uint64_t))(v111 + 8);
  v117((char *)&v125 - v114, v110);
  v117((char *)&v125 - v114, v110);
  uint64_t v118 = v109;
  uint64_t v119 = v133;
  uint64_t v120 = (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v118, v105);
  if ((v99 & 1) == 0)
  {
    MEMORY[0x270FA5388](v120, v121);
    sub_260FE2D80();
    uint64_t v122 = v132;
    sub_260FE2D10();
    sub_260FE2D00();
    sub_260E140D0((unint64_t *)&qword_26A8E71F8, MEMORY[0x270FA8658]);
    sub_260FE2CD0();
    uint64_t v120 = sub_260E100F4(v122, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  }
  MEMORY[0x270FA5388](v120, v121);
  uint64_t v123 = (char *)((char *)&v125 - v150);
  uint64_t v124 = (uint64_t)v130;
  sub_260FE2BB0();
  sub_260FE2D00();
  sub_260E140D0((unint64_t *)&qword_26A8E71F8, MEMORY[0x270FA8658]);
  sub_260FE2CE0();
  v117(v123, v110);
  sub_260E100F4(v119, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  sub_260E13D64(v124, v131, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  return swift_bridgeObjectRelease();
}

uint64_t sub_260E0AE70@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v125 = a3;
  uint64_t v126 = a2;
  uint64_t v129 = a4;
  uint64_t v5 = type metadata accessor for AugmentedPrompt();
  uint64_t v7 = MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v131 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7, v9);
  uint64_t v124 = (char *)&v123 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10, v12);
  uint64_t v130 = (char *)&v123 - v14;
  MEMORY[0x270FA5388](v13, v15);
  uint64_t v128 = (char *)&v123 - v16;
  sub_260E1008C(a1, (uint64_t)&v123 - v16, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7788);
  uint64_t v18 = v17 - 8;
  uint64_t v19 = *(void *)(*(void *)(v17 - 8) + 64);
  MEMORY[0x270FA5388](v17, v20);
  unint64_t v21 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v145 = (uint64_t *)((char *)&v123 - v21);
  uint64_t v22 = sub_260FE2C80();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22, v24);
  uint64_t v136 = v25;
  uint64_t v26 = (char *)&v123 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = a1;
  uint64_t v27 = sub_260FE2C90();
  MEMORY[0x270FA5388](v27, v28);
  uint64_t v29 = (char *)&v123 - v21;
  uint64_t v134 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  uint64_t v135 = v23 + 16;
  v134((char *)&v123 - v21, v26, v22);
  uint64_t v30 = sub_260FE2C70();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30, v32);
  unint64_t v142 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v143 = v33;
  uint64_t v34 = (char *)&v123 - v142;
  sub_260E140D0(&qword_26A8E7790, MEMORY[0x270FA8578]);
  sub_260FE4720();
  unint64_t v35 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v137 = v23 + 8;
  uint64_t v133 = v35;
  v35(v26, v22);
  uint64_t v36 = &v29[*(int *)(v18 + 44)];
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  unint64_t v141 = v30;
  v37(v36, v34, v30);
  uint64_t v38 = (uint64_t)v145;
  sub_260DD7C14((uint64_t)v29, (uint64_t)v145, &qword_26A8E7788);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7798);
  uint64_t v41 = MEMORY[0x270FA5388](v39 - 8, v40);
  unint64_t v138 = (char *)&v123 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v22;
  uint64_t v45 = v38 + *(int *)(v18 + 44);
  uint64_t v46 = *(uint64_t **)(v31 + 16);
  uint64_t v144 = (uint64_t *)(v31 + 16);
  unint64_t v139 = (void (**)(char *, unint64_t))(v31 + 8);
  uint64_t v140 = v46;
  for (uint64_t i = v45; ; v45 = i)
  {
    uint64_t v147 = (char *)&v123;
    MEMORY[0x270FA5388](v41, v42);
    unint64_t v47 = v141;
    unint64_t v48 = v142;
    uint64_t v49 = (char *)&v123 - v142;
    uint64_t v50 = ((uint64_t (*)(char *, uint64_t, unint64_t))v140)((char *)&v123 - v142, v45, v141);
    uint64_t v146 = (char *)&v123;
    MEMORY[0x270FA5388](v50, v51);
    sub_260FE4760();
    sub_260E140D0(&qword_26A8E77A0, MEMORY[0x270FA8558]);
    char v52 = sub_260FE3FD0();
    uint64_t v53 = *v139;
    (*v139)((char *)&v123 - v48, v47);
    v53(v49, v47);
    if (v52) {
      break;
    }
    uint64_t v54 = v38;
    uint64_t v55 = (uint64_t (*)(int *, void))sub_260FE47A0();
    uint64_t v57 = v56;
    uint64_t v58 = sub_260FE2C60();
    uint64_t v59 = *(void *)(v58 - 8);
    uint64_t v60 = v138;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v138, v57, v58);
    uint64_t v61 = v55(&v148, 0);
    MEMORY[0x270FA5388](v61, v62);
    uint64_t v64 = (char *)&v123 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
    v134(v64, (char *)v54, v44);
    sub_260FE4770();
    v133(v64, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v60, 0, 1, v58);
    uint64_t v65 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48))(v60, 1, v58);
    if (v65 == 1) {
      goto LABEL_11;
    }
    uint64_t v147 = (char *)&v123;
    MEMORY[0x270FA5388](v65, v66);
    uint64_t v68 = (char *)&v123 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v68, v60, v58);
    uint64_t KeyPath = swift_getKeyPath();
    *(&v123 - 2) = MEMORY[0x270FA5388](KeyPath, v70);
    swift_getKeyPath();
    uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E67F8);
    MEMORY[0x270FA5388](v71 - 8, v72);
    uint64_t v74 = (char *)&v123 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_260E13EE0();
    sub_260FE2C40();
    swift_release();
    uint64_t v75 = sub_260FE3110();
    int v76 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v75 - 8) + 48))(v74, 1, v75);
    sub_260D90820((uint64_t)v74, &qword_26A8E67F8);
    uint64_t v77 = swift_getKeyPath();
    *(&v123 - 2) = MEMORY[0x270FA5388](v77, v78);
    swift_getKeyPath();
    sub_260E13F4C();
    sub_260FE2C40();
    swift_release();
    if (v149)
    {
      if (v76 != 1) {
        goto LABEL_9;
      }
    }
    else if (v76 != 1 || (v148 & 1) != 0)
    {
LABEL_9:
      uint64_t v143 = sub_260FE2D00();
      uint64_t v144 = &v123;
      unint64_t v142 = *(void *)(v143 - 8);
      MEMORY[0x270FA5388](v143, v79);
      uint64_t v146 = (char *)&v123 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DB0);
      uint64_t v140 = &v123;
      unint64_t v138 = (char *)v81;
      uint64_t v82 = *(void *)(*(void *)(v81 - 8) + 64);
      MEMORY[0x270FA5388](v81, v83);
      unint64_t v141 = (v82 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v84 = (char *)&v123 - v141;
      sub_260FE2C50();
      uint64_t v85 = sub_260FE2E10();
      MEMORY[0x270FA5388](v85 - 8, v86);
      unint64_t v139 = (void (**)(char *, unint64_t))sub_260D90340((unint64_t *)&qword_26A8E77B8, &qword_26A8E6DB0);
      sub_260FE2D40();
      sub_260D90820((uint64_t)v84, &qword_26A8E6DB0);
      uint64_t v87 = v146;
      sub_260FE2D50();
      unint64_t v88 = v142;
      uint64_t v89 = v143;
      uint64_t v90 = (uint64_t)v124;
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v124, v87, v143);
      uint64_t v91 = (uint64_t)v130;
      v126(v90);
      uint64_t v92 = sub_260E100F4(v90, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      uint64_t v140 = &v123;
      MEMORY[0x270FA5388](v92, v93);
      uint64_t v94 = (char *)&v123 - v141;
      sub_260FE2C50();
      sub_260E140D0((unint64_t *)&qword_26A8E71F8, MEMORY[0x270FA8658]);
      uint64_t v95 = (uint64_t)v128;
      sub_260FE2C10();
      sub_260D90820((uint64_t)v94, &qword_26A8E6DB0);
      sub_260E100F4(v91, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v146, v89);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v68, v58);
      sub_260D90820((uint64_t)v145, &qword_26A8E7788);
      return sub_260E13D64(v95, v129, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    }
    uint64_t v41 = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v68, v58);
    uint64_t v38 = (uint64_t)v145;
  }
  uint64_t v97 = sub_260FE2C60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v138, 1, 1, v97);
  uint64_t v54 = v38;
LABEL_11:
  sub_260D90820(v54, &qword_26A8E7788);
  uint64_t v98 = sub_260FE2D90();
  MEMORY[0x270FA5388](v98 - 8, v99);
  unint64_t v142 = (v100 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v143 = v100;
  sub_260FE2D80();
  uint64_t v101 = (uint64_t)v130;
  sub_260FE2D10();
  v126(v101);
  sub_260E100F4(v101, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  uint64_t v102 = sub_260FE2BC0();
  uint64_t v146 = (char *)&v123;
  uint64_t v103 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102, v104);
  uint64_t v106 = (char *)&v123 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260FE2BA0();
  uint64_t v107 = sub_260FE2CB0();
  uint64_t v145 = &v123;
  uint64_t v108 = *(void *)(v107 - 8);
  uint64_t v109 = *(void *)(v108 + 64);
  MEMORY[0x270FA5388](v107, v110);
  unint64_t v111 = (v109 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_260E140D0(&qword_26A8E7728, MEMORY[0x270FA8488]);
  uint64_t v112 = sub_260FE4720();
  uint64_t v144 = &v123;
  MEMORY[0x270FA5388](v112, v113);
  uint64_t v147 = (char *)v111;
  sub_260FE4760();
  sub_260E140D0(&qword_26A8E7760, MEMORY[0x270FA85F0]);
  char v114 = sub_260FE3FD0();
  uint64_t v115 = *(void (**)(char *, uint64_t))(v108 + 8);
  v115((char *)&v123 - v111, v107);
  v115((char *)&v123 - v111, v107);
  uint64_t v116 = v106;
  uint64_t v117 = (uint64_t)v131;
  uint64_t v118 = (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v116, v102);
  if ((v114 & 1) == 0)
  {
    MEMORY[0x270FA5388](v118, v119);
    sub_260FE2D80();
    uint64_t v120 = (uint64_t)v130;
    sub_260FE2D10();
    sub_260FE2D00();
    sub_260E140D0((unint64_t *)&qword_26A8E71F8, MEMORY[0x270FA8658]);
    sub_260FE2CD0();
    uint64_t v118 = sub_260E100F4(v120, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  }
  MEMORY[0x270FA5388](v118, v119);
  uint64_t v121 = (char *)((char *)&v123 - v147);
  uint64_t v122 = (uint64_t)v128;
  sub_260FE2BB0();
  sub_260FE2D00();
  sub_260E140D0((unint64_t *)&qword_26A8E71F8, MEMORY[0x270FA8658]);
  sub_260FE2CE0();
  v115(v121, v107);
  sub_260E100F4(v117, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  return sub_260E13D64(v122, v129, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
}

uint64_t sub_260E0BE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for AugmentedPrompt();
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8, v9);
  uint64_t v12 = MEMORY[0x270FA5388](v10, v11);
  uint64_t v14 = (char *)&v63 - v13;
  MEMORY[0x270FA5388](v12, v15);
  uint64_t v18 = (char *)&v63 - v16;
  if (!a3) {
    return sub_260E1008C(a1, a4, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  }
  uint64_t v63 = v17;
  uint64_t v64 = a4;
  sub_260E1008C(a1, (uint64_t)&v63 - v16, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  sub_260E1008C((uint64_t)v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  swift_bridgeObjectRetain();
  uint64_t v71 = (char *)sub_260E11470(a2, a3, (uint64_t)v18);
  swift_bridgeObjectRelease();
  uint64_t v19 = unk_270D16D80;
  uint64_t v67 = *(void (**)(char *, uint64_t))aFace;
  uint64_t v20 = sub_260FE2D00();
  uint64_t v69 = &v63;
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v66 = a2;
  uint64_t v74 = v20;
  uint64_t v75 = v21;
  uint64_t v73 = *(void *)(v21 + 64);
  MEMORY[0x270FA5388](v20, v22);
  unint64_t v68 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
  int v76 = v14;
  uint64_t v24 = (char *)&v63 - v68;
  uint64_t v25 = sub_260FE2D90();
  uint64_t v26 = *(void *)(*(void *)(v25 - 8) + 64);
  MEMORY[0x270FA5388](v25 - 8, v27);
  unint64_t v72 = (v26 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v70 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_260FE2D80();
  uint64_t v28 = a3;
  sub_260FE2D10();
  uint64_t v29 = v71;
  sub_260E117D4((uint64_t)v67, v19, (uint64_t)v24, v71, (uint64_t)v76);
  uint64_t v30 = v74;
  uint64_t v67 = *(void (**)(char *, uint64_t))(v75 + 8);
  v75 += 8;
  v67(v24, v74);
  uint64_t v31 = swift_bridgeObjectRelease();
  uint64_t v69 = &v63;
  uint64_t v32 = unk_270D16D90;
  uint64_t v65 = qword_270D16D88;
  uint64_t v34 = MEMORY[0x270FA5388](v31, v33);
  unint64_t v35 = v68;
  MEMORY[0x270FA5388](v34, v36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_260FE2D80();
  uint64_t v37 = v66;
  sub_260FE2D10();
  sub_260E117D4(v65, v32, (uint64_t)&v63 - v35, v29, (uint64_t)v76);
  uint64_t v38 = v67;
  v67((char *)&v63 - v35, v30);
  uint64_t v39 = swift_bridgeObjectRelease();
  uint64_t v69 = &v63;
  uint64_t v40 = unk_270D16DA0;
  uint64_t v65 = qword_270D16D98;
  uint64_t v42 = MEMORY[0x270FA5388](v39, v41);
  uint64_t v73 = v26;
  MEMORY[0x270FA5388](v42, v43);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_260FE2D80();
  uint64_t v44 = v37;
  uint64_t v45 = (uint64_t)v76;
  sub_260FE2D10();
  sub_260E117D4(v65, v40, (uint64_t)&v63 - v35, v71, v45);
  uint64_t v46 = (uint64_t)v70;
  v38((char *)&v63 - v35, v74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (sub_260FE2C30())
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7748);
    MEMORY[0x270FA5388](v47 - 8, v48);
    uint64_t v50 = (char *)&v63 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v77 = v44;
    uint64_t v78 = v28;
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7750);
    MEMORY[0x270FA5388](v51 - 8, v52);
    uint64_t v54 = (char *)&v63 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v55 = sub_260FE3180();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 1, 1, v55);
    sub_260E140D0((unint64_t *)&qword_26A8E71F8, MEMORY[0x270FA8658]);
    sub_260D86D20();
    sub_260FE2E90();
    sub_260D90820((uint64_t)v54, &qword_26A8E7750);
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6DB0);
    int v57 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v50, 1, v56);
    sub_260D90820((uint64_t)v50, &qword_26A8E7748);
    uint64_t v58 = v64;
    if (v57 == 1)
    {
      uint64_t v77 = v44;
      uint64_t v78 = v28;
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_260FE4250();
      MEMORY[0x270FA5388](v59, v60);
      sub_260FE2D80();
      uint64_t v61 = v63;
      sub_260FE2D10();
      sub_260FE2CD0();
      sub_260E100F4(v45, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      uint64_t v45 = v61;
    }
  }
  else
  {
    uint64_t v58 = v64;
  }
  sub_260E100F4(v46, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  sub_260E13D64(v45, v46, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  return sub_260E13D64(v46, v58, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
}