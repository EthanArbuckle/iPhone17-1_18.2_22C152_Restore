uint64_t sub_260F40D94(uint64_t *a1, unsigned char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  *(void *)(v3 + 96) = v2;
  *(void *)(v3 + 104) = v4;
  *(unsigned char *)(v3 + 49) = *((unsigned char *)a1 + 8);
  *(unsigned char *)(v3 + 50) = *a2;
  return MEMORY[0x270FA2498](sub_260F40DC8, 0, 0);
}

uint64_t sub_260F40DC8()
{
  uint64_t v11 = v0;
  char v1 = *(unsigned char *)(v0 + 49);
  uint64_t v9 = *(void *)(v0 + 104);
  char v10 = v1;
  v2 = sub_260F44C7C(&v9);
  *(void *)(v0 + 112) = v2;
  v3 = v2;
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 120) = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E82B8);
  void *v6 = v0;
  v6[1] = sub_260F40F38;
  return MEMORY[0x270FA2360](v0 + 64, 0, 0, 0xD00000000000001FLL, 0x8000000261000640, sub_260F4B1FC, v5, v7);
}

uint64_t sub_260F40F38()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v2 = sub_260F41658;
  }
  else
  {
    swift_task_dealloc();
    v2 = sub_260F41054;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260F41054()
{
  uint64_t v57 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 50);
  uint64_t v2 = *(void *)(v0 + 64);
  *(void *)(v0 + 144) = v2;
  if (v1 == 3)
  {
    if (*(void *)(v2 + 16))
    {
      v8 = *(void **)(v0 + 112);
      swift_bridgeObjectRelease();
      sub_260F46E60();
      swift_allocError();
      *uint64_t v9 = 0xD000000000000029;
      v9[1] = 0x8000000261000660;
      goto LABEL_7;
    }
  }
  else if (v1 == 2)
  {
    uint64_t v3 = *(void *)(v0 + 136);
    uint64_t v4 = *(void **)(v0 + 112);
    uint64_t v55 = (uint64_t)v4;
    char v56 = 2;
    id v5 = v4;
    BOOL v6 = sub_260D8A0EC((uint64_t)&v55, v2, 0, 0);
    if (v3)
    {
      uint64_t v7 = *(void **)(v0 + 112);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_8:
      char v10 = *(uint64_t (**)(void))(v0 + 8);
LABEL_9:
      return v10();
    }
    BOOL v17 = v6;
    uint64_t v18 = *(void *)(v0 + 96);

    uint64_t v53 = type metadata accessor for DefinitionSession();
    uint64_t v19 = v18 + *(int *)(v53 + 56);
    if ((*(unsigned char *)(v19 + 61) & 1) == 0) {
      swift_bridgeObjectRelease();
    }
    uint64_t v20 = *(void *)(v0 + 144);
    char v52 = *(unsigned char *)(v0 + 49);
    uint64_t v50 = *(void *)(v0 + 96);
    v51 = *(void **)(v0 + 104);
    v21 = (__CVBuffer *)*(id *)(v0 + 112);
    size_t Width = CVPixelBufferGetWidth(v21);
    size_t Height = CVPixelBufferGetHeight(v21);
    LODWORD(v21) = CVPixelBufferGetPixelFormatType(v21);
    type metadata accessor for ResolvedImage.HiddenBufferData();
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_260FE7230;
    uint64_t v46 = v21;
    BOOL v54 = v17;
    uint64_t v22 = v19 + *(int *)(type metadata accessor for GenerationRecipe(0) + 88);
    uint64_t v23 = *(void *)v22;
    uint64_t v24 = *(void *)(v22 + 16);
    v44 = *(void **)(v22 + 24);
    uint64_t v45 = *(void *)(v22 + 8);
    swift_bridgeObjectRetain();
    sub_260DC70DC(v23, v45, v24, v44);
    *(void *)uint64_t v22 = Width;
    *(void *)(v22 + 8) = Height;
    *(void *)(v22 + 16) = v46;
    *(void *)(v22 + 24) = v4;
    *(void *)(v22 + 32) = v47;
    *(void *)(v22 + 40) = v20;
    *(void *)(v22 + 48) = 0;
    *(void *)(v22 + 56) = 0;
    *(unsigned char *)(v22 + 64) = v17;
    uint64_t v25 = v50 + *(int *)(v53 + 32);
    v26 = *(void **)v25;
    *(void *)uint64_t v25 = v51;
    char v27 = *(unsigned char *)(v25 + 8);
    *(unsigned char *)(v25 + 8) = v52;
    id v28 = v51;
    sub_260DC6F1C(v26, v27);
    if (qword_26A8E6118 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_260FE3A10();
    __swift_project_value_buffer(v29, (uint64_t)qword_26A90FB90);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v30 = sub_260FE39F0();
    os_log_type_t v31 = sub_260FE48A0();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v33 = *(void *)(v0 + 144);
    if (v32)
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v55 = v35;
      *(_DWORD *)uint64_t v34 = 134218243;
      uint64_t v36 = *(void *)(v33 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 80) = v36;
      sub_260FE4AE0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 88) = sub_260DB2844(7104878, 0xE300000000000000, &v55);
      sub_260FE4AE0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_260D82000, v30, v31, "assigned prompt conditioning image with %ld faces, caption %{private}s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x26122CA00](v35, -1, -1);
      MEMORY[0x26122CA00](v34, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    uint64_t v37 = *(void *)(v0 + 144);
    if (*(void *)(v37 + 16))
    {
      double v38 = *(double *)(v37 + 32);
      double v39 = *(double *)(v37 + 40);
      double v40 = *(double *)(v37 + 48);
      double v41 = *(double *)(v37 + 56);
      swift_bridgeObjectRelease();
      if (v54)
      {
        v8 = *(void **)(v0 + 112);
        if (v40 >= 0.25 && v41 >= 0.25)
        {
          sub_260DF4F90(v8, (uint64_t)&v55, v38, v39, v40, v41);
          if (v55 != 3) {
            sub_260EA3CC4((unsigned __int8 *)&v55, 1);
          }
          goto LABEL_29;
        }
        sub_260F46E60();
        swift_allocError();
        void *v43 = 0;
        v43[1] = 0;
LABEL_7:
        swift_willThrow();

        goto LABEL_8;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_29:
    v42 = *(void **)(v0 + 112);
    sub_260F4462C();

    char v10 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_9;
  }
  char v12 = *(unsigned char *)(v0 + 49);
  uint64_t v13 = *(void *)(v0 + 96);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v15 = *(void *)(v13 + *(int *)(type metadata accessor for DefinitionSession() + 40));
  *(void *)(v0 + 40) = v14;
  *(unsigned char *)(v0 + 48) = v12;
  v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v16;
  void *v16 = v0;
  v16[1] = sub_260F416C0;
  return sub_260D887B4(v0 + 40, 3, v15);
}

uint64_t sub_260F41658()
{
  int v1 = *(void **)(v0 + 112);
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_260F416C0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 160) = a1;
  *(void *)(v3 + 168) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_260F41D74;
  }
  else {
    uint64_t v4 = sub_260F417D4;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_260F417D4()
{
  uint64_t v57 = v0;
  id v1 = objc_msgSend(*(id *)(v0 + 160), sel_caption);
  uint64_t v2 = *(void **)(v0 + 160);
  if (v1)
  {
    uint64_t v3 = v1;
    uint64_t v4 = sub_260FE40A0();
    unint64_t v6 = v5;
  }
  else
  {

    uint64_t v4 = 0;
    unint64_t v6 = 0;
  }
  uint64_t v7 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 144);
  uint64_t v9 = *(void **)(v0 + 112);
  uint64_t v55 = (uint64_t)v9;
  LOBYTE(v56) = 2;
  id v10 = v9;
  BOOL v11 = sub_260D8A0EC((uint64_t)&v55, v8, v4, v6);
  if (v7)
  {
    char v12 = *(void **)(v0 + 112);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_26;
  }
  BOOL v14 = v11;
  uint64_t v15 = *(void *)(v0 + 96);

  uint64_t v52 = type metadata accessor for DefinitionSession();
  uint64_t v16 = v15 + *(int *)(v52 + 56);
  if (*(unsigned char *)(v16 + 61))
  {
    uint64_t v51 = v4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v51 = 0;
    unint64_t v6 = 0;
  }
  uint64_t v17 = *(void *)(v0 + 144);
  char v50 = *(unsigned char *)(v0 + 49);
  uint64_t v48 = *(void *)(v0 + 96);
  v49 = *(void **)(v0 + 104);
  uint64_t v18 = (__CVBuffer *)*(id *)(v0 + 112);
  size_t Width = CVPixelBufferGetWidth(v18);
  size_t Height = CVPixelBufferGetHeight(v18);
  LODWORD(v18) = CVPixelBufferGetPixelFormatType(v18);
  type metadata accessor for ResolvedImage.HiddenBufferData();
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_260FE7230;
  BOOL v54 = v14;
  uint64_t v19 = v16 + *(int *)(type metadata accessor for GenerationRecipe(0) + 88);
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v43 = *(void *)(v19 + 8);
  uint64_t v44 = *(void *)v19;
  v42 = *(void **)(v19 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_260DC70DC(v44, v43, v20, v42);
  *(void *)uint64_t v19 = Width;
  *(void *)(v19 + 8) = Height;
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = v9;
  *(void *)(v19 + 32) = v45;
  *(void *)(v19 + 40) = v17;
  *(void *)(v19 + 48) = v51;
  *(void *)(v19 + 56) = v6;
  *(unsigned char *)(v19 + 64) = v14;
  uint64_t v21 = v48 + *(int *)(v52 + 32);
  uint64_t v22 = *(void **)v21;
  *(void *)uint64_t v21 = v49;
  LOBYTE(v18) = *(unsigned char *)(v21 + 8);
  *(unsigned char *)(v21 + 8) = v50;
  id v23 = v49;
  sub_260DC6F1C(v22, (char)v18);
  if (v6)
  {
    uint64_t v55 = 34;
    unint64_t v56 = 0xE100000000000000;
    sub_260FE4250();
    swift_bridgeObjectRelease();
    sub_260FE4250();
    uint64_t v24 = v55;
    unint64_t v25 = v56;
  }
  else
  {
    unint64_t v25 = 0xE300000000000000;
    uint64_t v24 = 7104878;
  }
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_260FE3A10();
  __swift_project_value_buffer(v26, (uint64_t)qword_26A90FB90);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  char v27 = sub_260FE39F0();
  os_log_type_t v28 = sub_260FE48A0();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 144);
  if (v29)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v55 = v53;
    *(_DWORD *)uint64_t v31 = 134218243;
    uint64_t v32 = *(void *)(v30 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 80) = v32;
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 88) = sub_260DB2844(v24, v25, &v55);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v27, v28, "assigned prompt conditioning image with %ld faces, caption %{private}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v53, -1, -1);
    MEMORY[0x26122CA00](v31, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v33 = *(void *)(v0 + 144);
  if (*(void *)(v33 + 16))
  {
    double v34 = *(double *)(v33 + 32);
    double v35 = *(double *)(v33 + 40);
    double v36 = *(double *)(v33 + 48);
    double v37 = *(double *)(v33 + 56);
    swift_bridgeObjectRelease();
    if (v54)
    {
      double v38 = *(void **)(v0 + 112);
      if (v36 < 0.25 || v37 < 0.25)
      {
        sub_260F46E60();
        swift_allocError();
        *double v41 = 0;
        v41[1] = 0;
        swift_willThrow();

        goto LABEL_6;
      }
      sub_260DF4F90(v38, (uint64_t)&v55, v34, v35, v36, v37);
      if (v55 != 3) {
        sub_260EA3CC4((unsigned __int8 *)&v55, 1);
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  double v39 = *(void **)(v0 + 112);
  sub_260F4462C();

  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
LABEL_26:
  return v13();
}

uint64_t sub_260F41D74()
{
  swift_bridgeObjectRelease();
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  id v1 = (void *)v0[21];
  uint64_t v2 = sub_260FE3A10();
  __swift_project_value_buffer(v2, (uint64_t)qword_26A90FB90);
  id v3 = v1;
  id v4 = v1;
  unint64_t v5 = sub_260FE39F0();
  os_log_type_t v6 = sub_260FE4890();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[21];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    id v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v12;
    sub_260FE4AE0();
    *id v10 = v12;

    _os_log_impl(&dword_260D82000, v5, v6, "Unable to assign prompt conditioning image: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FB0);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v10, -1, -1);
    MEMORY[0x26122CA00](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = (void *)v0[21];
  BOOL v14 = (void *)v0[14];

  swift_getErrorValue();
  uint64_t v15 = sub_260FE5290();
  uint64_t v17 = v16;
  sub_260F46E60();
  swift_allocError();
  *uint64_t v18 = v15;
  v18[1] = v17;
  swift_willThrow();

  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_260F41FDC(uint64_t *a1, uint64_t *a2, uint64_t *a3, char a4, uint64_t *a5, uint64_t *a6)
{
  *(unsigned char *)(v7 + 64) = a4;
  uint64_t v8 = *a1;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v8;
  *(unsigned char *)(v7 + 65) = *((unsigned char *)a1 + 8);
  uint64_t v9 = *a2;
  *(unsigned char *)(v7 + 66) = *((unsigned char *)a2 + 8);
  uint64_t v10 = *a3;
  *(void *)(v7 + 32) = v9;
  *(void *)(v7 + 40) = v10;
  *(unsigned char *)(v7 + 67) = *((unsigned char *)a3 + 8);
  uint64_t v11 = *a5;
  *(unsigned char *)(v7 + 68) = *((unsigned char *)a5 + 8);
  uint64_t v12 = *a6;
  *(void *)(v7 + 48) = v11;
  *(void *)(v7 + 56) = v12;
  *(unsigned char *)(v7 + 69) = *((unsigned char *)a6 + 8);
  return MEMORY[0x270FA2498](sub_260F42044, 0, 0);
}

uint64_t sub_260F42044()
{
  uint64_t v37 = v0;
  sub_260F435AC((uint64_t)&v31);
  if (v34)
  {
    sub_260F46E60();
    swift_allocError();
    *id v1 = 0xD00000000000001FLL;
    v1[1] = 0x80000002610007A0;
    swift_willThrow();
LABEL_8:
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_9;
  }
  char v2 = *(unsigned char *)(v0 + 65);
  uint64_t v35 = *(void *)(v0 + 24);
  char v36 = v2;
  id v3 = sub_260EB7464(v33, &v31, 2);
  sub_260F435AC((uint64_t)&v31);
  if (v34)
  {
    sub_260F46E60();
    swift_allocError();
    *id v4 = 0xD000000000000020;
    v4[1] = 0x80000002610007C0;
    swift_willThrow();

    goto LABEL_8;
  }
  char v5 = *(unsigned char *)(v0 + 67);
  uint64_t v35 = *(void *)(v0 + 40);
  char v36 = v5;
  uint64_t v6 = sub_260EB7464(0x4C303038u, &v31, 2);
  char v7 = *(unsigned char *)(v0 + 68);
  uint64_t v31 = *(void *)(v0 + 48);
  char v32 = v7;
  uint64_t v8 = sub_260F44808(&v31, 0xD000000000000020, 0x8000000261000770);
  char v9 = *(unsigned char *)(v0 + 69);
  uint64_t v31 = *(void *)(v0 + 56);
  char v32 = v9;
  uint64_t v11 = sub_260F44808(&v31, 0xD000000000000025, 0x8000000261000740);
  char v30 = *(unsigned char *)(v0 + 67);
  uint64_t v29 = *(unsigned __int8 *)(v0 + 66);
  uint64_t v12 = *(void **)(v0 + 24);
  uint64_t v26 = *(void **)(v0 + 40);
  char v27 = *(void **)(v0 + 32);
  uint64_t v28 = *(unsigned __int8 *)(v0 + 65);
  uint64_t v13 = *(void *)(v0 + 16);
  char v14 = *(unsigned char *)(v0 + 64);
  uint64_t v15 = type metadata accessor for DefinitionSession();
  sub_260EA3AA0(v3, v6, v14, v8, v11);

  uint64_t v16 = v13 + *(int *)(v15 + 36);
  uint64_t v17 = *(void *)(v16 + 8);
  unint64_t v25 = *(void **)v16;
  uint64_t v18 = *(void **)(v16 + 16);
  uint64_t v19 = *(void *)(v16 + 24);
  uint64_t v20 = *(void **)(v16 + 32);
  id v21 = v26;
  id v22 = v12;
  id v23 = v27;
  sub_260DC6FE4(v25, v17, v18, v19, v20);
  *(void *)uint64_t v16 = v12;
  *(void *)(v16 + 8) = v28;
  *(void *)(v16 + 16) = v27;
  *(void *)(v16 + 24) = v29;
  *(void *)(v16 + 32) = v26;
  *(unsigned char *)(v16 + 40) = v30;
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
LABEL_9:
  return v24();
}

uint64_t sub_260F42374()
{
  uint64_t v1 = type metadata accessor for DefinitionSession();
  uint64_t v2 = *(int *)(v1 + 48);
  if (*(void *)(v0 + v2))
  {
    uint64_t v3 = *(void *)(v0 + v2);
  }
  else
  {
    id v4 = *(void **)(v0 + *(int *)(v1 + 40));
    type metadata accessor for GoalValidator();
    uint64_t v5 = swift_allocObject();
    uint64_t v3 = v5;
    if (MEMORY[0x263F628E0])
    {
      uint64_t v6 = self;
      id v7 = v4;
      id v8 = objc_msgSend(v6, sel_visualGenerationManager);
      *(void *)(v3 + 16) = v7;
      *(void *)(v3 + 24) = v8;
      *(void *)(v0 + v2) = v3;
    }
    else
    {
      *(void *)(v5 + 16) = v4;
      *(void *)(v5 + 24) = 0;
      *(void *)(v0 + v2) = v5;
      id v9 = v4;
    }
    swift_retain();
  }
  swift_retain();
  return v3;
}

uint64_t DefinitionSession.personDescriptionDirective.getter()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_260F42464, 0, 0);
}

uint64_t sub_260F42464()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t v3 = v2 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  id v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  swift_bridgeObjectRetain();
  return v7(v5, v4);
}

uint64_t DefinitionSession.dropPersonDescriptionDirective()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_260F42524, 0, 0);
}

uint64_t sub_260F42524()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t v3 = v2 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 16) = 0;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t DefinitionSession.specifyPersonDescriptionDirective(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_260F425D0, 0, 0);
}

uint64_t sub_260F425D0()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v4 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 8) = v3;
  *(void *)(v5 + 16) = v2;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

unint64_t DefinitionSession.Error.errorDescription.getter()
{
  if (v0[1]) {
    unint64_t v1 = *v0;
  }
  else {
    unint64_t v1 = 0xD000000000000038;
  }
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_260F426C8()
{
  if (*v0) {
    return 0xD00000000000001DLL;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_260F4270C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260F4B0C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260F42734(uint64_t a1)
{
  unint64_t v2 = sub_260F42B88();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260F42770(uint64_t a1)
{
  unint64_t v2 = sub_260F42B88();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260F427AC(uint64_t a1)
{
  unint64_t v2 = sub_260F42BDC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260F427E8(uint64_t a1)
{
  unint64_t v2 = sub_260F42BDC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260F42824(uint64_t a1)
{
  unint64_t v2 = sub_260F42C30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260F42860(uint64_t a1)
{
  unint64_t v2 = sub_260F42C30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DefinitionSession.Error.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA478);
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v20 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA480);
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  MEMORY[0x270FA5388](v6, v7);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA488);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12);
  char v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v1[1];
  uint64_t v23 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F42B88();
  sub_260FE53E0();
  if (v15)
  {
    char v26 = 0;
    sub_260F42C30();
    sub_260FE5010();
    uint64_t v16 = v25;
    sub_260FE5070();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v16);
  }
  else
  {
    char v27 = 1;
    sub_260F42BDC();
    uint64_t v18 = v20;
    sub_260FE5010();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v22);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

unint64_t sub_260F42B88()
{
  unint64_t result = qword_26A8EA490;
  if (!qword_26A8EA490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA490);
  }
  return result;
}

unint64_t sub_260F42BDC()
{
  unint64_t result = qword_26A8EA498;
  if (!qword_26A8EA498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA498);
  }
  return result;
}

unint64_t sub_260F42C30()
{
  unint64_t result = qword_26A8EA4A0;
  if (!qword_26A8EA4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA4A0);
  }
  return result;
}

uint64_t DefinitionSession.Error.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA4A8);
  uint64_t v33 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29, v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA4B0);
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v7);
  id v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA4B8);
  uint64_t v32 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F42B88();
  char v14 = v34;
  sub_260FE53B0();
  if (v14) {
    goto LABEL_9;
  }
  uint64_t v15 = v33;
  char v34 = a1;
  uint64_t v16 = v13;
  uint64_t v17 = sub_260FE4FE0();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v20 = sub_260FE4CC0();
    swift_allocError();
    uint64_t v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7290);
    *uint64_t v22 = &type metadata for DefinitionSession.Error;
    sub_260FE4F10();
    sub_260FE4CA0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v10);
    a1 = v34;
LABEL_9:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1Tm(v23);
  }
  if (*(unsigned char *)(v17 + 32))
  {
    char v36 = 1;
    sub_260F42BDC();
    sub_260FE4EF0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v10);
    uint64_t v18 = 0;
    uint64_t v19 = 0;
  }
  else
  {
    char v35 = 0;
    sub_260F42C30();
    sub_260FE4EF0();
    uint64_t v25 = v13;
    uint64_t v18 = sub_260FE4F70();
    uint64_t v26 = v32;
    uint64_t v19 = v27;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v10);
  }
  uint64_t v28 = v31;
  *uint64_t v31 = v18;
  v28[1] = v19;
  uint64_t v23 = (uint64_t)v34;
  return __swift_destroy_boxed_opaque_existential_1Tm(v23);
}

unint64_t sub_260F4311C()
{
  if (v0[1]) {
    unint64_t v1 = *v0;
  }
  else {
    unint64_t v1 = 0xD000000000000038;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_260F43170@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DefinitionSession.Error.init(from:)(a1, a2);
}

uint64_t sub_260F43188(void *a1)
{
  return DefinitionSession.Error.encode(to:)(a1);
}

uint64_t DefinitionSession.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_260FE3110();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

Swift::Bool __swiftcall DefinitionSession.imageStyle(_:canBeCombinedWith:)(VisualGeneration::ImageStyle _, Swift::OpaquePointer canBeCombinedWith)
{
  char v4 = *(unsigned char *)_;
  uint64_t v5 = v2 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t v7 = *(void *)(v5 + 8);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v8 = qword_26A8E6070;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_26A90FA88;
  uint64_t v10 = *(void *)(qword_26A90FA88 + 16);
  if (!v10)
  {
LABEL_12:
    uint64_t v24 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
    swift_bridgeObjectRelease();
LABEL_16:
    sub_260D90820((uint64_t)&v22, &qword_26A8E6860);
    char v20 = 0;
    return v20 & 1;
  }
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  while (1)
  {
    uint64_t v13 = *(void *)(v9 + 8 * v12 + 32);
    if ((*(uint64_t (**)(uint64_t))(v13 + 88))(v11) == v7 && v14 == v6) {
      break;
    }
    char v16 = sub_260FE5150();
    uint64_t v11 = swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_14;
    }
    if (v10 == ++v12)
    {
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v17 = swift_bridgeObjectRelease();
  (*(void (**)(long long *__return_ptr, uint64_t))(v13 + 112))(&v22, v17);
  swift_bridgeObjectRelease();
  if (!*((void *)&v23 + 1)) {
    goto LABEL_16;
  }
  sub_260DD7B40(&v22, (uint64_t)v25);
  uint64_t v18 = v26;
  uint64_t v19 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  LOBYTE(v22) = v4;
  char v20 = (*(uint64_t (**)(long long *, void *, uint64_t))(*(void *)(v19 + 40) + 8))(&v22, canBeCombinedWith._rawValue, v18);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  return v20 & 1;
}

uint64_t DefinitionSession.directableDemographicCategories.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v6 = qword_26A8E6070;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_26A90FA88;
  uint64_t v8 = *(void *)(qword_26A90FA88 + 16);
  if (v8)
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *(void *)(v7 + 8 * v10 + 32);
      if ((*(uint64_t (**)(uint64_t))(v11 + 88))(v9) == v5 && v12 == v4) {
        break;
      }
      char v14 = sub_260FE5150();
      uint64_t v9 = swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_14;
      }
      if (v8 == ++v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v15 = swift_bridgeObjectRelease();
    (*(void (**)(long long *__return_ptr, uint64_t))(v11 + 112))(&v19, v15);
    swift_bridgeObjectRelease();
    if (*((void *)&v20 + 1))
    {
      sub_260DD7B40(&v19, (uint64_t)v22);
      uint64_t v17 = v23;
      uint64_t v16 = v24;
      __swift_project_boxed_opaque_existential_1(v22, v23);
      (*(void (**)(uint64_t))(*(void *)(v16 + 16) + 8))(v17);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
    }
  }
  else
  {
LABEL_12:
    uint64_t v21 = 0;
    long long v19 = 0u;
    long long v20 = 0u;
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_260D90820((uint64_t)&v19, &qword_26A8E6860);
  *a1 = 0;
  return result;
}

uint64_t sub_260F435AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v6 = qword_26A8E6070;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_26A90FA88;
  uint64_t v8 = *(void *)(qword_26A90FA88 + 16);
  if (v8)
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *(void *)(v7 + 8 * v10 + 32);
      if ((*(uint64_t (**)(uint64_t))(v11 + 88))(v9) == v5 && v12 == v4) {
        break;
      }
      char v14 = sub_260FE5150();
      uint64_t v9 = swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_14;
      }
      if (v8 == ++v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v15 = swift_bridgeObjectRelease();
    (*(void (**)(long long *__return_ptr, uint64_t))(v11 + 112))(&v19, v15);
    swift_bridgeObjectRelease();
    uint64_t v16 = *((void *)&v20 + 1);
    if (*((void *)&v20 + 1))
    {
      uint64_t v17 = v21;
      __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
      (*(void (**)(uint64_t, uint64_t))(v17 + 48))(v16, v17);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
    }
  }
  else
  {
LABEL_12:
    uint64_t v21 = 0;
    long long v19 = 0u;
    long long v20 = 0u;
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_260D90820((uint64_t)&v19, &qword_26A8E6860);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 20) = 1;
  return result;
}

uint64_t sub_260F43774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v6 = qword_26A8E6070;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_26A90FA88;
  uint64_t v8 = *(void *)(qword_26A90FA88 + 16);
  if (v8)
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *(void *)(v7 + 8 * v10 + 32);
      if ((*(uint64_t (**)(uint64_t))(v11 + 88))(v9) == v5 && v12 == v4) {
        break;
      }
      char v14 = sub_260FE5150();
      uint64_t v9 = swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_14;
      }
      if (v8 == ++v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v15 = swift_bridgeObjectRelease();
    (*(void (**)(long long *__return_ptr, uint64_t))(v11 + 112))(&v19, v15);
    swift_bridgeObjectRelease();
    uint64_t v16 = *((void *)&v20 + 1);
    if (*((void *)&v20 + 1))
    {
      uint64_t v17 = v21;
      __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
      (*(void (**)(uint64_t, uint64_t))(v17 + 56))(v16, v17);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
    }
  }
  else
  {
LABEL_12:
    uint64_t v21 = 0;
    long long v19 = 0u;
    long long v20 = 0u;
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_260D90820((uint64_t)&v19, &qword_26A8E6860);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 20) = 1;
  return result;
}

uint64_t (*DefinitionSession.generationSeed.modify(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for DefinitionSession() + 56);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = v1 + v3;
  uint64_t v5 = *(void *)(v4 + 72);
  LOBYTE(v4) = *(unsigned char *)(v4 + 80);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v4;
  return sub_260F439A0;
}

uint64_t sub_260F439A0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16) + *(int *)(result + 12);
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 72) = *(void *)result;
  *(unsigned char *)(v1 + 80) = v2;
  return result;
}

uint64_t DefinitionSession.usesPORPipeline.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  if (*(void *)(v1 + 8) == 0xD000000000000029 && *(void *)(v1 + 16) == 0x8000000260FFBD40) {
    return 1;
  }
  return sub_260FE5150();
}

uint64_t sub_260F43A4C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  if (*(void *)(v3 + 8) == 0xD000000000000029 && *(void *)(v3 + 16) == 0x8000000260FFBD40) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = sub_260FE5150();
  }
  *a2 = result & 1;
  return result;
}

void sub_260F43ADC(unsigned char *a1)
{
  if ((*a1 & 1) == 0)
  {
    if (qword_26A8E6118 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_260FE3A10();
    __swift_project_value_buffer(v1, (uint64_t)qword_26A90FB90);
    oslog = sub_260FE39F0();
    os_log_type_t v2 = sub_260FE4890();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl(&dword_260D82000, oslog, v2, "This property is no longer supported -- setting this value to false has no effect", v3, 2u);
      MEMORY[0x26122CA00](v3, -1, -1);
    }
  }
}

void DefinitionSession.usesPORPipeline.setter(char a1)
{
  if ((a1 & 1) == 0)
  {
    if (qword_26A8E6118 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_260FE3A10();
    __swift_project_value_buffer(v2, (uint64_t)qword_26A90FB90);
    oslog = sub_260FE39F0();
    os_log_type_t v3 = sub_260FE4890();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_260D82000, oslog, v3, "This property is no longer supported -- setting this value to false has no effect", v4, 2u);
      MEMORY[0x26122CA00](v4, -1, -1);
    }
  }
}

void (*DefinitionSession.usesPORPipeline.modify(unsigned char *a1))(unsigned char *a1, char a2)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  if (*(void *)(v3 + 8) == 0xD000000000000029 && *(void *)(v3 + 16) == 0x8000000260FFBD40) {
    char v4 = 1;
  }
  else {
    char v4 = sub_260FE5150();
  }
  *a1 = v4 & 1;
  return sub_260F43D74;
}

void sub_260F43D74(unsigned char *a1, char a2)
{
  if (a2)
  {
    if (*a1) {
      return;
    }
    if (qword_26A8E6118 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_260FE3A10();
    __swift_project_value_buffer(v2, (uint64_t)qword_26A90FB90);
    oslog = sub_260FE39F0();
    os_log_type_t v3 = sub_260FE4890();
    if (!os_log_type_enabled(oslog, v3)) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (*a1) {
    return;
  }
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_260FE3A10();
  __swift_project_value_buffer(v4, (uint64_t)qword_26A90FB90);
  oslog = sub_260FE39F0();
  os_log_type_t v3 = sub_260FE4890();
  if (os_log_type_enabled(oslog, v3))
  {
LABEL_12:
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_260D82000, oslog, v3, "This property is no longer supported -- setting this value to false has no effect", v5, 2u);
    MEMORY[0x26122CA00](v5, -1, -1);
  }
LABEL_13:
}

unint64_t DefinitionSession.scribbleStrength.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t v2 = (unsigned int *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 36));
  return *v2 | ((unint64_t)*((unsigned __int8 *)v2 + 4) << 32);
}

uint64_t (*DefinitionSession.scribbleStrength.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for DefinitionSession() + 56);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  uint64_t v5 = *(int *)(type metadata accessor for GenerationRecipe(0) + 36);
  *(_DWORD *)(a1 + 20) = v5;
  uint64_t v6 = v4 + v5;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)v6;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v6 + 4);
  return sub_260F43FB8;
}

unint64_t DefinitionSession.lcmScale.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t v2 = (unsigned int *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 40));
  return *v2 | ((unint64_t)*((unsigned __int8 *)v2 + 4) << 32);
}

uint64_t (*DefinitionSession.lcmScale.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for DefinitionSession() + 56);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  uint64_t v5 = *(int *)(type metadata accessor for GenerationRecipe(0) + 40);
  *(_DWORD *)(a1 + 20) = v5;
  uint64_t v6 = v4 + v5;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)v6;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v6 + 4);
  return sub_260F43FB8;
}

uint64_t sub_260F4408C(uint64_t result)
{
  uint64_t v1 = *(void *)result + *(int *)(result + 16) + *(int *)(result + 20);
  char v2 = *(unsigned char *)(result + 12);
  *(_DWORD *)uint64_t v1 = *(_DWORD *)(result + 8);
  *(unsigned char *)(v1 + 4) = v2;
  return result;
}

uint64_t sub_260F440B0(uint64_t a1, void (*a2)(uint64_t))
{
  if ((unint64_t)a2 >= 2)
  {
    swift_retain();
    a2(a1);
    sub_260DC8E58((uint64_t)a2);
  }
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_260EE0644(v4);
  return swift_endAccess();
}

uint64_t sub_260F44140()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 96));
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = (unsigned char *)&unk_270D17000;
  while (1)
  {
LABEL_4:
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v8 << 6);
    }
    else
    {
      int64_t v12 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_64;
      }
      if (v12 >= v7) {
        goto LABEL_60;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v12);
      ++v8;
      if (!v13)
      {
        int64_t v8 = v12 + 1;
        if (v12 + 1 >= v7) {
          goto LABEL_60;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 2;
          if (v12 + 2 >= v7) {
            goto LABEL_60;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v8);
          if (!v13)
          {
            int64_t v14 = v12 + 3;
            if (v14 >= v7)
            {
LABEL_60:
              swift_release();
              return 0;
            }
            unint64_t v13 = *(void *)(v3 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                int64_t v8 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  break;
                }
                if (v8 >= v7) {
                  goto LABEL_60;
                }
                unint64_t v13 = *(void *)(v3 + 8 * v8);
                ++v14;
                if (v13) {
                  goto LABEL_19;
                }
              }
LABEL_64:
              __break(1u);
              JUMPOUT(0x260F445DCLL);
            }
            int64_t v8 = v14;
          }
        }
      }
LABEL_19:
      unint64_t v6 = (v13 - 1) & v13;
      unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
    }
    uint64_t v15 = *(void *)(v2 + 56) + 3 * v11;
    int v16 = *(unsigned __int8 *)(v15 + 1);
    if (byte_270D17880 == 5)
    {
      if (v16 == 5) {
        goto LABEL_59;
      }
      goto LABEL_40;
    }
    if (v16 != 5) {
      break;
    }
    if (v9[2177] == 5) {
      goto LABEL_59;
    }
  }
  unint64_t v17 = 0xE400000000000000;
  uint64_t v18 = 2036490594;
  switch(byte_270D17880)
  {
    case 1:
      unint64_t v17 = 0xE500000000000000;
      uint64_t v18 = 0x646C696863;
      break;
    case 2:
      uint64_t v18 = 0x756441676E756F79;
      unint64_t v17 = 0xEA0000000000746CLL;
      break;
    case 3:
      unint64_t v17 = 0xE500000000000000;
      uint64_t v18 = 0x746C756461;
      break;
    case 4:
      unint64_t v17 = 0xE600000000000000;
      uint64_t v18 = 0x726F696E6573;
      break;
    default:
      break;
  }
  unint64_t v19 = 0xE400000000000000;
  uint64_t v20 = 2036490594;
  switch(*(unsigned char *)(v15 + 1))
  {
    case 1:
      unint64_t v19 = 0xE500000000000000;
      if (v18 != 0x646C696863) {
        goto LABEL_39;
      }
      goto LABEL_38;
    case 2:
      unint64_t v19 = 0xEA0000000000746CLL;
      if (v18 != 0x756441676E756F79) {
        goto LABEL_39;
      }
      goto LABEL_38;
    case 3:
      unint64_t v19 = 0xE500000000000000;
      uint64_t v20 = 0x746C756461;
      goto LABEL_37;
    case 4:
      unint64_t v19 = 0xE600000000000000;
      if (v18 != 0x726F696E6573) {
        goto LABEL_39;
      }
      goto LABEL_38;
    default:
LABEL_37:
      if (v18 != v20) {
        goto LABEL_39;
      }
LABEL_38:
      if (v17 != v19)
      {
LABEL_39:
        char v21 = sub_260FE5150();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = &unk_270D17000;
        if (v21)
        {
LABEL_59:
          swift_release();
          return 1;
        }
LABEL_40:
        unint64_t v22 = 0xE400000000000000;
        uint64_t v23 = 2036490594;
        switch(v9[2177])
        {
          case 0:
            goto LABEL_47;
          case 1:
            unint64_t v22 = 0xE500000000000000;
            uint64_t v23 = 0x646C696863;
            goto LABEL_47;
          case 2:
            uint64_t v23 = 0x756441676E756F79;
            unint64_t v22 = 0xEA0000000000746CLL;
            goto LABEL_47;
          case 3:
            unint64_t v22 = 0xE500000000000000;
            uint64_t v23 = 0x746C756461;
            goto LABEL_47;
          case 4:
            unint64_t v22 = 0xE600000000000000;
            uint64_t v23 = 0x726F696E6573;
LABEL_47:
            unint64_t v24 = 0xE400000000000000;
            uint64_t v25 = 2036490594;
            switch(v16)
            {
              case 0:
                goto LABEL_53;
              case 1:
                unint64_t v24 = 0xE500000000000000;
                if (v23 != 0x646C696863) {
                  goto LABEL_55;
                }
                goto LABEL_54;
              case 2:
                unint64_t v24 = 0xEA0000000000746CLL;
                if (v23 != 0x756441676E756F79) {
                  goto LABEL_55;
                }
                goto LABEL_54;
              case 3:
                unint64_t v24 = 0xE500000000000000;
                uint64_t v25 = 0x746C756461;
LABEL_53:
                if (v23 == v25) {
                  goto LABEL_54;
                }
                goto LABEL_55;
              case 4:
                unint64_t v24 = 0xE600000000000000;
                if (v23 != 0x726F696E6573) {
                  goto LABEL_55;
                }
LABEL_54:
                if (v22 == v24) {
                  goto LABEL_61;
                }
LABEL_55:
                char v26 = sub_260FE5150();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v9 = (unsigned char *)&unk_270D17000;
                if (v26) {
                  goto LABEL_59;
                }
                goto LABEL_4;
              default:
                goto LABEL_4;
            }
          default:
            goto LABEL_4;
        }
        goto LABEL_4;
      }
LABEL_61:
      swift_release();
      swift_bridgeObjectRelease_n();
      return 1;
  }
}

uint64_t sub_260F4462C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for GenerationRecipe(0);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = (int *)type metadata accessor for DefinitionSession();
  uint64_t v7 = v1 + v6[14];
  sub_260F4B484(v7, (uint64_t)v5, type metadata accessor for GenerationRecipe);
  uint64_t v8 = v1 + v6[5];
  uint64_t v10 = *(void *)v8;
  uint64_t v9 = *(void *)(v8 + 8);
  int v11 = *(_DWORD *)(v8 + 16);
  uint64_t v17 = *(void *)v8;
  uint64_t v18 = v9;
  int v19 = v11;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_260EAA69C((uint64_t)v5, &v17);
  uint64_t v13 = v6[15];
  swift_release();
  *(void *)(v1 + v13) = v12;
  uint64_t result = sub_260FE37D0();
  uint64_t v15 = v6[16];
  if (!*(void *)(v1 + v15))
  {
    uint64_t v17 = v10;
    uint64_t v18 = v9;
    int v19 = v11;
    uint64_t result = sub_260EAAC20(v7, &v17);
    *(void *)(v1 + v15) = result;
    if (result) {
      return sub_260FE37D0();
    }
  }
  return result;
}

NSObject *sub_260F447A8(uint64_t *a1)
{
  return sub_260F44808(a1, 0xD000000000000020, 0x8000000261000770);
}

NSObject *sub_260F447D8(uint64_t *a1)
{
  return sub_260F44808(a1, 0xD000000000000025, 0x8000000261000740);
}

NSObject *sub_260F44808(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = a3;
  uint64_t v42 = a2;
  uint64_t v4 = v3;
  uint64_t v6 = type metadata accessor for DefinitionSession();
  uint64_t v8 = MEMORY[0x270FA5388](v6, v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  int v39 = *((unsigned __int8 *)a1 + 8);
  uint64_t v12 = v4 + *(int *)(v8 + 56);
  uint64_t v14 = *(void *)(v12 + 8);
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v15 = qword_26A8E6070;
  swift_bridgeObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_26A90FA88;
  uint64_t v17 = *(void *)(qword_26A90FA88 + 16);
  if (!v17)
  {
LABEL_12:
    uint64_t v47 = 0;
    long long v45 = 0u;
    long long v46 = 0u;
    swift_bridgeObjectRelease();
LABEL_17:
    sub_260D90820((uint64_t)&v45, &qword_26A8E6860);
    goto LABEL_18;
  }
  uint64_t v38 = v11;
  uint64_t v40 = v6;
  uint64_t v41 = v4;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = 0;
  while (1)
  {
    uint64_t v20 = *(void *)(v16 + 8 * v19 + 32);
    if ((*(uint64_t (**)(uint64_t))(v20 + 88))(v18) == v14 && v21 == v13) {
      break;
    }
    char v23 = sub_260FE5150();
    uint64_t v18 = swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_14;
    }
    if (v17 == ++v19)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v40;
      uint64_t v4 = v41;
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v24 = swift_bridgeObjectRelease();
  uint64_t v4 = v41;
  (*(void (**)(long long *__return_ptr, uint64_t))(v20 + 112))(&v45, v24);
  swift_bridgeObjectRelease();
  uint64_t v6 = v40;
  if (!*((void *)&v46 + 1)) {
    goto LABEL_17;
  }
  sub_260DD7B40(&v45, (uint64_t)v48);
  uint64_t v25 = v49;
  uint64_t v26 = v50;
  __swift_project_boxed_opaque_existential_1(v48, v49);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v26 + 48))(&v45, v25, v26);
  if (BYTE4(v46) != 1)
  {
    uint64_t v43 = v38;
    char v44 = v39;
    uint64_t v28 = sub_260EB7464(v46, (uint64_t *)&v45, 2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
    return v28;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
  uint64_t v4 = v41;
LABEL_18:
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_260FE3A10();
  __swift_project_value_buffer(v27, (uint64_t)qword_26A90FB90);
  sub_260F4B484(v4, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v28 = sub_260FE39F0();
  os_log_type_t v29 = sub_260FE4890();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315138;
    v48[0] = v31;
    uint64_t v32 = &v10[*(int *)(v6 + 56)];
    uint64_t v33 = *((void *)v32 + 1);
    unint64_t v34 = *((void *)v32 + 2);
    swift_bridgeObjectRetain();
    *(void *)&long long v45 = sub_260DB2844(v33, v34, v48);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260F4B4EC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    _os_log_impl(&dword_260D82000, v28, v29, "%s does not support a guidance sketch", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v31, -1, -1);
    MEMORY[0x26122CA00](v30, -1, -1);
  }
  else
  {
    sub_260F4B4EC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  }

  sub_260F46E60();
  swift_allocError();
  uint64_t v35 = v51;
  *char v36 = v42;
  v36[1] = v35;
  swift_willThrow();
  return v28;
}

NSObject *sub_260F44C7C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DefinitionSession();
  uint64_t v6 = MEMORY[0x270FA5388](v4, v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = *a1;
  int v9 = *((unsigned __int8 *)a1 + 8);
  uint64_t v10 = v2 + *(int *)(v6 + 56);
  uint64_t v12 = *(void *)(v10 + 8);
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v13 = qword_26A8E6070;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_26A90FA88;
  uint64_t v15 = *(void *)(qword_26A90FA88 + 16);
  if (!v15)
  {
LABEL_12:
    uint64_t v40 = 0;
    long long v38 = 0u;
    long long v39 = 0u;
    swift_bridgeObjectRelease();
LABEL_17:
    sub_260D90820((uint64_t)&v38, &qword_26A8E6860);
    goto LABEL_18;
  }
  HIDWORD(v35) = v9;
  uint64_t v37 = v2;
  char v44 = v8;
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  while (1)
  {
    uint64_t v18 = *(void *)(v14 + 8 * v17 + 32);
    if ((*(uint64_t (**)(uint64_t))(v18 + 88))(v16) == v12 && v19 == v11) {
      break;
    }
    char v21 = sub_260FE5150();
    uint64_t v16 = swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_14;
    }
    if (v15 == ++v17)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = v44;
      uint64_t v2 = v37;
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v22 = swift_bridgeObjectRelease();
  (*(void (**)(long long *__return_ptr, uint64_t))(v18 + 112))(&v38, v22);
  swift_bridgeObjectRelease();
  uint64_t v8 = v44;
  uint64_t v2 = v37;
  if (!*((void *)&v39 + 1)) {
    goto LABEL_17;
  }
  sub_260DD7B40(&v38, (uint64_t)v41);
  uint64_t v23 = v42;
  uint64_t v24 = v43;
  __swift_project_boxed_opaque_existential_1(v41, v42);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v24 + 56))(&v38, v23, v24);
  if (BYTE4(v39) != 1)
  {
    *(void *)&long long v38 = v36;
    BYTE8(v38) = BYTE4(v35);
    uint64_t v26 = sub_260DF25F8();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
    return v26;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
LABEL_18:
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_260FE3A10();
  __swift_project_value_buffer(v25, (uint64_t)qword_26A90FB90);
  sub_260F4B484(v2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  uint64_t v26 = sub_260FE39F0();
  os_log_type_t v27 = sub_260FE4890();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315138;
    v41[0] = v29;
    uint64_t v30 = &v8[*(int *)(v4 + 56)];
    uint64_t v31 = *((void *)v30 + 1);
    unint64_t v32 = *((void *)v30 + 2);
    swift_bridgeObjectRetain();
    *(void *)&long long v38 = sub_260DB2844(v31, v32, v41);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    sub_260F4B4EC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    _os_log_impl(&dword_260D82000, v26, v27, "%s does not support a prompt conditioning image", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v29, -1, -1);
    MEMORY[0x26122CA00](v28, -1, -1);
  }
  else
  {
    sub_260F4B4EC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  }

  sub_260F46E60();
  swift_allocError();
  *uint64_t v33 = 0xD00000000000002ALL;
  v33[1] = 0x8000000261000710;
  swift_willThrow();
  return v26;
}

void sub_260F450F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA5B8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5, v8);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F540A8]), sel_init);
  uint64_t v10 = *(void **)(a2 + *(int *)(type metadata accessor for DefinitionSession() + 40));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_260FE7020;
  *(void *)(v11 + 32) = v9;
  aBlock[0] = v11;
  sub_260FE4420();
  sub_260D905B0(0, &qword_26A8E6738);
  id v12 = v9;
  uint64_t v13 = (void *)sub_260FE43F0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(void *)(v15 + ((v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v12;
  aBlock[4] = sub_260F4B2AC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_260E5733C;
  aBlock[3] = &block_descriptor_13;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v12;
  swift_release();
  objc_msgSend(v10, sel_performRequests_onPixelBuffer_withOrientation_andIdentifier_completionHandler_, v13, v19, 1, 0, v16);
  _Block_release(v16);
}

uint64_t sub_260F45378(int a1, void *a2, int a3, id a4)
{
  if (!a2)
  {
    id v7 = objc_msgSend(a4, sel_error);
    if (v7)
    {

      uint64_t v37 = 0;
      unint64_t v38 = 0xE000000000000000;
      sub_260FE4C20();
      sub_260FE4250();
      objc_msgSend(a4, sel_error);
      goto LABEL_5;
    }
    id v18 = objc_msgSend(a4, sel_gatingResult);
    id v19 = objc_msgSend(v18, sel_faces);

    sub_260D905B0(0, &qword_26A8EA5C0);
    unint64_t v20 = sub_260FE4400();

    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_260FE4E40();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v21)
      {
LABEL_13:
        uint64_t v37 = MEMORY[0x263F8EE78];
        uint64_t result = sub_260DB49D8(0, v21 & ~(v21 >> 63), 0);
        if (v21 < 0)
        {
          __break(1u);
          return result;
        }
        uint64_t v22 = 0;
        uint64_t v23 = v37;
        do
        {
          if ((v20 & 0xC000000000000001) != 0) {
            id v24 = (id)MEMORY[0x26122B4C0](v22, v20);
          }
          else {
            id v24 = *(id *)(v20 + 8 * v22 + 32);
          }
          uint64_t v25 = v24;
          objc_msgSend(v24, sel_normalizedCropRect);
          uint64_t v27 = v26;
          uint64_t v29 = v28;
          uint64_t v31 = v30;
          uint64_t v33 = v32;

          uint64_t v37 = v23;
          unint64_t v35 = *(void *)(v23 + 16);
          unint64_t v34 = *(void *)(v23 + 24);
          if (v35 >= v34 >> 1)
          {
            sub_260DB49D8(v34 > 1, v35 + 1, 1);
            uint64_t v23 = v37;
          }
          ++v22;
          *(void *)(v23 + 16) = v35 + 1;
          uint64_t v36 = (void *)(v23 + 32 * v35);
          v36[4] = v27;
          v36[5] = v29;
          v36[6] = v31;
          v36[7] = v33;
        }
        while (v21 != v22);
        swift_bridgeObjectRelease();
LABEL_24:
        uint64_t v37 = v23;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA5B8);
        return sub_260FE44C0();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x263F8EE78];
    goto LABEL_24;
  }
  uint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  sub_260FE4C20();
  sub_260FE4250();
  id v5 = a2;
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA5C8);
  sub_260FE4150();
  sub_260FE4250();
  swift_bridgeObjectRelease();
  uint64_t v8 = v37;
  unint64_t v9 = v38;
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_260FE3A10();
  __swift_project_value_buffer(v10, (uint64_t)qword_26A90FB90);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_260FE39F0();
  os_log_type_t v12 = sub_260FE4890();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v37 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_260DB2844(v8, v9, &v37);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_260D82000, v11, v12, "%s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v14, -1, -1);
    MEMORY[0x26122CA00](v13, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_260F46E60();
  uint64_t v15 = swift_allocError();
  uint64_t *v16 = v8;
  v16[1] = v9;
  uint64_t v37 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA5B8);
  return sub_260FE44B0();
}

id DefinitionSession.drawOnImageConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DefinitionSession() + 36);
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void **)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void **)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(v3 + 40);
  return sub_260F46C2C(v4, v5, v6, v7, v8);
}

uint64_t sub_260F45884(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_260DDABFC(*a1, *a2);
}

uint64_t sub_260F45890()
{
  return sub_260FE5340();
}

uint64_t sub_260F45928()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260F459AC()
{
  return sub_260FE5340();
}

uint64_t sub_260F45A40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_260F4B1B0();
  *a1 = result;
  return result;
}

void sub_260F45A70(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE200000000000000;
  unint64_t v4 = 0xE600000000000000;
  unint64_t v5 = 0x746E65696C63;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000010;
    unint64_t v4 = 0x8000000260FFB4E0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 25705;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_260F45AC4()
{
  unint64_t v1 = 0x746E65696C63;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_260F45B14@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_260F4B1B0();
  *a1 = result;
  return result;
}

uint64_t sub_260F45B3C(uint64_t a1)
{
  unint64_t v2 = sub_260F46C84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260F45B78(uint64_t a1)
{
  unint64_t v2 = sub_260F46C84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DefinitionSession.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA4C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  unint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F46C84();
  sub_260FE53E0();
  LOBYTE(v14) = 0;
  sub_260FE3110();
  sub_260E063D0(&qword_26A8E7910);
  sub_260FE50B0();
  if (!v2)
  {
    uint64_t v10 = (long long *)(v3 + *(int *)(type metadata accessor for DefinitionSession() + 20));
    int v11 = *((_DWORD *)v10 + 4);
    long long v14 = *v10;
    int v15 = v11;
    v13[15] = 1;
    sub_260F46CD8();
    sub_260FE50B0();
    LOBYTE(v14) = 2;
    type metadata accessor for GenerationRecipe(0);
    sub_260F0D6AC(&qword_26A8E9850);
    sub_260FE50B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t DefinitionSession.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v38 = type metadata accessor for GenerationRecipe(0);
  MEMORY[0x270FA5388](v38, v3);
  uint64_t v39 = (uint64_t)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA4D8);
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42, v5);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for DefinitionSession();
  uint64_t v10 = (int *)MEMORY[0x270FA5388](v8, v9);
  os_log_type_t v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t *)&v12[v10[6]];
  *uint64_t v13 = 0;
  v13[1] = 0;
  long long v14 = &v12[v10[7]];
  *(void *)long long v14 = 0;
  long long v45 = v14;
  v14[8] = -1;
  int v15 = &v12[v10[8]];
  *(void *)int v15 = 0;
  long long v46 = v15;
  v15[8] = -1;
  uint64_t v16 = &v12[v10[9]];
  *(_OWORD *)uint64_t v16 = xmmword_260FE7220;
  *((void *)v16 + 3) = 0;
  *((void *)v16 + 4) = 0;
  *((void *)v16 + 2) = 0;
  v16[40] = 0;
  uint64_t v17 = v10[10];
  id v18 = objc_msgSend(self, sel_service);
  uint64_t v47 = v17;
  *(void *)&v12[v17] = v18;
  id v19 = &v12[v8[11]];
  *(void *)id v19 = 0;
  *((void *)v19 + 1) = 0;
  uint64_t v49 = v19;
  uint64_t v50 = v8[12];
  *(void *)&v12[v50] = 0;
  uint64_t v20 = v8[13];
  type metadata accessor for ImageChecker();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_260FE7090;
  *(void *)&v12[v20] = v21;
  uint64_t v48 = v8[15];
  *(void *)&v12[v48] = 0;
  uint64_t v43 = v8[16];
  uint64_t v44 = v20;
  *(void *)&v12[v43] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F46C84();
  uint64_t v41 = v7;
  uint64_t v22 = v51;
  sub_260FE53B0();
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    uint64_t v29 = v46;
    uint64_t v28 = v47;
    uint64_t v30 = v45;
    sub_260DC8E58(*v13);
    sub_260DC6F1C(*(id *)v30, v30[8]);
    sub_260DC6F1C(*(id *)v29, v29[8]);
    sub_260DC6FE4(*(void **)v16, *((void *)v16 + 1), *((void **)v16 + 2), *((void *)v16 + 3), *((void **)v16 + 4));

    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v51 = a1;
    uint64_t v23 = sub_260FE3110();
    v36[2] = v36;
    uint64_t v24 = *(void *)(v23 - 8);
    MEMORY[0x270FA5388](v23, v25);
    uint64_t v27 = (char *)v36 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    LOBYTE(v52) = 0;
    sub_260E063D0(&qword_26A8E7968);
    sub_260FE4FB0();
    v36[1] = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v12, v27, v23);
    char v54 = 1;
    sub_260F46D2C();
    sub_260FE4FB0();
    int v31 = v53;
    uint64_t v32 = &v12[v8[5]];
    *(_OWORD *)uint64_t v32 = v52;
    *((_DWORD *)v32 + 4) = v31;
    LOBYTE(v52) = 2;
    sub_260F0D6AC(&qword_26A8E9820);
    uint64_t v38 = 0;
    sub_260FE4FB0();
    uint64_t v33 = (uint64_t)v51;
    uint64_t v34 = v40;
    sub_260F4B41C(v39, (uint64_t)&v12[v8[14]], type metadata accessor for GenerationRecipe);
    sub_260F4462C();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v42);
    sub_260F4B484((uint64_t)v12, v37, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
    __swift_destroy_boxed_opaque_existential_1Tm(v33);
    return sub_260F4B4EC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DefinitionSession);
  }
}

uint64_t (*DefinitionSession.forceInProcessGeneration.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for DefinitionSession() + 56);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3 + 58);
  return sub_260F46414;
}

uint64_t sub_260F46414(uint64_t result)
{
  *(unsigned char *)(*(void *)result + *(int *)(result + 8) + 58) = *(unsigned char *)(result + 12);
  return result;
}

uint64_t sub_260F4642C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_260FE3110();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_260F46494@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DefinitionSession.init(from:)(a1, a2);
}

uint64_t sub_260F464AC(void *a1)
{
  return DefinitionSession.encode(to:)(a1);
}

uint64_t sub_260F464C4@<X0>(uint64_t a1@<X8>)
{
  sub_260F3C7A0((uint64_t)v5);
  uint64_t v2 = v6;
  if (v6)
  {
    uint64_t v3 = v7;
    __swift_project_boxed_opaque_existential_1(v5, v6);
    (*(void (**)(uint64_t, uint64_t))(v3 + 48))(v2, v3);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  }
  else
  {
    uint64_t result = sub_260D90820((uint64_t)v5, &qword_26A8E6860);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 16) = 0;
    *(unsigned char *)(a1 + 20) = 1;
  }
  return result;
}

uint64_t sub_260F46568()
{
  sub_260F3C7A0((uint64_t)v3);
  uint64_t v0 = v4;
  if (v4)
  {
    uint64_t v1 = v5;
    __swift_project_boxed_opaque_existential_1(v3, v4);
    uint64_t v0 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 64))(v0, v1);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
  }
  else
  {
    sub_260D90820((uint64_t)v3, &qword_26A8E6860);
  }
  return v0;
}

uint64_t sub_260F465F8(uint64_t a1)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
  return MEMORY[0x270FA2498](sub_260F46618, 0, 0);
}

uint64_t sub_260F46618()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(int *)(v0[3] + 56);
  uint64_t v3 = type metadata accessor for GenerationRecipe(0);
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v5 = *(unsigned __int8 *)(v1 + *(int *)(v3 + 44) + v2 + 1);
  return v4(v5);
}

uint64_t sub_260F46690(char a1, uint64_t a2)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 32) = a1;
  return MEMORY[0x270FA2498](sub_260F466B4, 0, 0);
}

uint64_t sub_260F466B4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(int *)(*(void *)(v0 + 24) + 56);
  *(unsigned char *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v3 + 1) = v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_260F4673C(uint64_t a1)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
  return MEMORY[0x270FA2498](sub_260F4675C, 0, 0);
}

uint64_t sub_260F4675C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(int *)(v0[3] + 56);
  *(unsigned char *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v2 + 1) = 3;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_260F467D8(uint64_t a1, uint64_t a2)
{
  void v3[3] = v2;
  v3[4] = a2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_260F467FC, 0, 0);
}

uint64_t sub_260F467FC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (unsigned char *)v0[2];
  uint64_t v3 = *(int *)(v0[4] + 56);
  unsigned char *v2 = *(unsigned char *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v3 + 2);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_260F46884(unsigned char *a1, uint64_t a2)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 32) = *a1;
  return MEMORY[0x270FA2498](sub_260F468AC, 0, 0);
}

uint64_t sub_260F468AC()
{
  char v1 = *(unsigned char *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(int *)(*(void *)(v0 + 24) + 56);
  *(unsigned char *)(v2 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v3 + 2) = v1;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_260F46934(uint64_t a1)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
  return MEMORY[0x270FA2498](sub_260F46954, 0, 0);
}

uint64_t sub_260F46954()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(int *)(v0[3] + 56);
  *(unsigned char *)(v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v2 + 2) = 10;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_260F469D0(uint64_t a1)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
  return MEMORY[0x270FA2498](sub_260F469F0, 0, 0);
}

uint64_t sub_260F469F0()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(int *)(v0[3] + 56);
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v2;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  swift_bridgeObjectRetain();
  return v7(v5, v4);
}

uint64_t sub_260F46A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = v3;
  v4[5] = a3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_260F46AAC, 0, 0);
}

uint64_t sub_260F46AAC()
{
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = *(int *)(v0[5] + 56);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 8) = v3;
  *(void *)(v5 + 16) = v2;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_260F46B48(uint64_t a1)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
  return MEMORY[0x270FA2498](sub_260F46B68, 0, 0);
}

uint64_t sub_260F46B68()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(int *)(v0[3] + 56);
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GenerationRecipe(0) + 44) + v2;
  swift_bridgeObjectRelease();
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 16) = 0;
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_260F46BE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 56) + 8);
  swift_bridgeObjectRetain();
  return v2;
}

id sub_260F46C2C(id result, char a2, void *a3, uint64_t a4, void *a5)
{
  if (a2 != -1)
  {
    uint64_t v6 = result;
    id v7 = a5;
    id v8 = v6;
    return a3;
  }
  return result;
}

unint64_t sub_260F46C84()
{
  unint64_t result = qword_26A8EA4C8;
  if (!qword_26A8EA4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA4C8);
  }
  return result;
}

unint64_t sub_260F46CD8()
{
  unint64_t result = qword_26A8EA4D0;
  if (!qword_26A8EA4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA4D0);
  }
  return result;
}

unint64_t sub_260F46D2C()
{
  unint64_t result = qword_26A8EA4E0;
  if (!qword_26A8EA4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA4E0);
  }
  return result;
}

unint64_t sub_260F46D80(void *a1)
{
  a1[1] = sub_260F46DB8();
  a1[2] = sub_260F46E0C();
  unint64_t result = sub_260F46E60();
  a1[3] = result;
  return result;
}

unint64_t sub_260F46DB8()
{
  unint64_t result = qword_26A8EA4E8;
  if (!qword_26A8EA4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA4E8);
  }
  return result;
}

unint64_t sub_260F46E0C()
{
  unint64_t result = qword_26A8EA4F0;
  if (!qword_26A8EA4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA4F0);
  }
  return result;
}

unint64_t sub_260F46E60()
{
  unint64_t result = qword_26A8EA4F8;
  if (!qword_26A8EA4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA4F8);
  }
  return result;
}

uint64_t sub_260F46EB8()
{
  return sub_260E063D0((unint64_t *)&qword_26A8E67C8);
}

uint64_t sub_260F46EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = type metadata accessor for DefinitionSession();
  uint64_t v5 = a1 + *(int *)(result + 56);
  uint64_t v6 = *(void *)(v5 + 72);
  LOBYTE(v5) = *(unsigned char *)(v5 + 80);
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_260F46F24(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for DefinitionSession();
  uint64_t v6 = a2 + *(int *)(result + 56);
  *(void *)(v6 + 72) = v3;
  *(unsigned char *)(v6 + 80) = v4;
  return result;
}

uint64_t sub_260F46F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t result = type metadata accessor for GenerationRecipe(0);
  uint64_t v5 = (int *)(v3 + *(int *)(result + 36));
  int v6 = *v5;
  LOBYTE(v5) = *((unsigned char *)v5 + 4);
  *(_DWORD *)a2 = v6;
  *(unsigned char *)(a2 + 4) = (_BYTE)v5;
  return result;
}

uint64_t sub_260F46FC8(int *a1, uint64_t a2)
{
  int v2 = *a1;
  char v3 = *((unsigned char *)a1 + 4);
  uint64_t v4 = a2 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t result = type metadata accessor for GenerationRecipe(0);
  uint64_t v6 = v4 + *(int *)(result + 36);
  *(_DWORD *)uint64_t v6 = v2;
  *(unsigned char *)(v6 + 4) = v3;
  return result;
}

uint64_t sub_260F47020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t result = type metadata accessor for GenerationRecipe(0);
  uint64_t v5 = (int *)(v3 + *(int *)(result + 40));
  int v6 = *v5;
  LOBYTE(v5) = *((unsigned char *)v5 + 4);
  *(_DWORD *)a2 = v6;
  *(unsigned char *)(a2 + 4) = (_BYTE)v5;
  return result;
}

uint64_t sub_260F47074(int *a1, uint64_t a2)
{
  int v2 = *a1;
  char v3 = *((unsigned char *)a1 + 4);
  uint64_t v4 = a2 + *(int *)(type metadata accessor for DefinitionSession() + 56);
  uint64_t result = type metadata accessor for GenerationRecipe(0);
  uint64_t v6 = v4 + *(int *)(result + 40);
  *(_DWORD *)uint64_t v6 = v2;
  *(unsigned char *)(v6 + 4) = v3;
  return result;
}

uint64_t sub_260F470CC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = type metadata accessor for DefinitionSession();
  *a2 = *(unsigned char *)(a1 + *(int *)(result + 56) + 58);
  return result;
}

uint64_t sub_260F47108(char *a1, uint64_t a2)
{
  char v3 = *a1;
  uint64_t result = type metadata accessor for DefinitionSession();
  *(unsigned char *)(a2 + *(int *)(result + 56) + 58) = v3;
  return result;
}

void *initializeBufferWithCopyOfBuffer for DefinitionSession(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    id v18 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_260FE3110();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    *((_DWORD *)v10 + 4) = *((_DWORD *)v11 + 4);
    uint64_t v13 = (void *)((char *)a1 + v9);
    long long v14 = (char *)a2 + v9;
    uint64_t v15 = *(void *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    if (v15)
    {
      uint64_t v16 = *((void *)v14 + 1);
      *uint64_t v13 = v15;
      v13[1] = v16;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    int v22 = v21[8];
    if (v22 == 255)
    {
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
    }
    else
    {
      uint64_t v23 = *(void **)v21;
      *(void *)uint64_t v20 = v23;
      v20[8] = v22;
      id v24 = v23;
    }
    uint64_t v25 = a3[8];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    int v28 = v27[8];
    if (v28 == 255)
    {
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
    }
    else
    {
      uint64_t v29 = *(void **)v27;
      *(void *)uint64_t v26 = v29;
      v26[8] = v28;
      id v30 = v29;
    }
    uint64_t v31 = a3[9];
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = v33[8];
    if (v34 == 255)
    {
      long long v35 = *((_OWORD *)v33 + 1);
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v35;
      *(_OWORD *)(v32 + 25) = *(_OWORD *)(v33 + 25);
    }
    else
    {
      uint64_t v36 = *(void **)v33;
      *(void *)uint64_t v32 = *(void *)v33;
      v32[8] = v34;
      uint64_t v37 = (void *)*((void *)v33 + 2);
      char v38 = v33[24];
      *((void *)v32 + 2) = v37;
      v32[24] = v38;
      uint64_t v39 = (void *)*((void *)v33 + 4);
      char v40 = v33[40];
      *((void *)v32 + 4) = v39;
      v32[40] = v40;
      id v41 = v36;
      id v42 = v37;
      id v43 = v39;
    }
    uint64_t v44 = a3[10];
    uint64_t v45 = a3[11];
    v147 = *(void **)((char *)a2 + v44);
    *(void *)((char *)a1 + v44) = v147;
    long long v46 = (char *)a1 + v45;
    uint64_t v47 = (char *)a2 + v45;
    *long long v46 = *v47;
    v146 = (void *)*((void *)v47 + 1);
    *((void *)v46 + 1) = v146;
    uint64_t v48 = a3[13];
    *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    *(void *)((char *)a1 + v48) = *(void *)((char *)a2 + v48);
    v149 = a3;
    v150 = a2;
    uint64_t v49 = a3[14];
    v151 = a1;
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    *uint64_t v50 = *((unsigned char *)a2 + v49);
    uint64_t v52 = *(void *)((char *)a2 + v49 + 16);
    *((void *)v50 + 1) = *(void *)((char *)a2 + v49 + 8);
    *((void *)v50 + 2) = v52;
    *(_OWORD *)(v50 + 24) = *(_OWORD *)((char *)a2 + v49 + 24);
    v50[40] = *((unsigned char *)a2 + v49 + 40);
    *((void *)v50 + 6) = *(void *)((char *)a2 + v49 + 48);
    *((_DWORD *)v50 + 14) = *(_DWORD *)((char *)a2 + v49 + 56);
    v50[60] = *((unsigned char *)a2 + v49 + 60);
    v50[61] = *((unsigned char *)a2 + v49 + 61);
    v50[62] = *((unsigned char *)a2 + v49 + 62);
    v50[80] = *((unsigned char *)a2 + v49 + 80);
    uint64_t v54 = *(void *)((char *)a2 + v49 + 64);
    uint64_t v53 = *(void *)((char *)a2 + v49 + 72);
    *((void *)v50 + 8) = v54;
    *((void *)v50 + 9) = v53;
    uint64_t v55 = (int *)type metadata accessor for GenerationRecipe(0);
    uint64_t v56 = v55[8];
    __dst = &v50[v56];
    uint64_t v57 = &v51[v56];
    uint64_t v58 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    uint64_t v59 = *((void *)v58 - 1);
    v60 = *(unsigned int (**)(char *, uint64_t, int *))(v59 + 48);
    id v61 = v147;
    id v62 = v146;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v60(v57, 1, v58))
    {
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
      memcpy(__dst, v57, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
      v65(__dst, v57, v64);
      v65(&__dst[v58[5]], &v57[v58[5]], v64);
      uint64_t v66 = v58[6];
      v67 = (uint64_t *)&__dst[v66];
      v68 = (uint64_t *)&v57[v66];
      if (*(void *)&v57[v66 + 16])
      {
        uint64_t v69 = *v68;
        unint64_t v70 = v68[1];
        sub_260DCBD18(*v68, v70);
        uint64_t *v67 = v69;
        v67[1] = v70;
        v67[2] = v68[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v67 = *(_OWORD *)v68;
        v67[2] = v68[2];
      }
      __dst[v58[7]] = v57[v58[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v59 + 56))(__dst, 0, 1, v58);
    }
    uint64_t v71 = v55[9];
    v72 = &v50[v71];
    v73 = &v51[v71];
    *(_DWORD *)v72 = *(_DWORD *)v73;
    v72[4] = v73[4];
    uint64_t v74 = v55[10];
    v75 = &v50[v74];
    v76 = &v51[v74];
    v75[4] = v76[4];
    *(_DWORD *)v75 = *(_DWORD *)v76;
    uint64_t v77 = v55[11];
    v78 = &v50[v77];
    v79 = &v51[v77];
    *(_WORD *)v78 = *(_WORD *)v79;
    v78[2] = v79[2];
    uint64_t v80 = *((void *)v79 + 2);
    *((void *)v78 + 1) = *((void *)v79 + 1);
    *((void *)v78 + 2) = v80;
    uint64_t v81 = v55[12];
    v82 = &v50[v81];
    v83 = &v51[v81];
    v84 = *(void **)&v51[v81];
    swift_bridgeObjectRetain();
    if (v84)
    {
      uint64_t v85 = *((void *)v83 + 1);
      uint64_t v86 = *((void *)v83 + 2);
      *(void *)v82 = v84;
      *((void *)v82 + 1) = v85;
      *((void *)v82 + 2) = v86;
      id v87 = v84;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v82 = *(_OWORD *)v83;
      *((void *)v82 + 2) = *((void *)v83 + 2);
    }
    uint64_t v88 = v55[13];
    v89 = &v50[v88];
    v90 = &v51[v88];
    long long v91 = *((_OWORD *)v90 + 1);
    *(_OWORD *)v89 = *(_OWORD *)v90;
    *((_OWORD *)v89 + 1) = v91;
    v89[32] = v90[32];
    uint64_t v92 = v55[14];
    v93 = &v50[v92];
    v94 = &v51[v92];
    v93[8] = v94[8];
    *(void *)v93 = *(void *)v94;
    *(void *)&v50[v55[15]] = *(void *)&v51[v55[15]];
    *(void *)&v50[v55[16]] = *(void *)&v51[v55[16]];
    uint64_t v95 = v55[17];
    v96 = &v50[v95];
    v97 = &v51[v95];
    v98 = *(void **)&v51[v95 + 24];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v98)
    {
      *(_OWORD *)v96 = *(_OWORD *)v97;
      *((_DWORD *)v96 + 4) = *((_DWORD *)v97 + 4);
      uint64_t v99 = *((void *)v97 + 4);
      *((void *)v96 + 3) = v98;
      *((void *)v96 + 4) = v99;
      id v100 = v98;
      swift_retain();
    }
    else
    {
      long long v101 = *((_OWORD *)v97 + 1);
      *(_OWORD *)v96 = *(_OWORD *)v97;
      *((_OWORD *)v96 + 1) = v101;
      *((void *)v96 + 4) = *((void *)v97 + 4);
    }
    uint64_t v102 = v55[18];
    v103 = &v50[v102];
    v104 = &v51[v102];
    v105 = (void *)*((void *)v104 + 3);
    if (v105)
    {
      *(_OWORD *)v103 = *(_OWORD *)v104;
      *((_DWORD *)v103 + 4) = *((_DWORD *)v104 + 4);
      uint64_t v106 = *((void *)v104 + 4);
      *((void *)v103 + 3) = v105;
      *((void *)v103 + 4) = v106;
      id v107 = v105;
      swift_retain();
    }
    else
    {
      long long v108 = *((_OWORD *)v104 + 1);
      *(_OWORD *)v103 = *(_OWORD *)v104;
      *((_OWORD *)v103 + 1) = v108;
      *((void *)v103 + 4) = *((void *)v104 + 4);
    }
    uint64_t v109 = v55[19];
    v110 = &v50[v109];
    v111 = &v51[v109];
    v112 = (void *)*((void *)v111 + 3);
    if (v112)
    {
      *(_OWORD *)v110 = *(_OWORD *)v111;
      *((_DWORD *)v110 + 4) = *((_DWORD *)v111 + 4);
      uint64_t v113 = *((void *)v111 + 4);
      *((void *)v110 + 3) = v112;
      *((void *)v110 + 4) = v113;
      id v114 = v112;
      swift_retain();
    }
    else
    {
      long long v115 = *((_OWORD *)v111 + 1);
      *(_OWORD *)v110 = *(_OWORD *)v111;
      *((_OWORD *)v110 + 1) = v115;
      *((void *)v110 + 4) = *((void *)v111 + 4);
    }
    uint64_t v116 = v55[20];
    v117 = &v50[v116];
    v118 = &v51[v116];
    v119 = *(void **)&v51[v116 + 24];
    if (v119)
    {
      *(_OWORD *)v117 = *(_OWORD *)v118;
      *((_DWORD *)v117 + 4) = *((_DWORD *)v118 + 4);
      uint64_t v120 = *((void *)v118 + 4);
      *((void *)v117 + 3) = v119;
      *((void *)v117 + 4) = v120;
      id v121 = v119;
      swift_retain();
    }
    else
    {
      long long v122 = *((_OWORD *)v118 + 1);
      *(_OWORD *)v117 = *(_OWORD *)v118;
      *((_OWORD *)v117 + 1) = v122;
      *((void *)v117 + 4) = *((void *)v118 + 4);
    }
    v123 = v117 + 40;
    v124 = v118 + 40;
    v125 = (void *)*((void *)v118 + 8);
    if (v125)
    {
      _OWORD *v123 = *v124;
      *((_DWORD *)v117 + 14) = *((_DWORD *)v118 + 14);
      uint64_t v126 = *((void *)v118 + 9);
      *((void *)v117 + 8) = v125;
      *((void *)v117 + 9) = v126;
      id v127 = v125;
      swift_retain();
    }
    else
    {
      long long v128 = *(_OWORD *)(v118 + 56);
      _OWORD *v123 = *v124;
      *(_OWORD *)(v117 + 56) = v128;
      *((void *)v117 + 9) = *((void *)v118 + 9);
    }
    v117[80] = v118[80];
    *(void *)&v50[v55[21]] = *(void *)&v51[v55[21]];
    uint64_t v129 = v55[22];
    v130 = &v50[v129];
    v131 = &v51[v129];
    v132 = *(void **)&v51[v129 + 24];
    swift_bridgeObjectRetain();
    if (v132)
    {
      *((_DWORD *)v130 + 4) = *((_DWORD *)v131 + 4);
      uint64_t v133 = *((void *)v131 + 4);
      uint64_t v134 = *((void *)v131 + 6);
      uint64_t v135 = *((void *)v131 + 7);
      *((void *)v130 + 5) = *((void *)v131 + 5);
      *((void *)v130 + 6) = v134;
      *(_OWORD *)v130 = *(_OWORD *)v131;
      *((void *)v130 + 3) = v132;
      *((void *)v130 + 4) = v133;
      *((void *)v130 + 7) = v135;
      v130[64] = v131[64];
      id v136 = v132;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v137 = *((_OWORD *)v131 + 3);
      *((_OWORD *)v130 + 2) = *((_OWORD *)v131 + 2);
      *((_OWORD *)v130 + 3) = v137;
      v130[64] = v131[64];
      long long v138 = *((_OWORD *)v131 + 1);
      *(_OWORD *)v130 = *(_OWORD *)v131;
      *((_OWORD *)v130 + 1) = v138;
    }
    uint64_t v139 = v55[23];
    v140 = &v50[v139];
    v141 = &v51[v139];
    uint64_t v142 = *((void *)v141 + 1);
    *(void *)v140 = *(void *)v141;
    *((void *)v140 + 1) = v142;
    uint64_t v143 = *((void *)v141 + 3);
    *((void *)v140 + 2) = *((void *)v141 + 2);
    *((void *)v140 + 3) = v143;
    *(void *)&v50[v55[24]] = *(void *)&v51[v55[24]];
    v50[v55[25]] = v51[v55[25]];
    uint64_t v144 = v149[16];
    id v18 = v151;
    *(void *)((char *)v151 + v149[15]) = *(void *)((char *)v150 + v149[15]);
    *(void *)((char *)v151 + v144) = *(void *)((char *)v150 + v144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v18;
}

uint64_t destroy for DefinitionSession(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[6])) {
    swift_release();
  }
  uint64_t v5 = a1 + a2[7];
  if (*(unsigned __int8 *)(v5 + 8) != 255) {

  }
  uint64_t v6 = a1 + a2[8];
  if (*(unsigned __int8 *)(v6 + 8) != 255) {

  }
  uint64_t v7 = a1 + a2[9];
  if (*(unsigned char *)(v7 + 8) != 0xFF)
  {
  }
  swift_release();
  swift_release();
  uint64_t v8 = a1 + a2[14];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v10 = v8 + v9[8];
  uint64_t v11 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    v13(v10, v12);
    v13(v10 + *(int *)(v11 + 20), v12);
    long long v14 = (uint64_t *)(v10 + *(int *)(v11 + 24));
    if (v14[2])
    {
      sub_260DCC110(*v14, v14[1]);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = (id *)(v8 + v9[12]);
  if (*v15)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void **)(v8 + v9[17] + 24);
  if (v16)
  {

    swift_release();
  }
  uint64_t v17 = *(void **)(v8 + v9[18] + 24);
  if (v17)
  {

    swift_release();
  }
  id v18 = *(void **)(v8 + v9[19] + 24);
  if (v18)
  {

    swift_release();
  }
  uint64_t v19 = v8 + v9[20];
  uint64_t v20 = *(void **)(v19 + 24);
  if (v20)
  {

    swift_release();
  }
  uint64_t v21 = *(void **)(v19 + 64);
  if (v21)
  {

    swift_release();
  }
  swift_bridgeObjectRelease();
  int v22 = *(void **)(v8 + v9[22] + 24);
  if (v22)
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for DefinitionSession(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(_DWORD *)(v9 + 16) = *(_DWORD *)(v10 + 16);
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = a2 + v8;
  uint64_t v14 = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  if (v14)
  {
    uint64_t v15 = *(void *)(v13 + 8);
    *uint64_t v12 = v14;
    v12[1] = v15;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  int v19 = *(unsigned __int8 *)(v18 + 8);
  if (v19 == 255)
  {
    *(void *)uint64_t v17 = *(void *)v18;
    *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  }
  else
  {
    uint64_t v20 = *(void **)v18;
    *(void *)uint64_t v17 = v20;
    *(unsigned char *)(v17 + 8) = v19;
    id v21 = v20;
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  int v25 = *(unsigned __int8 *)(v24 + 8);
  if (v25 == 255)
  {
    *(void *)uint64_t v23 = *(void *)v24;
    *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  }
  else
  {
    uint64_t v26 = *(void **)v24;
    *(void *)uint64_t v23 = v26;
    *(unsigned char *)(v23 + 8) = v25;
    id v27 = v26;
  }
  uint64_t v28 = a3[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(unsigned __int8 *)(v30 + 8);
  if (v31 == 255)
  {
    long long v32 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v32;
    *(_OWORD *)(v29 + 25) = *(_OWORD *)(v30 + 25);
  }
  else
  {
    uint64_t v33 = *(void **)v30;
    *(void *)uint64_t v29 = *(void *)v30;
    *(unsigned char *)(v29 + 8) = v31;
    uint64_t v34 = *(void **)(v30 + 16);
    char v35 = *(unsigned char *)(v30 + 24);
    *(void *)(v29 + 16) = v34;
    *(unsigned char *)(v29 + 24) = v35;
    uint64_t v36 = *(void **)(v30 + 32);
    char v37 = *(unsigned char *)(v30 + 40);
    *(void *)(v29 + 32) = v36;
    *(unsigned char *)(v29 + 40) = v37;
    id v38 = v33;
    id v39 = v34;
    id v40 = v36;
  }
  uint64_t v41 = a3[10];
  uint64_t v42 = a3[11];
  uint64_t v144 = *(void **)(a2 + v41);
  *(void *)(a1 + v41) = v144;
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  *(unsigned char *)uint64_t v43 = *(unsigned char *)v44;
  uint64_t v143 = *(void **)(v44 + 8);
  *(void *)(v43 + 8) = v143;
  uint64_t v45 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v45) = *(void *)(a2 + v45);
  v146 = a3;
  uint64_t v147 = a2;
  uint64_t v46 = a3[14];
  uint64_t v148 = a1;
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(unsigned char *)uint64_t v47 = *(unsigned char *)(a2 + v46);
  uint64_t v49 = *(void *)(a2 + v46 + 16);
  *(void *)(v47 + 8) = *(void *)(a2 + v46 + 8);
  *(void *)(v47 + 16) = v49;
  *(_OWORD *)(v47 + 24) = *(_OWORD *)(a2 + v46 + 24);
  *(unsigned char *)(v47 + 40) = *(unsigned char *)(a2 + v46 + 40);
  *(void *)(v47 + 48) = *(void *)(a2 + v46 + 48);
  *(_DWORD *)(v47 + 56) = *(_DWORD *)(a2 + v46 + 56);
  *(unsigned char *)(v47 + 60) = *(unsigned char *)(a2 + v46 + 60);
  *(unsigned char *)(v47 + 61) = *(unsigned char *)(a2 + v46 + 61);
  *(unsigned char *)(v47 + 62) = *(unsigned char *)(a2 + v46 + 62);
  *(unsigned char *)(v47 + 80) = *(unsigned char *)(a2 + v46 + 80);
  uint64_t v51 = *(void *)(a2 + v46 + 64);
  uint64_t v50 = *(void *)(a2 + v46 + 72);
  *(void *)(v47 + 64) = v51;
  *(void *)(v47 + 72) = v50;
  uint64_t v52 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v53 = v52[8];
  __dst = (char *)(v47 + v53);
  uint64_t v54 = (char *)(v48 + v53);
  uint64_t v55 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v56 = *((void *)v55 - 1);
  uint64_t v57 = *(unsigned int (**)(char *, uint64_t, int *))(v56 + 48);
  id v58 = v144;
  id v59 = v143;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v57(v54, 1, v55))
  {
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(__dst, v54, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    id v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
    v62(__dst, v54, v61);
    v62(&__dst[v55[5]], &v54[v55[5]], v61);
    uint64_t v63 = v55[6];
    uint64_t v64 = (uint64_t *)&__dst[v63];
    v65 = (uint64_t *)&v54[v63];
    if (*(void *)&v54[v63 + 16])
    {
      uint64_t v66 = *v65;
      unint64_t v67 = v65[1];
      sub_260DCBD18(*v65, v67);
      *uint64_t v64 = v66;
      v64[1] = v67;
      v64[2] = v65[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
      v64[2] = v65[2];
    }
    __dst[v55[7]] = v54[v55[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v56 + 56))(__dst, 0, 1, v55);
  }
  uint64_t v68 = v52[9];
  uint64_t v69 = v47 + v68;
  uint64_t v70 = v48 + v68;
  *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
  *(unsigned char *)(v69 + 4) = *(unsigned char *)(v70 + 4);
  uint64_t v71 = v52[10];
  uint64_t v72 = v47 + v71;
  uint64_t v73 = v48 + v71;
  *(unsigned char *)(v72 + 4) = *(unsigned char *)(v73 + 4);
  *(_DWORD *)uint64_t v72 = *(_DWORD *)v73;
  uint64_t v74 = v52[11];
  uint64_t v75 = v47 + v74;
  uint64_t v76 = v48 + v74;
  *(_WORD *)uint64_t v75 = *(_WORD *)v76;
  *(unsigned char *)(v75 + 2) = *(unsigned char *)(v76 + 2);
  uint64_t v77 = *(void *)(v76 + 16);
  *(void *)(v75 + 8) = *(void *)(v76 + 8);
  *(void *)(v75 + 16) = v77;
  uint64_t v78 = v52[12];
  v79 = (void *)(v47 + v78);
  uint64_t v80 = v48 + v78;
  uint64_t v81 = *(void **)(v48 + v78);
  swift_bridgeObjectRetain();
  if (v81)
  {
    uint64_t v82 = *(void *)(v80 + 8);
    uint64_t v83 = *(void *)(v80 + 16);
    void *v79 = v81;
    v79[1] = v82;
    v79[2] = v83;
    id v84 = v81;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v79 = *(_OWORD *)v80;
    v79[2] = *(void *)(v80 + 16);
  }
  uint64_t v85 = v52[13];
  uint64_t v86 = v47 + v85;
  uint64_t v87 = v48 + v85;
  long long v88 = *(_OWORD *)(v87 + 16);
  *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
  *(_OWORD *)(v86 + 16) = v88;
  *(unsigned char *)(v86 + 32) = *(unsigned char *)(v87 + 32);
  uint64_t v89 = v52[14];
  uint64_t v90 = v47 + v89;
  uint64_t v91 = v48 + v89;
  *(unsigned char *)(v90 + 8) = *(unsigned char *)(v91 + 8);
  *(void *)uint64_t v90 = *(void *)v91;
  *(void *)(v47 + v52[15]) = *(void *)(v48 + v52[15]);
  *(void *)(v47 + v52[16]) = *(void *)(v48 + v52[16]);
  uint64_t v92 = v52[17];
  uint64_t v93 = v47 + v92;
  uint64_t v94 = v48 + v92;
  uint64_t v95 = *(void **)(v48 + v92 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v95)
  {
    *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
    *(_DWORD *)(v93 + 16) = *(_DWORD *)(v94 + 16);
    uint64_t v96 = *(void *)(v94 + 32);
    *(void *)(v93 + 24) = v95;
    *(void *)(v93 + 32) = v96;
    id v97 = v95;
    swift_retain();
  }
  else
  {
    long long v98 = *(_OWORD *)(v94 + 16);
    *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
    *(_OWORD *)(v93 + 16) = v98;
    *(void *)(v93 + 32) = *(void *)(v94 + 32);
  }
  uint64_t v99 = v52[18];
  uint64_t v100 = v47 + v99;
  uint64_t v101 = v48 + v99;
  uint64_t v102 = *(void **)(v101 + 24);
  if (v102)
  {
    *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
    *(_DWORD *)(v100 + 16) = *(_DWORD *)(v101 + 16);
    uint64_t v103 = *(void *)(v101 + 32);
    *(void *)(v100 + 24) = v102;
    *(void *)(v100 + 32) = v103;
    id v104 = v102;
    swift_retain();
  }
  else
  {
    long long v105 = *(_OWORD *)(v101 + 16);
    *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
    *(_OWORD *)(v100 + 16) = v105;
    *(void *)(v100 + 32) = *(void *)(v101 + 32);
  }
  uint64_t v106 = v52[19];
  uint64_t v107 = v47 + v106;
  uint64_t v108 = v48 + v106;
  uint64_t v109 = *(void **)(v108 + 24);
  if (v109)
  {
    *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
    *(_DWORD *)(v107 + 16) = *(_DWORD *)(v108 + 16);
    uint64_t v110 = *(void *)(v108 + 32);
    *(void *)(v107 + 24) = v109;
    *(void *)(v107 + 32) = v110;
    id v111 = v109;
    swift_retain();
  }
  else
  {
    long long v112 = *(_OWORD *)(v108 + 16);
    *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
    *(_OWORD *)(v107 + 16) = v112;
    *(void *)(v107 + 32) = *(void *)(v108 + 32);
  }
  uint64_t v113 = v52[20];
  uint64_t v114 = v47 + v113;
  uint64_t v115 = v48 + v113;
  uint64_t v116 = *(void **)(v48 + v113 + 24);
  if (v116)
  {
    *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
    *(_DWORD *)(v114 + 16) = *(_DWORD *)(v115 + 16);
    uint64_t v117 = *(void *)(v115 + 32);
    *(void *)(v114 + 24) = v116;
    *(void *)(v114 + 32) = v117;
    id v118 = v116;
    swift_retain();
  }
  else
  {
    long long v119 = *(_OWORD *)(v115 + 16);
    *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
    *(_OWORD *)(v114 + 16) = v119;
    *(void *)(v114 + 32) = *(void *)(v115 + 32);
  }
  uint64_t v120 = (_OWORD *)(v114 + 40);
  id v121 = (_OWORD *)(v115 + 40);
  long long v122 = *(void **)(v115 + 64);
  if (v122)
  {
    *uint64_t v120 = *v121;
    *(_DWORD *)(v114 + 56) = *(_DWORD *)(v115 + 56);
    uint64_t v123 = *(void *)(v115 + 72);
    *(void *)(v114 + 64) = v122;
    *(void *)(v114 + 72) = v123;
    id v124 = v122;
    swift_retain();
  }
  else
  {
    long long v125 = *(_OWORD *)(v115 + 56);
    *uint64_t v120 = *v121;
    *(_OWORD *)(v114 + 56) = v125;
    *(void *)(v114 + 72) = *(void *)(v115 + 72);
  }
  *(unsigned char *)(v114 + 80) = *(unsigned char *)(v115 + 80);
  *(void *)(v47 + v52[21]) = *(void *)(v48 + v52[21]);
  uint64_t v126 = v52[22];
  uint64_t v127 = v47 + v126;
  uint64_t v128 = v48 + v126;
  uint64_t v129 = *(void **)(v48 + v126 + 24);
  swift_bridgeObjectRetain();
  if (v129)
  {
    *(_DWORD *)(v127 + 16) = *(_DWORD *)(v128 + 16);
    uint64_t v130 = *(void *)(v128 + 32);
    uint64_t v131 = *(void *)(v128 + 48);
    uint64_t v132 = *(void *)(v128 + 56);
    *(void *)(v127 + 40) = *(void *)(v128 + 40);
    *(void *)(v127 + 48) = v131;
    *(_OWORD *)uint64_t v127 = *(_OWORD *)v128;
    *(void *)(v127 + 24) = v129;
    *(void *)(v127 + 32) = v130;
    *(void *)(v127 + 56) = v132;
    *(unsigned char *)(v127 + 64) = *(unsigned char *)(v128 + 64);
    id v133 = v129;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v134 = *(_OWORD *)(v128 + 48);
    *(_OWORD *)(v127 + 32) = *(_OWORD *)(v128 + 32);
    *(_OWORD *)(v127 + 48) = v134;
    *(unsigned char *)(v127 + 64) = *(unsigned char *)(v128 + 64);
    long long v135 = *(_OWORD *)(v128 + 16);
    *(_OWORD *)uint64_t v127 = *(_OWORD *)v128;
    *(_OWORD *)(v127 + 16) = v135;
  }
  uint64_t v136 = v52[23];
  long long v137 = (void *)(v47 + v136);
  long long v138 = (void *)(v48 + v136);
  uint64_t v139 = v138[1];
  *long long v137 = *v138;
  v137[1] = v139;
  uint64_t v140 = v138[3];
  v137[2] = v138[2];
  v137[3] = v140;
  *(void *)(v47 + v52[24]) = *(void *)(v48 + v52[24]);
  *(unsigned char *)(v47 + v52[25]) = *(unsigned char *)(v48 + v52[25]);
  uint64_t v141 = v146[16];
  *(void *)(v148 + v146[15]) = *(void *)(v147 + v146[15]);
  *(void *)(v148 + v141) = *(void *)(v147 + v141);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return v148;
}

uint64_t assignWithCopy for DefinitionSession(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)(a1 + v10);
  uint64_t v14 = *(void *)(a2 + v10);
  if (v13)
  {
    if (v14)
    {
      uint64_t v15 = *(void *)(v12 + 8);
      *uint64_t v11 = v14;
      v11[1] = v15;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v14)
  {
    uint64_t v16 = *(void *)(v12 + 8);
    *uint64_t v11 = v14;
    v11[1] = v16;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
LABEL_8:
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  int v20 = *(unsigned __int8 *)(a1 + v17 + 8);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if (v20 == 255)
  {
    if (v21 == 255)
    {
      uint64_t v28 = *(void **)v19;
      *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
      *(void *)uint64_t v18 = v28;
    }
    else
    {
      int v25 = *(void **)v19;
      *(void *)uint64_t v18 = *(void *)v19;
      *(unsigned char *)(v18 + 8) = v21;
      id v26 = v25;
    }
  }
  else if (v21 == 255)
  {
    sub_260DCA874(v18);
    char v27 = *(unsigned char *)(v19 + 8);
    *(void *)uint64_t v18 = *(void *)v19;
    *(unsigned char *)(v18 + 8) = v27;
  }
  else
  {
    uint64_t v22 = *(void **)v19;
    uint64_t v23 = *(void **)v18;
    *(void *)uint64_t v18 = *(void *)v19;
    *(unsigned char *)(v18 + 8) = v21;
    id v24 = v22;
  }
  uint64_t v29 = a3[8];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  int v32 = *(unsigned __int8 *)(a1 + v29 + 8);
  int v33 = *(unsigned __int8 *)(a2 + v29 + 8);
  if (v32 == 255)
  {
    if (v33 == 255)
    {
      id v40 = *(void **)v31;
      *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
      *(void *)uint64_t v30 = v40;
    }
    else
    {
      char v37 = *(void **)v31;
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v33;
      id v38 = v37;
    }
  }
  else if (v33 == 255)
  {
    sub_260DCA874(v30);
    char v39 = *(unsigned char *)(v31 + 8);
    *(void *)uint64_t v30 = *(void *)v31;
    *(unsigned char *)(v30 + 8) = v39;
  }
  else
  {
    uint64_t v34 = *(void **)v31;
    char v35 = *(void **)v30;
    *(void *)uint64_t v30 = *(void *)v31;
    *(unsigned char *)(v30 + 8) = v33;
    id v36 = v34;
  }
  uint64_t v41 = a3[9];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (long long *)(a2 + v41);
  int v44 = ~*(_DWORD *)(a1 + v41 + 8);
  uint64_t v45 = *(unsigned __int8 *)(a2 + v41 + 8);
  if ((_BYTE)v44)
  {
    if (v45 == 255)
    {
      sub_260F492F0(v42);
      long long v48 = *(long long *)((char *)v43 + 25);
      long long v49 = v43[1];
      *(_OWORD *)uint64_t v42 = *v43;
      *(_OWORD *)(v42 + 16) = v49;
      *(_OWORD *)(v42 + 25) = v48;
    }
    else
    {
      id v58 = *(void **)v43;
      id v59 = *(void **)v42;
      *(void *)uint64_t v42 = *(void *)v43;
      *(unsigned char *)(v42 + 8) = v45;
      id v60 = v58;

      uint64_t v61 = (void *)*((void *)v43 + 2);
      char v62 = *((unsigned char *)v43 + 24);
      uint64_t v63 = *(void **)(v42 + 16);
      *(void *)(v42 + 16) = v61;
      *(unsigned char *)(v42 + 24) = v62;
      id v64 = v61;

      v65 = (void *)*((void *)v43 + 4);
      char v66 = *((unsigned char *)v43 + 40);
      unint64_t v67 = *(void **)(v42 + 32);
      *(void *)(v42 + 32) = v65;
      *(unsigned char *)(v42 + 40) = v66;
      id v68 = v65;
    }
  }
  else if (v45 == 255)
  {
    long long v46 = *v43;
    long long v47 = v43[1];
    *(_OWORD *)(v42 + 25) = *(long long *)((char *)v43 + 25);
    *(_OWORD *)uint64_t v42 = v46;
    *(_OWORD *)(v42 + 16) = v47;
  }
  else
  {
    uint64_t v50 = *(void **)v43;
    *(void *)uint64_t v42 = *(void *)v43;
    *(unsigned char *)(v42 + 8) = v45;
    uint64_t v51 = (void *)*((void *)v43 + 2);
    char v52 = *((unsigned char *)v43 + 24);
    *(void *)(v42 + 16) = v51;
    *(unsigned char *)(v42 + 24) = v52;
    uint64_t v53 = (void *)*((void *)v43 + 4);
    char v54 = *((unsigned char *)v43 + 40);
    *(void *)(v42 + 32) = v53;
    *(unsigned char *)(v42 + 40) = v54;
    id v55 = v50;
    id v56 = v51;
    id v57 = v53;
  }
  uint64_t v69 = a3[10];
  uint64_t v70 = *(void **)(a2 + v69);
  uint64_t v71 = *(void **)(a1 + v69);
  *(void *)(a1 + v69) = v70;
  id v72 = v70;

  uint64_t v73 = a3[11];
  uint64_t v74 = a1 + v73;
  uint64_t v75 = a2 + v73;
  *(unsigned char *)uint64_t v74 = *(unsigned char *)v75;
  uint64_t v76 = *(void **)(v75 + 8);
  uint64_t v77 = *(void **)(v74 + 8);
  *(void *)(v74 + 8) = v76;
  id v78 = v76;

  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_retain();
  swift_release();
  v230 = a3;
  uint64_t v231 = a2;
  uint64_t v79 = a3[14];
  uint64_t v232 = a1;
  uint64_t v80 = a1 + v79;
  uint64_t v81 = a2 + v79;
  *(unsigned char *)uint64_t v80 = *(unsigned char *)(a2 + v79);
  *(void *)(v80 + 8) = *(void *)(a2 + v79 + 8);
  *(void *)(v80 + 16) = *(void *)(a2 + v79 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v82 = *(_OWORD *)(v81 + 24);
  *(unsigned char *)(v80 + 40) = *(unsigned char *)(v81 + 40);
  *(_OWORD *)(v80 + 24) = v82;
  *(void *)(v80 + 48) = *(void *)(v81 + 48);
  *(unsigned char *)(v80 + 56) = *(unsigned char *)(v81 + 56);
  *(unsigned char *)(v80 + 57) = *(unsigned char *)(v81 + 57);
  *(unsigned char *)(v80 + 58) = *(unsigned char *)(v81 + 58);
  *(unsigned char *)(v80 + 59) = *(unsigned char *)(v81 + 59);
  *(unsigned char *)(v80 + 60) = *(unsigned char *)(v81 + 60);
  *(unsigned char *)(v80 + 61) = *(unsigned char *)(v81 + 61);
  *(unsigned char *)(v80 + 62) = *(unsigned char *)(v81 + 62);
  *(void *)(v80 + 64) = *(void *)(v81 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v83 = *(void *)(v81 + 72);
  *(unsigned char *)(v80 + 80) = *(unsigned char *)(v81 + 80);
  *(void *)(v80 + 72) = v83;
  id v84 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v85 = v84[8];
  uint64_t v86 = (unsigned char *)(v80 + v85);
  uint64_t v87 = (unsigned char *)(v81 + v85);
  long long v88 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v89 = *((void *)v88 - 1);
  uint64_t v90 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v89 + 48);
  int v91 = v90(v86, 1, v88);
  int v92 = v90(v87, 1, v88);
  if (v91)
  {
    if (!v92)
    {
      uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v94 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v93 - 8) + 16);
      v94(v86, v87, v93);
      v94(&v86[v88[5]], &v87[v88[5]], v93);
      uint64_t v95 = v88[6];
      uint64_t v96 = (uint64_t *)&v86[v95];
      id v97 = (uint64_t *)&v87[v95];
      if (*(void *)&v87[v95 + 16])
      {
        unint64_t v98 = v97[1];
        uint64_t v229 = *v97;
        sub_260DCBD18(*v97, v98);
        uint64_t *v96 = v229;
        v96[1] = v98;
        v96[2] = v97[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v111 = *(_OWORD *)v97;
        v96[2] = v97[2];
        *(_OWORD *)uint64_t v96 = v111;
      }
      v86[v88[7]] = v87[v88[7]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v89 + 56))(v86, 0, 1, v88);
      goto LABEL_46;
    }
LABEL_35:
    uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v86, v87, *(void *)(*(void *)(v99 - 8) + 64));
    goto LABEL_46;
  }
  if (v92)
  {
    sub_260F4B4EC((uint64_t)v86, type metadata accessor for PipelineConfiguration.InputConditioning);
    goto LABEL_35;
  }
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v101 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v100 - 8) + 24);
  v101(v86, v87, v100);
  v101(&v86[v88[5]], &v87[v88[5]], v100);
  uint64_t v102 = v88[6];
  uint64_t v103 = (uint64_t *)&v86[v102];
  id v104 = (uint64_t *)&v87[v102];
  uint64_t v105 = *(void *)&v86[v102 + 16];
  uint64_t v106 = *(void *)&v87[v102 + 16];
  if (v105)
  {
    if (v106)
    {
      uint64_t v108 = *v104;
      unint64_t v107 = v104[1];
      sub_260DCBD18(*v104, v107);
      uint64_t v109 = *v103;
      unint64_t v110 = v103[1];
      uint64_t *v103 = v108;
      v103[1] = v107;
      sub_260DCC110(v109, v110);
      v103[2] = v104[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260DCFC50((uint64_t)v103);
      uint64_t v114 = v104[2];
      *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
      v103[2] = v114;
    }
  }
  else if (v106)
  {
    uint64_t v113 = *v104;
    unint64_t v112 = v104[1];
    sub_260DCBD18(*v104, v112);
    uint64_t *v103 = v113;
    v103[1] = v112;
    v103[2] = v104[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v115 = *(_OWORD *)v104;
    v103[2] = v104[2];
    *(_OWORD *)uint64_t v103 = v115;
  }
  v86[v88[7]] = v87[v88[7]];
LABEL_46:
  uint64_t v116 = v84[9];
  uint64_t v117 = v80 + v116;
  id v118 = (int *)(v81 + v116);
  int v119 = *v118;
  *(unsigned char *)(v117 + 4) = *((unsigned char *)v118 + 4);
  *(_DWORD *)uint64_t v117 = v119;
  uint64_t v120 = v84[10];
  uint64_t v121 = v80 + v120;
  long long v122 = (int *)(v81 + v120);
  int v123 = *v122;
  *(unsigned char *)(v121 + 4) = *((unsigned char *)v122 + 4);
  *(_DWORD *)uint64_t v121 = v123;
  uint64_t v124 = v84[11];
  uint64_t v125 = v80 + v124;
  uint64_t v126 = v81 + v124;
  *(unsigned char *)uint64_t v125 = *(unsigned char *)v126;
  *(unsigned char *)(v125 + 1) = *(unsigned char *)(v126 + 1);
  *(unsigned char *)(v125 + 2) = *(unsigned char *)(v126 + 2);
  *(void *)(v125 + 8) = *(void *)(v126 + 8);
  *(void *)(v125 + 16) = *(void *)(v126 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v127 = v84[12];
  uint64_t v128 = (void *)(v80 + v127);
  uint64_t v129 = (long long *)(v81 + v127);
  uint64_t v130 = *(void **)(v80 + v127);
  uint64_t v131 = *(void **)(v81 + v127);
  if (v130)
  {
    if (v131)
    {
      *uint64_t v128 = v131;
      id v132 = v131;

      v128[1] = *((void *)v129 + 1);
      v128[2] = *((void *)v129 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260DCFCA4((uint64_t)v128);
      uint64_t v134 = *((void *)v129 + 2);
      *(_OWORD *)uint64_t v128 = *v129;
      v128[2] = v134;
    }
  }
  else if (v131)
  {
    *uint64_t v128 = v131;
    v128[1] = *((void *)v129 + 1);
    v128[2] = *((void *)v129 + 2);
    id v133 = v131;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v135 = *v129;
    v128[2] = *((void *)v129 + 2);
    *(_OWORD *)uint64_t v128 = v135;
  }
  uint64_t v136 = v84[13];
  uint64_t v137 = v80 + v136;
  long long v138 = (long long *)(v81 + v136);
  long long v139 = *v138;
  long long v140 = v138[1];
  *(unsigned char *)(v137 + 32) = *((unsigned char *)v138 + 32);
  *(_OWORD *)uint64_t v137 = v139;
  *(_OWORD *)(v137 + 16) = v140;
  uint64_t v141 = v84[14];
  uint64_t v142 = v80 + v141;
  uint64_t v143 = (uint64_t *)(v81 + v141);
  uint64_t v144 = *v143;
  *(unsigned char *)(v142 + 8) = *((unsigned char *)v143 + 8);
  *(void *)uint64_t v142 = v144;
  *(void *)(v80 + v84[15]) = *(void *)(v81 + v84[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v80 + v84[16]) = *(void *)(v81 + v84[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v145 = v84[17];
  uint64_t v146 = v80 + v145;
  uint64_t v147 = (long long *)(v81 + v145);
  uint64_t v148 = *(void **)(v80 + v145 + 24);
  uint64_t v149 = *(void *)(v81 + v145 + 24);
  if (v148)
  {
    if (v149)
    {
      *(void *)uint64_t v146 = *(void *)v147;
      *(void *)(v146 + 8) = *((void *)v147 + 1);
      *(_DWORD *)(v146 + 16) = *((_DWORD *)v147 + 4);
      v150 = (void *)*((void *)v147 + 3);
      *(void *)(v146 + 24) = v150;
      id v151 = v150;

      *(void *)(v146 + 32) = *((void *)v147 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_260DCFCF8(v146);
      uint64_t v155 = *((void *)v147 + 4);
      long long v156 = v147[1];
      *(_OWORD *)uint64_t v146 = *v147;
      *(_OWORD *)(v146 + 16) = v156;
      *(void *)(v146 + 32) = v155;
    }
  }
  else
  {
    long long v152 = *v147;
    if (v149)
    {
      *(_DWORD *)(v146 + 16) = *((_DWORD *)v147 + 4);
      *(_OWORD *)uint64_t v146 = v152;
      v153 = (void *)*((void *)v147 + 3);
      *(void *)(v146 + 24) = v153;
      *(void *)(v146 + 32) = *((void *)v147 + 4);
      id v154 = v153;
      swift_retain();
    }
    else
    {
      long long v157 = v147[1];
      *(void *)(v146 + 32) = *((void *)v147 + 4);
      *(_OWORD *)uint64_t v146 = v152;
      *(_OWORD *)(v146 + 16) = v157;
    }
  }
  uint64_t v158 = v84[18];
  uint64_t v159 = v80 + v158;
  v160 = (long long *)(v81 + v158);
  v161 = *(void **)(v80 + v158 + 24);
  uint64_t v162 = *(void *)(v81 + v158 + 24);
  if (v161)
  {
    if (v162)
    {
      *(void *)uint64_t v159 = *(void *)v160;
      *(void *)(v159 + 8) = *((void *)v160 + 1);
      *(_DWORD *)(v159 + 16) = *((_DWORD *)v160 + 4);
      v163 = (void *)*((void *)v160 + 3);
      *(void *)(v159 + 24) = v163;
      id v164 = v163;

      *(void *)(v159 + 32) = *((void *)v160 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_260DCFCF8(v159);
      uint64_t v168 = *((void *)v160 + 4);
      long long v169 = v160[1];
      *(_OWORD *)uint64_t v159 = *v160;
      *(_OWORD *)(v159 + 16) = v169;
      *(void *)(v159 + 32) = v168;
    }
  }
  else
  {
    long long v165 = *v160;
    if (v162)
    {
      *(_DWORD *)(v159 + 16) = *((_DWORD *)v160 + 4);
      *(_OWORD *)uint64_t v159 = v165;
      v166 = (void *)*((void *)v160 + 3);
      *(void *)(v159 + 24) = v166;
      *(void *)(v159 + 32) = *((void *)v160 + 4);
      id v167 = v166;
      swift_retain();
    }
    else
    {
      long long v170 = v160[1];
      *(void *)(v159 + 32) = *((void *)v160 + 4);
      *(_OWORD *)uint64_t v159 = v165;
      *(_OWORD *)(v159 + 16) = v170;
    }
  }
  uint64_t v171 = v84[19];
  uint64_t v172 = v80 + v171;
  v173 = (long long *)(v81 + v171);
  v174 = *(void **)(v80 + v171 + 24);
  uint64_t v175 = *(void *)(v81 + v171 + 24);
  if (v174)
  {
    if (v175)
    {
      *(void *)uint64_t v172 = *(void *)v173;
      *(void *)(v172 + 8) = *((void *)v173 + 1);
      *(_DWORD *)(v172 + 16) = *((_DWORD *)v173 + 4);
      v176 = (void *)*((void *)v173 + 3);
      *(void *)(v172 + 24) = v176;
      id v177 = v176;

      *(void *)(v172 + 32) = *((void *)v173 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_260DCFCF8(v172);
      uint64_t v181 = *((void *)v173 + 4);
      long long v182 = v173[1];
      *(_OWORD *)uint64_t v172 = *v173;
      *(_OWORD *)(v172 + 16) = v182;
      *(void *)(v172 + 32) = v181;
    }
  }
  else
  {
    long long v178 = *v173;
    if (v175)
    {
      *(_DWORD *)(v172 + 16) = *((_DWORD *)v173 + 4);
      *(_OWORD *)uint64_t v172 = v178;
      v179 = (void *)*((void *)v173 + 3);
      *(void *)(v172 + 24) = v179;
      *(void *)(v172 + 32) = *((void *)v173 + 4);
      id v180 = v179;
      swift_retain();
    }
    else
    {
      long long v183 = v173[1];
      *(void *)(v172 + 32) = *((void *)v173 + 4);
      *(_OWORD *)uint64_t v172 = v178;
      *(_OWORD *)(v172 + 16) = v183;
    }
  }
  uint64_t v184 = v84[20];
  uint64_t v185 = v80 + v184;
  v186 = (long long *)(v81 + v184);
  v187 = *(void **)(v80 + v184 + 24);
  uint64_t v188 = *(void *)(v81 + v184 + 24);
  if (v187)
  {
    if (v188)
    {
      *(void *)uint64_t v185 = *(void *)v186;
      *(void *)(v185 + 8) = *((void *)v186 + 1);
      *(_DWORD *)(v185 + 16) = *((_DWORD *)v186 + 4);
      v189 = (void *)*((void *)v186 + 3);
      *(void *)(v185 + 24) = v189;
      id v190 = v189;

      *(void *)(v185 + 32) = *((void *)v186 + 4);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_260DCFCF8(v185);
      uint64_t v194 = *((void *)v186 + 4);
      long long v195 = v186[1];
      *(_OWORD *)uint64_t v185 = *v186;
      *(_OWORD *)(v185 + 16) = v195;
      *(void *)(v185 + 32) = v194;
    }
  }
  else
  {
    long long v191 = *v186;
    if (v188)
    {
      *(_DWORD *)(v185 + 16) = *((_DWORD *)v186 + 4);
      *(_OWORD *)uint64_t v185 = v191;
      v192 = (void *)*((void *)v186 + 3);
      *(void *)(v185 + 24) = v192;
      *(void *)(v185 + 32) = *((void *)v186 + 4);
      id v193 = v192;
      swift_retain();
    }
    else
    {
      long long v196 = v186[1];
      *(void *)(v185 + 32) = *((void *)v186 + 4);
      *(_OWORD *)uint64_t v185 = v191;
      *(_OWORD *)(v185 + 16) = v196;
    }
  }
  v197 = (_OWORD *)(v185 + 40);
  v198 = (long long *)((char *)v186 + 40);
  v199 = *(void **)(v185 + 64);
  uint64_t v200 = *((void *)v186 + 8);
  if (v199)
  {
    if (v200)
    {
      *(void *)(v185 + 40) = *((void *)v186 + 5);
      *(void *)(v185 + 48) = *((void *)v186 + 6);
      *(_DWORD *)(v185 + 56) = *((_DWORD *)v186 + 14);
      v201 = (void *)*((void *)v186 + 8);
      *(void *)(v185 + 64) = v201;
      id v202 = v201;

      *(void *)(v185 + 72) = *((void *)v186 + 9);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_260DCFCF8(v185 + 40);
      uint64_t v206 = *((void *)v186 + 9);
      long long v207 = *(long long *)((char *)v186 + 56);
      _OWORD *v197 = *v198;
      *(_OWORD *)(v185 + 56) = v207;
      *(void *)(v185 + 72) = v206;
    }
  }
  else
  {
    long long v203 = *v198;
    if (v200)
    {
      *(_DWORD *)(v185 + 56) = *((_DWORD *)v186 + 14);
      _OWORD *v197 = v203;
      v204 = (void *)*((void *)v186 + 8);
      *(void *)(v185 + 64) = v204;
      *(void *)(v185 + 72) = *((void *)v186 + 9);
      id v205 = v204;
      swift_retain();
    }
    else
    {
      long long v208 = *(long long *)((char *)v186 + 56);
      *(void *)(v185 + 72) = *((void *)v186 + 9);
      _OWORD *v197 = v203;
      *(_OWORD *)(v185 + 56) = v208;
    }
  }
  *(unsigned char *)(v185 + 80) = *((unsigned char *)v186 + 80);
  *(void *)(v80 + v84[21]) = *(void *)(v81 + v84[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v209 = v84[22];
  uint64_t v210 = v80 + v209;
  v211 = (long long *)(v81 + v209);
  v212 = *(void **)(v80 + v209 + 24);
  uint64_t v213 = *(void *)(v81 + v209 + 24);
  if (v212)
  {
    if (v213)
    {
      *(void *)uint64_t v210 = *(void *)v211;
      *(void *)(v210 + 8) = *((void *)v211 + 1);
      *(_DWORD *)(v210 + 16) = *((_DWORD *)v211 + 4);
      v214 = (void *)*((void *)v211 + 3);
      *(void *)(v210 + 24) = v214;
      id v215 = v214;

      *(void *)(v210 + 32) = *((void *)v211 + 4);
      swift_retain();
      swift_release();
      *(void *)(v210 + 40) = *((void *)v211 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v210 + 48) = *((void *)v211 + 6);
      *(void *)(v210 + 56) = *((void *)v211 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v210 + 64) = *((unsigned char *)v211 + 64);
    }
    else
    {
      sub_260DCFD4C(v210);
      *(_OWORD *)uint64_t v210 = *v211;
      long long v220 = v211[2];
      long long v219 = v211[3];
      long long v221 = v211[1];
      *(unsigned char *)(v210 + 64) = *((unsigned char *)v211 + 64);
      *(_OWORD *)(v210 + 32) = v220;
      *(_OWORD *)(v210 + 48) = v219;
      *(_OWORD *)(v210 + 16) = v221;
    }
  }
  else if (v213)
  {
    long long v216 = *v211;
    *(_DWORD *)(v210 + 16) = *((_DWORD *)v211 + 4);
    *(_OWORD *)uint64_t v210 = v216;
    v217 = (void *)*((void *)v211 + 3);
    *(void *)(v210 + 24) = v217;
    *(void *)(v210 + 32) = *((void *)v211 + 4);
    *(void *)(v210 + 40) = *((void *)v211 + 5);
    *(void *)(v210 + 48) = *((void *)v211 + 6);
    *(void *)(v210 + 56) = *((void *)v211 + 7);
    *(unsigned char *)(v210 + 64) = *((unsigned char *)v211 + 64);
    id v218 = v217;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v210 = *v211;
    long long v222 = v211[1];
    long long v223 = v211[2];
    long long v224 = v211[3];
    *(unsigned char *)(v210 + 64) = *((unsigned char *)v211 + 64);
    *(_OWORD *)(v210 + 32) = v223;
    *(_OWORD *)(v210 + 48) = v224;
    *(_OWORD *)(v210 + 16) = v222;
  }
  uint64_t v225 = v84[23];
  v226 = (void *)(v80 + v225);
  uint64_t v227 = v81 + v225;
  void *v226 = *(void *)(v81 + v225);
  v226[1] = *(void *)(v81 + v225 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v226[2] = *(void *)(v227 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v226[3] = *(void *)(v227 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v80 + v84[24]) = *(void *)(v81 + v84[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v80 + v84[25]) = *(unsigned char *)(v81 + v84[25]);
  *(void *)(v232 + v230[15]) = *(void *)(v231 + v230[15]);
  swift_retain();
  swift_release();
  *(void *)(v232 + v230[16]) = *(void *)(v231 + v230[16]);
  swift_retain();
  swift_release();
  return v232;
}

uint64_t sub_260F492F0(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for DefinitionSession(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_DWORD *)(v9 + 16) = *(_DWORD *)(v10 + 16);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (uint64_t *)(a2 + v8);
  uint64_t v13 = *v12;
  if (*v12)
  {
    uint64_t v14 = v12[1];
    *uint64_t v11 = v13;
    v11[1] = v14;
  }
  else
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a1 + v16;
  uint64_t v20 = a2 + v16;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a3[9];
  uint64_t v22 = a3[10];
  uint64_t v23 = (_OWORD *)(a1 + v21);
  id v24 = (_OWORD *)(a2 + v21);
  long long v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  *(_OWORD *)((char *)v23 + 25) = *(_OWORD *)((char *)v24 + 25);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  uint64_t v26 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);
  uint64_t v27 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(unsigned char *)uint64_t v28 = *(unsigned char *)(a2 + v27);
  *(_OWORD *)(v28 + 8) = *(_OWORD *)(a2 + v27 + 8);
  *(_OWORD *)(v28 + 24) = *(_OWORD *)(a2 + v27 + 24);
  *(_OWORD *)(v28 + 40) = *(_OWORD *)(a2 + v27 + 40);
  *(void *)(v28 + 55) = *(void *)(a2 + v27 + 55);
  uint64_t v30 = *(void *)(a2 + v27 + 64);
  uint64_t v31 = *(void *)(a2 + v27 + 72);
  *(void *)(v28 + 64) = v30;
  *(void *)(v28 + 72) = v31;
  *(unsigned char *)(v28 + 80) = *(unsigned char *)(v29 + 80);
  int v32 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v33 = v32[8];
  uint64_t v34 = (char *)(v28 + v33);
  char v35 = (char *)(v29 + v33);
  id v36 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v37 = *((void *)v36 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    int v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32);
    v91(v34, v35, v90);
    v91(&v34[v36[5]], &v35[v36[5]], v90);
    uint64_t v39 = v36[6];
    id v40 = &v34[v39];
    uint64_t v41 = &v35[v39];
    *(_OWORD *)id v40 = *(_OWORD *)v41;
    *((void *)v40 + 2) = *((void *)v41 + 2);
    v34[v36[7]] = v35[v36[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v37 + 56))(v34, 0, 1, v36);
  }
  uint64_t v42 = v32[9];
  uint64_t v43 = v28 + v42;
  uint64_t v44 = v29 + v42;
  *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
  *(unsigned char *)(v43 + 4) = *(unsigned char *)(v44 + 4);
  uint64_t v45 = v32[10];
  uint64_t v46 = v28 + v45;
  uint64_t v47 = v29 + v45;
  *(unsigned char *)(v46 + 4) = *(unsigned char *)(v47 + 4);
  *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
  uint64_t v48 = v32[11];
  uint64_t v49 = v28 + v48;
  uint64_t v50 = v29 + v48;
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
  *(void *)(v49 + 16) = *(void *)(v50 + 16);
  uint64_t v51 = v32[12];
  uint64_t v52 = v28 + v51;
  uint64_t v53 = v29 + v51;
  *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
  *(void *)(v52 + 16) = *(void *)(v53 + 16);
  uint64_t v54 = v32[13];
  uint64_t v55 = v28 + v54;
  uint64_t v56 = v29 + v54;
  long long v57 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  *(_OWORD *)(v55 + 16) = v57;
  *(unsigned char *)(v55 + 32) = *(unsigned char *)(v56 + 32);
  uint64_t v58 = v32[14];
  uint64_t v59 = v28 + v58;
  uint64_t v60 = v29 + v58;
  *(void *)uint64_t v59 = *(void *)v60;
  *(unsigned char *)(v59 + 8) = *(unsigned char *)(v60 + 8);
  *(void *)(v28 + v32[15]) = *(void *)(v29 + v32[15]);
  *(void *)(v28 + v32[16]) = *(void *)(v29 + v32[16]);
  uint64_t v61 = v32[17];
  uint64_t v62 = v28 + v61;
  uint64_t v63 = v29 + v61;
  long long v64 = *(_OWORD *)(v63 + 16);
  *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
  *(_OWORD *)(v62 + 16) = v64;
  *(void *)(v62 + 32) = *(void *)(v63 + 32);
  uint64_t v65 = v32[18];
  uint64_t v66 = v28 + v65;
  uint64_t v67 = v29 + v65;
  long long v68 = *(_OWORD *)(v67 + 16);
  *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
  *(_OWORD *)(v66 + 16) = v68;
  *(void *)(v66 + 32) = *(void *)(v67 + 32);
  uint64_t v69 = v32[19];
  uint64_t v70 = v28 + v69;
  uint64_t v71 = v29 + v69;
  *(void *)(v70 + 32) = *(void *)(v71 + 32);
  long long v72 = *(_OWORD *)(v71 + 16);
  *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
  *(_OWORD *)(v70 + 16) = v72;
  uint64_t v73 = v32[20];
  uint64_t v74 = v28 + v73;
  uint64_t v75 = v29 + v73;
  long long v76 = *(_OWORD *)(v75 + 16);
  *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
  *(_OWORD *)(v74 + 16) = v76;
  *(unsigned char *)(v74 + 80) = *(unsigned char *)(v75 + 80);
  long long v77 = *(_OWORD *)(v75 + 64);
  long long v78 = *(_OWORD *)(v75 + 32);
  *(_OWORD *)(v74 + 48) = *(_OWORD *)(v75 + 48);
  *(_OWORD *)(v74 + 64) = v77;
  *(_OWORD *)(v74 + 32) = v78;
  *(void *)(v28 + v32[21]) = *(void *)(v29 + v32[21]);
  uint64_t v79 = v32[22];
  uint64_t v80 = v28 + v79;
  uint64_t v81 = v29 + v79;
  long long v82 = *(_OWORD *)(v81 + 48);
  *(_OWORD *)(v80 + 32) = *(_OWORD *)(v81 + 32);
  *(_OWORD *)(v80 + 48) = v82;
  *(unsigned char *)(v80 + 64) = *(unsigned char *)(v81 + 64);
  long long v83 = *(_OWORD *)(v81 + 16);
  *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
  *(_OWORD *)(v80 + 16) = v83;
  uint64_t v84 = v32[23];
  uint64_t v85 = (_OWORD *)(v28 + v84);
  uint64_t v86 = (_OWORD *)(v29 + v84);
  long long v87 = v86[1];
  *uint64_t v85 = *v86;
  v85[1] = v87;
  *(void *)(v28 + v32[24]) = *(void *)(v29 + v32[24]);
  *(unsigned char *)(v28 + v32[25]) = *(unsigned char *)(v29 + v32[25]);
  uint64_t v88 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(void *)(a1 + v88) = *(void *)(a2 + v88);
  return a1;
}

uint64_t assignWithTake for DefinitionSession(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a1 + v11);
  uint64_t v15 = *(void *)(a2 + v11);
  if (v14)
  {
    if (v15)
    {
      uint64_t v16 = *(void *)(v13 + 8);
      *uint64_t v12 = v15;
      v12[1] = v16;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v15)
  {
    uint64_t v17 = *(void *)(v13 + 8);
    *uint64_t v12 = v15;
    v12[1] = v17;
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
LABEL_8:
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  if (*(unsigned __int8 *)(a1 + v18 + 8) != 255)
  {
    int v21 = *(unsigned __int8 *)(v20 + 8);
    if (v21 != 255)
    {
      uint64_t v22 = *(void **)v19;
      *(void *)uint64_t v19 = *(void *)v20;
      *(unsigned char *)(v19 + 8) = v21;

      goto LABEL_13;
    }
    sub_260DCA874(v19);
  }
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
LABEL_13:
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  if (*(unsigned __int8 *)(a1 + v23 + 8) != 255)
  {
    int v26 = *(unsigned __int8 *)(v25 + 8);
    if (v26 != 255)
    {
      uint64_t v27 = *(void **)v24;
      *(void *)uint64_t v24 = *(void *)v25;
      *(unsigned char *)(v24 + 8) = v26;

      goto LABEL_18;
    }
    sub_260DCA874(v24);
  }
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
LABEL_18:
  uint64_t v28 = a3[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  if (*(unsigned char *)(a1 + v28 + 8) == 0xFF)
  {
LABEL_21:
    long long v32 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v32;
    *(_OWORD *)(v29 + 25) = *(_OWORD *)(v30 + 25);
    goto LABEL_23;
  }
  uint64_t v31 = *(unsigned __int8 *)(v30 + 8);
  if (v31 == 255)
  {
    sub_260F492F0(v29);
    goto LABEL_21;
  }
  uint64_t v33 = *(void **)v29;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = v31;

  char v34 = *(unsigned char *)(v30 + 24);
  char v35 = *(void **)(v29 + 16);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  *(unsigned char *)(v29 + 24) = v34;

  char v36 = *(unsigned char *)(v30 + 40);
  uint64_t v37 = *(void **)(v29 + 32);
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  *(unsigned char *)(v29 + 40) = v36;

LABEL_23:
  uint64_t v38 = a3[10];
  uint64_t v39 = *(void **)(a1 + v38);
  *(void *)(a1 + v38) = *(void *)(a2 + v38);

  uint64_t v40 = a3[11];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  *(unsigned char *)uint64_t v41 = *(unsigned char *)v42;
  uint64_t v43 = *(void **)(v41 + 8);
  *(void *)(v41 + 8) = *(void *)(v42 + 8);

  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_release();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_release();
  uint64_t v134 = a1;
  long long v135 = a3;
  uint64_t v44 = a3[14];
  uint64_t v45 = a1 + v44;
  uint64_t v136 = a2;
  uint64_t v46 = a2 + v44;
  *(unsigned char *)uint64_t v45 = *(unsigned char *)(a2 + v44);
  uint64_t v47 = *(void *)(a2 + v44 + 16);
  *(void *)(v45 + 8) = *(void *)(a2 + v44 + 8);
  *(void *)(v45 + 16) = v47;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v45 + 24) = *(_OWORD *)(v46 + 24);
  *(unsigned char *)(v45 + 40) = *(unsigned char *)(v46 + 40);
  *(void *)(v45 + 48) = *(void *)(v46 + 48);
  *(unsigned char *)(v45 + 56) = *(unsigned char *)(v46 + 56);
  *(unsigned char *)(v45 + 57) = *(unsigned char *)(v46 + 57);
  *(unsigned char *)(v45 + 58) = *(unsigned char *)(v46 + 58);
  *(unsigned char *)(v45 + 59) = *(unsigned char *)(v46 + 59);
  *(unsigned char *)(v45 + 60) = *(unsigned char *)(v46 + 60);
  *(unsigned char *)(v45 + 61) = *(unsigned char *)(v46 + 61);
  *(unsigned char *)(v45 + 62) = *(unsigned char *)(v46 + 62);
  *(void *)(v45 + 64) = *(void *)(v46 + 64);
  swift_bridgeObjectRelease();
  *(void *)(v45 + 72) = *(void *)(v46 + 72);
  *(unsigned char *)(v45 + 80) = *(unsigned char *)(v46 + 80);
  uint64_t v48 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v49 = v48[8];
  uint64_t v50 = (unsigned char *)(v45 + v49);
  uint64_t v51 = (unsigned char *)(v46 + v49);
  uint64_t v52 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v53 = *((void *)v52 - 1);
  uint64_t v54 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v53 + 48);
  int v55 = v54(v50, 1, v52);
  int v56 = v54(v51, 1, v52);
  if (v55)
  {
    if (!v56)
    {
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v58 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v57 - 8) + 32);
      v58(v50, v51, v57);
      v58(&v50[v52[5]], &v51[v52[5]], v57);
      uint64_t v59 = v52[6];
      uint64_t v60 = &v50[v59];
      uint64_t v61 = &v51[v59];
      *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
      *((void *)v60 + 2) = *((void *)v61 + 2);
      v50[v52[7]] = v51[v52[7]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v53 + 56))(v50, 0, 1, v52);
LABEL_29:
      uint64_t v63 = v134;
      goto LABEL_30;
    }
LABEL_28:
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v50, v51, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_29;
  }
  if (v56)
  {
    sub_260F4B4EC((uint64_t)v50, type metadata accessor for PipelineConfiguration.InputConditioning);
    goto LABEL_28;
  }
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v128 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v127 - 8) + 40);
  v128(v50, v51, v127);
  v128(&v50[v52[5]], &v51[v52[5]], v127);
  uint64_t v129 = v52[6];
  uint64_t v130 = (uint64_t)&v50[v129];
  uint64_t v131 = &v51[v129];
  if (!*(void *)&v50[v129 + 16]) {
    goto LABEL_70;
  }
  if (!*((void *)v131 + 2))
  {
    sub_260DCFC50(v130);
LABEL_70:
    *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
    *(void *)(v130 + 16) = *((void *)v131 + 2);
    goto LABEL_71;
  }
  uint64_t v132 = *(void *)v130;
  unint64_t v133 = *(void *)(v130 + 8);
  *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
  sub_260DCC110(v132, v133);
  *(void *)(v130 + 16) = *((void *)v131 + 2);
  swift_bridgeObjectRelease();
LABEL_71:
  uint64_t v63 = v134;
  v50[v52[7]] = v51[v52[7]];
LABEL_30:
  uint64_t v64 = v48[9];
  uint64_t v65 = v45 + v64;
  uint64_t v66 = v46 + v64;
  *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
  *(unsigned char *)(v65 + 4) = *(unsigned char *)(v66 + 4);
  uint64_t v67 = v48[10];
  uint64_t v68 = v45 + v67;
  uint64_t v69 = v46 + v67;
  *(unsigned char *)(v68 + 4) = *(unsigned char *)(v69 + 4);
  *(_DWORD *)uint64_t v68 = *(_DWORD *)v69;
  uint64_t v70 = v48[11];
  uint64_t v71 = v45 + v70;
  uint64_t v72 = v46 + v70;
  *(_WORD *)uint64_t v71 = *(_WORD *)v72;
  *(unsigned char *)(v71 + 2) = *(unsigned char *)(v72 + 2);
  uint64_t v74 = *(void *)(v72 + 8);
  uint64_t v73 = *(void *)(v72 + 16);
  *(void *)(v71 + 8) = v74;
  *(void *)(v71 + 16) = v73;
  swift_bridgeObjectRelease();
  uint64_t v75 = v48[12];
  long long v76 = (void *)(v45 + v75);
  long long v77 = (void *)(v46 + v75);
  long long v78 = *(void **)(v45 + v75);
  if (v78)
  {
    if (*v77)
    {
      void *v76 = *v77;

      uint64_t v79 = v77[2];
      v76[1] = v77[1];
      v76[2] = v79;
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    sub_260DCFCA4((uint64_t)v76);
  }
  *(_OWORD *)long long v76 = *(_OWORD *)v77;
  v76[2] = v77[2];
LABEL_35:
  uint64_t v80 = v48[13];
  uint64_t v81 = v45 + v80;
  uint64_t v82 = v46 + v80;
  long long v83 = *(_OWORD *)(v82 + 16);
  *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
  *(_OWORD *)(v81 + 16) = v83;
  *(unsigned char *)(v81 + 32) = *(unsigned char *)(v82 + 32);
  uint64_t v84 = v48[14];
  uint64_t v85 = v45 + v84;
  uint64_t v86 = v46 + v84;
  *(unsigned char *)(v85 + 8) = *(unsigned char *)(v86 + 8);
  *(void *)uint64_t v85 = *(void *)v86;
  *(void *)(v45 + v48[15]) = *(void *)(v46 + v48[15]);
  swift_bridgeObjectRelease();
  *(void *)(v45 + v48[16]) = *(void *)(v46 + v48[16]);
  swift_bridgeObjectRelease();
  uint64_t v87 = v48[17];
  uint64_t v88 = v45 + v87;
  uint64_t v89 = v46 + v87;
  uint64_t v90 = *(void **)(v45 + v87 + 24);
  if (v90)
  {
    uint64_t v91 = *(void *)(v89 + 24);
    if (v91)
    {
      *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
      *(_DWORD *)(v88 + 16) = *(_DWORD *)(v89 + 16);
      *(void *)(v88 + 24) = v91;

      *(void *)(v88 + 32) = *(void *)(v89 + 32);
      swift_release();
      goto LABEL_40;
    }
    sub_260DCFCF8(v88);
  }
  long long v92 = *(_OWORD *)(v89 + 16);
  *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
  *(_OWORD *)(v88 + 16) = v92;
  *(void *)(v88 + 32) = *(void *)(v89 + 32);
LABEL_40:
  uint64_t v93 = v48[18];
  uint64_t v94 = v45 + v93;
  uint64_t v95 = v46 + v93;
  uint64_t v96 = *(void **)(v45 + v93 + 24);
  if (v96)
  {
    uint64_t v97 = *(void *)(v95 + 24);
    if (v97)
    {
      *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
      *(_DWORD *)(v94 + 16) = *(_DWORD *)(v95 + 16);
      *(void *)(v94 + 24) = v97;

      *(void *)(v94 + 32) = *(void *)(v95 + 32);
      swift_release();
      goto LABEL_45;
    }
    sub_260DCFCF8(v94);
  }
  long long v98 = *(_OWORD *)(v95 + 16);
  *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
  *(_OWORD *)(v94 + 16) = v98;
  *(void *)(v94 + 32) = *(void *)(v95 + 32);
LABEL_45:
  uint64_t v99 = v48[19];
  uint64_t v100 = v45 + v99;
  uint64_t v101 = v46 + v99;
  uint64_t v102 = *(void **)(v45 + v99 + 24);
  if (v102)
  {
    uint64_t v103 = *(void *)(v101 + 24);
    if (v103)
    {
      *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
      *(_DWORD *)(v100 + 16) = *(_DWORD *)(v101 + 16);
      *(void *)(v100 + 24) = v103;

      *(void *)(v100 + 32) = *(void *)(v101 + 32);
      swift_release();
      goto LABEL_50;
    }
    sub_260DCFCF8(v100);
  }
  long long v104 = *(_OWORD *)(v101 + 16);
  *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
  *(_OWORD *)(v100 + 16) = v104;
  *(void *)(v100 + 32) = *(void *)(v101 + 32);
LABEL_50:
  uint64_t v105 = v48[20];
  uint64_t v106 = v45 + v105;
  uint64_t v107 = v46 + v105;
  uint64_t v108 = *(void **)(v45 + v105 + 24);
  if (v108)
  {
    uint64_t v109 = *(void *)(v107 + 24);
    if (v109)
    {
      *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
      *(_DWORD *)(v106 + 16) = *(_DWORD *)(v107 + 16);
      *(void *)(v106 + 24) = v109;

      *(void *)(v106 + 32) = *(void *)(v107 + 32);
      swift_release();
      goto LABEL_55;
    }
    sub_260DCFCF8(v106);
  }
  long long v110 = *(_OWORD *)(v107 + 16);
  *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
  *(_OWORD *)(v106 + 16) = v110;
  *(void *)(v106 + 32) = *(void *)(v107 + 32);
LABEL_55:
  long long v111 = *(void **)(v106 + 64);
  if (v111)
  {
    uint64_t v112 = *(void *)(v107 + 64);
    if (v112)
    {
      *(_OWORD *)(v106 + 40) = *(_OWORD *)(v107 + 40);
      *(_DWORD *)(v106 + 56) = *(_DWORD *)(v107 + 56);
      *(void *)(v106 + 64) = v112;

      *(void *)(v106 + 72) = *(void *)(v107 + 72);
      swift_release();
      goto LABEL_60;
    }
    sub_260DCFCF8(v106 + 40);
  }
  long long v113 = *(_OWORD *)(v107 + 56);
  *(_OWORD *)(v106 + 40) = *(_OWORD *)(v107 + 40);
  *(_OWORD *)(v106 + 56) = v113;
  *(void *)(v106 + 72) = *(void *)(v107 + 72);
LABEL_60:
  *(unsigned char *)(v106 + 80) = *(unsigned char *)(v107 + 80);
  *(void *)(v45 + v48[21]) = *(void *)(v46 + v48[21]);
  swift_bridgeObjectRelease();
  uint64_t v114 = v48[22];
  uint64_t v115 = v45 + v114;
  uint64_t v116 = v46 + v114;
  uint64_t v117 = *(void **)(v45 + v114 + 24);
  if (!v117)
  {
LABEL_64:
    long long v120 = *(_OWORD *)(v116 + 48);
    *(_OWORD *)(v115 + 32) = *(_OWORD *)(v116 + 32);
    *(_OWORD *)(v115 + 48) = v120;
    *(unsigned char *)(v115 + 64) = *(unsigned char *)(v116 + 64);
    long long v121 = *(_OWORD *)(v116 + 16);
    *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
    *(_OWORD *)(v115 + 16) = v121;
    goto LABEL_65;
  }
  uint64_t v118 = *(void *)(v116 + 24);
  if (!v118)
  {
    sub_260DCFD4C(v115);
    goto LABEL_64;
  }
  *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
  *(_DWORD *)(v115 + 16) = *(_DWORD *)(v116 + 16);
  *(void *)(v115 + 24) = v118;

  *(void *)(v115 + 32) = *(void *)(v116 + 32);
  swift_release();
  *(void *)(v115 + 40) = *(void *)(v116 + 40);
  swift_bridgeObjectRelease();
  uint64_t v119 = *(void *)(v116 + 56);
  *(void *)(v115 + 48) = *(void *)(v116 + 48);
  *(void *)(v115 + 56) = v119;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v115 + 64) = *(unsigned char *)(v116 + 64);
LABEL_65:
  uint64_t v122 = v48[23];
  int v123 = (void *)(v45 + v122);
  uint64_t v124 = v46 + v122;
  uint64_t v125 = *(void *)(v46 + v122 + 8);
  void *v123 = *(void *)(v46 + v122);
  v123[1] = v125;
  swift_bridgeObjectRelease();
  v123[2] = *(void *)(v124 + 16);
  swift_bridgeObjectRelease();
  v123[3] = *(void *)(v124 + 24);
  swift_bridgeObjectRelease();
  *(void *)(v45 + v48[24]) = *(void *)(v46 + v48[24]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v45 + v48[25]) = *(unsigned char *)(v46 + v48[25]);
  *(void *)(v63 + v135[15]) = *(void *)(v136 + v135[15]);
  swift_release();
  *(void *)(v63 + v135[16]) = *(void *)(v136 + v135[16]);
  swift_release();
  return v63;
}

uint64_t getEnumTagSinglePayload for DefinitionSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260F4A170);
}

uint64_t sub_260F4A170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_260FE3110();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for GenerationRecipe(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 56);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for DefinitionSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260F4A2B0);
}

uint64_t sub_260F4A2B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_260FE3110();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for GenerationRecipe(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 56);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_260F4A3DC()
{
  uint64_t result = sub_260FE3110();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for GenerationRecipe(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DefinitionSession.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DefinitionSession.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_260F4A59C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_260F4A5B4(void *result, int a2)
{
  if (a2 < 0)
  {
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DefinitionSession.Error()
{
  return &type metadata for DefinitionSession.Error;
}

ValueMetadata *type metadata accessor for DefinitionSession.DrawOnImageConfiguration()
{
  return &type metadata for DefinitionSession.DrawOnImageConfiguration;
}

unsigned char *storeEnumTagSinglePayload for DefinitionSession.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F4A6C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DefinitionSession.CodingKeys()
{
  return &type metadata for DefinitionSession.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DefinitionSession.Error.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F4A7C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DefinitionSession.Error.CodingKeys()
{
  return &type metadata for DefinitionSession.Error.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DefinitionSession.Error.ImageAssignmentErrorCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x260F4A898);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DefinitionSession.Error.ImageAssignmentErrorCodingKeys()
{
  return &type metadata for DefinitionSession.Error.ImageAssignmentErrorCodingKeys;
}

ValueMetadata *type metadata accessor for DefinitionSession.Error.ConditioningImageFaceTooSmallCodingKeys()
{
  return &type metadata for DefinitionSession.Error.ConditioningImageFaceTooSmallCodingKeys;
}

unint64_t sub_260F4A8E4()
{
  unint64_t result = qword_26A8EA558;
  if (!qword_26A8EA558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA558);
  }
  return result;
}

unint64_t sub_260F4A93C()
{
  unint64_t result = qword_26A8EA560;
  if (!qword_26A8EA560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA560);
  }
  return result;
}

unint64_t sub_260F4A994()
{
  unint64_t result = qword_26A8EA568;
  if (!qword_26A8EA568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA568);
  }
  return result;
}

unint64_t sub_260F4A9EC()
{
  unint64_t result = qword_26A8EA570;
  if (!qword_26A8EA570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA570);
  }
  return result;
}

unint64_t sub_260F4AA44()
{
  unint64_t result = qword_26A8EA578;
  if (!qword_26A8EA578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA578);
  }
  return result;
}

unint64_t sub_260F4AA9C()
{
  unint64_t result = qword_26A8EA580;
  if (!qword_26A8EA580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA580);
  }
  return result;
}

unint64_t sub_260F4AAF4()
{
  unint64_t result = qword_26A8EA588;
  if (!qword_26A8EA588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA588);
  }
  return result;
}

unint64_t sub_260F4AB4C()
{
  unint64_t result = qword_26A8EA590;
  if (!qword_26A8EA590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA590);
  }
  return result;
}

unint64_t sub_260F4ABA4()
{
  unint64_t result = qword_26A8EA598;
  if (!qword_26A8EA598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA598);
  }
  return result;
}

unint64_t sub_260F4ABFC()
{
  unint64_t result = qword_26A8EA5A0;
  if (!qword_26A8EA5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA5A0);
  }
  return result;
}

unint64_t sub_260F4AC54()
{
  unint64_t result = qword_26A8EA5A8;
  if (!qword_26A8EA5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A8EA5A8);
  }
  return result;
}

BOOL sub_260F4ACA8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(v2 + 16);
  if ((a2 & 1) == 0)
  {
    if (v3)
    {
      if (!((*(void *)(v2 + 88) ^ *(void *)(v2 + 80)) >> 14) && (*(_DWORD *)(v2 + 48) & 0x40) == 0) {
        return 1;
      }
    }
    return 0;
  }
  return v3 && (*(void *)(v2 + 88) ^ *(void *)(v2 + 80)) < 0x4000;
}

uint64_t sub_260F4AD00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = 0;
  uint64_t v5 = a1 + 32;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v16 = a1 + 32;
LABEL_5:
  if (!v6) {
    goto LABEL_4;
  }
  uint64_t v7 = *(unsigned __int8 *)(v5 + v4);
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  while (2)
  {
    uint64_t v9 = a2 + v8++;
    unint64_t v10 = 0xE90000000000006ELL;
    uint64_t v11 = 0x6F6974616D696E61;
    switch(*(unsigned char *)(v9 + 32))
    {
      case 1:
        unint64_t v10 = 0xE500000000000000;
        uint64_t v11 = 0x696A6F6D65;
        break;
      case 2:
        uint64_t v11 = 0x61727473756C6C69;
        unint64_t v10 = 0xEC0000006E6F6974;
        break;
      case 3:
        unint64_t v10 = 0xE700000000000000;
        uint64_t v11 = 0x747241656E696CLL;
        break;
      case 4:
        unint64_t v10 = 0xE600000000000000;
        uint64_t v11 = 0x686374656B73;
        break;
      default:
        break;
    }
    uint64_t v12 = 0x6F6974616D696E61;
    unint64_t v13 = 0xE90000000000006ELL;
    switch(v7)
    {
      case 1:
        unint64_t v13 = 0xE500000000000000;
        if (v11 == 0x696A6F6D65) {
          goto LABEL_19;
        }
        goto LABEL_20;
      case 2:
        unint64_t v13 = 0xEC0000006E6F6974;
        if (v11 != 0x61727473756C6C69) {
          goto LABEL_20;
        }
        goto LABEL_19;
      case 3:
        unint64_t v13 = 0xE700000000000000;
        uint64_t v12 = 0x747241656E696CLL;
        goto LABEL_18;
      case 4:
        unint64_t v13 = 0xE600000000000000;
        if (v11 != 0x686374656B73) {
          goto LABEL_20;
        }
        goto LABEL_19;
      default:
LABEL_18:
        if (v11 != v12) {
          goto LABEL_20;
        }
LABEL_19:
        if (v10 == v13)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_26:
          swift_bridgeObjectRelease();
          return v4;
        }
LABEL_20:
        char v14 = sub_260FE5150();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_26;
        }
        if (v6 != v8) {
          continue;
        }
        swift_bridgeObjectRelease();
        uint64_t v5 = v16;
LABEL_4:
        if (++v4 != v2) {
          goto LABEL_5;
        }
        return 0;
    }
  }
}

uint64_t sub_260F4AF94()
{
  uint64_t v2 = v1;
  uint64_t v3 = (int *)type metadata accessor for DefinitionSession();
  uint64_t v4 = (uint64_t *)(v0 + v3[11]);
  if (v4[1])
  {
    uint64_t v5 = *v4;
  }
  else
  {
    uint64_t v7 = 0xD000000000000025;
    unint64_t v8 = 0x8000000260FFBDD0;
    switch(*(unsigned char *)(v0 + v3[14]))
    {
      case 1:
        goto LABEL_9;
      case 2:
        uint64_t v9 = "VisualGeneration.PhotosGenerativeEdit";
        goto LABEL_8;
      case 3:
        uint64_t v7 = 0xD000000000000010;
        uint64_t v9 = "VisualGeneration";
        goto LABEL_8;
      default:
        uint64_t v7 = 0xD000000000000027;
        uint64_t v9 = "VisualGeneration.KeyboardEmojiGenerator";
LABEL_8:
        unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
LABEL_9:
        char v10 = *(void *)(v0 + v3[6]) != 0;
        uint64_t v11 = (uint64_t *)(v0 + v3[5]);
        uint64_t v13 = *v11;
        uint64_t v12 = v11[1];
        LODWORD(v11) = *((_DWORD *)v11 + 4);
        v15[0] = v13;
        v15[1] = v12;
        int v16 = (int)v11;
        swift_bridgeObjectRetain();
        uint64_t result = sub_260EF9F30(v10, v7, v8, (uint64_t)v15);
        if (v2) {
          return result;
        }
        uint64_t v5 = result & 1;
        *uint64_t v4 = v5;
        v4[1] = v14;
        break;
    }
  }
  return v5 & 1;
}

uint64_t sub_260F4B0C4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x8000000261000600 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000261000620)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_260F4B1B0()
{
  unint64_t v0 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void sub_260F4B1FC(uint64_t a1)
{
  sub_260F450F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_260F4B204()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA5B8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_260F4B2AC(int a1, void *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA5B8) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_260F45378(a1, a2, (int)v2 + (int)v6, v7);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_260F4B374()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_260F4B3AC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    if (v1 == 1) {
      goto LABEL_6;
    }
    swift_release();
  }
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
LABEL_6:
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_260F4B40C(uint64_t a1)
{
  return sub_260F440B0(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_260F4B41C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_260F4B484(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_260F4B4EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_260F4B54C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AugmentedPrompt();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v2, v4);
  uint64_t v37 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E71E0);
  MEMORY[0x270FA5388](v10 - 8, v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_260FE2D90();
  MEMORY[0x270FA5388](v14 - 8, v15);
  uint64_t v38 = v16;
  sub_260FE2D80();
  sub_260FE2D10();
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v31 = a1;
  if (!v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v35 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  sub_260F4DB80(a1 + v18, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v39 = v3 + 56;
  v19(v13, 0, 1, v2);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  uint64_t v36 = v2;
  uint64_t v33 = v20;
  uint64_t v34 = v3 + 48;
  if (v20(v13, 1, v2) != 1)
  {
    unint64_t v21 = v39 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    sub_260E5C158((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
    uint64_t v22 = sub_260FE2D00();
    sub_260F4DBE8((unint64_t *)&qword_26A8E71F8, MEMORY[0x270FA8648]);
    uint64_t v32 = v22;
    sub_260FE2CD0();
    sub_260E354B4((uint64_t)v9);
    uint64_t v23 = v17 - 1;
    if (!v23)
    {
      uint64_t v2 = v36;
LABEL_6:
      v19(v13, 1, 1, v2);
      return swift_bridgeObjectRelease();
    }
    unint64_t v30 = v21;
    uint64_t v25 = v31 + v35 + v18;
    uint64_t v26 = (uint64_t)v37;
    while (1)
    {
      sub_260F4DB80(v25, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      uint64_t v27 = v36;
      v19(v13, 0, 1, v36);
      if (v33(v13, 1, v27) == 1) {
        break;
      }
      uint64_t v28 = sub_260E5C158((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AugmentedPrompt);
      MEMORY[0x270FA5388](v28, v29);
      sub_260FE2D80();
      sub_260FE2D10();
      sub_260FE2CD0();
      sub_260E354B4(v26);
      sub_260FE2CD0();
      sub_260E354B4((uint64_t)v9);
      v25 += v35;
      if (!--v23)
      {
        uint64_t v2 = v36;
        goto LABEL_6;
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_260F4B980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return MEMORY[0x270FA2498](sub_260F4B9A8, 0, 0);
}

uint64_t sub_260F4B9A8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A38);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  long long v5 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v4 + 32) = v5;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  void *v6 = v0;
  v6[1] = sub_260F4BABC;
  return MEMORY[0x270FA22B8](v0 + 16, v3, v3, 0, 0, &unk_26A8E7F58, v4, v3);
}

uint64_t sub_260F4BABC()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_260F4BBD8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_260DE9A20;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260F4BBD8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_260F4BC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  MEMORY[0x270FA5388](v7 - 8, v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260D907BC(a1, (uint64_t)v10, &qword_26A8E6828);
  uint64_t v11 = sub_260FE4520();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_260D90820((uint64_t)v10, &qword_26A8E6828);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = sub_260FE44A0();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_260FE4510();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = 0;
  uint64_t v15 = 0;
LABEL_6:
  uint64_t v16 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A38);
  uint64_t v17 = (void *)(v15 | v13);
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    uint64_t v17 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  v19[1] = 1;
  v19[2] = v17;
  v19[3] = v16;
  swift_task_create();
  return swift_release();
}

void sub_260F4BE20()
{
}

void sub_260F4BECC()
{
}

uint64_t sub_260F4BF78()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtCC16VisualGeneration14ImageGenerator14GenerationTask_id;
  uint64_t v2 = sub_260FE3110();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCC16VisualGeneration14ImageGenerator14GenerationTask_requestIdentifier, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_260F4C050@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtCC16VisualGeneration14ImageGenerator14GenerationTask_id;
  uint64_t v4 = sub_260FE3110();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_260F4C0C8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

uint64_t sub_260F4C124()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_260F4C17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[17] = a3;
  v8[18] = a4;
  v8[15] = a1;
  v8[16] = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA630);
  v8[23] = v9;
  v8[24] = *(void *)(v9 - 8);
  v8[25] = swift_task_alloc();
  uint64_t v10 = *(void *)(type metadata accessor for GenerationRecipe(0) - 8);
  v8[26] = v10;
  v8[27] = *(void *)(v10 + 64);
  v8[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6828);
  v8[29] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_260F4C2DC, 0, 0);
}

uint64_t sub_260F4C2DC()
{
  uint64_t v18 = *(void *)(v0 + 232);
  uint64_t v21 = *(void *)(v0 + 224);
  uint64_t v22 = *(void *)(v0 + 208);
  uint64_t v23 = *(void *)(v0 + 216);
  uint64_t v24 = *(void *)(v0 + 176);
  uint64_t v20 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v19 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = sub_260FE3110();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v7(v6, v2, v4);
  uint64_t v8 = swift_task_alloc();
  v7(v8, v3, v4);
  sub_260D90158(v1, v0 + 16);
  type metadata accessor for ImageGenerator.GenerationTask();
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 240) = v9;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v10(v9 + OBJC_IVAR____TtCC16VisualGeneration14ImageGenerator14GenerationTask_id, v6, v4);
  v10(v9 + OBJC_IVAR____TtCC16VisualGeneration14ImageGenerator14GenerationTask_requestIdentifier, v8, v4);
  sub_260DD7B40((long long *)(v0 + 16), v9 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = sub_260FE4520();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v18, 1, 1, v11);
  sub_260D907BC(v19, v0 + 56, &qword_26A8E7200);
  sub_260F4DB80(v20, v21, type metadata accessor for GenerationRecipe);
  unint64_t v12 = (*(unsigned __int8 *)(v22 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v13 = (v23 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  sub_260F4D7A0(v0 + 56, v14 + 32);
  sub_260E5C158(v21, v14 + v12, type metadata accessor for GenerationRecipe);
  *(void *)(v14 + v13) = v24;
  *(void *)(v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) = v9;
  swift_retain();
  swift_retain();
  sub_260F4BC3C(v18, (uint64_t)&unk_26A8EA640, v14);
  sub_260D90820(v18, &qword_26A8E6828);
  *(void *)(v0 + 96) = MEMORY[0x263F8EE78];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6A38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
  sub_260FE45C0();
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_260F4C6A0;
  uint64_t v16 = *(void *)(v0 + 184);
  return MEMORY[0x270FA2058](v0 + 104, 0, 0, v16, v0 + 112);
}

uint64_t sub_260F4C6A0()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_260F4C918;
  }
  else
  {
    uint64_t v1 = sub_260F4C7B8;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_260F4C7B8()
{
  uint64_t v1 = v0[13];
  if (v1)
  {
    sub_260EE0670(v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[31] = v2;
    void *v2 = v0;
    v2[1] = sub_260F4C6A0;
    uint64_t v3 = v0[23];
    return MEMORY[0x270FA2058](v0 + 13, 0, 0, v3, v0 + 14);
  }
  else
  {
    uint64_t v4 = (void *)v0[15];
    (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
    swift_release();
    *uint64_t v4 = v0[12];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_260F4C918()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[23];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_260F4C9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[35] = a6;
  v7[36] = a7;
  v7[33] = a4;
  v7[34] = a5;
  v7[32] = a1;
  return MEMORY[0x270FA2498](sub_260F4C9F0, 0, 0);
}

uint64_t sub_260F4C9F0()
{
  uint64_t v1 = v0[34];
  sub_260D907BC(v0[33], (uint64_t)(v0 + 12), &qword_26A8E7200);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7080;
  *(void *)(inited + 32) = 0x657069636572;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 72) = type metadata accessor for GenerationRecipe(0);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(inited + 48));
  sub_260F4DB80(v1, (uint64_t)boxed_opaque_existential_1Tm, type metadata accessor for GenerationRecipe);
  unint64_t v4 = sub_260DAAF10(inited);
  uint64_t v5 = sub_260F4D944(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_260DB190C(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v8 = v6[2];
  unint64_t v7 = v6[3];
  if (v8 >= v7 >> 1) {
    uint64_t v6 = sub_260DB190C((void *)(v7 > 1), v8 + 1, 1, v6);
  }
  v6[2] = v8 + 1;
  uint64_t v9 = &v6[2 * v8];
  *((unsigned char *)v9 + 32) = 3;
  v9[5] = v5;
  v0[37] = v6;
  sub_260D907BC(v0[33], (uint64_t)(v0 + 17), &qword_26A8E7200);
  uint64_t v10 = v0[20];
  if (v10)
  {
    uint64_t v12 = v0[35];
    uint64_t v11 = v0[36];
    uint64_t v13 = v0[21];
    __swift_project_boxed_opaque_existential_1(v0 + 17, v0[20]);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(v12, v11, v10, v13);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 17));
  }
  else
  {
    sub_260D90820((uint64_t)(v0 + 17), &qword_26A8E7200);
  }
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v0[35] + 160)
                                                          + **(int **)(*(void *)v0[35] + 160));
  uint64_t v14 = (void *)swift_task_alloc();
  v0[38] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_260F4CCA0;
  uint64_t v15 = v0[36];
  uint64_t v16 = v0[33];
  uint64_t v17 = v0[34];
  return v19(v17, v15, v16);
}

uint64_t sub_260F4CCA0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 312) = a1;
  *(void *)(v3 + 320) = v1;
  swift_task_dealloc();
  if (v1) {
    unint64_t v4 = sub_260F4CEE0;
  }
  else {
    unint64_t v4 = sub_260F4CDB4;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_260F4CDB4()
{
  uint64_t v1 = *(void *)(v0 + 264);
  sub_260F4D010(*(void *)(v0 + 296), v0 + 96);
  swift_bridgeObjectRelease();
  sub_260D90820(v0 + 96, &qword_26A8E7200);
  sub_260D907BC(v1, v0 + 216, &qword_26A8E7200);
  uint64_t v2 = *(void *)(v0 + 240);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 312);
    uint64_t v5 = *(void *)(v0 + 280);
    uint64_t v4 = *(void *)(v0 + 288);
    uint64_t v6 = *(void *)(v0 + 248);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 216), *(void *)(v0 + 240));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v4, v3, v2, v6);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 216);
  }
  else
  {
    sub_260D90820(v0 + 216, &qword_26A8E7200);
  }
  **(void **)(v0 + 256) = *(void *)(v0 + 312);
  unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_260F4CEE0()
{
  uint64_t v1 = v0[33];
  sub_260F4D010(v0[37], (uint64_t)(v0 + 12));
  swift_bridgeObjectRelease();
  sub_260D90820((uint64_t)(v0 + 12), &qword_26A8E7200);
  sub_260D907BC(v1, (uint64_t)(v0 + 22), &qword_26A8E7200);
  uint64_t v2 = v0[25];
  if (v2)
  {
    uint64_t v3 = v0[40];
    uint64_t v5 = v0[35];
    uint64_t v4 = v0[36];
    uint64_t v6 = v0[26];
    __swift_project_boxed_opaque_existential_1(v0 + 22, v0[25]);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(v5, v4, v3, v2, v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 22));
  }
  else
  {
    sub_260D90820((uint64_t)(v0 + 22), &qword_26A8E7200);
  }
  swift_willThrow();
  unint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_260F4D010(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    uint64_t v2 = result;
    sub_260D907BC(a2, (uint64_t)v5, &qword_26A8E7200);
    if (v6)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA648);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA650);
      if (swift_dynamicCast())
      {
        if (*((void *)&v8 + 1))
        {
          sub_260DD7B40(&v7, (uint64_t)v10);
          uint64_t v3 = v11;
          uint64_t v4 = v12;
          __swift_project_boxed_opaque_existential_1(v10, v11);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(v2, v3, v4);
          return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
        }
      }
      else
      {
        uint64_t v9 = 0;
        long long v7 = 0u;
        long long v8 = 0u;
      }
    }
    else
    {
      sub_260D90820((uint64_t)v5, &qword_26A8E7200);
      long long v7 = 0u;
      long long v8 = 0u;
      uint64_t v9 = 0;
    }
    return sub_260D90820((uint64_t)&v7, &qword_26A8E76B8);
  }
  return result;
}

uint64_t sub_260F4D130()
{
  *(void *)(v1 + 24) = *v0;
  return MEMORY[0x270FA2498](sub_260F4D174, 0, 0);
}

uint64_t sub_260F4D174()
{
  uint64_t v12 = v0;
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_260FE3A10();
  __swift_project_value_buffer(v1, (uint64_t)qword_26A90FB90);
  uint64_t v2 = sub_260FE39F0();
  os_log_type_t v3 = sub_260FE4890();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_260FE5430();
    *(void *)(v0 + 16) = sub_260DB2844(v6, v7, &v11);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_260D82000, v2, v3, "%s must provide an override for generateImages(from:task:requestIdentifier:delegate:)", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v5, -1, -1);
    MEMORY[0x26122CA00](v4, -1, -1);
  }

  long long v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v9 = MEMORY[0x263F8EE78];
  return v8(v9);
}

uint64_t type metadata accessor for ImageGenerator()
{
  return self;
}

uint64_t sub_260F4D364()
{
  return type metadata accessor for ImageGenerator.GenerationTask();
}

uint64_t type metadata accessor for ImageGenerator.GenerationTask()
{
  uint64_t result = qword_26A8EA618;
  if (!qword_26A8EA618) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_260F4D3B8()
{
  uint64_t result = sub_260FE3110();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_260F4D454()
{
  return sub_260F4DBE8((unint64_t *)&qword_26A8E67C8, MEMORY[0x270FA9450]);
}

uint64_t sub_260F4D484()
{
  unint64_t v1 = (int *)type metadata accessor for GenerationRecipe(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 72) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  }
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[8];
  uint64_t v7 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = v4;
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    v10(v6, v9);
    uint64_t v11 = v9;
    uint64_t v4 = v8;
    uint64_t v3 = (v2 + 72) & ~v2;
    v10(v6 + *(int *)(v7 + 20), v11);
    uint64_t v12 = (uint64_t *)(v6 + *(int *)(v7 + 24));
    if (v12[2])
    {
      sub_260DCC110(*v12, v12[1]);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = (id *)(v5 + v1[12]);
  if (*v13)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void **)(v5 + v1[17] + 24);
  if (v14)
  {

    swift_release();
  }
  uint64_t v15 = *(void **)(v5 + v1[18] + 24);
  if (v15)
  {

    swift_release();
  }
  uint64_t v16 = *(void **)(v5 + v1[19] + 24);
  if (v16)
  {

    swift_release();
  }
  uint64_t v17 = v5 + v1[20];
  uint64_t v18 = *(void **)(v17 + 24);
  if (v18)
  {

    swift_release();
  }
  uint64_t v19 = *(void **)(v17 + 64);
  if (v19)
  {

    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void **)(v5 + v1[22] + 24);
  if (v20)
  {

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_260F4D7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_260F4D808(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for GenerationRecipe(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + 32;
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_260DACD28;
  v11[35] = v9;
  v11[36] = v10;
  v11[33] = v7;
  v11[34] = v8;
  v11[32] = a1;
  return MEMORY[0x270FA2498](sub_260F4C9F0, 0, 0);
}

uint64_t sub_260F4D944(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CB0);
  uint64_t result = sub_260FE4E60();
  uint64_t v4 = (void *)result;
  int64_t v5 = 0;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v22 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v23 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 64;
  if ((v8 & v6) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v11 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v5 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_260D90650(*(void *)(a1 + 56) + 32 * i, (uint64_t)v25);
    sub_260D90650((uint64_t)v25, (uint64_t)v24);
    swift_bridgeObjectRetain();
    JSONValue.init(_:)(v24, &v26);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      return (uint64_t)v4;
    }
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v19 = (void *)(v4[6] + 16 * i);
    *uint64_t v19 = v18;
    v19[1] = v17;
    *(void *)(v4[7] + 8 * i) = v26;
    uint64_t v20 = v4[2];
    BOOL v13 = __OFADD__(v20, 1);
    uint64_t v21 = v20 + 1;
    if (v13)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v4[2] = v21;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v13 = __OFADD__(v5++, 1);
    if (v13) {
      goto LABEL_27;
    }
    if (v5 >= v23) {
      return (uint64_t)v4;
    }
    unint64_t v14 = *(void *)(v22 + 8 * v5);
    if (!v14) {
      break;
    }
LABEL_15:
    unint64_t v9 = (v14 - 1) & v14;
  }
  int64_t v15 = v5 + 1;
  if (v5 + 1 >= v23) {
    return (uint64_t)v4;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v5 + 2;
  if (v5 + 2 >= v23) {
    return (uint64_t)v4;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v5 + 3;
  if (v5 + 3 >= v23) {
    return (uint64_t)v4;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14)
  {
LABEL_14:
    int64_t v5 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v23) {
      return (uint64_t)v4;
    }
    unint64_t v14 = *(void *)(v22 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_260F4DB80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_260F4DBE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_260F4DC30()
{
  uint64_t v1 = sub_260FE3870();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)v0;
  if (*(unsigned char *)(v0 + 8))
  {
    if (*(unsigned char *)(v0 + 8) == 1)
    {
      id v7 = objc_allocWithZone(MEMORY[0x263F00628]);
      id v8 = v6;
      id v9 = objc_msgSend(v7, sel_init);
      objc_msgSend(v8, sel_extent);
      id v10 = objc_msgSend(v9, sel_createCGImage_fromRect_, v8);
    }
    else
    {
      id v11 = objc_allocWithZone(MEMORY[0x263F00650]);
      id v9 = v6;
      id v12 = objc_msgSend(v11, sel_initWithCVPixelBuffer_, v9);
      id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00628]), sel_init);
      objc_msgSend(v12, sel_extent);
      id v10 = objc_msgSend(v8, sel_createCGImage_fromRect_, v12);
    }
    if (!v10) {
      return 0;
    }
  }
  else
  {
    id v10 = v6;
  }
  CFMutableDataRef Mutable = CFDataCreateMutable(0, 0);
  if (!Mutable)
  {

    return 0;
  }
  unint64_t v14 = Mutable;
  sub_260FE3860();
  sub_260FE3850();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  int64_t v15 = (__CFString *)sub_260FE4070();
  swift_bridgeObjectRelease();
  uint64_t v16 = CGImageDestinationCreateWithData(v14, v15, 1uLL, 0);

  if (!v16)
  {

    return 0;
  }
  CGImageDestinationAddImage(v16, (CGImageRef)v10, 0);
  if (!CGImageDestinationFinalize(v16))
  {

    return 0;
  }
  uint64_t v17 = v14;
  uint64_t v18 = sub_260FE3010();

  return v18;
}

unsigned char *storeEnumTagSinglePayload for AffineTransformImageScaler(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F4DF9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AffineTransformImageScaler()
{
  return &type metadata for AffineTransformImageScaler;
}

uint64_t sub_260F4DFD4(uint64_t *a1, uint64_t *a2, char a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  BOOL v7 = v4 == v6 && v3 == v5;
  uint64_t result = 1;
  if (!v7 && (a3 & 1) != 0)
  {
    if (v4 <= v3) {
      uint64_t v9 = v3;
    }
    else {
      uint64_t v9 = v4;
    }
    if (v6 <= v5) {
      uint64_t v10 = *a2;
    }
    else {
      uint64_t v10 = a2[1];
    }
    if (v4 < v3) {
      uint64_t v3 = v4;
    }
    if (v6 < v5) {
      uint64_t v5 = a2[1];
    }
    BOOL v11 = v3 >= v5;
    return v9 >= v10 && v11;
  }
  return result;
}

uint64_t sub_260F4E024(uint64_t a1, uint64_t *a2, _OWORD *a3)
{
  uint64_t v4 = *a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v4;
  *(unsigned char *)(v3 + 96) = *((unsigned char *)a2 + 8);
  *(_OWORD *)(v3 + 80) = *a3;
  return MEMORY[0x270FA2498](sub_260F4E058, 0, 0);
}

id sub_260F4E058()
{
  uint64_t v34 = v0;
  if (*(unsigned char *)(v0 + 96))
  {
    if (*(unsigned char *)(v0 + 96) == 1)
    {
      uint64_t v1 = *(void **)(v0 + 72);
      id result = objc_msgSend(v1, sel_extent);
      if (v3 <= -9.22337204e18)
      {
        __break(1u);
      }
      else if (v3 < 9.22337204e18)
      {
        if ((*(void *)&v3 & 0x7FF0000000000000) != 0x7FF0000000000000
          && (*(void *)&v4 & 0x7FF0000000000000) != 0x7FF0000000000000)
        {
          if (v4 > -9.22337204e18)
          {
            if (v4 < 9.22337204e18)
            {
              if (*(void *)(v0 + 80) != (uint64_t)v3) {
                goto LABEL_21;
              }
              uint64_t v6 = (uint64_t)v4;
              goto LABEL_16;
            }
LABEL_32:
            __break(1u);
            return result;
          }
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      __break(1u);
      goto LABEL_30;
    }
    BOOL v7 = (__CVBuffer *)*(id *)(v0 + 72);
    size_t Width = CVPixelBufferGetWidth(v7);
    size_t Height = CVPixelBufferGetHeight(v7);
  }
  else
  {
    BOOL v7 = (__CVBuffer *)*(id *)(v0 + 72);
    size_t Width = CGImageGetWidth(v7);
    size_t Height = CGImageGetHeight(v7);
  }
  uint64_t v6 = Height;
  uint64_t v10 = *(void *)(v0 + 80);

  if (Width != v10)
  {
LABEL_18:
    if (!*(unsigned char *)(v0 + 96))
    {
      id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCGImage_, *(void *)(v0 + 72));
      goto LABEL_24;
    }
    if (*(unsigned char *)(v0 + 96) != 1)
    {
      id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCVPixelBuffer_, *(void *)(v0 + 72));
      goto LABEL_24;
    }
    uint64_t v1 = *(void **)(v0 + 72);
LABEL_21:
    id v15 = v1;
LABEL_24:
    uint64_t v16 = *(void *)(v0 + 64);
    uint64_t v17 = *(void *)(v0 + 80);
    uint64_t v18 = *(void *)(v0 + 88);
    id v19 = v15;
    objc_msgSend(v19, sel_extent);
    double v21 = v20;
    double v23 = v22;
    CGAffineTransformMakeTranslation(&v33, -v24, -v25);
    long long v26 = *(_OWORD *)&v33.c;
    long long v27 = *(_OWORD *)&v33.tx;
    *(_OWORD *)(v0 + 16) = *(_OWORD *)&v33.a;
    *(_OWORD *)(v0 + 32) = v26;
    *(_OWORD *)(v0 + 48) = v27;
    id v28 = objc_msgSend(v19, sel_imageByApplyingTransform_, v0 + 16);

    CGAffineTransformMakeScale(&v33, (double)v17 / v21, (double)v18 / v23);
    long long v29 = *(_OWORD *)&v33.c;
    long long v30 = *(_OWORD *)&v33.tx;
    *(_OWORD *)(v0 + 16) = *(_OWORD *)&v33.a;
    *(_OWORD *)(v0 + 32) = v29;
    *(_OWORD *)(v0 + 48) = v30;
    id v31 = objc_msgSend(v28, sel_imageByApplyingTransform_, v0 + 16);

    *(void *)uint64_t v16 = v31;
    *(unsigned char *)(v16 + 8) = 1;
    goto LABEL_25;
  }
LABEL_16:
  if (v6 != *(void *)(v0 + 88)) {
    goto LABEL_18;
  }
  char v11 = *(unsigned char *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 64);
  id v12 = *(void **)(v0 + 72);
  *(void *)uint64_t v13 = v12;
  *(unsigned char *)(v13 + 8) = v11;
  id v14 = v12;
LABEL_25:
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v32();
}

uint64_t sub_260F4E310(uint64_t *a1, uint64_t *a2)
{
  return sub_260F4DFD4(a1, a2, *v2);
}

uint64_t sub_260F4E318()
{
  return sub_260ED1378();
}

uint64_t _s14descr270D14959C23GenerationConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_WORD *)(a1 + 52) = *(_WORD *)(a2 + 52);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr270D14959C23GenerationConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(unsigned char *)(a1 + 53) = *(unsigned char *)(a2 + 53);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  return a1;
}

__n128 __swift_memcpy55_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 47) = *(void *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s14descr270D14959C23GenerationConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(unsigned char *)(a1 + 53) = *(unsigned char *)(a2 + 53);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  return a1;
}

uint64_t _s14descr270D14959C23GenerationConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 55)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr270D14959C23GenerationConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 54) = 0;
    *(_WORD *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 55) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 55) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14descr270D14959C23GenerationConfigurationVMa()
{
  return &_s14descr270D14959C23GenerationConfigurationVN;
}

unint64_t sub_260F4E5A8(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
    case 4:
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD000000000000029;
      break;
    case 7:
      unint64_t result = 0xD000000000000024;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_260F4E6C4(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
    case 4:
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD000000000000029;
      break;
    case 7:
      unint64_t result = 0xD000000000000024;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260F4E7E0(unsigned __int8 *a1, char *a2)
{
  return sub_260DDAE3C(*a1, *a2);
}

uint64_t sub_260F4E7EC()
{
  return sub_260FE5340();
}

uint64_t sub_260F4E834()
{
  return sub_260DB0594();
}

uint64_t sub_260F4E83C()
{
  return sub_260FE5340();
}

uint64_t sub_260F4E880@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_260F4F54C();
  *a1 = result;
  return result;
}

unint64_t sub_260F4E8B0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_260F4E5A8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_260F4E8DC()
{
  return sub_260F4E6C4(*v0);
}

uint64_t sub_260F4E8E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_260F4F54C();
  *a1 = result;
  return result;
}

uint64_t sub_260F4E90C(uint64_t a1)
{
  unint64_t v2 = sub_260F4F0B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260F4E948(uint64_t a1)
{
  unint64_t v2 = sub_260F4F0B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260F4E984(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA660);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  BOOL v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = v8;
  int v19 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v12 = *(void *)(v1 + 40);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 48);
  v11[4] = *(unsigned __int8 *)(v1 + 50);
  v11[5] = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 51);
  v11[2] = *(unsigned __int8 *)(v1 + 52);
  v11[3] = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 53);
  v11[0] = *(unsigned __int8 *)(v1 + 54);
  v11[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F4F0B0();
  sub_260FE53E0();
  LOBYTE(v16) = 0;
  uint64_t v9 = v15;
  sub_260FE5070();
  if (!v9)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v13;
    char v18 = v19;
    char v20 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA670);
    sub_260F4F104();
    sub_260FE50B0();
    LOBYTE(v16) = 2;
    sub_260FE50A0();
    LOBYTE(v16) = 3;
    sub_260FE5080();
    LOBYTE(v16) = 4;
    sub_260FE5080();
    LOBYTE(v16) = 5;
    sub_260FE5080();
    LOBYTE(v16) = 6;
    sub_260FE5080();
    LOBYTE(v16) = 7;
    sub_260FE5080();
    LOBYTE(v16) = 8;
    sub_260FE5080();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_260F4EC84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA680);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F4F0B0();
  sub_260FE53B0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  LOBYTE(v32) = 0;
  uint64_t v11 = sub_260FE4F70();
  uint64_t v13 = v12;
  char v36 = 1;
  sub_260ED192C();
  swift_bridgeObjectRetain();
  sub_260FE4F60();
  int v35 = v34;
  if (v34 == 1)
  {
    uint64_t v30 = 0;
    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v30 = v32;
    uint64_t v31 = v33;
  }
  LOBYTE(v32) = 2;
  uint64_t v14 = sub_260FE4F50();
  if (v15) {
    uint64_t v16 = 1;
  }
  else {
    uint64_t v16 = v14;
  }
  uint64_t v29 = v16;
  LOBYTE(v32) = 3;
  int v17 = sub_260FE4F30();
  int v27 = v17 == 2;
  int v28 = v17;
  LOBYTE(v32) = 4;
  int v26 = sub_260FE4F30();
  LOBYTE(v32) = 5;
  int v25 = sub_260FE4F30();
  LOBYTE(v32) = 6;
  int v18 = sub_260FE4F30();
  BOOL v23 = v18 == 2;
  int v24 = v18;
  LOBYTE(v32) = 7;
  int v22 = sub_260FE4F30();
  LOBYTE(v32) = 8;
  char v19 = sub_260FE4F30();
  int v21 = v27 | v28;
  int v27 = v25 & 1;
  int v28 = v26 & 1;
  int v26 = v23 | v24;
  int v25 = (v22 == 2) | v22;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v13;
  uint64_t v20 = v31;
  *(void *)(a2 + 16) = v30;
  *(void *)(a2 + 24) = v20;
  *(unsigned char *)(a2 + 32) = v35;
  *(void *)(a2 + 40) = v29;
  *(unsigned char *)(a2 + 48) = v21 & 1;
  *(unsigned char *)(a2 + 49) = 1;
  *(unsigned char *)(a2 + 50) = v28;
  *(unsigned char *)(a2 + 51) = v27;
  *(unsigned char *)(a2 + 52) = v26 & 1;
  *(unsigned char *)(a2 + 53) = v25 & 1;
  *(unsigned char *)(a2 + 54) = v19 & 1;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_260F4F07C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_260F4EC84(a1, a2);
}

uint64_t sub_260F4F094(void *a1)
{
  return sub_260F4E984(a1);
}

unint64_t sub_260F4F0B0()
{
  unint64_t result = qword_26A8EA668;
  if (!qword_26A8EA668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA668);
  }
  return result;
}

unint64_t sub_260F4F104()
{
  unint64_t result = qword_26A8EA678;
  if (!qword_26A8EA678)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8EA670);
    sub_260ED1980();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA678);
  }
  return result;
}

uint64_t sub_260F4F178(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 48);
  int v7 = *(unsigned __int8 *)(a1 + 49);
  int v8 = *(unsigned __int8 *)(a1 + 50);
  int v9 = *(unsigned __int8 *)(a1 + 51);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 52);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 53);
  int v12 = *(unsigned __int8 *)(a1 + 54);
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(a2 + 24);
  int v15 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v16 = *(void *)(a2 + 40);
  int v17 = *(unsigned __int8 *)(a2 + 48);
  int v18 = *(unsigned __int8 *)(a2 + 49);
  int v19 = *(unsigned __int8 *)(a2 + 50);
  int v20 = *(unsigned __int8 *)(a2 + 51);
  unsigned __int8 v21 = *(unsigned char *)(a2 + 52);
  unsigned __int8 v22 = *(unsigned char *)(a2 + 53);
  int v23 = *(unsigned __int8 *)(a2 + 54);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    goto LABEL_4;
  }
  int v47 = *(unsigned __int8 *)(a2 + 51);
  unsigned __int8 v48 = *(unsigned char *)(a2 + 53);
  uint64_t v44 = *(void *)(a1 + 16);
  unsigned __int8 v24 = *(unsigned char *)(a1 + 52);
  uint64_t v41 = *(void *)(a2 + 40);
  unsigned __int8 v25 = *(unsigned char *)(a1 + 53);
  int v42 = *(unsigned __int8 *)(a2 + 48);
  int v43 = *(unsigned __int8 *)(a2 + 49);
  int v26 = *(unsigned __int8 *)(a1 + 54);
  char v40 = *(unsigned char *)(a1 + 32);
  int v27 = *(unsigned __int8 *)(a1 + 51);
  int v45 = *(unsigned __int8 *)(a2 + 50);
  int v46 = *(unsigned __int8 *)(a1 + 50);
  int v37 = *(unsigned __int8 *)(a2 + 32);
  int v28 = *(unsigned __int8 *)(a1 + 49);
  uint64_t v38 = *(void *)(a2 + 16);
  uint64_t v39 = *(void *)(a2 + 24);
  int v29 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v30 = *(void *)(a1 + 40);
  int v31 = *(unsigned __int8 *)(a2 + 54);
  uint64_t v32 = *(void *)(a1 + 24);
  char v33 = sub_260FE5150();
  uint64_t v3 = v32;
  int v19 = v45;
  int v8 = v46;
  int v20 = v47;
  unsigned __int8 v22 = v48;
  int v23 = v31;
  uint64_t v5 = v30;
  int v6 = v29;
  uint64_t v14 = v38;
  uint64_t v13 = v39;
  int v7 = v28;
  int v15 = v37;
  int v9 = v27;
  char v4 = v40;
  int v12 = v26;
  int v17 = v42;
  int v18 = v43;
  unsigned __int8 v11 = v25;
  uint64_t v16 = v41;
  unsigned __int8 v10 = v24;
  uint64_t v2 = v44;
  char v34 = v33;
  uint64_t result = 0;
  if (v34)
  {
LABEL_4:
    if (v4)
    {
      if (!v15) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      if ((v15 & 1) != 0 || v2 != v14 || v3 != v13) {
        return result;
      }
    }
    if (v5 != v16) {
      return 0;
    }
    uint64_t result = 0;
    if (((v6 ^ v17) & 1) == 0 && ((v7 ^ v18) & 1) == 0 && ((v8 ^ v19) & 1) == 0 && ((v9 ^ v20) & 1) == 0)
    {
      if ((v11 ^ v22)) {
        unsigned int v36 = 0;
      }
      else {
        unsigned int v36 = v12 ^ v23 ^ 1;
      }
      if ((v10 ^ v21)) {
        return 0;
      }
      else {
        return v36;
      }
    }
  }
  return result;
}

unsigned char *_s14descr270D14959C23GenerationConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F4F40CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr270D14959C23GenerationConfigurationV10CodingKeysOMa()
{
  return &_s14descr270D14959C23GenerationConfigurationV10CodingKeysON;
}

unint64_t sub_260F4F448()
{
  unint64_t result = qword_26A8EA688;
  if (!qword_26A8EA688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA688);
  }
  return result;
}

unint64_t sub_260F4F4A0()
{
  unint64_t result = qword_26A8EA690;
  if (!qword_26A8EA690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA690);
  }
  return result;
}

unint64_t sub_260F4F4F8()
{
  unint64_t result = qword_26A8EA698;
  if (!qword_26A8EA698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA698);
  }
  return result;
}

uint64_t sub_260F4F54C()
{
  unint64_t v0 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

unint64_t sub_260F4F598()
{
  return 0xD000000000000026;
}

void sub_260F4F5B4(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for UnavailableImageGenerator.Descriptor;
  *(void *)(a1 + 32) = &off_270D21AF8;
}

uint64_t sub_260F4F5CC()
{
  uint64_t v0 = sub_260FE2E60();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x270FA5388](v0, v3);
  unsigned int v4 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260FE2E40();
  sub_260F06014();
  uint64_t v5 = swift_allocError();
  int v7 = v6;
  MEMORY[0x270FA5388](v5, v6);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v4, v0);
  uint64_t v8 = sub_260FE4130();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  *int v7 = v8;
  v7[1] = v10;
  return swift_willThrow();
}

uint64_t sub_260F4F738()
{
  return MEMORY[0x270FA2498](sub_260F4F754, 0, 0);
}

uint64_t sub_260F4F754()
{
  uint64_t v1 = sub_260FE2E60();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = swift_task_alloc();
  sub_260FE2E40();
  sub_260F06014();
  swift_allocError();
  uint64_t v5 = v4;
  swift_task_alloc();
  (*(void (**)(void))(v2 + 16))();
  uint64_t v6 = sub_260FE4130();
  uint64_t v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  *uint64_t v5 = v6;
  v5[1] = v8;
  swift_task_dealloc();
  swift_willThrow();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t type metadata accessor for UnavailableImageGenerator()
{
  return self;
}

ValueMetadata *type metadata accessor for UnavailableImageGenerator.Descriptor()
{
  return &type metadata for UnavailableImageGenerator.Descriptor;
}

void static CharacterFaces.load(from:)()
{
  v12[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = objc_allocWithZone(MEMORY[0x263EFF900]);
  uint64_t v1 = (void *)sub_260FE2EF0();
  id v2 = objc_msgSend(v0, sel_initWithContentsOfURL_, v1);

  if (v2)
  {
    v12[0] = 0;
    id v3 = objc_msgSend(v2, sel_decompressedDataUsingAlgorithm_error_, 0, v12);
    id v4 = v12[0];
    if (v3)
    {
      uint64_t v5 = v3;
      sub_260FE29B0();
      swift_allocObject();
      id v6 = v4;
      sub_260FE29A0();
      id v7 = v5;
      uint64_t v8 = sub_260F504D4(v7);
      unint64_t v10 = v9;
      sub_260F50904();
      sub_260FE2980();
      sub_260DCC110(v8, v10);

      swift_release();
    }
    else
    {
      id v11 = v12[0];
      sub_260FE2E30();

      swift_willThrow();
    }
  }
  else
  {
    sub_260F4FAD4();
    swift_allocError();
    swift_willThrow();
  }
}

unint64_t sub_260F4FAD4()
{
  unint64_t result = qword_26A8EA6A8;
  if (!qword_26A8EA6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA6A8);
  }
  return result;
}

unint64_t CharacterFaces.characterFace(for:skinTone:filename:)@<X0>(unint64_t result@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v7 = *v5;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_17;
  }
  uint64_t v10 = *a2;
  unint64_t result = sub_260DBAD2C(result);
  if ((v11 & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)(*(void *)(v7 + 56) + 8 * result);
  if (!*(void *)(v12 + 16)) {
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_260DBADF0(v10);
  if ((v14 & 1) == 0
    || (uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13),
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        (uint64_t v16 = *(void *)(v15 + 16)) == 0))
  {
LABEL_16:
    unint64_t result = swift_bridgeObjectRelease();
LABEL_17:
    *a5 = 0;
    a5[1] = 0;
    a5[2] = 0;
    return result;
  }
  int v17 = (uint64_t *)(v15 + 48);
  while (1)
  {
    uint64_t v18 = *v17;
    if (*v17)
    {
      int v20 = (void *)*(v17 - 2);
      uint64_t v19 = *(v17 - 1);
      if (v19 == a3 && v18 == a4) {
        goto LABEL_15;
      }
      if (sub_260FE5150()) {
        break;
      }
    }
    v17 += 3;
    if (!--v16) {
      goto LABEL_16;
    }
  }
  a3 = v19;
  a4 = v18;
LABEL_15:
  id v22 = v20;
  swift_bridgeObjectRetain();
  unint64_t result = swift_bridgeObjectRelease();
  *a5 = v22;
  a5[1] = a3;
  a5[2] = a4;
  return result;
}

Swift::OpaquePointer_optional __swiftcall CharacterFaces.characterFaces(for:skinTone:)(VisualGeneration::Gender a1, VisualGeneration::SkinTone skinTone)
{
  uint64_t v3 = *v2;
  if (*(void *)(v3 + 16)
    && (uint64_t v4 = *(unsigned __int8 *)skinTone, v5 = sub_260DBAD2C(a1), (skinTone & 1) != 0)
    && (uint64_t v6 = *(void *)(*(void *)(v3 + 56) + 8 * v5), *(void *)(v6 + 16)))
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_260DBADF0(v4);
    if (v8)
    {
      unint64_t v9 = *(void **)(*(void *)(v6 + 56) + 8 * v7);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v9 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v9 = 0;
  }
  uint64_t v10 = v9;
  result.value._rawValue = v10;
  result.is_nil = skinTone;
  return result;
}

uint64_t CharacterFaces.Error.errorDescription.getter()
{
  uint64_t v0 = sub_260FE4060();
  MEMORY[0x270FA5388](v0 - 8, v1);
  sub_260FE3FF0();
  uint64_t v2 = sub_260FE3180();
  MEMORY[0x270FA5388](v2 - 8, v3);
  sub_260FE3170();
  return sub_260FE4120();
}

uint64_t static CharacterFaces.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_260F4FDE4()
{
  uint64_t v0 = sub_260FE4060();
  MEMORY[0x270FA5388](v0 - 8, v1);
  sub_260FE3FF0();
  uint64_t v2 = sub_260FE3180();
  MEMORY[0x270FA5388](v2 - 8, v3);
  sub_260FE3170();
  return sub_260FE4120();
}

VisualGeneration::CharacterFaces __swiftcall CharacterFaces.init(characterFacesByGenderAndSkinTone:)(VisualGeneration::CharacterFaces characterFacesByGenderAndSkinTone)
{
  v1->characterFacesByGenderAndSkinTone._rawValue = characterFacesByGenderAndSkinTone.characterFacesByGenderAndSkinTone._rawValue;
  return characterFacesByGenderAndSkinTone;
}

void CharacterFaces.save(to:)()
{
  v42[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = *v0;
  sub_260FE2A40();
  swift_allocObject();
  sub_260FE2A30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E8AE8);
  sub_260FE29E0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_260FE7060;
  sub_260FE29D0();
  uint64_t v3 = sub_260FE29C0();
  MEMORY[0x270FA5388](v3, v4);
  sub_260EA65D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E8AF8);
  sub_260EA661C();
  sub_260FE4B70();
  sub_260FE29F0();
  v42[0] = v2;
  sub_260F516E8();
  uint64_t v5 = sub_260FE2A00();
  if (v1) {
    goto LABEL_25;
  }
  uint64_t v7 = v5;
  unint64_t v8 = v6;
  if (qword_26A8E6118 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_260FE3A10();
  __swift_project_value_buffer(v9, (uint64_t)qword_26A90FB90);
  sub_260DCBD18(v7, v8);
  uint64_t v10 = sub_260FE39F0();
  os_log_type_t v11 = sub_260FE4880();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 134217984;
    uint64_t v13 = v12;
    unint64_t v14 = 0;
    switch(v8 >> 62)
    {
      case 1uLL:
        LODWORD(v14) = HIDWORD(v7) - v7;
        if (__OFSUB__(HIDWORD(v7), v7)) {
          goto LABEL_30;
        }
        unint64_t v14 = (int)v14;
LABEL_11:
        v42[0] = (id)v14;
        sub_260FE4AE0();
        sub_260DCC110(v7, v8);
        _os_log_impl(&dword_260D82000, v10, v11, "initial CharacterFaces data size: %ld", v13, 0xCu);
        MEMORY[0x26122CA00](v13, -1, -1);
        break;
      case 2uLL:
        uint64_t v16 = *(void *)(v7 + 16);
        uint64_t v15 = *(void *)(v7 + 24);
        BOOL v17 = __OFSUB__(v15, v16);
        unint64_t v14 = v15 - v16;
        if (!v17) {
          goto LABEL_11;
        }
        goto LABEL_31;
      case 3uLL:
        goto LABEL_11;
      default:
        unint64_t v14 = BYTE6(v8);
        goto LABEL_11;
    }
  }
  else
  {
    sub_260DCC110(v7, v8);
  }

  id v18 = objc_allocWithZone(MEMORY[0x263EFF900]);
  sub_260DCBD18(v7, v8);
  uint64_t v19 = (void *)sub_260FE2FF0();
  id v20 = objc_msgSend(v18, sel_initWithData_, v19);
  sub_260DCC110(v7, v8);

  v42[0] = 0;
  id v21 = objc_msgSend(v20, sel_compressedDataUsingAlgorithm_error_, 0, v42);

  id v22 = v42[0];
  if (!v21)
  {
    id v34 = v42[0];
    sub_260FE2E30();

    swift_willThrow();
LABEL_24:
    sub_260DCC110(v7, v8);
LABEL_25:
    swift_release();
    return;
  }
  int v23 = v21;
  id v24 = v22;
  unsigned __int8 v25 = sub_260FE39F0();
  os_log_type_t v26 = sub_260FE4880();
  if (os_log_type_enabled(v25, v26))
  {
    os_log_type_t v39 = v26;
    int v27 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)int v27 = 134217984;
    char v40 = v23;
    int v28 = v23;
    uint64_t v29 = sub_260FE49F0();
    uint64_t v30 = sub_260FE4A00();
    uint64_t v31 = sub_260FE49F0();
    uint64_t v32 = sub_260FE4A00();
    if (v29 < v31 || v32 < v29)
    {
      __break(1u);
    }
    else
    {
      uint64_t v41 = sub_260FE49F0();
      uint64_t v33 = sub_260FE4A00();

      if (v30 >= v41 && v33 >= v30)
      {
        if (!__OFSUB__(v30, v29))
        {
          v42[0] = (id)(v30 - v29);
          sub_260FE4AE0();

          _os_log_impl(&dword_260D82000, v25, v39, "compressed CharacterFaces data size: %ld", v27, 0xCu);
          MEMORY[0x26122CA00](v27, -1, -1);
          int v23 = v40;
          goto LABEL_22;
        }
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
      }
    }
    __break(1u);
    goto LABEL_29;
  }

  unsigned __int8 v25 = v23;
LABEL_22:

  int v35 = (void *)sub_260FE2EF0();
  v42[0] = 0;
  unsigned __int8 v36 = [v23 writeToURL:v35 options:0 error:v42];

  if (v36)
  {
    id v37 = v42[0];

    goto LABEL_24;
  }
  id v38 = v42[0];
  sub_260FE2E30();

  swift_willThrow();
  sub_260DCC110(v7, v8);
  swift_release();
}

uint64_t sub_260F504D4(void *a1)
{
  v36[5] = *MEMORY[0x263EF8340];
  *(void *)&long long v33 = a1;
  sub_260D905B0(0, &qword_26A8EA780);
  id v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA788);
  if (swift_dynamicCast())
  {
    sub_260DD7B40(v34, (uint64_t)v36);
    __swift_project_boxed_opaque_existential_1(v36, v36[3]);
    sub_260FE2B90();

    v34[0] = v33;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
    return *(void *)&v34[0];
  }
  uint64_t v35 = 0;
  memset(v34, 0, sizeof(v34));
  sub_260F52AE0((uint64_t)v34);
  uint64_t v3 = sub_260FE49F0();
  uint64_t v4 = sub_260FE4A00();
  uint64_t v5 = sub_260FE49F0();
  uint64_t v6 = sub_260FE4A00();
  if (v3 < v5 || v6 < v3) {
    goto LABEL_39;
  }
  uint64_t v7 = sub_260FE49F0();
  uint64_t v8 = sub_260FE4A00();
  if (v4 < v7 || v8 < v4) {
    goto LABEL_40;
  }
  if (__OFSUB__(v4, v3))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  *(void *)&v34[0] = sub_260F520BC(v4 - v3);
  *((void *)&v34[0] + 1) = v9;
  MEMORY[0x270FA5388](*(void *)&v34[0], v9);
  uint64_t v10 = sub_260F519E0((void *(*)(uint64_t *__return_ptr, char *, char *))sub_260F52B40);
  unsigned __int8 v13 = BYTE14(v34[0]);
  uint64_t v14 = *((void *)&v34[0] + 1) >> 62;
  uint64_t v15 = v10;
  uint64_t v16 = v11;
  switch(*((void *)&v34[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v17) = DWORD1(v34[0]) - LODWORD(v34[0]);
      if (__OFSUB__(DWORD1(v34[0]), v34[0])) {
        goto LABEL_43;
      }
      uint64_t v17 = (int)v17;
LABEL_13:
      if (v12 != v17)
      {
        if (v14)
        {
          if (v14 == 1) {
            uint64_t v21 = *(uint64_t *)&v34[0] >> 32;
          }
          else {
            uint64_t v21 = *(void *)(*(void *)&v34[0] + 24);
          }
LABEL_33:
          if (v21 >= v12)
          {
            sub_260FE2FD0();
            goto LABEL_35;
          }
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
        }
LABEL_31:
        uint64_t v21 = v13;
        goto LABEL_33;
      }
LABEL_19:
      memset(v36, 0, 15);
      if (v11 == sub_260FE4A00()) {
        goto LABEL_35;
      }
      char v22 = sub_260FE4A10();
      uint64_t v15 = v15;
      uint64_t v23 = sub_260FE49F0();
      uint64_t v24 = sub_260FE4A00();

      if (v16 < v23 || v16 >= v24)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      LOBYTE(v25) = 0;
      uint64_t v26 = v16 + 1;
      break;
    case 2:
      uint64_t v19 = *(void *)(*(void *)&v34[0] + 16);
      uint64_t v18 = *(void *)(*(void *)&v34[0] + 24);
      BOOL v20 = __OFSUB__(v18, v19);
      uint64_t v17 = v18 - v19;
      if (!v20) {
        goto LABEL_13;
      }
      goto LABEL_44;
    case 3:
      if (!v12) {
        goto LABEL_19;
      }
      uint64_t v21 = 0;
      goto LABEL_33;
    default:
      uint64_t v17 = BYTE14(v34[0]);
      goto LABEL_13;
  }
  while (1)
  {
    *((unsigned char *)v36 + v25) = v22;
    unsigned int v25 = v25 + 1;
    if ((v25 >> 8))
    {
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v25 == 14)
    {
      sub_260FE2FE0();
      if (v26 == sub_260FE4A00()) {
        goto LABEL_35;
      }
      LOBYTE(v25) = 0;
      goto LABEL_28;
    }
    if (v26 == sub_260FE4A00()) {
      break;
    }
LABEL_28:
    char v22 = sub_260FE4A10();
    int v27 = v15;
    uint64_t v28 = sub_260FE49F0();
    uint64_t v29 = sub_260FE4A00();

    if (v26 >= v28 && v26++ < v29) {
      continue;
    }
    goto LABEL_30;
  }
  sub_260FE2FE0();
LABEL_35:

  return *(void *)&v34[0];
}

unint64_t sub_260F50904()
{
  unint64_t result = qword_26A8EA6B0;
  if (!qword_26A8EA6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA6B0);
  }
  return result;
}

uint64_t static CharacterFaces.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_260DDC640(*a1, *a2);
}

unint64_t sub_260F50964()
{
  return 0xD000000000000021;
}

uint64_t sub_260F50980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260F5225C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_260F509AC(uint64_t a1)
{
  unint64_t v2 = sub_260F5173C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260F509E8(uint64_t a1)
{
  unint64_t v2 = sub_260F5173C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CharacterFaces.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA6C0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F5173C();
  sub_260FE53E0();
  v10[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA6D0);
  sub_260F5183C(&qword_26A8EA6D8, (void (*)(void))sub_260E17A30, (void (*)(void))sub_260F51790);
  sub_260FE50B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t CharacterFaces.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA700);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F5173C();
  sub_260FE53B0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA6D0);
    sub_260F5183C(&qword_26A8EA708, (void (*)(void))sub_260E17B2C, (void (*)(void))sub_260F518C4);
    sub_260FE4FB0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_260F50D74@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CharacterFaces.init(from:)(a1, a2);
}

uint64_t sub_260F50D8C(void *a1)
{
  return CharacterFaces.encode(to:)(a1);
}

uint64_t sub_260F50DA4(uint64_t *a1, uint64_t *a2)
{
  return sub_260DDC640(*a1, *a2);
}

uint64_t static CharacterFace.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t CharacterFace.Error.hash(into:)()
{
  return sub_260FE5300();
}

uint64_t CharacterFace.filename.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CharacterFace.init(faceprintData:filename:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  id v11 = objc_allocWithZone(MEMORY[0x263F1EEE0]);
  id v12 = sub_260F522E4();
  uint64_t result = sub_260DCC110(a1, a2);
  if (v5) {
    return swift_bridgeObjectRelease();
  }
  *a5 = v12;
  a5[1] = a3;
  a5[2] = a4;
  return result;
}

uint64_t sub_260F50EB0(char *a1, char *a2)
{
  return sub_260DDB084(*a1, *a2);
}

uint64_t sub_260F50EBC()
{
  return sub_260FE5340();
}

uint64_t sub_260F50F4C()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260F50FC8()
{
  return sub_260FE5340();
}

uint64_t sub_260F51054@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_260FE4EC0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_260F510B4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E69727065636166;
  if (*v1) {
    uint64_t v2 = 0x656D616E656C6966;
  }
  unint64_t v3 = 0xED00006174614474;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_260F51100()
{
  if (*v0) {
    return 0x656D616E656C6966;
  }
  else {
    return 0x6E69727065636166;
  }
}

uint64_t sub_260F51148@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_260FE4EC0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_260F511AC(uint64_t a1)
{
  unint64_t v2 = sub_260F523A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260F511E8(uint64_t a1)
{
  unint64_t v2 = sub_260F523A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CharacterFace.encode(to:)(void *a1)
{
  v21[2] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA720);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)v1;
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v18 = *(void *)(v1 + 8);
  uint64_t v19 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F523A4();
  sub_260FE53E0();
  v21[0] = 0;
  id v11 = objc_msgSend(v9, sel_serializeStateAndReturnError_, v21);
  id v12 = v21[0];
  if (v11)
  {
    unsigned __int8 v13 = (void *)sub_260FE3010();
    uint64_t v15 = v14;

    v21[0] = v13;
    v21[1] = v15;
    char v20 = 0;
    sub_260DE3F54();
    sub_260FE50B0();
    sub_260DCC110((uint64_t)v13, (unint64_t)v15);
    if (!v2 && v19)
    {
      LOBYTE(v21[0]) = 1;
      sub_260FE5070();
    }
  }
  else
  {
    uint64_t v16 = v12;
    sub_260FE2E30();

    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t CharacterFace.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA730);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F523A4();
  sub_260FE53B0();
  if (!v2)
  {
    char v21 = 0;
    sub_260DE421C();
    sub_260FE4F60();
    unint64_t v10 = v20;
    if (v20 >> 60 == 15)
    {
      sub_260F523F8();
      swift_allocError();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    else
    {
      uint64_t v12 = v19;
      LOBYTE(v19) = 1;
      uint64_t v17 = sub_260FE4F20();
      uint64_t v18 = v13;
      id v14 = objc_allocWithZone(MEMORY[0x263F1EEE0]);
      id v15 = sub_260F522E4();
      sub_260DE2994(v12, v10);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      uint64_t v16 = v17;
      *a2 = v15;
      a2[1] = v16;
      a2[2] = v18;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_260F516B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CharacterFace.init(from:)(a1, a2);
}

uint64_t sub_260F516CC(void *a1)
{
  return CharacterFace.encode(to:)(a1);
}

unint64_t sub_260F516E8()
{
  unint64_t result = qword_26A8EA6B8;
  if (!qword_26A8EA6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA6B8);
  }
  return result;
}

unint64_t sub_260F5173C()
{
  unint64_t result = qword_26A8EA6C8;
  if (!qword_26A8EA6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA6C8);
  }
  return result;
}

unint64_t sub_260F51790()
{
  unint64_t result = qword_26A8EA6E0;
  if (!qword_26A8EA6E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8EA6E8);
    sub_260E17A84();
    sub_260F51970(&qword_26A8EA6F0, (void (*)(void))sub_260E417B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA6E0);
  }
  return result;
}

uint64_t sub_260F5183C(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8EA6D0);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_260F518C4()
{
  unint64_t result = qword_26A8EA710;
  if (!qword_26A8EA710)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8EA6E8);
    sub_260E17B80();
    sub_260F51970(&qword_26A8EA718, (void (*)(void))sub_260E41DA4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA710);
  }
  return result;
}

uint64_t sub_260F51970(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8EA6F8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_260F519E0(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  v16[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_260FEE450;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_260FE2AC0() && __OFSUB__((int)v4, sub_260FE2AF0())) {
        goto LABEL_24;
      }
      sub_260FE2B10();
      swift_allocObject();
      uint64_t v13 = sub_260FE2AA0();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_260F51DC8((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_260FE2FA0();
      uint64_t result = sub_260F51DC8(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_260F51CE0@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_260DF4134(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_260F5215C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_260F521D8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_260F51D58(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_260F51DC8(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_260FE2AC0();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)sub_260FE2AF0();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_260FE2AE0();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

void sub_260F51E7C(void *a1, unsigned char *a2, uint64_t a3)
{
  id v7 = v3;
  uint64_t v8 = sub_260FE49F0();

  char v21 = a2;
  if (!a2 || !a3) {
    goto LABEL_5;
  }
  if (a3 < 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v8 == sub_260FE4A00())
  {
LABEL_5:
    *a1 = v7;
    a1[1] = v8;
    return;
  }
  char v9 = sub_260FE4A10();
  id v10 = v7;
  uint64_t v11 = sub_260FE49F0();
  uint64_t v12 = sub_260FE4A00();

  if (v8 >= v11 && v8 < v12)
  {
    *a2 = v9;
    if (a3 == 1)
    {
      ++v8;
      goto LABEL_5;
    }
    unint64_t v20 = a1;
    uint64_t v13 = 1;
    while (a3 != v13)
    {
      uint64_t v14 = v8 + v13;
      if (v8 + v13 == sub_260FE4A00())
      {
        v8 += v13;
        goto LABEL_18;
      }
      char v15 = sub_260FE4A10();
      id v16 = v10;
      uint64_t v17 = sub_260FE49F0();
      uint64_t v18 = sub_260FE4A00();

      if (v14 < v17 || v14 >= v18) {
        goto LABEL_20;
      }
      uint64_t v19 = v13 + 1;
      v21[v13] = v15;
      uint64_t v13 = v19;
      if (a3 == v19)
      {
        v8 += v19;
LABEL_18:
        a1 = v20;
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
}

uint64_t _s16VisualGeneration13CharacterFaceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  sub_260D905B0(0, (unint64_t *)&qword_26A8E7210);
  if (sub_260FE4A40())
  {
    if (v3)
    {
      if (v5 && (v2 == v4 && v3 == v5 || (sub_260FE5150() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v5)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_260F520BC(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_260FE2B10();
      swift_allocObject();
      sub_260FE2AD0();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_260FE2FC0();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_260F5215C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_260FE2B10();
  swift_allocObject();
  uint64_t result = sub_260FE2AB0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_260FE2FC0();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_260F521D8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_260FE2B10();
  swift_allocObject();
  uint64_t result = sub_260FE2AB0();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_260F5225C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000021 && a2 == 0x80000002610009D0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_260FE5150();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

id sub_260F522E4()
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v1 = (void *)sub_260FE2FF0();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithState_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_260FE2E30();

    swift_willThrow();
  }
  return v2;
}

unint64_t sub_260F523A4()
{
  unint64_t result = qword_26A8EA728;
  if (!qword_26A8EA728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA728);
  }
  return result;
}

unint64_t sub_260F523F8()
{
  unint64_t result = qword_26A8EA738;
  if (!qword_26A8EA738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA738);
  }
  return result;
}

unint64_t sub_260F52450()
{
  unint64_t result = qword_26A8EA740;
  if (!qword_26A8EA740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA740);
  }
  return result;
}

unint64_t sub_260F524AC()
{
  unint64_t result = qword_26A8EA748;
  if (!qword_26A8EA748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA748);
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacterFaces()
{
  return &type metadata for CharacterFaces;
}

ValueMetadata *type metadata accessor for CharacterFaces.Error()
{
  return &type metadata for CharacterFaces.Error;
}

uint64_t destroy for CharacterFace(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s16VisualGeneration13CharacterFaceVwCP_0(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CharacterFace(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CharacterFace(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CharacterFace(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CharacterFace(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacterFace()
{
  return &type metadata for CharacterFace;
}

ValueMetadata *type metadata accessor for CharacterFace.Error()
{
  return &type metadata for CharacterFace.Error;
}

unsigned char *storeEnumTagSinglePayload for CharacterFace.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F527C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacterFace.CodingKeys()
{
  return &type metadata for CharacterFace.CodingKeys;
}

unsigned char *_s16VisualGeneration14CharacterFacesV5ErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x260F52898);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacterFaces.CodingKeys()
{
  return &type metadata for CharacterFaces.CodingKeys;
}

unint64_t sub_260F528D4()
{
  unint64_t result = qword_26A8EA750;
  if (!qword_26A8EA750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA750);
  }
  return result;
}

unint64_t sub_260F5292C()
{
  unint64_t result = qword_26A8EA758;
  if (!qword_26A8EA758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA758);
  }
  return result;
}

unint64_t sub_260F52984()
{
  unint64_t result = qword_26A8EA760;
  if (!qword_26A8EA760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA760);
  }
  return result;
}

unint64_t sub_260F529DC()
{
  unint64_t result = qword_26A8EA768;
  if (!qword_26A8EA768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA768);
  }
  return result;
}

unint64_t sub_260F52A34()
{
  unint64_t result = qword_26A8EA770;
  if (!qword_26A8EA770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA770);
  }
  return result;
}

unint64_t sub_260F52A8C()
{
  unint64_t result = qword_26A8EA778;
  if (!qword_26A8EA778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA778);
  }
  return result;
}

uint64_t sub_260F52AE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA790);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_260F52B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v9 = **(void **)(v3 + 16);
  v8[2] = &v9;
  unint64_t result = sub_260F51D58((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_260F52BAC, (uint64_t)v8, a1, a2);
  *a3 = result;
  a3[1] = v6;
  a3[2] = v7;
  return result;
}

void sub_260F52BAC(unsigned char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v7 = **(id **)(v3 + 16);
  sub_260F51E7C(v10, a1, a2);
  uint64_t v8 = v10[1];
  *a3 = v10[0];
  a3[1] = v8;
  a3[2] = v9;
}

uint64_t PersonIndications.Span.promptRange.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t PersonIndications.Indication.rawValue.getter()
{
  return *v0;
}

uint64_t PersonIndications.Indication.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static PersonIndications.Indication.generic.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void static PersonIndications.Indication.group.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

void static PersonIndications.Indication.multiplePeople.getter(_DWORD *a1@<X8>)
{
  *a1 = 4;
}

void static PersonIndications.Indication.gender.getter(_DWORD *a1@<X8>)
{
  *a1 = 8;
}

void static PersonIndications.Indication.age.getter(_DWORD *a1@<X8>)
{
  *a1 = 16;
}

void static PersonIndications.Indication.ethnicity.getter(_DWORD *a1@<X8>)
{
  *a1 = 32;
}

void static PersonIndications.Indication.hasImplicitCategoryRequiringPersonalization.getter(_DWORD *a1@<X8>)
{
  *a1 = 64;
}

uint64_t PersonIndications.Indication.description.getter()
{
  int v1 = *v0;
  if (*v0)
  {
    sub_260FE4250();
    if ((v1 & 2) == 0)
    {
LABEL_3:
      if ((v1 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v1 & 2) == 0)
  {
    goto LABEL_3;
  }
  sub_260FE4250();
  if ((v1 & 4) == 0)
  {
LABEL_4:
    if ((v1 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  sub_260FE4250();
  if ((v1 & 8) == 0)
  {
LABEL_5:
    if ((v1 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  sub_260FE4250();
  if ((v1 & 0x10) == 0)
  {
LABEL_6:
    if ((v1 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_15:
    sub_260FE4250();
    if ((v1 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_14:
  sub_260FE4250();
  if ((v1 & 0x20) != 0) {
    goto LABEL_15;
  }
LABEL_7:
  if ((v1 & 0x40) != 0) {
LABEL_8:
  }
    sub_260FE4250();
LABEL_9:
  sub_260FE4250();
  return 91;
}

uint64_t sub_260F52DE0()
{
  return sub_260FE4390();
}

uint64_t sub_260F52E40()
{
  return sub_260FE4360();
}

uint64_t PersonIndications.Span.prompt.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void PersonIndications.Span.indication.getter(_DWORD *a1@<X8>)
{
  *a1 = *(_DWORD *)(v1 + 16);
}

uint64_t PersonIndications.Span.description.getter()
{
  sub_260FE4250();
  uint64_t v0 = sub_260FE4300();
  MEMORY[0x26122A9E0](v0);
  sub_260FE4250();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_260FE4250();
  sub_260FE4DA0();
  sub_260FE4250();
  PersonIndications.Indication.description.getter();
  sub_260FE4250();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_260F52FD0()
{
  sub_260FE4DA0();
  sub_260FE4250();
  sub_260FE4DA0();
  sub_260FE4250();
  uint64_t v0 = swift_bridgeObjectRetain();
  MEMORY[0x26122AC60](v0, &type metadata for Gender);
  swift_bridgeObjectRelease();
  sub_260FE4250();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_260F530DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA868);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F56430();
  sub_260FE53E0();
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  char v18 = 0;
  sub_260E2758C();
  sub_260FE50B0();
  if (!v4)
  {
    uint64_t v16 = v15;
    char v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E8ED8);
    sub_260F56484(&qword_26A8EA878, &qword_26A8E8ED8, (void (*)(void))sub_260E17A30);
    sub_260FE50B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_260F532BC()
{
  if (*v0) {
    return 0x737265646E6567;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_260F532FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260F55EB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260F53324(uint64_t a1)
{
  unint64_t v2 = sub_260F56430();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260F53360(uint64_t a1)
{
  unint64_t v2 = sub_260F56430();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260F5339C(void *a1, void *a2)
{
  if ((*a2 ^ *a1) >> 14 || (a1[1] ^ a2[1]) >> 14) {
    return 0;
  }
  else {
    return sub_260E3AE9C(a1[2], a2[2]);
  }
}

uint64_t sub_260F533D8()
{
  return sub_260F52FD0();
}

uint64_t sub_260F533E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_260F55FA8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_260F53414(void *a1)
{
  return sub_260F530DC(a1, *v1, v1[1], v1[2]);
}

unint64_t sub_260F53438(char a1)
{
  unint64_t result = 0x74706D6F7270;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6974616369646E69;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_260F53510()
{
  return sub_260F53438(*v0);
}

uint64_t sub_260F53518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260F561CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260F53540(uint64_t a1)
{
  unint64_t v2 = sub_260F55008();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260F5357C(uint64_t a1)
{
  unint64_t v2 = sub_260F55008();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PersonIndications.Span.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA798);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v23 = *(_DWORD *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v18 = *(void *)(v1 + 32);
  uint64_t v19 = v8;
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v15 = *(void *)(v1 + 48);
  uint64_t v16 = *(void *)(v1 + 56);
  uint64_t v17 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F55008();
  sub_260FE53E0();
  LOBYTE(v21) = 0;
  uint64_t v10 = v20;
  sub_260FE5070();
  if (!v10)
  {
    uint64_t v12 = v18;
    uint64_t v11 = v19;
    uint64_t v13 = v17;
    LODWORD(v21) = v23;
    char v24 = 1;
    sub_260ED1274();
    sub_260FE50B0();
    uint64_t v21 = v11;
    char v24 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA7A8);
    sub_260F56484(&qword_26A8EA7B0, &qword_26A8EA7A8, (void (*)(void))sub_260F5505C);
    sub_260FE50B0();
    uint64_t v21 = v12;
    char v24 = 3;
    sub_260FE50B0();
    uint64_t v21 = v13;
    char v24 = 4;
    sub_260FE50B0();
    uint64_t v21 = v15;
    uint64_t v22 = v16;
    char v24 = 5;
    sub_260E2758C();
    sub_260FE50B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t PersonIndications.Span.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA7C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F55008();
  sub_260FE53B0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  LOBYTE(v22) = 0;
  uint64_t v10 = sub_260FE4F70();
  uint64_t v12 = v11;
  char v24 = 1;
  sub_260ED1220();
  swift_bridgeObjectRetain();
  sub_260FE4FB0();
  uint64_t v20 = v10;
  int v23 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA7A8);
  char v24 = 2;
  uint64_t v21 = sub_260F56484(&qword_26A8EA7C8, &qword_26A8EA7A8, (void (*)(void))sub_260F550B0);
  sub_260FE4FB0();
  char v24 = 3;
  uint64_t v19 = v22;
  swift_bridgeObjectRetain();
  sub_260FE4FB0();
  char v24 = 4;
  uint64_t v18 = v22;
  swift_bridgeObjectRetain();
  sub_260FE4FB0();
  uint64_t v14 = v22;
  char v24 = 5;
  sub_260E275E0();
  uint64_t v21 = v14;
  swift_bridgeObjectRetain();
  sub_260FE4FB0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  long long v15 = v22;
  uint64_t v16 = v19;
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v12;
  *(_DWORD *)(a2 + 16) = v23;
  uint64_t v17 = v18;
  *(void *)(a2 + 24) = v16;
  *(void *)(a2 + 32) = v17;
  *(void *)(a2 + 40) = v21;
  *(_OWORD *)(a2 + 48) = v15;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260F53D3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PersonIndications.Span.init(from:)(a1, a2);
}

uint64_t sub_260F53D54(void *a1)
{
  return PersonIndications.Span.encode(to:)(a1);
}

uint64_t PersonIndications.prompt.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t PersonIndications.spans.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v37 = *(void *)(v1 + 16);
  if (!v37) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = *v0;
  uint64_t v3 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v5 = v1 + 32;
  uint64_t v32 = v4 + 32;
  uint64_t v33 = v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v27 = v4 + 40;
  uint64_t v35 = (void *)MEMORY[0x263F8EE78];
  uint64_t v31 = v4;
  uint64_t v28 = v3;
  uint64_t v29 = v5;
  while (1)
  {
    uint64_t v7 = v5 + (v6 << 6);
    int v38 = *(_DWORD *)(v7 + 16);
    unint64_t v8 = *(void *)(v7 + 48);
    unint64_t v9 = *(void *)(v7 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_260E25F94(v4, (uint64_t)v39);
    sub_260E26F10((uint64_t)v39, (uint64_t)v40);
    if (v41) {
      goto LABEL_3;
    }
    unint64_t result = v40[0];
    if (v40[0] != v40[2]) {
      goto LABEL_3;
    }
    if (v40[0] < 0) {
      break;
    }
    if (v40[0] >= *(void *)(v4 + 16)) {
      goto LABEL_36;
    }
    uint64_t v11 = (void *)(v32 + 48 * v40[0]);
    if (v11[5])
    {
      unint64_t v12 = v11[2];
      if (v11[3] >> 14 < v12 >> 14) {
        goto LABEL_37;
      }
      unint64_t v34 = v11[3];
      if (!((sub_260E26330(v40[0], v4) ^ v8) >> 14) && (v13 ^ v9) < 0x4000)
      {
LABEL_26:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v19 = swift_bridgeObjectRetain();
        unsigned __int8 v36 = sub_260F55104(v19, v33, v3, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v20 = swift_bridgeObjectRetain();
        uint64_t v30 = sub_260F55104(v20, v33, v3, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v21 = swift_bridgeObjectRetain();
        long long v22 = sub_260F55104(v21, v33, v3, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          int v23 = v35;
        }
        else {
          int v23 = sub_260DB0E04(0, v35[2] + 1, 1, v35);
        }
        unint64_t v25 = v23[2];
        unint64_t v24 = v23[3];
        if (v25 >= v24 >> 1) {
          int v23 = sub_260DB0E04((void *)(v24 > 1), v25 + 1, 1, v23);
        }
        v23[2] = v25 + 1;
        uint64_t v35 = v23;
        uint64_t v26 = &v23[8 * v25];
        v26[4] = v33;
        v26[5] = v3;
        *((_DWORD *)v26 + 12) = v38;
        v26[7] = v36;
        v26[8] = v30;
        v26[9] = v22;
        v26[10] = v12;
        v26[11] = v34;
        goto LABEL_31;
      }
      uint64_t v14 = v11[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_260FE41F0();
      if (v14)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_260FE4AB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        if (v15 == v16)
        {
LABEL_18:
          uint64_t v17 = *(void *)(v31 + 16);
          if (v17)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v18 = v27;
            do
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_260FE4250();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v18 += 48;
              --v17;
            }
            while (v17);
            swift_bridgeObjectRelease_n();
          }
          sub_260FE4290();
          sub_260FE4290();
          swift_bridgeObjectRelease();
          uint64_t v3 = v28;
          unint64_t v12 = sub_260FE4230();
          unint64_t result = sub_260FE4230();
          if (result >> 14 < v12 >> 14) {
            goto LABEL_38;
          }
          unint64_t v34 = result;
          uint64_t v4 = v31;
          goto LABEL_26;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        if (!v15) {
          goto LABEL_18;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = v28;
LABEL_31:
      uint64_t v4 = v31;
      uint64_t v5 = v29;
      goto LABEL_4;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_4:
    if (++v6 == v37)
    {
      swift_bridgeObjectRelease();
      return (unint64_t)v35;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t PersonIndications.description.getter()
{
  unint64_t v0 = PersonIndications.spans.getter();
  int64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_260DB45C4(0, v1, 0);
    unint64_t v2 = v0 + 48;
    do
    {
      sub_260FE4250();
      uint64_t v3 = sub_260FE4300();
      MEMORY[0x26122A9E0](v3);
      sub_260FE4250();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_260FE4250();
      sub_260FE4DA0();
      sub_260FE4250();
      PersonIndications.Indication.description.getter();
      sub_260FE4250();
      swift_bridgeObjectRelease();
      unint64_t v5 = *(void *)(v14 + 16);
      unint64_t v4 = *(void *)(v14 + 24);
      if (v5 >= v4 >> 1) {
        sub_260DB45C4(v4 > 1, v5 + 1, 1);
      }
      v2 += 64;
      *(void *)(v14 + 16) = v5 + 1;
      uint64_t v6 = v14 + 16 * v5;
      *(void *)(v6 + 32) = 0;
      *(void *)(v6 + 40) = 0xE000000000000000;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
  sub_260E423DC();
  sub_260FE3F90();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_260FE4040();
  MEMORY[0x270FA5388](v7 - 8, v8);
  sub_260FE4030();
  sub_260FE4020();
  swift_bridgeObjectRetain();
  sub_260FE4010();
  swift_bridgeObjectRelease();
  sub_260FE4020();
  sub_260FE4010();
  swift_bridgeObjectRelease();
  sub_260FE4020();
  uint64_t v9 = sub_260FE4060();
  MEMORY[0x270FA5388](v9 - 8, v10);
  sub_260FE4050();
  uint64_t v11 = sub_260FE3180();
  MEMORY[0x270FA5388](v11 - 8, v12);
  sub_260FE3170();
  return sub_260FE4120();
}

uint64_t PersonIndications._rewrittenPromptSpans.getter()
{
  return swift_bridgeObjectRetain();
}

double sub_260F54740()
{
  uint64_t v0 = sub_260FE4300();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6E90);
  uint64_t v7 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v7 + 16) = xmmword_260FE7080;
  *(void *)(v7 + 32) = 0;
  *(void *)(v7 + 40) = 0xE000000000000000;
  *(void *)(v7 + 48) = v0;
  *(void *)(v7 + 56) = v2;
  *(void *)(v7 + 64) = v4;
  *(void *)(v7 + 72) = v6;
  qword_26A90FBD0 = 0;
  *(void *)algn_26A90FBD8 = 0xE000000000000000;
  qword_26A90FBE0 = v7;
  unk_26A90FBE8 = MEMORY[0x263F8EE78];
  return result;
}

unint64_t sub_260F547DC()
{
  unint64_t result = 0x74706D6F7270;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x736E617073;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260F54874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260F564F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260F5489C(uint64_t a1)
{
  unint64_t v2 = sub_260F55254();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260F548D8(uint64_t a1)
{
  unint64_t v2 = sub_260F55254();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PersonIndications.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA7D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v3;
  uint64_t v12 = v3[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F55254();
  sub_260FE53E0();
  uint64_t v13 = v10;
  long long v14 = *(_OWORD *)(v3 + 1);
  char v15 = 2;
  sub_260E42340();
  sub_260FE50B0();
  if (!v2)
  {
    uint64_t v13 = v12;
    char v15 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA7E8);
    sub_260F56484(&qword_26A8EA7F0, &qword_26A8EA7E8, (void (*)(void))sub_260F552A8);
    sub_260FE50B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t PersonIndications.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA800);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F55254();
  sub_260FE53B0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v24 = 2;
  sub_260E422EC();
  sub_260FE4F60();
  uint64_t v11 = v22;
  if (v22)
  {
    uint64_t v19 = a2;
    uint64_t v20 = v23;
    uint64_t v18 = v21;
  }
  else
  {
    LOBYTE(v21) = 0;
    uint64_t v12 = sub_260FE4F70();
    uint64_t v19 = a2;
    uint64_t v18 = sub_260E26528(v12, v13);
    uint64_t v11 = v14;
    uint64_t v20 = v15;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA7E8);
  char v24 = 3;
  sub_260F56484(&qword_26A8EA808, &qword_26A8EA7E8, (void (*)(void))sub_260F552FC);
  sub_260FE4F60();
  uint64_t v16 = v21;
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    char v24 = 1;
    sub_260FE4FB0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v16 = v21;
  }
  uint64_t v17 = v19;
  *uint64_t v19 = v18;
  v17[1] = v11;
  v17[2] = v20;
  v17[3] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260F54E38@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PersonIndications.init(from:)(a1, a2);
}

uint64_t sub_260F54E50(void *a1)
{
  return PersonIndications.encode(to:)(a1);
}

BOOL _s16VisualGeneration17PersonIndicationsV4SpanV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  unint64_t v6 = *(void *)(a1 + 48);
  unint64_t v7 = *(void *)(a1 + 56);
  int v8 = *(_DWORD *)(a2 + 16);
  uint64_t v10 = *(void **)(a2 + 24);
  uint64_t v9 = *(void **)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v15 = *(void *)(a2 + 48);
  uint64_t v16 = *(void **)(a2 + 40);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v8) {
      return 0;
    }
  }
  else
  {
    char v12 = sub_260FE5150();
    BOOL result = 0;
    if ((v12 & 1) == 0 || v2 != v8) {
      return result;
    }
  }
  if ((sub_260E3AC28(v4, v10) & 1) == 0 || (sub_260E3AC28(v3, v9) & 1) == 0 || (sub_260E3AC28(v5, v16) & 1) == 0) {
    return 0;
  }
  return (v15 ^ v6) < 0x4000 && (v11 ^ v7) < 0x4000;
}

uint64_t _s16VisualGeneration17PersonIndicationsV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  uint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_260FE5150() & 1) == 0 || (sub_260E3A8C8(v2, v5) & 1) == 0) {
    return 0;
  }
  return sub_260E3A9E4(v3, v4);
}

unint64_t sub_260F55008()
{
  unint64_t result = qword_26A8EA7A0;
  if (!qword_26A8EA7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA7A0);
  }
  return result;
}

unint64_t sub_260F5505C()
{
  unint64_t result = qword_26A8EA7B8;
  if (!qword_26A8EA7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA7B8);
  }
  return result;
}

unint64_t sub_260F550B0()
{
  unint64_t result = qword_26A8EA7D0;
  if (!qword_26A8EA7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA7D0);
  }
  return result;
}

void *sub_260F55104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v7 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  int v8 = (void *)MEMORY[0x263F8EE78];
  uint64_t v21 = a4;
  do
  {
    unint64_t v9 = *(v7 - 1);
    uint64_t v10 = *v7;
    unint64_t v11 = *(v7 - 2);
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_260E23CA0(v11, v9, a2, a3, a4);
    if (v14)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v15 = v12;
      uint64_t v16 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v8 = sub_260DB0F14(0, v8[2] + 1, 1, v8);
      }
      unint64_t v18 = v8[2];
      unint64_t v17 = v8[3];
      if (v18 >= v17 >> 1) {
        int v8 = sub_260DB0F14((void *)(v17 > 1), v18 + 1, 1, v8);
      }
      v8[2] = v18 + 1;
      uint64_t v19 = &v8[3 * v18];
      void v19[4] = v15;
      v19[5] = v16;
      v19[6] = v10;
      a4 = v21;
    }
    v7 += 3;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_260F55254()
{
  unint64_t result = qword_26A8EA7E0;
  if (!qword_26A8EA7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA7E0);
  }
  return result;
}

unint64_t sub_260F552A8()
{
  unint64_t result = qword_26A8EA7F8;
  if (!qword_26A8EA7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA7F8);
  }
  return result;
}

unint64_t sub_260F552FC()
{
  unint64_t result = qword_26A8EA810;
  if (!qword_26A8EA810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA810);
  }
  return result;
}

unint64_t sub_260F55354()
{
  unint64_t result = qword_26A8EA818;
  if (!qword_26A8EA818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA818);
  }
  return result;
}

unint64_t sub_260F553AC()
{
  unint64_t result = qword_26A8EA820;
  if (!qword_26A8EA820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA820);
  }
  return result;
}

unint64_t sub_260F55404()
{
  unint64_t result = qword_26A8EA828;
  if (!qword_26A8EA828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA828);
  }
  return result;
}

unint64_t sub_260F5545C()
{
  unint64_t result = qword_26A8EA830;
  if (!qword_26A8EA830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA830);
  }
  return result;
}

uint64_t destroy for PersonIndications()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PersonIndications(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PersonIndications(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PersonIndications(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonIndications(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonIndications(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonIndications()
{
  return &type metadata for PersonIndications;
}

ValueMetadata *type metadata accessor for PersonIndications.Indication()
{
  return &type metadata for PersonIndications.Indication;
}

uint64_t destroy for PersonIndications.Span()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PersonIndications.Span(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PersonIndications.Span(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for PersonIndications.Span(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonIndications.Span(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonIndications.Span(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonIndications.Span()
{
  return &type metadata for PersonIndications.Span;
}

unsigned char *storeEnumTagSinglePayload for PersonIndications.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F55A14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonIndications.CodingKeys()
{
  return &type metadata for PersonIndications.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for PersonIndications.Span.AttributeSpan(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PersonIndications.Span.AttributeSpan(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PersonIndications.Span.AttributeSpan(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PipelineConfiguration.InputConditioning.Float16Data(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PipelineConfiguration.InputConditioning.Float16Data(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonIndications.Span.AttributeSpan()
{
  return &type metadata for PersonIndications.Span.AttributeSpan;
}

unsigned char *storeEnumTagSinglePayload for PersonIndications.Span.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F55C70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonIndications.Span.CodingKeys()
{
  return &type metadata for PersonIndications.Span.CodingKeys;
}

unint64_t sub_260F55CAC()
{
  unint64_t result = qword_26A8EA838;
  if (!qword_26A8EA838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA838);
  }
  return result;
}

unint64_t sub_260F55D04()
{
  unint64_t result = qword_26A8EA840;
  if (!qword_26A8EA840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA840);
  }
  return result;
}

unint64_t sub_260F55D5C()
{
  unint64_t result = qword_26A8EA848;
  if (!qword_26A8EA848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA848);
  }
  return result;
}

unint64_t sub_260F55DB4()
{
  unint64_t result = qword_26A8EA850;
  if (!qword_26A8EA850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA850);
  }
  return result;
}

unint64_t sub_260F55E0C()
{
  unint64_t result = qword_26A8EA858;
  if (!qword_26A8EA858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA858);
  }
  return result;
}

unint64_t sub_260F55E64()
{
  unint64_t result = qword_26A8EA860;
  if (!qword_26A8EA860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA860);
  }
  return result;
}

uint64_t sub_260F55EB8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000261000B10 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737265646E6567 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_260F55FA8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA880);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F56430();
  sub_260FE53B0();
  char v10 = 0;
  sub_260E275E0();
  sub_260FE4FB0();
  uint64_t v7 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E8ED8);
  char v10 = 1;
  sub_260F56484(&qword_26A8EA888, &qword_26A8E8ED8, (void (*)(void))sub_260E17B2C);
  sub_260FE4FB0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v7;
}

uint64_t sub_260F561CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
  if (v2 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974616369646E69 && a2 == 0xEA00000000006E6FLL || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000261000A50 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000261000A70 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000261000A90 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000261000AB0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_260F56430()
{
  unint64_t result = qword_26A8EA870;
  if (!qword_26A8EA870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA870);
  }
  return result;
}

uint64_t sub_260F56484(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_260F564F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
  if (v2 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E617073 && a2 == 0xE500000000000000 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000261000AD0 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000261000AF0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unsigned char *storeEnumTagSinglePayload for PersonIndications.Span.AttributeSpan.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F5675CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonIndications.Span.AttributeSpan.CodingKeys()
{
  return &type metadata for PersonIndications.Span.AttributeSpan.CodingKeys;
}

unint64_t sub_260F56798()
{
  unint64_t result = qword_26A8EA890;
  if (!qword_26A8EA890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA890);
  }
  return result;
}

unint64_t sub_260F567F0()
{
  unint64_t result = qword_26A8EA898;
  if (!qword_26A8EA898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA898);
  }
  return result;
}

unint64_t sub_260F56848()
{
  unint64_t result = qword_26A8EA8A0;
  if (!qword_26A8EA8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA8A0);
  }
  return result;
}

uint64_t dispatch thunk of ForceInProcessGenerationAssignable.forceInProcessGeneration.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_260DAC8C8;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ForceInProcessGenerationAssignable.assign(forceInProcessGeneration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_260DACD28;
  return v9(a1, a2, a3);
}

uint64_t BidirectionalCollection._visualGeneration_suffix(while:)@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v23 = a4;
  char v24 = a1;
  uint64_t v8 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v10);
  unint64_t v12 = (char *)&v19 - v11;
  uint64_t v21 = v8;
  swift_getAssociatedConformanceWitness();
  uint64_t v13 = sub_260FE4DB0();
  uint64_t v20 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v14);
  uint64_t v16 = (char *)&v19 - v15;
  uint64_t v17 = v25;
  uint64_t result = BidirectionalCollection._visualGeneration_startOfSuffix(while:)(v24, a2, a3, (uint64_t)v12);
  if (!v17)
  {
    uint64_t v25 = v5;
    uint64_t result = sub_260FE3FD0();
    if (result)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v16, v12, AssociatedTypeWitness);
      swift_getWitnessTable();
      sub_260FE4780();
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v16, v13);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t BidirectionalCollection._visualGeneration_startOfSuffix(while:)@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v35 = a4;
  uint64_t v46 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v5);
  os_log_type_t v39 = (char *)&v33 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v7, v9);
  unsigned __int8 v48 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10, v12);
  int v47 = (char *)&v33 - v14;
  MEMORY[0x270FA5388](v13, v15);
  uint64_t v17 = (char *)&v33 - v16;
  sub_260FE4760();
  unint64_t v18 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v34 = v8;
  unsigned __int8 v36 = (void (**)(char *))(v4 + 16);
  uint64_t v37 = (void (**)(char *, char *, uint64_t))(v8 + 16);
  int v38 = (void (**)(char *, uint64_t))(v4 + 8);
  char v41 = v17;
  uint64_t v42 = v7;
  char v40 = (void (**)(char *, uint64_t))(v8 + 8);
  while (1)
  {
    uint64_t v19 = v47;
    sub_260FE4720();
    swift_getAssociatedConformanceWitness();
    char v20 = sub_260FE3FD0();
    uint64_t v21 = *v18;
    v21(v19, v7);
    if (v20)
    {
      uint64_t v30 = v17;
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v35, v30, v7);
    }
    uint64_t v22 = v48;
    (*v37)(v48, v17, v7);
    sub_260FE3F80();
    uint64_t v23 = (void (*)(char *, void))sub_260FE47A0();
    char v24 = v39;
    uint64_t v25 = AssociatedTypeWitness;
    (*v36)(v39);
    v23(v49, 0);
    uint64_t v26 = v50;
    char v27 = v44(v24);
    if (v26)
    {
      (*v38)(v24, v25);
      uint64_t v31 = v42;
      v21(v22, v42);
      return ((uint64_t (*)(char *, uint64_t))v21)(v41, v31);
    }
    char v28 = v27;
    (*v38)(v24, v25);
    if ((v28 & 1) == 0) {
      break;
    }
    uint64_t v50 = 0;
    uint64_t v7 = v42;
    uint64_t v29 = v40;
    v21(v48, v42);
    unint64_t v18 = v29;
    uint64_t v17 = v41;
  }
  uint64_t v7 = v42;
  v21(v41, v42);
  uint64_t v30 = v48;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v35, v30, v7);
}

id sub_260F570F8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  id v5 = (id)sub_260FE4070();
  id v6 = objc_msgSend(self, sel_filterWithName_, v5);

  if (v6)
  {
    objc_msgSend(v2, sel_extent);
    CGRectGetHeight(v13);
    objc_msgSend(v2, sel_extent);
    CGRectGetWidth(v14);
    uint64_t v7 = (void *)sub_260FE3190();
    objc_msgSend(v6, sel_setValue_forKey_, v7, *MEMORY[0x263F00990]);

    id v5 = (id)sub_260FE3190();
    objc_msgSend(v6, sel_setValue_forKey_, v5, *MEMORY[0x263F00928]);

    objc_msgSend(v6, sel_setValue_forKey_, v2, *MEMORY[0x263F00968]);
    id v8 = objc_msgSend(v6, sel_outputImage);
    if (v8
      && (uint64_t v9 = v8,
          id v5 = objc_msgSend(v8, sel_imageByCroppingToRect_, 0.0, 0.0, (double)v3, (double)v4),
          v9,
          v5))
    {
    }
    else
    {
      sub_260F58EA0();
      swift_allocError();
      *(void *)uint64_t v11 = 0xD000000000000022;
      *(void *)(v11 + 8) = 0x8000000261000D60;
      *(unsigned char *)(v11 + 16) = 0;
      swift_willThrow();
    }
  }
  else
  {
    sub_260F58EA0();
    swift_allocError();
    *(void *)uint64_t v10 = 0xD000000000000025;
    *(void *)(v10 + 8) = 0x8000000261000D30;
    *(unsigned char *)(v10 + 16) = 1;
    swift_willThrow();
  }
  return v5;
}

int64x2_t *sub_260F57344()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for AppleDiffusionResourceFactory.AppleDiffusionAssetLock(0);
  uint64_t v5 = MEMORY[0x270FA5388](v3 - 8, v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5, v8);
  uint64_t v10 = (char *)&v23 - v9;
  v0[1] = vdupq_n_s64(0x200uLL);
  type metadata accessor for AppleDiffusionResourceFactory(0);
  static AppleDiffusionResourceFactory.shared(reset:)(0, v11);
  if (v1)
  {
    type metadata accessor for HEDEdgeDetector();
    swift_deallocPartialClassInstance();
  }
  else
  {
    AppleDiffusionResourceFactory.catalogAssetLock()((uint64_t)v10);
    uint64_t v12 = (uint64_t)v0->i64 + OBJC_IVAR____TtC16VisualGeneration15HEDEdgeDetector_modelLock;
    sub_260F58FC4((uint64_t)v10, (uint64_t)v2->i64 + OBJC_IVAR____TtC16VisualGeneration15HEDEdgeDetector_modelLock);
    uint64_t v13 = sub_260FE2F90();
    uint64_t v25 = &v23;
    uint64_t v24 = *(void *)(v13 - 8);
    uint64_t v14 = *(void *)(v24 + 64);
    MEMORY[0x270FA5388](v13, v15);
    uint64_t v16 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_260F59028(v12, (uint64_t)v7);
    AppleDiffusionResourceFactory.hedEdgeDetectorModelURL(with:)((uint64_t)v16);
    sub_260F58F68((uint64_t)v7);
    uint64_t v17 = sub_260D905B0(0, &qword_26A8EA8E0);
    uint64_t v23 = (uint64_t)&v23;
    MEMORY[0x270FA5388](v17, v18);
    uint64_t v19 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v16, v16, v13);
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00D98]), sel_init);
    id v22 = sub_260F589A0((uint64_t)v16, (uint64_t)v20);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v13);
    swift_release();
    v2[2].i64[0] = (uint64_t)v22;
  }
  return v2;
}

uint64_t sub_260F5768C(uint64_t a1, char a2)
{
  uint64_t v4 = v2;
  uint64_t v69 = *MEMORY[0x263EF8340];
  uint64_t v6 = *(void **)a1;
  int v7 = *(unsigned __int8 *)(a1 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (v7 == 1)
    {
      id v8 = v6;
      if ((a2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCVPixelBuffer_, v6);
  }
  else
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCGImage_, v6);
  }
  id v8 = v9;
  if ((a2 & 1) == 0) {
    goto LABEL_9;
  }
LABEL_8:
  id v10 = v8;
  id v8 = sub_260F58B00(v10);

  if (v3) {
    return (uint64_t)v8;
  }
LABEL_9:
  if (!v7)
  {
    uint64_t v19 = v6;
    size_t Width = CGImageGetWidth(v19);
    size_t Height = CGImageGetHeight(v19);

    id v20 = v19;
    size_t v21 = CGImageGetWidth(v20);
    size_t v22 = CGImageGetHeight(v20);
LABEL_28:
    size_t v24 = v22;

    if (v21 == 512 && v24 == 512) {
      goto LABEL_33;
    }
    goto LABEL_30;
  }
  if (v7 != 1)
  {
    uint64_t v23 = v6;
    size_t Width = CVPixelBufferGetWidth(v23);
    size_t Height = CVPixelBufferGetHeight(v23);

    id v20 = v23;
    size_t v21 = CVPixelBufferGetWidth(v20);
    size_t v22 = CVPixelBufferGetHeight(v20);
    goto LABEL_28;
  }
  objc_msgSend(v6, sel_extent);
  if (v11 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_48;
  }
  double v13 = v11;
  if (v11 >= 9.22337204e18)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if ((*(void *)&v11 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_49;
  }
  double v14 = v12;
  if ((*(void *)&v12 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_49;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v12 >= 9.22337204e18)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  objc_msgSend(v6, sel_extent);
  if (v15 <= -9.22337204e18)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v15 >= 9.22337204e18)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if ((*(void *)&v15 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&v16 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_54;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
  }
  if (v16 >= 9.22337204e18) {
    goto LABEL_56;
  }
  size_t Width = (uint64_t)v13;
  size_t Height = (uint64_t)v14;
  if ((uint64_t)v15 == 512 && (uint64_t)v16 == 512) {
    goto LABEL_33;
  }
LABEL_30:
  int64x2_t aBlock = vdupq_n_s64(0x200uLL);
  id v25 = sub_260F570F8(aBlock.i64);
  if (v3)
  {
LABEL_31:

    return (uint64_t)v8;
  }
  id v26 = v25;

  id v8 = v26;
LABEL_33:
  char v27 = *(void **)(v4 + 32);
  char v28 = self;
  aBlock.i64[0] = 0;
  id v29 = v27;
  id v30 = objc_msgSend(v28, sel_modelForMLModel_error_, v29, &aBlock);
  if (!v30)
  {
    id v50 = (id)aBlock.i64[0];
    sub_260FE2E30();

    swift_willThrow();
    return (uint64_t)v8;
  }
  uint64_t v31 = v30;
  uint64_t v60 = Height;
  uint64_t v58 = Width;
  id v32 = (id)aBlock.i64[0];

  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = 0;
  uint64_t v61 = (void **)(v33 + 16);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = 0;
  uint64_t v59 = (uint64_t *)(v34 + 16);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v34;
  *(void *)(v35 + 24) = v33;
  id v36 = objc_allocWithZone(MEMORY[0x263F1EE48]);
  uint64_t v67 = sub_260F58764;
  uint64_t v68 = v35;
  aBlock.i64[0] = MEMORY[0x263EF8330];
  aBlock.i64[1] = 1107296256;
  uint64_t v65 = sub_260F588FC;
  uint64_t v66 = &block_descriptor_14;
  uint64_t v37 = _Block_copy(&aBlock);
  id v38 = v31;
  swift_retain();
  swift_retain();
  swift_release();
  id v39 = objc_msgSend(v36, sel_initWithModel_completionHandler_, v38, v37);
  uint64_t v62 = v38;

  _Block_release(v37);
  id v40 = v8;
  sub_260DAB05C(MEMORY[0x263F8EE78]);
  id v41 = objc_allocWithZone(MEMORY[0x263F1EF40]);
  type metadata accessor for VNImageOption(0);
  sub_260DF61C4();
  uint64_t v42 = (void *)sub_260FE3E90();
  swift_bridgeObjectRelease();
  id v43 = objc_msgSend(v41, sel_initWithCIImage_options_, v40, v42);

  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_260FE7020;
  *(void *)(v44 + 32) = v39;
  aBlock.i64[0] = v44;
  sub_260FE4420();
  sub_260D905B0(0, &qword_26A8E7580);
  id v45 = v39;
  uint64_t v46 = (void *)sub_260FE43F0();
  swift_bridgeObjectRelease();
  aBlock.i64[0] = 0;
  LOBYTE(v39) = objc_msgSend(v43, sel_performRequests_error_, v46, &aBlock);

  id v8 = (id)aBlock.i64[0];
  if ((v39 & 1) == 0)
  {
    id v51 = (id)aBlock.i64[0];
    sub_260FE2E30();

    swift_willThrow();
    swift_release();
    swift_release();

    return (uint64_t)v8;
  }
  swift_beginAccess();
  int v47 = *v61;
  if (*v61)
  {
    id v48 = v8;
    id v49 = v47;
    swift_willThrow();
    swift_release();
    swift_release();

    return (uint64_t)v8;
  }
  uint64_t result = swift_beginAccess();
  uint64_t v53 = *v59;
  if (*v59)
  {
    id v54 = objc_allocWithZone(MEMORY[0x263F00650]);
    id v55 = v8;
    id v8 = objc_msgSend(v54, sel_initWithCVPixelBuffer_, v53);
    objc_msgSend(v8, sel_extent);
    if (CGRectGetWidth(v70) == (double)v58)
    {
      objc_msgSend(v8, sel_extent);
      if (CGRectGetHeight(v71) == (double)v60)
      {
        swift_release();
        swift_release();

        return (uint64_t)v8;
      }
    }
    v63[0] = v58;
    v63[1] = v60;
    id v56 = sub_260F570F8(v63);
    if (!v3)
    {
      id v57 = v56;
      swift_release();
      swift_release();

      return (uint64_t)v57;
    }
    swift_release();
    swift_release();

    goto LABEL_31;
  }
  __break(1u);
  return result;
}

void sub_260F57E7C(void *a1, id a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    id v5 = a2;
    id v6 = a2;
LABEL_14:
    swift_willThrow();
    goto LABEL_15;
  }
  id v8 = objc_msgSend(a1, sel_results);
  if (!v8
    || (id v9 = v8,
        sub_260D905B0(0, &qword_26A8EA8D0),
        unint64_t v10 = sub_260FE4400(),
        v9,
        unint64_t v11 = sub_260E5BB14(v10),
        swift_bridgeObjectRelease(),
        !v11))
  {
    sub_260F58EA0();
    id v5 = (id)swift_allocError();
    *(void *)uint64_t v16 = 0xD00000000000001ELL;
    *(void *)(v16 + 8) = 0x8000000261000C10;
LABEL_13:
    *(unsigned char *)(v16 + 16) = 0;
    goto LABEL_14;
  }
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_260FE4E40();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
  if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_19:
    swift_bridgeObjectRelease();
    sub_260F58EA0();
    id v5 = (id)swift_allocError();
    *(void *)uint64_t v16 = 0xD000000000000016;
    *(void *)(v16 + 8) = 0x8000000261000C50;
    goto LABEL_13;
  }
LABEL_7:
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v12 = (id)MEMORY[0x26122B4C0](0, v11);
  }
  else
  {
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v12 = *(id *)(v11 + 32);
  }
  double v13 = v12;
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v13, sel_featureValue);
  id v15 = objc_msgSend(v14, sel_multiArrayValue);

  if (v15)
  {
    sub_260F58148();
    uint64_t v21 = v20;

    swift_beginAccess();
    size_t v22 = *(void **)(a3 + 16);
    *(void *)(a3 + 16) = v21;

    return;
  }
  sub_260F58EA0();
  id v5 = (id)swift_allocError();
  *(void *)uint64_t v19 = 0xD00000000000001BLL;
  *(void *)(v19 + 8) = 0x8000000261000C30;
  *(unsigned char *)(v19 + 16) = 0;
  swift_willThrow();

LABEL_15:
  uint64_t v17 = (void **)(a4 + 16);
  swift_beginAccess();
  uint64_t v18 = *v17;
  *uint64_t v17 = v5;
}

void sub_260F58148()
{
  uint64_t v2 = v0;
  id v3 = objc_msgSend(v0, sel_shape);
  sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
  unint64_t v4 = sub_260FE4400();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_260FE4E40();
    swift_bridgeObjectRelease();
    if (v26 != 4) {
      goto LABEL_27;
    }
  }
  else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) != 4)
  {
    goto LABEL_27;
  }
  unint64_t v5 = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x26122B4C0](0, v4);
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_32;
    }
    id v6 = *(id *)(v4 + 32);
  }
  int v7 = v6;
  id v8 = (void *)sub_260FE4A30();
  char v9 = sub_260FE4A40();

  if ((v9 & 1) == 0)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    sub_260F58EF4();
    swift_allocError();
    *(void *)uint64_t v15 = 0xD000000000000023;
    *(void *)(v15 + 8) = 0x8000000261000C70;
    goto LABEL_28;
  }
  if (v5)
  {
    id v10 = (id)MEMORY[0x26122B4C0](1, v4);
    goto LABEL_11;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  id v10 = *(id *)(v4 + 40);
LABEL_11:
  unint64_t v11 = v10;
  id v12 = (void *)sub_260FE4A30();
  char v13 = sub_260FE4A40();

  if ((v13 & 1) == 0) {
    goto LABEL_27;
  }
  if (objc_msgSend(v2, sel_dataType) != (id)65552)
  {
    swift_bridgeObjectRelease();
    sub_260F58EF4();
    swift_allocError();
    *(void *)uint64_t v15 = 0xD000000000000013;
    *(void *)(v15 + 8) = 0x8000000261000CA0;
LABEL_28:
    *(unsigned char *)(v15 + 16) = 0;
    swift_willThrow();
    return;
  }
  if (v5)
  {
    id v14 = (id)MEMORY[0x26122B4C0](3, v4);
    goto LABEL_18;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v14 = *(id *)(v4 + 56);
LABEL_18:
  uint64_t v16 = v14;
  id v17 = objc_msgSend(v14, sel_integerValue);

  if (v5)
  {
    id v18 = (id)MEMORY[0x26122B4C0](2, v4);
    goto LABEL_22;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
  {
LABEL_34:
    __break(1u);
    return;
  }
  id v18 = *(id *)(v4 + 48);
LABEL_22:
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v19, sel_integerValue);

  v27[0] = (size_t)v17;
  v27[1] = (size_t)v20;
  uint64_t v21 = sub_260E32A54(v27, 0x4C303066u);
  if (!v1)
  {
    size_t v22 = v21;
    CVPixelBufferLockBaseAddress(v21, 0);
    CVPixelBufferGetBytesPerRow(v22);
    BaseAddress = CVPixelBufferGetBaseAddress(v22);
    if (BaseAddress)
    {
      MEMORY[0x270FA5388](BaseAddress, v24);
      sub_260FE4820();
      CVPixelBufferUnlockBaseAddress(v22, 0);
    }
    else
    {
      sub_260F58EF4();
      swift_allocError();
      *(void *)uint64_t v25 = 0xD00000000000001ELL;
      *(void *)(v25 + 8) = 0x8000000261000CC0;
      *(unsigned char *)(v25 + 16) = 1;
      swift_willThrow();
      CVPixelBufferUnlockBaseAddress(v22, 0);
    }
  }
}

uint64_t sub_260F5854C()
{
  sub_260F58F68(v0 + OBJC_IVAR____TtC16VisualGeneration15HEDEdgeDetector_modelLock);
  return swift_deallocClassInstance();
}

uint64_t sub_260F585B8()
{
  return type metadata accessor for HEDEdgeDetector();
}

uint64_t type metadata accessor for HEDEdgeDetector()
{
  uint64_t result = qword_26A8EA8B8;
  if (!qword_26A8EA8B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_260F5860C()
{
  uint64_t result = sub_260FE3440();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_260F586B4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_260F586EC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_260F58724()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_260F58764(void *a1, void *a2)
{
  sub_260F57E7C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

vImage_Error sub_260F5876C(void *a1, uint64_t a2, uint64_t a3, vImagePixelCount a4, vImagePixelCount a5, void *a6, size_t a7)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  if (*(void *)(a3 + 16) < 4uLL)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)(a3 + 56);
  if (v7 != 1)
  {
    sub_260F58EF4();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD00000000000001DLL;
    id v10 = "unexpected multi array stride";
LABEL_10:
    *(void *)(v9 + 8) = (unint64_t)(v10 - 32) | 0x8000000000000000;
    *(unsigned char *)(v9 + 16) = v7 == 1;
    return swift_willThrow();
  }
  if (!a1)
  {
    sub_260F58EF4();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD000000000000022;
    id v10 = "error with multiarray base address";
    goto LABEL_10;
  }
  if ((a5 & 0x8000000000000000) == 0 && (a4 & 0x8000000000000000) == 0)
  {
    if ((uint64_t)(a4 + 0x4000000000000000) >= 0)
    {
      src.data = a1;
      src.height = a5;
      src.width = a4;
      src.rowBytes = 2 * a4;
      dest.data = a6;
      dest.height = a5;
      dest.width = a4;
      dest.rowBytes = a7;
      return vImageConvert_Planar16FtoPlanarF(&src, &dest, 0);
    }
LABEL_12:
    __break(1u);
  }
  vImage_Error result = sub_260FE4E10();
  __break(1u);
  return result;
}

void sub_260F588FC(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

id sub_260F589A0(uint64_t a1, uint64_t a2)
{
  v13[1] = *(id *)MEMORY[0x263EF8340];
  unint64_t v4 = (void *)sub_260FE2EF0();
  v13[0] = 0;
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_configuration_error_, v4, a2, v13);

  id v6 = v13[0];
  if (v5)
  {
    uint64_t v7 = sub_260FE2F90();
    id v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    id v9 = v6;
    v8(a1, v7);
  }
  else
  {
    id v10 = v13[0];
    sub_260FE2E30();

    swift_willThrow();
    uint64_t v11 = sub_260FE2F90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

id sub_260F58B00(id a1)
{
  uint64_t v2 = (void *)sub_260FE4070();
  id v3 = objc_msgSend(self, sel_filterWithName_, v2);

  if (v3)
  {
    objc_msgSend(v3, sel_setValue_forKey_, a1, *MEMORY[0x263F00968]);
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00680]), sel_initWithX_Y_Z_W_, 0.874509804, 0.0, 0.0, 0.0);
    id v5 = (void *)sub_260FE4070();
    objc_msgSend(v3, sel_setValue_forKey_, v4, v5);

    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00680]), sel_initWithX_Y_Z_W_, 0.0, 0.874509804, 0.0, 0.0);
    uint64_t v7 = (void *)sub_260FE4070();
    objc_msgSend(v3, sel_setValue_forKey_, v6, v7);

    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00680]), sel_initWithX_Y_Z_W_, 0.0, 0.0, 0.874509804, 0.0);
    id v9 = (void *)sub_260FE4070();
    objc_msgSend(v3, sel_setValue_forKey_, v8, v9);

    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00680]), sel_initWithX_Y_Z_W_, 0.0, 0.0, 0.0, 1.0);
    uint64_t v11 = (void *)sub_260FE4070();
    objc_msgSend(v3, sel_setValue_forKey_, v10, v11);

    a1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00680]), sel_initWithX_Y_Z_W_, 0.125490196, 0.125490196, 0.125490196, 0.0);
    id v12 = (void *)sub_260FE4070();
    objc_msgSend(v3, sel_setValue_forKey_, a1, v12);

    id v13 = objc_msgSend(v3, sel_outputImage);
    if (v13)
    {
      a1 = v13;
    }
    else
    {
      sub_260F58EA0();
      swift_allocError();
      *(void *)uint64_t v15 = 0xD000000000000027;
      *(void *)(v15 + 8) = 0x8000000261000BE0;
      *(unsigned char *)(v15 + 16) = 0;
      swift_willThrow();
    }
  }
  else
  {
    sub_260F58EA0();
    swift_allocError();
    *(void *)uint64_t v14 = 0xD000000000000022;
    *(void *)(v14 + 8) = 0x8000000261000BB0;
    *(unsigned char *)(v14 + 16) = 1;
    swift_willThrow();
  }
  return a1;
}

unint64_t sub_260F58EA0()
{
  unint64_t result = qword_26A8EA8C8;
  if (!qword_26A8EA8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA8C8);
  }
  return result;
}

unint64_t sub_260F58EF4()
{
  unint64_t result = qword_26A8EA8D8;
  if (!qword_26A8EA8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA8D8);
  }
  return result;
}

vImage_Error sub_260F58F48(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_260F5876C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_260F58F68(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppleDiffusionResourceFactory.AppleDiffusionAssetLock(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_260F58FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppleDiffusionResourceFactory.AppleDiffusionAssetLock(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_260F59028(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppleDiffusionResourceFactory.AppleDiffusionAssetLock(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_260F59090()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for MLMultiArrayConversionError()
{
  return sub_260F590A8();
}

uint64_t sub_260F590A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s16VisualGeneration27MLMultiArrayConversionErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_260F59090();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MLMultiArrayConversionError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_260F59090();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_260F590A8();
  return a1;
}

uint64_t assignWithTake for MLMultiArrayConversionError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_260F590A8();
  return a1;
}

uint64_t getEnumTagSinglePayload for MLMultiArrayConversionError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MLMultiArrayConversionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_260F59228(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MLMultiArrayConversionError()
{
  return &type metadata for MLMultiArrayConversionError;
}

ValueMetadata *type metadata accessor for HEDEdgeDetectorError()
{
  return &type metadata for HEDEdgeDetectorError;
}

uint64_t DetectedFacesPolicy.generatedImage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_260DF725C(v1, a1);
}

uint64_t DetectedFacesPolicy.allowedFaceCountRange.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for DetectedFacesPolicy() + 20));
}

uint64_t type metadata accessor for DetectedFacesPolicy()
{
  uint64_t result = qword_26A8EA8F0;
  if (!qword_26A8EA8F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DetectedFacesPolicy.detectedFaces.getter()
{
  type metadata accessor for DetectedFacesPolicy();
  return swift_bridgeObjectRetain();
}

uint64_t DetectedFacesPolicy.description.getter()
{
  sub_260FE4C20();
  type metadata accessor for DetectedFacesPolicy();
  uint64_t v0 = sub_260FE5110();
  swift_bridgeObjectRelease();
  sub_260FE4250();
  sub_260FE4DA0();
  sub_260FE4250();
  sub_260FE4DA0();
  sub_260FE4250();
  swift_bridgeObjectRelease();
  sub_260FE4250();
  return v0;
}

uint64_t sub_260F5946C(uint64_t a1)
{
  uint64_t result = sub_260F594F4(&qword_26A8E66C0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_260F594B0(uint64_t a1)
{
  uint64_t result = sub_260F594F4(&qword_26A8EA8E8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_260F594F4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DetectedFacesPolicy();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_260F5953C()
{
  uint64_t result = type metadata accessor for DetectedFacesPolicy();
  uint64_t v2 = (uint64_t *)(v0 + *(int *)(result + 20));
  uint64_t v3 = v2[1];
  uint64_t v4 = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v4 <= 0)
  {
    uint64_t v8 = sub_260FE4060();
    MEMORY[0x270FA5388](v8 - 8, v9);
    sub_260FE3FF0();
    uint64_t v10 = sub_260FE3180();
    MEMORY[0x270FA5388](v10 - 8, v11);
    sub_260FE3170();
    return sub_260FE4120();
  }
  uint64_t v5 = *v2;
  if (!*v2)
  {
    uint64_t v12 = sub_260FE4040();
    MEMORY[0x270FA5388](v12 - 8, v13);
    sub_260FE4030();
    sub_260FE4020();
    sub_260FE4000();
    goto LABEL_9;
  }
  if (__OFADD__(v5, v4)) {
    goto LABEL_12;
  }
  if (__OFSUB__(v5 + v4, 1))
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v6 = sub_260FE4040();
  MEMORY[0x270FA5388](v6 - 8, v7);
  sub_260FE4030();
  sub_260FE4020();
  sub_260FE4000();
  sub_260FE4020();
  sub_260FE4000();
LABEL_9:
  sub_260FE4020();
  sub_260FE4000();
  sub_260FE4020();
  uint64_t v14 = sub_260FE4060();
  MEMORY[0x270FA5388](v14 - 8, v15);
  sub_260FE4050();
  uint64_t v16 = sub_260FE3180();
  MEMORY[0x270FA5388](v16 - 8, v17);
  sub_260FE3170();
  return sub_260FE4120();
}

char *initializeBufferWithCopyOfBuffer for DetectedFacesPolicy(char *a1, char **a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v18 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = &v18[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    char v8 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    a1[8] = v8;
    uint64_t v22 = type metadata accessor for GeneratedImage();
    uint64_t v9 = *(int *)(v22 + 20);
    uint64_t v10 = &v4[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    v4[v9] = *((unsigned char *)a2 + v9);
    uint64_t v12 = (int *)type metadata accessor for ImageProvenance();
    uint64_t v13 = v12[5];
    uint64_t v20 = v11 + v13;
    uint64_t v21 = &v10[v13];
    uint64_t v14 = sub_260FE3110();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    uint64_t v16 = v7;
    v15(v21, v20, v14);
    *(void *)&v10[v12[6]] = *(void *)(v11 + v12[6]);
    *(void *)&v10[v12[7]] = *(void *)(v11 + v12[7]);
    v4[*(int *)(v22 + 24)] = *((unsigned char *)a2 + *(int *)(v22 + 24));
    uint64_t v17 = *(int *)(a3 + 24);
    *(_OWORD *)&v4[*(int *)(a3 + 20)] = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(void *)&v4[v17] = *(char **)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for DetectedFacesPolicy(id *a1)
{
  uint64_t v2 = (char *)a1 + *(int *)(type metadata accessor for GeneratedImage() + 20);
  uint64_t v3 = &v2[*(int *)(type metadata accessor for ImageProvenance() + 20)];
  uint64_t v4 = sub_260FE3110();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectedFacesPolicy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(void **)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v19 = type metadata accessor for GeneratedImage();
  uint64_t v7 = *(int *)(v19 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ImageProvenance();
  uint64_t v11 = v10[5];
  uint64_t v18 = v8 + v11;
  uint64_t v12 = v9 + v11;
  uint64_t v13 = sub_260FE3110();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  id v15 = v5;
  v14(v18, v12, v13);
  *(void *)(v8 + v10[6]) = *(void *)(v9 + v10[6]);
  *(void *)(v8 + v10[7]) = *(void *)(v9 + v10[7]);
  *(unsigned char *)(a1 + *(int *)(v19 + 24)) = *(unsigned char *)(a2 + *(int *)(v19 + 24));
  uint64_t v16 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectedFacesPolicy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(void **)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  uint64_t v8 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v7;
  id v9 = v6;

  uint64_t v10 = type metadata accessor for GeneratedImage();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for ImageProvenance();
  uint64_t v15 = v14[5];
  uint64_t v16 = v12 + v15;
  uint64_t v17 = v13 + v15;
  uint64_t v18 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  *(void *)(v12 + v14[6]) = *(void *)(v13 + v14[6]);
  *(void *)(v12 + v14[7]) = *(void *)(v13 + v14[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(v10 + 24)) = *(unsigned char *)(a2 + *(int *)(v10 + 24));
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DetectedFacesPolicy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = type metadata accessor for GeneratedImage();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ImageProvenance();
  uint64_t v11 = v10[5];
  uint64_t v12 = v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)(v8 + v10[6]) = *(void *)(v9 + v10[6]);
  *(void *)(v8 + v10[7]) = *(void *)(v9 + v10[7]);
  *(unsigned char *)(a1 + *(int *)(v6 + 24)) = *(unsigned char *)(a2 + *(int *)(v6 + 24));
  uint64_t v15 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  return a1;
}

uint64_t assignWithTake for DetectedFacesPolicy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;

  uint64_t v8 = type metadata accessor for GeneratedImage();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for ImageProvenance();
  uint64_t v13 = v12[5];
  uint64_t v14 = v10 + v13;
  uint64_t v15 = v11 + v13;
  uint64_t v16 = sub_260FE3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  *(void *)(v10 + v12[6]) = *(void *)(v11 + v12[6]);
  *(void *)(v10 + v12[7]) = *(void *)(v11 + v12[7]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(v8 + 24)) = *(unsigned char *)(a2 + *(int *)(v8 + 24));
  uint64_t v17 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectedFacesPolicy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260F5A060);
}

uint64_t sub_260F5A060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for GeneratedImage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for DetectedFacesPolicy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260F5A134);
}

uint64_t sub_260F5A134(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for GeneratedImage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_260F5A1F0()
{
  uint64_t result = type metadata accessor for GeneratedImage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of GenerationSeedAssignable.assignedGenerationSeed.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  int v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *int v5 = v2;
  v5[1] = sub_260F5A384;
  return v7(a1, a2);
}

uint64_t sub_260F5A384(uint64_t a1, char a2)
{
  uint64_t v7 = *v2;
  uint64_t v4 = a2 & 1;
  swift_task_dealloc();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, v4);
}

uint64_t dispatch thunk of GenerationSeedAssignable.assign(generationSeed:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v8 = a2 & 1;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_260DACD28;
  return v11(a1, v8, a3, a4);
}

unint64_t AppleDiffusionPipeline.IPASetting.rawValue.getter(char a1)
{
  unint64_t result = 0xD00000000000001ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000021;
      break;
    case 2:
    case 3:
    case 6:
    case 7:
      unint64_t result = 0xD000000000000022;
      break;
    case 5:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260F5A670(unsigned __int8 *a1, char *a2)
{
  return sub_260FD5468(*a1, *a2);
}

uint64_t sub_260F5A67C()
{
  return sub_260DC5B20();
}

uint64_t sub_260F5A688()
{
  return sub_260FA525C();
}

uint64_t sub_260F5A690()
{
  return sub_260DC5B20();
}

uint64_t sub_260F5A698@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s13DiffusionBase05AppleA8PipelineV10IPASettingO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_260F5A6C8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AppleDiffusionPipeline.IPASetting.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AppleDiffusionPipeline.Properties.isLCM.getter(char a1)
{
  return a1 & 1;
}

uint64_t AppleDiffusionPipeline.Properties.supportsAdapters.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t AppleDiffusionPipeline.Properties.activeAdapter.getter(unsigned int a1)
{
  return HIWORD(a1);
}

uint64_t AppleDiffusionPipeline.Properties.ipaScales.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AppleDiffusionPipeline.Properties.ipaScaleRanges.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AppleDiffusionPipeline.Properties.unetURLs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AppleDiffusionPipeline.pipelineProperties.getter()
{
  if (v0[1]) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  uint64_t v2 = v1 | *v0 | (v0[2] << 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t variable initialization expression of AppleDiffusionPipeline.encoder()
{
  return 0;
}

DiffusionBase::AppleDiffusionPipeline::MemoryReductionLevel_optional __swiftcall AppleDiffusionPipeline.MemoryReductionLevel.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 3) {
    LOBYTE(rawValue) = 3;
  }
  return (DiffusionBase::AppleDiffusionPipeline::MemoryReductionLevel_optional)rawValue;
}

uint64_t AppleDiffusionPipeline.MemoryReductionLevel.rawValue.getter(uint64_t result)
{
  return result;
}

uint64_t *sub_260F5A7BC@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

uint64_t variable initialization expression of AppleDiffusionPipeline.reduceMemory()
{
  return 0;
}

uint64_t AppleDiffusionPipeline.init(unet:encoder:decoder:sketchConditioner:imageConditioner:reduceMemory:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, unsigned char *a9@<X8>, unint64_t a10, unsigned __int8 a11)
{
  uint64_t v98 = a5;
  unint64_t v108 = a8;
  unint64_t v101 = a7;
  uint64_t v102 = a4;
  uint64_t v103 = a3;
  unint64_t v100 = a10;
  LODWORD(v107) = a11;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
  MEMORY[0x270FA5388](v15 - 8, v16);
  uint64_t v90 = (unsigned __int8 *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_260FE2F90();
  uint64_t v136 = *(void *)(v106 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v106, v18);
  uint64_t v88 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19, v21);
  uint64_t v91 = (char *)&v82 - v22;
  uint64_t v23 = (int *)type metadata accessor for AppleDiffusionPipeline(0);
  uint64_t v24 = (uint64_t *)&a9[v23[6]];
  uint64_t v25 = v23[10];
  uint64_t v93 = &a9[v23[5]];
  sub_260F64E4C(a1, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for AppleDiffusionUnet);
  uint64_t v26 = a2;
  uint64_t v94 = v24;
  uint64_t v28 = v102;
  char v27 = v103;
  *uint64_t v24 = (uint64_t)a2;
  v24[1] = (uint64_t)v27;
  id v29 = &a9[v23[7]];
  uint64_t v30 = v98;
  *id v29 = v28;
  v29[1] = v30;
  uint64_t v31 = &a9[v23[8]];
  long long v32 = *(_OWORD *)(a6 + 48);
  *((_OWORD *)v31 + 2) = *(_OWORD *)(a6 + 32);
  *((_OWORD *)v31 + 3) = v32;
  *((void *)v31 + 8) = *(void *)(a6 + 64);
  long long v33 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)a6;
  *((_OWORD *)v31 + 1) = v33;
  uint64_t v95 = v31;
  uint64_t v34 = (unint64_t *)&a9[v23[9]];
  unint64_t v36 = v100;
  unint64_t v35 = v101;
  unint64_t v37 = v108;
  *uint64_t v34 = v101;
  v34[1] = v37;
  long long v104 = v34;
  long long v34[2] = v36;
  a9[v25] = (_BYTE)v107;
  uint64_t v38 = v23[11];
  uint64_t v89 = a9;
  unint64_t v39 = (unint64_t)&a9[v38];
  uint64_t v97 = (uint64_t)v26;
  uint64_t v40 = a1;
  sub_260F6449C(v26, v27);
  swift_retain();
  swift_retain();
  uint64_t v96 = a6;
  sub_260F644DC(a6);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_260FE3980();
  unint64_t v41 = *(void *)(a1 + 200);
  unint64_t v105 = v39;
  long long v92 = v29;
  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_260FE4E40();
  }
  else
  {
    uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v43 = v99;
  uint64_t v44 = v106;
  if (!v42)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if ((v41 & 0xC000000000000001) != 0)
  {
    uint64_t v45 = MEMORY[0x26122B4C0](0, v41);
  }
  else
  {
    if (!*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_54;
    }
    uint64_t v45 = *(void *)(v41 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v46 = v136;
  uint64_t v47 = (uint64_t)v91;
  uint64_t v107 = *(void (**)(void, void, void))(v136 + 16);
  unint64_t v108 = v136 + 16;
  v107(v91, v45 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_modelURL, v44);
  sub_260FA3398(v47, (uint64_t)v122);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v47, v44);
  sub_260DD7C14((uint64_t)v122, (uint64_t)v123, &qword_26A8EA940);
  if (sub_260F64534((uint64_t)v123) == 1)
  {
    swift_release();
LABEL_10:
    if (qword_26A8EA918 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_260FE3A10();
    __swift_project_value_buffer(v48, (uint64_t)qword_26A90FC00);
    id v49 = sub_260FE39F0();
    os_log_type_t v50 = sub_260FE4890();
    if (os_log_type_enabled(v49, v50))
    {
      id v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v51 = 0;
      _os_log_impl(&dword_260D82000, v49, v50, "Unable to get unet user metadata", v51, 2u);
      MEMORY[0x26122CA00](v51, -1, -1);
    }

    sub_260F64558();
    swift_allocError();
    *(_OWORD *)uint64_t v52 = xmmword_260FF78F0;
    *(unsigned char *)(v52 + 16) = 3;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_release();
    sub_260F645AC(v96);
    swift_release();
    swift_release();
    sub_260F64604(v97, v103);
    sub_260F64860(a1, (uint64_t (*)(void))type metadata accessor for AppleDiffusionUnet);
    goto LABEL_15;
  }
  uint64_t v91 = (char *)v45;
  v124[10] = v123[10];
  v124[11] = v123[11];
  v124[12] = v123[12];
  v124[6] = v123[6];
  v124[7] = v123[7];
  v124[8] = v123[8];
  v124[9] = v123[9];
  v124[2] = v123[2];
  v124[3] = v123[3];
  v124[4] = v123[4];
  v124[5] = v123[5];
  v124[0] = v123[0];
  v124[1] = v123[1];
  sub_260DD7C14((uint64_t)v124, (uint64_t)v120, &qword_26A8EA0B8);
  sub_260DD7C14((uint64_t)v120, (uint64_t)v121, &qword_26A8EA0B8);
  if (sub_260F32AD8((uint64_t)v121) == 1)
  {
    uint64_t v85 = 0;
    goto LABEL_30;
  }
  if (v121[1] == 1)
  {
    sub_260DD7C14((uint64_t)v120, (uint64_t)v110, &qword_26A8EA0B8);
    LODWORD(v85) = 0;
    id v55 = v119;
    if (v119)
    {
LABEL_20:
      HIDWORD(v85) = sub_260F5B4B0(1634889580, 0xE400000000000000, v55);
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v56 = v121[2];
    uint64_t v57 = v121[3];
    swift_bridgeObjectRetain();
    if (v57)
    {
      if (v56 == 7168876 && v57 == 0xE300000000000000) {
        LODWORD(v85) = 1;
      }
      else {
        LODWORD(v85) = sub_260FE5150();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      LODWORD(v85) = 0;
    }
    sub_260DD7C14((uint64_t)v120, (uint64_t)v110, &qword_26A8EA0B8);
    id v55 = v119;
    if (v119) {
      goto LABEL_20;
    }
  }
  HIDWORD(v85) = 0;
LABEL_30:
  uint64_t v87 = sub_260F5B67C((uint64_t)&unk_270D22490);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA950);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_260FE8E10;
  *(unsigned char *)(v58 + 32) = 4;
  *(void *)(v58 + 36) = 0x3ECCCCCD00000000;
  *(unsigned char *)(v58 + 44) = 5;
  *(void *)(v58 + 48) = 0x3ECCCCCD00000000;
  *(unsigned char *)(v58 + 56) = 6;
  *(void *)(v58 + 60) = 0x3ECCCCCD00000000;
  *(unsigned char *)(v58 + 68) = 7;
  *(void *)(v58 + 72) = 0x3ECCCCCD00000000;
  uint64_t v86 = sub_260F5B578(v58);
  sub_260DD7C14((uint64_t)v120, (uint64_t)v110, &qword_26A8EA0B8);
  if (sub_260F32AD8((uint64_t)v110) == 1)
  {
    sub_260F64644(v122);
  }
  else
  {
    sub_260F649B4(v120, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_260F648C0);
    sub_260F64644(v122);
    uint64_t v60 = v111;
    uint64_t v59 = v112;
    uint64_t v61 = v115;
    uint64_t v63 = v117;
    uint64_t v62 = v118;
    uint64_t v82 = v113;
    uint64_t v83 = v114;
    uint64_t v84 = v116;
    sub_260F32C50(v111, v112);
    sub_260F649B4(v120, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_260F6476C);
    if (v59)
    {
      v125[0] = v60;
      int v126 = HIDWORD(v60);
      uint64_t v127 = v59;
      int v128 = v82;
      uint64_t v129 = v83;
      int v130 = v61;
      char v131 = BYTE4(v61) & 1;
      uint64_t v132 = v84;
      int v133 = v63;
      char v134 = BYTE4(v63) & 1;
      uint64_t v135 = v62;
      uint64_t v64 = sub_260F64B58((uint64_t)v125);
      if (v43)
      {
        swift_release();
        sub_260F32DE0(v60, v59);
        swift_bridgeObjectRelease();
        swift_release();
        sub_260F645AC(v96);
        swift_release();
        swift_release();
        sub_260F64604(v97, v103);
        sub_260F64860(a1, (uint64_t (*)(void))type metadata accessor for AppleDiffusionUnet);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_15:
        sub_260F64860((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for AppleDiffusionUnet);
        sub_260F64604(*v94, (void *)v94[1]);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v53 = sub_260FE3990();
        return (*(uint64_t (**)(unint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v105, v53);
      }
      unint64_t v105 = v64;
      uint64_t v66 = v60;
      uint64_t v67 = v65;
      sub_260F32DE0(v66, v59);
      uint64_t v87 = sub_260F5C760(v105, v87, (uint64_t)sub_260F6441C, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_260F6344C);
      uint64_t v86 = sub_260F5C760(v67, v86, (uint64_t)sub_260F64408, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_260F6318C);
    }
    uint64_t v44 = v106;
  }
  uint64_t v68 = type metadata accessor for AppleDiffusionUnet();
  uint64_t v69 = v90;
  sub_260D907BC(a1 + *(int *)(v68 + 24), (uint64_t)v90, &qword_26A8EA020);
  uint64_t v70 = type metadata accessor for ConcreteAdapter();
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 48))(v69, 1, v70) == 1)
  {
    sub_260D90820((uint64_t)v69, &qword_26A8EA020);
    LODWORD(v95) = 10;
  }
  else
  {
    LODWORD(v95) = *v69;
    sub_260F64860((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for ConcreteAdapter);
  }
  unint64_t v35 = *(void *)(a1 + 200);
  if (!(v35 >> 62))
  {
    uint64_t v71 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v71) {
      goto LABEL_42;
    }
LABEL_55:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_260F645AC(v96);
    swift_release();
    swift_release();
    sub_260F64604(v97, v103);
    uint64_t v73 = MEMORY[0x263F8EE78];
LABEL_56:
    sub_260F64860(v40, (uint64_t (*)(void))type metadata accessor for AppleDiffusionUnet);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v80 = v89;
    unsigned char *v89 = v85 & 1;
    v80[1] = BYTE4(v85) & 1;
    v80[2] = (_BYTE)v95;
    uint64_t v81 = v86;
    *((void *)v80 + 1) = v87;
    *((void *)v80 + 2) = v81;
    *((void *)v80 + 3) = v73;
    return result;
  }
LABEL_54:
  swift_bridgeObjectRetain();
  uint64_t v71 = sub_260FE4E40();
  if (!v71) {
    goto LABEL_55;
  }
LABEL_42:
  uint64_t v99 = v43;
  uint64_t v94 = (uint64_t *)a1;
  uint64_t v109 = MEMORY[0x263F8EE78];
  uint64_t result = sub_260F636E8(0, v71 & ~(v71 >> 63), 0);
  uint64_t v106 = v71;
  if ((v71 & 0x8000000000000000) == 0)
  {
    uint64_t v72 = 0;
    uint64_t v73 = v109;
    unint64_t v105 = v35 & 0xC000000000000001;
    long long v104 = (unint64_t *)(v136 + 32);
    uint64_t v74 = v88;
    unint64_t v75 = v35;
    do
    {
      if (v105)
      {
        uint64_t v76 = MEMORY[0x26122B4C0](v72, v35);
      }
      else
      {
        uint64_t v76 = *(void *)(v35 + 8 * v72 + 32);
        swift_retain();
      }
      v107(v74, v76 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_modelURL, v44);
      swift_release();
      uint64_t v109 = v73;
      uint64_t v77 = v44;
      unint64_t v79 = *(void *)(v73 + 16);
      unint64_t v78 = *(void *)(v73 + 24);
      if (v79 >= v78 >> 1)
      {
        sub_260F636E8(v78 > 1, v79 + 1, 1);
        uint64_t v73 = v109;
      }
      ++v72;
      *(void *)(v73 + 16) = v79 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v136 + 32))(v73+ ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80))+ *(void *)(v136 + 72) * v79, v74, v77);
      uint64_t v44 = v77;
      unint64_t v35 = v75;
    }
    while (v106 != v72);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_260F645AC(v96);
    swift_release();
    swift_release();
    sub_260F64604(v97, v103);
    uint64_t v40 = (uint64_t)v94;
    goto LABEL_56;
  }
  __break(1u);
  return result;
}

uint64_t sub_260F5B4B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_260FE5150();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_260FE5150() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_260F5B578(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABF8);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (void *)(a1 + 36);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 4);
    uint64_t v6 = *v4;
    unint64_t result = sub_260DBB574(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    unint64_t v4 = (void *)((char *)v4 + 12);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260F5B67C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC00);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (_DWORD *)(a1 + 36);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 4);
    int v6 = *v4;
    unint64_t result = sub_260DBB574(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(_DWORD *)(v2[7] + 4 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260F5B780(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB88);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_260DBACB4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260F5B89C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB60);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    id v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB68);
  uint64_t v7 = sub_260FE4E80();
  id v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = (char *)v6 + *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_260D907BC(v13, (uint64_t)v6, &qword_26A8EAB60);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_260DBACB4(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_260FE2F90();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260F5BA9C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB50);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    id v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB58);
  uint64_t v7 = sub_260FE4E80();
  id v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = (char *)v6 + *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_260D907BC(v13, (uint64_t)v6, &qword_26A8EAB50);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_260DBACB4(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260F5BCA0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB28);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB30);
  uint64_t v7 = sub_260FE4E80();
  id v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = &v6[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_260D907BC(v13, (uint64_t)v6, &qword_26A8EAB28);
    char v15 = *v6;
    unint64_t result = sub_260DBB068(*v6);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v8[6] + result) = v15;
    uint64_t v19 = v8[7];
    uint64_t v20 = sub_260FE2F90();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, v10, v20);
    uint64_t v21 = v8[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260F5BE98(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB80);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_260DBAE1C((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260F5BFA4(uint64_t a1)
{
  return sub_260F5C648(a1, &qword_26A8EAA98);
}

unint64_t sub_260F5BFB0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAA0);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 34);
  while (1)
  {
    unsigned __int8 v5 = *(v4 - 2);
    char v6 = *(v4 - 1);
    char v7 = *v4;
    unint64_t result = sub_260DBB4C8(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v10 = (unsigned char *)(v2[7] + 2 * result);
    *uint64_t v10 = v6;
    v10[1] = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260F5C0C0(uint64_t a1)
{
  return sub_260F5C428(a1, &qword_26A8EAB10, (uint64_t (*)(uint64_t))sub_260DBB068);
}

unint64_t sub_260F5C0E0(uint64_t a1)
{
  return sub_260F5C224(a1, &qword_26A8EAB08, (uint64_t (*)(uint64_t))sub_260DBB068);
}

unint64_t sub_260F5C100(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAF8);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *((unsigned __int8 *)v4 - 8);
    id v6 = *v4;
    unint64_t result = sub_260DBB4C8(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260F5C204(uint64_t a1)
{
  return sub_260F5C224(a1, &qword_26A8EAAF0, sub_260DBB4C8);
}

unint64_t sub_260F5C224(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = (void *)sub_260FE4E80();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  long long v7 = *(_OWORD *)(a1 + 208);
  *(_OWORD *)&v39[160] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)&v39[176] = v7;
  *(void *)&v39[192] = *(void *)(a1 + 224);
  long long v8 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)&v39[96] = *(_OWORD *)(a1 + 128);
  *(_OWORD *)&v39[112] = v8;
  long long v9 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)&v39[128] = *(_OWORD *)(a1 + 160);
  *(_OWORD *)&v39[144] = v9;
  long long v10 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)&v39[32] = *(_OWORD *)(a1 + 64);
  *(_OWORD *)&v39[48] = v10;
  long long v11 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)&v39[64] = *(_OWORD *)(a1 + 96);
  *(_OWORD *)&v39[80] = v11;
  long long v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)unint64_t v39 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)&v39[16] = v12;
  uint64_t v13 = v39[0];
  sub_260F68680((uint64_t *)v39);
  unint64_t result = a3(v13);
  if (v15)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  uint64_t v16 = 232;
  while (1)
  {
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v5[6] + result) = v13;
    char v17 = (_OWORD *)(v5[7] + 192 * result);
    long long v18 = *(_OWORD *)&v39[8];
    long long v19 = *(_OWORD *)&v39[24];
    long long v20 = *(_OWORD *)&v39[56];
    v17[2] = *(_OWORD *)&v39[40];
    v17[3] = v20;
    *char v17 = v18;
    v17[1] = v19;
    long long v21 = *(_OWORD *)&v39[72];
    long long v22 = *(_OWORD *)&v39[88];
    long long v23 = *(_OWORD *)&v39[120];
    v17[6] = *(_OWORD *)&v39[104];
    v17[7] = v23;
    v17[4] = v21;
    v17[5] = v22;
    long long v24 = *(_OWORD *)&v39[136];
    long long v25 = *(_OWORD *)&v39[152];
    long long v26 = *(_OWORD *)&v39[184];
    v17[10] = *(_OWORD *)&v39[168];
    v17[11] = v26;
    v17[8] = v24;
    v17[9] = v25;
    uint64_t v27 = v5[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      break;
    }
    v5[2] = v29;
    if (!--v6) {
      goto LABEL_9;
    }
    uint64_t v30 = v16 + 200;
    uint64_t v31 = a1 + v16;
    long long v32 = *(_OWORD *)(v31 + 176);
    *(_OWORD *)&v39[160] = *(_OWORD *)(v31 + 160);
    *(_OWORD *)&v39[176] = v32;
    *(void *)&v39[192] = *(void *)(v31 + 192);
    long long v33 = *(_OWORD *)(v31 + 112);
    *(_OWORD *)&v39[96] = *(_OWORD *)(v31 + 96);
    *(_OWORD *)&v39[112] = v33;
    long long v34 = *(_OWORD *)(v31 + 144);
    *(_OWORD *)&v39[128] = *(_OWORD *)(v31 + 128);
    *(_OWORD *)&v39[144] = v34;
    long long v35 = *(_OWORD *)(v31 + 48);
    *(_OWORD *)&v39[32] = *(_OWORD *)(v31 + 32);
    *(_OWORD *)&v39[48] = v35;
    long long v36 = *(_OWORD *)(v31 + 80);
    *(_OWORD *)&v39[64] = *(_OWORD *)(v31 + 64);
    *(_OWORD *)&v39[80] = v36;
    long long v37 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)unint64_t v39 = *(_OWORD *)v31;
    *(_OWORD *)&v39[16] = v37;
    uint64_t v13 = v39[0];
    sub_260F68680((uint64_t *)v39);
    unint64_t result = a3(v13);
    uint64_t v16 = v30;
    if (v38) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_260F5C408(uint64_t a1)
{
  return sub_260F5C428(a1, &qword_26A8EAAE8, sub_260DBB4C8);
}

unint64_t sub_260F5C428(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = (void *)sub_260FE4E80();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  long long v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *((unsigned __int8 *)v7 - 8);
    uint64_t v9 = *v7;
    swift_bridgeObjectRetain();
    unint64_t result = a3(v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v5[6] + result) = v8;
    *(void *)(v5[7] + 8 * result) = v9;
    uint64_t v12 = v5[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v5[2] = v14;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260F5C538(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB00);
  uint64_t v2 = (void *)sub_260FE4E80();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 48);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 16);
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_260DBB3F8(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    long long v10 = (void *)(v2[7] + 16 * result);
    *long long v10 = v7;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_260F5C648(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_260FE4E80();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  unsigned __int8 v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_260DBACB4(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_260F5C760(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, void, uint64_t, uint64_t *))
{
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  uint64_t v10 = v12;
  swift_bridgeObjectRelease();
  if (v4) {
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_260F5C7F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v14)(long long *__return_ptr, uint64_t *);
  uint64_t v15;
  long long v16[2];
  uint64_t v17;

  uint64_t v14 = (void (*)(long long *__return_ptr, uint64_t *))result;
  uint64_t v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = v4;
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v7;
  }
  char v17 = MEMORY[0x263F8EE78];
  unint64_t result = sub_260F63708(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = v17;
    if (a4 <= a3) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a4;
    }
    uint64_t v11 = a3;
    while (a4 != v11)
    {
      char v15 = v11;
      v14(v16, &v15);
      if (v6)
      {
        swift_release();
        return v7;
      }
      uint64_t v6 = 0;
      char v17 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_260F63708(v12 > 1, v13 + 1, 1);
        uint64_t v7 = v17;
      }
      *(void *)(v7 + 16) = v13 + 1;
      unint64_t result = sub_260DD7B40(v16, v7 + 40 * v13 + 32);
      if (a4 < a3) {
        goto LABEL_19;
      }
      if (v10 == v11) {
        goto LABEL_20;
      }
      if (a4 == ++v11) {
        return v7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_260F5C944(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v22 = a1;
  uint64_t v23 = a2;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v6 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21, v7);
  char v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_260F63738(0, v10, 0);
    uint64_t v11 = v24;
    unint64_t v20 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v12 = a3 + v20;
    uint64_t v19 = *(void *)(v6 + 72);
    unint64_t v13 = (void (**)(unint64_t, char *, uint64_t))(v6 + 32);
    while (1)
    {
      v22(v12);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v24 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_260F63738(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v24;
      }
      *(void *)(v11 + 16) = v15 + 1;
      uint64_t v16 = v19;
      (*v13)(v11 + v20 + v15 * v19, v9, v21);
      v12 += v16;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

void *sub_260F5CAFC(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v16)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  uint64_t v16 = (void *(*)(uint64_t *__return_ptr, uint64_t *))result;
  uint64_t v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = v4;
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (!v5) {
    return (void *)v7;
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
  unint64_t result = (void *)sub_260F63788(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = v19;
    if (a4 <= a3) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a4;
    }
    uint64_t v15 = v10;
    uint64_t v11 = a3;
    while (a4 != v11)
    {
      char v17 = v11;
      unint64_t result = v16(&v18, &v17);
      if (v6)
      {
        swift_release();
        return (void *)v7;
      }
      uint64_t v6 = 0;
      uint64_t v12 = v18;
      uint64_t v19 = v7;
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        unint64_t result = (void *)sub_260F63788(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v19;
      }
      *(void *)(v7 + 16) = v14 + 1;
      *(void *)(v7 + 8 * v14 + 32) = v12;
      if (a4 < a3) {
        goto LABEL_19;
      }
      if (v15 == v11) {
        goto LABEL_20;
      }
      if (a4 == ++v11) {
        return (void *)v7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_260F5CC50(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v18 = sub_260FE2F90();
  uint64_t v6 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18, v7);
  char v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_260F636E8(0, v10, 0);
    uint64_t v11 = v22;
    uint64_t v17 = v6 + 32;
    uint64_t v12 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v13 = *v12;
      v21[0] = *(v12 - 1);
      v21[1] = v13;
      swift_bridgeObjectRetain();
      v19(v21);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v22 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_260F636E8(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v22;
      }
      v12 += 2;
      *(void *)(v11 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, v9, v18);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v11;
}

void sub_260F5CE1C(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAB8);
  uint64_t v8 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21, v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a3;
  uint64_t v12 = a4 - a3;
  if (__OFSUB__(a4, a3)) {
    goto LABEL_21;
  }
  if (v12)
  {
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_260F63898(0, v12 & ~(v12 >> 63), 0);
    if (v12 < 0)
    {
LABEL_22:
      __break(1u);
      return;
    }
    uint64_t v13 = v26;
    uint64_t v14 = v24;
    if (a4 <= v24) {
      uint64_t v15 = v24;
    }
    else {
      uint64_t v15 = a4;
    }
    uint64_t v19 = v15;
    uint64_t v20 = v8 + 32;
    while (a4 != v14)
    {
      uint64_t v25 = v14;
      v22(&v25);
      if (v5)
      {
        swift_release();
        return;
      }
      uint64_t v5 = 0;
      uint64_t v26 = v13;
      unint64_t v17 = *(void *)(v13 + 16);
      unint64_t v16 = *(void *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_260F63898(v16 > 1, v17 + 1, 1);
        uint64_t v13 = v26;
      }
      *(void *)(v13 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v17, v11, v21);
      if (a4 < v24) {
        goto LABEL_19;
      }
      if (v19 == v14) {
        goto LABEL_20;
      }
      if (a4 == ++v14) {
        return;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppleDiffusionPipeline.loadResources()()
{
  uint64_t v1 = v0;
  if (qword_26A8EA918 != -1) {
    goto LABEL_46;
  }
  while (1)
  {
    uint64_t v2 = sub_260FE3A10();
    __swift_project_value_buffer(v2, (uint64_t)qword_26A90FC00);
    uint64_t v3 = sub_260FE39F0();
    os_log_type_t v4 = sub_260FE4880();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_260D82000, v3, v4, "loading all pipeline resources", v5, 2u);
      MEMORY[0x26122CA00](v5, -1, -1);
    }

    uint64_t v6 = type metadata accessor for AppleDiffusionPipeline(0);
    uint64_t v7 = v6;
    int v8 = *(unsigned __int8 *)(v1 + *(int *)(v6 + 40));
    if (v8 != 1) {
      break;
    }
    unint64_t v9 = *(void *)(v1 + *(int *)(v6 + 20) + 200);
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_260FE4E40();
      if (!v10)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v10) {
        goto LABEL_20;
      }
    }
    unint64_t v11 = v9 & 0xC000000000000001;
    uint64_t v1 = 4;
    unint64_t v43 = v9;
    while (1)
    {
      uint64_t v12 = v1 - 4;
      if (!v11) {
        break;
      }
      uint64_t v13 = MEMORY[0x26122B4C0](v1 - 4, v9);
      uint64_t v14 = v1 - 3;
      if (__OFADD__(v12, 1)) {
        goto LABEL_44;
      }
LABEL_15:
      uint64_t v45 = v14;
      swift_retain_n();
      uint64_t v15 = sub_260FE39F0();
      os_log_type_t v16 = sub_260FE4880();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        uint64_t v48 = v18;
        *(_DWORD *)uint64_t v17 = 136446210;
        uint64_t v19 = sub_260FE4C50();
        *(void *)(v17 + 4) = sub_260DB2844(v19, v20, &v48);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_260D82000, v15, v16, "Loading resources for %{public}s", (uint8_t *)v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x26122CA00](v18, -1, -1);
        uint64_t v21 = v17;
        unint64_t v9 = v43;
        MEMORY[0x26122CA00](v21, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      id v22 = *(id *)(v13 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
      sub_260FE4900();
      if (v47) {
        goto LABEL_42;
      }
      swift_release();

      ++v1;
      if (v45 == v10) {
        goto LABEL_20;
      }
    }
    uint64_t v13 = *(void *)(v9 + 8 * v1);
    swift_retain();
    uint64_t v14 = v1 - 3;
    if (!__OFADD__(v12, 1)) {
      goto LABEL_15;
    }
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_once();
  }
  if (v8 == 2)
  {
    AppleDiffusionPipeline.prewarmResources()();
    return;
  }
  unint64_t v23 = *(void *)(v1 + *(int *)(v6 + 20) + 200);
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_260FE4E40();
    uint64_t v41 = v7;
    uint64_t v42 = v1;
    if (!v24) {
      goto LABEL_34;
    }
LABEL_23:
    uint64_t v25 = 4;
    uint64_t v1 = (uint64_t)&OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue;
    uint64_t v44 = v24;
    while (1)
    {
      uint64_t v26 = v25 - 4;
      if ((v23 & 0xC000000000000001) != 0)
      {
        uint64_t v27 = MEMORY[0x26122B4C0](v25 - 4, v23);
        uint64_t v28 = v25 - 3;
        if (__OFADD__(v26, 1)) {
          goto LABEL_45;
        }
      }
      else
      {
        uint64_t v27 = *(void *)(v23 + 8 * v25);
        swift_retain();
        uint64_t v28 = v25 - 3;
        if (__OFADD__(v26, 1)) {
          goto LABEL_45;
        }
      }
      uint64_t v46 = v28;
      swift_retain_n();
      uint64_t v29 = sub_260FE39F0();
      os_log_type_t v30 = sub_260FE4880();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        uint64_t v48 = v32;
        *(_DWORD *)uint64_t v31 = 136446210;
        uint64_t v33 = sub_260FE4C50();
        *(void *)(v31 + 4) = sub_260DB2844(v33, v34, &v48);
        swift_release_n();
        uint64_t v24 = v44;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_260D82000, v29, v30, "Loading resources for %{public}s", (uint8_t *)v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x26122CA00](v32, -1, -1);
        uint64_t v35 = v31;
        uint64_t v1 = (uint64_t)&OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue;
        MEMORY[0x26122CA00](v35, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      id v22 = *(id *)(v27 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
      sub_260FE4900();
      if (v47) {
        break;
      }
      swift_release();

      ++v25;
      if (v46 == v24) {
        goto LABEL_34;
      }
    }
LABEL_42:
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v41 = v7;
    uint64_t v42 = v1;
    if (v24) {
      goto LABEL_23;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    if (!*(void *)(v42 + *(int *)(v41 + 24)) || (ManagedMLModel.loadResources()(), !v36))
    {
      uint64_t v37 = *(void *)(v42 + *(int *)(v41 + 28) + 8);
      ManagedMLModel.loadResources()();
      if (!v38)
      {
        if (v37)
        {
          ManagedMLModel.loadResources()();
          if (v39) {
        }
          }
        ManagedMLModel.loadResources()();
        if (!v40) {
          ManagedMLModel.loadResources()();
        }
      }
    }
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppleDiffusionPipeline.prewarmResources()()
{
  uint64_t v1 = (int *)type metadata accessor for AppleDiffusionPipeline(0);
  unint64_t v2 = *(void *)(v0 + v1[5] + 200);
  if (v2 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_260FE4E40();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      uint64_t v4 = 4;
      do
      {
        uint64_t v5 = v4 - 4;
        if ((v2 & 0xC000000000000001) != 0)
        {
          MEMORY[0x26122B4C0](v4 - 4, v2);
          BOOL v6 = __OFADD__(v5, 1);
          uint64_t v7 = v4 - 3;
          if (v6) {
            goto LABEL_29;
          }
        }
        else
        {
          swift_retain();
          BOOL v6 = __OFADD__(v5, 1);
          uint64_t v7 = v4 - 3;
          if (v6)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
        }
        ManagedMLModel.loadResources()();
        if (v8)
        {
          swift_release();
          swift_bridgeObjectRelease();
          return;
        }
        ManagedMLModel.unloadResources()();
        swift_release();
        ++v4;
      }
      while (v7 != v3);
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v9 = (void *)(v0 + v1[6]);
  if (!*v9) {
    goto LABEL_16;
  }
  uint64_t v10 = (void *)v9[1];
  swift_retain();
  id v11 = v10;
  ManagedMLModel.loadResources()();
  if (!v12)
  {
    ManagedMLModel.unloadResources()();

    swift_release();
LABEL_16:
    uint64_t v13 = *(void *)(v0 + v1[7] + 8);
    swift_retain();
    swift_retain();
    ManagedMLModel.loadResources()();
    if (v14)
    {
      swift_release();
    }
    else
    {
      if (v13)
      {
        ManagedMLModel.loadResources()();
        if (v15) {

        }
        ManagedMLModel.unloadResources()();
        ManagedMLModel.unloadResources()();
        swift_release();
      }
      else
      {
        ManagedMLModel.unloadResources()();
      }
      swift_release();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      ManagedMLModel.loadResources()();
      if (v16)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        ManagedMLModel.unloadResources()();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_retain();
        swift_bridgeObjectRetain();
        ManagedMLModel.loadResources()();
        if (!v17) {
          ManagedMLModel.unloadResources()();
        }
      }
      swift_bridgeObjectRelease();
    }
    goto LABEL_28;
  }

LABEL_28:
  swift_release();
}

Swift::Void __swiftcall AppleDiffusionPipeline.unloadResources()()
{
  uint64_t v1 = v0;
  if (qword_26A8EA918 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_260FE3A10();
  __swift_project_value_buffer(v2, (uint64_t)qword_26A90FC00);
  uint64_t v3 = sub_260FE39F0();
  os_log_type_t v4 = sub_260FE4880();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_260D82000, v3, v4, "unloading all pipeline resources", v5, 2u);
    MEMORY[0x26122CA00](v5, -1, -1);
  }

  BOOL v6 = (int *)type metadata accessor for AppleDiffusionPipeline(0);
  unint64_t v7 = *(void *)(v1 + v6[5] + 200);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_260FE4E40();
    if (!v8) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v8) {
      goto LABEL_14;
    }
  }
  if (v8 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      MEMORY[0x26122B4C0](i, v7);
    }
    else {
      swift_retain();
    }
    ManagedMLModel.unloadResources()();
    swift_release();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + v6[6])) {
    ManagedMLModel.unloadResources()();
  }
  uint64_t v10 = *(void *)(v1 + v6[7] + 8);
  ManagedMLModel.unloadResources()();
  if (v10) {
    ManagedMLModel.unloadResources()();
  }
  ManagedMLModel.unloadResources()();
  ManagedMLModel.unloadResources()();
}

uint64_t AppleDiffusionPipeline.generateImages(configuration:requestIdentifier:generationID:progressHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v314 = a5;
  v313 = (uint64_t (*)(uint64_t *))a4;
  uint64_t v342 = a1;
  uint64_t v311 = type metadata accessor for PipelineProgress();
  MEMORY[0x270FA5388](v311, v9);
  v312 = (uint64_t *)((char *)&v292 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v319 = (int *)type metadata accessor for PipelineConfiguration(0);
  MEMORY[0x270FA5388](v319, v11);
  v326 = (void (**)(char *, uint64_t))((char *)&v292 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v349 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v310 = *(void *)(v349 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v349, v13);
  v345 = (char *)&v292 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14, v16);
  v331 = (char *)&v292 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17, v19);
  v348 = (char *)&v292 - v21;
  MEMORY[0x270FA5388](v20, v22);
  v332 = (void (*)(void))((char *)&v292 - v23);
  os_log_t v352 = (os_log_t)__swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA958);
  uint64_t v25 = MEMORY[0x270FA5388](v352, v24);
  uint64_t v351 = (uint64_t)&v292 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v25, v27);
  uint64_t v327 = (uint64_t)&v292 - v29;
  MEMORY[0x270FA5388](v28, v30);
  v330 = (char *)&v292 - v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA960);
  uint64_t v34 = MEMORY[0x270FA5388](v32 - 8, v33);
  uint64_t v309 = (uint64_t)&v292 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34, v36);
  uint64_t v321 = (uint64_t)&v292 - v37;
  uint64_t v316 = type metadata accessor for AppleDiffusionPipeline.ConditioningInputs(0);
  *(void *)&long long v324 = *(void *)(v316 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v316, v38);
  uint64_t v318 = (uint64_t)&v292 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39, v41);
  uint64_t v320 = (uint64_t)&v292 - v42;
  uint64_t v43 = sub_260FE3110();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v46 = MEMORY[0x270FA5388](v43, v45);
  uint64_t v48 = (char *)&v292 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v46, v49);
  id v51 = (char *)&v292 - v50;
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
  v52((char *)&v292 - v50, a2, v43);
  v52(v48, a3, v43);
  _s15PowerLogMetricsCMa();
  uint64_t v53 = (void *)swift_allocObject();
  sub_260FE3090();
  *(void *)((char *)v53 + OBJC_IVAR____TtCV13DiffusionBase22AppleDiffusionPipeline15PowerLogMetrics__adapters) = 0;
  *(void *)((char *)v53 + OBJC_IVAR____TtCV13DiffusionBase22AppleDiffusionPipeline15PowerLogMetrics__inputPixelsCount) = 0;
  *(void *)((char *)v53
            + OBJC_IVAR____TtCV13DiffusionBase22AppleDiffusionPipeline15PowerLogMetrics__unetIterationsCount) = 0;
  *(void *)((char *)v53 + OBJC_IVAR____TtCV13DiffusionBase22AppleDiffusionPipeline15PowerLogMetrics__outputPixelsCount) = 0;
  v53[2] = sub_260FE30C0();
  v53[3] = v54;
  uint64_t v55 = sub_260FE30C0();
  uint64_t v57 = v56;
  uint64_t v58 = *(void (**)(char *, uint64_t))(v44 + 8);
  v58(v48, v43);
  v58(v51, v43);
  v53[4] = v55;
  v53[5] = v57;
  uint64_t v59 = *(unsigned __int8 *)(v6 + 2);
  v340 = v53;
  sub_260F8EB6C(v59);
  uint64_t v350 = sub_260FE3940();
  uint64_t v344 = *(void *)(v350 - 8);
  uint64_t v60 = *(void *)(v344 + 64);
  MEMORY[0x270FA5388](v350, v61);
  uint64_t v322 = type metadata accessor for AppleDiffusionPipeline(0);
  uint64_t v62 = v6 + *(int *)(v322 + 44);
  sub_260FE3970();
  sub_260FE3910();
  if (qword_26A8EA918 != -1) {
    swift_once();
  }
  uint64_t v63 = sub_260FE3A10();
  v325 = (void (**)(uint64_t, char *, uint64_t))__swift_project_value_buffer(v63, (uint64_t)qword_26A90FC00);
  uint64_t v64 = sub_260FE39F0();
  os_log_type_t v65 = sub_260FE4880();
  BOOL v66 = os_log_type_enabled(v64, v65);
  v347 = (void *)v6;
  v343 = (char *)&v292 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v66)
  {
    uint64_t v67 = (uint8_t *)swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    *(void *)&long long v356 = v68;
    *(_DWORD *)uint64_t v67 = 136315138;
    uint64_t v69 = sub_260FE4C50();
    uint64_t v359 = sub_260DB2844(v69, v70, (uint64_t *)&v356);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_260D82000, v64, v65, "Entering %s.", v67, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v68, -1, -1);
    MEMORY[0x26122CA00](v67, -1, -1);
  }

  uint64_t v71 = sub_260FE3990();
  v333 = &v292;
  uint64_t v72 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71, v73);
  uint64_t v337 = v74;
  unint64_t v75 = (char *)&v292 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = *(void **)(v72 + 16);
  uint64_t v338 = v62;
  uint64_t v339 = v72 + 16;
  v336 = (void (*)(unint64_t, uint64_t, uint64_t))v76;
  ((void (*)(char *, uint64_t, uint64_t))v76)(v75, v62, v71);
  uint64_t v77 = sub_260FE3970();
  os_signpost_type_t v78 = sub_260FE4940();
  uint64_t v79 = sub_260FE4A60();
  uint64_t v323 = v60;
  if (v79)
  {
    v335 = &v292;
    MEMORY[0x270FA5388](v79, v80);
    uint64_t v81 = (char *)&v292 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v346 = v72;
    uint64_t v82 = v344;
    v334 = *(void (**)(char *))(v344 + 16);
    uint64_t v83 = v343;
    v334(v81);
    uint64_t v84 = v71;
    uint64_t v85 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v85 = 0;
    os_signpost_id_t v86 = sub_260FE3920();
    _os_signpost_emit_with_name_impl(&dword_260D82000, v77, v78, v86, "diffusion generateImages", "", v85, 2u);
    uint64_t v87 = v85;
    uint64_t v71 = v84;
    MEMORY[0x26122CA00](v87, -1, -1);

    uint64_t v88 = v82;
    uint64_t v60 = v323;
    uint64_t v72 = v346;
    uint64_t v89 = v81;
    uint64_t v90 = v350;
    uint64_t v91 = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v89, v350);
    uint64_t v93 = (void (*)(void))v334;
  }
  else
  {

    uint64_t v93 = *(void (**)(void))(v344 + 16);
    uint64_t v83 = v343;
    uint64_t v90 = v350;
  }
  v341 = (void *)v71;
  MEMORY[0x270FA5388](v91, v92);
  v334 = (void (*)(char *))v93;
  uint64_t v315 = v94;
  ((void (*)(char *, char *, uint64_t))v93)((char *)&v292 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0), v83, v90);
  uint64_t v95 = sub_260FE39D0();
  swift_allocObject();
  uint64_t v328 = sub_260FE39C0();
  uint64_t v96 = *(uint64_t **)(v72 + 8);
  uint64_t v346 = v72 + 8;
  v335 = v96;
  uint64_t v97 = ((uint64_t (*)(char *, uint64_t))v96)(v75, v71);
  v329 = &v292;
  MEMORY[0x270FA5388](v97, v98);
  unint64_t v100 = (unint64_t)&v292 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  v336(v100, v338, v71);
  unint64_t v101 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)unint64_t v101 = 0;
  uint64_t v102 = sub_260FE3970();
  os_signpost_type_t v103 = sub_260FE4940();
  os_signpost_id_t v104 = sub_260FE3920();
  _os_signpost_emit_with_name_impl(&dword_260D82000, v102, v103, v104, "encodeConditioning", "", v101, 2u);
  uint64_t v106 = v351;
  os_log_t v105 = v352;
  uint64_t v107 = v353;
  sub_260F6091C(v351, v351 + SLODWORD(v352[6].isa), v342);
  if (v107)
  {

    ((void (*)(unint64_t, void *))v335)(v100, v341);
    sub_260F61A14((uint64_t)v347, "diffusion generateImages", 24, 2);
    swift_release();
    (*(void (**)(char *, uint64_t))(v344 + 8))(v83, v350);
    sub_260F8EC10();
LABEL_10:
    swift_release();
    return v100;
  }
  uint64_t v308 = v95;
  unint64_t v317 = 0;
  uint64_t v108 = (uint64_t)v330;
  uint64_t v109 = (uint64_t)&v330[SLODWORD(v105[6].isa)];
  os_signpost_type_t v110 = sub_260FE4930();
  os_signpost_id_t v111 = sub_260FE3920();
  _os_signpost_emit_with_name_impl(&dword_260D82000, v102, v110, v111, "encodeConditioning", "", v101, 2u);

  uint64_t v112 = v327;
  sub_260DD7C14(v106, v327, &qword_26A8EA958);
  MEMORY[0x26122CA00](v101, -1, -1);
  uint64_t v113 = v112 + SLODWORD(v105[6].isa);
  sub_260F6879C(v112, v108, type metadata accessor for AppleDiffusionPipeline.ConditioningInputs);
  unint64_t v114 = (unint64_t)&qword_26A8EA960;
  sub_260DD7C14(v113, v109, &qword_26A8EA960);
  ((void (*)(unint64_t, void *))v335)(v100, v341);
  uint64_t v115 = v320;
  sub_260F6879C(v108, v320, type metadata accessor for AppleDiffusionPipeline.ConditioningInputs);
  uint64_t v116 = v321;
  sub_260DD7C14(v109, v321, &qword_26A8EA960);
  unint64_t v100 = v322;
  uint64_t v117 = *(int *)(v322 + 40);
  uint64_t v118 = v347;
  if (*((unsigned char *)v347 + v117))
  {
    ManagedMLModel.unloadResources()();
    ManagedMLModel.unloadResources()();
  }
  unint64_t v119 = v317;
  uint64_t v120 = sub_260FE45B0();
  uint64_t v122 = v350;
  unint64_t v123 = v342;
  if (v119)
  {
    unint64_t v100 = v119;
    sub_260F64860(v115, type metadata accessor for AppleDiffusionPipeline.ConditioningInputs);
    sub_260D90820(v116, &qword_26A8EA960);
    sub_260F61A14((uint64_t)v118, "diffusion generateImages", 24, 2);
    swift_release();
    (*(void (**)(char *, uint64_t))(v344 + 8))(v343, v122);
    sub_260F8EC10();
    swift_release();
    return v100;
  }
  if ((*(void *)(v342 + v319[17]) & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  MEMORY[0x270FA5388](v120, v121);
  uint64_t v290 = v123;
  v291 = v118;
  uint64_t v126 = sub_260F5C7F0((uint64_t)sub_260F64E08, (uint64_t)&v289, 0, v125);
  if (!*(void *)(v126 + 16)) {
    goto LABEL_96;
  }
  uint64_t v127 = v118;
  uint64_t v118 = (void *)v126;
  uint64_t v128 = v126 + 32;
  sub_260D90158(v126 + 32, (uint64_t)&v356);
  uint64_t v129 = sub_260F61560(v123, &v356);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v356);
  uint64_t v327 = v129;
  uint64_t v359 = v129;
  if (*((unsigned char *)v127 + v117) && *(void *)((char *)v127 + *(int *)(v100 + 24))) {
    ManagedMLModel.unloadResources()();
  }
  sub_260FE45B0();
  uint64_t v307 = v128;
  v305 = v118;
  uint64_t v293 = v117;
  unint64_t v317 = 0;
  uint64_t v130 = v327;
  int64_t v131 = *(void *)(v327 + 16);
  unint64_t v132 = MEMORY[0x263F8EE78];
  if (v131)
  {
    *(void *)&long long v356 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_260F63738(0, v131, 0);
    uint64_t v118 = (void *)(v310 + 16);
    int v133 = *(uint64_t **)(v310 + 16);
    os_log_t v352 = (os_log_t)((*(unsigned __int8 *)(v310 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v310 + 80));
    v353 = v133;
    char v134 = (char *)v352 + v130;
    uint64_t v351 = *(void *)(v310 + 72);
    v333 = (uint64_t *)(v310 + 8);
    v330 = (char *)(v310 + 32);
    unint64_t v132 = v356;
    uint64_t v135 = v349;
    uint64_t v136 = v133;
    do
    {
      uint64_t v137 = v348;
      ((void (*)(char *, char *, uint64_t))v136)(v348, v134, v135);
      ((void (*)(char *, char *, uint64_t))v136)(v331, v137, v135);
      sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
      sub_260FE3BC0();
      ((void (*)(char *, uint64_t))*v333)(v137, v135);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_260F63738(0, *(void *)(v132 + 16) + 1, 1);
        unint64_t v132 = v356;
      }
      unint64_t v139 = *(void *)(v132 + 16);
      unint64_t v138 = *(void *)(v132 + 24);
      long long v140 = v332;
      if (v139 >= v138 >> 1)
      {
        sub_260F63738(v138 > 1, v139 + 1, 1);
        long long v140 = v332;
        unint64_t v132 = v356;
      }
      *(void *)(v132 + 16) = v139 + 1;
      uint64_t v141 = v351;
      uint64_t v135 = v349;
      (*(void (**)(char *, void (*)(void), uint64_t))v330)((char *)v352 + v132 + v139 * v351, v140, v349);
      v134 += v141;
      --v131;
    }
    while (v131);
    swift_bridgeObjectRelease();
    uint64_t v116 = v321;
  }
  unint64_t v123 = v342;
  unint64_t v355 = v132;
  unint64_t v114 = (unint64_t)v319;
  int v142 = *(unsigned __int8 *)(v342 + v319[13] + 8);
  if (v142 == 255) {
    float v143 = 0.0;
  }
  else {
    float v143 = *(float *)(v342 + v319[15]);
  }
  sub_260D90158(v307, (uint64_t)&v356);
  uint64_t v144 = v357;
  unint64_t v100 = v358;
  __swift_project_boxed_opaque_existential_1(&v356, v357);
  uint64_t v145 = *(uint64_t (**)(unint64_t, uint64_t, unint64_t))(v100 + 32);
  LOBYTE(v354) = v142 == 255;
  if (v142 == 255) {
    float v146 = 0.0;
  }
  else {
    float v146 = v143;
  }
  uint64_t v147 = v145(LODWORD(v143) | ((unint64_t)(v142 == 255) << 32), v144, v100);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v356);
  float v148 = v146 * (float)*(uint64_t *)(v123 + *(int *)(v114 + 72));
  if ((~LODWORD(v148) & 0x7F800000) == 0)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  unint64_t v100 = v317;
  uint64_t v149 = v326;
  if (v148 <= -9.2234e18)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v148 >= 9.2234e18)
  {
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  unint64_t v150 = v123 + *(int *)(v114 + 40);
  uint64_t v295 = *(void *)v150;
  int v151 = *(unsigned __int8 *)(v150 + 8);
  sub_260F64E4C(v123, (uint64_t)v326, type metadata accessor for PipelineConfiguration);
  if (v151 == 1) {
    uint64_t v295 = *(uint64_t *)((char *)v149 + *(int *)(v114 + 72));
  }
  uint64_t v118 = v341;
  unint64_t v123 = (unint64_t)v343;
  sub_260F64860((uint64_t)v149, type metadata accessor for PipelineConfiguration);
  swift_bridgeObjectRetain();
  long long v152 = sub_260FE39F0();
  os_log_type_t v153 = sub_260FE4880();
  BOOL v154 = os_log_type_enabled(v152, v153);
  uint64_t v304 = v147;
  if (v154)
  {
    uint64_t v155 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v155 = 134217984;
    uint64_t v147 = v304;
    *(void *)&long long v356 = *(void *)(v304 + 16);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_260D82000, v152, v153, "Running denoise loop for %ld iterations.", v155, 0xCu);
    MEMORY[0x26122CA00](v155, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  unint64_t v156 = v322;
  uint64_t v299 = *(void *)(v147 + 16);
  if (v299)
  {
    long long v157 = (char *)v123;
    uint64_t v298 = (uint64_t)v148 & ~((uint64_t)v148 >> 63);
    uint64_t v296 = v319[20];
    float v158 = *(float *)(v342 + v296);
    uint64_t v300 = v147 + 32;
    v294 = (uint64_t (**)(char *, uint64_t))(v344 + 8);
    uint64_t v297 = OBJC_IVAR____TtCV13DiffusionBase22AppleDiffusionPipeline15PowerLogMetrics__unetIterationsCount;
    uint64_t v327 = v310 + 16;
    v326 = (void (**)(char *, uint64_t))(v310 + 8);
    v325 = (void (**)(uint64_t, char *, uint64_t))(v310 + 32);
    v302 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v324 + 48);
    swift_bridgeObjectRetain();
    unint64_t v123 = 0;
    long long v324 = xmmword_260FE7060;
    while (1)
    {
      if (v123 >= *(void *)(v147 + 16)) {
        goto LABEL_97;
      }
      uint64_t v307 = v123;
      uint64_t v306 = *(void *)(v300 + 8 * v123);
      uint64_t v159 = sub_260FE45B0();
      if (v100) {
        break;
      }
      v353 = &v292;
      MEMORY[0x270FA5388](v159, v160);
      uint64_t v162 = (char *)&v292 - ((v161 + 15) & 0xFFFFFFFFFFFFFFF0);
      v336((unint64_t)v162, v338, (uint64_t)v118);
      v163 = sub_260FE3970();
      os_signpost_type_t v164 = sub_260FE4940();
      uint64_t v165 = sub_260FE4A60();
      unint64_t v317 = 0;
      if (v165)
      {
        os_log_t v352 = (os_log_t)&v292;
        uint64_t v167 = v323;
        MEMORY[0x270FA5388](v165, v166);
        uint64_t v168 = v350;
        long long v169 = v334;
        ((void (*)(char *, char *, uint64_t))v334)((char *)&v292 - ((v167 + 15) & 0xFFFFFFFFFFFFFFF0), v157, v350);
        long long v170 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v170 = 0;
        os_signpost_id_t v171 = sub_260FE3920();
        _os_signpost_emit_with_name_impl(&dword_260D82000, v163, v164, v171, "denoiseStep", "", v170, 2u);
        MEMORY[0x26122CA00](v170, -1, -1);

        uint64_t v172 = (*v294)((char *)&v292 - ((v167 + 15) & 0xFFFFFFFFFFFFFFF0), v168);
        v173 = v343;
      }
      else
      {

        v173 = v157;
        uint64_t v167 = v323;
        long long v169 = v334;
      }
      MEMORY[0x270FA5388](v172, v173);
      v169((char *)&v292 - ((v167 + 15) & 0xFFFFFFFFFFFFFFF0));
      swift_allocObject();
      uint64_t v303 = sub_260FE39C0();
      ((void (*)(char *, void *))v335)(v162, v341);
      uint64_t v174 = v359;
      uint64_t v175 = *(NSObject **)(v359 + 16);
      if (v175)
      {
        *(void *)&long long v356 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_260F63738(0, (int64_t)v175, 0);
        uint64_t v176 = *(unsigned __int8 *)(v310 + 80);
        uint64_t v177 = (v176 + 32) & ~v176;
        uint64_t v301 = v174;
        uint64_t v178 = v174 + v177;
        uint64_t v179 = *(void *)(v310 + 72);
        v332 = *(void (**)(void))(v310 + 16);
        v331 = (char *)(v177 + 2 * v179);
        v330 = (char *)(v176 | 7);
        id v180 = (uint64_t *)v356;
        uint64_t v181 = v349;
        v333 = (uint64_t *)v177;
        do
        {
          os_log_t v352 = v175;
          v353 = v180;
          long long v182 = v348;
          uint64_t v351 = v178;
          long long v183 = (void (*)(uint64_t, char *, uint64_t))v332;
          v332(v348);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
          uint64_t v184 = swift_allocObject();
          *(_OWORD *)(v184 + 16) = v324;
          v183(v184 + v177, v182, v181);
          v183(v184 + v177 + v179, v182, v181);
          uint64_t v354 = v184;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C8);
          sub_260D90340(&qword_26A8E84D0, &qword_26A8E84C8);
          sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
          id v180 = v353;
          sub_260FE3AD0();
          (*v326)(v182, v181);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_260F63738(0, v180[2] + 1, 1);
            id v180 = (uint64_t *)v356;
          }
          unint64_t v186 = v180[2];
          unint64_t v185 = v180[3];
          v187 = v345;
          uint64_t v177 = (uint64_t)v333;
          os_log_t v188 = v352;
          if (v186 >= v185 >> 1)
          {
            sub_260F63738(v185 > 1, v186 + 1, 1);
            v187 = v345;
            id v180 = (uint64_t *)v356;
          }
          v180[2] = v186 + 1;
          uint64_t v189 = (uint64_t)v180 + v177 + v186 * v179;
          uint64_t v181 = v349;
          (*v325)(v189, v187, v349);
          uint64_t v178 = v351 + v179;
          uint64_t v175 = (os_log_t)((char *)v188 - 1);
        }
        while (v175);
        unint64_t v123 = (unint64_t)v180;
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v123 = MEMORY[0x263F8EE78];
      }
      id v190 = *v302;
      uint64_t v191 = v321;
      v192 = (int *)v316;
      int v193 = (*v302)(v321, 1, v316);
      uint64_t v194 = v338;
      uint64_t v195 = v337;
      uint64_t v118 = v336;
      uint64_t v116 = v298;
      if (v193 == 1 || v295 >= v307)
      {
        uint64_t v198 = sub_260F64E4C(v320, v318, type metadata accessor for AppleDiffusionPipeline.ConditioningInputs);
      }
      else
      {
        uint64_t v196 = v191;
        uint64_t v197 = v309;
        sub_260D907BC(v196, v309, &qword_26A8EA960);
        uint64_t result = v190(v197, 1, (uint64_t)v192);
        if (result == 1) {
          goto LABEL_128;
        }
        uint64_t v198 = sub_260F6879C(v197, v318, type metadata accessor for AppleDiffusionPipeline.ConditioningInputs);
      }
      v353 = &v292;
      MEMORY[0x270FA5388](v198, v199);
      unint64_t v114 = (unint64_t)&v292 - ((v195 + 15) & 0xFFFFFFFFFFFFFFF0);
      ((void (*)(unint64_t, uint64_t, void *))v118)(v114, v194, v341);
      uint64_t v200 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v200 = 0;
      unint64_t v100 = sub_260FE3970();
      os_signpost_type_t v201 = sub_260FE4940();
      os_signpost_id_t v202 = sub_260FE3920();
      _os_signpost_emit_with_name_impl(&dword_260D82000, (os_log_t)v100, v201, v202, "unet", "", v200, 2u);
      uint64_t v203 = v116 + v307;
      if (__OFADD__(v116, v307)) {
        goto LABEL_98;
      }
      os_log_t v352 = *(os_log_t *)(v304 + 16);
      v204 = (char *)v352 + v116;
      uint64_t v118 = v305;
      if (__OFADD__(v116, v352)) {
        goto LABEL_99;
      }
      uint64_t v205 = (uint64_t)v347;
      uint64_t v206 = (unsigned int *)(v342 + v319[12]);
      uint64_t v207 = *v206;
      int64_t v208 = v318 + v192[5];
      uint64_t v209 = v318 + v192[6];
      unint64_t v210 = *(void *)(v318 + v192[7]);
      v211 = (long long *)(v318 + v192[8]);
      long long v212 = *v211;
      uint64_t v213 = *((void *)v211 + 2);
      LOBYTE(v211) = *((unsigned char *)v211 + 24);
      unint64_t v214 = *(unsigned int *)(v342 + v319[11]) | ((unint64_t)*(unsigned __int8 *)(v342 + v319[11] + 4) << 32);
      LOBYTE(v354) = *((unsigned char *)v206 + 4);
      unint64_t v215 = v317;
      uint64_t v216 = sub_260F6F168(v123, v306, v214, v207 | ((unint64_t)v354 << 32), v318, v208, v209, v210, (float)v203 / (float)(uint64_t)v204, (void *)v212, *((void **)&v212 + 1), v213, (char)v211, v158 == 1.0);
      if (v215)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();

        ((void (*)(unint64_t, void *))v335)(v114, v341);
        sub_260F64860(v318, type metadata accessor for AppleDiffusionPipeline.ConditioningInputs);
        sub_260F61A14(v205, "denoiseStep", 11, 2);
        swift_release();
        uint64_t v253 = v205;
        uint64_t v116 = v321;
        unint64_t v100 = v322;
        uint64_t v252 = v293;
        goto LABEL_85;
      }
      uint64_t v217 = v216;
      uint64_t v116 = sub_260FE4930();
      uint64_t v118 = v343;
      os_signpost_id_t v218 = sub_260FE3920();
      _os_signpost_emit_with_name_impl(&dword_260D82000, (os_log_t)v100, (os_signpost_type_t)v116, v218, "unet", "", v200, 2u);

      MEMORY[0x26122CA00](v200, -1, -1);
      swift_bridgeObjectRelease();
      *(void *)&long long v356 = v217;
      unint64_t v219 = v114;
      unint64_t v114 = (unint64_t)v341;
      uint64_t v220 = ((uint64_t (*)(unint64_t, void *))v335)(v219, v341);
      uint64_t v222 = *(void *)((char *)v340 + v297);
      BOOL v223 = __OFADD__(v222, 1);
      uint64_t v224 = v222 + 1;
      if (v223) {
        goto LABEL_100;
      }
      unint64_t v123 = v307 + 1;
      *(void *)((char *)v340 + v297) = v224;
      uint64_t v225 = v356;
      v226 = (void *)v342;
      MEMORY[0x270FA5388](v220, v221);
      uint64_t v290 = (uint64_t)v347;
      LODWORD(v291) = v227;
      swift_bridgeObjectRetain();
      uint64_t v228 = sub_260F5C944((void (*)(uint64_t))sub_260F64EB4, (uint64_t)&v289, v225);
      swift_bridgeObjectRelease();
      uint64_t v229 = swift_bridgeObjectRelease();
      uint64_t v351 = (uint64_t)&v292;
      *(void *)&long long v356 = v228;
      MEMORY[0x270FA5388](v229, v230);
      uint64_t v232 = (char *)&v292 - ((v231 + 15) & 0xFFFFFFFFFFFFFFF0);
      v336((unint64_t)v232, v338, v114);
      v233 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v233 = 0;
      v234 = sub_260FE3970();
      os_signpost_type_t v235 = sub_260FE4940();
      os_signpost_id_t v236 = sub_260FE3920();
      os_signpost_type_t v237 = v235;
      unint64_t v114 = (unint64_t)"schedulerStep";
      _os_signpost_emit_with_name_impl(&dword_260D82000, v234, v237, v236, "schedulerStep", "", v233, 2u);
      sub_260F61E38((unint64_t)v226, (unint64_t *)&v359, v305, (uint64_t *)&v356, v306, &v355);
      unint64_t v317 = 0;
      uint64_t v238 = sub_260FE4930();
      os_signpost_id_t v239 = sub_260FE3920();
      _os_signpost_emit_with_name_impl(&dword_260D82000, v234, (os_signpost_type_t)v238, v239, "schedulerStep", "", v233, 2u);

      MEMORY[0x26122CA00](v233, -1, -1);
      ((void (*)(char *, void *))v335)(v232, v341);
      v240 = &v359;
      if (*((unsigned char *)v226 + v319[23])) {
        v240 = (uint64_t *)&v355;
      }
      uint64_t v241 = *v240;
      swift_bridgeObjectRetain();
      __swift_project_boxed_opaque_existential_1(v226, v226[3]);
      uint64_t v242 = sub_260FE5110();
      uint64_t v244 = v243;
      v245 = v312;
      sub_260F64E4C((uint64_t)v226, (uint64_t)v312 + *(int *)(v311 + 32), type metadata accessor for PipelineConfiguration);
      uint64_t *v245 = v242;
      v245[1] = v244;
      os_log_t v246 = v352;
      v245[2] = v123;
      v245[3] = (uint64_t)v246;
      v245[4] = v241;
      if ((v313(v245) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        sub_260F64860((uint64_t)v245, (uint64_t (*)(void))type metadata accessor for PipelineProgress);
        sub_260F64860(v318, type metadata accessor for AppleDiffusionPipeline.ConditioningInputs);
        swift_bridgeObjectRelease();
        uint64_t v257 = (uint64_t)v347;
        sub_260F61A14((uint64_t)v347, "denoiseStep", 11, 2);
        swift_release();
        sub_260F64860(v320, type metadata accessor for AppleDiffusionPipeline.ConditioningInputs);
        sub_260D90820(v321, &qword_26A8EA960);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_260F61A14(v257, "diffusion generateImages", 24, 2);
        swift_release();
        (*v294)(v343, v350);
        sub_260F8EC10();
        swift_release();
        return MEMORY[0x263F8EE78];
      }
      sub_260F64860((uint64_t)v245, (uint64_t (*)(void))type metadata accessor for PipelineProgress);
      sub_260F64860(v318, type metadata accessor for AppleDiffusionPipeline.ConditioningInputs);
      swift_bridgeObjectRelease();
      sub_260F61A14((uint64_t)v347, "denoiseStep", 11, 2);
      swift_release();
      long long v157 = v343;
      uint64_t v116 = v321;
      unint64_t v100 = v317;
      unint64_t v156 = v322;
      uint64_t v118 = v341;
      uint64_t v147 = v304;
      if (v123 == v299)
      {
        uint64_t v247 = v322;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v248 = v350;
        unint64_t v123 = (unint64_t)v157;
        goto LABEL_74;
      }
    }
    unint64_t v100 = v156;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v252 = v293;
    uint64_t v253 = (uint64_t)v347;
LABEL_85:
    uint64_t v254 = v350;
    if (*(unsigned char *)(v253 + v252) != 2) {
      goto LABEL_126;
    }
    uint64_t v118 = (void *)v253;
    unint64_t v100 = *(void *)(v253 + *(int *)(v100 + 20) + 200);
    if (v100 >> 62) {
      goto LABEL_124;
    }
    uint64_t v255 = *(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v255) {
      goto LABEL_125;
    }
    goto LABEL_88;
  }
  uint64_t v247 = v322;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v248 = v350;
LABEL_74:
  uint64_t v249 = (uint64_t)v347;
  if (*((unsigned char *)v347 + v293) != 2) {
    goto LABEL_106;
  }
  unint64_t v114 = *(void *)((char *)v347 + *(int *)(v247 + 20) + 200);
  if (v114 >> 62)
  {
LABEL_104:
    swift_bridgeObjectRetain();
    uint64_t v250 = sub_260FE4E40();
    if (v250) {
      goto LABEL_77;
    }
    goto LABEL_105;
  }
  uint64_t v250 = *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v250)
  {
LABEL_77:
    if (v250 < 1) {
      goto LABEL_123;
    }
    for (uint64_t i = 0; i != v250; ++i)
    {
      if ((v114 & 0xC000000000000001) != 0) {
        MEMORY[0x26122B4C0](i, v114);
      }
      else {
        swift_retain();
      }
      ManagedMLModel.unloadResources()();
      swift_release();
    }
  }
LABEL_105:
  swift_bridgeObjectRelease();
  uint64_t v248 = v350;
  uint64_t v247 = v322;
  uint64_t v118 = v341;
  uint64_t v249 = (uint64_t)v347;
LABEL_106:
  uint64_t v258 = sub_260FE45B0();
  if (v100)
  {
    sub_260F64860(v320, type metadata accessor for AppleDiffusionPipeline.ConditioningInputs);
    sub_260D90820(v116, &qword_26A8EA960);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_260F61A14(v249, "diffusion generateImages", 24, 2);
    swift_release();
    (*(void (**)(unint64_t, uint64_t))(v344 + 8))(v123, v248);
    sub_260F8EC10();
    swift_release();
    return v100;
  }
  uint64_t v116 = (uint64_t)v340;
  uint64_t v351 = (uint64_t)&v292;
  MEMORY[0x270FA5388](v258, v259);
  v261 = (char *)&v292 - ((v260 + 15) & 0xFFFFFFFFFFFFFFF0);
  v336((unint64_t)v261, v338, (uint64_t)v118);
  v262 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v262 = 0;
  v353 = (uint64_t *)v261;
  v263 = sub_260FE3970();
  os_signpost_type_t v264 = sub_260FE4940();
  os_signpost_id_t v265 = sub_260FE3920();
  os_log_t v352 = v263;
  _os_signpost_emit_with_name_impl(&dword_260D82000, v263, v264, v265, "decodeToImage", "", v262, 2u);
  v266 = (uint64_t *)(v249 + *(int *)(v247 + 28));
  uint64_t v268 = *v266;
  uint64_t v267 = v266[1];
  float v269 = *(float *)(v342 + v319[27]);
  int v270 = *(unsigned __int8 *)(v342 + 80);
  uint64_t v271 = swift_bridgeObjectRetain();
  int64_t v272 = Decoder.decode(_:scaleFactor:outputRange:inferAlpha:)(v271, v270, v268, v267, v269);
  unint64_t v317 = 0;
  unint64_t v100 = sub_260F6275C(v272);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v249 + v293) == 2)
  {
    ManagedMLModel.unloadResources()();
    if (v267) {
      ManagedMLModel.unloadResources()();
    }
  }
  swift_bridgeObjectRelease();
  os_signpost_type_t v273 = sub_260FE4930();
  v274 = v343;
  os_signpost_id_t v275 = sub_260FE3920();
  os_signpost_type_t v276 = v273;
  os_log_t v277 = v352;
  _os_signpost_emit_with_name_impl(&dword_260D82000, v352, v276, v275, "decodeToImage", "", v262, 2u);

  MEMORY[0x26122CA00](v262, -1, -1);
  ((void (*)(uint64_t *, void *))v335)(v353, v341);
  uint64_t v278 = *(void *)(v100 + 16);
  uint64_t v279 = v320;
  if (!v278)
  {
LABEL_120:
    sub_260F64860(v279, type metadata accessor for AppleDiffusionPipeline.ConditioningInputs);
    sub_260D90820(v321, &qword_26A8EA960);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_260F61A14((uint64_t)v347, "diffusion generateImages", 24, 2);
    swift_release();
    (*(void (**)(char *, uint64_t))(v344 + 8))(v274, v350);
    sub_260F8EC10();
    swift_release();
    return v100;
  }
  uint64_t v280 = OBJC_IVAR____TtCV13DiffusionBase22AppleDiffusionPipeline15PowerLogMetrics__outputPixelsCount;
  swift_bridgeObjectRetain();
  uint64_t v281 = 32;
  while (1)
  {
    uint64_t v118 = *(void **)(v100 + v281);
    if (v118)
    {
      v282 = v118;
      int64_t Width = CVPixelBufferGetWidth(v282);
      int64_t Height = CVPixelBufferGetHeight(v282);
      uint64_t v285 = Width * Height;
      uint64_t v286 = (unsigned __int128)(Width * (__int128)Height) >> 64;
      uint64_t v279 = v320;
      if (v286 != v285 >> 63) {
        goto LABEL_122;
      }
    }
    else
    {
      uint64_t v285 = 0;
    }
    uint64_t v287 = *(void *)(v116 + v280);
    BOOL v223 = __OFADD__(v287, v285);
    uint64_t v288 = v287 + v285;
    if (v223) {
      break;
    }
    *(void *)(v116 + v280) = v288;

    v281 += 16;
    if (!--v278)
    {
      swift_bridgeObjectRelease();
      goto LABEL_120;
    }
  }
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  swift_bridgeObjectRetain();
  uint64_t result = sub_260FE4E40();
  uint64_t v255 = result;
  if (!result) {
    goto LABEL_125;
  }
LABEL_88:
  if (v255 >= 1)
  {
    for (uint64_t j = 0; j != v255; ++j)
    {
      if ((v100 & 0xC000000000000001) != 0) {
        MEMORY[0x26122B4C0](j, v100);
      }
      else {
        swift_retain();
      }
      ManagedMLModel.unloadResources()();
      swift_release();
    }
LABEL_125:
    swift_bridgeObjectRelease();
    uint64_t v254 = v350;
    uint64_t v253 = (uint64_t)v118;
LABEL_126:
    swift_willThrow();
    sub_260F64860(v320, type metadata accessor for AppleDiffusionPipeline.ConditioningInputs);
    sub_260D90820(v116, &qword_26A8EA960);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_260F61A14(v253, "diffusion generateImages", 24, 2);
    swift_release();
    (*v294)(v343, v254);
    sub_260F8EC10();
    goto LABEL_10;
  }
  __break(1u);
LABEL_128:
  __break(1u);
  return result;
}

uint64_t sub_260F6091C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v108 = a2;
  uint64_t v107 = a1;
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v6 = *(void *)(v114 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v114, v7);
  uint64_t v10 = (char *)v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v8, v11);
  uint64_t v106 = (char *)v96 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12, v14);
  uint64_t v116 = (char *)v96 - v16;
  MEMORY[0x270FA5388](v15, v17);
  uint64_t v115 = (char *)v96 - v18;
  uint64_t v19 = &qword_26A8E6BF8;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
  MEMORY[0x270FA5388](v20 - 8, v21);
  uint64_t v23 = (char *)v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24, v26);
  unint64_t v28 = (unint64_t)v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_signpost_id_t v111 = (int *)type metadata accessor for PipelineConfiguration(0);
  uint64_t v112 = a3;
  sub_260D907BC(a3 + v111[7], (uint64_t)v23, &qword_26A8E6BF8);
  uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  uint64_t v110 = v24;
  if (v29(v23, 1, v24) == 1)
  {
    sub_260D90820((uint64_t)v23, &qword_26A8E6BF8);
    sub_260F64558();
    swift_allocError();
    *(_OWORD *)uint64_t v30 = xmmword_260FE9500;
    *(unsigned char *)(v30 + 16) = 3;
    return swift_willThrow();
  }
  sub_260F6879C((uint64_t)v23, v28, type metadata accessor for PipelineConfiguration.InputConditioning);
  uint64_t v103 = type metadata accessor for AppleDiffusionPipeline(0);
  uint64_t v32 = v4 + *(int *)(v103 + 20);
  uint64_t v33 = *(void *)(v32 + 168);
  if (*(void *)(v33 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v102 = v10;
    BOOL v34 = *(void *)(v33 + 40) == 6;
    uint64_t v104 = v4;
    uint64_t v99 = v32;
    if (v34) {
      unint64_t v119 = &unk_270D22580;
    }
    else {
      unint64_t v119 = &unk_270D225E8;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
    sub_260D90340(&qword_26A8EABD0, &qword_26A8EABC8);
    uint64_t v35 = v115;
    sub_260FE3B30();
    uint64_t v37 = v113;
    uint64_t v36 = v114;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
    uint64_t v38 = *(void *)(v6 + 72);
    unint64_t v39 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_260FE7060;
    unint64_t v41 = v40 + v39;
    uint64_t v109 = v6;
    uint64_t v42 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 16);
    v42(v41, v35, v36);
    uint64_t v101 = v6 + 16;
    unint64_t v100 = v42;
    v42(v41 + v38, v35, v36);
    unint64_t v119 = (void *)v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C8);
    sub_260D90340(&qword_26A8E84D0, &qword_26A8E84C8);
    sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
    sub_260FE3AD0();
    uint64_t v43 = v112 + v111[14];
    uint64_t v44 = *(void **)v43;
    unint64_t v105 = v28;
    if (!v44)
    {
      uint64_t v57 = 0;
      uint64_t v6 = v109;
      goto LABEL_21;
    }
    uint64_t v45 = v37;
    uint64_t v46 = *(void **)(v43 + 8);
    uint64_t v47 = *(void *)(v43 + 16);
    uint64_t v48 = *(void **)(v43 + 24);
    uint64_t v49 = (long long *)(v104 + *(int *)(v103 + 32));
    long long v50 = v49[3];
    long long v122 = v49[2];
    long long v123 = v50;
    uint64_t v124 = *((void *)v49 + 8);
    long long v51 = v49[1];
    long long v120 = *v49;
    long long v121 = v51;
    sub_260F32A30(v44, v46);
    id v52 = v46;
    id v53 = v44;
    swift_bridgeObjectRetain();
    sub_260F8A23C((uint64_t)v53, v46, (uint64_t)v48);
    uint64_t v19 = v45;
    if (v45)
    {
      swift_bridgeObjectRelease();

      sub_260F32A84(v44, v46);
      uint64_t v55 = *(void (**)(char *, uint64_t))(v109 + 8);
      uint64_t v56 = v114;
      v55(v116, v114);
      v55(v115, v56);
      return sub_260F64860(v105, type metadata accessor for PipelineConfiguration.InputConditioning);
    }
    unint64_t v28 = v54;
    uint64_t v97 = v46;
    uint64_t v98 = v47;
    v96[0] = v44;
    v96[1] = v48;
    swift_bridgeObjectRelease();

    uint64_t v6 = v109;
    if (!(v28 >> 62))
    {
      uint64_t v58 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v58 = sub_260FE4E40();
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v37 = v19;
  uint64_t v36 = v114;
  if (!v58)
  {
    sub_260F32A84(v96[0], v97);
    swift_bridgeObjectRelease();
    uint64_t v57 = (void *)MEMORY[0x263F8EE78];
    unint64_t v28 = v105;
    goto LABEL_21;
  }
  uint64_t v113 = v19;
  unint64_t v119 = (void *)MEMORY[0x263F8EE78];
  uint64_t result = sub_260FE4D30();
  if ((v58 & 0x8000000000000000) == 0)
  {
    uint64_t v59 = self;
    uint64_t v60 = 0;
    long long v117 = xmmword_260FF7900;
    do
    {
      if ((v28 & 0xC000000000000001) != 0) {
        id v61 = (id)MEMORY[0x26122B4C0](v60, v28);
      }
      else {
        id v61 = *(id *)(v28 + 8 * v60 + 32);
      }
      uint64_t v62 = v61;
      ++v60;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = v117;
      *(void *)(v63 + 32) = v62;
      *(void *)(v63 + 40) = v62;
      uint64_t v118 = v63;
      sub_260FE4420();
      sub_260D905B0(0, &qword_26A8EABD8);
      id v64 = v62;
      os_log_type_t v65 = (void *)sub_260FE43F0();
      swift_bridgeObjectRelease();
      id v66 = objc_msgSend(v59, sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v65, 0, 65552);

      sub_260FE4D00();
      sub_260FE4D40();
      sub_260FE4D50();
      sub_260FE4D10();
    }
    while (v58 != v60);
    uint64_t v57 = v119;
    sub_260F32A84(v96[0], v97);
    swift_bridgeObjectRelease();
    uint64_t v37 = v113;
    uint64_t v36 = v114;
    uint64_t v6 = v109;
    unint64_t v28 = v105;
LABEL_21:
    uint64_t v67 = (uint64_t *)(v28 + *(int *)(v110 + 24));
    uint64_t v68 = v67[2];
    if (v68)
    {
      uint64_t v69 = v36;
      uint64_t v71 = *v67;
      unint64_t v70 = v67[1];
      sub_260DCBD18(*v67, v70);
      swift_bridgeObjectRetain();
      uint64_t v72 = PipelineConfiguration.InputConditioning.Float16Data.multiArray.getter(v71, v70, v68);
      if (v37)
      {
        sub_260E358DC(v71, v70, v68);
        swift_bridgeObjectRelease();
        uint64_t v73 = *(void (**)(char *, uint64_t))(v6 + 8);
        v73(v116, v69);
        v73(v115, v69);
        return sub_260F64860(v105, type metadata accessor for PipelineConfiguration.InputConditioning);
      }
      os_signpost_id_t v86 = v72;
      v87.super.Class isa = AppleDiffusionImageConditioner.encode(_:)((MLMultiArray)v72).super.isa;
      if (v88)
      {

        sub_260E358DC(v71, v70, v68);
        swift_bridgeObjectRelease();
        uint64_t v89 = *(void (**)(char *, uint64_t))(v109 + 8);
        v89(v116, v69);
        v89(v115, v69);
        return sub_260F64860(v105, type metadata accessor for PipelineConfiguration.InputConditioning);
      }
      Class isa = v87.super.isa;
      *(void *)&long long v117 = v57;
      uint64_t v74 = v69;
      uint64_t v113 = (uint64_t *)sub_260F708B8(v87.super.isa, *(float *)(v112 + v111[8]));
      uint64_t v92 = v91;
      uint64_t v94 = v93;
      LODWORD(v112) = v95;

      LODWORD(v112) = v112 & 1;
      sub_260E358DC(v71, v70, v68);
      uint64_t v6 = v109;
      os_signpost_id_t v111 = v92;
      uint64_t v104 = v94;
    }
    else
    {
      *(void *)&long long v117 = v57;
      uint64_t v74 = v36;
      uint64_t v113 = 0;
      os_signpost_id_t v111 = 0;
      uint64_t v104 = 0;
      LODWORD(v112) = 0;
    }
    uint64_t v75 = v74;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v115, v74);
    uint64_t v76 = v106;
    uint64_t v77 = v105;
    uint64_t v78 = v74;
    uint64_t v79 = (void (*)(char *, uint64_t, uint64_t))v100;
    v100((unint64_t)v106, (char *)v105, v78);
    uint64_t v80 = v102;
    v79(v102, v77 + *(int *)(v110 + 20), v75);
    sub_260F64860(v77, type metadata accessor for PipelineConfiguration.InputConditioning);
    uint64_t v81 = (int *)type metadata accessor for AppleDiffusionPipeline.ConditioningInputs(0);
    uint64_t v82 = v107;
    uint64_t v83 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
    v83(v107 + v81[6], v116, v75);
    v83(v82, v76, v75);
    v83(v82 + v81[5], v80, v75);
    *(void *)(v82 + v81[7]) = v117;
    uint64_t v84 = v82 + v81[8];
    uint64_t v85 = v111;
    *(void *)uint64_t v84 = v113;
    *(void *)(v84 + 8) = v85;
    *(void *)(v84 + 16) = v104;
    *(unsigned char *)(v84 + 24) = v112;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(*((void *)v81 - 1) + 56))(v108, 1, 1, v81);
  }
  __break(1u);
  return result;
}

uint64_t sub_260F61560(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABA8);
  MEMORY[0x270FA5388](v61, v7);
  uint64_t v60 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v62 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PipelineConfiguration(0);
  int v14 = *(unsigned __int8 *)(a1 + *(int *)(v13 + 100));
  uint64_t v56 = v13;
  uint64_t v57 = a1;
  uint64_t v15 = *(unsigned int *)(a1 + *(int *)(v13 + 76));
  uint64_t v55 = v3;
  if (v14)
  {
    if (v14 == 1)
    {
      uint64_t v16 = sub_260F6E4E8(v15);
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      char v22 = v21;
      uint64_t v67 = &type metadata for TorchRandomSource;
      uint64_t v68 = &off_270D24368;
      uint64_t v23 = swift_allocObject();
      uint64_t v65 = v23;
      *(void *)(v23 + 16) = v16;
      *(void *)(v23 + 24) = v18;
      *(void *)(v23 + 32) = v20;
      *(unsigned char *)(v23 + 40) = v22 & 1;
    }
    else
    {
      uint64_t v67 = &type metadata for NvRandomSource;
      uint64_t v68 = &off_270D24A10;
      uint64_t v65 = v15;
      int v66 = 0;
    }
  }
  else
  {
    uint64_t v24 = sub_260F6E4E8(v15);
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    char v30 = v29;
    uint64_t v67 = &type metadata for NumPyRandomSource;
    uint64_t v68 = &off_270D24488;
    uint64_t v31 = swift_allocObject();
    uint64_t v65 = v31;
    *(void *)(v31 + 16) = v24;
    *(void *)(v31 + 24) = v26;
    *(void *)(v31 + 32) = v28;
    *(unsigned char *)(v31 + 40) = v30 & 1;
  }
  uint64_t v32 = *(void **)(v4 + *(int *)(type metadata accessor for AppleDiffusionPipeline(0) + 20) + 160);
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if (v32[2]) {
      goto LABEL_8;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t result = (uint64_t)sub_260F7B454(v32);
  uint64_t v32 = (void *)result;
  if (!*(void *)(result + 16)) {
    goto LABEL_18;
  }
LABEL_8:
  uint64_t v63 = v32;
  v32[4] = 1;
  uint64_t v34 = a2[3];
  uint64_t v35 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v34);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 64))(v34, v35);
  int64_t v37 = *(void *)(v57 + *(int *)(v56 + 68));
  if (v37 < 0)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  uint64_t v38 = MEMORY[0x263F8EE78];
  if (v37)
  {
    float v39 = v36;
    uint64_t v64 = MEMORY[0x263F8EE78];
    sub_260F63738(0, v37, 0);
    uint64_t v58 = v62 + 32;
    uint64_t v59 = v9;
    uint64_t v38 = v64;
    double v40 = v39;
    do
    {
      unint64_t v41 = v67;
      uint64_t v42 = v68;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v65, (uint64_t)v67);
      uint64_t v43 = v12;
      uint64_t v44 = (void (*)(uint64_t, ValueMetadata *, _UNKNOWN **, double, double))v42[2];
      uint64_t v45 = swift_bridgeObjectRetain();
      v44(v45, v41, v42, 0.0, v40);
      uint64_t v12 = v43;
      swift_bridgeObjectRelease();
      sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
      sub_260D90340(&qword_26A8EABB0, &qword_26A8EABA8);
      uint64_t v46 = v59;
      sub_260FE3BC0();
      uint64_t v64 = v38;
      unint64_t v48 = *(void *)(v38 + 16);
      unint64_t v47 = *(void *)(v38 + 24);
      if (v48 >= v47 >> 1)
      {
        sub_260F63738(v47 > 1, v48 + 1, 1);
        uint64_t v38 = v64;
      }
      *(void *)(v38 + 16) = v48 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v62 + 32))(v38+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v48, v43, v46);
      --v37;
    }
    while (v37);
  }
  uint64_t v49 = v57 + *(int *)(v56 + 52);
  unsigned __int8 v50 = *(unsigned char *)(v49 + 8);
  if ((v50 & 1) == 0)
  {
    id v51 = *(id *)v49;
    id v52 = *(id *)v49;
    swift_bridgeObjectRelease();
    sub_260F64558();
    swift_allocError();
    *(void *)uint64_t v53 = 0;
    *(void *)(v53 + 8) = 0;
    *(unsigned char *)(v53 + 16) = 3;
    swift_willThrow();
    sub_260F32A14(v51, v50);
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v65);
  return v38;
}

char *sub_260F61A14(uint64_t a1, const char *a2, uint64_t a3, int a4)
{
  LODWORD(v31) = a4;
  uint64_t v32 = (char *)a2;
  uint64_t v4 = a1 + *(int *)(type metadata accessor for AppleDiffusionPipeline(0) + 44);
  uint64_t v5 = sub_260FE3990();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v4, v5);
  uint64_t v10 = sub_260FE3970();
  uint64_t v11 = sub_260FE3940();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11, v14);
  sub_260FE39B0();
  int v30 = sub_260FE4930();
  if ((sub_260FE4A60() & 1) == 0) {
    goto LABEL_5;
  }
  os_log_t v28 = v10;
  uint64_t v29 = v5;
  if ((v31 & 1) == 0)
  {
    if (!v32)
    {
      __break(1u);
LABEL_5:

      (*(void (**)(char *, uint64_t))(v12 + 8))((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
      return (char *)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    goto LABEL_10;
  }
  uint64_t result = v32;
  if ((unint64_t)v32 >> 32)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v32 >> 11 == 27)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  if (v32 >> 16 > 0x10)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v32 = sub_260E5BF60();
LABEL_10:
  uint64_t v16 = sub_260FE39A0();
  uint64_t v31 = &v28;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v18);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_260FE39E0();
  swift_release();
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v20, v16);
  if (MEMORY[0x263F90230] && v21 == *MEMORY[0x263F90230])
  {
    uint64_t v23 = "[Error] Interval already ended";
  }
  else
  {
    uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    uint64_t v23 = "";
  }
  uint64_t v31 = &v28;
  MEMORY[0x270FA5388](v21, v22);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v24 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v24 = 0;
  os_signpost_id_t v25 = sub_260FE3920();
  os_log_t v26 = v28;
  _os_signpost_emit_with_name_impl(&dword_260D82000, v28, (os_signpost_type_t)v30, v25, v32, v23, v24, 2u);
  MEMORY[0x26122CA00](v24, -1, -1);

  uint64_t v27 = *(void (**)(char *, uint64_t))(v12 + 8);
  v27((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v29);
  return (char *)((uint64_t (*)(char *, uint64_t))v27)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
}

uint64_t sub_260F61E38(unint64_t a1, unint64_t *a2, void *a3, uint64_t *a4, uint64_t a5, unint64_t *a6)
{
  int v66 = a6;
  uint64_t v67 = a2;
  uint64_t v63 = a5;
  uint64_t v64 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  MEMORY[0x270FA5388](v8 - 8, v9);
  uint64_t v11 = (unint64_t *)&v54[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v65 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12, v13);
  uint64_t v16 = &v54[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = MEMORY[0x270FA5388](v14, v17);
  uint64_t v62 = &v54[-v19];
  uint64_t v21 = MEMORY[0x270FA5388](v18, v20);
  uint64_t v76 = &v54[-v22];
  MEMORY[0x270FA5388](v21, v23);
  uint64_t v75 = &v54[-v24];
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  uint64_t v26 = *(void *)(a1 + *(int *)(result + 68));
  if (v26 < 0) {
    goto LABEL_28;
  }
  if (v26)
  {
    if ((unint64_t)(v26 - 1) >= a3[2]) {
      goto LABEL_29;
    }
    uint64_t v27 = v66;
    a1 = *v66;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v27 = a1;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_30;
    }
    while (1)
    {
      unint64_t v29 = 0;
      a3 += 4;
      *int v66 = a1;
      uint64_t v77 = (unsigned char *)(v65 + 16);
      uint64_t v61 = (void (**)(unsigned char *, uint64_t))(v65 + 8);
      uint64_t v74 = (char **)(v65 + 40);
      uint64_t v57 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v65 + 56);
      uint64_t v56 = (uint64_t (**)(unint64_t *, uint64_t, uint64_t))(v65 + 48);
      uint64_t v55 = (void (**)(unsigned char *, unint64_t *, uint64_t))(v65 + 32);
      uint64_t v59 = v16;
      uint64_t v60 = v11;
      uint64_t v58 = v26;
      while (1)
      {
        uint64_t v26 = v12;
        uint64_t v30 = a3[3];
        uint64_t v12 = a3[4];
        uint64_t v31 = __swift_project_boxed_opaque_existential_1(a3, v30);
        uint64_t v32 = *v64;
        if (v29 >= *(void *)(*v64 + 16)) {
          break;
        }
        uint64_t v71 = v31;
        uint64_t v72 = a3;
        unint64_t v33 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
        a3 = (void *)v29;
        uint64_t v68 = *(void *)(v65 + 72);
        unint64_t v34 = v68 * v29;
        a1 = *(void *)(v65 + 16);
        uint64_t v16 = v77;
        ((void (*)(unsigned char *, unint64_t, uint64_t))a1)(v76, v32 + v33 + v34, v26);
        uint64_t v11 = v67;
        unint64_t v35 = *v67;
        unint64_t v36 = *(void *)(*v67 + 16);
        uint64_t v73 = (char *)a3;
        if ((unint64_t)a3 >= v36) {
          goto LABEL_24;
        }
        uint64_t v78 = (unint64_t *)v33;
        uint64_t v69 = (void (*)(unsigned char *, char *, uint64_t))a1;
        unint64_t v70 = v34;
        unint64_t v37 = v35 + v33 + v34;
        uint64_t v38 = v76;
        float v39 = v62;
        ((void (*)(unsigned char *, unint64_t, uint64_t))a1)(v62, v37, v26);
        (*(void (**)(unsigned char *, uint64_t, unsigned char *, uint64_t, uint64_t))(v12 + 80))(v38, v63, v39, v30, v12);
        double v40 = *v61;
        (*v61)(v39, v26);
        v40(v38, v26);
        a1 = *v11;
        char v41 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v11 = a1;
        if ((v41 & 1) == 0)
        {
          a1 = sub_260F7B490(a1);
          unint64_t *v67 = a1;
        }
        a3 = v72;
        uint64_t v42 = v73;
        uint64_t v16 = v77;
        uint64_t v11 = v78;
        unint64_t v43 = v70;
        if ((unint64_t)v73 >= *(void *)(a1 + 16)) {
          goto LABEL_25;
        }
        uint64_t v73 = *v74;
        ((void (*)(char *, unsigned char *, uint64_t))v73)((char *)v78 + a1 + v70, v75, v26);
        uint64_t v44 = a3[3];
        uint64_t v45 = a3[4];
        __swift_project_boxed_opaque_existential_1(a3, v44);
        uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 72))(v44, v45);
        a1 = v46;
        uint64_t v47 = *(void *)(v46 + 16);
        if (v47)
        {
          unint64_t v48 = v69;
          uint64_t v49 = (uint64_t)v11 + v46 + (v47 - 1) * v68;
          uint64_t v11 = v60;
          v69(v60, (char *)v49, v26);
          uint64_t v50 = 0;
          uint64_t v12 = v26;
          uint64_t v16 = v59;
        }
        else
        {
          uint64_t v50 = 1;
          uint64_t v16 = v59;
          uint64_t v11 = v60;
          uint64_t v12 = v26;
          unint64_t v48 = v69;
        }
        (*v57)(v11, v50, 1, v12);
        swift_bridgeObjectRelease();
        int v51 = (*v56)(v11, 1, v12);
        uint64_t v26 = v58;
        if (v51 == 1)
        {
          if ((unint64_t)v42 >= *(void *)(*v67 + 16)) {
            goto LABEL_27;
          }
          v48(v16, (char *)v78 + *v67 + v43, v12);
          sub_260D90820((uint64_t)v11, &qword_26A8EAB90);
        }
        else
        {
          (*v55)(v16, v11, v12);
        }
        id v52 = v66;
        a1 = *v66;
        char v53 = swift_isUniquelyReferenced_nonNull_native();
        *id v52 = a1;
        if ((v53 & 1) == 0)
        {
          a1 = sub_260F7B490(a1);
          *int v66 = a1;
        }
        if ((unint64_t)v42 >= *(void *)(a1 + 16)) {
          goto LABEL_26;
        }
        unint64_t v29 = (unint64_t)(v42 + 1);
        uint64_t result = ((uint64_t (*)(char *, unsigned char *, uint64_t))v73)((char *)v78 + a1 + v43, v16, v12);
        a3 += 5;
        if (v26 == v29) {
          return result;
        }
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      a1 = sub_260F7B490(a1);
    }
  }
  return result;
}

uint64_t AppleDiffusionPipeline.decodeToImages(_:configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for AppleDiffusionPipeline(0);
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v6 + 28));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t v10 = type metadata accessor for PipelineConfiguration(0);
  int64_t v11 = Decoder.decode(_:scaleFactor:outputRange:inferAlpha:)(a1, *(unsigned __int8 *)(a2 + 80), v9, v8, *(float *)(a2 + *(int *)(v10 + 108)));
  if (v3)
  {
    if (*(unsigned char *)(v2 + *(int *)(v6 + 40)) == 2)
    {
      ManagedMLModel.unloadResources()();
      if (v8) {
        ManagedMLModel.unloadResources()();
      }
    }
  }
  else
  {
    a2 = sub_260F6275C(v11);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v2 + *(int *)(v6 + 40)) == 2)
    {
      ManagedMLModel.unloadResources()();
      if (v8) {
        ManagedMLModel.unloadResources()();
      }
    }
  }
  return a2;
}

uint64_t sub_260F624C8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for PipelineConfiguration(0);
  uint64_t v5 = v4;
  unsigned int v6 = *(unsigned __int16 *)(a1 + v4[24]);
  if (!(v6 >> 14))
  {
    int64_t v16 = *(void *)(a1 + v4[18]);
    uint64_t v17 = type metadata accessor for DPMSolverMultistepScheduler();
    swift_allocObject();
    uint64_t result = DPMSolverMultistepScheduler.init(stepCount:trainStepCount:betaSchedule:betaStart:betaEnd:timeStepSpacing:predictionType:)(v16, 1000, 1, SBYTE1(v6), v6, 0.00085, 0.012);
    uint64_t v18 = &protocol witness table for DPMSolverMultistepScheduler;
    a2[3] = v17;
LABEL_9:
    a2[4] = (uint64_t)v18;
    *a2 = result;
    return result;
  }
  if (v6 >> 14 != 1)
  {
    int64_t v19 = *(void *)(a1 + v4[18]);
    uint64_t v20 = type metadata accessor for PNDMScheduler();
    swift_allocObject();
    uint64_t result = PNDMScheduler.init(stepCount:trainStepCount:betaSchedule:betaStart:betaEnd:)(v19, 1000, 1, 0.00085, 0.012);
    uint64_t v18 = &protocol witness table for PNDMScheduler;
    a2[3] = v20;
    goto LABEL_9;
  }
  int v7 = *(_DWORD *)(a1 + v4[19]);
  uint64_t result = (v7 + 1);
  if (v7 == -1)
  {
    __break(1u);
    return result;
  }
  if (*(unsigned char *)(a1 + v5[25]))
  {
    if (*(unsigned char *)(a1 + v5[25]) != 1)
    {
      uint64_t v31 = &type metadata for NvRandomSource;
      uint64_t v32 = &off_270D24A10;
      uint64_t v29 = (v7 + 1);
      int v30 = 0;
      goto LABEL_13;
    }
    uint64_t v9 = sub_260F6E4E8(result);
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    char v15 = v14;
    uint64_t v31 = &type metadata for TorchRandomSource;
    uint64_t v32 = &off_270D24368;
  }
  else
  {
    uint64_t v9 = sub_260F6E4E8(result);
    uint64_t v11 = v21;
    uint64_t v13 = v22;
    char v15 = v23;
    uint64_t v31 = &type metadata for NumPyRandomSource;
    uint64_t v32 = &off_270D24488;
  }
  uint64_t v24 = swift_allocObject();
  uint64_t v29 = v24;
  *(void *)(v24 + 16) = v9;
  *(void *)(v24 + 24) = v11;
  *(void *)(v24 + 32) = v13;
  *(unsigned char *)(v24 + 40) = v15 & 1;
LABEL_13:
  uint64_t v25 = *(void *)(a1 + v5[18]);
  sub_260D90158((uint64_t)&v29, (uint64_t)v28);
  uint64_t v26 = type metadata accessor for LCMScheduler();
  swift_allocObject();
  uint64_t v27 = LCMScheduler.init(stepCount:trainStepCount:betaSchedule:betaStart:betaEnd:predictionType:generator:)(v25, 1000, 1, v6, (uint64_t)v28, 0.00085, 0.012);
  a2[3] = v26;
  a2[4] = (uint64_t)&protocol witness table for LCMScheduler;
  *a2 = v27;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
}

uint64_t sub_260F6275C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_260F63768(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = a1 + 40;
    do
    {
      id v5 = *(id *)(v4 - 8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB48);
      swift_dynamicCast();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_260F63768(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v12;
      }
      unint64_t v7 = *(void *)(v2 + 16);
      unint64_t v6 = *(void *)(v2 + 24);
      if (v7 >= v6 >> 1)
      {
        sub_260F63768(v6 > 1, v7 + 1, 1);
        uint64_t v2 = v12;
      }
      *(void *)(v2 + 16) = v7 + 1;
      uint64_t v8 = v2 + 16 * v7;
      *(void *)(v8 + 32) = v10;
      *(unsigned char *)(v8 + 40) = v11;
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_260F628A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *), uint64_t a5)
{
  return AppleDiffusionPipeline.generateImages(configuration:requestIdentifier:generationID:progressHandler:)(a1, a2, a3, a4, a5);
}

uint64_t sub_260F628C0(uint64_t a1, uint64_t a2)
{
  return AppleDiffusionPipeline.decodeToImages(_:configuration:)(a1, a2);
}

void sub_260F628D8()
{
}

uint64_t variable initialization expression of TextEncoder.queue()
{
  return sub_260F62998();
}

uint64_t variable initialization expression of DiffusionBasePipeline.encoder()
{
  return 0;
}

uint64_t variable initialization expression of DiffusionBasePipeline.safetyChecker()
{
  return 0;
}

uint64_t variable initialization expression of DiffusionBasePipeline.controlNet()
{
  return 0;
}

uint64_t variable initialization expression of DiffusionBasePipeline.reduceMemory()
{
  return 0;
}

uint64_t variable initialization expression of DiffusionBasePipeline.useMultilingualTextEncoder()
{
  return 0;
}

uint64_t variable initialization expression of DiffusionBasePipeline.script()
{
  return 3;
}

uint64_t variable initialization expression of SampleTimer.startTime()
{
  return 0;
}

double variable initialization expression of SampleTimer.sum()
{
  return 0.0;
}

double variable initialization expression of SampleTimer.sumOfSquares()
{
  return 0.0;
}

uint64_t variable initialization expression of SampleTimer.count()
{
  return 0;
}

uint64_t variable initialization expression of SampleTimer.samples()
{
  return MEMORY[0x263F8EE78];
}

uint64_t variable initialization expression of Encoder.queue()
{
  return sub_260F62998();
}

uint64_t sub_260F62998()
{
  sub_260D905B0(0, &qword_26A8EAA30);
  uint64_t v0 = sub_260FE3E70();
  MEMORY[0x270FA5388](v0 - 8, v1);
  sub_260FE3E60();
  uint64_t v2 = sub_260FE48E0();
  MEMORY[0x270FA5388](v2, v3);
  v9[1] = MEMORY[0x263F8EE78];
  sub_260F64EE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAA40);
  sub_260D90340(&qword_26A8EAA48, &qword_26A8EAA40);
  sub_260FE4B70();
  uint64_t v4 = sub_260FE48F0();
  MEMORY[0x270FA5388](v4, v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F8F128]);
  return sub_260FE4920();
}

uint64_t variable initialization expression of AppleDiffusionSketchConditioner.width()
{
  return 512;
}

uint64_t variable initialization expression of AppleDiffusionSketchConditioner.height()
{
  return 512;
}

uint64_t variable initialization expression of AppleDiffusionSketchConditioner.scribbleEdgesName()
{
  return 0x656C626269726373;
}

unint64_t variable initialization expression of AppleDiffusionSketchConditioner.scribbleStrengthName()
{
  return 0xD000000000000011;
}

uint64_t variable initialization expression of AppleDiffusionSketchConditioner.styleVectorName()
{
  return 0x65765F656C797473;
}

uint64_t variable initialization expression of Decoder.alphaModel()
{
  return 0;
}

uint64_t variable initialization expression of PNDMScheduler.modelOutputs()
{
  return MEMORY[0x263F8EE78];
}

uint64_t variable initialization expression of PNDMScheduler.currentSample@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

double variable initialization expression of DiffusionBaseXLPipeline.textEncoder@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double variable initialization expression of DiffusionBaseXLPipeline.textEncoder2@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of DiffusionBaseXLPipeline.unetRefiner()
{
  return 0;
}

uint64_t variable initialization expression of DiffusionBaseXLPipeline.encoder()
{
  return 0;
}

uint64_t variable initialization expression of DiffusionBaseXLPipeline.reduceMemory()
{
  return 0;
}

void variable initialization expression of PipelineConfiguration.negativePrompt(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x263F8D378];
  a1[3] = MEMORY[0x263F8D310];
  a1[4] = v1;
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t variable initialization expression of PipelineConfiguration.inferAlpha()
{
  return 0;
}

uint64_t variable initialization expression of PipelineConfiguration.inputConditioning@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

float variable initialization expression of PipelineConfiguration.imageConditioningScale()
{
  return 0.7;
}

uint64_t variable initialization expression of PipelineConfiguration.ipaScaleRange()
{
  return 0;
}

uint64_t variable initialization expression of PipelineConfiguration.lastUnmergedPersonalizationStep()
{
  return 0;
}

uint64_t variable initialization expression of PipelineConfiguration.lcmScale()
{
  return 0x100000000;
}

uint64_t variable initialization expression of PipelineConfiguration.lcmLora()
{
  return 0;
}

uint64_t variable initialization expression of PipelineConfiguration.startingImage()
{
  return 0;
}

uint64_t variable initialization expression of PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration.scribbleEdgesBuffer()
{
  return 0;
}

float variable initialization expression of PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration.scribbleStrength()
{
  return 1.0;
}

uint64_t variable initialization expression of PipelineConfiguration.localConditioningInput()
{
  return 0;
}

float variable initialization expression of PipelineConfiguration.strength()
{
  return 1.0;
}

float variable initialization expression of PipelineConfiguration.refinerStart()
{
  return 0.8;
}

uint64_t variable initialization expression of PipelineConfiguration.imageCount()
{
  return 1;
}

uint64_t variable initialization expression of PipelineConfiguration.stepCount()
{
  return 50;
}

uint64_t variable initialization expression of PipelineConfiguration.seed()
{
  return 0;
}

float variable initialization expression of PipelineConfiguration.guidanceScale()
{
  return 7.5;
}

uint64_t variable initialization expression of PipelineConfiguration.controlNetInputs()
{
  return MEMORY[0x263F8EE78];
}

uint64_t variable initialization expression of PipelineConfiguration.disableSafety()
{
  return 0;
}

uint64_t variable initialization expression of PipelineConfiguration.useDenoisedIntermediates()
{
  return 0;
}

uint64_t variable initialization expression of PipelineConfiguration.schedulerType()
{
  return 0x8000;
}

uint64_t variable initialization expression of PipelineConfiguration.rngType()
{
  return 0;
}

float variable initialization expression of PipelineConfiguration.encoderScaleFactor()
{
  return 0.18215;
}

float variable initialization expression of PipelineConfiguration.decoderScaleFactor()
{
  return 0.18215;
}

float variable initialization expression of PipelineConfiguration.originalSize()
{
  return 1024.0;
}

double variable initialization expression of PipelineConfiguration.cropsCoordsTopLeft()
{
  return 0.0;
}

float variable initialization expression of PipelineConfiguration.targetSize()
{
  return 1024.0;
}

float variable initialization expression of PipelineConfiguration.aestheticScore()
{
  return 6.0;
}

float variable initialization expression of PipelineConfiguration.negativeAestheticScore()
{
  return 2.5;
}

unint64_t variable initialization expression of AppleDiffusionImageConditioner.conditioningOutputName()
{
  return 0xD000000000000013;
}

uint64_t variable initialization expression of MultilingualTextEncoder.maximumEmbeddingSequenceLength()
{
  return 256;
}

uint64_t variable initialization expression of AppleDiffusionPipeline.ResourceURLs.catalogVersion()
{
  return 0;
}

double variable initialization expression of AppleDiffusionPipeline.ResourceURLs.requiredComponentCombinations()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAA50);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v0 + 16) = xmmword_260FE7060;
  *(void *)(v0 + 32) = &unk_270D23B60;
  *(void *)(v0 + 40) = &unk_270D23B88;
  return result;
}

uint64_t variable initialization expression of DPMSolverMultistepScheduler.solverOrder()
{
  return 2;
}

uint64_t variable initialization expression of DPMSolverMultistepScheduler.lowerOrderStepped()
{
  return 0;
}

uint64_t variable initialization expression of DPMSolverMultistepScheduler.usingKarrasSigmas()
{
  return 0;
}

uint64_t variable initialization expression of DPMSolverMultistepScheduler.useLowerOrderFinal()
{
  return 1;
}

uint64_t variable initialization expression of DPMSolverMultistepScheduler.modelOutputs()
{
  return MEMORY[0x263F8EE78];
}

uint64_t variable initialization expression of BPETokenizer.startToken()
{
  return 0x6F74726174737C3CLL;
}

uint64_t variable initialization expression of BPETokenizer.endToken()
{
  return 0x74666F646E657C3CLL;
}

uint64_t variable initialization expression of BPETokenizer.unknownToken()
{
  return 0x74666F646E657C3CLL;
}

uint64_t variable initialization expression of MockedTokenizer.padId()
{
  return 0;
}

uint64_t variable initialization expression of MockedTokenizer.padToken()
{
  return 0;
}

uint64_t variable initialization expression of LCMScheduler.modelOutputs()
{
  return MEMORY[0x263F8EE78];
}

float variable initialization expression of LCMScheduler.timeStepScaling()
{
  return 10.0;
}

uint64_t variable initialization expression of ManagedMLModel.loadedModel()
{
  return 0;
}

const char *variable initialization expression of ManagedMLModel.modelName()
{
  return "ManagedMLModel";
}

uint64_t variable initialization expression of ManagedMLModel.signposter()
{
  return sub_260FE3980();
}

uint64_t sub_260F6305C(uint64_t a1, uint64_t a2)
{
  return sub_260F6308C(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_260F63074(uint64_t a1, uint64_t a2)
{
  return sub_260F6308C(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_260F6308C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_260FE40A0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_260F630D0(uint64_t a1)
{
  uint64_t v2 = sub_260F6890C((unint64_t *)&qword_26A8EAC50, type metadata accessor for MLModelMetadataKey);
  uint64_t v3 = sub_260F6890C(&qword_26A8EAC58, type metadata accessor for MLModelMetadataKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_260F6318C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v8 = sub_260FAB308();
  if (v8 != 8)
  {
    unint64_t v10 = v8;
    int v11 = v9;
    uint64_t v12 = (void *)*a5;
    unint64_t v13 = sub_260DBB574(v8);
    uint64_t v15 = v12[2];
    BOOL v16 = (v14 & 1) == 0;
    BOOL v17 = __OFADD__(v15, v16);
    uint64_t v18 = v15 + v16;
    if (v17) {
      goto LABEL_22;
    }
    char v5 = v14;
    if (v12[3] < v18)
    {
      sub_260FC0954(v18, a4 & 1);
      unint64_t v13 = sub_260DBB574(v10);
      if ((v5 & 1) == (v19 & 1)) {
        goto LABEL_7;
      }
LABEL_5:
      unint64_t v13 = sub_260FE5280();
      __break(1u);
    }
    if ((a4 & 1) == 0) {
      goto LABEL_24;
    }
    while (1)
    {
LABEL_7:
      uint64_t v20 = (void *)*a5;
      if (v5)
      {
        uint64_t v21 = (_DWORD *)(v20[7] + 8 * v13);
        _DWORD *v21 = HIDWORD(v10);
        v21[1] = v11;
      }
      else
      {
        v20[(v13 >> 6) + 8] |= 1 << v13;
        *(unsigned char *)(v20[6] + v13) = v10;
        uint64_t v22 = (_DWORD *)(v20[7] + 8 * v13);
        *uint64_t v22 = HIDWORD(v10);
        v22[1] = v11;
        uint64_t v23 = v20[2];
        BOOL v17 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v17) {
          goto LABEL_23;
        }
        v20[2] = v24;
      }
      unint64_t v25 = sub_260FAB308();
      if (v25 == 8) {
        break;
      }
      unint64_t v10 = v25;
      int v11 = v26;
      char v5 = 1;
      while (1)
      {
        int v30 = (void *)*a5;
        unint64_t v13 = sub_260DBB574(v10);
        uint64_t v32 = v30[2];
        BOOL v33 = (v31 & 1) == 0;
        BOOL v17 = __OFADD__(v32, v33);
        uint64_t v34 = v32 + v33;
        if (v17) {
          break;
        }
        a4 = v31;
        if (v30[3] < v34)
        {
          sub_260FC0954(v34, 1);
          unint64_t v13 = sub_260DBB574(v10);
          if ((a4 & 1) != (v35 & 1)) {
            goto LABEL_5;
          }
        }
        unint64_t v36 = (void *)*a5;
        if (a4)
        {
          os_log_t v28 = (_DWORD *)(v36[7] + 8 * v13);
          *os_log_t v28 = HIDWORD(v10);
          v28[1] = v11;
        }
        else
        {
          v36[(v13 >> 6) + 8] |= 1 << v13;
          *(unsigned char *)(v36[6] + v13) = v10;
          unint64_t v37 = (_DWORD *)(v36[7] + 8 * v13);
          *unint64_t v37 = HIDWORD(v10);
          v37[1] = v11;
          uint64_t v38 = v36[2];
          BOOL v17 = __OFADD__(v38, 1);
          uint64_t v39 = v38 + 1;
          if (v17) {
            goto LABEL_23;
          }
          v36[2] = v39;
        }
        unint64_t v10 = sub_260FAB308();
        int v11 = v29;
        if (v10 == 8) {
          goto LABEL_12;
        }
      }
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      unint64_t v40 = v13;
      sub_260FC457C();
      unint64_t v13 = v40;
    }
  }
LABEL_12:
  swift_release();
  swift_bridgeObjectRelease();
  sub_260DD782C();
  return swift_release();
}

uint64_t sub_260F6344C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v8 = sub_260FAB478();
  if (v8 != 8)
  {
    unint64_t v9 = v8;
    unint64_t v10 = (void *)*a5;
    unint64_t v11 = sub_260DBB574(v8);
    uint64_t v13 = v10[2];
    BOOL v14 = (v12 & 1) == 0;
    BOOL v15 = __OFADD__(v13, v14);
    uint64_t v16 = v13 + v14;
    if (v15) {
      goto LABEL_22;
    }
    char v5 = v12;
    if (v10[3] < v16)
    {
      sub_260FC0544(v16, a4 & 1);
      unint64_t v11 = sub_260DBB574(v9);
      if ((v5 & 1) == (v17 & 1)) {
        goto LABEL_7;
      }
LABEL_5:
      unint64_t v11 = sub_260FE5280();
      __break(1u);
    }
    if ((a4 & 1) == 0) {
      goto LABEL_24;
    }
    while (1)
    {
LABEL_7:
      uint64_t v18 = (void *)*a5;
      if (v5)
      {
        *(_DWORD *)(v18[7] + 4 * v11) = HIDWORD(v9);
      }
      else
      {
        v18[(v11 >> 6) + 8] |= 1 << v11;
        *(unsigned char *)(v18[6] + v11) = v9;
        *(_DWORD *)(v18[7] + 4 * v11) = HIDWORD(v9);
        uint64_t v19 = v18[2];
        BOOL v15 = __OFADD__(v19, 1);
        uint64_t v20 = v19 + 1;
        if (v15) {
          goto LABEL_23;
        }
        v18[2] = v20;
      }
      unint64_t v21 = sub_260FAB478();
      if (v21 == 8) {
        break;
      }
      unint64_t v9 = v21;
      char v5 = 1;
      while (1)
      {
        uint64_t v23 = (void *)*a5;
        unint64_t v11 = sub_260DBB574(v9);
        uint64_t v25 = v23[2];
        BOOL v26 = (v24 & 1) == 0;
        BOOL v15 = __OFADD__(v25, v26);
        uint64_t v27 = v25 + v26;
        if (v15) {
          break;
        }
        a4 = v24;
        if (v23[3] < v27)
        {
          sub_260FC0544(v27, 1);
          unint64_t v11 = sub_260DBB574(v9);
          if ((a4 & 1) != (v28 & 1)) {
            goto LABEL_5;
          }
        }
        int v29 = (void *)*a5;
        if (a4)
        {
          *(_DWORD *)(v29[7] + 4 * v11) = HIDWORD(v9);
        }
        else
        {
          v29[(v11 >> 6) + 8] |= 1 << v11;
          *(unsigned char *)(v29[6] + v11) = v9;
          *(_DWORD *)(v29[7] + 4 * v11) = HIDWORD(v9);
          uint64_t v30 = v29[2];
          BOOL v15 = __OFADD__(v30, 1);
          uint64_t v31 = v30 + 1;
          if (v15) {
            goto LABEL_23;
          }
          v29[2] = v31;
        }
        unint64_t v9 = sub_260FAB478();
        if (v9 == 8) {
          goto LABEL_12;
        }
      }
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      unint64_t v32 = v11;
      sub_260FC43EC();
      unint64_t v11 = v32;
    }
  }
LABEL_12:
  swift_release();
  swift_bridgeObjectRelease();
  sub_260DD782C();
  return swift_release();
}

uint64_t sub_260F636E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260F63928(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_260F63708(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB62F8(a1, a2, a3, (void *)*v3, &qword_26A8EABB8, &qword_26A8EABC0);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_260F63738(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5DE8(a1, a2, a3, (void *)*v3, &qword_26A8E84C0, &qword_26A8E6BF0);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_260F63768(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260F63B68(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_260F63788(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260F64278(a1, a2, a3, (void *)*v3, &qword_26A8EAAC8, &qword_26A8EAAD0);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_260F637B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260F64278(a1, a2, a3, (void *)*v3, &qword_26A8EAB98, &qword_26A8EABA0);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_260F637E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260F63CF0(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_260F63808(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260F63E50(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_260F63828(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260F63FB8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_260F63848(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260F64118(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_260F63868(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260F64278(a1, a2, a3, (void *)*v3, &qword_26A8EAAD8, &qword_26A8EAAE0);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_260F63898(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5DE8(a1, a2, a3, (void *)*v3, &qword_26A8EAAC0, &qword_26A8EAAB8);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_260F638C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB5DE8(a1, a2, a3, (void *)*v3, &qword_26A8EAAA8, &qword_26A8EAAB0);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_260F638F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_260DB62F8(a1, a2, a3, (void *)*v3, &qword_26A8EAB18, &qword_26A8EAB20);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_260F63928(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABF0);
  uint64_t v10 = *(void *)(sub_260FE2F90() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  id v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_260FE2F90() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  unint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260F63B68(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA968);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    void v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  size_t v15 = 2 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v10 + 4, a4 + 4, v15 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB48);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260F63CF0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB38);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260F63E50(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB70);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260F63FB8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB40);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260F64118(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB78);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260F64278(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    id v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

double sub_260F64408@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = *(unsigned char *)a1;
  double result = *(double *)(a1 + 4);
  *(double *)(a2 + 4) = result;
  return result;
}

float sub_260F6441C@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  float result = *(float *)(a1 + 4);
  *(unsigned char *)a2 = *(unsigned char *)a1;
  *(float *)(a2 + 4) = result;
  return result;
}

uint64_t _s13DiffusionBase05AppleA8PipelineV10IPASettingO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t type metadata accessor for AppleDiffusionPipeline(uint64_t a1)
{
  return sub_260DD5A3C(a1, (uint64_t *)&unk_26A8EAA68);
}

id sub_260F6449C(id result, void *a2)
{
  if (result)
  {
    swift_retain();
    return a2;
  }
  return result;
}

uint64_t sub_260F644DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_260F64534(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 200);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

unint64_t sub_260F64558()
{
  unint64_t result = qword_26A8EA948;
  if (!qword_26A8EA948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EA948);
  }
  return result;
}

uint64_t sub_260F645AC(uint64_t a1)
{
  return a1;
}

void sub_260F64604(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_release();
  }
}

uint64_t *sub_260F64644(uint64_t *a1)
{
  sub_260F646B0(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25]);
  return a1;
}

uint64_t sub_260F646B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  if (a26 != 1)
  {
    sub_260F6476C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_260F6476C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if (a6 != 1)
  {
    sub_260F32D98(result, a2);
    sub_260F32DE0(a5, a6);
    swift_bridgeObjectRelease();
    sub_260E311B4(a14, a15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_260F64860(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_260F648C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if (a6 != 1)
  {
    sub_260F32C08(result, a2);
    sub_260F32C50(a5, a6);
    swift_bridgeObjectRetain();
    sub_260ED7980(a14, a15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_260F649B4(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

uint64_t sub_260F64A28(uint64_t result)
{
  if (*(void *)(result + 16) != 2)
  {
    if (qword_26A8EA918 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_260FE3A10();
    __swift_project_value_buffer(v1, (uint64_t)qword_26A90FC00);
    int v2 = sub_260FE39F0();
    os_log_type_t v3 = sub_260FE4890();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_260D82000, v2, v3, "Error in IPA conditioning scale array: unexpected format", v4, 2u);
      MEMORY[0x26122CA00](v4, -1, -1);
    }

    sub_260F64558();
    swift_allocError();
    *(_OWORD *)uint64_t v5 = xmmword_260FF78F0;
    *(unsigned char *)(v5 + 16) = 3;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_260F64B58(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA950);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7060;
  *(unsigned char *)(inited + 32) = 4;
  sub_260F64A28(*(void *)(a1 + 8));
  if (v1)
  {
    swift_setDeallocating();
  }
  else
  {
    *(_DWORD *)(inited + 36) = v4;
    *(_DWORD *)(inited + 40) = v5;
    *(unsigned char *)(inited + 44) = 5;
    sub_260F64A28(*(void *)(a1 + 24));
    *(_DWORD *)(inited + 48) = v7;
    *(_DWORD *)(inited + 52) = v8;
    sub_260F5B578(inited);
    sub_260DD7C14(a1 + 40, (uint64_t)v25, &qword_26A8EABE0);
    sub_260DD7C14((uint64_t)v25, (uint64_t)&v26, &qword_26A8EABE0);
    if (v26)
    {
      sub_260F64A28(v26);
      float v10 = v9;
      float v12 = v11;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_260FC64C8(6u, isUniquelyReferenced_nonNull_native, v10, v12);
      swift_bridgeObjectRelease();
    }
    sub_260DD7C14(a1 + 56, (uint64_t)v24, &qword_26A8EABE0);
    sub_260DD7C14((uint64_t)v24, (uint64_t)&v27, &qword_26A8EABE0);
    if (v27)
    {
      sub_260F64A28(v27);
      float v15 = v14;
      float v17 = v16;
      char v18 = swift_isUniquelyReferenced_nonNull_native();
      sub_260FC64C8(7u, v18, v15, v17);
      swift_bridgeObjectRelease();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABE8);
    uint64_t v19 = swift_initStackObject();
    *(_OWORD *)(v19 + 16) = xmmword_260FE7060;
    *(unsigned char *)(v19 + 32) = 0;
    *(_DWORD *)(v19 + 36) = *(_DWORD *)(a1 + 4);
    *(unsigned char *)(v19 + 40) = 1;
    *(_DWORD *)(v19 + 44) = *(_DWORD *)(a1 + 16);
    uint64_t inited = sub_260F5B67C(v19);
    if ((*(unsigned char *)(a1 + 36) & 1) == 0)
    {
      float v20 = *(float *)(a1 + 32);
      char v21 = swift_isUniquelyReferenced_nonNull_native();
      sub_260FC63A0(2u, v21, v20);
      swift_bridgeObjectRelease();
    }
    if ((*(unsigned char *)(a1 + 52) & 1) == 0)
    {
      float v22 = *(float *)(a1 + 48);
      char v23 = swift_isUniquelyReferenced_nonNull_native();
      sub_260FC63A0(3u, v23, v22);
      swift_bridgeObjectRelease();
    }
  }
  return inited;
}

void sub_260F64DCC()
{
}

uint64_t type metadata accessor for AppleDiffusionPipeline.ConditioningInputs(uint64_t a1)
{
  return sub_260DD5A3C(a1, (uint64_t *)&unk_26A8EAA88);
}

uint64_t sub_260F64E08@<X0>(uint64_t *a1@<X8>)
{
  return sub_260F624C8(*(void *)(v1 + 16), a1);
}

uint64_t sub_260F64E28(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_260F64E4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_260F64EB4(uint64_t a1)
{
  return sub_260F96A14(a1, *(float *)(v1 + 24));
}

unint64_t sub_260F64EE8()
{
  unint64_t result = qword_26A8EAA38;
  if (!qword_26A8EAA38)
  {
    sub_260FE48E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAA38);
  }
  return result;
}

unint64_t sub_260F64F38()
{
  unint64_t result = qword_26A8EAA58;
  if (!qword_26A8EAA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAA58);
  }
  return result;
}

unint64_t sub_260F64F90()
{
  unint64_t result = qword_26A8EAA60;
  if (!qword_26A8EAA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAA60);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AppleDiffusionPipeline(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *int v4 = *a2;
    int v4 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = a2[3];
    uint64_t v7 = a3[5];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *(void *)uint64_t v8 = *(uint64_t *)((char *)a2 + v7);
    *(void *)(v8 + 8) = v10;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v7 + 24);
    *(void *)(v8 + 16) = *(uint64_t *)((char *)a2 + v7 + 16);
    *(void *)(v8 + 24) = v11;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v7 + 40);
    *(void *)(v8 + 32) = *(uint64_t *)((char *)a2 + v7 + 32);
    *(void *)(v8 + 40) = v12;
    uint64_t v13 = *(uint64_t *)((char *)a2 + v7 + 56);
    *(void *)(v8 + 48) = *(uint64_t *)((char *)a2 + v7 + 48);
    *(void *)(v8 + 56) = v13;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v7 + 72);
    *(void *)(v8 + 64) = *(uint64_t *)((char *)a2 + v7 + 64);
    *(void *)(v8 + 72) = v14;
    uint64_t v15 = *(uint64_t *)((char *)a2 + v7 + 88);
    *(void *)(v8 + 80) = *(void *)(v9 + 80);
    *(void *)(v8 + 88) = v15;
    uint64_t v16 = *(void *)(v9 + 104);
    *(void *)(v8 + 96) = *(void *)(v9 + 96);
    *(void *)(v8 + 104) = v16;
    uint64_t v69 = *(void *)(v9 + 120);
    *(void *)(v8 + 112) = *(void *)(v9 + 112);
    *(void *)(v8 + 120) = v69;
    uint64_t v17 = *(void *)(v9 + 136);
    *(void *)(v8 + 128) = *(void *)(v9 + 128);
    *(void *)(v8 + 136) = v17;
    uint64_t v18 = *(void *)(v9 + 152);
    *(void *)(v8 + 144) = *(void *)(v9 + 144);
    *(void *)(v8 + 152) = v18;
    uint64_t v70 = *(void *)(v9 + 168);
    *(void *)(v8 + 160) = *(void *)(v9 + 160);
    *(void *)(v8 + 168) = v70;
    uint64_t v72 = *(void *)(v9 + 184);
    *(void *)(v8 + 176) = *(void *)(v9 + 176);
    *(void *)(v8 + 184) = v72;
    *(unsigned char *)(v8 + 192) = *(unsigned char *)(v9 + 192);
    *(unsigned char *)(v8 + 193) = *(unsigned char *)(v9 + 193);
    *(void *)(v8 + 200) = *(void *)(v9 + 200);
    uint64_t v19 = *(int *)(type metadata accessor for AppleDiffusionUnet() + 24);
    uint64_t v74 = (unsigned char *)(v8 + v19);
    float v20 = (unsigned char *)(v9 + v19);
    uint64_t v21 = type metadata accessor for ConcreteAdapter();
    uint64_t v66 = *(void *)(v21 - 8);
    uint64_t v68 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v66 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v68(v20, 1, v21))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
      memcpy(v74, v20, *(void *)(*(void *)(v22 - 8) + 64));
      char v23 = a3;
    }
    else
    {
      *uint64_t v74 = *v20;
      uint64_t v25 = *(int *)(v21 + 20);
      uint64_t v26 = &v74[v25];
      uint64_t v27 = &v20[v25];
      uint64_t v28 = sub_260FE2F90();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      uint64_t v29 = *(int *)(v21 + 24);
      uint64_t v30 = &v74[v29];
      uint64_t v31 = &v20[v29];
      uint64_t v32 = *((void *)v31 + 1);
      uint64_t v65 = v21;
      if (v32 == 1)
      {
        long long v33 = *((_OWORD *)v31 + 1);
        *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
        *((_OWORD *)v30 + 1) = v33;
      }
      else
      {
        *(void *)uint64_t v30 = *(void *)v31;
        *((void *)v30 + 1) = v32;
        uint64_t v34 = *((void *)v31 + 3);
        *((void *)v30 + 2) = *((void *)v31 + 2);
        *((void *)v30 + 3) = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      char v23 = a3;
      uint64_t v35 = *((void *)v31 + 5);
      if (v35)
      {
        v30[32] = v31[32];
        *((_DWORD *)v30 + 9) = *((_DWORD *)v31 + 9);
        *((void *)v30 + 5) = v35;
        *((_DWORD *)v30 + 12) = *((_DWORD *)v31 + 12);
        *((void *)v30 + 7) = *((void *)v31 + 7);
        *((_DWORD *)v30 + 16) = *((_DWORD *)v31 + 16);
        v30[68] = v31[68];
        *((void *)v30 + 9) = *((void *)v31 + 9);
        v30[84] = v31[84];
        *((_DWORD *)v30 + 20) = *((_DWORD *)v31 + 20);
        *((void *)v30 + 11) = *((void *)v31 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v36 = *((_OWORD *)v31 + 3);
        *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
        *((_OWORD *)v30 + 3) = v36;
        long long v37 = *((_OWORD *)v31 + 5);
        *((_OWORD *)v30 + 4) = *((_OWORD *)v31 + 4);
        *((_OWORD *)v30 + 5) = v37;
      }
      *((void *)v30 + 12) = *((void *)v31 + 12);
      uint64_t v38 = *((void *)v31 + 14);
      swift_bridgeObjectRetain();
      if (v38 == 1)
      {
        *(_OWORD *)(v30 + 104) = *(_OWORD *)(v31 + 104);
        v30[120] = v31[120];
      }
      else
      {
        *((void *)v30 + 13) = *((void *)v31 + 13);
        *((void *)v30 + 14) = v38;
        v30[120] = v31[120];
        swift_bridgeObjectRetain();
      }
      *((void *)v30 + 16) = *((void *)v31 + 16);
      *(_OWORD *)(v30 + 136) = *(_OWORD *)(v31 + 136);
      *(_OWORD *)(v30 + 152) = *(_OWORD *)(v31 + 152);
      *(_DWORD *)(v30 + 167) = *(_DWORD *)(v31 + 167);
      uint64_t v39 = *((void *)v31 + 23);
      *((void *)v30 + 22) = *((void *)v31 + 22);
      *((void *)v30 + 23) = v39;
      unint64_t v40 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v66 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40(v74, 0, 1, v65);
    }
    uint64_t v41 = v23[6];
    uint64_t v42 = (void *)((char *)v4 + v41);
    unint64_t v43 = (uint64_t *)((char *)a2 + v41);
    if (*v43)
    {
      uint64_t v44 = (void *)v43[1];
      void *v42 = *v43;
      v42[1] = v44;
      swift_retain();
      id v45 = v44;
    }
    else
    {
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    }
    uint64_t v46 = v23[7];
    uint64_t v47 = v23[8];
    unint64_t v48 = (void *)((char *)v4 + v46);
    uint64_t v49 = (uint64_t *)((char *)a2 + v46);
    uint64_t v50 = v49[1];
    *unint64_t v48 = *v49;
    v48[1] = v50;
    int v51 = (char *)v4 + v47;
    uint64_t v52 = (uint64_t)a2 + v47;
    *(void *)int v51 = *(void *)v52;
    *(_OWORD *)(v51 + 8) = *(_OWORD *)(v52 + 8);
    uint64_t v53 = *(void *)(v52 + 32);
    *((void *)v51 + 3) = *(void *)(v52 + 24);
    *((void *)v51 + 4) = v53;
    uint64_t v54 = *(void *)(v52 + 48);
    *((void *)v51 + 5) = *(void *)(v52 + 40);
    *((void *)v51 + 6) = v54;
    uint64_t v55 = v23;
    uint64_t v56 = *(void *)(v52 + 64);
    *((void *)v51 + 7) = *(void *)(v52 + 56);
    *((void *)v51 + 8) = v56;
    uint64_t v57 = v55[9];
    uint64_t v58 = v55[10];
    uint64_t v59 = (void *)((char *)v4 + v57);
    uint64_t v60 = (uint64_t *)((char *)a2 + v57);
    uint64_t v61 = v60[1];
    *uint64_t v59 = *v60;
    v59[1] = v61;
    v59[2] = v60[2];
    uint64_t v62 = v55[11];
    uint64_t v73 = (char *)v4 + v62;
    uint64_t v75 = (uint64_t)a2 + v62;
    *((unsigned char *)v4 + v58) = *((unsigned char *)a2 + v58);
    uint64_t v63 = sub_260FE3990();
    uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v71(v73, v75, v63);
  }
  return v4;
}

uint64_t destroy for AppleDiffusionPipeline(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for AppleDiffusionUnet() + 24);
  uint64_t v6 = type metadata accessor for ConcreteAdapter();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = sub_260FE2F90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = (void *)(v5 + *(int *)(v6 + 24));
    if (v9[1] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v9[5])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (v9[14] != 1) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = a1 + a2[6];
  if (*(void *)v10)
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[11];
  uint64_t v12 = sub_260FE3990();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  return v13(v11, v12);
}

uint64_t initializeWithCopy for AppleDiffusionPipeline(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = a3[5];
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = *(void *)(a2 + v4 + 8);
  *(void *)uint64_t v5 = *(void *)(a2 + v4);
  *(void *)(v5 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + v4 + 24);
  *(void *)(v5 + 16) = *(void *)(a2 + v4 + 16);
  *(void *)(v5 + 24) = v8;
  uint64_t v9 = *(void *)(a2 + v4 + 40);
  *(void *)(v5 + 32) = *(void *)(a2 + v4 + 32);
  *(void *)(v5 + 40) = v9;
  uint64_t v10 = *(void *)(a2 + v4 + 56);
  *(void *)(v5 + 48) = *(void *)(a2 + v4 + 48);
  *(void *)(v5 + 56) = v10;
  uint64_t v11 = *(void *)(a2 + v4 + 72);
  *(void *)(v5 + 64) = *(void *)(a2 + v4 + 64);
  *(void *)(v5 + 72) = v11;
  uint64_t v13 = *(void *)(a2 + v4 + 80);
  uint64_t v12 = *(void *)(a2 + v4 + 88);
  *(void *)(v5 + 80) = v13;
  *(void *)(v5 + 88) = v12;
  uint64_t v14 = *(void *)(v6 + 104);
  *(void *)(v5 + 96) = *(void *)(v6 + 96);
  *(void *)(v5 + 104) = v14;
  uint64_t v68 = *(void *)(v6 + 120);
  *(void *)(v5 + 112) = *(void *)(v6 + 112);
  *(void *)(v5 + 120) = v68;
  uint64_t v15 = *(void *)(v6 + 136);
  *(void *)(v5 + 128) = *(void *)(v6 + 128);
  *(void *)(v5 + 136) = v15;
  uint64_t v16 = *(void *)(v6 + 152);
  *(void *)(v5 + 144) = *(void *)(v6 + 144);
  *(void *)(v5 + 152) = v16;
  uint64_t v69 = *(void *)(v6 + 168);
  *(void *)(v5 + 160) = *(void *)(v6 + 160);
  *(void *)(v5 + 168) = v69;
  uint64_t v70 = *(void *)(v6 + 184);
  *(void *)(v5 + 176) = *(void *)(v6 + 176);
  *(void *)(v5 + 184) = v70;
  *(unsigned char *)(v5 + 192) = *(unsigned char *)(v6 + 192);
  *(unsigned char *)(v5 + 193) = *(unsigned char *)(v6 + 193);
  *(void *)(v5 + 200) = *(void *)(v6 + 200);
  uint64_t v17 = *(int *)(type metadata accessor for AppleDiffusionUnet() + 24);
  uint64_t v72 = (unsigned char *)(v5 + v17);
  uint64_t v18 = (unsigned char *)(v6 + v17);
  uint64_t v19 = type metadata accessor for ConcreteAdapter();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v67 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v67(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
    memcpy(v72, v18, *(void *)(*(void *)(v21 - 8) + 64));
    char v23 = a3;
    uint64_t v22 = a1;
  }
  else
  {
    unsigned char *v72 = *v18;
    uint64_t v24 = *(int *)(v19 + 20);
    uint64_t v25 = &v72[v24];
    uint64_t v26 = &v18[v24];
    uint64_t v27 = sub_260FE2F90();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = *(int *)(v19 + 24);
    uint64_t v29 = &v72[v28];
    uint64_t v30 = &v18[v28];
    uint64_t v31 = *(void *)&v18[v28 + 8];
    if (v31 == 1)
    {
      long long v32 = *((_OWORD *)v30 + 1);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v32;
    }
    else
    {
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = v31;
      uint64_t v33 = *((void *)v30 + 3);
      *((void *)v29 + 2) = *((void *)v30 + 2);
      *((void *)v29 + 3) = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    char v23 = a3;
    uint64_t v22 = a1;
    uint64_t v34 = *((void *)v30 + 5);
    if (v34)
    {
      v29[32] = v30[32];
      *((_DWORD *)v29 + 9) = *((_DWORD *)v30 + 9);
      *((void *)v29 + 5) = v34;
      *((_DWORD *)v29 + 12) = *((_DWORD *)v30 + 12);
      *((void *)v29 + 7) = *((void *)v30 + 7);
      *((_DWORD *)v29 + 16) = *((_DWORD *)v30 + 16);
      v29[68] = v30[68];
      *((void *)v29 + 9) = *((void *)v30 + 9);
      v29[84] = v30[84];
      *((_DWORD *)v29 + 20) = *((_DWORD *)v30 + 20);
      *((void *)v29 + 11) = *((void *)v30 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v35 = *((_OWORD *)v30 + 3);
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
      *((_OWORD *)v29 + 3) = v35;
      long long v36 = *((_OWORD *)v30 + 5);
      *((_OWORD *)v29 + 4) = *((_OWORD *)v30 + 4);
      *((_OWORD *)v29 + 5) = v36;
    }
    *((void *)v29 + 12) = *((void *)v30 + 12);
    uint64_t v37 = *((void *)v30 + 14);
    swift_bridgeObjectRetain();
    if (v37 == 1)
    {
      *(_OWORD *)(v29 + 104) = *(_OWORD *)(v30 + 104);
      v29[120] = v30[120];
    }
    else
    {
      *((void *)v29 + 13) = *((void *)v30 + 13);
      *((void *)v29 + 14) = v37;
      v29[120] = v30[120];
      swift_bridgeObjectRetain();
    }
    *((void *)v29 + 16) = *((void *)v30 + 16);
    *(_OWORD *)(v29 + 136) = *(_OWORD *)(v30 + 136);
    *(_OWORD *)(v29 + 152) = *(_OWORD *)(v30 + 152);
    *(_DWORD *)(v29 + 167) = *(_DWORD *)(v30 + 167);
    uint64_t v38 = *((void *)v30 + 23);
    *((void *)v29 + 22) = *((void *)v30 + 22);
    *((void *)v29 + 23) = v38;
    uint64_t v39 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39(v72, 0, 1, v19);
  }
  uint64_t v40 = v23[6];
  uint64_t v41 = (void *)(v22 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  if (*v42)
  {
    unint64_t v43 = (void *)v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v43;
    swift_retain();
    id v44 = v43;
  }
  else
  {
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  }
  uint64_t v45 = v23[7];
  uint64_t v46 = v23[8];
  uint64_t v47 = (void *)(v22 + v45);
  unint64_t v48 = (void *)(a2 + v45);
  uint64_t v49 = v48[1];
  *uint64_t v47 = *v48;
  v47[1] = v49;
  uint64_t v50 = v22 + v46;
  uint64_t v51 = a2 + v46;
  *(void *)uint64_t v50 = *(void *)v51;
  *(_OWORD *)(v50 + 8) = *(_OWORD *)(v51 + 8);
  uint64_t v52 = *(void *)(v51 + 32);
  *(void *)(v50 + 24) = *(void *)(v51 + 24);
  *(void *)(v50 + 32) = v52;
  uint64_t v53 = v22;
  uint64_t v54 = *(void *)(v51 + 48);
  *(void *)(v50 + 40) = *(void *)(v51 + 40);
  *(void *)(v50 + 48) = v54;
  uint64_t v55 = v23;
  uint64_t v56 = *(void *)(v51 + 64);
  *(void *)(v50 + 56) = *(void *)(v51 + 56);
  *(void *)(v50 + 64) = v56;
  uint64_t v57 = v55[9];
  uint64_t v58 = v55[10];
  uint64_t v59 = (void *)(v53 + v57);
  uint64_t v60 = (void *)(a2 + v57);
  uint64_t v61 = v60[1];
  *uint64_t v59 = *v60;
  v59[1] = v61;
  v59[2] = v60[2];
  uint64_t v62 = v55[11];
  uint64_t v71 = v53 + v62;
  uint64_t v73 = a2 + v62;
  *(unsigned char *)(v53 + v58) = *(unsigned char *)(a2 + v58);
  uint64_t v63 = sub_260FE3990();
  uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v75(v71, v73, v63);
  return v53;
}

uint64_t assignWithCopy for AppleDiffusionPipeline(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)uint64_t v7 = *(void *)(a2 + v6);
  *(void *)(v7 + 8) = *(void *)(a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
  *(void *)(v7 + 56) = *(void *)(v8 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  *(void *)(v7 + 72) = *(void *)(v8 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 80) = *(void *)(v8 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 88) = *(void *)(v8 + 88);
  *(void *)(v7 + 96) = *(void *)(v8 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 104) = *(void *)(v8 + 104);
  *(void *)(v7 + 112) = *(void *)(v8 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 120) = *(void *)(v8 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 128) = *(void *)(v8 + 128);
  *(void *)(v7 + 136) = *(void *)(v8 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 144) = *(void *)(v8 + 144);
  *(void *)(v7 + 152) = *(void *)(v8 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 160) = *(void *)(v8 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 168) = *(void *)(v8 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 176) = *(void *)(v8 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 184) = *(void *)(v8 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + 192) = *(unsigned char *)(v8 + 192);
  *(unsigned char *)(v7 + 193) = *(unsigned char *)(v8 + 193);
  *(void *)(v7 + 200) = *(void *)(v8 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(type metadata accessor for AppleDiffusionUnet() + 24);
  uint64_t v10 = (unsigned char *)(v7 + v9);
  uint64_t v11 = (unsigned char *)(v8 + v9);
  uint64_t v12 = type metadata accessor for ConcreteAdapter();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v89 = a3;
      *uint64_t v10 = *v11;
      uint64_t v17 = *(int *)(v12 + 20);
      uint64_t v18 = &v10[v17];
      uint64_t v19 = &v11[v17];
      uint64_t v20 = sub_260FE2F90();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      uint64_t v21 = *(int *)(v12 + 24);
      uint64_t v22 = &v10[v21];
      char v23 = &v11[v21];
      if (*(void *)&v11[v21 + 8] == 1)
      {
        long long v24 = *((_OWORD *)v23 + 1);
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        *((_OWORD *)v22 + 1) = v24;
        if (*((void *)v23 + 5))
        {
LABEL_5:
          v22[32] = v23[32];
          *((_DWORD *)v22 + 9) = *((_DWORD *)v23 + 9);
          *((void *)v22 + 5) = *((void *)v23 + 5);
          *((_DWORD *)v22 + 12) = *((_DWORD *)v23 + 12);
          *((void *)v22 + 7) = *((void *)v23 + 7);
          int v25 = *((_DWORD *)v23 + 16);
          v22[68] = v23[68];
          *((_DWORD *)v22 + 16) = v25;
          *((void *)v22 + 9) = *((void *)v23 + 9);
          int v26 = *((_DWORD *)v23 + 20);
          v22[84] = v23[84];
          *((_DWORD *)v22 + 20) = v26;
          *((void *)v22 + 11) = *((void *)v23 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_14:
          *((void *)v22 + 12) = *((void *)v23 + 12);
          uint64_t v40 = *((void *)v23 + 14);
          swift_bridgeObjectRetain();
          if (v40 == 1)
          {
            long long v41 = *(_OWORD *)(v23 + 104);
            v22[120] = v23[120];
            *(_OWORD *)(v22 + 104) = v41;
          }
          else
          {
            *((void *)v22 + 13) = *((void *)v23 + 13);
            *((void *)v22 + 14) = *((void *)v23 + 14);
            v22[120] = v23[120];
            swift_bridgeObjectRetain();
          }
          *((void *)v22 + 16) = *((void *)v23 + 16);
          long long v42 = *(_OWORD *)(v23 + 136);
          long long v43 = *(_OWORD *)(v23 + 152);
          *(_DWORD *)(v22 + 167) = *(_DWORD *)(v23 + 167);
          *(_OWORD *)(v22 + 152) = v43;
          *(_OWORD *)(v22 + 136) = v42;
          *((void *)v22 + 22) = *((void *)v23 + 22);
          *((void *)v22 + 23) = *((void *)v23 + 23);
          id v44 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v44(v10, 0, 1, v12);
          a3 = v89;
          goto LABEL_37;
        }
      }
      else
      {
        *(void *)uint64_t v22 = *(void *)v23;
        *((void *)v22 + 1) = *((void *)v23 + 1);
        *((void *)v22 + 2) = *((void *)v23 + 2);
        *((void *)v22 + 3) = *((void *)v23 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (*((void *)v23 + 5)) {
          goto LABEL_5;
        }
      }
      long long v37 = *((_OWORD *)v23 + 2);
      long long v38 = *((_OWORD *)v23 + 3);
      long long v39 = *((_OWORD *)v23 + 5);
      *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
      *((_OWORD *)v22 + 5) = v39;
      *((_OWORD *)v22 + 2) = v37;
      *((_OWORD *)v22 + 3) = v38;
      goto LABEL_14;
    }
LABEL_8:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
    memcpy(v10, v11, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_37;
  }
  if (v16)
  {
    sub_260F64860((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConcreteAdapter);
    goto LABEL_8;
  }
  *uint64_t v10 = *v11;
  uint64_t v28 = *(int *)(v12 + 20);
  uint64_t v29 = &v10[v28];
  uint64_t v30 = &v11[v28];
  uint64_t v31 = sub_260FE2F90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  uint64_t v32 = *(int *)(v12 + 24);
  uint64_t v33 = (uint64_t)&v10[v32];
  uint64_t v34 = &v11[v32];
  uint64_t v35 = *(void *)&v11[v32 + 8];
  if (*(void *)(v33 + 8) == 1)
  {
    if (v35 == 1)
    {
      long long v36 = *((_OWORD *)v34 + 1);
      *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
      *(_OWORD *)(v33 + 16) = v36;
    }
    else
    {
      *(void *)uint64_t v33 = *(void *)v34;
      *(void *)(v33 + 8) = *((void *)v34 + 1);
      *(void *)(v33 + 16) = *((void *)v34 + 2);
      *(void *)(v33 + 24) = *((void *)v34 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v35 == 1)
  {
    sub_260F6689C(v33);
    long long v45 = *((_OWORD *)v34 + 1);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v45;
  }
  else
  {
    *(void *)uint64_t v33 = *(void *)v34;
    *(void *)(v33 + 8) = *((void *)v34 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v33 + 16) = *((void *)v34 + 2);
    *(void *)(v33 + 24) = *((void *)v34 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v46 = (_OWORD *)(v33 + 32);
  uint64_t v47 = (long long *)(v34 + 32);
  uint64_t v48 = *((void *)v34 + 5);
  if (*(void *)(v33 + 40))
  {
    if (v48)
    {
      *(unsigned char *)(v33 + 32) = v34[32];
      *(_DWORD *)(v33 + 36) = *((_DWORD *)v34 + 9);
      *(void *)(v33 + 40) = *((void *)v34 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v33 + 48) = *((_DWORD *)v34 + 12);
      *(void *)(v33 + 56) = *((void *)v34 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v49 = *((_DWORD *)v34 + 16);
      *(unsigned char *)(v33 + 68) = v34[68];
      *(_DWORD *)(v33 + 64) = v49;
      *(void *)(v33 + 72) = *((void *)v34 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v50 = *((_DWORD *)v34 + 20);
      *(unsigned char *)(v33 + 84) = v34[84];
      *(_DWORD *)(v33 + 80) = v50;
      *(void *)(v33 + 88) = *((void *)v34 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260F668F0(v33 + 32);
      long long v53 = *((_OWORD *)v34 + 5);
      long long v55 = *v47;
      long long v54 = *((_OWORD *)v34 + 3);
      *(_OWORD *)(v33 + 64) = *((_OWORD *)v34 + 4);
      *(_OWORD *)(v33 + 80) = v53;
      *uint64_t v46 = v55;
      *(_OWORD *)(v33 + 48) = v54;
    }
  }
  else if (v48)
  {
    *(unsigned char *)(v33 + 32) = v34[32];
    *(_DWORD *)(v33 + 36) = *((_DWORD *)v34 + 9);
    *(void *)(v33 + 40) = *((void *)v34 + 5);
    *(_DWORD *)(v33 + 48) = *((_DWORD *)v34 + 12);
    *(void *)(v33 + 56) = *((void *)v34 + 7);
    int v51 = *((_DWORD *)v34 + 16);
    *(unsigned char *)(v33 + 68) = v34[68];
    *(_DWORD *)(v33 + 64) = v51;
    *(void *)(v33 + 72) = *((void *)v34 + 9);
    int v52 = *((_DWORD *)v34 + 20);
    *(unsigned char *)(v33 + 84) = v34[84];
    *(_DWORD *)(v33 + 80) = v52;
    *(void *)(v33 + 88) = *((void *)v34 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v56 = *v47;
    long long v57 = *((_OWORD *)v34 + 3);
    long long v58 = *((_OWORD *)v34 + 5);
    *(_OWORD *)(v33 + 64) = *((_OWORD *)v34 + 4);
    *(_OWORD *)(v33 + 80) = v58;
    *uint64_t v46 = v56;
    *(_OWORD *)(v33 + 48) = v57;
  }
  *(void *)(v33 + 96) = *((void *)v34 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v59 = (long long *)(v33 + 104);
  uint64_t v60 = (long long *)(v34 + 104);
  uint64_t v61 = *((void *)v34 + 14);
  if (*(void *)(v33 + 112) == 1)
  {
    if (v61 == 1)
    {
      long long v62 = *v60;
      *(unsigned char *)(v33 + 120) = v34[120];
      *uint64_t v59 = v62;
    }
    else
    {
      *(void *)(v33 + 104) = *((void *)v34 + 13);
      *(void *)(v33 + 112) = *((void *)v34 + 14);
      *(unsigned char *)(v33 + 120) = v34[120];
      swift_bridgeObjectRetain();
    }
  }
  else if (v61 == 1)
  {
    sub_260F66944(v33 + 104);
    char v63 = v34[120];
    *uint64_t v59 = *v60;
    *(unsigned char *)(v33 + 120) = v63;
  }
  else
  {
    *(void *)(v33 + 104) = *((void *)v34 + 13);
    *(void *)(v33 + 112) = *((void *)v34 + 14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v33 + 120) = v34[120];
  }
  *(void *)(v33 + 128) = *((void *)v34 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v64 = *(_OWORD *)(v34 + 136);
  long long v65 = *(_OWORD *)(v34 + 152);
  *(_DWORD *)(v33 + 167) = *(_DWORD *)(v34 + 167);
  *(_OWORD *)(v33 + 152) = v65;
  *(_OWORD *)(v33 + 136) = v64;
  *(void *)(v33 + 176) = *((void *)v34 + 22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v33 + 184) = *((void *)v34 + 23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_37:
  uint64_t v66 = a3[6];
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = a2 + v66;
  uint64_t v69 = *(void *)(a2 + v66);
  if (!*(void *)(a1 + v66))
  {
    if (v69)
    {
      void *v67 = v69;
      uint64_t v73 = *(void **)(v68 + 8);
      v67[1] = v73;
      swift_retain();
      id v74 = v73;
      goto LABEL_44;
    }
LABEL_43:
    *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
    goto LABEL_44;
  }
  if (!v69)
  {
    sub_260F66998(a1 + v66);
    goto LABEL_43;
  }
  void *v67 = v69;
  swift_retain();
  swift_release();
  uint64_t v70 = *(void **)(v68 + 8);
  uint64_t v71 = (void *)v67[1];
  v67[1] = v70;
  id v72 = v70;

LABEL_44:
  uint64_t v75 = a3[7];
  uint64_t v76 = a1 + v75;
  uint64_t v77 = a2 + v75;
  *(void *)(a1 + v75) = *(void *)(a2 + v75);
  swift_retain();
  swift_release();
  *(void *)(v76 + 8) = *(void *)(v77 + 8);
  swift_retain();
  swift_release();
  uint64_t v78 = a3[8];
  uint64_t v79 = (void *)(a1 + v78);
  uint64_t v80 = (void *)(a2 + v78);
  *(void *)(a1 + v78) = *(void *)(a2 + v78);
  swift_retain();
  swift_release();
  v79[1] = v80[1];
  v79[2] = v80[2];
  v79[3] = v80[3];
  v79[4] = v80[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v79[5] = v80[5];
  v79[6] = v80[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v79[7] = v80[7];
  v79[8] = v80[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v81 = a3[9];
  uint64_t v82 = a1 + v81;
  uint64_t v83 = a2 + v81;
  *(void *)(a1 + v81) = *(void *)(a2 + v81);
  swift_retain();
  swift_release();
  *(void *)(v82 + 8) = *(void *)(v83 + 8);
  *(void *)(v82 + 16) = *(void *)(v83 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v84 = a3[11];
  uint64_t v85 = a1 + v84;
  uint64_t v86 = a2 + v84;
  uint64_t v87 = sub_260FE3990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 24))(v85, v86, v87);
  return a1;
}

uint64_t sub_260F6689C(uint64_t a1)
{
  return a1;
}

uint64_t sub_260F668F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_260F66944(uint64_t a1)
{
  return a1;
}

uint64_t sub_260F66998(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for AppleDiffusionPipeline(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  long long v10 = *(_OWORD *)((char *)a2 + v7 + 176);
  *((_OWORD *)v8 + 10) = *(_OWORD *)((char *)a2 + v7 + 160);
  *((_OWORD *)v8 + 11) = v10;
  *((_WORD *)v8 + 96) = *(_WORD *)((char *)a2 + v7 + 192);
  long long v11 = *(_OWORD *)((char *)a2 + v7 + 112);
  *((_OWORD *)v8 + 6) = *(_OWORD *)((char *)a2 + v7 + 96);
  *((_OWORD *)v8 + 7) = v11;
  long long v12 = *(_OWORD *)((char *)a2 + v7 + 144);
  *((_OWORD *)v8 + 8) = *(_OWORD *)((char *)a2 + v7 + 128);
  *((_OWORD *)v8 + 9) = v12;
  long long v13 = *(_OWORD *)((char *)a2 + v7 + 48);
  *((_OWORD *)v8 + 2) = *(_OWORD *)((char *)a2 + v7 + 32);
  *((_OWORD *)v8 + 3) = v13;
  long long v14 = *(_OWORD *)((char *)a2 + v7 + 80);
  *((_OWORD *)v8 + 4) = *(_OWORD *)((char *)a2 + v7 + 64);
  *((_OWORD *)v8 + 5) = v14;
  long long v15 = *(_OWORD *)((char *)a2 + v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)((char *)a2 + v7);
  *((_OWORD *)v8 + 1) = v15;
  *((void *)v8 + 25) = *(void *)((char *)a2 + v7 + 200);
  uint64_t v16 = *(int *)(type metadata accessor for AppleDiffusionUnet() + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  uint64_t v19 = type metadata accessor for ConcreteAdapter();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    *uint64_t v17 = *v18;
    uint64_t v22 = *(int *)(v19 + 20);
    char v23 = &v17[v22];
    long long v24 = &v18[v22];
    uint64_t v25 = sub_260FE2F90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    uint64_t v26 = *(int *)(v19 + 24);
    uint64_t v27 = &v17[v26];
    uint64_t v28 = &v18[v26];
    long long v29 = *((_OWORD *)v28 + 9);
    *((_OWORD *)v27 + 8) = *((_OWORD *)v28 + 8);
    *((_OWORD *)v27 + 9) = v29;
    long long v30 = *((_OWORD *)v28 + 11);
    *((_OWORD *)v27 + 10) = *((_OWORD *)v28 + 10);
    *((_OWORD *)v27 + 11) = v30;
    long long v31 = *((_OWORD *)v28 + 5);
    *((_OWORD *)v27 + 4) = *((_OWORD *)v28 + 4);
    *((_OWORD *)v27 + 5) = v31;
    long long v32 = *((_OWORD *)v28 + 7);
    *((_OWORD *)v27 + 6) = *((_OWORD *)v28 + 6);
    *((_OWORD *)v27 + 7) = v32;
    long long v33 = *((_OWORD *)v28 + 1);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    *((_OWORD *)v27 + 1) = v33;
    long long v34 = *((_OWORD *)v28 + 3);
    *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
    *((_OWORD *)v27 + 3) = v34;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v35 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v35) = *(_OWORD *)((char *)a2 + v35);
  uint64_t v36 = a3[8];
  uint64_t v37 = a3[9];
  long long v38 = (char *)a1 + v36;
  long long v39 = (char *)a2 + v36;
  *((void *)v38 + 8) = *((void *)v39 + 8);
  long long v40 = *((_OWORD *)v39 + 3);
  *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
  *((_OWORD *)v38 + 3) = v40;
  long long v41 = *((_OWORD *)v39 + 1);
  *(_OWORD *)long long v38 = *(_OWORD *)v39;
  *((_OWORD *)v38 + 1) = v41;
  long long v42 = (char *)a1 + v37;
  long long v43 = (char *)a2 + v37;
  long long v44 = *(_OWORD *)v43;
  *((void *)v42 + 2) = *((void *)v43 + 2);
  uint64_t v45 = a3[10];
  uint64_t v46 = a3[11];
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  *(_OWORD *)long long v42 = v44;
  *((unsigned char *)a1 + v45) = *((unsigned char *)a2 + v45);
  uint64_t v49 = sub_260FE3990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
  return a1;
}

uint64_t assignWithTake for AppleDiffusionPipeline(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *(void *)uint64_t v7 = *(void *)(a2 + v6);
  *(void *)(v7 + 8) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v8 + 24);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v8 + 40);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v8 + 56);
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
  *(void *)(v7 + 56) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v8 + 72);
  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  *(void *)(v7 + 72) = v13;
  swift_bridgeObjectRelease();
  *(void *)(v7 + 80) = *(void *)(v8 + 80);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v8 + 96);
  *(void *)(v7 + 88) = *(void *)(v8 + 88);
  *(void *)(v7 + 96) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v8 + 112);
  *(void *)(v7 + 104) = *(void *)(v8 + 104);
  *(void *)(v7 + 112) = v15;
  swift_bridgeObjectRelease();
  *(void *)(v7 + 120) = *(void *)(v8 + 120);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v8 + 136);
  *(void *)(v7 + 128) = *(void *)(v8 + 128);
  *(void *)(v7 + 136) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v8 + 152);
  *(void *)(v7 + 144) = *(void *)(v8 + 144);
  *(void *)(v7 + 152) = v17;
  swift_bridgeObjectRelease();
  *(void *)(v7 + 160) = *(void *)(v8 + 160);
  swift_bridgeObjectRelease();
  *(void *)(v7 + 168) = *(void *)(v8 + 168);
  swift_bridgeObjectRelease();
  *(void *)(v7 + 176) = *(void *)(v8 + 176);
  swift_bridgeObjectRelease();
  *(void *)(v7 + 184) = *(void *)(v8 + 184);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + 192) = *(unsigned char *)(v8 + 192);
  *(unsigned char *)(v7 + 193) = *(unsigned char *)(v8 + 193);
  *(void *)(v7 + 200) = *(void *)(v8 + 200);
  swift_bridgeObjectRelease();
  uint64_t v18 = *(int *)(type metadata accessor for AppleDiffusionUnet() + 24);
  uint64_t v19 = (unsigned char *)(v7 + v18);
  uint64_t v20 = (unsigned char *)(v8 + v18);
  uint64_t v21 = type metadata accessor for ConcreteAdapter();
  uint64_t v22 = *(void *)(v21 - 8);
  char v23 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      *uint64_t v19 = *v20;
      uint64_t v26 = *(int *)(v21 + 20);
      uint64_t v27 = &v19[v26];
      uint64_t v28 = &v20[v26];
      uint64_t v29 = sub_260FE2F90();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
      uint64_t v30 = *(int *)(v21 + 24);
      long long v31 = &v19[v30];
      long long v32 = &v20[v30];
      long long v33 = v32[9];
      v31[8] = v32[8];
      v31[9] = v33;
      long long v34 = v32[11];
      v31[10] = v32[10];
      v31[11] = v34;
      long long v35 = v32[5];
      v31[4] = v32[4];
      v31[5] = v35;
      long long v36 = v32[7];
      v31[6] = v32[6];
      v31[7] = v36;
      long long v37 = v32[1];
      *long long v31 = *v32;
      v31[1] = v37;
      long long v38 = v32[3];
      v31[2] = v32[2];
      v31[3] = v38;
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v25)
  {
    sub_260F64860((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ConcreteAdapter);
LABEL_6:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
    memcpy(v19, v20, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v19 = *v20;
  uint64_t v62 = *(int *)(v21 + 20);
  char v63 = &v19[v62];
  long long v64 = &v20[v62];
  uint64_t v65 = sub_260FE2F90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v65 - 8) + 40))(v63, v64, v65);
  uint64_t v66 = *(int *)(v21 + 24);
  uint64_t v67 = (uint64_t)&v19[v66];
  uint64_t v68 = &v20[v66];
  if (*(void *)(v67 + 8) == 1) {
    goto LABEL_16;
  }
  uint64_t v69 = *((void *)v68 + 1);
  if (v69 == 1)
  {
    sub_260F6689C(v67);
LABEL_16:
    long long v70 = *((_OWORD *)v68 + 1);
    *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
    *(_OWORD *)(v67 + 16) = v70;
    goto LABEL_18;
  }
  *(void *)uint64_t v67 = *(void *)v68;
  *(void *)(v67 + 8) = v69;
  swift_bridgeObjectRelease();
  uint64_t v71 = *((void *)v68 + 3);
  *(void *)(v67 + 16) = *((void *)v68 + 2);
  *(void *)(v67 + 24) = v71;
  swift_bridgeObjectRelease();
LABEL_18:
  if (*(void *)(v67 + 40))
  {
    uint64_t v72 = *((void *)v68 + 5);
    if (v72)
    {
      *(unsigned char *)(v67 + 32) = v68[32];
      *(_DWORD *)(v67 + 36) = *((_DWORD *)v68 + 9);
      *(void *)(v67 + 40) = v72;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v67 + 48) = *((_DWORD *)v68 + 12);
      *(void *)(v67 + 56) = *((void *)v68 + 7);
      swift_bridgeObjectRelease();
      *(_DWORD *)(v67 + 64) = *((_DWORD *)v68 + 16);
      *(unsigned char *)(v67 + 68) = v68[68];
      *(void *)(v67 + 72) = *((void *)v68 + 9);
      swift_bridgeObjectRelease();
      *(_DWORD *)(v67 + 80) = *((_DWORD *)v68 + 20);
      *(unsigned char *)(v67 + 84) = v68[84];
      *(void *)(v67 + 88) = *((void *)v68 + 11);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_260F668F0(v67 + 32);
  }
  long long v73 = *((_OWORD *)v68 + 3);
  *(_OWORD *)(v67 + 32) = *((_OWORD *)v68 + 2);
  *(_OWORD *)(v67 + 48) = v73;
  long long v74 = *((_OWORD *)v68 + 5);
  *(_OWORD *)(v67 + 64) = *((_OWORD *)v68 + 4);
  *(_OWORD *)(v67 + 80) = v74;
LABEL_23:
  *(void *)(v67 + 96) = *((void *)v68 + 12);
  swift_bridgeObjectRelease();
  if (*(void *)(v67 + 112) != 1)
  {
    uint64_t v75 = *((void *)v68 + 14);
    if (v75 != 1)
    {
      *(void *)(v67 + 104) = *((void *)v68 + 13);
      *(void *)(v67 + 112) = v75;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v67 + 120) = v68[120];
      goto LABEL_28;
    }
    sub_260F66944(v67 + 104);
  }
  *(_OWORD *)(v67 + 104) = *(_OWORD *)(v68 + 104);
  *(unsigned char *)(v67 + 120) = v68[120];
LABEL_28:
  *(void *)(v67 + 128) = *((void *)v68 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v67 + 136) = *(_OWORD *)(v68 + 136);
  *(_OWORD *)(v67 + 152) = *(_OWORD *)(v68 + 152);
  *(_DWORD *)(v67 + 167) = *(_DWORD *)(v68 + 167);
  *(void *)(v67 + 176) = *((void *)v68 + 22);
  swift_bridgeObjectRelease();
  *(void *)(v67 + 184) = *((void *)v68 + 23);
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v40 = a3[6];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  if (!*(void *)(a1 + v40))
  {
LABEL_11:
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    goto LABEL_12;
  }
  if (!*(void *)v42)
  {
    sub_260F66998(v41);
    goto LABEL_11;
  }
  *(void *)uint64_t v41 = *(void *)v42;
  swift_release();
  long long v43 = *(void **)(v41 + 8);
  *(void *)(v41 + 8) = *(void *)(v42 + 8);

LABEL_12:
  uint64_t v44 = a3[7];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  *(void *)(a1 + v44) = *(void *)(a2 + v44);
  swift_release();
  *(void *)(v45 + 8) = *(void *)(v46 + 8);
  swift_release();
  uint64_t v47 = a3[8];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  *(void *)(a1 + v47) = *(void *)(a2 + v47);
  swift_release();
  *(_OWORD *)(v48 + 8) = *(_OWORD *)(v49 + 8);
  uint64_t v50 = *(void *)(v49 + 32);
  *(void *)(v48 + 24) = *(void *)(v49 + 24);
  *(void *)(v48 + 32) = v50;
  swift_bridgeObjectRelease();
  uint64_t v51 = *(void *)(v49 + 48);
  *(void *)(v48 + 40) = *(void *)(v49 + 40);
  *(void *)(v48 + 48) = v51;
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void *)(v49 + 64);
  *(void *)(v48 + 56) = *(void *)(v49 + 56);
  *(void *)(v48 + 64) = v52;
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[9];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  *(void *)(a1 + v53) = *(void *)(a2 + v53);
  swift_release();
  uint64_t v56 = *(void *)(v55 + 16);
  *(void *)(v54 + 8) = *(void *)(v55 + 8);
  *(void *)(v54 + 16) = v56;
  swift_bridgeObjectRelease();
  uint64_t v57 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  uint64_t v60 = sub_260FE3990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 40))(v58, v59, v60);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionPipeline(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260F67300);
}

uint64_t sub_260F67300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AppleDiffusionUnet();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_260FE3990();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for AppleDiffusionPipeline(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260F67440);
}

uint64_t sub_260F67440(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AppleDiffusionUnet();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_260FE3990();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_260F6756C()
{
  uint64_t result = type metadata accessor for AppleDiffusionUnet();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_260FE3990();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionPipeline.IPASetting(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppleDiffusionPipeline.IPASetting(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F677CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionPipeline.IPASetting()
{
  return &type metadata for AppleDiffusionPipeline.IPASetting;
}

uint64_t initializeWithCopy for AppleDiffusionPipeline.Properties(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppleDiffusionPipeline.Properties(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AppleDiffusionPipeline.Properties(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AppleDiffusionPipeline.Properties()
{
  return &type metadata for AppleDiffusionPipeline.Properties;
}

unsigned char *storeEnumTagSinglePayload for AppleDiffusionPipeline.MemoryReductionLevel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F67A38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionPipeline.MemoryReductionLevel()
{
  return &type metadata for AppleDiffusionPipeline.MemoryReductionLevel;
}

uint64_t sub_260F67A74(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for AppleDiffusionPipeline.AppleDiffusionError(uint64_t a1)
{
  return sub_260F64E28(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s13DiffusionBase22AppleDiffusionPipelineV19AppleDiffusionErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_260F67A74(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AppleDiffusionPipeline.AppleDiffusionError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_260F67A74(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_260F64E28(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AppleDiffusionPipeline.AppleDiffusionError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_260F64E28(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for AppleDiffusionPipeline.AppleDiffusionError()
{
  return &type metadata for AppleDiffusionPipeline.AppleDiffusionError;
}

void type metadata accessor for MLFeatureType(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for vImage_CGImageFormat(uint64_t a1)
{
}

uint64_t *sub_260F67C80(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    unsigned __int8 v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v8((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    uint64_t v9 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void **)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    if (v12)
    {
      uint64_t v13 = *(void **)v11;
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v12;
      *((void *)v10 + 2) = *((void *)v11 + 2);
      v10[24] = v11[24];
      id v14 = v13;
      id v15 = v12;
    }
    else
    {
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *(_OWORD *)(v10 + 9) = *(_OWORD *)(v11 + 9);
    }
  }
  return a1;
}

void sub_260F67DDC(uint64_t a1, int *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v5(a1 + a2[6], v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[8];
  if (*(void *)(v6 + 8))
  {

    uint64_t v7 = *(void **)(v6 + 8);
  }
}

uint64_t sub_260F67ECC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void **)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  if (v11)
  {
    uint64_t v12 = *(void **)v10;
    *(void *)uint64_t v9 = *(void *)v10;
    *(void *)(v9 + 8) = v11;
    *(void *)(v9 + 16) = *(void *)(v10 + 16);
    *(unsigned char *)(v9 + 24) = *(unsigned char *)(v10 + 24);
    id v13 = v12;
    id v14 = v11;
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 9) = *(_OWORD *)(v10 + 9);
  }
  return a1;
}

uint64_t sub_260F67FD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (long long *)(a2 + v8);
  uint64_t v11 = *(void *)(a1 + v8 + 8);
  uint64_t v12 = *((void *)v10 + 1);
  if (v11)
  {
    if (v12)
    {
      id v13 = *(void **)v9;
      id v14 = *(void **)v10;
      *(void *)uint64_t v9 = *(void *)v10;
      id v15 = v14;

      uint64_t v16 = (void *)*((void *)v10 + 1);
      uint64_t v17 = *(void **)(v9 + 8);
      *(void *)(v9 + 8) = v16;
      id v18 = v16;

      uint64_t v19 = *((void *)v10 + 2);
      *(unsigned char *)(v9 + 24) = *((unsigned char *)v10 + 24);
      *(void *)(v9 + 16) = v19;
    }
    else
    {
      sub_260F68160(v9);
      long long v25 = *(long long *)((char *)v10 + 9);
      *(_OWORD *)uint64_t v9 = *v10;
      *(_OWORD *)(v9 + 9) = v25;
    }
  }
  else if (v12)
  {
    uint64_t v20 = *(void **)v10;
    *(void *)uint64_t v9 = *(void *)v10;
    uint64_t v21 = (void *)*((void *)v10 + 1);
    *(void *)(v9 + 8) = v21;
    uint64_t v22 = *((void *)v10 + 2);
    *(unsigned char *)(v9 + 24) = *((unsigned char *)v10 + 24);
    *(void *)(v9 + 16) = v22;
    id v23 = v20;
    id v24 = v21;
  }
  else
  {
    long long v26 = *v10;
    *(_OWORD *)(v9 + 9) = *(long long *)((char *)v10 + 9);
    *(_OWORD *)uint64_t v9 = v26;
  }
  return a1;
}

uint64_t sub_260F68160(uint64_t a1)
{
  return a1;
}

uint64_t sub_260F681B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  *uint64_t v9 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v10 + 9);
  return a1;
}

uint64_t sub_260F68290(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  if (!*(void *)(a1 + v8 + 8)) {
    goto LABEL_5;
  }
  if (!*(void *)(v10 + 8))
  {
    sub_260F68160(v9);
LABEL_5:
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 9) = *(_OWORD *)(v10 + 9);
    return a1;
  }
  uint64_t v11 = *(void **)v9;
  *(void *)uint64_t v9 = *(void *)v10;

  uint64_t v12 = *(void **)(v9 + 8);
  *(void *)(v9 + 8) = *(void *)(v10 + 8);

  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(unsigned char *)(v9 + 24) = *(unsigned char *)(v10 + 24);
  return a1;
}

uint64_t sub_260F683C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260F683D8);
}

uint64_t sub_260F683D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_260F684A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260F684BC);
}

uint64_t sub_260F684BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = a2;
  }
  return result;
}

void sub_260F6857C()
{
  sub_260F68620();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_260F68620()
{
  if (!qword_26B409A60)
  {
    unint64_t v0 = sub_260FE3B40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B409A60);
    }
  }
}

uint64_t *sub_260F68680(uint64_t *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v3 = a1[6];
  uint64_t v5 = a1[15];
  uint64_t v6 = a1[14];
  sub_260F32C08(a1[1], a1[2]);
  sub_260F32C50(v2, v3);
  swift_bridgeObjectRetain();
  sub_260ED7980(v6, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_260F68764()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t sub_260F6879C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void type metadata accessor for vImage_Buffer(uint64_t a1)
{
}

void type metadata accessor for vImageConverter(uint64_t a1)
{
}

void type metadata accessor for vImageCVImageFormat(uint64_t a1)
{
}

void type metadata accessor for MLModelMetadataKey(uint64_t a1)
{
}

void type metadata accessor for CGColorRenderingIntent(uint64_t a1)
{
}

void type metadata accessor for CGBitmapInfo(uint64_t a1)
{
}

uint64_t sub_260F6887C()
{
  return sub_260F6890C(&qword_26A8EAC38, type metadata accessor for MLModelMetadataKey);
}

uint64_t sub_260F688C4()
{
  return sub_260F6890C(&qword_26A8EAC40, type metadata accessor for MLModelMetadataKey);
}

uint64_t sub_260F6890C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_260F68954()
{
  return sub_260F6890C(&qword_26A8EAC48, type metadata accessor for MLModelMetadataKey);
}

uint64_t DiffusionBasePipeline.ResourceURLs.textEncoderURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_260FE2F90();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t DiffusionBasePipeline.ResourceURLs.unetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DiffusionBasePipeline.ResourceURLs() + 20);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DiffusionBasePipeline.ResourceURLs()
{
  uint64_t result = qword_26A8EAC70;
  if (!qword_26A8EAC70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DiffusionBasePipeline.ResourceURLs.unetChunk1URL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DiffusionBasePipeline.ResourceURLs() + 24);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DiffusionBasePipeline.ResourceURLs.unetChunk2URL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DiffusionBasePipeline.ResourceURLs() + 28);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DiffusionBasePipeline.ResourceURLs.decoderURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DiffusionBasePipeline.ResourceURLs() + 32);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DiffusionBasePipeline.ResourceURLs.encoderURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DiffusionBasePipeline.ResourceURLs() + 36);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DiffusionBasePipeline.ResourceURLs.safetyCheckerURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DiffusionBasePipeline.ResourceURLs() + 40);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DiffusionBasePipeline.ResourceURLs.vocabURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DiffusionBasePipeline.ResourceURLs() + 44);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DiffusionBasePipeline.ResourceURLs.mergesURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DiffusionBasePipeline.ResourceURLs() + 48);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DiffusionBasePipeline.ResourceURLs.controlNetDirURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DiffusionBasePipeline.ResourceURLs() + 52);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DiffusionBasePipeline.ResourceURLs.controlledUnetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DiffusionBasePipeline.ResourceURLs() + 56);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DiffusionBasePipeline.ResourceURLs.controlledUnetChunk1URL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DiffusionBasePipeline.ResourceURLs() + 60);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DiffusionBasePipeline.ResourceURLs.controlledUnetChunk2URL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DiffusionBasePipeline.ResourceURLs() + 64);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DiffusionBasePipeline.ResourceURLs.multilingualTextEncoderProjectionURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DiffusionBasePipeline.ResourceURLs() + 68);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t DiffusionBasePipeline.ResourceURLs.init(resourcesAt:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v3 = sub_260FE2ED0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_260FE2F90();
  uint64_t v62 = *(void *)(v71 - 8);
  uint64_t v8 = v62;
  MEMORY[0x270FA5388](v71, v9);
  int v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75[0] = 0xD000000000000014;
  v75[1] = 0x8000000261001300;
  uint64_t v12 = *MEMORY[0x263F06E50];
  uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  uint64_t v73 = v4 + 104;
  unsigned int v69 = v12;
  v68(v7, v12, v3);
  unint64_t v70 = sub_260D86D20();
  sub_260FE2F70();
  id v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v74 = v4 + 8;
  v13(v7, v3);
  id v14 = v13;
  uint64_t v67 = v13;
  swift_bridgeObjectRelease();
  id v15 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v72 = v8 + 32;
  uint64_t v63 = a2;
  v15(a2, v11, v71);
  long long v64 = v15;
  strcpy((char *)v75, "Unet.mlmodelc");
  HIWORD(v75[1]) = -4864;
  uint64_t v16 = v68;
  v68(v7, v12, v3);
  sub_260FE2F70();
  v14(v7, v3);
  swift_bridgeObjectRelease();
  uint64_t v66 = (int *)type metadata accessor for DiffusionBasePipeline.ResourceURLs();
  uint64_t v17 = v71;
  v15(a2 + v66[5], v11, v71);
  v75[0] = 0xD000000000000013;
  v75[1] = 0x8000000261001320;
  uint64_t v18 = v69;
  v16(v7, v69, v3);
  sub_260FE2F70();
  uint64_t v19 = v67;
  v67(v7, v3);
  swift_bridgeObjectRelease();
  uint64_t v20 = v66;
  uint64_t v22 = v63;
  uint64_t v21 = v64;
  v64(v63 + v66[6], v11, v17);
  v75[0] = 0xD000000000000013;
  v75[1] = 0x8000000261001340;
  uint64_t v23 = v18;
  id v24 = v68;
  v68(v7, v23, v3);
  sub_260FE2F70();
  v19(v7, v3);
  swift_bridgeObjectRelease();
  uint64_t v25 = v22 + v20[7];
  uint64_t v26 = v71;
  v21(v25, v11, v71);
  v75[0] = 0xD000000000000013;
  v75[1] = 0x8000000261001360;
  uint64_t v27 = v69;
  v24(v7, v69, v3);
  sub_260FE2F70();
  v19(v7, v3);
  swift_bridgeObjectRelease();
  uint64_t v28 = v66;
  uint64_t v29 = v64;
  v64(v22 + v66[8], v11, v26);
  v75[0] = 0xD000000000000013;
  v75[1] = 0x8000000261001380;
  v68(v7, v27, v3);
  sub_260FE2F70();
  v67(v7, v3);
  swift_bridgeObjectRelease();
  uint64_t v30 = v71;
  v29(v22 + v28[9], v11, v71);
  long long v31 = v29;
  v75[0] = 0xD000000000000016;
  v75[1] = 0x80000002610013A0;
  uint64_t v32 = v3;
  long long v33 = v68;
  v68(v7, v69, v3);
  sub_260FE2F70();
  long long v34 = v67;
  v67(v7, v3);
  swift_bridgeObjectRelease();
  uint64_t v35 = v63;
  v31(v63 + v66[10], v11, v30);
  strcpy((char *)v75, "vocab.json");
  BYTE3(v75[1]) = 0;
  HIDWORD(v75[1]) = -369098752;
  v33(v7, v69, v32);
  sub_260FE2F70();
  v34(v7, v32);
  swift_bridgeObjectRelease();
  long long v36 = v66;
  uint64_t v37 = v35 + v66[11];
  uint64_t v38 = v71;
  uint64_t v39 = v64;
  v64(v37, v11, v71);
  strcpy((char *)v75, "merges.txt");
  BYTE3(v75[1]) = 0;
  HIDWORD(v75[1]) = -369098752;
  uint64_t v40 = v68;
  v68(v7, v69, v32);
  sub_260FE2F70();
  uint64_t v41 = v67;
  v67(v7, v32);
  swift_bridgeObjectRelease();
  uint64_t v42 = v36[12];
  uint64_t v43 = v63;
  v39(v63 + v42, v11, v38);
  strcpy((char *)v75, "controlnet");
  BYTE3(v75[1]) = 0;
  HIDWORD(v75[1]) = -369098752;
  uint64_t v44 = v69;
  v40(v7, v69, v32);
  sub_260FE2F70();
  uint64_t v45 = v32;
  v41(v7, v32);
  swift_bridgeObjectRelease();
  uint64_t v46 = v66;
  uint64_t v47 = v43;
  uint64_t v48 = v43 + v66[13];
  uint64_t v49 = v71;
  uint64_t v50 = v64;
  v64(v48, v11, v71);
  v75[0] = 0xD000000000000017;
  v75[1] = 0x80000002610013C0;
  v68(v7, v44, v45);
  sub_260FE2F70();
  v67(v7, v45);
  swift_bridgeObjectRelease();
  v50(v47 + v46[14], v11, v49);
  unint64_t v61 = 0xD00000000000001DLL;
  v75[0] = 0xD00000000000001DLL;
  v75[1] = 0x80000002610013E0;
  uint64_t v51 = v69;
  uint64_t v52 = v68;
  v68(v7, v69, v45);
  sub_260FE2F70();
  v67(v7, v45);
  swift_bridgeObjectRelease();
  uint64_t v53 = v66;
  v64(v63 + v66[15], v11, v71);
  v75[0] = v61;
  v75[1] = 0x8000000261001400;
  v52(v7, v51, v45);
  uint64_t v54 = v65;
  sub_260FE2F70();
  uint64_t v55 = v67;
  v67(v7, v45);
  swift_bridgeObjectRelease();
  uint64_t v56 = v63;
  uint64_t v57 = (uint64_t (*)(uint64_t, char *, uint64_t))v64;
  uint64_t v58 = v63 + v53[16];
  uint64_t v59 = v71;
  v64(v58, v11, v71);
  v75[0] = 0xD00000000000002ALL;
  v75[1] = 0x8000000261001420;
  v52(v7, v69, v45);
  sub_260FE2F70();
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v54, v59);
  v55(v7, v45);
  swift_bridgeObjectRelease();
  return v57(v56 + v66[17], v11, v59);
}

uint64_t DiffusionBasePipeline.init(resourcesAt:controlNet:configuration:disableSafety:reduceMemory:useMultilingualTextEncoder:script:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v167 = a2;
  int v169 = a7;
  int v174 = a6;
  int v165 = a5;
  int v162 = a4;
  id v177 = a3;
  uint64_t v164 = a8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7588);
  MEMORY[0x270FA5388](v9 - 8, v10);
  uint64_t v161 = (char *)&v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v13);
  long long v157 = (char *)&v155 - v14;
  uint64_t v15 = sub_260FE2F90();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15, v17);
  v163 = (char *)&v155 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19, v20);
  uint64_t v159 = (char *)&v155 - v21;
  MEMORY[0x270FA5388](v22, v23);
  uint64_t v172 = (char *)&v155 - v24;
  MEMORY[0x270FA5388](v25, v26);
  v173 = (char *)&v155 - v27;
  MEMORY[0x270FA5388](v28, v29);
  uint64_t v175 = (char *)&v155 - v30;
  MEMORY[0x270FA5388](v31, v32);
  float v158 = (char *)&v155 - v33;
  MEMORY[0x270FA5388](v34, v35);
  uint64_t v37 = (char *)&v155 - v36;
  MEMORY[0x270FA5388](v38, v39);
  uint64_t v41 = (char *)&v155 - v40;
  uint64_t v42 = (int *)type metadata accessor for DiffusionBasePipeline.ResourceURLs();
  MEMORY[0x270FA5388](v42, v43);
  uint64_t v160 = (uint64_t)&v155 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v47 = MEMORY[0x270FA5388](v45, v46);
  uint64_t v49 = (char *)&v155 - v48;
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16);
  uint64_t v168 = a1;
  v50(v41, (uint64_t)a1, v15, v47);
  long long v170 = v41;
  DiffusionBasePipeline.ResourceURLs.init(resourcesAt:)((uint64_t)v41, (uint64_t)v49);
  uint64_t v178 = v16;
  uint64_t v179 = v16 + 16;
  uint64_t v176 = (void (*)(char *, char *, uint64_t))v50;
  os_signpost_id_t v171 = v42;
  uint64_t v180 = v15;
  if (v174)
  {
    uint64_t v51 = (uint64_t)v157;
    ((void (*)(char *, char *, uint64_t))v50)(v157, &v49[v42[17]], v15);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v51, 0, 1, v15);
    if (v169 == 3) {
      char v52 = 0;
    }
    else {
      char v52 = v169;
    }
    id v53 = v177;
    uint64_t v54 = _s13DiffusionBase23MultilingualTextEncoderV7modelAt13configuration6scriptAC10Foundation3URLVSg_So20MLModelConfigurationCAA6ScriptOtcfC_0(v51, v177, v52);
    long long v183 = &type metadata for MultilingualTextEncoder;
    uint64_t v184 = &protocol witness table for MultilingualTextEncoder;
    *(void *)&long long v181 = v54;
    *((void *)&v181 + 1) = v55;
    uint64_t v182 = v56;
    uint64_t v57 = (_OWORD *)sub_260DD7B40(&v181, (uint64_t)&v185);
    id v59 = v53;
    uint64_t v60 = (uint64_t)v166;
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v50)(v37, &v49[v42[12]], v15);
    unint64_t v61 = &v49[v42[11]];
    uint64_t v62 = v158;
    ((void (*)(char *, char *, uint64_t))v50)(v158, v61, v15);
    id v63 = v166;
    uint64_t v64 = sub_260FB5640();
    uint64_t v65 = v37;
    if (v63)
    {
      uint64_t v66 = *(void (**)(char *, uint64_t))(v178 + 8);
      uint64_t v67 = v62;
      uint64_t v68 = v180;
      v66(v67, v180);
      v66(v65, v68);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v66(v168, v68);
      return sub_260F6AD04((uint64_t)v49);
    }
    id v166 = v37;
    long long v157 = (char *)v64;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_260FE2FB0();
    uint64_t v70 = v178;
    uint64_t v71 = v69;
    unint64_t v73 = v72;
    sub_260FE29B0();
    swift_allocObject();
    sub_260FE29A0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC60);
    sub_260F6AD60();
    uint64_t v74 = v71;
    unint64_t v75 = v73;
    sub_260FE2980();
    uint64_t v60 = 0;
    sub_260DCC110(v74, v75);
    swift_release();
    uint64_t v77 = v180;
    uint64_t v76 = v181;
    uint64_t v78 = *(void (**)(char *, uint64_t))(v70 + 8);
    v78(v158, v180);
    v78((char *)v166, v77);
    *(void *)&long long v189 = v157;
    *((void *)&v189 + 1) = v76;
    strcpy((char *)v190, "<|endoftext|>");
    v190[7] = -4864;
    uint64_t v191 = 0x6F74726174737C3CLL;
    unint64_t v192 = 0xEF3E7C7478657466;
    strcpy((char *)v193, "<|endoftext|>");
    v193[7] = -4864;
    strcpy((char *)v194, "<|endoftext|>");
    v194[7] = -4864;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v79 = (uint64_t)v170;
    v176(v170, v49, v77);
    id v59 = v177;
    sub_260F6D33C(&v189, v79, v177, (uint64_t)v188);
    unint64_t v186 = &type metadata for TextEncoder;
    v187 = &protocol witness table for TextEncoder;
    uint64_t v57 = (_OWORD *)swift_allocObject();
    *(void *)&long long v185 = v57;
    long long v80 = v188[3];
    v57[3] = v188[2];
    v57[4] = v80;
    long long v81 = v188[5];
    v57[5] = v188[4];
    v57[6] = v81;
    long long v82 = v188[1];
    v57[1] = v188[0];
    v57[2] = v82;
  }
  MEMORY[0x270FA5388](v57, v58);
  *(&v155 - 2) = (uint64_t)v49;
  uint64_t v83 = sub_260F5CC50((void (*)(void *))sub_260F6AE44, (uint64_t)(&v155 - 4), v167);
  swift_bridgeObjectRelease();
  if (*(void *)(v83 + 16))
  {
    id v84 = v59;
    uint64_t v85 = sub_260F6AB54(v83, v84);
    uint64_t v167 = v60;
    swift_bridgeObjectRelease();

    uint64_t v86 = 5;
    if (v85)
    {
      uint64_t v86 = 14;
      uint64_t v87 = 15;
    }
    else
    {
      uint64_t v87 = 6;
    }
    if (v85) {
      uint64_t v88 = 16;
    }
    else {
      uint64_t v88 = 7;
    }
    if (v85) {
      uint64_t v89 = (char *)v85;
    }
    else {
      uint64_t v89 = 0;
    }
    long long v157 = v89;
  }
  else
  {
    uint64_t v167 = v60;
    swift_bridgeObjectRelease();
    long long v157 = 0;
    uint64_t v88 = 7;
    uint64_t v87 = 6;
    uint64_t v86 = 5;
  }
  uint64_t v90 = v176;
  uint64_t v91 = v180;
  uint64_t v92 = v171;
  v176(v175, &v49[v171[v86]], v180);
  v90(v173, &v49[v92[v87]], v91);
  uint64_t v93 = &v49[v92[v88]];
  uint64_t v94 = v172;
  v90(v172, v93, v91);
  int v95 = self;
  float v158 = v49;
  uint64_t v96 = v95;
  id v97 = objc_msgSend(v95, sel_defaultManager);
  sub_260FE2F40();
  uint64_t v98 = (void *)sub_260FE4070();
  swift_bridgeObjectRelease();
  unsigned int v99 = objc_msgSend(v97, sel_fileExistsAtPath_, v98);

  unint64_t v100 = v159;
  v90(v159, v94, v91);
  id v166 = v96;
  if (v99)
  {
    id v101 = objc_msgSend(v96, sel_defaultManager);
    sub_260FE2F40();
    uint64_t v102 = v100;
    uint64_t v103 = (void *)sub_260FE4070();
    swift_bridgeObjectRelease();
    unsigned __int8 v104 = objc_msgSend(v101, sel_fileExistsAtPath_, v103);

    uint64_t v105 = v178;
    uint64_t v159 = *(char **)(v178 + 8);
    ((void (*)(char *, uint64_t))v159)(v102, v180);
    if (v104)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABF0);
      uint64_t v106 = *(void *)(v105 + 72);
      unint64_t v107 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
      uint64_t v108 = swift_allocObject();
      *(_OWORD *)(v108 + 16) = xmmword_260FE7060;
      unint64_t v109 = v108 + v107;
      uint64_t v110 = v180;
      os_signpost_id_t v111 = (uint64_t (*)(unint64_t, char *, uint64_t))v176;
      v176((char *)v109, v173, v180);
      uint64_t v112 = v111(v109 + v106, v172, v110);
      MEMORY[0x270FA5388](v112, v113);
      id v114 = v177;
      *(&v155 - 2) = (uint64_t)v177;
      *(&v155 - 1) = (uint64_t)&unk_270D22770;
      id v115 = v114;
      uint64_t v116 = v167;
      uint64_t v156 = sub_260F6AE64(v108, (void (*)(void, char *))sub_260F6B2A4, (uint64_t)(&v155 - 4));
      uint64_t v167 = v116;

      swift_bridgeObjectRelease();
      uint64_t v117 = v178;
      uint64_t v118 = v170;
      unint64_t v119 = (void (*)(char *, uint64_t))v159;
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v159 = *(char **)(v178 + 8);
    ((void (*)(char *, uint64_t))v159)(v100, v180);
  }
  uint64_t v118 = v170;
  os_signpost_id_t v111 = (uint64_t (*)(unint64_t, char *, uint64_t))v176;
  uint64_t v120 = v180;
  v176(v170, v175, v180);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
  uint64_t v121 = swift_allocObject();
  *(_OWORD *)(v121 + 16) = xmmword_260FE7020;
  long long v122 = v163;
  v111((unint64_t)v163, v118, v120);
  type metadata accessor for ManagedMLModel();
  swift_allocObject();
  id v123 = v177;
  *(void *)(v121 + 32) = ManagedMLModel.init(modelAt:configuration:name:)(v122, v123, (uint64_t)"noise_predictor", 15, 2);
  *(void *)&long long v181 = v121;
  sub_260FE4420();
  uint64_t v156 = v181;

  unint64_t v119 = (void (*)(char *, uint64_t))v159;
  ((void (*)(char *, uint64_t))v159)(v118, v120);
  uint64_t v117 = v178;
LABEL_26:
  uint64_t v124 = v171;
  uint64_t v125 = v158;
  uint64_t v126 = v180;
  v111((unint64_t)v118, &v158[v171[8]], v180);
  uint64_t v49 = v125;
  uint64_t v127 = (uint64_t)v161;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v117 + 56))(v161, 1, 1, v126);
  id v128 = v177;
  id v177 = (id)_s13DiffusionBase7DecoderV7modelAt010alphaModelE013configurationAC10Foundation3URLV_AISgSo20MLModelConfigurationCtcfC_0(v118, v127, v128);
  uint64_t v161 = v129;
  uint64_t v130 = v160;
  sub_260F6B240((uint64_t)v49, v160);
  if (v162)
  {
    sub_260F6AD04(v130);
LABEL_30:
    v163 = 0;
    uint64_t v136 = v176;
    goto LABEL_31;
  }
  id v131 = objc_msgSend(v166, sel_defaultManager);
  sub_260FE2F40();
  unint64_t v132 = (void *)sub_260FE4070();
  swift_bridgeObjectRelease();
  unsigned __int8 v133 = objc_msgSend(v131, sel_fileExistsAtPath_, v132);

  sub_260F6AD04(v130);
  if ((v133 & 1) == 0) {
    goto LABEL_30;
  }
  char v134 = v170;
  uint64_t v135 = v180;
  uint64_t v136 = v176;
  v176(v170, &v49[v124[10]], v180);
  uint64_t v137 = v163;
  v136(v163, v134, v135);
  type metadata accessor for ManagedMLModel();
  swift_allocObject();
  id v138 = v128;
  unint64_t v139 = v137;
  uint64_t v124 = v171;
  v163 = (char *)ManagedMLModel.init(modelAt:configuration:name:)(v139, v138, (uint64_t)"SafetyChecker", 13, 2);
  v119(v134, v135);
LABEL_31:
  id v140 = objc_msgSend(v166, sel_defaultManager);
  uint64_t v141 = &v49[v124[9]];
  sub_260FE2F40();
  int v142 = (void *)sub_260FE4070();
  swift_bridgeObjectRelease();
  unsigned int v143 = objc_msgSend(v140, sel_fileExistsAtPath_, v142);

  if (v143)
  {
    uint64_t v144 = (uint64_t)v170;
    uint64_t v145 = v180;
    v136(v170, v141, v180);
    uint64_t v146 = _s13DiffusionBase7EncoderV7modelAt13configurationAC10Foundation3URLV_So20MLModelConfigurationCtcfC_0(v144, v128);
    uint64_t v148 = v147;
    v119(v168, v145);
    v119(v172, v145);
    v119(v173, v145);
    v119(v175, v145);
  }
  else
  {

    uint64_t v149 = v180;
    v119(v168, v180);
    v119(v172, v149);
    v119(v173, v149);
    v119(v175, v149);
    uint64_t v146 = 0;
    uint64_t v148 = 0;
  }
  char v150 = v169;
  uint64_t v151 = v164;
  sub_260DD7B40(&v185, v164);
  id v152 = v177;
  *(void *)(v151 + 40) = v156;
  *(void *)(v151 + 48) = v152;
  *(void *)(v151 + 56) = v161;
  *(void *)(v151 + 64) = v146;
  os_log_type_t v153 = v157;
  *(void *)(v151 + 72) = v148;
  *(void *)(v151 + 80) = v163;
  *(void *)(v151 + 88) = v153;
  *(unsigned char *)(v151 + 96) = v165 & 1;
  *(unsigned char *)(v151 + 97) = v174 & 1;
  *(unsigned char *)(v151 + 98) = v150;
  return sub_260F6AD04((uint64_t)v49);
}

uint64_t sub_260F6A9D8(uint64_t *a1)
{
  uint64_t v2 = sub_260FE2ED0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[1];
  uint64_t v11 = *a1;
  uint64_t v12 = v7;
  swift_bridgeObjectRetain();
  sub_260FE4250();
  uint64_t v9 = v11;
  uint64_t v8 = v12;
  type metadata accessor for DiffusionBasePipeline.ResourceURLs();
  uint64_t v11 = v9;
  uint64_t v12 = v8;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x263F06E50], v2);
  sub_260D86D20();
  sub_260FE2F70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_260F6AB54(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_260FE2F90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v14 = v2;
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_260FE4D30();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v16 = v6 + 16;
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v13 = *(void *)(v6 + 72);
    do
    {
      v15(v9, v12, v5);
      type metadata accessor for ManagedMLModel();
      swift_allocObject();
      ManagedMLModel.init(modelAt:configuration:name:)(v9, a2, (uint64_t)"ControlNet?", 11, 2);
      sub_260FE4D00();
      sub_260FE4D40();
      sub_260FE4D50();
      sub_260FE4D10();
      v12 += v13;
      --v10;
    }
    while (v10);
    return v17;
  }
  return result;
}

uint64_t sub_260F6AD04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DiffusionBasePipeline.ResourceURLs();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_260F6AD60()
{
  unint64_t result = qword_26A8EAC68;
  if (!qword_26A8EAC68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8EAC60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAC68);
  }
  return result;
}

uint64_t sub_260F6ADD4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_260F6AE44(uint64_t *a1)
{
  return sub_260F6A9D8(a1);
}

uint64_t sub_260F6AE64(uint64_t a1, void (*a2)(void, char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7588);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v57 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_260FE2F90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11);
  id v53 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC80);
  uint64_t v14 = MEMORY[0x270FA5388](v52, v13);
  uint64_t v51 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14, v16);
  uint64_t v50 = (void *)((char *)v41 - v18);
  MEMORY[0x270FA5388](v17, v19);
  uint64_t v49 = (char *)v41 - v20;
  uint64_t v58 = MEMORY[0x263F8EE78];
  sub_260FE4D30();
  uint64_t v21 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v48 = v21;
  v41[0] = a1;
  v41[1] = v4;
  if (v21)
  {
    uint64_t v22 = 0;
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    uint64_t v23 = v10 + 16;
    uint64_t v25 = a1 + ((*(unsigned __int8 *)(v23 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 64));
    uint64_t v26 = *(void *)(v23 + 56);
    uint64_t v56 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 40);
    uint64_t v46 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
    double v47 = v24;
    uint64_t v43 = v23 + 16;
    uint64_t v44 = v26;
    uint64_t v27 = (uint64_t)v57;
    uint64_t v45 = v23;
    uint64_t v28 = (void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v29 = v52;
    while (1)
    {
      v47(v27, v25, v9);
      uint64_t v30 = *v56;
      (*v56)((char *)v27, 0, 1, v9);
      if ((*v46)(v27, 1, v9) == 1) {
        break;
      }
      uint64_t v42 = v30;
      uint64_t v31 = *v28;
      uint64_t v32 = v9;
      uint64_t v33 = v53;
      (*v28)(v53, v27, v32);
      uint64_t v34 = &v51[*(int *)(v29 + 48)];
      uint64_t v35 = v33;
      uint64_t v9 = v32;
      v31(v34, (uint64_t)v35, v32);
      uint64_t v36 = v50;
      uint64_t v37 = (char *)v50 + *(int *)(v29 + 48);
      *uint64_t v50 = v22;
      v31(v37, (uint64_t)v34, v9);
      uint64_t v38 = (uint64_t)v36;
      uint64_t v39 = v49;
      sub_260F6C01C(v38, (uint64_t)v49);
      v54(*(void *)v39, &v39[*(int *)(v29 + 48)]);
      sub_260D90820((uint64_t)v39, &qword_26A8EAC80);
      sub_260FE4D00();
      sub_260FE4D40();
      sub_260FE4D50();
      sub_260FE4D10();
      uint64_t v27 = (uint64_t)v57;
      v25 += v44;
      if (v48 == ++v22)
      {
        v42(v57, 1, 1, v9);
        break;
      }
    }
  }
  else
  {
    uint64_t v27 = (uint64_t)v57;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v57, 1, 1, v9);
  }
  sub_260D90820(v27, &qword_26A8E7588);
  swift_bridgeObjectRelease();
  return v58;
}

uint64_t sub_260F6B240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DiffusionBasePipeline.ResourceURLs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_260F6B2A4(uint64_t a1, uint64_t a2)
{
  return sub_260F85BC0(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t *_s12ResourceURLsVwCP_0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_260FE2F90();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v8((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    v8((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
    v8((uint64_t *)((char *)a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]), v7);
    v8((uint64_t *)((char *)a1 + a3[9]), (uint64_t *)((char *)a2 + a3[9]), v7);
    v8((uint64_t *)((char *)a1 + a3[10]), (uint64_t *)((char *)a2 + a3[10]), v7);
    v8((uint64_t *)((char *)a1 + a3[11]), (uint64_t *)((char *)a2 + a3[11]), v7);
    v8((uint64_t *)((char *)a1 + a3[12]), (uint64_t *)((char *)a2 + a3[12]), v7);
    v8((uint64_t *)((char *)a1 + a3[13]), (uint64_t *)((char *)a2 + a3[13]), v7);
    v8((uint64_t *)((char *)a1 + a3[14]), (uint64_t *)((char *)a2 + a3[14]), v7);
    v8((uint64_t *)((char *)a1 + a3[15]), (uint64_t *)((char *)a2 + a3[15]), v7);
    v8((uint64_t *)((char *)a1 + a3[16]), (uint64_t *)((char *)a2 + a3[16]), v7);
    v8((uint64_t *)((char *)a1 + a3[17]), (uint64_t *)((char *)a2 + a3[17]), v7);
  }
  return a1;
}

uint64_t _s12ResourceURLsVwxx_0(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_260FE2F90();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  v7(a1 + a2[5], v4);
  v7(a1 + a2[6], v4);
  v7(a1 + a2[7], v4);
  v7(a1 + a2[8], v4);
  v7(a1 + a2[9], v4);
  v7(a1 + a2[10], v4);
  v7(a1 + a2[11], v4);
  v7(a1 + a2[12], v4);
  v7(a1 + a2[13], v4);
  v7(a1 + a2[14], v4);
  v7(a1 + a2[15], v4);
  v7(a1 + a2[16], v4);
  uint64_t v5 = a1 + a2[17];
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
}

uint64_t _s12ResourceURLsVwcp_0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_260FE2F90();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  v7(a1 + a3[13], a2 + a3[13], v6);
  v7(a1 + a3[14], a2 + a3[14], v6);
  v7(a1 + a3[15], a2 + a3[15], v6);
  v7(a1 + a3[16], a2 + a3[16], v6);
  v7(a1 + a3[17], a2 + a3[17], v6);
  return a1;
}

uint64_t _s12ResourceURLsVwca_0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_260FE2F90();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  v7(a1 + a3[13], a2 + a3[13], v6);
  v7(a1 + a3[14], a2 + a3[14], v6);
  v7(a1 + a3[15], a2 + a3[15], v6);
  v7(a1 + a3[16], a2 + a3[16], v6);
  v7(a1 + a3[17], a2 + a3[17], v6);
  return a1;
}

uint64_t _s12ResourceURLsVwtk_0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_260FE2F90();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  v7(a1 + a3[13], a2 + a3[13], v6);
  v7(a1 + a3[14], a2 + a3[14], v6);
  v7(a1 + a3[15], a2 + a3[15], v6);
  v7(a1 + a3[16], a2 + a3[16], v6);
  v7(a1 + a3[17], a2 + a3[17], v6);
  return a1;
}

uint64_t _s12ResourceURLsVwta_0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_260FE2F90();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v7(a1 + a3[12], a2 + a3[12], v6);
  v7(a1 + a3[13], a2 + a3[13], v6);
  v7(a1 + a3[14], a2 + a3[14], v6);
  v7(a1 + a3[15], a2 + a3[15], v6);
  v7(a1 + a3[16], a2 + a3[16], v6);
  v7(a1 + a3[17], a2 + a3[17], v6);
  return a1;
}

uint64_t _s12ResourceURLsVwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260F6BE88);
}

uint64_t sub_260F6BE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s12ResourceURLsVwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260F6BF08);
}

uint64_t sub_260F6BF08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_260F6BF78()
{
  uint64_t result = sub_260FE2F90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_260F6C01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double TextEncoder.init(tokenizer:modelAt:configuration:)@<D0>(long long *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _OWORD *a4@<X8>)
{
  sub_260F6D33C(a1, a2, a3, (uint64_t)v9);
  long long v5 = v9[3];
  a4[2] = v9[2];
  a4[3] = v5;
  long long v6 = v9[5];
  a4[4] = v9[4];
  a4[5] = v6;
  double result = *(double *)v9;
  long long v8 = v9[1];
  *a4 = v9[0];
  a4[1] = v8;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> TextEncoder.loadResources()()
{
}

Swift::Void __swiftcall TextEncoder.unloadResources()()
{
}

uint64_t TextEncoder.encode(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_260F6C4C0();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(v4 + 8 * v5 + 24);
    swift_bridgeObjectRelease();
    uint64_t v7 = BPETokenizer.tokenize(input:minCount:)(a1, v6, 0);
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 + 16);
    if (v6 >= v10)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      sub_260F6CBBC(v9, a2);
      return swift_bridgeObjectRelease();
    }
    uint64_t v11 = *(void *)(v7 + 16);
    if (__OFSUB__(v11, v6))
    {
      __break(1u);
    }
    else
    {
      sub_260F6C738(v11 - v6, v7);
      if (!__OFSUB__(v10, v6))
      {
        uint64_t v15 = sub_260F6C990(v10 - v6, v9);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
        sub_260D90340((unint64_t *)&qword_26A8E66E0, &qword_26A8E66D8);
        sub_260FE3F90();
        uint64_t v12 = MEMORY[0x263F8D310];
        sub_260FE42F0();
        sub_260D86D20();
        sub_260FE4B30();
        swift_bridgeObjectRelease();
        sub_260FE4B30();
        swift_bridgeObjectRelease();
        sub_260FE4B30();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F10);
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_260FE7080;
        sub_260FE4C20();
        sub_260FE4250();
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        sub_260FE5130();
        sub_260FE4250();
        sub_260FE4250();
        swift_bridgeObjectRelease();
        sub_260FE4250();
        *(void *)(v13 + 56) = v12;
        uint64_t v9 = v15;
        *(void *)(v13 + 32) = 0;
        *(void *)(v13 + 40) = 0xE000000000000000;
        sub_260FE52E0();
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_260F6C4C0()
{
  unint64_t v1 = *(void **)(*(void *)(v0 + 80) + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
  sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
  id v2 = v1;
  sub_260FE4900();

  id v3 = objc_msgSend(v15, sel_multiArrayConstraint);
  if (!v3) {
    goto LABEL_17;
  }
  id v4 = objc_msgSend(v3, sel_shape);

  sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
  unint64_t v5 = sub_260FE4400();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_260FE4E40();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_14;
  }
LABEL_4:
  uint64_t v16 = (void *)MEMORY[0x263F8EE78];
  sub_260DB4728(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = 0;
    uint64_t v8 = v16;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x26122B4C0](v7, v5);
      }
      else {
        id v9 = *(id *)(v5 + 8 * v7 + 32);
      }
      uint64_t v10 = v9;
      id v11 = objc_msgSend(v9, sel_integerValue);

      unint64_t v13 = v16[2];
      unint64_t v12 = v16[3];
      if (v13 >= v12 >> 1) {
        sub_260DB4728(v12 > 1, v13 + 1, 1);
      }
      ++v7;
      v16[2] = v13 + 1;
      v16[v13 + 4] = v11;
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_260F6C738(uint64_t result, uint64_t a2)
{
  if (result < 0) {
    goto LABEL_30;
  }
  uint64_t v2 = a2;
  if (!result) {
    return v2;
  }
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    return v8;
  }
  unint64_t v4 = 0;
  unint64_t v5 = 0;
  uint64_t v6 = (uint64_t *)(a2 + 40);
  uint64_t v25 = v3 - 1;
  uint64_t v7 = MEMORY[0x263F8EE78];
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v24 = result;
  do
  {
    uint64_t v14 = *(v6 - 1);
    uint64_t v13 = *v6;
    uint64_t v15 = *(void *)(v7 + 16);
    if (v15 < result)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_260DB45C4(0, v15 + 1, 1);
      }
      unint64_t v10 = *(void *)(v7 + 16);
      unint64_t v9 = *(void *)(v7 + 24);
      if (v10 >= v9 >> 1) {
        sub_260DB45C4(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v7 + 16) = v10 + 1;
      uint64_t v11 = v7 + 16 * v10;
      *(void *)(v11 + 32) = v14;
      *(void *)(v11 + 40) = v13;
      uint64_t result = v24;
      uint64_t v12 = a2;
LABEL_8:
      if (v25 == v4) {
        goto LABEL_25;
      }
      goto LABEL_9;
    }
    if (v5 >= v15) {
      goto LABEL_28;
    }
    uint64_t v23 = *(v6 - 1);
    uint64_t v16 = v7 + 16 * v5;
    uint64_t v17 = *(void *)(v16 + 32);
    uint64_t v18 = *(void *)(v16 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_260DB45C4(0, *(void *)(v8 + 16) + 1, 1);
    }
    unint64_t v20 = *(void *)(v8 + 16);
    unint64_t v19 = *(void *)(v8 + 24);
    if (v20 >= v19 >> 1) {
      sub_260DB45C4(v19 > 1, v20 + 1, 1);
    }
    *(void *)(v8 + 16) = v20 + 1;
    uint64_t v21 = v8 + 16 * v20;
    *(void *)(v21 + 32) = v17;
    *(void *)(v21 + 40) = v18;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_260FBBAB0(v7);
      uint64_t v7 = result;
    }
    uint64_t v12 = a2;
    if (v5 >= *(void *)(v7 + 16)) {
      goto LABEL_29;
    }
    uint64_t v22 = v7 + 16 * v5;
    swift_bridgeObjectRelease();
    uint64_t result = v24;
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 40) = v13;
    if ((uint64_t)++v5 < v24) {
      goto LABEL_8;
    }
    if (v25 == v4) {
      goto LABEL_25;
    }
    unint64_t v5 = 0;
LABEL_9:
    ++v4;
    v6 += 2;
  }
  while (v4 < *(void *)(v12 + 16));
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_260F6C990(uint64_t result, uint64_t a2)
{
  if (result < 0) {
    goto LABEL_30;
  }
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (!result) {
    return v2;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    return v9;
  }
  unint64_t v5 = 0;
  unint64_t v6 = 0;
  uint64_t v7 = a2 + 32;
  uint64_t v20 = v4 - 1;
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v18 = result;
  uint64_t v19 = a2 + 32;
  do
  {
    uint64_t v12 = *(void *)(v7 + 8 * v5);
    uint64_t v13 = *(void *)(v8 + 16);
    if (v13 < v3)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_260DB4728(0, v13 + 1, 1);
        uint64_t v7 = v19;
      }
      unint64_t v11 = *(void *)(v8 + 16);
      unint64_t v10 = *(void *)(v8 + 24);
      if (v11 >= v10 >> 1)
      {
        uint64_t result = sub_260DB4728(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v19;
      }
      *(void *)(v8 + 16) = v11 + 1;
      *(void *)(v8 + 8 * v11 + 32) = v12;
LABEL_8:
      if (v20 == v5) {
        goto LABEL_25;
      }
      goto LABEL_9;
    }
    if (v6 >= v13) {
      goto LABEL_28;
    }
    uint64_t v14 = v2;
    uint64_t v15 = *(void *)(v8 + 8 * v6 + 32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_260DB4728(0, *(void *)(v9 + 16) + 1, 1);
      uint64_t v7 = v19;
    }
    unint64_t v17 = *(void *)(v9 + 16);
    unint64_t v16 = *(void *)(v9 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_260DB4728(v16 > 1, v17 + 1, 1);
      uint64_t v7 = v19;
    }
    *(void *)(v9 + 16) = v17 + 1;
    *(void *)(v9 + 8 * v17 + 32) = v15;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_260FBBAC4(v8);
      uint64_t v8 = result;
    }
    uint64_t v2 = v14;
    uint64_t v3 = v18;
    if (v6 >= *(void *)(v8 + 16)) {
      goto LABEL_29;
    }
    *(void *)(v8 + 8 * v6++ + 32) = v12;
    if ((uint64_t)v6 < v18) {
      goto LABEL_8;
    }
    if (v20 == v5) {
      goto LABEL_25;
    }
    unint64_t v6 = 0;
LABEL_9:
    ++v5;
  }
  while (v5 < *(void *)(v2 + 16));
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_260F6CBBC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v52 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50, v6);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v51 = (char *)&v45 - v11;
  uint64_t v12 = *(void *)(v2 + 80);
  uint64_t v13 = OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue;
  uint64_t v14 = *(void **)(v12 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
  uint64_t v53 = v12;
  uint64_t v54 = sub_260F6D208;
  uint64_t v55 = 0;
  sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
  id v15 = v14;
  sub_260FE4900();
  if (!v3)
  {
    uint64_t v48 = 0;
    uint64_t v49 = v13;
    uint64_t v47 = a2;

    unint64_t v16 = v56;
    id v17 = objc_msgSend(v56, sel_name);

    uint64_t v18 = sub_260FE40A0();
    uint64_t v20 = v19;

    sub_260F6C4C0();
    int64_t v21 = *(void *)(a1 + 16);
    uint64_t v22 = (unint64_t *)MEMORY[0x263F8EE78];
    if (v21)
    {
      uint64_t v45 = v20;
      uint64_t v46 = v18;
      uint64_t v56 = (unint64_t *)MEMORY[0x263F8EE78];
      sub_260F63828(0, v21, 0);
      uint64_t v22 = v56;
      uint64_t v23 = (uint64_t *)(a1 + 32);
      unint64_t v24 = v56[2];
      do
      {
        uint64_t v26 = *v23++;
        uint64_t v25 = v26;
        uint64_t v56 = v22;
        unint64_t v27 = v22[3];
        if (v24 >= v27 >> 1)
        {
          sub_260F63828(v27 > 1, v24 + 1, 1);
          uint64_t v22 = v56;
        }
        v22[2] = v24 + 1;
        *((float *)v22 + v24++ + 8) = (float)v25;
        --v21;
      }
      while (v21);
      uint64_t v18 = v46;
      uint64_t v20 = v45;
    }
    uint64_t v56 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
    sub_260D90340(&qword_26A8EABD0, &qword_26A8EABC8);
    uint64_t v28 = v51;
    sub_260FE3B30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_260FE7080;
    *(void *)(inited + 32) = v18;
    *(void *)(inited + 40) = v20;
    uint64_t v30 = sub_260D905B0(0, &qword_26A8EABD8);
    uint64_t v31 = v50;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v8, v28, v50);
    sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
    uint64_t v32 = sub_260FE4860();
    *(void *)(inited + 72) = v30;
    *(void *)(inited + 48) = v32;
    sub_260DAAF10(inited);
    id v33 = objc_allocWithZone(MEMORY[0x263F00D38]);
    uint64_t v34 = v48;
    id v35 = sub_260FBB9C8();
    if (v34) {
      goto LABEL_15;
    }
    uint64_t v37 = v35;
    MEMORY[0x270FA5388](v35, v36);
    *(&v45 - 2) = v38;
    MEMORY[0x270FA5388](v38, v39);
    *(&v45 - 4) = v12;
    *(&v45 - 3) = (uint64_t)sub_260F6DA44;
    *(&v45 - 2) = v40;
    id v42 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
    sub_260FE4900();

    uint64_t v43 = v56;
    id v15 = (id)sub_260FE4070();
    id v44 = objc_msgSend(v43, sel_featureValueForName_, v15);

    if (v44)
    {
      if (objc_msgSend(v44, sel_multiArrayValue))
      {
        sub_260FE3BB0();

        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v31);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }

  swift_unexpectedError();
  __break(1u);
LABEL_15:
  swift_unexpectedError();
  __break(1u);
}

id sub_260F6D150@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  v8[1] = *(id *)MEMORY[0x263EF8340];
  v8[0] = 0;
  id v4 = objc_msgSend(a1, sel_predictionFromFeatures_error_, a2, v8);
  id v5 = v8[0];
  if (v4)
  {
    *a3 = v4;
    return v5;
  }
  else
  {
    id v7 = v8[0];
    sub_260FE2E30();

    return (id)swift_willThrow();
  }
}

uint64_t sub_260F6D208@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_modelDescription);
  id v4 = objc_msgSend(v3, sel_inputDescriptionsByName);

  sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
  uint64_t v5 = sub_260FE3EB0();

  sub_260F81324(v5);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_260F6D2DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TextEncoder.encode(_:)(a1, a2);
}

void sub_260F6D2F4()
{
}

void sub_260F6D318()
{
}

__n128 sub_260F6D33C@<Q0>(long long *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v34 = a2;
  id v35 = a3;
  uint64_t v33 = sub_260FE2F90();
  uint64_t v6 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33, v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v32 = sub_260D905B0(0, &qword_26A8EAA30);
  uint64_t v10 = sub_260FE3E70();
  MEMORY[0x270FA5388](v10 - 8, v11);
  sub_260FE3E60();
  uint64_t v12 = sub_260FE48E0();
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v36 = MEMORY[0x263F8EE78];
  sub_260F64EE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAA40);
  sub_260D90340(&qword_26A8EAA48, &qword_26A8EAA40);
  sub_260FE4B70();
  uint64_t v14 = sub_260FE48F0();
  MEMORY[0x270FA5388](v14, v15);
  (*(void (**)(char *, void))(v17 + 104))((char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F8F128]);
  uint64_t v18 = sub_260FE4920();
  long long v19 = a1[2];
  __n128 v31 = (__n128)a1[3];
  long long v32 = v19;
  uint64_t v20 = *((void *)a1 + 8);
  uint64_t v21 = *((void *)a1 + 9);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  long long v23 = a1[1];
  long long v29 = *a1;
  long long v30 = v23;
  uint64_t v25 = v33;
  uint64_t v24 = v34;
  v22(v9, v34, v33);
  type metadata accessor for ManagedMLModel();
  swift_allocObject();
  uint64_t v26 = ManagedMLModel.init(modelAt:configuration:name:)(v9, v35, (uint64_t)"TextEncoder", 11, 2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v24, v25);
  long long v27 = v30;
  *(_OWORD *)a4 = v29;
  *(_OWORD *)(a4 + 16) = v27;
  __n128 result = v31;
  *(_OWORD *)(a4 + 32) = v32;
  *(__n128 *)(a4 + 48) = result;
  *(void *)(a4 + 64) = v20;
  *(void *)(a4 + 72) = v21;
  *(void *)(a4 + 80) = v26;
  *(void *)(a4 + 88) = v18;
  return result;
}

void destroy for TextEncoder(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 88);
}

void *initializeWithCopy for TextEncoder(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = (void *)a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v9 = v8;
  return a1;
}

void *assignWithCopy for TextEncoder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[11];
  uint64_t v5 = (void *)a1[11];
  a1[11] = v4;
  id v6 = v4;

  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for TextEncoder(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  uint64_t v7 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);

  return a1;
}

uint64_t getEnumTagSinglePayload for TextEncoder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextEncoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextEncoder()
{
  return &type metadata for TextEncoder;
}

void sub_260F6DA24(void *a1@<X8>)
{
  sub_260F8CC2C(*(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24), *(void *)(v1 + 32), a1);
}

id sub_260F6DA44@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_260F6D150(a1, *(void *)(v2 + 16), a2);
}

void sub_260F6DA60(void *a1@<X8>)
{
}

uint64_t sub_260F6DA78(uint64_t result, uint64_t a2)
{
  uint64_t v2 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (!v2) {
      return v3;
    }
    uint64_t v5 = result;
    uint64_t v9 = MEMORY[0x263F8EE78];
    __n128 result = sub_260F637E8(0, v2 & ~(v2 >> 63), 0);
    if (a2 >= v5 && (v2 & 0x8000000000000000) == 0)
    {
      uint64_t v3 = v9;
      do
      {
        int v6 = sub_260F6DD30();
        unint64_t v8 = *(void *)(v9 + 16);
        unint64_t v7 = *(void *)(v9 + 24);
        if (v8 >= v7 >> 1) {
          sub_260F637E8(v7 > 1, v8 + 1, 1);
        }
        *(void *)(v9 + 16) = v8 + 1;
        *(double *)(v9 + 8 * v8 + 32) = (float)((float)(v6 & 0xFFFFFF) * 0.000000059605);
        --v2;
      }
      while (v2);
      return v3;
    }
  }
  __break(1u);
  return result;
}

void sub_260F6DB88(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if (!v5) {
    return;
  }
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_260F637E8(0, v5 & ~(v5 >> 63), 0);
  if (a2 < a1 || v5 < 0)
  {
LABEL_13:
    __break(1u);
    return;
  }
  do
  {
    char v11 = *(unsigned char *)(a3 + 24);
    if (v11)
    {
      int v12 = sub_260F6DD30();
      double v13 = (double)(sub_260F6DD30() | ((*(void *)&v12 & 0x1FFFFFuLL) << 32)) * 1.11022302e-16;
      int v14 = sub_260F6DD30();
      unsigned int v15 = sub_260F6DD30();
      double v16 = sqrt(log(1.0 - (double)(v15 | ((*(void *)&v14 & 0x1FFFFFuLL) << 32)) * 1.11022302e-16) * -2.0);
      __double2 v17 = __sincos_stret(v13 * 6.28318531);
      double v18 = v16 * v17.__sinval;
      double v19 = v16 * v17.__cosval;
    }
    else
    {
      double v19 = *(double *)(a3 + 16);
      double v18 = 0.0;
    }
    *(double *)(a3 + 16) = v18;
    *(unsigned char *)(a3 + 24) = v11 ^ 1;
    unint64_t v21 = *(void *)(v22 + 16);
    unint64_t v20 = *(void *)(v22 + 24);
    if (v21 >= v20 >> 1) {
      sub_260F637E8(v20 > 1, v21 + 1, 1);
    }
    *(void *)(v22 + 16) = v21 + 1;
    *(double *)(v22 + 8 * v21 + 32) = v19 * a5 + a4;
    --v5;
  }
  while (v5);
}

uint64_t sub_260F6DD30()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = (char *)*((void *)*v0 + 2);
  if (v1 == v3)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_49;
    }
    while (1)
    {
      unint64_t v4 = *((void *)v2 + 2);
      if (v4 <= 1) {
        uint64_t v5 = 1;
      }
      else {
        uint64_t v5 = *((void *)v2 + 2);
      }
      unint64_t v6 = v5 - 1;
      if (v4 < v6) {
        unint64_t v6 = *((void *)v2 + 2);
      }
      uint64_t v7 = 397;
      if (v4 > 0x18D) {
        uint64_t v7 = *((void *)v2 + 2);
      }
      unint64_t v8 = v7 - 397;
      if (v6 >= v8) {
        unint64_t v6 = v8;
      }
      if (v6 >= 0xE2) {
        unint64_t v6 = 226;
      }
      if (v6 >= 4)
      {
        unint64_t v14 = v6 + 1;
        uint64_t v15 = v14 & 3;
        if ((v14 & 3) == 0) {
          uint64_t v15 = 4;
        }
        unint64_t v9 = v14 - v15;
        int8x16_t v16 = (int8x16_t)vdupq_n_s32(0x7FFFFFFEu);
        v17.i64[0] = 0x8000000080000000;
        v17.i64[1] = 0x8000000080000000;
        v18.i64[0] = 0x100000001;
        v18.i64[1] = 0x100000001;
        int8x16_t v19 = (int8x16_t)vdupq_n_s32(0x9908B0DF);
        unint64_t v20 = v9;
        unint64_t v21 = v2;
        do
        {
          *((int8x16_t *)v21 + 2) = veorq_s8(veorq_s8(vbicq_s8(v19, (int8x16_t)vceqzq_s32((int32x4_t)vandq_s8(*(int8x16_t *)(v21 + 36), v18))), *(int8x16_t *)(v21 + 1620)), (int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(*(int8x16_t *)(v21 + 36), v16), vandq_s8(*((int8x16_t *)v21 + 2), v17)), 1uLL));
          v21 += 16;
          v20 -= 4;
        }
        while (v20);
      }
      else
      {
        unint64_t v9 = 0;
      }
      do
      {
        if (v9 >= v4) {
          goto LABEL_43;
        }
        if (v9 + 1 >= v4) {
          goto LABEL_44;
        }
        unint64_t v22 = v9 + 397;
        if (v9 + 397 >= v4) {
          goto LABEL_45;
        }
        long long v23 = &v2[4 * v9];
        *((_DWORD *)v23 + 8) = ((int)(*((_DWORD *)v23 + 9) << 31) >> 31) & 0x9908B0DF ^ ((*((_DWORD *)v23 + 9) & 0x7FFFFFFE | *((_DWORD *)v23 + 8) & 0x80000000) >> 1) ^ *((_DWORD *)v23 + 405);
        ++v9;
      }
      while (v22 != 623);
      unint64_t v24 = v4 - 227;
      if (v4 - 227 >= v4 - 228) {
        unint64_t v24 = v4 - 228;
      }
      if (v24 >= 0x18B) {
        unint64_t v24 = 395;
      }
      if (v24 >= 4)
      {
        unint64_t v26 = v24 + 1;
        uint64_t v27 = v26 & 3;
        if ((v26 & 3) == 0) {
          uint64_t v27 = 4;
        }
        unint64_t v28 = v26 - v27;
        unint64_t v25 = v28 + 227;
        long long v29 = v2 + 940;
        v30.i64[0] = 0x8000000080000000;
        v30.i64[1] = 0x8000000080000000;
        int8x16_t v31 = (int8x16_t)vdupq_n_s32(0x7FFFFFFEu);
        v32.i64[0] = 0x100000001;
        v32.i64[1] = 0x100000001;
        int8x16_t v33 = (int8x16_t)vdupq_n_s32(0x9908B0DF);
        do
        {
          *(int8x16_t *)long long v29 = veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(*(int8x16_t *)(v29 + 4), v31), vandq_s8(*(int8x16_t *)v29, v30)), 1uLL), veorq_s8(*(int8x16_t *)(v29 - 908), vbicq_s8(v33, (int8x16_t)vceqzq_s32((int32x4_t)vandq_s8(*(int8x16_t *)(v29 + 4), v32)))));
          v29 += 16;
          v28 -= 4;
        }
        while (v28);
      }
      else
      {
        unint64_t v25 = 227;
      }
      uint64_t v34 = &v2[4 * v25 - 876];
      do
      {
        if (v25 >= v4) {
          goto LABEL_46;
        }
        if (++v25 >= v4) {
          goto LABEL_47;
        }
        *((_DWORD *)v34 + 227) = *(_DWORD *)v34 ^ ((*((_DWORD *)v34 + 228) & 0x7FFFFFFE | *((_DWORD *)v34 + 227) & 0x80000000) >> 1) ^ ((int)(*((_DWORD *)v34 + 228) << 31) >> 31) & 0x9908B0DF;
        v34 += 4;
      }
      while (v25 != 623);
      uint64_t v1 = 0;
      *((_DWORD *)v2 + 631) = *((_DWORD *)v2 + 404) ^ ((*((_DWORD *)v2 + 8) & 0x7FFFFFFE | *((_DWORD *)v2 + 631) & 0x80000000) >> 1) ^ ((int)(*((_DWORD *)v2 + 8) << 31) >> 31) & 0x9908B0DF;
      *uint64_t v0 = v2;
      if (*((void *)v2 + 2)) {
        break;
      }
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      uint64_t v2 = sub_260F7B440((uint64_t)v2);
    }
  }
  else
  {
    if (((unint64_t)v1 & 0x8000000000000000) != 0) {
      goto LABEL_48;
    }
    if (v1 >= v3) {
      goto LABEL_42;
    }
  }
  uint64_t v10 = v1 + 1;
  unsigned int v11 = *(_DWORD *)&v2[4 * (void)v1 + 32];
  v0[1] = v10;
  unsigned int v12 = ((v11 ^ (v11 >> 11)) << 7) & 0x9D2C5680 ^ v11 ^ (v11 >> 11);
  return (v12 << 15) & 0xEFC60000 ^ v12 ^ (((v12 << 15) & 0xEFC60000 ^ v12) >> 18);
}

double sub_260F6E03C(double a1, double a2)
{
  char v5 = *(unsigned char *)(v2 + 24);
  if (v5)
  {
    int v6 = sub_260F6DD30();
    double v7 = (double)(sub_260F6DD30() | ((*(void *)&v6 & 0x1FFFFFuLL) << 32)) * 1.11022302e-16;
    int v8 = sub_260F6DD30();
    unsigned int v9 = sub_260F6DD30();
    double v10 = sqrt(log(1.0 - (double)(v9 | ((*(void *)&v8 & 0x1FFFFFuLL) << 32)) * 1.11022302e-16) * -2.0);
    __double2 v11 = __sincos_stret(v7 * 6.28318531);
    double v12 = v10 * v11.__sinval;
    double v13 = v10 * v11.__cosval;
  }
  else
  {
    double v13 = *(double *)(v2 + 16);
    double v12 = 0.0;
  }
  *(double *)(v2 + 16) = v12;
  *(unsigned char *)(v2 + 24) = v5 ^ 1;
  return v13 * a2 + a1;
}

void *sub_260F6E110(uint64_t a1, double a2, double a3)
{
  int64_t v7 = a1;
  uint64_t v8 = a1 - 16;
  if (a1 >= 16)
  {
    unint64_t v4 = (void *)sub_260F6DA78(0, a1);
    uint64_t v38 = v8;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_5;
    }
  }
  else
  {
    if ((a1 & 0x8000000000000000) == 0)
    {
      sub_260F6DB88(0, a1, v3, a2, a3);
      return (void *)v9;
    }
LABEL_40:
    __break(1u);
  }
  unint64_t v4 = sub_260F7B47C(v4);
LABEL_5:
  uint64_t v10 = 0;
  __double2 v11 = (double *)(v4 + 12);
  do
  {
    uint64_t v12 = 0;
    BOOL v13 = __OFADD__(v10, 16);
    unint64_t v14 = v11;
    do
    {
      unint64_t v15 = v4[2];
      if (v10 + v12 >= v15)
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      if (v10 + v12 + 8 >= v15) {
        goto LABEL_35;
      }
      ++v12;
      double v16 = *v14;
      double v17 = log(1.0 - *(v14 - 8)) * -2.0;
      double v18 = v16 * 6.28318531;
      double v19 = sqrt(v17);
      __double2 v20 = __sincos_stret(v18);
      *(v14 - 8) = v19 * v20.__cosval * a3 + a2;
      *v14++ = v19 * v20.__sinval * a3 + a2;
    }
    while (v12 != 8);
    char v21 = v10 + 16 >= v7 - 15 || v13;
    v11 += 16;
    v10 += 16;
  }
  while ((v21 & 1) == 0);
  if ((v7 & 0xF) != 0)
  {
    if (v7 >= (uint64_t)0x8000000000000010)
    {
      uint64_t v22 = 16;
      int64_t v23 = v7;
      while (1)
      {
        uint64_t v24 = sub_260F6DD30();
        unsigned int v25 = sub_260F6DD30();
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          if (v38 < 0) {
            goto LABEL_26;
          }
        }
        else
        {
          unint64_t v4 = sub_260F7B47C(v4);
          if (v38 < 0)
          {
LABEL_26:
            __break(1u);
LABEL_27:
            if (swift_isUniquelyReferenced_nonNull_native())
            {
LABEL_28:
              unint64_t v26 = v4 + 4;
              uint64_t v27 = 8;
              while (1)
              {
                unint64_t v28 = v4[2];
                if (v7 - 16 >= v28) {
                  goto LABEL_37;
                }
                unint64_t v29 = v7 - 8;
                if (__OFADD__(v7 - 16, 8)) {
                  goto LABEL_38;
                }
                if (v29 >= v28) {
                  goto LABEL_39;
                }
                int8x16_t v30 = (double *)&v4[v7];
                uint64_t v31 = v29;
                double v32 = *(double *)&v26[v29];
                double v33 = log(1.0 - *(v30 - 12)) * -2.0;
                double v34 = v32 * 6.28318531;
                double v35 = sqrt(v33);
                __double2 v36 = __sincos_stret(v34);
                *(v30 - 12) = v35 * v36.__cosval * a3 + a2;
                *(double *)&v26[v31] = v35 * v36.__sinval * a3 + a2;
                ++v7;
                if (!--v27) {
                  return v4;
                }
              }
            }
LABEL_43:
            unint64_t v4 = sub_260F7B47C(v4);
            goto LABEL_28;
          }
        }
        if ((unint64_t)(v23 - 16) >= v4[2]) {
          goto LABEL_36;
        }
        *(double *)&v4[v23++ - 12] = (double)((v24 << 32) & 0x1FFFFF00000000 | (unint64_t)v25) * 1.11022302e-16;
        if (!--v22) {
          goto LABEL_27;
        }
      }
    }
    __break(1u);
    goto LABEL_43;
  }
  return v4;
}

uint64_t sub_260F6E3F4(uint64_t a1, double a2, double a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    unint64_t v4 = (uint64_t *)(a1 + 32);
    uint64_t v5 = 1;
    while (1)
    {
      uint64_t v6 = *v4++;
      uint64_t result = v5 * v6;
      if ((unsigned __int128)(v5 * (__int128)v6) >> 64 != (v5 * v6) >> 63) {
        break;
      }
      uint64_t v5 = result;
      if (!--v3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t result = 1;
LABEL_7:
    sub_260F6E110(result, a2, a3);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC98);
    sub_260F6E59C();
    return sub_260FE3B30();
  }
  return result;
}

unint64_t sub_260F6E4B0()
{
  uint64_t v0 = sub_260F6DD30();
  return sub_260F6DD30() | (unint64_t)(v0 << 32);
}

uint64_t sub_260F6E4E8(unsigned int a1)
{
  uint64_t v2 = sub_260FE4460();
  *(void *)(v2 + 16) = 624;
  bzero((void *)(v2 + 32), 0x9C0uLL);
  uint64_t v3 = 0;
  for (uint64_t i = 32; i != 2528; i += 4)
  {
    int v5 = v3++ + 1812433253 * (a1 ^ (a1 >> 30));
    *(_DWORD *)(v2 + i) = a1;
    a1 = v5 + 1;
  }
  return v2;
}

ValueMetadata *type metadata accessor for TorchRandomSource()
{
  return &type metadata for TorchRandomSource;
}

unint64_t sub_260F6E59C()
{
  unint64_t result = qword_26A8EACA0;
  if (!qword_26A8EACA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8EAC98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EACA0);
  }
  return result;
}

uint64_t _s13DiffusionBase17TorchRandomSourceV5StateVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13DiffusionBase17TorchRandomSourceV5StateVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t _s13DiffusionBase17TorchRandomSourceV5StateVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t _s13DiffusionBase17TorchRandomSourceV5StateVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_260F6E728(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TorchRandomSource.State()
{
  return &type metadata for TorchRandomSource.State;
}

void sub_260F6E780(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1)) {
    goto LABEL_17;
  }
  if (v5)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_260F637E8(0, v5 & ~(v5 >> 63), 0);
    if (a2 < a1 || v5 < 0) {
      goto LABEL_18;
    }
    uint64_t v11 = 0;
    while (v11 != v5)
    {
      if (*(unsigned char *)(a3 + 24) == 1)
      {
        do
        {
          do
          {
            double v12 = (double)(sub_260F6DD30() >> 5);
            unsigned int v13 = sub_260F6DD30();
            double v14 = (v12 * 67108864.0 + (double)(v13 >> 6)) * 1.11022302e-16
                + (v12 * 67108864.0 + (double)(v13 >> 6)) * 1.11022302e-16
                + -1.0;
            double v15 = (double)(sub_260F6DD30() >> 5);
            unsigned int v16 = sub_260F6DD30();
            double v17 = (v15 * 67108864.0 + (double)(v16 >> 6)) * 1.11022302e-16
                + (v15 * 67108864.0 + (double)(v16 >> 6)) * 1.11022302e-16
                + -1.0;
            double v18 = v14 * v14 + v17 * v17;
          }
          while (v18 >= 1.0);
        }
        while (v18 == 0.0);
        double v19 = sqrt(log(v14 * v14 + v17 * v17) * -2.0 / v18);
        *(double *)(a3 + 16) = v14 * v19;
        *(unsigned char *)(a3 + 24) = 0;
        double v20 = v17 * v19;
      }
      else
      {
        double v20 = *(double *)(a3 + 16);
        *(void *)(a3 + 16) = 0;
        *(unsigned char *)(a3 + 24) = 1;
      }
      unint64_t v22 = *(void *)(v23 + 16);
      unint64_t v21 = *(void *)(v23 + 24);
      if (v22 >= v21 >> 1) {
        sub_260F637E8(v21 > 1, v22 + 1, 1);
      }
      ++v11;
      *(void *)(v23 + 16) = v22 + 1;
      *(double *)(v23 + 8 * v22 + 32) = v20 * a5 + a4;
      if (v11 == v5) {
        return;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
}

void sub_260F6E990()
{
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    do
    {
      do
      {
        double v1 = (double)(sub_260F6DD30() >> 5);
        unsigned int v2 = sub_260F6DD30();
        double v3 = (v1 * 67108864.0 + (double)(v2 >> 6)) * 1.11022302e-16
           + (v1 * 67108864.0 + (double)(v2 >> 6)) * 1.11022302e-16
           + -1.0;
        double v4 = (double)(sub_260F6DD30() >> 5);
        unsigned int v5 = sub_260F6DD30();
        double v6 = (v4 * 67108864.0 + (double)(v5 >> 6)) * 1.11022302e-16
           + (v4 * 67108864.0 + (double)(v5 >> 6)) * 1.11022302e-16
           + -1.0;
        double v7 = v3 * v3 + v6 * v6;
      }
      while (v7 >= 1.0);
    }
    while (v7 == 0.0);
    *(double *)(v0 + 16) = v3 * sqrt(log(v3 * v3 + v6 * v6) * -2.0 / v7);
    *(unsigned char *)(v0 + 24) = 0;
  }
  else
  {
    *(void *)(v0 + 16) = 0;
    *(unsigned char *)(v0 + 24) = 1;
  }
}

uint64_t sub_260F6EAA0(uint64_t result, double a2, double a3)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    unsigned int v5 = (uint64_t *)(result + 32);
    uint64_t v6 = 1;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v8 = v6 * v7;
      if ((unsigned __int128)(v6 * (__int128)v7) >> 64 != (v6 * v7) >> 63)
      {
        __break(1u);
        return result;
      }
      uint64_t v6 = v8;
      --v4;
    }
    while (v4);
    if ((v8 & 0x8000000000000000) == 0) {
      goto LABEL_8;
    }
    __break(1u);
  }
  uint64_t v6 = 1;
LABEL_8:
  sub_260F6E780(0, v6, v3, a2, a3);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC98);
  sub_260F6E59C();
  return sub_260FE3B30();
}

unint64_t sub_260F6EB70()
{
  unsigned int v0 = sub_260F6DD30();
  return v0 | (unint64_t)(sub_260F6DD30() << 32);
}

double sub_260F6EBA0(double a1, double a2)
{
  sub_260F6E990();
  return v4 * a2 + a1;
}

ValueMetadata *type metadata accessor for NumPyRandomSource()
{
  return &type metadata for NumPyRandomSource;
}

ValueMetadata *type metadata accessor for NumPyRandomSource.State()
{
  return &type metadata for NumPyRandomSource.State;
}

uint64_t sub_260F6EBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(void), void (*a6)(void))
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = a2;
  sub_260F73BB4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v16, a4, a5, a6);
  uint64_t v14 = v16;
  swift_bridgeObjectRelease();
  if (v6) {
    swift_bridgeObjectRelease();
  }
  return v14;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppleDiffusionUnet.loadResources()()
{
  unint64_t v2 = *(void *)(v0 + 200);
  if (v2 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_260FE4E40();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      unint64_t v4 = v2 & 0xC000000000000001;
      uint64_t v5 = 4;
      uint64_t v6 = &unk_26A8EA000;
      uint64_t v20 = v3;
      do
      {
        uint64_t v7 = v5 - 4;
        if (v4)
        {
          uint64_t v8 = MEMORY[0x26122B4C0](v5 - 4, v2);
          uint64_t v9 = v5 - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(v2 + 8 * v5);
          swift_retain();
          uint64_t v9 = v5 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        uint64_t v21 = v9;
        if (v6[291] != -1) {
          swift_once();
        }
        uint64_t v10 = sub_260FE3A10();
        __swift_project_value_buffer(v10, (uint64_t)qword_26A90FC00);
        swift_retain_n();
        uint64_t v11 = sub_260FE39F0();
        os_log_type_t v12 = sub_260FE4880();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          uint64_t v14 = swift_slowAlloc();
          uint64_t v22 = v14;
          *(_DWORD *)uint64_t v13 = 136446210;
          uint64_t v15 = sub_260FE4C50();
          *(void *)(v13 + 4) = sub_260DB2844(v15, v16, &v22);
          swift_release_n();
          uint64_t v3 = v20;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_260D82000, v11, v12, "Loading resources for %{public}s", (uint8_t *)v13, 0xCu);
          swift_arrayDestroy();
          uint64_t v17 = v14;
          uint64_t v6 = (void *)&unk_26A8EA000;
          MEMORY[0x26122CA00](v17, -1, -1);
          uint64_t v18 = v13;
          unint64_t v4 = v2 & 0xC000000000000001;
          MEMORY[0x26122CA00](v18, -1, -1);
        }
        else
        {

          swift_release_n();
        }
        id v19 = *(id *)(v8 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
        sub_260FE4900();
        swift_release();
        if (v1)
        {
          swift_bridgeObjectRelease();

          return;
        }

        ++v5;
      }
      while (v21 != v3);
    }
  }
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall AppleDiffusionUnet.unloadResources()()
{
  unint64_t v1 = *(void *)(v0 + 200);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_260FE4E40();
    if (!v2) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_10;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      MEMORY[0x26122B4C0](i, v1);
    }
    else {
      swift_retain();
    }
    ManagedMLModel.unloadResources()();
    swift_release();
  }
LABEL_10:
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppleDiffusionUnet.prewarmResources()()
{
  unint64_t v1 = *(void *)(v0 + 200);
  if (v1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_260FE4E40();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      do
      {
        uint64_t v4 = v3 - 4;
        if ((v1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x26122B4C0](v3 - 4, v1);
          BOOL v5 = __OFADD__(v4, 1);
          uint64_t v6 = v3 - 3;
          if (v5) {
            goto LABEL_14;
          }
        }
        else
        {
          swift_retain();
          BOOL v5 = __OFADD__(v4, 1);
          uint64_t v6 = v3 - 3;
          if (v5)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        ManagedMLModel.loadResources()();
        if (v7)
        {
          swift_release();
          break;
        }
        ManagedMLModel.unloadResources()();
        swift_release();
        ++v3;
      }
      while (v6 != v2);
    }
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_260F6F168(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int64_t a6, uint64_t a7, unint64_t a8, float a9, void *a10, void *a11, uint64_t a12, char a13, char a14)
{
  unint64_t v15 = v14;
  unint64_t v210 = a8;
  uint64_t v202 = a5;
  uint64_t v197 = a4;
  uint64_t v206 = a3;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  int64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21, v23);
  uint64_t v25 = (uint64_t)&v196 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACE0);
  uint64_t v205 = *(void *)(v204 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v204, v26);
  unint64_t v29 = (char *)&v196 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27, v30);
  uint64_t v203 = (char *)&v196 - v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACE8);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_260FE7060;
  if (a2 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_157;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_158:
    __break(1u);
    goto LABEL_159;
  }
  unint64_t v198 = a1;
  *(_DWORD *)(v32 + 32) = a2;
  *(_DWORD *)(v32 + 36) = a2;
  unint64_t v212 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACF0);
  sub_260D90340(&qword_26A8EACF8, &qword_26A8EACF0);
  int64_t v207 = v22;
  uint64_t v199 = v21;
  uint64_t v33 = v25;
  double v34 = v203;
  sub_260FE3B30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE8E10;
  uint64_t v36 = *(void *)(v15 + 24);
  *(void *)(inited + 32) = *(void *)(v15 + 16);
  *(void *)(inited + 40) = v36;
  uint64_t v37 = sub_260D905B0(0, &qword_26A8EABD8);
  uint64_t v201 = a7;
  uint64_t v38 = v37;
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v205 + 16);
  int64_t v200 = a6;
  v39(v29, v34, v204);
  sub_260D90340(&qword_26A8EAD08, &qword_26A8EACE0);
  swift_bridgeObjectRetain();
  *(void *)(inited + 48) = sub_260FE4860();
  uint64_t v40 = *(void *)(v15 + 40);
  *(void *)(inited + 56) = *(void *)(v15 + 32);
  *(void *)(inited + 64) = v40;
  id v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 16);
  v207 += 16;
  uint64_t v42 = v33;
  uint64_t v43 = v33;
  uint64_t v44 = v199;
  v41(v43, v202, v199);
  uint64_t v45 = v38;
  uint64_t v25 = sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  swift_bridgeObjectRetain();
  *(void *)(inited + 72) = sub_260FE4860();
  uint64_t v46 = *(void *)(v15 + 56);
  *(void *)(inited + 80) = *(void *)(v15 + 48);
  *(void *)(inited + 88) = v46;
  v41(v42, v200, v44);
  swift_bridgeObjectRetain();
  *(void *)(inited + 96) = sub_260FE4860();
  uint64_t v47 = *(void *)(v15 + 64);
  a7 = *(void *)(v15 + 72);
  unint64_t v209 = v15;
  *(void *)(inited + 104) = v47;
  *(void *)(inited + 112) = a7;
  v41(v42, v201, v44);
  swift_bridgeObjectRetain();
  uint64_t v21 = v45;
  *(void *)(inited + 120) = sub_260FE4860();
  *(double *)&unint64_t v212 = COERCE_DOUBLE(sub_260F5B780(inited));
  int v48 = v206;
  if ((v206 & 0x100000000) != 0)
  {
    a6 = v209;
    a1 = v210;
  }
  else
  {
    a6 = v209;
    a1 = v210;
    if (*(unsigned char *)(v209 + 192) == 1)
    {
      uint64_t v49 = *(void *)(v209 + 128);
      a7 = *(void *)(v209 + 136);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB40);
      *(double *)&uint64_t v50 = COERCE_DOUBLE(swift_allocObject());
      *(_OWORD *)(v50 + 16) = xmmword_260FE7080;
      *(_DWORD *)(v50 + 32) = v48;
      double v211 = *(double *)&v50;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
      sub_260D90340(&qword_26A8EAD10, &qword_26A8EABC8);
      uint64_t v51 = v21;
      uint64_t v52 = v208;
      uint64_t v53 = sub_260FE4850();
      uint64_t v208 = v52;
      if (v52) {
        goto LABEL_130;
      }
      uint64_t v54 = v53;
      double v55 = *(double *)&v212;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v211 = v55;
      sub_260FC65FC(v54, v49, a7, isUniquelyReferenced_nonNull_native);
      *(double *)&unint64_t v212 = v211;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  if (*(unsigned char *)(a6 + 193) == 1)
  {
    uint64_t v57 = *(void *)(a6 + 144);
    a7 = *(void *)(a6 + 152);
    int v58 = v197;
    if ((v197 & 0x100000000) != 0)
    {
      double v211 = COERCE_DOUBLE(&unk_270D22670);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB40);
      *(double *)&uint64_t v59 = COERCE_DOUBLE(swift_allocObject());
      *(_OWORD *)(v59 + 16) = xmmword_260FE7080;
      *(_DWORD *)(v59 + 32) = v58;
      double v211 = *(double *)&v59;
    }
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
    sub_260D90340(&qword_26A8EAD10, &qword_26A8EABC8);
    uint64_t v51 = v21;
    uint64_t v60 = v208;
    uint64_t v61 = sub_260FE4850();
    uint64_t v208 = v60;
    if (v60) {
      goto LABEL_130;
    }
    uint64_t v62 = v61;
    double v63 = *(double *)&v212;
    char v64 = swift_isUniquelyReferenced_nonNull_native();
    double v211 = v63;
    sub_260FC65FC(v62, v57, a7, v64);
    *(double *)&unint64_t v212 = v211;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (!a1)
  {
    unint64_t v85 = *(void *)(a6 + 176);
    uint64_t v86 = *(void *)(v85 + 64);
    uint64_t v206 = v85 + 64;
    uint64_t v87 = 1 << *(unsigned char *)(v85 + 32);
    uint64_t v88 = -1;
    if (v87 < 64) {
      uint64_t v88 = ~(-1 << v87);
    }
    uint64_t v25 = v88 & v86;
    int64_t v207 = (unint64_t)(v87 + 63) >> 6;
    unint64_t v210 = v85;
    swift_bridgeObjectRetain();
    a6 = 0;
    while (1)
    {
      if (v25)
      {
        unint64_t v90 = __clz(__rbit64(v25));
        v25 &= v25 - 1;
        unint64_t v91 = v90 | (a6 << 6);
      }
      else
      {
        BOOL v83 = __OFADD__(a6++, 1);
        if (v83) {
          goto LABEL_153;
        }
        if (a6 >= v207)
        {
LABEL_71:
          a6 = v209;
          swift_release();
          goto LABEL_72;
        }
        unint64_t v92 = *(void *)(v206 + 8 * a6);
        if (!v92)
        {
          int64_t v93 = a6 + 1;
          if (a6 + 1 >= v207) {
            goto LABEL_71;
          }
          unint64_t v92 = *(void *)(v206 + 8 * v93);
          if (!v92)
          {
            int64_t v93 = a6 + 2;
            if (a6 + 2 >= v207) {
              goto LABEL_71;
            }
            unint64_t v92 = *(void *)(v206 + 8 * v93);
            if (!v92)
            {
              int64_t v93 = a6 + 3;
              if (a6 + 3 >= v207) {
                goto LABEL_71;
              }
              unint64_t v92 = *(void *)(v206 + 8 * v93);
              if (!v92)
              {
                while (1)
                {
                  a6 = v93 + 1;
                  if (__OFADD__(v93, 1)) {
                    goto LABEL_156;
                  }
                  if (a6 >= v207) {
                    goto LABEL_71;
                  }
                  unint64_t v92 = *(void *)(v206 + 8 * a6);
                  ++v93;
                  if (v92) {
                    goto LABEL_55;
                  }
                }
              }
            }
          }
          a6 = v93;
        }
LABEL_55:
        uint64_t v25 = (v92 - 1) & v92;
        unint64_t v91 = __clz(__rbit64(v92)) + (a6 << 6);
      }
      uint64_t v94 = (uint64_t *)(*(void *)(v210 + 48) + 16 * v91);
      uint64_t v95 = *v94;
      a7 = v94[1];
      id v96 = *(id *)(*(void *)(v210 + 56) + 8 * v91);
      swift_bridgeObjectRetain();
      a1 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v97 = v212;
      double v211 = *(double *)&v212;
      unint64_t v15 = sub_260DBACB4(v95, a7);
      uint64_t v99 = *(void *)(v97 + 16);
      BOOL v100 = (v98 & 1) == 0;
      uint64_t v101 = v99 + v100;
      if (__OFADD__(v99, v100))
      {
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
        goto LABEL_158;
      }
      uint64_t v21 = v98;
      if (*(void *)(v97 + 24) >= v101)
      {
        if (a1)
        {
          double v104 = v211;
          if (v98) {
            goto LABEL_41;
          }
        }
        else
        {
          sub_260FC470C();
          double v104 = v211;
          if (v21) {
            goto LABEL_41;
          }
        }
      }
      else
      {
        sub_260FC0D64(v101, a1);
        unint64_t v102 = sub_260DBACB4(v95, a7);
        if ((v21 & 1) != (v103 & 1)) {
          goto LABEL_165;
        }
        unint64_t v15 = v102;
        double v104 = v211;
        if (v21)
        {
LABEL_41:
          uint64_t v89 = *(void *)(*(void *)&v104 + 56);
          a1 = 8 * v15;

          *(void *)(v89 + 8 * v15) = v96;
          goto LABEL_42;
        }
      }
      *(void *)(*(void *)&v104 + 8 * (v15 >> 6) + 64) |= 1 << v15;
      uint64_t v105 = (uint64_t *)(*(void *)(*(void *)&v104 + 48) + 16 * v15);
      uint64_t *v105 = v95;
      v105[1] = a7;
      *(void *)(*(void *)(*(void *)&v104 + 56) + 8 * v15) = v96;
      uint64_t v106 = *(void *)(*(void *)&v104 + 16);
      BOOL v83 = __OFADD__(v106, 1);
      uint64_t v107 = v106 + 1;
      if (v83) {
        goto LABEL_151;
      }
      *(void *)(*(void *)&v104 + 16) = v107;
      swift_bridgeObjectRetain();
LABEL_42:
      *(double *)&unint64_t v212 = v104;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  if (a1 >> 62) {
    goto LABEL_160;
  }
  uint64_t v65 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (v65)
    {
      a7 = 0;
      unint64_t v66 = 0;
      int64_t v207 = a1 & 0xC000000000000001;
      uint64_t v206 = v65;
      do
      {
        if (v65 == v66) {
          goto LABEL_148;
        }
        uint64_t v68 = *(void *)(a6 + 80);
        if (v66 >= *(void *)(v68 + 16)) {
          goto LABEL_149;
        }
        uint64_t v69 = v68 + a7;
        unint64_t v15 = *(void *)(v69 + 32);
        uint64_t v70 = *(void *)(v69 + 40);
        if (v207)
        {
          swift_bridgeObjectRetain();
          id v71 = (id)MEMORY[0x26122B4C0](v66, a1);
        }
        else
        {
          unint64_t v72 = *(void **)(a1 + 8 * v66 + 32);
          swift_bridgeObjectRetain();
          id v71 = v72;
        }
        uint64_t v21 = (uint64_t)v71;
        uint64_t v25 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v73 = v212;
        double v211 = *(double *)&v212;
        a6 = sub_260DBACB4(v15, v70);
        uint64_t v75 = *(void *)(v73 + 16);
        BOOL v76 = (v74 & 1) == 0;
        uint64_t v77 = v75 + v76;
        if (__OFADD__(v75, v76)) {
          goto LABEL_150;
        }
        a1 = v74;
        if (*(void *)(v73 + 24) >= v77)
        {
          if (v25)
          {
            double v80 = v211;
            if (v74) {
              goto LABEL_20;
            }
          }
          else
          {
            sub_260FC470C();
            double v80 = v211;
            if (a1) {
              goto LABEL_20;
            }
          }
        }
        else
        {
          sub_260FC0D64(v77, v25);
          unint64_t v78 = sub_260DBACB4(v15, v70);
          if ((a1 & 1) != (v79 & 1)) {
            goto LABEL_165;
          }
          a6 = v78;
          double v80 = v211;
          if (a1)
          {
LABEL_20:
            uint64_t v67 = *(void *)(*(void *)&v80 + 56);
            unint64_t v15 = 8 * a6;

            *(void *)(v67 + 8 * a6) = v21;
            goto LABEL_21;
          }
        }
        *(void *)(*(void *)&v80 + 8 * ((unint64_t)a6 >> 6) + 64) |= 1 << a6;
        long long v81 = (unint64_t *)(*(void *)(*(void *)&v80 + 48) + 16 * a6);
        *long long v81 = v15;
        v81[1] = v70;
        *(void *)(*(void *)(*(void *)&v80 + 56) + 8 * a6) = v21;
        uint64_t v82 = *(void *)(*(void *)&v80 + 16);
        BOOL v83 = __OFADD__(v82, 1);
        uint64_t v84 = v82 + 1;
        if (v83) {
          goto LABEL_155;
        }
        *(void *)(*(void *)&v80 + 16) = v84;
        swift_bridgeObjectRetain();
LABEL_21:
        ++v66;
        *(double *)&unint64_t v212 = v80;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a7 += 16;
        uint64_t v65 = v206;
        a6 = v209;
        a1 = v210;
      }
      while (v206 != v66);
    }
LABEL_72:
    uint64_t v21 = (uint64_t)a11;
    if (a11)
    {
      unint64_t v15 = (unint64_t)a10;
      if (a10)
      {
        LOBYTE(v65) = a13;
        a7 = a12;
        sub_260F77918(a10, a11);
        uint64_t v108 = qword_26A8EA918;
        uint64_t v25 = a10;
        if (v108 != -1) {
          goto LABEL_162;
        }
        goto LABEL_75;
      }
      id v154 = a11;
      goto LABEL_128;
    }
    unint64_t v129 = *(void *)(a6 + 184);
    uint64_t v130 = *(void *)(v129 + 64);
    uint64_t v206 = v129 + 64;
    uint64_t v131 = 1 << *(unsigned char *)(v129 + 32);
    uint64_t v132 = -1;
    if (v131 < 64) {
      uint64_t v132 = ~(-1 << v131);
    }
    uint64_t v25 = v132 & v130;
    int64_t v207 = (unint64_t)(v131 + 63) >> 6;
    unint64_t v210 = v129;
    swift_bridgeObjectRetain();
    a6 = 0;
    while (1)
    {
      if (v25)
      {
        unint64_t v134 = __clz(__rbit64(v25));
        v25 &= v25 - 1;
        unint64_t v135 = v134 | (a6 << 6);
        goto LABEL_100;
      }
      BOOL v83 = __OFADD__(a6++, 1);
      if (v83) {
        goto LABEL_154;
      }
      if (a6 >= v207)
      {
LABEL_115:
        uint64_t v152 = swift_release();
        a6 = v209;
        goto LABEL_129;
      }
      unint64_t v136 = *(void *)(v206 + 8 * a6);
      if (!v136) {
        break;
      }
LABEL_99:
      uint64_t v25 = (v136 - 1) & v136;
      unint64_t v135 = __clz(__rbit64(v136)) + (a6 << 6);
LABEL_100:
      id v138 = (uint64_t *)(*(void *)(v210 + 48) + 16 * v135);
      uint64_t v139 = *v138;
      a7 = v138[1];
      id v140 = *(id *)(*(void *)(v210 + 56) + 8 * v135);
      swift_bridgeObjectRetain();
      a1 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v141 = v212;
      double v211 = *(double *)&v212;
      unint64_t v15 = sub_260DBACB4(v139, a7);
      uint64_t v143 = *(void *)(v141 + 16);
      BOOL v144 = (v142 & 1) == 0;
      uint64_t v145 = v143 + v144;
      if (__OFADD__(v143, v144)) {
        goto LABEL_147;
      }
      uint64_t v21 = v142;
      if (*(void *)(v141 + 24) >= v145)
      {
        if (a1)
        {
          double v148 = v211;
          if (v142) {
            goto LABEL_85;
          }
        }
        else
        {
          sub_260FC470C();
          double v148 = v211;
          if (v21) {
            goto LABEL_85;
          }
        }
      }
      else
      {
        sub_260FC0D64(v145, a1);
        unint64_t v146 = sub_260DBACB4(v139, a7);
        if ((v21 & 1) != (v147 & 1)) {
          goto LABEL_165;
        }
        unint64_t v15 = v146;
        double v148 = v211;
        if (v21)
        {
LABEL_85:
          uint64_t v133 = *(void *)(*(void *)&v148 + 56);
          a1 = 8 * v15;

          *(void *)(v133 + 8 * v15) = v140;
          goto LABEL_86;
        }
      }
      *(void *)(*(void *)&v148 + 8 * (v15 >> 6) + 64) |= 1 << v15;
      uint64_t v149 = (uint64_t *)(*(void *)(*(void *)&v148 + 48) + 16 * v15);
      uint64_t *v149 = v139;
      v149[1] = a7;
      *(void *)(*(void *)(*(void *)&v148 + 56) + 8 * v15) = v140;
      uint64_t v150 = *(void *)(*(void *)&v148 + 16);
      BOOL v83 = __OFADD__(v150, 1);
      uint64_t v151 = v150 + 1;
      if (v83) {
        goto LABEL_152;
      }
      *(void *)(*(void *)&v148 + 16) = v151;
      swift_bridgeObjectRetain();
LABEL_86:
      *(double *)&unint64_t v212 = v148;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    int64_t v137 = a6 + 1;
    if (a6 + 1 >= v207) {
      goto LABEL_115;
    }
    unint64_t v136 = *(void *)(v206 + 8 * v137);
    if (v136) {
      goto LABEL_98;
    }
    int64_t v137 = a6 + 2;
    if (a6 + 2 >= v207) {
      goto LABEL_115;
    }
    unint64_t v136 = *(void *)(v206 + 8 * v137);
    if (v136) {
      goto LABEL_98;
    }
    int64_t v137 = a6 + 3;
    if (a6 + 3 >= v207) {
      goto LABEL_115;
    }
    unint64_t v136 = *(void *)(v206 + 8 * v137);
    if (v136)
    {
LABEL_98:
      a6 = v137;
      goto LABEL_99;
    }
    while (1)
    {
      a6 = v137 + 1;
      if (__OFADD__(v137, 1)) {
        break;
      }
      if (a6 >= v207) {
        goto LABEL_115;
      }
      unint64_t v136 = *(void *)(v206 + 8 * a6);
      ++v137;
      if (v136) {
        goto LABEL_99;
      }
    }
LABEL_159:
    __break(1u);
LABEL_160:
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_260FE4E40();
    swift_bridgeObjectRelease();
  }
  while ((v65 & 0x8000000000000000) == 0);
  __break(1u);
LABEL_162:
  swift_once();
LABEL_75:
  uint64_t v109 = sub_260FE3A10();
  __swift_project_value_buffer(v109, (uint64_t)qword_26A90FC00);
  uint64_t v110 = sub_260FE39F0();
  os_log_type_t v111 = sub_260FE4870();
  if (os_log_type_enabled(v110, v111))
  {
    unint64_t v112 = v15;
    uint64_t v113 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v113 = 134217984;
    double v211 = a9;
    sub_260FE4AE0();
    _os_log_impl(&dword_260D82000, v110, v111, "Determining IPA scale. Current stepProgression: %f", v113, 0xCu);
    id v114 = v113;
    unint64_t v15 = v112;
    MEMORY[0x26122CA00](v114, -1, -1);
  }

  if ((v65 & 1) != 0 || (uint64_t v115 = a7, *(float *)&a7 <= a9) && *((float *)&a7 + 1) >= a9)
  {
    uint64_t v116 = *(void *)(v209 + 88);
    uint64_t v117 = *(void *)(v209 + 96);
    id v118 = (id)v25;
    swift_bridgeObjectRetain();
    double v119 = *(double *)&v212;
    char v120 = swift_isUniquelyReferenced_nonNull_native();
    double v211 = v119;
    sub_260FC65FC((uint64_t)v118, v116, v117, v120);
    *(double *)&unint64_t v212 = v211;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v121 = v118;
    long long v122 = sub_260FE39F0();
    os_log_type_t v123 = sub_260FE4870();
    if (os_log_type_enabled(v122, v123))
    {
      uint64_t v124 = (uint8_t *)swift_slowAlloc();
      uint64_t v125 = swift_slowAlloc();
      unint64_t v210 = v15;
      uint64_t v126 = (void *)v125;
      *(_DWORD *)uint64_t v124 = 138412290;
      double v127 = COERCE_DOUBLE([v121 objectAtIndexedSubscript:0]);
      double v211 = v127;
      sub_260FE4AE0();
      *(double *)uint64_t v126 = v127;

      _os_log_impl(&dword_260D82000, v122, v123, "Using scale value of %@", v124, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FB0);
      swift_arrayDestroy();
      id v128 = v126;
      unint64_t v15 = v210;
      MEMORY[0x26122CA00](v128, -1, -1);
      MEMORY[0x26122CA00](v124, -1, -1);

      goto LABEL_127;
    }

LABEL_125:
    goto LABEL_127;
  }
  uint64_t v156 = *(void *)(v209 + 88);
  uint64_t v155 = *(void *)(v209 + 96);
  uint64_t v157 = *(void *)(v209 + 184);
  uint64_t v158 = *(void *)(v157 + 16);
  swift_bridgeObjectRetain();
  if (!v158)
  {
LABEL_122:
    uint64_t v164 = (void *)sub_260F88584(v156, v155);
    swift_bridgeObjectRelease();

    goto LABEL_123;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v159 = sub_260DBACB4(v156, v155);
  if ((v160 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_122;
  }
  id v161 = *(id *)(*(void *)(v157 + 56) + 8 * v159);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double v162 = *(double *)&v212;
  char v163 = swift_isUniquelyReferenced_nonNull_native();
  double v211 = v162;
  sub_260FC65FC((uint64_t)v161, v156, v155, v163);
  *(double *)&unint64_t v212 = v211;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_123:
  uint64_t v121 = sub_260FE39F0();
  os_log_type_t v165 = sub_260FE4870();
  if (os_log_type_enabled(v121, v165))
  {
    uint64_t v166 = swift_slowAlloc();
    *(_DWORD *)uint64_t v166 = 134218496;
    double v211 = a9;
    sub_260FE4AE0();
    *(_WORD *)(v166 + 12) = 2048;
    double v211 = *(float *)&v115;
    sub_260FE4AE0();
    *(_WORD *)(v166 + 22) = 2048;
    double v211 = *((float *)&v115 + 1);
    sub_260FE4AE0();
    _os_log_impl(&dword_260D82000, v121, v165, "stepProgression %f is outside the range of [%f, %f], so using zero IPA scale", (uint8_t *)v166, 0x20u);
    MEMORY[0x26122CA00](v166, -1, -1);

    goto LABEL_125;
  }

LABEL_127:
  a6 = v209;
LABEL_128:
  uint64_t v167 = *(void *)(a6 + 104);
  uint64_t v168 = *(void *)(a6 + 112);
  swift_bridgeObjectRetain();
  id v169 = (id)v21;
  double v170 = *(double *)&v212;
  char v171 = swift_isUniquelyReferenced_nonNull_native();
  double v211 = v170;
  sub_260FC65FC((uint64_t)v169, v167, v168, v171);
  *(double *)&unint64_t v212 = v211;

  swift_bridgeObjectRelease();
  uint64_t v152 = swift_bridgeObjectRelease();
LABEL_129:
  MEMORY[0x270FA5388](v152, v153);
  *(&v196 - 2) = a6;
  *(&v196 - 1) = (uint64_t)&v212;
  uint64_t v172 = v198;
  swift_bridgeObjectRetain();
  uint64_t v173 = v208;
  int v174 = (void *)sub_260F8428C((void (*)(uint64_t *__return_ptr, uint64_t))sub_260F778F8, (uint64_t)(&v196 - 4), v172);
  swift_bridgeObjectRelease();
  uint64_t v51 = a6;
  uint64_t v175 = sub_260F72128(v174, a14 & 1);
  uint64_t v208 = v173;
  if (v173)
  {
LABEL_130:
    (*(void (**)(char *, uint64_t))(v205 + 8))(v203, v204);
    swift_bridgeObjectRelease();
    goto LABEL_142;
  }
  uint64_t v176 = v175;
  swift_bridgeObjectRelease();
  uint64_t v177 = *(void *)(v176 + 16);
  if (!v177)
  {
    swift_bridgeObjectRelease();
    double v182 = MEMORY[0x263F8EE78];
LABEL_137:
    swift_bridgeObjectRetain();
    if (*(void *)&v182 >> 62)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
      sub_260FE4E30();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260FE5220();
    }
    swift_bridgeObjectRelease();
    id v183 = objc_allocWithZone(MEMORY[0x263F00D10]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
    uint64_t v184 = (void *)sub_260FE43F0();
    swift_bridgeObjectRelease();
    id v185 = objc_msgSend(v183, sel_initWithFeatureProviderArray_, v184);

    id v186 = v185;
    uint64_t v51 = a6;
    uint64_t v187 = v208;
    sub_260F72708((uint64_t)v186);
    uint64_t v208 = v187;
    if (v187)
    {
      (*(void (**)(char *, uint64_t))(v205 + 8))(v203, v204);

      goto LABEL_142;
    }
    id v190 = v188;

    unint64_t v191 = (unint64_t)objc_msgSend(v190, sel_count);
    if ((v191 & 0x8000000000000000) == 0)
    {
      unint64_t v192 = v191;
      swift_unknownObjectRetain();
      uint64_t v193 = v192;
      uint64_t v194 = v208;
      unint64_t v195 = sub_260F73F44(0, v193, v190);
      uint64_t v208 = v194;
      swift_unknownObjectRelease();
      uint64_t v51 = sub_260F731B4(v195, a14 & 1);

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v205 + 8))(v203, v204);
      swift_bridgeObjectRelease();
      return v51;
    }
    __break(1u);
LABEL_165:
    uint64_t result = sub_260FE5280();
    __break(1u);
    return result;
  }
  double v211 = MEMORY[0x263F8EE78];
  sub_260FE4D30();
  uint64_t v178 = 0;
  while (1)
  {
    uint64_t v179 = swift_bridgeObjectRetain();
    sub_260FB9C60(v179);
    id v180 = objc_allocWithZone(MEMORY[0x263F00D38]);
    uint64_t v181 = v208;
    sub_260FBB9C8();
    uint64_t v208 = v181;
    if (v181) {
      break;
    }
    swift_bridgeObjectRelease();
    ++v178;
    sub_260FE4D00();
    sub_260FE4D40();
    sub_260FE4D50();
    sub_260FE4D10();
    if (v177 == v178)
    {
      double v182 = v211;
      swift_bridgeObjectRelease();
      goto LABEL_137;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v51 = *(void *)&v211;
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v205 + 8))(v203, v204);
LABEL_142:
  swift_bridgeObjectRelease();
  return v51;
}

uint64_t AppleDiffusionUnet.geometricConditioningShape.getter()
{
  return swift_bridgeObjectRetain();
}

void *sub_260F708B8(void *a1, float a2)
{
  uint64_t v4 = v3;
  uint64_t v6 = v2[23];
  if (!*(void *)(v6 + 16)) {
    goto LABEL_6;
  }
  uint64_t v8 = v2[11];
  uint64_t v9 = v2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_260DBACB4(v8, v9);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    unint64_t v14 = 0;
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_260FF7900;
    *(void *)(v16 + 32) = a1;
    *(void *)(v16 + 40) = a1;
    sub_260FE4420();
    sub_260D905B0(0, &qword_26A8EABD8);
    id v17 = a1;
    uint64_t v18 = (void *)sub_260FE43F0();
    swift_bridgeObjectRelease();
    objc_msgSend(self, sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v18, 0, 65552);

    return v14;
  }
  id v12 = *(id *)(*(void *)(v6 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v12, sel_shape);
  sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
  unint64_t v14 = (void *)sub_260FE4400();

  objc_allocWithZone(MEMORY[0x263F00DA8]);
  id v15 = sub_260E5BE64((uint64_t)v14, 65552);
  if (!v4)
  {
    unint64_t v14 = v15;
    if (v15)
    {
      id v20 = objc_allocWithZone(NSNumber);
      id v21 = v14;
      *(float *)&double v22 = a2;
      id v23 = objc_msgSend(v20, sel_initWithFloat_, v22);
      objc_msgSend(v21, sel_fillWithNumber_, v23);
    }
    goto LABEL_7;
  }

  return v14;
}

uint64_t AppleDiffusionUnet.latentSampleShape.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_260F70B14(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return MEMORY[0x270FA2498](sub_260F70B34, 0, 0);
}

uint64_t sub_260F70B34()
{
  unint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_260F70C30;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_260EC2C5C;
  v0[13] = &block_descriptor_1;
  v0[14] = v2;
  objc_msgSend(v1, sel_modelDescriptionWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_260F70C30()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_260F70D60;
  }
  else {
    uint64_t v2 = sub_260F70D40;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260F70D40()
{
  **(void **)(v0 + 128) = *(void *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_260F70D60()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_willThrow();

  **(void **)(v0 + 128) = 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t AppleDiffusionUnet.init(modelAt:configuration:adapter:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
  MEMORY[0x270FA5388](v8 - 8, v9);
  char v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABF0);
  uint64_t v12 = sub_260FE2F90();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_260FE7080;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16))(v15 + v14, a1, v12);
  sub_260D907BC(a3, (uint64_t)v11, &qword_26A8EA020);
  AppleDiffusionUnet.init(chunksAt:configuration:adapter:)(v15, a2, (uint64_t)v11, a4);
  sub_260D90820(a3, &qword_26A8EA020);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
}

uint64_t AppleDiffusionUnet.init(chunksAt:configuration:adapter:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v80 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
  MEMORY[0x270FA5388](v7 - 8, v8);
  uint64_t v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7588);
  uint64_t v13 = MEMORY[0x270FA5388](v11 - 8, v12);
  uint64_t v89 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13, v15);
  unint64_t v85 = (char *)&v75 - v17;
  MEMORY[0x270FA5388](v16, v18);
  id v20 = (char *)&v75 - v19;
  uint64_t v21 = sub_260FE2F90();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v21, v23);
  uint64_t v87 = (char *)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24, v26);
  uint64_t v28 = (char *)&v75 - v27;
  objc_msgSend(a2, sel_copy);
  sub_260FE4B50();
  swift_unknownObjectRelease();
  sub_260D905B0(0, &qword_26A8EACA8);
  swift_dynamicCast();
  id v79 = v92;
  objc_msgSend(v92, sel_setExperimentalMLE5EngineUsage_, 2);
  uint64_t v77 = a3;
  sub_260D907BC(a3, (uint64_t)v10, &qword_26A8EA020);
  uint64_t v29 = type metadata accessor for ConcreteAdapter();
  int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v10, 1, v29);
  uint64_t v78 = v22;
  if (v30 == 1)
  {
    sub_260D90820((uint64_t)v10, &qword_26A8EA020);
    uint64_t v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    v88(v20, 1, 1, v21);
LABEL_5:
    uint64_t v32 = v21;
    uint64_t v33 = v86;
    uint64_t v34 = sub_260D90820((uint64_t)v20, &qword_26A8E7588);
    goto LABEL_7;
  }
  BOOL v76 = a2;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v31(v20, &v10[*(int *)(v29 + 20)], v21);
  sub_260F75268((uint64_t)v10);
  uint64_t v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v88(v20, 0, 1, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    a2 = v76;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v28, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACB0);
  uint64_t v36 = v22;
  uint64_t v37 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB60) - 8);
  unint64_t v38 = (*(unsigned __int8 *)(*(void *)v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v37 + 80);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_260FE7080;
  uint64_t v40 = (void *)(v39 + v38);
  unint64_t v41 = v39 + v38 + v37[14];
  *uint64_t v40 = 1634889580;
  v40[1] = 0xE400000000000000;
  v31((char *)v41, v28, v21);
  sub_260F5B89C(v39);
  uint64_t v42 = (void *)sub_260FE3E90();
  swift_bridgeObjectRelease();
  objc_msgSend(v79, sel_setE5rtMutableMILWeightURLs_, v42);

  uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v28, v21);
  a2 = v76;
  uint64_t v32 = v21;
  uint64_t v33 = v86;
LABEL_7:
  if (*(void *)(v80 + 16) == 1) {
    uint64_t v43 = &unk_270D228D0;
  }
  else {
    uint64_t v43 = &unk_270D22908;
  }
  MEMORY[0x270FA5388](v34, v35);
  *(&v75 - 2) = (uint64_t)v79;
  *(&v75 - 1) = (uint64_t)v43;
  uint64_t v44 = swift_bridgeObjectRetain();
  uint64_t v45 = v33;
  unint64_t v46 = sub_260F6AE64(v44, (void (*)(void, char *))sub_260F73BAC, (uint64_t)(&v75 - 4));
  uint64_t v47 = v45;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(a4 + 200) = v46;
  if (v46 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_260FE4E40();
    uint64_t v48 = result;
  }
  else
  {
    uint64_t v48 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v50 = v89;
  if (!v48)
  {
    BOOL v76 = a2;
    uint64_t v75 = a4;
    swift_bridgeObjectRelease();
    uint64_t v62 = *(void *)(v80 + 16);
    if (v62)
    {
      unint64_t v85 = *(char **)(v78 + 16);
      uint64_t v63 = v80 + ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80));
      uint64_t v82 = *(void *)(v78 + 72);
      uint64_t v84 = v78 + 56;
      char v64 = (unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
      long long v81 = (void (**)(char *, char *, uint64_t))(v78 + 32);
      uint64_t v86 = v78 + 16;
      uint64_t v65 = (void (**)(char *, uint64_t))(v78 + 8);
      swift_bridgeObjectRetain();
      unint64_t v66 = (void *)MEMORY[0x263F8EE78];
      uint64_t v83 = v32;
      while (1)
      {
        ((void (*)(char *, uint64_t, uint64_t))v85)(v50, v63, v32);
        v88(v50, 0, 1, v32);
        if ((*v64)(v50, 1, v32) == 1) {
          break;
        }
        uint64_t v67 = v87;
        (*v81)(v87, v50, v32);
        uint64_t v68 = sub_260FE2F40();
        uint64_t v70 = v69;
        (*v65)(v67, v32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v66 = sub_260DB118C(0, v66[2] + 1, 1, v66);
        }
        unint64_t v72 = v66[2];
        unint64_t v71 = v66[3];
        if (v72 >= v71 >> 1) {
          unint64_t v66 = sub_260DB118C((void *)(v71 > 1), v72 + 1, 1, v66);
        }
        v66[2] = v72 + 1;
        unint64_t v73 = &v66[2 * v72];
        v73[4] = v68;
        v73[5] = v70;
        v63 += v82;
        --v62;
        uint64_t v32 = v83;
        uint64_t v50 = v89;
        if (!v62) {
          goto LABEL_28;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v66 = (void *)MEMORY[0x263F8EE78];
LABEL_28:
      v88(v50, 1, 1, v32);
    }
    swift_bridgeObjectRelease_n();
    sub_260F64558();
    swift_allocError();
    *(void *)uint64_t v74 = v66;
    *(void *)(v74 + 8) = 0;
    *(unsigned char *)(v74 + 16) = 2;
    swift_willThrow();
    uint64_t v54 = v77;
    a2 = v76;
LABEL_30:

    sub_260D90820(v54, &qword_26A8EA020);
    return swift_bridgeObjectRelease();
  }
  if ((v46 & 0xC000000000000001) != 0)
  {
    uint64_t v51 = MEMORY[0x26122B4C0](0, v46);
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v85, v51 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_modelURL, v32);
    v88((char *)v52, 0, 1, v32);
    uint64_t v53 = v47;
    sub_260F7413C(v52, (uint64_t)v90);
    swift_release();
    uint64_t v54 = v77;
    if (!v53)
    {

      long long v55 = v90[11];
      *(_OWORD *)(a4 + 160) = v90[10];
      *(_OWORD *)(a4 + 176) = v55;
      *(_WORD *)(a4 + 192) = v91;
      long long v56 = v90[7];
      *(_OWORD *)(a4 + 96) = v90[6];
      *(_OWORD *)(a4 + 112) = v56;
      long long v57 = v90[9];
      *(_OWORD *)(a4 + 128) = v90[8];
      *(_OWORD *)(a4 + 144) = v57;
      long long v58 = v90[3];
      *(_OWORD *)(a4 + 32) = v90[2];
      *(_OWORD *)(a4 + 48) = v58;
      long long v59 = v90[5];
      *(_OWORD *)(a4 + 64) = v90[4];
      *(_OWORD *)(a4 + 80) = v59;
      long long v60 = v90[1];
      *(_OWORD *)a4 = v90[0];
      *(_OWORD *)(a4 + 16) = v60;
      uint64_t v61 = type metadata accessor for AppleDiffusionUnet();
      return sub_260F75200(v54, a4 + *(int *)(v61 + 24));
    }
    goto LABEL_30;
  }
  if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v51 = *(void *)(v46 + 32);
    swift_retain();
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_260F7197C(unint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = sub_260FE2F90();
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 16))(v11, a2);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a4 + 16) > a1)
  {
    uint64_t v14 = a4 + 24 * a1;
    uint64_t v15 = *(void *)(v14 + 32);
    uint64_t v16 = *(void *)(v14 + 40);
    int v17 = *(unsigned __int8 *)(v14 + 48);
    type metadata accessor for ManagedMLModel();
    swift_allocObject();
    return ManagedMLModel.init(modelAt:configuration:name:)(v11, a3, v15, v16, v17);
  }
  __break(1u);
  return result;
}

uint64_t AppleDiffusionUnet.adaptedCopy(adapter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_260FE2F90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
  MEMORY[0x270FA5388](v16 - 8, v17);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v43 = *(void *)(v2 + 200);
  unint64_t v20 = v43;
  if (!(v43 >> 62))
  {
    uint64_t v21 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_3;
    }
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x263F8EE78];
    if ((v20 & 0xC000000000000001) == 0) {
      goto LABEL_15;
    }
LABEL_20:
    uint64_t v32 = MEMORY[0x26122B4C0](0, v43);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_260FE4E40();
  unint64_t v20 = v43;
  uint64_t v21 = v35;
  if (!v35) {
    goto LABEL_19;
  }
LABEL_3:
  uint64_t v44 = MEMORY[0x263F8EE78];
  uint64_t v42 = v21;
  uint64_t result = sub_260F636E8(0, v21 & ~(v21 >> 63), 0);
  if (v42 < 0) {
    goto LABEL_22;
  }
  uint64_t v37 = v19;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v40 = v4;
  uint64_t v23 = v44;
  unint64_t v24 = v43;
  unint64_t v36 = v43 & 0xC000000000000001;
  if ((v43 & 0xC000000000000001) != 0)
  {
    uint64_t v25 = 0;
    do
    {
      uint64_t v26 = MEMORY[0x26122B4C0](v25);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v15, v26 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_modelURL, v7);
      swift_unknownObjectRelease();
      uint64_t v44 = v23;
      unint64_t v28 = *(void *)(v23 + 16);
      unint64_t v27 = *(void *)(v23 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_260F636E8(v27 > 1, v28 + 1, 1);
        uint64_t v23 = v44;
      }
      ++v25;
      *(void *)(v23 + 16) = v28 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v23+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v28, v15, v7);
    }
    while (v42 != v25);
  }
  else
  {
    uint64_t v29 = 0;
    unint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    do
    {
      v41(v11, *(void *)(v24 + 8 * v29 + 32) + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_modelURL, v7);
      uint64_t v44 = v23;
      unint64_t v31 = *(void *)(v23 + 16);
      unint64_t v30 = *(void *)(v23 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_260F636E8(v30 > 1, v31 + 1, 1);
        uint64_t v23 = v44;
      }
      ++v29;
      *(void *)(v23 + 16) = v31 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v23+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v31, v11, v7);
      unint64_t v24 = v43;
    }
    while (v42 != v29);
  }
  uint64_t result = swift_bridgeObjectRelease();
  a2 = v39;
  uint64_t v19 = v37;
  a1 = v38;
  if (v36) {
    goto LABEL_20;
  }
LABEL_15:
  if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v32 = *(void *)(v43 + 32);
    swift_retain();
LABEL_17:
    id v33 = *(id *)(v32 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_configuration);
    swift_release();
    sub_260F752C4(a1, (uint64_t)v19);
    uint64_t v34 = type metadata accessor for ConcreteAdapter();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v19, 0, 1, v34);
    return AppleDiffusionUnet.init(chunksAt:configuration:adapter:)(v23, v33, (uint64_t)v19, a2);
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t AppleDiffusionUnet.modelBatchSize.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  if (*(void *)(v1 + 16)) {
    return *(void *)(v1 + 32);
  }
  __break(1u);
  return result;
}

void sub_260F71F04(void *a1, uint64_t a2)
{
  if (a1)
  {
    int64_t v2 = a2 - (void)a1;
    if (v2 < 0)
    {
      __break(1u);
    }
    else if (v2)
    {
      bzero(a1, v2);
    }
  }
}

uint64_t sub_260F71F20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD20);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7080;
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  *(void *)(inited + 32) = v13;
  *(void *)(inited + 40) = v14;
  sub_260D905B0(0, &qword_26A8EABD8);
  uint64_t v15 = *(int *)(v8 + 56);
  uint64_t v16 = &v11[v15];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  swift_bridgeObjectRetain();
  *(void *)(inited + 48) = sub_260FE4860();
  unint64_t v19 = sub_260F5B780(inited);
  uint64_t v20 = *a3;
  swift_bridgeObjectRetain();
  uint64_t result = sub_260F6EBF4(v19, v20, (uint64_t)sub_260F73EF8, sub_260FAB5E0, (void (*)(void))sub_260FC470C, (void (*)(void))sub_260FC0D64);
  *uint64_t v23 = result;
  return result;
}

uint64_t sub_260F72128(void *a1, char a2)
{
  uint64_t v4 = *(void *)(v2 + 160);
  if (!*(void *)(v4 + 16))
  {
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  uint64_t v5 = v3;
  uint64_t v6 = a1;
  if (*(void *)(v4 + 32) == 2)
  {
    swift_bridgeObjectRetain();
    return (uint64_t)v6;
  }
  uint64_t v7 = a1[2];
  if (a2) {
    goto LABEL_7;
  }
  if (v7 + 0x4000000000000000 < 0)
  {
LABEL_72:
    __break(1u);
LABEL_73:
    uint64_t result = sub_260FE5280();
    __break(1u);
    return result;
  }
  v7 *= 2;
LABEL_7:
  uint64_t v8 = sub_260FCD3CC(0, v7 & ~(v7 >> 63), 0, MEMORY[0x263F8EE78]);
  uint64_t v69 = v6[2];
  if (!v69) {
    return (uint64_t)v8;
  }
  uint64_t v9 = 0;
  uint64_t v10 = v6 + 4;
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v6 = v8;
  uint64_t v75 = v10;
  while (2)
  {
    uint64_t v71 = v9 + 1;
    unint64_t v72 = v6;
    uint64_t v12 = (void *)sub_260F5B780(v11);
    uint64_t v80 = (void *)sub_260F5B780(v11);
    uint64_t v13 = v10[v9];
    uint64_t v14 = *(void *)(v13 + 64);
    uint64_t v73 = v13 + 64;
    uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    else {
      uint64_t v16 = -1;
    }
    unint64_t v17 = v16 & v14;
    int64_t v74 = (unint64_t)(v15 + 63) >> 6;
    uint64_t v76 = v10[v9];
    swift_bridgeObjectRetain();
    for (int64_t i = 0; ; int64_t i = v79)
    {
      if (v17)
      {
        uint64_t v78 = (v17 - 1) & v17;
        int64_t v79 = i;
        unint64_t v21 = __clz(__rbit64(v17)) | (i << 6);
        goto LABEL_28;
      }
      BOOL v22 = __OFADD__(i, 1);
      int64_t v23 = i + 1;
      if (v22) {
        goto LABEL_69;
      }
      if (v23 >= v74) {
        break;
      }
      unint64_t v24 = *(void *)(v73 + 8 * v23);
      if (!v24)
      {
        int64_t v25 = v23 + 1;
        if (v23 + 1 >= v74) {
          break;
        }
        unint64_t v24 = *(void *)(v73 + 8 * v25);
        if (!v24)
        {
          int64_t v25 = v23 + 2;
          if (v23 + 2 >= v74) {
            break;
          }
          unint64_t v24 = *(void *)(v73 + 8 * v25);
          if (!v24)
          {
            int64_t v25 = v23 + 3;
            if (v23 + 3 >= v74) {
              break;
            }
            unint64_t v24 = *(void *)(v73 + 8 * v25);
            if (!v24)
            {
              while (1)
              {
                int64_t v23 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_71;
                }
                if (v23 >= v74) {
                  goto LABEL_53;
                }
                unint64_t v24 = *(void *)(v73 + 8 * v23);
                ++v25;
                if (v24) {
                  goto LABEL_27;
                }
              }
            }
          }
        }
        int64_t v23 = v25;
      }
LABEL_27:
      uint64_t v78 = (v24 - 1) & v24;
      int64_t v79 = v23;
      unint64_t v21 = __clz(__rbit64(v24)) + (v23 << 6);
LABEL_28:
      uint64_t v26 = *(void *)(v76 + 48) + 16 * v21;
      uint64_t v6 = *(void **)v26;
      uint64_t v27 = *(void *)(v26 + 8);
      unint64_t v28 = *(void **)(*(void *)(v76 + 56) + 8 * v21);
      swift_bridgeObjectRetain();
      id v29 = v28;
      id v30 = sub_260F737E0(v29);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();

        return (uint64_t)v6;
      }
      uint64_t v32 = v30;
      id v33 = v31;
      uint64_t v77 = v29;
      swift_bridgeObjectRetain();
      id v34 = v32;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v37 = sub_260DBACB4((uint64_t)v6, v27);
      uint64_t v38 = v12[2];
      BOOL v39 = (v36 & 1) == 0;
      uint64_t v40 = v38 + v39;
      if (__OFADD__(v38, v39))
      {
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      char v41 = v36;
      if (v12[3] >= v40)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v36) {
            goto LABEL_37;
          }
        }
        else
        {
          sub_260FC470C();
          if (v41) {
            goto LABEL_37;
          }
        }
      }
      else
      {
        sub_260FC0D64(v40, isUniquelyReferenced_nonNull_native);
        unint64_t v42 = sub_260DBACB4((uint64_t)v6, v27);
        if ((v41 & 1) != (v43 & 1)) {
          goto LABEL_73;
        }
        unint64_t v37 = v42;
        if (v41)
        {
LABEL_37:
          uint64_t v47 = v12[7];
          uint64_t v48 = 8 * v37;

          *(void *)(v47 + v48) = v34;
          goto LABEL_38;
        }
      }
      v12[(v37 >> 6) + 8] |= 1 << v37;
      uint64_t v44 = (void *)(v12[6] + 16 * v37);
      void *v44 = v6;
      v44[1] = v27;
      *(void *)(v12[7] + 8 * v37) = v34;
      uint64_t v45 = v12[2];
      BOOL v22 = __OFADD__(v45, 1);
      uint64_t v46 = v45 + 1;
      if (v22) {
        goto LABEL_67;
      }
      id v12[2] = v46;
      swift_bridgeObjectRetain();
LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v49 = v33;
      char v50 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v52 = sub_260DBACB4((uint64_t)v6, v27);
      uint64_t v53 = v80[2];
      BOOL v54 = (v51 & 1) == 0;
      uint64_t v55 = v53 + v54;
      if (__OFADD__(v53, v54)) {
        goto LABEL_66;
      }
      char v56 = v51;
      if (v80[3] >= v55)
      {
        if ((v50 & 1) == 0) {
          sub_260FC470C();
        }
      }
      else
      {
        sub_260FC0D64(v55, v50);
        unint64_t v57 = sub_260DBACB4((uint64_t)v6, v27);
        if ((v56 & 1) != (v58 & 1)) {
          goto LABEL_73;
        }
        unint64_t v52 = v57;
      }
      if (v56)
      {
        uint64_t v19 = v80[7];
        uint64_t v20 = 8 * v52;

        *(void *)(v19 + v20) = v49;
      }
      else
      {
        v80[(v52 >> 6) + 8] |= 1 << v52;
        long long v59 = (void *)(v80[6] + 16 * v52);
        *long long v59 = v6;
        v59[1] = v27;
        *(void *)(v80[7] + 8 * v52) = v49;
        uint64_t v60 = v80[2];
        BOOL v22 = __OFADD__(v60, 1);
        uint64_t v61 = v60 + 1;
        if (v22) {
          goto LABEL_68;
        }
        v80[2] = v61;
        swift_bridgeObjectRetain();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = 0;
      unint64_t v17 = v78;
      uint64_t v10 = v75;
    }
LABEL_53:
    swift_release();
    if (a2)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v72;
      unint64_t v62 = v72[2];
      uint64_t v63 = v80;
    }
    else
    {
      unint64_t v65 = v72[2];
      unint64_t v64 = v72[3];
      unint64_t v62 = v65 + 1;
      if (v65 >= v64 >> 1) {
        unint64_t v72 = sub_260FCD3CC((void *)(v64 > 1), v65 + 1, 1, v72);
      }
      uint64_t v63 = v80;
      uint64_t v6 = v72;
      v72[2] = v62;
      v72[v65 + 4] = v12;
    }
    unint64_t v66 = v6[3];
    uint64_t v11 = MEMORY[0x263F8EE78];
    if (v62 >= v66 >> 1)
    {
      uint64_t v67 = sub_260FCD3CC((void *)(v66 > 1), v62 + 1, 1, v6);
      uint64_t v63 = v80;
      uint64_t v6 = v67;
    }
    id v6[2] = v62 + 1;
    v6[v62 + 4] = v63;
    uint64_t v9 = v71;
    if (v71 != v69) {
      continue;
    }
    return (uint64_t)v6;
  }
}

void sub_260F72708(uint64_t a1)
{
  uint64_t v4 = v2;
  unint64_t v67 = sub_260FE2F90();
  uint64_t v6 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67, v7);
  uint64_t v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(v1 + 200);
  unint64_t v11 = v10 >> 62;
  uint64_t v68 = v10;
  if (!(v10 >> 62))
  {
    uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_3;
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v20) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  if (!sub_260FE4E40())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_260FE4E40();
    if (v20)
    {
LABEL_9:
      if (v20 < 1) {
        goto LABEL_29;
      }
      uint64_t v21 = 0;
      unint64_t v64 = (void (**)(char *, uint64_t, unint64_t))(v6 + 16);
      unint64_t v65 = v10 & 0xC000000000000001;
      BOOL v22 = (void (**)(char *, unint64_t))(v6 + 8);
      int64_t v23 = (void *)MEMORY[0x263F8EE78];
      unint64_t v66 = v20;
      unint64_t v24 = v67;
      do
      {
        if (v65)
        {
          uint64_t v25 = MEMORY[0x26122B4C0](v21, v10);
        }
        else
        {
          uint64_t v25 = *(void *)(v10 + 8 * v21 + 32);
          swift_retain();
        }
        (*v64)(v9, v25 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_modelURL, v24);
        uint64_t v26 = sub_260FE2F30();
        uint64_t v28 = v27;
        (*v22)(v9, v24);
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v23 = sub_260DB118C(0, v23[2] + 1, 1, v23);
        }
        unint64_t v30 = v23[2];
        unint64_t v29 = v23[3];
        if (v30 >= v29 >> 1) {
          int64_t v23 = sub_260DB118C((void *)(v29 > 1), v30 + 1, 1, v23);
        }
        ++v21;
        v23[2] = v30 + 1;
        unint64_t v31 = &v23[2 * v30];
        v31[4] = v26;
        v31[5] = v28;
        unint64_t v10 = v68;
      }
      while (v66 != v21);
LABEL_26:
      swift_bridgeObjectRelease_n();
      sub_260F64558();
      swift_allocError();
      *(void *)uint64_t v32 = v23;
      *(void *)(v32 + 8) = 0;
      *(unsigned char *)(v32 + 16) = 2;
      swift_willThrow();
      return;
    }
LABEL_25:
    int64_t v23 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_26;
  }
LABEL_3:
  unint64_t v66 = v10 & 0xC000000000000001;
  if ((v10 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      unint64_t v10 = *(void *)(v10 + 32);
      swift_retain();
      goto LABEL_6;
    }
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  unint64_t v10 = MEMORY[0x26122B4C0](0, v10);
LABEL_6:
  uint64_t v13 = swift_bridgeObjectRelease();
  uint64_t v15 = MEMORY[0x270FA5388](v13, v14);
  *(&v63 - 2) = a1;
  MEMORY[0x270FA5388](v15, v16);
  *(&v63 - 4) = v10;
  *(&v63 - 3) = (uint64_t)sub_260F77958;
  *(&v63 - 2) = v17;
  id v19 = v18;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD18);
  sub_260FE4900();
  if (v4)
  {
    swift_release();

    return;
  }

  if (v11)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_260FE4E40();
    swift_bridgeObjectRelease();
    if (v33 == 1) {
      goto LABEL_22;
    }
    goto LABEL_31;
  }
  if (*(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
  {
LABEL_22:
    swift_release();
    return;
  }
LABEL_31:
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v67 = sub_260F84AD8(ObjectType);
  unint64_t v64 = (void (**)(char *, uint64_t, unint64_t))v10;
  unint64_t v65 = v3;
  if (!v11)
  {
    uint64_t v35 = v68;
    uint64_t v36 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v36 >= 1) {
      uint64_t v37 = 1;
    }
    else {
      uint64_t v37 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRetain();
    if (v36 < (unint64_t)v37)
    {
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
LABEL_43:
    if (v66 && (unint64_t)v36 >= 2)
    {
      type metadata accessor for ManagedMLModel();
      uint64_t v40 = v37;
      do
      {
        uint64_t v41 = v40 + 1;
        sub_260FE4C60();
        uint64_t v40 = v41;
      }
      while (v36 != v41);
    }
    if (v11)
    {
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_260FE4E50();
      uint64_t v68 = v42;
      uint64_t v37 = v43;
      unint64_t v45 = v44;
      swift_bridgeObjectRelease_n();
      uint64_t v36 = v45 >> 1;
      if (v37 != v45 >> 1) {
        goto LABEL_52;
      }
    }
    else
    {
      uint64_t v63 = v35 & 0xFFFFFFFFFFFFFF8;
      uint64_t v68 = (v35 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v37 != v36)
      {
LABEL_52:
        unint64_t v66 = v36;
        while (v37 < v36)
        {
          uint64_t v46 = *(void *)(v68 + 8 * v37);
          uint64_t v47 = swift_getObjectType();
          swift_retain();
          swift_unknownObjectRetain();
          unint64_t v48 = sub_260F84AD8(v47);
          uint64_t v49 = swift_unknownObjectRelease();
          MEMORY[0x270FA5388](v49, v50);
          *(&v63 - 2) = v67;
          uint64_t v51 = sub_260F88980(v48, (void (*)(uint64_t, uint64_t))sub_260F77974);
          if (v4)
          {
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return;
          }
          unint64_t v52 = v51;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          if (v52 >> 62)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
            sub_260FE4E30();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_260FE5220();
          }
          swift_bridgeObjectRelease();
          id v53 = objc_allocWithZone(MEMORY[0x263F00D10]);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
          BOOL v54 = (void *)sub_260FE43F0();
          swift_bridgeObjectRelease();
          id v55 = objc_msgSend(v53, sel_initWithFeatureProviderArray_, v54);

          uint64_t v58 = MEMORY[0x270FA5388](v56, v57);
          *(&v63 - 2) = (uint64_t)v55;
          MEMORY[0x270FA5388](v58, v59);
          *(&v63 - 4) = v46;
          *(&v63 - 3) = (uint64_t)sub_260F77990;
          *(&v63 - 2) = v60;
          id v62 = v61;
          sub_260FE4900();
          ++v37;

          swift_unknownObjectRelease();
          swift_release();

          uint64_t v36 = v66;
          if (v66 == v37) {
            goto LABEL_51;
          }
        }
        __break(1u);
        goto LABEL_62;
      }
    }
LABEL_51:
    swift_release();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v35 = v68;
  swift_bridgeObjectRetain_n();
  uint64_t v36 = sub_260FE4E40();
  swift_bridgeObjectRelease();
  if ((v36 & 0x8000000000000000) == 0)
  {
    if (v36 >= 1) {
      uint64_t v37 = 1;
    }
    else {
      uint64_t v37 = v36;
    }
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_260FE4E40();
    swift_bridgeObjectRelease();
    if (v38 < v37) {
      goto LABEL_62;
    }
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_260FE4E40();
    swift_bridgeObjectRelease();
    if (v39 < v36)
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    goto LABEL_43;
  }
LABEL_64:
  __break(1u);
}

void sub_260F72FB4(void *a1, id a2)
{
  id v2 = objc_msgSend(a2, sel_featuresAtIndex_, *a1);
  id v3 = objc_msgSend(v2, sel_featureNames);
  uint64_t v4 = sub_260FE46E0();

  sub_260F813B0(v4);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (!v6)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v7 = (void *)sub_260FE4070();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v2, sel_featureValueForName_, v7);

  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v9 = objc_msgSend(v8, sel_multiArrayValue);

  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_260FE7020;
    *(void *)(v10 + 32) = v9;
    sub_260FE4420();
    sub_260D905B0(0, &qword_26A8EABD8);
    id v11 = v9;
    uint64_t v12 = (void *)sub_260FE43F0();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(self, sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v12, 0, 65568);

    sub_260FE3B70();
    swift_unknownObjectRelease();

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_260F731B4(unint64_t a1, int a2)
{
  int v53 = a2;
  unint64_t v59 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3, v4);
  uint64_t v57 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5, v7);
  uint64_t v56 = (char *)&v40 - v9;
  MEMORY[0x270FA5388](v8, v10);
  id v13 = (char *)&v40 - v11;
  uint64_t v14 = *(void *)(v2 + 160);
  if (!*(void *)(v14 + 16))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (*(void *)(v14 + 32) == 2)
  {
    swift_bridgeObjectRetain();
    return v59;
  }
  if (v53) {
    uint64_t v15 = 1;
  }
  else {
    uint64_t v15 = 2;
  }
  unint64_t v16 = *(void *)(v59 + 16);
  if ((v16 & (v15 - 1)) == 0)
  {
    if (!v16) {
      return MEMORY[0x263F8EE78];
    }
    int64_t v17 = 0;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v18 = v12 + 16;
    id v19 = v20;
    uint64_t v21 = *(unsigned __int8 *)(v18 + 64);
    uint64_t v22 = (v21 + 32) & ~v21;
    uint64_t v23 = v59 + v22;
    uint64_t v24 = *(void *)(v18 + 56);
    uint64_t v46 = v21 | 7;
    uint64_t v47 = v22 + 2 * v24;
    uint64_t v25 = v18;
    unint64_t v44 = (void (**)(char *, uint64_t))(v18 - 8);
    unint64_t v45 = (void (**)(unint64_t, char *, uint64_t))(v18 + 16);
    uint64_t v58 = v24;
    uint64_t v43 = v15 * v24;
    unint64_t v59 = MEMORY[0x263F8EE78];
    long long v42 = xmmword_260FE7060;
    uint64_t v41 = v23;
    int64_t v51 = v16;
    uint64_t v52 = v15;
    uint64_t v49 = (char *)&v40 - v11;
    uint64_t v50 = v20;
    uint64_t v48 = v22;
    while (1)
    {
      BOOL v26 = __OFADD__(v17, v15);
      if (v17 < 0) {
        break;
      }
      BOOL v55 = v26;
      uint64_t v27 = v25;
      v19(v13, v23, v3);
      uint64_t v28 = v23;
      if ((v53 & 1) == 0)
      {
        if (v17 + 1 >= v16) {
          goto LABEL_29;
        }
        uint64_t v28 = v41 + v58 * (v17 + 1);
        uint64_t v27 = v25;
      }
      int64_t v54 = v17;
      unint64_t v29 = v56;
      v19(v56, v28, v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = v42;
      v19((char *)(v30 + v22), (uint64_t)v13, v3);
      uint64_t v25 = v27;
      v19((char *)(v30 + v22 + v58), (uint64_t)v29, v3);
      uint64_t v60 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C8);
      sub_260D90340(&qword_26A8E84D0, &qword_26A8E84C8);
      sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
      sub_260FE3AD0();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v59 = sub_260FCD3E0(0, *(void *)(v59 + 16) + 1, 1, v59);
      }
      char v31 = v55;
      unint64_t v33 = *(void *)(v59 + 16);
      unint64_t v32 = *(void *)(v59 + 24);
      uint64_t v22 = v48;
      id v13 = v49;
      uint64_t v34 = v54;
      if (v33 >= v32 >> 1) {
        unint64_t v59 = sub_260FCD3E0(v32 > 1, v33 + 1, 1, v59);
      }
      uint64_t v15 = v52;
      int64_t v17 = v34 + v52;
      uint64_t v36 = v58;
      unint64_t v35 = v59;
      *(void *)(v59 + 16) = v33 + 1;
      (*v45)(v35 + v22 + v33 * v36, v57, v3);
      uint64_t v37 = *v44;
      (*v44)(v56, v3);
      v37(v13, v3);
      id v19 = v50;
      unint64_t v16 = v51;
      if (v17 >= v51) {
        char v38 = 1;
      }
      else {
        char v38 = v31;
      }
      v23 += v43;
      if (v38) {
        return v59;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
LABEL_31:
  uint64_t result = sub_260FE4E20();
  __break(1u);
  return result;
}

unint64_t sub_260F73640(unint64_t result, uint64_t a2, uint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > result)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_260F6EBF4(v4, a2, (uint64_t)sub_260F73EF8, sub_260FAB5E0, (void (*)(void))sub_260FC48D8, (void (*)(void))sub_260FC10B4);
    sub_260FB9C74(v5);
    swift_bridgeObjectRelease();
    id v6 = objc_allocWithZone(MEMORY[0x263F00D38]);
    return (unint64_t)sub_260FBB9C8();
  }
  __break(1u);
  return result;
}

id sub_260F73728@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  v8[1] = *(id *)MEMORY[0x263EF8340];
  v8[0] = 0;
  id v4 = objc_msgSend(a1, sel_predictionsFromBatch_error_, a2, v8);
  id v5 = v8[0];
  if (v4)
  {
    *a3 = v4;
    return v5;
  }
  else
  {
    id v7 = v8[0];
    sub_260FE2E30();

    return (id)swift_willThrow();
  }
}

id sub_260F737E0(void *a1)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  id v2 = objc_msgSend(a1, sel_shape);
  sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
  unint64_t v3 = sub_260FE4400();

  if ((v3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x26122B4C0](0, v3);
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    id v4 = *(id *)(v3 + 32);
  }
  id v5 = v4;
  id v6 = objc_msgSend(v4, sel_integerValue);

  if (v6 != (id)2)
  {
    id v12 = a1;
    swift_bridgeObjectRelease();
    return v12;
  }
  unint64_t v27 = v3;
  swift_bridgeObjectRetain();
  id v2 = (id)sub_260FE4A30();
  if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
    || (v3 & 0x8000000000000000) != 0
    || (unint64_t v7 = v3, (v3 & 0x4000000000000000) != 0))
  {
    sub_260EAF8C0(v3);
    unint64_t v27 = v7;
  }
  if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_26;
  }
  uint64_t v8 = *(void **)((v7 & 0xFFFFFFFFFFFFFF8) + 0x20);
  *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x20) = v2;

  sub_260FE4420();
  id v2 = (id)sub_260FE4A30();
  if (!(v3 >> 62))
  {
    uint64_t v9 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_12;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_260FE4E40();
  swift_bridgeObjectRelease();
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_260FB6690(v2, v9);
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_260FE43F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_260FE43F0();
  swift_bridgeObjectRelease();
  id v25 = 0;
  id v12 = objc_msgSend(a1, sel_sliceAtOrigin_shape_squeeze_error_, v10, v11, 0, &v25);

  if (v12)
  {
    id v13 = v25;
    uint64_t v14 = sub_260FE4A30();
    unint64_t v15 = v26;
    if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
      || (v15 & 0x8000000000000000) != 0
      || (v15 & 0x4000000000000000) != 0)
    {
      sub_260EAF8C0(v15);
      unint64_t v15 = v16;
      uint64_t v26 = v16;
    }
    if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    int64_t v17 = *(void **)((v15 & 0xFFFFFFFFFFFFFF8) + 0x20);
    *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x20) = v14;

    sub_260FE4420();
    uint64_t v18 = (void *)sub_260FE43F0();
    swift_bridgeObjectRelease();
    id v19 = (void *)sub_260FE43F0();
    swift_bridgeObjectRelease();
    id v25 = 0;
    id v20 = objc_msgSend(a1, sel_sliceAtOrigin_shape_squeeze_error_, v18, v19, 0, &v25);

    if (v20)
    {
      id v21 = v25;
    }
    else
    {
      id v23 = v25;
      sub_260FE2E30();

      swift_willThrow();
    }
  }
  else
  {
    id v22 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_260FE2E30();

    swift_willThrow();
  }
  return v12;
}

void sub_260F73B90()
{
}

uint64_t sub_260F73BAC(unint64_t a1, uint64_t a2)
{
  return sub_260F7197C(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_260F73BB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t (*a6)(void), void (*a7)(void), void (*a8)(void))
{
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_retain();
  uint64_t v14 = ((uint64_t (*)(uint64_t))a6)(v13);
  if (!v15) {
    goto LABEL_23;
  }
  uint64_t v17 = v14;
  uint64_t v18 = v15;
  unint64_t v59 = a7;
  uint64_t v60 = v16;
  id v19 = (void *)*a5;
  unint64_t v21 = sub_260DBACB4(v14, v15);
  uint64_t v22 = v19[2];
  BOOL v23 = (v20 & 1) == 0;
  if (__OFADD__(v22, v23))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v24 = v20;
  if (v19[3] >= v22 + v23)
  {
    if (a4)
    {
      unint64_t v27 = (void *)*a5;
      if (v20) {
        goto LABEL_9;
      }
    }
    else
    {
      v59();
      unint64_t v27 = (void *)*a5;
      if (v24) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v27[(v21 >> 6) + 8] |= 1 << v21;
    char v31 = (uint64_t *)(v27[6] + 16 * v21);
    *char v31 = v17;
    v31[1] = v18;
    *(void *)(v27[7] + 8 * v21) = v60;
    uint64_t v32 = v27[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    size_t v27[2] = v34;
LABEL_13:
    uint64_t v35 = a6();
    if (v36)
    {
      uint64_t v38 = v35;
      uint64_t v39 = v36;
      uint64_t v40 = v37;
      do
      {
        uint64_t v46 = (void *)*a5;
        unint64_t v47 = sub_260DBACB4(v38, v39);
        uint64_t v49 = v46[2];
        BOOL v50 = (v48 & 1) == 0;
        BOOL v33 = __OFADD__(v49, v50);
        uint64_t v51 = v49 + v50;
        if (v33) {
          goto LABEL_24;
        }
        char v52 = v48;
        if (v46[3] < v51)
        {
          ((void (*)(uint64_t, uint64_t))a8)(v51, 1);
          unint64_t v47 = sub_260DBACB4(v38, v39);
          if ((v52 & 1) != (v53 & 1)) {
            goto LABEL_26;
          }
        }
        int64_t v54 = (void *)*a5;
        if (v52)
        {
          uint64_t v41 = 8 * v47;
          id v42 = *(id *)(v54[7] + 8 * v47);
          swift_bridgeObjectRelease();

          uint64_t v43 = v54[7];
          *(void *)(v43 + v41) = v42;
        }
        else
        {
          v54[(v47 >> 6) + 8] |= 1 << v47;
          BOOL v55 = (uint64_t *)(v54[6] + 16 * v47);
          *BOOL v55 = v38;
          v55[1] = v39;
          *(void *)(v54[7] + 8 * v47) = v40;
          uint64_t v56 = v54[2];
          BOOL v33 = __OFADD__(v56, 1);
          uint64_t v57 = v56 + 1;
          if (v33) {
            goto LABEL_25;
          }
          v54[2] = v57;
        }
        uint64_t v38 = a6();
        uint64_t v39 = v44;
        uint64_t v40 = v45;
      }
      while (v44);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_260DD782C();
    return swift_release();
  }
  a8();
  unint64_t v25 = sub_260DBACB4(v17, v18);
  if ((v24 & 1) == (v26 & 1))
  {
    unint64_t v21 = v25;
    unint64_t v27 = (void *)*a5;
    if ((v24 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v28 = 8 * v21;
    id v29 = *(id *)(v27[7] + v28);
    swift_bridgeObjectRelease();

    uint64_t v30 = v27[7];
    *(void *)(v30 + v28) = v29;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_260FE5280();
  __break(1u);
  return result;
}

id sub_260F73EF8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  id v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_260F73F44(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  id v20 = a3;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void *)(v19 - 8);
  uint64_t result = MEMORY[0x270FA5388](v19, v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  uint64_t v12 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (!v12) {
    return v13;
  }
  uint64_t v23 = MEMORY[0x263F8EE78];
  uint64_t result = sub_260F63738(0, v12 & ~(v12 >> 63), 0);
  if ((v12 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = v23;
    v18[1] = v7 + 32;
    uint64_t v14 = v21;
    if (a2 <= v21) {
      uint64_t v15 = v21;
    }
    else {
      uint64_t v15 = a2;
    }
    while (a2 != v14)
    {
      uint64_t v22 = v14;
      sub_260F72FB4(&v22, v20);
      if (v4)
      {
        swift_release();
        return v13;
      }
      uint64_t v4 = 0;
      uint64_t v23 = v13;
      unint64_t v17 = *(void *)(v13 + 16);
      unint64_t v16 = *(void *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_260F63738(v16 > 1, v17 + 1, 1);
        uint64_t v13 = v23;
      }
      *(void *)(v13 + 16) = v17 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v17, v11, v19);
      if (a2 < v21) {
        goto LABEL_18;
      }
      if (v15 == v14) {
        goto LABEL_19;
      }
      if (a2 == ++v14) {
        return v13;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_260F7413C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v147 = a2;
  uint64_t v184 = *MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7588);
  MEMORY[0x270FA5388](v3 - 8, v4);
  id v6 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_260FE2F90();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v7, v9);
  uint64_t v12 = (char *)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v13);
  uint64_t v15 = (char *)&v132 - v14;
  uint64_t v16 = MEMORY[0x263F8EE78];
  unint64_t v148 = sub_260F5B780(MEMORY[0x263F8EE78]);
  uint64_t v17 = v16;
  uint64_t v18 = a1;
  unint64_t v19 = sub_260F5B780(v17);
  sub_260D907BC(v18, (uint64_t)v6, &qword_26A8E7588);
  id v20 = "timestep_conditioning";
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_260D90820(v18, &qword_26A8E7588);
    sub_260D90820((uint64_t)v6, &qword_26A8E7588);
    BOOL v21 = 0;
    char v22 = 0;
    uint64_t v23 = (void *)MEMORY[0x263F8EE78];
    char v24 = (void *)MEMORY[0x263F8EE78];
LABEL_6:
    *(void *)&long long v150 = 0x746E6574616CLL;
    *((void *)&v150 + 1) = 0xE600000000000000;
    *(void *)&long long v151 = 1885697139;
    *((void *)&v151 + 1) = 0xE400000000000000;
    strcpy((char *)&v152, "conditioning");
    BYTE13(v152) = 0;
    HIWORD(v152) = -5120;
    *(void *)&long long v153 = 0xD000000000000013;
    *((void *)&v153 + 1) = 0x8000000261000F90;
    *(void *)&long long v154 = 0xD000000000000015;
    *((void *)&v154 + 1) = 0x8000000261000FB0;
    *(void *)&long long v155 = &unk_270D22840;
    *((void *)&v155 + 1) = 0xD000000000000015;
    *(void *)&long long v156 = 0x8000000261000E30;
    *((void *)&v156 + 1) = 0xD000000000000013;
    *(void *)&long long v157 = 0x8000000261000E10;
    *((void *)&v157 + 1) = &unk_270D22890;
    *(void *)&long long v158 = 0x6C6163735F6D636CLL;
    *((void *)&v158 + 1) = 0xE900000000000065;
    strcpy((char *)&v159, "use_lcm_pers");
    BYTE13(v159) = 0;
    HIWORD(v159) = -5120;
    *(void *)&long long v160 = v24;
    *((void *)&v160 + 1) = v23;
    *(void *)&long long v161 = v148;
    *((void *)&v161 + 1) = v19;
    LOBYTE(v162) = v22;
    HIBYTE(v162) = v21;
    v163[0] = (id)0x746E6574616CLL;
    v163[1] = (id)0xE600000000000000;
    v163[2] = (id)1885697139;
    v163[3] = (id)0xE400000000000000;
    strcpy((char *)v164, "conditioning");
    HIBYTE(v164[6]) = 0;
    v164[7] = -5120;
    unint64_t v165 = 0xD000000000000013;
    unint64_t v166 = 0x8000000261000F90;
    unint64_t v167 = 0xD000000000000015;
    unint64_t v168 = 0x8000000261000FB0;
    id v169 = &unk_270D22840;
    unint64_t v170 = 0xD000000000000015;
    unint64_t v171 = 0x8000000261000E30;
    unint64_t v172 = 0xD000000000000013;
    unint64_t v173 = 0x8000000261000E10;
    int v174 = &unk_270D22890;
    uint64_t v175 = 0x6C6163735F6D636CLL;
    unint64_t v176 = 0xE900000000000065;
    strcpy((char *)v177, "use_lcm_pers");
    HIBYTE(v177[6]) = 0;
    v177[7] = -5120;
    uint64_t v178 = v24;
    uint64_t v179 = v23;
    unint64_t v180 = v148;
    unint64_t v181 = v19;
    char v182 = v22;
    BOOL v183 = v21;
    sub_260F77618((uint64_t)&v150);
    uint64_t result = sub_260F77718((uint64_t)v163);
    long long v31 = v161;
    uint64_t v32 = v147;
    *(_OWORD *)(v147 + 160) = v160;
    *(_OWORD *)(v32 + 176) = v31;
    *(_WORD *)(v32 + 192) = v162;
    long long v33 = v157;
    *(_OWORD *)(v32 + 96) = v156;
    *(_OWORD *)(v32 + 112) = v33;
    long long v34 = v159;
    *(_OWORD *)(v32 + 128) = v158;
    *(_OWORD *)(v32 + 144) = v34;
    long long v35 = v153;
    *(_OWORD *)(v32 + 32) = v152;
    *(_OWORD *)(v32 + 48) = v35;
    long long v36 = v155;
    *(_OWORD *)(v32 + 64) = v154;
    *(_OWORD *)(v32 + 80) = v36;
    long long v37 = v151;
    *(_OWORD *)uint64_t v32 = v150;
    *(_OWORD *)(v32 + 16) = v37;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v6, v7);
  sub_260D905B0(0, &qword_26A8EACC8);
  uint64_t v145 = v15;
  uint64_t v146 = v8;
  unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v144 = v7;
  v25(v12, v15, v7);
  char v26 = v149;
  id v27 = sub_260FD5674((uint64_t)v12);
  if (v26)
  {

    id v29 = v145;
    uint64_t v28 = v146;
LABEL_5:
    sub_260D90820(v18, &qword_26A8E7588);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v144);
    BOOL v21 = 0;
    char v22 = 0;
    uint64_t v23 = (void *)MEMORY[0x263F8EE78];
    char v24 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_6;
  }
  uint64_t v38 = v27;
  id v29 = v145;
  uint64_t v28 = v146;
  if (!v27) {
    goto LABEL_5;
  }
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v38;
  id v40 = v38;
  uint64_t v41 = (void *)sub_260FD59A0((uint64_t)&unk_26A8EACD8, v39);
  uint64_t v149 = 0;
  id v138 = v41;
  swift_release();
  if (!v138)
  {

    goto LABEL_5;
  }
  id v42 = objc_msgSend(v138, sel_inputDescriptionsByName);
  uint64_t v136 = sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
  uint64_t v43 = sub_260FE3EB0();

  uint64_t v44 = *(void *)(v43 + 16);
  id v133 = v40;
  uint64_t v134 = v18;
  uint64_t v142 = v43;
  id v143 = (id)v19;
  if (!v44)
  {
    uint64_t v132 = (void *)MEMORY[0x263F8EE78];
    unint64_t v135 = (void *)MEMORY[0x263F8EE78];
    id v47 = (id)v148;
    goto LABEL_49;
  }
  unint64_t v45 = sub_260DBACB4(0x746E6574616CLL, 0xE600000000000000);
  uint64_t v46 = (void *)MEMORY[0x263F8EE78];
  id v47 = (id)v148;
  if (v48)
  {
    id v49 = *(id *)(*(void *)(v43 + 56) + 8 * v45);
    id v50 = objc_msgSend(v49, sel_multiArrayConstraint);
    if (v50)
    {
      uint64_t v51 = v50;
      id v52 = objc_msgSend(v50, sel_shape);
      sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
      unint64_t v53 = sub_260FE4400();

      if (v53 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v54 = sub_260FE4E40();
        swift_bridgeObjectRelease();
        if (v54) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v54 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v54)
        {
LABEL_14:
          id v140 = v51;
          unint64_t v141 = (char *)v49;
          v163[0] = v46;
          sub_260DB4728(0, v54 & ~(v54 >> 63), 0);
          if (v54 < 0)
          {
            __break(1u);
            goto LABEL_46;
          }
          uint64_t v55 = 0;
          uint64_t v46 = v163[0];
          unint64_t v56 = v53 & 0xC000000000000001;
          unint64_t v57 = v53;
          do
          {
            if (v56) {
              id v58 = (id)MEMORY[0x26122B4C0](v55, v53);
            }
            else {
              id v58 = *(id *)(v53 + 8 * v55 + 32);
            }
            unint64_t v59 = v58;
            id v60 = objc_msgSend(v58, sel_integerValue);

            v163[0] = v46;
            id v61 = v46;
            unint64_t v62 = v46[2];
            unint64_t v63 = v61[3];
            if (v62 >= v63 >> 1)
            {
              sub_260DB4728(v63 > 1, v62 + 1, 1);
              id v61 = v163[0];
            }
            ++v55;
            v61[2] = v62 + 1;
            v61[v62 + 4] = v60;
            uint64_t v46 = v61;
            unint64_t v53 = v57;
          }
          while (v54 != v55);
          swift_bridgeObjectRelease();

          goto LABEL_28;
        }
      }
      swift_bridgeObjectRelease();

LABEL_28:
      id v47 = (id)v148;
      uint64_t v43 = v142;
      goto LABEL_29;
    }
  }
LABEL_29:
  uint64_t v64 = *(void *)(v43 + 16);
  uint64_t v132 = v46;
  if (!v64)
  {
LABEL_44:
    unint64_t v135 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_49;
  }
  unint64_t v65 = sub_260DBACB4(0xD000000000000015, 0x8000000261000FB0);
  unint64_t v135 = (void *)MEMORY[0x263F8EE78];
  if (v66)
  {
    id v20 = (char *)*(id *)(*(void *)(v43 + 56) + 8 * v65);
    id v67 = objc_msgSend(v20, sel_multiArrayConstraint);
    if (v67)
    {
      id v49 = v67;
      id v68 = objc_msgSend(v67, sel_shape);
      sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
      unint64_t v53 = sub_260FE4400();

      if (!(v53 >> 62))
      {
        uint64_t v69 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v69)
        {
LABEL_34:
          id v140 = v49;
          unint64_t v141 = v20;
          v163[0] = (id)MEMORY[0x263F8EE78];
          uint64_t result = sub_260DB4728(0, v69 & ~(v69 >> 63), 0);
          if (v69 < 0)
          {
            __break(1u);
            return result;
          }
          uint64_t v70 = 0;
          uint64_t v71 = v163[0];
          unint64_t v72 = v53 & 0xC000000000000001;
          unint64_t v73 = v53;
          do
          {
            if (v72) {
              id v74 = (id)MEMORY[0x26122B4C0](v70, v53);
            }
            else {
              id v74 = *(id *)(v53 + 8 * v70 + 32);
            }
            uint64_t v75 = v74;
            id v76 = objc_msgSend(v74, sel_integerValue, v132, v133, v134);

            v163[0] = v71;
            unint64_t v78 = v71[2];
            unint64_t v77 = v71[3];
            int64_t v79 = v71;
            if (v78 >= v77 >> 1)
            {
              sub_260DB4728(v77 > 1, v78 + 1, 1);
              int64_t v79 = v163[0];
            }
            ++v70;
            v79[2] = v78 + 1;
            v79[v78 + 4] = v76;
            uint64_t v71 = v79;
            unint64_t v53 = v73;
          }
          while (v69 != v70);
          unint64_t v135 = v79;
          swift_bridgeObjectRelease();

          goto LABEL_48;
        }
LABEL_47:
        swift_bridgeObjectRelease();

        unint64_t v135 = (void *)MEMORY[0x263F8EE78];
LABEL_48:
        id v47 = (id)v148;
        uint64_t v43 = v142;
        goto LABEL_49;
      }
LABEL_46:
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_260FE4E40();
      swift_bridgeObjectRelease();
      if (v69) {
        goto LABEL_34;
      }
      goto LABEL_47;
    }

    goto LABEL_44;
  }
LABEL_49:
  uint64_t v80 = qword_270D22850;
  if (qword_270D22850)
  {
    long long v81 = (uint64_t *)&off_270D22868;
    uint64_t v137 = MEMORY[0x263F8EE60] + 8;
    do
    {
      if (*(void *)(v43 + 16))
      {
        uint64_t v83 = *(v81 - 1);
        uint64_t v82 = *v81;
        swift_bridgeObjectRetain_n();
        unint64_t v84 = sub_260DBACB4(v83, v82);
        if (v85)
        {
          id v86 = *(id *)(*(void *)(v43 + 56) + 8 * v84);
          swift_bridgeObjectRelease();
          id v87 = objc_msgSend(v86, sel_multiArrayConstraint);
          if (v87)
          {
            uint64_t v88 = v87;
            id v140 = v86;
            unint64_t v148 = (unint64_t)v47;
            id v89 = objc_msgSend(v87, sel_shape);
            sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
            sub_260FE4400();

            id v139 = v88;
            unint64_t v141 = (char *)objc_msgSend(v88, sel_dataType);
            id v90 = objc_allocWithZone(MEMORY[0x263F00DA8]);
            __int16 v91 = (void *)sub_260FE43F0();
            swift_bridgeObjectRelease();
            v163[0] = 0;
            id v92 = objc_msgSend(v90, sel_initWithShape_dataType_error_, v91, v141, v163);

            if (!v92)
            {
              id v127 = v163[0];
              sub_260FE2E30();

              swift_willThrow();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              goto LABEL_80;
            }
            id v93 = v163[0];
            uint64_t v94 = v149;
            sub_260FE4820();
            uint64_t v149 = v94;
            uint64_t v95 = (void *)v148;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v163[0] = v95;
            sub_260FC65FC((uint64_t)v92, v83, v82, isUniquelyReferenced_nonNull_native);
            id v47 = v163[0];

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v43 = v142;
          }
          else
          {

            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v81 += 2;
      --v80;
    }
    while (v80);
  }
  uint64_t v97 = qword_270D228A0;
  unint64_t v148 = (unint64_t)v47;
  if (!qword_270D228A0)
  {
LABEL_69:
    swift_bridgeObjectRelease();
    id v114 = objc_msgSend(v138, sel_inputDescriptionsByName);
    uint64_t v115 = sub_260FE3EB0();

    unint64_t v19 = (unint64_t)v143;
    uint64_t v117 = v145;
    uint64_t v116 = v146;
    if (*(void *)(v115 + 16) && (unint64_t v118 = sub_260DBACB4(0x6C6163735F6D636CLL, 0xE900000000000065), (v119 & 1) != 0))
    {
      id v120 = *(id *)(*(void *)(v115 + 56) + 8 * v118);
      char v22 = 1;
    }
    else
    {
      char v22 = 0;
      id v120 = 0;
    }
    swift_bridgeObjectRelease();
    id v121 = objc_msgSend(v138, sel_inputDescriptionsByName);
    uint64_t v122 = sub_260FE3EB0();

    if (*(void *)(v122 + 16) && (unint64_t v123 = sub_260DBACB4(0x5F6D636C5F657375, 0xEC00000073726570), (v124 & 1) != 0))
    {
      uint64_t v125 = *(void **)(*(void *)(v122 + 56) + 8 * v123);
      id v126 = v125;
    }
    else
    {
      uint64_t v125 = 0;
    }
    swift_bridgeObjectRelease();

    sub_260D90820(v134, &qword_26A8E7588);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v117, v144);
    BOOL v21 = v125 != 0;

    char v24 = v132;
    uint64_t v23 = v135;
    goto LABEL_6;
  }
  uint64_t v98 = (uint64_t *)&off_270D228B8;
  uint64_t v137 = MEMORY[0x263F8EE60] + 8;
  while (1)
  {
    if (!*(void *)(v43 + 16)) {
      goto LABEL_62;
    }
    uint64_t v100 = *(v98 - 1);
    uint64_t v99 = *v98;
    swift_bridgeObjectRetain_n();
    unint64_t v101 = sub_260DBACB4(v100, v99);
    if (v102) {
      break;
    }
    swift_bridgeObjectRelease_n();
LABEL_62:
    v98 += 2;
    if (!--v97) {
      goto LABEL_69;
    }
  }
  id v103 = *(id *)(*(void *)(v43 + 56) + 8 * v101);
  swift_bridgeObjectRelease();
  id v104 = objc_msgSend(v103, sel_multiArrayConstraint);
  if (!v104)
  {

    swift_bridgeObjectRelease();
    goto LABEL_62;
  }
  uint64_t v105 = v104;
  id v140 = v103;
  id v106 = objc_msgSend(v104, sel_shape);
  sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
  sub_260FE4400();

  id v139 = v105;
  unint64_t v141 = (char *)objc_msgSend(v105, sel_dataType);
  id v107 = objc_allocWithZone(MEMORY[0x263F00DA8]);
  uint64_t v108 = (void *)sub_260FE43F0();
  swift_bridgeObjectRelease();
  v163[0] = 0;
  id v109 = objc_msgSend(v107, sel_initWithShape_dataType_error_, v108, v141, v163);

  if (v109)
  {
    id v110 = v163[0];
    os_log_type_t v111 = v149;
    sub_260FE4820();
    uint64_t v149 = v111;
    unint64_t v112 = v143;
    char v113 = swift_isUniquelyReferenced_nonNull_native();
    v163[0] = v112;
    sub_260FC65FC((uint64_t)v109, v100, v99, v113);
    id v143 = v163[0];

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v43 = v142;
    goto LABEL_62;
  }
  id v128 = v163[0];
  sub_260FE2E30();

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_80:
  uint64_t v129 = v144;
  uint64_t v130 = v145;
  uint64_t v131 = v146;
  sub_260D90820(v134, &qword_26A8E7588);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v130, v129);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for AppleDiffusionUnet()
{
  uint64_t result = qword_26A8EACB8;
  if (!qword_26A8EACB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_260F75200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_260F75268(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConcreteAdapter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_260F752C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConcreteAdapter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for AppleDiffusionUnet(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v21 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
    return v3;
  }
  uint64_t v5 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = a2[11];
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = a2[13];
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = v11;
  uint64_t v12 = a2[15];
  *(void *)(a1 + 112) = a2[14];
  *(void *)(a1 + 120) = v12;
  uint64_t v13 = a2[17];
  *(void *)(a1 + 128) = a2[16];
  *(void *)(a1 + 136) = v13;
  uint64_t v14 = a2[19];
  *(void *)(a1 + 144) = a2[18];
  *(void *)(a1 + 152) = v14;
  uint64_t v15 = a2[21];
  *(void *)(a1 + 160) = a2[20];
  *(void *)(a1 + 168) = v15;
  uint64_t v16 = a2[23];
  *(void *)(a1 + 176) = a2[22];
  *(void *)(a1 + 184) = v16;
  *(_WORD *)(a1 + 192) = *((_WORD *)a2 + 96);
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v41 = (unsigned char *)(a1 + v17);
  uint64_t v18 = (char *)a2 + v17;
  *(void *)(a1 + 200) = a2[25];
  uint64_t v19 = type metadata accessor for ConcreteAdapter();
  uint64_t v39 = *(void *)(v19 - 8);
  id v40 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v39 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40(v18, 1, v19))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
    memcpy(v41, v18, *(void *)(*(void *)(v20 - 8) + 64));
    return v3;
  }
  *uint64_t v41 = *v18;
  uint64_t v22 = *(int *)(v19 + 20);
  uint64_t v23 = &v41[v22];
  char v24 = &v18[v22];
  uint64_t v25 = sub_260FE2F90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  uint64_t v26 = *(int *)(v19 + 24);
  id v27 = &v41[v26];
  uint64_t v28 = &v18[v26];
  uint64_t v29 = *(void *)&v18[v26 + 8];
  if (v29 != 1)
  {
    *(void *)id v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    uint64_t v32 = *((void *)v28 + 3);
    *((void *)v27 + 2) = *((void *)v28 + 2);
    *((void *)v27 + 3) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = *((void *)v28 + 5);
    if (v31) {
      goto LABEL_7;
    }
LABEL_9:
    long long v33 = *((_OWORD *)v28 + 3);
    *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
    *((_OWORD *)v27 + 3) = v33;
    long long v34 = *((_OWORD *)v28 + 5);
    *((_OWORD *)v27 + 4) = *((_OWORD *)v28 + 4);
    *((_OWORD *)v27 + 5) = v34;
    goto LABEL_10;
  }
  long long v30 = *((_OWORD *)v28 + 1);
  *(_OWORD *)id v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v30;
  uint64_t v31 = *((void *)v28 + 5);
  if (!v31) {
    goto LABEL_9;
  }
LABEL_7:
  v27[32] = v28[32];
  *((_DWORD *)v27 + 9) = *((_DWORD *)v28 + 9);
  *((void *)v27 + 5) = v31;
  *((_DWORD *)v27 + 12) = *((_DWORD *)v28 + 12);
  *((void *)v27 + 7) = *((void *)v28 + 7);
  *((_DWORD *)v27 + 16) = *((_DWORD *)v28 + 16);
  v27[68] = v28[68];
  *((void *)v27 + 9) = *((void *)v28 + 9);
  v27[84] = v28[84];
  *((_DWORD *)v27 + 20) = *((_DWORD *)v28 + 20);
  *((void *)v27 + 11) = *((void *)v28 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_10:
  *((void *)v27 + 12) = *((void *)v28 + 12);
  uint64_t v35 = *((void *)v28 + 14);
  swift_bridgeObjectRetain();
  if (v35 == 1)
  {
    *(_OWORD *)(v27 + 104) = *(_OWORD *)(v28 + 104);
    v27[120] = v28[120];
  }
  else
  {
    *((void *)v27 + 13) = *((void *)v28 + 13);
    *((void *)v27 + 14) = v35;
    v27[120] = v28[120];
    swift_bridgeObjectRetain();
  }
  *((void *)v27 + 16) = *((void *)v28 + 16);
  *(_OWORD *)(v27 + 136) = *(_OWORD *)(v28 + 136);
  *(_OWORD *)(v27 + 152) = *(_OWORD *)(v28 + 152);
  *(_DWORD *)(v27 + 167) = *(_DWORD *)(v28 + 167);
  uint64_t v36 = *((void *)v28 + 23);
  *((void *)v27 + 22) = *((void *)v28 + 22);
  *((void *)v27 + 23) = v36;
  long long v37 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v39 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37(v41, 0, 1, v19);
  return v3;
}

uint64_t destroy for AppleDiffusionUnet(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for ConcreteAdapter();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = v4 + *(int *)(v5 + 20);
    uint64_t v8 = sub_260FE2F90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = (void *)(v4 + *(int *)(v5 + 24));
    if (v9[1] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v9[5])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (v9[14] != 1) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AppleDiffusionUnet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  uint64_t v14 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v14;
  uint64_t v15 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v39 = (unsigned char *)(a1 + v16);
  uint64_t v17 = (unsigned char *)(a2 + v16);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  uint64_t v18 = type metadata accessor for ConcreteAdapter();
  uint64_t v37 = *(void *)(v18 - 8);
  uint64_t v38 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38(v17, 1, v18))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
    memcpy(v39, v17, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  *uint64_t v39 = *v17;
  uint64_t v20 = *(int *)(v18 + 20);
  uint64_t v21 = &v39[v20];
  uint64_t v22 = &v17[v20];
  uint64_t v23 = sub_260FE2F90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = *(int *)(v18 + 24);
  uint64_t v25 = &v39[v24];
  uint64_t v26 = &v17[v24];
  uint64_t v27 = *(void *)&v17[v24 + 8];
  if (v27 != 1)
  {
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    uint64_t v30 = *((void *)v26 + 3);
    *((void *)v25 + 2) = *((void *)v26 + 2);
    *((void *)v25 + 3) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = *((void *)v26 + 5);
    if (v29) {
      goto LABEL_5;
    }
LABEL_7:
    long long v31 = *((_OWORD *)v26 + 3);
    *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
    *((_OWORD *)v25 + 3) = v31;
    long long v32 = *((_OWORD *)v26 + 5);
    *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
    *((_OWORD *)v25 + 5) = v32;
    goto LABEL_8;
  }
  long long v28 = *((_OWORD *)v26 + 1);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v28;
  uint64_t v29 = *((void *)v26 + 5);
  if (!v29) {
    goto LABEL_7;
  }
LABEL_5:
  unsigned char v25[32] = v26[32];
  *((_DWORD *)v25 + 9) = *((_DWORD *)v26 + 9);
  *((void *)v25 + 5) = v29;
  *((_DWORD *)v25 + 12) = *((_DWORD *)v26 + 12);
  *((void *)v25 + 7) = *((void *)v26 + 7);
  *((_DWORD *)v25 + 16) = *((_DWORD *)v26 + 16);
  v25[68] = v26[68];
  *((void *)v25 + 9) = *((void *)v26 + 9);
  v25[84] = v26[84];
  *((_DWORD *)v25 + 20) = *((_DWORD *)v26 + 20);
  *((void *)v25 + 11) = *((void *)v26 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *((void *)v25 + 12) = *((void *)v26 + 12);
  uint64_t v33 = *((void *)v26 + 14);
  swift_bridgeObjectRetain();
  if (v33 == 1)
  {
    *(_OWORD *)(v25 + 104) = *(_OWORD *)(v26 + 104);
    v25[120] = v26[120];
  }
  else
  {
    *((void *)v25 + 13) = *((void *)v26 + 13);
    *((void *)v25 + 14) = v33;
    v25[120] = v26[120];
    swift_bridgeObjectRetain();
  }
  *((void *)v25 + 16) = *((void *)v26 + 16);
  *(_OWORD *)(v25 + 136) = *(_OWORD *)(v26 + 136);
  *(_OWORD *)(v25 + 152) = *(_OWORD *)(v26 + 152);
  *(_DWORD *)(v25 + 167) = *(_DWORD *)(v26 + 167);
  uint64_t v34 = *((void *)v26 + 23);
  *((void *)v25 + 22) = *((void *)v26 + 22);
  *((void *)v25 + 23) = v34;
  uint64_t v35 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v37 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v35(v39, 0, 1, v18);
  return a1;
}

uint64_t assignWithCopy for AppleDiffusionUnet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ConcreteAdapter();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *uint64_t v7 = *v8;
      uint64_t v14 = *(int *)(v9 + 20);
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      uint64_t v17 = sub_260FE2F90();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      uint64_t v18 = *(int *)(v9 + 24);
      uint64_t v19 = &v7[v18];
      uint64_t v20 = &v8[v18];
      if (*(void *)&v8[v18 + 8] == 1)
      {
        long long v21 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v21;
        if (*((void *)v20 + 5))
        {
LABEL_5:
          v19[32] = v20[32];
          *((_DWORD *)v19 + 9) = *((_DWORD *)v20 + 9);
          *((void *)v19 + 5) = *((void *)v20 + 5);
          *((_DWORD *)v19 + 12) = *((_DWORD *)v20 + 12);
          *((void *)v19 + 7) = *((void *)v20 + 7);
          int v22 = *((_DWORD *)v20 + 16);
          v19[68] = v20[68];
          *((_DWORD *)v19 + 16) = v22;
          *((void *)v19 + 9) = *((void *)v20 + 9);
          int v23 = *((_DWORD *)v20 + 20);
          v19[84] = v20[84];
          *((_DWORD *)v19 + 20) = v23;
          *((void *)v19 + 11) = *((void *)v20 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_14:
          *((void *)v19 + 12) = *((void *)v20 + 12);
          uint64_t v37 = *((void *)v20 + 14);
          swift_bridgeObjectRetain();
          if (v37 == 1)
          {
            long long v38 = *(_OWORD *)(v20 + 104);
            v19[120] = v20[120];
            *(_OWORD *)(v19 + 104) = v38;
          }
          else
          {
            *((void *)v19 + 13) = *((void *)v20 + 13);
            *((void *)v19 + 14) = *((void *)v20 + 14);
            v19[120] = v20[120];
            swift_bridgeObjectRetain();
          }
          *((void *)v19 + 16) = *((void *)v20 + 16);
          long long v39 = *(_OWORD *)(v20 + 136);
          long long v40 = *(_OWORD *)(v20 + 152);
          *(_DWORD *)(v19 + 167) = *(_DWORD *)(v20 + 167);
          *(_OWORD *)(v19 + 152) = v40;
          *(_OWORD *)(v19 + 136) = v39;
          *((void *)v19 + 22) = *((void *)v20 + 22);
          *((void *)v19 + 23) = *((void *)v20 + 23);
          uint64_t v41 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v41(v7, 0, 1, v9);
          return a1;
        }
      }
      else
      {
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = *((void *)v20 + 1);
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *((void *)v19 + 3) = *((void *)v20 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (*((void *)v20 + 5)) {
          goto LABEL_5;
        }
      }
      long long v34 = *((_OWORD *)v20 + 2);
      long long v35 = *((_OWORD *)v20 + 3);
      long long v36 = *((_OWORD *)v20 + 5);
      *((_OWORD *)v19 + 4) = *((_OWORD *)v20 + 4);
      *((_OWORD *)v19 + 5) = v36;
      *((_OWORD *)v19 + 2) = v34;
      *((_OWORD *)v19 + 3) = v35;
      goto LABEL_14;
    }
LABEL_8:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
    memcpy(v7, v8, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  if (v13)
  {
    sub_260F75268((uint64_t)v7);
    goto LABEL_8;
  }
  *uint64_t v7 = *v8;
  uint64_t v25 = *(int *)(v9 + 20);
  uint64_t v26 = &v7[v25];
  uint64_t v27 = &v8[v25];
  uint64_t v28 = sub_260FE2F90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  uint64_t v29 = *(int *)(v9 + 24);
  uint64_t v30 = (uint64_t)&v7[v29];
  long long v31 = &v8[v29];
  uint64_t v32 = *(void *)&v8[v29 + 8];
  if (*(void *)(v30 + 8) == 1)
  {
    if (v32 == 1)
    {
      long long v33 = *((_OWORD *)v31 + 1);
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
      *(_OWORD *)(v30 + 16) = v33;
    }
    else
    {
      *(void *)uint64_t v30 = *(void *)v31;
      *(void *)(v30 + 8) = *((void *)v31 + 1);
      *(void *)(v30 + 16) = *((void *)v31 + 2);
      *(void *)(v30 + 24) = *((void *)v31 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v32 == 1)
  {
    sub_260F6689C(v30);
    long long v42 = *((_OWORD *)v31 + 1);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v42;
  }
  else
  {
    *(void *)uint64_t v30 = *(void *)v31;
    *(void *)(v30 + 8) = *((void *)v31 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v30 + 16) = *((void *)v31 + 2);
    *(void *)(v30 + 24) = *((void *)v31 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v43 = (_OWORD *)(v30 + 32);
  uint64_t v44 = (long long *)(v31 + 32);
  uint64_t v45 = *((void *)v31 + 5);
  if (*(void *)(v30 + 40))
  {
    if (v45)
    {
      *(unsigned char *)(v30 + 32) = v31[32];
      *(_DWORD *)(v30 + 36) = *((_DWORD *)v31 + 9);
      *(void *)(v30 + 40) = *((void *)v31 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v30 + 48) = *((_DWORD *)v31 + 12);
      *(void *)(v30 + 56) = *((void *)v31 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v46 = *((_DWORD *)v31 + 16);
      *(unsigned char *)(v30 + 68) = v31[68];
      *(_DWORD *)(v30 + 64) = v46;
      *(void *)(v30 + 72) = *((void *)v31 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v47 = *((_DWORD *)v31 + 20);
      *(unsigned char *)(v30 + 84) = v31[84];
      *(_DWORD *)(v30 + 80) = v47;
      *(void *)(v30 + 88) = *((void *)v31 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260F668F0(v30 + 32);
      long long v50 = *((_OWORD *)v31 + 5);
      long long v52 = *v44;
      long long v51 = *((_OWORD *)v31 + 3);
      *(_OWORD *)(v30 + 64) = *((_OWORD *)v31 + 4);
      *(_OWORD *)(v30 + 80) = v50;
      _OWORD *v43 = v52;
      *(_OWORD *)(v30 + 48) = v51;
    }
  }
  else if (v45)
  {
    *(unsigned char *)(v30 + 32) = v31[32];
    *(_DWORD *)(v30 + 36) = *((_DWORD *)v31 + 9);
    *(void *)(v30 + 40) = *((void *)v31 + 5);
    *(_DWORD *)(v30 + 48) = *((_DWORD *)v31 + 12);
    *(void *)(v30 + 56) = *((void *)v31 + 7);
    int v48 = *((_DWORD *)v31 + 16);
    *(unsigned char *)(v30 + 68) = v31[68];
    *(_DWORD *)(v30 + 64) = v48;
    *(void *)(v30 + 72) = *((void *)v31 + 9);
    int v49 = *((_DWORD *)v31 + 20);
    *(unsigned char *)(v30 + 84) = v31[84];
    *(_DWORD *)(v30 + 80) = v49;
    *(void *)(v30 + 88) = *((void *)v31 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v53 = *v44;
    long long v54 = *((_OWORD *)v31 + 3);
    long long v55 = *((_OWORD *)v31 + 5);
    *(_OWORD *)(v30 + 64) = *((_OWORD *)v31 + 4);
    *(_OWORD *)(v30 + 80) = v55;
    _OWORD *v43 = v53;
    *(_OWORD *)(v30 + 48) = v54;
  }
  *(void *)(v30 + 96) = *((void *)v31 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v56 = (long long *)(v30 + 104);
  unint64_t v57 = (long long *)(v31 + 104);
  uint64_t v58 = *((void *)v31 + 14);
  if (*(void *)(v30 + 112) == 1)
  {
    if (v58 == 1)
    {
      long long v59 = *v57;
      *(unsigned char *)(v30 + 120) = v31[120];
      *unint64_t v56 = v59;
    }
    else
    {
      *(void *)(v30 + 104) = *((void *)v31 + 13);
      *(void *)(v30 + 112) = *((void *)v31 + 14);
      *(unsigned char *)(v30 + 120) = v31[120];
      swift_bridgeObjectRetain();
    }
  }
  else if (v58 == 1)
  {
    sub_260F66944(v30 + 104);
    char v60 = v31[120];
    *unint64_t v56 = *v57;
    *(unsigned char *)(v30 + 120) = v60;
  }
  else
  {
    *(void *)(v30 + 104) = *((void *)v31 + 13);
    *(void *)(v30 + 112) = *((void *)v31 + 14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v30 + 120) = v31[120];
  }
  *(void *)(v30 + 128) = *((void *)v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v61 = *(_OWORD *)(v31 + 136);
  long long v62 = *(_OWORD *)(v31 + 152);
  *(_DWORD *)(v30 + 167) = *(_DWORD *)(v31 + 167);
  *(_OWORD *)(v30 + 152) = v62;
  *(_OWORD *)(v30 + 136) = v61;
  *(void *)(v30 + 176) = *((void *)v31 + 22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v30 + 184) = *((void *)v31 + 23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AppleDiffusionUnet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v4;
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (unsigned char *)(a2 + v10);
  int v12 = (unsigned char *)(a1 + v10);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  uint64_t v13 = type metadata accessor for ConcreteAdapter();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
    memcpy(v12, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    *int v12 = *v11;
    uint64_t v16 = *(int *)(v13 + 20);
    uint64_t v17 = &v12[v16];
    uint64_t v18 = &v11[v16];
    uint64_t v19 = sub_260FE2F90();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    uint64_t v20 = *(int *)(v13 + 24);
    long long v21 = &v12[v20];
    int v22 = &v11[v20];
    long long v23 = v22[9];
    v21[8] = v22[8];
    v21[9] = v23;
    long long v24 = v22[11];
    v21[10] = v22[10];
    v21[11] = v24;
    long long v25 = v22[5];
    v21[4] = v22[4];
    v21[5] = v25;
    long long v26 = v22[7];
    v21[6] = v22[6];
    v21[7] = v26;
    long long v27 = v22[1];
    _OWORD *v21 = *v22;
    v21[1] = v27;
    long long v28 = v22[3];
    void v21[2] = v22[2];
    id v21[3] = v28;
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  }
  return a1;
}

uint64_t assignWithTake for AppleDiffusionUnet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (unsigned char *)(a1 + v15);
  uint64_t v17 = (unsigned char *)(a2 + v15);
  uint64_t v18 = type metadata accessor for ConcreteAdapter();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_260F75268((uint64_t)v16);
      goto LABEL_6;
    }
    unsigned char *v16 = *v17;
    uint64_t v38 = *(int *)(v18 + 20);
    long long v39 = &v16[v38];
    long long v40 = &v17[v38];
    uint64_t v41 = sub_260FE2F90();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 40))(v39, v40, v41);
    uint64_t v42 = *(int *)(v18 + 24);
    uint64_t v43 = (uint64_t)&v16[v42];
    uint64_t v44 = &v17[v42];
    if (*(void *)(v43 + 8) != 1)
    {
      uint64_t v45 = *((void *)v44 + 1);
      if (v45 != 1)
      {
        *(void *)uint64_t v43 = *(void *)v44;
        *(void *)(v43 + 8) = v45;
        swift_bridgeObjectRelease();
        uint64_t v47 = *((void *)v44 + 3);
        *(void *)(v43 + 16) = *((void *)v44 + 2);
        *(void *)(v43 + 24) = v47;
        swift_bridgeObjectRelease();
LABEL_13:
        if (*(void *)(v43 + 40))
        {
          uint64_t v48 = *((void *)v44 + 5);
          if (v48)
          {
            *(unsigned char *)(v43 + 32) = v44[32];
            *(_DWORD *)(v43 + 36) = *((_DWORD *)v44 + 9);
            *(void *)(v43 + 40) = v48;
            swift_bridgeObjectRelease();
            *(_DWORD *)(v43 + 48) = *((_DWORD *)v44 + 12);
            *(void *)(v43 + 56) = *((void *)v44 + 7);
            swift_bridgeObjectRelease();
            *(_DWORD *)(v43 + 64) = *((_DWORD *)v44 + 16);
            *(unsigned char *)(v43 + 68) = v44[68];
            *(void *)(v43 + 72) = *((void *)v44 + 9);
            swift_bridgeObjectRelease();
            *(_DWORD *)(v43 + 80) = *((_DWORD *)v44 + 20);
            *(unsigned char *)(v43 + 84) = v44[84];
            *(void *)(v43 + 88) = *((void *)v44 + 11);
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
          sub_260F668F0(v43 + 32);
        }
        long long v49 = *((_OWORD *)v44 + 3);
        *(_OWORD *)(v43 + 32) = *((_OWORD *)v44 + 2);
        *(_OWORD *)(v43 + 48) = v49;
        long long v50 = *((_OWORD *)v44 + 5);
        *(_OWORD *)(v43 + 64) = *((_OWORD *)v44 + 4);
        *(_OWORD *)(v43 + 80) = v50;
LABEL_18:
        *(void *)(v43 + 96) = *((void *)v44 + 12);
        swift_bridgeObjectRelease();
        if (*(void *)(v43 + 112) != 1)
        {
          uint64_t v51 = *((void *)v44 + 14);
          if (v51 != 1)
          {
            *(void *)(v43 + 104) = *((void *)v44 + 13);
            *(void *)(v43 + 112) = v51;
            swift_bridgeObjectRelease();
            *(unsigned char *)(v43 + 120) = v44[120];
            goto LABEL_23;
          }
          sub_260F66944(v43 + 104);
        }
        *(_OWORD *)(v43 + 104) = *(_OWORD *)(v44 + 104);
        *(unsigned char *)(v43 + 120) = v44[120];
LABEL_23:
        *(void *)(v43 + 128) = *((void *)v44 + 16);
        swift_bridgeObjectRelease();
        *(_OWORD *)(v43 + 136) = *(_OWORD *)(v44 + 136);
        *(_OWORD *)(v43 + 152) = *(_OWORD *)(v44 + 152);
        *(_DWORD *)(v43 + 167) = *(_DWORD *)(v44 + 167);
        *(void *)(v43 + 176) = *((void *)v44 + 22);
        swift_bridgeObjectRelease();
        *(void *)(v43 + 184) = *((void *)v44 + 23);
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_260F6689C(v43);
    }
    long long v46 = *((_OWORD *)v44 + 1);
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    *(_OWORD *)(v43 + 16) = v46;
    goto LABEL_13;
  }
  if (v22)
  {
LABEL_6:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
    memcpy(v16, v17, *(void *)(*(void *)(v36 - 8) + 64));
    return a1;
  }
  unsigned char *v16 = *v17;
  uint64_t v23 = *(int *)(v18 + 20);
  long long v24 = &v16[v23];
  long long v25 = &v17[v23];
  uint64_t v26 = sub_260FE2F90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = *(int *)(v18 + 24);
  long long v28 = &v16[v27];
  uint64_t v29 = &v17[v27];
  long long v30 = v29[9];
  v28[8] = v29[8];
  v28[9] = v30;
  long long v31 = v29[11];
  v28[10] = v29[10];
  v28[11] = v31;
  long long v32 = v29[5];
  v28[4] = v29[4];
  v28[5] = v32;
  long long v33 = v29[7];
  v28[6] = v29[6];
  v28[7] = v33;
  long long v34 = v29[1];
  *long long v28 = *v29;
  v28[1] = v34;
  long long v35 = v29[3];
  v28[2] = v29[2];
  v28[3] = v35;
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionUnet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260F76BDC);
}

uint64_t sub_260F76BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AppleDiffusionUnet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260F76CA4);
}

uint64_t sub_260F76CA4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_260F76D50()
{
  sub_260F76DF4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_260F76DF4()
{
  if (!qword_26A8EA040)
  {
    type metadata accessor for ConcreteAdapter();
    unint64_t v0 = sub_260FE4A80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A8EA040);
    }
  }
}

uint64_t destroy for AppleDiffusionUnet.Interface()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppleDiffusionUnet.Interface(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  uint64_t v14 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v14;
  uint64_t v15 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppleDiffusionUnet.Interface(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  return a1;
}

__n128 __swift_memcpy194_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for AppleDiffusionUnet.Interface(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionUnet.Interface(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 194)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleDiffusionUnet.Interface(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 192) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 194) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 194) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionUnet.Interface()
{
  return &type metadata for AppleDiffusionUnet.Interface;
}

void destroy for AppleDiffusionUnet.IPAInputs(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 8);
}

uint64_t initializeWithCopy for AppleDiffusionUnet.IPAInputs(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for AppleDiffusionUnet.IPAInputs(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v10;
  return a1;
}

uint64_t assignWithTake for AppleDiffusionUnet.IPAInputs(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionUnet.IPAInputs(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleDiffusionUnet.IPAInputs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionUnet.IPAInputs()
{
  return &type metadata for AppleDiffusionUnet.IPAInputs;
}

uint64_t sub_260F77618(uint64_t a1)
{
  return a1;
}

uint64_t sub_260F77718(uint64_t a1)
{
  return a1;
}

uint64_t sub_260F77810()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_260F77848(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_260DACD28;
  v5[16] = a1;
  v5[17] = v4;
  return MEMORY[0x270FA2498](sub_260F70B34, 0, 0);
}

uint64_t sub_260F778F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_260F71F20(a1, *(uint64_t **)(v2 + 16), *(uint64_t **)(v2 + 24), a2);
}

id sub_260F77918(id result, void *a2)
{
  if (a2)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

id sub_260F77958@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_260F73728(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_260F77974(unint64_t a1, uint64_t a2)
{
  return sub_260F73640(a1, a2, *(void *)(v2 + 16));
}

id sub_260F77990@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_260F77958(a1, a2);
}

void sub_260F779A8(uint64_t a1)
{
  if (!MEMORY[0x263F209E0]) {
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7060;
  *(void *)(inited + 32) = 0xD000000000000017;
  *(void *)(inited + 40) = 0x8000000261000310;
  uint64_t v3 = sub_260FE2F30();
  uint64_t v4 = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 72) = v4;
  *(void *)(inited + 80) = 0xD000000000000020;
  *(void *)(inited + 88) = 0x8000000261000330;
  uint64_t v6 = sub_260FE4490();
  type metadata accessor for CFBoolean(0);
  *(void *)(inited + 120) = v7;
  *(void *)(inited + 96) = v6;
  sub_260DAAF10(inited);
  uint64_t v8 = (void *)sub_260FE4070();
  id v9 = (void *)sub_260FE3E90();
  swift_bridgeObjectRelease();
  id v10 = (id)sendAneSessionSignal();

  if (!v10) {
    return;
  }
  uint64_t v11 = sub_260FE3EB0();

  id v35 = (id)0xD000000000000016;
  unint64_t v36 = 0x8000000261000380;
  sub_260FE4BC0();
  if (*(void *)(v11 + 16) && (unint64_t v12 = sub_260DBAEA0((uint64_t)v37), (v13 & 1) != 0))
  {
    sub_260D90650(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v38);
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  sub_260DD6BD8((uint64_t)v37);
  if (!*((void *)&v39 + 1))
  {
    swift_bridgeObjectRelease();
    sub_260EA8980((uint64_t)&v38);
    return;
  }
  sub_260EB85B4();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return;
  }
  id v14 = objc_msgSend(v35, sel_integerValue);

  id v35 = (id)0xD000000000000013;
  unint64_t v36 = 0x80000002610003A0;
  sub_260FE4BC0();
  if (*(void *)(v11 + 16) && (unint64_t v15 = sub_260DBAEA0((uint64_t)v37), (v16 & 1) != 0))
  {
    sub_260D90650(*(void *)(v11 + 56) + 32 * v15, (uint64_t)&v38);
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_260DD6BD8((uint64_t)v37);
  if (!*((void *)&v39 + 1))
  {
    sub_260EA8980((uint64_t)&v38);
    goto LABEL_19;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:
    unint64_t v19 = 0xE500000000000000;
    uint64_t v34 = 0x3E6C696E3CLL;
    goto LABEL_20;
  }
  id v17 = objc_msgSend(v35, sel_integerValue);

  v37[0] = (uint64_t)v17;
  uint64_t v34 = sub_260FE5110();
  unint64_t v19 = v18;
LABEL_20:
  if (qword_26A8EA918 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_260FE3A10();
  __swift_project_value_buffer(v20, (uint64_t)qword_26A90FC00);
  uint64_t v21 = sub_260FE2F90();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21, v23);
  long long v25 = (char *)v33 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, a1, v21);
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_260FE39F0();
  os_log_type_t v27 = sub_260FE48A0();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    v33[1] = v33;
    uint64_t v30 = v29;
    v37[0] = v29;
    *(_DWORD *)uint64_t v28 = 134218498;
    *(void *)&long long v38 = v14;
    sub_260FE4AE0();
    *(_WORD *)(v28 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)&long long v38 = sub_260DB2844(v34, v19, v37);
    sub_260FE4AE0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 22) = 2082;
    uint64_t v31 = sub_260FE2F30();
    *(void *)&long long v38 = sub_260DB2844(v31, v32, v37);
    sub_260FE4AE0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
    _os_log_impl(&dword_260D82000, v26, v27, "ANE Session resident pages: %ld / %{public}s for asset at %{public}s", (uint8_t *)v28, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x26122CA00](v30, -1, -1);
    MEMORY[0x26122CA00](v28, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  }
}

uint64_t DiffusionBasePipelineProtocol.canSafetyCheck.getter()
{
  return 0;
}

uint64_t DiffusionBasePipeline.init(textEncoder:unet:decoder:encoder:controlNet:safetyChecker:reduceMemory:useMultilingualTextEncoder:script:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, char a11, char a12)
{
  uint64_t result = sub_260DD7B40(a1, a9);
  *(void *)(a9 + 40) = a2;
  *(void *)(a9 + 48) = a3;
  *(void *)(a9 + 56) = a4;
  *(void *)(a9 + 64) = a5;
  *(void *)(a9 + 72) = a6;
  *(void *)(a9 + 80) = a8;
  *(void *)(a9 + 88) = a7;
  *(unsigned char *)(a9 + 96) = a10;
  *(unsigned char *)(a9 + 97) = a11;
  *(unsigned char *)(a9 + 98) = a12;
  return result;
}

uint64_t DiffusionBasePipeline.init(textEncoder:unet:decoder:encoder:controlNet:safetyChecker:reduceMemory:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  *(_WORD *)(a9 + 97) = 768;
  uint64_t result = sub_260DD7B40(a1, a9);
  *(void *)(a9 + 40) = a2;
  *(void *)(a9 + 48) = a3;
  *(void *)(a9 + 56) = a4;
  *(void *)(a9 + 64) = a5;
  *(void *)(a9 + 80) = a8;
  *(void *)(a9 + 88) = a7;
  *(void *)(a9 + 72) = a6;
  *(unsigned char *)(a9 + 96) = a10;
  return result;
}

uint64_t DiffusionBaseScheduler.hash(into:)(uint64_t a1, unsigned __int16 a2)
{
  if (a2 >> 14)
  {
    if (a2 >> 14 == 1) {
      sub_260FE5300();
    }
  }
  else
  {
    sub_260FE5300();
    sub_260FE5300();
  }
  return sub_260FE5300();
}

uint64_t DiffusionBaseScheduler.hashValue.getter(unsigned __int16 a1)
{
  if (a1 >> 14)
  {
    if (a1 >> 14 == 1) {
      sub_260FE5300();
    }
  }
  else
  {
    sub_260FE5300();
    sub_260FE5300();
  }
  sub_260FE5300();
  return sub_260FE5340();
}

uint64_t sub_260F78204(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return _s13DiffusionBase0aB9SchedulerO21__derived_enum_equalsySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_260F78210()
{
  unsigned int v1 = *v0;
  sub_260FE52F0();
  if (v1 >> 14)
  {
    if (v1 >> 14 == 1) {
      sub_260FE5300();
    }
  }
  else
  {
    sub_260FE5300();
    sub_260FE5300();
  }
  sub_260FE5300();
  return sub_260FE5340();
}

uint64_t sub_260F782A8()
{
  int v1 = *v0 >> 14;
  if (v1)
  {
    if (v1 == 1) {
      sub_260FE5300();
    }
  }
  else
  {
    sub_260FE5300();
    sub_260FE5300();
  }
  return sub_260FE5300();
}

uint64_t sub_260F7831C()
{
  unsigned int v1 = *v0;
  sub_260FE52F0();
  if (v1 >> 14)
  {
    if (v1 >> 14 == 1) {
      sub_260FE5300();
    }
  }
  else
  {
    sub_260FE5300();
    sub_260FE5300();
  }
  sub_260FE5300();
  return sub_260FE5340();
}

BOOL static DiffusionBaseRNG.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t DiffusionBaseRNG.hash(into:)()
{
  return sub_260FE5300();
}

uint64_t DiffusionBaseRNG.hashValue.getter()
{
  return sub_260FE5340();
}

unint64_t PipelineError.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000023;
      break;
    case 2:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260F784BC(unsigned __int8 *a1, char *a2)
{
  return sub_260FD4620(*a1, *a2);
}

uint64_t sub_260F784C8()
{
  return sub_260FB5F28();
}

uint64_t sub_260F784D0()
{
  return sub_260FA51A0();
}

uint64_t sub_260F784D8()
{
  return sub_260FB6480();
}

uint64_t sub_260F784E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s13DiffusionBase13PipelineErrorO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_260F78510@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PipelineError.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

BOOL DiffusionBasePipeline.canSafetyCheck.getter()
{
  return *(void *)(v0 + 80) != 0;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DiffusionBasePipeline.loadResources()()
{
  unsigned int v1 = (void *)v0;
  if (*(unsigned char *)(v0 + 96) == 1)
  {
    DiffusionBasePipeline.prewarmResources()();
  }
  else
  {
    Unet.loadResources()();
    if (!v2)
    {
      uint64_t v4 = *(void *)(v0 + 24);
      uint64_t v3 = *(void *)(v0 + 32);
      __swift_project_boxed_opaque_existential_1(v1, v1[3]);
      (*(void (**)(uint64_t))(*(void *)(v3 + 8) + 8))(v4);
      uint64_t v5 = v1[7];
      ManagedMLModel.loadResources()();
      if (!v6)
      {
        if (v5)
        {
          ManagedMLModel.loadResources()();
          if (v7) {
        }
          }
        if (!v1[8] || (ManagedMLModel.loadResources()(), !v8))
        {
          if (!v1[11] || (ControlNet.loadResources()(), !v9))
          {
            if (v1[10]) {
              ManagedMLModel.loadResources()();
            }
          }
        }
      }
    }
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DiffusionBasePipeline.prewarmResources()()
{
  uint64_t v2 = v0;
  uint64_t v3 = v0[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  sub_260FDB6E8(v3, *(void *)(v4 + 8));
  if (!v1)
  {
    unint64_t v5 = v2[5];
    if (v5 >> 62) {
      goto LABEL_42;
    }
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v6; uint64_t v6 = sub_260FE4E40())
    {
      uint64_t v7 = 4;
      while (1)
      {
        uint64_t v8 = v7 - 4;
        if ((v5 & 0xC000000000000001) == 0) {
          break;
        }
        MEMORY[0x26122B4C0](v7 - 4, v5);
        BOOL v9 = __OFADD__(v8, 1);
        uint64_t v10 = v7 - 3;
        if (v9) {
          goto LABEL_41;
        }
LABEL_10:
        ManagedMLModel.loadResources()();
        if (v11)
        {
LABEL_39:
          swift_release();
          swift_bridgeObjectRelease();
          return;
        }
        ManagedMLModel.unloadResources()();
        swift_release();
        ++v7;
        if (v10 == v6) {
          goto LABEL_12;
        }
      }
      swift_retain();
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v7 - 3;
      if (!v9) {
        goto LABEL_10;
      }
LABEL_41:
      __break(1u);
LABEL_42:
      swift_bridgeObjectRetain();
    }
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v12 = v2[7];
    swift_retain();
    swift_retain();
    ManagedMLModel.loadResources()();
    if (v13)
    {
      swift_release();
      goto LABEL_38;
    }
    if (v12)
    {
      ManagedMLModel.loadResources()();
      if (v14) {

      }
      ManagedMLModel.unloadResources()();
      ManagedMLModel.unloadResources()();
      swift_release();
    }
    else
    {
      ManagedMLModel.unloadResources()();
    }
    swift_release();
    if (v2[8])
    {
      unint64_t v15 = (void *)v2[9];
      swift_retain();
      id v16 = v15;
      ManagedMLModel.loadResources()();
      if (v17)
      {

        goto LABEL_38;
      }
      ManagedMLModel.unloadResources()();

      swift_release();
    }
    unint64_t v18 = v2[11];
    if (v18)
    {
      if (v18 >> 62) {
        goto LABEL_45;
      }
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v19; uint64_t v19 = sub_260FE4E40())
      {
        uint64_t v20 = 4;
        while (1)
        {
          uint64_t v21 = v20 - 4;
          if ((v18 & 0xC000000000000001) == 0) {
            break;
          }
          MEMORY[0x26122B4C0](v20 - 4, v18);
          BOOL v9 = __OFADD__(v21, 1);
          uint64_t v22 = v20 - 3;
          if (v9) {
            goto LABEL_44;
          }
LABEL_32:
          ManagedMLModel.loadResources()();
          if (v23) {
            goto LABEL_39;
          }
          ManagedMLModel.unloadResources()();
          swift_release();
          ++v20;
          if (v22 == v19) {
            goto LABEL_34;
          }
        }
        swift_retain();
        BOOL v9 = __OFADD__(v21, 1);
        uint64_t v22 = v20 - 3;
        if (!v9) {
          goto LABEL_32;
        }
LABEL_44:
        __break(1u);
LABEL_45:
        swift_bridgeObjectRetain();
      }
LABEL_34:
      swift_bridgeObjectRelease();
    }
    if (!v2[10]) {
      return;
    }
    swift_retain();
    ManagedMLModel.loadResources()();
    if (!v24) {
      ManagedMLModel.unloadResources()();
    }
LABEL_38:
    swift_release();
  }
}

Swift::Void __swiftcall DiffusionBasePipeline.unloadResources()()
{
  uint64_t v1 = v0;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  (*(void (**)(uint64_t))(*(void *)(v2 + 8) + 16))(v3);
  unint64_t v4 = v1[5];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_260FE4E40();
    if (!v5) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_10;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_24;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      MEMORY[0x26122B4C0](i, v4);
    }
    else {
      swift_retain();
    }
    ManagedMLModel.unloadResources()();
    swift_release();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v7 = v1[7];
  ManagedMLModel.unloadResources()();
  if (v7) {
    ManagedMLModel.unloadResources()();
  }
  if (v1[8]) {
    ManagedMLModel.unloadResources()();
  }
  unint64_t v4 = v1[11];
  if (!v4) {
    goto LABEL_26;
  }
  if (v4 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_260FE4E40();
    if (v8) {
      goto LABEL_17;
    }
    goto LABEL_25;
  }
  uint64_t v8 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v8)
  {
LABEL_17:
    if (v8 < 1)
    {
      __break(1u);
      return;
    }
    for (uint64_t j = 0; j != v8; ++j)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        MEMORY[0x26122B4C0](j, v4);
      }
      else {
        swift_retain();
      }
      ManagedMLModel.unloadResources()();
      swift_release();
    }
  }
LABEL_25:
  swift_bridgeObjectRelease();
LABEL_26:
  if (v1[10]) {
    ManagedMLModel.unloadResources()();
  }
}

uint64_t DiffusionBasePipeline.generateImages(configuration:requestIdentifier:generationID:progressHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v198 = a5;
  uint64_t v197 = a4;
  uint64_t v196 = type metadata accessor for PipelineProgress();
  MEMORY[0x270FA5388](v196, v7);
  uint64_t v199 = (uint64_t *)((char *)&v183 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  MEMORY[0x270FA5388](v9 - 8, v10);
  os_signpost_id_t v218 = (char *)&v183 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v201 = *(void *)(v223 - 8);
  MEMORY[0x270FA5388](v223, v12);
  uint64_t v217 = (char *)&v183 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v15);
  uint64_t v229 = (char *)&v183 - v16;
  MEMORY[0x270FA5388](v17, v18);
  int64_t v200 = (char *)&v183 - v19;
  MEMORY[0x270FA5388](v20, v21);
  int v227 = (void (*)(char *, uint64_t))((char *)&v183 - v22);
  MEMORY[0x270FA5388](v23, v24);
  v226 = (void (**)(uint64_t, uint64_t))((char *)&v183 - v25);
  MEMORY[0x270FA5388](v26, v27);
  uint64_t v221 = (char *)&v183 - v28;
  MEMORY[0x270FA5388](v29, v30);
  uint64_t v222 = (char *)&v183 - v31;
  MEMORY[0x270FA5388](v32, v33);
  id v35 = (char *)&v183 - v34;
  MEMORY[0x270FA5388](v36, v37);
  long long v39 = (char *)&v183 - v38;
  MEMORY[0x270FA5388](v40, v41);
  uint64_t v43 = (char *)&v183 - v42;
  MEMORY[0x270FA5388](v44, v45);
  uint64_t v203 = (char *)&v183 - v46;
  MEMORY[0x270FA5388](v47, v48);
  long long v50 = (char *)&v183 - v49;
  uint64_t v51 = v5[3];
  uint64_t v52 = v5[4];
  uint64_t v202 = v5;
  long long v53 = (void (*)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(v5, v51);
  long long v232 = *(_OWORD *)(a1 + 24);
  uint64_t v54 = v232;
  uint64_t v205 = a1;
  long long v55 = __swift_project_boxed_opaque_existential_1((void *)a1, v232);
  long long v236 = v232;
  unint64_t v56 = __swift_allocate_boxed_opaque_existential_1Tm(&v235);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v56, v55, v54);
  unint64_t v57 = v233;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v52 + 16))(&v235, v51, v52);
  unint64_t v58 = v57;
  if (v57)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v235);
    return (uint64_t)v53;
  }
  unint64_t v219 = (void (**)(void, void, void))v35;
  unint64_t v195 = v39;
  uint64_t v193 = v43;
  uint64_t v194 = v50;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v235);
  long long v59 = v202;
  uint64_t v60 = v202[3];
  uint64_t v61 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v60);
  long long v233 = *(_OWORD *)(v205 + 64);
  uint64_t v62 = v233;
  unint64_t v63 = __swift_project_boxed_opaque_existential_1((void *)(v205 + 40), v233);
  long long v236 = v233;
  uint64_t v64 = __swift_allocate_boxed_opaque_existential_1Tm(&v235);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v62 - 8) + 16))(v64, v63, v62);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v61 + 16))(&v235, v60, v61);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v235);
  uint64_t v66 = v223;
  if (*((unsigned char *)v59 + 96) == 1)
  {
    uint64_t v68 = v59[3];
    uint64_t v67 = v59[4];
    __swift_project_boxed_opaque_existential_1(v59, v68);
    (*(void (**)(uint64_t))(*(void *)(v67 + 8) + 16))(v68);
  }
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
  uint64_t v70 = v201;
  uint64_t v71 = *(void *)(v201 + 72);
  uint64_t v72 = *(unsigned __int8 *)(v201 + 80);
  uint64_t v73 = (v72 + 32) & ~v72;
  uint64_t v216 = v69;
  uint64_t v215 = v73 + 2 * v71;
  uint64_t v214 = v72 | 7;
  uint64_t v74 = swift_allocObject();
  long long v213 = xmmword_260FE7060;
  *(_OWORD *)(v74 + 16) = xmmword_260FE7060;
  uint64_t v230 = v73;
  uint64_t v75 = v74 + v73;
  id v76 = *(void (**)(uint64_t, char *, uint64_t))(v70 + 16);
  v76(v75, v203, v66);
  uint64_t v231 = v71;
  v76(v75 + v71, v194, v66);
  uint64_t v235 = v74;
  unint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C8);
  uint64_t v78 = sub_260D90340(&qword_26A8E84D0, &qword_26A8E84C8);
  uint64_t v79 = sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  uint64_t v80 = v193;
  unint64_t v212 = v77;
  uint64_t v211 = v78;
  uint64_t v220 = v79;
  sub_260FE3AD0();
  BOOL v81 = *((unsigned char *)v59 + 97) == 1;
  uint64_t v82 = (uint64_t)v222;
  *(void *)&long long v233 = v70 + 16;
  if (v81) {
    v76((uint64_t)v195, v80, v66);
  }
  else {
    sub_260F7A678();
  }
  *(void *)&long long v232 = v76;
  uint64_t v83 = type metadata accessor for PipelineConfiguration(0);
  unint64_t v192 = v83;
  uint64_t v85 = v205;
  uint64_t v189 = *(int *)(v83 + 68);
  if ((*(void *)(v205 + v189) & 0x8000000000000000) != 0) {
    goto LABEL_46;
  }
  MEMORY[0x270FA5388](v83, v84);
  *(&v183 - 2) = v85;
  *(&v183 - 1) = (uint64_t)v59;
  uint64_t v87 = sub_260F5C7F0((uint64_t)sub_260F7B730, (uint64_t)(&v183 - 4), 0, v86);
  if (!*(void *)(v87 + 16)) {
    goto LABEL_47;
  }
  uint64_t v88 = v87;
  uint64_t v89 = v87 + 32;
  sub_260D90158(v87 + 32, (uint64_t)&v235);
  uint64_t v90 = sub_260F7AB78(v85, &v235);
  uint64_t v186 = v89;
  uint64_t v187 = v88;
  unint64_t v204 = 0;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v235);
  int64_t v91 = *(void *)(v90 + 16);
  uint64_t v92 = MEMORY[0x263F8EE78];
  unint64_t v224 = v90;
  if (v91)
  {
    uint64_t v235 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_260F63738(0, v91, 0);
    uint64_t v93 = v90 + v230;
    uint64_t v228 = (void (**)(uint64_t, uint64_t))(v201 + 8);
    uint64_t v225 = (void (**)(char *, uint64_t))(v201 + 32);
    uint64_t v94 = v235;
    uint64_t v95 = v221;
    id v96 = v219;
    uint64_t v97 = (void (*)(uint64_t, uint64_t, uint64_t))v232;
    do
    {
      v97(v82, v93, v66);
      v97((uint64_t)v95, v82, v66);
      sub_260FE3BC0();
      (*v228)(v82, v66);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_260F63738(0, *(void *)(v94 + 16) + 1, 1);
        uint64_t v94 = v235;
      }
      unint64_t v99 = *(void *)(v94 + 16);
      unint64_t v98 = *(void *)(v94 + 24);
      uint64_t v95 = v221;
      if (v99 >= v98 >> 1)
      {
        sub_260F63738(v98 > 1, v99 + 1, 1);
        uint64_t v95 = v221;
        uint64_t v94 = v235;
      }
      *(void *)(v94 + 16) = v99 + 1;
      uint64_t v100 = v231;
      ((void (*)(unint64_t, void, uint64_t))*v225)(v94 + v230 + v99 * v231, v96, v66);
      v93 += v100;
      --v91;
      uint64_t v82 = (uint64_t)v222;
    }
    while (v91);
    uint64_t v228 = (void (**)(uint64_t, uint64_t))v94;
    swift_bridgeObjectRelease();
    uint64_t v92 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v228 = (void (**)(uint64_t, uint64_t))MEMORY[0x263F8EE78];
  }
  uint64_t v101 = v205;
  uint64_t v85 = (uint64_t)v200;
  unint64_t v77 = v192;
  id v76 = (void (*)(uint64_t, char *, uint64_t))v227;
  if ((v202[12] & 1) != 0 && v202[8])
  {
    ManagedMLModel.unloadResources()();
    uint64_t v92 = MEMORY[0x263F8EE78];
    uint64_t v101 = v205;
  }
  if (*(unsigned __int8 *)(v101 + *(int *)(v77 + 52) + 8) == 255)
  {
    LODWORD(v208) = 0;
    BOOL v104 = 1;
  }
  else
  {
    float v102 = *(float *)(v101 + *(int *)(v77 + 60));
    float v103 = v102;
    if (v102 >= 1.0) {
      float v103 = 0.0;
    }
    *(float *)&uint64_t v208 = v103;
    BOOL v104 = v102 >= 1.0;
  }
  LODWORD(v207) = v104;
  unint64_t v58 = *(void *)(v101 + *(int *)(v77 + 84));
  if (v58 >> 62) {
    goto LABEL_48;
  }
  uint64_t v105 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v105)
  {
    do
    {
      uint64_t v235 = v92;
      sub_260F63738(0, v105 & ~(v105 >> 63), 0);
      if (v105 < 0) {
        goto LABEL_114;
      }
      uint64_t v106 = 0;
      unint64_t v77 = v235;
      unint64_t v219 = (void (**)(void, void, void))(v58 & 0xC000000000000001);
      uint64_t v225 = (void (**)(char *, uint64_t))(v201 + 8);
      uint64_t v209 = v201 + 32;
      uint64_t v210 = v105;
      while (v105 != v106)
      {
        if (v219) {
          id v107 = (id)MEMORY[0x26122B4C0](v106, v58);
        }
        else {
          id v107 = *(id *)(v58 + 8 * v106 + 32);
        }
        id v109 = v107;
        v108.i32[0] = 1.0;
        unint64_t v110 = v204;
        CGImageRef.planarRGBShapedArray(minValue:maxValue:)(0, v108);
        unint64_t v204 = v110;
        if (v110)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();

          long long v53 = *v225;
          (*v225)(v195, v66);
          v53(v193, v66);
          v53(v203, v66);
          v53(v194, v66);
          swift_bridgeObjectRelease();
          return (uint64_t)v53;
        }
        uint64_t v85 = v58;
        uint64_t v111 = swift_allocObject();
        *(_OWORD *)(v111 + 16) = v213;
        uint64_t v112 = v111 + v230;
        unint64_t v113 = v77;
        id v114 = (void (*)(uint64_t, char *, uint64_t))v232;
        ((void (*)(uint64_t, void, uint64_t))v232)(v111 + v230, v76, v66);
        v114(v112 + v231, (char *)v227, v66);
        unint64_t v77 = v113;
        uint64_t v115 = (char *)v226;
        id v76 = (void (*)(uint64_t, char *, uint64_t))v227;
        uint64_t v234 = v111;
        sub_260FE3AD0();
        (*v225)((char *)v76, v66);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_260F63738(0, *(void *)(v77 + 16) + 1, 1);
          unint64_t v77 = v235;
        }
        unint64_t v117 = *(void *)(v77 + 16);
        unint64_t v116 = *(void *)(v77 + 24);
        if (v117 >= v116 >> 1)
        {
          sub_260F63738(v116 > 1, v117 + 1, 1);
          unint64_t v77 = v235;
        }
        ++v106;
        *(void *)(v77 + 16) = v117 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))v209)(v77 + v230 + v117 * v231, v115, v66);
        uint64_t v105 = v210;
        uint64_t v82 = (uint64_t)v222;
        unint64_t v58 = v85;
        if (v210 == v106)
        {
          swift_bridgeObjectRelease();
          uint64_t v85 = (uint64_t)v200;
          goto LABEL_50;
        }
      }
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      swift_bridgeObjectRetain();
      uint64_t v118 = sub_260FE4E40();
      uint64_t v92 = MEMORY[0x263F8EE78];
      uint64_t v105 = v118;
    }
    while (v118);
  }
  swift_bridgeObjectRelease();
  unint64_t v77 = MEMORY[0x263F8EE78];
LABEL_50:
  sub_260D90158(v186, (uint64_t)&v235);
  long long v119 = v236;
  __swift_project_boxed_opaque_existential_1(&v235, v236);
  id v120 = *(uint64_t (**)(unint64_t, void, void))(*((void *)&v119 + 1) + 32);
  LOBYTE(v234) = (_BYTE)v207;
  uint64_t v121 = v120(v208 | ((unint64_t)v207 << 32), v119, *((void *)&v119 + 1));
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v235);
  unint64_t v58 = v204;
  uint64_t v184 = *(void *)(v121 + 16);
  if (v184)
  {
    uint64_t v185 = v121 + 32;
    v226 = (void (**)(uint64_t, uint64_t))(v201 + 8);
    unint64_t v219 = (void (**)(void, void, void))(v201 + 32);
    uint64_t v225 = (void (**)(char *, uint64_t))(v201 + 40);
    int64_t v207 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v201 + 56);
    uint64_t v206 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v201 + 48);
    swift_bridgeObjectRetain();
    unint64_t v122 = 0;
    unint64_t v188 = v77;
    uint64_t v191 = v121;
    while (1)
    {
      unint64_t v204 = v58;
      if (v122 >= *(void *)(v121 + 16)) {
        break;
      }
      uint64_t v190 = v122;
      uint64_t v210 = *(void *)(v185 + 8 * v122);
      unint64_t v123 = v224;
      int64_t v124 = *(void *)(v224 + 16);
      uint64_t v125 = v230;
      uint64_t v126 = MEMORY[0x263F8EE78];
      if (v124)
      {
        uint64_t v235 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_260F63738(0, v124, 0);
        unint64_t v127 = v123 + v125;
        uint64_t v128 = v231;
        do
        {
          int v227 = (void (*)(char *, uint64_t))v124;
          uint64_t v129 = v85;
          uint64_t v130 = (void (*)(uint64_t, uint64_t, uint64_t))v232;
          ((void (*)(uint64_t, unint64_t, uint64_t))v232)(v82, v127, v66);
          uint64_t v131 = swift_allocObject();
          *(_OWORD *)(v131 + 16) = v213;
          uint64_t v132 = v131 + v125;
          v130(v132, v82, v66);
          v130(v132 + v128, v82, v66);
          uint64_t v85 = v129;
          uint64_t v234 = v131;
          sub_260FE3AD0();
          (*v226)(v82, v66);
          uint64_t v126 = v235;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_260F63738(0, *(void *)(v126 + 16) + 1, 1);
            uint64_t v126 = v235;
          }
          unint64_t v134 = *(void *)(v126 + 16);
          unint64_t v133 = *(void *)(v126 + 24);
          unint64_t v135 = v227;
          if (v134 >= v133 >> 1)
          {
            sub_260F63738(v133 > 1, v134 + 1, 1);
            uint64_t v126 = v235;
          }
          *(void *)(v126 + 16) = v134 + 1;
          uint64_t v125 = v230;
          uint64_t v136 = v126 + v230 + v134 * v231;
          uint64_t v128 = v231;
          (*v219)(v136, v129, v66);
          v127 += v128;
          int64_t v124 = (int64_t)v135 - 1;
        }
        while (v124);
        swift_bridgeObjectRelease();
      }
      uint64_t v137 = v202;
      unint64_t v138 = v202[11];
      unint64_t v58 = v204;
      id v139 = v195;
      uint64_t v82 = (uint64_t)v228;
      if (v138)
      {
        uint64_t v140 = sub_260F9010C(v126, v210, v195, v188, v138);
        unint64_t v141 = v224;
        if (v58)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v53 = (void (*)(char *, uint64_t))*v226;
          (*v226)((uint64_t)v139, v66);
          v53(v193, v66);
          v53(v203, v66);
          v53(v194, v66);
          goto LABEL_129;
        }
        uint64_t v142 = v140;
      }
      else
      {
        uint64_t v142 = 0;
        unint64_t v141 = v224;
      }
      uint64_t v143 = sub_260F85220(v126, v210, (uint64_t)v139, v142, v137[5]);
      if (v58)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v53 = (void (*)(char *, uint64_t))*v226;
        (*v226)((uint64_t)v195, v66);
        v53(v193, v66);
        v53(v203, v66);
        v53(v194, v66);
        goto LABEL_129;
      }
      uint64_t v144 = v143;
      swift_bridgeObjectRelease();
      uint64_t v145 = swift_bridgeObjectRelease();
      uint64_t v146 = v205;
      double v148 = MEMORY[0x270FA5388](v145, v147);
      *(&v183 - 2) = (uint64_t)v137;
      *((_DWORD *)&v183 - 2) = LODWORD(v148);
      uint64_t v209 = sub_260F5C944((void (*)(uint64_t))sub_260F64EB4, (uint64_t)(&v183 - 4), v144);
      unint64_t v77 = 0;
      swift_bridgeObjectRelease();
      uint64_t v149 = *(void *)(v146 + v189);
      if (v149 < 0) {
        goto LABEL_111;
      }
      unint64_t v58 = v230;
      unint64_t v204 = 0;
      if (v149)
      {
        if ((unint64_t)(v149 - 1) >= *(void *)(v187 + 16)) {
          goto LABEL_112;
        }
        unint64_t v77 = v186;
        if ((unint64_t)(v149 - 1) >= *(void *)(v209 + 16)) {
          goto LABEL_113;
        }
        unint64_t v150 = 0;
        uint64_t v208 = v149;
        while (1)
        {
          int v227 = (void (*)(char *, uint64_t))v77;
          uint64_t v228 = (void (**)(uint64_t, uint64_t))v82;
          sub_260D90158(v77, (uint64_t)&v235);
          uint64_t v82 = *((void *)&v236 + 1);
          uint64_t v151 = v236;
          uint64_t v223 = (uint64_t)__swift_project_boxed_opaque_existential_1(&v235, v236);
          unint64_t v77 = (unint64_t)v222;
          unint64_t v152 = v150;
          long long v153 = (void (*)(char *, unint64_t, uint64_t))v232;
          ((void (*)(char *, unint64_t, uint64_t))v232)(v222, v209 + v58, v66);
          unint64_t v154 = *(void *)(v141 + 16);
          unint64_t v224 = v152;
          if (v152 >= v154) {
            break;
          }
          long long v155 = v221;
          v153(v221, v141 + v58, v66);
          (*(void (**)(unint64_t, uint64_t, char *, uint64_t, uint64_t))(v82 + 80))(v77, v210, v155, v151, v82);
          long long v156 = *v226;
          (*v226)((uint64_t)v155, v66);
          v156(v77, v66);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v141 = sub_260F7B490(v141);
          }
          unint64_t v77 = (unint64_t)v227;
          unint64_t v157 = v224;
          if (v224 >= *(void *)(v141 + 16)) {
            goto LABEL_107;
          }
          int v227 = *v225;
          ((void (*)(unint64_t, char *, uint64_t))v227)(v141 + v58, v229, v66);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v235);
          sub_260D90158(v77, (uint64_t)&v235);
          long long v158 = v236;
          __swift_project_boxed_opaque_existential_1(&v235, v236);
          uint64_t v159 = (*(uint64_t (**)(void, void))(*((void *)&v158 + 1) + 72))(v158, *((void *)&v158 + 1));
          uint64_t v160 = *(void *)(v159 + 16);
          if (v160)
          {
            uint64_t v82 = (uint64_t)v218;
            ((void (*)(char *, uint64_t, uint64_t))v232)(v218, v159 + v230 + (v160 - 1) * v231, v66);
            uint64_t v161 = 0;
          }
          else
          {
            uint64_t v161 = 1;
            uint64_t v82 = (uint64_t)v218;
          }
          (*v207)(v82, v161, 1, v66);
          swift_bridgeObjectRelease();
          if ((*v206)(v82, 1, v66) == 1)
          {
            __int16 v162 = v217;
            if (v157 >= *(void *)(v141 + 16)) {
              goto LABEL_109;
            }
            ((void (*)(char *, unint64_t, uint64_t))v232)(v217, v141 + v58, v66);
            sub_260F7B750(v82);
          }
          else
          {
            __int16 v162 = v217;
            (*v219)(v217, v82, v66);
          }
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v235);
          uint64_t v82 = (uint64_t)v228;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v82 = sub_260F7B490(v82);
          }
          if (v157 >= *(void *)(v82 + 16)) {
            goto LABEL_108;
          }
          unint64_t v150 = v157 + 1;
          ((void (*)(unint64_t, char *, uint64_t))v227)(v82 + v58, v162, v66);
          v58 += v231;
          v77 += 40;
          if (v208 == v150) {
            goto LABEL_86;
          }
        }
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
        break;
      }
LABEL_86:
      swift_bridgeObjectRelease();
      char v163 = (void *)v205;
      int v164 = *(unsigned __int8 *)(v205 + *(int *)(v192 + 92));
      unint64_t v224 = v141;
      if (v164) {
        unint64_t v165 = v82;
      }
      else {
        unint64_t v165 = v141;
      }
      swift_bridgeObjectRetain();
      __swift_project_boxed_opaque_existential_1(v163, v163[3]);
      uint64_t v166 = sub_260E5C064();
      uint64_t v168 = v167;
      uint64_t v169 = *(void *)(v191 + 16);
      unint64_t v170 = v199;
      sub_260F7B7B0((uint64_t)v163, (uint64_t)v199 + *(int *)(v196 + 32));
      *unint64_t v170 = v166;
      v170[1] = v168;
      uint64_t v171 = v190;
      v170[2] = v190;
      v170[3] = v169;
      v170[4] = v165;
      if ((v197(v170) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_260F7D300((uint64_t)v170, (uint64_t (*)(void))type metadata accessor for PipelineProgress);
        uint64_t v177 = *v226;
        (*v226)((uint64_t)v195, v66);
        v177((uint64_t)v193, v66);
        v177((uint64_t)v203, v66);
        v177((uint64_t)v194, v66);
        long long v53 = (void (*)(char *, uint64_t))MEMORY[0x263F8EE78];
        goto LABEL_129;
      }
      uint64_t v228 = (void (**)(uint64_t, uint64_t))v82;
      unint64_t v122 = v171 + 1;
      sub_260F7D300((uint64_t)v170, (uint64_t (*)(void))type metadata accessor for PipelineProgress);
      unint64_t v58 = v204;
      unint64_t v172 = v195;
      uint64_t v85 = (uint64_t)v200;
      uint64_t v82 = (uint64_t)v222;
      unint64_t v77 = v188;
      uint64_t v121 = v191;
      if (v122 == v184)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v173 = v201;
        goto LABEL_93;
      }
    }
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
    goto LABEL_115;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v173 = v201;
  unint64_t v172 = v195;
LABEL_93:
  swift_bridgeObjectRelease();
  int v174 = v202;
  uint64_t v82 = (uint64_t)v228;
  if (*((unsigned char *)v202 + 96) != 1)
  {
LABEL_127:
    uint64_t v181 = DiffusionBasePipeline.decodeToImages(_:configuration:)(v82, v205);
    if (v58)
    {
      swift_bridgeObjectRelease();
      long long v53 = *(void (**)(char *, uint64_t))(v173 + 8);
      v53(v172, v66);
      v53(v193, v66);
      v53(v203, v66);
      v53(v194, v66);
    }
    else
    {
      long long v53 = (void (*)(char *, uint64_t))v181;
      swift_bridgeObjectRelease();
      char v182 = *(void (**)(char *, uint64_t))(v173 + 8);
      v182(v172, v66);
      v182(v193, v66);
      v182(v203, v66);
      v182(v194, v66);
    }
LABEL_129:
    swift_bridgeObjectRelease();
    return (uint64_t)v53;
  }
  unint64_t v77 = v202[11];
  if (v77)
  {
    if (!(v77 >> 62))
    {
      uint64_t v175 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v175)
      {
LABEL_116:
        swift_bridgeObjectRelease();
        int v174 = v202;
        goto LABEL_117;
      }
LABEL_97:
      if (v175 < 1) {
        goto LABEL_132;
      }
      for (uint64_t i = 0; i != v175; ++i)
      {
        if ((v77 & 0xC000000000000001) != 0) {
          MEMORY[0x26122B4C0](i, v77);
        }
        else {
          swift_retain();
        }
        ManagedMLModel.unloadResources()();
        swift_release();
      }
      goto LABEL_116;
    }
LABEL_115:
    swift_bridgeObjectRetain();
    uint64_t result = sub_260FE4E40();
    uint64_t v175 = result;
    if (!result) {
      goto LABEL_116;
    }
    goto LABEL_97;
  }
LABEL_117:
  unint64_t v178 = v174[5];
  if (v178 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_260FE4E40();
    uint64_t v179 = result;
    if (result) {
      goto LABEL_119;
    }
LABEL_126:
    swift_bridgeObjectRelease();
    uint64_t v173 = v201;
    unint64_t v172 = v195;
    goto LABEL_127;
  }
  uint64_t v179 = *(void *)((v178 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v179) {
    goto LABEL_126;
  }
LABEL_119:
  if (v179 >= 1)
  {
    for (uint64_t j = 0; j != v179; ++j)
    {
      if ((v178 & 0xC000000000000001) != 0) {
        MEMORY[0x26122B4C0](j, v178);
      }
      else {
        swift_retain();
      }
      ManagedMLModel.unloadResources()();
      swift_release();
    }
    goto LABEL_126;
  }
  __break(1u);
LABEL_132:
  __break(1u);
  return result;
}

uint64_t sub_260F7A678()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v0 = (void *)sub_260FE3B20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C80);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_260FE8E10;
  unint64_t v2 = v0[2];
  if (!v2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  *(void *)(result + 32) = v0[4];
  if (v2 < 3)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  *(void *)(result + 40) = v0[6];
  *(void *)(result + 48) = 1;
  *(void *)(result + 56) = v0[5];
  sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  uint64_t result = sub_260FE3C20();
  uint64_t v3 = v0[4];
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = v0[4];
    if (!v3) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v4 = 0;
    uint64_t v5 = v0[4];
    uint64_t v14 = v0;
    while (v4 != v5)
    {
      uint64_t v6 = v0[5];
      if (v6 < 0) {
        goto LABEL_22;
      }
      uint64_t v16 = v4;
      if (v6)
      {
        uint64_t v7 = 0;
        uint64_t v15 = v0[5];
        while (v7 != v6)
        {
          uint64_t v9 = v0[6];
          if (v9 < 0) {
            goto LABEL_20;
          }
          if (v9)
          {
            uint64_t v10 = 0;
            uint64_t v17 = v0[6];
            do
            {
              uint64_t v11 = swift_allocObject();
              *(_OWORD *)(v11 + 16) = xmmword_260FE8E10;
              *(void *)(v11 + 32) = v16;
              *(void *)(v11 + 40) = v10;
              *(void *)(v11 + 48) = 0;
              *(void *)(v11 + 56) = v7;
              uint64_t v12 = swift_allocObject();
              *(_OWORD *)(v12 + 16) = xmmword_260FE8090;
              *(void *)(v12 + 32) = v16;
              *(void *)(v12 + 40) = v7;
              *(void *)(v12 + 48) = v10;
              sub_260FE3C00();
              swift_bridgeObjectRelease();
              uint64_t result = sub_260FE3C10();
              ++v10;
            }
            while (v17 != v10);
          }
          uint64_t v6 = v15;
          BOOL v8 = ++v7 == v15;
          uint64_t v0 = v14;
          if (v8) {
            goto LABEL_6;
          }
        }
        __break(1u);
LABEL_20:
        __break(1u);
        break;
      }
LABEL_6:
      uint64_t v4 = v16 + 1;
      uint64_t v5 = v13;
      if (v16 + 1 == v13) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_260F7A900@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for PipelineConfiguration(0);
  uint64_t v5 = v4;
  unsigned int v6 = *(unsigned __int16 *)(a1 + v4[24]);
  if (!(v6 >> 14))
  {
    unsigned int v16 = v6 >> 8;
    int64_t v17 = *(void *)(a1 + v4[18]);
    uint64_t v18 = type metadata accessor for DPMSolverMultistepScheduler();
    swift_allocObject();
    uint64_t result = DPMSolverMultistepScheduler.init(stepCount:trainStepCount:betaSchedule:betaStart:betaEnd:timeStepSpacing:predictionType:)(v17, 1000, 1, v16, 0, 0.00085, 0.012);
    uint64_t v20 = &protocol witness table for DPMSolverMultistepScheduler;
LABEL_8:
    a2[3] = v18;
    a2[4] = (uint64_t)v20;
    *a2 = result;
    return result;
  }
  if (v6 >> 14 != 1)
  {
    int64_t v21 = *(void *)(a1 + v4[18]);
    uint64_t v18 = type metadata accessor for PNDMScheduler();
    swift_allocObject();
    uint64_t result = PNDMScheduler.init(stepCount:trainStepCount:betaSchedule:betaStart:betaEnd:)(v21, 1000, 1, 0.00085, 0.012);
    uint64_t v20 = &protocol witness table for PNDMScheduler;
    goto LABEL_8;
  }
  int v7 = *(unsigned __int8 *)(a1 + v4[25]);
  uint64_t v8 = *(unsigned int *)(a1 + v4[19]);
  if (*(unsigned char *)(a1 + v5[25]))
  {
    if (v7 != 1)
    {
      uint64_t v32 = &type metadata for NvRandomSource;
      uint64_t v33 = &off_270D24A10;
      uint64_t v30 = v8;
      int v31 = 0;
      goto LABEL_12;
    }
    uint64_t v9 = sub_260F6E4E8(v8);
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    char v15 = v14;
    uint64_t v32 = &type metadata for TorchRandomSource;
    uint64_t v33 = &off_270D24368;
  }
  else
  {
    uint64_t v9 = sub_260F6E4E8(v8);
    uint64_t v11 = v22;
    uint64_t v13 = v23;
    char v15 = v24;
    uint64_t v32 = &type metadata for NumPyRandomSource;
    uint64_t v33 = &off_270D24488;
  }
  uint64_t v25 = swift_allocObject();
  uint64_t v30 = v25;
  *(void *)(v25 + 16) = v9;
  *(void *)(v25 + 24) = v11;
  *(void *)(v25 + 32) = v13;
  *(unsigned char *)(v25 + 40) = v15 & 1;
LABEL_12:
  uint64_t v26 = *(void *)(a1 + v5[18]);
  sub_260D90158((uint64_t)&v30, (uint64_t)v29);
  uint64_t v27 = type metadata accessor for LCMScheduler();
  swift_allocObject();
  uint64_t v28 = LCMScheduler.init(stepCount:trainStepCount:betaSchedule:betaStart:betaEnd:predictionType:generator:)(v26, 1000, 1, 0, (uint64_t)v29, 0.00085, 0.012);
  a2[3] = v27;
  a2[4] = (uint64_t)&protocol witness table for LCMScheduler;
  *a2 = v28;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v30);
}

uint64_t sub_260F7AB78(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  uint64_t v65 = a1;
  uint64_t v69 = (uint64_t (**)(uint64_t, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABA8);
  MEMORY[0x270FA5388](v69, v6);
  uint64_t v68 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v70 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v13);
  char v15 = (char *)&v59 - v14;
  uint64_t v64 = v2;
  Unet.latentSampleShape.getter(*(void *)(v2 + 40));
  int64_t v17 = v16;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if (v17[2]) {
      goto LABEL_3;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = (uint64_t)sub_260F7B454(v17);
  int64_t v17 = (void *)result;
  if (!*(void *)(result + 16)) {
    goto LABEL_25;
  }
LABEL_3:
  uint64_t v61 = v11;
  uint64_t v71 = v17;
  v17[4] = 1;
  uint64_t v19 = a2[3];
  uint64_t v20 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v19);
  float v21 = (*(float (**)(uint64_t, uint64_t))(v20 + 64))(v19, v20);
  uint64_t v22 = (int *)type metadata accessor for PipelineConfiguration(0);
  uint64_t v23 = v65;
  int v24 = *(unsigned __int8 *)(v65 + v22[25]);
  uint64_t result = *(unsigned int *)(v65 + v22[19]);
  uint64_t v60 = a2;
  if (!v24)
  {
    uint64_t v25 = v22;
    uint64_t v26 = sub_260F6E4E8(result);
    uint64_t v28 = v33;
    uint64_t v30 = v34;
    char v32 = v35;
    uint64_t v74 = &type metadata for NumPyRandomSource;
    uint64_t v75 = &off_270D24488;
    goto LABEL_7;
  }
  if (v24 == 1)
  {
    uint64_t v25 = v22;
    uint64_t v26 = sub_260F6E4E8(result);
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    char v32 = v31;
    uint64_t v74 = &type metadata for TorchRandomSource;
    uint64_t v75 = &off_270D24368;
LABEL_7:
    uint64_t result = swift_allocObject();
    uint64_t v22 = v25;
    uint64_t v23 = v65;
    uint64_t v72 = result;
    *(void *)(result + 16) = v26;
    *(void *)(result + 24) = v28;
    *(void *)(result + 32) = v30;
    *(unsigned char *)(result + 40) = v32 & 1;
    goto LABEL_9;
  }
  uint64_t v74 = &type metadata for NvRandomSource;
  uint64_t v75 = &off_270D24A10;
  uint64_t v72 = result;
  int v73 = 0;
LABEL_9:
  int64_t v36 = *(void *)(v23 + v22[17]);
  if (v36 < 0)
  {
LABEL_26:
    __break(1u);
    return result;
  }
  uint64_t v37 = MEMORY[0x263F8EE78];
  if (v36)
  {
    uint64_t v62 = v22;
    uint64_t v63 = v3;
    uint64_t v76 = MEMORY[0x263F8EE78];
    sub_260F63738(0, v36, 0);
    uint64_t v66 = v70 + 32;
    uint64_t v67 = v8;
    uint64_t v37 = v76;
    double v38 = v21;
    do
    {
      long long v39 = v74;
      uint64_t v40 = v75;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v72, (uint64_t)v74);
      uint64_t v41 = v37;
      uint64_t v42 = v15;
      uint64_t v43 = (void (*)(uint64_t, ValueMetadata *, _UNKNOWN **, double, double))v40[2];
      uint64_t v44 = swift_bridgeObjectRetain();
      v43(v44, v39, v40, 0.0, v38);
      char v15 = v42;
      uint64_t v37 = v41;
      swift_bridgeObjectRelease();
      sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
      sub_260D90340(&qword_26A8EABB0, &qword_26A8EABA8);
      uint64_t v8 = v67;
      sub_260FE3BC0();
      uint64_t v76 = v41;
      unint64_t v46 = *(void *)(v41 + 16);
      unint64_t v45 = *(void *)(v41 + 24);
      if (v46 >= v45 >> 1)
      {
        sub_260F63738(v45 > 1, v46 + 1, 1);
        uint64_t v37 = v76;
      }
      *(void *)(v37 + 16) = v46 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v37+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v46, v15, v8);
      --v36;
    }
    while (v36);
    uint64_t v22 = v62;
    uint64_t v4 = v63;
    uint64_t v23 = v65;
  }
  uint64_t v47 = v23 + v22[13];
  unsigned __int8 v48 = *(unsigned char *)(v47 + 8);
  if ((v48 & 1) == 0)
  {
    float v49 = *(float *)(v23 + v22[15]);
    if (v49 < 1.0)
    {
      long long v50 = *(void **)v47;
      uint64_t v51 = *(void **)(v64 + 64);
      if (v51)
      {
        uint64_t v52 = *(void **)(v64 + 72);
        float v53 = *(float *)(v23 + v22[26]);
        sub_260F7DF60(v50, v48);
        sub_260F6449C(v51, v52);
        uint64_t v54 = (uint64_t)v61;
        Encoder.encode(_:scaleFactor:random:)(v50, (uint64_t)&v72, (char *)v51, (uint64_t)v61, v53);
        if (v4)
        {

          swift_release();
          sub_260F32A14(v50, v48);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v57 = v60[3];
          uint64_t v69 = (uint64_t (**)(uint64_t, uint64_t))v60[4];
          __swift_project_boxed_opaque_existential_1(v60, v57);
          uint64_t v58 = Scheduler.addNoise(originalSample:noise:strength:)(v54, v37, v57, v69, v49);

          swift_release();
          sub_260F32A14(v50, v48);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v54, v8);
          uint64_t v37 = v58;
        }
      }
      else
      {
        id v55 = v50;
        swift_bridgeObjectRelease();
        sub_260F7DF0C();
        swift_allocError();
        *unint64_t v56 = 1;
        swift_willThrow();
        sub_260F32A14(v50, v48);
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t DiffusionBasePipeline.decodeToImages(_:configuration:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = *(void *)(v2 + 48);
  uint64_t v8 = *(void *)(v4 + 56);
  uint64_t v9 = type metadata accessor for PipelineConfiguration(0);
  int64_t v10 = Decoder.decode(_:scaleFactor:outputRange:inferAlpha:)(a1, 0, v7, v8, *(float *)(a2 + *(int *)(v9 + 108)));
  if (!v3)
  {
    uint64_t v11 = sub_260F6275C(v10);
    swift_bridgeObjectRelease();
    int v12 = *(unsigned __int8 *)(v4 + 96);
    if (v12 == 1)
    {
      ManagedMLModel.unloadResources()();
      if (v8) {
        ManagedMLModel.unloadResources()();
      }
    }
    if ((*(unsigned char *)(a2 + *(int *)(v9 + 88)) & 1) != 0 || !*(void *)(v4 + 80))
    {
      return v11;
    }
    else
    {
      swift_retain();
      uint64_t v4 = sub_260F7B540(v11);
      swift_bridgeObjectRelease();
      if (v12) {
        ManagedMLModel.unloadResources()();
      }
      swift_release();
    }
  }
  return v4;
}

BOOL sub_260F7B288()
{
  return *(void *)(v0 + 80) != 0;
}

uint64_t sub_260F7B298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *), uint64_t a5)
{
  return DiffusionBasePipeline.generateImages(configuration:requestIdentifier:generationID:progressHandler:)(a1, a2, a3, a4, a5);
}

uint64_t sub_260F7B2B0(uint64_t a1, uint64_t a2)
{
  return DiffusionBasePipeline.decodeToImages(_:configuration:)(a1, a2);
}

void sub_260F7B2C8()
{
}

uint64_t PipelineProgress.prompt.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PipelineProgress.step.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t PipelineProgress.stepCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t PipelineProgress.currentLatentSamples.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PipelineProgress.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PipelineProgress() + 32);
  return sub_260F7B7B0(v3, a1);
}

uint64_t sub_260F7B370()
{
  return sub_260FE3AF0();
}

uint64_t sub_260F7B3E0(uint64_t result, float a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v6 = a6[1];
  if (v6 < 0) {
    goto LABEL_9;
  }
  if (v6)
  {
    if (!*(void *)(a5 + 16))
    {
LABEL_10:
      __break(1u);
      return result;
    }
    uint64_t v7 = 0;
    uint64_t v8 = *a6;
    uint64_t v9 = *(void *)(a5 + 32);
    while (1)
    {
      uint64_t v10 = v9 + v7;
      if (__OFADD__(v9, v7)) {
        break;
      }
      uint64_t v11 = 4 * v7;
      float v12 = *(float *)(result + 4 * v7++);
      *(float *)(v8 + v11) = v12 + (float)((float)(*(float *)(result + 4 * v10) - v12) * a2);
      if (v6 == v7) {
        return result;
      }
    }
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

char *sub_260F7B440(uint64_t a1)
{
  return sub_260FCD2BC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_260F7B454(void *a1)
{
  return sub_260DB17FC(0, a1[2], 0, a1);
}

void *sub_260F7B468(void *a1)
{
  return sub_260FCD650(0, a1[2], 0, a1);
}

void *sub_260F7B47C(void *a1)
{
  return sub_260FCD780(0, a1[2], 0, a1);
}

uint64_t sub_260F7B490(unint64_t a1)
{
  return sub_260FCD3E0(0, *(void *)(a1 + 16), 0, a1);
}

char *sub_260F7B4A4(uint64_t a1)
{
  return sub_260FCD890(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_260F7B4B8(void *a1)
{
  return sub_260FCDCBC(0, a1[2], 0, a1);
}

void *sub_260F7B4CC(void *a1)
{
  return sub_260DB118C(0, a1[2], 0, a1);
}

uint64_t _s13DiffusionBase0aB9SchedulerO21__derived_enum_equalsySbAC_ACtFZ_0(unsigned __int16 a1, unsigned __int16 a2)
{
  if (a1 >> 14)
  {
    if (a1 >> 14 == 1)
    {
      if ((a2 & 0xC000) == 0x4000) {
        return (a2 ^ a1) == 0;
      }
    }
    else if (a2 == 0x8000)
    {
      return 1;
    }
  }
  else if (a2 < 0x4000u)
  {
    return a1 == a2;
  }
  return 0;
}

uint64_t sub_260F7B540(uint64_t a1)
{
  uint64_t v2 = v1;
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (!v3) {
    return v4;
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_260F63768(0, v3, 0);
  uint64_t v4 = v19;
  uint64_t v6 = (unsigned char *)(a1 + 40);
  while (1)
  {
    uint64_t v7 = (void *)*((void *)v6 - 1);
    char v8 = *v6;
    if (v7) {
      break;
    }
LABEL_8:
    unint64_t v16 = *(void *)(v19 + 16);
    unint64_t v15 = *(void *)(v19 + 24);
    if (v16 >= v15 >> 1) {
      sub_260F63768(v15 > 1, v16 + 1, 1);
    }
    v6 += 16;
    *(void *)(v19 + 16) = v16 + 1;
    uint64_t v17 = v19 + 16 * v16;
    *(void *)(v17 + 32) = v7;
    *(unsigned char *)(v17 + 40) = v8;
    if (!--v3) {
      return v4;
    }
  }
  uint64_t v9 = v7;
  uint64_t v10 = (CGImage *)sub_260FB8C80(v9);
  if (v2)
  {
    swift_release();
    uint64_t v11 = v9;
    goto LABEL_14;
  }
  uint64_t v11 = v10;
  Swift::Bool v12 = SafetyChecker.isSafe(_:)(v10);
  uint64_t v2 = v13;
  if (!v13)
  {
    Swift::Bool v14 = v12;

    if (!v14)
    {

      uint64_t v7 = 0;
      char v8 = 0;
    }
    goto LABEL_8;
  }
  swift_release();

LABEL_14:
  return v4;
}

uint64_t _s13DiffusionBase13PipelineErrorO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t type metadata accessor for PipelineProgress()
{
  uint64_t result = qword_26A8EAD40;
  if (!qword_26A8EAD40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_260F7B730@<X0>(uint64_t *a1@<X8>)
{
  return sub_260F7A900(*(void *)(v1 + 16), a1);
}

uint64_t sub_260F7B750(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_260F7B7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PipelineConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_260F7B818()
{
  unint64_t result = qword_26A8EAD28;
  if (!qword_26A8EAD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAD28);
  }
  return result;
}

unint64_t sub_260F7B870()
{
  unint64_t result = qword_26A8EAD30;
  if (!qword_26A8EAD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAD30);
  }
  return result;
}

unint64_t sub_260F7B8C8()
{
  unint64_t result = qword_26A8EAD38;
  if (!qword_26A8EAD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAD38);
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DiffusionBaseScheduler(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFFE) {
    goto LABEL_17;
  }
  if (a2 + 61442 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 61442 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 61442;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 61442;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 61442;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0xFC | (*a1 >> 14) | (*a1 >> 2) & 0xF00) ^ 0xFFF;
  if (v6 >= 0xFFD) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for DiffusionBaseScheduler(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 61442 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 61442 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFFD)
  {
    unsigned int v6 = ((a2 - 4094) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 4094;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F7BAB4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2)
        {
LABEL_18:
          unsigned int v7 = ((-a2 >> 2) & 0x3FF) - (a2 << 10);
          *(_WORD *)unint64_t result = (16 * v7) & 0xFC00 | (4 * (v7 & 0x3F));
        }
        break;
    }
  }
  return result;
}

uint64_t sub_260F7BADC(unsigned __int16 *a1)
{
  unsigned int v1 = *a1;
  int v2 = (__int16)v1;
  unsigned int v3 = v1 >> 14;
  unsigned int v4 = (v1 & 3 | (4 * ((v1 >> 8) & 3))) + 2;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return v4;
  }
}

_WORD *sub_260F7BB04(_WORD *result)
{
  *result &= 0x3FFFu;
  return result;
}

_WORD *sub_260F7BB14(_WORD *result, unsigned int a2)
{
  if (a2 < 2) {
    *unint64_t result = *result & 0x303 | ((_WORD)a2 << 14);
  }
  else {
    *unint64_t result = (((_WORD)a2 - 2) << 6) & 0x300 | (a2 - 2) & 3 | 0x8000;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiffusionBaseScheduler()
{
  return &type metadata for DiffusionBaseScheduler;
}

unsigned char *storeEnumTagSinglePayload for DiffusionBaseRNG(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F7BC24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiffusionBaseRNG()
{
  return &type metadata for DiffusionBaseRNG;
}

unsigned char *storeEnumTagSinglePayload for PipelineError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F7BD28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PipelineError()
{
  return &type metadata for PipelineError;
}

uint64_t destroy for DiffusionBasePipeline(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 64))
  {
    swift_release();
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DiffusionBasePipeline(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v5)
  {
    unsigned int v7 = *(void **)(a2 + 72);
    *(void *)(a1 + 64) = v5;
    *(void *)(a1 + 72) = v7;
    swift_retain();
    id v8 = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_WORD *)(a1 + 97) = *(_WORD *)(a2 + 97);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DiffusionBasePipeline(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 64);
  if (!*(void *)(a1 + 64))
  {
    if (v4)
    {
      *(void *)(a1 + 64) = v4;
      id v8 = *(void **)(a2 + 72);
      *(void *)(a1 + 72) = v8;
      swift_retain();
      id v9 = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_260F66998(a1 + 64);
    goto LABEL_7;
  }
  *(void *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void **)(a2 + 72);
  uint64_t v6 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = v5;
  id v7 = v5;

LABEL_8:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  return a1;
}

__n128 __swift_memcpy99_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_DWORD *)(a1 + 95) = *(_DWORD *)((char *)a2 + 95);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for DiffusionBasePipeline(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 64);
  if (!*(void *)(a1 + 64)) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_260F66998(a1 + 64);
LABEL_5:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_6;
  }
  *(void *)(a1 + 64) = v6;
  swift_release();
  id v7 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

LABEL_6:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiffusionBasePipeline(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 99)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiffusionBasePipeline(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 98) = 0;
    *(_WORD *)(result + 96) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 99) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 99) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiffusionBasePipeline()
{
  return &type metadata for DiffusionBasePipeline;
}

uint64_t initializeBufferWithCopyOfBuffer for PipelineProgress(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    a1 = v20 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    long long v9 = *(_OWORD *)((char *)a2 + v6 + 24);
    *(_OWORD *)(a1 + v6 + 24) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v7, v8, v10);
    long long v12 = *(_OWORD *)(v8 + 64);
    *(_OWORD *)(v7 + 64) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(v7 + 40, v8 + 40);
    *(unsigned char *)(v7 + 80) = *(unsigned char *)(v8 + 80);
    uint64_t v13 = (int *)type metadata accessor for PipelineConfiguration(0);
    uint64_t v14 = v13[7];
    unint64_t v15 = (char *)(v7 + v14);
    unint64_t v16 = (char *)(v8 + v14);
    uint64_t v17 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    uint64_t v18 = *((void *)v17 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v56 = v18;
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      v22(v15, v16, v21);
      v22(&v15[v17[5]], &v16[v17[5]], v21);
      uint64_t v23 = v17[6];
      int v24 = (uint64_t *)&v15[v23];
      uint64_t v25 = (uint64_t *)&v16[v23];
      if (*(void *)&v16[v23 + 16])
      {
        uint64_t v26 = *v25;
        unint64_t v55 = v25[1];
        sub_260DCBD18(*v25, v55);
        *int v24 = v26;
        v24[1] = v55;
        void v24[2] = v25[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)int v24 = *(_OWORD *)v25;
        void v24[2] = v25[2];
      }
      v15[v17[7]] = v16[v17[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v56 + 56))(v15, 0, 1, v17);
    }
    *(_DWORD *)(v7 + v13[8]) = *(_DWORD *)(v8 + v13[8]);
    uint64_t v27 = v13[9];
    uint64_t v28 = v7 + v27;
    uint64_t v29 = v8 + v27;
    *(void *)uint64_t v28 = *(void *)v29;
    *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
    uint64_t v30 = v13[10];
    uint64_t v31 = v7 + v30;
    uint64_t v32 = v8 + v30;
    *(void *)uint64_t v31 = *(void *)v32;
    *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
    uint64_t v33 = v13[11];
    uint64_t v34 = v7 + v33;
    uint64_t v35 = v8 + v33;
    *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
    *(unsigned char *)(v34 + 4) = *(unsigned char *)(v35 + 4);
    uint64_t v36 = v13[12];
    uint64_t v37 = v7 + v36;
    uint64_t v38 = v8 + v36;
    *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
    *(unsigned char *)(v37 + 4) = *(unsigned char *)(v38 + 4);
    uint64_t v39 = v13[13];
    uint64_t v40 = v7 + v39;
    uint64_t v41 = (uint64_t *)(v8 + v39);
    int v42 = *((unsigned __int8 *)v41 + 8);
    if (v42 == 255)
    {
      *(void *)uint64_t v40 = *v41;
      *(unsigned char *)(v40 + 8) = *((unsigned char *)v41 + 8);
    }
    else
    {
      char v43 = v42 & 1;
      uint64_t v44 = *v41;
      id v45 = (id)*v41;
      *(void *)uint64_t v40 = v44;
      *(unsigned char *)(v40 + 8) = v43;
    }
    uint64_t v46 = v13[14];
    uint64_t v47 = v7 + v46;
    uint64_t v48 = v8 + v46;
    float v49 = *(void **)v48;
    if (*(void *)v48)
    {
      long long v50 = *(void **)(v48 + 8);
      *(void *)uint64_t v47 = v49;
      *(void *)(v47 + 8) = v50;
      *(_DWORD *)(v47 + 16) = *(_DWORD *)(v48 + 16);
      *(void *)(v47 + 24) = *(void *)(v48 + 24);
      id v51 = v49;
      id v52 = v50;
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v53 = *(_OWORD *)(v48 + 16);
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      *(_OWORD *)(v47 + 16) = v53;
    }
    *(_DWORD *)(v7 + v13[15]) = *(_DWORD *)(v8 + v13[15]);
    *(_DWORD *)(v7 + v13[16]) = *(_DWORD *)(v8 + v13[16]);
    *(void *)(v7 + v13[17]) = *(void *)(v8 + v13[17]);
    *(void *)(v7 + v13[18]) = *(void *)(v8 + v13[18]);
    *(_DWORD *)(v7 + v13[19]) = *(_DWORD *)(v8 + v13[19]);
    *(_DWORD *)(v7 + v13[20]) = *(_DWORD *)(v8 + v13[20]);
    *(void *)(v7 + v13[21]) = *(void *)(v8 + v13[21]);
    *(unsigned char *)(v7 + v13[22]) = *(unsigned char *)(v8 + v13[22]);
    *(unsigned char *)(v7 + v13[23]) = *(unsigned char *)(v8 + v13[23]);
    *(_WORD *)(v7 + v13[24]) = *(_WORD *)(v8 + v13[24]);
    *(unsigned char *)(v7 + v13[25]) = *(unsigned char *)(v8 + v13[25]);
    *(_DWORD *)(v7 + v13[26]) = *(_DWORD *)(v8 + v13[26]);
    *(_DWORD *)(v7 + v13[27]) = *(_DWORD *)(v8 + v13[27]);
    *(_DWORD *)(v7 + v13[28]) = *(_DWORD *)(v8 + v13[28]);
    *(_DWORD *)(v7 + v13[29]) = *(_DWORD *)(v8 + v13[29]);
    *(_DWORD *)(v7 + v13[30]) = *(_DWORD *)(v8 + v13[30]);
    *(_DWORD *)(v7 + v13[31]) = *(_DWORD *)(v8 + v13[31]);
    *(_DWORD *)(v7 + v13[32]) = *(_DWORD *)(v8 + v13[32]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PipelineProgress(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(v4);
  __swift_destroy_boxed_opaque_existential_1Tm(v4 + 40);
  uint64_t v5 = (int *)type metadata accessor for PipelineConfiguration(0);
  uint64_t v6 = v4 + v5[7];
  uint64_t v7 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    long long v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    v9(v6, v8);
    v9(v6 + *(int *)(v7 + 20), v8);
    uint64_t v10 = (uint64_t *)(v6 + *(int *)(v7 + 24));
    if (v10[2])
    {
      sub_260DCC110(*v10, v10[1]);
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v11 = v4 + v5[13];
  if (*(unsigned __int8 *)(v11 + 8) != 255) {

  }
  long long v12 = (id *)(v4 + v5[14]);
  if (*v12)
  {

    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PipelineProgress(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  long long v8 = *(_OWORD *)(a2 + v5 + 24);
  *(_OWORD *)(a1 + v5 + 24) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v6, v7, v9);
  long long v11 = *(_OWORD *)(v7 + 64);
  *(_OWORD *)(v6 + 64) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v6 + 40, v7 + 40);
  *(unsigned char *)(v6 + 80) = *(unsigned char *)(v7 + 80);
  long long v12 = (int *)type metadata accessor for PipelineConfiguration(0);
  uint64_t v13 = v12[7];
  uint64_t v14 = (char *)(v6 + v13);
  unint64_t v15 = (char *)(v7 + v13);
  unint64_t v16 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v54 = a1;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    v20(v14, v15, v19);
    v20(&v14[v16[5]], &v15[v16[5]], v19);
    uint64_t v21 = v16[6];
    uint64_t v22 = (uint64_t *)&v14[v21];
    uint64_t v23 = (uint64_t *)&v15[v21];
    if (*(void *)&v15[v21 + 16])
    {
      unint64_t v24 = v23[1];
      uint64_t v53 = *v23;
      sub_260DCBD18(*v23, v24);
      *uint64_t v22 = v53;
      v22[1] = v24;
      v22[2] = v23[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      v22[2] = v23[2];
    }
    v14[v16[7]] = v15[v16[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
    a1 = v54;
  }
  *(_DWORD *)(v6 + v12[8]) = *(_DWORD *)(v7 + v12[8]);
  uint64_t v25 = v12[9];
  uint64_t v26 = v6 + v25;
  uint64_t v27 = v7 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = v12[10];
  uint64_t v29 = v6 + v28;
  uint64_t v30 = v7 + v28;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  uint64_t v31 = v12[11];
  uint64_t v32 = v6 + v31;
  uint64_t v33 = v7 + v31;
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(unsigned char *)(v32 + 4) = *(unsigned char *)(v33 + 4);
  uint64_t v34 = v12[12];
  uint64_t v35 = v6 + v34;
  uint64_t v36 = v7 + v34;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(unsigned char *)(v35 + 4) = *(unsigned char *)(v36 + 4);
  uint64_t v37 = v12[13];
  uint64_t v38 = v6 + v37;
  uint64_t v39 = (uint64_t *)(v7 + v37);
  int v40 = *((unsigned __int8 *)v39 + 8);
  if (v40 == 255)
  {
    *(void *)uint64_t v38 = *v39;
    *(unsigned char *)(v38 + 8) = *((unsigned char *)v39 + 8);
  }
  else
  {
    char v41 = v40 & 1;
    uint64_t v42 = *v39;
    id v43 = (id)*v39;
    *(void *)uint64_t v38 = v42;
    *(unsigned char *)(v38 + 8) = v41;
  }
  uint64_t v44 = v12[14];
  uint64_t v45 = v6 + v44;
  uint64_t v46 = v7 + v44;
  uint64_t v47 = *(void **)v46;
  if (*(void *)v46)
  {
    uint64_t v48 = *(void **)(v46 + 8);
    *(void *)uint64_t v45 = v47;
    *(void *)(v45 + 8) = v48;
    *(_DWORD *)(v45 + 16) = *(_DWORD *)(v46 + 16);
    *(void *)(v45 + 24) = *(void *)(v46 + 24);
    id v49 = v47;
    id v50 = v48;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v51 = *(_OWORD *)(v46 + 16);
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v51;
  }
  *(_DWORD *)(v6 + v12[15]) = *(_DWORD *)(v7 + v12[15]);
  *(_DWORD *)(v6 + v12[16]) = *(_DWORD *)(v7 + v12[16]);
  *(void *)(v6 + v12[17]) = *(void *)(v7 + v12[17]);
  *(void *)(v6 + v12[18]) = *(void *)(v7 + v12[18]);
  *(_DWORD *)(v6 + v12[19]) = *(_DWORD *)(v7 + v12[19]);
  *(_DWORD *)(v6 + v12[20]) = *(_DWORD *)(v7 + v12[20]);
  *(void *)(v6 + v12[21]) = *(void *)(v7 + v12[21]);
  *(unsigned char *)(v6 + v12[22]) = *(unsigned char *)(v7 + v12[22]);
  *(unsigned char *)(v6 + v12[23]) = *(unsigned char *)(v7 + v12[23]);
  *(_WORD *)(v6 + v12[24]) = *(_WORD *)(v7 + v12[24]);
  *(unsigned char *)(v6 + v12[25]) = *(unsigned char *)(v7 + v12[25]);
  *(_DWORD *)(v6 + v12[26]) = *(_DWORD *)(v7 + v12[26]);
  *(_DWORD *)(v6 + v12[27]) = *(_DWORD *)(v7 + v12[27]);
  *(_DWORD *)(v6 + v12[28]) = *(_DWORD *)(v7 + v12[28]);
  *(_DWORD *)(v6 + v12[29]) = *(_DWORD *)(v7 + v12[29]);
  *(_DWORD *)(v6 + v12[30]) = *(_DWORD *)(v7 + v12[30]);
  *(_DWORD *)(v6 + v12[31]) = *(_DWORD *)(v7 + v12[31]);
  *(_DWORD *)(v6 + v12[32]) = *(_DWORD *)(v7 + v12[32]);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PipelineProgress(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v85 = a1;
  uint64_t v7 = (void *)((char *)a1 + v6);
  long long v8 = (void *)((char *)a2 + v6);
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + v6), v8);
  __swift_assign_boxed_opaque_existential_1(v7 + 5, v8 + 5);
  *((unsigned char *)v7 + 80) = *((unsigned char *)v8 + 80);
  uint64_t v9 = (int *)type metadata accessor for PipelineConfiguration(0);
  uint64_t v10 = v9[7];
  long long v11 = (char *)v7 + v10;
  long long v12 = (char *)v8 + v10;
  uint64_t v13 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v14 = *((void *)v13 - 1);
  unint64_t v15 = *(uint64_t (**)(char *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  __vImage_Buffer src = v12;
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      v19(v11, v12, v18);
      v19(&v11[v13[5]], &v12[v13[5]], v18);
      uint64_t v20 = v13[6];
      uint64_t v21 = (uint64_t *)&v11[v20];
      uint64_t v22 = (uint64_t *)&v12[v20];
      if (*(void *)&v12[v20 + 16])
      {
        uint64_t v23 = *v22;
        unint64_t v24 = v22[1];
        sub_260DCBD18(*v22, v24);
        uint64_t *v21 = v23;
        v21[1] = v24;
        void v21[2] = v22[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v38 = *(_OWORD *)v22;
        void v21[2] = v22[2];
        *(_OWORD *)uint64_t v21 = v38;
      }
      uint64_t v26 = v85;
      v11[v13[7]] = __src[v13[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_18;
    }
LABEL_7:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v11, v12, *(void *)(*(void *)(v25 - 8) + 64));
    uint64_t v26 = v85;
    goto LABEL_18;
  }
  if (v17)
  {
    sub_260F7D300((uint64_t)v11, type metadata accessor for PipelineConfiguration.InputConditioning);
    goto LABEL_7;
  }
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24);
  v28(v11, v12, v27);
  v28(&v11[v13[5]], &v12[v13[5]], v27);
  uint64_t v29 = v13[6];
  uint64_t v30 = (uint64_t *)&v11[v29];
  uint64_t v31 = (uint64_t *)&v12[v29];
  uint64_t v32 = *(void *)&v11[v29 + 16];
  uint64_t v33 = *(void *)&v12[v29 + 16];
  if (v32)
  {
    if (v33)
    {
      uint64_t v34 = *v31;
      unint64_t v35 = v31[1];
      sub_260DCBD18(*v31, v35);
      uint64_t v36 = *v30;
      unint64_t v37 = v30[1];
      uint64_t *v30 = v34;
      v30[1] = v35;
      sub_260DCC110(v36, v37);
      v30[2] = v31[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260DCFC50((uint64_t)v30);
      uint64_t v41 = v31[2];
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
      v30[2] = v41;
    }
  }
  else if (v33)
  {
    uint64_t v39 = *v31;
    unint64_t v40 = v31[1];
    sub_260DCBD18(*v31, v40);
    uint64_t *v30 = v39;
    v30[1] = v40;
    v30[2] = v31[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v42 = *(_OWORD *)v31;
    v30[2] = v31[2];
    *(_OWORD *)uint64_t v30 = v42;
  }
  uint64_t v26 = v85;
  v11[v13[7]] = __src[v13[7]];
LABEL_18:
  *(_DWORD *)((char *)v7 + v9[8]) = *(_DWORD *)((char *)v8 + v9[8]);
  uint64_t v43 = v9[9];
  uint64_t v44 = (char *)v7 + v43;
  uint64_t v45 = (char *)v8 + v43;
  uint64_t v46 = *(void *)v45;
  v44[8] = v45[8];
  *(void *)uint64_t v44 = v46;
  uint64_t v47 = v9[10];
  uint64_t v48 = (char *)v7 + v47;
  id v49 = (char *)v8 + v47;
  uint64_t v50 = *(void *)v49;
  v48[8] = v49[8];
  *(void *)uint64_t v48 = v50;
  uint64_t v51 = v9[11];
  id v52 = (char *)v7 + v51;
  uint64_t v53 = (char *)v8 + v51;
  LODWORD(v50) = *(_DWORD *)v53;
  v52[4] = v53[4];
  *(_DWORD *)id v52 = v50;
  uint64_t v54 = v9[12];
  unint64_t v55 = (char *)v7 + v54;
  uint64_t v56 = (char *)v8 + v54;
  LODWORD(v50) = *(_DWORD *)v56;
  v55[4] = v56[4];
  *(_DWORD *)unint64_t v55 = v50;
  uint64_t v57 = v9[13];
  uint64_t v58 = (uint64_t)v7 + v57;
  uint64_t v59 = (char *)v8 + v57;
  LODWORD(v55) = *((unsigned __int8 *)v7 + v57 + 8);
  int v60 = *((unsigned __int8 *)v8 + v57 + 8);
  if (v55 == 255)
  {
    if (v60 == 255)
    {
      uint64_t v62 = *(void **)v59;
      *(unsigned char *)(v58 + 8) = v59[8];
      *(void *)uint64_t v58 = v62;
    }
    else
    {
      char v67 = v60 & 1;
      uint64_t v68 = *(void **)v59;
      id v69 = v68;
      *(void *)uint64_t v58 = v68;
      *(unsigned char *)(v58 + 8) = v67;
    }
  }
  else if (v60 == 255)
  {
    sub_260F7D360(v58);
    char v61 = v59[8];
    *(void *)uint64_t v58 = *(void *)v59;
    *(unsigned char *)(v58 + 8) = v61;
  }
  else
  {
    char v63 = v60 & 1;
    uint64_t v64 = *(void **)v59;
    id v65 = v64;
    uint64_t v66 = *(void **)v58;
    *(void *)uint64_t v58 = v64;
    *(unsigned char *)(v58 + 8) = v63;
  }
  uint64_t v70 = v9[14];
  uint64_t v71 = (uint64_t)v7 + v70;
  uint64_t v72 = (char *)v8 + v70;
  int v73 = *(void **)((char *)v7 + v70);
  uint64_t v74 = *(void **)((char *)v8 + v70);
  if (v73)
  {
    if (v74)
    {
      *(void *)uint64_t v71 = v74;
      id v75 = v74;

      uint64_t v76 = *(void **)(v71 + 8);
      unint64_t v77 = (void *)*((void *)v72 + 1);
      *(void *)(v71 + 8) = v77;
      id v78 = v77;

      *(_DWORD *)(v71 + 16) = *((_DWORD *)v72 + 4);
      *(void *)(v71 + 24) = *((void *)v72 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260F7D3B4(v71);
      long long v82 = *((_OWORD *)v72 + 1);
      *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
      *(_OWORD *)(v71 + 16) = v82;
    }
  }
  else if (v74)
  {
    *(void *)uint64_t v71 = v74;
    uint64_t v79 = (void *)*((void *)v72 + 1);
    *(void *)(v71 + 8) = v79;
    *(_DWORD *)(v71 + 16) = *((_DWORD *)v72 + 4);
    *(void *)(v71 + 24) = *((void *)v72 + 3);
    id v80 = v74;
    id v81 = v79;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v83 = *((_OWORD *)v72 + 1);
    *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v83;
  }
  *(_DWORD *)((char *)v7 + v9[15]) = *(_DWORD *)((char *)v8 + v9[15]);
  *(_DWORD *)((char *)v7 + v9[16]) = *(_DWORD *)((char *)v8 + v9[16]);
  *(uint64_t *)((char *)v7 + v9[17]) = *(uint64_t *)((char *)v8 + v9[17]);
  *(uint64_t *)((char *)v7 + v9[18]) = *(uint64_t *)((char *)v8 + v9[18]);
  *(_DWORD *)((char *)v7 + v9[19]) = *(_DWORD *)((char *)v8 + v9[19]);
  *(_DWORD *)((char *)v7 + v9[20]) = *(_DWORD *)((char *)v8 + v9[20]);
  *(uint64_t *)((char *)v7 + v9[21]) = *(uint64_t *)((char *)v8 + v9[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v7 + v9[22]) = *((unsigned char *)v8 + v9[22]);
  *((unsigned char *)v7 + v9[23]) = *((unsigned char *)v8 + v9[23]);
  *(_WORD *)((char *)v7 + v9[24]) = *(_WORD *)((char *)v8 + v9[24]);
  *((unsigned char *)v7 + v9[25]) = *((unsigned char *)v8 + v9[25]);
  *(_DWORD *)((char *)v7 + v9[26]) = *(_DWORD *)((char *)v8 + v9[26]);
  *(_DWORD *)((char *)v7 + v9[27]) = *(_DWORD *)((char *)v8 + v9[27]);
  *(_DWORD *)((char *)v7 + v9[28]) = *(_DWORD *)((char *)v8 + v9[28]);
  *(_DWORD *)((char *)v7 + v9[29]) = *(_DWORD *)((char *)v8 + v9[29]);
  *(_DWORD *)((char *)v7 + v9[30]) = *(_DWORD *)((char *)v8 + v9[30]);
  *(_DWORD *)((char *)v7 + v9[31]) = *(_DWORD *)((char *)v8 + v9[31]);
  *(_DWORD *)((char *)v7 + v9[32]) = *(_DWORD *)((char *)v8 + v9[32]);
  return v26;
}

uint64_t sub_260F7D300(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_260F7D360(uint64_t a1)
{
  return a1;
}

uint64_t sub_260F7D3B4(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for PipelineProgress(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  long long v8 = *(_OWORD *)(a2 + v5 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)(a2 + v5);
  *(_OWORD *)(v6 + 16) = v8;
  *(void *)(v6 + 32) = *(void *)(a2 + v5 + 32);
  *(_OWORD *)(v6 + 40) = *(_OWORD *)(a2 + v5 + 40);
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(a2 + v5 + 56);
  *(void *)(v6 + 72) = *(void *)(a2 + v5 + 72);
  *(unsigned char *)(v6 + 80) = *(unsigned char *)(a2 + v5 + 80);
  uint64_t v9 = (int *)type metadata accessor for PipelineConfiguration(0);
  uint64_t v10 = v9[7];
  long long v11 = (char *)(v6 + v10);
  long long v12 = (char *)(v7 + v10);
  uint64_t v13 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    int v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
    v17(v11, v12, v16);
    v17(&v11[v13[5]], &v12[v13[5]], v16);
    uint64_t v18 = v13[6];
    uint64_t v19 = &v11[v18];
    uint64_t v20 = &v12[v18];
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *((void *)v19 + 2) = *((void *)v20 + 2);
    v11[v13[7]] = v12[v13[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  *(_DWORD *)(v6 + v9[8]) = *(_DWORD *)(v7 + v9[8]);
  uint64_t v21 = v9[9];
  uint64_t v22 = v6 + v21;
  uint64_t v23 = v7 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = v9[10];
  uint64_t v25 = v6 + v24;
  uint64_t v26 = v7 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = v9[11];
  uint64_t v28 = v6 + v27;
  uint64_t v29 = v7 + v27;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(unsigned char *)(v28 + 4) = *(unsigned char *)(v29 + 4);
  uint64_t v30 = v9[12];
  uint64_t v31 = v6 + v30;
  uint64_t v32 = v7 + v30;
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(unsigned char *)(v31 + 4) = *(unsigned char *)(v32 + 4);
  uint64_t v33 = v9[13];
  uint64_t v34 = v6 + v33;
  uint64_t v35 = v7 + v33;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  uint64_t v36 = v9[14];
  unint64_t v37 = (_OWORD *)(v6 + v36);
  long long v38 = (_OWORD *)(v7 + v36);
  long long v39 = v38[1];
  *unint64_t v37 = *v38;
  v37[1] = v39;
  *(_DWORD *)(v6 + v9[15]) = *(_DWORD *)(v7 + v9[15]);
  *(_DWORD *)(v6 + v9[16]) = *(_DWORD *)(v7 + v9[16]);
  *(void *)(v6 + v9[17]) = *(void *)(v7 + v9[17]);
  *(void *)(v6 + v9[18]) = *(void *)(v7 + v9[18]);
  *(_DWORD *)(v6 + v9[19]) = *(_DWORD *)(v7 + v9[19]);
  *(_DWORD *)(v6 + v9[20]) = *(_DWORD *)(v7 + v9[20]);
  *(void *)(v6 + v9[21]) = *(void *)(v7 + v9[21]);
  *(unsigned char *)(v6 + v9[22]) = *(unsigned char *)(v7 + v9[22]);
  *(unsigned char *)(v6 + v9[23]) = *(unsigned char *)(v7 + v9[23]);
  *(_WORD *)(v6 + v9[24]) = *(_WORD *)(v7 + v9[24]);
  *(unsigned char *)(v6 + v9[25]) = *(unsigned char *)(v7 + v9[25]);
  *(_DWORD *)(v6 + v9[26]) = *(_DWORD *)(v7 + v9[26]);
  *(_DWORD *)(v6 + v9[27]) = *(_DWORD *)(v7 + v9[27]);
  *(_DWORD *)(v6 + v9[28]) = *(_DWORD *)(v7 + v9[28]);
  *(_DWORD *)(v6 + v9[29]) = *(_DWORD *)(v7 + v9[29]);
  *(_DWORD *)(v6 + v9[30]) = *(_DWORD *)(v7 + v9[30]);
  *(_DWORD *)(v6 + v9[31]) = *(_DWORD *)(v7 + v9[31]);
  *(_DWORD *)(v6 + v9[32]) = *(_DWORD *)(v7 + v9[32]);
  return a1;
}

uint64_t assignWithTake for PipelineProgress(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v58 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + v7);
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(v8 + 40);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  *(unsigned char *)(v8 + 80) = *(unsigned char *)(v9 + 80);
  long long v11 = (int *)type metadata accessor for PipelineConfiguration(0);
  uint64_t v12 = v11[7];
  uint64_t v13 = (unsigned char *)(v8 + v12);
  uint64_t v14 = (unsigned char *)(v9 + v12);
  uint64_t v15 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v16 = *((void *)v15 - 1);
  int v17 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v21 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 32);
      v21(v13, v14, v20);
      v21(&v13[v15[5]], &v14[v15[5]], v20);
      uint64_t v22 = v15[6];
      uint64_t v23 = &v13[v22];
      uint64_t v24 = &v14[v22];
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *((void *)v23 + 2) = *((void *)v24 + 2);
      v13[v15[7]] = v14[v15[7]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
      uint64_t v26 = v58;
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v13, v14, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  if (v19)
  {
    sub_260F7D300((uint64_t)v13, type metadata accessor for PipelineConfiguration.InputConditioning);
    goto LABEL_6;
  }
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  id v52 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v51 - 8) + 40);
  v52(v13, v14, v51);
  v52(&v13[v15[5]], &v14[v15[5]], v51);
  uint64_t v53 = v15[6];
  uint64_t v54 = (uint64_t)&v13[v53];
  unint64_t v55 = &v14[v53];
  if (!*(void *)&v13[v53 + 16]) {
    goto LABEL_23;
  }
  if (!*((void *)v55 + 2))
  {
    sub_260DCFC50(v54);
LABEL_23:
    *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
    *(void *)(v54 + 16) = *((void *)v55 + 2);
    goto LABEL_24;
  }
  uint64_t v56 = *(void *)v54;
  unint64_t v57 = *(void *)(v54 + 8);
  *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
  sub_260DCC110(v56, v57);
  *(void *)(v54 + 16) = *((void *)v55 + 2);
  swift_bridgeObjectRelease();
LABEL_24:
  uint64_t v26 = v58;
  v13[v15[7]] = v14[v15[7]];
LABEL_8:
  *(_DWORD *)(v8 + v11[8]) = *(_DWORD *)(v9 + v11[8]);
  uint64_t v27 = v11[9];
  uint64_t v28 = v8 + v27;
  uint64_t v29 = v9 + v27;
  *(void *)uint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  uint64_t v30 = v11[10];
  uint64_t v31 = v8 + v30;
  uint64_t v32 = v9 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  uint64_t v33 = v11[11];
  uint64_t v34 = v8 + v33;
  uint64_t v35 = v9 + v33;
  *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
  *(unsigned char *)(v34 + 4) = *(unsigned char *)(v35 + 4);
  uint64_t v36 = v11[12];
  uint64_t v37 = v8 + v36;
  uint64_t v38 = v9 + v36;
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
  *(unsigned char *)(v37 + 4) = *(unsigned char *)(v38 + 4);
  uint64_t v39 = v11[13];
  uint64_t v40 = v8 + v39;
  uint64_t v41 = v9 + v39;
  if (*(unsigned __int8 *)(v8 + v39 + 8) == 255)
  {
LABEL_11:
    *(void *)uint64_t v40 = *(void *)v41;
    *(unsigned char *)(v40 + 8) = *(unsigned char *)(v41 + 8);
    goto LABEL_13;
  }
  int v42 = *(unsigned __int8 *)(v41 + 8);
  if (v42 == 255)
  {
    sub_260F7D360(v40);
    goto LABEL_11;
  }
  uint64_t v43 = *(void **)v40;
  *(void *)uint64_t v40 = *(void *)v41;
  *(unsigned char *)(v40 + 8) = v42 & 1;

LABEL_13:
  uint64_t v44 = v11[14];
  uint64_t v45 = v8 + v44;
  uint64_t v46 = v9 + v44;
  uint64_t v47 = *(void **)(v8 + v44);
  if (!v47)
  {
LABEL_17:
    long long v49 = *(_OWORD *)(v46 + 16);
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    *(_OWORD *)(v45 + 16) = v49;
    goto LABEL_18;
  }
  if (!*(void *)v46)
  {
    sub_260F7D3B4(v45);
    goto LABEL_17;
  }
  *(void *)uint64_t v45 = *(void *)v46;

  uint64_t v48 = *(void **)(v45 + 8);
  *(void *)(v45 + 8) = *(void *)(v46 + 8);

  *(_DWORD *)(v45 + 16) = *(_DWORD *)(v46 + 16);
  *(void *)(v45 + 24) = *(void *)(v46 + 24);
  swift_bridgeObjectRelease();
LABEL_18:
  *(_DWORD *)(v8 + v11[15]) = *(_DWORD *)(v9 + v11[15]);
  *(_DWORD *)(v8 + v11[16]) = *(_DWORD *)(v9 + v11[16]);
  *(void *)(v8 + v11[17]) = *(void *)(v9 + v11[17]);
  *(void *)(v8 + v11[18]) = *(void *)(v9 + v11[18]);
  *(_DWORD *)(v8 + v11[19]) = *(_DWORD *)(v9 + v11[19]);
  *(_DWORD *)(v8 + v11[20]) = *(_DWORD *)(v9 + v11[20]);
  *(void *)(v8 + v11[21]) = *(void *)(v9 + v11[21]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v11[22]) = *(unsigned char *)(v9 + v11[22]);
  *(unsigned char *)(v8 + v11[23]) = *(unsigned char *)(v9 + v11[23]);
  *(_WORD *)(v8 + v11[24]) = *(_WORD *)(v9 + v11[24]);
  *(unsigned char *)(v8 + v11[25]) = *(unsigned char *)(v9 + v11[25]);
  *(_DWORD *)(v8 + v11[26]) = *(_DWORD *)(v9 + v11[26]);
  *(_DWORD *)(v8 + v11[27]) = *(_DWORD *)(v9 + v11[27]);
  *(_DWORD *)(v8 + v11[28]) = *(_DWORD *)(v9 + v11[28]);
  *(_DWORD *)(v8 + v11[29]) = *(_DWORD *)(v9 + v11[29]);
  *(_DWORD *)(v8 + v11[30]) = *(_DWORD *)(v9 + v11[30]);
  *(_DWORD *)(v8 + v11[31]) = *(_DWORD *)(v9 + v11[31]);
  *(_DWORD *)(v8 + v11[32]) = *(_DWORD *)(v9 + v11[32]);
  return v26;
}

uint64_t getEnumTagSinglePayload for PipelineProgress(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260F7DCCC);
}

uint64_t sub_260F7DCCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PipelineConfiguration(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PipelineProgress(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260F7DD90);
}

uint64_t sub_260F7DD90(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PipelineConfiguration(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_260F7DE38()
{
  uint64_t result = type metadata accessor for PipelineConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_260F7DEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_260F7B3E0(a1, *(float *)(v4 + 24), a2, a3, a4, *(uint64_t **)(v4 + 16));
}

unint64_t sub_260F7DF0C()
{
  unint64_t result = qword_26A8EAD50;
  if (!qword_26A8EAD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAD50);
  }
  return result;
}

id sub_260F7DF60(id result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return result;
  }
  return result;
}

uint64_t sub_260F7DF78()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for NvRandomSource(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NvRandomSource(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NvRandomSource()
{
  return &type metadata for NvRandomSource;
}

uint64_t sub_260F7E024(unint64_t a1)
{
  v30[15] = *MEMORY[0x263EF8340];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD58);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE8E10;
  unsigned int v4 = v1[2];
  *(void *)(inited + 32) = sub_260FB6684(v4, a1);
  *(void *)(inited + 40) = sub_260FB6684(0, a1);
  if ((a1 & 0x8000000000000000) == 0 && !HIDWORD(a1))
  {
    *(void *)(inited + 48) = sub_260F956D4(a1 << 32);
    *(void *)(inited + 56) = sub_260FB6684(0, a1);
    v30[0] = inited;
    if (v4 != -1)
    {
      v1[2] = v4 + 1;
      uint64_t v5 = swift_initStackObject();
      *(_OWORD *)(v5 + 16) = xmmword_260FE7060;
      unsigned int v6 = v1[1];
      *(void *)(v5 + 32) = sub_260FB6684(*v1, a1);
      uint64_t v7 = sub_260FB6684(v6, a1);
      uint64_t v8 = 0;
      *(void *)(v5 + 40) = v7;
      while (1)
      {
        sub_260F7E554((uint64_t)v30, (void *)v5);
        unint64_t v9 = *(void *)(v5 + 16);
        if (!v9) {
          goto LABEL_35;
        }
        uint64_t v10 = *(void *)(v5 + 32);
        uint64_t v11 = *(void *)(v10 + 16);
        if (!v11) {
          goto LABEL_17;
        }
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = (uint64_t)sub_260F7B468((void *)v5);
        }
        for (unint64_t i = 0; i != v11; ++i)
        {
          if (!*(void *)(v5 + 16))
          {
            __break(1u);
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
          int v13 = *(_DWORD *)(v10 + 4 * i + 32);
          uint64_t v14 = *(char **)(v5 + 32);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v5 + 32) = v14;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v14 = sub_260F7B440((uint64_t)v14);
          }
          if (i >= *((void *)v14 + 2)) {
            goto LABEL_32;
          }
          *(_DWORD *)&v14[4 * i + 32] = v13 - 1640531527;
          *(void *)(v5 + 32) = v14;
        }
        swift_bridgeObjectRelease();
        unint64_t v9 = *(void *)(v5 + 16);
LABEL_17:
        if (v9 < 2) {
          goto LABEL_36;
        }
        uint64_t v16 = *(void *)(v5 + 40);
        uint64_t v17 = *(void *)(v16 + 16);
        if (v17)
        {
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = (uint64_t)sub_260F7B468((void *)v5);
          }
          for (unint64_t j = 0; j != v17; ++j)
          {
            if (*(void *)(v5 + 16) < 2uLL) {
              goto LABEL_33;
            }
            int v19 = *(_DWORD *)(v16 + 4 * j + 32);
            uint64_t v20 = *(char **)(v5 + 40);
            char v21 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)(v5 + 40) = v20;
            if ((v21 & 1) == 0) {
              uint64_t v20 = sub_260F7B440((uint64_t)v20);
            }
            if (j >= *((void *)v20 + 2)) {
              goto LABEL_34;
            }
            *(_DWORD *)&v20[4 * j + 32] = v19 - 1150833019;
            *(void *)(v5 + 40) = v20;
          }
          swift_bridgeObjectRelease();
        }
        if (++v8 == 9)
        {
          sub_260F7E554((uint64_t)v30, (void *)v5);
          uint64_t v22 = swift_bridgeObjectRelease();
          uint64_t v24 = *(void *)(v30[0] + 16);
          if (v24)
          {
            if (v24 != 1)
            {
              uint64_t v25 = *(void *)(v30[0] + 32);
              uint64_t v26 = *(void *)(v30[0] + 40);
              MEMORY[0x270FA5388](v22, v23);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_260F7E8C0(v25, v26, (double (*)(void, void))sub_260F7E83C);
              uint64_t v28 = v27;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v28;
            }
LABEL_39:
            __break(1u);
          }
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
      }
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t result = sub_260FE4E10();
  __break(1u);
  return result;
}

unint64_t sub_260F7E458(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (uint64_t *)(a1 + 32);
    uint64_t v3 = 1;
    while (1)
    {
      uint64_t v4 = *v2++;
      unint64_t result = v3 * v4;
      if ((unsigned __int128)(v3 * (__int128)v4) >> 64 != (v3 * v4) >> 63) {
        break;
      }
      uint64_t v3 = result;
      if (!--v1) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t result = 1;
LABEL_7:
    sub_260F7E024(result);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC98);
    sub_260F6E59C();
    return sub_260FE3B30();
  }
  return result;
}

uint64_t sub_260F7E514()
{
  uint64_t result = sub_260F7E024(1uLL);
  if (*(void *)(result + 16)) {
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_260F7E554(uint64_t result, void *a2)
{
  uint64_t v4 = *(void **)result;
  if (!*(void *)(*(void *)result + 16))
  {
LABEL_52:
    __break(1u);
LABEL_53:
    uint64_t v4 = sub_260F7B468(v4);
    goto LABEL_4;
  }
  uint64_t v3 = *(void *)(v4[4] + 16);
  if (!v3) {
    return result;
  }
  uint64_t v2 = a2;
  uint64_t v28 = (void *)result;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_53;
  }
LABEL_4:
  unint64_t v5 = 0;
  do
  {
    if (v3 == v5)
    {
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    unint64_t v6 = v4[2];
    if (!v6) {
      goto LABEL_35;
    }
    uint64_t v7 = (char *)v4[4];
    if (v5 >= *((void *)v7 + 2)) {
      goto LABEL_36;
    }
    if (v6 < 3) {
      goto LABEL_37;
    }
    uint64_t v8 = v4[6];
    if (v5 >= *(void *)(v8 + 16)) {
      goto LABEL_38;
    }
    uint64_t v9 = v4[5];
    if (v5 >= *(void *)(v9 + 16)) {
      goto LABEL_39;
    }
    unint64_t v10 = v2[2];
    if (!v10) {
      goto LABEL_40;
    }
    uint64_t v11 = v2[4];
    if (v5 >= *(void *)(v11 + 16)) {
      goto LABEL_41;
    }
    unsigned int v12 = *(_DWORD *)&v7[4 * v5 + 32];
    unsigned int v13 = *(_DWORD *)(v8 + 4 * v5 + 32);
    int v14 = *(_DWORD *)(v9 + 4 * v5 + 32);
    int v15 = *(_DWORD *)(v11 + 4 * v5 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v4[4] = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v7 = sub_260F7B440((uint64_t)v7);
    }
    if (v5 >= *((void *)v7 + 2)) {
      goto LABEL_42;
    }
    uint64_t v17 = 3449720151 * v13;
    *(_DWORD *)&v7[4 * v5 + 32] = v14 ^ v15 ^ HIDWORD(v17);
    v4[4] = v7;
    if (v4[2] < 2uLL) {
      goto LABEL_43;
    }
    int v18 = (char *)v4[5];
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    v4[5] = v18;
    if ((v19 & 1) == 0) {
      int v18 = sub_260F7B440((uint64_t)v18);
    }
    if (v5 >= *((void *)v18 + 2)) {
      goto LABEL_44;
    }
    *(_DWORD *)&v18[4 * v5 + 32] = v17;
    v4[5] = v18;
    if (v4[2] < 4uLL) {
      goto LABEL_45;
    }
    uint64_t v20 = v4[7];
    if (v5 >= *(void *)(v20 + 16)) {
      goto LABEL_46;
    }
    if (v10 < 2) {
      goto LABEL_47;
    }
    uint64_t v21 = v2[5];
    if (v5 >= *(void *)(v21 + 16)) {
      goto LABEL_48;
    }
    int v22 = *(_DWORD *)(v20 + 4 * v5 + 32);
    int v23 = *(_DWORD *)(v21 + 4 * v5 + 32);
    uint64_t v24 = (char *)v4[6];
    char v25 = swift_isUniquelyReferenced_nonNull_native();
    v4[6] = v24;
    if ((v25 & 1) == 0) {
      uint64_t v24 = sub_260F7B440((uint64_t)v24);
    }
    if (v5 >= *((void *)v24 + 2)) {
      goto LABEL_49;
    }
    uint64_t v26 = 3528531795 * v12;
    *(_DWORD *)&v24[4 * v5 + 32] = v22 ^ v23 ^ HIDWORD(v26);
    v4[6] = v24;
    if (v4[2] < 4uLL) {
      goto LABEL_50;
    }
    uint64_t v27 = v4[7];
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    v4[7] = v27;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_260F7B440(v27);
      uint64_t v27 = result;
    }
    if (v5 >= *(void *)(v27 + 16)) {
      goto LABEL_51;
    }
    *(_DWORD *)(v27 + 4 * v5 + 32) = v26;
    v4[7] = v27;
    ++v5;
  }
  while (v3 != v5);
  *uint64_t v28 = v4;
  return result;
}

long double sub_260F7E83C(unsigned int a1, unsigned int a2)
{
  double v3 = *(double *)(v2 + 24);
  long double v4 = (double)a2 * 0.00000000146291808 + 7.3145904e-10;
  double v5 = *(double *)(v2 + 16) * sqrt(log((double)a1 * 2.32830644e-10 + 1.16415322e-10) * -2.0);
  return v3 + sin(v4) * v5;
}

void sub_260F7E8C0(uint64_t a1, uint64_t a2, double (*a3)(void, void))
{
  unint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a2 + 16);
  if (v6 >= v5) {
    int64_t v7 = *(void *)(a1 + 16);
  }
  else {
    int64_t v7 = *(void *)(a2 + 16);
  }
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_260F637E8(0, v7, 0);
  int64_t v26 = v6;
  uint64_t v28 = a2;
  uint64_t v29 = a1;
  unint64_t v27 = v5;
  int64_t v25 = v7;
  if (v7)
  {
    unint64_t v8 = v5;
    uint64_t v9 = (unsigned int *)(a1 + 32);
    unint64_t v10 = (unsigned int *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v11 = v6;
    unint64_t v12 = v8;
    while (v12)
    {
      if (!v11) {
        goto LABEL_26;
      }
      double v13 = a3(*v9, *v10);
      unint64_t v15 = *(void *)(v32 + 16);
      unint64_t v14 = *(void *)(v32 + 24);
      if (v15 >= v14 >> 1) {
        sub_260F637E8(v14 > 1, v15 + 1, 1);
      }
      --v11;
      *(void *)(v32 + 16) = v15 + 1;
      *(double *)(v32 + 8 * v15 + 32) = v13;
      --v12;
      ++v10;
      ++v9;
      if (!--v7) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_13:
    if (v27 <= v26)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v16 = 0;
    if (v25 <= v26) {
      int64_t v17 = v26;
    }
    else {
      int64_t v17 = v25;
    }
    int64_t v30 = v17 - v25;
    unint64_t v18 = v27 - v25;
    uint64_t v19 = 4 * v25 + 32;
    uint64_t v20 = v29 + v19;
    uint64_t v21 = v28 + v19;
    while (v18 != v16)
    {
      if (v26 - v25 == v16) {
        goto LABEL_24;
      }
      if (v30 == v16) {
        goto LABEL_28;
      }
      double v22 = a3(*(unsigned int *)(v20 + 4 * v16), *(unsigned int *)(v21 + 4 * v16));
      unint64_t v24 = *(void *)(v32 + 16);
      unint64_t v23 = *(void *)(v32 + 24);
      if (v24 >= v23 >> 1) {
        sub_260F637E8(v23 > 1, v24 + 1, 1);
      }
      *(void *)(v32 + 16) = v24 + 1;
      *(double *)(v32 + 8 * v24 + 32) = v22;
      if (v18 == ++v16) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t static AppleDiffusionPipeline.supportedImageResolutions(for:)(uint64_t a1)
{
  uint64_t v2 = sub_260FE2F90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  unint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7, v8);
  unint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  uint64_t v12 = v11 - 8;
  double v14 = MEMORY[0x270FA5388](v11, v13);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v10, a1, v2, v14);
  AppleDiffusionPipeline.ResourceURLs.init(resourcesAt:)((uint64_t)v10, v16);
  (*(void (**)(uint64_t))&v16[*(int *)(v12 + 32)])(5);
  sub_260F8E32C((uint64_t)v6);
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  sub_260F7EF10((uint64_t)v16);
  return v18;
}

uint64_t *static AppleDiffusionPipeline.supportedImageResolutions()()
{
  uint64_t v1 = type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  MEMORY[0x270FA5388](v1, v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_260FE2F90();
  uint64_t v17 = *(void *)(v5 - 8);
  uint64_t v18 = v5;
  uint64_t v7 = MEMORY[0x270FA5388](v5, v6);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A8EA938 != -1) {
    uint64_t v7 = swift_once();
  }
  uint64_t v11 = (os_unfair_lock_s *)qword_26A8EB3E0;
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v12 = &v17 - 4;
  *((unsigned char *)&v17 - 16) = 0;
  swift_retain();
  os_unfair_lock_lock(v11 + 6);
  sub_260F7EF6C(&v19);
  os_unfair_lock_unlock(v11 + 6);
  if (v0)
  {
    swift_release();
  }
  else
  {
    uint64_t v13 = v19;
    swift_release();
    sub_260F7EF88(v13 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_resourceURLs, (uint64_t)v4);
    swift_release();
    double v14 = *(void (**)(uint64_t))&v4[*(int *)(v1 + 24)];
    swift_retain();
    sub_260F7EF10((uint64_t)v4);
    v14(5);
    swift_release();
    sub_260F8E32C((uint64_t)v10);
    uint64_t v12 = v15;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v18);
  }
  return v12;
}

uint64_t sub_260F7EF10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_260F7EF6C@<X0>(uint64_t *a1@<X8>)
{
  return sub_260FD5CFC(*(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_260F7EF88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_260F7EFEC(unint64_t a1, uint64_t *a2, unint64_t a3)
{
  unint64_t v6 = sub_260DAAA14((uint64_t)&unk_270D22BA8);
  if (a3 >> 62) {
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_24;
  }
LABEL_3:
  uint64_t v20 = a1;
  unint64_t v21 = v6;
  uint64_t v19 = (uint64_t)a2;
  a1 = a3 & 0xC000000000000001;
  unint64_t v6 = 4;
  a2 = &OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel;
  while (1)
  {
    unint64_t v8 = v6 - 4;
    if (a1)
    {
      uint64_t v9 = MEMORY[0x26122B4C0](v6 - 4, a3);
      unint64_t v10 = v6 - 3;
      if (__OFADD__(v8, 1)) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(a3 + 8 * v6);
      swift_retain();
      unint64_t v10 = v6 - 3;
      if (__OFADD__(v8, 1))
      {
LABEL_22:
        __break(1u);
LABEL_23:
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_260FE4E40();
        if (!v7) {
          goto LABEL_24;
        }
        goto LABEL_3;
      }
    }
    uint64_t v11 = *(void **)(v9 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel);
    if (v11) {
      break;
    }
    swift_release();
LABEL_5:
    ++v6;
    if (v10 == v7)
    {
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
      a1 = v20;
      goto LABEL_25;
    }
  }
  id v12 = objc_msgSend(v11, sel_modelDescription);
  id v13 = objc_msgSend(v12, sel_inputDescriptionsByName);

  sub_260F7F3FC();
  uint64_t v14 = sub_260FE3EB0();

  if (!*(void *)(v14 + 16) || (sub_260DBACB4(0x746E6574616CLL, 0xE600000000000000), (v15 & 1) == 0))
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (!*(void *)(v21 + 16)) {
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  a1 = v20;
  unint64_t v16 = sub_260DBACB4(v20, v19);
  if (v17)
  {
    a1 = *(void *)(*(void *)(v21 + 56) + 16 * v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a1;
  }
LABEL_24:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_25:
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_260F7F260(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_260DAAA14((uint64_t)&unk_270D22CA8);
  if (!TextEncoderXL.usePORParameters()() || !*(void *)(v4 + 16)) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_260DBACB4(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    return a1;
  }
  a1 = *(void *)(*(void *)(v4 + 56) + 16 * v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

Swift::String __swiftcall ModelKeyRemapping._remapKey(_:)(Swift::String a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  unint64_t v7 = sub_260DAAA14((uint64_t)&unk_270D22DA8);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3) & 1) == 0 || !*(void *)(v7 + 16)) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_260DBACB4(countAndFlagsBits, (uint64_t)object);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  unint64_t v10 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v8);
  uint64_t countAndFlagsBits = *v10;
  uint64_t v11 = (void *)v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  object = v11;
LABEL_7:
  uint64_t v12 = countAndFlagsBits;
  id v13 = object;
  result._object = v13;
  result._uint64_t countAndFlagsBits = v12;
  return result;
}

unint64_t sub_260F7F3F0(unint64_t a1, uint64_t *a2)
{
  return sub_260F7EFEC(a1, a2, *v2);
}

unint64_t sub_260F7F3FC()
{
  unint64_t result = qword_26A8EAC88;
  if (!qword_26A8EAC88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A8EAC88);
  }
  return result;
}

uint64_t SafetyChecker.init(modelAt:configuration:)(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(void *)(v4 - 8);
  double v7 = MEMORY[0x270FA5388](v4, v6);
  char v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v9, a1, v4, v7);
  type metadata accessor for ManagedMLModel();
  swift_allocObject();
  uint64_t v10 = ManagedMLModel.init(modelAt:configuration:name:)(v9, a2, (uint64_t)"SafetyChecker", 13, 2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v10;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SafetyChecker.loadResources()()
{
}

Swift::Void __swiftcall SafetyChecker.unloadResources()()
{
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SafetyChecker.isSafe(_:)(CGImageRef a1)
{
  uint64_t v3 = v1;
  CGImageRef v81 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v80 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v5);
  double v7 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)v73 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD60);
  uint64_t v79 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v13);
  char v15 = (char *)v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue;
  char v17 = *(void **)(v3 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
  uint64_t v82 = v3;
  long long v83 = sub_260F80030;
  uint64_t v84 = 0;
  id v18 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD68);
  sub_260FE4900();
  if (v2)
  {

    return v19 & 1;
  }
  uint64_t v75 = v4;
  id v78 = v7;
  v73[3] = v16;
  uint64_t v76 = v11;
  unint64_t v77 = v15;

  uint64_t v20 = v85;
  if (!v85[2]) {
    goto LABEL_24;
  }
  unint64_t v21 = sub_260DBACB4(0x706E695F70696C63, 0xEA00000000007475);
  if ((v22 & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v74 = v12;
  id v23 = *(id *)(v20[7] + 8 * v21);
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v23, sel_multiArrayConstraint);

  if (v24)
  {
    uint64_t v26 = v3;
    id v27 = objc_msgSend(v24, sel_shape);

    uint64_t v28 = sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
    uint64_t v29 = sub_260FE4400();

    int64_t v30 = v81;
    if ((v29 & 0xC000000000000001) != 0)
    {
      id v31 = (id)MEMORY[0x26122B4C0](2, v29);
    }
    else
    {
      if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        Swift::Bool result = swift_bridgeObjectRelease();
        __break(1u);
        goto LABEL_25;
      }
      id v31 = *(id *)(v29 + 48);
    }
    uint64_t v32 = v31;
    id v33 = objc_msgSend(v31, sel_integerValue);

    if ((v29 & 0xC000000000000001) != 0)
    {
      id v34 = (id)MEMORY[0x26122B4C0](3, v29);
LABEL_13:
      uint64_t v35 = v34;
      uint64_t v36 = v78;
      swift_bridgeObjectRelease();
      id v37 = objc_msgSend(v35, sel_integerValue);

      uint64_t v38 = sub_260F80FD0(v30, (size_t)v33, (size_t)v37);
      uint64_t v39 = (uint64_t)v77;
      sub_260F800D4(v38, (uint64_t)v77);
      v73[1] = v26;
      uint64_t v40 = (uint64_t)v76;
      sub_260F804FC(v39, (uint64_t)v76);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_260FE8090;
      *(void *)(inited + 32) = 0x706E695F70696C63;
      id v78 = (char *)(inited + 32);
      *(void *)(inited + 40) = 0xEA00000000007475;
      uint64_t v42 = sub_260D905B0(0, &qword_26A8EABD8);
      uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
      uint64_t v44 = v36;
      CGImageRef v81 = (CGImageRef)v28;
      uint64_t v45 = v75;
      v43(v44, v40, v75);
      sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
      uint64_t v46 = sub_260FE4860();
      *(void *)(inited + 72) = v42;
      *(void *)(inited + 80) = 0x656D7473756A6461;
      v73[2] = inited + 80;
      *(void *)(inited + 48) = v46;
      *(void *)(inited + 88) = 0xEA0000000000746ELL;
      uint64_t v85 = &unk_270D22530;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
      sub_260D90340(&qword_26A8EABD0, &qword_26A8EABC8);
      sub_260FE3B30();
      *(void *)(inited + 96) = sub_260FE4860();
      *(void *)(inited + 120) = v42;
      *(void *)(inited + 128) = 0x736567616D69;
      *(void *)(inited + 136) = 0xE600000000000000;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_260FEDF60;
      *(void *)(v47 + 32) = sub_260FE4A30();
      *(void *)(v47 + 40) = sub_260FE4A30();
      *(void *)(v47 + 48) = sub_260FE4A30();
      *(void *)(v47 + 56) = sub_260FE4A30();
      uint64_t v85 = (void *)v47;
      sub_260FE4420();
      uint64_t v48 = (uint64_t)v85;
      id v49 = objc_allocWithZone(MEMORY[0x263F00DA8]);
      id v50 = sub_260E5BE64(v48, 65552);
      uint64_t v51 = v38;
      *(void *)(inited + 168) = v42;
      *(void *)(inited + 144) = v50;
      sub_260DAAF10(inited);
      id v52 = objc_allocWithZone(MEMORY[0x263F00D38]);
      id v53 = sub_260FBB9C8();
      uint64_t v55 = v79;
      unint64_t v57 = v53;
      uint64_t v58 = v80;
      uint64_t v59 = (uint64_t)v76;
      if (v53)
      {
        MEMORY[0x270FA5388](v53, v54);
        v73[-2] = v57;
        MEMORY[0x270FA5388](v60, v61);
        v73[-4] = v62;
        v73[-3] = sub_260F6DA44;
        v73[-2] = v63;
        id v65 = v64;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
        sub_260FE4900();

        uint64_t v66 = v85;
        char v67 = (void *)sub_260FE4070();
        id v68 = objc_msgSend(v66, sel_featureValueForName_, v67);

        if (v68 && (id v69 = objc_msgSend(v68, sel_multiArrayValue)) != 0)
        {
          uint64_t v70 = v69;
          id v71 = objc_msgSend(v69, sel_objectAtIndexedSubscript_, 0);

          LOBYTE(v70) = objc_msgSend(v71, sel_BOOLValue);
          swift_unknownObjectRelease();

          (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v59, v75);
          (*(void (**)(char *, uint64_t))(v79 + 8))(v77, v74);
          char v19 = v70 ^ 1;
        }
        else
        {
          sub_260F81114();
          swift_allocError();
          unsigned char *v72 = 3;
          swift_willThrow();

          swift_unknownObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v59, v75);
          (*(void (**)(char *, uint64_t))(v79 + 8))(v77, v74);
        }
      }
      else
      {
        sub_260F81114();
        swift_allocError();
        *uint64_t v56 = 2;
        swift_willThrow();

        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v45);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v77, v74);
      }
      return v19 & 1;
    }
    if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 4uLL)
    {
      id v34 = *(id *)(v29 + 56);
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_260F80030(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_modelDescription);
  id v4 = objc_msgSend(v3, sel_inputDescriptionsByName);

  sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
  uint64_t v5 = sub_260FE3EB0();

  *a2 = v5;
}

uint64_t sub_260F800D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v34 = sub_260FE2900();
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34, v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD90);
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33, v7);
  int64_t v30 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD98);
  MEMORY[0x270FA5388](v13 - 8, v14);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EADA0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17, v19);
  unint64_t v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260FE28F0();
  long long v35 = 0u;
  long long v36 = 0u;
  int v37 = 0;
  char v22 = a1;
  sub_260FE2880();
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    sub_260D90820((uint64_t)v16, &qword_26A8EAD98);
    sub_260F81114();
    swift_allocError();
    *id v23 = 1;
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v16, v17);
    CGImageGetWidth(v22);
    CGImageGetHeight(v22);
    sub_260FE28E0();
    sub_260FE2870();
    uint64_t v25 = v32;
    uint64_t v26 = v34;
    (*(void (**)(char *, void, uint64_t))(v32 + 104))(v6, *MEMORY[0x263F8CD38], v34);
    sub_260FE28A0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
    uint64_t v27 = v31;
    uint64_t v28 = v33;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v30, v12, v33);
    sub_260FE28D0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  }
}

uint64_t sub_260F804FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)v24 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v26 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD60);
  uint64_t v28 = a1;
  uint64_t v16 = sub_260FE27F0();
  uint64_t v17 = sub_260FE2800();
  int v51 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_260FE8E10;
  *(_OWORD *)(v18 + 32) = xmmword_260FE7020;
  *(void *)(v18 + 48) = v16;
  *(void *)(v18 + 56) = v17;
  uint64_t v29 = v16;
  uint64_t v30 = v17;
  sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  uint64_t v32 = v15;
  uint64_t v25 = v12;
  sub_260FE3C20();
  sub_260FE3B60();
  uint64_t v31 = sub_260D90340(&qword_26A8EAD88, &qword_26A8EAD80);
  sub_260FE3C50();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
  v19(v11, v3);
  uint64_t v45 = v16;
  uint64_t v46 = v17;
  uint64_t v20 = v28;
  uint64_t v47 = v28;
  uint64_t v48 = 0;
  id v49 = &unk_270D22500;
  id v50 = &unk_270D224D0;
  v24[3] = sub_260F812D4;
  void v24[2] = MEMORY[0x263F8EE60] + 8;
  sub_260FE3B80();
  v24[1] = v4 + 8;
  v19(v7, v3);
  uint64_t v21 = v25;
  sub_260FE3B60();
  sub_260FE3C50();
  v19(v11, v3);
  uint64_t v39 = v29;
  uint64_t v40 = v30;
  uint64_t v41 = v20;
  uint64_t v42 = 1;
  uint64_t v43 = &unk_270D22500;
  uint64_t v44 = &unk_270D224D0;
  sub_260FE3B80();
  v19(v7, v3);
  char v22 = v32;
  sub_260FE3B60();
  sub_260FE3C50();
  v19(v11, v3);
  uint64_t v33 = v29;
  uint64_t v34 = v30;
  uint64_t v35 = v28;
  uint64_t v36 = 2;
  int v37 = &unk_270D22500;
  uint64_t v38 = &unk_270D224D0;
  sub_260FE3B80();
  v19(v7, v3);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v27, v22, v21);
}

void sub_260F80A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAB8);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (*(void *)(a4 + 16))
    {
      if ((unint64_t)(*(void *)(a4 + 32) - 0x2000000000000000) >> 62 == 3)
      {
        uint64_t v22 = a7;
        uint64_t v23 = v17;
        sub_260FE2970();
        uint64_t v20 = sub_260FE2860();
        MEMORY[0x270FA5388](v20, v21);
        *(&v22 - 4) = (uint64_t)v19;
        *(&v22 - 3) = a9;
        *(&v22 - 2) = a8;
        *(&v22 - 1) = a10;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD60);
        sub_260FE2840();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v23);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_260F80BE8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t result = sub_260FE28B0();
  if ((a4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(void *)(a3 + 16) <= a4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*(void *)(a5 + 16) > a4) {
    return sub_260FE28C0();
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_260F80C90()
{
}

void sub_260F80CB4()
{
}

unint64_t sub_260F80CD8(uint64_t a1)
{
  sub_260FE40A0();
  sub_260FE52F0();
  sub_260FE41D0();
  uint64_t v2 = sub_260FE5340();
  swift_bridgeObjectRelease();
  return sub_260DBCB88(a1, v2);
}

unint64_t sub_260F80D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_260FE52F0();
  swift_bridgeObjectRetain();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_260FE5340();
  return sub_260F80E2C(a1, a2, a3, a4, v8);
}

unint64_t sub_260F80E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v13 = ~v7;
    uint64_t v14 = *(void *)(v5 + 48);
    do
    {
      uint64_t v15 = (void *)(v14 + 32 * v8);
      uint64_t v16 = v15[2];
      uint64_t v17 = v15[3];
      BOOL v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_260FE5150() & 1) != 0)
      {
        BOOL v19 = v16 == a3 && v17 == a4;
        if (v19 || (sub_260FE5150() & 1) != 0) {
          break;
        }
      }
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

void sub_260F80F2C(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr)@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = (void *)MEMORY[0x26122C180]();
  sub_260FBD204(a1, a2, a3);
  if (v4)
  {
  }
  else
  {
    uint64_t v11 = v10;
    *a4 = v11;
  }
}

void sub_260F80FB0(void *a1@<X8>)
{
  sub_260F80F2C(*(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24), *(void *)(v1 + 32), a1);
}

CGColorSpace *sub_260F80FD0(CGColorSpace *result, size_t a2, size_t a3)
{
  if ((a2 - 0x2000000000000000) >> 62 != 3)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = result;
  uint64_t result = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x263F002D8]);
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = CGBitmapContextCreate(0, a2, a3, 8uLL, 4 * a2, result, 5u);

  if (v7)
  {
    CGContextSetInterpolationQuality(v7, kCGInterpolationHigh);
    sub_260FE4810();
    CGImageRef Image = CGBitmapContextCreateImage(v7);
    if (Image)
    {
      uint64_t v5 = Image;
    }
    else
    {
      sub_260F81114();
      swift_allocError();
      *uint64_t v10 = 0;
      swift_willThrow();
    }
  }
  else
  {
    sub_260F81114();
    swift_allocError();
    *uint64_t v9 = 0;
    swift_willThrow();
  }
  return v5;
}

unint64_t sub_260F81114()
{
  unint64_t result = qword_26A8EAD70;
  if (!qword_26A8EAD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAD70);
  }
  return result;
}

ValueMetadata *type metadata accessor for SafetyChecker()
{
  return &type metadata for SafetyChecker;
}

unsigned char *storeEnumTagSinglePayload for SafetyChecker.SafetyCheckError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F81244);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SafetyChecker.SafetyCheckError()
{
  return &type metadata for SafetyChecker.SafetyCheckError;
}

unint64_t sub_260F81280()
{
  unint64_t result = qword_26A8EAD78;
  if (!qword_26A8EAD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAD78);
  }
  return result;
}

void sub_260F812D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_260F80A04(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6], v4[7]);
}

uint64_t sub_260F81304(uint64_t a1)
{
  return sub_260F80BE8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void *sub_260F81324(uint64_t a1)
{
  unint64_t result = (void *)sub_260DE7CB8(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (void *)(1 << *(unsigned char *)(a1 + 32))) {
    return 0;
  }
  else {
    return sub_260F83408(&v5, (uint64_t)result, v3, 0, a1);
  }
}

uint64_t sub_260F813B0(uint64_t a1)
{
  uint64_t result = sub_260E30A34(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_260F83498(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Encoder.loadResources()()
{
}

Swift::Void __swiftcall Encoder.unloadResources()()
{
}

void Encoder.encode(_:scaleFactor:random:)(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  uint64_t v184 = a2;
  v195[27] = *(id *)MEMORY[0x263EF8340];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD80);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v183 = (char *)&v170 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v15);
  char v182 = (char *)&v170 - v16;
  MEMORY[0x270FA5388](v17, v18);
  uint64_t v181 = (char *)&v170 - v19;
  MEMORY[0x270FA5388](v20, v21);
  uint64_t v191 = (char *)&v170 - v22;
  uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v185 = *(void *)(v190 - 8);
  MEMORY[0x270FA5388](v190, v23);
  unint64_t v188 = (char *)&v170 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25, v26);
  uint64_t v186 = (char *)&v170 - v27;
  MEMORY[0x270FA5388](v28, v29);
  uint64_t v189 = (char *)&v170 - v30;
  MEMORY[0x270FA5388](v31, v32);
  uint64_t v187 = (char *)&v170 - v33;
  uint64_t v193 = OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue;
  uint64_t v34 = *(void **)&a3[OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue];
  v195[3] = a3;
  v195[4] = sub_260F6D208;
  v195[5] = 0;
  uint64_t v35 = sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
  id v36 = v34;
  uint64_t v192 = v35;
  sub_260FE4900();
  if (v5) {
    goto LABEL_75;
  }

  id v37 = v195[0];
  id v38 = objc_msgSend(v195[0], sel_type);

  if (v38 != (id)4)
  {
    if (v38 != (id)5)
    {
      sub_260F83818();
      swift_allocError();
      *id v107 = 1;
      swift_willThrow();
      return;
    }
    uint64_t v39 = (void *)sub_260FDB750(0, 1, 0, 1);
    uint64_t v177 = 0;
    uint64_t v179 = a4;
    uint64_t v180 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
    uint64_t v40 = swift_allocObject();
    long long v178 = xmmword_260FEDF60;
    *(_OWORD *)(v40 + 16) = xmmword_260FEDF60;
    unint64_t v41 = sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
    *(void *)(v40 + 32) = sub_260FE4A30();
    *(void *)(v40 + 40) = sub_260FE4A30();
    uint64_t v42 = &selRef_setRevision_error_;
    id v43 = objc_msgSend(v39, sel_shape);
    uint64_t v44 = sub_260FE4400();

    if ((v44 & 0xC000000000000001) != 0)
    {
      id v45 = (id)MEMORY[0x26122B4C0](2, v44);
    }
    else
    {
      if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
      {
        __break(1u);
        goto LABEL_69;
      }
      id v45 = *(id *)(v44 + 48);
    }
    id v46 = v45;
    swift_bridgeObjectRelease();
    *(void *)(v40 + 48) = v46;
    id v47 = objc_msgSend(v39, sel_shape);
    uint64_t v48 = sub_260FE4400();

    uint64_t v176 = v10;
    if ((v48 & 0xC000000000000001) != 0)
    {
      id v49 = (id)MEMORY[0x26122B4C0](3, v48);
LABEL_10:
      id v50 = v49;
      swift_bridgeObjectRelease();
      *(void *)(v40 + 56) = v50;
      v195[0] = (id)v40;
      sub_260FE4420();
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = v178;
      *(void *)(v51 + 32) = sub_260FE4A30();
      *(void *)(v51 + 40) = sub_260FE4A30();
      *(void *)(v51 + 48) = sub_260FE4A30();
      *(void *)(v51 + 56) = sub_260FE4A30();
      v195[0] = (id)v51;
      sub_260FE4420();
      id v52 = (void *)sub_260FE43F0();
      swift_bridgeObjectRelease();
      id v53 = (void *)sub_260FE43F0();
      v195[0] = 0;
      uint64_t v54 = v39;
      id v55 = objc_msgSend(v39, sel_sliceAtOrigin_shape_squeeze_error_, v52, v53, 0, v195);

      id v56 = v195[0];
      if (!v55)
      {
        id v127 = v195[0];
        swift_bridgeObjectRelease();
        sub_260FE2E30();

        swift_willThrow();
        return;
      }
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = v178;
      id v58 = v56;
      *(void *)(v57 + 32) = sub_260FE4A30();
      *(void *)(v57 + 40) = sub_260FE4A30();
      *(void *)(v57 + 48) = sub_260FE4A30();
      *(void *)(v57 + 56) = sub_260FE4A30();
      v195[0] = (id)v57;
      sub_260FE4420();
      uint64_t v59 = (void *)sub_260FE43F0();
      swift_bridgeObjectRelease();
      uint64_t v60 = (void *)sub_260FE43F0();
      v195[0] = 0;
      id v61 = objc_msgSend(v54, sel_sliceAtOrigin_shape_squeeze_error_, v59, v60, 0, v195);

      id v62 = v195[0];
      id v175 = v61;
      if (!v61)
      {
        id v128 = v195[0];
        swift_bridgeObjectRelease();
        sub_260FE2E30();

        swift_willThrow();
        return;
      }
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = v178;
      id v64 = v62;
      *(void *)(v63 + 32) = sub_260FE4A30();
      *(void *)(v63 + 40) = sub_260FE4A30();
      *(void *)(v63 + 48) = sub_260FE4A30();
      *(void *)(v63 + 56) = sub_260FE4A30();
      v195[0] = (id)v63;
      sub_260FE4420();
      id v65 = (void *)sub_260FE43F0();
      swift_bridgeObjectRelease();
      uint64_t v66 = (void *)sub_260FE43F0();
      swift_bridgeObjectRelease();
      v195[0] = 0;
      id v67 = objc_msgSend(v54, sel_sliceAtOrigin_shape_squeeze_error_, v65, v66, 0, v195);

      id v68 = v195[0];
      if (!v67)
      {
        id v155 = v195[0];
        sub_260FE2E30();

        swift_willThrow();
        return;
      }
      *(void *)&long long v178 = v54;
      uint64_t v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = xmmword_260FF8550;
      id v70 = v175;
      *(void *)(v69 + 32) = v55;
      *(void *)(v69 + 40) = v70;
      *(void *)(v69 + 48) = v67;
      v195[0] = (id)v69;
      sub_260FE4420();
      id v71 = v55;
      uint64_t v72 = sub_260D905B0(0, &qword_26A8EABD8);
      id v73 = v68;
      uint64_t v42 = v71;
      id v175 = v70;
      id v174 = v67;
      uint64_t v172 = v72;
      uint64_t v74 = (void *)sub_260FE43F0();
      swift_bridgeObjectRelease();
      id v75 = objc_msgSend(self, sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v74, 1, 65568);

      id v173 = v75;
      id v76 = objc_msgSend(v75, sel_shape);
      unint64_t v41 = sub_260FE4400();

      if (!(v41 >> 62))
      {
        uint64_t v77 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_15;
      }
LABEL_70:
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_260FE4E40();
      swift_bridgeObjectRelease();
LABEL_15:
      uint64_t v10 = v176;
      id v78 = (void *)v178;
      if (v77)
      {
        uint64_t v171 = v42;
        v195[0] = (id)MEMORY[0x263F8EE78];
        sub_260DB4728(0, v77 & ~(v77 >> 63), 0);
        if (v77 < 0) {
          __break(1u);
        }
        uint64_t v79 = 0;
        uint64_t v80 = v195[0];
        do
        {
          if ((v41 & 0xC000000000000001) != 0) {
            id v81 = (id)MEMORY[0x26122B4C0](v79, v41);
          }
          else {
            id v81 = *(id *)(v41 + 8 * v79 + 32);
          }
          uint64_t v82 = v81;
          id v83 = objc_msgSend(v81, sel_integerValue);

          v195[0] = v80;
          unint64_t v85 = v80[2];
          unint64_t v84 = v80[3];
          if (v85 >= v84 >> 1)
          {
            sub_260DB4728(v84 > 1, v85 + 1, 1);
            uint64_t v80 = v195[0];
          }
          ++v79;
          v80[2] = v85 + 1;
          v80[v85 + 4] = v83;
        }
        while (v77 != v79);
        swift_bridgeObjectRelease();
        uint64_t v10 = v176;
        id v78 = (void *)v178;
        uint64_t v42 = v171;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v80 = (void *)MEMORY[0x263F8EE78];
      }
      long long v156 = (void *)sub_260F83B20((uint64_t)a3);
      BOOL v157 = sub_260F83394(v80, v156);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v157)
      {
        sub_260F83818();
        swift_allocError();
        *uint64_t v169 = 0;
        swift_willThrow();

        return;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_260FE7080;
      MEMORY[0x270FA5388](inited, v159);
      *(&v170 - 4) = (uint64_t)a3;
      *(&v170 - 3) = (uint64_t)sub_260F6D208;
      *(&v170 - 2) = 0;
      id v36 = v160;
      uint64_t v161 = v177;
      sub_260FE4900();
      if (!v161)
      {

        id v162 = v195[0];
        id v163 = objc_msgSend(v195[0], sel_name);

        uint64_t v164 = sub_260FE40A0();
        uint64_t v166 = v165;

        *(void *)(inited + 32) = v164;
        *(void *)(inited + 40) = v166;
        *(void *)(inited + 72) = v172;
        id v167 = v173;
        *(void *)(inited + 48) = v173;
        id v168 = v167;
        sub_260DAAF10(inited);

        goto LABEL_26;
      }
      while (1)
      {
LABEL_75:

        swift_unexpectedError();
        __break(1u);
      }
    }
    if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 4uLL)
    {
      id v49 = *(id *)(v48 + 56);
      goto LABEL_10;
    }
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v179 = a4;
  uint64_t v180 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
  uint64_t v86 = swift_initStackObject();
  *(_OWORD *)(v86 + 16) = xmmword_260FE7080;
  MEMORY[0x270FA5388](v86, v87);
  *(&v170 - 4) = (uint64_t)a3;
  *(&v170 - 3) = (uint64_t)sub_260F6D208;
  *(&v170 - 2) = 0;
  id v89 = v88;
  sub_260FE4900();

  id v90 = v195[0];
  id v91 = objc_msgSend(v195[0], sel_name);

  uint64_t v92 = sub_260FE40A0();
  uint64_t v94 = v93;

  *(void *)(v86 + 32) = v92;
  *(void *)(v86 + 40) = v94;
  type metadata accessor for CVBuffer(0);
  *(void *)(v86 + 72) = v95;
  *(void *)(v86 + 48) = a1;
  id v96 = a1;
  sub_260DAAF10(v86);
LABEL_26:
  id v97 = objc_allocWithZone(MEMORY[0x263F00D38]);
  id v98 = sub_260FBB9C8();
  uint64_t v99 = v180;
  uint64_t v100 = v98;
  MEMORY[0x270FA5388](v98, v101);
  *(&v170 - 2) = v102;
  MEMORY[0x270FA5388](v102, v103);
  *(&v170 - 4) = (uint64_t)a3;
  *(&v170 - 3) = (uint64_t)sub_260F6DA44;
  *(&v170 - 2) = v104;
  id v106 = v105;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
  sub_260FE4900();
  uint64_t v177 = 0;

  id v108 = v195[0];
  id v109 = objc_msgSend(v195[0], sel_featureNames);
  uint64_t v110 = sub_260FE46E0();

  id v36 = (id)sub_260F813B0(v110);
  uint64_t v112 = v111;
  swift_bridgeObjectRelease();
  if (!v112)
  {
    __break(1u);
    goto LABEL_73;
  }
  id v36 = (id)sub_260FE4070();
  swift_bridgeObjectRelease();
  id v113 = objc_msgSend(v108, sel_featureValueForName_, v36);

  if (!v113)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  *(void *)&long long v178 = v108;
  id v36 = objc_msgSend(v113, sel_multiArrayValue);

  if (!v36)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  uint64_t v114 = sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  id v175 = v36;
  uint64_t v193 = v114;
  sub_260FE3BB0();
  uint64_t v115 = v181;
  sub_260FE3B60();
  sub_260D90340(&qword_26A8EAD88, &qword_26A8EAD80);
  sub_260FE3C60();
  unint64_t v116 = *(void (**)(char *, uint64_t))(v99 + 8);
  v116(v115, v10);
  unint64_t v117 = v182;
  sub_260FE3B60();
  uint64_t v118 = v183;
  sub_260FE3C60();
  v116(v117, v10);
  uint64_t v119 = sub_260FE3BF0();
  uint64_t v180 = v99 + 8;
  uint64_t v183 = (char *)v116;
  v116(v118, v10);
  int64_t v120 = *(void *)(v119 + 16);
  if (v120)
  {
    v195[0] = (id)MEMORY[0x263F8EE78];
    sub_260F63828(0, v120, 0);
    uint64_t v121 = 0;
    unint64_t v122 = v195[0];
    unint64_t v123 = *((void *)v195[0] + 2);
    do
    {
      float v124 = *(float *)(v119 + 4 * v121 + 32);
      if (v124 <= -30.0) {
        float v124 = -30.0;
      }
      if (v124 <= 20.0) {
        float v125 = v124;
      }
      else {
        float v125 = 20.0;
      }
      v195[0] = v122;
      unint64_t v126 = v122[3];
      if (v123 >= v126 >> 1)
      {
        sub_260F63828(v126 > 1, v123 + 1, 1);
        unint64_t v122 = v195[0];
      }
      ++v121;
      v122[2] = v123 + 1;
      *((float *)v122 + v123++ + 8) = v125;
    }
    while (v120 != v121);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v122 = (void *)MEMORY[0x263F8EE78];
  }
  v195[0] = v122;
  uint64_t v176 = v10;
  sub_260FE3BA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
  uint64_t v192 = sub_260D90340(&qword_26A8EABD0, &qword_26A8EABC8);
  sub_260FE3B30();
  uint64_t v129 = sub_260FE3BF0();
  int64_t v130 = *(void *)(v129 + 16);
  id v174 = v100;
  if (v130)
  {
    v195[0] = (id)MEMORY[0x263F8EE78];
    sub_260F63828(0, v130, 0);
    uint64_t v131 = 0;
    uint64_t v132 = v195[0];
    unint64_t v133 = *((void *)v195[0] + 2);
    do
    {
      float v134 = expf(*(float *)(v129 + 4 * v131 + 32) * 0.5);
      v195[0] = v132;
      unint64_t v135 = v132[3];
      if (v133 >= v135 >> 1)
      {
        sub_260F63828(v135 > 1, v133 + 1, 1);
        uint64_t v132 = v195[0];
      }
      ++v131;
      v132[2] = v133 + 1;
      *((float *)v132 + v133++ + 8) = v134;
    }
    while (v130 != v131);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v132 = (void *)MEMORY[0x263F8EE78];
  }
  v195[0] = v132;
  sub_260FE3B20();
  sub_260FE3B30();
  uint64_t v136 = sub_260FE3BF0();
  uint64_t v137 = sub_260FE3BF0();
  MEMORY[0x270FA5388](v137, v138);
  *(&v170 - 2) = v184;
  uint64_t v139 = v177;
  sub_260F838DC(v136, v137, (float (*)(uint64_t, float, float))sub_260F8386C);
  unint64_t v141 = v140;
  uint64_t v177 = v139;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v195[0] = v141;
  sub_260FE3B20();
  sub_260FE3B30();
  uint64_t v142 = sub_260FE3BF0();
  int64_t v143 = *(void *)(v142 + 16);
  if (v143)
  {
    v195[0] = (id)MEMORY[0x263F8EE78];
    sub_260F63828(0, v143, 0);
    uint64_t v144 = 0;
    uint64_t v145 = v195[0];
    unint64_t v146 = *((void *)v195[0] + 2);
    uint64_t v147 = v176;
    id v148 = v174;
    do
    {
      float v149 = *(float *)(v142 + 4 * v144 + 32);
      v195[0] = v145;
      unint64_t v150 = v145[3];
      if (v146 >= v150 >> 1)
      {
        sub_260F63828(v150 > 1, v146 + 1, 1);
        uint64_t v145 = v195[0];
      }
      ++v144;
      v145[2] = v146 + 1;
      *((float *)v145 + v146++ + 8) = v149 * a5;
    }
    while (v143 != v144);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v145 = (void *)MEMORY[0x263F8EE78];
    uint64_t v147 = v176;
    id v148 = v174;
  }
  v195[0] = v145;
  uint64_t v151 = v190;
  unint64_t v152 = v188;
  uint64_t v153 = sub_260FE3B20();
  uint64_t v194 = &unk_270D22A08;
  sub_260EE03A0(v153);
  sub_260FE3B30();

  swift_unknownObjectRelease();
  unint64_t v154 = *(void (**)(char *, uint64_t))(v185 + 8);
  v154(v152, v151);
  v154(v186, v151);
  v154(v189, v151);
  ((void (*)(char *, uint64_t))v183)(v191, v147);
  v154(v187, v151);
}

DiffusionBase::Encoder::Error_optional __swiftcall Encoder.Error.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = DiffusionBase_Encoder_Error_unsupportedInputFormat;
  }
  else {
    v2.value = DiffusionBase_Encoder_Error_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

unint64_t Encoder.Error.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000016;
  }
  else {
    return 0xD00000000000001ALL;
  }
}

uint64_t sub_260F82C74(char *a1, char *a2)
{
  return sub_260FD4470(*a1, *a2);
}

uint64_t sub_260F82C80()
{
  return sub_260FB6004();
}

uint64_t sub_260F82C88()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260F82CFC()
{
  return sub_260FB6558();
}

uint64_t sub_260F82D04@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_260FE4EC0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_260F82D64(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000016;
  }
  else {
    unint64_t v2 = 0xD00000000000001ALL;
  }
  unint64_t v3 = 0x8000000261001010;
  if (*v1) {
    unint64_t v3 = 0x8000000261001030;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_260F82DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  unsigned __int8 v5 = *(unsigned char *)(a1 + 60);
  uint64_t v6 = *(unsigned int *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v31 = *(void *)(a1 + 40);
  uint64_t v33 = *(void *)(a2 + 40);
  uint64_t v9 = *(unsigned int *)(a2 + 56);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 60);
  char v29 = *(unsigned char *)(a2 + 32);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v9) = sub_260FABE4C(v11, v31, v7, v6 | ((unint64_t)v5 << 32), v29, v33, v8, v9 | ((unint64_t)v10 << 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0) {
    return 0;
  }
  uint64_t v12 = v2 - 1;
  if (v2 == 1) {
    return 1;
  }
  for (uint64_t i = 0; ; i += 32)
  {
    if (!v12)
    {
      __break(1u);
      JUMPOUT(0x260F83210);
    }
    uint64_t v16 = *(void *)(a1 + i + 80);
    float v17 = *(float *)(a1 + i + 88);
    char v18 = *(unsigned char *)(a1 + i + 92);
    uint64_t v20 = *(void *)(a2 + i + 72);
    uint64_t v19 = *(void *)(a2 + i + 80);
    float v21 = *(float *)(a2 + i + 88);
    int v22 = *(unsigned __int8 *)(a2 + i + 92);
    uint64_t v34 = *(void *)(a1 + i + 72);
    if (*(unsigned char *)(a1 + i + 64) != 9) {
      break;
    }
    if (*(unsigned char *)(a2 + i + 64) != 9) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_39:
    if (v16)
    {
      if (!v19) {
        goto LABEL_52;
      }
      if (v34 == v20 && v16 == v19)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v28 = sub_260FE5150();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0) {
          return 0;
        }
      }
    }
    else if (v19)
    {
      goto LABEL_52;
    }
    if (v18)
    {
      if (!v22) {
        return 0;
      }
    }
    else
    {
      if (v17 == v21) {
        char v15 = v22;
      }
      else {
        char v15 = 1;
      }
      if (v15) {
        return 0;
      }
    }
    uint64_t result = 1;
    if (!--v12) {
      return result;
    }
  }
  int v30 = *(unsigned __int8 *)(a2 + i + 92);
  char v32 = *(unsigned char *)(a1 + i + 92);
  unint64_t v23 = 0xE400000000000000;
  uint64_t v24 = 1936876912;
  switch(*(unsigned char *)(a1 + i + 64))
  {
    case 1:
      uint64_t v24 = 0x6F6974616D696E61;
      unint64_t v23 = 0xE90000000000006ELL;
      break;
    case 2:
      unint64_t v23 = 0xE800000000000000;
      uint64_t v24 = 0x7472615F656E696CLL;
      break;
    case 3:
      unint64_t v23 = 0xE500000000000000;
      uint64_t v24 = 0x696A6F6D65;
      break;
    case 4:
      unint64_t v23 = 0xE300000000000000;
      uint64_t v24 = 7168876;
      break;
    case 5:
      uint64_t v24 = 0x61727473756C6C69;
      unint64_t v23 = 0xEC0000006E6F6974;
      break;
    case 6:
      unint64_t v23 = 0xE600000000000000;
      uint64_t v24 = 0x686374656B73;
      break;
    case 7:
      uint64_t v24 = 0x63735F656C797473;
      unint64_t v23 = 0xEE00656C62626972;
      break;
    case 8:
      unint64_t v23 = 0xE800000000000000;
      uint64_t v24 = 0x737265705F6D636CLL;
      break;
    default:
      break;
  }
  unint64_t v25 = 0xE400000000000000;
  uint64_t v26 = 1936876912;
  switch(*(unsigned char *)(a2 + i + 64))
  {
    case 0:
      goto LABEL_35;
    case 1:
      uint64_t v26 = 0x6F6974616D696E61;
      unint64_t v25 = 0xE90000000000006ELL;
      goto LABEL_35;
    case 2:
      unint64_t v25 = 0xE800000000000000;
      uint64_t v26 = 0x7472615F656E696CLL;
      goto LABEL_35;
    case 3:
      unint64_t v25 = 0xE500000000000000;
      uint64_t v26 = 0x696A6F6D65;
      goto LABEL_35;
    case 4:
      unint64_t v25 = 0xE300000000000000;
      uint64_t v26 = 7168876;
      goto LABEL_35;
    case 5:
      uint64_t v26 = 0x61727473756C6C69;
      unint64_t v25 = 0xEC0000006E6F6974;
      goto LABEL_35;
    case 6:
      unint64_t v25 = 0xE600000000000000;
      uint64_t v26 = 0x686374656B73;
      goto LABEL_35;
    case 7:
      uint64_t v26 = 0x63735F656C797473;
      unint64_t v25 = 0xEE00656C62626972;
      goto LABEL_35;
    case 8:
      unint64_t v25 = 0xE800000000000000;
      uint64_t v26 = 0x737265705F6D636CLL;
LABEL_35:
      if (v24 == v26 && v23 == v25)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        int v22 = v30;
        char v18 = v32;
        goto LABEL_39;
      }
      char v27 = sub_260FE5150();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v22 = v30;
      char v18 = v32;
      if (v27) {
        goto LABEL_39;
      }
      swift_bridgeObjectRelease();
LABEL_52:
      swift_bridgeObjectRelease();
      return 0;
    default:
      return 0;
  }
}

uint64_t sub_260F83258(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_260FE5150(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_260FE5150() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_260F83320(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  BOOL v5 = (float *)(a1 + 36);
  char v6 = (float *)(a2 + 36);
  do
  {
    float v7 = *v5++;
    float v8 = v7;
    float v9 = *v6++;
    float v10 = v9;
    BOOL v12 = v4-- != 0;
    BOOL result = v8 == v10;
  }
  while (v8 == v10 && v12);
  return result;
}

BOOL sub_260F83394(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  BOOL v5 = a1 + 5;
  char v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

void *sub_260F83408(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    char v6 = *(void **)(*(void *)(a5 + 56) + 8 * a2);
    *BOOL result = v6;
    swift_bridgeObjectRetain();
    id v7 = v6;
    return (void *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_260F83498(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t _s13DiffusionBase7EncoderV7modelAt13configurationAC10Foundation3URLV_So20MLModelConfigurationCtcfC_0(uint64_t a1, void *a2)
{
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v2 = sub_260FE2F90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  char v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260D905B0(0, &qword_26A8EAA30);
  uint64_t v7 = sub_260FE3E70();
  MEMORY[0x270FA5388](v7 - 8, v8);
  sub_260FE3E60();
  uint64_t v9 = sub_260FE48E0();
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v20 = MEMORY[0x263F8EE78];
  sub_260F64EE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAA40);
  sub_260D90340(&qword_26A8EAA48, &qword_26A8EAA40);
  sub_260FE4B70();
  uint64_t v11 = sub_260FE48F0();
  MEMORY[0x270FA5388](v11, v12);
  (*(void (**)(char *, void))(v14 + 104))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F8F128]);
  sub_260FE4920();
  uint64_t v15 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v18, v2);
  type metadata accessor for ManagedMLModel();
  swift_allocObject();
  uint64_t v16 = ManagedMLModel.init(modelAt:configuration:name:)(v6, v19, (uint64_t)"latent image encoder", 20, 2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
  return v16;
}

unint64_t sub_260F83818()
{
  unint64_t result = qword_26A8EADA8;
  if (!qword_26A8EADA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EADA8);
  }
  return result;
}

float sub_260F8386C(float a1, float a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  double v4 = a1;
  double v5 = a2;
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v3, v6);
  return (*(double (**)(uint64_t, uint64_t, double, double))(v7 + 8))(v6, v7, v4, v5);
}

void sub_260F838DC(uint64_t a1, uint64_t a2, float (*a3)(uint64_t, float, float))
{
  unint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a2 + 16);
  if (v6 >= v5) {
    int64_t v7 = *(void *)(a1 + 16);
  }
  else {
    int64_t v7 = *(void *)(a2 + 16);
  }
  uint64_t v33 = MEMORY[0x263F8EE78];
  sub_260F63828(0, v7, 0);
  int64_t v27 = v6;
  uint64_t v29 = a2;
  uint64_t v30 = a1;
  unint64_t v28 = v5;
  int64_t v26 = v7;
  if (v7)
  {
    unint64_t v8 = v5;
    uint64_t v9 = (float *)(a1 + 32);
    uint64_t v10 = (float *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_bridgeObjectRetain();
    unint64_t v12 = v6;
    unint64_t v13 = v8;
    while (v13)
    {
      if (!v12) {
        goto LABEL_26;
      }
      float v14 = a3(v11, *v9, *v10);
      unint64_t v16 = *(void *)(v33 + 16);
      unint64_t v15 = *(void *)(v33 + 24);
      if (v16 >= v15 >> 1) {
        uint64_t v11 = sub_260F63828(v15 > 1, v16 + 1, 1);
      }
      --v12;
      *(void *)(v33 + 16) = v16 + 1;
      *(float *)(v33 + 4 * v16 + 32) = v14;
      --v13;
      ++v10;
      ++v9;
      if (!--v7) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_bridgeObjectRetain();
LABEL_13:
    if (v28 <= v27)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v17 = 0;
    if (v26 <= v27) {
      int64_t v18 = v27;
    }
    else {
      int64_t v18 = v26;
    }
    int64_t v31 = v18 - v26;
    unint64_t v19 = v28 - v26;
    uint64_t v20 = 4 * v26 + 32;
    uint64_t v21 = v30 + v20;
    uint64_t v22 = v29 + v20;
    while (v19 != v17)
    {
      if (v27 - v26 == v17) {
        goto LABEL_24;
      }
      if (v31 == v17) {
        goto LABEL_28;
      }
      float v23 = a3(v11, *(float *)(v21 + 4 * v17), *(float *)(v22 + 4 * v17));
      unint64_t v25 = *(void *)(v33 + 16);
      unint64_t v24 = *(void *)(v33 + 24);
      if (v25 >= v24 >> 1) {
        uint64_t v11 = sub_260F63828(v24 > 1, v25 + 1, 1);
      }
      *(void *)(v33 + 16) = v25 + 1;
      *(float *)(v33 + 4 * v25 + 32) = v23;
      if (v19 == ++v17) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t sub_260F83B20(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
  sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
  id v2 = v1;
  sub_260FE4900();

  id v3 = objc_msgSend(v15, sel_multiArrayConstraint);
  if (!v3) {
    goto LABEL_17;
  }
  id v4 = objc_msgSend(v3, sel_shape);

  sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
  unint64_t v5 = sub_260FE4400();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_260FE4E40();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_14;
  }
LABEL_4:
  unint64_t v16 = (void *)MEMORY[0x263F8EE78];
  sub_260DB4728(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = 0;
    unint64_t v8 = v16;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x26122B4C0](v7, v5);
      }
      else {
        id v9 = *(id *)(v5 + 8 * v7 + 32);
      }
      uint64_t v10 = v9;
      id v11 = objc_msgSend(v9, sel_integerValue);

      unint64_t v13 = v16[2];
      unint64_t v12 = v16[3];
      if (v13 >= v12 >> 1) {
        sub_260DB4728(v12 > 1, v13 + 1, 1);
      }
      ++v7;
      v16[2] = v13 + 1;
      v16[v13 + 4] = v11;
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_260F83D98()
{
  unint64_t result = qword_26A8EADB0;
  if (!qword_26A8EADB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EADB0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Encoder(void *a1, void *a2)
{
  id v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  id v4 = v3;
  return a1;
}

void destroy for Encoder(uint64_t a1)
{
  swift_release();
  id v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for Encoder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  id v4 = (void *)a2[1];
  unint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for Encoder(uint64_t a1, _OWORD *a2)
{
  swift_release();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for Encoder()
{
  return &type metadata for Encoder;
}

unsigned char *storeEnumTagSinglePayload for Encoder.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F83FD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Encoder.Error()
{
  return &type metadata for Encoder.Error;
}

uint64_t sub_260F84010(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_260F88278(a1, (uint64_t)sub_260F73EF8, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

DiffusionBase::Unet __swiftcall Unet.init(chunksAt:configuration:)(Swift::OpaquePointer chunksAt, MLModelConfiguration configuration)
{
  v5[2] = configuration.super.isa;
  void v5[3] = &unk_270D227D8;
  uint64_t v3 = sub_260F6AE64((uint64_t)chunksAt._rawValue, (void (*)(void, char *))sub_260F6B2A4, (uint64_t)v5);

  swift_bridgeObjectRelease();
  return (DiffusionBase::Unet)v3;
}

uint64_t Unet.init(modelAt:configuration:)(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_260FE7020;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  type metadata accessor for ManagedMLModel();
  swift_allocObject();
  id v10 = a2;
  *(void *)(v9 + 32) = ManagedMLModel.init(modelAt:configuration:name:)(v8, v10, (uint64_t)"noise_predictor", 15, 2);
  uint64_t v13 = v9;
  sub_260FE4420();
  uint64_t v11 = v13;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v11;
}

uint64_t sub_260F8428C(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  void (*v58)(uint64_t *__return_ptr, uint64_t);
  uint64_t v59;
  void (**v60)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  uint64_t v4 = v3;
  id v58 = a1;
  uint64_t v59 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v57 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD20);
  uint64_t v15 = MEMORY[0x270FA5388](v56, v14);
  id v55 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15, v17);
  uint64_t v54 = (void *)((char *)v43 - v19);
  MEMORY[0x270FA5388](v18, v20);
  uint64_t v53 = (uint64_t)v43 - v21;
  uint64_t v63 = MEMORY[0x263F8EE78];
  sub_260F637B8(0, 0, 0);
  uint64_t v22 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  uint64_t v49 = v22;
  if (v22)
  {
    uint64_t v23 = 0;
    unint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v24 = v11 + 16;
    uint64_t v26 = *(unsigned __int8 *)(v24 + 64);
    v43[1] = a3;
    uint64_t v27 = a3 + ((v26 + 32) & ~v26);
    uint64_t v45 = *(void *)(v24 + 56);
    uint64_t v46 = v10;
    uint64_t v60 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 40);
    id v50 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 32);
    uint64_t v51 = v25;
    uint64_t v52 = v24;
    id v47 = v9;
    uint64_t v48 = (void (**)(char *, char *, uint64_t))(v24 + 16);
    while (1)
    {
      v51(v9, v27, v10);
      unint64_t v28 = *v60;
      (*v60)(v9, 0, 1, v10);
      if ((*v50)(v9, 1, v10) == 1) {
        break;
      }
      uint64_t v44 = v28;
      uint64_t v29 = *v48;
      id v61 = v4;
      uint64_t v30 = v57;
      v29(v57, v9, v10);
      uint64_t v31 = v56;
      char v32 = &v55[*(int *)(v56 + 48)];
      v29(v32, v30, v10);
      uint64_t v33 = *(int *)(v31 + 48);
      uint64_t v34 = (uint64_t)v54;
      uint64_t v35 = (char *)v54 + v33;
      *uint64_t v54 = v23;
      v29(v35, v32, v10);
      uint64_t v36 = v53;
      sub_260DD7C14(v34, v53, &qword_26A8EAD20);
      uint64_t v37 = v61;
      v58(&v62, v36);
      sub_260D90820(v36, &qword_26A8EAD20);
      if (v37)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
      uint64_t v38 = v62;
      uint64_t v39 = v63;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_260F637B8(0, *(void *)(v39 + 16) + 1, 1);
        uint64_t v39 = v63;
      }
      unint64_t v41 = *(void *)(v39 + 16);
      unint64_t v40 = *(void *)(v39 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_260F637B8(v40 > 1, v41 + 1, 1);
        uint64_t v39 = v63;
      }
      ++v23;
      *(void *)(v39 + 16) = v41 + 1;
      *(void *)(v39 + 8 * v41 + 32) = v38;
      uint64_t v10 = v46;
      v27 += v45;
      uint64_t v4 = 0;
      uint64_t v9 = v47;
      if (v49 == v23)
      {
        v44(v47, 1, 1, v46);
        break;
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  sub_260D90820((uint64_t)v9, &qword_26A8EAB90);
  swift_bridgeObjectRelease();
  return v63;
}

uint64_t sub_260F846D4(void (*a1)(uint64_t *__return_ptr, uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  void (*v51)(uint64_t *__return_ptr, uint64_t, uint64_t *);
  uint64_t v52;
  void (**v53)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  uint64_t v51 = a1;
  uint64_t v52 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  MEMORY[0x270FA5388](v4 - 8, v5);
  id v55 = (uint64_t)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  id v50 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD20);
  MEMORY[0x270FA5388](v49, v11);
  uint64_t v48 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v14);
  id v47 = (void *)((char *)v39 - v15);
  MEMORY[0x270FA5388](v16, v17);
  uint64_t v46 = (uint64_t)v39 - v18;
  id v58 = MEMORY[0x263F8EE78];
  sub_260FE4D30();
  uint64_t v19 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  uint64_t v43 = v19;
  if (v19)
  {
    uint64_t v20 = 0;
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    uint64_t v21 = v8 + 16;
    unint64_t v23 = (*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64);
    v39[1] = a3;
    uint64_t v24 = a3 + v23;
    uint64_t v25 = *(void *)(v21 + 56);
    uint64_t v53 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v44 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 32);
    uint64_t v45 = v22;
    uint64_t v41 = v25;
    uint64_t v42 = (void (**)(char *, uint64_t, uint64_t))(v21 + 16);
    while (1)
    {
      uint64_t v26 = v55;
      v45(v55, v24, v7);
      uint64_t v27 = *v53;
      (*v53)(v26, 0, 1, v7);
      if ((*v44)(v26, 1, v7) == 1) {
        break;
      }
      unint64_t v40 = v27;
      uint64_t v28 = v21;
      uint64_t v29 = *v42;
      uint64_t v30 = v50;
      (*v42)(v50, v55, v7);
      uint64_t v31 = v49;
      char v32 = &v48[*(int *)(v49 + 48)];
      v29(v32, (uint64_t)v30, v7);
      uint64_t v33 = v47;
      uint64_t v34 = (char *)v47 + *(int *)(v31 + 48);
      *id v47 = v20;
      v29(v34, (uint64_t)v32, v7);
      uint64_t v35 = (uint64_t)v33;
      uint64_t v36 = v46;
      sub_260DD7C14(v35, v46, &qword_26A8EAD20);
      uint64_t v37 = v54;
      v51(&v57, v36, &v56);
      sub_260D90820(v36, &qword_26A8EAD20);
      if (v37)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
      ++v20;
      sub_260FE4D00();
      uint64_t v54 = 0;
      sub_260FE4D40();
      sub_260FE4D50();
      sub_260FE4D10();
      v24 += v41;
      uint64_t v21 = v28;
      if (v43 == v20)
      {
        v40(v55, 1, 1, v7);
        break;
      }
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v55, 1, 1, v7);
  }
  sub_260D90820(v55, &qword_26A8EAB90);
  swift_bridgeObjectRelease();
  return v58;
}

unint64_t sub_260F84AD8(uint64_t a1)
{
  unint64_t result = (unint64_t)objc_msgSend(v1, sel_count);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x270FA5388](result, v4);
    id v6[2] = a1;
    v6[3] = v1;
    return (unint64_t)sub_260F5CAFC(sub_260F88AF4, (uint64_t)v6, 0, v5);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Unet.loadResources()()
{
  uint64_t v2 = v1;
  unint64_t v3 = v0;
  if (v0 >> 62) {
    goto LABEL_27;
  }
  uint64_t v4 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_260FE4E40())
  {
    uint64_t v32 = v4;
    unint64_t v33 = v3;
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      uint64_t v6 = &unk_26A8EA000;
      while (1)
      {
        uint64_t v7 = MEMORY[0x26122B4C0](v5, v3);
        uint64_t v8 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        uint64_t v9 = v7;
        if (v6[291] != -1) {
          swift_once();
        }
        uint64_t v10 = sub_260FE3A10();
        __swift_project_value_buffer(v10, (uint64_t)qword_26A90FC00);
        swift_retain_n();
        uint64_t v11 = sub_260FE39F0();
        os_log_type_t v12 = sub_260FE4880();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          uint64_t v14 = swift_slowAlloc();
          uint64_t v35 = v14;
          *(_DWORD *)uint64_t v13 = 136446210;
          uint64_t v15 = sub_260FE4C50();
          *(void *)(v13 + 4) = sub_260DB2844(v15, v16, &v35);
          swift_unknownObjectRelease_n();
          uint64_t v4 = v32;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_260D82000, v11, v12, "Loading resources for %{public}s", (uint8_t *)v13, 0xCu);
          swift_arrayDestroy();
          uint64_t v17 = v14;
          unint64_t v3 = v33;
          MEMORY[0x26122CA00](v17, -1, -1);
          uint64_t v18 = v13;
          uint64_t v6 = (void *)&unk_26A8EA000;
          MEMORY[0x26122CA00](v18, -1, -1);
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        id v19 = *(id *)(v9 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
        sub_260FE4900();
        swift_unknownObjectRelease();
        if (v2) {
          goto LABEL_24;
        }

        ++v5;
        if (v8 == v4) {
          goto LABEL_28;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v20 = 0;
      while (!__OFADD__(v20, 1))
      {
        uint64_t v34 = v20 + 1;
        uint64_t v21 = *(void *)(v3 + 8 * v20 + 32);
        uint64_t v22 = qword_26A8EA918;
        swift_retain();
        if (v22 != -1) {
          swift_once();
        }
        uint64_t v23 = sub_260FE3A10();
        __swift_project_value_buffer(v23, (uint64_t)qword_26A90FC00);
        swift_retain_n();
        uint64_t v24 = sub_260FE39F0();
        os_log_type_t v25 = sub_260FE4880();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = swift_slowAlloc();
          uint64_t v27 = swift_slowAlloc();
          uint64_t v35 = v27;
          *(_DWORD *)uint64_t v26 = 136446210;
          uint64_t v28 = sub_260FE4C50();
          *(void *)(v26 + 4) = sub_260DB2844(v28, v29, &v35);
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_260D82000, v24, v25, "Loading resources for %{public}s", (uint8_t *)v26, 0xCu);
          swift_arrayDestroy();
          uint64_t v30 = v27;
          unint64_t v3 = v33;
          MEMORY[0x26122CA00](v30, -1, -1);
          uint64_t v31 = v26;
          uint64_t v4 = v32;
          MEMORY[0x26122CA00](v31, -1, -1);
        }
        else
        {

          swift_release_n();
        }
        id v19 = *(id *)(v21 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
        sub_260FE4900();
        swift_release();
        if (v2)
        {
LABEL_24:
          swift_bridgeObjectRelease();

          return;
        }

        ++v20;
        if (v34 == v4) {
          goto LABEL_28;
        }
      }
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
  }
LABEL_28:
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall Unet.unloadResources()()
{
  unint64_t v1 = v0;
  if (v0 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_260FE4E40();
    if (!v2) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_10;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      MEMORY[0x26122B4C0](i, v1);
    }
    else {
      swift_retain();
    }
    ManagedMLModel.unloadResources()();
    swift_release();
  }
LABEL_10:
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Unet.prewarmResources()()
{
  unint64_t v1 = v0;
  if (v0 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_260FE4E40();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      do
      {
        uint64_t v4 = v3 - 4;
        if ((v1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x26122B4C0](v3 - 4, v1);
          BOOL v5 = __OFADD__(v4, 1);
          uint64_t v6 = v3 - 3;
          if (v5) {
            goto LABEL_14;
          }
        }
        else
        {
          swift_retain();
          BOOL v5 = __OFADD__(v4, 1);
          uint64_t v6 = v3 - 3;
          if (v5)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        ManagedMLModel.loadResources()();
        if (v7)
        {
          swift_release();
          break;
        }
        ManagedMLModel.unloadResources()();
        swift_release();
        ++v3;
      }
      while (v6 != v2);
    }
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_260F85220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v57 = a3;
  uint64_t v58 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACE0);
  uint64_t v61 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v52 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v15 = (char *)&v51 - v14;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v64 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62, v16);
  uint64_t v53 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18, v19);
  uint64_t v21 = (char *)&v51 - v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB40);
  uint64_t v22 = swift_allocObject();
  long long v59 = xmmword_260FE7060;
  *(_OWORD *)(v22 + 16) = xmmword_260FE7060;
  *(float *)(v22 + 32) = (float)a2;
  *(float *)(v22 + 36) = (float)a2;
  uint64_t v65 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
  sub_260D90340(&qword_26A8EABD0, &qword_26A8EABC8);
  uint64_t v63 = v21;
  sub_260FE3B30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACE8);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v59;
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_260FE4E40();
    if (v24) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
  *(_DWORD *)(v23 + 32) = a2;
  *(_DWORD *)(v23 + 36) = a2;
  uint64_t v65 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACF0);
  sub_260D90340(&qword_26A8EACF8, &qword_26A8EACF0);
  sub_260FE3B30();
  uint64_t v55 = a1;
  uint64_t v56 = v9;
  uint64_t v60 = v15;
  uint64_t v54 = v5;
  if (a5 >> 62) {
    goto LABEL_21;
  }
  uint64_t v24 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v24)
  {
LABEL_5:
    uint64_t v25 = 4;
    do
    {
      uint64_t v26 = v25 - 4;
      if ((a5 & 0xC000000000000001) != 0)
      {
        uint64_t v27 = MEMORY[0x26122B4C0](v25 - 4, a5);
        uint64_t v28 = v25 - 3;
        if (__OFADD__(v26, 1)) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v27 = *(void *)(a5 + 8 * v25);
        swift_retain();
        uint64_t v28 = v25 - 3;
        if (__OFADD__(v26, 1))
        {
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
      }
      unint64_t v29 = *(void **)(v27 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel);
      if (v29)
      {
        id v30 = objc_msgSend(v29, sel_modelDescription);
        id v31 = objc_msgSend(v30, sel_inputDescriptionsByName);

        sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
        uint64_t v32 = sub_260FE3EB0();

        if (*(void *)(v32 + 16))
        {
          sub_260DBACB4(0x746E6574616CLL, 0xE600000000000000);
          if (v33)
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            sub_260D905B0(0, &qword_26A8EABD8);
            uint64_t v34 = v56;
            (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v52, v60, v56);
            sub_260D90340(&qword_26A8EAD08, &qword_26A8EACE0);
            uint64_t v35 = sub_260FE4860();
            uint64_t v37 = (void *)v35;
            uint64_t v38 = v62;
            goto LABEL_23;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      ++v25;
    }
    while (v28 != v24);
  }
LABEL_22:
  swift_bridgeObjectRelease();
  sub_260D905B0(0, &qword_26A8EABD8);
  uint64_t v38 = v62;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v53, v63, v62);
  sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  uint64_t v35 = sub_260FE4860();
  uint64_t v37 = (void *)v35;
  uint64_t v34 = v56;
LABEL_23:
  MEMORY[0x270FA5388](v35, v36);
  *(&v51 - 4) = a5;
  *(&v51 - 3) = (uint64_t)v37;
  uint64_t v39 = v58;
  *(&v51 - 2) = v57;
  *(&v51 - 1) = v39;
  uint64_t v40 = v55;
  swift_bridgeObjectRetain();
  uint64_t v41 = v54;
  unint64_t v42 = sub_260F846D4((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *))sub_260F88B8C, (uint64_t)(&v51 - 6), v40);
  swift_bridgeObjectRelease();
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v34);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v38);

    return v38;
  }
  swift_bridgeObjectRetain();
  if (v42 >> 62)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
    sub_260FE4E30();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_260FE5220();
  }
  swift_bridgeObjectRelease();
  id v43 = objc_allocWithZone(MEMORY[0x263F00D10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
  uint64_t v44 = (void *)sub_260FE43F0();
  swift_bridgeObjectRelease();
  id v45 = objc_msgSend(v43, sel_initWithFeatureProviderArray_, v44);

  id v46 = v45;
  id v47 = (void *)sub_260F86C88((uint64_t)v46, a5);

  uint64_t result = (uint64_t)objc_msgSend(v47, sel_count);
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v49 = result;
    swift_unknownObjectRetain();
    sub_260F88788(0, v49, v47);
    uint64_t v38 = v50;

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v34);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v62);
    swift_unknownObjectRelease();
    return v38;
  }
  __break(1u);
  return result;
}

void Unet.latentSampleShape.getter(uint64_t a1)
{
}

Swift::Bool __swiftcall Unet.usePORParameters()()
{
  unint64_t v1 = v0;
  if (v0 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_260FE4E40();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      do
      {
        uint64_t v4 = v3 - 4;
        if ((v1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = MEMORY[0x26122B4C0](v3 - 4, v1);
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(v1 + 8 * v3);
          swift_retain();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        uint64_t v7 = *(void **)(v5 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel);
        if (v7)
        {
          id v8 = objc_msgSend(v7, sel_modelDescription);
          id v9 = objc_msgSend(v8, sel_inputDescriptionsByName);

          sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
          uint64_t v10 = sub_260FE3EB0();

          if (*(void *)(v10 + 16))
          {
            sub_260DBACB4(0x746E6574616CLL, 0xE600000000000000);
            if (v11)
            {
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              return 1;
            }
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
        ++v3;
      }
      while (v6 != v2);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_260F85BC0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = sub_260FE2F90();
  MEMORY[0x270FA5388](v8, v9);
  char v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 16))(v11, a2);
  if (*(void *)(a4 + 16) <= a1)
  {
    int v17 = 2;
    uint64_t v15 = "UnetChunk?";
    uint64_t v16 = 10;
    goto LABEL_5;
  }
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = a4 + 24 * a1;
    uint64_t v15 = *(const char **)(v14 + 32);
    uint64_t v16 = *(void *)(v14 + 40);
    int v17 = *(unsigned __int8 *)(v14 + 48);
LABEL_5:
    type metadata accessor for ManagedMLModel();
    swift_allocObject();
    return ManagedMLModel.init(modelAt:configuration:name:)(v11, a3, (uint64_t)v15, v16, v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_260F85D04(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  if (!sub_260FE4E40()) {
    goto LABEL_8;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_9:
    uint64_t v3 = MEMORY[0x26122B4C0](0, a1);
    goto LABEL_6;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    swift_retain();
LABEL_6:
    uint64_t v4 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v4, v5);
    uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
    MEMORY[0x270FA5388](v7, v8);
    sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
    id v9 = v6;
    sub_260FE4900();
    swift_release();

    return v11;
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_260F85ED0(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  if (!sub_260FE4E40()) {
    goto LABEL_8;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_9:
    uint64_t v3 = MEMORY[0x26122B4C0](0, a1);
    goto LABEL_6;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    swift_retain();
LABEL_6:
    uint64_t v4 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v4, v5);
    uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
    MEMORY[0x270FA5388](v7, v8);
    sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
    id v9 = v6;
    sub_260FE4900();
    swift_release();

    return v11;
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_260F8609C@<X0>(void *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X3>, void *a5@<X8>)
{
  id v9 = objc_msgSend(a1, sel_modelDescription);
  id v10 = objc_msgSend(v9, sel_inputDescriptionsByName);

  sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
  uint64_t v11 = sub_260FE3EB0();

  unint64_t v12 = sub_260F7EFEC(a3, a4, a2);
  if (*(void *)(v11 + 16) && (unint64_t v14 = sub_260DBACB4(v12, v13), (v15 & 1) != 0))
  {
    id v16 = *(id *)(*(void *)(v11 + 56) + 8 * v14);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *a5 = v16;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

void Unet.latentTimeIdShape.getter(uint64_t a1)
{
}

void sub_260F861D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2 = (void *)a2();
  id v3 = objc_msgSend(v2, sel_multiArrayConstraint);

  if (!v3) {
    goto LABEL_16;
  }
  id v4 = objc_msgSend(v3, sel_shape);

  sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
  unint64_t v5 = sub_260FE4400();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_260FE4E40();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_12;
  }
LABEL_4:
  uint64_t v13 = MEMORY[0x263F8EE78];
  sub_260DB4728(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x26122B4C0](i, v5);
      }
      else {
        id v8 = *(id *)(v5 + 8 * i + 32);
      }
      id v9 = v8;
      id v10 = objc_msgSend(v8, sel_integerValue);

      unint64_t v12 = *(void *)(v13 + 16);
      unint64_t v11 = *(void *)(v13 + 24);
      if (v12 >= v11 >> 1) {
        sub_260DB4728(v11 > 1, v12 + 1, 1);
      }
      *(void *)(v13 + 16) = v12 + 1;
      *(void *)(v13 + 8 * v12 + 32) = v10;
    }
    goto LABEL_12;
  }
  __break(1u);
LABEL_16:
  __break(1u);
}

uint64_t sub_260F863B0@<X0>(void (***a1)(char *, char *, id)@<X0>, unint64_t a2@<X1>, void *a3@<X2>, unint64_t a4@<X3>, int64_t a5@<X4>, void *a6@<X5>, uint64_t *a7@<X8>)
{
  id v83 = a6;
  int64_t v96 = a5;
  unint64_t v98 = a4;
  id v97 = a3;
  uint64_t v94 = (char *)a2;
  uint64_t v82 = a7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EADB8);
  MEMORY[0x270FA5388](v9 - 8, v10);
  unint64_t v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v14);
  uint64_t v95 = (uint64_t *)((char *)&v80 - v15);
  id v16 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v17 = *(v16 - 1);
  MEMORY[0x270FA5388](v16, v18);
  uint64_t v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD20);
  uint64_t v22 = v21 - 8;
  MEMORY[0x270FA5388](v21, v23);
  uint64_t v25 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE8090;
  id v97 = v97;
  *(void *)(inited + 32) = sub_260F7EFEC(0x656C706D6173uLL, (uint64_t *)0xE600000000000000, a2);
  *(void *)(inited + 40) = v27;
  uint64_t v28 = sub_260D905B0(0, &qword_26A8EABD8);
  uint64_t v29 = *(int *)(v22 + 56);
  id v91 = *a1;
  uint64_t v90 = v17;
  id v30 = *(void (**)(char *, uint64_t, id))(v17 + 16);
  v30(&v25[v29], (uint64_t)a1 + v29, v16);
  uint64_t v31 = sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  uint64_t v32 = sub_260FE4860();
  *(void *)(inited + 72) = v28;
  *(void *)(inited + 48) = v32;
  unint64_t v33 = (unint64_t)v94;
  *(void *)(inited + 80) = sub_260F7EFEC(0x70657473656D6974uLL, (uint64_t *)0xE800000000000000, (unint64_t)v94);
  *(void *)(inited + 88) = v34;
  *(void *)(inited + 120) = v28;
  *(void *)(inited + 96) = v97;
  *(void *)(inited + 128) = sub_260F7EFEC(0xD000000000000015, (uint64_t *)0x8000000261000F70, v33);
  *(void *)(inited + 136) = v35;
  uint64_t v88 = v17 + 16;
  uint64_t v87 = v30;
  v30(v20, v98, v16);
  uint64_t v94 = v20;
  id v97 = v16;
  uint64_t v92 = v31;
  uint64_t v36 = sub_260FE4860();
  uint64_t v93 = v28;
  *(void *)(inited + 168) = v28;
  *(void *)(inited + 144) = v36;
  unint64_t v37 = sub_260DAAF10(inited);
  if (v96)
  {
    if (((unint64_t)v91 & 0x8000000000000000) != 0)
    {
LABEL_47:
      __break(1u);
    }
    else if ((unint64_t)v91 < *(void *)(v96 + 16))
    {
      unint64_t v98 = v37;
      uint64_t v38 = *(void *)(v96 + 8 * (void)v91 + 32);
      uint64_t v39 = *(void *)(v38 + 64);
      uint64_t v85 = v38 + 64;
      uint64_t v40 = 1 << *(unsigned char *)(v38 + 32);
      uint64_t v41 = -1;
      if (v40 < 64) {
        uint64_t v41 = ~(-1 << v40);
      }
      unint64_t v42 = v41 & v39;
      id v91 = (void (**)(char *, char *, id))(v90 + 32);
      int64_t v86 = (unint64_t)(v40 + 63) >> 6;
      int64_t v81 = v86 - 1;
      uint64_t v89 = v38;
      swift_bridgeObjectRetain();
      int64_t v96 = 0;
      while (1)
      {
        uint64_t v44 = v95;
        if (v42) {
          break;
        }
        int64_t v52 = v96 + 1;
        if (__OFADD__(v96, 1)) {
          goto LABEL_46;
        }
        if (v52 < v86)
        {
          unint64_t v53 = *(void *)(v85 + 8 * v52);
          if (v53) {
            goto LABEL_15;
          }
          int64_t v54 = v96 + 2;
          ++v96;
          if (v52 + 1 < v86)
          {
            unint64_t v53 = *(void *)(v85 + 8 * v54);
            if (v53) {
              goto LABEL_18;
            }
            int64_t v96 = v52 + 1;
            if (v52 + 2 < v86)
            {
              unint64_t v53 = *(void *)(v85 + 8 * (v52 + 2));
              if (v53)
              {
                v52 += 2;
                goto LABEL_15;
              }
              int64_t v54 = v52 + 3;
              int64_t v96 = v52 + 2;
              if (v52 + 3 < v86)
              {
                unint64_t v53 = *(void *)(v85 + 8 * v54);
                if (!v53)
                {
                  while (1)
                  {
                    int64_t v52 = v54 + 1;
                    if (__OFADD__(v54, 1)) {
                      goto LABEL_49;
                    }
                    if (v52 >= v86)
                    {
                      int64_t v96 = v81;
                      goto LABEL_29;
                    }
                    unint64_t v53 = *(void *)(v85 + 8 * v52);
                    ++v54;
                    if (v53) {
                      goto LABEL_15;
                    }
                  }
                }
LABEL_18:
                int64_t v52 = v54;
LABEL_15:
                unint64_t v42 = (v53 - 1) & v53;
                unint64_t v46 = __clz(__rbit64(v53)) + (v52 << 6);
                int64_t v96 = v52;
LABEL_11:
                uint64_t v47 = *(void *)(v89 + 56);
                uint64_t v48 = (void *)(*(void *)(v89 + 48) + 16 * v46);
                uint64_t v49 = v48[1];
                *(void *)unint64_t v12 = *v48;
                *((void *)v12 + 1) = v49;
                uint64_t v50 = v47 + *(void *)(v90 + 72) * v46;
                uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EADC0);
                v87(&v12[*(int *)(v51 + 48)], v50, v97);
                (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v12, 0, 1, v51);
                swift_bridgeObjectRetain();
                goto LABEL_30;
              }
            }
          }
        }
LABEL_29:
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EADC0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v12, 1, 1, v55);
        unint64_t v42 = 0;
LABEL_30:
        sub_260DD7C14((uint64_t)v12, (uint64_t)v44, &qword_26A8EADB8);
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EADC0);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v44, 1, v56) == 1)
        {
          swift_release();
          goto LABEL_41;
        }
        uint64_t v57 = v12;
        uint64_t v59 = *v44;
        uint64_t v58 = v44[1];
        (*v91)(v94, (char *)v44 + *(int *)(v56 + 48), v97);
        uint64_t v60 = v93;
        uint64_t v61 = sub_260FE4860();
        uint64_t v101 = v60;
        *(void *)&long long v100 = v61;
        sub_260D906FC(&v100, v99);
        uint64_t v62 = (void *)v98;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v102 = v62;
        unint64_t v65 = sub_260DBACB4(v59, v58);
        uint64_t v66 = v62[2];
        BOOL v67 = (v64 & 1) == 0;
        uint64_t v68 = v66 + v67;
        if (__OFADD__(v66, v67))
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        char v69 = v64;
        if (v62[3] >= v68)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_260DC2B28();
          }
        }
        else
        {
          sub_260DBF760(v68, isUniquelyReferenced_nonNull_native);
          unint64_t v70 = sub_260DBACB4(v59, v58);
          if ((v69 & 1) != (v71 & 1)) {
            goto LABEL_50;
          }
          unint64_t v65 = v70;
        }
        unint64_t v12 = v57;
        uint64_t v72 = v102;
        unint64_t v98 = (unint64_t)v102;
        if (v69)
        {
          id v43 = (_OWORD *)(v102[7] + 32 * v65);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
          sub_260D906FC(v99, v43);
        }
        else
        {
          v102[(v65 >> 6) + 8] |= 1 << v65;
          id v73 = (uint64_t *)(v72[6] + 16 * v65);
          uint64_t *v73 = v59;
          v73[1] = v58;
          sub_260D906FC(v99, (_OWORD *)(v72[7] + 32 * v65));
          uint64_t v74 = v72[2];
          BOOL v75 = __OFADD__(v74, 1);
          uint64_t v76 = v74 + 1;
          if (v75) {
            goto LABEL_45;
          }
          v72[2] = v76;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      unint64_t v45 = __clz(__rbit64(v42));
      v42 &= v42 - 1;
      unint64_t v46 = v45 | (v96 << 6);
      goto LABEL_11;
    }
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    uint64_t result = sub_260FE5280();
    __break(1u);
  }
  else
  {
LABEL_41:
    id v77 = objc_allocWithZone(MEMORY[0x263F00D38]);
    uint64_t v78 = v84;
    uint64_t result = (uint64_t)sub_260FBB9C8();
    if (v78) {
      void *v83 = v78;
    }
    else {
      uint64_t *v82 = result;
    }
  }
  return result;
}

uint64_t sub_260F86C88(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a2;
  uint64_t v5 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_36;
  }
  uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_37;
  }
LABEL_3:
  uint64_t v39 = v6;
  uint64_t v38 = v5;
  unint64_t v37 = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0)
  {
    while (1)
    {
      uint64_t v8 = MEMORY[0x26122B4C0](0, v4);
LABEL_6:
      uint64_t v9 = swift_bridgeObjectRelease();
      MEMORY[0x270FA5388](v9, v10);
      MEMORY[0x270FA5388](v11, v12);
      id v14 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD18);
      sub_260FE4900();
      swift_release();

      if (v3) {
        return v8;
      }
      uint64_t v8 = v40;
      if (v38)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_260FE4E40();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v15 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      int64_t v16 = v39;
      if (v15 == 1) {
        return v8;
      }
      uint64_t ObjectType = swift_getObjectType();
      uint64_t result = sub_260F84AD8(ObjectType);
      if (v39 < 0) {
        goto LABEL_42;
      }
      if (v38)
      {
        swift_bridgeObjectRetain();
        uint64_t result = sub_260FE4E40();
        if (result < 1) {
          goto LABEL_40;
        }
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_260FE4E40();
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (!v5) {
          goto LABEL_40;
        }
      }
      if (v5 < v39) {
        goto LABEL_41;
      }
      if (v37 && v39 != 1)
      {
        uint64_t v5 = type metadata accessor for ManagedMLModel();
        uint64_t v18 = 1;
        do
        {
          uint64_t v19 = v18 + 1;
          sub_260FE4C60();
          uint64_t v18 = v19;
        }
        while (v39 != v19);
      }
      if (v38)
      {
        swift_bridgeObjectRetain();
        unint64_t v37 = sub_260FE4E50();
        uint64_t v38 = v21;
        uint64_t v20 = v22;
        uint64_t v5 = v23;
        swift_bridgeObjectRelease_n();
        int64_t v16 = (unint64_t)v5 >> 1;
        if (v20 == (unint64_t)v5 >> 1)
        {
LABEL_26:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return v8;
        }
      }
      else
      {
        unint64_t v37 = v4 & 0xFFFFFFFFFFFFFF8;
        uint64_t v38 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
        uint64_t v20 = 1;
        if (v39 == 1) {
          goto LABEL_26;
        }
      }
      uint64_t v39 = v16;
      while (v20 < v16)
      {
        unint64_t v4 = *(void *)(v38 + 8 * v20);
        uint64_t v24 = swift_getObjectType();
        swift_retain();
        swift_unknownObjectRetain();
        unint64_t v25 = sub_260F84AD8(v24);
        uint64_t v26 = swift_unknownObjectRelease();
        MEMORY[0x270FA5388](v26, v27);
        unint64_t v28 = sub_260F88980(v25, (void (*)(uint64_t, uint64_t))sub_260F88AD8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        if (v28 >> 62)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
          sub_260FE4E30();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_260FE5220();
        }
        swift_bridgeObjectRelease();
        id v29 = objc_allocWithZone(MEMORY[0x263F00D10]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
        id v30 = (void *)sub_260FE43F0();
        swift_bridgeObjectRelease();
        id v31 = objc_msgSend(v29, sel_initWithFeatureProviderArray_, v30);

        MEMORY[0x270FA5388](v32, v33);
        MEMORY[0x270FA5388](v34, v35);
        uint64_t v5 = (uint64_t)v36;
        sub_260FE4900();
        ++v20;

        swift_unknownObjectRelease();
        swift_release();

        uint64_t v8 = v40;
        int64_t v16 = v39;
        if (v39 == v20) {
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_36:
      swift_bridgeObjectRetain();
      uint64_t result = sub_260FE4E40();
      uint64_t v6 = result;
      if (result) {
        goto LABEL_3;
      }
LABEL_37:
      swift_bridgeObjectRelease();
      __break(1u);
    }
  }
  else
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v8 = *(void *)(v4 + 32);
      swift_retain();
      goto LABEL_6;
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
  }
  return result;
}

uint64_t sub_260F87280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  uint64_t v58 = a3;
  uint64_t v61 = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACE0);
  uint64_t v64 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v10);
  int64_t v54 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v15 = (char *)&v53 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v65 = v16;
  uint64_t v66 = v17;
  MEMORY[0x270FA5388](v16, v18);
  uint64_t v55 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20, v21);
  uint64_t v23 = (char *)&v53 - v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB40);
  uint64_t v24 = swift_allocObject();
  long long v63 = xmmword_260FE7060;
  *(_OWORD *)(v24 + 16) = xmmword_260FE7060;
  *(float *)(v24 + 32) = (float)a2;
  *(float *)(v24 + 36) = (float)a2;
  uint64_t v67 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
  sub_260D90340(&qword_26A8EABD0, &qword_26A8EABC8);
  uint64_t v62 = v23;
  sub_260FE3B30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACE8);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v63;
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_260FE4E40();
    *(void *)&long long v63 = v15;
    if (v26) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
  *(_DWORD *)(v25 + 32) = a2;
  *(_DWORD *)(v25 + 36) = a2;
  uint64_t v67 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACF0);
  sub_260D90340(&qword_26A8EACF8, &qword_26A8EACF0);
  sub_260FE3B30();
  uint64_t v56 = v6;
  uint64_t v57 = v9;
  if (a6 >> 62) {
    goto LABEL_21;
  }
  uint64_t v26 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  *(void *)&long long v63 = v15;
  if (v26)
  {
LABEL_5:
    uint64_t v27 = 4;
    do
    {
      uint64_t v28 = v27 - 4;
      if ((a6 & 0xC000000000000001) != 0)
      {
        uint64_t v29 = MEMORY[0x26122B4C0](v27 - 4, a6);
        uint64_t v15 = (char *)(v27 - 3);
        if (__OFADD__(v28, 1)) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v29 = *(void *)(a6 + 8 * v27);
        swift_retain();
        uint64_t v15 = (char *)(v27 - 3);
        if (__OFADD__(v28, 1))
        {
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
      }
      id v30 = *(void **)(v29 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel);
      if (v30)
      {
        id v31 = objc_msgSend(v30, sel_modelDescription);
        id v32 = objc_msgSend(v31, sel_inputDescriptionsByName);

        sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
        uint64_t v33 = sub_260FE3EB0();

        if (*(void *)(v33 + 16))
        {
          sub_260DBACB4(0x746E6574616CLL, 0xE600000000000000);
          if (v34)
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            sub_260D905B0(0, &qword_26A8EABD8);
            uint64_t v35 = v57;
            (*(void (**)(char *, void, uint64_t))(v64 + 16))(v54, v63, v57);
            sub_260D90340(&qword_26A8EAD08, &qword_26A8EACE0);
            uint64_t v36 = sub_260FE4860();
            uint64_t v38 = (void *)v36;
            uint64_t v39 = v65;
            uint64_t v40 = v62;
            goto LABEL_23;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      ++v27;
    }
    while (v15 != (char *)v26);
  }
LABEL_22:
  swift_bridgeObjectRelease();
  sub_260D905B0(0, &qword_26A8EABD8);
  uint64_t v39 = v65;
  uint64_t v40 = v62;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v55, v62, v65);
  sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  uint64_t v36 = sub_260FE4860();
  uint64_t v38 = (void *)v36;
  uint64_t v35 = v57;
LABEL_23:
  MEMORY[0x270FA5388](v36, v37);
  *(&v53 - 6) = a6;
  *(&v53 - 5) = (uint64_t)v38;
  uint64_t v41 = v59;
  *(&v53 - 4) = v58;
  *(&v53 - 3) = v41;
  uint64_t v42 = v61;
  *(&v53 - 2) = v60;
  swift_bridgeObjectRetain();
  uint64_t v43 = v56;
  unint64_t v44 = sub_260F846D4((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *))sub_260F88AB0, (uint64_t)(&v53 - 8), v42);
  swift_bridgeObjectRelease();
  if (v43)
  {
    (*(void (**)(void, uint64_t))(v64 + 8))(v63, v35);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v39);

    return v39;
  }
  swift_bridgeObjectRetain();
  if (v44 >> 62)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
    sub_260FE4E30();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_260FE5220();
  }
  swift_bridgeObjectRelease();
  id v45 = objc_allocWithZone(MEMORY[0x263F00D10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
  unint64_t v46 = (void *)sub_260FE43F0();
  swift_bridgeObjectRelease();
  id v47 = objc_msgSend(v45, sel_initWithFeatureProviderArray_, v46);

  id v48 = v47;
  uint64_t v49 = (void *)sub_260F86C88((uint64_t)v48, a6);

  uint64_t result = (uint64_t)objc_msgSend(v49, sel_count);
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v51 = result;
    swift_unknownObjectRetain();
    sub_260F88788(0, v51, v49);
    uint64_t v39 = v52;

    swift_unknownObjectRelease();
    (*(void (**)(void, uint64_t))(v64 + 8))(v63, v35);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v65);
    swift_unknownObjectRelease();
    return v39;
  }
  __break(1u);
  return result;
}

id sub_260F87A64@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, void *a7@<X6>, void *a8@<X8>)
{
  uint64_t v39 = a7;
  uint64_t v44 = a5;
  id v45 = a6;
  uint64_t v42 = a1;
  uint64_t v43 = a4;
  unint64_t v40 = a2;
  uint64_t v38 = a8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD20);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15, v17);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE80A0;
  id v41 = a3;
  *(void *)(inited + 32) = sub_260F7EFEC(0x656C706D6173uLL, (uint64_t *)0xE600000000000000, a2);
  *(void *)(inited + 40) = v21;
  uint64_t v22 = sub_260D905B0(0, &qword_26A8EABD8);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v23(&v19[*(int *)(v16 + 56)], v42 + *(int *)(v16 + 56), v10);
  sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  uint64_t v24 = sub_260FE4860();
  *(void *)(inited + 72) = v22;
  *(void *)(inited + 48) = v24;
  unint64_t v25 = v40;
  *(void *)(inited + 80) = sub_260F7EFEC(0x70657473656D6974uLL, (uint64_t *)0xE800000000000000, v40);
  *(void *)(inited + 88) = v26;
  *(void *)(inited + 120) = v22;
  *(void *)(inited + 96) = v41;
  *(void *)(inited + 128) = sub_260F7EFEC(0xD000000000000015, (uint64_t *)0x8000000261000F70, v25);
  *(void *)(inited + 136) = v27;
  v23(v14, v43, v10);
  uint64_t v28 = sub_260FE4860();
  *(void *)(inited + 168) = v22;
  *(void *)(inited + 144) = v28;
  *(void *)(inited + 176) = sub_260F7EFEC(0x626D655F74786574uLL, (uint64_t *)0xEB00000000736465, v25);
  *(void *)(inited + 184) = v29;
  v23(v14, v44, v10);
  uint64_t v30 = sub_260FE4860();
  *(void *)(inited + 216) = v22;
  *(void *)(inited + 192) = v30;
  *(void *)(inited + 224) = sub_260F7EFEC(0x7364695F656D6974uLL, (uint64_t *)0xE800000000000000, v25);
  *(void *)(inited + 232) = v31;
  *(void *)(inited + 264) = v22;
  id v32 = v45;
  *(void *)(inited + 240) = v45;
  id v33 = v32;
  sub_260DAAF10(inited);
  id v34 = objc_allocWithZone(MEMORY[0x263F00D38]);
  uint64_t v35 = v46;
  id result = sub_260FBB9C8();
  if (v35) {
    *uint64_t v39 = v35;
  }
  else {
    *uint64_t v38 = result;
  }
  return result;
}

unint64_t sub_260F87DB8(unint64_t result, uint64_t a2, uint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > result)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_260F84010(v4, a2);
    sub_260FB9C74(v5);
    swift_bridgeObjectRelease();
    id v6 = objc_allocWithZone(MEMORY[0x263F00D38]);
    return (unint64_t)sub_260FBB9C8();
  }
  __break(1u);
  return result;
}

void sub_260F87E50()
{
}

void sub_260F87E6C()
{
}

BOOL sub_260F87E74()
{
  return Unet.usePORParameters()();
}

uint64_t sub_260F87E7C(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_featureNames);
  uint64_t v4 = sub_260FE46E0();

  v7[2] = a1;
  uint64_t v8 = v1;
  uint64_t v5 = sub_260F88044(MEMORY[0x263F8EE80], sub_260F88B14, (uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  return v5;
}

void sub_260F87F24(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_260FE4070();
  id v8 = objc_msgSend(a3, sel_featureValueForName_, v7);

  if (v8)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *a1;
    *a1 = 0x8000000000000000;
    sub_260FC695C((uint64_t)v8, v6, v5, isUniquelyReferenced_nonNull_native);
    *a1 = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = (void *)sub_260F885B0(v6, v5, (void (*)(unint64_t, uint64_t))sub_260FC5708, (void (*)(void))sub_260FC48D8);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_260F88044(uint64_t a1, void (*a2)(uint64_t *, void *), uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a1;
  uint64_t v7 = a4 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a4 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    uint64_t v19 = (void *)(*(void *)(a4 + 48) + 16 * i);
    uint64_t v20 = v19[1];
    v21[0] = *v19;
    v21[1] = v20;
    swift_bridgeObjectRetain();
    a2(&v22, v21);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    if (!v17) {
      break;
    }
LABEL_17:
    unint64_t v10 = (v17 - 1) & v17;
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_26:
    swift_release();
    return v22;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_16:
    int64_t v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_260F8820C@<X0>(id a1@<X1>, void *a2@<X0>, uint64_t *a3@<X8>)
{
  id v4 = objc_msgSend(a1, sel_featuresAtIndex_, *a2);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = sub_260F87E7C(ObjectType);
  uint64_t result = swift_unknownObjectRelease();
  *a3 = v6;
  return result;
}

uint64_t sub_260F88278(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  uint64_t v8 = sub_260FAB5E0(v7);
  if (!v9) {
    goto LABEL_23;
  }
  uint64_t v11 = v8;
  uint64_t v12 = v9;
  uint64_t v53 = v10;
  int64_t v13 = (void *)*a5;
  unint64_t v15 = sub_260DBACB4(v8, v9);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      uint64_t v21 = (void *)*a5;
      if (v14) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v18 = (uint64_t)sub_260FC48D8();
      uint64_t v21 = (void *)*a5;
      if (v19) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v21[(v15 >> 6) + 8] |= 1 << v15;
    unint64_t v25 = (uint64_t *)(v21[6] + 16 * v15);
    *unint64_t v25 = v11;
    v25[1] = v12;
    *(void *)(v21[7] + 8 * v15) = v53;
    uint64_t v26 = v21[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    void v21[2] = v28;
LABEL_13:
    uint64_t v29 = sub_260FAB5E0(v18);
    if (v30)
    {
      uint64_t v32 = v29;
      uint64_t v33 = v30;
      id v34 = v31;
      do
      {
        id v41 = (void *)*a5;
        unint64_t v38 = sub_260DBACB4(v32, v33);
        uint64_t v43 = v41[2];
        BOOL v44 = (v42 & 1) == 0;
        BOOL v27 = __OFADD__(v43, v44);
        uint64_t v45 = v43 + v44;
        if (v27) {
          goto LABEL_24;
        }
        char v46 = v42;
        if (v41[3] < v45)
        {
          sub_260FC10B4(v45, 1);
          unint64_t v38 = sub_260DBACB4(v32, v33);
          if ((v46 & 1) != (v47 & 1)) {
            goto LABEL_26;
          }
        }
        id v48 = (void *)*a5;
        if (v46)
        {
          uint64_t v35 = 8 * v38;
          id v36 = *(id *)(v48[7] + 8 * v38);
          swift_bridgeObjectRelease();

          uint64_t v37 = v48[7];
          *(void *)(v37 + v35) = v36;
        }
        else
        {
          v48[(v38 >> 6) + 8] |= 1 << v38;
          uint64_t v49 = (uint64_t *)(v48[6] + 16 * v38);
          uint64_t *v49 = v32;
          v49[1] = v33;
          *(void *)(v48[7] + 8 * v38) = v34;
          uint64_t v50 = v48[2];
          BOOL v27 = __OFADD__(v50, 1);
          uint64_t v51 = v50 + 1;
          if (v27) {
            goto LABEL_25;
          }
          v48[2] = v51;
        }
        uint64_t v32 = sub_260FAB5E0(v38);
        uint64_t v33 = v39;
        id v34 = v40;
      }
      while (v39);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_260DD782C();
    return swift_release();
  }
  sub_260FC10B4(v18, a4 & 1);
  uint64_t v18 = sub_260DBACB4(v11, v12);
  if ((v19 & 1) == (v20 & 1))
  {
    unint64_t v15 = v18;
    uint64_t v21 = (void *)*a5;
    if ((v19 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v22 = 8 * v15;
    id v23 = *(id *)(v21[7] + 8 * v15);
    swift_bridgeObjectRelease();

    uint64_t v24 = v21[7];
    *(void *)(v24 + v22) = v23;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_260FE5280();
  __break(1u);
  return result;
}

uint64_t sub_260F88584(uint64_t a1, uint64_t a2)
{
  return sub_260F885B0(a1, a2, (void (*)(unint64_t, uint64_t))sub_260FC5708, (void (*)(void))sub_260FC470C);
}

uint64_t sub_260F885B0(uint64_t a1, uint64_t a2, void (*a3)(unint64_t, uint64_t), void (*a4)(void))
{
  uint64_t v7 = v4;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_260DBACB4(a1, a2);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v7;
  uint64_t v16 = *v7;
  *uint64_t v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4();
    uint64_t v13 = v16;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(*(void *)(v13 + 56) + 8 * v10);
  a3(v10, v13);
  *uint64_t v7 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_260F88698@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_260DBB4C8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    v11[0] = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_260FC519C();
      uint64_t v9 = v11[0];
    }
    memmove(a2, (const void *)(*(void *)(v9 + 56) + 192 * v6), 0xC0uLL);
    sub_260FC5E70(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
    return nullsub_1(a2);
  }
  else
  {
    sub_260F32AFC((uint64_t)v11);
    return sub_260DD7C14((uint64_t)v11, (uint64_t)a2, &qword_26A8EA0B8);
  }
}

void sub_260F88788(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  id v19 = a3;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18, v8);
  unint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  uint64_t v11 = a2 - a1;
  if (__OFSUB__(a2, a1)) {
    goto LABEL_20;
  }
  if (v11)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_260F63738(0, v11 & ~(v11 >> 63), 0);
    if (v11 < 0)
    {
LABEL_21:
      __break(1u);
      return;
    }
    uint64_t v12 = v22;
    v17[1] = v7 + 32;
    uint64_t v13 = v20;
    if (a2 <= v20) {
      uint64_t v14 = v20;
    }
    else {
      uint64_t v14 = a2;
    }
    while (a2 != v13)
    {
      uint64_t v21 = v13;
      sub_260F72FB4(&v21, v19);
      if (v4)
      {
        swift_release();
        return;
      }
      uint64_t v4 = 0;
      uint64_t v22 = v12;
      unint64_t v16 = *(void *)(v12 + 16);
      unint64_t v15 = *(void *)(v12 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_260F63738(v15 > 1, v16 + 1, 1);
        uint64_t v12 = v22;
      }
      *(void *)(v12 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v16, v10, v18);
      if (a2 < v20) {
        goto LABEL_18;
      }
      if (v14 == v13) {
        goto LABEL_19;
      }
      if (a2 == ++v13) {
        return;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
}

uint64_t sub_260F88980(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v9 = MEMORY[0x263F8EE78];
  sub_260FE4D30();
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
      swift_bridgeObjectRetain();
      a2(v6, v7);
      if (v2) {
        break;
      }
      swift_bridgeObjectRelease();
      ++v6;
      sub_260FE4D00();
      sub_260FE4D40();
      sub_260FE4D50();
      sub_260FE4D10();
      if (v5 == v6) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return v9;
  }
}

ValueMetadata *type metadata accessor for Unet()
{
  return &type metadata for Unet;
}

id sub_260F88AB0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_260F87A64(a1, *(void *)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void **)(v3 + 48), a2, a3);
}

unint64_t sub_260F88AD8(unint64_t a1, uint64_t a2)
{
  return sub_260F87DB8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_260F88AF4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_260F8820C(*(id *)(v2 + 24), a1, a2);
}

void sub_260F88B14(uint64_t *a1, uint64_t *a2)
{
  sub_260F87F24(a1, a2, *(void **)(v2 + 24));
}

uint64_t sub_260F88B30@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_260F8609C(a1, *(void *)(v2 + 16), 0x7364695F656D6974uLL, (uint64_t *)0xE800000000000000, a2);
}

uint64_t sub_260F88B60@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_260F8609C(a1, *(void *)(v2 + 16), 0x656C706D6173uLL, (uint64_t *)0xE600000000000000, a2);
}

uint64_t sub_260F88B8C@<X0>(void (***a1)(char *, char *, id)@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_260F863B0(a1, *(void *)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), a2, a3);
}

Swift::Bool __swiftcall AppleDiffusionPipeline.supportsAdapters()()
{
  return *(unsigned char *)(v0 + 1);
}

uint64_t AppleDiffusionPipeline.adaptedPiplineCopy(adapter:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v6 = type metadata accessor for AppleDiffusionUnet();
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = (int *)type metadata accessor for AppleDiffusionPipeline(0);
  uint64_t result = AppleDiffusionUnet.adaptedCopy(adapter:)(a1, (uint64_t)v9);
  if (!v3)
  {
    uint64_t v12 = v2 + v10[6];
    uint64_t v13 = *(void **)v12;
    uint64_t v14 = *(void **)(v12 + 8);
    unint64_t v15 = (uint64_t *)(v2 + v10[7]);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v30 = v17;
    uint64_t v27 = v16;
    uint64_t v18 = v2 + v10[8];
    uint64_t v32 = *(void *)(v18 + 64);
    long long v19 = *(_OWORD *)(v18 + 48);
    v31[2] = *(_OWORD *)(v18 + 32);
    v31[3] = v19;
    long long v20 = *(_OWORD *)(v18 + 16);
    v31[0] = *(_OWORD *)v18;
    v31[1] = v20;
    uint64_t v21 = v10[10];
    uint64_t v22 = (unint64_t *)(v2 + v10[9]);
    unint64_t v23 = *v22;
    unint64_t v33 = v22[1];
    unint64_t v24 = v22[2];
    int v28 = *(unsigned __int8 *)(v2 + v21);
    a2[3] = (uint64_t)v10;
    a2[4] = (uint64_t)&protocol witness table for AppleDiffusionPipeline;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(a2);
    sub_260F6449C(v13, v14);
    uint64_t v25 = v27;
    swift_retain();
    uint64_t v26 = v30;
    swift_retain();
    sub_260F644DC((uint64_t)v31);
    swift_retain();
    swift_bridgeObjectRetain();
    return AppleDiffusionPipeline.init(unet:encoder:decoder:sketchConditioner:imageConditioner:reduceMemory:)((uint64_t)v9, v13, v14, v26, v25, (uint64_t)v31, v23, v33, boxed_opaque_existential_1Tm, v24, v28);
  }
  return result;
}

uint64_t sub_260F88D80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return AppleDiffusionPipeline.adaptedPiplineCopy(adapter:)(a1, a2);
}

uint64_t sub_260F88D98()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t _s13DiffusionBase05AppleA8PipelineV16supportsAdaptersSbyFZ_0(uint64_t a1, uint64_t a2)
{
  if (qword_26A8EA938 != -1) {
    a1 = swift_once();
  }
  uint64_t v2 = (os_unfair_lock_s *)qword_26A8EB3E0;
  MEMORY[0x270FA5388](a1, a2);
  swift_retain();
  os_unfair_lock_lock(v2 + 6);
  sub_260F7EF6C((uint64_t *)&v21);
  os_unfair_lock_unlock(v2 + 6);
  uint64_t v3 = v21;
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC13DiffusionBase29AppleDiffusionResourceFactory_modelDescription);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v4 + 16) || (uint64_t v5 = sub_260DBB4C8(0), (v6 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v7 = *(void **)(*(void *)(v4 + 56) + 8 * v5);
  id v8 = v7;
  swift_bridgeObjectRelease();
  if (!v8)
  {
LABEL_10:
    uint64_t v7 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
LABEL_11:
    sub_260EA8980((uint64_t)&v21);
    uint64_t v14 = 0;
    goto LABEL_12;
  }
  id v9 = objc_msgSend(v8, sel_metadata);
  type metadata accessor for MLModelMetadataKey(0);
  sub_260F89264();
  uint64_t v10 = sub_260FE3EB0();

  if (*(void *)(v10 + 16))
  {
    id v11 = (id)*MEMORY[0x263F00CF0];
    unint64_t v12 = sub_260F80CD8((uint64_t)v11);
    if (v13)
    {
      sub_260D90650(*(void *)(v10 + 56) + 32 * v12, (uint64_t)&v21);
    }
    else
    {
      long long v21 = 0u;
      long long v22 = 0u;
    }
  }
  else
  {
    long long v21 = 0u;
    long long v22 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v22 + 1)) {
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E8B48);
  if (swift_dynamicCast()) {
    uint64_t v14 = v20[0];
  }
  else {
    uint64_t v14 = 0;
  }
LABEL_12:
  sub_260FA5674(v14, &v21);
  swift_bridgeObjectRelease();
  sub_260F89118((uint64_t)&v21, (uint64_t)v19);
  sub_260F89118((uint64_t)v19, (uint64_t)v20);
  if (sub_260F32AD8((uint64_t)v20) == 1)
  {

    sub_260F89180((uint64_t *)&v21);
LABEL_18:
    char v16 = 0;
    return v16 & 1;
  }
  sub_260F89118((uint64_t)v19, (uint64_t)v18);
  sub_260F32B24(v18);
  sub_260F89180((uint64_t *)&v21);
  unint64_t v15 = (void *)v20[16];
  swift_bridgeObjectRetain();
  sub_260F891F8(v19);
  if (!v15)
  {

    goto LABEL_18;
  }
  char v16 = sub_260F5B4B0(1634889580, 0xE400000000000000, v15);
  swift_bridgeObjectRelease();

  return v16 & 1;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x26122CA00);
  }
  return result;
}

uint64_t sub_260F89118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA0B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_260F89180(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_260F891F8(uint64_t *a1)
{
  return a1;
}

unint64_t sub_260F89264()
{
  unint64_t result = qword_26A8EAC50;
  if (!qword_26A8EAC50)
  {
    type metadata accessor for MLModelMetadataKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAC50);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppleDiffusionSketchConditioner.loadResources()()
{
}

Swift::Void __swiftcall AppleDiffusionSketchConditioner.unloadResources()()
{
}

void AppleDiffusionSketchConditioner.encode(_:scribbleEdgesBuffer:styleAdapter:scribbleStyleConditioningVector:strength:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
}

DiffusionBase::AppleDiffusionSketchConditioner::Error_optional __swiftcall AppleDiffusionSketchConditioner.Error.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = DiffusionBase_AppleDiffusionSketchConditioner_Error_unsupportedStyleAdapterForSketchConditioningVector;
  }
  else {
    v2.value = DiffusionBase_AppleDiffusionSketchConditioner_Error_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

unint64_t AppleDiffusionSketchConditioner.Error.rawValue.getter(char a1)
{
  if (a1) {
    return 0xD000000000000032;
  }
  else {
    return 0xD000000000000019;
  }
}

uint64_t sub_260F893B0(char *a1, char *a2)
{
  return sub_260FD4A90(*a1, *a2);
}

uint64_t sub_260F893BC()
{
  return sub_260FB608C();
}

uint64_t sub_260F893C4()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260F89438()
{
  return sub_260FB63FC();
}

uint64_t sub_260F89440@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_260FE4EC0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_260F894A0(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000032;
  }
  else {
    unint64_t v2 = 0xD000000000000019;
  }
  unint64_t v3 = 0x8000000261001050;
  if (*v1) {
    unint64_t v3 = 0x8000000261001070;
  }
  *a1 = v2;
  a1[1] = v3;
}

__n128 AppleDiffusionSketchConditioner.init(modelAt:configuration:)@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  sub_260F8AC4C(a1, a2, (uint64_t)v6);
  long long v4 = v6[3];
  *(_OWORD *)(a3 + 32) = v6[2];
  *(_OWORD *)(a3 + 48) = v4;
  *(void *)(a3 + 64) = v7;
  __n128 result = (__n128)v6[1];
  *(_OWORD *)a3 = v6[0];
  *(__n128 *)(a3 + 16) = result;
  return result;
}

uint64_t sub_260F89534()
{
  id v1 = *(id *)(*v0 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD68);
  sub_260FE4900();

  uint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = sub_260F955EC(v2);
  swift_bridgeObjectRelease();
  uint64_t v17 = v3;
  sub_260F89778((uint64_t *)&v17);
  swift_bridgeObjectRelease();
  if (v17[2])
  {
    uint64_t v5 = v17[4];
    uint64_t v4 = v17[5];
    swift_bridgeObjectRetain();
    uint64_t v6 = swift_release();
    MEMORY[0x270FA5388](v6, v7);
    id v9 = v8;
    sub_260FE4900();

    uint64_t v10 = v17;
    if (v17[2])
    {
      unint64_t v11 = sub_260DBACB4(v5, v4);
      if (v12)
      {
        id v13 = *(id *)(v10[7] + 8 * v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v14 = objc_msgSend(v13, sel_name);

        uint64_t v15 = sub_260FE40A0();
        return v15;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
  }
  swift_release();
  __break(1u);
  swift_unexpectedError();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_260F89778(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_260FBBAB0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_260F897E4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_260F897E4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_260FE50F0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_260F89ED0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          id v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_260F89FA0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v97 = sub_260DED460((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          long long v100 = &v97[16 * v96 + 32];
          *(void *)long long v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_260FE4460();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  unint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    id v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_260FE5150();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    long long v21 = (void *)(v103 + 16 * v20);
    do
    {
      unint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_260FE5150()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_260DECCD0(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      unint64_t v11 = sub_260DECCD0((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    char v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        BOOL v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        int64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_260F89FA0((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)int64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        unint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        char v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      unint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        id v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        unint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_260FE5150() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)unint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_260FE4E10();
  __break(1u);
  return result;
}

uint64_t sub_260F89ED0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_260FE5150(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_260F89FA0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_260FE5150() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    id v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_260FE5150() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_260DED3A4((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

void sub_260F8A23C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = v3[1];
  uint64_t v8 = v3[2];
  uint64_t v10 = sub_260FDB750(v5[2], 0, v5[1], 0);
  if (!v4)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v74 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD00);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_260FE7080;
    *(void *)(inited + 32) = sub_260F89534();
    *(void *)(inited + 40) = v13;
    *(void *)(inited + 48) = v11;
    id v14 = v11;
    unint64_t v75 = sub_260F5B780(inited);
    MEMORY[0x270FA5388](v75, v15);
    id v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD68);
    sub_260FE4900();

    if (*(void *)(v76 + 16))
    {
      uint64_t v19 = v5[7];
      uint64_t v18 = v5[8];
      swift_bridgeObjectRetain();
      sub_260DBACB4(v19, v18);
      char v21 = v20;
      swift_bridgeObjectRelease();
      uint64_t v22 = swift_bridgeObjectRelease();
      if (v21)
      {
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_260FF7900;
        sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
        *(void *)(v24 + 32) = sub_260FE4A30();
        *(void *)(v24 + 40) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(a3 + 16), v72);
        sub_260FE4420();
        id v25 = objc_allocWithZone(MEMORY[0x263F00DA8]);
        id v26 = sub_260E5BE64(v24, 65568);
        MEMORY[0x270FA5388](v26, v27);
        sub_260FE4840();
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_260FE7020;
        *(void *)(v28 + 32) = v26;
        sub_260FE4420();
        sub_260D905B0(0, &qword_26A8EABD8);
        id v29 = v26;
        uint64_t v30 = (void *)sub_260FE43F0();
        swift_bridgeObjectRelease();
        id v31 = objc_msgSend(self, sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v30, 0, 65552);

        swift_bridgeObjectRetain();
        id v32 = v31;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v76 = v75;
        sub_260FC65FC((uint64_t)v32, v19, v18, isUniquelyReferenced_nonNull_native);

        swift_bridgeObjectRelease();
        uint64_t v22 = swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v22 = swift_bridgeObjectRelease();
    }
    MEMORY[0x270FA5388](v22, v23);
    id v35 = v34;
    sub_260FE4900();

    if (*(void *)(v76 + 16))
    {
      uint64_t v36 = v14;
      uint64_t v37 = v5[3];
      uint64_t v38 = v5[4];
      swift_bridgeObjectRetain();
      sub_260DBACB4(v37, v38);
      char v40 = v39;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v40)
      {
        if (!v74)
        {
          swift_bridgeObjectRelease();
          sub_260F8B1D0();
          swift_allocError();
          unsigned char *v49 = 0;
          swift_willThrow();

          return;
        }
        swift_bridgeObjectRetain();
        id v41 = v74;
        uint64_t v61 = sub_260FDB750(v8, 0, v9, 0);
        char v62 = swift_isUniquelyReferenced_nonNull_native();
        sub_260FC65FC(v61, v37, v38, v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
        uint64_t v63 = swift_allocObject();
        *(_OWORD *)(v63 + 16) = xmmword_260FF7900;
        sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
        *(void *)(v63 + 32) = sub_260FE4A30();
        *(void *)(v63 + 40) = sub_260FE4A30();
        unint64_t v76 = v63;
        sub_260FE4420();
        id v64 = objc_allocWithZone(MEMORY[0x263F00DA8]);
        id v65 = sub_260E5BE64(v63, 65568);
        uint64_t v66 = (void *)sub_260FE46C0();
        objc_msgSend(v65, sel_fillWithNumber_, v66);

        uint64_t v68 = v5[5];
        uint64_t v67 = v5[6];
        swift_bridgeObjectRetain();
        id v69 = v65;
        char v70 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v76 = v75;
        sub_260FC65FC((uint64_t)v69, v68, v67, v70);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v14 = v36;
      }
      else
      {
        id v14 = v36;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v42 = swift_bridgeObjectRetain();
    sub_260FB9C60(v42);
    swift_bridgeObjectRelease();
    id v43 = objc_allocWithZone(MEMORY[0x263F00D38]);
    id v44 = sub_260FBB9C8();
    uint64_t v71 = MEMORY[0x270FA5388](v44, v45);
    MEMORY[0x270FA5388](v71, v46);
    id v48 = v47;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
    sub_260FE4900();
    uint64_t v73 = v14;

    id v50 = (id)v76;
    id v51 = objc_msgSend((id)v76, sel_featureNames);
    sub_260FE46E0();

    uint64_t v52 = swift_bridgeObjectRetain();
    uint64_t v53 = sub_260DBA550(v52);
    swift_bridgeObjectRelease();
    unint64_t v76 = (unint64_t)v53;
    sub_260F89778((uint64_t *)&v76);
    swift_bridgeObjectRelease();
    unint64_t v54 = v76;
    unint64_t v76 = MEMORY[0x263F8EE78];
    uint64_t v55 = *(void *)(v54 + 16);
    if (v55)
    {
      unint64_t v56 = v54 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        uint64_t v57 = (void *)sub_260FE4070();
        swift_bridgeObjectRelease();
        id v58 = objc_msgSend(v50, sel_featureValueForName_, v57);

        if (!v58) {
          break;
        }
        id v59 = objc_msgSend(v58, sel_multiArrayValue);

        if (!v59) {
          goto LABEL_23;
        }
        id v60 = v59;
        MEMORY[0x26122AC30]();
        if (*(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_260FE4430();
        }
        v56 += 16;
        sub_260FE4470();
        sub_260FE4420();

        if (!--v55) {
          goto LABEL_21;
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);

      swift_unexpectedError();
      __break(1u);
      swift_release();
      __break(1u);
    }
    else
    {
LABEL_21:
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      swift_release();
    }
  }
}

uint64_t sub_260F8AC4C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_260FE2F90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  type metadata accessor for ManagedMLModel();
  swift_allocObject();
  uint64_t v11 = ManagedMLModel.init(modelAt:configuration:name:)(v10, a2, (uint64_t)"local_conditioning_producer_scribble", 36, 2);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  *(void *)a3 = v11;
  *(int64x2_t *)(a3 + 8) = vdupq_n_s64(0x200uLL);
  strcpy((char *)(a3 + 24), "scribble_edges");
  *(unsigned char *)(a3 + 39) = -18;
  *(void *)(a3 + 40) = 0xD000000000000011;
  *(void *)(a3 + 48) = 0x80000002610012D0;
  strcpy((char *)(a3 + 56), "style_vector");
  *(unsigned char *)(a3 + 69) = 0;
  *(_WORD *)(a3 + 70) = -5120;
  return result;
}

unint64_t sub_260F8ADEC()
{
  unint64_t result = qword_26A8EADC8;
  if (!qword_26A8EADC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EADC8);
  }
  return result;
}

uint64_t destroy for AppleDiffusionSketchConditioner()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppleDiffusionSketchConditioner(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AppleDiffusionSketchConditioner(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AppleDiffusionSketchConditioner(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionSketchConditioner(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleDiffusionSketchConditioner(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionSketchConditioner()
{
  return &type metadata for AppleDiffusionSketchConditioner;
}

unsigned char *storeEnumTagSinglePayload for AppleDiffusionSketchConditioner.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F8B198);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionSketchConditioner.Error()
{
  return &type metadata for AppleDiffusionSketchConditioner.Error;
}

unint64_t sub_260F8B1D0()
{
  unint64_t result = qword_26A8EADD0;
  if (!qword_26A8EADD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EADD0);
  }
  return result;
}

__n128 sub_260F8B224(__n128 *a1)
{
  uint64_t v2 = *(__n128 **)(v1 + 16);
  unint64_t v3 = v2[1].n128_u64[0];
  if (v3)
  {
    if (v3 < 8 || (unint64_t)((char *)a1 - (char *)v2 - 32) < 0x20)
    {
      uint64_t v4 = 0;
LABEL_5:
      uint64_t v5 = (unsigned __int32 *)a1 + v4;
      unsigned int v6 = (unsigned __int32 *)&v2[2] + v4;
      unint64_t v7 = v3 - v4;
      do
      {
        unsigned __int32 v8 = *v6++;
        result.n128_u32[0] = v8;
        *v5++ = v8;
        --v7;
      }
      while (v7);
      return result;
    }
    uint64_t v4 = v3 & 0x7FFFFFFFFFFFFFF8;
    uint64_t v10 = v2 + 3;
    uint64_t v11 = a1 + 1;
    uint64_t v12 = v3 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      __n128 result = v10[-1];
      __n128 v13 = *v10;
      v11[-1] = result;
      *uint64_t v11 = v13;
      v10 += 2;
      v11 += 2;
      v12 -= 8;
    }
    while (v12);
    if (v3 != v4) {
      goto LABEL_5;
    }
  }
  return result;
}

void sub_260F8B2A8(void *a1@<X8>)
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Decoder.loadResources()()
{
  uint64_t v1 = v0;
  ManagedMLModel.loadResources()();
  if (!v2 && v1)
  {
    ManagedMLModel.loadResources()();
    if (v3) {
  }
    }
}

Swift::Void __swiftcall Decoder.unloadResources()()
{
  uint64_t v1 = v0;
  ManagedMLModel.unloadResources()();
  if (v1) {
    ManagedMLModel.unloadResources()();
  }
}

int64_t Decoder.decode(_:scaleFactor:outputRange:inferAlpha:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, float a5)
{
  uint64_t v6 = v5;
  LODWORD(v44) = a2;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    id v48 = (id)MEMORY[0x263F8EE78];
    sub_260FE4D30();
    uint64_t v12 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0) - 8);
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    id v14 = *(uint64_t **)(v12 + 72);
    while (1)
    {
      sub_260F8BCC0(v13, &v46, &v47, a5);
      if (v6) {
        break;
      }
      uint64_t v6 = 0;
      sub_260FE4D00();
      sub_260FE4D40();
      sub_260FE4D50();
      sub_260FE4D10();
      v13 += (uint64_t)v14;
      if (!--v9) {
        goto LABEL_5;
      }
    }
    swift_release();
    return (int64_t)v14;
  }
LABEL_5:
  id v15 = objc_allocWithZone(MEMORY[0x263F00D10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
  id v16 = (void *)sub_260FE43F0();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v15, sel_initWithFeatureProviderArray_, v16);

  uint64_t v45 = &v43;
  uint64_t v20 = MEMORY[0x270FA5388](v18, v19);
  v41[0] = a3;
  v41[1] = a4;
  id v42 = v17;
  id v14 = &OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue;
  MEMORY[0x270FA5388](v20, v21);
  id v23 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD18);
  sub_260FE4900();
  if (v6)
  {

    return (int64_t)v14;
  }
  id v43 = v17;

  id v26 = v48;
  if ((v44 & 1) == 0)
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
LABEL_12:
    id v33 = v43;
    int64_t result = (int64_t)objc_msgSend(v26, sel_count);
    if ((result & 0x8000000000000000) == 0)
    {
      int64_t v35 = result;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_260F8DD10(0, v35, v26, v32, v31);
      id v14 = v36;

      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return (int64_t)v14;
    }
    __break(1u);
    goto LABEL_21;
  }
  if (!a4)
  {
    sub_260F8DE8C();
    swift_allocError();
    *(void *)uint64_t v37 = 3;
    *(unsigned char *)(v37 + 8) = 2;
    swift_willThrow();
    swift_unknownObjectRelease();

    return (int64_t)v14;
  }
  uint64_t v45 = &v43;
  uint64_t v27 = MEMORY[0x270FA5388](v24, v25);
  id v44 = v41;
  id v42 = v43;
  uint64_t v28 = *(void **)(a4 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
  MEMORY[0x270FA5388](v27, v29);
  swift_retain();
  id v30 = v28;
  sub_260FE4900();

  id v38 = v48;
  int64_t result = (int64_t)objc_msgSend(v48, sel_count);
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v39 = result;
    swift_unknownObjectRetain();
    uint64_t v32 = sub_260F8CCB0(0, v39, v38, 1802723693, 0xE400000000000000, 5);
    swift_unknownObjectRelease();
    int64_t result = (int64_t)objc_msgSend(v38, sel_count);
    if (result < 0) {
      goto LABEL_22;
    }
    uint64_t v40 = result;
    swift_unknownObjectRetain();
    uint64_t v31 = sub_260F8CCB0(0, v40, v38, 0xD000000000000010, 0x8000000261001710, 6);
    swift_release();
    swift_unknownObjectRelease_n();
    goto LABEL_12;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_260F8B924(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return MEMORY[0x270FA2498](sub_260F8B944, 0, 0);
}

uint64_t sub_260F8B944()
{
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_260F8BA40;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_260EC2C5C;
  v0[13] = &block_descriptor_2;
  v0[14] = v2;
  objc_msgSend(v1, sel_modelDescriptionWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_260F8BA40()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_260F8BB70;
  }
  else {
    uint64_t v2 = sub_260F8BB50;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_260F8BB50()
{
  **(void **)(v0 + 128) = *(void *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_260F8BB70()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

Swift::Bool __swiftcall Decoder.usePORParameters()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel);
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_modelDescription);
    id v3 = objc_msgSend(v2, sel_inputDescriptionsByName);

    sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
    uint64_t v4 = sub_260FE3EB0();

    if (*(void *)(v4 + 16))
    {
      sub_260DBACB4(0x746E6574616CLL, 0xE600000000000000);
      char v6 = v5;
    }
    else
    {
      char v6 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_260F8BCC0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>, float a4@<S0>)
{
  uint64_t v6 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v10, v12);
  uint64_t v37 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v15);
  id v17 = (char *)&v31 - v16;
  uint64_t v18 = sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  uint64_t v35 = a1;
  uint64_t v36 = v18;
  uint64_t v19 = sub_260FE3BF0();
  int64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    uint64_t v32 = v4;
    id v33 = a3;
    id v34 = a2;
    uint64_t v38 = MEMORY[0x263F8EE78];
    sub_260F63828(0, v20, 0);
    uint64_t v21 = 0;
    uint64_t v22 = v38;
    unint64_t v23 = *(void *)(v38 + 16);
    do
    {
      float v24 = *(float *)(v19 + 4 * v21 + 32);
      uint64_t v38 = v22;
      unint64_t v25 = *(void *)(v22 + 24);
      if (v23 >= v25 >> 1)
      {
        sub_260F63828(v25 > 1, v23 + 1, 1);
        uint64_t v22 = v38;
      }
      ++v21;
      *(void *)(v22 + 16) = v23 + 1;
      *(float *)(v22 + 4 * v23++ + 32) = v24 / a4;
    }
    while (v20 != v21);
    swift_bridgeObjectRelease();
    a3 = v33;
    a2 = v34;
    uint64_t v6 = v32;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x263F8EE78];
  }
  uint64_t v38 = v22;
  sub_260FE3B20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
  sub_260D90340(&qword_26A8EABD0, &qword_26A8EABC8);
  sub_260FE3B30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7080;
  *(void *)(inited + 32) = 0x746E6574616CLL;
  *(void *)(inited + 40) = 0xE600000000000000;
  sub_260D905B0(0, &qword_26A8EABD8);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v17, v10);
  *(void *)(inited + 48) = sub_260FE4860();
  unint64_t v27 = sub_260F5B780(inited);
  sub_260FB9C60(v27);
  swift_bridgeObjectRelease();
  id v28 = objc_allocWithZone(MEMORY[0x263F00D38]);
  id v29 = sub_260FBB9C8();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v17, v10);
  if (v6) {
    *a2 = v6;
  }
  else {
    *a3 = v29;
  }
  return result;
}

uint64_t sub_260F8C030@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  v18[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v8 = sub_260FE2F90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_modelURL, v8);
  sub_260F779A8((uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v18[0] = 0;
  id v13 = objc_msgSend(a1, sel_predictionsFromBatch_error_, a3, v18);
  id v14 = v18[0];
  if (v13)
  {
    *a4 = v13;
    id v15 = v14;
  }
  else
  {
    id v16 = v18[0];
    sub_260FE2E30();

    swift_willThrow();
  }
  return sub_260F8E9A0(a2);
}

uint64_t sub_260F8C1D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_260F8C030(a1, *(void *)(v2 + 16), *(void *)(v2 + 32), a2);
}

void sub_260F8C1F4(id a1@<X1>, unint64_t *a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = v6;
  unint64_t v12 = *a2;
  id v13 = objc_msgSend(a1, sel_featuresAtIndex_, *a2);
  id v14 = (void *)sub_260FE4070();
  id v15 = objc_msgSend(v13, sel_featureValueForName_, v14);

  if (!v15)
  {
    sub_260F8DE8C();
    uint64_t v19 = swift_allocError();
    *(void *)uint64_t v20 = 7;
    *(unsigned char *)(v20 + 8) = 2;
    swift_willThrow();
    swift_unknownObjectRelease();
LABEL_27:
    *a5 = v19;
    return;
  }
  uint64_t v49 = a4;
  if (!a3)
  {
    id v14 = 0;
    goto LABEL_11;
  }
  if ((a3 & 0xC000000000000001) == 0)
  {
    if ((v12 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v12 < *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v16 = *(id *)(a3 + 8 * v12 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_51;
  }
  id v16 = (id)MEMORY[0x26122B4C0](v12, a3);
LABEL_7:
  id v14 = v16;
  id v17 = objc_msgSend(v16, sel_type);
  if (v17 != objc_msgSend(v15, sel_type))
  {
    sub_260F8DE8C();
    uint64_t v19 = swift_allocError();
    *(void *)uint64_t v18 = 4;
LABEL_23:
    *(unsigned char *)(v18 + 8) = 2;
LABEL_24:
    swift_willThrow();
LABEL_25:
    swift_unknownObjectRelease();

LABEL_26:
    goto LABEL_27;
  }
LABEL_11:
  id v21 = objc_msgSend(v15, sel_type);
  if (v21 != (id)4)
  {
    if (v21 != (id)5)
    {
      sub_260F8DE8C();
      uint64_t v19 = swift_allocError();
      *(void *)uint64_t v18 = 0;
      goto LABEL_23;
    }
    uint64_t v22 = (id *)objc_msgSend(v15, sel_multiArrayValue);
    if (!v22)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    unint64_t v23 = v22;
    if (v14)
    {
      uint64_t v45 = v22;
      id v24 = objc_msgSend(v14, sel_multiArrayValue);
      if (v24)
      {
        unint64_t v25 = v24;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_260FF7900;
        *(void *)(v26 + 32) = v25;
        *(void *)(v26 + 40) = v45;
        sub_260FE4420();
        id v44 = v25;
        id v43 = objc_msgSend(v44, sel_dataType);
        sub_260D905B0(0, &qword_26A8EABD8);
        uint64_t v47 = a6;
        uint64_t v27 = sub_260FE43F0();
        swift_bridgeObjectRelease();
        unint64_t v23 = (id *)objc_msgSend(self, sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v27, 1, v43);

        id v28 = (void *)v27;
        a6 = v47;
      }
      else
      {
        id v28 = v45;
        unint64_t v23 = v45;
      }
    }
    uint64_t v35 = sub_260F8CE68(v23);
    uint64_t v19 = (uint64_t)v6;
    if (v6)
    {
      swift_unknownObjectRelease();

      goto LABEL_26;
    }
    uint64_t v8 = (__CVBuffer *)v35;
    goto LABEL_37;
  }
  id v29 = (id *)objc_msgSend(v15, sel_imageBufferValue);
  if (!v29)
  {
    sub_260F8DE8C();
    uint64_t v19 = swift_allocError();
    *(void *)uint64_t v34 = 2;
    *(unsigned char *)(v34 + 8) = 2;
    goto LABEL_24;
  }
  unint64_t v23 = v29;
  uint64_t v48 = a6;
  if (v14)
  {
    id v30 = (__CVBuffer *)objc_msgSend(v14, sel_imageBufferValue);
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v32 = sub_260F8D494((__CVBuffer *)v23, v30);
      uint64_t v19 = (uint64_t)v6;
      if (!v6)
      {
LABEL_21:
        uint64_t v8 = (__CVBuffer *)v32;

        CVBufferPropagateAttachments((CVBufferRef)v23, v8);
        a6 = v48;
LABEL_37:

        CGColorSpaceRef v36 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x263F002D8]);
        if (!v36)
        {
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        a5 = v36;
        CVBufferSetAttachment(v8, (CFStringRef)*MEMORY[0x263F03E38], v36, kCVAttachmentMode_ShouldPropagate);
        uint64_t v46 = a6;
        if (!v49) {
          goto LABEL_46;
        }
        if ((v49 & 0xC000000000000001) == 0)
        {
          if ((v12 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v12 < *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v37 = *(id *)(v49 + 8 * v12 + 32);
LABEL_43:
            uint64_t v38 = v37;
            id v39 = objc_msgSend(v37, sel_multiArrayValue);
            if (v39)
            {
              uint64_t v40 = v39;
              id v41 = objc_msgSend(v39, sel_objectAtIndexedSubscript_, 0);

              unsigned __int8 v42 = objc_msgSend(v41, sel_BOOLValue);
              swift_unknownObjectRelease();

LABEL_47:
              *(void *)uint64_t v46 = v8;
              *(unsigned char *)(v46 + 8) = v42;
              return;
            }

LABEL_46:
            swift_unknownObjectRelease();

            unsigned __int8 v42 = 2;
            goto LABEL_47;
          }
          __break(1u);
          goto LABEL_54;
        }
LABEL_51:
        id v37 = (id)MEMORY[0x26122B4C0](v12);
        goto LABEL_43;
      }
LABEL_30:

      goto LABEL_25;
    }
  }
  id v33 = (__CVBuffer *)objc_msgSend(v15, sel_imageBufferValue);
  if (v33)
  {
    uint64_t v31 = v33;
    uint64_t v32 = sub_260F8D998(v33);
    uint64_t v19 = (uint64_t)v6;
    if (!v6) {
      goto LABEL_21;
    }
    goto LABEL_30;
  }
LABEL_56:
  __break(1u);
}

void sub_260F8C77C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  ManagedMLModel.loadResources()();
  if (v2) {
    BOOL v3 = 1;
  }
  else {
    BOOL v3 = v1 == 0;
  }
  if (!v3)
  {
    ManagedMLModel.loadResources()();
    if (v4) {
  }
    }
}

void sub_260F8C7C8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  ManagedMLModel.unloadResources()();
  if (v1) {
    ManagedMLModel.unloadResources()();
  }
}

uint64_t sub_260F8C7FC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7F78);
  uint64_t inited = swift_initStackObject();
  uint64_t v1 = (void **)MEMORY[0x263F04140];
  *(_OWORD *)(inited + 16) = xmmword_260FE7060;
  uint64_t v2 = *v1;
  *(void *)(inited + 32) = v2;
  uint64_t v3 = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 40) = 1;
  uint64_t v4 = (void *)*MEMORY[0x263F04130];
  *(void *)(inited + 64) = v3;
  *(void *)(inited + 72) = v4;
  id v5 = v2;
  id v6 = v4;
  unint64_t v7 = sub_260DAA168(MEMORY[0x263F8EE78]);
  *(void *)(inited + 104) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7F80);
  *(void *)(inited + 80) = v7;
  sub_260DAA2AC(inited);
  type metadata accessor for CFString(0);
  sub_260E330D4();
  uint64_t v8 = sub_260FE3E90();
  uint64_t result = swift_bridgeObjectRelease();
  qword_26A8EADD8 = v8;
  return result;
}

uint64_t sub_260F8C8EC(uint64_t a1, int32x2_t a2, int32x2_t a3, uint64_t a4, uint64_t a5, int64_t a6, uint64_t a7, unint64_t a8, unint64_t a9, const vImage_Buffer *a10)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  if ((unint64_t)(a5 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (a6 < 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (a6)
  {
    uint64_t v14 = 4 * a5;
    blue.data = (void *)MEMORY[0x263F8EE78];
    sub_260F63848(0, a6, 0);
    uint64_t v15 = v14;
    unint64_t v16 = a9;
    uint64_t v17 = 0;
    data = (unint64_t *)blue.data;
    while (a6 != v17)
    {
      if (!a1) {
        goto LABEL_34;
      }
      if ((unsigned __int128)(v17 * (__int128)a7) >> 64 != (v17 * a7) >> 63) {
        goto LABEL_26;
      }
      if ((a8 & 0x8000000000000000) != 0 || (v16 & 0x8000000000000000) != 0)
      {
        uint64_t result = sub_260FE4E10();
        __break(1u);
        return result;
      }
      blue.data = data;
      unint64_t v20 = data[2];
      unint64_t v19 = data[3];
      if (v20 >= v19 >> 1)
      {
        uint64_t v37 = v15;
        sub_260F63848(v19 > 1, v20 + 1, 1);
        uint64_t v15 = v37;
        unint64_t v16 = a9;
        data = (unint64_t *)blue.data;
      }
      data[2] = v20 + 1;
      id v21 = &data[4 * v20];
      v21[4] = a1 + 4 * v17 * a7;
      v21[5] = a8;
      ++v17;
      v21[6] = v16;
      v21[7] = v15;
      if (a6 == v17) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  data = (unint64_t *)MEMORY[0x263F8EE78];
  if (!*(void *)(MEMORY[0x263F8EE78] + 16))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
LABEL_15:
  long long v23 = *((_OWORD *)data + 3);
  uint64_t v22 = (char *)(data + 4);
  *(_OWORD *)&blue.data = *((_OWORD *)data + 2);
  *(_OWORD *)&blue.width = v23;
  uint64_t v24 = sub_260FE4460();
  *(void *)(v24 + 16) = 4;
  *(int32x4_t *)(v24 + 32) = vdupq_lane_s32(a3, 0);
  unint64_t v25 = (int32x4_t *)sub_260FE4460();
  v25[1].i64[0] = 4;
  v25[2] = vdupq_lane_s32(a2, 0);
  i32 = (const float *)v25[2].i32;
  unint64_t v27 = data[2];
  if (v27 == 3)
  {
    if (*(void *)(v24 + 16) < 4uLL)
    {
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
    }
    unint64_t v28 = 0;
    *(_DWORD *)(v24 + 44) = 1065353216;
    v25[2].i32[3] = 1065353216;
  }
  else
  {
    unint64_t v28 = 1;
  }
  if (v28 >= v27) {
    goto LABEL_30;
  }
  id v29 = &v22[32 * v28];
  long long v30 = *((_OWORD *)v29 + 1);
  *(_OWORD *)&green.data = *(_OWORD *)v29;
  *(_OWORD *)&green.width = v30;
  if (v28 + 1 >= v27)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v31 = &v22[32 * v28 + 32];
  long long v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)&red.data = *(_OWORD *)v31;
  *(_OWORD *)&red.width = v32;
  unint64_t v33 = v28 | 2;
  if (v33 >= v27)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v34 = &v22[32 * v33];
  long long v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)&alpha.data = *(_OWORD *)v34;
  *(_OWORD *)&alpha.width = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  vImageConvert_PlanarFToARGB8888(&alpha, &red, &green, &blue, a10, (const float *)(v24 + 32), i32, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if (v27 == 4) {
    vImagePremultiplyData_RGBA8888(a10, a10, 0);
  }
  return swift_bridgeObjectRelease();
}

void sub_260F8CC2C(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr)@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = (void *)MEMORY[0x26122C180]();
  sub_260FBD580(a1, a2, a3);
  if (v4)
  {
  }
  else
  {
    uint64_t v11 = v10;
    *a4 = v11;
  }
}

uint64_t sub_260F8CCB0(uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a2 - result;
  if (__OFSUB__(a2, result)) {
    goto LABEL_19;
  }
  uint64_t v7 = result;
  uint64_t result = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t result = sub_260FE4D30();
    if (v6 < 0)
    {
LABEL_20:
      __break(1u);
      return result;
    }
    uint64_t v17 = a6;
    if (a2 <= v7) {
      uint64_t v11 = v7;
    }
    else {
      uint64_t v11 = a2;
    }
    uint64_t v12 = v7;
    while (a2 != v12)
    {
      id v13 = objc_msgSend(a3, sel_featuresAtIndex_, v12);
      uint64_t v14 = (void *)sub_260FE4070();
      id v15 = objc_msgSend(v13, sel_featureValueForName_, v14);

      if (!v15)
      {
        sub_260F8DE8C();
        swift_allocError();
        *(void *)uint64_t v16 = v17;
        *(unsigned char *)(v16 + 8) = 2;
        swift_willThrow();
        swift_unknownObjectRelease();
        return swift_release();
      }
      swift_unknownObjectRelease();
      sub_260FE4D00();
      sub_260FE4D40();
      sub_260FE4D50();
      uint64_t result = sub_260FE4D10();
      if (a2 < v7) {
        goto LABEL_17;
      }
      if (v11 == v12) {
        goto LABEL_18;
      }
      if (a2 == ++v12) {
        return v18;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_260F8CE68(id *a1)
{
  id v5 = v1;
  uint64_t v6 = (uint64_t)a1;
  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  CFAllocatorRef v7 = (const __CFAllocator *)&selRef_setRevision_error_;
  id v8 = objc_msgSend(a1, sel_shape);
  sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
  uint64_t v9 = sub_260FE4400();

  if ((v9 & 0xC000000000000001) != 0)
  {
    id v10 = (id)MEMORY[0x26122B4C0](1, v9);
  }
  else
  {
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
LABEL_36:
      id v17 = (id)MEMORY[0x26122B4C0](3, v9);
      goto LABEL_10;
    }
    id v10 = *(id *)(v9 + 40);
  }
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v2 = &selRef_setRevision_error_;
  id v36 = objc_msgSend(v11, sel_integerValue);

  id v12 = objc_msgSend((id)v6, sel_shape);
  uint64_t v13 = sub_260FE4400();

  if ((v13 & 0xC000000000000001) != 0)
  {
    id v14 = (id)MEMORY[0x26122B4C0](2, v13);
  }
  else
  {
    if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3uLL)
    {
      __break(1u);
LABEL_38:
      swift_once();
      goto LABEL_14;
    }
    id v14 = *(id *)(v13 + 48);
  }
  id v15 = v14;
  swift_bridgeObjectRelease();
  size_t v3 = (size_t)objc_msgSend(v15, sel_integerValue);

  id v16 = objc_msgSend((id)v6, sel_shape);
  uint64_t v9 = sub_260FE4400();

  if ((v9 & 0xC000000000000001) != 0) {
    goto LABEL_36;
  }
  if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) < 4uLL)
  {
    __break(1u);
    goto LABEL_40;
  }
  id v17 = *(id *)(v9 + 56);
LABEL_10:
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  size_t v4 = (size_t)[v18 v2[148]];

  pixelBufferOut[0] = 0;
  if (v36 == (id)1) {
    LODWORD(v13) = 1278226488;
  }
  else {
    LODWORD(v13) = 1111970369;
  }
  CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB10];
  if (qword_26A8EA910 != -1) {
    goto LABEL_38;
  }
LABEL_14:
  unsigned int v19 = CVPixelBufferCreate(v7, v3, v4, v13, (CFDictionaryRef)qword_26A8EADD8, pixelBufferOut);
  CFAllocatorRef v7 = pixelBufferOut[0];
  if (v19 || !pixelBufferOut[0])
  {
    uint64_t v21 = v19;
    sub_260F8DE8C();
    swift_allocError();
    *(void *)uint64_t v22 = v21;
    *(unsigned char *)(v22 + 8) = 0;
    swift_willThrow();
    goto LABEL_19;
  }
  id v5 = pixelBufferOut[0];
  if (CVPixelBufferLockBaseAddress(v5, 0) || !CVPixelBufferGetBaseAddress(v5))
  {
    sub_260F8DE8C();
    swift_allocError();
    *(void *)uint64_t v20 = 1;
    *(unsigned char *)(v20 + 8) = 2;
    swift_willThrow();

LABEL_19:
    return (uint64_t)v7;
  }
  if ((v4 & 0x8000000000000000) == 0 && (v3 & 0x8000000000000000) == 0)
  {
    CVPixelBufferGetBytesPerRow(v5);
    if (objc_msgSend((id)v6, sel_dataType) == (id)65552)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_260FE7020;
      *(void *)(v24 + 32) = v6;
      sub_260FE4420();
      sub_260D905B0(0, &qword_26A8EABD8);
      unint64_t v25 = (id *)(id)v6;
      uint64_t v26 = (void *)sub_260FE43F0();
      swift_bridgeObjectRelease();
      uint64_t v9 = (uint64_t)objc_msgSend(self, sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v26, 0, 65568);
    }
    else
    {
      uint64_t v9 = (uint64_t)(id)v6;
    }
    id v27 = objc_msgSend((id)v9, sel_strides);
    uint64_t v6 = sub_260FE4400();

    if ((v6 & 0xC000000000000001) == 0)
    {
      if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
      {
        __break(1u);
        goto LABEL_43;
      }
      id v28 = *(id *)(v6 + 40);
LABEL_29:
      id v29 = v28;
      swift_bridgeObjectRelease();
      [v29 v2[148]];

      id v30 = objc_msgSend((id)v9, sel_strides);
      uint64_t v31 = sub_260FE4400();

      if ((v31 & 0xC000000000000001) != 0)
      {
        id v32 = (id)MEMORY[0x26122B4C0](2, v31);
        goto LABEL_32;
      }
      if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
      {
        id v32 = *(id *)(v31 + 48);
LABEL_32:
        unint64_t v33 = v32;
        swift_bridgeObjectRelease();
        [v33 v2[148]];

        MEMORY[0x270FA5388](v34, v35);
        sub_260FE4830();

        CVPixelBufferUnlockBaseAddress(v5, 0);
        goto LABEL_19;
      }
LABEL_43:
      __break(1u);
    }
LABEL_40:
    id v28 = (id)MEMORY[0x26122B4C0](1, v6);
    goto LABEL_29;
  }
  uint64_t result = sub_260FE4E10();
  __break(1u);
  return result;
}

uint64_t sub_260F8D494(__CVBuffer *a1, __CVBuffer *a2)
{
  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  pixelBufferOut[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAE00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7080;
  id v5 = (void *)*MEMORY[0x263F04130];
  *(void *)(inited + 32) = *MEMORY[0x263F04130];
  id v6 = v5;
  *(void *)(inited + 40) = sub_260DAA168(MEMORY[0x263F8EE78]);
  sub_260F5BE98(inited);
  type metadata accessor for CFString(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7F80);
  sub_260E330D4();
  CFAllocatorRef v7 = (void *)sub_260FE3E90();
  swift_bridgeObjectRelease();
  size_t Width = CVPixelBufferGetWidth(a1);
  size_t Height = CVPixelBufferGetHeight(a1);
  id v10 = (__CVBuffer *)CVPixelBufferGetWidth(a2);
  size_t v11 = CVPixelBufferGetHeight(a2);
  OSType PixelFormatType = CVPixelBufferGetPixelFormatType(a1);
  OSType v13 = CVPixelBufferGetPixelFormatType(a2);
  if (PixelFormatType != 1111970369 || v13 != 1278226488 || (__CVBuffer *)Width != v10 || Height != v11)
  {
    sub_260F8DE8C();
    swift_allocError();
    uint64_t v15 = 4;
    goto LABEL_8;
  }
  if (CVPixelBufferIsPlanar(a1))
  {
    sub_260F8DE8C();
    swift_allocError();
    uint64_t v15 = 8;
LABEL_8:
    *(void *)uint64_t v14 = v15;
    *(unsigned char *)(v14 + 8) = 2;
LABEL_9:
    swift_willThrow();
LABEL_10:

    return (uint64_t)v10;
  }
  unsigned int v17 = CVPixelBufferCreate((CFAllocatorRef)*MEMORY[0x263EFFB10], Width, Height, 0x42475241u, (CFDictionaryRef)v7, pixelBufferOut);
  if (v17 || !pixelBufferOut[0])
  {
    uint64_t v19 = v17;
    sub_260F8DE8C();
    swift_allocError();
    *(void *)uint64_t v20 = v19;
    *(unsigned char *)(v20 + 8) = 0;
    goto LABEL_9;
  }
  id v10 = pixelBufferOut[0];
  if (CVPixelBufferLockBaseAddress(v10, 0) || (BaseAddress = CVPixelBufferGetBaseAddress(v10)) == 0)
  {
    sub_260F8DE8C();
    swift_allocError();
    *(void *)uint64_t v18 = 1;
    *(unsigned char *)(v18 + 8) = 2;
    swift_willThrow();

    goto LABEL_10;
  }
  uint64_t v22 = BaseAddress;
  if (CVPixelBufferLockBaseAddress(a1, 1uLL) || (uint64_t v24 = CVPixelBufferGetBaseAddress(a1)) == 0)
  {
    sub_260F8DE8C();
    swift_allocError();
    *(void *)uint64_t v23 = 1;
    *(unsigned char *)(v23 + 8) = 2;
    swift_willThrow();
LABEL_30:
    CVPixelBufferUnlockBaseAddress(v10, 0);

    goto LABEL_10;
  }
  unint64_t v25 = v24;
  if (CVPixelBufferLockBaseAddress(a2, 1uLL) || (id v27 = CVPixelBufferGetBaseAddress(a2)) == 0)
  {
    sub_260F8DE8C();
    swift_allocError();
    *(void *)uint64_t v26 = 1;
    *(unsigned char *)(v26 + 8) = 2;
    swift_willThrow();
LABEL_29:
    CVPixelBufferUnlockBaseAddress(a1, 1uLL);
    goto LABEL_30;
  }
  if ((Height & 0x8000000000000000) == 0 && (Width & 0x8000000000000000) == 0)
  {
    newSrc.data = v27;
    newSrc.height = Height;
    newSrc.width = Width;
    newSrc.rowBytes = CVPixelBufferGetBytesPerRow(a2);
    origSrc.data = v25;
    origSrc.height = Height;
    origSrc.width = Width;
    origSrc.rowBytes = CVPixelBufferGetBytesPerRow(a1);
    dest.data = v22;
    dest.height = Height;
    dest.width = Width;
    dest.rowBytes = CVPixelBufferGetBytesPerRow(v10);
    vImage_Error v28 = vImageOverwriteChannels_ARGB8888(&newSrc, &origSrc, &dest, 1u, 0);
    if (!v28)
    {
      vImage_Error v28 = vImagePremultiplyData_RGBA8888(&dest, &dest, 0);
      if (!v28)
      {
        CVPixelBufferUnlockBaseAddress(a2, 1uLL);
        CVPixelBufferUnlockBaseAddress(a1, 1uLL);
        CVPixelBufferUnlockBaseAddress(v10, 0);

        return (uint64_t)v10;
      }
    }
    vImage_Error v29 = v28;
    sub_260F8DE8C();
    swift_allocError();
    *(void *)uint64_t v30 = v29;
    *(unsigned char *)(v30 + 8) = 1;
    swift_willThrow();
    CVPixelBufferUnlockBaseAddress(a2, 1uLL);
    goto LABEL_29;
  }
  uint64_t result = sub_260FE4E10();
  __break(1u);
  return result;
}

uint64_t sub_260F8D998(__CVBuffer *a1)
{
  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x263EF8340];
  if (CVPixelBufferIsPlanar(a1)
    || (PixelFormatType = CVPixelBufferGetPixelFormatType(a1), OSType v5 = PixelFormatType, PixelFormatType != 1278226488)
    && PixelFormatType != 1111970369)
  {
    sub_260F8DE8C();
    swift_allocError();
    *(void *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 8) = 2;
    swift_willThrow();
    return (uint64_t)v1;
  }
  size_t Width = CVPixelBufferGetWidth(a1);
  size_t Height = CVPixelBufferGetHeight(a1);
  pixelBufferOut[0] = 0;
  CFAllocatorRef v1 = (const __CFAllocator *)*MEMORY[0x263EFFB10];
  if (qword_26A8EA910 != -1) {
    swift_once();
  }
  unsigned int v8 = CVPixelBufferCreate(v1, Width, Height, v5, (CFDictionaryRef)qword_26A8EADD8, pixelBufferOut);
  if (v8) {
    BOOL v9 = 1;
  }
  else {
    BOOL v9 = pixelBufferOut[0] == 0;
  }
  if (v9)
  {
    uint64_t v10 = v8;
    sub_260F8DE8C();
    swift_allocError();
    *(void *)uint64_t v11 = v10;
    *(unsigned char *)(v11 + 8) = 0;
    swift_willThrow();
LABEL_20:

    return (uint64_t)v1;
  }
  CFAllocatorRef v1 = pixelBufferOut[0];
  if (CVPixelBufferLockBaseAddress(a1, 1uLL) || (BaseAddress = CVPixelBufferGetBaseAddress(a1)) == 0)
  {
    sub_260F8DE8C();
    swift_allocError();
    *(void *)uint64_t v12 = 1;
    *(unsigned char *)(v12 + 8) = 2;
    swift_willThrow();
LABEL_19:

    goto LABEL_20;
  }
  uint64_t v14 = BaseAddress;
  if (CVPixelBufferLockBaseAddress(v1, 0) || (unsigned int v17 = CVPixelBufferGetBaseAddress(v1)) == 0)
  {
    sub_260F8DE8C();
    swift_allocError();
    *(void *)uint64_t v15 = 1;
    *(unsigned char *)(v15 + 8) = 2;
    swift_willThrow();
LABEL_18:
    CVPixelBufferUnlockBaseAddress(a1, 1uLL);
    goto LABEL_19;
  }
  if ((Height & 0x8000000000000000) == 0 && (Width & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v17;
    src.data = v14;
    src.height = Height;
    src.width = Width;
    src.rowBytes = CVPixelBufferGetBytesPerRow(a1);
    dest.data = v18;
    dest.height = Height;
    dest.width = Width;
    dest.rowBytes = CVPixelBufferGetBytesPerRow(v1);
    if (v5 == 1278226488) {
      size_t v19 = 1;
    }
    else {
      size_t v19 = 4;
    }
    vImage_Error v20 = vImageCopyBuffer(&src, &dest, v19, 0);
    if (!v20)
    {
      CVPixelBufferUnlockBaseAddress(v1, 0);
      CVPixelBufferUnlockBaseAddress(a1, 1uLL);

      return (uint64_t)v1;
    }
    vImage_Error v21 = v20;
    sub_260F8DE8C();
    swift_allocError();
    *(void *)uint64_t v22 = v21;
    *(unsigned char *)(v22 + 8) = 1;
    swift_willThrow();
    CVPixelBufferUnlockBaseAddress(v1, 0);
    goto LABEL_18;
  }
  uint64_t result = sub_260FE4E10();
  __break(1u);
  return result;
}

void sub_260F8DD10(int64_t a1, int64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a2 - a1;
  if (__OFSUB__(a2, a1)) {
    goto LABEL_21;
  }
  uint64_t v7 = v5;
  if (v6)
  {
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_260F63808(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
    {
LABEL_22:
      __break(1u);
      return;
    }
    uint64_t v10 = v26;
    if (a2 <= a1) {
      int64_t v11 = a1;
    }
    else {
      int64_t v11 = a2;
    }
    int64_t v18 = v11;
    unint64_t v12 = a1;
    while (a2 != v12)
    {
      unint64_t v23 = v12;
      sub_260F8C1F4(a3, &v23, a4, a5, &v22, (uint64_t)&v24);
      if (v7)
      {
        swift_release();
        return;
      }
      uint64_t v7 = 0;
      uint64_t v13 = v24;
      char v14 = v25;
      uint64_t v26 = v10;
      unint64_t v16 = *(void *)(v10 + 16);
      unint64_t v15 = *(void *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_260F63808(v15 > 1, v16 + 1, 1);
        uint64_t v10 = v26;
      }
      *(void *)(v10 + 16) = v16 + 1;
      uint64_t v17 = v10 + 16 * v16;
      *(void *)(v17 + 32) = v13;
      *(unsigned char *)(v17 + 40) = v14;
      if (a2 < a1) {
        goto LABEL_19;
      }
      if (v18 == v12) {
        goto LABEL_20;
      }
      if (a2 == ++v12) {
        return;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
}

unint64_t sub_260F8DE8C()
{
  unint64_t result = qword_26A8EADE0;
  if (!qword_26A8EADE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A8EADE0);
  }
  return result;
}

uint64_t _s13DiffusionBase7DecoderV7modelAt010alphaModelE013configurationAC10Foundation3URLV_AISgSo20MLModelConfigurationCtcfC_0(char *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7588);
  MEMORY[0x270FA5388](v6 - 8, v7);
  BOOL v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_260FE2F90();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v10, v12);
  uint64_t v26 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v15);
  uint64_t v17 = (char *)&v24 - v16;
  int64_t v18 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  vImage_Error v28 = a1;
  char v25 = v18;
  v18((char *)&v24 - v16, a1, v10);
  type metadata accessor for ManagedMLModel();
  swift_allocObject();
  id v19 = a3;
  uint64_t v20 = ManagedMLModel.init(modelAt:configuration:name:)(v17, v19, (uint64_t)"latent color image decoder", 26, 2);
  uint64_t v27 = a2;
  sub_260F8E90C(a2, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    swift_retain();

    sub_260DF7070(v27);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v28, v10);
    sub_260DF7070((uint64_t)v9);
  }
  else
  {
    vImage_Error v21 = v26;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v26, v9, v10);
    v25(v17, v21, v10);
    swift_allocObject();
    swift_retain();
    ManagedMLModel.init(modelAt:configuration:name:)(v17, v19, (uint64_t)"latent alpha image decoder", 26, 2);
    sub_260DF7070(v27);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v22((uint64_t)v28, v10);
    v22((uint64_t)v21, v10);
  }
  swift_release();
  return v20;
}

uint64_t destroy for Decoder()
{
  swift_release();
  return swift_release();
}

void *_s13DiffusionBase7DecoderVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for Decoder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for Decoder(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for Decoder()
{
  return &type metadata for Decoder;
}

uint64_t sub_260F8E2EC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_260F8E304(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Decoder.DecoderError()
{
  return &type metadata for Decoder.DecoderError;
}

void sub_260F8E32C(uint64_t a1)
{
  uint64_t v3 = sub_260FE2F90();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260D905B0(0, &qword_26A8EACC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
  id v8 = sub_260FD5674((uint64_t)v7);
  if (!v1)
  {
    BOOL v9 = v8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    id v11 = v9;
    uint64_t v12 = (void *)sub_260FD57CC((uint64_t)&unk_26A8EADF0, v10);
    swift_release();
    id v13 = objc_msgSend(v12, sel_outputDescriptionsByName);
    sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
    uint64_t v14 = sub_260FE3EB0();

    if (!*(void *)(v14 + 16) || (unint64_t v15 = sub_260DBACB4(0x6567616D69, 0xE500000000000000), (v16 & 1) == 0))
    {

      swift_bridgeObjectRelease();
      return;
    }
    id v17 = *(id *)(*(void *)(v14 + 56) + 8 * v15);
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(v17, sel_type);
    if (v18 == (id)4)
    {
      id v28 = objc_msgSend(v17, sel_imageConstraint);
      if (v28)
      {
        vImage_Error v29 = v28;
        id v30 = objc_msgSend(v28, sel_sizeConstraint);

        id v31 = objc_msgSend(v30, sel_enumeratedImageSizes);
        sub_260D905B0(0, &qword_26A8EADF8);
        sub_260FE4400();

        return;
      }
      goto LABEL_30;
    }
    if (v18 != (id)5 || (id v19 = objc_msgSend(v17, sel_multiArrayConstraint)) == 0)
    {
LABEL_30:

      return;
    }
    uint64_t v20 = v19;
    id v21 = objc_msgSend(v19, sel_shape);

    sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
    unint64_t v22 = sub_260FE4400();

    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_260FE4E40();
      swift_bridgeObjectRelease();
      if (v40 == 4) {
        goto LABEL_11;
      }
    }
    else if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) == 4)
    {
LABEL_11:
      unint64_t v23 = v22 & 0xC000000000000001;
      if ((v22 & 0xC000000000000001) != 0)
      {
        id v24 = (id)MEMORY[0x26122B4C0](0, v22);
      }
      else
      {
        if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_33;
        }
        id v24 = *(id *)(v22 + 32);
      }
      char v25 = v24;
      id v26 = objc_msgSend(v24, sel_integerValue);

      if (v26 == (id)1)
      {
        if (v23)
        {
          id v27 = (id)MEMORY[0x26122B4C0](3, v22);
LABEL_22:
          id v32 = v27;
          id v33 = objc_msgSend(v27, sel_integerValue);

          if (v23)
          {
            id v34 = (id)MEMORY[0x26122B4C0](2, v22);
            goto LABEL_26;
          }
          if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
          {
            id v34 = *(id *)(v22 + 48);
LABEL_26:
            uint64_t v35 = v34;
            swift_bridgeObjectRelease();
            id v36 = objc_msgSend(v35, sel_integerValue);

            id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00D70]), sel_initWithPixelsWide_pixelsHigh_, v33, v36);
            if (v37)
            {
              id v38 = v37;
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
              uint64_t v39 = swift_allocObject();
              *(_OWORD *)(v39 + 16) = xmmword_260FE7020;
              *(void *)(v39 + 32) = v38;
              v41[1] = v39;
              sub_260FE4420();

              return;
            }
            goto LABEL_30;
          }
          goto LABEL_34;
        }
        if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 4uLL)
        {
          id v27 = *(id *)(v22 + 56);
          goto LABEL_22;
        }
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        return;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
}

uint64_t sub_260F8E824()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_260F8E85C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_260DACD28;
  v5[16] = a1;
  v5[17] = v4;
  return MEMORY[0x270FA2498](sub_260F8B944, 0, 0);
}

uint64_t sub_260F8E90C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_260F8E974(uint64_t a1, uint64_t a2, int32x2_t a3, int32x2_t a4)
{
  a3.i32[0] = *(_DWORD *)(v4 + 56);
  a4.i32[0] = *(_DWORD *)(v4 + 60);
  return sub_260F8C8EC(a1, a3, a4, a2, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(const vImage_Buffer **)(v4 + 64));
}

uint64_t sub_260F8E9A0(uint64_t a1)
{
  uint64_t v1 = a1 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_modelURL;
  uint64_t v2 = sub_260FE2F90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, v2);
  if (MEMORY[0x263F209E0])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_260FE7080;
    *(void *)(inited + 32) = 0xD000000000000017;
    *(void *)(inited + 40) = 0x8000000261000310;
    uint64_t v8 = sub_260FE2F30();
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v8;
    *(void *)(inited + 56) = v9;
    sub_260DAAF10(inited);
    uint64_t v10 = (void *)sub_260FE4070();
    id v11 = (void *)sub_260FE3E90();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_260F8EB6C(uint64_t result)
{
  if (result != 10)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtCV13DiffusionBase22AppleDiffusionPipeline15PowerLogMetrics__adapters);
    swift_beginAccess();
    if (!*v3)
    {
      void *v3 = MEMORY[0x263F8EE88];
      swift_bridgeObjectRelease();
    }
    unint64_t result = swift_beginAccess();
    if (*v3)
    {
      sub_260F8F588(&v4, v2);
      return swift_endAccess();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_260F8EC10()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_260FE30A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = MEMORY[0x270FA5388](v2, v4);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26A8EA928 != -1) {
    uint64_t result = swift_once();
  }
  if (qword_26A90FC48)
  {
    uint64_t v8 = qword_26A90FC50;
    sub_260FE3090();
    uint64_t v9 = *(void *)(v0 + 16);
    uint64_t v10 = *(void *)(v0 + 24);
    uint64_t v11 = MEMORY[0x263F8D310];
    uint64_t v69 = MEMORY[0x263F8D310];
    *(void *)&long long v68 = v9;
    *((void *)&v68 + 1) = v10;
    sub_260D906FC(&v68, v67);
    swift_bridgeObjectRetain();
    uint64_t v12 = MEMORY[0x263F8EE80];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = v12;
    sub_260DE0874(v67, 0xD000000000000011, 0x8000000261000870, isUniquelyReferenced_nonNull_native);
    uint64_t v14 = v66;
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(v1 + 32);
    uint64_t v16 = *(void *)(v1 + 40);
    uint64_t v69 = v11;
    *(void *)&long long v68 = v15;
    *((void *)&v68 + 1) = v16;
    sub_260D906FC(&v68, v67);
    swift_bridgeObjectRetain();
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = v14;
    sub_260DE0874(v67, 0x69746172656E6567, 0xEC00000044496E6FLL, v17);
    uint64_t v18 = v66;
    swift_bridgeObjectRelease();
    uint64_t v19 = v1 + OBJC_IVAR____TtCV13DiffusionBase22AppleDiffusionPipeline15PowerLogMetrics__startDate;
    uint64_t v69 = v2;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v68);
    id v21 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16);
    v21(boxed_opaque_existential_1Tm, v19, v2);
    sub_260D906FC(&v68, v67);
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = v18;
    sub_260DE0874(v67, 0x7461447472617473, 0xE900000000000065, v22);
    uint64_t v23 = v66;
    swift_bridgeObjectRelease();
    uint64_t v69 = v2;
    id v24 = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v68);
    v21(v24, (uint64_t)v7, v2);
    sub_260D906FC(&v68, v67);
    char v25 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = v23;
    sub_260DE0874(v67, 0x65746144646E65, 0xE700000000000000, v25);
    uint64_t v26 = v66;
    swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(v1 + OBJC_IVAR____TtCV13DiffusionBase22AppleDiffusionPipeline15PowerLogMetrics__inputPixelsCount);
    uint64_t v28 = MEMORY[0x263F8D6C8];
    if (v27 >= 1)
    {
      uint64_t v69 = MEMORY[0x263F8D6C8];
      *(void *)&long long v68 = v27;
      sub_260D906FC(&v68, v67);
      char v29 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v66 = v26;
      sub_260DE0874(v67, 0x7869507475706E69, 0xEB00000000736C65, v29);
      uint64_t v26 = v66;
      swift_bridgeObjectRelease();
    }
    uint64_t v30 = *(void *)(v1 + OBJC_IVAR____TtCV13DiffusionBase22AppleDiffusionPipeline15PowerLogMetrics__unetIterationsCount);
    if (v30 >= 1)
    {
      uint64_t v69 = v28;
      *(void *)&long long v68 = v30;
      sub_260D906FC(&v68, v67);
      char v31 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v66 = v26;
      sub_260DE0874(v67, 0x7265744974656E75, 0xEE00736E6F697461, v31);
      uint64_t v26 = v66;
      swift_bridgeObjectRelease();
    }
    uint64_t v32 = *(void *)(v1 + OBJC_IVAR____TtCV13DiffusionBase22AppleDiffusionPipeline15PowerLogMetrics__outputPixelsCount);
    if (v32 >= 1)
    {
      uint64_t v69 = v28;
      *(void *)&long long v68 = v32;
      sub_260D906FC(&v68, v67);
      char v33 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v66 = v26;
      sub_260DE0874(v67, 0x695074757074756FLL, 0xEC000000736C6578, v33);
      uint64_t v26 = v66;
      swift_bridgeObjectRelease();
    }
    id v34 = (void *)(v1 + OBJC_IVAR____TtCV13DiffusionBase22AppleDiffusionPipeline15PowerLogMetrics__adapters);
    swift_beginAccess();
    if (*v34)
    {
      uint64_t v64 = v8;
      uint64_t v35 = swift_bridgeObjectRetain();
      uint64_t v36 = sub_260F953A8(v35);
      swift_bridgeObjectRelease();
      int64_t v37 = *(void *)(v36 + 16);
      if (v37)
      {
        uint64_t v61 = v7;
        uint64_t v62 = v3;
        uint64_t v63 = v2;
        *(void *)&long long v68 = MEMORY[0x263F8EE78];
        sub_260DB45C4(0, v37, 0);
        uint64_t v38 = 0;
        uint64_t v39 = v68;
        unint64_t v40 = (unint64_t)"personalized_emoji";
        unint64_t v41 = (unint64_t)"personalized_illustration";
        unint64_t v42 = (unint64_t)"personalized_sketch";
        unint64_t v43 = (unint64_t)"personalized_style_scribble";
        unint64_t v44 = (unint64_t)"with negative count";
        do
        {
          unint64_t v45 = 0xE90000000000006ELL;
          unint64_t v46 = 0x6F6974616D696E61;
          switch(*(unsigned char *)(v36 + v38 + 32))
          {
            case 1:
              unint64_t v46 = 0xD000000000000016;
              unint64_t v45 = v40 | 0x8000000000000000;
              break;
            case 2:
              unint64_t v45 = 0xE500000000000000;
              unint64_t v46 = 0x696A6F6D65;
              break;
            case 3:
              unint64_t v46 = 0xD000000000000012;
              unint64_t v45 = v41 | 0x8000000000000000;
              break;
            case 4:
              unint64_t v45 = 0xEC0000006E6F6974;
              unint64_t v46 = 0x61727473756C6C69;
              break;
            case 5:
              unint64_t v46 = 0xD000000000000019;
              unint64_t v45 = v42 | 0x8000000000000000;
              break;
            case 6:
              unint64_t v45 = 0xE600000000000000;
              unint64_t v46 = 0x686374656B73;
              break;
            case 7:
              unint64_t v46 = 0xD000000000000013;
              unint64_t v45 = v43 | 0x8000000000000000;
              break;
            case 8:
              unint64_t v45 = 0xEE00656C62626972;
              unint64_t v46 = 0x63735F656C797473;
              break;
            case 9:
              unint64_t v46 = 0xD00000000000001BLL;
              unint64_t v45 = v44 | 0x8000000000000000;
              break;
            default:
              break;
          }
          *(void *)&long long v68 = v39;
          unint64_t v48 = *(void *)(v39 + 16);
          unint64_t v47 = *(void *)(v39 + 24);
          if (v48 >= v47 >> 1)
          {
            id v59 = (const char *)v41;
            id v60 = (const char *)v40;
            uint64_t v57 = (const char *)v43;
            id v58 = (const char *)v42;
            unint64_t v56 = (char *)v44;
            sub_260DB45C4(v47 > 1, v48 + 1, 1);
            unint64_t v44 = (unint64_t)v56;
            unint64_t v43 = (unint64_t)v57;
            unint64_t v42 = (unint64_t)v58;
            unint64_t v41 = (unint64_t)v59;
            unint64_t v40 = (unint64_t)v60;
            uint64_t v39 = v68;
          }
          ++v38;
          *(void *)(v39 + 16) = v48 + 1;
          uint64_t v49 = v39 + 16 * v48;
          *(void *)(v49 + 32) = v46;
          *(void *)(v49 + 40) = v45;
        }
        while (v37 != v38);
        swift_release();
        uint64_t v3 = v62;
        uint64_t v2 = v63;
        uint64_t v7 = v61;
      }
      else
      {
        swift_release();
        uint64_t v39 = MEMORY[0x263F8EE78];
      }
      *(void *)&long long v68 = v39;
      swift_bridgeObjectRetain();
      sub_260F89778((uint64_t *)&v68);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
      sub_260E423DC();
      uint64_t v50 = sub_260FE3F90();
      uint64_t v52 = v51;
      swift_release();
      uint64_t v69 = MEMORY[0x263F8D310];
      *(void *)&long long v68 = v50;
      *((void *)&v68 + 1) = v52;
      sub_260D906FC(&v68, v67);
      char v53 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v65 = v26;
      sub_260DE0874(v67, 0x7372657470616461, 0xE800000000000000, v53);
      uint64_t v26 = v65;
      swift_bridgeObjectRelease();
    }
    sub_260FB9898(v26);
    unint64_t v54 = (void *)sub_260FE3E90();
    swift_bridgeObjectRelease();
    PPSSendTelemetry();
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  }
  return result;
}

uint64_t sub_260F8F3BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtCV13DiffusionBase22AppleDiffusionPipeline15PowerLogMetrics__startDate;
  uint64_t v2 = sub_260FE30A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_260F8F47C()
{
  return _s15PowerLogMetricsCMa();
}

uint64_t _s15PowerLogMetricsCMa()
{
  uint64_t result = qword_26A8EAE30;
  if (!qword_26A8EAE30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_260F8F4D0()
{
  uint64_t result = sub_260FE30A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_260F8F588(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_260FE52F0();
  AppleDiffusionAdapter.rawValue.getter(a2);
  swift_bridgeObjectRetain();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_260FE5340();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_260FCE570(a2, v7, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v20;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_38;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE90000000000006ELL;
    unint64_t v10 = 0x6F6974616D696E61;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v10 = 0xD000000000000016;
        uint64_t v11 = "personalized_emoji";
        goto LABEL_13;
      case 2:
        unint64_t v9 = 0xE500000000000000;
        unint64_t v10 = 0x696A6F6D65;
        break;
      case 3:
        unint64_t v9 = 0x8000000260FFC230;
        unint64_t v10 = 0xD000000000000012;
        break;
      case 4:
        unint64_t v10 = 0x61727473756C6C69;
        unint64_t v9 = 0xEC0000006E6F6974;
        break;
      case 5:
        unint64_t v10 = 0xD000000000000019;
        uint64_t v11 = "personalized_sketch";
        goto LABEL_13;
      case 6:
        unint64_t v9 = 0xE600000000000000;
        unint64_t v10 = 0x686374656B73;
        break;
      case 7:
        unint64_t v10 = 0xD000000000000013;
        uint64_t v11 = "personalized_style_scribble";
        goto LABEL_13;
      case 8:
        unint64_t v10 = 0x63735F656C797473;
        unint64_t v9 = 0xEE00656C62626972;
        break;
      case 9:
        unint64_t v10 = 0xD00000000000001BLL;
        uint64_t v11 = "with negative count";
LABEL_13:
        unint64_t v9 = (unint64_t)v11 | 0x8000000000000000;
        break;
      default:
        break;
    }
    uint64_t v12 = 0x6F6974616D696E61;
    unint64_t v13 = 0xE90000000000006ELL;
    switch((char)a2)
    {
      case 1:
        unint64_t v14 = 0xD000000000000016;
        uint64_t v15 = "personalized_emoji";
        goto LABEL_30;
      case 2:
        unint64_t v13 = 0xE500000000000000;
        if (v10 != 0x696A6F6D65) {
          goto LABEL_32;
        }
        goto LABEL_31;
      case 3:
        unint64_t v13 = 0x8000000260FFC230;
        if (v10 != 0xD000000000000012) {
          goto LABEL_32;
        }
        goto LABEL_31;
      case 4:
        unint64_t v13 = 0xEC0000006E6F6974;
        if (v10 != 0x61727473756C6C69) {
          goto LABEL_32;
        }
        goto LABEL_31;
      case 5:
        unint64_t v14 = 0xD000000000000019;
        uint64_t v15 = "personalized_sketch";
        goto LABEL_30;
      case 6:
        unint64_t v13 = 0xE600000000000000;
        if (v10 != 0x686374656B73) {
          goto LABEL_32;
        }
        goto LABEL_31;
      case 7:
        unint64_t v14 = 0xD000000000000013;
        uint64_t v15 = "personalized_style_scribble";
        goto LABEL_30;
      case 8:
        uint64_t v12 = 0x63735F656C797473;
        unint64_t v13 = 0xEE00656C62626972;
        goto LABEL_27;
      case 9:
        unint64_t v14 = 0xD00000000000001BLL;
        uint64_t v15 = "with negative count";
LABEL_30:
        unint64_t v13 = (unint64_t)v15 | 0x8000000000000000;
        if (v10 == v14) {
          goto LABEL_31;
        }
        goto LABEL_32;
      default:
LABEL_27:
        if (v10 != v12) {
          goto LABEL_32;
        }
LABEL_31:
        if (v9 == v13)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_37;
        }
LABEL_32:
        char v16 = sub_260FE5150();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_34;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_37:
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_38:
        *a1 = a2;
        return result;
    }
  }
}

DiffusionBase::ControlNet __swiftcall ControlNet.init(modelAt:configuration:)(Swift::OpaquePointer modelAt, MLModelConfiguration configuration)
{
  uint64_t v3 = sub_260F6AB54((uint64_t)modelAt._rawValue, configuration.super.isa);
  swift_bridgeObjectRelease();

  return (DiffusionBase::ControlNet)v3;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ControlNet.loadResources()()
{
  uint64_t v2 = v1;
  unint64_t v3 = v0;
  if (v0 >> 62) {
    goto LABEL_27;
  }
  uint64_t v4 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_260FE4E40())
  {
    uint64_t v32 = v4;
    unint64_t v33 = v3;
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      uint64_t v6 = &unk_26A8EA000;
      while (1)
      {
        uint64_t v7 = MEMORY[0x26122B4C0](v5, v3);
        uint64_t v8 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        uint64_t v9 = v7;
        if (v6[291] != -1) {
          swift_once();
        }
        uint64_t v10 = sub_260FE3A10();
        __swift_project_value_buffer(v10, (uint64_t)qword_26A90FC00);
        swift_retain_n();
        uint64_t v11 = sub_260FE39F0();
        os_log_type_t v12 = sub_260FE4880();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          uint64_t v14 = swift_slowAlloc();
          uint64_t v35 = v14;
          *(_DWORD *)uint64_t v13 = 136446210;
          uint64_t v15 = sub_260FE4C50();
          *(void *)(v13 + 4) = sub_260DB2844(v15, v16, &v35);
          swift_unknownObjectRelease_n();
          uint64_t v4 = v32;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_260D82000, v11, v12, "Loading resources for %{public}s", (uint8_t *)v13, 0xCu);
          swift_arrayDestroy();
          uint64_t v17 = v14;
          unint64_t v3 = v33;
          MEMORY[0x26122CA00](v17, -1, -1);
          uint64_t v18 = v13;
          uint64_t v6 = (void *)&unk_26A8EA000;
          MEMORY[0x26122CA00](v18, -1, -1);
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        id v19 = *(id *)(v9 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
        sub_260FE4900();
        swift_unknownObjectRelease();
        if (v2) {
          goto LABEL_24;
        }

        ++v5;
        if (v8 == v4) {
          goto LABEL_28;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v20 = 0;
      while (!__OFADD__(v20, 1))
      {
        uint64_t v34 = v20 + 1;
        uint64_t v21 = *(void *)(v3 + 8 * v20 + 32);
        uint64_t v22 = qword_26A8EA918;
        swift_retain();
        if (v22 != -1) {
          swift_once();
        }
        uint64_t v23 = sub_260FE3A10();
        __swift_project_value_buffer(v23, (uint64_t)qword_26A90FC00);
        swift_retain_n();
        id v24 = sub_260FE39F0();
        os_log_type_t v25 = sub_260FE4880();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = swift_slowAlloc();
          uint64_t v27 = swift_slowAlloc();
          uint64_t v35 = v27;
          *(_DWORD *)uint64_t v26 = 136446210;
          uint64_t v28 = sub_260FE4C50();
          *(void *)(v26 + 4) = sub_260DB2844(v28, v29, &v35);
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_260D82000, v24, v25, "Loading resources for %{public}s", (uint8_t *)v26, 0xCu);
          swift_arrayDestroy();
          uint64_t v30 = v27;
          unint64_t v3 = v33;
          MEMORY[0x26122CA00](v30, -1, -1);
          uint64_t v31 = v26;
          uint64_t v4 = v32;
          MEMORY[0x26122CA00](v31, -1, -1);
        }
        else
        {

          swift_release_n();
        }
        id v19 = *(id *)(v21 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
        sub_260FE4900();
        swift_release();
        if (v2)
        {
LABEL_24:
          swift_bridgeObjectRelease();

          return;
        }

        ++v20;
        if (v34 == v4) {
          goto LABEL_28;
        }
      }
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
  }
LABEL_28:
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall ControlNet.unloadResources()()
{
  unint64_t v1 = v0;
  if (v0 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_260FE4E40();
    if (!v2) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_10;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      MEMORY[0x26122B4C0](i, v1);
    }
    else {
      swift_retain();
    }
    ManagedMLModel.unloadResources()();
    swift_release();
  }
LABEL_10:
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ControlNet.prewarmResources()()
{
  unint64_t v1 = v0;
  if (v0 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_260FE4E40();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      do
      {
        uint64_t v4 = v3 - 4;
        if ((v1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x26122B4C0](v3 - 4, v1);
          BOOL v5 = __OFADD__(v4, 1);
          uint64_t v6 = v3 - 3;
          if (v5) {
            goto LABEL_14;
          }
        }
        else
        {
          swift_retain();
          BOOL v5 = __OFADD__(v4, 1);
          uint64_t v6 = v3 - 3;
          if (v5)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        ManagedMLModel.loadResources()();
        if (v7)
        {
          swift_release();
          break;
        }
        ManagedMLModel.unloadResources()();
        swift_release();
        ++v3;
      }
      while (v6 != v2);
    }
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_260F9010C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, unint64_t a5)
{
  unint64_t v6 = v5;
  uint64_t v129 = a4;
  uint64_t v147 = a3;
  uint64_t v131 = a1;
  uint64_t v166 = *MEMORY[0x263EF8340];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  MEMORY[0x270FA5388](v9 - 8, v10);
  long long v156 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v13);
  int64_t v15 = (int64_t)&v121 - v14;
  MEMORY[0x270FA5388](v16, v17);
  uint64_t v142 = (char *)&v121 - v18;
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v19 = *(void *)(v163 - 8);
  MEMORY[0x270FA5388](v163, v20);
  unint64_t v141 = (char *)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22, v23);
  unint64_t v146 = (char *)&v121 - v24;
  MEMORY[0x270FA5388](v25, v26);
  uint64_t v28 = (char *)&v121 - v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB40);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_260FE7060;
  *(float *)(v29 + 32) = (float)a2;
  *(float *)(v29 + 36) = (float)a2;
  id v165 = (id)v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
  sub_260D90340(&qword_26A8EABD0, &qword_26A8EABC8);
  id v148 = v28;
  sub_260FE3B30();
  if (a5 >> 62) {
    goto LABEL_102;
  }
  uint64_t v30 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  uint64_t v31 = (void *)MEMORY[0x263F8EE78];
  if (!v30)
  {
LABEL_89:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v148, v163);
    return (uint64_t)v31;
  }
  unint64_t v32 = 0;
  unint64_t v33 = a5 & 0xC000000000000001;
  uint64_t v130 = *(void *)(v131 + 16);
  uint64_t v122 = a5 & 0xFFFFFFFFFFFFFF8;
  unint64_t v121 = a5 + 32;
  uint64_t v153 = (uint64_t *)(v19 + 16);
  uint64_t v151 = v19 + 56;
  BOOL v157 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  uint64_t v140 = (void (**)(char *, uint64_t, uint64_t))(v19 + 32);
  uint64_t v133 = v19 + 40;
  long long v145 = xmmword_260FE8E10;
  unint64_t v144 = 0x8000000261000F70;
  uint64_t v143 = MEMORY[0x263F8EE58] + 8;
  unint64_t v126 = a5;
  uint64_t v152 = v19;
  uint64_t v135 = v15;
  uint64_t v124 = v30;
  unint64_t v123 = a5 & 0xC000000000000001;
  while (1)
  {
    if (v33)
    {
      uint64_t v132 = MEMORY[0x26122B4C0](v32, a5);
      unint64_t v34 = v32 + 1;
      if (__OFADD__(v32, 1)) {
        goto LABEL_101;
      }
    }
    else
    {
      if (v32 >= *(void *)(v122 + 16)) {
        goto LABEL_108;
      }
      uint64_t v132 = *(void *)(v121 + 8 * v32);
      swift_retain();
      unint64_t v34 = v32 + 1;
      if (__OFADD__(v32, 1)) {
        goto LABEL_101;
      }
    }
    unint64_t v158 = v32;
    uint64_t v35 = v130;
    unint64_t v127 = v34;
    if (v130)
    {
      id v165 = (id)MEMORY[0x263F8EE78];
      sub_260FE4D30();
      uint64_t v36 = *(unsigned __int8 *)(v19 + 80);
      uint64_t v37 = sub_260D905B0(0, &qword_26A8EABD8);
      if (v158 >= *(void *)(v129 + 16)) {
        goto LABEL_104;
      }
      uint64_t v38 = v37;
      uint64_t v39 = v35;
      uint64_t v159 = v31;
      unint64_t v128 = v6;
      uint64_t v40 = (v36 + 32) & ~v36;
      uint64_t v41 = v131 + v40;
      int64_t v155 = *(void *)(v19 + 72);
      uint64_t v161 = (char *)(v129 + v40 + v155 * v158);
      uint64_t v160 = *v153;
      while (1)
      {
        unint64_t v162 = v39;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v145;
        *(void *)(inited + 32) = 0x656C706D6173;
        *(void *)(inited + 40) = 0xE600000000000000;
        unint64_t v43 = v146;
        uint64_t v44 = v163;
        unint64_t v45 = (void (*)(char *, char *, uint64_t))v160;
        ((void (*)(char *, uint64_t, uint64_t))v160)(v146, v41, v163);
        sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
        *(void *)(inited + 48) = sub_260FE4860();
        *(void *)(inited + 72) = v38;
        *(void *)(inited + 80) = 0x70657473656D6974;
        *(void *)(inited + 88) = 0xE800000000000000;
        v45(v43, v148, v44);
        *(void *)(inited + 96) = sub_260FE4860();
        *(void *)(inited + 120) = v38;
        *(void *)(inited + 128) = 0xD000000000000015;
        *(void *)(inited + 136) = v144;
        v45(v43, v147, v44);
        *(void *)(inited + 144) = sub_260FE4860();
        *(void *)(inited + 168) = v38;
        *(void *)(inited + 176) = 0x6E6C6F72746E6F63;
        *(void *)(inited + 184) = 0xEF646E6F635F7465;
        v45(v43, v161, v44);
        uint64_t v46 = sub_260FE4860();
        *(void *)(inited + 216) = v38;
        *(void *)(inited + 192) = v46;
        sub_260DAAF10(inited);
        id v47 = objc_allocWithZone(MEMORY[0x263F00D38]);
        unint64_t v48 = (void *)sub_260FE3E90();
        swift_bridgeObjectRelease();
        id v164 = 0;
        id v49 = objc_msgSend(v47, sel_initWithDictionary_error_, v48, &v164);

        id v50 = v164;
        if (!v49) {
          break;
        }
        sub_260FE4D00();
        sub_260FE4D40();
        sub_260FE4D50();
        sub_260FE4D10();
        v41 += v155;
        uint64_t v39 = v162 - 1;
        if (v162 == 1)
        {
          unint64_t v51 = (unint64_t)v165;
          unint64_t v6 = v128;
          a5 = v126;
          uint64_t v19 = v152;
          uint64_t v31 = v159;
          goto LABEL_18;
        }
      }
      uint64_t v119 = v50;
      sub_260FE2E30();

      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v19 = v152;
      uint64_t v31 = v159;
LABEL_91:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v148, v163);
      swift_bridgeObjectRelease();
      return (uint64_t)v31;
    }
    unint64_t v51 = MEMORY[0x263F8EE78];
LABEL_18:
    swift_bridgeObjectRetain();
    if (v51 >> 62)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
      sub_260FE4E30();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260FE5220();
    }
    swift_bridgeObjectRelease();
    id v52 = objc_allocWithZone(MEMORY[0x263F00D10]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
    char v53 = (void *)sub_260FE43F0();
    swift_bridgeObjectRelease();
    id v54 = objc_msgSend(v52, sel_initWithFeatureProviderArray_, v53);

    MEMORY[0x270FA5388](v55, v56);
    int64_t v15 = (int64_t)&v121;
    id v125 = v54;
    MEMORY[0x270FA5388](v57, v58);
    uint64_t v60 = (uint64_t)v59;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD18);
    sub_260FE4900();
    if (v6) {
      goto LABEL_95;
    }

    id v61 = v165;
    if (!v31[2])
    {
      id v62 = objc_msgSend(v165, sel_featuresAtIndex_, 0);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v64 = sub_260F87E7C(ObjectType);
      swift_unknownObjectRelease();
      uint64_t v65 = sub_260F91B84(v130, v64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v65;
    }
    unint64_t v66 = (unint64_t)objc_msgSend(v61, sel_count, v121);
    if ((v66 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
    }
    if (v66) {
      break;
    }
    swift_release();
LABEL_86:

    swift_unknownObjectRelease();
    unint64_t v32 = v127;
    unint64_t v33 = v123;
    if (v127 == v124) {
      goto LABEL_89;
    }
  }
  unint64_t v128 = 0;
  uint64_t v67 = 0;
  uint64_t v19 = v151;
  id v137 = v61;
  uint64_t v136 = (char *)v66;
LABEL_27:
  if (v67 == (char *)v66) {
    goto LABEL_98;
  }
  float v149 = v67 + 1;
  unint64_t v162 = (unint64_t)v67;
  uint64_t v161 = (char *)objc_msgSend(v61, sel_featuresAtIndex_, v67);
  id v68 = objc_msgSend(v161, sel_featureNames);
  uint64_t v60 = sub_260FE46E0();

  int64_t v15 = 0;
  uint64_t v69 = *(void *)(v60 + 56);
  uint64_t v154 = v60 + 56;
  uint64_t v160 = v60;
  uint64_t v70 = 1 << *(unsigned char *)(v60 + 32);
  if (v70 < 64) {
    uint64_t v71 = ~(-1 << v70);
  }
  else {
    uint64_t v71 = -1;
  }
  unint64_t v6 = v71 & v69;
  int64_t v155 = (unint64_t)(v70 + 63) >> 6;
  while (2)
  {
    uint64_t v159 = v31 + 4;
    if (v6)
    {
LABEL_33:
      unint64_t v72 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v73 = v72 | (v15 << 6);
      goto LABEL_48;
    }
    while (1)
    {
      int64_t v74 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_94;
      }
      if (v74 >= v155) {
        goto LABEL_26;
      }
      unint64_t v75 = *(void *)(v154 + 8 * v74);
      ++v15;
      if (!v75)
      {
        int64_t v15 = v74 + 1;
        if (v74 + 1 >= v155) {
          goto LABEL_26;
        }
        unint64_t v75 = *(void *)(v154 + 8 * v15);
        if (!v75)
        {
          int64_t v15 = v74 + 2;
          if (v74 + 2 >= v155) {
            goto LABEL_26;
          }
          unint64_t v75 = *(void *)(v154 + 8 * v15);
          if (!v75)
          {
            int64_t v76 = v74 + 3;
            if (v76 >= v155)
            {
LABEL_26:
              swift_unknownObjectRelease();
              swift_release();
              unint64_t v66 = (unint64_t)v136;
              uint64_t v67 = v149;
              id v61 = v137;
              if (v149 != v136) {
                goto LABEL_27;
              }
              swift_release();
              unint64_t v6 = v128;
              a5 = v126;
              uint64_t v19 = v152;
              goto LABEL_86;
            }
            unint64_t v75 = *(void *)(v154 + 8 * v76);
            if (!v75)
            {
              while (1)
              {
                int64_t v15 = v76 + 1;
                if (__OFADD__(v76, 1)) {
                  break;
                }
                if (v15 >= v155) {
                  goto LABEL_26;
                }
                unint64_t v75 = *(void *)(v154 + 8 * v15);
                ++v76;
                if (v75) {
                  goto LABEL_47;
                }
              }
              __break(1u);
LABEL_97:
              __break(1u);
LABEL_98:
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              swift_bridgeObjectRetain();
              uint64_t v30 = sub_260FE4E40();
              goto LABEL_3;
            }
            int64_t v15 = v76;
          }
        }
      }
LABEL_47:
      unint64_t v6 = (v75 - 1) & v75;
      unint64_t v73 = __clz(__rbit64(v75)) + (v15 << 6);
LABEL_48:
      uint64_t v77 = (uint64_t *)(*(void *)(v160 + 48) + 16 * v73);
      uint64_t v78 = *v77;
      uint64_t v79 = v77[1];
      swift_bridgeObjectRetain();
      uint64_t v80 = (void *)sub_260FE4070();
      uint64_t v60 = (uint64_t)objc_msgSend(v161, sel_featureValueForName_, v80);

      if (!v60) {
        goto LABEL_105;
      }
      id v81 = objc_msgSend((id)v60, sel_multiArrayValue);

      if (!v81) {
        goto LABEL_106;
      }
      if (!v158) {
        break;
      }
      if (v162 >= v31[2])
      {
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        swift_release();

        swift_bridgeObjectRelease();
        goto LABEL_91;
      }
      uint64_t v82 = v159[v162];
      if (*(void *)(v82 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v83 = sub_260DBACB4(v78, v79);
        if (v84)
        {
          uint64_t v85 = v152;
          int64_t v86 = v31;
          uint64_t v87 = v163;
          uint64_t v88 = v156;
          (*(void (**)(char *, unint64_t, uint64_t))(v152 + 16))(v156, *(void *)(v82 + 56) + *(void *)(v152 + 72) * v83, v163);
          unint64_t v89 = *(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56);
          uint64_t v90 = v88;
          uint64_t v91 = v87;
          uint64_t v31 = v86;
          uint64_t v19 = v151;
          v89(v88, 0, 1, v91);
        }
        else
        {
          uint64_t v90 = v156;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v19)(v156, 1, 1, v163);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v90 = v156;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v19)(v156, 1, 1, v163);
      }
      swift_bridgeObjectRelease();
      if ((*v157)(v90, 1, v163) == 1) {
        goto LABEL_107;
      }
      sub_260D905B0(0, &qword_26A8EABD8);
      sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
      uint64_t v92 = (void *)sub_260FE4860();
      uint64_t v60 = (uint64_t)objc_msgSend(v81, sel_count);
      id v93 = v81;
      a5 = (unint64_t)objc_msgSend(v93, sel_dataPointer);
      id v94 = v92;
      uint64_t v95 = (float *)objc_msgSend(v94, sel_dataPointer);
      if (v60 < 0)
      {
        sub_260FE4E10();
        __break(1u);
        goto LABEL_110;
      }
      vDSP_vadd((const float *)a5, 1, v95, 1, v95, 1, v60);

      if (v6) {
        goto LABEL_33;
      }
    }
    unint64_t v96 = (char *)v81;
    uint64_t v97 = (uint64_t)v142;
    sub_260FE3B70();
    a5 = *(void *)v19;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))v19)(v97, 0, 1, v163);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v31 = sub_260F7B4B8(v31);
    }
    if (v162 >= v31[2]) {
      goto LABEL_97;
    }
    unint64_t v150 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a5;
    uint64_t v98 = (char *)(v31 + 4);
    unsigned int v99 = (*v157)((char *)v97, 1, v163);
    uint64_t v159 = v31;
    if (v99 == 1)
    {
      uint64_t v139 = v96;
      sub_260F7B750(v97);
      unint64_t v100 = v162;
      uint64_t v60 = *(void *)&v98[8 * v162];
      swift_bridgeObjectRetain();
      uint64_t v138 = (void (*)(char *, uint64_t, uint64_t))sub_260DBACB4(v78, v79);
      unint64_t v101 = v31 + 4;
      a5 = v102;
      swift_bridgeObjectRelease();
      if (a5)
      {
        a5 = 8 * v100;
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v165 = (id)v101[v100];
        v101[v100] = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native) {
          sub_260FC4A90();
        }
        uint64_t v60 = (uint64_t)v165;
        unint64_t v104 = (unint64_t)v138;
        swift_bridgeObjectRelease();
        uint64_t v105 = v135;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v152 + 32))(v135, *(void *)(v60 + 56) + *(void *)(v152 + 72) * v104, v163);
        sub_260FC570C(v104, v60);
        *(void *)((char *)v101 + a5) = v60;
        swift_bridgeObjectRelease();
        uint64_t v106 = 0;
      }
      else
      {
        uint64_t v106 = 1;
        uint64_t v105 = v135;
      }
      unint64_t v96 = v139;
      v150(v105, v106, 1, v163);
      swift_bridgeObjectRelease();
      sub_260F7B750(v105);
LABEL_83:

      uint64_t v31 = v159;
      continue;
    }
    break;
  }
  uint64_t v138 = *v140;
  v138(v141, v97, v163);
  uint64_t v107 = 8 * v162;
  LODWORD(v150) = swift_isUniquelyReferenced_nonNull_native();
  id v165 = *(id *)&v98[v107];
  id v108 = v165;
  uint64_t v139 = v98;
  *(void *)&v98[v107] = 0x8000000000000000;
  a5 = sub_260DBACB4(v78, v79);
  uint64_t v110 = v108[2];
  BOOL v111 = (v109 & 1) == 0;
  uint64_t v112 = v110 + v111;
  if (__OFADD__(v110, v111)) {
    goto LABEL_99;
  }
  if (v108[3] >= v112)
  {
    if ((v150 & 1) == 0)
    {
      int v134 = v109;
      sub_260FC4A90();
      LOBYTE(v109) = v134;
    }
LABEL_78:
    uint64_t v60 = (uint64_t)v165;
    if (v109)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v152 + 40))(*((void *)v165 + 7) + *(void *)(v152 + 72) * a5, v141, v163);
    }
    else
    {
      *((void *)v165 + (a5 >> 6) + 8) |= 1 << a5;
      uint64_t v115 = (uint64_t *)(*(void *)(v60 + 48) + 16 * a5);
      *uint64_t v115 = v78;
      v115[1] = v79;
      v138((char *)(*(void *)(v60 + 56) + *(void *)(v152 + 72) * a5), (uint64_t)v141, v163);
      uint64_t v116 = *(void *)(v60 + 16);
      BOOL v117 = __OFADD__(v116, 1);
      uint64_t v118 = v116 + 1;
      if (v117) {
        goto LABEL_100;
      }
      *(void *)(v60 + 16) = v118;
      swift_bridgeObjectRetain();
    }
    *(void *)&v139[v107] = v60;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_83;
  }
  int v134 = v109;
  sub_260FC13CC(v112, (int)v150);
  unint64_t v113 = sub_260DBACB4(v78, v79);
  int v114 = v109 & 1;
  LOBYTE(v109) = v134;
  if ((v134 & 1) == v114)
  {
    a5 = v113;
    goto LABEL_78;
  }
LABEL_110:
  uint64_t result = sub_260FE5280();
  __break(1u);
  return result;
}

uint64_t sub_260F91574@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_modelDescription);
  id v4 = objc_msgSend(v3, sel_inputDescriptionsByName);

  sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
  uint64_t v5 = sub_260FE3EB0();

  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_260DBACB4(0x6E6C6F72746E6F63, 0xEF646E6F635F7465), (v7 & 1) != 0))
  {
    id v8 = *(id *)(*(void *)(v5 + 56) + 8 * v6);
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v8;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t ControlNet.inputImageShapes.getter(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_44;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  id v3 = (void *)MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v38 = (void *)MEMORY[0x263F8EE78];
    id v4 = &v38;
    sub_260FE4D30();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = 0;
      do
      {
        if (v2 == v5)
        {
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          swift_bridgeObjectRetain();
          uint64_t v2 = sub_260FE4E40();
          goto LABEL_3;
        }
        if ((v1 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = MEMORY[0x26122B4C0](v5, v1);
          uint64_t v9 = v7;
        }
        else
        {
          uint64_t v9 = *(void *)(v1 + 8 * v5 + 32);
          uint64_t v7 = swift_retain();
        }
        uint64_t v10 = *(void **)(v9 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
        MEMORY[0x270FA5388](v7, v8);
        sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
        id v11 = v10;
        sub_260FE4900();
        ++v5;
        swift_release();

        sub_260FE4D00();
        sub_260FE4D40();
        sub_260FE4D50();
        sub_260FE4D10();
      }
      while (v2 != v5);
      unint64_t v12 = (unint64_t)v38;
      swift_bridgeObjectRelease();
      id v3 = (void *)MEMORY[0x263F8EE78];
      if (!(v12 >> 62)) {
        goto LABEL_12;
      }
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_260FE4E40();
      swift_bridgeObjectRelease();
      if (!v13) {
        goto LABEL_39;
      }
LABEL_13:
      uint64_t v38 = v3;
      id v4 = &v38;
      sub_260F63868(0, v13 & ~(v13 >> 63), 0);
      if ((v13 & 0x8000000000000000) == 0)
      {
        uint64_t v14 = 0;
        unint64_t v32 = (void *)v12;
        unint64_t v33 = v12 & 0xC000000000000001;
        id v4 = v38;
        uint64_t v30 = (void *)(v12 + 32);
        uint64_t v31 = v13;
        while (1)
        {
          if (v14 == v13) {
            goto LABEL_42;
          }
          if (v33) {
            id v15 = (id)MEMORY[0x26122B4C0](v14, v12);
          }
          else {
            id v15 = (id)v30[v14];
          }
          uint64_t v36 = v15;
          uint64_t v37 = v4;
          id v16 = objc_msgSend(v15, sel_multiArrayConstraint);
          if (!v16) {
            goto LABEL_47;
          }
          uint64_t v17 = v16;
          uint64_t v34 = v14;
          id v18 = objc_msgSend(v16, sel_shape);

          sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
          unint64_t v19 = sub_260FE4400();

          if (v19 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v20 = sub_260FE4E40();
            swift_bridgeObjectRelease();
            uint64_t v35 = v6;
            if (v20)
            {
LABEL_22:
              sub_260DB4728(0, v20 & ~(v20 >> 63), 0);
              if (v20 < 0) {
                goto LABEL_43;
              }
              uint64_t v21 = 0;
              uint64_t v22 = v3;
              do
              {
                if ((v19 & 0xC000000000000001) != 0) {
                  id v23 = (id)MEMORY[0x26122B4C0](v21, v19);
                }
                else {
                  id v23 = *(id *)(v19 + 8 * v21 + 32);
                }
                uint64_t v24 = v23;
                id v25 = objc_msgSend(v23, sel_integerValue);

                unint64_t v27 = v22[2];
                unint64_t v26 = v22[3];
                if (v27 >= v26 >> 1) {
                  sub_260DB4728(v26 > 1, v27 + 1, 1);
                }
                ++v21;
                v22[2] = v27 + 1;
                v22[v27 + 4] = v25;
              }
              while (v20 != v21);

              swift_bridgeObjectRelease();
              id v3 = (void *)MEMORY[0x263F8EE78];
              uint64_t v13 = v31;
              unint64_t v12 = (unint64_t)v32;
              goto LABEL_33;
            }
          }
          else
          {
            uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
            uint64_t v35 = v6;
            if (v20) {
              goto LABEL_22;
            }
          }

          swift_bridgeObjectRelease();
          uint64_t v22 = v3;
LABEL_33:
          id v4 = v37;
          uint64_t v38 = v37;
          unint64_t v1 = v37[2];
          unint64_t v28 = v37[3];
          if (v1 >= v28 >> 1)
          {
            sub_260F63868(v28 > 1, v1 + 1, 1);
            id v4 = v38;
          }
          uint64_t v14 = v34 + 1;
          v4[2] = v1 + 1;
          v4[v1 + 4] = v22;
          uint64_t v6 = v35;
          if (v34 + 1 == v13)
          {
            swift_bridgeObjectRelease();
            return (uint64_t)v4;
          }
        }
      }
    }
    __break(1u);
LABEL_47:
    __break(1u);

    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    unint64_t v12 = MEMORY[0x263F8EE78];
    if (MEMORY[0x263F8EE78] >> 62) {
      goto LABEL_38;
    }
LABEL_12:
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13) {
      goto LABEL_13;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void sub_260F91B50()
{
}

void sub_260F91B6C()
{
}

ValueMetadata *type metadata accessor for ControlNet()
{
  return &type metadata for ControlNet;
}

uint64_t sub_260F91B84(uint64_t a1, uint64_t a2)
{
  uint64_t v71 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v77 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  MEMORY[0x270FA5388](v7 - 8, v8);
  uint64_t v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11, v12);
  uint64_t v14 = (char *)&v70 - v13;
  unint64_t v15 = sub_260F5BA9C(MEMORY[0x263F8EE78]);
  uint64_t v16 = *(void *)(a2 + 64);
  uint64_t v74 = a2 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v75 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v76 = v4;
  unint64_t v83 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v78 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  uint64_t v79 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t v72 = v4 + 40;
  uint64_t v81 = a2;
  uint64_t v20 = (void *)v15;
  swift_bridgeObjectRetain();
  int64_t v21 = 0;
  uint64_t v82 = v3;
  unint64_t v73 = v10;
  uint64_t v80 = v14;
  while (1)
  {
    uint64_t v88 = v20;
    if (v19)
    {
      unint64_t v23 = __clz(__rbit64(v19));
      uint64_t v24 = (v19 - 1) & v19;
      unint64_t v25 = v23 | (v21 << 6);
      goto LABEL_23;
    }
    int64_t v26 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      goto LABEL_58;
    }
    if (v26 >= v75)
    {
LABEL_55:
      swift_release();
      return sub_260FB6878((uint64_t)v20, v71);
    }
    unint64_t v27 = *(void *)(v74 + 8 * v26);
    ++v21;
    if (!v27)
    {
      int64_t v21 = v26 + 1;
      if (v26 + 1 >= v75) {
        goto LABEL_55;
      }
      unint64_t v27 = *(void *)(v74 + 8 * v21);
      if (!v27)
      {
        int64_t v21 = v26 + 2;
        if (v26 + 2 >= v75) {
          goto LABEL_55;
        }
        unint64_t v27 = *(void *)(v74 + 8 * v21);
        if (!v27) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v24 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_23:
    uint64_t v29 = *(void *)(v81 + 56);
    uint64_t v30 = (uint64_t *)(*(void *)(v81 + 48) + 16 * v25);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    unint64_t v86 = v24;
    uint64_t v87 = v31;
    unint64_t v33 = *(void **)(v29 + 8 * v25);
    int v90 = 0;
    swift_bridgeObjectRetain();
    id v34 = v33;
    id v35 = objc_msgSend(v34, sel_multiArrayValue);
    if (!v35) {
      goto LABEL_61;
    }
    uint64_t v36 = v35;
    id v84 = v34;
    id v37 = objc_msgSend(v35, sel_shape);

    sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
    unint64_t v38 = sub_260FE4400();

    if (v38 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_260FE4E40();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v20 = v88;
    int64_t v85 = v21;
    if (v39)
    {
      unint64_t v89 = (void *)MEMORY[0x263F8EE78];
      sub_260DB4728(0, v39 & ~(v39 >> 63), 0);
      if (v39 < 0)
      {
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      uint64_t v40 = 0;
      uint64_t v41 = v89;
      do
      {
        if ((v38 & 0xC000000000000001) != 0) {
          id v42 = (id)MEMORY[0x26122B4C0](v40, v38);
        }
        else {
          id v42 = *(id *)(v38 + 8 * v40 + 32);
        }
        unint64_t v43 = v42;
        id v44 = objc_msgSend(v42, sel_integerValue);

        unint64_t v89 = v41;
        unint64_t v46 = v41[2];
        unint64_t v45 = v41[3];
        if (v46 >= v45 >> 1)
        {
          sub_260DB4728(v45 > 1, v46 + 1, 1);
          uint64_t v41 = v89;
        }
        ++v40;
        void v41[2] = v46 + 1;
        v41[v46 + 4] = v44;
      }
      while (v39 != v40);
      swift_bridgeObjectRelease();
      uint64_t v20 = v88;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
    uint64_t v47 = (uint64_t)v80;
    uint64_t v48 = v82;
    sub_260FE3C20();
    id v49 = *v83;
    (*v83)(v47, 0, 1, v48);
    if ((*v79)(v47, 1, v48) != 1)
    {
      uint64_t v55 = *v78;
      (*v78)(v77, v47, v48);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v89 = v20;
      unint64_t v58 = sub_260DBACB4(v87, v32);
      uint64_t v59 = v20[2];
      BOOL v60 = (v57 & 1) == 0;
      uint64_t v61 = v59 + v60;
      if (__OFADD__(v59, v60)) {
        goto LABEL_57;
      }
      char v62 = v57;
      if (v20[3] >= v61)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v20 = v89;
          if ((v57 & 1) == 0) {
            goto LABEL_52;
          }
        }
        else
        {
          sub_260FC4A90();
          uint64_t v20 = v89;
          if ((v62 & 1) == 0) {
            goto LABEL_52;
          }
        }
      }
      else
      {
        sub_260FC13CC(v61, isUniquelyReferenced_nonNull_native);
        unint64_t v63 = sub_260DBACB4(v87, v32);
        if ((v62 & 1) != (v64 & 1)) {
          goto LABEL_62;
        }
        unint64_t v58 = v63;
        uint64_t v20 = v89;
        if ((v62 & 1) == 0)
        {
LABEL_52:
          v20[(v58 >> 6) + 8] |= 1 << v58;
          uint64_t v65 = (void *)(v20[6] + 16 * v58);
          void *v65 = v87;
          v65[1] = v32;
          v55((char *)(v20[7] + *(void *)(v76 + 72) * v58), (uint64_t)v77, v82);
          uint64_t v66 = v20[2];
          BOOL v67 = __OFADD__(v66, 1);
          uint64_t v68 = v66 + 1;
          if (v67) {
            goto LABEL_59;
          }
          v20[2] = v68;
          swift_bridgeObjectRetain();
          goto LABEL_54;
        }
      }
      (*(void (**)(unint64_t, char *, uint64_t))(v76 + 40))(v20[7] + *(void *)(v76 + 72) * v58, v77, v82);
LABEL_54:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_260F7B750(v47);
    swift_bridgeObjectRetain();
    unint64_t v50 = sub_260DBACB4(v87, v32);
    char v52 = v51;
    swift_bridgeObjectRelease();
    uint64_t v53 = (uint64_t)v73;
    if (v52)
    {
      int v54 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v89 = v20;
      if (!v54)
      {
        sub_260FC4A90();
        uint64_t v20 = v89;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v76 + 32))(v53, v20[7] + *(void *)(v76 + 72) * v50, v48);
      sub_260FC570C(v50, (uint64_t)v20);
      swift_bridgeObjectRelease();
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v22 = 1;
    }
    v49(v53, v22, 1, v48);
    swift_bridgeObjectRelease();
    sub_260F7B750(v53);

LABEL_6:
    int64_t v21 = v85;
    unint64_t v19 = v86;
  }
  int64_t v28 = v26 + 3;
  if (v28 >= v75) {
    goto LABEL_55;
  }
  unint64_t v27 = *(void *)(v74 + 8 * v28);
  if (v27)
  {
    int64_t v21 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v21 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v21 >= v75) {
      goto LABEL_55;
    }
    unint64_t v27 = *(void *)(v74 + 8 * v21);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  uint64_t result = sub_260FE5280();
  __break(1u);
  return result;
}

uint64_t PNDMScheduler.__allocating_init(stepCount:trainStepCount:betaSchedule:betaStart:betaEnd:)(int64_t a1, int64_t a2, char a3, float a4, float a5)
{
  char v9 = a3 & 1;
  uint64_t v10 = swift_allocObject();
  PNDMScheduler.init(stepCount:trainStepCount:betaSchedule:betaStart:betaEnd:)(a1, a2, v9, a4, a5);
  return v10;
}

void sub_260F92368(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_260F63828(0, v6, 0);
  int64_t v28 = v5;
  uint64_t v30 = a2;
  uint64_t v31 = a1;
  unint64_t v29 = v4;
  if (v6)
  {
    uint64_t v7 = (float *)(a1 + 32);
    uint64_t v8 = (float *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v9 = v6;
    while (v4)
    {
      if (!v5) {
        goto LABEL_26;
      }
      float v10 = *v8;
      float v11 = logf(*v7);
      float v12 = logf(v10);
      unint64_t v14 = *(void *)(v32 + 16);
      unint64_t v13 = *(void *)(v32 + 24);
      if (v14 >= v13 >> 1) {
        sub_260F63828(v13 > 1, v14 + 1, 1);
      }
      --v5;
      *(void *)(v32 + 16) = v14 + 1;
      *(float *)(v32 + 4 * v14 + 32) = v11 - v12;
      --v4;
      ++v8;
      ++v7;
      if (!--v9) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_13:
    if (v29 <= v28)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v15 = 0;
    if (v6 <= v28) {
      int64_t v16 = v28;
    }
    else {
      int64_t v16 = v6;
    }
    int64_t v17 = v16 - v6;
    unint64_t v18 = v29 - v6;
    int64_t v19 = v28 - v6;
    uint64_t v20 = 4 * v6 + 32;
    uint64_t v21 = v31 + v20;
    uint64_t v22 = v30 + v20;
    while (v18 != v15)
    {
      if (v19 == v15) {
        goto LABEL_24;
      }
      if (v17 == v15) {
        goto LABEL_28;
      }
      float v23 = *(float *)(v22 + 4 * v15);
      float v24 = logf(*(float *)(v21 + 4 * v15));
      float v25 = logf(v23);
      unint64_t v27 = *(void *)(v32 + 16);
      unint64_t v26 = *(void *)(v32 + 24);
      if (v27 >= v26 >> 1) {
        sub_260F63828(v26 > 1, v27 + 1, 1);
      }
      *(void *)(v32 + 16) = v27 + 1;
      *(float *)(v32 + 4 * v27 + 32) = v24 - v25;
      if (v18 == ++v15) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t Scheduler.addNoise(originalSample:noise:strength:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(uint64_t, uint64_t), float a5)
{
  float v11 = a4[2];
  uint64_t v12 = v11(a3, (uint64_t)a4);
  uint64_t result = v11(a3, (uint64_t)a4);
  float v14 = (float)result * a5;
  if ((~LODWORD(v14) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v14 <= -9.2234e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v14 >= 9.2234e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (__OFSUB__(v12, (uint64_t)v14))
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v15 = (v12 - (uint64_t)v14) & ~((v12 - (uint64_t)v14) >> 63);
  uint64_t v16 = v11(a3, (uint64_t)a4);
  if (v15 >= v16)
  {
LABEL_10:
    double v20 = MEMORY[0x270FA5388](v16, v17);
    v22[2] = a3;
    void v22[3] = a4;
    v22[4] = v5;
    int v23 = v21;
    int v24 = LODWORD(v20);
    uint64_t v25 = a1;
    return sub_260F5C944((void (*)(uint64_t))sub_260F93DF0, (uint64_t)v22, a2);
  }
  uint64_t v18 = a4[7](a3, (uint64_t)a4);
  uint64_t result = a4[3](a3, (uint64_t)a4);
  if ((unint64_t)v15 >= *(void *)(result + 16)) {
    goto LABEL_15;
  }
  unint64_t v19 = *(void *)(result + 8 * v15 + 32);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v19 & 0x8000000000000000) != 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v19 < *(void *)(v18 + 16))
  {
    uint64_t v16 = swift_bridgeObjectRelease();
    goto LABEL_10;
  }
LABEL_17:
  __break(1u);
  return result;
}

float Scheduler.initNoiseSigma.getter()
{
  return 1.0;
}

uint64_t sub_260F92798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_260F927B0(a1, a2, (uint64_t)sub_260F969FC, a3);
}

uint64_t sub_260F927B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  MEMORY[0x270FA5388](v8 - 8, v9);
  float v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = *(void *)(a2 + 16);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = (void *)v18;
  if (!v16)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v15, 1, 1, v17);
    goto LABEL_6;
  }
  uint64_t v31 = a1;
  uint64_t v32 = a4;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v30 = a2;
  uint64_t v21 = a2 + ((v20 + 32) & ~v20);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v33 = a3;
  id v34 = v22;
  v22(v15, v21, v17);
  id v35 = (void (*)(char *, void, uint64_t, uint64_t))v19[7];
  v35(v15, 0, 1, v17);
  int v23 = (uint64_t (*)(char *, uint64_t, uint64_t))v19[6];
  uint64_t result = v23(v15, 1, v17);
  if (result == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_260F93E1C();
  uint64_t v29 = sub_260FE3BD0();
  uint64_t v25 = (void (*)(char *, uint64_t))v19[1];
  v25(v15, v17);
  v34(v11, v21, v17);
  v35(v11, 0, 1, v17);
  uint64_t result = v23(v11, 1, v17);
  if (result != 1)
  {
    sub_260FE3B20();
    uint64_t v26 = ((uint64_t (*)(char *, uint64_t))v25)(v11, v17);
    MEMORY[0x270FA5388](v26, v27);
    uint64_t v28 = v31;
    *(&v29 - 4) = v30;
    *(&v29 - 3) = v28;
    *(&v29 - 2) = v29;
    return sub_260FE3AE0();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t Scheduler.weightedSum(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = (void *)v16;
  if (!v14)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v13, 1, 1, v15);
    goto LABEL_6;
  }
  uint64_t v29 = a1;
  uint64_t v30 = a3;
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v28 = a2;
  uint64_t v19 = a2 + ((v18 + 32) & ~v18);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v31(v13, v19, v15);
  uint64_t v32 = (void (*)(char *, void, uint64_t, uint64_t))v17[7];
  v32(v13, 0, 1, v15);
  uint64_t v20 = (uint64_t (*)(char *, uint64_t, uint64_t))v17[6];
  uint64_t result = v20(v13, 1, v15);
  if (result == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_260F93E1C();
  uint64_t v27 = sub_260FE3BD0();
  uint64_t v22 = (void (*)(char *, uint64_t))v17[1];
  v22(v13, v15);
  v31(v9, v19, v15);
  v32(v9, 0, 1, v15);
  uint64_t result = v20(v9, 1, v15);
  if (result != 1)
  {
    sub_260FE3B20();
    uint64_t v23 = ((uint64_t (*)(char *, uint64_t))v22)(v9, v15);
    MEMORY[0x270FA5388](v23, v24);
    uint64_t v25 = v29;
    *(&v26 - 4) = v28;
    *(&v26 - 3) = v25;
    *(&v26 - 2) = v27;
    return sub_260FE3AE0();
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_260F92D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void **)a1;
  if (v7)
  {
    uint64_t v8 = *(void *)(a1 + 8);
    if (v8 < 0)
    {
      __break(1u);
      goto LABEL_11;
    }
    if (v8) {
      bzero(v7, 4 * v8);
    }
  }
  unint64_t v9 = *(void *)(a3 + 16);
  if (!v9) {
    return;
  }
  if (v9 > *(void *)(a4 + 16))
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v10 = a4 + 32;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v13 = a3
      + ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80));
  uint64_t v14 = *(void *)(*(void *)(v11 - 8) + 72);
  do
  {
    v10 += 8;
    MEMORY[0x270FA5388](v11, v12);
    uint64_t v11 = sub_260FE3AF0();
    v13 += v14;
    --v9;
  }
  while (v9);
}

uint64_t sub_260F92EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, float a4@<S0>, float a5@<S1>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7060;
  *(double *)(inited + 32) = a4;
  *(double *)(inited + 40) = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_260FE7060;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16);
  v16(v15, a2, v10);
  v16(v15 + v12, a1, v10);
  Scheduler.weightedSum(_:_:)(inited, v14, a3);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return swift_setDeallocating();
}

uint64_t sub_260F93054(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0)
  {
    uint64_t v10 = *(void *)(v2 + 64);
    swift_bridgeObjectRetain();
    return v10;
  }
  uint64_t v4 = *(void *)(v2 + 24);
  float v5 = *(float *)&a1 * (float)v4;
  if ((~LODWORD(v5) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v5 <= -9.2234e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 >= 9.2234e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  BOOL v6 = __OFSUB__(v4, (uint64_t)v5);
  uint64_t v7 = v4 - (uint64_t)v5;
  if (v6)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v3 = v7 & ~(v7 >> 63);
  uint64_t v1 = *(void *)(v2 + 64);
  unint64_t v2 = *(void *)(v1 + 16);
  if (v2 < v3)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_260F95480(v1, v1 + 32, v3, (2 * v2) | 1);
    swift_bridgeObjectRelease();
    return v10;
  }
  sub_260FE5230();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x263F8EE78];
  }
  uint64_t v9 = *(void *)(v8 + 16);
  swift_release();
  if (v9 != v2 - v3) {
    goto LABEL_19;
  }
  uint64_t v10 = swift_dynamicCastClass();
  swift_bridgeObjectRelease();
  if (!v10)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v10;
}

uint64_t sub_260F931B4(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0)
  {
    uint64_t v10 = *(void *)(v2 + 56);
    swift_bridgeObjectRetain();
    return v10;
  }
  uint64_t v4 = *(void *)(v2 + 24);
  float v5 = *(float *)&a1 * (float)v4;
  if ((~LODWORD(v5) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v5 <= -9.2234e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 >= 9.2234e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  BOOL v6 = __OFSUB__(v4, (uint64_t)v5);
  uint64_t v7 = v4 - (uint64_t)v5;
  if (v6)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v3 = v7 & ~(v7 >> 63);
  uint64_t v1 = *(void *)(v2 + 56);
  unint64_t v2 = *(void *)(v1 + 16);
  if (v2 < v3)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_260F95480(v1, v1 + 32, v3, (2 * v2) | 1);
    swift_bridgeObjectRelease();
    return v10;
  }
  sub_260FE5230();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x263F8EE78];
  }
  uint64_t v9 = *(void *)(v8 + 16);
  swift_release();
  if (v9 != v2 - v3) {
    goto LABEL_19;
  }
  uint64_t v10 = swift_dynamicCastClass();
  swift_bridgeObjectRelease();
  if (!v10)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v10;
}

uint64_t Scheduler.calculateTimesteps(strength:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unint64_t v4 = a2;
  if ((a1 & 0x100000000) == 0)
  {
    float v5 = *(float *)&a1;
    BOOL v6 = *(uint64_t (**)(unint64_t, uint64_t))(a3 + 16);
    unint64_t v7 = v6(a2, a3);
    float v8 = v5 * (float)v6(v4, v3);
    if ((~LODWORD(v8) & 0x7F800000) != 0)
    {
      if (v8 > -9.2234e18)
      {
        if (v8 < 9.2234e18)
        {
          if (!__OFSUB__(v7, (uint64_t)v8))
          {
            unint64_t v7 = (v7 - (uint64_t)v8) & ~((uint64_t)(v7 - (uint64_t)v8) >> 63);
            uint64_t v9 = (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 24))(v4, v3);
            unint64_t v4 = *(void *)(v9 + 16);
            if (v4 >= v7)
            {
              uint64_t v3 = v9;
              sub_260FE5230();
              swift_unknownObjectRetain_n();
              uint64_t v10 = swift_dynamicCastClass();
              if (!v10)
              {
                swift_bridgeObjectRelease();
                uint64_t v10 = MEMORY[0x263F8EE78];
              }
              uint64_t v11 = *(void *)(v10 + 16);
              swift_release();
              if (v11 == v4 - v7)
              {
                uint64_t v12 = swift_dynamicCastClass();
                swift_bridgeObjectRelease();
                if (!v12)
                {
                  swift_bridgeObjectRelease();
                  return MEMORY[0x263F8EE78];
                }
                return v12;
              }
LABEL_21:
              swift_bridgeObjectRelease();
              uint64_t v12 = sub_260F95480(v3, v3 + 32, v7, (2 * v4) | 1);
              swift_bridgeObjectRelease();
              return v12;
            }
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v14 = *(uint64_t (**)(unint64_t, uint64_t))(a3 + 24);
  return v14(a2, a3);
}

BOOL static BetaSchedule.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t BetaSchedule.hash(into:)()
{
  return sub_260FE5300();
}

uint64_t BetaSchedule.hashValue.getter()
{
  return sub_260FE5340();
}

uint64_t PNDMScheduler.trainStepCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t PNDMScheduler.inferenceStepCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t PNDMScheduler.betas.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PNDMScheduler.alphas.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PNDMScheduler.alphasCumProd.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PNDMScheduler.timeSteps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PNDMScheduler.alpha_t.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PNDMScheduler.sigma_t.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PNDMScheduler.lambda_t.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PNDMScheduler.modelOutputs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PNDMScheduler.init(stepCount:trainStepCount:betaSchedule:betaStart:betaEnd:)(int64_t a1, int64_t a2, char a3, float a4, float a5)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  MEMORY[0x270FA5388](v12 - 8, v13);
  uint64_t v70 = (char *)v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = MEMORY[0x263F8EE78];
  v5[11] = MEMORY[0x263F8EE78];
  uint64_t v16 = (char *)v5 + OBJC_IVAR____TtC13DiffusionBase13PNDMScheduler_currentSample;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 56);
  uint64_t v69 = v17;
  v67[1] = v18 + 56;
  v68(v16, 1, 1);
  uint64_t v5[2] = a2;
  void v5[3] = a1;
  uint64_t v71 = v5;
  if (a3)
  {
    float v20 = fabsf(sqrtf(a4));
    if (a4 == -INFINITY) {
      float v20 = INFINITY;
    }
    float v21 = fabsf(sqrtf(a5));
    if (a5 == -INFINITY) {
      float v22 = INFINITY;
    }
    else {
      float v22 = v21;
    }
    int64_t v23 = sub_260F93E98(a2, v20, v22);
    int64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      v72[0] = v15;
      sub_260F63828(0, v24, 0);
      unint64_t v15 = 0;
      int64_t v19 = v72[0];
      unint64_t v6 = *(void *)(v72[0] + 16);
      do
      {
        float v25 = *(float *)(v23 + 4 * v15 + 32);
        v72[0] = v19;
        unint64_t v26 = *(void *)(v19 + 24);
        if (v6 >= v26 >> 1)
        {
          sub_260F63828(v26 > 1, v6 + 1, 1);
          int64_t v19 = v72[0];
        }
        ++v15;
        *(void *)(v19 + 16) = v6 + 1;
        *(float *)(v19 + 4 * v6++ + 32) = v25 * v25;
      }
      while (v24 != v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      int64_t v19 = MEMORY[0x263F8EE78];
    }
  }
  else
  {
    int64_t v19 = sub_260F93E98(a2, a4, a5);
  }
  v71[4] = v19;
  unint64_t v27 = *(void *)(v19 + 16);
  unint64_t v28 = MEMORY[0x263F8EE78];
  if (v27)
  {
    v72[0] = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_260F63828(0, v27, 0);
    unint64_t v15 = 0;
    uint64_t v29 = (char *)v72[0];
    unint64_t v6 = *(void *)(v72[0] + 16);
    do
    {
      float v30 = *(float *)(v19 + 4 * v15 + 32);
      v72[0] = v29;
      unint64_t v31 = *((void *)v29 + 3);
      if (v6 >= v31 >> 1)
      {
        sub_260F63828(v31 > 1, v6 + 1, 1);
        uint64_t v29 = (char *)v72[0];
      }
      ++v15;
      *((void *)v29 + 2) = v6 + 1;
      *(float *)&v29[4 * v6++ + 32] = 1.0 - v30;
    }
    while (v27 != v15);
    swift_bridgeObjectRelease();
    unint64_t v28 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v29 = (char *)MEMORY[0x263F8EE78];
  }
  v71[5] = v29;
  uint64_t v32 = *((void *)v29 + 2);
  uint64_t v33 = (void *)(v32 - 1);
  if (v32 == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    if (!v32) {
      goto LABEL_67;
    }
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v29 = sub_260F7B4A4((uint64_t)v29);
    }
    unint64_t v34 = 0;
    do
    {
      if (v34 >= *((void *)v29 + 2)) {
        goto LABEL_66;
      }
      *(float *)&v29[4 * v34 + 36] = *(float *)&v29[4 * v34 + 32] * *(float *)&v29[4 * v34 + 36];
      ++v34;
    }
    while (v33 != (void *)v34);
  }
  v71[6] = v29;
  if (!a1) {
    goto LABEL_68;
  }
  if (a2 != 0x8000000000000000 || a1 != -1)
  {
    if (a1 < 0) {
      goto LABEL_69;
    }
    float v35 = (float)(a2 / a1);
    v72[0] = v28;
    swift_bridgeObjectRetain();
    uint64_t v33 = v72;
    uint64_t v36 = sub_260DB4728(0, a1, 0);
    unint64_t v15 = 0;
    a2 = v72[0];
    unint64_t v6 = 2139095040;
    unint64_t v27 = 3741319169;
    do
    {
      float v38 = roundf(v35 * (float)(uint64_t)v15);
      if ((~LODWORD(v38) & 0x7F800000) == 0)
      {
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
      if (v38 <= -9.2234e18) {
        goto LABEL_61;
      }
      if (v38 >= 9.2234e18) {
        goto LABEL_62;
      }
      uint64_t v39 = (uint64_t)v38 + 1;
      if (__OFADD__((uint64_t)v38, 1)) {
        goto LABEL_63;
      }
      v72[0] = a2;
      unint64_t v28 = *(void *)(a2 + 16);
      unint64_t v40 = *(void *)(a2 + 24);
      if (v28 >= v40 >> 1)
      {
        uint64_t v33 = v72;
        uint64_t v36 = sub_260DB4728(v40 > 1, v28 + 1, 1);
        a2 = v72[0];
      }
      ++v15;
      *(void *)(a2 + 16) = v28 + 1;
      int64_t v19 = a2 + 32;
      *(void *)(a2 + 32 + 8 * v28) = v39;
    }
    while (a1 != v15);
    v72[0] = v29;
    uint64_t v41 = *((void *)v29 + 2);
    MEMORY[0x270FA5388](v36, v37);
    v67[-2] = v72;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_260F95AB8(v41, (uint64_t (*)(void *, uint64_t *))sub_260F96358);
    swift_bridgeObjectRelease();
    unint64_t v6 = (unint64_t)v71;
    v71[8] = v42;
    unint64_t v43 = *(void **)(v6 + 48);
    v44.i32[0] = 1.0;
    v72[0] = sub_260FB6784(v43[2], v44);
    unint64_t v73 = v43;
    uint64_t v45 = *(void *)(v72[0] + 16);
    MEMORY[0x270FA5388](v72[0], v46);
    v67[-2] = v72;
    v67[-1] = &v73;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_260F95AB8(v45, (uint64_t (*)(void *, uint64_t *))sub_260F963A4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v72[0] = v47;
    uint64_t v49 = MEMORY[0x270FA5388](*(void *)(v47 + 16), v48);
    v67[-2] = v72;
    uint64_t v50 = sub_260F95AB8(v49, (uint64_t (*)(void *, uint64_t *))sub_260F969E4);
    swift_bridgeObjectRelease();
    *(void *)(v6 + 72) = v50;
    uint64_t v51 = *(void *)(v6 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_260F92368(v51, v50);
    uint64_t v53 = v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v6 + 80) = v53;
    unint64_t v73 = (void *)MEMORY[0x263F8EE78];
    unint64_t v27 = *(void *)(a2 + 16);
    unint64_t v15 = v27 - 1;
    if (v27) {
      unint64_t v54 = v27 - 1;
    }
    else {
      unint64_t v54 = 0;
    }
    unint64_t v55 = (2 * v54) | 1;
    swift_bridgeObjectRetain();
    sub_260FCFD2C(a2, a2 + 32, 0, v55);
    swift_bridgeObjectRelease();
    uint64_t v33 = v73;
    unint64_t v28 = v73[2];
    if (!v28) {
      goto LABEL_70;
    }
    unint64_t v6 = v73[v28 + 3];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_71;
    }
    while (1)
    {
      unint64_t v28 = v33[2];
      unint64_t v56 = v33[3];
      int64_t v57 = v28 + 1;
      if (v28 >= v56 >> 1) {
        uint64_t v33 = sub_260DB17FC((void *)(v56 > 1), v28 + 1, 1, v33);
      }
      void v33[2] = v57;
      v33[v28 + 4] = v6;
      if (!v27) {
        goto LABEL_75;
      }
      unint64_t v58 = *(void *)(a2 + 16);
      if (v27 > v58)
      {
        __break(1u);
      }
      else
      {
        unint64_t v6 = *(void *)(v19 + 8 * v15);
        swift_bridgeObjectRelease();
        unint64_t v15 = v33[2];
        unint64_t v58 = v33[3];
        int64_t v57 = v15 + 1;
        if (v15 < v58 >> 1) {
          goto LABEL_53;
        }
      }
      uint64_t v33 = sub_260DB17FC((void *)(v58 > 1), v57, 1, v33);
LABEL_53:
      uint64_t v59 = v33 + 4;
      void v33[2] = v57;
      v33[v15 + 4] = v6;
      unint64_t v73 = v33;
      if (!v15)
      {
LABEL_59:
        uint64_t v64 = (uint64_t)v70;
        unint64_t v63 = v71;
        v71[7] = v33;
        v63[12] = 0;
        v63[13] = MEMORY[0x263F8EE78];
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v68)(v64, 1, 1, v69);
        uint64_t v65 = (uint64_t)v63 + OBJC_IVAR____TtC13DiffusionBase13PNDMScheduler_currentSample;
        swift_beginAccess();
        sub_260F963F4(v64, v65);
        swift_endAccess();
        swift_bridgeObjectRelease();
        return (uint64_t)v63;
      }
      unint64_t v60 = 0;
      while (1)
      {
        unint64_t v61 = v33[2];
        if (v60 >= v61) {
          break;
        }
        if (v15 >= v61) {
          goto LABEL_65;
        }
        uint64_t v62 = v59[v60];
        v59[v60] = v59[v15];
        v59[v15] = v62;
        if ((uint64_t)++v60 >= (uint64_t)--v15)
        {
          unint64_t v73 = v33;
          goto LABEL_59;
        }
      }
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      uint64_t v33 = sub_260DB17FC(0, v28 + 1, 1, v33);
    }
  }
  __break(1u);
LABEL_75:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_260F93DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_260F92EB4(a1, *(void *)(v2 + 48), a2, *(float *)(v2 + 40), *(float *)(v2 + 44));
}

unint64_t sub_260F93E1C()
{
  unint64_t result = qword_26A8E84B8;
  if (!qword_26A8E84B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8E6BF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E84B8);
  }
  return result;
}

void sub_260F93E78(uint64_t a1, uint64_t a2)
{
  sub_260F92D38(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

int64_t sub_260F93E98(int64_t result, float a2, float a3)
{
  uint64_t v3 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  int64_t v4 = result;
  if (result < 0)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  unint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    float v6 = (float)(a3 - a2) / (float)v3;
    int64_t v10 = MEMORY[0x263F8EE78];
    sub_260F63828(0, v4, 0);
    uint64_t v7 = 0;
    unint64_t result = v10;
    unint64_t v8 = *(void *)(v10 + 16);
    do
    {
      int64_t v11 = result;
      unint64_t v9 = *(void *)(result + 24);
      if (v8 >= v9 >> 1)
      {
        sub_260F63828(v9 > 1, v8 + 1, 1);
        unint64_t result = v11;
      }
      *(void *)(result + 16) = v8 + 1;
      *(float *)(result + 4 * v8++ + 32) = (float)(v6 * (float)v7++) + a2;
    }
    while (v4 != v7);
  }
  return result;
}

uint64_t PNDMScheduler.step(output:timeStep:sample:)@<X0>(char *a1@<X0>, unint64_t a2@<X1>, char **a3@<X2>, uint64_t a4@<X8>)
{
  float v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  MEMORY[0x270FA5388](v10 - 8, v11);
  uint64_t v113 = (uint64_t)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v14);
  uint64_t v16 = (char *)&v112 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v18 = *(char **)(v17 - 8);
  MEMORY[0x270FA5388](v17, v19);
  unint64_t v121 = (char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21, v22);
  uint64_t v118 = (char **)((char *)&v112 - v23);
  MEMORY[0x270FA5388](v24, v25);
  MEMORY[0x270FA5388](v26, v27);
  uint64_t v29 = (char *)&v112 - v28;
  MEMORY[0x270FA5388](v30, v31);
  uint64_t v125 = (uint64_t)&v112 - v32;
  v37.n128_f64[0] = MEMORY[0x270FA5388](v33, v34);
  float v38 = (char *)&v112 - v35;
  uint64_t v39 = v5[3];
  if (!v39)
  {
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v40 = v5[2];
  if (v40 == 0x8000000000000000 && v39 == -1) {
    goto LABEL_62;
  }
  uint64_t v116 = a4;
  a4 = v40 / v39;
  BOOL v41 = __OFSUB__(a2, v40 / v39);
  unint64_t v42 = a2 - v40 / v39;
  if (v41) {
    goto LABEL_56;
  }
  BOOL v117 = (char *)v42;
  int v114 = v16;
  uint64_t v115 = v36;
  uint64_t v119 = v18;
  uint64_t v16 = (char *)*((void *)v18 + 2);
  ((void (*)(char *, char *, uint64_t, __n128))v16)((char *)&v112 - v35, a1, v17, v37);
  unint64_t v123 = (void (*)(unint64_t, char *, uint64_t))v16;
  unint64_t v124 = (unint64_t)(v18 + 16);
  ((void (*)(uint64_t, char **, uint64_t))v16)(v125, a3, v17);
  uint64_t v43 = v5[12];
  uint64_t v122 = v38;
  if (v43 != 1)
  {
    a3 = (char **)(v5 + 13);
    swift_beginAccess();
    float v38 = (char *)v5[13];
    unint64_t v44 = *((void *)v38 + 2);
    uint64_t v16 = v119;
    if (v44 < 4) {
      goto LABEL_15;
    }
    unint64_t v120 = a2;
    sub_260FE5230();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v45 = swift_dynamicCastClass();
    if (!v45)
    {
      swift_bridgeObjectRelease();
      uint64_t v45 = MEMORY[0x263F8EE78];
    }
    uint64_t v46 = *(void *)(v45 + 16);
    swift_release();
    if (v46 != 3) {
      goto LABEL_69;
    }
    uint64_t v47 = swift_dynamicCastClass();
    a2 = v120;
    if (!v47)
    {
      swift_bridgeObjectRelease();
      uint64_t v47 = MEMORY[0x263F8EE78];
    }
    goto LABEL_14;
  }
  uint64_t v29 = (char *)(a2 + a4);
  if (__OFADD__(a2, a4)) {
    goto LABEL_63;
  }
  uint64_t v16 = v119;
  while (1)
  {
    a3 = (char **)(v5 + 13);
    swift_beginAccess();
    unint64_t v44 = v5[13];
    uint64_t v51 = *(void *)(v44 + 16);
    unint64_t v120 = a2;
    BOOL v117 = v29;
    if (v51 == 3) {
      break;
    }
    if (v51 == 2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
      uint64_t v77 = *((void *)v16 + 9);
      unint64_t v78 = (v16[80] + 32) & ~(unint64_t)v16[80];
      uint64_t v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = xmmword_260FE7060;
      uint64_t v80 = v16;
      uint64_t v81 = v123;
      uint64_t result = ((uint64_t (*)(unint64_t, unint64_t, uint64_t))v123)(v79 + v78, v44 + v77 + v78, v17);
      unint64_t v82 = *((void *)*a3 + 2);
      BOOL v61 = v82 >= 2;
      unint64_t v83 = v82 - 2;
      if (!v61) {
        goto LABEL_70;
      }
      v81(v79 + v78 + v77, &(*a3)[v78 + v83 * v77], v17);
      a4 = (uint64_t)v115;
      sub_260F927B0((uint64_t)&unk_270D226C8, v79, (uint64_t)sub_260F969FC, (uint64_t)v115);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v18 = (char *)*((void *)v80 + 1);
      float v38 = v122;
      ((void (*)(char *, uint64_t))v18)(v122, v17);
      (*((void (**)(char *, uint64_t, uint64_t))v80 + 4))(v38, a4, v17);
      a3 = v118;
      uint64_t v16 = v80;
LABEL_43:
      a2 = (unint64_t)v117;
      goto LABEL_44;
    }
    uint64_t v52 = v51 - 1;
    if (v51 == 1)
    {
      uint64_t v53 = v5[12];
      if (v53 == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
        uint64_t v99 = *((void *)v16 + 9);
        unint64_t v100 = (v16[80] + 32) & ~(unint64_t)v16[80];
        uint64_t v101 = swift_allocObject();
        *(_OWORD *)(v101 + 16) = xmmword_260FE7060;
        unint64_t v102 = v16;
        uint64_t v103 = v123;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v123)(v101 + v100, a1, v17);
        uint64_t v104 = *((void *)*a3 + 2);
        if (!v104) {
          goto LABEL_72;
        }
        v103(v101 + v100 + v99, &(*a3)[v100 + (v104 - 1) * v99], v17);
        uint64_t v105 = v115;
        sub_260F927B0((uint64_t)&unk_270D22698, v101, (uint64_t)sub_260F969FC, (uint64_t)v115);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v18 = (char *)*((void *)v102 + 1);
        uint64_t v106 = (uint64_t)v122;
        ((void (*)(char *, uint64_t))v18)(v122, v17);
        uint64_t v115 = (void (*)(void, void, void))*((void *)v102 + 4);
        v115(v106, v105, v17);
        uint64_t v107 = (char *)v5 + OBJC_IVAR____TtC13DiffusionBase13PNDMScheduler_currentSample;
        swift_beginAccess();
        uint64_t v119 = v107;
        uint64_t v108 = (uint64_t)v107;
        uint64_t v109 = v113;
        sub_260F964E4(v108, v113);
        uint64_t result = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v102 + 6))(v109, 1, v17);
        a3 = v118;
        uint64_t v16 = v102;
        a2 = (unint64_t)v117;
        if (result == 1) {
          goto LABEL_73;
        }
        uint64_t v110 = v125;
        ((void (*)(uint64_t, uint64_t))v18)(v125, v17);
        v115(v110, v109, v17);
        a4 = (uint64_t)v114;
        (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v16 + 7))(v114, 1, 1, v17);
        uint64_t v111 = (uint64_t)v119;
        swift_beginAccess();
        sub_260F963F4(a4, v111);
        swift_endAccess();
        float v38 = v122;
LABEL_44:
        sub_260F93E1C();
        a1 = v38;
        uint64_t v84 = sub_260FE3BD0();
        if ((a2 & 0x8000000000000000) != 0)
        {
LABEL_57:
          __break(1u);
        }
        else
        {
          uint64_t v85 = v5[8];
          if (a2 < *(void *)(v85 + 16))
          {
            uint64_t v86 = v5[9];
            if (a2 < *(void *)(v86 + 16))
            {
              uint64_t v87 = v84;
              int v88 = *(_DWORD *)(v85 + 4 * a2 + 32);
              int v89 = *(_DWORD *)(v86 + 4 * a2 + 32);
              uint64_t v90 = sub_260FE3B20();
              MEMORY[0x270FA5388](v90, v91);
              *(&v112 - 4) = v87;
              *(&v112 - 3) = (uint64_t)v38;
              *(&v112 - 2) = v125;
              *((_DWORD *)&v112 - 2) = v89;
              *((_DWORD *)&v112 - 1) = v88;
              sub_260FE3AE0();
              v123((unint64_t)v121, (char *)a3, v17);
              a1 = (char *)(v5 + 11);
              swift_beginAccess();
              a4 = v5[11];
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v5[11] = a4;
              if (isUniquelyReferenced_nonNull_native)
              {
LABEL_48:
                unint64_t v94 = *(void *)(a4 + 16);
                unint64_t v93 = *(void *)(a4 + 24);
                float v38 = (char *)(v94 + 1);
                if (v94 >= v93 >> 1)
                {
                  a4 = sub_260FCD3E0(v93 > 1, v94 + 1, 1, a4);
                  *(void *)a1 = a4;
                }
                *(void *)(a4 + 16) = v38;
                uint64_t v95 = (void (*)(unint64_t, char *, uint64_t))*((void *)v16 + 4);
                v16 += 32;
                v95(a4+ ((v16[48] + 32) & ~(unint64_t)v16[48])+ *((void *)v16 + 5) * v94, v121, v17);
                swift_endAccess();
                uint64_t v96 = v125;
                uint64_t v29 = v122;
                sub_260F94F9C(v125, a2, v120, (uint64_t)v122, v116);
                a1 = v16 - 24;
                ((void (*)(char **, uint64_t))v18)(a3, v17);
                ((void (*)(uint64_t, uint64_t))v18)(v96, v17);
                uint64_t result = ((uint64_t (*)(char *, uint64_t))v18)(v29, v17);
                uint64_t v97 = v5[12];
                BOOL v41 = __OFADD__(v97, 1);
                uint64_t v98 = v97 + 1;
                if (!v41)
                {
                  v5[12] = v98;
                  return result;
                }
                __break(1u);
LABEL_62:
                __break(1u);
LABEL_63:
                __break(1u);
LABEL_64:
                float v38 = (char *)sub_260FCD3E0(0, *((void *)v38 + 2) + 1, 1, (unint64_t)v38);
                *a3 = v38;
                goto LABEL_16;
              }
LABEL_60:
              a4 = sub_260FCD3E0(0, *(void *)(a4 + 16) + 1, 1, a4);
              *(void *)a1 = a4;
              goto LABEL_48;
            }
LABEL_59:
            __break(1u);
            goto LABEL_60;
          }
        }
        __break(1u);
        goto LABEL_59;
      }
      if (!v53)
      {
        uint64_t v18 = (char *)*((void *)v16 + 1);
        ((void (*)(char *, uint64_t))v18)(v38, v17);
        a4 = (uint64_t)v123;
        v123((unint64_t)v38, a1, v17);
        uint64_t v54 = (uint64_t)v114;
        ((void (*)(char *, uint64_t, uint64_t))a4)(v114, v125, v17);
        (*((void (**)(uint64_t, void, uint64_t, uint64_t))v16 + 7))(v54, 0, 1, v17);
        uint64_t v55 = (uint64_t)v5 + OBJC_IVAR____TtC13DiffusionBase13PNDMScheduler_currentSample;
        swift_beginAccess();
        sub_260F963F4(v54, v55);
        swift_endAccess();
        goto LABEL_39;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
    a1 = (char *)*((void *)v16 + 9);
    uint64_t v29 = (char *)((v16[80] + 32) & ~(unint64_t)v16[80]);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_260FE8E10;
    if (!v51)
    {
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    float v38 = (char *)v56;
    int64_t v57 = &v29[v56];
    unint64_t v58 = &v29[v44 + v52 * (void)a1];
    uint64_t v59 = (void (*)(char *, char *, uint64_t))v123;
    unint64_t v44 = v124;
    v123((unint64_t)&v29[v56], v58, v17);
    unint64_t v60 = *((void *)*a3 + 2);
    BOOL v61 = v60 >= 2;
    unint64_t v62 = v60 - 2;
    if (!v61) {
      goto LABEL_66;
    }
    v59(&a1[(void)v57], &v29[(void)*a3 + v62 * (void)a1], v17);
    unint64_t v63 = *((void *)*a3 + 2);
    BOOL v61 = v63 >= 3;
    unint64_t v64 = v63 - 3;
    if (!v61) {
      goto LABEL_67;
    }
    v59(&v57[2 * (void)a1], &v29[(void)*a3 + v64 * (void)a1], v17);
    unint64_t v65 = *((void *)*a3 + 2);
    BOOL v61 = v65 >= 4;
    unint64_t v66 = v65 - 4;
    if (v61)
    {
      v59(&v57[3 * (void)a1], &v29[(void)*a3 + v66 * (void)a1], v17);
      a4 = (uint64_t)v115;
      sub_260F927B0((uint64_t)&unk_270D22730, (uint64_t)v38, (uint64_t)sub_260F969FC, (uint64_t)v115);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      goto LABEL_38;
    }
LABEL_68:
    __break(1u);
LABEL_69:
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_260F9579C((uint64_t)v38, (uint64_t)&v38[(v16[80] + 32) & ~(unint64_t)v16[80]], v44 - 3, (2 * v44) | 1);
    a2 = v120;
LABEL_14:
    swift_bridgeObjectRelease();
    *a3 = (char *)v47;
    swift_bridgeObjectRelease();
LABEL_15:
    v123((unint64_t)v29, a1, v17);
    swift_beginAccess();
    float v38 = *a3;
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v38;
    if ((v48 & 1) == 0) {
      goto LABEL_64;
    }
LABEL_16:
    unint64_t v50 = *((void *)v38 + 2);
    unint64_t v49 = *((void *)v38 + 3);
    if (v50 >= v49 >> 1)
    {
      float v38 = (char *)sub_260FCD3E0(v49 > 1, v50 + 1, 1, (unint64_t)v38);
      *a3 = v38;
    }
    *((void *)v38 + 2) = v50 + 1;
    (*((void (**)(char *, char *, uint64_t))v16 + 4))(&v38[((v16[80] + 32) & ~(unint64_t)v16[80])+ *((void *)v16 + 9) * v50], v29, v17);
    swift_endAccess();
    uint64_t v29 = (char *)a2;
    a2 = (unint64_t)v117;
    float v38 = v122;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
  uint64_t v67 = *((void *)v16 + 9);
  unint64_t v68 = (v16[80] + 32) & ~(unint64_t)v16[80];
  uint64_t v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = xmmword_260FE8090;
  unint64_t v70 = v69 + v68;
  uint64_t v71 = (uint64_t (*)(unint64_t, char *, uint64_t))v123;
  uint64_t result = ((uint64_t (*)(unint64_t, unint64_t, uint64_t))v123)(v69 + v68, v44 + 2 * v67 + v68, v17);
  unint64_t v73 = *((void *)*a3 + 2);
  BOOL v61 = v73 >= 2;
  unint64_t v74 = v73 - 2;
  if (v61)
  {
    uint64_t result = v71(v70 + v67, &(*a3)[v68 + v74 * v67], v17);
    unint64_t v75 = *((void *)*a3 + 2);
    BOOL v61 = v75 >= 3;
    unint64_t v76 = v75 - 3;
    if (!v61) {
      goto LABEL_71;
    }
    v71(v70 + 2 * v67, &(*a3)[v68 + v76 * v67], v17);
    a4 = (uint64_t)v115;
    sub_260F927B0((uint64_t)&unk_270D226F8, v69, (uint64_t)sub_260F969FC, (uint64_t)v115);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v16 = v119;
LABEL_38:
    uint64_t v18 = (char *)*((void *)v16 + 1);
    float v38 = v122;
    ((void (*)(char *, uint64_t))v18)(v122, v17);
    (*((void (**)(char *, uint64_t, uint64_t))v16 + 4))(v38, a4, v17);
LABEL_39:
    a3 = v118;
    goto LABEL_43;
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
  return result;
}

uint64_t Collection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v6);
  unint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v12 = &v19[-v11];
  uint64_t result = sub_260FE4760();
  if (__OFSUB__(0, a1))
  {
    __break(1u);
  }
  else
  {
    sub_260FE4740();
    uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
    v14(v8, AssociatedTypeWitness);
    uint64_t v15 = (void (*)(unsigned char *, void))sub_260FE47A0();
    uint64_t v17 = v16;
    uint64_t v18 = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(a2, v17, v18);
    v15(v19, 0);
    return ((uint64_t (*)(unsigned char *, uint64_t))v14)(v12, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_260F94F9C@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(v5 + 48);
  unint64_t v8 = *(void *)(v7 + 16);
  if (v8 <= a2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v9 = a3 & ~(a3 >> 63);
  if (v9 < v8)
  {
    uint64_t v10 = v7 + 32;
    float v11 = *(float *)(v10 + 4 * a2);
    float v12 = *(float *)(v10 + 4 * v9);
    float v13 = sqrtf(v12 / v11);
    float v14 = (float)-(float)(v12 - v11)
        / (float)((float)(v11 * sqrtf(1.0 - v12)) + sqrtf(v12 * (float)(v11 * (float)(1.0 - v11))));
    uint64_t v15 = result;
    uint64_t v25 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB38);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_260FE7060;
    *(double *)(inited + 32) = v13;
    *(double *)(inited + 40) = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(void *)(v19 + 72);
    unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_260FE7060;
    unint64_t v23 = v22 + v21;
    uint64_t v24 = *(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 16);
    v24(v23, v15, v18);
    v24(v23 + v20, a4, v18);
    sub_260F927B0(inited, v22, (uint64_t)sub_260F969FC, v25);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    return swift_setDeallocating();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t PNDMScheduler.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_260F7B750(v0 + OBJC_IVAR____TtC13DiffusionBase13PNDMScheduler_currentSample);
  return v0;
}

uint64_t PNDMScheduler.__deallocating_deinit()
{
  PNDMScheduler.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_260F9527C()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t sub_260F95288()
{
  return *(void *)(*(void *)v0 + 24);
}

uint64_t sub_260F95294()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_260F952A4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_260F952B0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_260F952BC()
{
  return swift_bridgeObjectRetain();
}

float sub_260F952C8()
{
  return 1.0;
}

uint64_t sub_260F952D0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_260F95314@<X0>(char *a1@<X0>, unint64_t a2@<X1>, char **a3@<X2>, uint64_t a4@<X8>)
{
  return PNDMScheduler.step(output:timeStep:sample:)(a1, a2, a3, a4);
}

uint64_t sub_260F95338(unint64_t a1)
{
  return sub_260F931B4(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_260F95370(unint64_t a1)
{
  return sub_260F93054(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_260F953A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAE60);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_260DC4424(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_260DD782C();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_260F95480(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 8 * v5;
    if (v5 <= 0)
    {
      unint64_t v9 = (char *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        float v12 = v9 + 32;
        float v13 = (char *)(a2 + 8 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 8 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C80);
      unint64_t v9 = (char *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 3);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

void *sub_260F955EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C88);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  void v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_260F960C0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_260DD782C();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_260F956D4(unint64_t a1)
{
  if (HIDWORD(a1) < a1) {
    uint64_t v2 = -(uint64_t)(a1 - HIDWORD(a1));
  }
  else {
    uint64_t v2 = (HIDWORD(a1) - a1);
  }
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  if (v2 <= 0)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAE68);
    uint64_t v3 = swift_allocObject();
    int64_t v4 = _swift_stdlib_malloc_size((const void *)v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 29;
    }
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = 2 * (v5 >> 2);
  }
  uint64_t result = sub_260F95C88((uint64_t)v7, (_DWORD *)(v3 + 32), v2, a1);
  if (result == v2) {
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_260F9579C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
  if (v5 <= 0)
  {
    uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0) - 8);
      uint64_t v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      uint64_t v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    void v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260F959E4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v2 == -1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v5 = result;
  if (v3 <= 0)
  {
    uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C80);
    uint64_t v6 = (void *)swift_allocObject();
    int64_t v7 = _swift_stdlib_malloc_size(v6);
    uint64_t v8 = v7 - 32;
    if (v7 < 32) {
      uint64_t v8 = v7 - 25;
    }
    id v6[2] = v3;
    v6[3] = 2 * (v8 >> 3);
  }
  uint64_t result = sub_260F95DE4((uint64_t)&v9, (uint64_t)(v6 + 4), v3, v5, a2);
  if (result == v3) {
    return (uint64_t)v6;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_260F95AB8(uint64_t result, uint64_t (*a2)(void *, uint64_t *))
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v4 = result;
  if (result)
  {
    uint64_t v5 = sub_260FE4460();
    *(void *)(v5 + 16) = v4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  uint64_t v6 = v5 + 32;
  v7[1] = v4;
  uint64_t v8 = 0;
  v7[0] = v5 + 32;
  uint64_t result = a2(v7, &v8);
  if (v2)
  {
    if (v8 <= v4)
    {
      if (!v7[0])
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v6 == v7[0])
      {
        *(void *)(v5 + 16) = v8;
        swift_bridgeObjectRelease();
        return v5;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 > v4)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7[0])
  {
    if (v6 == v7[0])
    {
      *(void *)(v5 + 16) = v8;
      return v5;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_260F95BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  vDSP_Length v3 = *(void *)(a3 + 8);
  if (*(void *)(a1 + 16) != v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(void *)(a2 + 16) != v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (*(void *)a3)
  {
    vDSP_vsub((const float *)(a2 + 32), 1, (const float *)(a1 + 32), 1, *(float **)a3, 1, v3);
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_260F95C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 8))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 >> 31)
  {
LABEL_6:
    __break(1u);
LABEL_7:
    __break(1u);
  }
  int v3 = *(void *)(a1 + 16);
  if (!*(void *)a2) {
    goto LABEL_7;
  }
  vvsqrtf(*(float **)a2, (const float *)(a1 + 32), &v3);
}

uint64_t sub_260F95C88(uint64_t result, _DWORD *a2, uint64_t a3, unint64_t a4)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    LODWORD(v4) = a4;
LABEL_7:
    *(void *)uint64_t result = a4;
    *(_DWORD *)(result + 8) = v4;
    return a3;
  }
  if (a3 < 0) {
    goto LABEL_33;
  }
  if (a4 == HIDWORD(a4))
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (HIDWORD(a4) < a4) {
    goto LABEL_34;
  }
  if (a4 < HIDWORD(a4))
  {
    LODWORD(v4) = a4 + 1;
    *a2 = a4;
    if (a3 == 1) {
      goto LABEL_7;
    }
    if (v4 == HIDWORD(a4))
    {
      a3 = 1;
      unint64_t v4 = HIDWORD(a4);
      goto LABEL_7;
    }
    unint64_t v5 = (HIDWORD(a4) - a4 - 2);
    uint64_t v6 = v5 + 2;
    if (v5 >= a3 - 2) {
      unint64_t v5 = a3 - 2;
    }
    if (v5 >= (HIDWORD(a4) + ~a4)) {
      unint64_t v7 = (HIDWORD(a4) + ~a4);
    }
    else {
      unint64_t v7 = v5;
    }
    if (v7 >= 8)
    {
      if (((v7 + 1) & 7) != 0) {
        uint64_t v10 = (v7 + 1) & 7;
      }
      else {
        uint64_t v10 = 8;
      }
      unint64_t v11 = v7 + 1 - v10;
      int v12 = v4 + v11;
      uint64_t v9 = &a2[v11];
      uint64_t v8 = v11 + 2;
      int32x4_t v13 = vaddq_s32(vdupq_n_s32(v4), (int32x4_t)xmmword_260FF8940);
      uint64_t v14 = (int32x4_t *)(a2 + 5);
      unint64_t v15 = ~v7 + v10;
      v16.i64[0] = 0x400000004;
      v16.i64[1] = 0x400000004;
      v17.i64[0] = 0x800000008;
      v17.i64[1] = 0x800000008;
      do
      {
        v14[-1] = v13;
        *uint64_t v14 = vaddq_s32(v13, v16);
        int32x4_t v13 = vaddq_s32(v13, v17);
        v14 += 2;
        v15 += 8;
      }
      while (v15);
      LODWORD(v4) = v12;
    }
    else
    {
      uint64_t v8 = 2;
      uint64_t v9 = a2;
    }
    uint64_t v18 = v9 + 1;
    while (v4 < HIDWORD(a4))
    {
      int v19 = v4 + 1;
      *uint64_t v18 = v4;
      if (a3 == v8)
      {
        LODWORD(v4) = v4 + 1;
        goto LABEL_7;
      }
      ++v8;
      ++v18;
      LODWORD(v4) = v4 + 1;
      if (HIDWORD(a4) == v19)
      {
        unint64_t v4 = HIDWORD(a4);
        a3 = v6;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_260F95DE4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    BOOL v7 = 0;
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    BOOL v7 = 0;
LABEL_14:
    uint64_t v8 = a4;
LABEL_15:
    *(void *)uint64_t result = a4;
    *(void *)(result + 8) = a5;
    *(void *)(result + 16) = v8;
    *(unsigned char *)(result + 24) = v7;
    return a3;
  }
  if (a3 < 0) {
    goto LABEL_17;
  }
  uint64_t v5 = 0;
  uint64_t v6 = a4;
  while (1)
  {
    BOOL v7 = v6 == a5;
    if (v6 != a5) {
      break;
    }
    uint64_t v8 = 0;
LABEL_8:
    *(void *)(a2 + 8 * v5) = v6;
    if (a3 - 1 == v5) {
      goto LABEL_15;
    }
    ++v5;
    BOOL v9 = v6 == a5;
    uint64_t v6 = v8;
    if (v9)
    {
      BOOL v7 = 1;
      a3 = v5;
      goto LABEL_15;
    }
  }
  uint64_t v8 = v6 + 1;
  if (!__OFADD__(v6, 1)) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t *sub_260F95E70(uint64_t *result, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v9 = result;
  if (!a2) {
    goto LABEL_8;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    uint64_t v11 = 0;
    goto LABEL_21;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (!a4)
  {
LABEL_8:
    uint64_t v11 = 0;
    uint64_t v10 = 0;
LABEL_21:
    *BOOL v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = v11;
    return (uint64_t *)v10;
  }
  if (a4 >= 1)
  {
    *a2 = a5;
    a2[1] = a6;
    if (a3 == 1)
    {
      uint64_t v11 = 1;
    }
    else if (a4 == 1)
    {
      uint64_t v10 = 1;
      uint64_t v11 = 1;
    }
    else
    {
      a2[2] = a5;
      a2[3] = a6;
      if (a3 == 2)
      {
        uint64_t v11 = 2;
      }
      else
      {
        int v12 = a2 + 5;
        uint64_t v13 = 2;
        while (a4 != v13)
        {
          swift_bridgeObjectRetain();
          ++v13;
          *(v12 - 1) = a5;
          *int v12 = a6;
          v12 += 2;
          if (v10 == v13)
          {
            uint64_t v11 = v13;
            goto LABEL_19;
          }
        }
        uint64_t v11 = a4;
        uint64_t v10 = v13;
      }
LABEL_19:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t *sub_260F95F80(uint64_t *result, unint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (!a2)
  {
    uint64_t v5 = 0;
    a3 = 0;
    goto LABEL_30;
  }
  if (!a3)
  {
    uint64_t v5 = 0;
    goto LABEL_30;
  }
  if (a3 < 0) {
    goto LABEL_33;
  }
  if (!a4)
  {
    a3 = 0;
    uint64_t v5 = 0;
    goto LABEL_30;
  }
  if (a4 >= 1)
  {
    *a2 = a5;
    if (a3 == 1)
    {
      uint64_t v5 = 1;
LABEL_30:
      *uint64_t result = a4;
      result[1] = a5;
      result[2] = v5;
      return (uint64_t *)a3;
    }
    unint64_t v6 = a4 - 1;
    if (a4 == 1)
    {
      a3 = 1;
      uint64_t v5 = 1;
      goto LABEL_30;
    }
    unint64_t v7 = a4 - 2;
    if (a4 - 2 >= (unint64_t)(a3 - 2)) {
      unint64_t v7 = a3 - 2;
    }
    if (v7 < v6) {
      unint64_t v6 = v7;
    }
    unint64_t v8 = v6 + 1;
    if (v8 >= 5)
    {
      uint64_t v12 = v8 & 3;
      if ((v8 & 3) == 0) {
        uint64_t v12 = 4;
      }
      unint64_t v13 = v8 - v12;
      uint64_t v10 = v8 - v12 + 1;
      uint64_t v11 = &a2[v13];
      uint64_t v9 = v13 + 2;
      int64x2_t v14 = vdupq_n_s64(a5);
      unint64_t v15 = (int64x2_t *)(a2 + 3);
      do
      {
        v15[-1] = v14;
        *unint64_t v15 = v14;
        v15 += 2;
        v13 -= 4;
      }
      while (v13);
    }
    else
    {
      uint64_t v9 = 2;
      uint64_t v10 = 1;
      uint64_t v11 = a2;
    }
    uint64_t v16 = 0;
    uint64_t v17 = v10 - a4;
    uint64_t v18 = v11 + 1;
    while (v17 + v16)
    {
      v18[v16] = a5;
      if (!(v9 - a3 + v16))
      {
        uint64_t v5 = v10 + v16 + 1;
        goto LABEL_30;
      }
      if (v10 - a3 + v16 == -1) {
        goto LABEL_32;
      }
      ++v16;
      if (!(v17 + v16))
      {
        a3 = v9 + v16 - 1;
        uint64_t v5 = a4;
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_260F960C0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    void v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_260F962C0(uint64_t a1, void *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v5 = *a3;
  sub_260F95BB8(*a3, *a4, a1);
  *a2 = *(void *)(v5 + 16);
}

void sub_260F96310(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  sub_260F95C00(*a3, a1);
  *a2 = *(void *)(v4 + 16);
}

void sub_260F96358(uint64_t a1, void *a2)
{
  uint64_t v4 = **(void **)(v2 + 16);
  sub_260F95C00(v4, a1);
  *a2 = *(void *)(v4 + 16);
}

void sub_260F963A4(uint64_t a1, void *a2)
{
  uint64_t v4 = *(uint64_t **)(v2 + 24);
  uint64_t v5 = **(void **)(v2 + 16);
  sub_260F95BB8(v5, *v4, a1);
  *a2 = *(void *)(v5 + 16);
}

uint64_t sub_260F963F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_260F9645C()
{
  return sub_260FE3AF0();
}

uint64_t sub_260F964E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_260F96550()
{
  unint64_t result = qword_26A8EAE40;
  if (!qword_26A8EAE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAE40);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BetaSchedule(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260F96670);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BetaSchedule()
{
  return &type metadata for BetaSchedule;
}

uint64_t sub_260F966A8()
{
  return type metadata accessor for PNDMScheduler();
}

uint64_t type metadata accessor for PNDMScheduler()
{
  uint64_t result = qword_26A8EAE48;
  if (!qword_26A8EAE48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_260F966FC()
{
  sub_260F967BC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_260F967BC()
{
  if (!qword_26A8EAE58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8E6BF0);
    unint64_t v0 = sub_260FE4A80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A8EAE58);
    }
  }
}

uint64_t sub_260F96818()
{
  return sub_260FE3AF0();
}

float32x4_t *sub_260F968A8(float32x4_t *result, double a2, double a3)
{
  unint64_t v4 = *(void *)(v3 + 16);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    return result;
  }
  if (v4)
  {
    uint64_t v5 = *(float32x4_t **)(v3 + 32);
    float v6 = *(float *)(v3 + 48);
    LODWORD(a3) = *(_DWORD *)(v3 + 52);
    uint64_t v7 = **(float32x4_t ***)(v3 + 24);
    if (v4 < 8)
    {
      unint64_t v8 = 0;
LABEL_5:
      unint64_t v9 = &v7->f32[v8];
      uint64_t v10 = &v5->f32[v8];
      uint64_t v11 = &result->f32[v8];
      unint64_t v12 = v4 - v8;
      do
      {
        float v13 = *v11++;
        float v14 = v13;
        float v15 = *v10++;
        *v9++ = (float)(v14 - (float)(v6 * v15)) / *(float *)&a3;
        --v12;
      }
      while (v12);
      return result;
    }
    unint64_t v8 = 0;
    if ((unint64_t)((char *)v7 - (char *)result) < 0x20) {
      goto LABEL_5;
    }
    if ((unint64_t)((char *)v7 - (char *)v5) < 0x20) {
      goto LABEL_5;
    }
    unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFF8;
    float32x4_t v16 = (float32x4_t)vdupq_lane_s32(*(int32x2_t *)&a3, 0);
    int64_t v17 = result + 1;
    unint64_t v18 = v5 + 1;
    int64_t v19 = v7 + 1;
    unint64_t v20 = v4 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      float32x4_t v21 = vdivq_f32(vsubq_f32(*v17, vmulq_n_f32(*v18, v6)), v16);
      v19[-1] = vdivq_f32(vsubq_f32(v17[-1], vmulq_n_f32(v18[-1], v6)), v16);
      *int64_t v19 = v21;
      v17 += 2;
      v18 += 2;
      v19 += 2;
      v20 -= 8;
    }
    while (v20);
    if (v4 != v8) {
      goto LABEL_5;
    }
  }
  return result;
}

void sub_260F96980(const float *__X)
{
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v3 <= 0x7FFFFFFF)
  {
    cblas_saxpy(v3, *(const float *)(v1 + 24), __X, 1, **(float ***)(v1 + 32), 1);
    return;
  }
  __break(1u);
}

void sub_260F969E4(uint64_t a1, void *a2)
{
}

void sub_260F969FC(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_260F96A14(uint64_t a1, float a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD80);
  MEMORY[0x270FA5388](v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  if (a2 == 1.0)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAE90);
    uint64_t v11 = sub_260D90340(&qword_26A8EAE98, &qword_26A8EAE90);
    int64x2_t v9 = vdupq_n_s64(1uLL);
    sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
    sub_260FE3C30();
    sub_260D90340(&qword_26A8EAD88, &qword_26A8EAD80);
    sub_260FE3BC0();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v9);
  }
  uint64_t v7 = (void *)sub_260FE3B20();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if (v7[2])
    {
LABEL_5:
      v7[4] = 1;
      MEMORY[0x270FA5388](result, v8);
      *((void *)&v9 - 2) = a1;
      *((float *)&v9 - 2) = a2;
      swift_bridgeObjectRetain();
      sub_260FE3AE0();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t result = (uint64_t)sub_260F7B454(v7);
    uint64_t v7 = (void *)result;
    if (*(void *)(result + 16)) {
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_260F96C54(uint64_t a1, float a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD80);
  MEMORY[0x270FA5388](v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  if (a2 == 1.0)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAE90);
    uint64_t v11 = sub_260D90340(&qword_26A8EAE98, &qword_26A8EAE90);
    int64x2_t v9 = vdupq_n_s64(1uLL);
    sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
    sub_260FE3C30();
    sub_260D90340(&qword_26A8EAD88, &qword_26A8EAD80);
    sub_260FE3BC0();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v9);
  }
  uint64_t v7 = (void *)sub_260FE3B20();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if (v7[2])
    {
LABEL_5:
      v7[4] = 1;
      MEMORY[0x270FA5388](result, v8);
      *((void *)&v9 - 2) = a1;
      *((float *)&v9 - 2) = a2;
      swift_bridgeObjectRetain();
      sub_260FE3AE0();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t result = (uint64_t)sub_260F7B454(v7);
    uint64_t v7 = (void *)result;
    if (*(void *)(result + 16)) {
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

void DiffusionBaseXLPipeline.init(textEncoder:textEncoder2:unet:unetRefiner:decoder:encoder:reduceMemory:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  *(void *)(a9 + 88) = 0;
  *(_OWORD *)a9 = 0u;
  *(_OWORD *)(a9 + 16) = 0u;
  uint64_t v18 = a9 + 40;
  *(_OWORD *)(a9 + 32) = 0u;
  *(_OWORD *)(a9 + 48) = 0u;
  *(_OWORD *)(a9 + 64) = 0u;
  *(void *)(a9 + 112) = 0;
  *(void *)(a9 + 120) = 0;
  *(unsigned char *)(a9 + 128) = 0;
  sub_260F96F4C(a1, a9);
  sub_260F96F4C(a2, v18);
  *(void *)(a9 + 80) = a3;
  swift_bridgeObjectRelease();
  *(void *)(a9 + 88) = a4;
  *(void *)(a9 + 96) = a5;
  *(void *)(a9 + 104) = a6;
  sub_260F64604(*(void *)(a9 + 112), *(void **)(a9 + 120));
  *(void *)(a9 + 112) = a7;
  *(void *)(a9 + 120) = a8;
  *(unsigned char *)(a9 + 128) = a10;
}

uint64_t sub_260F96F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAE70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DiffusionBaseXLPipeline.loadResources()()
{
  uint64_t v2 = (void *)v0;
  if (*(unsigned char *)(v0 + 128) == 1)
  {
    DiffusionBaseXLPipeline.prewarmResources()();
    return;
  }
  sub_260D907BC(v0 + 40, (uint64_t)&v29, &qword_26A8EAE70);
  uint64_t v3 = v31;
  if (v31)
  {
    uint64_t v4 = v32;
    __swift_project_boxed_opaque_existential_1(&v29, v31);
    (*(void (**)(uint64_t))(*(void *)(v4 + 8) + 8))(v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
    if (v1) {
      return;
    }
  }
  else
  {
    sub_260D90820((uint64_t)&v29, &qword_26A8EAE70);
  }
  Unet.loadResources()();
  if (!v5)
  {
    uint64_t v6 = v2[13];
    ManagedMLModel.loadResources()();
    uint64_t v8 = v7;
    if (!v7)
    {
      if (v6)
      {
        ManagedMLModel.loadResources()();
        uint64_t v8 = v9;
        if (v9)
        {

          uint64_t v8 = 0;
        }
      }
      sub_260D907BC((uint64_t)v2, (uint64_t)&v29, &qword_26A8EAE70);
      uint64_t v10 = v31;
      if (v31)
      {
        uint64_t v11 = v32;
        __swift_project_boxed_opaque_existential_1(&v29, v31);
        (*(void (**)(uint64_t))(*(void *)(v11 + 8) + 8))(v10);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
        if (v8)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F10);
          uint64_t v12 = swift_allocObject();
          *(_OWORD *)(v12 + 16) = xmmword_260FE7080;
          uint64_t v29 = 0;
          unint64_t v30 = 0xE000000000000000;
          sub_260FE4C20();
          sub_260FE4250();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
          sub_260FE4DA0();
          uint64_t v13 = v29;
          unint64_t v14 = v30;
          *(void *)(v12 + 56) = MEMORY[0x263F8D310];
          *(void *)(v12 + 32) = v13;
          *(void *)(v12 + 40) = v14;
          sub_260FE52E0();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        sub_260D90820((uint64_t)&v29, &qword_26A8EAE70);
      }
      unint64_t v15 = v2[11];
      if (v15)
      {
        if (v15 >> 62) {
          goto LABEL_34;
        }
        uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        for (; v16; uint64_t v16 = sub_260FE4E40())
        {
          uint64_t v17 = 4;
          while (1)
          {
            uint64_t v18 = v17 - 4;
            if ((v15 & 0xC000000000000001) == 0) {
              break;
            }
            MEMORY[0x26122B4C0](v17 - 4, v15);
            BOOL v19 = __OFADD__(v18, 1);
            uint64_t v20 = v17 - 3;
            if (v19) {
              goto LABEL_33;
            }
LABEL_26:
            ManagedMLModel.loadResources()();
            if (v21)
            {
              swift_release();
              swift_bridgeObjectRelease();
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F10);
              uint64_t v22 = swift_allocObject();
              *(_OWORD *)(v22 + 16) = xmmword_260FE7080;
              uint64_t v29 = 0;
              unint64_t v30 = 0xE000000000000000;
              sub_260FE4C20();
              sub_260FE4250();
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
              sub_260FE4DA0();
              uint64_t v23 = v29;
              unint64_t v24 = v30;
              *(void *)(v22 + 56) = MEMORY[0x263F8D310];
              *(void *)(v22 + 32) = v23;
              *(void *)(v22 + 40) = v24;
              sub_260FE52E0();
              swift_bridgeObjectRelease();

              goto LABEL_30;
            }
            ManagedMLModel.unloadResources()();
            swift_release();
            ++v17;
            if (v20 == v16) {
              goto LABEL_28;
            }
          }
          swift_retain();
          BOOL v19 = __OFADD__(v18, 1);
          uint64_t v20 = v17 - 3;
          if (!v19) {
            goto LABEL_26;
          }
LABEL_33:
          __break(1u);
LABEL_34:
          swift_bridgeObjectRetain();
        }
LABEL_28:
        swift_bridgeObjectRelease();
      }
LABEL_30:
      if (v2[14])
      {
        ManagedMLModel.loadResources()();
        if (v25)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F10);
          uint64_t v26 = swift_allocObject();
          *(_OWORD *)(v26 + 16) = xmmword_260FE7080;
          uint64_t v29 = 0;
          unint64_t v30 = 0xE000000000000000;
          sub_260FE4C20();
          sub_260FE4250();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
          sub_260FE4DA0();
          uint64_t v27 = v29;
          unint64_t v28 = v30;
          *(void *)(v26 + 56) = MEMORY[0x263F8D310];
          *(void *)(v26 + 32) = v27;
          *(void *)(v26 + 40) = v28;
          sub_260FE52E0();
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DiffusionBaseXLPipeline.prewarmResources()()
{
  uint64_t v2 = v0;
  sub_260D907BC((uint64_t)(v0 + 5), (uint64_t)&v35, &qword_26A8EAE70);
  uint64_t v3 = v37;
  if (v37)
  {
    uint64_t v4 = v38;
    __swift_project_boxed_opaque_existential_1(&v35, v37);
    sub_260FDB6E8(v3, *(void *)(v4 + 8));
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v35);
    if (v1) {
      return;
    }
  }
  else
  {
    sub_260D90820((uint64_t)&v35, &qword_26A8EAE70);
  }
  unint64_t v5 = v2[10];
  if (v5 >> 62) {
    goto LABEL_51;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_260FE4E40())
  {
    uint64_t v7 = 4;
    while (1)
    {
      uint64_t v8 = v7 - 4;
      if ((v5 & 0xC000000000000001) == 0) {
        break;
      }
      MEMORY[0x26122B4C0](v7 - 4, v5);
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v7 - 3;
      if (v9) {
        goto LABEL_49;
      }
LABEL_13:
      ManagedMLModel.loadResources()();
      if (v11)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      ManagedMLModel.unloadResources()();
      swift_release();
      ++v7;
      if (v10 == v6) {
        goto LABEL_15;
      }
    }
    swift_retain();
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v7 - 3;
    if (!v9) {
      goto LABEL_13;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    swift_bridgeObjectRetain();
  }
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v12 = v2[13];
  swift_retain();
  swift_retain();
  ManagedMLModel.loadResources()();
  unint64_t v14 = v13;
  if (v13)
  {
    swift_release();
LABEL_17:
    swift_release();
    return;
  }
  if (v12)
  {
    ManagedMLModel.loadResources()();
    unint64_t v14 = v15;
    if (v15)
    {

      unint64_t v14 = 0;
    }
    ManagedMLModel.unloadResources()();
    ManagedMLModel.unloadResources()();
    swift_release();
  }
  else
  {
    ManagedMLModel.unloadResources()();
  }
  swift_release();
  sub_260D907BC((uint64_t)v2, (uint64_t)&v35, &qword_26A8EAE70);
  uint64_t v16 = v37;
  if (v37)
  {
    uint64_t v17 = v38;
    __swift_project_boxed_opaque_existential_1(&v35, v37);
    sub_260FDB6E8(v16, *(void *)(v17 + 8));
    if (v14)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v35);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F10);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_260FE7080;
      uint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      sub_260FE4C20();
      sub_260FE4250();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
      sub_260FE4DA0();
      uint64_t v19 = v35;
      unint64_t v20 = v36;
      *(void *)(v18 + 56) = MEMORY[0x263F8D310];
      *(void *)(v18 + 32) = v19;
      *(void *)(v18 + 40) = v20;
      sub_260FE52E0();
      swift_bridgeObjectRelease();

      unint64_t v5 = v2[11];
      if (!v5) {
        goto LABEL_42;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v35);
      unint64_t v5 = v2[11];
      if (!v5) {
        goto LABEL_42;
      }
    }
LABEL_31:
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_260FE4E40();
      if (v21) {
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v21)
      {
LABEL_33:
        uint64_t v22 = 4;
        while (1)
        {
          uint64_t v23 = v22 - 4;
          if ((v5 & 0xC000000000000001) != 0)
          {
            MEMORY[0x26122B4C0](v22 - 4, v5);
            BOOL v9 = __OFADD__(v23, 1);
            uint64_t v24 = v22 - 3;
            if (v9) {
              goto LABEL_50;
            }
          }
          else
          {
            swift_retain();
            BOOL v9 = __OFADD__(v23, 1);
            uint64_t v24 = v22 - 3;
            if (v9) {
              goto LABEL_50;
            }
          }
          ManagedMLModel.loadResources()();
          if (v25) {
            break;
          }
          ManagedMLModel.unloadResources()();
          swift_release();
          ++v22;
          if (v24 == v21) {
            goto LABEL_41;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F10);
        uint64_t v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = xmmword_260FE7080;
        uint64_t v35 = 0;
        unint64_t v36 = 0xE000000000000000;
        sub_260FE4C20();
        sub_260FE4250();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
        sub_260FE4DA0();
        uint64_t v33 = v35;
        unint64_t v34 = v36;
        *(void *)(v32 + 56) = MEMORY[0x263F8D310];
        *(void *)(v32 + 32) = v33;
        *(void *)(v32 + 40) = v34;
        sub_260FE52E0();
        swift_bridgeObjectRelease();

        if (!v2[14]) {
          return;
        }
        goto LABEL_43;
      }
    }
LABEL_41:
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  sub_260D90820((uint64_t)&v35, &qword_26A8EAE70);
  unint64_t v5 = v2[11];
  if (v5) {
    goto LABEL_31;
  }
LABEL_42:
  if (!v2[14]) {
    return;
  }
LABEL_43:
  uint64_t v26 = (void *)v2[15];
  swift_retain();
  id v27 = v26;
  ManagedMLModel.loadResources()();
  if (!v28)
  {
    ManagedMLModel.unloadResources()();

    goto LABEL_17;
  }

  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F10);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_260FE7080;
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  sub_260FE4C20();
  sub_260FE4250();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6FA8);
  sub_260FE4DA0();
  uint64_t v30 = v35;
  unint64_t v31 = v36;
  *(void *)(v29 + 56) = MEMORY[0x263F8D310];
  *(void *)(v29 + 32) = v30;
  *(void *)(v29 + 40) = v31;
  sub_260FE52E0();
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall DiffusionBaseXLPipeline.unloadResources()()
{
  uint64_t v1 = (void *)v0;
  sub_260D907BC(v0, (uint64_t)v12, &qword_26A8EAE70);
  uint64_t v2 = v13;
  if (v13)
  {
    uint64_t v3 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    (*(void (**)(uint64_t))(*(void *)(v3 + 8) + 16))(v2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
  else
  {
    sub_260D90820((uint64_t)v12, &qword_26A8EAE70);
  }
  sub_260D907BC((uint64_t)(v1 + 5), (uint64_t)v12, &qword_26A8EAE70);
  uint64_t v4 = v13;
  if (v13)
  {
    uint64_t v5 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 16))(v4);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
  else
  {
    sub_260D90820((uint64_t)v12, &qword_26A8EAE70);
  }
  unint64_t v6 = v1[10];
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_260FE4E40();
    if (!v7) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_16;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_26;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      MEMORY[0x26122B4C0](i, v6);
    }
    else {
      swift_retain();
    }
    ManagedMLModel.unloadResources()();
    swift_release();
  }
LABEL_16:
  swift_bridgeObjectRelease();
  unint64_t v6 = v1[11];
  if (v6)
  {
    if (!(v6 >> 62))
    {
      uint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v9)
      {
LABEL_19:
        if (v9 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t j = 0; j != v9; ++j)
        {
          if ((v6 & 0xC000000000000001) != 0) {
            MEMORY[0x26122B4C0](j, v6);
          }
          else {
            swift_retain();
          }
          ManagedMLModel.unloadResources()();
          swift_release();
        }
      }
LABEL_27:
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_260FE4E40();
    if (v9) {
      goto LABEL_19;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v11 = v1[13];
  ManagedMLModel.unloadResources()();
  if (v11) {
    ManagedMLModel.unloadResources()();
  }
  if (v1[14]) {
    ManagedMLModel.unloadResources()();
  }
}

uint64_t DiffusionBaseXLPipeline.generateImages(configuration:requestIdentifier:generationID:progressHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *), uint64_t a5)
{
  LODWORD(v7) = v6;
  unint64_t v8 = v5;
  uint64_t v275 = a5;
  v274 = a4;
  long long v289 = (void *)a1;
  uint64_t v273 = type metadata accessor for PipelineProgress();
  MEMORY[0x270FA5388](v273, v9);
  os_signpost_type_t v276 = (uint64_t *)((char *)&v256 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB90);
  MEMORY[0x270FA5388](v11 - 8, v12);
  uint64_t v297 = (uint64_t *)((char *)&v256 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14, v15);
  uint64_t v286 = (char *)&v256 - v16;
  MEMORY[0x270FA5388](v17, v18);
  uint64_t v278 = (uint64_t)&v256 - v19;
  MEMORY[0x270FA5388](v20, v21);
  float v269 = (char *)&v256 - v22;
  MEMORY[0x270FA5388](v23, v24);
  uint64_t v271 = (char *)&v256 - v25;
  MEMORY[0x270FA5388](v26, v27);
  uint64_t v283 = (uint64_t)&v256 - v28;
  MEMORY[0x270FA5388](v29, v30);
  uint64_t v281 = (uint64_t)&v256 - v31;
  uint64_t v305 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v300 = *(void *)(v305 - 8);
  MEMORY[0x270FA5388](v305, v32);
  uint64_t v309 = (char *)&v256 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34, v35);
  uint64_t v310 = (char *)&v256 - v36;
  MEMORY[0x270FA5388](v37, v38);
  uint64_t v280 = (char *)&v256 - v39;
  MEMORY[0x270FA5388](v40, v41);
  uint64_t v285 = (uint64_t)&v256 - v42;
  MEMORY[0x270FA5388](v43, v44);
  uint64_t v301 = (char *)&v256 - v45;
  MEMORY[0x270FA5388](v46, v47);
  v302 = (char *)&v256 - v48;
  MEMORY[0x270FA5388](v49, v50);
  uint64_t v318 = (uint64_t *)((char *)&v256 - v51);
  MEMORY[0x270FA5388](v52, v53);
  unint64_t v317 = (uint64_t *)((char *)&v256 - v54);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAE78);
  MEMORY[0x270FA5388](v55 - 8, v56);
  uint64_t v306 = (void (*)(void))((char *)&v256 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v58, v59);
  uint64_t v277 = (uint64_t)&v256 - v60;
  MEMORY[0x270FA5388](v61, v62);
  unint64_t v64 = (char *)&v256 - v63;
  MEMORY[0x270FA5388](v65, v66);
  unint64_t v68 = (unint64_t)&v256 - v67;
  MEMORY[0x270FA5388](v69, v70);
  uint64_t v72 = (uint64_t *)((char *)&v256 - v71);
  MEMORY[0x270FA5388](v73, v74);
  uint64_t v288 = (uint64_t)&v256 - v75;
  Unet.latentTimeIdShape.getter(*(void *)(v5 + 80));
  uint64_t v77 = *(void *)(v76 + 16);
  if (v77)
  {
    uint64_t v78 = *(void *)(v76 + 8 * v77 + 24);
    swift_bridgeObjectRelease();
    BOOL v79 = v78 == 5;
  }
  else
  {
    swift_bridgeObjectRelease();
    BOOL v79 = 0;
  }
  uint64_t v80 = type metadata accessor for DiffusionBaseXLPipeline.ModelInputs();
  uint64_t v279 = *(void *)(v80 - 8);
  uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v279 + 56);
  unint64_t v82 = (void (**)(void))(v279 + 56);
  v81(v288, 1, 1, v80);
  uint64_t v282 = v80;
  uint64_t v307 = v82;
  uint64_t v308 = v81;
  v81((uint64_t)v72, 1, 1, v80);
  sub_260D907BC(v8, (uint64_t)&v320, &qword_26A8EAE70);
  uint64_t v83 = v321;
  sub_260D90820((uint64_t)&v320, &qword_26A8EAE70);
  if (v83)
  {
    sub_260F9A160((uint64_t)v289, v79, v68);
    if (v6)
    {
      unint64_t v68 = (unint64_t)&qword_26A8EAE78;
      sub_260D90820((uint64_t)v72, &qword_26A8EAE78);
      uint64_t v84 = v288;
LABEL_14:
      sub_260D90820(v84, &qword_26A8EAE78);
      return v68;
    }
    uint64_t v85 = v288;
    sub_260D90820(v288, &qword_26A8EAE78);
    v308(v68, 0, 1, v282);
    sub_260DD7C14(v68, v85, &qword_26A8EAE78);
  }
  if (*(void *)(v8 + 88)) {
    int v86 = 1;
  }
  else {
    int v86 = v79;
  }
  if (v86 == 1)
  {
    sub_260F9A160((uint64_t)v289, 1, (uint64_t)v64);
    sub_260D90820((uint64_t)v72, &qword_26A8EAE78);
    if (v6)
    {
      uint64_t v84 = v288;
      goto LABEL_14;
    }
    v308((uint64_t)v64, 0, 1, v282);
    sub_260DD7C14((uint64_t)v64, (uint64_t)v72, &qword_26A8EAE78);
  }
  if (*(unsigned char *)(v8 + 128) == 1)
  {
    sub_260D907BC(v8, (uint64_t)&v320, &qword_26A8EAE70);
    uint64_t v87 = v321;
    if (v321)
    {
      int v88 = v322;
      __swift_project_boxed_opaque_existential_1(&v320, v321);
      (*(void (**)(uint64_t))(v88[1] + 16))(v87);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v320);
    }
    else
    {
      sub_260D90820((uint64_t)&v320, &qword_26A8EAE70);
    }
    sub_260D907BC(v8 + 40, (uint64_t)&v320, &qword_26A8EAE70);
    unint64_t v68 = v321;
    if (v321)
    {
      int v89 = v322;
      __swift_project_boxed_opaque_existential_1(&v320, v321);
      (*(void (**)(unint64_t))(v89[1] + 16))(v68);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v320);
    }
    else
    {
      sub_260D90820((uint64_t)&v320, &qword_26A8EAE70);
    }
  }
  uint64_t v90 = type metadata accessor for PipelineConfiguration(0);
  uint64_t v92 = (uint64_t)v289;
  uint64_t v263 = *(int *)(v90 + 68);
  if ((*(void *)((char *)v289 + v263) & 0x8000000000000000) != 0) {
    goto LABEL_149;
  }
  unint64_t v93 = (int *)v90;
  MEMORY[0x270FA5388](v90, v91);
  *(&v256 - 2) = v92;
  *(&v256 - 1) = v8;
  uint64_t v95 = sub_260F5C7F0((uint64_t)sub_260F9B46C, (uint64_t)(&v256 - 4), 0, v94);
  if (!*(void *)(v95 + 16))
  {
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  uint64_t v96 = v286;
  uint64_t v97 = v95 + 32;
  uint64_t v98 = v95;
  sub_260D90158(v95 + 32, (uint64_t)&v320);
  uint64_t v99 = sub_260F9ABA0(v92, &v320);
  if (v6)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v320);
    unint64_t v68 = (unint64_t)&qword_26A8EAE78;
    sub_260D90820((uint64_t)v72, &qword_26A8EAE78);
    sub_260D90820(v288, &qword_26A8EAE78);
    return v68;
  }
  uint64_t v100 = v99;
  uint64_t v258 = v97;
  uint64_t v257 = v98;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v320);
  int64_t v101 = *(void *)(v100 + 16);
  uint64_t v287 = v72;
  unint64_t v291 = v8;
  unint64_t v312 = v100;
  int64_t v272 = v93;
  uint64_t v284 = 0;
  if (v101)
  {
    uint64_t v320 = (uint64_t *)MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_260F63738(0, v101, 0);
    unint64_t v102 = *(void (**)(uint64_t *, unint64_t, uint64_t))(v300 + 16);
    unint64_t v315 = (*(unsigned __int8 *)(v300 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v300 + 80);
    unint64_t v316 = (unint64_t)v102;
    unint64_t v103 = v100 + v315;
    uint64_t v104 = *(char **)(v300 + 72);
    v313 = (unint64_t *)(v300 + 8);
    unint64_t v314 = (unint64_t)v104;
    uint64_t v311 = (void (**)(char *, uint64_t *, uint64_t))(v300 + 32);
    uint64_t v105 = (char *)v320;
    uint64_t v106 = v305;
    uint64_t v107 = v102;
    do
    {
      uint64_t v108 = v318;
      v107(v318, v103, v106);
      v107((uint64_t *)v302, (unint64_t)v108, v106);
      sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
      sub_260FE3BC0();
      ((void (*)(uint64_t *, uint64_t))*v313)(v108, v106);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_260F63738(0, *((void *)v105 + 2) + 1, 1);
        uint64_t v105 = (char *)v320;
      }
      unint64_t v110 = *((void *)v105 + 2);
      unint64_t v109 = *((void *)v105 + 3);
      if (v110 >= v109 >> 1)
      {
        sub_260F63738(v109 > 1, v110 + 1, 1);
        uint64_t v105 = (char *)v320;
      }
      *((void *)v105 + 2) = v110 + 1;
      unint64_t v111 = v314;
      uint64_t v106 = v305;
      (*v311)(&v105[v315 + v110 * v314], v317, v305);
      v103 += v111;
      --v101;
      unint64_t v8 = v291;
    }
    while (v101);
    uint64_t v311 = (void (**)(char *, uint64_t *, uint64_t))v105;
    swift_bridgeObjectRelease();
    uint64_t v72 = v287;
    unint64_t v93 = v272;
    uint64_t v112 = v286;
  }
  else
  {
    uint64_t v112 = v96;
    uint64_t v311 = (void (**)(char *, uint64_t *, uint64_t))MEMORY[0x263F8EE78];
  }
  uint64_t v113 = v282;
  uint64_t v7 = (uint64_t *)v306;
  if ((*(unsigned char *)(v8 + 128) & 1) != 0 && *(void *)(v8 + 112)) {
    ManagedMLModel.unloadResources()();
  }
  if (*((unsigned __int8 *)v289 + v93[13] + 8) == 255)
  {
    LODWORD(v317) = 0;
    unint64_t v8 = 1;
  }
  else
  {
    float v114 = *(float *)((char *)v289 + v93[15]);
    float v115 = v114;
    if (v114 >= 1.0) {
      float v115 = 0.0;
    }
    *(float *)&unint64_t v317 = v115;
    unint64_t v8 = v114 >= 1.0;
  }
  uint64_t v116 = v279;
  unint64_t v117 = *(void *)(v291 + 80);
  sub_260D907BC(v288, (uint64_t)v7, &qword_26A8EAE78);
  uint64_t v119 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48);
  uint64_t v118 = v116 + 48;
  v262 = v119;
  if (v119((uint64_t)v7, 1, v113) == 1)
  {
    uint64_t v120 = v277;
    sub_260D907BC((uint64_t)v72, v277, &qword_26A8EAE78);
    swift_bridgeObjectRetain();
    sub_260D90820((uint64_t)v7, &qword_26A8EAE78);
  }
  else
  {
    uint64_t v120 = v277;
    sub_260F9C67C((uint64_t)v7, v277);
    v308(v120, 0, 1, v113);
    swift_bridgeObjectRetain();
  }
  uint64_t v121 = v281;
  unint64_t v266 = v117;
  unsigned int v122 = v262(v120, 1, v113);
  uint64_t v279 = v118;
  uint64_t v123 = (uint64_t)v112;
  if (v122)
  {
    unint64_t v124 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v300 + 56);
    uint64_t v125 = v121;
    uint64_t v126 = 1;
    uint64_t v127 = v305;
  }
  else
  {
    uint64_t v128 = v300;
    uint64_t v129 = v305;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v300 + 16))(v121, v120, v305);
    uint64_t v130 = v128;
    uint64_t v113 = v282;
    unint64_t v124 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 56);
    uint64_t v125 = v121;
    uint64_t v126 = 0;
    uint64_t v127 = v129;
  }
  uint64_t v308 = v124;
  v124(v125, v126, 1, v127);
  uint64_t v131 = 1;
  uint64_t v132 = v262;
  if (!v262(v120, 1, v113))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v300 + 16))(v283, v120 + *(int *)(v113 + 20), v305);
    uint64_t v131 = 0;
  }
  uint64_t v294 = v300 + 56;
  v308(v283, v131, 1, v305);
  if (v132(v120, 1, v113))
  {
    id v267 = 0;
  }
  else
  {
    id v267 = *(id *)(v120 + *(int *)(v113 + 24));
    id v133 = v267;
  }
  uint64_t v134 = v123;
  sub_260D90158(v258, (uint64_t)&v320);
  uint64_t v135 = v321;
  uint64_t v136 = v322;
  __swift_project_boxed_opaque_existential_1(&v320, v321);
  id v137 = (uint64_t (*)(unint64_t, uint64_t, uint64_t *))v136[4];
  LOBYTE(v319) = v8;
  unint64_t v68 = v137(v317 | ((unint64_t)v8 << 32), v135, v136);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v320);
  unint64_t v265 = v68;
  uint64_t v261 = *(void *)(v68 + 16);
  float v138 = *(float *)((char *)v289 + v272[16]) * (float)v261;
  if ((~LODWORD(v138) & 0x7F800000) == 0) {
    goto LABEL_153;
  }
  unint64_t v8 = v291;
  uint64_t v140 = v311;
  unint64_t v139 = v312;
  uint64_t v141 = v284;
  if (v138 <= -9.2234e18)
  {
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  if (v138 >= 9.2234e18) {
    goto LABEL_155;
  }
  if (v261)
  {
    unint64_t v260 = v265 + 32;
    unint64_t v317 = (uint64_t *)(v300 + 16);
    uint64_t v259 = (uint64_t)v138;
    v313 = (unint64_t *)(v300 + 8);
    uint64_t v142 = (unint64_t *)(v300 + 32);
    uint64_t v143 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v300 + 48);
    uint64_t v307 = (void (**)(void))(v300 + 40);
    swift_bridgeObjectRetain();
    unint64_t v144 = 0;
    long long v298 = xmmword_260FE7060;
    uint64_t v304 = v142;
    uint64_t v296 = v143;
    while (1)
    {
      if ((unint64_t)v144 >= *(void *)(v265 + 16)) {
        goto LABEL_147;
      }
      uint64_t v284 = v141;
      uint64_t v295 = *(void *)(v260 + 8 * (void)v144);
      int64_t v145 = *(void *)(v139 + 16);
      uint64_t v311 = v140;
      unint64_t v312 = v139;
      int v270 = v144;
      if (v145)
      {
        uint64_t v320 = (uint64_t *)MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_260F63738(0, v145, 0);
        uint64_t v146 = *(unsigned __int8 *)(v300 + 80);
        uint64_t v147 = (v146 + 32) & ~v146;
        unint64_t v148 = v139 + v147;
        unint64_t v149 = *(void *)(v300 + 72);
        unint64_t v314 = *(void *)(v300 + 16);
        unint64_t v303 = v147 + 2 * v149;
        uint64_t v299 = v146 | 7;
        uint64_t v150 = v305;
        unint64_t v315 = v149;
        uint64_t v306 = (void (*)(void))v147;
        do
        {
          unint64_t v316 = v145;
          uint64_t v151 = v318;
          uint64_t v152 = v147;
          uint64_t v153 = (void (*)(uint64_t, uint64_t *, uint64_t))v314;
          ((void (*)(uint64_t *, unint64_t, uint64_t))v314)(v318, v148, v150);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
          uint64_t v154 = swift_allocObject();
          *(_OWORD *)(v154 + 16) = v298;
          uint64_t v155 = v152;
          uint64_t v156 = v150;
          uint64_t v157 = v154 + v155;
          v153(v154 + v155, v151, v156);
          v153(v157 + v149, v151, v156);
          uint64_t v319 = v154;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C8);
          sub_260D90340(&qword_26A8E84D0, &qword_26A8E84C8);
          sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
          sub_260FE3AD0();
          ((void (*)(uint64_t *, uint64_t))*v313)(v151, v156);
          uint64_t v7 = v320;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_260F63738(0, v7[2] + 1, 1);
            uint64_t v7 = v320;
          }
          unint64_t v159 = v7[2];
          unint64_t v158 = v7[3];
          uint64_t v147 = (uint64_t)v306;
          unint64_t v149 = v315;
          unint64_t v160 = v316;
          if (v159 >= v158 >> 1)
          {
            sub_260F63738(v158 > 1, v159 + 1, 1);
            uint64_t v7 = v320;
          }
          void v7[2] = v159 + 1;
          uint64_t v161 = (char *)v7 + v147 + v159 * v149;
          uint64_t v142 = v304;
          uint64_t v150 = v305;
          ((void (*)(char *, char *, uint64_t))*v304)(v161, v301, v305);
          v148 += v149;
          int64_t v145 = v160 - 1;
        }
        while (v145);
        swift_bridgeObjectRelease();
        uint64_t v72 = v287;
        unint64_t v8 = v291;
        uint64_t v134 = (uint64_t)v286;
        uint64_t v143 = v296;
        unint64_t v144 = v270;
      }
      else
      {
        uint64_t v7 = (uint64_t *)MEMORY[0x263F8EE78];
      }
      BOOL v162 = *(void *)(v8 + 88) && v144 == (uint64_t *)v259;
      uint64_t v163 = v281;
      if (v162) {
        break;
      }
LABEL_93:
      uint64_t v179 = v163;
      uint64_t v180 = v278;
      uint64_t v72 = &qword_26A8EAB90;
      sub_260D907BC(v179, v278, &qword_26A8EAB90);
      uint64_t v181 = *v143;
      uint64_t v182 = v305;
      if ((*v143)(v180, 1, v305) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v230 = v180;
LABEL_138:
        sub_260D90820(v230, &qword_26A8EAB90);
        uint64_t v184 = (uint64_t)v287;
LABEL_140:
        sub_260F7DF0C();
        swift_allocError();
        unsigned char *v234 = 0;
        swift_willThrow();

        sub_260D90820(v283, &qword_26A8EAB90);
        sub_260D90820(v281, &qword_26A8EAB90);
        unint64_t v68 = (unint64_t)&qword_26A8EAE78;
        uint64_t v235 = v184;
        goto LABEL_195;
      }
      unint64_t v8 = *v142;
      ((void (*)(uint64_t, uint64_t, uint64_t))*v142)(v285, v180, v182);
      sub_260D907BC(v283, v134, &qword_26A8EAB90);
      if (v181(v134, 1, v182) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t))*v313)(v285, v182);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v230 = v134;
        goto LABEL_138;
      }
      uint64_t v183 = (uint64_t)v280;
      ((void (*)(char *, uint64_t, uint64_t))v8)(v280, v134, v182);
      uint64_t v184 = (uint64_t)v287;
      if (!v267)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v231 = v183;
        long long v232 = (void (*)(uint64_t, uint64_t))*v313;
        uint64_t v233 = v305;
        ((void (*)(uint64_t, uint64_t))*v313)(v231, v305);
        v232(v285, v233);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v267 = 0;
        goto LABEL_140;
      }
      id v264 = v267;
      uint64_t v185 = v284;
      uint64_t v186 = sub_260F87280((uint64_t)v7, v295, v285, v183, (uint64_t)v264, v266);
      if (v185)
      {
        swift_bridgeObjectRelease();
        id v236 = v264;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        os_signpost_type_t v237 = (void (*)(uint64_t, uint64_t))*v313;
        uint64_t v238 = v305;
        ((void (*)(char *, uint64_t))*v313)(v280, v305);
        v237(v285, v238);

        swift_bridgeObjectRelease();
        sub_260D90820(v283, &qword_26A8EAB90);
        sub_260D90820(v281, &qword_26A8EAB90);
        swift_bridgeObjectRelease();
        unint64_t v68 = (unint64_t)&qword_26A8EAE78;
        sub_260D90820(v184, &qword_26A8EAE78);
        sub_260D90820(v288, &qword_26A8EAE78);
        sub_260D90820(v277, &qword_26A8EAE78);
        swift_bridgeObjectRelease();
        return v68;
      }
      unint64_t v68 = v186;
      uint64_t v187 = v311;
      uint64_t v188 = swift_bridgeObjectRelease();
      uint64_t v189 = (uint64_t)v289;
      double v191 = MEMORY[0x270FA5388](v188, v190);
      *(&v256 - 2) = v291;
      *((_DWORD *)&v256 - 2) = LODWORD(v191);
      uint64_t v268 = sub_260F5C944((void (*)(uint64_t))sub_260F9C584, (uint64_t)(&v256 - 4), v68);
      swift_bridgeObjectRelease();
      uint64_t v192 = *(void *)(v189 + v263);
      if (v192 < 0) {
        goto LABEL_148;
      }
      uint64_t v284 = 0;
      if (v192)
      {
        uint64_t v72 = v318;
        if ((unint64_t)(v192 - 1) < *(void *)(v257 + 16))
        {
          if ((unint64_t)(v192 - 1) < *(void *)(v268 + 16))
          {
            unint64_t v193 = (unint64_t)v187;
            uint64_t v290 = (void (*)(char *, uint64_t *, unint64_t))v8;
            uint64_t v293 = v181;
            unint64_t v8 = 0;
            unint64_t v194 = (*(unsigned __int8 *)(v300 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v300 + 80);
            uint64_t v299 = v268 + v194;
            uint64_t v195 = v258;
            unint64_t v196 = v312;
            unint64_t v197 = v305;
            uint64_t v292 = v192;
            unint64_t v316 = v194;
            while (1)
            {
              uint64_t v311 = (void (**)(char *, uint64_t *, uint64_t))v193;
              unint64_t v315 = v195;
              sub_260D90158(v195, (uint64_t)&v320);
              unint64_t v68 = v321;
              uint64_t v7 = v322;
              __swift_project_boxed_opaque_existential_1(&v320, v321);
              unint64_t v303 = *(void *)(v300 + 72);
              unint64_t v198 = v303 * v8;
              uint64_t v199 = *(void (**)(uint64_t *, unint64_t, unint64_t))(v300 + 16);
              int64_t v200 = v72;
              uint64_t v72 = v317;
              v199(v200, v299 + v303 * v8, v197);
              if (v8 >= *(void *)(v196 + 16)) {
                break;
              }
              unint64_t v314 = v198;
              uint64_t v201 = v302;
              v199((uint64_t *)v302, v196 + v316 + v198, v197);
              ((void (*)(uint64_t *, uint64_t, char *, unint64_t, uint64_t *))v7[10])(v318, v295, v201, v68, v7);
              unint64_t v68 = *v313;
              uint64_t v202 = v201;
              uint64_t v72 = v318;
              ((void (*)(char *, unint64_t))*v313)(v202, v197);
              ((void (*)(uint64_t *, unint64_t))v68)(v72, v197);
              uint64_t v203 = (void (*)(char *, uint64_t *, unint64_t))v199;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v196 = sub_260F7B490(v196);
              }
              uint64_t v7 = (uint64_t *)v316;
              if (v8 >= *(void *)(v196 + 16)) {
                goto LABEL_144;
              }
              unint64_t v312 = v196;
              uint64_t v72 = (uint64_t *)(v196 + v316 + v314);
              uint64_t v306 = *v307;
              v306();
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v320);
              sub_260D90158(v315, (uint64_t)&v320);
              unint64_t v68 = v197;
              uint64_t v204 = v321;
              uint64_t v205 = v322;
              __swift_project_boxed_opaque_existential_1(&v320, v321);
              uint64_t v206 = ((uint64_t (*)(uint64_t, uint64_t *))v205[9])(v204, v205);
              uint64_t v207 = *(void *)(v206 + 16);
              if (v207)
              {
                uint64_t v208 = (uint64_t)v7 + v206 + (v207 - 1) * v303;
                uint64_t v7 = v297;
                v199(v297, v208, v68);
                uint64_t v209 = v7;
                uint64_t v210 = 0;
              }
              else
              {
                uint64_t v7 = v297;
                uint64_t v209 = v297;
                uint64_t v210 = 1;
              }
              uint64_t v211 = v308;
              v308((uint64_t)v209, v210, 1, v68);
              unint64_t v197 = v68;
              swift_bridgeObjectRelease();
              unsigned int v212 = v293((uint64_t)v7, 1, v68);
              unint64_t v196 = v312;
              if (v212 == 1)
              {
                unint64_t v193 = (unint64_t)v311;
                if (v8 >= *(void *)(v312 + 16)) {
                  goto LABEL_146;
                }
                v203(v309, v72, v68);
                sub_260D90820((uint64_t)v7, &qword_26A8EAB90);
              }
              else
              {
                v290(v309, v7, v68);
                unint64_t v193 = (unint64_t)v311;
              }
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v320);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v68 = v316;
              uint64_t v214 = (char *)v314;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                unint64_t v193 = sub_260F7B490(v193);
              }
              if (v8 >= *(void *)(v193 + 16)) {
                goto LABEL_145;
              }
              uint64_t v308 = v211;
              ++v8;
              ((void (*)(char *, char *, unint64_t))v306)(&v214[v193 + v68], v309, v197);
              uint64_t v195 = v315 + 40;
              uint64_t v72 = v318;
              if (v292 == v8) {
                goto LABEL_119;
              }
            }
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
            goto LABEL_150;
          }
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
LABEL_151:
        __break(1u);
        goto LABEL_152;
      }
      unint64_t v196 = v312;
      unint64_t v193 = (unint64_t)v187;
LABEL_119:
      swift_bridgeObjectRelease();
      uint64_t v215 = v289;
      unint64_t v216 = v196;
      uint64_t v140 = (void (**)(char *, uint64_t *, uint64_t))v193;
      if (*((unsigned char *)v289 + v272[23])) {
        unint64_t v217 = v193;
      }
      else {
        unint64_t v217 = v196;
      }
      swift_bridgeObjectRetain();
      __swift_project_boxed_opaque_existential_1(v215, v215[3]);
      uint64_t v218 = sub_260E5C064();
      uint64_t v220 = v219;
      uint64_t v221 = v276;
      sub_260F7B7B0((uint64_t)v215, (uint64_t)v276 + *(int *)(v273 + 32));
      *uint64_t v221 = v218;
      v221[1] = v220;
      uint64_t v222 = v270;
      uint64_t v223 = (uint64_t *)v261;
      v221[2] = (uint64_t)v270;
      v221[3] = (uint64_t)v223;
      v221[4] = v217;
      char v224 = v274(v221);
      id v225 = v264;

      if ((v224 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_260F9C5B8((uint64_t)v221);
        os_signpost_id_t v239 = (void (*)(uint64_t, uint64_t))*v313;
        uint64_t v240 = v305;
        ((void (*)(char *, uint64_t))*v313)(v280, v305);
        v239(v285, v240);
        unint64_t v68 = MEMORY[0x263F8EE78];
        uint64_t v72 = v287;
        goto LABEL_200;
      }
      uint64_t v7 = (uint64_t *)((char *)v222 + 1);
      sub_260F9C5B8((uint64_t)v221);
      unint64_t v68 = *v313;
      uint64_t v226 = v305;
      ((void (*)(char *, uint64_t))*v313)(v280, v305);
      ((void (*)(uint64_t, uint64_t))v68)(v285, v226);
      BOOL v162 = v7 == v223;
      uint64_t v141 = v284;
      uint64_t v72 = v287;
      unint64_t v8 = v291;
      unint64_t v139 = v216;
      uint64_t v134 = (uint64_t)v286;
      uint64_t v142 = v304;
      uint64_t v143 = v296;
      unint64_t v144 = v7;
      if (v162)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_127;
      }
    }
    unint64_t v316 = *(void *)(v8 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v68 = *(void *)(v8 + 80);
    if (v68 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v164 = sub_260FE4E40();
      if (v164) {
        goto LABEL_77;
      }
    }
    else
    {
      uint64_t v164 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v164)
      {
LABEL_77:
        if (v164 < 1) {
          goto LABEL_156;
        }
        for (uint64_t i = 0; i != v164; ++i)
        {
          if ((v68 & 0xC000000000000001) != 0) {
            MEMORY[0x26122B4C0](i, v68);
          }
          else {
            swift_retain();
          }
          ManagedMLModel.unloadResources()();
          swift_release();
        }
      }
    }
    swift_bridgeObjectRelease();

    sub_260D90820(v283, &qword_26A8EAB90);
    uint64_t v166 = v281;
    sub_260D90820(v281, &qword_26A8EAB90);
    uint64_t v167 = v277;
    sub_260F9C614((uint64_t)v72, v277);
    uint64_t v168 = 1;
    uint64_t v169 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v262;
    unsigned int v170 = v262(v167, 1, v282);
    uint64_t v171 = v305;
    if (!v170)
    {
      ((void (*)(char *, uint64_t, uint64_t))*v317)(v271, v167, v305);
      uint64_t v168 = 0;
    }
    uint64_t v172 = (uint64_t)v271;
    v308((uint64_t)v271, v168, 1, v171);
    sub_260DD7C14(v172, v166, &qword_26A8EAB90);
    int v173 = v169(v167, 1, v282);
    uint64_t v163 = v166;
    id v174 = v269;
    uint64_t v142 = v304;
    if (v173)
    {
      v308((uint64_t)v269, 1, 1, v171);
      uint64_t v175 = (uint64_t)v174;
      uint64_t v176 = v282;
    }
    else
    {
      uint64_t v177 = v282;
      ((void (*)(char *, uint64_t, uint64_t))*v317)(v269, v167 + *(int *)(v282 + 20), v171);
      v308((uint64_t)v174, 0, 1, v171);
      uint64_t v175 = (uint64_t)v174;
      uint64_t v176 = v177;
    }
    sub_260DD7C14(v175, v283, &qword_26A8EAB90);
    if (v262(v167, 1, v176))
    {
      id v267 = 0;
    }
    else
    {
      id v267 = *(id *)(v167 + *(int *)(v176 + 24));
      id v178 = v267;
    }
    unint64_t v266 = v316;
    uint64_t v134 = (uint64_t)v286;
    uint64_t v143 = v296;
    goto LABEL_93;
  }
  swift_bridgeObjectRelease();
LABEL_127:
  uint64_t v311 = v140;
  unint64_t v312 = v139;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LODWORD(v7) = *(unsigned __int8 *)(v8 + 128);
  if (v7 == 1)
  {
    unint64_t v68 = *(void *)(v8 + 80);
    if (!(v68 >> 62))
    {
      uint64_t v227 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v227)
      {
LABEL_130:
        if (v227 < 1) {
          goto LABEL_203;
        }
        for (uint64_t j = 0; j != v227; ++j)
        {
          if ((v68 & 0xC000000000000001) != 0) {
            MEMORY[0x26122B4C0](j, v68);
          }
          else {
            swift_retain();
          }
          ManagedMLModel.unloadResources()();
          swift_release();
        }
      }
LABEL_158:
      swift_bridgeObjectRelease();
      goto LABEL_159;
    }
LABEL_157:
    swift_bridgeObjectRetain();
    uint64_t result = sub_260FE4E40();
    uint64_t v227 = result;
    if (result) {
      goto LABEL_130;
    }
    goto LABEL_158;
  }
LABEL_159:
  unint64_t v241 = *(void *)(v8 + 88);
  if (v241)
  {
    if (v241 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_260FE4E40();
      uint64_t v242 = result;
      if (result) {
        goto LABEL_162;
      }
    }
    else
    {
      uint64_t v242 = *(void *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v242)
      {
LABEL_162:
        if (v242 >= 1)
        {
          for (uint64_t k = 0; k != v242; ++k)
          {
            if ((v241 & 0xC000000000000001) != 0) {
              MEMORY[0x26122B4C0](k, v241);
            }
            else {
              swift_retain();
            }
            ManagedMLModel.unloadResources()();
            swift_release();
          }
          goto LABEL_169;
        }
        __break(1u);
LABEL_203:
        __break(1u);
        return result;
      }
    }
LABEL_169:
    swift_bridgeObjectRelease();
  }
  unint64_t v244 = *(void *)(v8 + 80);
  if (v244 >> 62) {
    goto LABEL_188;
  }
  uint64_t v245 = *(void *)((v244 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (LODWORD(v318) = v7; v245; LODWORD(v318) = v7)
  {
    unint64_t v8 = 4;
    uint64_t v7 = &OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel;
    while (1)
    {
      unint64_t v246 = v8 - 4;
      if ((v244 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v72 = (uint64_t *)MEMORY[0x26122B4C0](v8 - 4, v244);
      unint64_t v247 = v8 - 3;
      if (__OFADD__(v246, 1)) {
        goto LABEL_187;
      }
LABEL_180:
      uint64_t v248 = *(void **)((char *)v72 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel);
      if (v248)
      {
        id v249 = objc_msgSend(v248, sel_modelDescription);
        id v250 = objc_msgSend(v249, sel_inputDescriptionsByName);

        sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
        uint64_t v251 = sub_260FE3EB0();

        if (*(void *)(v251 + 16))
        {
          sub_260DBACB4(0x746E6574616CLL, 0xE600000000000000);
          if (v252)
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v72 = v287;
            goto LABEL_186;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      ++v8;
      uint64_t v72 = v287;
      if (v247 == v245)
      {
        swift_bridgeObjectRelease();
LABEL_186:
        unint64_t v8 = v291;
        goto LABEL_190;
      }
    }
    uint64_t v72 = *(uint64_t **)(v244 + 8 * v8);
    swift_retain();
    unint64_t v247 = v8 - 3;
    if (!__OFADD__(v246, 1)) {
      goto LABEL_180;
    }
LABEL_187:
    __break(1u);
LABEL_188:
    swift_bridgeObjectRetain();
    uint64_t v245 = sub_260FE4E40();
  }
  swift_bridgeObjectRelease();
LABEL_190:
  uint64_t v253 = *(void *)(v8 + 104);
  uint64_t v254 = v284;
  int64_t v255 = Decoder.decode(_:scaleFactor:outputRange:inferAlpha:)((uint64_t)v311, 0, *(void *)(v8 + 96), v253, *(float *)((char *)v289 + v272[27]));
  if (v254)
  {
    if (v318)
    {
      ManagedMLModel.unloadResources()();
      if (v253) {
        ManagedMLModel.unloadResources()();
      }
    }
    swift_bridgeObjectRelease();

    sub_260D90820(v283, &qword_26A8EAB90);
    sub_260D90820(v281, &qword_26A8EAB90);
    unint64_t v68 = (unint64_t)&qword_26A8EAE78;
    uint64_t v235 = (uint64_t)v72;
LABEL_195:
    sub_260D90820(v235, &qword_26A8EAE78);
    sub_260D90820(v288, &qword_26A8EAE78);
    sub_260D90820(v277, &qword_26A8EAE78);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v68 = sub_260F6275C(v255);
    swift_bridgeObjectRelease();
    if (v318)
    {
      ManagedMLModel.unloadResources()();
      if (v253) {
        ManagedMLModel.unloadResources()();
      }
    }
    swift_bridgeObjectRelease();
    id v225 = v267;
LABEL_200:

    sub_260D90820(v283, &qword_26A8EAB90);
    sub_260D90820(v281, &qword_26A8EAB90);
    sub_260D90820((uint64_t)v72, &qword_26A8EAE78);
    sub_260D90820(v288, &qword_26A8EAE78);
    sub_260D90820(v277, &qword_26A8EAE78);
    swift_bridgeObjectRelease();
  }
  return v68;
}

uint64_t sub_260F9A160@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v97 = a3;
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v100 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98, v5);
  uint64_t v7 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)&v79 - v10;
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v15 = (char *)&v79 - v14;
  MEMORY[0x270FA5388](v16, v17);
  int64_t v101 = (char *)&v79 - v18;
  MEMORY[0x270FA5388](v19, v20);
  uint64_t v99 = (char *)&v79 - v21;
  MEMORY[0x270FA5388](v22, v23);
  uint64_t v25 = (char *)&v79 - v24;
  MEMORY[0x270FA5388](v26, v27);
  uint64_t v29 = (char *)&v79 - v28;
  long long v102 = *(_OWORD *)(a1 + 24);
  uint64_t v30 = v102;
  uint64_t v31 = __swift_project_boxed_opaque_existential_1((void *)a1, v102);
  long long v105 = v102;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v104);
  uint64_t v33 = v31;
  int v34 = a2;
  uint64_t v35 = v106;
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(boxed_opaque_existential_1Tm, v33, v30);
  uint64_t v36 = v103;
  sub_260F9B48C(v29, v25, (uint64_t)v104, v34);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v104);
  if (!v36)
  {
    unint64_t v103 = v15;
    uint64_t v95 = v7;
    uint64_t v96 = v11;
    long long v102 = *(_OWORD *)(a1 + 64);
    uint64_t v38 = v102;
    uint64_t v39 = __swift_project_boxed_opaque_existential_1((void *)(a1 + 40), v102);
    long long v105 = v102;
    uint64_t v40 = __swift_allocate_boxed_opaque_existential_1Tm(v104);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v40, v39, v38);
    uint64_t v41 = v99;
    sub_260F9B48C(v99, v101, (uint64_t)v104, v34 & 1);
    uint64_t v94 = 0;
    int v93 = v34;
    uint64_t v82 = a1;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v104);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
    uint64_t v43 = v100;
    uint64_t v44 = *(void *)(v100 + 72);
    uint64_t v45 = *(unsigned __int8 *)(v100 + 80);
    uint64_t v46 = (v45 + 32) & ~v45;
    uint64_t v89 = v42;
    uint64_t v88 = v46 + 2 * v44;
    uint64_t v87 = v45 | 7;
    uint64_t v47 = swift_allocObject();
    long long v85 = xmmword_260FE7060;
    *(_OWORD *)(v47 + 16) = xmmword_260FE7060;
    uint64_t v48 = v41;
    uint64_t v90 = v46;
    uint64_t v49 = v47 + v46;
    uint64_t v50 = v43 + 16;
    uint64_t v51 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 16);
    uint64_t v52 = v98;
    v51(v49, v48, v98);
    uint64_t v91 = v44;
    uint64_t v92 = v29;
    uint64_t v81 = v50;
    uint64_t v80 = v51;
    v51(v49 + v44, v29, v52);
    v104[0] = v47;
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C8);
    uint64_t v54 = sub_260D90340(&qword_26A8E84D0, &qword_26A8E84C8);
    uint64_t v55 = sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
    uint64_t v86 = v53;
    uint64_t v84 = v54;
    uint64_t v83 = v55;
    sub_260FE3AD0();
    unint64_t v56 = *(void *)(v35 + 80);
    *(void *)&long long v102 = v25;
    if (v56 >> 62) {
      goto LABEL_18;
    }
    uint64_t v57 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v57; uint64_t v57 = sub_260FE4E40())
    {
      uint64_t v58 = 4;
      while (1)
      {
        uint64_t v59 = v58 - 4;
        if ((v56 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v60 = MEMORY[0x26122B4C0](v58 - 4, v56);
        uint64_t v61 = v58 - 3;
        if (__OFADD__(v59, 1)) {
          goto LABEL_17;
        }
LABEL_12:
        uint64_t v62 = *(void **)(v60 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel);
        if (v62)
        {
          id v63 = objc_msgSend(v62, sel_modelDescription);
          id v64 = objc_msgSend(v63, sel_inputDescriptionsByName);

          sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
          uint64_t v65 = sub_260FE3EB0();

          if (*(void *)(v65 + 16))
          {
            sub_260DBACB4(0x746E6574616CLL, 0xE600000000000000);
            if (v66)
            {
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v67 = v98;
              unint64_t v68 = v80;
              v80((uint64_t)v96, v103, v98);
              goto LABEL_20;
            }
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
        ++v58;
        if (v61 == v57) {
          goto LABEL_19;
        }
      }
      uint64_t v60 = *(void *)(v56 + 8 * v58);
      swift_retain();
      uint64_t v61 = v58 - 3;
      if (!__OFADD__(v59, 1)) {
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
    }
LABEL_19:
    swift_bridgeObjectRelease();
    sub_260F7A678();
    uint64_t v67 = v98;
    unint64_t v68 = v80;
LABEL_20:
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = v85;
    uint64_t v70 = v69 + v90;
    v68(v69 + v90, v101, v67);
    v68(v70 + v91, (char *)v102, v67);
    v104[0] = v69;
    uint64_t v71 = v95;
    sub_260FE3AD0();
    uint64_t v72 = v97;
    if (v93) {
      uint64_t v73 = sub_260F9BDAC(v82);
    }
    else {
      uint64_t v73 = (uint64_t)sub_260F9C168(v106, v82);
    }
    uint64_t v74 = v73;
    uint64_t v75 = v100;
    uint64_t v76 = *(void (**)(char *, uint64_t))(v100 + 8);
    v76(v103, v67);
    v76(v101, v67);
    v76(v99, v67);
    v76((char *)v102, v67);
    v76(v92, v67);
    uint64_t v77 = *(void (**)(uint64_t, char *, uint64_t))(v75 + 32);
    v77(v72, v96, v67);
    uint64_t v78 = type metadata accessor for DiffusionBaseXLPipeline.ModelInputs();
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v77)(v72 + *(int *)(v78 + 20), v71, v67);
    *(void *)(v72 + *(int *)(v78 + 24)) = v74;
  }
  return result;
}

uint64_t sub_260F9A928@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for PipelineConfiguration(0);
  uint64_t v5 = v4;
  unsigned int v6 = *(unsigned __int16 *)(a1 + v4[24]);
  if (!(v6 >> 14))
  {
    int64_t v16 = *(void *)(a1 + v4[18]);
    uint64_t v17 = type metadata accessor for DPMSolverMultistepScheduler();
    swift_allocObject();
    uint64_t result = DPMSolverMultistepScheduler.init(stepCount:trainStepCount:betaSchedule:betaStart:betaEnd:timeStepSpacing:predictionType:)(v16, 1000, 1, SBYTE1(v6), v6, 0.00085, 0.012);
    uint64_t v19 = &protocol witness table for DPMSolverMultistepScheduler;
LABEL_8:
    a2[3] = v17;
    a2[4] = (uint64_t)v19;
    *a2 = result;
    return result;
  }
  if (v6 >> 14 != 1)
  {
    int64_t v20 = *(void *)(a1 + v4[18]);
    uint64_t v17 = type metadata accessor for PNDMScheduler();
    swift_allocObject();
    uint64_t result = PNDMScheduler.init(stepCount:trainStepCount:betaSchedule:betaStart:betaEnd:)(v20, 1000, 1, 0.00085, 0.012);
    uint64_t v19 = &protocol witness table for PNDMScheduler;
    goto LABEL_8;
  }
  int v7 = *(unsigned __int8 *)(a1 + v4[25]);
  uint64_t v8 = *(unsigned int *)(a1 + v4[19]);
  if (*(unsigned char *)(a1 + v5[25]))
  {
    if (v7 != 1)
    {
      uint64_t v31 = &type metadata for NvRandomSource;
      uint64_t v32 = &off_270D24A10;
      uint64_t v29 = v8;
      int v30 = 0;
      goto LABEL_12;
    }
    uint64_t v9 = sub_260F6E4E8(v8);
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    char v15 = v14;
    uint64_t v31 = &type metadata for TorchRandomSource;
    uint64_t v32 = &off_270D24368;
  }
  else
  {
    uint64_t v9 = sub_260F6E4E8(v8);
    uint64_t v11 = v21;
    uint64_t v13 = v22;
    char v15 = v23;
    uint64_t v31 = &type metadata for NumPyRandomSource;
    uint64_t v32 = &off_270D24488;
  }
  uint64_t v24 = swift_allocObject();
  uint64_t v29 = v24;
  *(void *)(v24 + 16) = v9;
  *(void *)(v24 + 24) = v11;
  *(void *)(v24 + 32) = v13;
  *(unsigned char *)(v24 + 40) = v15 & 1;
LABEL_12:
  uint64_t v25 = *(void *)(a1 + v5[18]);
  sub_260D90158((uint64_t)&v29, (uint64_t)v28);
  uint64_t v26 = type metadata accessor for LCMScheduler();
  swift_allocObject();
  uint64_t v27 = LCMScheduler.init(stepCount:trainStepCount:betaSchedule:betaStart:betaEnd:predictionType:generator:)(v25, 1000, 1, 0, (uint64_t)v28, 0.00085, 0.012);
  a2[3] = v26;
  a2[4] = (uint64_t)&protocol witness table for LCMScheduler;
  *a2 = v27;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
}

uint64_t sub_260F9ABA0(uint64_t a1, void *a2)
{
  uint64_t v4 = v3;
  uint64_t v65 = a1;
  uint64_t v69 = (uint64_t (**)(uint64_t, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABA8);
  MEMORY[0x270FA5388](v69, v6);
  unint64_t v68 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v70 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v13);
  char v15 = (char *)&v59 - v14;
  uint64_t v64 = v2;
  Unet.latentSampleShape.getter(*(void *)(v2 + 80));
  uint64_t v17 = v16;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if (v17[2]) {
      goto LABEL_3;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = (uint64_t)sub_260F7B454(v17);
  uint64_t v17 = (void *)result;
  if (!*(void *)(result + 16)) {
    goto LABEL_25;
  }
LABEL_3:
  uint64_t v61 = v11;
  uint64_t v71 = v17;
  v17[4] = 1;
  uint64_t v19 = a2[3];
  uint64_t v20 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v19);
  float v21 = (*(float (**)(uint64_t, uint64_t))(v20 + 64))(v19, v20);
  uint64_t v22 = (int *)type metadata accessor for PipelineConfiguration(0);
  uint64_t v23 = v65;
  int v24 = *(unsigned __int8 *)(v65 + v22[25]);
  uint64_t result = *(unsigned int *)(v65 + v22[19]);
  uint64_t v60 = a2;
  if (!v24)
  {
    uint64_t v25 = v22;
    uint64_t v26 = sub_260F6E4E8(result);
    uint64_t v28 = v33;
    uint64_t v30 = v34;
    char v32 = v35;
    uint64_t v74 = &type metadata for NumPyRandomSource;
    uint64_t v75 = &off_270D24488;
    goto LABEL_7;
  }
  if (v24 == 1)
  {
    uint64_t v25 = v22;
    uint64_t v26 = sub_260F6E4E8(result);
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    char v32 = v31;
    uint64_t v74 = &type metadata for TorchRandomSource;
    uint64_t v75 = &off_270D24368;
LABEL_7:
    uint64_t result = swift_allocObject();
    uint64_t v22 = v25;
    uint64_t v23 = v65;
    uint64_t v72 = result;
    *(void *)(result + 16) = v26;
    *(void *)(result + 24) = v28;
    *(void *)(result + 32) = v30;
    *(unsigned char *)(result + 40) = v32 & 1;
    goto LABEL_9;
  }
  uint64_t v74 = &type metadata for NvRandomSource;
  uint64_t v75 = &off_270D24A10;
  uint64_t v72 = result;
  int v73 = 0;
LABEL_9:
  int64_t v36 = *(void *)(v23 + v22[17]);
  if (v36 < 0)
  {
LABEL_26:
    __break(1u);
    return result;
  }
  uint64_t v37 = MEMORY[0x263F8EE78];
  if (v36)
  {
    uint64_t v62 = v22;
    uint64_t v63 = v3;
    uint64_t v76 = MEMORY[0x263F8EE78];
    sub_260F63738(0, v36, 0);
    uint64_t v66 = v70 + 32;
    uint64_t v67 = v8;
    uint64_t v37 = v76;
    double v38 = v21;
    do
    {
      uint64_t v39 = v74;
      uint64_t v40 = v75;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v72, (uint64_t)v74);
      uint64_t v41 = v37;
      uint64_t v42 = v15;
      uint64_t v43 = (void (*)(uint64_t, ValueMetadata *, _UNKNOWN **, double, double))v40[2];
      uint64_t v44 = swift_bridgeObjectRetain();
      v43(v44, v39, v40, 0.0, v38);
      char v15 = v42;
      uint64_t v37 = v41;
      swift_bridgeObjectRelease();
      sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
      sub_260D90340(&qword_26A8EABB0, &qword_26A8EABA8);
      uint64_t v8 = v67;
      sub_260FE3BC0();
      uint64_t v76 = v41;
      unint64_t v46 = *(void *)(v41 + 16);
      unint64_t v45 = *(void *)(v41 + 24);
      if (v46 >= v45 >> 1)
      {
        sub_260F63738(v45 > 1, v46 + 1, 1);
        uint64_t v37 = v76;
      }
      *(void *)(v37 + 16) = v46 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v37+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v46, v15, v8);
      --v36;
    }
    while (v36);
    uint64_t v22 = v62;
    uint64_t v4 = v63;
    uint64_t v23 = v65;
  }
  uint64_t v47 = v23 + v22[13];
  unsigned __int8 v48 = *(unsigned char *)(v47 + 8);
  if ((v48 & 1) == 0)
  {
    float v49 = *(float *)(v23 + v22[15]);
    if (v49 < 1.0)
    {
      uint64_t v50 = *(void **)v47;
      uint64_t v51 = *(void **)(v64 + 112);
      if (v51)
      {
        uint64_t v52 = *(void **)(v64 + 120);
        float v53 = *(float *)(v23 + v22[26]);
        sub_260F7DF60(v50, v48);
        sub_260F6449C(v51, v52);
        uint64_t v54 = (uint64_t)v61;
        Encoder.encode(_:scaleFactor:random:)(v50, (uint64_t)&v72, (char *)v51, (uint64_t)v61, v53);
        if (v4)
        {

          swift_release();
          sub_260F32A14(v50, v48);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v57 = v60[3];
          uint64_t v69 = (uint64_t (**)(uint64_t, uint64_t))v60[4];
          __swift_project_boxed_opaque_existential_1(v60, v57);
          uint64_t v58 = Scheduler.addNoise(originalSample:noise:strength:)(v54, v37, v57, v69, v49);

          swift_release();
          sub_260F32A14(v50, v48);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v54, v8);
          uint64_t v37 = v58;
        }
      }
      else
      {
        id v55 = v50;
        swift_bridgeObjectRelease();
        sub_260F7DF0C();
        swift_allocError();
        *unint64_t v56 = 1;
        swift_willThrow();
        sub_260F32A14(v50, v48);
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v72);
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t DiffusionBaseXLPipeline.decodeToImages(_:configuration:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v3;
  unint64_t v7 = *(void *)(v2 + 80);
  if (v7 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_260FE4E40();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      unint64_t v21 = a2;
      uint64_t v22 = a1;
      uint64_t v23 = v4;
      uint64_t v24 = v2;
      a2 = v7 & 0xC000000000000001;
      uint64_t v9 = 4;
      uint64_t v4 = &OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel;
      while (1)
      {
        uint64_t v2 = v9 - 4;
        if (a2)
        {
          a1 = MEMORY[0x26122B4C0](v9 - 4, v7);
          uint64_t v10 = v9 - 3;
          if (__OFADD__(v2, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          a1 = *(void *)(v7 + 8 * v9);
          swift_retain();
          uint64_t v10 = v9 - 3;
          if (__OFADD__(v2, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        uint64_t v11 = *(void **)(a1 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel);
        if (v11)
        {
          id v12 = objc_msgSend(v11, sel_modelDescription);
          id v13 = objc_msgSend(v12, sel_inputDescriptionsByName);

          sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
          uint64_t v14 = sub_260FE3EB0();

          if (*(void *)(v14 + 16))
          {
            sub_260DBACB4(0x746E6574616CLL, 0xE600000000000000);
            if (v15)
            {
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_17;
            }
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
        ++v9;
        if (v10 == v8)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          uint64_t v4 = v23;
          uint64_t v2 = v24;
          a2 = v21;
          a1 = v22;
          goto LABEL_21;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v16 = *(void *)(v2 + 96);
  uint64_t v17 = *(void *)(v2 + 104);
  uint64_t v18 = type metadata accessor for PipelineConfiguration(0);
  int64_t v19 = Decoder.decode(_:scaleFactor:outputRange:inferAlpha:)(a1, 0, v16, v17, *(float *)(a2 + *(int *)(v18 + 108)));
  if (v4)
  {
    if (*(unsigned char *)(v2 + 128) == 1)
    {
      ManagedMLModel.unloadResources()();
      if (v17) {
        ManagedMLModel.unloadResources()();
      }
    }
  }
  else
  {
    a1 = sub_260F6275C(v19);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v2 + 128) == 1)
    {
      ManagedMLModel.unloadResources()();
      if (v17) {
        ManagedMLModel.unloadResources()();
      }
    }
  }
  return a1;
}

uint64_t type metadata accessor for DiffusionBaseXLPipeline.ModelInputs()
{
  uint64_t result = qword_26A8EAE80;
  if (!qword_26A8EAE80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_260F9B46C@<X0>(uint64_t *a1@<X8>)
{
  return sub_260F9A928(*(void *)(v1 + 16), a1);
}

uint64_t sub_260F9B48C(char *a1, char *a2, uint64_t a3, int a4)
{
  uint64_t v100 = a3;
  LODWORD(v102) = a4;
  uint64_t v98 = a2;
  uint64_t v97 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v104 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v90 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v94 = (char *)&v89 - v9;
  MEMORY[0x270FA5388](v10, v11);
  int v93 = (char *)&v89 - v12;
  MEMORY[0x270FA5388](v13, v14);
  uint64_t v92 = (char *)&v89 - v15;
  MEMORY[0x270FA5388](v16, v17);
  uint64_t v91 = (char *)&v89 - v18;
  MEMORY[0x270FA5388](v19, v20);
  uint64_t v22 = (char *)&v89 - v21;
  MEMORY[0x270FA5388](v23, v24);
  uint64_t v26 = (char *)&v89 - v25;
  MEMORY[0x270FA5388](v27, v28);
  uint64_t v95 = (char *)&v89 - v29;
  MEMORY[0x270FA5388](v30, v31);
  uint64_t v96 = (char *)&v89 - v32;
  MEMORY[0x270FA5388](v33, v34);
  int64_t v36 = (char *)&v89 - v35;
  MEMORY[0x270FA5388](v37, v38);
  uint64_t v40 = (char *)&v89 - v39;
  MEMORY[0x270FA5388](v41, v42);
  uint64_t v44 = (char *)&v89 - v43;
  MEMORY[0x270FA5388](v45, v46);
  unsigned __int8 v48 = (char *)&v89 - v47;
  uint64_t v49 = sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  uint64_t v113 = v48;
  sub_260FE3BE0();
  int64_t v101 = v44;
  uint64_t v89 = v49;
  sub_260FE3BE0();
  if ((v102 & 1) == 0)
  {
    uint64_t v58 = v103;
    sub_260D907BC(v103, (uint64_t)&v107, &qword_26A8EAE70);
    if (!v108)
    {
      sub_260D90820((uint64_t)&v107, &qword_26A8EAE70);
      sub_260F7DF0C();
      swift_allocError();
      unsigned char *v65 = 2;
      swift_willThrow();
      uint64_t v66 = *(void (**)(char *, uint64_t))(v104 + 8);
      v66(v101, v4);
      return ((uint64_t (*)(char *, uint64_t))v66)(v113, v4);
    }
    sub_260DD7B40(&v107, (uint64_t)v110);
    uint64_t v59 = v111;
    uint64_t v60 = v112;
    __swift_project_boxed_opaque_existential_1(v110, v111);
    uint64_t v61 = v99;
    (*(void (**)(char *, char *, uint64_t, uint64_t, uint64_t))(v60 + 16))(v26, v22, v100, v59, v60);
    uint64_t v62 = v104;
    uint64_t v63 = v113;
    if (v61)
    {
      uint64_t v64 = *(void (**)(char *, uint64_t))(v104 + 8);
      v64(v101, v4);
      v64(v63, v4);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v110);
    }
    uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v104 + 32);
    uint64_t v71 = v96;
    v70(v96, v26, v4);
    uint64_t v72 = v95;
    v70(v95, v22, v4);
    sub_260D907BC(v58 + 40, (uint64_t)&v105, &qword_26A8EAE70);
    if (!v106)
    {
      uint64_t v77 = *(void (**)(char *, uint64_t))(v62 + 8);
      v77(v101, v4);
      v77(v113, v4);
      sub_260D90820((uint64_t)&v105, &qword_26A8EAE70);
      v70(v97, v71, v4);
      v70(v98, v72, v4);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v110);
    }
    uint64_t v102 = v62 + 32;
    sub_260DD7B40(&v105, (uint64_t)&v107);
    uint64_t v73 = v108;
    uint64_t v74 = v109;
    __swift_project_boxed_opaque_existential_1(&v107, v108);
    uint64_t v75 = v93;
    uint64_t v76 = v94;
    (*(void (**)(char *, char *, uint64_t, uint64_t, uint64_t))(v74 + 16))(v93, v94, v100, v73, v74);
    uint64_t v99 = v70;
    v70(v91, v75, v4);
    v70(v92, v76, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
    uint64_t v78 = v104;
    uint64_t v79 = *(void *)(v104 + 72);
    unint64_t v80 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
    uint64_t v81 = swift_allocObject();
    *(_OWORD *)(v81 + 16) = xmmword_260FE7060;
    unint64_t v82 = v81 + v80;
    uint64_t v83 = *(void (**)(unint64_t, char *, uint64_t))(v78 + 16);
    v83(v82, v96, v4);
    unint64_t v84 = v82 + v79;
    long long v85 = v91;
    v83(v84, v91, v4);
    *(void *)&long long v105 = v81;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C8);
    sub_260D90340(&qword_26A8E84D0, &qword_26A8E84C8);
    uint64_t v86 = v90;
    sub_260FE3AD0();
    uint64_t v87 = *(void (**)(char *, uint64_t))(v78 + 8);
    v87(v85, v4);
    v87(v95, v4);
    v87(v96, v4);
    uint64_t v88 = v101;
    v87(v101, v4);
    uint64_t v57 = v113;
    v87(v113, v4);
    uint64_t v69 = v88;
    unint64_t v68 = v99;
    v99(v57, v86, v4);
    v68(v69, v92, v4);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v107);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v110);
    goto LABEL_10;
  }
  uint64_t result = sub_260D907BC(v103 + 40, (uint64_t)v110, &qword_26A8EAE70);
  uint64_t v51 = v111;
  if (v111)
  {
    uint64_t v52 = v112;
    __swift_project_boxed_opaque_existential_1(v110, v111);
    float v53 = v99;
    (*(void (**)(char *, char *, uint64_t, uint64_t, uint64_t))(v52 + 16))(v40, v36, v100, v51, v52);
    uint64_t v54 = v104;
    id v55 = *(void (**)(char *, uint64_t))(v104 + 8);
    unint64_t v56 = v101;
    v55(v101, v4);
    uint64_t v57 = v113;
    v55(v113, v4);
    if (v53) {
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v110);
    }
    uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    v67(v57, v40, v4);
    v67(v56, v36, v4);
    unint64_t v68 = v67;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v110);
    uint64_t v69 = v56;
LABEL_10:
    v68(v97, v57, v4);
    return ((uint64_t (*)(char *, char *, uint64_t))v68)(v98, v69, v4);
  }
  __break(1u);
  return result;
}

uint64_t sub_260F9BDAC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v3 = v31;
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v32 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v29 = (char *)&v27 - v8;
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v28 = (char *)&v27 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB40);
  uint64_t v12 = swift_allocObject();
  long long v27 = xmmword_260FE80A0;
  *(_OWORD *)(v12 + 16) = xmmword_260FE80A0;
  uint64_t v13 = (int *)type metadata accessor for PipelineConfiguration(0);
  int v14 = *(_DWORD *)(a1 + v13[28]);
  *(_DWORD *)(v12 + 32) = v14;
  *(_DWORD *)(v12 + 36) = v14;
  int v15 = *(_DWORD *)(a1 + v13[29]);
  *(_DWORD *)(v12 + 40) = v15;
  *(_DWORD *)(v12 + 44) = v15;
  *(_DWORD *)(v12 + 48) = *(_DWORD *)(a1 + v13[32]);
  uint64_t v33 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
  uint64_t v30 = MEMORY[0x263F8D4B8];
  sub_260D90340(&qword_26A8EABD0, &qword_26A8EABC8);
  sub_260FE3B30();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v27;
  *(_DWORD *)(v16 + 32) = v14;
  *(_DWORD *)(v16 + 36) = v14;
  *(_DWORD *)(v16 + 40) = v15;
  *(_DWORD *)(v16 + 44) = v15;
  *(_DWORD *)(v16 + 48) = *(_DWORD *)(a1 + v13[31]);
  uint64_t v33 = v16;
  uint64_t v17 = v29;
  sub_260FE3B30();
  sub_260D905B0(0, &qword_26A8EABD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
  uint64_t v18 = *(void *)(v31 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_260FE7060;
  unint64_t v21 = v20 + v19;
  uint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 16);
  uint64_t v23 = v28;
  v22(v21, v28, v2);
  v22(v21 + v18, v17, v2);
  uint64_t v33 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C8);
  sub_260D90340(&qword_26A8E84D0, &qword_26A8E84C8);
  sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  sub_260FE3AD0();
  uint64_t v24 = sub_260FE4860();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v3 + 8);
  v25(v17, v2);
  v25(v23, v2);
  return v24;
}

id sub_260F9C168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACE0);
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v8 = *(void *)(a1 + 80);
  Unet.latentTimeIdShape.getter(v8);
  BOOL v10 = sub_260F83394(v9, qword_270D234E0);
  swift_bridgeObjectRelease();
  if (v10)
  {
    sub_260D905B0(0, &qword_26A8EABD8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACF0);
    sub_260D90340(&qword_26A8EACF8, &qword_26A8EACF0);
    sub_260FE3B30();
    sub_260D90340(&qword_26A8EAD08, &qword_26A8EACE0);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB40);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_260FF8A60;
    uint64_t v12 = (int *)type metadata accessor for PipelineConfiguration(0);
    int v13 = *(_DWORD *)(a2 + v12[28]);
    *(_DWORD *)(v11 + 32) = v13;
    *(_DWORD *)(v11 + 36) = v13;
    int v14 = *(_DWORD *)(a2 + v12[29]);
    *(_DWORD *)(v11 + 40) = v14;
    *(_DWORD *)(v11 + 44) = v14;
    int v15 = *(_DWORD *)(a2 + v12[30]);
    *(_DWORD *)(v11 + 48) = v15;
    *(_DWORD *)(v11 + 52) = v15;
    Unet.latentTimeIdShape.getter(v8);
    swift_bridgeObjectRelease();
    sub_260D905B0(0, &qword_26A8EABD8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
    sub_260D90340(&qword_26A8EABD0, &qword_26A8EABC8);
    sub_260FE3B30();
    sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  }
  uint64_t v16 = (void *)sub_260FE4860();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_260FF7900;
  *(void *)(v17 + 32) = v16;
  *(void *)(v17 + 40) = v16;
  sub_260FE4420();
  id v18 = v16;
  id v19 = objc_msgSend(v18, sel_dataType);
  sub_260D905B0(0, &qword_26A8EABD8);
  uint64_t v20 = (void *)sub_260FE43F0();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(self, sel_multiArrayByConcatenatingMultiArrays_alongAxis_dataType_, v20, 0, v19);

  return v21;
}

uint64_t sub_260F9C538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *), uint64_t a5)
{
  return DiffusionBaseXLPipeline.generateImages(configuration:requestIdentifier:generationID:progressHandler:)(a1, a2, a3, a4, a5);
}

uint64_t sub_260F9C550(uint64_t a1, unint64_t a2)
{
  return DiffusionBaseXLPipeline.decodeToImages(_:configuration:)(a1, a2);
}

void sub_260F9C568()
{
}

uint64_t sub_260F9C584(uint64_t a1)
{
  return sub_260F96C54(a1, *(float *)(v1 + 24));
}

uint64_t sub_260F9C5B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PipelineProgress();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_260F9C614(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAE78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_260F9C67C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DiffusionBaseXLPipeline.ModelInputs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void destroy for DiffusionBaseXLPipeline(void *a1)
{
  if (a1[3]) {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  if (a1[8]) {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 5));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (a1[14])
  {
    swift_release();
    uint64_t v2 = (void *)a1[15];
  }
}

uint64_t initializeWithCopy for DiffusionBaseXLPipeline(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v7 = (_OWORD *)(a1 + 40);
  uint64_t v8 = (_OWORD *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 64);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 56);
    *uint64_t v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  uint64_t v12 = *(void *)(a2 + 112);
  uint64_t v13 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v13;
  uint64_t v14 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v12)
  {
    int v15 = *(void **)(a2 + 120);
    *(void *)(a1 + 112) = v12;
    *(void *)(a1 + 120) = v15;
    swift_retain();
    id v16 = v15;
  }
  else
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  }
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t assignWithCopy for DiffusionBaseXLPipeline(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  else if (v4)
  {
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v5 = *a2;
  long long v6 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  uint64_t v7 = *((void *)a2 + 8);
  if (*(void *)(a1 + 64))
  {
    if (v7)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  }
  else if (v7)
  {
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
    goto LABEL_15;
  }
  long long v8 = *(long long *)((char *)a2 + 40);
  long long v9 = *(long long *)((char *)a2 + 56);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v9;
LABEL_15:
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  swift_retain();
  swift_release();
  uint64_t v10 = *((void *)a2 + 14);
  if (!*(void *)(a1 + 112))
  {
    if (v10)
    {
      *(void *)(a1 + 112) = v10;
      uint64_t v14 = (void *)*((void *)a2 + 15);
      *(void *)(a1 + 120) = v14;
      swift_retain();
      id v15 = v14;
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)(a1 + 112) = a2[7];
    goto LABEL_22;
  }
  if (!v10)
  {
    sub_260F66998(a1 + 112);
    goto LABEL_21;
  }
  *(void *)(a1 + 112) = v10;
  swift_retain();
  swift_release();
  long long v11 = (void *)*((void *)a2 + 15);
  uint64_t v12 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = v11;
  id v13 = v11;

LABEL_22:
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for DiffusionBaseXLPipeline(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  }
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  long long v6 = (_OWORD *)(a2 + 112);
  if (!*(void *)(a1 + 112)) {
    goto LABEL_9;
  }
  if (!*(void *)v6)
  {
    sub_260F66998(a1 + 112);
LABEL_9:
    *(_OWORD *)(a1 + 112) = *v6;
    goto LABEL_10;
  }
  *(void *)(a1 + 112) = *(void *)v6;
  swift_release();
  long long v7 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);

LABEL_10:
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiffusionBaseXLPipeline(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 129)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiffusionBaseXLPipeline(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 129) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiffusionBaseXLPipeline()
{
  return &type metadata for DiffusionBaseXLPipeline;
}

uint64_t *sub_260F9CCB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    long long v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v10;
    id v11 = v10;
  }
  return a1;
}

void sub_260F9CDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  long long v6 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t sub_260F9CE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v9;
  id v10 = v9;
  return a1;
}

uint64_t sub_260F9CF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a2 + v8);
  id v10 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = v9;
  id v11 = v9;

  return a1;
}

uint64_t sub_260F9CFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_260F9D05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);

  return a1;
}

uint64_t sub_260F9D10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260F9D120);
}

uint64_t sub_260F9D120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_260F9D1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260F9D1F8);
}

uint64_t sub_260F9D1F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

void sub_260F9D2B8()
{
  sub_260F68620();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_260F9D354()
{
  return sub_260F7B370();
}

uint64_t sub_260F9D374()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t sub_260F9D3B0()
{
  return sub_260F9D354();
}

void *PipelineConfiguration.InputConditioning.Float16Data.multiArray.getter(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_260D917F4(a3);
  id v7 = objc_allocWithZone(MEMORY[0x263F00DA8]);
  id v8 = sub_260E5BE64(v6, 65552);
  unint64_t v10 = v8;
  if (!v3)
  {
    switch(a2 >> 62)
    {
      case 1uLL:
        if (a1 >> 32 < (int)a1) {
          __break(1u);
        }
        id v17 = v8;
        sub_260DCBD18(a1, a2);
        sub_260F9FDA8((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, v17);
        sub_260DCC110(a1, a2);

        break;
      case 2uLL:
        uint64_t v13 = a2 & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v14 = *(void *)(a1 + 16);
        uint64_t v15 = *(void *)(a1 + 24);
        id v16 = v8;
        swift_retain();
        swift_retain();
        sub_260F9FDA8(v14, v15, v13, v16);

        swift_release();
        swift_release();
        break;
      default:
        MEMORY[0x270FA5388](v8, v9);
        id v12 = v10;
        sub_260FE4820();

        break;
    }
  }
  return v10;
}

BOOL PipelineConfiguration.mode.getter()
{
  uint64_t v1 = type metadata accessor for PipelineConfiguration(0);
  return *(unsigned __int8 *)(v0 + *(int *)(v1 + 52) + 8) != 255 && *(float *)(v0 + *(int *)(v1 + 60)) < 1.0;
}

BOOL static PipelineMode.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t PipelineMode.hash(into:)()
{
  return sub_260FE5300();
}

uint64_t PipelineMode.hashValue.getter()
{
  return sub_260FE5340();
}

uint64_t PipelineConfiguration.InputConditioning.hiddenStates.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t PipelineConfiguration.InputConditioning.pooledStates.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PipelineConfiguration.InputConditioning(0) + 20);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PipelineConfiguration.InputConditioning.imageEmbeddingData.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for PipelineConfiguration.InputConditioning(0) + 24);
  uint64_t v2 = *(void *)v1;
  sub_260F9FEDC(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
  return v2;
}

uint64_t PipelineConfiguration.InputConditioning.imageProvidedPersonalization.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration.InputConditioning(0) + 28));
}

uint64_t PipelineConfiguration.InputConditioning.init(hiddenStates:pooledStates:imageEmbeddingData:imageProvidedPersonalization:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(a7, a1, v14);
  id v16 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(a7 + v16[5], a2, v14);
  id v18 = (void *)(a7 + v16[6]);
  *id v18 = a3;
  v18[1] = a4;
  id v18[2] = a5;
  *(unsigned char *)(a7 + v16[7]) = a6;
  return result;
}

uint64_t PipelineConfiguration.InputConditioning.Float16Data.rawData.getter(uint64_t a1, unint64_t a2)
{
  return a1;
}

uint64_t PipelineConfiguration.InputConditioning.Float16Data.dataShape.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_260F9DA50()
{
  if (*v0) {
    return 0x7061685361746164;
  }
  else {
    return 0x61746144776172;
  }
}

uint64_t sub_260F9DA90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260F9FF70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260F9DAB8(uint64_t a1)
{
  unint64_t v2 = sub_260F9FF1C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260F9DAF4(uint64_t a1)
{
  unint64_t v2 = sub_260F9FF1C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PipelineConfiguration.InputConditioning.Float16Data.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAEA0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  id v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260F9FF1C();
  sub_260FE53E0();
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  char v18 = 0;
  sub_260DE3F54();
  sub_260FE50B0();
  if (!v4)
  {
    uint64_t v16 = v15;
    char v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAE0);
    sub_260FA3214(&qword_26A8EAEB0, &qword_26A8EAAE0);
    sub_260FE50B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t PipelineConfiguration.InputConditioning.Float16Data.init(from:)(void *a1)
{
  uint64_t result = sub_260FA0070(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_260F9DD2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_260FA0070(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_260F9DD5C(void *a1)
{
  return PipelineConfiguration.InputConditioning.Float16Data.encode(to:)(a1, *v1, v1[1], v1[2]);
}

unint64_t sub_260F9DD7C()
{
  unint64_t result = 0x74536E6564646968;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x745364656C6F6F70;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260F9DE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260FA3040(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260F9DE44(uint64_t a1)
{
  unint64_t v2 = sub_260FA02E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260F9DE80(uint64_t a1)
{
  unint64_t v2 = sub_260FA02E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PipelineConfiguration.InputConditioning.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAEB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FA02E8();
  sub_260FE53E0();
  LOBYTE(v14) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  sub_260FA3214(&qword_26A8EAEC8, &qword_26A8E6BF0);
  sub_260FE50B0();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
    LOBYTE(v14) = 1;
    sub_260FE50B0();
    uint64_t v11 = (long long *)(v3 + *(int *)(v10 + 24));
    uint64_t v12 = *((void *)v11 + 2);
    long long v14 = *v11;
    uint64_t v15 = v12;
    char v16 = 2;
    sub_260FA033C();
    sub_260FE5060();
    LOBYTE(v14) = 3;
    sub_260FE5080();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t PipelineConfiguration.InputConditioning.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v31 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v33 = (char *)&v27 - v9;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAED8);
  uint64_t v32 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35, v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  MEMORY[0x270FA5388](v13, v14);
  char v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FA02E8();
  uint64_t v34 = v12;
  uint64_t v17 = (uint64_t)v36;
  sub_260FE53B0();
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  int64_t v36 = a1;
  uint64_t v28 = v13;
  uint64_t v29 = v16;
  LOBYTE(v37) = 0;
  sub_260FA3214(&qword_26A8EAEE0, &qword_26A8E6BF0);
  char v18 = v33;
  sub_260FE4FB0();
  uint64_t v19 = (uint64_t)v29;
  uint64_t v33 = *(char **)(v31 + 32);
  ((void (*)(char *, char *, uint64_t))v33)(v29, v18, v3);
  LOBYTE(v37) = 1;
  uint64_t v20 = v6;
  sub_260FE4FB0();
  uint64_t v21 = v28;
  ((void (*)(uint64_t, char *, uint64_t))v33)(v19 + *(int *)(v28 + 20), v20, v3);
  char v39 = 2;
  sub_260FA0390();
  uint64_t v22 = v34;
  sub_260FE4F60();
  uint64_t v23 = v38;
  uint64_t v24 = v19 + *(int *)(v21 + 24);
  *(_OWORD *)uint64_t v24 = v37;
  *(void *)(v24 + 16) = v23;
  LOBYTE(v37) = 3;
  char v25 = sub_260FE4F80();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v35);
  *(unsigned char *)(v19 + *(int *)(v21 + 28)) = v25 & 1;
  sub_260FA03E4(v19, v30);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  return sub_260FA0448(v19);
}

uint64_t sub_260F9E5BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PipelineConfiguration.InputConditioning.init(from:)(a1, a2);
}

uint64_t sub_260F9E5D4(void *a1)
{
  return PipelineConfiguration.InputConditioning.encode(to:)(a1);
}

uint64_t PipelineConfiguration.prompt.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_260D90158(v1, a1);
}

uint64_t PipelineConfiguration.prompt.setter(long long *a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  return sub_260DD7B40(a1, v1);
}

uint64_t (*PipelineConfiguration.prompt.modify())()
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.negativePrompt.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_260D90158(v1 + 40, a1);
}

uint64_t PipelineConfiguration.negativePrompt.setter(long long *a1)
{
  uint64_t v3 = v1 + 40;
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  return sub_260DD7B40(a1, v3);
}

uint64_t (*PipelineConfiguration.negativePrompt.modify())()
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.inferAlpha.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t PipelineConfiguration.inferAlpha.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 80) = result;
  return result;
}

uint64_t (*PipelineConfiguration.inferAlpha.modify())()
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.inputConditioning.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 28);
  return sub_260E41204(v3, a1);
}

uint64_t PipelineConfiguration.inputConditioning.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 28);
  return sub_260E41ABC(a1, v3);
}

uint64_t (*PipelineConfiguration.inputConditioning.modify())(void)
{
  return nullsub_1;
}

float PipelineConfiguration.imageConditioningScale.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 32));
}

uint64_t PipelineConfiguration.imageConditioningScale.setter(float a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(float *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.imageConditioningScale.modify())(void)
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.ipaScaleRange.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 36));
}

uint64_t PipelineConfiguration.ipaScaleRange.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  uint64_t v6 = v2 + *(int *)(result + 36);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*PipelineConfiguration.ipaScaleRange.modify())(void)
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.lastUnmergedPersonalizationStep.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 40));
}

uint64_t PipelineConfiguration.lastUnmergedPersonalizationStep.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  uint64_t v6 = v2 + *(int *)(result + 40);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*PipelineConfiguration.lastUnmergedPersonalizationStep.modify())(void)
{
  return nullsub_1;
}

unint64_t PipelineConfiguration.lcmScale.getter()
{
  uint64_t v1 = (unsigned int *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 44));
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32);
}

uint64_t PipelineConfiguration.lcmScale.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  uint64_t v4 = v1 + *(int *)(result + 44);
  *(_DWORD *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 4) = BYTE4(a1) & 1;
  return result;
}

uint64_t (*PipelineConfiguration.lcmScale.modify())(void)
{
  return nullsub_1;
}

unint64_t PipelineConfiguration.lcmLora.getter()
{
  uint64_t v1 = (unsigned int *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 48));
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32);
}

uint64_t PipelineConfiguration.lcmLora.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  uint64_t v4 = v1 + *(int *)(result + 48);
  *(_DWORD *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 4) = BYTE4(a1) & 1;
  return result;
}

uint64_t (*PipelineConfiguration.lcmLora.modify())(void)
{
  return nullsub_1;
}

id PipelineConfiguration.startingImage.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 52);
  id v2 = *(id *)v1;
  sub_260F7DF60(*(id *)v1, *(unsigned char *)(v1 + 8));
  return v2;
}

void PipelineConfiguration.startingImage.setter(uint64_t a1, char a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 52);
  sub_260F32A14(*(id *)v5, *(unsigned char *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2;
}

uint64_t (*PipelineConfiguration.startingImage.modify())(void)
{
  return nullsub_1;
}

void PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration.scribbleBuffer.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration.scribbleBuffer.modify())()
{
  return nullsub_1;
}

void *PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration.scribbleEdgesBuffer.getter(uint64_t a1, void *a2)
{
  id v3 = a2;
  return a2;
}

void PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration.scribbleEdgesBuffer.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration.scribbleEdgesBuffer.modify())()
{
  return nullsub_1;
}

void PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration.scribbleStrength.setter(float a1)
{
  *(float *)(v1 + 16) = a1;
}

uint64_t (*PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration.scribbleStrength.modify())()
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration.scribbleStyleConditioningVector.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration.scribbleStyleConditioningVector.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration.scribbleStyleConditioningVector.modify())()
{
  return nullsub_1;
}

id PipelineConfiguration.localConditioningInput.getter()
{
  uint64_t v1 = (id *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 56));
  id v2 = *v1;
  sub_260F32A30(*v1, v1[1]);
  return v2;
}

void PipelineConfiguration.localConditioningInput.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 56);
  sub_260F32A84(*(void **)v9, *(void **)(v9 + 8));
  *(void *)uint64_t v9 = a1;
  *(void *)(v9 + 8) = a2;
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
}

uint64_t (*PipelineConfiguration.localConditioningInput.modify())(void)
{
  return nullsub_1;
}

float PipelineConfiguration.strength.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 60));
}

uint64_t PipelineConfiguration.strength.setter(float a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(float *)(v1 + *(int *)(result + 60)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.strength.modify())(void)
{
  return nullsub_1;
}

float PipelineConfiguration.refinerStart.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 64));
}

uint64_t PipelineConfiguration.refinerStart.setter(float a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(float *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.refinerStart.modify())(void)
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.imageCount.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 68));
}

uint64_t PipelineConfiguration.imageCount.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(void *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.imageCount.modify())(void)
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.stepCount.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 72));
}

uint64_t PipelineConfiguration.stepCount.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(void *)(v1 + *(int *)(result + 72)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.stepCount.modify())(void)
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.seed.getter()
{
  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 76));
}

uint64_t PipelineConfiguration.seed.setter(int a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(_DWORD *)(v1 + *(int *)(result + 76)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.seed.modify())(void)
{
  return nullsub_1;
}

float PipelineConfiguration.guidanceScale.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 80));
}

uint64_t PipelineConfiguration.guidanceScale.setter(float a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(float *)(v1 + *(int *)(result + 80)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.guidanceScale.modify())(void)
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.controlNetInputs.getter()
{
  type metadata accessor for PipelineConfiguration(0);
  return swift_bridgeObjectRetain();
}

uint64_t PipelineConfiguration.controlNetInputs.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for PipelineConfiguration(0) + 84);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.controlNetInputs.modify())(void)
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.disableSafety.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 88));
}

uint64_t PipelineConfiguration.disableSafety.setter(char a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(unsigned char *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.disableSafety.modify())(void)
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.useDenoisedIntermediates.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 92));
}

uint64_t PipelineConfiguration.useDenoisedIntermediates.setter(char a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(unsigned char *)(v1 + *(int *)(result + 92)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.useDenoisedIntermediates.modify())(void)
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.schedulerType.getter()
{
  return *(unsigned __int16 *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 96));
}

uint64_t PipelineConfiguration.schedulerType.setter(__int16 a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(_WORD *)(v1 + *(int *)(result + 96)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.schedulerType.modify())(void)
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.rngType.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 100));
}

uint64_t PipelineConfiguration.rngType.setter(char a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(unsigned char *)(v1 + *(int *)(result + 100)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.rngType.modify())(void)
{
  return nullsub_1;
}

float PipelineConfiguration.encoderScaleFactor.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 104));
}

uint64_t PipelineConfiguration.encoderScaleFactor.setter(float a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(float *)(v1 + *(int *)(result + 104)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.encoderScaleFactor.modify())(void)
{
  return nullsub_1;
}

float PipelineConfiguration.decoderScaleFactor.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 108));
}

uint64_t PipelineConfiguration.decoderScaleFactor.setter(float a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(float *)(v1 + *(int *)(result + 108)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.decoderScaleFactor.modify())(void)
{
  return nullsub_1;
}

float PipelineConfiguration.originalSize.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 112));
}

uint64_t PipelineConfiguration.originalSize.setter(float a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(float *)(v1 + *(int *)(result + 112)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.originalSize.modify())(void)
{
  return nullsub_1;
}

float PipelineConfiguration.cropsCoordsTopLeft.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 116));
}

uint64_t PipelineConfiguration.cropsCoordsTopLeft.setter(float a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(float *)(v1 + *(int *)(result + 116)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.cropsCoordsTopLeft.modify())(void)
{
  return nullsub_1;
}

float PipelineConfiguration.targetSize.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 120));
}

uint64_t PipelineConfiguration.targetSize.setter(float a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(float *)(v1 + *(int *)(result + 120)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.targetSize.modify())(void)
{
  return nullsub_1;
}

float PipelineConfiguration.aestheticScore.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 124));
}

uint64_t PipelineConfiguration.aestheticScore.setter(float a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(float *)(v1 + *(int *)(result + 124)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.aestheticScore.modify())(void)
{
  return nullsub_1;
}

float PipelineConfiguration.negativeAestheticScore.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for PipelineConfiguration(0) + 128));
}

uint64_t PipelineConfiguration.negativeAestheticScore.setter(float a1)
{
  uint64_t result = type metadata accessor for PipelineConfiguration(0);
  *(float *)(v1 + *(int *)(result + 128)) = a1;
  return result;
}

uint64_t (*PipelineConfiguration.negativeAestheticScore.modify())(void)
{
  return nullsub_1;
}

uint64_t PipelineConfiguration.init(prompt:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = MEMORY[0x263F8D310];
  uint64_t v7 = MEMORY[0x263F8D378];
  *(void *)(a3 + 24) = MEMORY[0x263F8D310];
  *(void *)(a3 + 32) = v7;
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0xE000000000000000;
  *(void *)(a3 + 64) = v6;
  *(void *)(a3 + 72) = v7;
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = 0xE000000000000000;
  *(unsigned char *)(a3 + 80) = 0;
  uint64_t v8 = (int *)type metadata accessor for PipelineConfiguration(0);
  uint64_t v9 = a3 + v8[7];
  uint64_t v10 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_DWORD *)(a3 + v8[8]) = 1060320051;
  uint64_t v11 = a3 + v8[9];
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  uint64_t v12 = a3 + v8[10];
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  uint64_t v13 = a3 + v8[11];
  *(_DWORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 4) = 1;
  uint64_t v14 = a3 + v8[12];
  *(_DWORD *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 4) = 0;
  uint64_t v15 = a3 + v8[13];
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = -1;
  char v16 = (_OWORD *)(a3 + v8[14]);
  _OWORD *v16 = 0u;
  v16[1] = 0u;
  *(_DWORD *)(a3 + v8[15]) = 1065353216;
  *(_DWORD *)(a3 + v8[16]) = 1061997773;
  *(void *)(a3 + v8[17]) = 1;
  *(void *)(a3 + v8[18]) = 50;
  *(_DWORD *)(a3 + v8[19]) = 0;
  *(_DWORD *)(a3 + v8[20]) = 1089470464;
  *(void *)(a3 + v8[21]) = MEMORY[0x263F8EE78];
  *(unsigned char *)(a3 + v8[22]) = 0;
  *(unsigned char *)(a3 + v8[23]) = 0;
  *(_WORD *)(a3 + v8[24]) = 0x8000;
  *(unsigned char *)(a3 + v8[25]) = 0;
  *(_DWORD *)(a3 + v8[26]) = 1044022664;
  *(_DWORD *)(a3 + v8[27]) = 1044022664;
  *(_DWORD *)(a3 + v8[28]) = 1149239296;
  *(_DWORD *)(a3 + v8[29]) = 0;
  *(_DWORD *)(a3 + v8[30]) = 1149239296;
  *(_DWORD *)(a3 + v8[31]) = 1086324736;
  *(_DWORD *)(a3 + v8[32]) = 1075838976;
  uint64_t v19 = v6;
  uint64_t v20 = v7;
  *(void *)&long long v18 = a1;
  *((void *)&v18 + 1) = a2;
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  return sub_260DD7B40(&v18, a3);
}

double PipelineConfiguration.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = MEMORY[0x263F8D310];
  uint64_t v3 = MEMORY[0x263F8D378];
  *(void *)(a1 + 24) = MEMORY[0x263F8D310];
  *(void *)(a1 + 32) = v3;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 64) = v2;
  *(void *)(a1 + 72) = v3;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(unsigned char *)(a1 + 80) = 0;
  uint64_t v4 = (int *)type metadata accessor for PipelineConfiguration(0);
  uint64_t v5 = a1 + v4[7];
  uint64_t v6 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_DWORD *)(a1 + v4[8]) = 1060320051;
  uint64_t v7 = a1 + v4[9];
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  uint64_t v8 = a1 + v4[10];
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  uint64_t v9 = a1 + v4[11];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v4[12];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 0;
  uint64_t v11 = a1 + v4[13];
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = -1;
  uint64_t v12 = (_OWORD *)(a1 + v4[14]);
  double result = 0.0;
  *uint64_t v12 = 0u;
  v12[1] = 0u;
  *(_DWORD *)(a1 + v4[15]) = 1065353216;
  *(_DWORD *)(a1 + v4[16]) = 1061997773;
  *(void *)(a1 + v4[17]) = 1;
  *(void *)(a1 + v4[18]) = 50;
  *(_DWORD *)(a1 + v4[19]) = 0;
  *(_DWORD *)(a1 + v4[20]) = 1089470464;
  *(void *)(a1 + v4[21]) = MEMORY[0x263F8EE78];
  *(unsigned char *)(a1 + v4[22]) = 0;
  *(unsigned char *)(a1 + v4[23]) = 0;
  *(_WORD *)(a1 + v4[24]) = 0x8000;
  *(unsigned char *)(a1 + v4[25]) = 0;
  *(_DWORD *)(a1 + v4[26]) = 1044022664;
  *(_DWORD *)(a1 + v4[27]) = 1044022664;
  *(_DWORD *)(a1 + v4[28]) = 1149239296;
  *(_DWORD *)(a1 + v4[29]) = 0;
  *(_DWORD *)(a1 + v4[30]) = 1149239296;
  *(_DWORD *)(a1 + v4[31]) = 1086324736;
  *(_DWORD *)(a1 + v4[32]) = 1075838976;
  return result;
}

void sub_260F9FDA8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (!sub_260FE2AC0() || !__OFSUB__(a1, sub_260FE2AF0()))
  {
    if (!__OFSUB__(a2, a1))
    {
      uint64_t v7 = sub_260FE2AE0();
      MEMORY[0x270FA5388](v7, v8);
      sub_260FE4820();

      return;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for PipelineConfiguration(uint64_t a1)
{
  return sub_260DD5A3C(a1, (uint64_t *)&unk_26A8EAEF8);
}

uint64_t type metadata accessor for PipelineConfiguration.InputConditioning(uint64_t a1)
{
  return sub_260DD5A3C(a1, (uint64_t *)&unk_26B409A38);
}

uint64_t sub_260F9FEDC(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_260DCBD18(result, a2);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_260F9FF1C()
{
  unint64_t result = qword_26A8EAEA8;
  if (!qword_26A8EAEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAEA8);
  }
  return result;
}

uint64_t sub_260F9FF70(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61746144776172 && a2 == 0xE700000000000000;
  if (v2 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7061685361746164 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_260FA0070(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAF38);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_260F9FF1C();
  sub_260FE53B0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    sub_260DE421C();
    sub_260FE4FB0();
    uint64_t v8 = v11[0];
    unint64_t v10 = v11[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAE0);
    char v12 = 1;
    sub_260DCBD18(v8, v10);
    sub_260FA3214(&qword_26A8EAF40, &qword_26A8EAAE0);
    sub_260FE4FB0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    sub_260DCBD18(v8, v10);
    swift_bridgeObjectRetain();
    sub_260DCC110(v8, v10);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    sub_260DCC110(v8, v10);
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_260FA02E8()
{
  unint64_t result = qword_26A8EAEC0;
  if (!qword_26A8EAEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAEC0);
  }
  return result;
}

unint64_t sub_260FA033C()
{
  unint64_t result = qword_26A8EAED0;
  if (!qword_26A8EAED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAED0);
  }
  return result;
}

unint64_t sub_260FA0390()
{
  unint64_t result = qword_26A8EAEE8;
  if (!qword_26A8EAEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAEE8);
  }
  return result;
}

uint64_t sub_260FA03E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_260FA0448(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_260FA04A8()
{
  unint64_t result = qword_26A8EAEF0;
  if (!qword_26A8EAEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAEF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PipelineMode()
{
  return &type metadata for PipelineMode;
}

uint64_t initializeBufferWithCopyOfBuffer for PipelineConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    long long v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    *(unsigned char *)(v4 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v9 = a3[7];
    unint64_t v10 = (char *)(v4 + v9);
    uint64_t v11 = (char *)a2 + v9;
    char v12 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      v17(v10, v11, v16);
      v17(&v10[v12[5]], &v11[v12[5]], v16);
      uint64_t v18 = v12[6];
      uint64_t v19 = (uint64_t *)&v10[v18];
      uint64_t v20 = (uint64_t *)&v11[v18];
      if (*(void *)&v11[v18 + 16])
      {
        unint64_t v21 = v20[1];
        uint64_t v59 = *v20;
        sub_260DCBD18(*v20, v21);
        *uint64_t v19 = v59;
        v19[1] = v21;
        v19[2] = v20[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        v19[2] = v20[2];
      }
      v10[v12[7]] = v11[v12[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v22 = a3[9];
    *(_DWORD *)(v4 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    uint64_t v23 = v4 + v22;
    uint64_t v24 = (uint64_t)a2 + v22;
    *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
    *(void *)uint64_t v23 = *(void *)v24;
    uint64_t v25 = a3[10];
    uint64_t v26 = a3[11];
    uint64_t v27 = v4 + v25;
    uint64_t v28 = (uint64_t)a2 + v25;
    *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
    *(void *)uint64_t v27 = *(void *)v28;
    uint64_t v29 = v4 + v26;
    uint64_t v30 = (uint64_t)a2 + v26;
    *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
    *(unsigned char *)(v29 + 4) = *(unsigned char *)(v30 + 4);
    uint64_t v31 = a3[12];
    uint64_t v32 = a3[13];
    uint64_t v33 = v4 + v31;
    uint64_t v34 = (uint64_t)a2 + v31;
    *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
    *(unsigned char *)(v33 + 4) = *(unsigned char *)(v34 + 4);
    uint64_t v35 = v4 + v32;
    int64_t v36 = (uint64_t *)((char *)a2 + v32);
    int v37 = *((unsigned __int8 *)a2 + v32 + 8);
    if (v37 == 255)
    {
      *(void *)uint64_t v35 = *v36;
      *(unsigned char *)(v35 + 8) = *((unsigned char *)v36 + 8);
    }
    else
    {
      char v38 = v37 & 1;
      uint64_t v39 = *v36;
      id v40 = (id)*v36;
      *(void *)uint64_t v35 = v39;
      *(unsigned char *)(v35 + 8) = v38;
    }
    uint64_t v41 = a3[14];
    uint64_t v42 = v4 + v41;
    uint64_t v43 = (uint64_t)a2 + v41;
    uint64_t v44 = *(void **)v43;
    if (*(void *)v43)
    {
      uint64_t v45 = *(void **)(v43 + 8);
      *(void *)uint64_t v42 = v44;
      *(void *)(v42 + 8) = v45;
      *(_DWORD *)(v42 + 16) = *(_DWORD *)(v43 + 16);
      *(void *)(v42 + 24) = *(void *)(v43 + 24);
      id v46 = v44;
      id v47 = v45;
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v48 = *(_OWORD *)(v43 + 16);
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
      *(_OWORD *)(v42 + 16) = v48;
    }
    uint64_t v49 = a3[16];
    *(_DWORD *)(v4 + a3[15]) = *(_DWORD *)((char *)a2 + a3[15]);
    *(_DWORD *)(v4 + v49) = *(_DWORD *)((char *)a2 + v49);
    uint64_t v50 = a3[18];
    *(void *)(v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    *(void *)(v4 + v50) = *(uint64_t *)((char *)a2 + v50);
    uint64_t v51 = a3[20];
    *(_DWORD *)(v4 + a3[19]) = *(_DWORD *)((char *)a2 + a3[19]);
    *(_DWORD *)(v4 + v51) = *(_DWORD *)((char *)a2 + v51);
    uint64_t v52 = a3[22];
    *(void *)(v4 + a3[21]) = *(uint64_t *)((char *)a2 + a3[21]);
    *(unsigned char *)(v4 + v52) = *((unsigned char *)a2 + v52);
    uint64_t v53 = a3[24];
    *(unsigned char *)(v4 + a3[23]) = *((unsigned char *)a2 + a3[23]);
    *(_WORD *)(v4 + v53) = *(_WORD *)((char *)a2 + v53);
    uint64_t v54 = a3[26];
    *(unsigned char *)(v4 + a3[25]) = *((unsigned char *)a2 + a3[25]);
    *(_DWORD *)(v4 + v54) = *(_DWORD *)((char *)a2 + v54);
    uint64_t v55 = a3[28];
    *(_DWORD *)(v4 + a3[27]) = *(_DWORD *)((char *)a2 + a3[27]);
    *(_DWORD *)(v4 + v55) = *(_DWORD *)((char *)a2 + v55);
    uint64_t v56 = a3[30];
    *(_DWORD *)(v4 + a3[29]) = *(_DWORD *)((char *)a2 + a3[29]);
    *(_DWORD *)(v4 + v56) = *(_DWORD *)((char *)a2 + v56);
    uint64_t v57 = a3[32];
    *(_DWORD *)(v4 + a3[31]) = *(_DWORD *)((char *)a2 + a3[31]);
    *(_DWORD *)(v4 + v57) = *(_DWORD *)((char *)a2 + v57);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PipelineConfiguration(uint64_t a1, int *a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for PipelineConfiguration.InputConditioning(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    long long v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    v7(v4, v6);
    v7(v4 + *(int *)(v5 + 20), v6);
    long long v8 = (uint64_t *)(v4 + *(int *)(v5 + 24));
    if (v8[2])
    {
      sub_260DCC110(*v8, v8[1]);
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v9 = a1 + a2[13];
  if (*(unsigned __int8 *)(v9 + 8) != 255) {

  }
  unint64_t v10 = (id *)(a1 + a2[14]);
  if (*v10)
  {

    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PipelineConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)(a1 + v8);
  unint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    v15(v9, v10, v14);
    v15(&v9[v11[5]], &v10[v11[5]], v14);
    uint64_t v16 = v11[6];
    uint64_t v17 = (uint64_t *)&v9[v16];
    uint64_t v18 = (uint64_t *)&v10[v16];
    if (*(void *)&v10[v16 + 16])
    {
      unint64_t v19 = v18[1];
      uint64_t v57 = *v18;
      sub_260DCBD18(*v18, v19);
      *uint64_t v17 = v57;
      v17[1] = v19;
      void v17[2] = v18[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      void v17[2] = v18[2];
    }
    v9[v11[7]] = v10[v11[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v20 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  uint64_t v23 = a3[10];
  uint64_t v24 = a3[11];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(void *)uint64_t v25 = *(void *)v26;
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  uint64_t v29 = a3[12];
  uint64_t v30 = a3[13];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(unsigned char *)(v31 + 4) = *(unsigned char *)(v32 + 4);
  uint64_t v33 = a1 + v30;
  uint64_t v34 = (uint64_t *)(a2 + v30);
  int v35 = *(unsigned __int8 *)(a2 + v30 + 8);
  if (v35 == 255)
  {
    *(void *)uint64_t v33 = *v34;
    *(unsigned char *)(v33 + 8) = *((unsigned char *)v34 + 8);
  }
  else
  {
    char v36 = v35 & 1;
    uint64_t v37 = *v34;
    id v38 = (id)*v34;
    *(void *)uint64_t v33 = v37;
    *(unsigned char *)(v33 + 8) = v36;
  }
  uint64_t v39 = a3[14];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void **)v41;
  if (*(void *)v41)
  {
    uint64_t v43 = *(void **)(v41 + 8);
    *(void *)uint64_t v40 = v42;
    *(void *)(v40 + 8) = v43;
    *(_DWORD *)(v40 + 16) = *(_DWORD *)(v41 + 16);
    *(void *)(v40 + 24) = *(void *)(v41 + 24);
    id v44 = v42;
    id v45 = v43;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v46 = *(_OWORD *)(v41 + 16);
    *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
    *(_OWORD *)(v40 + 16) = v46;
  }
  uint64_t v47 = a3[16];
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  *(_DWORD *)(a1 + v47) = *(_DWORD *)(a2 + v47);
  uint64_t v48 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v48) = *(void *)(a2 + v48);
  uint64_t v49 = a3[20];
  *(_DWORD *)(a1 + a3[19]) = *(_DWORD *)(a2 + a3[19]);
  *(_DWORD *)(a1 + v49) = *(_DWORD *)(a2 + v49);
  uint64_t v50 = a3[22];
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v50) = *(unsigned char *)(a2 + v50);
  uint64_t v51 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(_WORD *)(a1 + v51) = *(_WORD *)(a2 + v51);
  uint64_t v52 = a3[26];
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(_DWORD *)(a1 + v52) = *(_DWORD *)(a2 + v52);
  uint64_t v53 = a3[28];
  *(_DWORD *)(a1 + a3[27]) = *(_DWORD *)(a2 + a3[27]);
  *(_DWORD *)(a1 + v53) = *(_DWORD *)(a2 + v53);
  uint64_t v54 = a3[30];
  *(_DWORD *)(a1 + a3[29]) = *(_DWORD *)(a2 + a3[29]);
  *(_DWORD *)(a1 + v54) = *(_DWORD *)(a2 + v54);
  uint64_t v55 = a3[32];
  *(_DWORD *)(a1 + a3[31]) = *(_DWORD *)(a2 + a3[31]);
  *(_DWORD *)(a1 + v55) = *(_DWORD *)(a2 + v55);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PipelineConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v6 = a3[7];
  long long v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v15 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16);
      v15(v7, v8, v14);
      v15(&v7[v9[5]], &v8[v9[5]], v14);
      uint64_t v16 = v9[6];
      uint64_t v17 = (uint64_t *)&v7[v16];
      uint64_t v18 = (uint64_t *)&v8[v16];
      if (*(void *)&v8[v16 + 16])
      {
        unint64_t v19 = v18[1];
        uint64_t v79 = *v18;
        sub_260DCBD18(*v18, v19);
        *uint64_t v17 = v79;
        v17[1] = v19;
        void v17[2] = v18[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v32 = *(_OWORD *)v18;
        void v17[2] = v18[2];
        *(_OWORD *)uint64_t v17 = v32;
      }
      v7[v9[7]] = v8[v9[7]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_18;
    }
LABEL_7:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_18;
  }
  if (v13)
  {
    sub_260FA0448((uint64_t)v7);
    goto LABEL_7;
  }
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v22 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 24);
  v22(v7, v8, v21);
  v22(&v7[v9[5]], &v8[v9[5]], v21);
  uint64_t v23 = v9[6];
  uint64_t v24 = (uint64_t *)&v7[v23];
  uint64_t v25 = (uint64_t *)&v8[v23];
  uint64_t v26 = *(void *)&v7[v23 + 16];
  uint64_t v27 = *(void *)&v8[v23 + 16];
  if (v26)
  {
    if (v27)
    {
      uint64_t v28 = *v25;
      unint64_t v29 = v25[1];
      sub_260DCBD18(*v25, v29);
      uint64_t v30 = *v24;
      unint64_t v31 = v24[1];
      *uint64_t v24 = v28;
      v24[1] = v29;
      sub_260DCC110(v30, v31);
      void v24[2] = v25[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260DCFC50((uint64_t)v24);
      uint64_t v35 = v25[2];
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      void v24[2] = v35;
    }
  }
  else if (v27)
  {
    uint64_t v33 = *v25;
    unint64_t v34 = v25[1];
    sub_260DCBD18(*v25, v34);
    *uint64_t v24 = v33;
    v24[1] = v34;
    void v24[2] = v25[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v36 = *(_OWORD *)v25;
    void v24[2] = v25[2];
    *(_OWORD *)uint64_t v24 = v36;
  }
  v7[v9[7]] = v8[v9[7]];
LABEL_18:
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  uint64_t v37 = a3[9];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v40 = *v39;
  *(unsigned char *)(v38 + 8) = *((unsigned char *)v39 + 8);
  *(void *)uint64_t v38 = v40;
  uint64_t v41 = a3[10];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (uint64_t *)(a2 + v41);
  uint64_t v44 = *v43;
  *(unsigned char *)(v42 + 8) = *((unsigned char *)v43 + 8);
  *(void *)uint64_t v42 = v44;
  uint64_t v45 = a3[11];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  LODWORD(v44) = *(_DWORD *)v47;
  *(unsigned char *)(v46 + 4) = *(unsigned char *)(v47 + 4);
  *(_DWORD *)uint64_t v46 = v44;
  uint64_t v48 = a3[12];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  LODWORD(v44) = *(_DWORD *)v50;
  *(unsigned char *)(v49 + 4) = *(unsigned char *)(v50 + 4);
  *(_DWORD *)uint64_t v49 = v44;
  uint64_t v51 = a3[13];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  LODWORD(v49) = *(unsigned __int8 *)(a1 + v51 + 8);
  int v54 = *(unsigned __int8 *)(a2 + v51 + 8);
  if (v49 == 255)
  {
    if (v54 == 255)
    {
      uint64_t v56 = *(void **)v53;
      *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
      *(void *)uint64_t v52 = v56;
    }
    else
    {
      char v61 = v54 & 1;
      uint64_t v62 = *(void **)v53;
      id v63 = v62;
      *(void *)uint64_t v52 = v62;
      *(unsigned char *)(v52 + 8) = v61;
    }
  }
  else if (v54 == 255)
  {
    sub_260F7D360(v52);
    char v55 = *(unsigned char *)(v53 + 8);
    *(void *)uint64_t v52 = *(void *)v53;
    *(unsigned char *)(v52 + 8) = v55;
  }
  else
  {
    char v57 = v54 & 1;
    uint64_t v58 = *(void **)v53;
    id v59 = v58;
    uint64_t v60 = *(void **)v52;
    *(void *)uint64_t v52 = v58;
    *(unsigned char *)(v52 + 8) = v57;
  }
  uint64_t v64 = a3[14];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = a2 + v64;
  uint64_t v67 = *(void **)(a1 + v64);
  unint64_t v68 = *(void **)(a2 + v64);
  if (v67)
  {
    if (v68)
    {
      *(void *)uint64_t v65 = v68;
      id v69 = v68;

      uint64_t v70 = *(void **)(v65 + 8);
      uint64_t v71 = *(void **)(v66 + 8);
      *(void *)(v65 + 8) = v71;
      id v72 = v71;

      *(_DWORD *)(v65 + 16) = *(_DWORD *)(v66 + 16);
      *(void *)(v65 + 24) = *(void *)(v66 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260F7D3B4(v65);
      long long v76 = *(_OWORD *)(v66 + 16);
      *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
      *(_OWORD *)(v65 + 16) = v76;
    }
  }
  else if (v68)
  {
    *(void *)uint64_t v65 = v68;
    uint64_t v73 = *(void **)(v66 + 8);
    *(void *)(v65 + 8) = v73;
    *(_DWORD *)(v65 + 16) = *(_DWORD *)(v66 + 16);
    *(void *)(v65 + 24) = *(void *)(v66 + 24);
    id v74 = v68;
    id v75 = v73;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v77 = *(_OWORD *)(v66 + 16);
    *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
    *(_OWORD *)(v65 + 16) = v77;
  }
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  *(_DWORD *)(a1 + a3[16]) = *(_DWORD *)(a2 + a3[16]);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(_DWORD *)(a1 + a3[19]) = *(_DWORD *)(a2 + a3[19]);
  *(_DWORD *)(a1 + a3[20]) = *(_DWORD *)(a2 + a3[20]);
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(_WORD *)(a1 + a3[24]) = *(_WORD *)(a2 + a3[24]);
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(_DWORD *)(a1 + a3[26]) = *(_DWORD *)(a2 + a3[26]);
  *(_DWORD *)(a1 + a3[27]) = *(_DWORD *)(a2 + a3[27]);
  *(_DWORD *)(a1 + a3[28]) = *(_DWORD *)(a2 + a3[28]);
  *(_DWORD *)(a1 + a3[29]) = *(_DWORD *)(a2 + a3[29]);
  *(_DWORD *)(a1 + a3[30]) = *(_DWORD *)(a2 + a3[30]);
  *(_DWORD *)(a1 + a3[31]) = *(_DWORD *)(a2 + a3[31]);
  *(_DWORD *)(a1 + a3[32]) = *(_DWORD *)(a2 + a3[32]);
  return a1;
}

uint64_t initializeWithTake for PipelineConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v11 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
    v15(v9, v10, v14);
    v15(&v9[v11[5]], &v10[v11[5]], v14);
    uint64_t v16 = v11[6];
    uint64_t v17 = &v9[v16];
    uint64_t v18 = &v10[v16];
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *((void *)v17 + 2) = *((void *)v18 + 2);
    v9[v11[7]] = v10[v11[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v19 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  uint64_t v28 = a3[12];
  uint64_t v29 = a3[13];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  uint64_t v32 = a1 + v29;
  uint64_t v33 = (uint64_t *)(a2 + v29);
  uint64_t v34 = *v33;
  *(unsigned char *)(v32 + 8) = *((unsigned char *)v33 + 8);
  *(void *)uint64_t v32 = v34;
  uint64_t v35 = a3[14];
  uint64_t v36 = a3[15];
  uint64_t v37 = (_OWORD *)(a1 + v35);
  uint64_t v38 = (_OWORD *)(a2 + v35);
  long long v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  *(_DWORD *)(a1 + v36) = *(_DWORD *)(a2 + v36);
  uint64_t v40 = a3[17];
  *(_DWORD *)(a1 + a3[16]) = *(_DWORD *)(a2 + a3[16]);
  *(void *)(a1 + v40) = *(void *)(a2 + v40);
  uint64_t v41 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(_DWORD *)(a1 + v41) = *(_DWORD *)(a2 + v41);
  uint64_t v42 = a3[21];
  *(_DWORD *)(a1 + a3[20]) = *(_DWORD *)(a2 + a3[20]);
  *(void *)(a1 + v42) = *(void *)(a2 + v42);
  uint64_t v43 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v43) = *(unsigned char *)(a2 + v43);
  uint64_t v44 = a3[25];
  *(_WORD *)(a1 + a3[24]) = *(_WORD *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v44) = *(unsigned char *)(a2 + v44);
  uint64_t v45 = a3[27];
  *(_DWORD *)(a1 + a3[26]) = *(_DWORD *)(a2 + a3[26]);
  *(_DWORD *)(a1 + v45) = *(_DWORD *)(a2 + v45);
  uint64_t v46 = a3[29];
  *(_DWORD *)(a1 + a3[28]) = *(_DWORD *)(a2 + a3[28]);
  *(_DWORD *)(a1 + v46) = *(_DWORD *)(a2 + v46);
  uint64_t v47 = a3[31];
  *(_DWORD *)(a1 + a3[30]) = *(_DWORD *)(a2 + a3[30]);
  *(_DWORD *)(a1 + v47) = *(_DWORD *)(a2 + v47);
  *(_DWORD *)(a1 + a3[32]) = *(_DWORD *)(a2 + a3[32]);
  return a1;
}

uint64_t assignWithTake for PipelineConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = a3[7];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for PipelineConfiguration.InputConditioning(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      uint64_t v16 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32);
      v16(v8, v9, v15);
      v16(&v8[v10[5]], &v9[v10[5]], v15);
      uint64_t v17 = v10[6];
      uint64_t v18 = &v8[v17];
      uint64_t v19 = &v9[v17];
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((void *)v18 + 2) = *((void *)v19 + 2);
      v8[v10[7]] = v9[v10[7]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_260FA0448((uint64_t)v8);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    memcpy(v8, v9, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  int v54 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v53 - 8) + 40);
  v54(v8, v9, v53);
  v54(&v8[v10[5]], &v9[v10[5]], v53);
  uint64_t v55 = v10[6];
  uint64_t v56 = (uint64_t)&v8[v55];
  char v57 = &v9[v55];
  if (!*(void *)&v8[v55 + 16]) {
    goto LABEL_22;
  }
  if (!*((void *)v57 + 2))
  {
    sub_260DCFC50(v56);
LABEL_22:
    *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
    *(void *)(v56 + 16) = *((void *)v57 + 2);
    goto LABEL_23;
  }
  uint64_t v58 = *(void *)v56;
  unint64_t v59 = *(void *)(v56 + 8);
  *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  sub_260DCC110(v58, v59);
  *(void *)(v56 + 16) = *((void *)v57 + 2);
  swift_bridgeObjectRelease();
LABEL_23:
  v8[v10[7]] = v9[v10[7]];
LABEL_7:
  uint64_t v21 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(void *)uint64_t v22 = *(void *)v23;
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(void *)uint64_t v26 = *(void *)v27;
  uint64_t v28 = a1 + v25;
  uint64_t v29 = a2 + v25;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(unsigned char *)(v28 + 4) = *(unsigned char *)(v29 + 4);
  uint64_t v30 = a3[12];
  uint64_t v31 = a3[13];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(unsigned char *)(v32 + 4) = *(unsigned char *)(v33 + 4);
  uint64_t v34 = a1 + v31;
  uint64_t v35 = a2 + v31;
  if (*(unsigned __int8 *)(a1 + v31 + 8) == 255)
  {
LABEL_10:
    *(void *)uint64_t v34 = *(void *)v35;
    *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
    goto LABEL_12;
  }
  int v36 = *(unsigned __int8 *)(v35 + 8);
  if (v36 == 255)
  {
    sub_260F7D360(v34);
    goto LABEL_10;
  }
  uint64_t v37 = *(void **)v34;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = v36 & 1;

LABEL_12:
  uint64_t v38 = a3[14];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = *(void **)(a1 + v38);
  if (!v41)
  {
LABEL_16:
    long long v43 = *(_OWORD *)(v40 + 16);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *(_OWORD *)(v39 + 16) = v43;
    goto LABEL_17;
  }
  if (!*(void *)v40)
  {
    sub_260F7D3B4(v39);
    goto LABEL_16;
  }
  *(void *)uint64_t v39 = *(void *)v40;

  uint64_t v42 = *(void **)(v39 + 8);
  *(void *)(v39 + 8) = *(void *)(v40 + 8);

  *(_DWORD *)(v39 + 16) = *(_DWORD *)(v40 + 16);
  *(void *)(v39 + 24) = *(void *)(v40 + 24);
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t v44 = a3[16];
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  *(_DWORD *)(a1 + v44) = *(_DWORD *)(a2 + v44);
  uint64_t v45 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v45) = *(void *)(a2 + v45);
  uint64_t v46 = a3[20];
  *(_DWORD *)(a1 + a3[19]) = *(_DWORD *)(a2 + a3[19]);
  *(_DWORD *)(a1 + v46) = *(_DWORD *)(a2 + v46);
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v47) = *(unsigned char *)(a2 + v47);
  uint64_t v48 = a3[25];
  *(_WORD *)(a1 + a3[24]) = *(_WORD *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v48) = *(unsigned char *)(a2 + v48);
  uint64_t v49 = a3[27];
  *(_DWORD *)(a1 + a3[26]) = *(_DWORD *)(a2 + a3[26]);
  *(_DWORD *)(a1 + v49) = *(_DWORD *)(a2 + v49);
  uint64_t v50 = a3[29];
  *(_DWORD *)(a1 + a3[28]) = *(_DWORD *)(a2 + a3[28]);
  *(_DWORD *)(a1 + v50) = *(_DWORD *)(a2 + v50);
  uint64_t v51 = a3[31];
  *(_DWORD *)(a1 + a3[30]) = *(_DWORD *)(a2 + a3[30]);
  *(_DWORD *)(a1 + v51) = *(_DWORD *)(a2 + v51);
  *(_DWORD *)(a1 + a3[32]) = *(_DWORD *)(a2 + a3[32]);
  return a1;
}

uint64_t getEnumTagSinglePayload for PipelineConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260FA1C84);
}

uint64_t sub_260FA1C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PipelineConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260FA1D4C);
}

uint64_t sub_260FA1D4C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_260FA1DF8()
{
  sub_260E3A7E0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *initializeBufferWithCopyOfBuffer for PipelineConfiguration.InputConditioning(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    if (*(void *)((char *)a2 + v9 + 16))
    {
      uint64_t v12 = *v11;
      unint64_t v13 = v11[1];
      sub_260DCBD18(*v11, v13);
      *uint64_t v10 = v12;
      v10[1] = v13;
      void v10[2] = v11[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      void v10[2] = v11[2];
    }
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t destroy for PipelineConfiguration.InputConditioning(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v5)(a1 + *(int *)(a2 + 20), v4);
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  if (v7[2])
  {
    sub_260DCC110(*v7, v7[1]);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PipelineConfiguration.InputConditioning(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (uint64_t *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  if (*(void *)(a2 + v8 + 16))
  {
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    sub_260DCBD18(*v10, v12);
    *uint64_t v9 = v11;
    v9[1] = v12;
    void v9[2] = v10[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    void v9[2] = v10[2];
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithCopy for PipelineConfiguration.InputConditioning(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = (uint64_t *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *(void *)(a1 + v8 + 16);
  uint64_t v12 = *(void *)(a2 + v8 + 16);
  if (v11)
  {
    if (v12)
    {
      uint64_t v13 = *v10;
      unint64_t v14 = v10[1];
      sub_260DCBD18(*v10, v14);
      uint64_t v15 = *v9;
      unint64_t v16 = v9[1];
      *uint64_t v9 = v13;
      v9[1] = v14;
      sub_260DCC110(v15, v16);
      void v9[2] = v10[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260DCFC50((uint64_t)v9);
      uint64_t v19 = v10[2];
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      void v9[2] = v19;
    }
  }
  else if (v12)
  {
    uint64_t v17 = *v10;
    unint64_t v18 = v10[1];
    sub_260DCBD18(*v10, v18);
    *uint64_t v9 = v17;
    v9[1] = v18;
    void v9[2] = v10[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)v10;
    void v9[2] = v10[2];
    *(_OWORD *)uint64_t v9 = v20;
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for PipelineConfiguration.InputConditioning(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(void *)(v10 + 16) = *(void *)(v11 + 16);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for PipelineConfiguration.InputConditioning(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  if (!*(void *)(a1 + v8 + 16)) {
    goto LABEL_5;
  }
  if (!*(void *)(v10 + 16))
  {
    sub_260DCFC50(v9);
LABEL_5:
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *(void *)(v9 + 16) = *(void *)(v10 + 16);
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)v9;
  unint64_t v12 = *(void *)(v9 + 8);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  sub_260DCC110(v11, v12);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for PipelineConfiguration.InputConditioning(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260FA2568);
}

uint64_t sub_260FA2568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PipelineConfiguration.InputConditioning(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260FA2650);
}

uint64_t sub_260FA2650(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 16) = a2;
  }
  return result;
}

void sub_260FA2714()
{
  sub_260F68620();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for PipelineConfiguration.InputConditioning.Float16Data(uint64_t a1)
{
  sub_260DCC110(*(void *)a1, *(void *)(a1 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t *_s13DiffusionBase21PipelineConfigurationV17InputConditioningV11Float16DataVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_260DCBD18(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for PipelineConfiguration.InputConditioning.Float16Data(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_260DCBD18(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_260DCC110(v6, v7);
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *assignWithTake for PipelineConfiguration.InputConditioning.Float16Data(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_260DCC110(v4, v5);
  a1[2] = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PipelineConfiguration.InputConditioning.Float16Data()
{
  return &type metadata for PipelineConfiguration.InputConditioning.Float16Data;
}

uint64_t initializeBufferWithCopyOfBuffer for PipelineConfiguration.LatentInitializer(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(id *)a2;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for PipelineConfiguration.LatentInitializer(id *a1)
{
}

uint64_t assignWithCopy for PipelineConfiguration.LatentInitializer(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(id *)a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;

  return a1;
}

uint64_t assignWithTake for PipelineConfiguration.LatentInitializer(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

ValueMetadata *type metadata accessor for PipelineConfiguration.LatentInitializer()
{
  return &type metadata for PipelineConfiguration.LatentInitializer;
}

ValueMetadata *type metadata accessor for PipelineConfiguration.LocalConditioningInput()
{
  return &type metadata for PipelineConfiguration.LocalConditioningInput;
}

uint64_t destroy for PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13DiffusionBase21PipelineConfigurationV22LocalConditioningInputO21ScribbleConfigurationVwcp_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  char v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  id v5 = v3;
  id v6 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13DiffusionBase21PipelineConfigurationV22LocalConditioningInputO21ScribbleConfigurationVwca_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  unint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13DiffusionBase21PipelineConfigurationV22LocalConditioningInputO21ScribbleConfigurationVwta_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13DiffusionBase21PipelineConfigurationV22LocalConditioningInputO21ScribbleConfigurationVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_260FA2BD8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration()
{
  return &type metadata for PipelineConfiguration.LocalConditioningInput.ScribbleConfiguration;
}

unsigned char *storeEnumTagSinglePayload for PipelineConfiguration.InputConditioning.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260FA2CF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PipelineConfiguration.InputConditioning.CodingKeys()
{
  return &type metadata for PipelineConfiguration.InputConditioning.CodingKeys;
}

unsigned char *_s13DiffusionBase12PipelineModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260FA2DF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PipelineConfiguration.InputConditioning.Float16Data.CodingKeys()
{
  return &type metadata for PipelineConfiguration.InputConditioning.Float16Data.CodingKeys;
}

unint64_t sub_260FA2E34()
{
  unint64_t result = qword_26A8EAF08;
  if (!qword_26A8EAF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAF08);
  }
  return result;
}

unint64_t sub_260FA2E8C()
{
  unint64_t result = qword_26A8EAF10;
  if (!qword_26A8EAF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAF10);
  }
  return result;
}

unint64_t sub_260FA2EE4()
{
  unint64_t result = qword_26A8EAF18;
  if (!qword_26A8EAF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAF18);
  }
  return result;
}

unint64_t sub_260FA2F3C()
{
  unint64_t result = qword_26A8EAF20;
  if (!qword_26A8EAF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAF20);
  }
  return result;
}

unint64_t sub_260FA2F94()
{
  unint64_t result = qword_26A8EAF28;
  if (!qword_26A8EAF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAF28);
  }
  return result;
}

unint64_t sub_260FA2FEC()
{
  unint64_t result = qword_26A8EAF30;
  if (!qword_26A8EAF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAF30);
  }
  return result;
}

uint64_t sub_260FA3040(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74536E6564646968 && a2 == 0xEC00000073657461;
  if (v2 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x745364656C6F6F70 && a2 == 0xEC00000073657461 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000261001A00 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000261001A20)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_260FA3214(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_260FA327C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return MEMORY[0x270FA2498](sub_260FA329C, 0, 0);
}

uint64_t sub_260FA329C()
{
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_260F8BA40;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_260EC2C5C;
  v0[13] = &block_descriptor_3;
  v0[14] = v2;
  objc_msgSend(v1, sel_modelDescriptionWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_260FA3398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260FA3808((uint64_t)&v24);
  sub_260FA3830();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  id v9 = sub_260FD5674((uint64_t)v8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  id v11 = v9;
  unint64_t v12 = (void *)sub_260FD57CC((uint64_t)&unk_26A8EAF50, v10);
  swift_release();
  id v13 = objc_msgSend(v12, sel_metadata);
  type metadata accessor for MLModelMetadataKey(0);
  sub_260F89264();
  uint64_t v14 = sub_260FE3EB0();

  if (*(void *)(v14 + 16))
  {
    id v15 = (id)*MEMORY[0x263F00CF0];
    unint64_t v16 = sub_260F80CD8((uint64_t)v15);
    if (v17)
    {
      sub_260D90650(*(void *)(v14 + 56) + 32 * v16, (uint64_t)&v22);
    }
    else
    {
      long long v22 = 0u;
      long long v23 = 0u;
    }
  }
  else
  {
    long long v22 = 0u;
    long long v23 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v23 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E8B48);
    if (swift_dynamicCast()) {
      uint64_t v18 = *(void *)&v21[0];
    }
    else {
      uint64_t v18 = 0;
    }
  }
  else
  {
    sub_260EA8980((uint64_t)&v22);
    uint64_t v18 = 0;
  }
  sub_260FA5674(v18, v21);

  swift_bridgeObjectRelease();
  v20[10] = v21[10];
  v20[11] = v21[11];
  v20[12] = v21[12];
  v20[6] = v21[6];
  v20[7] = v21[7];
  v20[8] = v21[8];
  v20[9] = v21[9];
  v20[2] = v21[2];
  v20[3] = v21[3];
  void v20[4] = v21[4];
  v20[5] = v21[5];
  v20[0] = v21[0];
  v20[1] = v21[1];
  nullsub_1(v20);
  sub_260FA3870((uint64_t)v20, (uint64_t)&v22);
  return sub_260FA3870((uint64_t)&v22, a2);
}

double sub_260FA3808(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 1;
  return result;
}

unint64_t sub_260FA3830()
{
  unint64_t result = qword_26A8EACC8;
  if (!qword_26A8EACC8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_26A8EACC8);
  }
  return result;
}

uint64_t sub_260FA3870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_260FA38D8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_260FA3910(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_260DACD28;
  v5[16] = a1;
  v5[17] = v4;
  return MEMORY[0x270FA2498](sub_260FA329C, 0, 0);
}

uint64_t TextEncoderXL.init(tokenizer:modelAt:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_260FE2F90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  unint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260D90158(a1, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  type metadata accessor for ManagedMLModel();
  swift_allocObject();
  uint64_t v13 = ManagedMLModel.init(modelAt:configuration:name:)(v12, a3, (uint64_t)"TextEncoderXL", 13, 2);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm(a1);
  *(void *)(a4 + 40) = v13;
  return result;
}

Swift::Bool __swiftcall TextEncoderXL.usePORParameters()()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 40) + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel);
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_modelDescription);
    id v3 = objc_msgSend(v2, sel_outputDescriptionsByName);

    sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
    uint64_t v4 = sub_260FE3EB0();

    if (*(void *)(v4 + 16))
    {
      sub_260DBACB4(0xD000000000000010, 0x8000000261000FF0);
      char v6 = v5;
    }
    else
    {
      char v6 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> TextEncoderXL.loadResources()()
{
}

Swift::Void __swiftcall TextEncoderXL.unloadResources()()
{
}

uint64_t TextEncoderXL.encode(_:)(uint64_t a1, uint64_t a2, void *a3)
{
  char v5 = v3;
  uint64_t v9 = sub_260FA3EB8();
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10) {
    goto LABEL_11;
  }
  uint64_t v11 = *(void *)(v9 + 8 * v10 + 24);
  swift_bridgeObjectRelease();
  uint64_t v12 = v3[3];
  uint64_t v13 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v12);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t, void, uint64_t, uint64_t))(v13 + 8))(a3, v11, 0, v12, v13);
  if (v4) {
    return result;
  }
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 + 16);
  if (v11 < v17)
  {
    uint64_t v18 = *(void *)(result + 16);
    if (__OFSUB__(v18, v11))
    {
      __break(1u);
    }
    else
    {
      uint64_t v23 = a2;
      uint64_t v19 = sub_260F6C738(v18 - v11, result);
      if (!__OFSUB__(v17, v11))
      {
        uint64_t v16 = sub_260F6C990(v17 - v11, v16);
        uint64_t v21 = v5[3];
        uint64_t v20 = v5[4];
        __swift_project_boxed_opaque_existential_1(v5, v21);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v21, v20);
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6F10);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_260FE7080;
        sub_260FE4C20();
        sub_260FE4250();
        __swift_project_boxed_opaque_existential_1(a3, a3[3]);
        sub_260FE5130();
        sub_260FE4250();
        sub_260FE4250();
        swift_bridgeObjectRelease();
        sub_260FE4250();
        *(void *)(v22 + 56) = MEMORY[0x263F8D310];
        *(void *)(v22 + 32) = 0;
        *(void *)(v22 + 40) = 0xE000000000000000;
        sub_260FE52E0();
        a2 = v23;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_11:
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  sub_260FA4188(a1, a2, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FA3EB8()
{
  id v1 = *(id *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD68);
  sub_260FE4900();

  uint64_t v2 = sub_260F7F260(7562345, 0xE300000000000000);
  if (!*(void *)(v19 + 16) || (unint64_t v4 = sub_260DBACB4(v2, v3), (v5 & 1) == 0))
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_20;
  }
  id v6 = *(id *)(*(void *)(v19 + 56) + 8 * v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v6, sel_multiArrayConstraint);

  if (v7)
  {
    id v8 = objc_msgSend(v7, sel_shape);

    sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
    unint64_t v9 = sub_260FE4400();

    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_260FE4E40();
      swift_bridgeObjectRelease();
      if (v10) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v10)
      {
LABEL_6:
        uint64_t v20 = MEMORY[0x263F8EE78];
        sub_260DB4728(0, v10 & ~(v10 >> 63), 0);
        if ((v10 & 0x8000000000000000) == 0)
        {
          uint64_t v11 = 0;
          uint64_t v12 = v20;
          do
          {
            if ((v9 & 0xC000000000000001) != 0) {
              id v13 = (id)MEMORY[0x26122B4C0](v11, v9);
            }
            else {
              id v13 = *(id *)(v9 + 8 * v11 + 32);
            }
            uint64_t v14 = v13;
            id v15 = objc_msgSend(v13, sel_integerValue);

            unint64_t v17 = *(void *)(v20 + 16);
            unint64_t v16 = *(void *)(v20 + 24);
            if (v17 >= v16 >> 1) {
              sub_260DB4728(v16 > 1, v17 + 1, 1);
            }
            ++v11;
            *(void *)(v20 + 16) = v17 + 1;
            *(void *)(v20 + 8 * v17 + 32) = v15;
          }
          while (v10 != v11);
          swift_bridgeObjectRelease();
          return v12;
        }
        __break(1u);
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
LABEL_20:
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_260FA4188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = v3;
  uint64_t v110 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACE0);
  uint64_t v107 = *(void *)(v8 - 8);
  uint64_t v108 = v8;
  uint64_t v10 = MEMORY[0x270FA5388](v8, v9);
  long long v105 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v106 = (char *)&v104 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v118 = *(void *)(v14 - 8);
  uint64_t v119 = (uint64_t *)v14;
  uint64_t v16 = MEMORY[0x270FA5388](v14, v15);
  float v114 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16, v18);
  uint64_t v20 = (char *)&v104 - v19;
  uint64_t v21 = *(void **)(v3[5] + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
  uint64_t v120 = v3[5];
  uint64_t v121 = sub_260F80030;
  uint64_t v122 = 0;
  uint64_t v22 = v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD68);
  sub_260FE4900();
  uint64_t v115 = v4;
  if (v4) {
    goto LABEL_45;
  }

  uint64_t v24 = (uint64_t *)v123;
  uint64_t v22 = v5;
  uint64_t v25 = sub_260F7F260(7562345, 0xE300000000000000);
  if (!v24[2]) {
    goto LABEL_38;
  }
  uint64_t v22 = v24;
  unint64_t v27 = sub_260DBACB4(v25, v26);
  if ((v28 & 1) == 0) {
    goto LABEL_38;
  }
  uint64_t v109 = a2;
  id v29 = *(id *)(v24[7] + 8 * v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v29, sel_name);

  uint64_t v112 = sub_260FE40A0();
  uint64_t v113 = v31;

  sub_260FA3EB8();
  int64_t v32 = *(void *)(a3 + 16);
  uint64_t v33 = MEMORY[0x263F8EE78];
  unint64_t v117 = v20;
  unint64_t v111 = v32;
  if (v32)
  {
    uint64_t v104 = v23;
    uint64_t v34 = v5;
    uint64_t v123 = MEMORY[0x263F8EE78];
    sub_260F63828(0, v32, 0);
    uint64_t v33 = v123;
    uint64_t v35 = (uint64_t *)(a3 + 32);
    unint64_t v36 = *(void *)(v123 + 16);
    do
    {
      uint64_t v38 = *v35++;
      uint64_t v37 = v38;
      uint64_t v123 = v33;
      unint64_t v39 = *(void *)(v33 + 24);
      if (v36 >= v39 >> 1)
      {
        sub_260F63828(v39 > 1, v36 + 1, 1);
        uint64_t v33 = v123;
      }
      *(void *)(v33 + 16) = v36 + 1;
      *(float *)(v33 + 4 * v36++ + 32) = (float)v37;
      --v32;
    }
    while (v32);
    uint64_t v20 = v117;
    char v5 = v34;
  }
  uint64_t v123 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
  sub_260D90340(&qword_26A8EABD0, &qword_26A8EABC8);
  uint64_t v40 = sub_260FE3B30();
  MEMORY[0x270FA5388](v40, v41);
  *(&v104 - 4) = v42;
  *(&v104 - 3) = (uint64_t)sub_260F80030;
  *(&v104 - 2) = 0;
  uint64_t v22 = (uint64_t *)v43;
  uint64_t v44 = v115;
  sub_260FE4900();
  if (v44) {
    goto LABEL_45;
  }

  uint64_t v45 = v123;
  uint64_t v46 = sub_260F7F260(0x6B73616D5F736469, 0xE800000000000000);
  uint64_t v48 = *(void *)(v45 + 16);
  uint64_t v116 = v5;
  if (!v48 || (sub_260DBACB4(v46, v47), (v49 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_260FE7080;
    uint64_t v73 = v113;
    *(void *)(inited + 32) = v112;
    *(void *)(inited + 40) = v73;
    uint64_t v74 = sub_260D905B0(0, &qword_26A8EABD8);
    (*(void (**)(char *, char *, uint64_t *))(v118 + 16))(v114, v20, v119);
    sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
    uint64_t v75 = sub_260FE4860();
    *(void *)(inited + 72) = v74;
    *(void *)(inited + 48) = v75;
    sub_260DAAF10(inited);
    objc_allocWithZone(MEMORY[0x263F00D38]);
    id v76 = sub_260FBB9C8();
    uint64_t v78 = v76;
    goto LABEL_32;
  }
  swift_bridgeObjectRelease();
  uint64_t v50 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v50, v51);
  *(&v104 - 4) = v52;
  *(&v104 - 3) = (uint64_t)sub_260F80030;
  *(&v104 - 2) = 0;
  id v54 = v53;
  sub_260FE4900();
  uint64_t v115 = 0;

  uint64_t v55 = (uint64_t *)v123;
  uint64_t v22 = v5;
  uint64_t v56 = sub_260F7F260(0x6B73616D5F736469, 0xE800000000000000);
  if (!v55[2] || (uint64_t v22 = v55, v58 = sub_260DBACB4(v56, v57), (v59 & 1) == 0))
  {
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_40;
  }
  id v60 = *(id *)(v55[7] + 8 * v58);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t *)objc_msgSend(v60, sel_multiArrayConstraint);

  if (!v22)
  {
LABEL_44:
    __break(1u);
LABEL_45:

    swift_unexpectedError();
    __break(1u);
    goto LABEL_46;
  }
  id v61 = objc_msgSend(v22, sel_shape);

  sub_260D905B0(0, (unint64_t *)&qword_26A8E84D8);
  unint64_t v62 = sub_260FE4400();

  if (!(v62 >> 62))
  {
    uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v64 = v111;
    if (v63) {
      goto LABEL_18;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  uint64_t v63 = sub_260FE4E40();
  swift_bridgeObjectRelease();
  unint64_t v64 = v111;
  if (!v63) {
    goto LABEL_29;
  }
LABEL_18:
  uint64_t v123 = MEMORY[0x263F8EE78];
  uint64_t v22 = &v123;
  sub_260DB4728(0, v63 & ~(v63 >> 63), 0);
  if (v63 < 0)
  {
    __break(1u);
LABEL_38:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v65 = 0;
  uint64_t v66 = v123;
  do
  {
    if ((v62 & 0xC000000000000001) != 0) {
      id v67 = (id)MEMORY[0x26122B4C0](v65, v62);
    }
    else {
      id v67 = *(id *)(v62 + 8 * v65 + 32);
    }
    unint64_t v68 = v67;
    id v69 = objc_msgSend(v67, sel_integerValue);

    uint64_t v123 = v66;
    unint64_t v71 = *(void *)(v66 + 16);
    unint64_t v70 = *(void *)(v66 + 24);
    if (v71 >= v70 >> 1)
    {
      sub_260DB4728(v70 > 1, v71 + 1, 1);
      uint64_t v66 = v123;
    }
    ++v65;
    *(void *)(v66 + 16) = v71 + 1;
    *(void *)(v66 + 8 * v71 + 32) = v69;
  }
  while (v63 != v65);
  swift_bridgeObjectRelease();
  unint64_t v64 = v111;
LABEL_30:
  uint64_t v123 = sub_260FB696C(1u, v64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EACF0);
  sub_260D90340(&qword_26A8EACF8, &qword_26A8EACF0);
  uint64_t v79 = v106;
  sub_260FE3B30();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
  uint64_t v80 = swift_initStackObject();
  *(_OWORD *)(v80 + 16) = xmmword_260FE7060;
  uint64_t v81 = v113;
  *(void *)(v80 + 32) = v112;
  *(void *)(v80 + 40) = v81;
  uint64_t v82 = sub_260D905B0(0, &qword_26A8EABD8);
  (*(void (**)(char *, char *, uint64_t *))(v118 + 16))(v114, v117, v119);
  sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
  uint64_t v83 = sub_260FE4860();
  *(void *)(v80 + 72) = v82;
  *(void *)(v80 + 48) = v83;
  *(void *)(v80 + 80) = sub_260F7F260(0x6B73616D5F736469, 0xE800000000000000);
  *(void *)(v80 + 88) = v84;
  uint64_t v86 = v107;
  uint64_t v85 = v108;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v105, v79, v108);
  sub_260D90340(&qword_26A8EAD08, &qword_26A8EACE0);
  uint64_t v87 = sub_260FE4860();
  *(void *)(v80 + 120) = v82;
  *(void *)(v80 + 96) = v87;
  sub_260DAAF10(v80);
  id v88 = objc_allocWithZone(MEMORY[0x263F00D38]);
  uint64_t v89 = v115;
  id v90 = sub_260FBB9C8();
  if (!v89)
  {
    uint64_t v78 = v90;
    id v76 = (id)(*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v79, v85);
LABEL_32:
    uint64_t v91 = MEMORY[0x270FA5388](v76, v77);
    *(&v104 - 2) = (uint64_t)v78;
    MEMORY[0x270FA5388](v91, v92);
    *(&v104 - 4) = v93;
    *(&v104 - 3) = (uint64_t)sub_260F6DA44;
    *(&v104 - 2) = v94;
    id v96 = v95;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
    sub_260FE4900();

    uint64_t v97 = (void *)v123;
    sub_260F7F260(0x655F6E6564646968, 0xED0000736465626DLL);
    uint64_t v98 = (void *)sub_260FE4070();
    swift_bridgeObjectRelease();
    id v99 = objc_msgSend(v97, sel_featureValueForName_, v98);

    sub_260F7F260(0x6F5F64656C6F6F70, 0xEE00737475707475);
    uint64_t v22 = v100;
    int64_t v101 = (void *)sub_260FE4070();
    swift_bridgeObjectRelease();
    id v102 = objc_msgSend(v97, sel_featureValueForName_, v101);

    if (v99)
    {
      if (objc_msgSend(v99, sel_multiArrayValue))
      {
        sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
        uint64_t v22 = v119;
        sub_260FE3BB0();
        if (v102)
        {
          if (objc_msgSend(v102, sel_multiArrayValue))
          {
            uint64_t v103 = v119;
            sub_260FE3BB0();

            swift_unknownObjectRelease();
            (*(void (**)(char *, uint64_t *))(v118 + 8))(v117, v103);
            return;
          }
          goto LABEL_43;
        }
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_46:
  swift_unexpectedError();
  __break(1u);
}

uint64_t sub_260FA4EDC(uint64_t a1, uint64_t a2, void *a3)
{
  return TextEncoderXL.encode(_:)(a1, a2, a3);
}

void sub_260FA4EF8()
{
}

void sub_260FA4F1C()
{
}

uint64_t destroy for TextEncoderXL(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return swift_release();
}

uint64_t initializeWithCopy for TextEncoderXL(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for TextEncoderXL(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TextEncoderXL(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextEncoderXL(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextEncoderXL(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextEncoderXL()
{
  return &type metadata for TextEncoderXL;
}

uint64_t sub_260FA510C()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FA51A0()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FA525C()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FA5368()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FA54BC(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_260FAA258(a1, (uint64_t)sub_260FAB900, 0, isUniquelyReferenced_nonNull_native, &v8, (uint64_t (*)(void))sub_260DBB234, (void (*)(void))sub_260FC4FE4, (void (*)(void))sub_260FC1D14);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_260FA5598(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_260FAA258(a1, (uint64_t)sub_260FAB900, 0, isUniquelyReferenced_nonNull_native, &v8, (uint64_t (*)(void))sub_260DBB2A0, (void (*)(void))sub_260FC4FF0, (void (*)(void))sub_260FC1FFC);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_260FA5674@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = sub_260FE4110();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (*(void *)(a1 + 16) && (unint64_t v10 = sub_260DBACB4(6775156, 0xE300000000000000), (v11 & 1) != 0))
    {
      uint64_t v12 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v10);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v13 = 0;
    }
    sub_260F32AFC((uint64_t)v43);
    if (!*(void *)(a1 + 16) || (sub_260DBACB4(0x6E695F6C65646F6DLL, 0xEB00000000736F66), (v15 & 1) == 0))
    {
      sub_260DD7C14((uint64_t)v43, (uint64_t)v42, &qword_26A8EA0B8);
      goto LABEL_11;
    }
    uint64_t v44 = v14;
    uint64_t v27 = v13;
    swift_bridgeObjectRetain();
    sub_260FE40F0();
    uint64_t v26 = sub_260FE40B0();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    if (v17 >> 60 == 15)
    {
      sub_260DD7C14((uint64_t)v43, (uint64_t)v42, &qword_26A8EA0B8);
      uint64_t v13 = v27;
      uint64_t v14 = v44;
LABEL_11:
      uint64_t result = sub_260DD7C14((uint64_t)v42, (uint64_t)&v29, &qword_26A8EA0B8);
      *(void *)&long long v41 = v14;
      *((void *)&v41 + 1) = v13;
      long long v19 = v40;
      a2[10] = v39;
      a2[11] = v19;
      long long v20 = v36;
      a2[6] = v35;
      a2[7] = v20;
      long long v21 = v38;
      a2[8] = v37;
      a2[9] = v21;
      long long v22 = v32;
      a2[2] = v31;
      a2[3] = v22;
      long long v23 = v34;
      a2[4] = v33;
      a2[5] = v23;
      long long v24 = v30;
      *a2 = v29;
      a2[1] = v24;
      a2[12] = v41;
      return result;
    }
    sub_260FE29B0();
    swift_allocObject();
    sub_260FE29A0();
    sub_260FB2640();
    uint64_t v25 = v26;
    sub_260FE2980();
    uint64_t v14 = v44;
    if (!v2)
    {
      sub_260DE2994(v25, v17);
      swift_release();
      v28[8] = v37;
      v28[9] = v38;
      v28[10] = v39;
      v28[11] = v40;
      v28[4] = v33;
      v28[5] = v34;
      v28[6] = v35;
      v28[7] = v36;
      v28[0] = v29;
      v28[1] = v30;
      v28[2] = v31;
      v28[3] = v32;
      nullsub_1(v28);
      sub_260DD7C14((uint64_t)v28, (uint64_t)v42, &qword_26A8EA0B8);
      uint64_t v13 = v27;
      goto LABEL_11;
    }
    sub_260DE2994(v25, v17);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for AppleDiffusionMetadataError();
    sub_260FB25E8();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
}

uint64_t sub_260FA5A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
  {
    sub_260FE5310();
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    sub_260FE5310();
    return sub_260FE5340();
  }
  sub_260FE5310();
  swift_bridgeObjectRetain();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  sub_260FE5310();
  swift_bridgeObjectRetain();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  return sub_260FE5340();
}

uint64_t sub_260FA5B14()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 0x6974636964657270;
  }
}

uint64_t sub_260FA5B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260FAC468(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260FA5B7C(uint64_t a1)
{
  unint64_t v2 = sub_260FB2348();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260FA5BB8(uint64_t a1)
{
  unint64_t v2 = sub_260FB2348();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_260FA5BF4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_260FAC570(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_260FA5C24()
{
  return sub_260FA5A40(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_260FA5C30()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!*(void *)(v0 + 8))
  {
    sub_260FE5310();
    if (v1) {
      goto LABEL_3;
    }
    return sub_260FE5310();
  }
  sub_260FE5310();
  swift_bridgeObjectRetain();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  if (!v1) {
    return sub_260FE5310();
  }
LABEL_3:
  sub_260FE5310();
  swift_bridgeObjectRetain();
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FA5D08()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 24);
  sub_260FE52F0();
  if (!v1)
  {
    sub_260FE5310();
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_260FE5310();
    return sub_260FE5340();
  }
  sub_260FE5310();
  swift_bridgeObjectRetain();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_260FE5310();
  swift_bridgeObjectRetain();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  return sub_260FE5340();
}

uint64_t sub_260FA5DD0(uint64_t *a1, uint64_t *a2)
{
  return sub_260FABA04(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

unint64_t AppleDiffusionModelMetadata.ReferenceImageInfo.ConditioningModelVersion.rawValue.getter(unsigned __int8 a1)
{
  return ((unint64_t)a1 << 16) + 3359821;
}

uint64_t sub_260FA5E08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_260FD538C(*a1, *a2);
}

uint64_t sub_260FA5E14()
{
  return sub_260FE5340();
}

uint64_t sub_260FA5E70()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FA5EB0()
{
  return sub_260FE5340();
}

uint64_t sub_260FA5F08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s13DiffusionBase05AppleA13ModelMetadataV18ReferenceImageInfoV012ConditioningD7VersionO8rawValueAGSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_260FA5F38(void *a1@<X8>)
{
  *a1 = ((unint64_t)*v1 << 16) + 3359821;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_260FA5F54()
{
  return sub_260FE4370();
}

uint64_t AppleDiffusionModelMetadata.ReferenceImageInfo.conditioning_model_version.getter()
{
  return *v0;
}

uint64_t AppleDiffusionModelMetadata.ReferenceImageInfo.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(unsigned char *)v2 == 3)
  {
    sub_260FE5310();
  }
  else
  {
    sub_260FE5310();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
  }
  sub_260FE5320();
  sub_260FAB2B0(a1, *(void *)(v2 + 8));
  sub_260FE5320();
  sub_260FAB2B0(a1, *(void *)(v2 + 24));
  if (*(unsigned char *)(v2 + 36) == 1)
  {
    sub_260FE5310();
    uint64_t v4 = *(void *)(v2 + 40);
    if (v4)
    {
LABEL_6:
      sub_260FE5310();
      sub_260FAB2B0(a1, v4);
      goto LABEL_9;
    }
  }
  else
  {
    sub_260FE5310();
    sub_260FE5320();
    uint64_t v4 = *(void *)(v2 + 40);
    if (v4) {
      goto LABEL_6;
    }
  }
  sub_260FE5310();
LABEL_9:
  if (*(unsigned char *)(v2 + 52) != 1)
  {
    sub_260FE5310();
    sub_260FE5320();
    uint64_t v5 = *(void *)(v2 + 56);
    if (v5) {
      goto LABEL_11;
    }
    return sub_260FE5310();
  }
  sub_260FE5310();
  uint64_t v5 = *(void *)(v2 + 56);
  if (!v5) {
    return sub_260FE5310();
  }
LABEL_11:
  sub_260FE5310();
  return sub_260FAB2B0(a1, v5);
}

unint64_t sub_260FA6134(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_260FA6210()
{
  return sub_260FA6134(*v0);
}

uint64_t sub_260FA6218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260FAC7C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260FA6240(uint64_t a1)
{
  unint64_t v2 = sub_260FB2F0C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260FA627C(uint64_t a1)
{
  unint64_t v2 = sub_260FB2F0C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppleDiffusionModelMetadata.ReferenceImageInfo.hashValue.getter()
{
  sub_260FE52F0();
  AppleDiffusionModelMetadata.ReferenceImageInfo.hash(into:)((uint64_t)v1);
  return sub_260FE5340();
}

double AppleDiffusionModelMetadata.ReferenceImageInfo.init(from:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_260FACAF4(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

double sub_260FA633C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_260FACAF4(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_260FA6380()
{
  sub_260FE52F0();
  AppleDiffusionModelMetadata.ReferenceImageInfo.hash(into:)((uint64_t)v1);
  return sub_260FE5340();
}

uint64_t sub_260FA63C4()
{
  sub_260FE52F0();
  AppleDiffusionModelMetadata.ReferenceImageInfo.hash(into:)((uint64_t)v1);
  return sub_260FE5340();
}

BOOL sub_260FA6400(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  _OWORD v7[2] = a1[2];
  void v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  id v8[2] = a2[2];
  void v8[3] = v5;
  return _s13DiffusionBase05AppleA13ModelMetadataV18ReferenceImageInfoV23__derived_struct_equalsySbAE_AEtFZ_0((unsigned __int8 *)v7, (unsigned __int8 *)v8);
}

DiffusionBase::AppleDiffusionModelMetadata::PromptInfo::ConditioningModelVersion_optional __swiftcall AppleDiffusionModelMetadata.PromptInfo.ConditioningModelVersion.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = DiffusionBase_AppleDiffusionModelMetadata_PromptInfo_ConditioningModelVersion_MD4;
  }
  else {
    v2.value = DiffusionBase_AppleDiffusionModelMetadata_PromptInfo_ConditioningModelVersion_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t AppleDiffusionModelMetadata.PromptInfo.ConditioningModelVersion.rawValue.getter(char a1)
{
  if (a1) {
    return 3425357;
  }
  else {
    return 3228749;
  }
}

uint64_t sub_260FA64BC(char *a1, char *a2)
{
  return sub_260FD53FC(*a1, *a2);
}

uint64_t sub_260FA64C8()
{
  return sub_260FE5340();
}

uint64_t sub_260FA652C()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FA6574()
{
  return sub_260FE5340();
}

uint64_t sub_260FA65D4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_260FE4EC0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_260FA6634(uint64_t *a1@<X8>)
{
  if (*v1) {
    uint64_t v2 = 3425357;
  }
  else {
    uint64_t v2 = 3228749;
  }
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_260FA6658()
{
  return sub_260FE4370();
}

uint64_t AppleDiffusionModelMetadata.PromptInfo.template.getter(uint64_t a1)
{
  return a1;
}

uint64_t AppleDiffusionModelMetadata.PromptInfo.conditioning_model_version.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t AppleDiffusionModelMetadata.PromptInfo.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4 = a4;
  if (a3)
  {
    sub_260FE5310();
    swift_bridgeObjectRetain();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    if (v4 == 2) {
      return sub_260FE5310();
    }
  }
  else
  {
    sub_260FE5310();
    if (v4 == 2) {
      return sub_260FE5310();
    }
  }
  sub_260FE5310();
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FA67C4()
{
  if (*v0) {
    return 0xD00000000000001ALL;
  }
  else {
    return 0x6574616C706D6574;
  }
}

uint64_t sub_260FA6804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260FAD01C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260FA682C(uint64_t a1)
{
  unint64_t v2 = sub_260FB2E64();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260FA6868(uint64_t a1)
{
  unint64_t v2 = sub_260FB2E64();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppleDiffusionModelMetadata.PromptInfo.hashValue.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  int v4 = a3;
  sub_260FE52F0();
  sub_260FE5310();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
  }
  sub_260FE5310();
  if (v4 != 2)
  {
    sub_260FE41D0();
    swift_bridgeObjectRelease();
  }
  return sub_260FE5340();
}

uint64_t AppleDiffusionModelMetadata.PromptInfo.init(from:)(void *a1)
{
  uint64_t result = sub_260FAD10C(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_260FA6998@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_260FAD10C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_260FA69C8()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 16);
  sub_260FE52F0();
  AppleDiffusionModelMetadata.PromptInfo.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_260FE5340();
}

uint64_t sub_260FA6A24(uint64_t a1)
{
  return AppleDiffusionModelMetadata.PromptInfo.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_260FA6A30()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 16);
  sub_260FE52F0();
  AppleDiffusionModelMetadata.PromptInfo.hash(into:)((uint64_t)v5, v1, v2, v3);
  return sub_260FE5340();
}

uint64_t sub_260FA6A88(uint64_t a1, uint64_t a2)
{
  return _s13DiffusionBase05AppleA13ModelMetadataV10PromptInfoV23__derived_struct_equalsySbAE_AEtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t AppleDiffusionModelMetadata.LoraInfo.LoraType.rawValue.getter(char a1)
{
  uint64_t result = 1936876912;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6F6974616D696E61;
      break;
    case 2:
      uint64_t result = 0x7472615F656E696CLL;
      break;
    case 3:
      uint64_t result = 0x696A6F6D65;
      break;
    case 4:
      uint64_t result = 7168876;
      break;
    case 5:
      uint64_t result = 0x61727473756C6C69;
      break;
    case 6:
      uint64_t result = 0x686374656B73;
      break;
    case 7:
      uint64_t result = 0x63735F656C797473;
      break;
    case 8:
      uint64_t result = 0x737265705F6D636CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260FA6BC8(unsigned __int8 *a1, char *a2)
{
  return sub_260FD4E8C(*a1, *a2);
}

uint64_t sub_260FA6BD4()
{
  return sub_260FE5340();
}

uint64_t sub_260FA6C1C()
{
  return sub_260FA5368();
}

uint64_t sub_260FA6C24()
{
  return sub_260FE5340();
}

uint64_t sub_260FA6C68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s13DiffusionBase05AppleA13ModelMetadataV8LoraInfoV0F4TypeO8rawValueAGSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_260FA6C98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AppleDiffusionModelMetadata.LoraInfo.LoraType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_260FA6CC4()
{
  return sub_260FE4370();
}

uint64_t AppleDiffusionModelMetadata.LoraInfo.hash(into:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2 == 9)
  {
    sub_260FE5310();
    if (a4) {
      goto LABEL_3;
    }
LABEL_6:
    sub_260FE5310();
    if ((a5 & 0x100000000) == 0) {
      goto LABEL_4;
    }
    return sub_260FE5310();
  }
  sub_260FE5310();
  sub_260FA5368();
  if (!a4) {
    goto LABEL_6;
  }
LABEL_3:
  sub_260FE5310();
  swift_bridgeObjectRetain();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  if ((a5 & 0x100000000) == 0)
  {
LABEL_4:
    sub_260FE5310();
    return sub_260FE5320();
  }
  return sub_260FE5310();
}

BOOL static AppleDiffusionModelMetadata.LoraInfo.__derived_struct_equals(_:_:)(unsigned __int8 a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  return sub_260FABE4C(a1, a2, a3, a4 | ((HIDWORD(a4) & 1) << 32), a5, a6, a7, a8 | ((HIDWORD(a8) & 1) << 32));
}

uint64_t sub_260FA6E1C()
{
  uint64_t v1 = 1667592307;
  if (*v0 != 1) {
    uint64_t v1 = 0x656C616373;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_260FA6E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260FAD348(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260FA6E8C(uint64_t a1)
{
  unint64_t v2 = sub_260FB2DBC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260FA6EC8(uint64_t a1)
{
  unint64_t v2 = sub_260FB2DBC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppleDiffusionModelMetadata.LoraInfo.hashValue.getter(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = a1;
  sub_260FE52F0();
  if (v6 == 9)
  {
    sub_260FE5310();
    if (a3) {
      goto LABEL_3;
    }
LABEL_6:
    sub_260FE5310();
    if ((a4 & 0x100000000) == 0) {
      goto LABEL_4;
    }
LABEL_7:
    sub_260FE5310();
    return sub_260FE5340();
  }
  sub_260FE5310();
  sub_260FA5368();
  if (!a3) {
    goto LABEL_6;
  }
LABEL_3:
  sub_260FE5310();
  swift_bridgeObjectRetain();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  if ((a4 & 0x100000000) != 0) {
    goto LABEL_7;
  }
LABEL_4:
  sub_260FE5310();
  sub_260FE5320();
  return sub_260FE5340();
}

uint64_t AppleDiffusionModelMetadata.LoraInfo.init(from:)(void *a1)
{
  LODWORD(result) = sub_260FAD478(a1);
  if (v1) {
    return v3;
  }
  else {
    return result;
  }
}

uint64_t sub_260FA7048@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_260FAD478(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(_DWORD *)(a2 + 24) = v7;
    *(unsigned char *)(a2 + 28) = BYTE4(v7) & 1;
  }
  return result;
}

uint64_t sub_260FA7084()
{
  return AppleDiffusionModelMetadata.LoraInfo.hashValue.getter(*(unsigned char *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32));
}

uint64_t sub_260FA70AC(uint64_t a1)
{
  return AppleDiffusionModelMetadata.LoraInfo.hash(into:)(a1, *(unsigned char *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32));
}

uint64_t sub_260FA70D4()
{
  int v1 = *v0;
  uint64_t v2 = *((void *)v0 + 2);
  int v3 = v0[28];
  sub_260FE52F0();
  if (v1 == 9)
  {
    sub_260FE5310();
    if (v2) {
      goto LABEL_3;
    }
LABEL_6:
    sub_260FE5310();
    if (v3) {
      goto LABEL_4;
    }
LABEL_7:
    sub_260FE5310();
    sub_260FE5320();
    return sub_260FE5340();
  }
  sub_260FE5310();
  sub_260FA5368();
  if (!v2) {
    goto LABEL_6;
  }
LABEL_3:
  sub_260FE5310();
  swift_bridgeObjectRetain();
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_7;
  }
LABEL_4:
  sub_260FE5310();
  return sub_260FE5340();
}

BOOL sub_260FA71C4(uint64_t a1, uint64_t a2)
{
  return sub_260FABE4C(*(unsigned char *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32), *(unsigned char *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int8 *)(a2 + 28) << 32));
}

float AppleDiffusionModelMetadata.GlobalLCMParameters.guidance_scale.getter()
{
  return *(float *)v0;
}

uint64_t AppleDiffusionModelMetadata.GlobalLCMParameters.num_steps.getter()
{
  return *(void *)(v0 + 8);
}

unint64_t AppleDiffusionModelMetadata.GlobalLCMParameters.use_lcm_pers.getter()
{
  return *(unsigned int *)(v0 + 20) | ((unint64_t)*(unsigned __int8 *)(v0 + 24) << 32);
}

unint64_t AppleDiffusionModelMetadata.GlobalLCMParameters.involves_people.getter()
{
  return *(unsigned int *)(v0 + 28) | ((unint64_t)*(unsigned __int8 *)(v0 + 32) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 33) << 40);
}

uint64_t AppleDiffusionModelMetadata.GlobalLCMParameters.hash(into:)()
{
  sub_260FE5320();
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    sub_260FE5310();
  }
  else
  {
    sub_260FE5310();
    sub_260FE5300();
  }
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    sub_260FE5310();
  }
  else
  {
    sub_260FE5310();
    sub_260FE5320();
  }
  if (*(unsigned char *)(v0 + 33) == 1) {
    return sub_260FE5310();
  }
  unint64_t v1 = *(unsigned int *)(v0 + 28) | ((unint64_t)*(unsigned __int8 *)(v0 + 32) << 32);
  sub_260FE5310();
  if ((v1 & 0x100000000) != 0) {
    return sub_260FE5310();
  }
  sub_260FE5310();
  return sub_260FE5320();
}

uint64_t sub_260FA7348()
{
  uint64_t result = 0x65636E6164697567;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x706574735F6D756ELL;
      break;
    case 2:
      uint64_t result = 0x5F6D636C5F657375;
      break;
    case 3:
      uint64_t result = 0x7365766C6F766E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260FA73FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260FAD6B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260FA7424(uint64_t a1)
{
  unint64_t v2 = sub_260FB2D14();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260FA7460(uint64_t a1)
{
  unint64_t v2 = sub_260FB2D14();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppleDiffusionModelMetadata.GlobalLCMParameters.hashValue.getter()
{
  return sub_260FE5340();
}

double AppleDiffusionModelMetadata.GlobalLCMParameters.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_260FAD8DC(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_WORD *)(a2 + 32) = v7;
  }
  return result;
}

double sub_260FA7524@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_260FAD8DC(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_WORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_260FA756C()
{
  return sub_260FE5340();
}

uint64_t sub_260FA75B0()
{
  return sub_260FE5340();
}

uint64_t sub_260FA75EC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  __int16 v6 = *(_WORD *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  __int16 v8 = *(_WORD *)(a2 + 32);
  return _s13DiffusionBase05AppleA13ModelMetadataV19GlobalLCMParametersV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t AppleDiffusionModelMetadata.CaseSpecificLCMParameters.use_lcm_pers.getter(unint64_t a1)
{
  return a1 | ((HIDWORD(a1) & 1) << 32);
}

uint64_t AppleDiffusionModelMetadata.CaseSpecificLCMParameters.hash(into:)(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x100000000) != 0) {
    return sub_260FE5310();
  }
  sub_260FE5310();
  return sub_260FE5320();
}

uint64_t static AppleDiffusionModelMetadata.CaseSpecificLCMParameters.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0x100000000) != 0)
  {
    if ((a2 & 0x100000000) != 0) {
      return 1;
    }
  }
  else if ((a2 & 0x100000000) == 0 && *(float *)&a1 == *(float *)&a2)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_260FA76CC()
{
  return 0x5F6D636C5F657375;
}

uint64_t sub_260FA76EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x5F6D636C5F657375 && a2 == 0xEC00000073726570)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_260FE5150();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_260FA779C(uint64_t a1)
{
  unint64_t v2 = sub_260FADB28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260FA77D8(uint64_t a1)
{
  unint64_t v2 = sub_260FADB28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppleDiffusionModelMetadata.CaseSpecificLCMParameters.hashValue.getter(uint64_t a1)
{
  if ((a1 & 0x100000000) == 0) {
    sub_260FE5320();
  }
  return sub_260FE5340();
}

uint64_t AppleDiffusionModelMetadata.CaseSpecificLCMParameters.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAF58);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FADB28();
  sub_260FE53B0();
  if (v1) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  unint64_t v8 = sub_260FE4F40();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v8 | ((HIDWORD(v8) & 1) << 32);
}

uint64_t sub_260FA79F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAF58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  long long v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FADB28();
  sub_260FE53B0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v10 = sub_260FE4F40();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  *(_DWORD *)a2 = v10;
  *(unsigned char *)(a2 + 4) = BYTE4(v10) & 1;
  return result;
}

uint64_t sub_260FA7B74()
{
  return AppleDiffusionModelMetadata.CaseSpecificLCMParameters.hashValue.getter(*v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32));
}

uint64_t sub_260FA7B94()
{
  if (*(unsigned char *)(v0 + 4) == 1) {
    return sub_260FE5310();
  }
  sub_260FE5310();
  return sub_260FE5320();
}

uint64_t sub_260FA7BE8()
{
  int v1 = *(unsigned __int8 *)(v0 + 4);
  sub_260FE52F0();
  sub_260FE5310();
  if (v1 != 1) {
    sub_260FE5320();
  }
  return sub_260FE5340();
}

uint64_t sub_260FA7C58(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 4);
  if (*(unsigned char *)(a1 + 4))
  {
    if (*(unsigned char *)(a2 + 4)) {
      return 1;
    }
  }
  else
  {
    if (*(float *)a1 != *(float *)a2) {
      char v2 = 1;
    }
    if ((v2 & 1) == 0) {
      return 1;
    }
  }
  return 0;
}

uint64_t AppleDiffusionModelMetadata.StyleSelection.rawValue.getter(char a1)
{
  uint64_t result = 0x6F6974616D696E61;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x696A6F6D65;
      break;
    case 2:
      uint64_t result = 0x61727473756C6C69;
      break;
    case 3:
      uint64_t result = 0x686374656B73;
      break;
    case 4:
      uint64_t result = 0x6C75616665645F5FLL;
      break;
    case 5:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260FA7D68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s13DiffusionBase05AppleA13ModelMetadataV14StyleSelectionO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_260FA7D98(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE90000000000006ELL;
  uint64_t v3 = 0x6F6974616D696E61;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x696A6F6D65;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "illustration");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0x686374656B73;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      *(void *)a1 = 0x6C75616665645F5FLL;
      *(void *)(a1 + 8) = 0xEB000000005F5F74;
      break;
    case 5:
      *(void *)a1 = 0x6E776F6E6B6E75;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_260FA7E80()
{
  return sub_260FE4370();
}

uint64_t sub_260FA7EE0()
{
  return sub_260FB6114();
}

uint64_t sub_260FA7EE8()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FA7FF0()
{
  return sub_260FB62E0();
}

uint64_t sub_260FA7FF8(unsigned __int8 *a1, char *a2)
{
  return sub_260FD4C68(*a1, *a2);
}

uint64_t sub_260FA8004(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_260FB2444();
  return MEMORY[0x270F9DB68](a1, a2, v4);
}

uint64_t sub_260FA8058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_260FB2444();
  return MEMORY[0x270F9DB70](a1, a4, a2, a5, v10, a3);
}

uint64_t AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.ReplacementTokens.rawValue.getter(char a1)
{
  uint64_t result = 0x6E616D6F77;
  switch(a1)
  {
    case 1:
      uint64_t result = 7233901;
      break;
    case 2:
      uint64_t result = 0x6E6F73726570;
      break;
    case 3:
      uint64_t result = 0x616D6F7720646C6FLL;
      break;
    case 4:
      uint64_t result = 0x6E616D20646C6FLL;
      break;
    case 5:
      uint64_t result = 0x7372657020646C6FLL;
      break;
    case 6:
      uint64_t result = 0x79656C696D73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260FA81B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s13DiffusionBase05AppleA13ModelMetadataV34Adapter_StyleSpecificAugmentationsV17ReplacementTokensO8rawValueAGSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_260FA81E4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x6E616D6F77;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7233901;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E6F73726570;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x616D6F7720646C6FLL;
      a1[1] = 0xE90000000000006ELL;
      break;
    case 4:
      *a1 = 0x6E616D20646C6FLL;
      a1[1] = 0xE700000000000000;
      break;
    case 5:
      *a1 = 0x7372657020646C6FLL;
      a1[1] = 0xEA00000000006E6FLL;
      break;
    case 6:
      *a1 = 0x79656C696D73;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_260FA82D4()
{
  return sub_260FE4370();
}

uint64_t sub_260FA8334()
{
  return sub_260DC51CC();
}

uint64_t sub_260FA8340()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FA844C()
{
  return sub_260DC51CC();
}

uint64_t sub_260FA8454(unsigned __int8 *a1, char *a2)
{
  return sub_260FD5158(*a1, *a2);
}

uint64_t sub_260FA8460(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_260FB23F0();
  return MEMORY[0x270F9DB68](a1, a2, v4);
}

uint64_t sub_260FA84B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_260FB23F0();
  return MEMORY[0x270F9DB70](a1, a4, a2, a5, v10, a3);
}

uint64_t AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.Shade.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_260FA853C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s13DiffusionBase05AppleA13ModelMetadataV34Adapter_StyleSpecificAugmentationsV5ShadeO8rawValueAGSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_260FA8568()
{
  return sub_260FE4380();
}

uint64_t sub_260FA85C8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_260FB239C();
  return MEMORY[0x270F9DB78](a1, a2, v4);
}

uint64_t sub_260FA861C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_260FB239C();
  return MEMORY[0x270F9DB80](a1, a4, a2, a5, v10, a3);
}

uint64_t AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.person_template.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.tokens.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.skintone.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.hair.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.merge(overriding:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = a1[2];
  if (v5)
  {
    uint64_t v7 = v2[2];
    if (v6)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_260FA5598(v6, v5);
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = v6;
  }
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v8 = v2[3];
  uint64_t v9 = a1[3];
  if (v8)
  {
    uint64_t v10 = v2[3];
    if (v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_260FA54BC(v9, v8);
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = v9;
  }
  swift_bridgeObjectRetain();
LABEL_11:
  uint64_t v11 = v2[4];
  uint64_t v12 = a1[4];
  if (!v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = v12;
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v14 = v2[1];
    if (!v14) {
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  uint64_t v13 = v2[4];
  if (!v12) {
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_260FA54BC(v12, v11);
  uint64_t v14 = v2[1];
  if (!v14)
  {
LABEL_14:
    uint64_t v15 = *a1;
    uint64_t v16 = swift_bridgeObjectRetain();
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v15 = *v2;
  uint64_t v16 = v14;
LABEL_18:
  *a2 = v15;
  a2[1] = v16;
  a2[2] = v7;
  a2[3] = v10;
  a2[4] = v13;
  return swift_bridgeObjectRetain();
}

uint64_t AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.hash(into:)(uint64_t a1)
{
  unint64_t v2 = v1;
  if (v2[1])
  {
    sub_260FE5310();
    swift_bridgeObjectRetain();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    uint64_t v4 = v2[2];
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_260FE5310();
    uint64_t v4 = v2[2];
    if (v4)
    {
LABEL_3:
      sub_260FE5310();
      swift_bridgeObjectRetain();
      sub_260FAAC20(a1, v4);
      swift_bridgeObjectRelease();
      uint64_t v5 = v2[3];
      if (v5) {
        goto LABEL_4;
      }
LABEL_10:
      sub_260FE5310();
      uint64_t v6 = v2[4];
      if (v6) {
        goto LABEL_5;
      }
      return sub_260FE5310();
    }
  }
  sub_260FE5310();
  uint64_t v5 = v2[3];
  if (!v5) {
    goto LABEL_10;
  }
LABEL_4:
  sub_260FE5310();
  swift_bridgeObjectRetain();
  sub_260FAAA80(a1, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = v2[4];
  if (!v6) {
    return sub_260FE5310();
  }
LABEL_5:
  sub_260FE5310();
  swift_bridgeObjectRetain();
  sub_260FAAA80(a1, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FA8990()
{
  uint64_t result = 0x745F6E6F73726570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x736E656B6F74;
      break;
    case 2:
      uint64_t result = 0x656E6F746E696B73;
      break;
    case 3:
      uint64_t result = 1919508840;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260FA8A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260FADBD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260FA8A48(uint64_t a1)
{
  unint64_t v2 = sub_260FB2B98();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260FA8A84(uint64_t a1)
{
  unint64_t v2 = sub_260FB2B98();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.hashValue.getter()
{
  sub_260FE52F0();
  AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.hash(into:)((uint64_t)v1);
  return sub_260FE5340();
}

double AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_260FADDA0(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

double sub_260FA8B48@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_260FADDA0(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_260FA8B90()
{
  sub_260FE52F0();
  AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.hash(into:)((uint64_t)v1);
  return sub_260FE5340();
}

uint64_t sub_260FA8BD4()
{
  sub_260FE52F0();
  AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.hash(into:)((uint64_t)v1);
  return sub_260FE5340();
}

uint64_t sub_260FA8C10(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return _s13DiffusionBase05AppleA13ModelMetadataV34Adapter_StyleSpecificAugmentationsV23__derived_struct_equalsySbAE_AEtFZ_0(v5, v7) & 1;
}

uint64_t AppleDiffusionModelMetadata.reference_image.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_260FAE164(v1 + 32, a1);
}

uint64_t AppleDiffusionModelMetadata.loras.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AppleDiffusionModelMetadata.prompt.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  sub_260ED7980(v1, *(void *)(v0 + 112));
  return v1;
}

__n128 AppleDiffusionModelMetadata.lcm.getter@<Q0>(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 168);
  char v3 = *(unsigned char *)(v1 + 170);
  __n128 result = *(__n128 *)(v1 + 136);
  long long v5 = *(_OWORD *)(v1 + 152);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 34) = v3;
  return result;
}

uint64_t AppleDiffusionModelMetadata.style_templates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AppleDiffusionModelMetadata.style_augmentations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AppleDiffusionModelMetadata.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  if (v3 == 1)
  {
    sub_260FE5310();
    uint64_t v4 = *(void *)(v1 + 40);
    if (!v4) {
      goto LABEL_3;
    }
LABEL_11:
    uint64_t v11 = *(void *)(v1 + 80);
    uint64_t v10 = *(void *)(v1 + 88);
    uint64_t v13 = *(void *)(v1 + 64);
    uint64_t v12 = *(void *)(v1 + 72);
    uint64_t v14 = *(void *)(v1 + 56);
    uint64_t v27 = *(void *)(v1 + 48);
    uint64_t v15 = *(void *)(v1 + 32);
    unsigned char v28[40] = v15;
    int v29 = HIDWORD(v15);
    uint64_t v30 = v4;
    int v31 = v27;
    uint64_t v32 = v14;
    int v33 = v13;
    char v34 = BYTE4(v13) & 1;
    uint64_t v35 = v12;
    int v36 = v11;
    char v37 = BYTE4(v11) & 1;
    uint64_t v38 = v10;
    sub_260FE5310();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    AppleDiffusionModelMetadata.ReferenceImageInfo.hash(into:)(a1);
    sub_260F32DE0(v15, v4);
    uint64_t v5 = *(void *)(v1 + 96);
    if (!v5) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)v1;
  uint64_t v7 = *(void *)(v1 + 24);
  sub_260FE5310();
  if (v3)
  {
    sub_260FE5310();
    sub_260F32C08(v6, v3);
    sub_260F32C08(v6, v3);
    swift_bridgeObjectRetain();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_7:
      sub_260FE5310();
      swift_bridgeObjectRetain();
      sub_260FE41D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v8 = v6;
      uint64_t v9 = v3;
      goto LABEL_10;
    }
  }
  else
  {
    sub_260FE5310();
    sub_260F32C08(v6, 0);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_7;
    }
  }
  sub_260FE5310();
  swift_bridgeObjectRelease();
  uint64_t v8 = v6;
  uint64_t v9 = v3;
LABEL_10:
  sub_260F32D98(v8, v9);
  uint64_t v4 = *(void *)(v1 + 40);
  if (v4) {
    goto LABEL_11;
  }
LABEL_3:
  sub_260FE5310();
  uint64_t v5 = *(void *)(v1 + 96);
  if (!v5)
  {
LABEL_4:
    sub_260FE5310();
    goto LABEL_13;
  }
LABEL_12:
  sub_260FE5310();
  swift_bridgeObjectRetain();
  sub_260FAB070(a1, v5);
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v16 = *(void *)(v1 + 112);
  if (v16 != 1)
  {
    uint64_t v18 = *(void *)(v1 + 104);
    int v19 = *(unsigned __int8 *)(v1 + 120);
    sub_260FE5310();
    if (v16)
    {
      sub_260FE5310();
      swift_bridgeObjectRetain_n();
      sub_260FE41D0();
      if (v19 == 2)
      {
LABEL_18:
        sub_260FE5310();
        sub_260E311B4(v18, v16);
        uint64_t v20 = v18;
        uint64_t v21 = v16;
        goto LABEL_21;
      }
    }
    else
    {
      sub_260FE5310();
      if (v19 == 2) {
        goto LABEL_18;
      }
    }
    sub_260FE5310();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    sub_260E311B4(v18, v16);
    uint64_t v20 = v18;
    uint64_t v21 = v16;
LABEL_21:
    sub_260E311B4(v20, v21);
    uint64_t v17 = *(void *)(v1 + 128);
    if (!v17) {
      goto LABEL_15;
    }
    goto LABEL_22;
  }
  sub_260FE5310();
  uint64_t v17 = *(void *)(v1 + 128);
  if (!v17)
  {
LABEL_15:
    sub_260FE5310();
    goto LABEL_26;
  }
LABEL_22:
  sub_260FE5310();
  uint64_t v22 = *(void *)(v17 + 16);
  sub_260FE5300();
  if (v22)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = v17 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      v23 += 16;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
  }
LABEL_26:
  sub_260DD7C14(v1 + 136, (uint64_t)v28, &qword_26A8EAF70);
  sub_260FAA594();
  uint64_t v24 = *(void *)(v1 + 176);
  if (v24)
  {
    sub_260FE5310();
    swift_bridgeObjectRetain();
    sub_260FAAEA8(a1, v24);
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(v1 + 184);
    if (v25)
    {
LABEL_28:
      sub_260FE5310();
      swift_bridgeObjectRetain();
      sub_260FAA6C4(a1, v25);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_260FE5310();
    uint64_t v25 = *(void *)(v1 + 184);
    if (v25) {
      goto LABEL_28;
    }
  }
  return sub_260FE5310();
}

unint64_t sub_260FA9184(char a1)
{
  unint64_t result = 0x656C756465686373;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x636E657265666572;
      break;
    case 2:
      unint64_t result = 0x7361726F6CLL;
      break;
    case 3:
      unint64_t result = 0x74706D6F7270;
      break;
    case 4:
      unint64_t result = 0x5F656C626174756DLL;
      break;
    case 5:
      unint64_t result = 7168876;
      break;
    case 6:
      unint64_t result = 0x65745F656C797473;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_260FA92A0()
{
  return sub_260FA9184(*v0);
}

uint64_t sub_260FA92A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260FAE1CC(a1, a2);
  *a3 = result;
  return result;
}

void sub_260FA92D0(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_260FA92DC(uint64_t a1)
{
  unint64_t v2 = sub_260FB270C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260FA9318(uint64_t a1)
{
  unint64_t v2 = sub_260FB270C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppleDiffusionModelMetadata.hashValue.getter()
{
  sub_260FE52F0();
  AppleDiffusionModelMetadata.hash(into:)((uint64_t)v1);
  return sub_260FE5340();
}

double AppleDiffusionModelMetadata.init(from:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_260FAE560(a1, v11);
  if (!v2)
  {
    long long v5 = v19;
    a2[8] = v18;
    a2[9] = v5;
    long long v6 = v21;
    a2[10] = v20;
    a2[11] = v6;
    long long v7 = v15;
    a2[4] = v14;
    a2[5] = v7;
    long long v8 = v17;
    a2[6] = v16;
    a2[7] = v8;
    long long v9 = v11[1];
    *a2 = v11[0];
    a2[1] = v9;
    double result = *(double *)&v12;
    long long v10 = v13;
    a2[2] = v12;
    a2[3] = v10;
  }
  return result;
}

double sub_260FA93F8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_260FAE560(a1, v11);
  if (!v2)
  {
    long long v5 = v19;
    a2[8] = v18;
    a2[9] = v5;
    long long v6 = v21;
    a2[10] = v20;
    a2[11] = v6;
    long long v7 = v15;
    a2[4] = v14;
    a2[5] = v7;
    long long v8 = v17;
    a2[6] = v16;
    a2[7] = v8;
    long long v9 = v11[1];
    *a2 = v11[0];
    a2[1] = v9;
    double result = *(double *)&v12;
    long long v10 = v13;
    a2[2] = v12;
    a2[3] = v10;
  }
  return result;
}

uint64_t sub_260FA945C()
{
  long long v1 = v0[9];
  long long v17 = v0[8];
  long long v18 = v1;
  long long v2 = v0[11];
  long long v19 = v0[10];
  long long v20 = v2;
  long long v3 = v0[5];
  long long v13 = v0[4];
  long long v14 = v3;
  long long v4 = v0[7];
  long long v15 = v0[6];
  long long v16 = v4;
  long long v5 = v0[1];
  long long v9 = *v0;
  long long v10 = v5;
  long long v6 = v0[3];
  long long v11 = v0[2];
  long long v12 = v6;
  sub_260FE52F0();
  AppleDiffusionModelMetadata.hash(into:)((uint64_t)v8);
  return sub_260FE5340();
}

uint64_t sub_260FA94D4(uint64_t a1)
{
  return AppleDiffusionModelMetadata.hash(into:)(a1);
}

uint64_t sub_260FA9530()
{
  long long v1 = v0[9];
  long long v17 = v0[8];
  long long v18 = v1;
  long long v2 = v0[11];
  long long v19 = v0[10];
  long long v20 = v2;
  long long v3 = v0[5];
  long long v13 = v0[4];
  long long v14 = v3;
  long long v4 = v0[7];
  long long v15 = v0[6];
  long long v16 = v4;
  long long v5 = v0[1];
  long long v9 = *v0;
  long long v10 = v5;
  long long v6 = v0[3];
  long long v11 = v0[2];
  long long v12 = v6;
  sub_260FE52F0();
  AppleDiffusionModelMetadata.hash(into:)((uint64_t)v8);
  return sub_260FE5340();
}

BOOL sub_260FA95A4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[9];
  v15[8] = a1[8];
  v15[9] = v2;
  long long v3 = a1[11];
  v15[10] = a1[10];
  v15[11] = v3;
  long long v4 = a1[5];
  v15[4] = a1[4];
  v15[5] = v4;
  long long v5 = a1[7];
  v15[6] = a1[6];
  v15[7] = v5;
  long long v6 = a1[1];
  v15[0] = *a1;
  v15[1] = v6;
  long long v7 = a1[3];
  void v15[2] = a1[2];
  v15[3] = v7;
  long long v8 = a2[9];
  v16[8] = a2[8];
  v16[9] = v8;
  long long v9 = a2[11];
  v16[10] = a2[10];
  v16[11] = v9;
  long long v10 = a2[5];
  v16[4] = a2[4];
  v16[5] = v10;
  long long v11 = a2[7];
  v16[6] = a2[6];
  v16[7] = v11;
  long long v12 = a2[1];
  v16[0] = *a2;
  v16[1] = v12;
  long long v13 = a2[3];
  v16[2] = a2[2];
  void v16[3] = v13;
  return _s13DiffusionBase05AppleA13ModelMetadataV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v15, (uint64_t)v16);
}

uint64_t sub_260FA9638()
{
  if (*v0) {
    return 6775156;
  }
  else {
    return 0x6E695F6C65646F6DLL;
  }
}

uint64_t sub_260FA9674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_260FAEFD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_260FA969C(uint64_t a1)
{
  unint64_t v2 = sub_260FB2594();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_260FA96D8(uint64_t a1)
{
  unint64_t v2 = sub_260FB2594();
  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 CoreMLUserMetadata.init(from:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  result.n128_u64[0] = sub_260FAF0D4(a1, (uint64_t)v10).n128_u64[0];
  if (!v2)
  {
    long long v5 = v10[11];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_OWORD *)(a2 + 192) = v10[12];
    long long v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    long long v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    long long v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    long long v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    __n128 result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

__n128 CoreMLUserMetadata.init(tag:model_infos:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_260DD7C14(a3, (uint64_t)v13, &qword_26A8EA0B8);
  sub_260DD7C14((uint64_t)v13, (uint64_t)v14, &qword_26A8EA0B8);
  sub_260DD7C14((uint64_t)v14, (uint64_t)v15, &qword_26A8EA0B8);
  *(void *)&long long v16 = a1;
  *((void *)&v16 + 1) = a2;
  long long v7 = v15[11];
  *(_OWORD *)(a4 + 160) = v15[10];
  *(_OWORD *)(a4 + 176) = v7;
  *(_OWORD *)(a4 + 192) = v16;
  long long v8 = v15[7];
  *(_OWORD *)(a4 + 96) = v15[6];
  *(_OWORD *)(a4 + 112) = v8;
  long long v9 = v15[9];
  *(_OWORD *)(a4 + 128) = v15[8];
  *(_OWORD *)(a4 + 144) = v9;
  long long v10 = v15[3];
  *(_OWORD *)(a4 + 32) = v15[2];
  *(_OWORD *)(a4 + 48) = v10;
  long long v11 = v15[5];
  *(_OWORD *)(a4 + 64) = v15[4];
  *(_OWORD *)(a4 + 80) = v11;
  __n128 result = (__n128)v15[1];
  *(_OWORD *)a4 = v15[0];
  *(__n128 *)(a4 + 16) = result;
  return result;
}

__n128 sub_260FA9834@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  result.n128_u64[0] = sub_260FAF0D4(a1, (uint64_t)v10).n128_u64[0];
  if (!v2)
  {
    long long v5 = v10[11];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_OWORD *)(a2 + 192) = v10[12];
    long long v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    long long v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    long long v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    long long v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    __n128 result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_260FA98A0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    uint64_t v14 = 16 * v10;
    long long v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    long long v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_260DBACB4(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      __n128 result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_260FE5150();
      __n128 result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_260FA9AA8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v31 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v32 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v33 = result;
  while (1)
  {
    if (v7)
    {
      uint64_t v35 = (v7 - 1) & v7;
      unint64_t v8 = __clz(__rbit64(v7)) | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    if (v9 >= v32) {
      return 1;
    }
    unint64_t v10 = *(void *)(v31 + 8 * v9);
    ++v4;
    if (!v10)
    {
      int64_t v4 = v9 + 1;
      if (v9 + 1 >= v32) {
        return 1;
      }
      unint64_t v10 = *(void *)(v31 + 8 * v4);
      if (!v10)
      {
        int64_t v4 = v9 + 2;
        if (v9 + 2 >= v32) {
          return 1;
        }
        unint64_t v10 = *(void *)(v31 + 8 * v4);
        if (!v10) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v35 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v4 << 6);
LABEL_24:
    unint64_t v12 = (uint64_t *)(*(void *)(v3 + 56) + 40 * v8);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = v12[2];
    uint64_t v16 = v12[3];
    uint64_t v17 = v12[4];
    unsigned __int8 v18 = *(unsigned char *)(*(void *)(v3 + 48) + v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_260DBB0F0(v18);
    if ((v20 & 1) == 0) {
      goto LABEL_55;
    }
    int64_t v34 = v4;
    unint64_t v21 = (void *)(*(void *)(a2 + 56) + 40 * v19);
    uint64_t v23 = v21[1];
    uint64_t v22 = v21[2];
    uint64_t v24 = v21[3];
    uint64_t v25 = v21[4];
    if (v23)
    {
      if (!v14) {
        goto LABEL_55;
      }
      BOOL v26 = *v21 == v13 && v23 == v14;
      if (!v26 && (sub_260FE5150() & 1) == 0) {
        goto LABEL_55;
      }
    }
    else if (v14)
    {
      goto LABEL_55;
    }
    if (v22)
    {
      if (!v15) {
        goto LABEL_55;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v27 = swift_bridgeObjectRetain();
      char v28 = sub_260FA9EE0(v27, v15);
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
      if (!v24)
      {
LABEL_43:
        if (v16) {
          goto LABEL_53;
        }
        goto LABEL_44;
      }
    }
    else
    {
      if (v15) {
        goto LABEL_55;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v24) {
        goto LABEL_43;
      }
    }
    if (!v16) {
      goto LABEL_50;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v29 = sub_260FAA0B8(v24, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_53:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_54:
      swift_bridgeObjectRelease();
LABEL_55:
      swift_bridgeObjectRelease();
LABEL_56:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_44:
    if (v25)
    {
      if (!v17)
      {
LABEL_50:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_54;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v30 = sub_260FAA0B8(v25, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0) {
        goto LABEL_56;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_56;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __n128 result = swift_bridgeObjectRelease();
    uint64_t v3 = v33;
    int64_t v4 = v34;
    unint64_t v7 = v35;
  }
  int64_t v11 = v9 + 3;
  if (v11 >= v32) {
    return 1;
  }
  unint64_t v10 = *(void *)(v31 + 8 * v11);
  if (v10)
  {
    int64_t v4 = v11;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v4 >= v32) {
      return 1;
    }
    unint64_t v10 = *(void *)(v31 + 8 * v4);
    ++v11;
    if (v10) {
      goto LABEL_23;
    }
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_260FA9EE0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_25:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v11);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    unsigned __int8 v18 = *(unsigned char *)(*(void *)(v3 + 48) + v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_260DBB2A0(v18);
    if ((v20 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    unint64_t v21 = (void *)(*(void *)(a2 + 56) + 16 * v19);
    if (*v21 == v17 && v21[1] == v16)
    {
      __n128 result = swift_bridgeObjectRelease();
    }
    else
    {
      char v23 = sub_260FE5150();
      __n128 result = swift_bridgeObjectRelease();
      if ((v23 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_260FAA0B8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    unint64_t v18 = sub_260DBB234(*(unsigned char *)(*(void *)(v3 + 48) + v11));
    if (v19)
    {
      char v20 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v18);
      __n128 result = *v20;
      if (*v20 == v16 && v20[1] == v17) {
        continue;
      }
      __n128 result = sub_260FE5150();
      if (result) {
        continue;
      }
    }
    return 0;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_260FAA258(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t (*a6)(void), void (*a7)(void), void (*a8)(void))
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = sub_260FAB778();
  if (!v15) {
    goto LABEL_23;
  }
  uint64_t v16 = v13;
  uint64_t v17 = v15;
  unint64_t v62 = a7;
  uint64_t v63 = v14;
  unint64_t v18 = (void *)*a5;
  unint64_t v20 = a6();
  uint64_t v21 = v18[2];
  BOOL v22 = (v19 & 1) == 0;
  if (__OFADD__(v21, v22))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v23 = v19;
  if (v18[3] >= v21 + v22)
  {
    if (a4)
    {
      BOOL v26 = (void *)*a5;
      if (v19) {
        goto LABEL_9;
      }
    }
    else
    {
      v62();
      BOOL v26 = (void *)*a5;
      if (v23) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v26[(v20 >> 6) + 8] |= 1 << v20;
    *(unsigned char *)(v26[6] + v20) = v16;
    int64_t v32 = (void *)(v26[7] + 16 * v20);
    *int64_t v32 = v63;
    v32[1] = v17;
    uint64_t v33 = v26[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    void v26[2] = v35;
LABEL_13:
    uint64_t v36 = sub_260FAB778();
    if (v38)
    {
      uint64_t v39 = v36;
      uint64_t v40 = v37;
      uint64_t v41 = v38;
      do
      {
        char v49 = (void *)*a5;
        unint64_t v50 = ((uint64_t (*)(uint64_t))a6)(v39);
        uint64_t v52 = v49[2];
        BOOL v53 = (v51 & 1) == 0;
        BOOL v34 = __OFADD__(v52, v53);
        uint64_t v54 = v52 + v53;
        if (v34) {
          goto LABEL_24;
        }
        char v55 = v51;
        if (v49[3] < v54)
        {
          ((void (*)(uint64_t, uint64_t))a8)(v54, 1);
          unint64_t v50 = ((uint64_t (*)(uint64_t))a6)(v39);
          if ((v55 & 1) != (v56 & 1)) {
            goto LABEL_26;
          }
        }
        uint64_t v57 = (void *)*a5;
        if (v55)
        {
          uint64_t v42 = 16 * v50;
          id v43 = (uint64_t *)(v57[7] + 16 * v50);
          uint64_t v45 = *v43;
          uint64_t v44 = v43[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v46 = (void *)(v57[7] + v42);
          swift_bridgeObjectRelease();
          *uint64_t v46 = v45;
          v46[1] = v44;
        }
        else
        {
          v57[(v50 >> 6) + 8] |= 1 << v50;
          *(unsigned char *)(v57[6] + v50) = v39;
          unint64_t v58 = (void *)(v57[7] + 16 * v50);
          *unint64_t v58 = v40;
          v58[1] = v41;
          uint64_t v59 = v57[2];
          BOOL v34 = __OFADD__(v59, 1);
          uint64_t v60 = v59 + 1;
          if (v34) {
            goto LABEL_25;
          }
          v57[2] = v60;
        }
        uint64_t v39 = sub_260FAB778();
        uint64_t v40 = v47;
        uint64_t v41 = v48;
      }
      while (v48);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_260DD782C();
    return swift_release();
  }
  a8();
  uint64_t v24 = ((uint64_t (*)(uint64_t))a6)(v16);
  if ((v23 & 1) == (v25 & 1))
  {
    unint64_t v20 = v24;
    BOOL v26 = (void *)*a5;
    if ((v23 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v27 = 16 * v20;
    char v28 = (uint64_t *)(v26[7] + v27);
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v31 = (void *)(v26[7] + v27);
    swift_bridgeObjectRelease();
    *uint64_t v31 = v30;
    v31[1] = v29;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_260FE5280();
  __break(1u);
  return result;
}

uint64_t sub_260FAA594()
{
  sub_260DD7C14(v0, (uint64_t)&v5, &qword_26A8EAF70);
  char v2 = v6;
  char v1 = v7;
  __int16 v3 = v8;
  sub_260DD7C14(v0, (uint64_t)v9, &qword_26A8EAF70);
  if (v9[34] == 1) {
    return sub_260FE5310();
  }
  sub_260FE5310();
  sub_260FE5320();
  if ((v2 & 1) == 0)
  {
    sub_260FE5310();
    sub_260FE5300();
    if (v1) {
      goto LABEL_4;
    }
LABEL_7:
    sub_260FE5310();
    sub_260FE5320();
    if ((v3 & 0x100) != 0) {
      return sub_260FE5310();
    }
    goto LABEL_8;
  }
  sub_260FE5310();
  if ((v1 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_4:
  sub_260FE5310();
  if ((v3 & 0x100) != 0) {
    return sub_260FE5310();
  }
LABEL_8:
  sub_260FE5310();
  if ((v3 & 1) == 0)
  {
    sub_260FE5310();
    return sub_260FE5320();
  }
  return sub_260FE5310();
}

uint64_t sub_260FAA6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v22 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  int64_t v7 = 0;
  while (1)
  {
    uint64_t v25 = v6;
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_20;
    }
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v10 >= v22) {
      goto LABEL_29;
    }
    unint64_t v11 = *(void *)(v23 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v22) {
        goto LABEL_29;
      }
      unint64_t v11 = *(void *)(v23 + 8 * v7);
      if (!v11) {
        break;
      }
    }
LABEL_19:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_20:
    uint64_t v13 = (void *)(*(void *)(a2 + 56) + 40 * v9);
    uint64_t v14 = v13[1];
    uint64_t v16 = v13[2];
    uint64_t v15 = v13[3];
    uint64_t v17 = v13[4];
    uint64_t v18 = *(void *)(a1 + 64);
    long long v19 = *(_OWORD *)(a1 + 16);
    v26[0] = *(_OWORD *)a1;
    v26[1] = v19;
    long long v20 = *(_OWORD *)(a1 + 48);
    void v26[2] = *(_OWORD *)(a1 + 32);
    v26[3] = v20;
    uint64_t v27 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    if (v14)
    {
      sub_260FE5310();
      swift_bridgeObjectRetain();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_22;
      }
    }
    else
    {
      sub_260FE5310();
      if (v16)
      {
LABEL_22:
        sub_260FE5310();
        swift_bridgeObjectRetain();
        sub_260FAAC20((uint64_t)v26, v16);
        swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_23;
        }
        goto LABEL_27;
      }
    }
    sub_260FE5310();
    if (v15)
    {
LABEL_23:
      sub_260FE5310();
      swift_bridgeObjectRetain();
      sub_260FAAA80((uint64_t)v26, v15);
      swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_4;
      }
      goto LABEL_28;
    }
LABEL_27:
    sub_260FE5310();
    if (v17)
    {
LABEL_4:
      sub_260FE5310();
      swift_bridgeObjectRetain();
      sub_260FAAA80((uint64_t)v26, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
LABEL_28:
    sub_260FE5310();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_260FE5340() ^ v25;
  }
  int64_t v12 = v10 + 2;
  if (v12 < v22)
  {
    unint64_t v11 = *(void *)(v23 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v7 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          break;
        }
        if (v7 >= v22) {
          goto LABEL_29;
        }
        unint64_t v11 = *(void *)(v23 + 8 * v7);
        ++v12;
        if (v11) {
          goto LABEL_19;
        }
      }
LABEL_31:
      __break(1u);
      JUMPOUT(0x260FAAA68);
    }
    int64_t v7 = v12;
    goto LABEL_19;
  }
LABEL_29:
  swift_release();
  return sub_260FE5300();
}

uint64_t sub_260FAAA80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    int64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v6) {
      goto LABEL_19;
    }
    uint64_t v11 = *(void *)(v2 + 8 * v10);
    ++v9;
    if (!v11)
    {
      int64_t v9 = v10 + 1;
      if (v10 + 1 >= v6) {
        goto LABEL_19;
      }
      uint64_t v11 = *(void *)(v2 + 8 * v9);
      if (!v11) {
        break;
      }
    }
LABEL_18:
    uint64_t v5 = (v11 - 1) & v11;
LABEL_5:
    sub_260FE5300();
    swift_bridgeObjectRetain();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_260FE5340();
    v8 ^= result;
  }
  int64_t v12 = v10 + 2;
  if (v12 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_260FE5300();
  }
  uint64_t v11 = *(void *)(v2 + 8 * v12);
  if (v11)
  {
    int64_t v9 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_19;
    }
    uint64_t v11 = *(void *)(v2 + 8 * v9);
    ++v12;
    if (v11) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_260FAAC20(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_18;
    }
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v8 >= v5) {
      goto LABEL_19;
    }
    uint64_t v9 = *(void *)(v12 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v5) {
        goto LABEL_19;
      }
      uint64_t v9 = *(void *)(v12 + 8 * v7);
      if (!v9) {
        break;
      }
    }
LABEL_17:
    uint64_t v4 = (v9 - 1) & v9;
LABEL_18:
    swift_bridgeObjectRetain();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    v6 ^= sub_260FE5340();
  }
  int64_t v10 = v8 + 2;
  if (v10 < v5)
  {
    uint64_t v9 = *(void *)(v12 + 8 * v10);
    if (!v9)
    {
      while (1)
      {
        int64_t v7 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          break;
        }
        if (v7 >= v5) {
          goto LABEL_19;
        }
        uint64_t v9 = *(void *)(v12 + 8 * v7);
        ++v10;
        if (v9) {
          goto LABEL_17;
        }
      }
LABEL_21:
      __break(1u);
      JUMPOUT(0x260FAAE8CLL);
    }
    int64_t v7 = v10;
    goto LABEL_17;
  }
LABEL_19:
  swift_release();
  return sub_260FE5300();
}

uint64_t sub_260FAAEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v9 >= v5) {
      goto LABEL_19;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      int64_t v8 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_19;
      }
      uint64_t v10 = *(void *)(v12 + 8 * v8);
      if (!v10) {
        break;
      }
    }
LABEL_18:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_260FE5340();
    v7 ^= result;
  }
  int64_t v11 = v9 + 2;
  if (v11 >= v5)
  {
LABEL_19:
    swift_release();
    return sub_260FE5300();
  }
  uint64_t v10 = *(void *)(v12 + 8 * v11);
  if (v10)
  {
    int64_t v8 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v8 >= v5) {
      goto LABEL_19;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v8);
    ++v11;
    if (v10) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_260FAB070(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_260FE5300();
  if (v3)
  {
    int64_t v5 = (unsigned __int8 *)(a2 + 60);
    do
    {
      uint64_t v6 = *(void *)(v5 - 12);
      int v7 = *v5;
      if (*(v5 - 28) == 9)
      {
        sub_260FE5310();
        swift_bridgeObjectRetain();
        if (v6) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_260FE5310();
        swift_bridgeObjectRetain();
        sub_260FE41D0();
        swift_bridgeObjectRelease();
        if (v6)
        {
LABEL_7:
          sub_260FE5310();
          swift_bridgeObjectRetain();
          sub_260FE41D0();
          swift_bridgeObjectRelease();
          if (!v7) {
            goto LABEL_11;
          }
          goto LABEL_3;
        }
      }
      sub_260FE5310();
      if (!v7)
      {
LABEL_11:
        sub_260FE5310();
        sub_260FE5320();
        goto LABEL_4;
      }
LABEL_3:
      sub_260FE5310();
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      v5 += 32;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_260FAB2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_260FE5300();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      v5 += 4;
      uint64_t result = sub_260FE5320();
      --v3;
    }
    while (v3);
  }
  return result;
}

unint64_t sub_260FAB308()
{
  void (*v9)(uint64_t *__return_ptr, char *);
  uint64_t v10;
  unint64_t result;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  char v19[4];
  uint64_t v20;

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v8 = *(void *)(v1 + 48);
    uint64_t v7 = *(void *)(v1 + 56);
    int64_t v9 = (void (*)(uint64_t *__return_ptr, char *))v0[5];
    v19[0] = *(unsigned char *)(v8 + v6);
    uint64_t v10 = *(void *)(v7 + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    long long v20 = v10;
    v9(&v18, v19);
    return v18 | ((unint64_t)HIDWORD(v18) << 32);
  }
  uint64_t v12 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = (unint64_t)(v0[2] + 64) >> 6;
    if (v12 < v13)
    {
      uint64_t v14 = v0[1];
      uint64_t v15 = *(void *)(v14 + 8 * v12);
      if (v15)
      {
LABEL_7:
        uint64_t v5 = (v15 - 1) & v15;
        unint64_t v6 = __clz(__rbit64(v15)) + (v12 << 6);
        int64_t v4 = v12;
        goto LABEL_3;
      }
      uint64_t v16 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v13)
      {
        uint64_t v15 = *(void *)(v14 + 8 * v16);
        if (v15)
        {
LABEL_10:
          uint64_t v12 = v16;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v13)
        {
          uint64_t v15 = *(void *)(v14 + 8 * (v3 + 3));
          if (v15)
          {
            uint64_t v12 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v16 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v13)
          {
            uint64_t v15 = *(void *)(v14 + 8 * v16);
            if (v15) {
              goto LABEL_10;
            }
            uint64_t v12 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v13)
            {
              uint64_t v15 = *(void *)(v14 + 8 * v12);
              if (v15) {
                goto LABEL_7;
              }
              int64_t v4 = v13 - 1;
              uint64_t v17 = v3 + 6;
              while (v13 != v17)
              {
                uint64_t v15 = *(void *)(v14 + 8 * v17++);
                if (v15)
                {
                  uint64_t v12 = v17 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
    return 8;
  }
  return result;
}

unint64_t sub_260FAB478()
{
  void (*v9)(uint64_t *__return_ptr, char *);
  unint64_t result;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  char v18[4];
  int v19;

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    char v7 = *(unsigned char *)(*(void *)(v1 + 48) + v6);
    int v8 = *(_DWORD *)(*(void *)(v1 + 56) + 4 * v6);
    v0[3] = v4;
    v0[4] = v5;
    int64_t v9 = (void (*)(uint64_t *__return_ptr, char *))v0[5];
    v18[0] = v7;
    long long v19 = v8;
    v9(&v17, v18);
    return v17 | ((unint64_t)HIDWORD(v17) << 32);
  }
  int64_t v11 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = (unint64_t)(v0[2] + 64) >> 6;
    if (v11 < v12)
    {
      uint64_t v13 = v0[1];
      uint64_t v14 = *(void *)(v13 + 8 * v11);
      if (v14)
      {
LABEL_7:
        uint64_t v5 = (v14 - 1) & v14;
        unint64_t v6 = __clz(__rbit64(v14)) + (v11 << 6);
        int64_t v4 = v11;
        goto LABEL_3;
      }
      uint64_t v15 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v12)
      {
        uint64_t v14 = *(void *)(v13 + 8 * v15);
        if (v14)
        {
LABEL_10:
          int64_t v11 = v15;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v12)
        {
          uint64_t v14 = *(void *)(v13 + 8 * (v3 + 3));
          if (v14)
          {
            int64_t v11 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v15 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v12)
          {
            uint64_t v14 = *(void *)(v13 + 8 * v15);
            if (v14) {
              goto LABEL_10;
            }
            int64_t v11 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v12)
            {
              uint64_t v14 = *(void *)(v13 + 8 * v11);
              if (v14) {
                goto LABEL_7;
              }
              int64_t v4 = v12 - 1;
              uint64_t v16 = v3 + 6;
              while (v12 != v16)
              {
                uint64_t v14 = *(void *)(v13 + 8 * v16++);
                if (v14)
                {
                  int64_t v11 = v16 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
    return 8;
  }
  return result;
}

void sub_260FAB5E4()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  id v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    char v7 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = *(void **)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    int64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    uint64_t v12 = v10;
    v11(&v19, v20);

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      uint64_t v15 = v0[1];
      uint64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      uint64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        uint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          uint64_t v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          uint64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            uint64_t v13 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            uint64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            uint64_t v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              uint64_t v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              uint64_t v18 = v3 + 6;
              while (v14 != v18)
              {
                uint64_t v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  uint64_t v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

uint64_t sub_260FAB778()
{
  void (*v11)(uint64_t *__return_ptr, char *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  char v20[8];
  uint64_t v21;
  uint64_t v22;

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    char v7 = *(unsigned char *)(*(void *)(v1 + 48) + v6);
    uint64_t v8 = (uint64_t *)(*(void *)(v1 + 56) + 16 * v6);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    v0[3] = v4;
    v0[4] = v5;
    int64_t v11 = (void (*)(uint64_t *__return_ptr, char *))v0[5];
    v20[0] = v7;
    uint64_t v21 = v9;
    int64_t v22 = v10;
    swift_bridgeObjectRetain();
    v11(&v19, v20);
    swift_bridgeObjectRelease();
    return v19;
  }
  uint64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      uint64_t v15 = v0[1];
      uint64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      uint64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        uint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          uint64_t v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          uint64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            uint64_t v13 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            uint64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            uint64_t v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              uint64_t v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              uint64_t v18 = v3 + 6;
              while (v14 != v18)
              {
                uint64_t v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  uint64_t v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_260FAB904@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *a1;
  uint64_t v4 = *((void *)a1 + 1);
  uint64_t v3 = *((void *)a1 + 2);
  *(unsigned char *)a2 = v2;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t _s13DiffusionBase05AppleA13ModelMetadataV10PromptInfoV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a2)
  {
    if (a5) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!a5) {
    return 0;
  }
  if (a1 == a4 && a2 == a5 || (char v8 = sub_260FE5150(), result = 0, (v8 & 1) != 0))
  {
LABEL_8:
    if (a3 == 2)
    {
      if (a6 == 2) {
        return 1;
      }
    }
    else if (a6 != 2)
    {
      if (a3) {
        uint64_t v10 = 3425357;
      }
      else {
        uint64_t v10 = 3228749;
      }
      if (a6) {
        uint64_t v11 = 3425357;
      }
      else {
        uint64_t v11 = 3228749;
      }
      if (v10 == v11)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      char v12 = sub_260FE5150();
      swift_bridgeObjectRelease_n();
      if (v12) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_260FABA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a2)
  {
    if (a6) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!a6) {
    return 0;
  }
  if (a1 == a5 && a2 == a6 || (char v12 = sub_260FE5150(), result = 0, (v12 & 1) != 0))
  {
LABEL_8:
    if (a4)
    {
      if (a8 && (a3 == a7 && a4 == a8 || (sub_260FE5150() & 1) != 0)) {
        return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s13DiffusionBase05AppleA13ModelMetadataV18ReferenceImageInfoV23__derived_struct_equalsySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  if (v4 == 3)
  {
    if (v5 != 3) {
      return 0;
    }
  }
  else
  {
    if (v5 == 3) {
      return 0;
    }
    if (v4 << 16 == v5 << 16)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v6 = sub_260FE5150();
      swift_bridgeObjectRelease_n();
      BOOL result = 0;
      if ((v6 & 1) == 0) {
        return result;
      }
    }
  }
  if (*((float *)a1 + 1) != *((float *)a2 + 1)
    || !sub_260F83320(*((void *)a1 + 1), *((void *)a2 + 1))
    || *((float *)a1 + 4) != *((float *)a2 + 4)
    || !sub_260F83320(*((void *)a1 + 3), *((void *)a2 + 3)))
  {
    return 0;
  }
  char v8 = a2[36];
  if (a1[36])
  {
    if (!a2[36]) {
      return 0;
    }
  }
  else
  {
    if (*((float *)a1 + 8) != *((float *)a2 + 8)) {
      char v8 = 1;
    }
    if (v8) {
      return 0;
    }
  }
  uint64_t v9 = *((void *)a1 + 5);
  uint64_t v10 = *((void *)a2 + 5);
  if (v9)
  {
    if (!v10 || !sub_260F83320(v9, v10)) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  char v11 = a2[52];
  if (a1[52])
  {
    if (!a2[52]) {
      return 0;
    }
  }
  else
  {
    if (*((float *)a1 + 12) != *((float *)a2 + 12)) {
      char v11 = 1;
    }
    if (v11) {
      return 0;
    }
  }
  uint64_t v12 = *((void *)a1 + 7);
  uint64_t v13 = *((void *)a2 + 7);
  if (v12) {
    return v13 && sub_260F83320(v12, v13);
  }
  return !v13;
}

uint64_t _s13DiffusionBase05AppleA13ModelMetadataV19GlobalLCMParametersV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2) {
    return 0;
  }
  char v2 = *(unsigned char *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  char v3 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(float *)(a1 + 20) != *(float *)(a2 + 20)) {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 33))
  {
    if (*(unsigned char *)(a2 + 33)) {
      return 1;
    }
  }
  else if ((*(unsigned char *)(a2 + 33) & 1) == 0)
  {
    unint64_t v5 = *(unsigned int *)(a2 + 28) | ((unint64_t)*(unsigned __int8 *)(a2 + 32) << 32);
    if (((*(unsigned int *)(a1 + 28) | ((unint64_t)*(unsigned __int8 *)(a1 + 32) << 32)) & 0x100000000) != 0)
    {
      if ((v5 & 0x100000000) == 0) {
        return 0;
      }
    }
    else if ((v5 & 0x100000000) != 0 || *(float *)(a1 + 28) != *(float *)(a2 + 28))
    {
      return 0;
    }
    return 1;
  }
  return 0;
}

uint64_t _s13DiffusionBase05AppleA13ModelMetadataV34Adapter_StyleSpecificAugmentationsV23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (char v7 = sub_260FE5150(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = a2[2];
    if (a1[2])
    {
      if (!v9) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v10 = swift_bridgeObjectRetain();
      char v11 = sub_260FA9EE0(v10, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    else if (v9)
    {
      return 0;
    }
    uint64_t v12 = a2[3];
    if (a1[3])
    {
      if (!v12) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v13 = swift_bridgeObjectRetain();
      char v14 = sub_260FAA0B8(v13, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    else if (v12)
    {
      return 0;
    }
    uint64_t v15 = a2[4];
    if (a1[4])
    {
      if (v15)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = swift_bridgeObjectRetain();
        char v17 = sub_260FAA0B8(v16, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          return 1;
        }
      }
    }
    else if (!v15)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL sub_260FABE4C(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == 9)
  {
    if (a5 != 9) {
      return 0;
    }
  }
  else if (a5 == 9 || (sub_260FD4E8C(a1, a5) & 1) == 0)
  {
    return 0;
  }
  if (!a3)
  {
    if (a7) {
      return 0;
    }
    goto LABEL_13;
  }
  if (!a7) {
    return 0;
  }
  if (a2 == a6 && a3 == a7 || (char v14 = sub_260FE5150(), result = 0, (v14 & 1) != 0))
  {
LABEL_13:
    if ((a4 & 0x100000000) == 0) {
      return (a8 & 0x100000000) == 0 && *(float *)&a4 == *(float *)&a8;
    }
    return (a8 & 0x100000000) != 0;
  }
  return result;
}

BOOL _s13DiffusionBase05AppleA13ModelMetadataV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  if (v5 == 1)
  {
    if (v8 == 1) {
      goto LABEL_3;
    }
LABEL_8:
    sub_260F32C08(*(void *)a1, v5);
    sub_260F32C08(v9, v8);
    sub_260F32D98(v4, v5);
    sub_260F32D98(v9, v8);
    return 0;
  }
  if (v8 == 1) {
    goto LABEL_8;
  }
  if (!v5)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_22;
  }
  if (!v8) {
    return 0;
  }
  if (v4 == v9 && v5 == v8 || (char v28 = sub_260FE5150(), result = 0, (v28 & 1) != 0))
  {
LABEL_22:
    if (v7)
    {
      if (!v10) {
        return 0;
      }
      if (v6 != v11 || v7 != v10)
      {
        char v33 = sub_260FE5150();
        BOOL result = 0;
        if ((v33 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
LABEL_3:
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = *(void *)(a1 + 40);
    uint64_t v14 = *(void *)(a1 + 48);
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v16 = *(void *)(a1 + 64);
    uint64_t v17 = *(void *)(a1 + 72);
    uint64_t v18 = *(void *)(a1 + 80);
    uint64_t v19 = *(void *)(a1 + 88);
    uint64_t v20 = *(void *)(a2 + 32);
    uint64_t v21 = *(void *)(a2 + 40);
    uint64_t v23 = *(void *)(a2 + 48);
    uint64_t v22 = *(void *)(a2 + 56);
    uint64_t v25 = *(void *)(a2 + 64);
    uint64_t v24 = *(void *)(a2 + 72);
    uint64_t v27 = *(void *)(a2 + 80);
    uint64_t v26 = *(void *)(a2 + 88);
    if (v13)
    {
      if (v21)
      {
        v73[0] = *(void *)(a1 + 32);
        int v74 = HIDWORD(v12);
        uint64_t v75 = v13;
        int v76 = v14;
        uint64_t v77 = v15;
        int v78 = v16;
        char v79 = BYTE4(v16) & 1;
        uint64_t v80 = v17;
        int v81 = v18;
        char v82 = BYTE4(v18) & 1;
        uint64_t v83 = v19;
        LOBYTE(v57) = v20;
        HIDWORD(v57) = HIDWORD(v20);
        uint64_t v58 = v21;
        LODWORD(v59) = v23;
        uint64_t v60 = v22;
        LODWORD(v61) = v25;
        BYTE4(v61) = BYTE4(v25) & 1;
        uint64_t v62 = v24;
        LODWORD(v63) = v27;
        BYTE4(v63) = BYTE4(v27) & 1;
        uint64_t v64 = v26;
        uint64_t v56 = v12;
        uint64_t v54 = v13;
        sub_260F32C50(v12, v13);
        sub_260F32C50(v20, v21);
        BOOL v55 = _s13DiffusionBase05AppleA13ModelMetadataV18ReferenceImageInfoV23__derived_struct_equalsySbAE_AEtFZ_0(v73, (unsigned __int8 *)&v57);
        sub_260F32DE0(v20, v21);
        sub_260F32DE0(v56, v54);
        if (!v55) {
          return 0;
        }
LABEL_17:
        uint64_t v30 = *(void *)(a2 + 96);
        if (*(void *)(a1 + 96))
        {
          if (!v30) {
            return 0;
          }
          swift_bridgeObjectRetain();
          uint64_t v31 = swift_bridgeObjectRetain();
          char v32 = sub_260F82DA8(v31, v30);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v32 & 1) == 0) {
            return 0;
          }
        }
        else if (v30)
        {
          return 0;
        }
        uint64_t v34 = *(void *)(a1 + 112);
        uint64_t v35 = *(void *)(a2 + 112);
        if (v34 == 1)
        {
          if (v35 != 1) {
            return 0;
          }
        }
        else
        {
          if (v35 == 1) {
            return 0;
          }
          uint64_t v36 = *(void *)(a1 + 104);
          char v37 = *(unsigned char *)(a1 + 120);
          uint64_t v38 = *(void *)(a2 + 104);
          char v39 = *(unsigned char *)(a2 + 120);
          sub_260ED7980(v38, *(void *)(a2 + 112));
          sub_260ED7980(v36, v34);
          char v40 = _s13DiffusionBase05AppleA13ModelMetadataV10PromptInfoV23__derived_struct_equalsySbAE_AEtFZ_0(v36, v34, v37, v38, v35, v39);
          sub_260E311B4(v38, v35);
          sub_260E311B4(v36, v34);
          if ((v40 & 1) == 0) {
            return 0;
          }
        }
        uint64_t v41 = *(void **)(a1 + 128);
        uint64_t v42 = *(void **)(a2 + 128);
        if (v41)
        {
          if (!v42 || (sub_260F83258(v41, v42) & 1) == 0) {
            return 0;
          }
        }
        else if (v42)
        {
          return 0;
        }
        if (*(unsigned char *)(a1 + 170))
        {
          if ((*(unsigned char *)(a2 + 170) & 1) == 0) {
            return 0;
          }
          goto LABEL_43;
        }
        if ((*(unsigned char *)(a2 + 170) & 1) != 0 || *(float *)(a1 + 136) != COERCE_FLOAT(*(void *)(a2 + 136))) {
          return 0;
        }
        uint64_t v47 = *(void *)(a1 + 152);
        uint64_t v46 = *(void *)(a1 + 160);
        uint64_t v49 = *(void *)(a2 + 152);
        uint64_t v48 = *(void *)(a2 + 160);
        __int16 v50 = *(_WORD *)(a2 + 168);
        if (v47)
        {
          if ((v49 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          BOOL result = 0;
          if ((v49 & 1) != 0 || *(void *)(a1 + 144) != *(void *)(a2 + 144)) {
            return result;
          }
        }
        if (v46)
        {
          if ((v48 & 1) == 0) {
            return 0;
          }
        }
        else if ((v48 & 1) != 0 || *((float *)&v47 + 1) != *((float *)&v49 + 1))
        {
          return 0;
        }
        if ((*(_WORD *)(a1 + 168) & 0x100) != 0)
        {
          if ((*(_WORD *)(a2 + 168) & 0x100) == 0) {
            return 0;
          }
        }
        else
        {
          if ((*(_WORD *)(a2 + 168) & 0x100) != 0) {
            return 0;
          }
          if (*(_WORD *)(a1 + 168))
          {
            if ((v50 & 1) == 0) {
              return 0;
            }
          }
          else if ((v50 & 1) != 0 || *((float *)&v46 + 1) != *((float *)&v48 + 1))
          {
            return 0;
          }
        }
LABEL_43:
        uint64_t v43 = *(void *)(a2 + 176);
        if (*(void *)(a1 + 176))
        {
          if (!v43) {
            return 0;
          }
          swift_bridgeObjectRetain();
          uint64_t v44 = swift_bridgeObjectRetain();
          char v45 = sub_260FA98A0(v44, v43);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v45 & 1) == 0) {
            return 0;
          }
        }
        else if (v43)
        {
          return 0;
        }
        uint64_t v51 = *(void *)(a2 + 184);
        if (*(void *)(a1 + 184))
        {
          if (!v51) {
            return 0;
          }
          swift_bridgeObjectRetain();
          uint64_t v52 = swift_bridgeObjectRetain();
          char v53 = sub_260FA9AA8(v52, v51);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (v53 & 1) != 0;
        }
        return !v51;
      }
    }
    else if (!v21)
    {
      goto LABEL_17;
    }
    uint64_t v57 = *(void *)(a1 + 32);
    uint64_t v58 = v13;
    uint64_t v59 = v14;
    uint64_t v60 = v15;
    uint64_t v61 = v16;
    uint64_t v62 = v17;
    uint64_t v63 = v18;
    uint64_t v64 = v19;
    uint64_t v65 = v20;
    uint64_t v66 = v21;
    uint64_t v67 = v23;
    uint64_t v68 = v22;
    uint64_t v69 = v25;
    uint64_t v70 = v24;
    uint64_t v71 = v27;
    uint64_t v72 = v26;
    sub_260F32C50(v12, v13);
    sub_260F32C50(v20, v21);
    sub_260FB2B08(&v57);
    return 0;
  }
  return result;
}

uint64_t sub_260FAC468(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974636964657270 && a2 == 0xEF657079745F6E6FLL;
  if (v2 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_260FAC570(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB010);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FB2348();
  sub_260FE53B0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_260FE4F20();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_260FE4F20();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t _s13DiffusionBase05AppleA13ModelMetadataV18ReferenceImageInfoV012ConditioningD7VersionO8rawValueAGSgSS_tcfC_0()
{
  unint64_t v0 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_260FAC7C4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x8000000261001A90 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000260FFC3F0 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000260FFC340 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000260FFC3C0 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000260FFC310 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000261001AB0 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000261001AD0 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000261001AF0 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000261001B10)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v5 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v5) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_260FACAF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB160);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FB2F0C();
  sub_260FE53B0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v33 = 0;
  sub_260FB2F60();
  sub_260FE4F60();
  int v10 = v31;
  LOBYTE(v31) = 1;
  sub_260FE4F90();
  int v12 = v11;
  int v32 = v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
  char v33 = 2;
  uint64_t v14 = sub_260FB2FB4(&qword_26A8EB178, &qword_26A8EABC8);
  sub_260FE4FB0();
  uint64_t v30 = v14;
  uint64_t v15 = v31;
  LOBYTE(v31) = 3;
  swift_bridgeObjectRetain();
  sub_260FE4F90();
  int v17 = v16;
  uint64_t v29 = v15;
  char v33 = 4;
  sub_260FE4FB0();
  uint64_t v28 = v13;
  uint64_t v18 = v31;
  LOBYTE(v31) = 5;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_260FE4F40();
  char v33 = 6;
  sub_260FE4F60();
  uint64_t v27 = v19;
  uint64_t v20 = v31;
  LOBYTE(v31) = 7;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_260FE4F40();
  char v33 = 8;
  sub_260FE4F60();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v21 = v31;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v29;
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a2 = v32;
  *(_DWORD *)(a2 + 4) = v12;
  *(void *)(a2 + 8) = v22;
  *(_DWORD *)(a2 + 16) = v17;
  *(void *)(a2 + 24) = v18;
  char v24 = BYTE4(v27);
  *(_DWORD *)(a2 + 32) = v27;
  *(unsigned char *)(a2 + 36) = v24 & 1;
  *(void *)(a2 + 40) = v20;
  char v25 = BYTE4(v26);
  *(_DWORD *)(a2 + 48) = v26;
  *(unsigned char *)(a2 + 52) = v25 & 1;
  *(void *)(a2 + 56) = v21;
  return result;
}

uint64_t sub_260FAD01C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574616C706D6574 && a2 == 0xE800000000000000;
  if (v2 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000261001A90)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_260FAD10C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB148);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FB2E64();
  sub_260FE53B0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    v10[15] = 0;
    uint64_t v8 = sub_260FE4F20();
    _OWORD v10[13] = 1;
    sub_260FB2EB8();
    swift_bridgeObjectRetain();
    sub_260FE4F60();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t _s13DiffusionBase05AppleA13ModelMetadataV8LoraInfoV0F4TypeO8rawValueAGSgSS_tcfC_0()
{
  unint64_t v0 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t sub_260FAD348(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1667592307 && a2 == 0xE400000000000000 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_260FAD478(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB130);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FB2DBC();
  sub_260FE53B0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    char v13 = 0;
    sub_260FB2E10();
    sub_260FE4F60();
    uint64_t v8 = v14;
    char v12 = 1;
    sub_260FE4F20();
    char v11 = 2;
    swift_bridgeObjectRetain();
    sub_260FE4F40();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_260FAD6B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65636E6164697567 && a2 == 0xEE00656C6163735FLL;
  if (v2 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x706574735F6D756ELL && a2 == 0xE900000000000073 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5F6D636C5F657375 && a2 == 0xEC00000073726570 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365766C6F766E69 && a2 == 0xEF656C706F65705FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_260FAD8DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB118);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FB2D14();
  sub_260FE53B0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v27 = 0;
  sub_260FE4F90();
  int v11 = v10;
  char v26 = 1;
  uint64_t v12 = sub_260FE4F50();
  char v14 = v13;
  char v25 = 2;
  uint64_t v20 = sub_260FE4F40();
  char v21 = 3;
  sub_260FB2D68();
  sub_260FE4F60();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  int v15 = v22;
  char v16 = v23;
  char v17 = v24;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  *(_DWORD *)a2 = v11;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v14 & 1;
  char v19 = BYTE4(v20);
  *(_DWORD *)(a2 + 20) = v20;
  *(unsigned char *)(a2 + 24) = v19 & 1;
  *(unsigned char *)(a2 + 32) = v16;
  *(_DWORD *)(a2 + 28) = v15;
  *(unsigned char *)(a2 + 33) = v17;
  return result;
}

unint64_t sub_260FADB28()
{
  unint64_t result = qword_26A8EAF60;
  if (!qword_26A8EAF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAF60);
  }
  return result;
}

uint64_t _s13DiffusionBase05AppleA13ModelMetadataV34Adapter_StyleSpecificAugmentationsV17ReplacementTokensO8rawValueAGSgSS_tcfC_0()
{
  unint64_t v0 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

unint64_t _s13DiffusionBase05AppleA13ModelMetadataV34Adapter_StyleSpecificAugmentationsV5ShadeO8rawValueAGSgSi_tcfC_0(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

uint64_t sub_260FADBD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x745F6E6F73726570 && a2 == 0xEF6574616C706D65;
  if (v2 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E656B6F74 && a2 == 0xE600000000000000 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E6F746E696B73 && a2 == 0xE800000000000000 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1919508840 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_260FADDA0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB0D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5, v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FB2B98();
  sub_260FE53B0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  LOBYTE(v24) = 0;
  uint64_t v10 = sub_260FE4F20();
  uint64_t v12 = v11;
  uint64_t v22 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB0E8);
  char v23 = 1;
  sub_260FB2C40(&qword_26A8EB0F0, &qword_26A8EB0E8, (void (*)(void))sub_260FB2BEC);
  swift_bridgeObjectRetain();
  sub_260FE4F60();
  uint64_t v13 = v24;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB100);
  char v23 = 2;
  uint64_t v15 = sub_260FB2C40(&qword_26A8EB108, &qword_26A8EB100, (void (*)(void))sub_260FB2CC0);
  uint64_t v21 = v13;
  swift_bridgeObjectRetain();
  v20[1] = v15;
  v20[2] = v14;
  sub_260FE4F60();
  char v23 = 3;
  v20[0] = v24;
  swift_bridgeObjectRetain();
  sub_260FE4F60();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v16 = v24;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v17 = v20[0];
  swift_bridgeObjectRelease();
  uint64_t v18 = v21;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v22;
  a2[1] = v12;
  a2[2] = v18;
  a2[3] = v17;
  a2[4] = v16;
  return result;
}

uint64_t sub_260FAE164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_260FAE1CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C756465686373 && a2 == 0xE900000000000072;
  if (v2 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xEF6567616D695F65 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7361726F6CLL && a2 == 0xE500000000000000 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5F656C626174756DLL && a2 == 0xEC0000007379656BLL || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 7168876 && a2 == 0xE300000000000000 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x65745F656C797473 && a2 == 0xEF736574616C706DLL || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000261001A70)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t *sub_260FAE560@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB070);
  uint64_t v5 = *(void *)(v117 - 8);
  MEMORY[0x270FA5388](v117, v6);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FB270C();
  sub_260FE53B0();
  if (v2)
  {
    char v11 = 0;
  }
  else
  {
    uint64_t v66 = v5;
    LOBYTE(v73) = 0;
    sub_260FB2760();
    uint64_t v10 = v117;
    sub_260FE4F60();
    uint64_t v62 = a2;
    uint64_t v63 = 0;
    uint64_t v13 = v85;
    uint64_t v14 = v86;
    long long v15 = v87;
    LOBYTE(v73) = 1;
    sub_260F32C08(v85, v86);
    sub_260FB27B4();
    uint64_t v16 = v63;
    sub_260FE4F60();
    uint64_t v63 = v16;
    uint64_t v64 = v14;
    uint64_t v65 = v13;
    if (v16)
    {
      (*(void (**)(char *, uint64_t))(v66 + 8))(v8, v10);
      sub_260F32D98(v13, v14);
      char v11 = 1;
    }
    else
    {
      uint64_t v59 = a1;
      long long v60 = v15;
      uint64_t v17 = v85;
      uint64_t v18 = v86;
      uint64_t v19 = *((void *)&v87 + 1);
      unsigned long long v20 = v88;
      uint64_t v71 = v87;
      uint64_t v72 = v89;
      uint64_t v61 = v90;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB090);
      LOBYTE(v73) = 2;
      *(void *)&long long v68 = v17;
      *((void *)&v68 + 1) = v18;
      uint64_t v69 = v20;
      uint64_t v70 = v19;
      sub_260F32C50(v17, v18);
      sub_260FB2808();
      uint64_t v21 = v63;
      sub_260FE4F60();
      uint64_t v67 = *((void *)&v20 + 1);
      if (!v21)
      {
        uint64_t v22 = v85;
        LOBYTE(v73) = 3;
        sub_260FB28D0();
        swift_bridgeObjectRetain();
        sub_260FE4F60();
        uint64_t v23 = (uint64_t)v59;
        uint64_t v58 = v22;
        uint64_t v25 = v85;
        uint64_t v24 = v86;
        int v26 = v87;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E66D8);
        LOBYTE(v73) = 4;
        uint64_t v57 = v24;
        int v56 = v26;
        sub_260ED7980(v25, v24);
        sub_260FB2FB4(&qword_26A8E9CA8, &qword_26A8E66D8);
        sub_260FE4F60();
        uint64_t v27 = v67;
        uint64_t v28 = v70;
        uint64_t v55 = v25;
        uint64_t v29 = v85;
        LOBYTE(v73) = 5;
        sub_260FB2924();
        swift_bridgeObjectRetain();
        uint64_t v63 = 0;
        sub_260FE4F60();
        uint64_t v53 = v29;
        uint64_t v51 = v86;
        uint64_t v52 = v85;
        uint64_t v49 = *((void *)&v87 + 1);
        uint64_t v50 = v87;
        int v48 = (unsigned __int16)v88;
        LODWORD(v29) = BYTE2(v88);
        char v115 = BYTE2(v88);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E8B48);
        LOBYTE(v73) = 6;
        sub_260FB2978();
        sub_260FE4F60();
        int v47 = v29;
        uint64_t v30 = v85;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB0B8);
        char v111 = 7;
        sub_260FB29E4();
        swift_bridgeObjectRetain();
        sub_260FE4F60();
        uint64_t v54 = v30;
        uint64_t v63 = 0;
        (*(void (**)(char *, uint64_t))(v66 + 8))(v8, v117);
        uint64_t v117 = v112;
        *(void *)&long long v73 = v65;
        *((void *)&v73 + 1) = v64;
        uint64_t v31 = v30;
        long long v74 = v60;
        long long v75 = v68;
        *(void *)&long long v76 = v71;
        *((void *)&v76 + 1) = v28;
        uint64_t v32 = v55;
        *(void *)&long long v77 = v69;
        *((void *)&v77 + 1) = v27;
        *(void *)&long long v78 = v72;
        *((void *)&v78 + 1) = v61;
        uint64_t v33 = v57;
        *(void *)&long long v79 = v58;
        *((void *)&v79 + 1) = v55;
        *(void *)&long long v80 = v57;
        BYTE8(v80) = v56;
        *(void *)&long long v81 = v53;
        *((void *)&v81 + 1) = v52;
        *(void *)&long long v82 = v51;
        *((void *)&v82 + 1) = v50;
        *(void *)&long long v83 = v49;
        WORD4(v83) = v48;
        BYTE10(v83) = v47;
        *(void *)&long long v84 = v31;
        *((void *)&v84 + 1) = v112;
        sub_260F32B24((uint64_t *)&v73);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_260E311B4(v32, v33);
        swift_bridgeObjectRelease();
        unint64_t v34 = v68;
        uint64_t v35 = v71;
        uint64_t v36 = v72;
        sub_260F32DE0(v68, *((uint64_t *)&v68 + 1));
        uint64_t v37 = v64;
        uint64_t v38 = v65;
        long long v39 = v60;
        sub_260F32D98(v65, v64);
        __swift_destroy_boxed_opaque_existential_1Tm(v23);
        uint64_t v85 = v38;
        uint64_t v86 = v37;
        long long v87 = v39;
        unsigned long long v88 = __PAIR128__(*((unint64_t *)&v68 + 1), v34);
        uint64_t v89 = v35;
        uint64_t v90 = v70;
        uint64_t v91 = v69;
        uint64_t v92 = v67;
        uint64_t v93 = v36;
        uint64_t v94 = v61;
        uint64_t v95 = v58;
        uint64_t v96 = v55;
        uint64_t v97 = v57;
        char v98 = v56;
        *(_DWORD *)id v99 = v116[0];
        *(_DWORD *)&v99[3] = *(_DWORD *)((char *)v116 + 3);
        uint64_t v100 = v53;
        uint64_t v101 = v52;
        uint64_t v102 = v51;
        uint64_t v103 = v50;
        uint64_t v104 = v49;
        __int16 v105 = v48;
        char v106 = v115;
        int v107 = v113;
        char v108 = v114;
        uint64_t v109 = v54;
        uint64_t v110 = v117;
        uint64_t result = sub_260F32CB4(&v85);
        long long v40 = v82;
        uint64_t v41 = v62;
        v62[8] = v81;
        v41[9] = v40;
        long long v42 = v84;
        v41[10] = v83;
        v41[11] = v42;
        long long v43 = v78;
        v41[4] = v77;
        v41[5] = v43;
        long long v44 = v80;
        v41[6] = v79;
        v41[7] = v44;
        long long v45 = v74;
        *uint64_t v41 = v73;
        v41[1] = v45;
        long long v46 = v76;
        void v41[2] = v75;
        uint64_t v41[3] = v46;
        return result;
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v8, v10);
      sub_260F32DE0(v68, *((uint64_t *)&v68 + 1));
      sub_260F32D98(v65, v64);
      char v11 = 3;
      uint64_t v9 = (uint64_t)v59;
    }
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v9);
  if (v11) {
    sub_260F32D98(v65, v64);
  }
  uint64_t result = (uint64_t *)v68;
  if ((v11 & 2) != 0) {
    return (uint64_t *)sub_260F32DE0(v68, *((uint64_t *)&v68 + 1));
  }
  return result;
}

uint64_t sub_260FAEFD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E695F6C65646F6DLL && a2 == 0xEB00000000736F66;
  if (v2 || (sub_260FE5150() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6775156 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_260FE5150();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

__n128 sub_260FAF0D4@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_260FE4110();
  uint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v4);
  char v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB050);
  uint64_t v33 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_260FB2594();
  uint64_t v11 = v40;
  sub_260FE53B0();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    LOBYTE(v37[0]) = 1;
    uint64_t v12 = v10;
    *(void *)&long long v39 = sub_260FE4F70();
    *((void *)&v39 + 1) = v14;
    LOBYTE(v37[0]) = 0;
    uint64_t v15 = v39;
    uint64_t v16 = v14;
    swift_bridgeObjectRetain();
    sub_260FE4F70();
    uint64_t v28 = v15;
    uint64_t v29 = v12;
    uint64_t v30 = v16;
    uint64_t v40 = v7;
    uint64_t v17 = v6;
    sub_260FE40F0();
    uint64_t v18 = sub_260FE40B0();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v3);
    if (v20 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      type metadata accessor for AppleDiffusionMetadataError();
      sub_260FB25E8();
      swift_allocError();
      void *v21 = 0x6E695F6C65646F6DLL;
      v21[1] = 0xEB00000000736F66;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v40);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260FE29B0();
      swift_allocObject();
      sub_260FE29A0();
      sub_260FB2640();
      sub_260FE2980();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v40);
      swift_release();
      sub_260DE2994(v18, v20);
      v34[8] = *(_OWORD *)&v37[43];
      v34[9] = *(_OWORD *)&v37[45];
      v34[10] = *(_OWORD *)&v37[47];
      v34[11] = *(_OWORD *)&v37[49];
      v34[4] = *(_OWORD *)&v37[35];
      v34[5] = *(_OWORD *)&v37[37];
      v34[6] = *(_OWORD *)&v37[39];
      v34[7] = *(_OWORD *)&v37[41];
      v34[0] = *(_OWORD *)&v37[27];
      v34[1] = *(_OWORD *)&v37[29];
      long long v34[2] = *(_OWORD *)&v37[31];
      v34[3] = *(_OWORD *)&v37[33];
      nullsub_1(v34);
      sub_260DD7C14((uint64_t)v34, (uint64_t)v38, &qword_26A8EA0B8);
      sub_260DD7C14((uint64_t)v34, (uint64_t)v35, &qword_26A8EA0B8);
      *(void *)&long long v36 = v28;
      *((void *)&v36 + 1) = v30;
      sub_260FB2694((uint64_t *)v35);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
      *(_OWORD *)&v37[20] = v38[10];
      *(_OWORD *)&v37[22] = v38[11];
      *(_OWORD *)&v37[24] = v39;
      *(_OWORD *)&v37[12] = v38[6];
      *(_OWORD *)&v37[14] = v38[7];
      *(_OWORD *)&v37[16] = v38[8];
      *(_OWORD *)&v37[18] = v38[9];
      *(_OWORD *)&v37[4] = v38[2];
      *(_OWORD *)&v37[6] = v38[3];
      *(_OWORD *)&v37[8] = v38[4];
      *(_OWORD *)&v37[10] = v38[5];
      *(_OWORD *)uint64_t v37 = v38[0];
      *(_OWORD *)&v37[2] = v38[1];
      sub_260F89180(v37);
      long long v22 = v35[11];
      uint64_t v23 = v31;
      *(_OWORD *)(v31 + 160) = v35[10];
      *(_OWORD *)(v23 + 176) = v22;
      *(_OWORD *)(v23 + 192) = v36;
      long long v24 = v35[7];
      *(_OWORD *)(v23 + 96) = v35[6];
      *(_OWORD *)(v23 + 112) = v24;
      long long v25 = v35[9];
      *(_OWORD *)(v23 + 128) = v35[8];
      *(_OWORD *)(v23 + 144) = v25;
      long long v26 = v35[3];
      *(_OWORD *)(v23 + 32) = v35[2];
      *(_OWORD *)(v23 + 48) = v26;
      long long v27 = v35[5];
      *(_OWORD *)(v23 + 64) = v35[4];
      *(_OWORD *)(v23 + 80) = v27;
      __n128 result = (__n128)v35[1];
      *(_OWORD *)uint64_t v23 = v35[0];
      *(__n128 *)(v23 + 16) = result;
    }
  }
  return result;
}

unint64_t sub_260FAF658()
{
  unint64_t result = qword_26A8EAF78;
  if (!qword_26A8EAF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAF78);
  }
  return result;
}

unint64_t sub_260FAF6B0()
{
  unint64_t result = qword_26A8EAF80;
  if (!qword_26A8EAF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAF80);
  }
  return result;
}

unint64_t sub_260FAF708()
{
  unint64_t result = qword_26A8EAF88;
  if (!qword_26A8EAF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAF88);
  }
  return result;
}

unint64_t sub_260FAF760()
{
  unint64_t result = qword_26A8EAF90;
  if (!qword_26A8EAF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAF90);
  }
  return result;
}

unint64_t sub_260FAF7B8()
{
  unint64_t result = qword_26A8EAF98;
  if (!qword_26A8EAF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAF98);
  }
  return result;
}

unint64_t sub_260FAF810()
{
  unint64_t result = qword_26A8EAFA0;
  if (!qword_26A8EAFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAFA0);
  }
  return result;
}

unint64_t sub_260FAF868()
{
  unint64_t result = qword_26A8EAFA8;
  if (!qword_26A8EAFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAFA8);
  }
  return result;
}

unint64_t sub_260FAF8C0()
{
  unint64_t result = qword_26A8EAFB0;
  if (!qword_26A8EAFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAFB0);
  }
  return result;
}

unint64_t sub_260FAF918()
{
  unint64_t result = qword_26A8EAFB8;
  if (!qword_26A8EAFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAFB8);
  }
  return result;
}

unint64_t sub_260FAF970()
{
  unint64_t result = qword_26A8EAFC0;
  if (!qword_26A8EAFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAFC0);
  }
  return result;
}

unint64_t sub_260FAF9C8()
{
  unint64_t result = qword_26A8EAFC8;
  if (!qword_26A8EAFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAFC8);
  }
  return result;
}

unint64_t sub_260FAFA20()
{
  unint64_t result = qword_26A8EAFD0;
  if (!qword_26A8EAFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAFD0);
  }
  return result;
}

unint64_t sub_260FAFA78()
{
  unint64_t result = qword_26A8EAFD8;
  if (!qword_26A8EAFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAFD8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AppleDiffusionMetadataError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_260FE2F90();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for AppleDiffusionMetadataError(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_260FE2F90();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  else if (!result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for AppleDiffusionMetadataError(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_260FE2F90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for AppleDiffusionMetadataError(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_260FAFE5C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_260FE2F90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_260FAFE5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppleDiffusionMetadataError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for AppleDiffusionMetadataError()
{
  uint64_t result = qword_26A8EAFE0;
  if (!qword_26A8EAFE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeWithTake for AppleDiffusionMetadataError(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_260FE2F90();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for AppleDiffusionMetadataError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_260FAFE5C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_260FE2F90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_260FB0084()
{
  uint64_t result = sub_260FE2F90();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for AppleDiffusionModelMetadata(void *a1)
{
  if (a1[1] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[5])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[14] != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppleDiffusionModelMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    uint64_t v6 = *(void *)(a2 + 40);
    if (v6)
    {
LABEL_3:
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
      *(void *)(a1 + 40) = v6;
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = *(void *)(a2 + 40);
    if (v6) {
      goto LABEL_3;
    }
  }
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v9;
LABEL_6:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  }
  else
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v10;
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 167) = *(_DWORD *)(a2 + 167);
  uint64_t v12 = *(void *)(a2 + 176);
  uint64_t v11 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = v12;
  *(void *)(a1 + 184) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppleDiffusionModelMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v4 == 1)
    {
      long long v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 == 1)
  {
    sub_260F6689C(a1);
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = (_OWORD *)(a1 + 32);
  long long v8 = (long long *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v9)
    {
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v10 = *(_DWORD *)(a2 + 64);
      *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
      *(_DWORD *)(a1 + 64) = v10;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v11 = *(_DWORD *)(a2 + 80);
      *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
      *(_DWORD *)(a1 + 80) = v11;
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260F668F0(a1 + 32);
      long long v14 = *(_OWORD *)(a2 + 80);
      long long v16 = *v8;
      long long v15 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v14;
      *uint64_t v7 = v16;
      *(_OWORD *)(a1 + 48) = v15;
    }
  }
  else if (v9)
  {
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    int v12 = *(_DWORD *)(a2 + 64);
    *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
    *(_DWORD *)(a1 + 64) = v12;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    int v13 = *(_DWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
    *(_DWORD *)(a1 + 80) = v13;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *v8;
    long long v18 = *(_OWORD *)(a2 + 48);
    long long v19 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v19;
    *uint64_t v7 = v17;
    *(_OWORD *)(a1 + 48) = v18;
  }
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v20 = (long long *)(a1 + 104);
  uint64_t v21 = (long long *)(a2 + 104);
  uint64_t v22 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112) == 1)
  {
    if (v22 == 1)
    {
      long long v23 = *v21;
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      *unint64_t v20 = v23;
    }
    else
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
    }
  }
  else if (v22 == 1)
  {
    sub_260F66944(a1 + 104);
    char v24 = *(unsigned char *)(a2 + 120);
    *unint64_t v20 = *v21;
    *(unsigned char *)(a1 + 120) = v24;
  }
  else
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v25 = *(_OWORD *)(a2 + 136);
  long long v26 = *(_OWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 167) = *(_DWORD *)(a2 + 167);
  *(_OWORD *)(a1 + 152) = v26;
  *(_OWORD *)(a1 + 136) = v25;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy192_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for AppleDiffusionModelMetadata(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == 1) {
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    sub_260F6689C(a1);
LABEL_4:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  if (*(void *)(a1 + 40))
  {
    uint64_t v7 = *(void *)(a2 + 40);
    if (v7)
    {
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
      *(void *)(a1 + 40) = v7;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_260F668F0(a1 + 32);
  }
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v9;
LABEL_11:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 112) != 1)
  {
    uint64_t v10 = *(void *)(a2 + 112);
    if (v10 != 1)
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v10;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      goto LABEL_16;
    }
    sub_260F66944(a1 + 104);
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
LABEL_16:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 167) = *(_DWORD *)(a2 + 167);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionModelMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 192)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleDiffusionModelMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 192) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata()
{
  return &type metadata for AppleDiffusionModelMetadata;
}

uint64_t destroy for AppleDiffusionModelMetadata.ReferenceImageInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppleDiffusionModelMetadata.ReferenceImageInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  int v3 = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = v3;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppleDiffusionModelMetadata.ReferenceImageInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v5 = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AppleDiffusionModelMetadata.ReferenceImageInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.ReferenceImageInfo()
{
  return &type metadata for AppleDiffusionModelMetadata.ReferenceImageInfo;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.ReferenceImageInfo.ConditioningModelVersion()
{
  return &type metadata for AppleDiffusionModelMetadata.ReferenceImageInfo.ConditioningModelVersion;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionModelMetadata.PromptInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleDiffusionModelMetadata.PromptInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.PromptInfo()
{
  return &type metadata for AppleDiffusionModelMetadata.PromptInfo;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.PromptInfo.ConditioningModelVersion()
{
  return &type metadata for AppleDiffusionModelMetadata.PromptInfo.ConditioningModelVersion;
}

uint64_t initializeWithCopy for AppleDiffusionModelMetadata.LoraInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppleDiffusionModelMetadata.LoraInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v4;
  return a1;
}

__n128 __swift_memcpy29_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AppleDiffusionModelMetadata.LoraInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionModelMetadata.LoraInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 29)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleDiffusionModelMetadata.LoraInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 29) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 29) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.LoraInfo()
{
  return &type metadata for AppleDiffusionModelMetadata.LoraInfo;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.LoraInfo.LoraType()
{
  return &type metadata for AppleDiffusionModelMetadata.LoraInfo.LoraType;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionModelMetadata.GlobalLCMParameters(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AppleDiffusionModelMetadata.GlobalLCMParameters(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 34) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.GlobalLCMParameters()
{
  return &type metadata for AppleDiffusionModelMetadata.GlobalLCMParameters;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.CaseSpecificLCMParameters()
{
  return &type metadata for AppleDiffusionModelMetadata.CaseSpecificLCMParameters;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.StyleSelection()
{
  return &type metadata for AppleDiffusionModelMetadata.StyleSelection;
}

uint64_t destroy for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations()
{
  return &type metadata for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.ReplacementTokens(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.ReplacementTokens(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260FB1260);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.ReplacementTokens()
{
  return &type metadata for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.ReplacementTokens;
}

unsigned char *_s13DiffusionBase27AppleDiffusionModelMetadataV14StyleSelectionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260FB1364);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.Shade()
{
  return &type metadata for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.Shade;
}

uint64_t destroy for CoreMLUserMetadata(void *a1)
{
  uint64_t v2 = a1[5];
  if (v2 != 1)
  {
    if (a1[1] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (a1[14] != 1) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoreMLUserMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 40);
  if (v4 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v5;
    long long v6 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v6;
    long long v7 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v7;
    long long v8 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v8;
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
    goto LABEL_12;
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11 != 1)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v11;
    uint64_t v13 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_5;
    }
LABEL_7:
    long long v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v14;
    long long v15 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v15;
    goto LABEL_8;
  }
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  if (!v4) {
    goto LABEL_7;
  }
LABEL_5:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = v4;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v16 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  if (v16 == 1)
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  }
  else
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v16;
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 167) = *(_DWORD *)(a2 + 167);
  uint64_t v17 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_12:
  uint64_t v18 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v18;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CoreMLUserMetadata(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 5);
  if (*(void *)(a1 + 40) == 1)
  {
    if (v4 == 1)
    {
      long long v5 = *a2;
      long long v6 = a2[1];
      long long v7 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)a1 = v5;
      *(_OWORD *)(a1 + 16) = v6;
      long long v8 = a2[4];
      long long v9 = a2[5];
      long long v10 = a2[7];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v10;
      *(_OWORD *)(a1 + 64) = v8;
      *(_OWORD *)(a1 + 80) = v9;
      long long v11 = a2[8];
      long long v12 = a2[9];
      long long v13 = a2[11];
      *(_OWORD *)(a1 + 160) = a2[10];
      *(_OWORD *)(a1 + 176) = v13;
      *(_OWORD *)(a1 + 128) = v11;
      *(_OWORD *)(a1 + 144) = v12;
      goto LABEL_37;
    }
    if (*((void *)a2 + 1) == 1)
    {
      long long v23 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v23;
      if (*((void *)a2 + 5))
      {
LABEL_8:
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
        *(void *)(a1 + 56) = *((void *)a2 + 7);
        int v24 = *((_DWORD *)a2 + 16);
        *(unsigned char *)(a1 + 68) = *((unsigned char *)a2 + 68);
        *(_DWORD *)(a1 + 64) = v24;
        *(void *)(a1 + 72) = *((void *)a2 + 9);
        int v25 = *((_DWORD *)a2 + 20);
        *(unsigned char *)(a1 + 84) = *((unsigned char *)a2 + 84);
        *(_DWORD *)(a1 + 80) = v25;
        *(void *)(a1 + 88) = *((void *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_14:
        *(void *)(a1 + 96) = *((void *)a2 + 12);
        uint64_t v31 = *((void *)a2 + 14);
        swift_bridgeObjectRetain();
        if (v31 == 1)
        {
          long long v32 = *(long long *)((char *)a2 + 104);
          *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
          *(_OWORD *)(a1 + 104) = v32;
        }
        else
        {
          *(void *)(a1 + 104) = *((void *)a2 + 13);
          *(void *)(a1 + 112) = *((void *)a2 + 14);
          *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
          swift_bridgeObjectRetain();
        }
        *(void *)(a1 + 128) = *((void *)a2 + 16);
        long long v34 = *(long long *)((char *)a2 + 136);
        long long v35 = *(long long *)((char *)a2 + 152);
        *(_DWORD *)(a1 + 167) = *(_DWORD *)((char *)a2 + 167);
        *(_OWORD *)(a1 + 152) = v35;
        *(_OWORD *)(a1 + 136) = v34;
        *(void *)(a1 + 176) = *((void *)a2 + 22);
        *(void *)(a1 + 184) = *((void *)a2 + 23);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_37;
      }
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((void *)a2 + 5)) {
        goto LABEL_8;
      }
    }
    long long v28 = a2[2];
    long long v29 = a2[3];
    long long v30 = a2[5];
    *(_OWORD *)(a1 + 64) = a2[4];
    *(_OWORD *)(a1 + 80) = v30;
    *(_OWORD *)(a1 + 32) = v28;
    *(_OWORD *)(a1 + 48) = v29;
    goto LABEL_14;
  }
  if (v4 == 1)
  {
    sub_260FB1B94((void *)a1);
    long long v14 = a2[3];
    long long v16 = *a2;
    long long v15 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v14;
    *(_OWORD *)a1 = v16;
    *(_OWORD *)(a1 + 16) = v15;
    long long v17 = a2[7];
    long long v19 = a2[4];
    long long v18 = a2[5];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v17;
    *(_OWORD *)(a1 + 64) = v19;
    *(_OWORD *)(a1 + 80) = v18;
    long long v20 = a2[11];
    long long v22 = a2[8];
    long long v21 = a2[9];
    *(_OWORD *)(a1 + 160) = a2[10];
    *(_OWORD *)(a1 + 176) = v20;
    *(_OWORD *)(a1 + 128) = v22;
    *(_OWORD *)(a1 + 144) = v21;
  }
  else
  {
    uint64_t v26 = *((void *)a2 + 1);
    if (*(void *)(a1 + 8) == 1)
    {
      if (v26 == 1)
      {
        long long v27 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v27;
      }
      else
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v26 == 1)
    {
      sub_260F6689C(a1);
      long long v33 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v33;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    long long v36 = (_OWORD *)(a1 + 32);
    uint64_t v37 = a2 + 2;
    uint64_t v38 = *((void *)a2 + 5);
    if (*(void *)(a1 + 40))
    {
      if (v38)
      {
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
        *(void *)(a1 + 56) = *((void *)a2 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        int v39 = *((_DWORD *)a2 + 16);
        *(unsigned char *)(a1 + 68) = *((unsigned char *)a2 + 68);
        *(_DWORD *)(a1 + 64) = v39;
        *(void *)(a1 + 72) = *((void *)a2 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        int v40 = *((_DWORD *)a2 + 20);
        *(unsigned char *)(a1 + 84) = *((unsigned char *)a2 + 84);
        *(_DWORD *)(a1 + 80) = v40;
        *(void *)(a1 + 88) = *((void *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_260F668F0(a1 + 32);
        long long v43 = a2[5];
        long long v45 = *v37;
        long long v44 = a2[3];
        *(_OWORD *)(a1 + 64) = a2[4];
        *(_OWORD *)(a1 + 80) = v43;
        *long long v36 = v45;
        *(_OWORD *)(a1 + 48) = v44;
      }
    }
    else if (v38)
    {
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      int v41 = *((_DWORD *)a2 + 16);
      *(unsigned char *)(a1 + 68) = *((unsigned char *)a2 + 68);
      *(_DWORD *)(a1 + 64) = v41;
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      int v42 = *((_DWORD *)a2 + 20);
      *(unsigned char *)(a1 + 84) = *((unsigned char *)a2 + 84);
      *(_DWORD *)(a1 + 80) = v42;
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v46 = *v37;
      long long v47 = a2[3];
      long long v48 = a2[5];
      *(_OWORD *)(a1 + 64) = a2[4];
      *(_OWORD *)(a1 + 80) = v48;
      *long long v36 = v46;
      *(_OWORD *)(a1 + 48) = v47;
    }
    *(void *)(a1 + 96) = *((void *)a2 + 12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v49 = (long long *)(a1 + 104);
    uint64_t v50 = (long long *)((char *)a2 + 104);
    uint64_t v51 = *((void *)a2 + 14);
    if (*(void *)(a1 + 112) == 1)
    {
      if (v51 == 1)
      {
        long long v52 = *v50;
        *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
        long long *v49 = v52;
      }
      else
      {
        *(void *)(a1 + 104) = *((void *)a2 + 13);
        *(void *)(a1 + 112) = *((void *)a2 + 14);
        *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
        swift_bridgeObjectRetain();
      }
    }
    else if (v51 == 1)
    {
      sub_260F66944(a1 + 104);
      char v53 = *((unsigned char *)a2 + 120);
      long long *v49 = *v50;
      *(unsigned char *)(a1 + 120) = v53;
    }
    else
    {
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      *(void *)(a1 + 112) = *((void *)a2 + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    }
    *(void *)(a1 + 128) = *((void *)a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v54 = *(long long *)((char *)a2 + 136);
    long long v55 = *(long long *)((char *)a2 + 152);
    *(_DWORD *)(a1 + 167) = *(_DWORD *)((char *)a2 + 167);
    *(_OWORD *)(a1 + 152) = v55;
    *(_OWORD *)(a1 + 136) = v54;
    *(void *)(a1 + 176) = *((void *)a2 + 22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 184) = *((void *)a2 + 23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_37:
  *(void *)(a1 + 192) = *((void *)a2 + 24);
  *(void *)(a1 + 200) = *((void *)a2 + 25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_260FB1B94(void *a1)
{
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for CoreMLUserMetadata(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 40) == 1) {
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(a2 + 40);
  if (v4 != 1)
  {
    if (*(void *)(a1 + 8) != 1)
    {
      uint64_t v11 = *(void *)(a2 + 8);
      if (v11 != 1)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v11;
        swift_bridgeObjectRelease();
        uint64_t v13 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v13;
        swift_bridgeObjectRelease();
LABEL_10:
        if (*(void *)(a1 + 40))
        {
          if (v4)
          {
            *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
            *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
            *(void *)(a1 + 40) = v4;
            swift_bridgeObjectRelease();
            *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
            swift_bridgeObjectRelease();
            *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
            *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            swift_bridgeObjectRelease();
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
            *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            swift_bridgeObjectRelease();
            goto LABEL_15;
          }
          sub_260F668F0(a1 + 32);
        }
        long long v14 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v14;
        long long v15 = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v15;
LABEL_15:
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 112) != 1)
        {
          uint64_t v16 = *(void *)(a2 + 112);
          if (v16 != 1)
          {
            *(void *)(a1 + 104) = *(void *)(a2 + 104);
            *(void *)(a1 + 112) = v16;
            swift_bridgeObjectRelease();
            *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
            goto LABEL_20;
          }
          sub_260F66944(a1 + 104);
        }
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
LABEL_20:
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        swift_bridgeObjectRelease();
        *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
        *(_DWORD *)(a1 + 167) = *(_DWORD *)(a2 + 167);
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        swift_bridgeObjectRelease();
        *(void *)(a1 + 184) = *(void *)(a2 + 184);
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      sub_260F6689C(a1);
    }
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    goto LABEL_10;
  }
  sub_260FB1B94((void *)a1);
LABEL_4:
  long long v5 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v5;
  long long v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
LABEL_21:
  uint64_t v17 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreMLUserMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 208)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 200);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreMLUserMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 208) = 0;
    }
    if (a2) {
      *(void *)(result + 200) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreMLUserMetadata()
{
  return &type metadata for CoreMLUserMetadata;
}

uint64_t destroy for AppleDiffusionModelMetadata.SchedulerInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AppleDiffusionModelMetadata.SchedulerInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AppleDiffusionModelMetadata.SchedulerInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AppleDiffusionModelMetadata.SchedulerInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppleDiffusionModelMetadata.SchedulerInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleDiffusionModelMetadata.SchedulerInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.SchedulerInfo()
{
  return &type metadata for AppleDiffusionModelMetadata.SchedulerInfo;
}

unsigned char *storeEnumTagSinglePayload for AppleDiffusionModelMetadata.CaseSpecificLCMParameters.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x260FB21B0);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.CaseSpecificLCMParameters.CodingKeys()
{
  return &type metadata for AppleDiffusionModelMetadata.CaseSpecificLCMParameters.CodingKeys;
}

unint64_t sub_260FB21EC()
{
  unint64_t result = qword_26A8EAFF0;
  if (!qword_26A8EAFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAFF0);
  }
  return result;
}

unint64_t sub_260FB2244()
{
  unint64_t result = qword_26A8EAFF8;
  if (!qword_26A8EAFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EAFF8);
  }
  return result;
}

unint64_t sub_260FB229C()
{
  unint64_t result = qword_26A8EB000;
  if (!qword_26A8EB000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB000);
  }
  return result;
}

unint64_t sub_260FB22F4()
{
  unint64_t result = qword_26A8EB008;
  if (!qword_26A8EB008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB008);
  }
  return result;
}

unint64_t sub_260FB2348()
{
  unint64_t result = qword_26A8EB018;
  if (!qword_26A8EB018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB018);
  }
  return result;
}

unint64_t sub_260FB239C()
{
  unint64_t result = qword_26A8EB020;
  if (!qword_26A8EB020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB020);
  }
  return result;
}

unint64_t sub_260FB23F0()
{
  unint64_t result = qword_26A8EB028;
  if (!qword_26A8EB028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB028);
  }
  return result;
}

unint64_t sub_260FB2444()
{
  unint64_t result = qword_26A8EB030;
  if (!qword_26A8EB030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB030);
  }
  return result;
}

unint64_t sub_260FB2498()
{
  unint64_t result = qword_26A8EB038;
  if (!qword_26A8EB038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB038);
  }
  return result;
}

unint64_t sub_260FB24EC()
{
  unint64_t result = qword_26A8EB040;
  if (!qword_26A8EB040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB040);
  }
  return result;
}

unint64_t sub_260FB2540()
{
  unint64_t result = qword_26A8EB048;
  if (!qword_26A8EB048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB048);
  }
  return result;
}

unint64_t sub_260FB2594()
{
  unint64_t result = qword_26A8EB058;
  if (!qword_26A8EB058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB058);
  }
  return result;
}

unint64_t sub_260FB25E8()
{
  unint64_t result = qword_26A8EB060;
  if (!qword_26A8EB060)
  {
    type metadata accessor for AppleDiffusionMetadataError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB060);
  }
  return result;
}

unint64_t sub_260FB2640()
{
  unint64_t result = qword_26A8EB068;
  if (!qword_26A8EB068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB068);
  }
  return result;
}

uint64_t *sub_260FB2694(uint64_t *a1)
{
  return a1;
}

unint64_t sub_260FB270C()
{
  unint64_t result = qword_26A8EB078;
  if (!qword_26A8EB078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB078);
  }
  return result;
}

unint64_t sub_260FB2760()
{
  unint64_t result = qword_26A8EB080;
  if (!qword_26A8EB080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB080);
  }
  return result;
}

unint64_t sub_260FB27B4()
{
  unint64_t result = qword_26A8EB088;
  if (!qword_26A8EB088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB088);
  }
  return result;
}

unint64_t sub_260FB2808()
{
  unint64_t result = qword_26A8EB098;
  if (!qword_26A8EB098)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8EB090);
    sub_260FB287C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB098);
  }
  return result;
}

unint64_t sub_260FB287C()
{
  unint64_t result = qword_26A8EB0A0;
  if (!qword_26A8EB0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB0A0);
  }
  return result;
}

unint64_t sub_260FB28D0()
{
  unint64_t result = qword_26A8EB0A8;
  if (!qword_26A8EB0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB0A8);
  }
  return result;
}

unint64_t sub_260FB2924()
{
  unint64_t result = qword_26A8EB0B0;
  if (!qword_26A8EB0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB0B0);
  }
  return result;
}

unint64_t sub_260FB2978()
{
  unint64_t result = qword_26A8E8B60;
  if (!qword_26A8E8B60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8E8B48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8E8B60);
  }
  return result;
}

unint64_t sub_260FB29E4()
{
  unint64_t result = qword_26A8EB0C0;
  if (!qword_26A8EB0C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A8EB0B8);
    sub_260FB2A60();
    sub_260FB2AB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB0C0);
  }
  return result;
}

unint64_t sub_260FB2A60()
{
  unint64_t result = qword_26A8EB0C8;
  if (!qword_26A8EB0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB0C8);
  }
  return result;
}

unint64_t sub_260FB2AB4()
{
  unint64_t result = qword_26A8EB0D0;
  if (!qword_26A8EB0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB0D0);
  }
  return result;
}

uint64_t *sub_260FB2B08(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  uint64_t v3 = a1[9];
  sub_260F32DE0(*a1, a1[1]);
  sub_260F32DE0(v2, v3);
  return a1;
}

unint64_t sub_260FB2B98()
{
  unint64_t result = qword_26A8EB0E0;
  if (!qword_26A8EB0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB0E0);
  }
  return result;
}

unint64_t sub_260FB2BEC()
{
  unint64_t result = qword_26A8EB0F8;
  if (!qword_26A8EB0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB0F8);
  }
  return result;
}

uint64_t sub_260FB2C40(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_260FB2CC0()
{
  unint64_t result = qword_26A8EB110;
  if (!qword_26A8EB110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB110);
  }
  return result;
}

unint64_t sub_260FB2D14()
{
  unint64_t result = qword_26A8EB120;
  if (!qword_26A8EB120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB120);
  }
  return result;
}

unint64_t sub_260FB2D68()
{
  unint64_t result = qword_26A8EB128;
  if (!qword_26A8EB128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB128);
  }
  return result;
}

unint64_t sub_260FB2DBC()
{
  unint64_t result = qword_26A8EB138;
  if (!qword_26A8EB138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB138);
  }
  return result;
}

unint64_t sub_260FB2E10()
{
  unint64_t result = qword_26A8EB140;
  if (!qword_26A8EB140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB140);
  }
  return result;
}

unint64_t sub_260FB2E64()
{
  unint64_t result = qword_26A8EB150;
  if (!qword_26A8EB150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB150);
  }
  return result;
}

unint64_t sub_260FB2EB8()
{
  unint64_t result = qword_26A8EB158;
  if (!qword_26A8EB158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB158);
  }
  return result;
}

unint64_t sub_260FB2F0C()
{
  unint64_t result = qword_26A8EB168;
  if (!qword_26A8EB168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB168);
  }
  return result;
}

unint64_t sub_260FB2F60()
{
  unint64_t result = qword_26A8EB170;
  if (!qword_26A8EB170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB170);
  }
  return result;
}

uint64_t sub_260FB2FB4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s13DiffusionBase27AppleDiffusionModelMetadataV8LoraInfoV8LoraTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260FB30E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.ReferenceImageInfo.CodingKeys()
{
  return &type metadata for AppleDiffusionModelMetadata.ReferenceImageInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.PromptInfo.CodingKeys()
{
  return &type metadata for AppleDiffusionModelMetadata.PromptInfo.CodingKeys;
}

unsigned char *_s13DiffusionBase27AppleDiffusionModelMetadataV18ReferenceImageInfoV24ConditioningModelVersionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260FB31F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.LoraInfo.CodingKeys()
{
  return &type metadata for AppleDiffusionModelMetadata.LoraInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.GlobalLCMParameters.CodingKeys()
{
  return &type metadata for AppleDiffusionModelMetadata.GlobalLCMParameters.CodingKeys;
}

unsigned char *_s13DiffusionBase27AppleDiffusionModelMetadataV19GlobalLCMParametersV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260FB3310);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.CodingKeys()
{
  return &type metadata for AppleDiffusionModelMetadata.Adapter_StyleSpecificAugmentations.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AppleDiffusionModelMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260FB3414);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.CodingKeys()
{
  return &type metadata for AppleDiffusionModelMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for CoreMLUserMetadata.CodingKeys()
{
  return &type metadata for CoreMLUserMetadata.CodingKeys;
}

unsigned char *_s13DiffusionBase27AppleDiffusionModelMetadataV10PromptInfoV24ConditioningModelVersionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260FB3528);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionModelMetadata.SchedulerInfo.CodingKeys()
{
  return &type metadata for AppleDiffusionModelMetadata.SchedulerInfo.CodingKeys;
}

unint64_t sub_260FB3564()
{
  unint64_t result = qword_26A8EB180;
  if (!qword_26A8EB180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB180);
  }
  return result;
}

unint64_t sub_260FB35BC()
{
  unint64_t result = qword_26A8EB188;
  if (!qword_26A8EB188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB188);
  }
  return result;
}

unint64_t sub_260FB3614()
{
  unint64_t result = qword_26A8EB190;
  if (!qword_26A8EB190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB190);
  }
  return result;
}

unint64_t sub_260FB366C()
{
  unint64_t result = qword_26A8EB198;
  if (!qword_26A8EB198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB198);
  }
  return result;
}

unint64_t sub_260FB36C4()
{
  unint64_t result = qword_26A8EB1A0;
  if (!qword_26A8EB1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB1A0);
  }
  return result;
}

unint64_t sub_260FB371C()
{
  unint64_t result = qword_26A8EB1A8;
  if (!qword_26A8EB1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB1A8);
  }
  return result;
}

unint64_t sub_260FB3774()
{
  unint64_t result = qword_26A8EB1B0;
  if (!qword_26A8EB1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB1B0);
  }
  return result;
}

unint64_t sub_260FB37CC()
{
  unint64_t result = qword_26A8EB1B8;
  if (!qword_26A8EB1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB1B8);
  }
  return result;
}

unint64_t sub_260FB3824()
{
  unint64_t result = qword_26A8EB1C0;
  if (!qword_26A8EB1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB1C0);
  }
  return result;
}

unint64_t sub_260FB387C()
{
  unint64_t result = qword_26A8EB1C8;
  if (!qword_26A8EB1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB1C8);
  }
  return result;
}

unint64_t sub_260FB38D4()
{
  unint64_t result = qword_26A8EB1D0;
  if (!qword_26A8EB1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB1D0);
  }
  return result;
}

unint64_t sub_260FB392C()
{
  unint64_t result = qword_26A8EB1D8;
  if (!qword_26A8EB1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB1D8);
  }
  return result;
}

unint64_t sub_260FB3984()
{
  unint64_t result = qword_26A8EB1E0;
  if (!qword_26A8EB1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB1E0);
  }
  return result;
}

unint64_t sub_260FB39DC()
{
  unint64_t result = qword_26A8EB1E8;
  if (!qword_26A8EB1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB1E8);
  }
  return result;
}

unint64_t sub_260FB3A34()
{
  unint64_t result = qword_26A8EB1F0;
  if (!qword_26A8EB1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB1F0);
  }
  return result;
}

unint64_t sub_260FB3A8C()
{
  unint64_t result = qword_26A8EB1F8;
  if (!qword_26A8EB1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB1F8);
  }
  return result;
}

unint64_t sub_260FB3AE4()
{
  unint64_t result = qword_26A8EB200;
  if (!qword_26A8EB200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB200);
  }
  return result;
}

unint64_t sub_260FB3B3C()
{
  unint64_t result = qword_26A8EB208;
  if (!qword_26A8EB208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB208);
  }
  return result;
}

unint64_t sub_260FB3B94()
{
  unint64_t result = qword_26A8EB210;
  if (!qword_26A8EB210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB210);
  }
  return result;
}

unint64_t sub_260FB3BEC()
{
  unint64_t result = qword_26A8EB218;
  if (!qword_26A8EB218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB218);
  }
  return result;
}

unint64_t sub_260FB3C44()
{
  unint64_t result = qword_26A8EB220;
  if (!qword_26A8EB220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB220);
  }
  return result;
}

unint64_t sub_260FB3C9C()
{
  unint64_t result = qword_26A8EB228;
  if (!qword_26A8EB228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB228);
  }
  return result;
}

unint64_t sub_260FB3CF4()
{
  unint64_t result = qword_26A8EB230;
  if (!qword_26A8EB230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB230);
  }
  return result;
}

unint64_t sub_260FB3D4C()
{
  unint64_t result = qword_26A8EB238;
  if (!qword_26A8EB238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB238);
  }
  return result;
}

uint64_t ConcreteAdapter.diffusionAdapter.getter()
{
  return *v0;
}

uint64_t ConcreteAdapter.weights.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ConcreteAdapter() + 20);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ConcreteAdapter()
{
  uint64_t result = qword_26A8EB250;
  if (!qword_26A8EB250) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ConcreteAdapter.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ConcreteAdapter() + 24);
  return sub_260FB3EB0(v3, a1);
}

uint64_t sub_260FB3EB0(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 ConcreteAdapter.init(diffusionAdapter:weights:metadata:)@<Q0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  *a4 = a1;
  uint64_t v7 = type metadata accessor for ConcreteAdapter();
  long long v8 = &a4[*(int *)(v7 + 20)];
  uint64_t v9 = sub_260FE2F90();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  long long v10 = &a4[*(int *)(v7 + 24)];
  long long v11 = *(_OWORD *)(a3 + 144);
  *((_OWORD *)v10 + 8) = *(_OWORD *)(a3 + 128);
  *((_OWORD *)v10 + 9) = v11;
  long long v12 = *(_OWORD *)(a3 + 176);
  *((_OWORD *)v10 + 10) = *(_OWORD *)(a3 + 160);
  *((_OWORD *)v10 + 11) = v12;
  long long v13 = *(_OWORD *)(a3 + 80);
  *((_OWORD *)v10 + 4) = *(_OWORD *)(a3 + 64);
  *((_OWORD *)v10 + 5) = v13;
  long long v14 = *(_OWORD *)(a3 + 112);
  *((_OWORD *)v10 + 6) = *(_OWORD *)(a3 + 96);
  *((_OWORD *)v10 + 7) = v14;
  long long v15 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)long long v10 = *(_OWORD *)a3;
  *((_OWORD *)v10 + 1) = v15;
  __n128 result = *(__n128 *)(a3 + 32);
  long long v17 = *(_OWORD *)(a3 + 48);
  *((__n128 *)v10 + 2) = result;
  *((_OWORD *)v10 + 3) = v17;
  return result;
}

uint64_t *ConcreteAdapter.hash(into:)(uint64_t a1)
{
  AppleDiffusionAdapter.rawValue.getter(*v1);
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for ConcreteAdapter();
  sub_260FE2F90();
  sub_260FB4720(&qword_26A8EB240, MEMORY[0x263F06EA8]);
  sub_260FE3F00();
  uint64_t v4 = &v1[*(int *)(v3 + 24)];
  long long v5 = *((_OWORD *)v4 + 9);
  v12[8] = *((_OWORD *)v4 + 8);
  v12[9] = v5;
  long long v6 = *((_OWORD *)v4 + 11);
  v12[10] = *((_OWORD *)v4 + 10);
  v12[11] = v6;
  long long v7 = *((_OWORD *)v4 + 5);
  v12[4] = *((_OWORD *)v4 + 4);
  v12[5] = v7;
  long long v8 = *((_OWORD *)v4 + 7);
  v12[6] = *((_OWORD *)v4 + 6);
  v12[7] = v8;
  long long v9 = *((_OWORD *)v4 + 1);
  v12[0] = *(_OWORD *)v4;
  v12[1] = v9;
  long long v10 = *((_OWORD *)v4 + 3);
  id v12[2] = *((_OWORD *)v4 + 2);
  void v12[3] = v10;
  sub_260F32B24((uint64_t *)v12);
  AppleDiffusionModelMetadata.hash(into:)(a1);
  return sub_260F32CB4((uint64_t *)v12);
}

uint64_t ConcreteAdapter.hashValue.getter()
{
  sub_260FE52F0();
  AppleDiffusionAdapter.rawValue.getter(*v0);
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for ConcreteAdapter();
  sub_260FE2F90();
  sub_260FB4720(&qword_26A8EB240, MEMORY[0x263F06EA8]);
  sub_260FE3F00();
  uint64_t v2 = &v0[*(int *)(v1 + 24)];
  long long v3 = *((_OWORD *)v2 + 9);
  v11[8] = *((_OWORD *)v2 + 8);
  v11[9] = v3;
  long long v4 = *((_OWORD *)v2 + 11);
  v11[10] = *((_OWORD *)v2 + 10);
  v11[11] = v4;
  long long v5 = *((_OWORD *)v2 + 5);
  v11[4] = *((_OWORD *)v2 + 4);
  v11[5] = v5;
  long long v6 = *((_OWORD *)v2 + 7);
  _DWORD v11[6] = *((_OWORD *)v2 + 6);
  v11[7] = v6;
  long long v7 = *((_OWORD *)v2 + 1);
  v11[0] = *(_OWORD *)v2;
  v11[1] = v7;
  long long v8 = *((_OWORD *)v2 + 3);
  _OWORD v11[2] = *((_OWORD *)v2 + 2);
  v11[3] = v8;
  sub_260F32B24((uint64_t *)v11);
  AppleDiffusionModelMetadata.hash(into:)((uint64_t)v10);
  sub_260F32CB4((uint64_t *)v11);
  return sub_260FE5340();
}

uint64_t sub_260FB4220(uint64_t a1)
{
  sub_260FE52F0();
  AppleDiffusionAdapter.rawValue.getter(*v1);
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  sub_260FE2F90();
  sub_260FB4720(&qword_26A8EB240, MEMORY[0x263F06EA8]);
  sub_260FE3F00();
  long long v3 = &v1[*(int *)(a1 + 24)];
  long long v4 = *((_OWORD *)v3 + 9);
  v12[8] = *((_OWORD *)v3 + 8);
  v12[9] = v4;
  long long v5 = *((_OWORD *)v3 + 11);
  v12[10] = *((_OWORD *)v3 + 10);
  v12[11] = v5;
  long long v6 = *((_OWORD *)v3 + 5);
  v12[4] = *((_OWORD *)v3 + 4);
  v12[5] = v6;
  long long v7 = *((_OWORD *)v3 + 7);
  v12[6] = *((_OWORD *)v3 + 6);
  v12[7] = v7;
  long long v8 = *((_OWORD *)v3 + 1);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v8;
  long long v9 = *((_OWORD *)v3 + 3);
  id v12[2] = *((_OWORD *)v3 + 2);
  void v12[3] = v9;
  sub_260F32B24((uint64_t *)v12);
  AppleDiffusionModelMetadata.hash(into:)((uint64_t)v11);
  sub_260F32CB4((uint64_t *)v12);
  return sub_260FE5340();
}

uint64_t *sub_260FB4348(uint64_t a1, uint64_t a2)
{
  AppleDiffusionAdapter.rawValue.getter(*v2);
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  sub_260FE2F90();
  sub_260FB4720(&qword_26A8EB240, MEMORY[0x263F06EA8]);
  sub_260FE3F00();
  long long v5 = &v2[*(int *)(a2 + 24)];
  long long v6 = *((_OWORD *)v5 + 9);
  v13[8] = *((_OWORD *)v5 + 8);
  v13[9] = v6;
  long long v7 = *((_OWORD *)v5 + 11);
  v13[10] = *((_OWORD *)v5 + 10);
  v13[11] = v7;
  long long v8 = *((_OWORD *)v5 + 5);
  v13[4] = *((_OWORD *)v5 + 4);
  v13[5] = v8;
  long long v9 = *((_OWORD *)v5 + 7);
  v13[6] = *((_OWORD *)v5 + 6);
  v13[7] = v9;
  long long v10 = *((_OWORD *)v5 + 1);
  v13[0] = *(_OWORD *)v5;
  v13[1] = v10;
  long long v11 = *((_OWORD *)v5 + 3);
  id v13[2] = *((_OWORD *)v5 + 2);
  v13[3] = v11;
  sub_260F32B24((uint64_t *)v13);
  AppleDiffusionModelMetadata.hash(into:)(a1);
  return sub_260F32CB4((uint64_t *)v13);
}

uint64_t sub_260FB445C(uint64_t a1, uint64_t a2)
{
  sub_260FE52F0();
  AppleDiffusionAdapter.rawValue.getter(*v2);
  sub_260FE41D0();
  swift_bridgeObjectRelease();
  sub_260FE2F90();
  sub_260FB4720(&qword_26A8EB240, MEMORY[0x263F06EA8]);
  sub_260FE3F00();
  long long v4 = &v2[*(int *)(a2 + 24)];
  long long v5 = *((_OWORD *)v4 + 9);
  v13[8] = *((_OWORD *)v4 + 8);
  v13[9] = v5;
  long long v6 = *((_OWORD *)v4 + 11);
  v13[10] = *((_OWORD *)v4 + 10);
  v13[11] = v6;
  long long v7 = *((_OWORD *)v4 + 5);
  v13[4] = *((_OWORD *)v4 + 4);
  v13[5] = v7;
  long long v8 = *((_OWORD *)v4 + 7);
  v13[6] = *((_OWORD *)v4 + 6);
  v13[7] = v8;
  long long v9 = *((_OWORD *)v4 + 1);
  v13[0] = *(_OWORD *)v4;
  v13[1] = v9;
  long long v10 = *((_OWORD *)v4 + 3);
  id v13[2] = *((_OWORD *)v4 + 2);
  v13[3] = v10;
  sub_260F32B24((uint64_t *)v13);
  AppleDiffusionModelMetadata.hash(into:)((uint64_t)v12);
  sub_260F32CB4((uint64_t *)v13);
  return sub_260FE5340();
}

BOOL _s13DiffusionBase15ConcreteAdapterV23__derived_struct_equalsySbAC_ACtFZ_0(char *a1, char *a2)
{
  char v4 = *a2;
  unint64_t v5 = AppleDiffusionAdapter.rawValue.getter(*a1);
  uint64_t v7 = v6;
  if (v5 == AppleDiffusionAdapter.rawValue.getter(v4) && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_260FE5150();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v11 = 0;
    if ((v10 & 1) == 0) {
      return v11;
    }
  }
  uint64_t v12 = type metadata accessor for ConcreteAdapter();
  if (MEMORY[0x261229760](&a1[*(int *)(v12 + 20)], &a2[*(int *)(v12 + 20)]))
  {
    long long v13 = &a1[*(int *)(v12 + 24)];
    long long v14 = *((_OWORD *)v13 + 3);
    v28[2] = *((_OWORD *)v13 + 2);
    v28[3] = v14;
    long long v15 = *((_OWORD *)v13 + 7);
    v28[6] = *((_OWORD *)v13 + 6);
    v28[7] = v15;
    long long v16 = *((_OWORD *)v13 + 5);
    v28[4] = *((_OWORD *)v13 + 4);
    v28[5] = v16;
    long long v17 = *((_OWORD *)v13 + 11);
    v28[10] = *((_OWORD *)v13 + 10);
    v28[11] = v17;
    long long v18 = *((_OWORD *)v13 + 9);
    v28[8] = *((_OWORD *)v13 + 8);
    v28[9] = v18;
    long long v19 = *((_OWORD *)v13 + 1);
    v28[0] = *(_OWORD *)v13;
    v28[1] = v19;
    long long v20 = &a2[*(int *)(v12 + 24)];
    long long v21 = *((_OWORD *)v20 + 9);
    v29[8] = *((_OWORD *)v20 + 8);
    v29[9] = v21;
    long long v22 = *((_OWORD *)v20 + 11);
    v29[10] = *((_OWORD *)v20 + 10);
    v29[11] = v22;
    long long v23 = *((_OWORD *)v20 + 5);
    v29[4] = *((_OWORD *)v20 + 4);
    v29[5] = v23;
    long long v24 = *((_OWORD *)v20 + 7);
    v29[6] = *((_OWORD *)v20 + 6);
    v29[7] = v24;
    long long v25 = *((_OWORD *)v20 + 1);
    v29[0] = *(_OWORD *)v20;
    v29[1] = v25;
    long long v26 = *((_OWORD *)v20 + 3);
    v29[2] = *((_OWORD *)v20 + 2);
    v29[3] = v26;
    return _s13DiffusionBase05AppleA13ModelMetadataV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v28, (uint64_t)v29);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_260FB46D8()
{
  return sub_260FB4720(&qword_26A8EB248, (void (*)(uint64_t))type metadata accessor for ConcreteAdapter);
}

uint64_t sub_260FB4720(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ConcreteAdapter(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *char v4 = *a2;
    char v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = sub_260FE2F90();
  (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)v4 + v11;
  long long v13 = (char *)a2 + v11;
  uint64_t v14 = *(uint64_t *)((char *)a2 + v11 + 8);
  if (v14 != 1)
  {
    *(void *)uint64_t v12 = *(void *)v13;
    *((void *)v12 + 1) = v14;
    uint64_t v18 = *((void *)v13 + 3);
    *((void *)v12 + 2) = *((void *)v13 + 2);
    *((void *)v12 + 3) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = *((void *)v13 + 5);
    if (v16) {
      goto LABEL_4;
    }
LABEL_7:
    long long v19 = *((_OWORD *)v13 + 3);
    *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
    *((_OWORD *)v12 + 3) = v19;
    long long v20 = *((_OWORD *)v13 + 5);
    *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
    *((_OWORD *)v12 + 5) = v20;
    goto LABEL_8;
  }
  long long v15 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v15;
  uint64_t v16 = *((void *)v13 + 5);
  if (!v16) {
    goto LABEL_7;
  }
LABEL_4:
  v12[32] = v13[32];
  *((_DWORD *)v12 + 9) = *((_DWORD *)v13 + 9);
  *((void *)v12 + 5) = v16;
  *((_DWORD *)v12 + 12) = *((_DWORD *)v13 + 12);
  *((void *)v12 + 7) = *((void *)v13 + 7);
  *((_DWORD *)v12 + 16) = *((_DWORD *)v13 + 16);
  v12[68] = v13[68];
  *((void *)v12 + 9) = *((void *)v13 + 9);
  v12[84] = v13[84];
  *((_DWORD *)v12 + 20) = *((_DWORD *)v13 + 20);
  *((void *)v12 + 11) = *((void *)v13 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *((void *)v12 + 12) = *((void *)v13 + 12);
  uint64_t v21 = *((void *)v13 + 14);
  swift_bridgeObjectRetain();
  if (v21 == 1)
  {
    *(_OWORD *)(v12 + 104) = *(_OWORD *)(v13 + 104);
    v12[120] = v13[120];
  }
  else
  {
    *((void *)v12 + 13) = *((void *)v13 + 13);
    *((void *)v12 + 14) = v21;
    v12[120] = v13[120];
    swift_bridgeObjectRetain();
  }
  *((void *)v12 + 16) = *((void *)v13 + 16);
  *(_OWORD *)(v12 + 136) = *(_OWORD *)(v13 + 136);
  *(_OWORD *)(v12 + 152) = *(_OWORD *)(v13 + 152);
  *(_DWORD *)(v12 + 167) = *(_DWORD *)(v13 + 167);
  uint64_t v22 = *((void *)v13 + 23);
  *((void *)v12 + 22) = *((void *)v13 + 22);
  *((void *)v12 + 23) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t destroy for ConcreteAdapter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_260FE2F90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (void *)(a1 + *(int *)(a2 + 24));
  if (v6[1] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v6[5])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (v6[14] != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unsigned char *initializeWithCopy for ConcreteAdapter(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_260FE2F90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *(void *)&a2[v10 + 8];
  if (v13 == 1)
  {
    long long v14 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v14;
    uint64_t v15 = *((void *)v12 + 5);
    if (v15)
    {
LABEL_3:
      v11[32] = v12[32];
      *((_DWORD *)v11 + 9) = *((_DWORD *)v12 + 9);
      *((void *)v11 + 5) = v15;
      *((_DWORD *)v11 + 12) = *((_DWORD *)v12 + 12);
      *((void *)v11 + 7) = *((void *)v12 + 7);
      *((_DWORD *)v11 + 16) = *((_DWORD *)v12 + 16);
      v11[68] = v12[68];
      *((void *)v11 + 9) = *((void *)v12 + 9);
      v11[84] = v12[84];
      *((_DWORD *)v11 + 20) = *((_DWORD *)v12 + 20);
      *((void *)v11 + 11) = *((void *)v12 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    uint64_t v16 = *((void *)v12 + 3);
    *((void *)v11 + 2) = *((void *)v12 + 2);
    *((void *)v11 + 3) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = *((void *)v12 + 5);
    if (v15) {
      goto LABEL_3;
    }
  }
  long long v17 = *((_OWORD *)v12 + 3);
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  *((_OWORD *)v11 + 3) = v17;
  long long v18 = *((_OWORD *)v12 + 5);
  *((_OWORD *)v11 + 4) = *((_OWORD *)v12 + 4);
  *((_OWORD *)v11 + 5) = v18;
LABEL_6:
  *((void *)v11 + 12) = *((void *)v12 + 12);
  uint64_t v19 = *((void *)v12 + 14);
  swift_bridgeObjectRetain();
  if (v19 == 1)
  {
    *(_OWORD *)(v11 + 104) = *(_OWORD *)(v12 + 104);
    v11[120] = v12[120];
  }
  else
  {
    *((void *)v11 + 13) = *((void *)v12 + 13);
    *((void *)v11 + 14) = v19;
    v11[120] = v12[120];
    swift_bridgeObjectRetain();
  }
  *((void *)v11 + 16) = *((void *)v12 + 16);
  *(_OWORD *)(v11 + 136) = *(_OWORD *)(v12 + 136);
  *(_OWORD *)(v11 + 152) = *(_OWORD *)(v12 + 152);
  *(_DWORD *)(v11 + 167) = *(_DWORD *)(v12 + 167);
  uint64_t v20 = *((void *)v12 + 23);
  *((void *)v11 + 22) = *((void *)v12 + 22);
  *((void *)v11 + 23) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *assignWithCopy for ConcreteAdapter(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_260FE2F90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (uint64_t)&a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *(void *)&a1[v10 + 8];
  uint64_t v14 = *((void *)v12 + 1);
  if (v13 == 1)
  {
    if (v14 == 1)
    {
      long long v15 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *(_OWORD *)(v11 + 16) = v15;
    }
    else
    {
      *(void *)uint64_t v11 = *(void *)v12;
      *(void *)(v11 + 8) = *((void *)v12 + 1);
      *(void *)(v11 + 16) = *((void *)v12 + 2);
      *(void *)(v11 + 24) = *((void *)v12 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v14 == 1)
  {
    sub_260F6689C(v11);
    long long v16 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *(_OWORD *)(v11 + 16) = v16;
  }
  else
  {
    *(void *)uint64_t v11 = *(void *)v12;
    *(void *)(v11 + 8) = *((void *)v12 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v11 + 16) = *((void *)v12 + 2);
    *(void *)(v11 + 24) = *((void *)v12 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  long long v17 = (_OWORD *)(v11 + 32);
  long long v18 = (long long *)(v12 + 32);
  uint64_t v19 = *((void *)v12 + 5);
  if (*(void *)(v11 + 40))
  {
    if (v19)
    {
      *(unsigned char *)(v11 + 32) = v12[32];
      *(_DWORD *)(v11 + 36) = *((_DWORD *)v12 + 9);
      *(void *)(v11 + 40) = *((void *)v12 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v11 + 48) = *((_DWORD *)v12 + 12);
      *(void *)(v11 + 56) = *((void *)v12 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v20 = *((_DWORD *)v12 + 16);
      *(unsigned char *)(v11 + 68) = v12[68];
      *(_DWORD *)(v11 + 64) = v20;
      *(void *)(v11 + 72) = *((void *)v12 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v21 = *((_DWORD *)v12 + 20);
      *(unsigned char *)(v11 + 84) = v12[84];
      *(_DWORD *)(v11 + 80) = v21;
      *(void *)(v11 + 88) = *((void *)v12 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_260F668F0(v11 + 32);
      long long v24 = *((_OWORD *)v12 + 5);
      long long v26 = *v18;
      long long v25 = *((_OWORD *)v12 + 3);
      *(_OWORD *)(v11 + 64) = *((_OWORD *)v12 + 4);
      *(_OWORD *)(v11 + 80) = v24;
      *long long v17 = v26;
      *(_OWORD *)(v11 + 48) = v25;
    }
  }
  else if (v19)
  {
    *(unsigned char *)(v11 + 32) = v12[32];
    *(_DWORD *)(v11 + 36) = *((_DWORD *)v12 + 9);
    *(void *)(v11 + 40) = *((void *)v12 + 5);
    *(_DWORD *)(v11 + 48) = *((_DWORD *)v12 + 12);
    *(void *)(v11 + 56) = *((void *)v12 + 7);
    int v22 = *((_DWORD *)v12 + 16);
    *(unsigned char *)(v11 + 68) = v12[68];
    *(_DWORD *)(v11 + 64) = v22;
    *(void *)(v11 + 72) = *((void *)v12 + 9);
    int v23 = *((_DWORD *)v12 + 20);
    *(unsigned char *)(v11 + 84) = v12[84];
    *(_DWORD *)(v11 + 80) = v23;
    *(void *)(v11 + 88) = *((void *)v12 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *v18;
    long long v28 = *((_OWORD *)v12 + 3);
    long long v29 = *((_OWORD *)v12 + 5);
    *(_OWORD *)(v11 + 64) = *((_OWORD *)v12 + 4);
    *(_OWORD *)(v11 + 80) = v29;
    *long long v17 = v27;
    *(_OWORD *)(v11 + 48) = v28;
  }
  *(void *)(v11 + 96) = *((void *)v12 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v30 = (long long *)(v11 + 104);
  uint64_t v31 = (long long *)(v12 + 104);
  uint64_t v32 = *((void *)v12 + 14);
  if (*(void *)(v11 + 112) == 1)
  {
    if (v32 == 1)
    {
      long long v33 = *v31;
      *(unsigned char *)(v11 + 120) = v12[120];
      long long *v30 = v33;
    }
    else
    {
      *(void *)(v11 + 104) = *((void *)v12 + 13);
      *(void *)(v11 + 112) = *((void *)v12 + 14);
      *(unsigned char *)(v11 + 120) = v12[120];
      swift_bridgeObjectRetain();
    }
  }
  else if (v32 == 1)
  {
    sub_260F66944(v11 + 104);
    char v34 = v12[120];
    long long *v30 = *v31;
    *(unsigned char *)(v11 + 120) = v34;
  }
  else
  {
    *(void *)(v11 + 104) = *((void *)v12 + 13);
    *(void *)(v11 + 112) = *((void *)v12 + 14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v11 + 120) = v12[120];
  }
  *(void *)(v11 + 128) = *((void *)v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v35 = *(_OWORD *)(v12 + 136);
  long long v36 = *(_OWORD *)(v12 + 152);
  *(_DWORD *)(v11 + 167) = *(_DWORD *)(v12 + 167);
  *(_OWORD *)(v11 + 152) = v36;
  *(_OWORD *)(v11 + 136) = v35;
  *(void *)(v11 + 176) = *((void *)v12 + 22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 184) = *((void *)v12 + 23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *initializeWithTake for ConcreteAdapter(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_260FE2F90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = v12[9];
  v11[8] = v12[8];
  v11[9] = v13;
  long long v14 = v12[11];
  v11[10] = v12[10];
  v11[11] = v14;
  long long v15 = v12[5];
  v11[4] = v12[4];
  v11[5] = v15;
  long long v16 = v12[7];
  _DWORD v11[6] = v12[6];
  v11[7] = v16;
  long long v17 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v17;
  long long v18 = v12[3];
  _OWORD v11[2] = v12[2];
  v11[3] = v18;
  return a1;
}

unsigned char *assignWithTake for ConcreteAdapter(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_260FE2F90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (uint64_t)&a1[v10];
  uint64_t v12 = &a2[v10];
  if (*(void *)&a1[v10 + 8] == 1) {
    goto LABEL_4;
  }
  uint64_t v13 = *((void *)v12 + 1);
  if (v13 == 1)
  {
    sub_260F6689C(v11);
LABEL_4:
    long long v14 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *(_OWORD *)(v11 + 16) = v14;
    goto LABEL_6;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)v12 + 3);
  *(void *)(v11 + 16) = *((void *)v12 + 2);
  *(void *)(v11 + 24) = v15;
  swift_bridgeObjectRelease();
LABEL_6:
  if (*(void *)(v11 + 40))
  {
    uint64_t v16 = *((void *)v12 + 5);
    if (v16)
    {
      *(unsigned char *)(v11 + 32) = v12[32];
      *(_DWORD *)(v11 + 36) = *((_DWORD *)v12 + 9);
      *(void *)(v11 + 40) = v16;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v11 + 48) = *((_DWORD *)v12 + 12);
      *(void *)(v11 + 56) = *((void *)v12 + 7);
      swift_bridgeObjectRelease();
      *(_DWORD *)(v11 + 64) = *((_DWORD *)v12 + 16);
      *(unsigned char *)(v11 + 68) = v12[68];
      *(void *)(v11 + 72) = *((void *)v12 + 9);
      swift_bridgeObjectRelease();
      *(_DWORD *)(v11 + 80) = *((_DWORD *)v12 + 20);
      *(unsigned char *)(v11 + 84) = v12[84];
      *(void *)(v11 + 88) = *((void *)v12 + 11);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_260F668F0(v11 + 32);
  }
  long long v17 = *((_OWORD *)v12 + 3);
  *(_OWORD *)(v11 + 32) = *((_OWORD *)v12 + 2);
  *(_OWORD *)(v11 + 48) = v17;
  long long v18 = *((_OWORD *)v12 + 5);
  *(_OWORD *)(v11 + 64) = *((_OWORD *)v12 + 4);
  *(_OWORD *)(v11 + 80) = v18;
LABEL_11:
  *(void *)(v11 + 96) = *((void *)v12 + 12);
  swift_bridgeObjectRelease();
  if (*(void *)(v11 + 112) != 1)
  {
    uint64_t v19 = *((void *)v12 + 14);
    if (v19 != 1)
    {
      *(void *)(v11 + 104) = *((void *)v12 + 13);
      *(void *)(v11 + 112) = v19;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v11 + 120) = v12[120];
      goto LABEL_16;
    }
    sub_260F66944(v11 + 104);
  }
  *(_OWORD *)(v11 + 104) = *(_OWORD *)(v12 + 104);
  *(unsigned char *)(v11 + 120) = v12[120];
LABEL_16:
  *(void *)(v11 + 128) = *((void *)v12 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v11 + 136) = *(_OWORD *)(v12 + 136);
  *(_OWORD *)(v11 + 152) = *(_OWORD *)(v12 + 152);
  *(_DWORD *)(v11 + 167) = *(_DWORD *)(v12 + 167);
  *(void *)(v11 + 176) = *((void *)v12 + 22);
  swift_bridgeObjectRelease();
  *(void *)(v11 + 184) = *((void *)v12 + 23);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConcreteAdapter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_260FB5334);
}

uint64_t sub_260FB5334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_260FE2F90();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 40);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ConcreteAdapter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_260FB541C);
}

uint64_t sub_260FB541C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_260FE2F90();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 40) = a2;
  }
  return result;
}

uint64_t sub_260FB54E0()
{
  uint64_t result = sub_260FE2F90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_260FB5580(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!v6) {
    return v6;
  }
  if (v6 > a2)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!a1) {
    return v6;
  }
  uint64_t v7 = (char *)(a4 + a5);
  if (a4 + a5 >= (unint64_t)&a1[v6] || &v7[v6] <= a1)
  {
    memcpy(a1, v7, (a6 >> 1) - a5);
    return v6;
  }
LABEL_11:
  uint64_t result = sub_260FE4E90();
  __break(1u);
  return result;
}

uint64_t sub_260FB5640()
{
  uint64_t v1 = sub_260FE3050();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_260FE2FB0();
  if (!v0)
  {
    unint64_t v8 = v7;
    *(void *)&long long v59 = 0;
    uint64_t v9 = result;
    switch(v7 >> 62)
    {
      case 1uLL:
      case 2uLL:
        sub_260DCBD18(result, v7);
        break;
      default:
        break;
    }
    uint64_t v57 = v9;
    unint64_t v58 = v8;
    sub_260FE3060();
    uint64_t v64 = 0;
    uint64_t v60 = MEMORY[0x263F8EE80];
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
    while (1)
    {
      __int16 v11 = sub_260FE3040();
      if ((v11 & 0x100) != 0) {
        break;
      }
      int v12 = v11;
      while (v12 != 10)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_260FCDAB0(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v14 = *((void *)v10 + 2);
        unint64_t v13 = *((void *)v10 + 3);
        if (v14 >= v13 >> 1) {
          uint64_t v10 = sub_260FCDAB0((char *)(v13 > 1), v14 + 1, 1, v10);
        }
        *((void *)v10 + 2) = v14 + 1;
        v10[v14 + 32] = v12;
        __int16 v15 = sub_260FE3040();
        int v12 = v15;
        if ((v15 & 0x100) != 0) {
          goto LABEL_59;
        }
      }
      unint64_t v16 = *((void *)v10 + 2);
      if (v16)
      {
        long long v17 = v10 + 32;
        if (v10[32] != 35)
        {
          uint64_t v55 = v1;
          uint64_t v56 = v2;
          swift_bridgeObjectRetain_n();
          unint64_t v18 = 0;
          unint64_t v19 = 0;
          int v20 = (void *)MEMORY[0x263F8EE78];
          while (1)
          {
            unint64_t v21 = *((void *)v10 + 2);
            if (v18 >= v21) {
              break;
            }
            if (v17[v18] == 32)
            {
              if (v19 != v18)
              {
                if ((uint64_t)v18 < (uint64_t)v19) {
                  goto LABEL_73;
                }
                if ((v19 & 0x8000000000000000) != 0) {
                  goto LABEL_64;
                }
                if (v21 < v19) {
                  goto LABEL_65;
                }
                swift_bridgeObjectRetain();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  int v20 = sub_260FCD9A0(0, v20[2] + 1, 1, v20);
                }
                unint64_t v23 = v20[2];
                unint64_t v22 = v20[3];
                if (v23 >= v22 >> 1) {
                  int v20 = sub_260FCD9A0((void *)(v22 > 1), v23 + 1, 1, v20);
                }
                v20[2] = v23 + 1;
                long long v24 = &v20[4 * v23];
                void v24[4] = v10;
                v24[5] = v17;
                v24[6] = v19;
                v24[7] = (2 * v18) | 1;
              }
              unint64_t v19 = ++v18;
            }
            else
            {
              ++v18;
            }
            if (v18 == v16)
            {
              uint64_t v25 = v56;
              if (v19 == v16)
              {
                uint64_t isUniquelyReferenced_nonNull_native = swift_bridgeObjectRelease();
                unint64_t v28 = v20[2];
                goto LABEL_42;
              }
              if ((uint64_t)v16 >= (uint64_t)v19)
              {
                if ((v19 & 0x8000000000000000) != 0) {
                  goto LABEL_70;
                }
                unint64_t v29 = *((void *)v10 + 2);
                if (v29 < v19 || v29 < v16)
                {
LABEL_71:
                  __break(1u);
                }
                else
                {
                  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_260FCD9A0(0, v20[2] + 1, 1, v20);
                    int v20 = (void *)isUniquelyReferenced_nonNull_native;
                  }
                  unint64_t v31 = v20[2];
                  unint64_t v30 = v20[3];
                  unint64_t v28 = v31 + 1;
                  if (v31 >= v30 >> 1)
                  {
                    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_260FCD9A0((void *)(v30 > 1), v31 + 1, 1, v20);
                    int v20 = (void *)isUniquelyReferenced_nonNull_native;
                  }
                  v20[2] = v28;
                  uint64_t v32 = &v20[4 * v31];
                  v32[4] = v10;
                  v32[5] = v17;
                  v32[6] = v19;
                  v32[7] = (2 * v16) | 1;
                  uint64_t v25 = v56;
LABEL_42:
                  uint64_t v1 = v55;
                  if (v28 == 2)
                  {
                    uint64_t v33 = v20[6];
                    unint64_t v34 = v20[7];
                    long long v61 = *((_OWORD *)v20 + 2);
                    uint64_t v62 = v33;
                    unint64_t v63 = v34;
                    if (!__OFSUB__(v34 >> 1, v33))
                    {
                      MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native, v27);
                      swift_unknownObjectRetain();
                      uint64_t v35 = v59;
                      uint64_t v36 = sub_260FE41C0();
                      uint64_t v38 = v37;
                      swift_unknownObjectRelease();
                      if (v20[2] >= 2uLL)
                      {
                        uint64_t v39 = v20[10];
                        unint64_t v40 = v20[11];
                        long long v59 = *((_OWORD *)v20 + 4);
                        swift_unknownObjectRetain();
                        swift_bridgeObjectRelease();
                        long long v61 = v59;
                        uint64_t v62 = v39;
                        unint64_t v63 = v40;
                        if (!__OFSUB__(v40 >> 1, v39))
                        {
                          MEMORY[0x270FA5388]((v40 >> 1) - v39, v41);
                          uint64_t v42 = sub_260FE41C0();
                          uint64_t v44 = v43;
                          *(void *)&long long v59 = v35;
                          swift_bridgeObjectRelease();
                          swift_unknownObjectRelease();
                          uint64_t v45 = v60;
                          char v46 = swift_isUniquelyReferenced_nonNull_native();
                          *(void *)&long long v61 = v45;
                          sub_260FC6608(v64, v36, v38, v42, v44, v46);
                          uint64_t v60 = v61;
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          uint64_t v2 = v56;
                          goto LABEL_47;
                        }
LABEL_69:
                        __break(1u);
LABEL_70:
                        __break(1u);
                        goto LABEL_71;
                      }
LABEL_68:
                      __break(1u);
                      goto LABEL_69;
                    }
LABEL_67:
                    __break(1u);
                    goto LABEL_68;
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v53 = v64 + 1;
                  if (!__OFADD__(v64, 1))
                  {
                    sub_260FB5DC4();
                    swift_allocError();
                    *long long v54 = v53;
                    swift_willThrow();
                    swift_bridgeObjectRelease();
                    sub_260DCC110(v57, v58);
                    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v1);
                    swift_bridgeObjectRelease();
                    return swift_bridgeObjectRelease();
                  }
                }
                __break(1u);
              }
LABEL_73:
              sub_260FE4E10();
              __break(1u);
LABEL_74:
              sub_260FE4E90();
              __break(1u);
              JUMPOUT(0x260FB5DB4);
            }
          }
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
          goto LABEL_67;
        }
      }
LABEL_47:
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        int64_t v47 = *((void *)v10 + 2);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_260FCDAB0(0, v47, 1, v10);
        }
        if (v47)
        {
          uint64_t v48 = *((void *)v10 + 2);
          uint64_t v49 = v48 - v47;
          if (v48 - v47 < 0) {
            goto LABEL_74;
          }
          memmove(v10 + 32, &v10[v47 + 32], v48 - v47);
          *((void *)v10 + 2) = v49;
        }
      }
      else
      {
        uint64_t v50 = (void *)MEMORY[0x263F8EE78];
        if (*((void *)v10 + 3) >= 2uLL)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7010);
          uint64_t v50 = (void *)swift_allocObject();
          size_t v51 = _swift_stdlib_malloc_size(v50);
          v50[2] = 0;
          v50[3] = 2 * v51 - 64;
        }
        swift_bridgeObjectRelease();
        uint64_t v10 = (char *)v50;
      }
      if (__OFADD__(v64++, 1)) {
        goto LABEL_66;
      }
    }
LABEL_59:
    sub_260DCC110(v57, v58);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    swift_bridgeObjectRelease();
    return v60;
  }
  return result;
}

unint64_t sub_260FB5DC4()
{
  unint64_t result = qword_26A8EB260;
  if (!qword_26A8EB260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB260);
  }
  return result;
}

uint64_t sub_260FB5E18(char *a1, uint64_t a2)
{
  return sub_260FB5E30(a1, a2);
}

uint64_t sub_260FB5E30(char *a1, uint64_t a2)
{
  return sub_260FB5580(a1, a2, **(void **)(v2 + 16), *(void *)(*(void *)(v2 + 16) + 8), *(void *)(*(void *)(v2 + 16) + 16), *(void *)(*(void *)(v2 + 16) + 24));
}

uint64_t _s13FileReadErrorOwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s13FileReadErrorOwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *_s13FileReadErrorOMa()
{
  return &_s13FileReadErrorON;
}

uint64_t sub_260FB5EAC()
{
  uint64_t v0 = sub_260FE3A10();
  __swift_allocate_value_buffer(v0, qword_26A90FC00);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A90FC00);
  return sub_260FE3A00();
}

uint64_t sub_260FB5F28()
{
  return sub_260FE5340();
}

uint64_t sub_260FB6004()
{
  return sub_260FE5340();
}

uint64_t sub_260FB608C()
{
  return sub_260FE5340();
}

uint64_t sub_260FB6114()
{
  return sub_260FE5340();
}

uint64_t sub_260FB6234()
{
  return sub_260FE5340();
}

uint64_t sub_260FB62E0()
{
  return sub_260FE5340();
}

uint64_t sub_260FB63FC()
{
  return sub_260FE5340();
}

uint64_t sub_260FB6480()
{
  return sub_260FE5340();
}

uint64_t sub_260FB6558()
{
  return sub_260FE5340();
}

uint64_t sub_260FB65DC()
{
  return sub_260FE5340();
}

uint64_t sub_260FB6684(unsigned int a1, unint64_t a2)
{
  return sub_260FB6978(a1, a2);
}

uint64_t sub_260FB6690(void *a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_260FE4E10();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_260EB85B4();
      uint64_t v4 = sub_260FE4460();
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
      *(void *)(v5 + 16) = a2;
      uint64_t v11 = v4;
      *(void *)(v5 + 32) = a1;
      if (a2 != 1)
      {
        *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x28) = a1;
        uint64_t v6 = a2 - 2;
        if (v6)
        {
          unint64_t v7 = (void *)(v5 + 48);
          do
          {
            *v7++ = a1;
            id v8 = a1;
            --v6;
          }
          while (v6);
        }
        id v9 = a1;
      }
    }
    else
    {
      uint64_t v11 = MEMORY[0x263F8EE78];
    }
    sub_260FE4420();
    return v11;
  }
  return result;
}

uint64_t sub_260FB6784(unint64_t a1, int32x2_t a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_260FE4E10();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_260FE4460();
  *(void *)(result + 16) = a1;
  uint64_t v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    unint64_t v5 = 0;
    __int32 v6 = a2.i32[0];
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  __int32 v6 = a2.i32[0];
  int32x4_t v7 = vdupq_lane_s32(a2, 0);
  id v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    int32x4_t *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_260FB6878(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_260FE4E10();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB290);
      uint64_t v4 = (void *)sub_260FE4460();
      unint64_t v5 = v4;
      v4[2] = a2;
      v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        uint64_t v6 = a2 - 2;
        if (v6)
        {
          int32x4_t v7 = v4 + 6;
          do
          {
            *v7++ = a1;
            swift_bridgeObjectRetain();
            --v6;
          }
          while (v6);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_260FB696C(unsigned int a1, unint64_t a2)
{
  return sub_260FB6978(a1, a2);
}

uint64_t sub_260FB6978(unsigned int a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_260FE4E10();
    __break(1u);
    return result;
  }
  if (!a2) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t result = sub_260FE4460();
  *(void *)(result + 16) = a2;
  unint64_t v5 = (unsigned int *)(result + 32);
  if (a2 < 8)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v5 += a2 & 0xFFFFFFFFFFFFFFF8;
  int32x4_t v7 = vdupq_n_s32(a1);
  id v8 = (int32x4_t *)(result + 48);
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    int32x4_t *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

void CGImageRef.planarRGBShapedArray(minValue:maxValue:)(int32x2_t a1, int32x2_t a2)
{
  uint64_t v72 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_260FE2950();
  MEMORY[0x270FA5388](v4 - 8, v5);
  unint64_t v6 = v2;
  sub_260FE4970();
  sub_260FB6FF8((uint64_t)&v68, (uint64_t)&v71);
  if (v71.colorSpace == (CGColorSpaceRef)1) {
    goto LABEL_16;
  }
  vImage_CGImageFormat v67 = v71;
  if (!CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x263F002D8]))
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_260FE4980();
  sub_260FB6FF8((uint64_t)v69, (uint64_t)&v70);
  if (v70.colorSpace == (CGColorSpaceRef)1
    || (v66 = v70, size_t Width = CGImageGetWidth(v6), (Width & 0x8000000000000000) != 0)
    || (v8 = Width, size_t Height = CGImageGetHeight(v6), (Height & 0x8000000000000000) != 0))
  {
LABEL_16:
    sub_260FB7060();
    swift_allocError();
    char v43 = 1;
LABEL_17:
    char *v42 = v43;
    swift_willThrow();
    return;
  }
  int64_t v10 = Height;
  uint64_t v11 = v6;
  sub_260FE2930();
  int v12 = (void *)sub_260FE48B0();
  if (v3) {
    return;
  }
  v65.data = v12;
  v65.height = v13;
  v65.width = v14;
  v65.rowBytes = v15;
  v64.data = (void *)sub_260FE48C0();
  v64.height = v16;
  v64.width = v17;
  v64.rowBytes = v18;
  unint64_t v19 = vImageConverter_CreateWithCGImageFormat(&v67, &v66, 0, 0x100u, 0);
  if (!v19)
  {
    sub_260FB7060();
    swift_allocError();
    char v43 = 2;
    goto LABEL_17;
  }
  int v20 = v19;
  vImageConvert_AnyToAny(v19, &v65, &v64, 0, 0x100u);
  v63.data = (void *)sub_260FE48C0();
  v63.height = v21;
  v63.width = v22;
  v63.rowBytes = v23;
  v62.data = (void *)sub_260FE48C0();
  v62.height = v24;
  v62.width = v25;
  v62.rowBytes = v26;
  v61.data = (void *)sub_260FE48C0();
  v61.height = v27;
  v61.width = v28;
  v61.rowBytes = v29;
  v60.data = (void *)sub_260FE48C0();
  v60.height = v30;
  v60.width = v31;
  v60.rowBytes = v32;
  uint64_t v55 = sub_260FE4460();
  *(void *)(v55 + 16) = 4;
  *(int32x4_t *)(v55 + 32) = vdupq_lane_s32(a1, 0);
  uint64_t v33 = sub_260FE4460();
  *(void *)(v33 + 16) = 4;
  *(int32x4_t *)(v33 + 32) = vdupq_lane_s32(a2, 0);
  vImageConvert_ARGB8888toPlanarF(&v64, &v63, &v62, &v61, &v60, (const float *)(v33 + 32), (const float *)(v55 + 32), 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  data = (float *)v63.data;
  if (!v63.data)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v35 = v62.data;
  if (!v62.data)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v36 = v61.data;
  if (!v61.data)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v37 = v60.data;
  if (!v60.data)
  {
LABEL_30:
    __break(1u);
    return;
  }
  int64_t v38 = v8 * v10;
  if ((unsigned __int128)(v8 * (__int128)v10) >> 64 != (v8 * v10) >> 63) {
    goto LABEL_25;
  }
  if (v38 < 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v38)
  {
    uint64_t v39 = v62.data;
    unint64_t v40 = v61.data;
    uint64_t v41 = v60.data;
    do
    {
      if (*data == 0.0)
      {
        *uint64_t v39 = -1082130432;
        *unint64_t v40 = -1082130432;
        *uint64_t v41 = -1082130432;
      }
      ++v41;
      ++v40;
      ++v39;
      ++data;
      --v38;
    }
    while (v38);
  }
  uint64_t v44 = (uint64_t)v37;
  uint64_t v59 = sub_260FB8094((uint64_t)v35, v62.height, v62.width, v62.rowBytes);
  unint64_t v46 = v45;
  uint64_t v47 = sub_260FB8094((uint64_t)v36, v61.height, v61.width, v61.rowBytes);
  unint64_t v53 = v48;
  uint64_t v54 = v47;
  unint64_t v49 = v48;
  uint64_t v52 = sub_260FB8094(v44, v60.height, v60.width, v60.rowBytes);
  unint64_t v57 = v50;
  sub_260DCBD18(v59, v46);
  sub_260DCBD18(v47, v49);
  sub_260FB8A5C(v47, v49);
  sub_260DCC110(v47, v49);
  sub_260DCBD18(v59, v46);
  sub_260DCBD18(v52, v57);
  sub_260FB8A5C(v52, v57);
  sub_260DCC110(v52, v57);
  sub_260DCC110(v59, v46);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C80);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_260FE8E10;
  *(_OWORD *)(v51 + 32) = xmmword_260FE7020;
  *(void *)(v51 + 48) = CGImageGetHeight(v11);
  *(void *)(v51 + 56) = CGImageGetWidth(v11);
  sub_260FE3B10();
  sub_260DCC110(v52, v57);
  sub_260DCC110(v54, v53);
  sub_260DCC110(v59, v46);
}

uint64_t sub_260FB6FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_260FB7060()
{
  unint64_t result = qword_26A8EB270;
  if (!qword_26A8EB270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB270);
  }
  return result;
}

uint64_t static CGImageRef.fromCVPixelBuffer(_:)(__CVBuffer *a1)
{
  return sub_260FB8C80(a1);
}

unint64_t CGImageRef.ShapedArrayError.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000015;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD000000000000027;
    }
    else {
      return 0xD00000000000001DLL;
    }
  }
  return result;
}

uint64_t sub_260FB7130(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_260FD4370(*a1, *a2);
}

uint64_t sub_260FB713C()
{
  return sub_260FB6234();
}

uint64_t sub_260FB7144()
{
  return sub_260FA510C();
}

uint64_t sub_260FB714C()
{
  return sub_260FB65DC();
}

uint64_t sub_260FB7154@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _sSo10CGImageRefa13DiffusionBaseE16ShapedArrayErrorO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_260FB7184@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CGImageRef.ShapedArrayError.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t CGImageRef.PixelBufferConversionError.init(rawValue:)()
{
  uint64_t v0 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t CGImageRef.PixelBufferConversionError.rawValue.getter(char a1)
{
  if (a1) {
    return 0x436567616D496763;
  }
  else {
    return 0x616E616C506E6F6ELL;
  }
}

uint64_t sub_260FB7254(char *a1, char *a2)
{
  return sub_260FD42B0(*a1, *a2);
}

uint64_t sub_260FB7260()
{
  return sub_260FE5340();
}

uint64_t sub_260FB72FC()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FB7384()
{
  return sub_260FE5340();
}

uint64_t sub_260FB741C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_260FE4EC0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_260FB747C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x616E616C506E6F6ELL;
  if (*v1) {
    uint64_t v2 = 0x436567616D496763;
  }
  unint64_t v3 = 0xEF72656666754272;
  if (*v1) {
    unint64_t v3 = 0xEF6E6F6974616572;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_260FB74D4()
{
  uint64_t result = (uint64_t)CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x263F002D8]);
  if (result)
  {
    sub_260FE4980();
    uint64_t result = sub_260FB6FF8((uint64_t)&v1, (uint64_t)v2);
    if (*((void *)&v2[0] + 1) != 1)
    {
      xmmword_26A90FC18 = v2[0];
      unk_26A90FC28 = v2[1];
      qword_26A90FC38 = v3;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static CGImageRef.fromShapedArray(_:_:)(uint64_t a1, float a2, float a3)
{
  char v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAB8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  int v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EADA0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v15);
  int64_t v38 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v17 = sub_260FE3B20();
  if (*(void *)(v17 + 16) < 2uLL)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v18 = *(void *)(v17 + 40);
  swift_bridgeObjectRelease();
  if (v18 != 3)
  {
    sub_260FB7060();
    swift_allocError();
    *size_t v32 = 0;
    swift_willThrow();
    return a1;
  }
  uint64_t v19 = sub_260FE3B20();
  if (*(void *)(v19 + 16) < 3uLL) {
    goto LABEL_14;
  }
  uint64_t v20 = *(void *)(v19 + 48);
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_260FE3B20();
  if (*(void *)(v21 + 16) < 4uLL)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v36 = v14;
  uint64_t v37 = v13;
  uint64_t v22 = *(void *)(v21 + 56);
  uint64_t v23 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v23, v24);
  *(&v35 - 4) = v22;
  *(&v35 - 3) = v20;
  *((float *)&v35 - 4) = a2;
  *((float *)&v35 - 3) = a3;
  *(&v35 - 1) = a1;
  sub_260F5CE1C((void (*)(uint64_t *))sub_260FB910C, (uint64_t)(&v35 - 6), 0, 3);
  uint64_t v26 = v25;
  sub_260FE28F0();
  char v4 = v38;
  sub_260FE2870();
  if (!*(void *)(v26 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v27 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, v26 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
  MEMORY[0x270FA5388](v27, v28);
  *(&v35 - 2) = v26;
  *(&v35 - 1) = (uint64_t)v4;
  sub_260FE2810();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  swift_bridgeObjectRelease();
  if (qword_26A8EA920 != -1) {
LABEL_17:
  }
    swift_once();
  long long v39 = xmmword_26A90FC18;
  long long v40 = unk_26A90FC28;
  uint64_t v41 = qword_26A90FC38;
  uint64_t v29 = v37;
  a1 = (uint64_t)v4;
  uint64_t v30 = sub_260FE2850();
  uint64_t v31 = v36;
  if (v30)
  {
    a1 = v30;
  }
  else
  {
    sub_260FB9150();
    swift_allocError();
    *uint64_t v33 = 1;
    swift_willThrow();
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v29);
  return a1;
}

uint64_t sub_260FB7988@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>, float a4@<S0>, float a5@<S1>)
{
  v22[0] = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD80);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v15);
  uint64_t v17 = (char *)v22 - v16;
  sub_260FE2970();
  sub_260FE2870();
  if (a5 >= a4) {
    float v18 = a4;
  }
  else {
    float v18 = a5;
  }
  float v19 = -v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  sub_260FE3B60();
  sub_260D90340(&qword_26A8EAD88, &qword_26A8EAD80);
  sub_260FE3C50();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v17, v9);
  v22[4] = a1;
  void v22[5] = a2;
  float v23 = 1.0 / vabds_f32(a5, a4);
  float v24 = v19;
  uint64_t v25 = v22[0];
  sub_260FE3B80();
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v9);
}

void sub_260FB7BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAB8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8);
  uint64_t v10 = (char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (*(void *)(a4 + 16))
    {
      if ((unint64_t)(*(void *)(a4 + 32) - 0x2000000000000000) >> 62 == 3)
      {
        sub_260FE2970();
        sub_260FE2860();
        sub_260FE28C0();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_260FB7D34(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAB8);
    MEMORY[0x270FA5388](v2, v3);
    return sub_260FE2810();
  }
  return result;
}

uint64_t sub_260FB7E4C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAB8);
    MEMORY[0x270FA5388](v2, v3);
    return sub_260FE2810();
  }
  return result;
}

vImage_Error sub_260FB7F70(const vImage_Buffer *a1, const vImage_Buffer *a2, const vImage_Buffer *a3, const vImage_Buffer *a4)
{
  uint64_t v8 = sub_260FE2950();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_260FE2930();
  vImage_Flags v13 = sub_260FE2940();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  return vImageConvert_PlanarFToBGRX8888(a2, a3, a4, 0xFFu, a1, flt_270D23948, flt_270D23918, v13);
}

uint64_t sub_260FB8094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  if (a3 < 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!a3)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v5 = a3 * (a4 / a3);
  if ((unsigned __int128)(a3 * (__int128)(a4 / a3)) >> 64 != v5 >> 63)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (a2 < 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if ((unsigned __int128)(v5 * (__int128)a2) >> 64 != (v5 * a2) >> 63)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
  uint64_t result = sub_260FB9024(v5 * a2);
  uint64_t v17 = result;
  uint64_t v18 = v9;
  if (!a2) {
    return result;
  }
  uint64_t v10 = 0;
  do
  {
    if (a2 == v10)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    if (!a1) {
      goto LABEL_28;
    }
    if ((unsigned __int128)(v10 * (__int128)a4) >> 64 != (v10 * a4) >> 63) {
      goto LABEL_22;
    }
    if (v5)
    {
      if (v5 <= 14)
      {
        memset(__dst, 0, sizeof(__dst));
        unsigned __int8 v16 = v5;
        memcpy(__dst, (const void *)(a1 + v10 * a4), v5);
        uint64_t v11 = *(void *)__dst;
        unint64_t v12 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v16 << 48);
      }
      else
      {
        sub_260FE2B10();
        swift_allocObject();
        uint64_t v13 = sub_260FE2AB0();
        uint64_t v14 = v13;
        if ((unint64_t)v5 >= 0x7FFFFFFF)
        {
          sub_260FE2FC0();
          uint64_t v11 = swift_allocObject();
          *(void *)(v11 + 16) = 0;
          *(void *)(v11 + 24) = v5;
          unint64_t v12 = v14 | 0x8000000000000000;
        }
        else
        {
          unint64_t v12 = v13 | 0x4000000000000000;
          uint64_t v11 = v5 << 32;
        }
      }
    }
    else
    {
      uint64_t v11 = 0;
      unint64_t v12 = 0xC000000000000000;
    }
    ++v10;
    sub_260FE3030();
    sub_260DCC110(v11, v12);
  }
  while (a2 != v10);
  return v17;
}

uint64_t CGImageRef.toRGBShapedArray(minValue:maxValue:)@<X0>(uint64_t a1@<X8>, float a2@<S0>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6, v8);
  uint64_t v10 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11, v12);
  uint64_t v14 = (char *)v55 - v13;
  MEMORY[0x270FA5388](v15, v16);
  uint64_t v18 = (char *)v55 - v17;
  size_t Width = CGImageGetWidth(v3);
  uint64_t Height = CGImageGetHeight(v3);
  uint64_t result = (uint64_t)CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x263F002D8]);
  if (!result) {
    goto LABEL_46;
  }
  if ((Width - 0x2000000000000000) >> 62 != 3)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  size_t v21 = 4 * Width;
  int64_t v64 = Width;
  size_t v22 = Width;
  id v23 = (id)result;
  CGContextRef v24 = CGBitmapContextCreate(0, v22, Height, 8uLL, v21, (CGColorSpaceRef)result, 1u);
  if (!v24)
  {
LABEL_45:

LABEL_46:
    sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
    return sub_260FE3BE0();
  }
  uint64_t v59 = v18;
  id v60 = v23;
  CGContextRef v61 = v24;
  uint64_t result = (uint64_t)CGBitmapContextGetData(v24);
  if (!result)
  {

    id v23 = v61;
    goto LABEL_45;
  }
  unint64_t v58 = v14;
  unint64_t v25 = v64 * Height;
  if ((unsigned __int128)(v64 * (__int128)Height) >> 64 != (v64 * Height) >> 63)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if ((v25 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  uint64_t v26 = result;
  unint64_t v57 = v10;
  v55[0] = v7;
  v55[1] = a1;
  uint64_t v56 = v6;
  uint64_t v27 = Height;
  int64_t v28 = v64;
  sub_260FE4810();
  uint64_t v29 = sub_260FB6784(v25, 0);
  uint64_t v30 = sub_260FB6784(v25, 0);
  uint64_t result = sub_260FB6784(v25, 0);
  if (v27 < 0)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  uint64_t v31 = result;
  if (!v27)
  {
LABEL_47:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C80);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_260FE8E10;
    *(int64x2_t *)(v41 + 32) = vdupq_n_s64(1uLL);
    *(void *)(v41 + 48) = v27;
    *(void *)(v41 + 56) = v28;
    uint64_t v65 = v29;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABC8);
    int64_t v64 = MEMORY[0x263F8D4B8];
    sub_260D90340(&qword_26A8EABD0, &qword_26A8EABC8);
    uint64_t v42 = v59;
    sub_260FE3B30();
    uint64_t v65 = v30;
    swift_bridgeObjectRetain();
    sub_260FE3B30();
    uint64_t v65 = v31;
    sub_260FE3B30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C0);
    uint64_t v43 = v55[0];
    uint64_t v44 = *(void *)(v55[0] + 72);
    unint64_t v45 = (*(unsigned __int8 *)(v55[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55[0] + 80);
    uint64_t v46 = 2 * v44;
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_260FE8090;
    unint64_t v48 = *(void (**)(unint64_t, char *, uint64_t))(v43 + 16);
    uint64_t v49 = v56;
    v48(v47 + v45, v42, v56);
    unint64_t v50 = v47 + v45 + v44;
    uint64_t v51 = v58;
    v48(v50, v58, v49);
    unint64_t v52 = v47 + v45 + v46;
    unint64_t v53 = v57;
    v48(v52, v57, v49);
    uint64_t v65 = v47;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E84C8);
    sub_260D90340(&qword_26A8E84D0, &qword_26A8E84C8);
    sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
    sub_260FE3AD0();

    uint64_t v54 = *(void (**)(char *, uint64_t))(v43 + 8);
    v54(v53, v49);
    v54(v51, v49);
    return ((uint64_t (*)(char *, uint64_t))v54)(v42, v49);
  }
  if ((v28 & 0x8000000000000000) == 0)
  {
    uint64_t v32 = 0;
    while (v32 != v27)
    {
      uint64_t v62 = v32;
      if (v28)
      {
        uint64_t v33 = v32 * v28;
        if ((unsigned __int128)(v32 * (__int128)v28) >> 64 != (v32 * v28) >> 63) {
          goto LABEL_59;
        }
        uint64_t v34 = 0;
        while (1)
        {
          unint64_t v35 = v33 + v34;
          if (__OFADD__(v33, v34)) {
            break;
          }
          if ((v35 - 0x2000000000000000) >> 62 != 3) {
            goto LABEL_49;
          }
          uint64_t v36 = 4 * v35;
          if (*(unsigned char *)(v26 + ((4 * v35) | 3)))
          {
            unsigned int v37 = *(unsigned __int8 *)(v26 + 4 * v35);
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if (result)
            {
              if ((v35 & 0x8000000000000000) != 0) {
                goto LABEL_51;
              }
            }
            else
            {
              uint64_t result = (uint64_t)sub_260F7B4A4(v29);
              uint64_t v29 = result;
              if ((v35 & 0x8000000000000000) != 0) {
                goto LABEL_51;
              }
            }
            if (v35 >= *(void *)(v29 + 16)) {
              goto LABEL_50;
            }
            *(float *)(v29 + 4 * v35 + 32) = (float)((float)v37 / 127.5) + -1.0;
            unsigned int v38 = *(unsigned __int8 *)(v26 + (v36 | 1));
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_260F7B4A4(v30);
              uint64_t v30 = result;
            }
            if (v35 >= *(void *)(v30 + 16)) {
              goto LABEL_52;
            }
            *(float *)(v30 + 4 * v35 + 32) = (float)((float)v38 / 127.5) + -1.0;
            unsigned int v39 = *(unsigned __int8 *)(v26 + (v36 | 2));
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_260F7B4A4(v31);
              uint64_t v31 = result;
            }
            if (v35 >= *(void *)(v31 + 16)) {
              goto LABEL_53;
            }
            float v40 = (float)((float)v39 / 127.5) + -1.0;
            int64_t v28 = v64;
          }
          else
          {
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if (result)
            {
              if ((v35 & 0x8000000000000000) != 0) {
                goto LABEL_56;
              }
            }
            else
            {
              uint64_t result = (uint64_t)sub_260F7B4A4(v29);
              uint64_t v29 = result;
              if ((v35 & 0x8000000000000000) != 0) {
                goto LABEL_56;
              }
            }
            if (v35 >= *(void *)(v29 + 16)) {
              goto LABEL_54;
            }
            *(float *)(v29 + 4 * v35 + 32) = a2;
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_260F7B4A4(v30);
              uint64_t v30 = result;
            }
            if (v35 >= *(void *)(v30 + 16)) {
              goto LABEL_55;
            }
            *(float *)(v30 + 4 * v35 + 32) = a2;
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_260F7B4A4(v31);
              uint64_t v31 = result;
            }
            float v40 = a2;
            if (v35 >= *(void *)(v31 + 16)) {
              goto LABEL_57;
            }
          }
          ++v34;
          *(float *)(v31 + 4 * v35 + 32) = v40;
          if (v28 == v34) {
            goto LABEL_11;
          }
        }
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        break;
      }
LABEL_11:
      uint64_t v27 = Height;
      uint64_t v32 = v62 + 1;
      if (v62 + 1 == Height) {
        goto LABEL_47;
      }
    }
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_260FB89C8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_260FE2AC0();
  if (!result || (uint64_t result = sub_260FE2AF0(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_260FE2AE0();
      return sub_260FE2FE0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_260FB8A5C(uint64_t a1, unint64_t a2)
{
  v10[5] = *MEMORY[0x263EF8340];
  void v10[3] = MEMORY[0x263F06F78];
  v10[4] = MEMORY[0x263F06F68];
  v10[0] = a1;
  v10[1] = a2;
  char v4 = __swift_project_boxed_opaque_existential_1(v10, MEMORY[0x263F06F78]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_260DCBD18(a1, a2);
      sub_260DCBD18(v5, v6);
      sub_260FB89C8((int)v5, v5 >> 32);
      sub_260DCC110(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_260DCBD18(a1, a2);
      swift_retain();
      swift_retain();
      sub_260FB89C8(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_260DCBD18(a1, a2);
      sub_260FE2FE0();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t sub_260FB8C80(__CVBuffer *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EADA0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_260FE2950();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (CVPixelBufferIsPlanar(a1))
  {
    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00628]), sel_init);
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F00650]), sel_initWithCVImageBuffer_, a1);
    objc_msgSend(v14, sel_extent);
    id v15 = objc_msgSend(v13, sel_createCGImage_fromRect_, v14);

    if (v15) {
      return (uint64_t)v15;
    }
LABEL_3:
    sub_260FB9150();
    swift_allocError();
    unsigned char *v16 = 1;
    swift_willThrow();
    return (uint64_t)v15;
  }
  uint64_t v29 = v4;
  type metadata accessor for vImageCVImageFormat(0);
  uint64_t result = sub_260FE49D0();
  if (result)
  {
    uint64_t v18 = (void *)result;
    uint64_t result = (uint64_t)CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x263F002D8]);
    if (result)
    {
      sub_260FE49B0();
      sub_260FE49C0();
      type metadata accessor for vImageConverter(0);
      id v15 = v19;
      if (qword_26A8EA920 != -1) {
        swift_once();
      }
      long long v26 = xmmword_26A90FC18;
      long long v27 = unk_26A90FC28;
      uint64_t v28 = qword_26A90FC38;
      sub_260FE2930();
      uint64_t v20 = sub_260FE4960();
      if (v1)
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);

        return (uint64_t)v15;
      }
      size_t v21 = (void *)v20;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      CVPixelBufferLockBaseAddress(a1, 1uLL);
      sub_260FE28F0();
      size_t v22 = a1;
      id v23 = v21;
      sub_260FE2820();
      v24[0] = xmmword_26A90FC18;
      v24[1] = unk_26A90FC28;
      uint64_t v25 = qword_26A90FC38;
      id v15 = (id)sub_260FE2850();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v3);
      CVPixelBufferUnlockBaseAddress(v22, 1uLL);

      if (v15) {
        return (uint64_t)v15;
      }
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_260FB9024(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result < 15)
    {
      return 0;
    }
    else
    {
      sub_260FE2B10();
      swift_allocObject();
      sub_260FE2B00();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_260FE2FC0();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = 0;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t _sSo10CGImageRefa13DiffusionBaseE16ShapedArrayErrorO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_260FB910C@<X0>(uint64_t a1@<X8>)
{
  return sub_260FB7988(*(void *)(v1 + 16), *(void *)(v1 + 24), a1, *(float *)(v1 + 32), *(float *)(v1 + 36));
}

uint64_t sub_260FB9134(uint64_t a1)
{
  return sub_260FB7D34(a1, *(void *)(v1 + 16));
}

unint64_t sub_260FB9150()
{
  unint64_t result = qword_26A8EB278;
  if (!qword_26A8EB278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB278);
  }
  return result;
}

unint64_t sub_260FB91A8()
{
  unint64_t result = qword_26A8EB280;
  if (!qword_26A8EB280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB280);
  }
  return result;
}

unint64_t sub_260FB9200()
{
  unint64_t result = qword_26A8EB288;
  if (!qword_26A8EB288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB288);
  }
  return result;
}

unsigned char *_s16ShapedArrayErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260FB9320);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CGImageRef.ShapedArrayError()
{
  return &type metadata for CGImageRef.ShapedArrayError;
}

unsigned char *_s26PixelBufferConversionErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260FB9424);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CGImageRef.PixelBufferConversionError()
{
  return &type metadata for CGImageRef.PixelBufferConversionError;
}

uint64_t sub_260FB945C(uint64_t a1)
{
  return sub_260FB7E4C(a1, *(void *)(v1 + 16));
}

uint64_t sub_260FB947C()
{
  return sub_260FE2810();
}

vImage_Error sub_260FB950C(const vImage_Buffer *a1)
{
  return sub_260FB7F70(a1, v1[2], v1[3], v1[4]);
}

void sub_260FB952C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppleDiffusionImageConditioner.loadResources()()
{
}

Swift::Void __swiftcall AppleDiffusionImageConditioner.unloadResources()()
{
}

MLMultiArray __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppleDiffusionImageConditioner.encode(_:)(MLMultiArray a1)
{
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7080;
  unsigned int v6 = *(void **)(v3 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
  sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
  id v7 = v6;
  sub_260FE4900();
  if (!v2)
  {

    id v8 = objc_msgSend(v25, sel_name);
    uint64_t v9 = sub_260FE40A0();
    uint64_t v11 = v10;

    *(void *)(inited + 32) = v9;
    *(void *)(inited + 40) = v11;
    *(MLMultiArray *)(inited + 48) = a1;
    uint64_t v12 = a1.super.isa;
    unint64_t v13 = sub_260F5B780(inited);
    sub_260FB9C88(v13, &qword_26A8EABD8);
    swift_bridgeObjectRelease();
    id v14 = objc_allocWithZone(MEMORY[0x263F00D38]);
    id v15 = sub_260FBB9C8();
    uint64_t v24 = MEMORY[0x270FA5388](v15, v16);
    MEMORY[0x270FA5388](v24, v17);
    id v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
    sub_260FE4900();

    id v7 = v25;
    size_t v21 = (void *)sub_260FE4070();
    id v22 = objc_msgSend(v25, sel_featureValueForName_, v21);

    if (v22)
    {
      id v23 = objc_msgSend(v22, sel_multiArrayValue);

      if (v23)
      {

        swift_unknownObjectRelease();
        return (MLMultiArray)v23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }

  result.super.Class isa = (Class)swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_260FB9898(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6CD8);
    uint64_t v2 = sub_260FE4E80();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_260D90650(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_260D906FC(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_260D906FC(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_260D906FC(v36, v37);
    sub_260D906FC(v37, &v33);
    uint64_t result = sub_260FE4BA0();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_260D906FC(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_260DD782C();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_260FB9C60(uint64_t a1)
{
  return sub_260FB9C88(a1, &qword_26A8EABD8);
}

unint64_t sub_260FB9C74(uint64_t a1)
{
  return sub_260FB9C88(a1, &qword_26A8EB2B8);
}

unint64_t sub_260FB9C88(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6D18);
    uint64_t v3 = (void *)sub_260FE4E80();
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v35 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v34 = (unint64_t)(63 - v4) >> 6;
  id v7 = &v40;
  int64_t v8 = &v42;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v11 = MEMORY[0x263F8EE58] + 8;
  if (v6) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v21 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v21 >= v34) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v21);
  int64_t v23 = i + 1;
  if (!v22)
  {
    int64_t v23 = i + 2;
    if (i + 2 >= v34) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v23);
    if (!v22)
    {
      int64_t v23 = i + 3;
      if (i + 3 >= v34) {
        goto LABEL_32;
      }
      unint64_t v22 = *(void *)(v35 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = i + 4;
        if (i + 4 >= v34) {
          goto LABEL_32;
        }
        unint64_t v22 = *(void *)(v35 + 8 * v23);
        if (!v22)
        {
          int64_t v24 = i + 5;
          if (i + 5 < v34)
          {
            unint64_t v22 = *(void *)(v35 + 8 * v24);
            if (v22)
            {
              int64_t v23 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v23 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                goto LABEL_36;
              }
              if (v23 >= v34) {
                break;
              }
              unint64_t v22 = *(void *)(v35 + 8 * v23);
              ++v24;
              if (v22) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_260DD782C();
          return (unint64_t)v3;
        }
      }
    }
  }
LABEL_26:
  unint64_t v6 = (v22 - 1) & v22;
  unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
  for (i = v23; ; unint64_t v20 = v19 | (i << 6))
  {
    BOOL v25 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v20);
    uint64_t v26 = *(void **)(*(void *)(v2 + 56) + 8 * v20);
    uint64_t v38 = *v25;
    uint64_t v39 = v25[1];
    sub_260D905B0(0, a2);
    swift_bridgeObjectRetain();
    id v27 = v26;
    swift_dynamicCast();
    sub_260D906FC(v7, v8);
    sub_260D906FC(v8, v43);
    sub_260D906FC(v43, &v41);
    unint64_t result = sub_260DBACB4(v38, v39);
    unint64_t v28 = result;
    if (v29)
    {
      unint64_t v36 = v6;
      unint64_t v12 = v8;
      int64_t v13 = v7;
      uint64_t v14 = v2;
      int64_t v15 = i;
      uint64_t v16 = v11;
      uint64_t v17 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v38;
      v17[1] = v39;
      uint64_t v11 = v16;
      int64_t i = v15;
      uint64_t v2 = v14;
      id v7 = v13;
      int64_t v8 = v12;
      unint64_t v6 = v36;
      uint64_t v18 = (_OWORD *)(v3[7] + 32 * v28);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
      unint64_t result = (unint64_t)sub_260D906FC(&v41, v18);
      if (!v36) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v3[2] >= v3[3]) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v30 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v30 = v38;
    v30[1] = v39;
    unint64_t result = (unint64_t)sub_260D906FC(&v41, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v31 = v3[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_34;
    }
    v3[2] = v33;
    if (!v6) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v19 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_260FB9FE8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB2A0);
    uint64_t v2 = sub_260FE4E80();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  swift_retain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v14 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v15 = v14 | (v7 << 6);
      goto LABEL_37;
    }
    int64_t v16 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_39;
    }
    if (v16 >= v26) {
      break;
    }
    unint64_t v17 = *(void *)(v27 + 8 * v16);
    int64_t v18 = v7 + 1;
    if (!v17)
    {
      int64_t v18 = v7 + 2;
      if (v7 + 2 >= v26) {
        break;
      }
      unint64_t v17 = *(void *)(v27 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v7 + 3;
        if (v7 + 3 >= v26) {
          break;
        }
        unint64_t v17 = *(void *)(v27 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v7 + 4;
          if (v7 + 4 >= v26) {
            break;
          }
          unint64_t v17 = *(void *)(v27 + 8 * v18);
          if (!v17)
          {
            int64_t v19 = v7 + 5;
            if (v7 + 5 >= v26) {
              break;
            }
            unint64_t v17 = *(void *)(v27 + 8 * v19);
            if (!v17)
            {
              while (1)
              {
                int64_t v18 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v18 >= v26) {
                  goto LABEL_38;
                }
                unint64_t v17 = *(void *)(v27 + 8 * v18);
                ++v19;
                if (v17) {
                  goto LABEL_36;
                }
              }
            }
            int64_t v18 = v7 + 5;
          }
        }
      }
    }
LABEL_36:
    unint64_t v5 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
    int64_t v7 = v18;
LABEL_37:
    char v24 = *(unsigned char *)(*(void *)(a1 + 48) + v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB2A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB2B0);
    swift_dynamicCast();
    sub_260FE52F0();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_260FE5340();
    uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v10 = v8 & ~v9;
    unint64_t v11 = v10 >> 6;
    if (((-1 << v10) & ~*(void *)(v6 + 8 * (v10 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_10;
    }
    char v20 = 0;
    unint64_t v21 = (unint64_t)(63 - v9) >> 6;
    do
    {
      if (++v11 == v21 && (v20 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x260FBA458);
      }
      BOOL v22 = v11 == v21;
      if (v11 == v21) {
        unint64_t v11 = 0;
      }
      v20 |= v22;
      uint64_t v23 = *(void *)(v6 + 8 * v11);
    }
    while (v23 == -1);
    unint64_t v12 = __clz(__rbit64(~v23)) + (v11 << 6);
LABEL_10:
    *(void *)(v6 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v2 + 48) + v12) = v24;
    int64_t v13 = (unsigned char *)(*(void *)(v2 + 56) + 2 * v12);
    *int64_t v13 = v28;
    v13[1] = v29;
    ++*(void *)(v2 + 16);
  }
LABEL_38:
  swift_release();
  sub_260DD782C();
  return v2;
}

BOOL AppleDiffusionImageConditioner.Error.init(rawValue:)()
{
  uint64_t v0 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

unint64_t AppleDiffusionImageConditioner.Error.rawValue.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_260FBA4E0()
{
  return sub_260FE5340();
}

uint64_t sub_260FBA538()
{
  return sub_260FE41D0();
}

uint64_t sub_260FBA554()
{
  return sub_260FE5340();
}

uint64_t sub_260FBA5A8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_260FE4EC0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_260FBA5FC(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x8000000261001010;
}

uint64_t AppleDiffusionImageConditioner.init(modelAt:configuration:)(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(void *)(v4 - 8);
  double v7 = MEMORY[0x270FA5388](v4, v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v9, a1, v4, v7);
  type metadata accessor for ManagedMLModel();
  swift_allocObject();
  uint64_t v10 = ManagedMLModel.init(modelAt:configuration:name:)(v9, a2, (uint64_t)"global_conditioning_producer_reference_image", 44, 2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v10;
}

uint64_t AppleDiffusionImageConditioner.encode(_:)(void *a1, uint64_t a2)
{
  uint64_t v106 = a2;
  v117[4] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v102 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)&v101 - v9;
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAB0);
  uint64_t v11 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113, v12);
  char v111 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v15);
  uint64_t v110 = (char *)&v101 - v16;
  MEMORY[0x270FA5388](v17, v18);
  uint64_t v109 = (char *)&v101 - v19;
  MEMORY[0x270FA5388](v20, v21);
  char v115 = (char *)&v101 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EADA0);
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23, v25);
  char v114 = (char *)&v101 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = self;
  v117[0] = 0;
  CVPixelBufferRef v28 = a1;
  id v29 = objc_msgSend(v27, sel_featureValueWithCGImage_pixelsWide_pixelsHigh_pixelFormatType_options_error_, v28, 512, 512, 1111970369, 0, v117);
  if (!v29)
  {
    id v52 = v117[0];
    sub_260FE2E30();

    swift_willThrow();
    goto LABEL_17;
  }
  id v30 = v29;
  id v31 = v117[0];

  BOOL v32 = (__CVBuffer *)objc_msgSend(v30, sel_imageBufferValue);
  if (!v32) {
    goto LABEL_31;
  }
  CVPixelBufferLockBaseAddress(v32, 1uLL);
  if (!CVPixelBufferGetBaseAddress(v32))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v103 = v24;
  uint64_t v104 = v23;
  char v108 = v10;
  uint64_t v101 = v4;
  uint64_t v107 = v3;
  CVPixelBufferRef v105 = v32;
  CVPixelBufferGetBytesPerRow(v32);
  sub_260FE28F0();
  sub_260FE2830();
  v117[0] = (id)MEMORY[0x263F8EE78];
  sub_260F638C8(0, 4, 0);
  uint64_t v33 = v117[0];
  sub_260FE2960();
  id v34 = v115;
  sub_260FE2870();
  v117[0] = v33;
  unint64_t v36 = v33[2];
  unint64_t v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    sub_260F638C8(v35 > 1, v36 + 1, 1);
    id v34 = v115;
    uint64_t v33 = v117[0];
  }
  void v33[2] = v36 + 1;
  unint64_t v37 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v38 = *(void *)(v11 + 72);
  id v39 = v34;
  uint64_t v40 = v113;
  char v115 = *(char **)(v11 + 32);
  ((void (*)(char *, id, uint64_t))v115)((char *)v33 + v37 + v38 * v36, v39, v113);
  long long v41 = v109;
  sub_260FE2870();
  v117[0] = v33;
  unint64_t v43 = v33[2];
  unint64_t v42 = v33[3];
  if (v43 >= v42 >> 1)
  {
    sub_260F638C8(v42 > 1, v43 + 1, 1);
    uint64_t v40 = v113;
    uint64_t v33 = v117[0];
  }
  void v33[2] = v43 + 1;
  ((void (*)(char *, char *, uint64_t))v115)((char *)v33 + v37 + v43 * v38, v41, v40);
  uint64_t v44 = v110;
  sub_260FE2870();
  v117[0] = v33;
  unint64_t v46 = v33[2];
  unint64_t v45 = v33[3];
  if (v46 >= v45 >> 1)
  {
    sub_260F638C8(v45 > 1, v46 + 1, 1);
    uint64_t v40 = v113;
    uint64_t v33 = v117[0];
  }
  void v33[2] = v46 + 1;
  ((void (*)(char *, char *, uint64_t))v115)((char *)v33 + v37 + v46 * v38, v44, v40);
  uint64_t v47 = v111;
  sub_260FE2870();
  v117[0] = v33;
  unint64_t v49 = v33[2];
  unint64_t v48 = v33[3];
  if (v49 >= v48 >> 1)
  {
    sub_260F638C8(v48 > 1, v49 + 1, 1);
    uint64_t v40 = v113;
    uint64_t v33 = v117[0];
  }
  void v33[2] = v49 + 1;
  ((void (*)(char *, char *, uint64_t))v115)((char *)v33 + v37 + v49 * v38, v47, v40);
  unint64_t v50 = v114;
  sub_260FE2890();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6730);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_260FEDF60;
  *(void *)(v51 + 32) = sub_260FE4700();
  *(void *)(v51 + 40) = sub_260FE4700();
  *(void *)(v51 + 48) = sub_260FE4700();
  *(void *)(v51 + 56) = sub_260FE4700();
  v117[0] = (id)v51;
  sub_260FE4420();
  id v52 = v117[0];
  id v53 = objc_allocWithZone(MEMORY[0x263F00DA8]);
  uint64_t v54 = v112;
  sub_260E5BE64((uint64_t)v52, 65568);
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v103 + 8))(v50, v104);
    swift_release();
    CVPixelBufferRef v28 = v105;
    CVPixelBufferUnlockBaseAddress(v105, 1uLL);
LABEL_17:

    return (uint64_t)v52;
  }
  uint64_t v55 = sub_260FE3B70();
  char v115 = (char *)&v101;
  MEMORY[0x270FA5388](v55, v56);
  *(&v101 - 6) = (uint64_t)v33;
  *(&v101 - 5) = (uint64_t)&unk_270D239C8;
  *((_OWORD *)&v101 - 2) = xmmword_260FFA820;
  *(&v101 - 2) = 512;
  unint64_t v57 = (uint64_t (*)(id *, void))sub_260FE3B50();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD80);
  uint64_t v113 = sub_260D90340(&qword_26A8EAD88, &qword_26A8EAD80);
  unint64_t v58 = (void (*)(unsigned char *, void))sub_260FE3C40();
  sub_260FE3B90();
  uint64_t v112 = 0;
  v58(v116, 0);
  uint64_t v59 = v57(v117, 0);
  char v111 = (char *)&v101;
  MEMORY[0x270FA5388](v59, v60);
  *(&v101 - 6) = (uint64_t)v33;
  *(&v101 - 5) = (uint64_t)&unk_270D239C8;
  *((_OWORD *)&v101 - 2) = xmmword_260FFA830;
  *(&v101 - 2) = 512;
  uint64_t v110 = (char *)sub_260FE3B50();
  CGContextRef v61 = (void (*)(unsigned char *, void))sub_260FE3C40();
  uint64_t v62 = (char *)v112;
  sub_260FE3B90();
  char v115 = v62;
  v61(v116, 0);
  uint64_t v63 = ((uint64_t (*)(id *, void))v110)(v117, 0);
  uint64_t v112 = &v101;
  MEMORY[0x270FA5388](v63, v64);
  *(&v101 - 6) = (uint64_t)v33;
  *(&v101 - 5) = (uint64_t)&unk_270D239C8;
  *((_OWORD *)&v101 - 2) = xmmword_260FFA840;
  *(&v101 - 2) = 512;
  uint64_t v65 = (void (*)(id *, void))sub_260FE3B50();
  vImage_CGImageFormat v66 = (void (*)(unsigned char *, void))sub_260FE3C40();
  id v67 = v115;
  sub_260FE3B90();
  v66(v116, 0);
  v65(v117, 0);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAD00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_260FE7080;
  uint64_t v69 = *(void **)(v106 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
  MEMORY[0x270FA5388](inited, v70);
  *(&v101 - 4) = v71;
  *(&v101 - 3) = (uint64_t)sub_260F6D208;
  *(&v101 - 2) = 0;
  sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
  id v30 = v69;
  sub_260FE4900();
  if (!v67)
  {

    id v72 = v117[0];
    id v73 = objc_msgSend(v117[0], sel_name);

    uint64_t v74 = sub_260FE40A0();
    uint64_t v76 = v75;

    *(void *)(inited + 32) = v74;
    *(void *)(inited + 40) = v76;
    sub_260D905B0(0, &qword_26A8EABD8);
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v102, v108, v107);
    sub_260D90340((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
    *(void *)(inited + 48) = sub_260FE4860();
    unint64_t v77 = sub_260F5B780(inited);
    sub_260FB9C88(v77, &qword_26A8EABD8);
    swift_bridgeObjectRelease();
    id v78 = objc_allocWithZone(MEMORY[0x263F00D38]);
    id v79 = sub_260FBB9C8();
    MEMORY[0x270FA5388](v79, v80);
    *(&v101 - 2) = v81;
    MEMORY[0x270FA5388](v81, v82);
    *(&v101 - 4) = v83;
    *(&v101 - 3) = (uint64_t)sub_260F6DA44;
    *(&v101 - 2) = v84;
    uint64_t v86 = v85;
    id v88 = v87;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
    sub_260FE4900();
    char v115 = v86;

    id v90 = v117[0];
    id v91 = objc_msgSend(v117[0], sel_featureNames);
    sub_260FE46E0();

    uint64_t v92 = swift_bridgeObjectRetain();
    uint64_t v93 = sub_260DBA550(v92);
    swift_bridgeObjectRelease();
    v117[0] = v93;
    sub_260F89778((uint64_t *)v117);
    swift_bridgeObjectRelease();
    uint64_t v94 = v117[0];
    v117[0] = (id)MEMORY[0x263F8EE78];
    uint64_t v95 = v94[2];
    if (!v95)
    {
      swift_unknownObjectRelease();

      id v52 = (id)MEMORY[0x263F8EE78];
LABEL_28:
      swift_release();
      (*(void (**)(char *, uint64_t))(v101 + 8))(v108, v107);
      (*(void (**)(char *, uint64_t))(v103 + 8))(v114, v104);
      CVPixelBufferRef v100 = v105;
      CVPixelBufferUnlockBaseAddress(v105, 1uLL);

      return (uint64_t)v52;
    }
    uint64_t v113 = (uint64_t)v94;
    uint64_t v96 = (char *)(v94 + 5);
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v97 = (void *)sub_260FE4070();
      swift_bridgeObjectRelease();
      id v30 = objc_msgSend(v90, sel_featureValueForName_, v97);

      if (!v30) {
        break;
      }
      id v98 = objc_msgSend(v30, sel_multiArrayValue);

      if (!v98) {
        goto LABEL_30;
      }
      id v99 = v98;
      MEMORY[0x26122AC30]();
      if (*(void *)(((unint64_t)v117[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v117[0] & 0xFFFFFFFFFFFFFF8)
                                                                                              + 0x18) >> 1)
        sub_260FE4430();
      v96 += 16;
      sub_260FE4470();
      sub_260FE4420();

      if (!--v95)
      {
        swift_unknownObjectRelease();

        id v52 = v117[0];
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
LABEL_33:

  swift_unexpectedError();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_260FBB758(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  v23[0] = a7;
  v23[1] = a8;
  uint64_t v25 = a1;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAB8);
  uint64_t v12 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24, v13);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAB0);
  uint64_t v17 = *(void *)(v16 - 8);
  double v19 = MEMORY[0x270FA5388](v16, v18);
  uint64_t v21 = (char *)v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(void *)(a5 + 16) <= a6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v22 = *(void *)(a5 + 8 * a6 + 32);
  if ((v22 & 0x8000000000000000) != 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v22 >= *(void *)(a4 + 16))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  (*(void (**)(char *, unint64_t, uint64_t, double))(v17 + 16))(v21, a4+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v22, v16, v19);
  if (*v25)
  {
    if (*(void *)(a3 + 16))
    {
      if ((unint64_t)(*(void *)(a3 + 32) - 0x2000000000000000) >> 62 == 3)
      {
        sub_260FE2970();
        sub_260FE2860();
        sub_260FE28B0();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v24);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
        return;
      }
      goto LABEL_14;
    }
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  __break(1u);
}

id sub_260FBB9C8()
{
  v6[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = (void *)sub_260FE3E90();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithDictionary_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_260FE2E30();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_260FBBAB0(uint64_t a1)
{
  return sub_260DB4A00(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_260FBBAC4(uint64_t a1)
{
  return sub_260DB517C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_260FBBAD8(void *a1, uint64_t a2, uint64_t a3)
{
}

void sub_260FBBAF0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_260FBB758(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48));
}

unint64_t sub_260FBBB18()
{
  unint64_t result = qword_26A8EB298;
  if (!qword_26A8EB298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB298);
  }
  return result;
}

uint64_t destroy for AppleDiffusionImageConditioner()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void *_s13DiffusionBase30AppleDiffusionImageConditionerVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AppleDiffusionImageConditioner(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AppleDiffusionImageConditioner(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AppleDiffusionImageConditioner()
{
  return &type metadata for AppleDiffusionImageConditioner;
}

unsigned char *storeEnumTagSinglePayload for AppleDiffusionImageConditioner.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x260FBBD48);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleDiffusionImageConditioner.Error()
{
  return &type metadata for AppleDiffusionImageConditioner.Error;
}

id sub_260FBBD80@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_260F6DA44(a1, a2);
}

void sub_260FBBD9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MultilingualTextEncoder.loadResources()()
{
  id v2 = v1;
  v6[1] = *(id *)MEMORY[0x263EF8340];
  if (!v0 || (ManagedMLModel.loadResources()(), !v3))
  {
    v6[0] = 0;
    if (objc_msgSend(v2, sel_loadWithError_, v6))
    {
      id v4 = v6[0];
    }
    else
    {
      id v5 = v6[0];
      sub_260FE2E30();

      swift_willThrow();
    }
  }
}

Swift::Void __swiftcall MultilingualTextEncoder.unloadResources()()
{
  id v2 = v1;
  if (v0) {
    ManagedMLModel.unloadResources()();
  }
  objc_msgSend(v2, sel_unload);
}

void MultilingualTextEncoder.encode(_:)(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v42[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABA8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = MEMORY[0x270FA5388](v15, v16);
  double v19 = (char *)&v35 - v18;
  if (objc_msgSend(a3, sel_hasAvailableAssets, v17))
  {
    uint64_t v38 = a2;
    uint64_t v39 = a4;
    uint64_t v40 = a5;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v20 = sub_260E5C064();
    uint64_t v22 = v21;
    uint64_t v23 = (void *)sub_260FE4070();
    v42[0] = 0;
    id v24 = objc_msgSend(a3, sel_embeddingResultForString_language_error_, v23, 0, v42);

    id v25 = v42[0];
    id v41 = v24;
    if (v24)
    {
      unint64_t v36 = v14;
      uint64_t v37 = v11;
      v42[0] = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6C80);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_260FE8090;
      uint64_t v27 = v39;
      *(void *)(v26 + 32) = 1;
      *(void *)(v26 + 40) = v27;
      id v28 = v25;
      *(void *)(v26 + 48) = objc_msgSend(a3, sel_dimension);
      uint64_t v35 = sub_260FBDDD8(&qword_26A8EABB0, &qword_26A8EABA8);
      uint64_t v29 = sub_260FE3C20();
      MEMORY[0x270FA5388](v29, v30);
      *(&v35 - 6) = (uint64_t)v41;
      *(&v35 - 5) = v20;
      uint64_t v31 = v38;
      *(&v35 - 4) = v22;
      *(&v35 - 3) = v31;
      *(&v35 - 2) = (uint64_t)a3;
      *(&v35 - 1) = v27;
      sub_260FE3B00();
      swift_bridgeObjectRelease();
      if (v31)
      {
        sub_260FBC464((uint64_t)v19, v31);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v10);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
        uint64_t v34 = v37;
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v36, v19, v10);
        sub_260FBDDD8((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
        sub_260FE3BC0();

        (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v10);
      }
    }
    else
    {
      id v33 = v42[0];
      swift_bridgeObjectRelease();
      sub_260FE2E30();

      swift_willThrow();
    }
  }
  else
  {
    sub_260FBDD54();
    swift_allocError();
    *(void *)uint64_t v32 = 0;
    *(void *)(v32 + 8) = 0;
    *(unsigned char *)(v32 + 16) = 2;
    swift_willThrow();
  }
}

uint64_t sub_260FBC300()
{
  return sub_260FE49E0();
}

uint64_t sub_260FBC3A4(uint64_t result, int a2, int a3, uint64_t *a4, void *a5, int a6, id a7)
{
  uint64_t v8 = *(void *)(result + 16);
  if (v8)
  {
    uint64_t v11 = 0;
    uint64_t v12 = result + 32;
    while (1)
    {
      uint64_t v13 = *a4;
      uint64_t v14 = *a5;
      unint64_t result = (uint64_t)objc_msgSend(a7, sel_dimension);
      uint64_t v15 = v14 * result;
      if ((unsigned __int128)(v14 * (__int128)result) >> 64 != (v14 * result) >> 63) {
        break;
      }
      BOOL v16 = __OFADD__(v15, v11);
      uint64_t v17 = v15 + v11;
      if (v16) {
        goto LABEL_9;
      }
      *(void *)(v13 + 8 * v17) = *(void *)(v12 + 8 * v11++);
      if (v8 == v11) {
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
  else
  {
LABEL_6:
    if (!__OFADD__(*a5, 1))
    {
      ++*a5;
      return 1;
    }
  }
  __break(1u);
  return result;
}

void sub_260FBC464(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    MEMORY[0x270FA5388](a1, a2);
    uint64_t v4 = OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue;
    id v6 = *(void **)(v5 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_queue);
    MEMORY[0x270FA5388](v7, v5);
    sub_260D905B0(0, &qword_26A8EB2D0);
    swift_retain_n();
    id v8 = v6;
    sub_260FE4900();
    if (v2)
    {
      swift_release_n();
    }
    else
    {
      swift_release();

      MEMORY[0x270FA5388](v9, v10);
      MEMORY[0x270FA5388](v11, v12);
      id v14 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC90);
      sub_260FE4900();

      MEMORY[0x270FA5388](v15, v16);
      uint64_t v17 = *(void **)(a2 + v4);
      MEMORY[0x270FA5388](v18, v19);
      swift_retain();
      id v20 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      sub_260FE4900();

      swift_unknownObjectRelease();
      swift_release_n();
    }
  }
  else
  {
    sub_260FE4E20();
    __break(1u);
  }
}

void sub_260FBC7C4(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABA8);
  uint64_t v8 = *(void *)(v7 - 8);
  double v10 = MEMORY[0x270FA5388](v7, v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_modelDescription, v10);
  id v14 = objc_msgSend(v13, sel_inputDescriptionsByName);

  sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
  uint64_t v15 = sub_260FE3EB0();

  sub_260F81324(v15);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v17)
  {
    id v33 = a3;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7470);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_260FE7080;
    id v21 = objc_msgSend(v19, sel_name);
    uint64_t v22 = sub_260FE40A0();
    uint64_t v34 = v3;
    uint64_t v23 = v22;
    uint64_t v25 = v24;

    *(void *)(inited + 32) = v23;
    *(void *)(inited + 40) = v25;
    uint64_t v26 = sub_260D905B0(0, &qword_26A8EABD8);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v12, a2, v7);
    sub_260FBDDD8(&qword_26A8EABB0, &qword_26A8EABA8);
    uint64_t v27 = sub_260FE4860();
    *(void *)(inited + 72) = v26;
    *(void *)(inited + 48) = v27;
    sub_260DAAF10(inited);
    id v28 = objc_allocWithZone(MEMORY[0x263F00D38]);
    uint64_t v29 = v34;
    id v30 = sub_260FBB9C8();

    if (!v29) {
      *id v33 = v30;
    }
  }
  else
  {
    sub_260FBDD54();
    swift_allocError();
    *(_OWORD *)uint64_t v31 = xmmword_260FE9500;
    *(unsigned char *)(v31 + 16) = 2;
    swift_willThrow();
  }
}

void sub_260FBCA74(void *a1, void *a2)
{
  id v3 = objc_msgSend(a1, sel_modelDescription);
  id v4 = objc_msgSend(v3, sel_outputDescriptionsByName);

  sub_260D905B0(0, (unint64_t *)&qword_26A8EAC88);
  uint64_t v5 = sub_260FE3EB0();

  sub_260F81324(v5);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (v7)
  {
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v9, sel_name);
    if (!v10)
    {
      sub_260FE40A0();
      id v10 = (id)sub_260FE4070();
      swift_bridgeObjectRelease();
    }
    id v11 = objc_msgSend(a2, sel_featureValueForName_, v10);

    if (v11
      && (id v12 = objc_msgSend(v11, sel_multiArrayValue), v11, v12))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
      sub_260FBDDD8((unint64_t *)&qword_26A8E84B8, &qword_26A8E6BF0);
      sub_260FE3BB0();
    }
    else
    {
      id v13 = objc_msgSend(v9, sel_type);
      sub_260FBDD54();
      swift_allocError();
      *(void *)uint64_t v14 = 5;
      *(void *)(v14 + 8) = v13;
      *(unsigned char *)(v14 + 16) = 1;
      swift_willThrow();
    }
  }
  else
  {
    sub_260FBDD54();
    swift_allocError();
    *(_OWORD *)uint64_t v15 = xmmword_260FE9510;
    *(unsigned char *)(v15 + 16) = 2;
    swift_willThrow();
  }
}

void sub_260FBCC98(void *a1@<X0>, uint64_t a2@<X8>)
{
  MultilingualTextEncoder.encode(_:)(a1, *(void *)v2, *(void **)(v2 + 8), *(void *)(v2 + 16), a2);
}

void sub_260FBCCB8()
{
}

id sub_260FBCCD4()
{
  uint64_t v1 = (void *)v0[1];
  if (*v0) {
    ManagedMLModel.unloadResources()();
  }
  return objc_msgSend(v1, sel_unload);
}

unint64_t MultilingualTextEncoder.Error.debugDescription.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 > 1u)
  {
    unint64_t v4 = 0xD000000000000027;
    if (!(a1 ^ 1 | a2)) {
      unint64_t v4 = 0xD000000000000026;
    }
    if (a1 | a2) {
      return v4;
    }
    else {
      return 0xD000000000000080;
    }
  }
  else
  {
    sub_260FE4C20();
    sub_260FE4250();
    type metadata accessor for MLFeatureType(0);
    sub_260FE4DA0();
    sub_260FE4250();
    sub_260FE4DA0();
    sub_260FE4250();
    return 0;
  }
}

unint64_t sub_260FBCEDC()
{
  return MultilingualTextEncoder.Error.debugDescription.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_260FBCEE8(uint64_t a1, uint64_t a2)
{
  return _s13DiffusionBase23MultilingualTextEncoderV5ErrorO21__derived_enum_equalsySbAE_AEtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t Script.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6E6974616CLL;
  }
  if (a1 == 1) {
    return 0x63696C6C69727963;
  }
  return 7039587;
}

uint64_t sub_260FBCF54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_260FD451C(*a1, *a2);
}

uint64_t sub_260FBCF60()
{
  return sub_260FE5340();
}

uint64_t sub_260FBCFF8()
{
  sub_260FE41D0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_260FBD07C()
{
  return sub_260FE5340();
}

uint64_t sub_260FBD110@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s13DiffusionBase6ScriptO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_260FBD140(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x63696C6C69727963;
  if (v2 != 1)
  {
    uint64_t v5 = 7039587;
    unint64_t v4 = 0xE300000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E6974616CLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_260FBD194(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = (void *)MEMORY[0x26122C180]();
  sub_260FBD598(a1, a2, a3, a4);
}

void sub_260FBD204(uint64_t a1, void (*a2)(uint64_t *__return_ptr), uint64_t a3)
{
  void (*v26)(uint64_t *__return_ptr);
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char v34;

  sub_260FDE5E0();
  if (!v3)
  {
    v25[1] = a3;
    uint64_t v7 = a1 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_signposter;
    uint64_t v8 = sub_260FE3990();
    MEMORY[0x270FA5388](v8, v9);
    id v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v30 = v12;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v11, v7, v8);
    id v13 = *(const char **)(a1 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_modelName);
    LOBYTE(v7) = *(unsigned char *)(a1 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_modelName + 16);
    id v28 = sub_260FE3940();
    uint64_t v29 = v25;
    uint64_t v27 = *(void *)(v28 - 8);
    MEMORY[0x270FA5388](v28, v14);
    uint64_t v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_260FE3950();
    uint64_t v31 = v8;
    uint64_t v32 = v25;
    uint64_t v26 = a2;
    if ((v7 & 1) == 0)
    {
      if (v13) {
        goto LABEL_9;
      }
      __break(1u);
    }
    if ((unint64_t)v13 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v13 >> 11 == 27)
      {
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
        return;
      }
      if (v13 >> 16 <= 0x10)
      {
        id v13 = &v34;
LABEL_9:
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        uint64_t v18 = sub_260FE3970();
        os_signpost_type_t v19 = sub_260FE4940();
        os_signpost_id_t v20 = sub_260FE3920();
        _os_signpost_emit_with_name_impl(&dword_260D82000, v18, v19, v20, v13, "", v17, 2u);
        id v21 = *(void **)(a1 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel);
        if (v21)
        {
          id v22 = v21;
          v26(&v33);

          os_signpost_type_t v23 = sub_260FE4930();
          os_signpost_id_t v24 = sub_260FE3920();
          _os_signpost_emit_with_name_impl(&dword_260D82000, v18, v23, v24, v13, "", v17, 2u);

          MEMORY[0x26122CA00](v17, -1, -1);
          (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v28);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
          return;
        }
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
}

void sub_260FBD580(uint64_t a1, void (*a2)(uint64_t *__return_ptr), uint64_t a3)
{
}

void sub_260FBD598(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11);
  id v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v15);
  uint64_t v17 = (char *)&v43 - v16;
  sub_260FDE5E0();
  if (!v4)
  {
    uint64_t v55 = v13;
    uint64_t v49 = a3;
    unint64_t v50 = a2;
    unint64_t v43 = v17;
    uint64_t v44 = v10;
    uint64_t v18 = sub_260FE3990();
    uint64_t v54 = &v43;
    double v20 = MEMORY[0x270FA5388](v18, v19);
    uint64_t v52 = v23;
    uint64_t v53 = v22;
    os_signpost_id_t v24 = *(void (**)(double))(v23 + 16);
    uint64_t v56 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    v24(v20);
    uint64_t v25 = *(const char **)(a1 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_modelName);
    char v26 = *(unsigned char *)(a1 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_modelName + 16);
    uint64_t v27 = sub_260FE3940();
    uint64_t v51 = &v43;
    uint64_t v47 = *(void *)(v27 - 8);
    MEMORY[0x270FA5388](v27, v28);
    id v30 = (char *)&v43 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_260FE3950();
    uint64_t v45 = v9;
    unint64_t v46 = a4;
    uint64_t v48 = v27;
    if ((v26 & 1) == 0)
    {
      if (v25) {
        goto LABEL_9;
      }
      __break(1u);
    }
    if ((unint64_t)v25 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v25 >> 11 == 27)
      {
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
      if (v25 >> 16 <= 0x10)
      {
        uint64_t v25 = &v57;
LABEL_9:
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        uint64_t v32 = sub_260FE3970();
        os_signpost_type_t v33 = sub_260FE4940();
        os_signpost_id_t v34 = sub_260FE3920();
        _os_signpost_emit_with_name_impl(&dword_260D82000, v32, v33, v34, v25, "", v31, 2u);
        uint64_t v35 = *(void **)(a1 + OBJC_IVAR____TtC13DiffusionBase14ManagedMLModel_loadedModel);
        unint64_t v36 = v55;
        if (v35)
        {
          id v37 = v35;
          v50();

          os_signpost_type_t v38 = sub_260FE4930();
          os_signpost_id_t v39 = sub_260FE3920();
          _os_signpost_emit_with_name_impl(&dword_260D82000, v32, v38, v39, v25, "", v31, 2u);

          uint64_t v40 = v43;
          id v41 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
          uint64_t v42 = v45;
          v41(v43, v36, v45);
          MEMORY[0x26122CA00](v31, -1, -1);
          v41(v46, v40, v42);
          (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v48);
          (*(void (**)(char *, uint64_t))(v52 + 8))(v56, v53);
          return;
        }
LABEL_15:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
}

uint64_t _s13DiffusionBase23MultilingualTextEncoderV5ErrorO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1) {
        return a1 == a4 && a2 == a5;
      }
      return 0;
    }
    if (a1 | a2)
    {
      if (a1 ^ 1 | a2)
      {
        if (a6 != 2 || a4 != 2) {
          return 0;
        }
      }
      else if (a6 != 2 || a4 != 1)
      {
        return 0;
      }
      if (a5) {
        return 0;
      }
    }
    else if (a6 != 2 || a5 | a4)
    {
      return 0;
    }
    return 1;
  }
  if (a6) {
    return 0;
  }
  return a1 == a4 && a2 == a5;
}

uint64_t _s13DiffusionBase23MultilingualTextEncoderV7modelAt13configuration6scriptAC10Foundation3URLVSg_So20MLModelConfigurationCAA6ScriptOtcfC_0(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7588);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_260FE2F90();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15, v16);
  uint64_t v18 = &v25[-v17];
  sub_260F8E90C(a1, (uint64_t)v9);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_260DF7070((uint64_t)v9);
    uint64_t v19 = 0;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v18, v9, v10);
    (*(void (**)(char *, unsigned char *, uint64_t))(v11 + 16))(v14, v18, v10);
    type metadata accessor for ManagedMLModel();
    swift_allocObject();
    uint64_t v19 = ManagedMLModel.init(modelAt:configuration:name:)(v14, a2, (uint64_t)"MultilingualTextEncoder", 23, 2);
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v18, v10);
  }
  id v20 = objc_msgSend(self, sel_contextualEmbeddingWithScript_, **((void **)&unk_265574C08 + a3));
  if (v20)
  {
    uint64_t v21 = v20;
    aBlock[4] = nullsub_1;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_260FBBD9C;
    aBlock[3] = &block_descriptor_15;
    uint64_t v22 = _Block_copy(aBlock);
    id v23 = v21;
    objc_msgSend(v23, sel_requestEmbeddingAssetsWithCompletionHandler_, v22);
    _Block_release(v22);

    sub_260DF7070(a1);
    return v19;
  }
  else
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

unint64_t sub_260FBDD54()
{
  unint64_t result = qword_26A8EB2C0;
  if (!qword_26A8EB2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB2C0);
  }
  return result;
}

uint64_t sub_260FBDDA8()
{
  return sub_260FBC300();
}

uint64_t sub_260FBDDD8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s13DiffusionBase6ScriptO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_260FE4EC0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_260FBDE7C()
{
  unint64_t result = qword_26A8EB2C8;
  if (!qword_26A8EB2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A8EB2C8);
  }
  return result;
}

void *sub_260FBDED4(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  id v4 = v3;
  return a1;
}

void *assignWithCopy for MultilingualTextEncoder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for MultilingualTextEncoder(uint64_t a1, uint64_t a2)
{
  swift_release();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for MultilingualTextEncoder()
{
  return &type metadata for MultilingualTextEncoder;
}

uint64_t sub_260FBDFCC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_260FBDFE4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MultilingualTextEncoder.Error()
{
  return &type metadata for MultilingualTextEncoder.Error;
}

unsigned char *storeEnumTagSinglePayload for Script(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x260FBE0D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Script()
{
  return &type metadata for Script;
}

void sub_260FBE110(void *a1@<X0>, void *a2@<X8>)
{
  sub_260FBC7C4(a1, *(void *)(v2 + 16), a2);
}

void sub_260FBE12C(void *a1)
{
  sub_260FBCA74(a1, *(void **)(v1 + 16));
}

void sub_260FBE148(char *a1@<X8>)
{
  sub_260FBD194(*(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_260FBE168(uint64_t a1, int a2, int a3)
{
  return sub_260FBC3A4(a1, a2, a3, *(uint64_t **)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), *(id *)(v3 + 40));
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t AppleDiffusionPipeline.ResourceURLs.init(resourcesAt:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7588);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v86 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v8);
  uint64_t v97 = (char *)&v72 - v9;
  uint64_t v98 = sub_260FE2ED0();
  uint64_t v100 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98, v10);
  uint64_t v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_260FE2F90();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v13, v16);
  uint64_t v102 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17, v18);
  id v20 = (char *)&v72 - v19;
  uint64_t v21 = (int *)type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  *(void *)a2 = 0;
  *((void *)a2 + 1) = 0;
  uint64_t v22 = v21[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAA50);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_260FE7060;
  *(void *)&a2[v22] = v23;
  *(void *)(v23 + 32) = &unk_270D22AD8;
  *(void *)(v23 + 40) = &unk_270D22B00;
  os_signpost_id_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v24(&a2[v21[5]], a1, v13);
  uint64_t v101 = (uint8_t *)(v14 + 16);
  id v91 = (unsigned int (**)(uint64_t, uint64_t, uint8_t *))v24;
  v24(v20, a1, v13);
  unint64_t v25 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v26 = swift_allocObject();
  id v87 = *(void (**)(unint64_t, char *, uint64_t))(v14 + 32);
  uint64_t v88 = v14 + 32;
  v87(v26 + v25, v20, v13);
  uint64_t v75 = v21;
  uint64_t v27 = v21[6];
  uint64_t v76 = a2;
  uint64_t v28 = (uint64_t (**)(char))&a2[v27];
  *uint64_t v28 = sub_260FBF408;
  v28[1] = (uint64_t (*)(char))v26;
  id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08850]), sel_init);
  uint64_t v105 = 0xD000000000000024;
  unint64_t v106 = 0x8000000261001DD0;
  uint64_t v30 = *MEMORY[0x263F06E30];
  uint64_t v31 = v100;
  uint64_t v32 = v98;
  uint64_t v94 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 104);
  uint64_t v95 = v100 + 104;
  v94(v12, v30, v98);
  unint64_t v93 = sub_260D86D20();
  uint64_t v99 = a1;
  sub_260FE2F80();
  os_signpost_type_t v33 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v96 = v12;
  uint64_t v100 = v31 + 8;
  uint64_t v92 = v33;
  v33(v12, v32);
  swift_bridgeObjectRelease();
  sub_260FE2F30();
  uint64_t v84 = v14;
  unint64_t v36 = *(void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v35 = v14 + 8;
  os_signpost_id_t v34 = v36;
  uint64_t v85 = v20;
  v36(v20, v13);
  id v37 = (void *)sub_260FE4070();
  swift_bridgeObjectRelease();
  LODWORD(v32) = objc_msgSend(v29, sel_fileExistsAtPath_, v37);

  if (v32)
  {
    if (qword_26A8EA918 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_260FE3A10();
    __swift_project_value_buffer(v38, (uint64_t)qword_26A90FC00);
    os_signpost_id_t v39 = v102;
    ((void (*)(char *, uint64_t, uint64_t))v91)(v102, v99, v13);
    uint64_t v40 = sub_260FE39F0();
    os_log_type_t v41 = sub_260FE4890();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v105 = v43;
      *(_DWORD *)uint64_t v42 = 136315138;
      uint64_t v101 = v42 + 4;
      sub_260FC6904();
      uint64_t v44 = sub_260FE5110();
      uint64_t v103 = sub_260DB2844(v44, v45, &v105);
      sub_260FE4AE0();
      swift_bridgeObjectRelease();
      v34(v39, v13);
      _os_log_impl(&dword_260D82000, v40, v41, "Found an M2 model for local conditioning producer at %s", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x26122CA00](v43, -1, -1);
      MEMORY[0x26122CA00](v42, -1, -1);
    }
    else
    {
      v34(v39, v13);
    }
  }
  id v73 = (uint64_t (*)(uint64_t, uint8_t *))v34;
  uint64_t v74 = v35;
  uint64_t v101 = (uint8_t *)v13;
  unint64_t v46 = sub_260F5BCA0(MEMORY[0x263F8EE78]);
  uint64_t v47 = qword_270D22AB8;
  if (qword_270D22AB8)
  {
    uint64_t v48 = (void (**)(uint64_t, uint64_t, uint64_t, uint8_t *))(v84 + 56);
    id v91 = (unsigned int (**)(uint64_t, uint64_t, uint8_t *))(v84 + 48);
    unsigned int v90 = *MEMORY[0x263F06E38];
    unint64_t v89 = 0x8000000261001E00;
    unint64_t v83 = 0xD000000000000016;
    unint64_t v82 = (unint64_t)"personalized_emoji";
    unint64_t v81 = 0xD000000000000012;
    unint64_t v80 = (unint64_t)"personalized_illustration";
    id v79 = "personalized_sketch";
    id v78 = "personalized_style_scribble";
    unint64_t v77 = (unint64_t)"with negative count";
    uint64_t v49 = &byte_270D22AC8;
    do
    {
      uint64_t v52 = *v49;
      uint64_t v102 = v49 + 1;
      unint64_t v53 = 0xE500000000000000;
      unint64_t v54 = 0x696A6F6D65;
      switch(v52)
      {
        case 1:
          unint64_t v53 = v82 | 0x8000000000000000;
          unint64_t v54 = v83;
          break;
        case 2:
          break;
        case 3:
          unint64_t v53 = v80 | 0x8000000000000000;
          unint64_t v54 = v81;
          break;
        case 4:
          unint64_t v53 = 0xEC0000006E6F6974;
          unint64_t v54 = 0x61727473756C6C69;
          break;
        case 5:
          unint64_t v54 = 0xD000000000000019;
          uint64_t v55 = &v108;
          goto LABEL_20;
        case 6:
          unint64_t v53 = 0xE600000000000000;
          unint64_t v54 = 0x686374656B73;
          break;
        case 7:
          unint64_t v54 = 0xD000000000000013;
          uint64_t v55 = &v107;
LABEL_20:
          unint64_t v53 = *(v55 - 32) | 0x8000000000000000;
          break;
        case 8:
          unint64_t v53 = 0xEE00656C62626972;
          unint64_t v54 = 0x63735F656C797473;
          break;
        case 9:
          unint64_t v53 = v77 | 0x8000000000000000;
          unint64_t v54 = 0xD00000000000001BLL;
          break;
        default:
          unint64_t v53 = 0xE90000000000006ELL;
          unint64_t v54 = 0x6F6974616D696E61;
          break;
      }
      unint64_t v104 = v53;
      uint64_t v105 = 1852400174;
      unint64_t v106 = 0xE400000000000000;
      uint64_t v103 = v54;
      swift_bridgeObjectRetain();
      uint64_t v103 = sub_260FE42F0();
      unint64_t v104 = v56;
      sub_260FE4240();
      swift_bridgeObjectRelease();
      uint64_t v105 = v103;
      unint64_t v106 = v104;
      uint64_t v103 = 0x2F61726F6CLL;
      unint64_t v104 = 0xE500000000000000;
      uint64_t v103 = sub_260FE42F0();
      unint64_t v104 = v57;
      sub_260FE4240();
      swift_bridgeObjectRelease();
      uint64_t v105 = v103;
      unint64_t v106 = v104;
      uint64_t v103 = 0xD00000000000001BLL;
      unint64_t v104 = v89;
      uint64_t v103 = sub_260FE42F0();
      unint64_t v104 = v58;
      sub_260FE4240();
      swift_bridgeObjectRelease();
      uint64_t v105 = v103;
      unint64_t v106 = v104;
      uint64_t v59 = v96;
      uint64_t v60 = v98;
      v94(v96, v90, v98);
      uint64_t v61 = (uint64_t)v97;
      sub_260FE2F70();
      v92(v59, v60);
      swift_bridgeObjectRelease();
      uint64_t v62 = *v48;
      uint64_t v63 = v101;
      (*v48)(v61, 0, 1, v101);
      if ((*v91)(v61, 1, v63) == 1)
      {
        sub_260DF7070(v61);
        swift_bridgeObjectRetain();
        unint64_t v64 = sub_260DBB068(v52);
        char v66 = v65;
        swift_bridgeObjectRelease();
        if (v66)
        {
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v105 = v46;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_260FC4D58();
            unint64_t v46 = v105;
          }
          uint64_t v68 = (uint64_t)v86;
          uint64_t v69 = v101;
          v87((unint64_t)v86, (char *)(*(void *)(v46 + 56) + *(void *)(v84 + 72) * v64), (uint64_t)v101);
          sub_260FC592C(v64, v46);
          swift_bridgeObjectRelease();
          uint64_t v70 = 0;
        }
        else
        {
          uint64_t v70 = 1;
          uint64_t v68 = (uint64_t)v86;
          uint64_t v69 = v101;
        }
        v62(v68, v70, 1, v69);
        sub_260DF7070(v68);
      }
      else
      {
        uint64_t v50 = (uint64_t)v85;
        v87((unint64_t)v85, (char *)v61, (uint64_t)v63);
        char v51 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v105 = v46;
        sub_260FC679C(v50, v52, v51);
        unint64_t v46 = v105;
        swift_bridgeObjectRelease();
      }
      --v47;
      uint64_t v49 = v102;
    }
    while (v47);
  }
  uint64_t result = v73(v99, v101);
  *(void *)((char *)v76 + v75[7]) = v46;
  return result;
}

uint64_t type metadata accessor for AppleDiffusionPipeline.ResourceURLs()
{
  uint64_t result = qword_26A8EB2F8;
  if (!qword_26A8EB2F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_260FBED00(uint64_t a1, char a2)
{
  uint64_t v3 = sub_260FE2ED0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = 0xD000000000000018;
  unint64_t v9 = 0x8000000261001F50;
  switch(a2)
  {
    case 1:
      unint64_t v8 = 0xD00000000000001ELL;
      uint64_t v10 = "noise_predictorChunk1.mlmodelc";
      goto LABEL_11;
    case 2:
      unint64_t v8 = 0xD00000000000001ELL;
      uint64_t v10 = "noise_predictorChunk2.mlmodelc";
      goto LABEL_11;
    case 3:
      unint64_t v8 = 0xD000000000000015;
      uint64_t v10 = "clip_encoder.mlmodelc";
      goto LABEL_11;
    case 4:
      uint64_t v11 = "encoder.mlmodelc";
      goto LABEL_7;
    case 5:
      uint64_t v11 = "decoder.mlmodelc";
LABEL_7:
      unint64_t v9 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      unint64_t v8 = 0xD000000000000010;
      break;
    case 6:
      unint64_t v8 = 0xD00000000000001CLL;
      uint64_t v10 = "decoder_alpha_emoji.mlmodelc";
      goto LABEL_11;
    case 7:
      unint64_t v8 = 0xD00000000000002DLL;
      uint64_t v10 = "local_conditioning_producer_scribble.mlmodelc";
      goto LABEL_11;
    case 8:
      unint64_t v8 = 0xD000000000000035;
      uint64_t v10 = "global_conditioning_producer_reference_image.mlmodelc";
LABEL_11:
      unint64_t v9 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  v13[0] = v8;
  v13[1] = v9;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x263F06E50], v3);
  sub_260D86D20();
  sub_260FE2F70();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return swift_bridgeObjectRelease();
}

void *static AppleDiffusionPipeline.ComponentModel.allCases.getter()
{
  return &unk_270D22B28;
}

unint64_t AppleDiffusionPipeline.ComponentModel.rawValue.getter(char a1)
{
  unint64_t result = 1952804469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E75684374656E75;
      break;
    case 2:
      unint64_t result = 0x6E75684374656E75;
      break;
    case 3:
      unint64_t result = 0x6F636E4570696C63;
      break;
    case 4:
      unint64_t result = 0x7265646F636E65;
      break;
    case 5:
      unint64_t result = 0x7265646F636564;
      break;
    case 6:
      unint64_t result = 0x6365446168706C61;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_260FBF070(unsigned __int8 *a1, char *a2)
{
  return sub_260FD477C(*a1, *a2);
}

uint64_t sub_260FBF07C()
{
  return sub_260FE5340();
}

uint64_t sub_260FBF0C4()
{
  return sub_260DC59B0();
}

uint64_t sub_260FBF0CC()
{
  return sub_260FE5340();
}

uint64_t sub_260FBF110@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s13DiffusionBase05AppleA8PipelineV14ComponentModelO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_260FBF140@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AppleDiffusionPipeline.ComponentModel.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_260FBF16C(void *a1@<X8>)
{
  *a1 = &unk_270D22B28;
}

uint64_t AppleDiffusionPipeline.ResourceURLs.catalogVersion.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppleDiffusionPipeline.ResourceURLs.catalogVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AppleDiffusionPipeline.ResourceURLs.catalogVersion.modify())()
{
  return nullsub_1;
}

uint64_t AppleDiffusionPipeline.ResourceURLs.baseURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppleDiffusionPipeline.ResourceURLs() + 20);
  uint64_t v4 = sub_260FE2F90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t AppleDiffusionPipeline.ResourceURLs.urlForComponent.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AppleDiffusionPipeline.ResourceURLs() + 24));
  swift_retain();
  return v1;
}

uint64_t AppleDiffusionPipeline.ResourceURLs.urlForAdapter.getter()
{
  type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  return swift_bridgeObjectRetain();
}

uint64_t AppleDiffusionPipeline.ResourceURLs.urlForAdapter.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for AppleDiffusionPipeline.ResourceURLs() + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*AppleDiffusionPipeline.ResourceURLs.urlForAdapter.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_260FBF378()
{
  uint64_t v1 = sub_260FE2F90();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_260FBF408(char a1)
{
  uint64_t v3 = *(void *)(sub_260FE2F90() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_260FBED00(v4, a1);
}

uint64_t AppleDiffusionPipeline.ResourceURLs.requiredComponentCombinations.getter()
{
  type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  return swift_bridgeObjectRetain();
}

uint64_t AppleDiffusionPipeline.ResourceURLs.validate()()
{
  uint64_t v54 = sub_260FE2ED0();
  uint64_t v1 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54, v2);
  unint64_t v53 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_260FE2F90();
  uint64_t v4 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58, v5);
  uint64_t v59 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)v48 - v9;
  uint64_t v11 = (void *)sub_260F5BFB0(MEMORY[0x263F8EE78]);
  uint64_t v12 = qword_270D22B38;
  if (qword_270D22B38)
  {
    uint64_t v13 = (void (**)(uint64_t))(v0
                                        + *(int *)(type metadata accessor for AppleDiffusionPipeline.ResourceURLs() + 24));
    unsigned int v52 = *MEMORY[0x263F06E38];
    uint64_t v50 = (void (**)(char *, uint64_t))(v1 + 8);
    char v51 = (void (**)(char *, void, uint64_t))(v1 + 104);
    unint64_t v57 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v14 = *v13;
    v48[1] = v13[1];
    uint64_t v49 = v14;
    uint64_t v15 = &byte_270D22B48;
    v48[0] = v10;
    while (1)
    {
      uint64_t v17 = *v15;
      v49(v17);
      id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08850]), sel_init);
      sub_260FE2F30();
      uint64_t v19 = (void *)sub_260FE4070();
      swift_bridgeObjectRelease();
      unsigned int v56 = objc_msgSend(v18, sel_fileExistsAtPath_isDirectory_, v19, 0);

      uint64_t v60 = 0x646C6D65726F632FLL;
      unint64_t v61 = 0xEF6E69622E617461;
      uint64_t v21 = v53;
      uint64_t v20 = v54;
      (*v51)(v53, v52, v54);
      sub_260D86D20();
      sub_260FE2F70();
      (*v50)(v21, v20);
      swift_bridgeObjectRelease();
      unint64_t v22 = sub_260FE2FB0();
      uint64_t v55 = v15 + 1;
      unsigned __int8 v24 = BYTE6(v23);
      int v25 = v22;
      switch(v23 >> 62)
      {
        case 1uLL:
          unint64_t v29 = HIDWORD(v22);
          sub_260DCC110(v22, v23);
          LODWORD(v26) = v29 - v25;
          if (__OFSUB__(v29, v25)) {
            goto LABEL_26;
          }
          uint64_t v26 = (int)v26;
LABEL_13:
          BOOL v30 = v26 > 0;
          uint64_t v31 = *v57;
          (*v57)(v59, v58);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v60 = (uint64_t)v11;
          unint64_t v34 = sub_260DBB4C8(v17);
          uint64_t v35 = v11[2];
          BOOL v36 = (v33 & 1) == 0;
          uint64_t v37 = v35 + v36;
          if (__OFADD__(v35, v36))
          {
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            sub_260FE5280();
            __break(1u);
            JUMPOUT(0x260FBF9B4);
          }
          char v38 = v33;
          if (v11[3] >= v37)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_260FC4FFC();
            }
          }
          else
          {
            sub_260FC23C8(v37, isUniquelyReferenced_nonNull_native);
            uint64_t v39 = sub_260DBB4C8(v17);
            if ((v38 & 1) != (v40 & 1)) {
              goto LABEL_27;
            }
            unint64_t v34 = v39;
          }
          char v41 = v56;
          uint64_t v11 = (void *)v60;
          if (v38)
          {
            uint64_t v16 = (unsigned char *)(*(void *)(v60 + 56) + 2 * v34);
            unsigned char *v16 = v56;
            v16[1] = v30;
          }
          else
          {
            *(void *)(v60 + 8 * (v34 >> 6) + 64) |= 1 << v34;
            *(unsigned char *)(v11[6] + v34) = v17;
            uint64_t v42 = (unsigned char *)(v11[7] + 2 * v34);
            unsigned char *v42 = v41;
            v42[1] = v30;
            uint64_t v43 = v11[2];
            BOOL v44 = __OFADD__(v43, 1);
            uint64_t v45 = v43 + 1;
            if (v44) {
              goto LABEL_24;
            }
            _OWORD v11[2] = v45;
          }
          swift_bridgeObjectRelease();
          v31((char *)v48[0], v58);
          --v12;
          uint64_t v15 = v55;
          if (!v12) {
            goto LABEL_22;
          }
          break;
        case 2uLL:
          uint64_t v28 = *(void *)(v22 + 16);
          uint64_t v27 = *(void *)(v22 + 24);
          sub_260DCC110(v22, v23);
          uint64_t v26 = v27 - v28;
          if (!__OFSUB__(v27, v28)) {
            goto LABEL_13;
          }
          goto LABEL_25;
        case 3uLL:
          sub_260DCC110(v22, v23);
          uint64_t v26 = 0;
          goto LABEL_13;
        default:
          sub_260DCC110(v22, v23);
          uint64_t v26 = v24;
          goto LABEL_13;
      }
    }
  }
LABEL_22:
  uint64_t v46 = sub_260FB9FE8((uint64_t)v11);
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t AppleDiffusionPipeline.init(resources:configuration:reduceMemory:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, unsigned char *a4@<X8>)
{
  id v91 = a2;
  int v101 = a3;
  unint64_t v83 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E7588);
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v84 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EA020);
  MEMORY[0x270FA5388](v8 - 8, v9);
  uint64_t v96 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  MEMORY[0x270FA5388](v11, v12);
  uint64_t v94 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_260FE2F90();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v14, v16);
  unint64_t v81 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17, v19);
  uint64_t v21 = (char *)&v80 - v20;
  uint64_t v22 = type metadata accessor for AppleDiffusionUnet();
  uint64_t v24 = MEMORY[0x270FA5388](v22 - 8, v23);
  uint64_t v82 = (uint64_t)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v24, v26);
  uint64_t v95 = (uint64_t)&v80 - v28;
  MEMORY[0x270FA5388](v27, v29);
  uint64_t v99 = (uint64_t)&v80 - v30;
  uint64_t v31 = self;
  id v32 = objc_msgSend(v31, sel_defaultManager);
  uint64_t v87 = v11;
  char v33 = *(void (**)(uint64_t))(a1 + *(int *)(v11 + 24));
  uint64_t v98 = (void (**)(uint64_t))(a1 + *(int *)(v11 + 24));
  v33(1);
  sub_260FE2F40();
  uint64_t v97 = v15;
  unint64_t v34 = *(void (**)(char *, uint64_t))(v15 + 8);
  v34(v21, v14);
  uint64_t v35 = (void *)sub_260FE4070();
  swift_bridgeObjectRelease();
  LODWORD(v11) = objc_msgSend(v32, sel_fileExistsAtPath_, v35);

  uint64_t v36 = a1;
  uint64_t v37 = v94;
  uint64_t v93 = v36;
  sub_260FC7340(v36, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
  unsigned int v90 = v34;
  uint64_t v86 = v21;
  id v85 = v31;
  uint64_t v88 = v14;
  uint64_t v89 = v15 + 8;
  if (v11)
  {
    id v38 = objc_msgSend(v31, sel_defaultManager);
    (*(void (**)(uint64_t))&v37[*(int *)(v87 + 24)])(2);
    sub_260FE2F40();
    v34(v21, v14);
    uint64_t v39 = (void *)sub_260FE4070();
    swift_bridgeObjectRelease();
    unsigned __int8 v40 = objc_msgSend(v38, sel_fileExistsAtPath_, v39);

    sub_260FC72E0((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
    if (v40)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABF0);
      uint64_t v41 = v97;
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_260FE7060;
      uint64_t v43 = *v98;
      (*v98)(1);
      uint64_t v44 = 2;
      goto LABEL_6;
    }
  }
  else
  {
    sub_260FC72E0((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABF0);
  uint64_t v41 = v97;
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_260FE7080;
  uint64_t v43 = *v98;
  uint64_t v44 = 0;
LABEL_6:
  v43(v44);
  uint64_t v45 = v99;
  uint64_t v47 = v91;
  uint64_t v46 = v92;
  uint64_t v48 = type metadata accessor for ConcreteAdapter();
  uint64_t v49 = v96;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v96, 1, 1, v48);
  id v50 = v47;
  uint64_t v51 = v95;
  AppleDiffusionUnet.init(chunksAt:configuration:adapter:)(v42, v50, v49, v95);
  if (v46)
  {

LABEL_14:
    uint64_t v76 = v93;
    return sub_260FC72E0(v76, (uint64_t (*)(void))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
  }
  sub_260FC727C(v51, v45);
  unsigned int v52 = v86;
  v43(5);
  uint64_t v53 = (uint64_t)v84;
  v43(6);
  uint64_t v54 = v88;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v53, 0, 1, v88);
  uint64_t v94 = (char *)v50;
  uint64_t v95 = _s13DiffusionBase7DecoderV7modelAt010alphaModelE013configurationAC10Foundation3URLV_AISgSo20MLModelConfigurationCtcfC_0(v52, v53, v94);
  uint64_t v96 = v55;
  v43(7);
  uint64_t v56 = sub_260FE2F40();
  uint64_t v58 = v57;
  v90(v52, v54);
  id v59 = v85;
  id v60 = objc_msgSend(v85, sel_defaultManager);
  unint64_t v61 = (void *)sub_260FE4070();
  LODWORD(v54) = objc_msgSend(v60, sel_fileExistsAtPath_, v61);

  if (!v54)
  {
    sub_260F64558();
    swift_allocError();
    *(void *)uint64_t v77 = v56;
    *(void *)(v77 + 8) = v58;
    *(unsigned char *)(v77 + 16) = 0;
    swift_willThrow();

    swift_release();
    swift_release();
LABEL_13:
    sub_260FC72E0(v99, (uint64_t (*)(void))type metadata accessor for AppleDiffusionUnet);
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  uint64_t v62 = v98;
  uint64_t v63 = *v98;
  (*v98)(7);
  uint64_t v94 = v94;
  sub_260F8AC4C((uint64_t)v52, v94, (uint64_t)v100);
  sub_260F644DC((uint64_t)v100);
  v63(8);
  uint64_t v64 = sub_260FE2F40();
  uint64_t v66 = v65;
  v90(v52, v88);
  id v67 = objc_msgSend(v59, (SEL)&selRef_setFragmentTexture_atIndex_ + 3);
  uint64_t v68 = (void *)sub_260FE4070();
  unsigned __int8 v69 = objc_msgSend(v67, sel_fileExistsAtPath_, v68);

  if ((v69 & 1) == 0)
  {
    sub_260F645AC((uint64_t)v100);
    sub_260F64558();
    swift_allocError();
    *(void *)uint64_t v78 = v64;
    *(void *)(v78 + 8) = v66;
    *(unsigned char *)(v78 + 16) = 1;
    swift_willThrow();

    swift_release();
    swift_release();
    sub_260F645AC((uint64_t)v100);
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  (*v62)(8);
  uint64_t v70 = v81;
  uint64_t v71 = v88;
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v81, v52, v88);
  type metadata accessor for ManagedMLModel();
  swift_allocObject();
  uint64_t v72 = v94;
  unint64_t v73 = ManagedMLModel.init(modelAt:configuration:name:)(v70, v72, (uint64_t)"global_conditioning_producer_reference_image", 44, 2);
  v90(v52, v71);
  uint64_t v74 = v99;
  uint64_t v75 = v82;
  sub_260FC7340(v99, v82, (uint64_t (*)(void))type metadata accessor for AppleDiffusionUnet);
  swift_retain();
  AppleDiffusionPipeline.init(unet:encoder:decoder:sketchConditioner:imageConditioner:reduceMemory:)(v75, 0, 0, v95, v96, (uint64_t)v100, v73, 0xD000000000000013, v83, 0x8000000261000E10, v101);
  swift_release();

  sub_260F645AC((uint64_t)v100);
  sub_260FC72E0(v74, (uint64_t (*)(void))type metadata accessor for AppleDiffusionUnet);
  uint64_t v76 = v93;
  return sub_260FC72E0(v76, (uint64_t (*)(void))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
}

uint64_t AppleDiffusionPipeline.init(resourcesAt:configuration:reduceMemory:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, unsigned char *a4@<X8>)
{
  uint64_t v8 = sub_260FE2F90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AppleDiffusionPipeline.ResourceURLs();
  MEMORY[0x270FA5388](v13 - 8, v14);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = MEMORY[0x270FA5388](v17, v18);
  uint64_t v21 = (char *)&v23 - v20;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v19);
  AppleDiffusionPipeline.ResourceURLs.init(resourcesAt:)((uint64_t)v12, v21);
  sub_260FC7340((uint64_t)v21, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
  AppleDiffusionPipeline.init(resources:configuration:reduceMemory:)((uint64_t)v16, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return sub_260FC72E0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for AppleDiffusionPipeline.ResourceURLs);
}

uint64_t sub_260FC0544(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC00);
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  char v33 = a2;
  unint64_t v34 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v13 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_39;
  }
  if (v17 >= v11)
  {
    swift_release();
    uint64_t v3 = v34;
    uint64_t v18 = (void *)(v5 + 64);
    if (v33)
    {
LABEL_34:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *uint64_t v18 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    uint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v35 + 8 * v17);
    ++v13;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v13 = v17 + 1;
    if (v17 + 1 >= v11) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v35 + 8 * v13);
    if (v19)
    {
LABEL_21:
      unint64_t v10 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
      char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      int v22 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v16);
      sub_260FE52F0();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_260FE5340();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v28 || (v27 & 1) == 0)
      {
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
        if (v30 != -1)
        {
          unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
          *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
          *(unsigned char *)(*(void *)(v7 + 48) + v14) = v21;
          *(_DWORD *)(*(void *)(v7 + 56) + 4 * v14) = v22;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      JUMPOUT(0x260FC0934);
    }
    int64_t v20 = v17 + 2;
    if (v20 < v11)
    {
      unint64_t v19 = *(void *)(v35 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v13 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_40;
          }
          if (v13 >= v11) {
            goto LABEL_31;
          }
          unint64_t v19 = *(void *)(v35 + 8 * v13);
          ++v20;
          if (v19) {
            goto LABEL_21;
          }
        }
      }
      int64_t v13 = v20;
      goto LABEL_21;
    }
LABEL_31:
    swift_release();
    uint64_t v3 = v34;
    if (v33) {
      goto LABEL_34;
    }
  }
LABEL_38:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_260FC0954(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABF8);
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  char v33 = a2;
  unint64_t v34 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v13 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_39;
  }
  if (v17 >= v11)
  {
    swift_release();
    uint64_t v3 = v34;
    uint64_t v18 = (void *)(v5 + 64);
    if (v33)
    {
LABEL_34:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *uint64_t v18 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    uint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v35 + 8 * v17);
    ++v13;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v13 = v17 + 1;
    if (v17 + 1 >= v11) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v35 + 8 * v13);
    if (v19)
    {
LABEL_21:
      unint64_t v10 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
      char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      sub_260FE52F0();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_260FE5340();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v28 || (v27 & 1) == 0)
      {
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
        if (v30 != -1)
        {
          unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
          *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
          *(unsigned char *)(*(void *)(v7 + 48) + v14) = v21;
          *(void *)(*(void *)(v7 + 56) + 8 * v14) = v22;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      JUMPOUT(0x260FC0D44);
    }
    int64_t v20 = v17 + 2;
    if (v20 < v11)
    {
      unint64_t v19 = *(void *)(v35 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v13 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_40;
          }
          if (v13 >= v11) {
            goto LABEL_31;
          }
          unint64_t v19 = *(void *)(v35 + 8 * v13);
          ++v20;
          if (v19) {
            goto LABEL_21;
          }
        }
      }
      int64_t v13 = v20;
      goto LABEL_21;
    }
LABEL_31:
    swift_release();
    uint64_t v3 = v34;
    if (v33) {
      goto LABEL_34;
    }
  }
LABEL_38:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_260FC0D64(uint64_t a1, char a2)
{
  return sub_260FC10C0(a1, a2, &qword_26A8EAB88);
}

uint64_t sub_260FC0D70(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB320);
  char v38 = a2;
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v36[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v36[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v38)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v36[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v36[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      unint64_t v28 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v20);
      uint64_t v30 = *v28;
      uint64_t v29 = v28[1];
      uint64_t v32 = v28[2];
      uint64_t v31 = v28[3];
      uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_260FE52F0();
      swift_bridgeObjectRetain();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_260FE5340();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v7 + 48) + 32 * v17);
      *uint64_t v18 = v30;
      v18[1] = v29;
      id v18[2] = v32;
      v18[3] = v31;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_260FC10B4(uint64_t a1, char a2)
{
  return sub_260FC10C0(a1, a2, &qword_26A8EB318);
}

uint64_t sub_260FC10C0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v39 = a2;
  uint64_t v7 = sub_260FE4E70();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    int64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_260FE52F0();
    sub_260FE41D0();
    uint64_t result = sub_260FE5340();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  int64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_260FC13CC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A8E6BF0);
  uint64_t v5 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50, v6);
  uint64_t v49 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB58);
  int v48 = a2;
  uint64_t v9 = sub_260FE4E70();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v45 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v43 = v2;
  int64_t v44 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v46 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v47 = v5;
  uint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v16 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v44) {
      break;
    }
    unint64_t v24 = v45;
    unint64_t v25 = v45[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v25 = v45[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v44)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v43;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v45[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v44) {
              goto LABEL_34;
            }
            unint64_t v25 = v45[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v8 + 56);
    uint64_t v28 = v8;
    uint64_t v29 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v22);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    uint64_t v32 = *(void *)(v47 + 72);
    uint64_t v33 = v27 + v32 * v22;
    if (v48)
    {
      (*v15)(v49, v33, v50);
    }
    else
    {
      (*v46)(v49, v33, v50);
      swift_bridgeObjectRetain();
    }
    sub_260FE52F0();
    sub_260FE41D0();
    uint64_t result = sub_260FE5340();
    uint64_t v34 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v35) & ~*(void *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v16 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v19 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    unint64_t v20 = (void *)(*(void *)(v10 + 48) + 16 * v19);
    *unint64_t v20 = v30;
    v20[1] = v31;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v15)(*(void *)(v10 + 56) + v32 * v19, v49, v50);
    ++*(void *)(v10 + 16);
    uint64_t v8 = v28;
  }
  swift_release();
  uint64_t v3 = v43;
  unint64_t v24 = v45;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v8 + 32);
  if (v41 >= 64) {
    bzero(v24, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v41;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_260FC17B8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v45 = sub_260FE2F90();
  uint64_t v5 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45, v6);
  int64_t v44 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB30);
  int v43 = a2;
  uint64_t v9 = sub_260FE4E70();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  v39[0] = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v42 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  uint64_t v15 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v16 = v9 + 64;
  swift_retain();
  int64_t v17 = 0;
  v39[4] = "personalized_illustration";
  v39[5] = "personalized_emoji";
  void v39[2] = "personalized_style_scribble";
  v39[3] = "personalized_sketch";
  v39[1] = "with negative count";
LABEL_8:
  if (v14)
  {
    unint64_t v19 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v20 = v19 | (v17 << 6);
    goto LABEL_22;
  }
  int64_t v21 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_42;
  }
  if (v21 >= v40)
  {
    swift_release();
    uint64_t v3 = (uint64_t *)v39[0];
    unint64_t v22 = v41;
    if (v43)
    {
LABEL_37:
      uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
      if (v37 >= 64) {
        bzero(v22, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v22 = -1 << v37;
      }
      *(void *)(v8 + 16) = 0;
    }
  }
  else
  {
    unint64_t v22 = v41;
    unint64_t v23 = v41[v21];
    ++v17;
    if (v23) {
      goto LABEL_21;
    }
    int64_t v17 = v21 + 1;
    if (v21 + 1 >= v40) {
      goto LABEL_34;
    }
    unint64_t v23 = v41[v17];
    if (v23)
    {
LABEL_21:
      unint64_t v14 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
      char v25 = *(unsigned char *)(*(void *)(v8 + 48) + v20);
      uint64_t v26 = v5;
      uint64_t v27 = *(void *)(v5 + 72);
      unint64_t v28 = *(void *)(v8 + 56) + v27 * v20;
      if (v43) {
        (*v15)(v44, v28, v45);
      }
      else {
        (*v42)(v44, v28, v45);
      }
      sub_260FE52F0();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_260FE5340();
      uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v31 = v29 & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      while (++v32 != v34 || (v33 & 1) == 0)
      {
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v16 + 8 * v32);
        if (v36 != -1)
        {
          unint64_t v18 = __clz(__rbit64(~v36)) + (v32 << 6);
LABEL_7:
          *(void *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(unsigned char *)(*(void *)(v10 + 48) + v18) = v25;
          (*v15)((char *)(*(void *)(v10 + 56) + v27 * v18), (unint64_t)v44, v45);
          ++*(void *)(v10 + 16);
          uint64_t v5 = v26;
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x260FC1CECLL);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v40)
    {
      unint64_t v23 = v41[v24];
      if (!v23)
      {
        while (1)
        {
          int64_t v17 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_43;
          }
          if (v17 >= v40) {
            goto LABEL_34;
          }
          unint64_t v23 = v41[v17];
          ++v24;
          if (v23) {
            goto LABEL_21;
          }
        }
      }
      int64_t v17 = v24;
      goto LABEL_21;
    }
LABEL_34:
    swift_release();
    uint64_t v3 = (uint64_t *)v39[0];
    if (v43) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_260FC1D14(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB310);
  char v34 = a2;
  uint64_t result = sub_260FE4E70();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v33 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      unint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((v34 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_260FE52F0();
      sub_260FE5300();
      uint64_t result = sub_260FE5340();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v27;
      int64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *int64_t v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_260FC1FFC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB308);
  char v36 = a2;
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  BOOL v35 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v12 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_40;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = v35[v21];
    ++v12;
    if (!v22)
    {
      int64_t v12 = v21 + 1;
      if (v21 + 1 >= v34) {
        break;
      }
      unint64_t v22 = v35[v12];
      if (!v22)
      {
        int64_t v23 = v21 + 2;
        if (v23 >= v34) {
          break;
        }
        unint64_t v22 = v35[v23];
        if (!v22)
        {
          while (1)
          {
            int64_t v12 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_41;
            }
            if (v12 >= v34) {
              goto LABEL_34;
            }
            unint64_t v22 = v35[v12];
            ++v23;
            if (v22) {
              goto LABEL_30;
            }
          }
        }
        int64_t v12 = v23;
      }
    }
LABEL_30:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_31:
    char v28 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v20);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    if ((v36 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_260FE52F0();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_260FE5340();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v24 = 0;
    unint64_t v25 = (unint64_t)(63 - v14) >> 6;
    do
    {
      if (++v16 == v25 && (v24 & 1) != 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        JUMPOUT(0x260FC23ACLL);
      }
      BOOL v26 = v16 == v25;
      if (v16 == v25) {
        unint64_t v16 = 0;
      }
      v24 |= v26;
      uint64_t v27 = *(void *)(v11 + 8 * v16);
    }
    while (v27 == -1);
    unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
LABEL_8:
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v28;
    unint64_t v18 = (void *)(*(void *)(v7 + 56) + 16 * v17);
    *unint64_t v18 = v30;
    v18[1] = v31;
    ++*(void *)(v7 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v3 = v2;
  if (v36)
  {
    uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
    if (v32 >= 64) {
      bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *BOOL v35 = -1 << v32;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_260FC23C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAA0);
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  char v35 = a2;
  char v36 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v12 << 6);
LABEL_31:
    char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    uint64_t v30 = (char *)(*(void *)(v5 + 56) + 2 * v20);
    char v31 = v30[1];
    char v32 = *v30;
    sub_260FE52F0();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_260FE5340();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v14) >> 6;
    while (++v16 != v26 || (v25 & 1) == 0)
    {
      BOOL v27 = v16 == v26;
      if (v16 == v26) {
        unint64_t v16 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v11 + 8 * v16);
      if (v28 != -1)
      {
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
LABEL_8:
        *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
        *(unsigned char *)(*(void *)(v7 + 48) + v17) = v29;
        unint64_t v18 = (unsigned char *)(*(void *)(v7 + 56) + 2 * v17);
        *unint64_t v18 = v32;
        v18[1] = v31;
        ++*(void *)(v7 + 16);
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    JUMPOUT(0x260FC27F4);
  }
  int64_t v21 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_40;
  }
  if (v21 >= v37)
  {
    swift_release();
    uint64_t v3 = v36;
    unint64_t v22 = (void *)(v5 + 64);
    if (v35)
    {
LABEL_35:
      uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
      if (v33 >= 64) {
        bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v22 = -1 << v33;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v38 + 8 * v21);
    ++v12;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v12 = v21 + 1;
    if (v21 + 1 >= v37) {
      goto LABEL_32;
    }
    unint64_t v23 = *(void *)(v38 + 8 * v12);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v12 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v21 + 2;
    if (v24 < v37)
    {
      unint64_t v23 = *(void *)(v38 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v12 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_41;
          }
          if (v12 >= v37) {
            goto LABEL_32;
          }
          unint64_t v23 = *(void *)(v38 + 8 * v12);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v12 = v24;
      goto LABEL_30;
    }
LABEL_32:
    swift_release();
    uint64_t v3 = v36;
    if (v35) {
      goto LABEL_35;
    }
  }
LABEL_39:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_260FC2818(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAE8);
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v32 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_40;
    }
    if (v20 >= v31) {
      break;
    }
    unint64_t v21 = v32[v20];
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v31) {
        break;
      }
      unint64_t v21 = v32[v12];
      if (!v21)
      {
        int64_t v22 = v20 + 2;
        if (v22 >= v31) {
          break;
        }
        unint64_t v21 = v32[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v12 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_41;
            }
            if (v12 >= v31) {
              goto LABEL_34;
            }
            unint64_t v21 = v32[v12];
            ++v22;
            if (v21) {
              goto LABEL_30;
            }
          }
        }
        int64_t v12 = v22;
      }
    }
LABEL_30:
    unint64_t v10 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_31:
    char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
    uint64_t v28 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_260FE52F0();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_260FE5340();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v14) >> 6;
    do
    {
      if (++v16 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        JUMPOUT(0x260FC2C20);
      }
      BOOL v25 = v16 == v24;
      if (v16 == v24) {
        unint64_t v16 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v11 + 8 * v16);
    }
    while (v26 == -1);
    unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
LABEL_8:
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v27;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v28;
    ++*(void *)(v7 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v3 = v2;
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    if (v29 >= 64) {
      bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *char v32 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_260FC2C44(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAF0);
  char v51 = a2;
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v47 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v49 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v48 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
  uint64_t v50 = v5;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v12 << 6);
    if (v51)
    {
LABEL_11:
      char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      uint64_t v22 = *(void *)(v5 + 56) + 192 * v20;
      long long v52 = *(_OWORD *)(v22 + 16);
      long long v53 = *(_OWORD *)v22;
      long long v56 = *(_OWORD *)(v22 + 48);
      long long v57 = *(_OWORD *)(v22 + 32);
      long long v54 = *(_OWORD *)(v22 + 80);
      long long v55 = *(_OWORD *)(v22 + 64);
      uint64_t v23 = *(void *)(v22 + 112);
      char v24 = *(unsigned char *)(v22 + 120);
      long long v58 = *(_OWORD *)(v22 + 96);
      long long v59 = *(_OWORD *)(v22 + 128);
      uint64_t v62 = *(void *)(v22 + 160);
      __int16 v25 = *(_WORD *)(v22 + 168);
      char v26 = *(unsigned char *)(v22 + 170);
      long long v60 = *(_OWORD *)(v22 + 144);
      long long v61 = *(_OWORD *)(v22 + 176);
LABEL_33:
      sub_260FE52F0();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_260FE5340();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = v13 & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v14) >> 6;
      while (++v16 != v32 || (v31 & 1) == 0)
      {
        BOOL v33 = v16 == v32;
        if (v16 == v32) {
          unint64_t v16 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v11 + 8 * v16);
        if (v34 != -1)
        {
          unint64_t v17 = __clz(__rbit64(~v34)) + (v16 << 6);
LABEL_8:
          LOBYTE(v63) = v26;
          *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
          *(unsigned char *)(*(void *)(v7 + 48) + v17) = v21;
          uint64_t v18 = *(void *)(v7 + 56) + 192 * v17;
          *(_OWORD *)uint64_t v18 = v53;
          *(_OWORD *)(v18 + 16) = v52;
          *(_OWORD *)(v18 + 32) = v57;
          *(_OWORD *)(v18 + 48) = v56;
          *(_OWORD *)(v18 + 64) = v55;
          *(_OWORD *)(v18 + 80) = v54;
          *(_OWORD *)(v18 + 96) = v58;
          *(void *)(v18 + 112) = v23;
          *(unsigned char *)(v18 + 120) = v24;
          *(_OWORD *)(v18 + 128) = v59;
          *(_OWORD *)(v18 + 144) = v60;
          *(void *)(v18 + 160) = v62;
          *(_WORD *)(v18 + 168) = v25;
          *(unsigned char *)(v18 + 170) = v26;
          *(_OWORD *)(v18 + 176) = v61;
          ++*(void *)(v7 + 16);
          uint64_t v5 = v50;
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x260FC31D0);
    }
LABEL_32:
    char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    char v35 = (long long *)(*(void *)(v5 + 56) + 192 * v20);
    long long v37 = v35[2];
    long long v36 = v35[3];
    long long v38 = *v35;
    long long v64 = v35[1];
    long long v65 = v37;
    long long v63 = v38;
    long long v39 = v35[7];
    long long v41 = v35[4];
    long long v40 = v35[5];
    long long v69 = v35[6];
    long long v70 = v39;
    long long v67 = v41;
    long long v68 = v40;
    long long v42 = v35[11];
    long long v44 = v35[8];
    long long v43 = v35[9];
    long long v73 = v35[10];
    long long v74 = v42;
    long long v71 = v44;
    long long v72 = v43;
    long long v66 = v36;
    uint64_t v62 = v73;
    __int16 v25 = WORD4(v73);
    char v26 = BYTE10(v73);
    long long v60 = v43;
    long long v61 = v42;
    uint64_t v23 = v70;
    char v24 = BYTE8(v70);
    long long v58 = v69;
    long long v59 = v44;
    long long v56 = v36;
    long long v57 = v37;
    long long v54 = v68;
    long long v55 = v67;
    long long v52 = v64;
    long long v53 = v63;
    sub_260F32B24((uint64_t *)&v63);
    goto LABEL_33;
  }
  int64_t v27 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_42;
  }
  if (v27 >= v48)
  {
    swift_release();
    uint64_t v3 = v47;
    uint64_t v28 = v49;
    if (v51)
    {
LABEL_37:
      uint64_t v45 = 1 << *(unsigned char *)(v5 + 32);
      if (v45 >= 64) {
        bzero(v28, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *uint64_t v28 = -1 << v45;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    uint64_t v28 = v49;
    unint64_t v29 = v49[v27];
    ++v12;
    if (v29) {
      goto LABEL_31;
    }
    int64_t v12 = v27 + 1;
    if (v27 + 1 >= v48) {
      goto LABEL_34;
    }
    unint64_t v29 = v49[v12];
    if (v29) {
      goto LABEL_31;
    }
    int64_t v30 = v27 + 2;
    if (v30 < v48)
    {
      unint64_t v29 = v49[v30];
      if (!v29)
      {
        while (1)
        {
          int64_t v12 = v30 + 1;
          if (__OFADD__(v30, 1)) {
            goto LABEL_43;
          }
          if (v12 >= v48) {
            goto LABEL_34;
          }
          unint64_t v29 = v49[v12];
          ++v30;
          if (v29) {
            goto LABEL_31;
          }
        }
      }
      int64_t v12 = v30;
LABEL_31:
      unint64_t v10 = (v29 - 1) & v29;
      unint64_t v20 = __clz(__rbit64(v29)) + (v12 << 6);
      if (v51) {
        goto LABEL_11;
      }
      goto LABEL_32;
    }
LABEL_34:
    swift_release();
    uint64_t v3 = v47;
    if (v51) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_260FC31F4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAAF8);
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  BOOL v33 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v18 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v19 = v18 | (v12 << 6);
    goto LABEL_31;
  }
  int64_t v20 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_42;
  }
  if (v20 >= v34)
  {
    swift_release();
    uint64_t v3 = v33;
    char v21 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_37:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v21, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v21 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    char v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v35 + 8 * v20);
    ++v12;
    if (v22) {
      goto LABEL_30;
    }
    int64_t v12 = v20 + 1;
    if (v20 + 1 >= v34) {
      goto LABEL_34;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v12);
    if (v22)
    {
LABEL_30:
      unint64_t v10 = (v22 - 1) & v22;
      unint64_t v19 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_31:
      char v28 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      unint64_t v29 = *(void **)(*(void *)(v5 + 56) + 8 * v19);
      if ((a2 & 1) == 0) {
        id v30 = v29;
      }
      sub_260FE52F0();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_260FE5340();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = v13 & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v14) >> 6;
      while (++v16 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v16 == v25;
        if (v16 == v25) {
          unint64_t v16 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v16);
        if (v27 != -1)
        {
          unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
LABEL_8:
          *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
          *(unsigned char *)(*(void *)(v7 + 48) + v17) = v28;
          *(void *)(*(void *)(v7 + 56) + 8 * v17) = v29;
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x260FC360CLL);
    }
    int64_t v23 = v20 + 2;
    if (v23 < v34)
    {
      unint64_t v22 = *(void *)(v35 + 8 * v23);
      if (!v22)
      {
        while (1)
        {
          int64_t v12 = v23 + 1;
          if (__OFADD__(v23, 1)) {
            goto LABEL_43;
          }
          if (v12 >= v34) {
            goto LABEL_34;
          }
          unint64_t v22 = *(void *)(v35 + 8 * v12);
          ++v23;
          if (v22) {
            goto LABEL_30;
          }
        }
      }
      int64_t v12 = v23;
      goto LABEL_30;
    }
LABEL_34:
    swift_release();
    uint64_t v3 = v33;
    if (a2) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_260FC3630(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB10);
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v12 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_41;
  }
  if (v16 >= v32)
  {
    swift_release();
    unint64_t v17 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_36:
      uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
      if (v30 >= 64) {
        bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v17 = -1 << v30;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v33 + 8 * v16);
    ++v12;
    if (v18) {
      goto LABEL_21;
    }
    int64_t v12 = v16 + 1;
    if (v16 + 1 >= v32) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v33 + 8 * v12);
    if (v18)
    {
LABEL_21:
      unint64_t v10 = (v18 - 1) & v18;
      unint64_t v15 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_22:
      char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_260FE52F0();
      sub_260FE41D0();
      swift_bridgeObjectRelease();
      uint64_t v22 = sub_260FE5340();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = v22 & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      while (++v25 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v25);
        if (v29 != -1)
        {
          unint64_t v13 = __clz(__rbit64(~v29)) + (v25 << 6);
LABEL_7:
          *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          *(unsigned char *)(*(void *)(v7 + 48) + v13) = v20;
          *(void *)(*(void *)(v7 + 56) + 8 * v13) = v21;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x260FC3A7CLL);
    }
    int64_t v19 = v16 + 2;
    if (v19 < v32)
    {
      unint64_t v18 = *(void *)(v33 + 8 * v19);
      if (!v18)
      {
        while (1)
        {
          int64_t v12 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            goto LABEL_42;
          }
          if (v12 >= v32) {
            goto LABEL_33;
          }
          unint64_t v18 = *(void *)(v33 + 8 * v12);
          ++v19;
          if (v18) {
            goto LABEL_21;
          }
        }
      }
      int64_t v12 = v19;
      goto LABEL_21;
    }
LABEL_33:
    swift_release();
    if (a2) {
      goto LABEL_36;
    }
  }
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_260FC3AA4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB08);
  char v51 = a2;
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v47 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v49 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v48 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
  uint64_t v50 = v5;
LABEL_8:
  if (v10)
  {
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v12 << 6);
    if (v51)
    {
LABEL_10:
      char v17 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      uint64_t v18 = *(void *)(v5 + 56) + 192 * v16;
      long long v52 = *(_OWORD *)(v18 + 16);
      long long v53 = *(_OWORD *)v18;
      long long v56 = *(_OWORD *)(v18 + 48);
      long long v57 = *(_OWORD *)(v18 + 32);
      long long v54 = *(_OWORD *)(v18 + 80);
      long long v55 = *(_OWORD *)(v18 + 64);
      uint64_t v19 = *(void *)(v18 + 112);
      char v20 = *(unsigned char *)(v18 + 120);
      long long v58 = *(_OWORD *)(v18 + 96);
      long long v59 = *(_OWORD *)(v18 + 128);
      uint64_t v62 = *(void *)(v18 + 160);
      __int16 v21 = *(_WORD *)(v18 + 168);
      char v22 = *(unsigned char *)(v18 + 170);
      long long v60 = *(_OWORD *)(v18 + 144);
      long long v61 = *(_OWORD *)(v18 + 176);
      goto LABEL_24;
    }
LABEL_23:
    char v17 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
    unint64_t v27 = (long long *)(*(void *)(v5 + 56) + 192 * v16);
    long long v29 = v27[2];
    long long v28 = v27[3];
    long long v30 = *v27;
    long long v64 = v27[1];
    long long v65 = v29;
    long long v63 = v30;
    long long v31 = v27[7];
    long long v33 = v27[4];
    long long v32 = v27[5];
    long long v69 = v27[6];
    long long v70 = v31;
    long long v67 = v33;
    long long v68 = v32;
    long long v34 = v27[11];
    long long v36 = v27[8];
    long long v35 = v27[9];
    long long v73 = v27[10];
    long long v74 = v34;
    long long v71 = v36;
    long long v72 = v35;
    long long v66 = v28;
    uint64_t v62 = v73;
    __int16 v21 = WORD4(v73);
    char v22 = BYTE10(v73);
    long long v60 = v35;
    long long v61 = v34;
    uint64_t v19 = v70;
    char v20 = BYTE8(v70);
    long long v58 = v69;
    long long v59 = v36;
    long long v56 = v28;
    long long v57 = v29;
    long long v54 = v68;
    long long v55 = v67;
    long long v52 = v64;
    long long v53 = v63;
    sub_260F32B24((uint64_t *)&v63);
LABEL_24:
    sub_260FE52F0();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_260FE5340();
    uint64_t v38 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v39 = v37 & ~v38;
    unint64_t v40 = v39 >> 6;
    if (((-1 << v39) & ~*(void *)(v11 + 8 * (v39 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v39) & ~*(void *)(v11 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v41 = 0;
    unint64_t v42 = (unint64_t)(63 - v38) >> 6;
    while (++v40 != v42 || (v41 & 1) == 0)
    {
      BOOL v43 = v40 == v42;
      if (v40 == v42) {
        unint64_t v40 = 0;
      }
      v41 |= v43;
      uint64_t v44 = *(void *)(v11 + 8 * v40);
      if (v44 != -1)
      {
        unint64_t v13 = __clz(__rbit64(~v44)) + (v40 << 6);
LABEL_7:
        LOBYTE(v63) = v22;
        *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        *(unsigned char *)(*(void *)(v7 + 48) + v13) = v17;
        uint64_t v14 = *(void *)(v7 + 56) + 192 * v13;
        *(_OWORD *)uint64_t v14 = v53;
        *(_OWORD *)(v14 + 16) = v52;
        *(_OWORD *)(v14 + 32) = v57;
        *(_OWORD *)(v14 + 48) = v56;
        *(_OWORD *)(v14 + 64) = v55;
        *(_OWORD *)(v14 + 80) = v54;
        *(_OWORD *)(v14 + 96) = v58;
        *(void *)(v14 + 112) = v19;
        *(unsigned char *)(v14 + 120) = v20;
        *(_OWORD *)(v14 + 128) = v59;
        *(_OWORD *)(v14 + 144) = v60;
        *(void *)(v14 + 160) = v62;
        *(_WORD *)(v14 + 168) = v21;
        *(unsigned char *)(v14 + 170) = v22;
        *(_OWORD *)(v14 + 176) = v61;
        ++*(void *)(v7 + 16);
        uint64_t v5 = v50;
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    JUMPOUT(0x260FC4060);
  }
  int64_t v23 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_41;
  }
  if (v23 >= v48)
  {
    swift_release();
    uint64_t v3 = v47;
    unint64_t v24 = v49;
    if (v51)
    {
LABEL_36:
      uint64_t v45 = 1 << *(unsigned char *)(v5 + 32);
      if (v45 >= 64) {
        bzero(v24, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v24 = -1 << v45;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v24 = v49;
    unint64_t v25 = v49[v23];
    ++v12;
    if (v25) {
      goto LABEL_22;
    }
    int64_t v12 = v23 + 1;
    if (v23 + 1 >= v48) {
      goto LABEL_33;
    }
    unint64_t v25 = v49[v12];
    if (v25) {
      goto LABEL_22;
    }
    int64_t v26 = v23 + 2;
    if (v26 < v48)
    {
      unint64_t v25 = v49[v26];
      if (!v25)
      {
        while (1)
        {
          int64_t v12 = v26 + 1;
          if (__OFADD__(v26, 1)) {
            goto LABEL_42;
          }
          if (v12 >= v48) {
            goto LABEL_33;
          }
          unint64_t v25 = v49[v12];
          ++v26;
          if (v25) {
            goto LABEL_22;
          }
        }
      }
      int64_t v12 = v26;
LABEL_22:
      unint64_t v10 = (v25 - 1) & v25;
      unint64_t v16 = __clz(__rbit64(v25)) + (v12 << 6);
      if (v51) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
LABEL_33:
    swift_release();
    uint64_t v3 = v47;
    if (v51) {
      goto LABEL_36;
    }
  }
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_260FC4088(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAB00);
  char v37 = a2;
  uint64_t v6 = sub_260FE4E70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    int64_t v23 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v17);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_260FE52F0();
    sub_260FE41D0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_260FE5340();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v7 + 48) + v14) = v22;
    unint64_t v15 = (void *)(*(void *)(v7 + 56) + 16 * v14);
    *unint64_t v15 = v25;
    v15[1] = v24;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

void *sub_260FC43EC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EAC00);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    int v16 = *(_DWORD *)(*(void *)(v2 + 56) + 4 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(_DWORD *)(*(void *)(v4 + 56) + 4 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_260FC457C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EABF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_260FC470C()
{
  return sub_260FC48E4(&qword_26A8EAB88);
}

void *sub_260FC4718()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A8EB320);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_260FE4E60();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v21 = v17[3];
    uint64_t v22 = 8 * v15;
    uint64_t v23 = *(void *)(*(void *)(v2 + 56) + v22);
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v24 = v19;
    v24[1] = v18;
    _OWORD v24[2] = v20;
    v24[3] = v21;
    *(void *)(*(void *)(v4 + 56) + v22) = v23;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_260FC48D8()
{
  return sub_260FC48E4(&qword_26A8EB318);
}

id sub_260FC48E4(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_260FE4E60();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}