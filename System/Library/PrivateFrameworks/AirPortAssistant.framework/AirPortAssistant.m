uint64_t sub_22683BF28(unsigned int a1, unsigned int a2, unsigned int a3, unint64_t a4, unsigned __int8 *a5, const char *a6, uint64_t a7)
{
  unsigned int v10;
  unsigned int v11;
  const char *v12;
  unint64_t v13;
  uint64_t i;
  uint64_t vars8;

  *(_OWORD *)a7 = 0u;
  *(_OWORD *)(a7 + 16) = 0u;
  *(_OWORD *)(a7 + 96) = 0u;
  *(_OWORD *)(a7 + 112) = 0u;
  *(_OWORD *)(a7 + 64) = 0u;
  *(_OWORD *)(a7 + 80) = 0u;
  *(_OWORD *)(a7 + 32) = 0u;
  *(_OWORD *)(a7 + 48) = 0u;
  *(void *)a7 = 0x100030070706361;
  *(_DWORD *)(a7 + 16) = bswap32(a4);
  *(_DWORD *)(a7 + 20) = bswap32(a1);
  v10 = bswap32(a2);
  v11 = bswap32(a3);
  if (a6) {
    v12 = a6;
  }
  else {
    v12 = "public";
  }
  *(_DWORD *)(a7 + 24) = v10;
  *(_DWORD *)(a7 + 28) = v11;
  strncpy((char *)(a7 + 48), v12, 0x20uLL);
  v13 = 0;
  for (i = 0; i != 32; ++i)
  {
    if (v13 > 0xF) {
      v13 = 0;
    }
    *(unsigned char *)(a7 + i + 48) ^= (i + 85) ^ byte_226912D2D[v13++];
  }

  return sub_22683C05C(a7, a4, a5);
}

uint64_t sub_22683C014(uint64_t result, uint64_t a2)
{
  if (result)
  {
    unint64_t v2 = 0;
    for (uint64_t i = 0; i != result; ++i)
    {
      if (v2 > 0xF) {
        unint64_t v2 = 0;
      }
      *(unsigned char *)(a2 + i) ^= (i + 85) ^ byte_226912D2D[v2++];
    }
  }
  return result;
}

uint64_t sub_22683C05C(uint64_t a1, unint64_t a2, unsigned __int8 *a3)
{
  if (a2 == 0xFFFFFFFF) {
    unint64_t v4 = 0;
  }
  else {
    unint64_t v4 = a2;
  }
  unsigned int v5 = sub_22683C0B8(1u, 0x1388uLL, a3, v4);
  *(_DWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 12) = bswap32(v5);
  uint64_t result = sub_22683C0B8(1u, 0x1388uLL, (unsigned __int8 *)a1, 0x80uLL);
  *(_DWORD *)(a1 + 8) = bswap32(result);
  return result;
}

uint64_t sub_22683C0B8(unsigned int a1, unint64_t a2, unsigned __int8 *a3, unint64_t a4)
{
  unint64_t v4 = 5552;
  if (a2) {
    unint64_t v4 = a2;
  }
  unsigned int v5 = (unsigned __int16)a1;
  for (unsigned int i = HIWORD(a1); a4; a4 -= v7)
  {
    if (a4 >= v4) {
      unint64_t v7 = v4;
    }
    else {
      unint64_t v7 = a4;
    }
    unint64_t v8 = v7;
    if (v7 >= 0x10)
    {
      do
      {
        int v9 = v5 + *a3;
        int v10 = v9 + i;
        int v11 = v9 + a3[1];
        int v12 = v10 + v11;
        int v13 = v11 + a3[2];
        int v14 = v12 + v13;
        int v15 = v13 + a3[3];
        int v16 = v14 + v15;
        int v17 = v15 + a3[4];
        int v18 = v16 + v17;
        int v19 = v17 + a3[5];
        int v20 = v18 + v19;
        int v21 = v19 + a3[6];
        int v22 = v20 + v21;
        int v23 = v21 + a3[7];
        int v24 = v22 + v23;
        int v25 = v23 + a3[8];
        int v26 = v24 + v25;
        int v27 = v25 + a3[9];
        int v28 = v26 + v27;
        int v29 = v27 + a3[10];
        int v30 = v28 + v29;
        int v31 = v29 + a3[11];
        int v32 = v30 + v31;
        int v33 = v31 + a3[12];
        int v34 = v32 + v33;
        int v35 = v33 + a3[13];
        int v36 = v34 + v35;
        int v37 = v35 + a3[14];
        int v38 = v36 + v37;
        unsigned int v5 = v37 + a3[15];
        unsigned int i = v38 + v5;
        a3 += 16;
        v8 -= 16;
      }
      while (v8 > 0xF);
    }
    unint64_t v39 = v8;
    v40 = a3;
    if (v8)
    {
      do
      {
        int v41 = *v40++;
        v5 += v41;
        i += v5;
        --v39;
      }
      while (v39);
      a3 += v8;
    }
    v5 %= 0xFFF1u;
    i %= 0xFFF1u;
  }
  return v5 | (i << 16);
}

BOOL sub_22683C20C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = 0;
  unsigned int v3 = sub_22683C0B8(1u, 0x1388uLL, (unsigned __int8 *)a1, 0x80uLL);
  *(_DWORD *)(a1 + 8) = v2;
  return v2 == bswap32(v3);
}

uint64_t sub_22683C258(int a1, uint64_t **a2)
{
  int v2 = 1651861868;
  unsigned int v3 = &qword_2269113F8;
  while (v2 != a1)
  {
    int v4 = *((_DWORD *)v3 + 3);
    unsigned int v3 = (uint64_t *)((char *)v3 + 12);
    int v2 = v4;
    if (!v4) {
      return 4294967291;
    }
  }
  uint64_t result = 0;
  *a2 = v3;
  return result;
}

uint64_t sub_22683C28C(uint64_t a1, unint64_t a2, int a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, int *a7, _DWORD *a8, void *a9, unint64_t *a10)
{
  unint64_t v10 = a2 - 36;
  if (a2 < 0x24) {
    return 4294967281;
  }
  if (strcmp((const char *)a1, "APPLE-FIRMWARE")) {
    return 4294967276;
  }
  if (a3)
  {
    unint64_t v20 = a2 - 4;
    unsigned int v21 = bswap32(*(_DWORD *)(a1 + a2 - 4));
    if (v21 != sub_22683C0B8(1u, 0x1388uLL, (unsigned __int8 *)a1, v20)) {
      return 4294967290;
    }
  }
  int v22 = *(unsigned __int8 *)(a1 + 15);
  int v23 = *(unsigned __int8 *)(a1 + 24);
  int v24 = *(unsigned __int8 *)(a1 + 25);
  int v25 = *(unsigned __int8 *)(a1 + 26);
  if (a4) {
    *a4 = bswap32(*(_DWORD *)(a1 + 16));
  }
  if (a5) {
    *a5 = bswap32(*(_DWORD *)(a1 + 20));
  }
  if (a6) {
    *a6 = *(unsigned __int8 *)(a1 + 27);
  }
  if (a7) {
    *a7 = (v22 << 24) | (v23 << 16) | (v24 << 8) | v25;
  }
  if (a8) {
    *a8 = bswap32(*(_DWORD *)(a1 + 28));
  }
  if (a9) {
    *a9 = a1 + 32;
  }
  uint64_t result = 0;
  if (a10) {
    *a10 = v10;
  }
  return result;
}

uint64_t sub_22683C3C4(uint64_t a1, unint64_t a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, void *a6, unint64_t *a7)
{
  return sub_22683C28C(a1, a2, 1, a3, a4, a5, 0, 0, a6, a7);
}

uint64_t sub_22683C404(uint64_t a1, unint64_t a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, int *a6, _DWORD *a7, void *a8, unint64_t *a9)
{
  return sub_22683C28C(a1, a2, 1, a3, a4, a5, a6, a7, a8, a9);
}

unsigned char *sub_22683C448(int a1, unsigned char *a2)
{
  *a2 = HIBYTE(a1);
  a2[1] = BYTE2(a1);
  a2[2] = BYTE1(a1);
  a2[3] = a1;
  a2[4] = 0;
  return a2;
}

uint64_t sub_22683C470(char *__s, size_t a2, _DWORD *a3)
{
  if (a2 == -1) {
    a2 = strlen(__s);
  }
  if (a2 != 4) {
    return 4294960553;
  }
  uint64_t result = 0;
  *a3 = bswap32(*(_DWORD *)__s);
  return result;
}

uint64_t sub_22683C4C8(uint64_t result)
{
  if (result)
  {
    int v1 = 1;
    int v2 = &dword_2647B80C8;
    while (v1 != result)
    {
      int v3 = *v2;
      v2 += 12;
      int v1 = v3;
      if (!v3) {
        return 0;
      }
    }
    return *((unsigned __int8 *)v2 - 32);
  }
  return result;
}

uint64_t sub_22683C4F8(uint64_t result)
{
  if (result)
  {
    int v1 = 1;
    int v2 = &dword_2647B80C8;
    while (v1 != result)
    {
      int v3 = *v2;
      v2 += 12;
      int v1 = v3;
      if (!v3) {
        return 0;
      }
    }
    return *(v2 - 11);
  }
  return result;
}

BOOL sub_22683C528(int a1)
{
  int v2 = 1651861868;
  int v3 = "SnyD\r";
  while (v2 != a1)
  {
    int v4 = *(_DWORD *)v3;
    v3 += 12;
    int v2 = v4;
    if (!v4) {
      goto LABEL_6;
    }
  }
  if ((*(v3 - 4) & 0x5C) != 0) {
    return 0;
  }
LABEL_6:
  BOOL result = 1;
  if (a1 > 1818449522)
  {
    if (a1 > 1918980215)
    {
      if (a1 > 1937331018)
      {
        if (a1 == 1937331019 || a1 == 1937331540) {
          return 0;
        }
        int v6 = 2004050793;
      }
      else
      {
        if (a1 == 1918980216 || a1 == 1937006964) {
          return 0;
        }
        int v6 = 1937327724;
      }
    }
    else
    {
      if (a1 <= 1835626066)
      {
        if (a1 != 1818449523 && a1 != 1835090284)
        {
          int v6 = 1835094130;
          goto LABEL_34;
        }
        return 0;
      }
      if (a1 == 1835626067 || a1 == 1885423186) {
        return 0;
      }
      int v6 = 1886547529;
    }
LABEL_34:
    if (a1 != v6) {
      return result;
    }
    return 0;
  }
  if (a1 > 1349676901)
  {
    if (a1 > 1668703601)
    {
      if (a1 == 1668703602 || a1 == 1717920116) {
        return 0;
      }
      int v6 = 1769161027;
    }
    else
    {
      if (a1 == 1349676902 || a1 == 1635076676) {
        return 0;
      }
      int v6 = 1668573549;
    }
    goto LABEL_34;
  }
  if (a1 > 1148808786)
  {
    if (a1 == 1148808787 || a1 == 1298223988) {
      return 0;
    }
    int v6 = 1346918739;
    goto LABEL_34;
  }
  return a1 != 1094800672 && a1 != 1095783250;
}

uint64_t sub_22683C738(int a1, int a2, void *a3)
{
  uint64_t result = 4294960591;
  if (a1 == 2 && a3)
  {
    unint64_t v7 = malloc_type_calloc(1uLL, 0x168uLL, 0x10300400F1396E7uLL);
    if (v7)
    {
      unint64_t v8 = v7;
      v7[10] = 5;
      v7[58] = a2 | 0x20;
      *((unsigned char *)v7 + 353) = 0;
      sub_2268626E8((uint64_t)(v7 + 44), 0, 0, -1);
      uint64_t result = 0;
      *a3 = v8;
    }
    else
    {
      return 4294960568;
    }
  }
  return result;
}

uint64_t sub_22683C7D8(void *a1)
{
  if (!a1) {
    return 4294960591;
  }
  int v2 = (void *)*a1;
  if (v2)
  {
    sub_22686D8A8(v2);
    *a1 = 0;
  }
  sub_22683FFFC((uint64_t)(a1 + 30));
  sub_22683FFFC((uint64_t)(a1 + 37));
  sub_226862700((uint64_t)(a1 + 22));
  int v3 = (void *)a1[2];
  if (v3)
  {
    free(v3);
    a1[2] = 0;
  }
  int v4 = (void *)a1[3];
  if (v4)
  {
    free(v4);
    a1[3] = 0;
  }
  unsigned int v5 = (void *)a1[4];
  if (v5) {
    free(v5);
  }
  a1[44] = 0;
  *((_OWORD *)a1 + 20) = 0u;
  *((_OWORD *)a1 + 21) = 0u;
  *((_OWORD *)a1 + 18) = 0u;
  *((_OWORD *)a1 + 19) = 0u;
  *((_OWORD *)a1 + 16) = 0u;
  *((_OWORD *)a1 + 17) = 0u;
  *((_OWORD *)a1 + 14) = 0u;
  *((_OWORD *)a1 + 15) = 0u;
  *((_OWORD *)a1 + 12) = 0u;
  *((_OWORD *)a1 + 13) = 0u;
  *((_OWORD *)a1 + 10) = 0u;
  *((_OWORD *)a1 + 11) = 0u;
  *((_OWORD *)a1 + 8) = 0u;
  *((_OWORD *)a1 + 9) = 0u;
  *((_OWORD *)a1 + 6) = 0u;
  *((_OWORD *)a1 + 7) = 0u;
  *((_OWORD *)a1 + 4) = 0u;
  *((_OWORD *)a1 + 5) = 0u;
  *((_OWORD *)a1 + 2) = 0u;
  *((_OWORD *)a1 + 3) = 0u;
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  free(a1);
  return 0;
}

uint64_t sub_22683C89C(uint64_t a1)
{
  if (!a1) {
    return 4294960591;
  }
  *(unsigned char *)(a1 + 8) = 1;
  uint64_t v1 = *(void *)a1;
  if (!v1) {
    return 0;
  }
  uint64_t result = sub_22686D9CC(v1);
  if (!result) {
    return 0;
  }
  return result;
}

uint64_t sub_22683C8DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 232);
}

uint64_t sub_22683C8E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 232) = a2;
  return result;
}

uint64_t sub_22683C8EC(uint64_t a1, char *a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a1) {
    return 4294960591;
  }
  if (*(unsigned char *)(a1 + 8)) {
    return 4294960573;
  }
  if (*(unsigned char *)(a1 + 45)) {
    return 0;
  }
  __int16 v10 = a4;
  uint64_t v11 = (uint64_t)a3;
  int v12 = a2;
  if (!a2 || !*a2)
  {
    if (*(void *)(a1 + 16)) {
      int v12 = *(char **)(a1 + 16);
    }
    if (!v12) {
      return 4294960591;
    }
  }
  if (!a3 || !*a3)
  {
    if (*(void *)(a1 + 32)) {
      uint64_t v11 = *(void *)(a1 + 32);
    }
    if (!v11) {
      return 4294960591;
    }
  }
  int v13 = *(_DWORD *)(a1 + 232);
  if (*(unsigned char *)(a1 + 44) || (uint64_t v9 = sub_22683CBD4((_DWORD **)a1, v12, (uint64_t)a3, a4, a5, a6, a7, a8), !v9))
  {
    __int16 v14 = v13 | v10;
    if ((v14 & 0x800) != 0) {
      goto LABEL_35;
    }
    if (*(unsigned char *)(a1 + 352)) {
      goto LABEL_35;
    }
    uint64_t v16 = sub_22683CDE0(a1, v11, (uint64_t)a3, a4, a5, a6, a7, a8);
    if (!v16) {
      goto LABEL_35;
    }
    uint64_t v9 = v16;
    if (v16 == -6723) {
      return v9;
    }
    if (v16 == -6754)
    {
      if (dword_268145D08 <= 3000 && (dword_268145D08 != -1 || sub_226865630((uint64_t)&dword_268145D08, 0xBB8u))) {
        sub_226865EB4((uint64_t)&dword_268145D08, (uint64_t)"OSStatus ACPClientSetUpConnection(ACPClientRef, const char *, const char *, ACPClientOptions)", 3000, (uint64_t)"### bad password for %s/%##a\n", a5, a6, a7, a8, (uint64_t)v12);
      }
      return 4294967280;
    }
    if ((v14 & 0x400) != 0 || *(void *)(a1 + 24))
    {
      if (dword_268145D08 <= 3000 && (dword_268145D08 != -1 || sub_226865630((uint64_t)&dword_268145D08, 0xBB8u))) {
        sub_226865EB4((uint64_t)&dword_268145D08, (uint64_t)"OSStatus ACPClientSetUpConnection(ACPClientRef, const char *, const char *, ACPClientOptions)", 3000, (uint64_t)"### secure auth required, but failed: %#m\n", a5, a6, a7, a8, v9);
      }
      if (v9 == -16 || v9 == -7) {
        return 4294960528;
      }
      else {
        return v9;
      }
    }
    if (dword_268145D08 <= 3000 && (dword_268145D08 != -1 || sub_226865630((uint64_t)&dword_268145D08, 0xBB8u))) {
      sub_226865EB4((uint64_t)&dword_268145D08, (uint64_t)"OSStatus ACPClientSetUpConnection(ACPClientRef, const char *, const char *, ACPClientOptions)", 3000, (uint64_t)"### secure auth failed with %s/%##a: %#m\n", a5, a6, a7, a8, (uint64_t)v12);
    }
    uint64_t v9 = sub_22683CBD4((_DWORD **)a1, v12, (uint64_t)a3, a4, a5, a6, a7, a8);
    if (!v9)
    {
LABEL_35:
      if (*(unsigned char *)(a1 + 352) || *(unsigned char *)(a1 + 353) || (v14 & 0x260) == 0 || (v14 & 0x80) != 0)
      {
LABEL_21:
        uint64_t v9 = 0;
        *(unsigned char *)(a1 + 45) = 1;
        return v9;
      }
      if ((v14 & 0x40) == 0)
      {
        uint64_t v9 = sub_22683CBD4((_DWORD **)a1, v12, (uint64_t)a3, a4, a5, a6, a7, a8);
        if (v9) {
          return v9;
        }
        goto LABEL_21;
      }
      if (dword_268145D08 <= 3000 && (dword_268145D08 != -1 || sub_226865630((uint64_t)&dword_268145D08, 0xBB8u))) {
        sub_226865EB4((uint64_t)&dword_268145D08, (uint64_t)"OSStatus ACPClientSetUpConnection(ACPClientRef, const char *, const char *, ACPClientOptions)", 3000, (uint64_t)"### security required, but not supported by the server\n", a5, a6, a7, a8, v18);
      }
      return 4294960528;
    }
  }
  return v9;
}

uint64_t sub_22683CBD4(_DWORD **a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268145D08 <= 3000 && (dword_268145D08 != -1 || sub_226865630((uint64_t)&dword_268145D08, 0xBB8u))) {
    sub_226865EB4((uint64_t)&dword_268145D08, (uint64_t)"OSStatus __ACPClientSetUpConnection_Connect(ACPClientRef, const char *)", 3000, (uint64_t)"connecting to %s\n", a5, a6, a7, a8, (uint64_t)a2);
  }
  sub_22683D35C((uint64_t)a1);
  uint64_t v10 = sub_22686D1A0(a1);
  if (!v10)
  {
    uint64_t v12 = sub_22686DA5C((uint64_t)*a1, a2, 5009, *((_DWORD *)a1 + 10));
    uint64_t v10 = v12;
    if (v12 != -6723)
    {
      if (v12)
      {
        if (dword_268145D08 <= 3000 && (dword_268145D08 != -1 || sub_226865630((uint64_t)&dword_268145D08, 0xBB8u))) {
          sub_226865EB4((uint64_t)&dword_268145D08, (uint64_t)"OSStatus __ACPClientSetUpConnection_Connect(ACPClientRef, const char *)", 3000, (uint64_t)"### failed to connect to %s: %#m\n", v13, v14, v15, v16, (uint64_t)a2);
        }
      }
      else
      {
        socklen_t v24 = 0;
        *((unsigned char *)a1 + 44) = 1;
        int v17 = sub_22686D9A4(*a1);
        int v23 = 1;
        if (setsockopt(v17, 6, 1, &v23, 4u) && *__error()) {
          __error();
        }
        *((_OWORD *)a1 + 3) = 0u;
        uint64_t v18 = a1 + 6;
        *((_OWORD *)v18 + 6) = 0u;
        *((_OWORD *)v18 + 7) = 0u;
        *((_OWORD *)v18 + 4) = 0u;
        *((_OWORD *)v18 + 5) = 0u;
        *((_OWORD *)v18 + 2) = 0u;
        *((_OWORD *)v18 + 3) = 0u;
        *((_OWORD *)v18 + 1) = 0u;
        socklen_t v24 = 128;
        if (!getpeername(v17, (sockaddr *)v18, &v24)) {
          goto LABEL_27;
        }
        if (!*__error()) {
          return 4294960596;
        }
        uint64_t v10 = *__error();
        if (!v10)
        {
LABEL_27:
          if (dword_268145D08 <= 3000 && (dword_268145D08 != -1 || sub_226865630((uint64_t)&dword_268145D08, 0xBB8u))) {
            sub_226865EB4((uint64_t)&dword_268145D08, (uint64_t)"OSStatus __ACPClientSetUpConnection_Connect(ACPClientRef, const char *)", 3000, (uint64_t)"connected  to %s/%##a\n", v19, v20, v21, v22, (uint64_t)a2);
          }
          return 0;
        }
      }
    }
  }
  return v10;
}

uint64_t sub_22683CDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  CFTypeRef v44 = 0;
  CFTypeRef cf = 0;
  uint64_t v9 = sub_22685FC7C(0, &cf, (uint64_t)"{%kO=%i%kO=%s}", a4, a5, a6, a7, a8, @"state");
  if (v9)
  {
    uint64_t v10 = v9;
LABEL_4:
    uint64_t v11 = 0;
    goto LABEL_5;
  }
  uint64_t v10 = sub_22683D41C(a1, 0x1Au, (const __CFString *)cf, &v44);
  CFRelease(cf);
  CFTypeRef cf = 0;
  if (v10) {
    goto LABEL_4;
  }
  CFTypeID v13 = CFGetTypeID(v44);
  if (v13 != CFDictionaryGetTypeID()) {
    goto LABEL_24;
  }
  CFDataRef Value = (const __CFData *)CFDictionaryGetValue((CFDictionaryRef)v44, @"modulus");
  if (!Value) {
    goto LABEL_26;
  }
  CFDataRef v15 = Value;
  CFTypeID v16 = CFGetTypeID(Value);
  if (v16 != CFDataGetTypeID())
  {
LABEL_24:
    uint64_t v11 = 0;
    goto LABEL_25;
  }
  CFDataRef v17 = (const __CFData *)CFDictionaryGetValue((CFDictionaryRef)v44, @"generator");
  if (!v17)
  {
LABEL_26:
    uint64_t v11 = 0;
LABEL_27:
    uint64_t v10 = 4294960584;
    goto LABEL_5;
  }
  CFDataRef v18 = v17;
  CFTypeID v19 = CFGetTypeID(v17);
  if (v19 != CFDataGetTypeID()) {
    goto LABEL_24;
  }
  CFDataRef v20 = (const __CFData *)CFDictionaryGetValue((CFDictionaryRef)v44, @"salt");
  if (!v20) {
    goto LABEL_26;
  }
  CFDataRef v21 = v20;
  CFTypeID v22 = CFGetTypeID(v20);
  if (v22 != CFDataGetTypeID()) {
    goto LABEL_24;
  }
  CFDataRef v23 = (const __CFData *)CFDictionaryGetValue((CFDictionaryRef)v44, @"publicKey");
  if (!v23) {
    goto LABEL_26;
  }
  CFDataRef v24 = v23;
  CFTypeID v25 = CFGetTypeID(v23);
  if (v25 != CFDataGetTypeID()) {
    goto LABEL_24;
  }
  SRP6a_client_method();
  uint64_t v11 = SRP_new();
  if (!v11 || SRP_set_username()) {
    goto LABEL_23;
  }
  CFDataGetBytePtr(v15);
  CFDataGetLength(v15);
  CFDataGetBytePtr(v18);
  CFDataGetLength(v18);
  CFDataGetBytePtr(v21);
  CFDataGetLength(v21);
  if (SRP_set_params()) {
    goto LABEL_29;
  }
  if (SRP_gen_pub() || SRP_set_auth_password()) {
    goto LABEL_23;
  }
  CFDataGetBytePtr(v24);
  CFDataGetLength(v24);
  if (SRP_compute_key())
  {
LABEL_29:
    uint64_t v10 = 4294960559;
    goto LABEL_5;
  }
  if (SRP_respond())
  {
LABEL_23:
    uint64_t v10 = 4294960534;
    goto LABEL_5;
  }
  uint64_t v26 = sub_2268FF01C((uint64_t)&v46, 0x10uLL);
  if (v26) {
    goto LABEL_36;
  }
  CFRelease(v44);
  CFTypeRef v44 = 0;
  uint64_t v26 = sub_22685FC7C(0, &cf, (uint64_t)"{%kO=%i%kO=%D%kO=%D%kO=%D}", v27, v28, v29, v30, v31, @"state");
  if (v26) {
    goto LABEL_36;
  }
  uint64_t v10 = sub_22683D41C(a1, 0x1Au, (const __CFString *)cf, &v44);
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (v10) {
    goto LABEL_5;
  }
  CFTypeID v32 = CFGetTypeID(v44);
  if (v32 != CFDictionaryGetTypeID())
  {
LABEL_25:
    uint64_t v10 = 4294960540;
    goto LABEL_5;
  }
  CFDataRef v33 = (const __CFData *)CFDictionaryGetValue((CFDictionaryRef)v44, @"response");
  if (!v33) {
    goto LABEL_27;
  }
  CFDataRef v34 = v33;
  CFTypeID v35 = CFGetTypeID(v33);
  if (v35 != CFDataGetTypeID()) {
    goto LABEL_25;
  }
  CFDataRef v36 = (const __CFData *)CFDictionaryGetValue((CFDictionaryRef)v44, @"iv");
  if (!v36) {
    goto LABEL_27;
  }
  CFDataRef v37 = v36;
  CFTypeID v38 = CFGetTypeID(v36);
  if (v38 != CFDataGetTypeID()) {
    goto LABEL_25;
  }
  if (CFDataGetLength(v37) == 16)
  {
    CFDataGetBytePtr(v34);
    CFDataGetLength(v34);
    if (SRP_verify())
    {
      uint64_t v10 = 4294960542;
    }
    else
    {
      uint64_t v26 = CCKeyDerivationPBKDF(2u, MEMORY[0], MEMORY[8], byte_226912D0C, 0x10uLL, 1u, 5u, derivedKey, 0x10uLL);
      if (v26
        || (sub_22683FDD4((CCCryptorRef *)(a1 + 240), derivedKey, &v46),
            uint64_t v26 = CCKeyDerivationPBKDF(2u, MEMORY[0], MEMORY[8], byte_226912D1C, 0x10uLL, 1u, 7u, derivedKey, 0x10uLL),
            v26))
      {
LABEL_36:
        uint64_t v10 = v26;
        goto LABEL_5;
      }
      BytePtr = (__n128 *)CFDataGetBytePtr(v37);
      sub_22683FDD4((CCCryptorRef *)(a1 + 296), derivedKey, BytePtr);
      *(unsigned char *)(a1 + 352) = 1;
      if (dword_268145D08 <= 3000 && (dword_268145D08 != -1 || sub_226865630((uint64_t)&dword_268145D08, 0xBB8u))) {
        sub_226865EB4((uint64_t)&dword_268145D08, (uint64_t)"OSStatus ACPClientAuthenticate(ACPClientRef, const char *)", 3000, (uint64_t)"*** authenticated server %##a @ %N\n", v40, v41, v42, v43, a1 + 48);
      }
      uint64_t v10 = 0;
    }
  }
  else
  {
    uint64_t v10 = 4294960553;
  }
LABEL_5:
  if (v11) {
    SRP_free();
  }
  if (v44) {
    CFRelease(v44);
  }
  if (cf) {
    CFRelease(cf);
  }
  return v10;
}

uint64_t sub_22683D35C(uint64_t a1)
{
  if (!a1) {
    return 4294960591;
  }
  int v2 = *(void **)a1;
  if (v2)
  {
    sub_22686D8A8(v2);
    *(void *)a1 = 0;
  }
  int v3 = *(unsigned __int8 *)(a1 + 44);
  *(_WORD *)(a1 + 44) = 0;
  *(_WORD *)(a1 + 352) = 0;
  sub_22683FFFC(a1 + 240);
  sub_22683FFFC(a1 + 296);
  uint64_t result = 0;
  if (v3)
  {
    if (dword_268145D08 <= 800)
    {
      if (dword_268145D08 != -1 || (uint64_t result = sub_226865630((uint64_t)&dword_268145D08, 0x320u), result))
      {
        sub_226865EB4((uint64_t)&dword_268145D08, (uint64_t)"ACPStatus ACPClientTearDownConnection(ACPClientRef, ACPClientOptions)", 800, (uint64_t)"connection torn down: %#m\n", v4, v5, v6, v7, 0);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_22683D41C(uint64_t a1, unsigned int a2, const __CFString *a3, CFTypeRef *a4)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  CFDataRef theData = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  *(_OWORD *)size = 0u;
  uint64_t v7 = sub_22685EFD0(0, a3, (CFTypeRef *)&theData);
  if (!v7)
  {
    CFIndex Length = CFDataGetLength(theData);
    BytePtr = (unsigned __int8 *)CFDataGetBytePtr(theData);
    uint64_t v7 = sub_22683DC04(a1, 4u, "", a2, Length, BytePtr);
    CFRelease(theData);
    if (!v7)
    {
      uint64_t v7 = sub_22683D920(a1, v10, 30000, (char *)&v16);
      if (!v7)
      {
        if (LODWORD(size[0]))
        {
          uint64_t v12 = (char *)malloc_type_malloc(LODWORD(size[0]), 0x8C4EB8C4uLL);
          if (v12)
          {
            uint64_t v14 = v12;
            uint64_t v7 = sub_22683E5C4(a1, v13, 15000, LODWORD(size[0]), LODWORD(size[0]), v12, 0);
            if (!v7) {
              uint64_t v7 = sub_22685F568(0, (uint64_t)v14, LODWORD(size[0]), a4);
            }
            free(v14);
          }
          else
          {
            return 4294960568;
          }
        }
        else
        {
          return 4294960553;
        }
      }
    }
  }
  return v7;
}

uint64_t sub_22683D588(uint64_t a1, char a2, uint64_t a3, char *a4, char *a5, uint64_t a6, char **a7, void *a8)
{
  uint64_t v8 = 4294960591;
  if (a4)
  {
    if (a5)
    {
      unsigned int v12 = a6;
      int v16 = *(_DWORD *)(a1 + 232);
      uint64_t v8 = sub_22683C8EC(a1, a4, a5, 0, (uint64_t)a5, a6, (uint64_t)a7, (uint64_t)a8);
      if (!v8)
      {
        char v17 = v16 | a2;
        uint64_t v36 = 0;
        if (*(unsigned char *)(a1 + 352)) {
          long long v18 = "";
        }
        else {
          long long v18 = a5;
        }
        int8x8_t v35 = (int8x8_t)v12;
        uint64_t v8 = sub_22683D830(a1, v17 & 0xC, v18, 1, &v35);
        if (!v8)
        {
          uint64_t v8 = sub_22683D920(a1, v19, a3, 0);
          if (!v8)
          {
            LODWORD(v36) = 0;
            int8x8_t v35 = 0;
            uint64_t v8 = sub_22683DA24(a1, v20, a3, &v35);
            if (!v8)
            {
              uint64_t v26 = 0;
              while (1)
              {
                uint64_t v27 = v35.u32[0];
                if (!v35.i32[0] || (v35.i8[4] & 1) != 0)
                {
                  if (v36 != 4)
                  {
                    if (dword_268145D08 <= 8000)
                    {
                      if (dword_268145D08 != -1) {
                        goto LABEL_33;
                      }
                      if (sub_226865630((uint64_t)&dword_268145D08, 0x1F40u))
                      {
                        uint64_t v27 = v35.u32[0];
LABEL_33:
                        sub_226865EB4((uint64_t)&dword_268145D08, (uint64_t)"ACPStatus ACPClientGetProperty(ACPClientRef, ACPClientOptions, ACPDuration, const char *, const char *, ACPPropertyCode, void *, size_t *)", 8000, (uint64_t)"bad property size (code='%C', expected=%u, actual=%u)\n", v22, v23, v24, v25, v27);
                      }
                    }
                    uint64_t v8 = 4294960553;
                    goto LABEL_35;
                  }
                  uint64_t v32 = sub_22683E5C4(a1, v21, a3, 4, 4, (char *)&v36 + 4, 0);
                  if (v32) {
                    goto LABEL_28;
                  }
                  unsigned int v33 = bswap32(HIDWORD(v36));
                  HIDWORD(v36) = v33;
                  if (v35.i8[4]) {
                    uint64_t v8 = v33;
                  }
                  else {
                    uint64_t v8 = v8;
                  }
                  if (!v35.i32[0]) {
                    goto LABEL_35;
                  }
                }
                else
                {
                  uint64_t v28 = (char *)malloc_type_malloc((v36 + 1), 0x8B6EECACuLL);
                  if (!v28)
                  {
                    uint64_t v8 = 4294967293;
                    if ((v17 & 4) == 0) {
                      goto LABEL_41;
                    }
                    goto LABEL_38;
                  }
                  uint64_t v26 = v28;
                  uint64_t v30 = sub_22683E5C4(a1, v29, a3, v36, v36, v28, 0);
                  if (v30)
                  {
                    uint64_t v8 = v30;
                    goto LABEL_36;
                  }
                  v26[v36] = 0;
                  if ((v35.i8[4] & 2) != 0) {
                    sub_22683C014(v36, (uint64_t)v26);
                  }
                  if (a7)
                  {
                    *a7 = v26;
                    uint64_t v26 = 0;
                  }
                  if (a8) {
                    *a8 = v36;
                  }
                }
                LODWORD(v36) = 0;
                int8x8_t v35 = 0;
                uint64_t v32 = sub_22683DA24(a1, v31, a3, &v35);
                if (v32)
                {
LABEL_28:
                  uint64_t v8 = v32;
LABEL_35:
                  if (!v26) {
                    break;
                  }
LABEL_36:
                  free(v26);
                  break;
                }
              }
            }
          }
        }
        if ((v17 & 4) == 0) {
          goto LABEL_41;
        }
LABEL_38:
        if (v8 == 32 || v8 == 54 || v8 == -6753) {
LABEL_41:
        }
          sub_22683D35C(a1);
      }
    }
  }
  return v8;
}

uint64_t sub_22683D830(uint64_t a1, char a2, const char *a3, uint64_t a4, const void *a5)
{
  if (!a3) {
    return 4294960591;
  }
  uint64_t v6 = a4;
  if (*(unsigned char *)(a1 + 352)) {
    uint64_t v9 = "";
  }
  else {
    uint64_t v9 = a3;
  }
  size_t v10 = 12 * a4;
  uint64_t v11 = (unsigned __int8 *)malloc_type_malloc(12 * a4, 0x48148995uLL);
  if (!v11) {
    return 4294967293;
  }
  unsigned int v12 = v11;
  memcpy(v11, a5, v10);
  if (v6)
  {
    uint64_t v13 = (int8x8_t *)v12;
    do
    {
      *uint64_t v13 = vrev32_s8(*v13);
      v13[1].i32[0] = bswap32(v13[1].u32[0]);
      uint64_t v13 = (int8x8_t *)((char *)v13 + 12);
      --v6;
    }
    while (v6);
  }
  uint64_t v14 = sub_22683DC04(a1, a2 & 0xC, v9, 0x14u, v10, v12);
  free(v12);
  return v14;
}

uint64_t sub_22683D920(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  if (!a1) {
    return 4294960591;
  }
  memset(&v11[2], 0, 96);
  if (a4) {
    uint64_t v5 = a4;
  }
  else {
    uint64_t v5 = (char *)v11;
  }
  memset(v11, 0, 32);
  uint64_t result = sub_22683E5C4(a1, a2, a3, 128, 128, v5, 0);
  if (!result)
  {
    if (sub_22683C20C((uint64_t)v5))
    {
      *(_DWORD *)uint64_t v5 = bswap32(*(_DWORD *)v5);
      uint64_t v7 = (unsigned int *)v11;
      if (a4) {
        uint64_t v7 = (unsigned int *)a4;
      }
      unsigned int v8 = bswap32(v7[2]);
      v7[1] = bswap32(v7[1]);
      v7[2] = v8;
      unsigned int v9 = bswap32(v7[4]);
      v7[3] = bswap32(v7[3]);
      v7[4] = v9;
      unsigned int v10 = bswap32(v7[6]);
      v7[5] = bswap32(v7[5]);
      v7[6] = v10;
      uint64_t result = bswap32(v7[8]);
      v7[7] = bswap32(v7[7]);
      v7[8] = result;
    }
    else
    {
      return 4294967290;
    }
  }
  return result;
}

uint64_t sub_22683DA24(uint64_t a1, uint64_t a2, uint64_t a3, int8x8_t *a4)
{
  if (!a4) {
    return 4294960591;
  }
  uint64_t result = sub_22683E5C4(a1, a2, a3, 12, 12, (char *)a4, 0);
  if (!result)
  {
    *a4 = vrev32_s8(*a4);
    a4[1].i32[0] = bswap32(a4[1].u32[0]);
  }
  return result;
}

uint64_t sub_22683DA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  return sub_22683E5C4(a1, a2, a3, a4, a4, a5, 0);
}

uint64_t sub_22683DA94(uint64_t a1, char a2, uint64_t a3, char *a4, char *a5, uint64_t a6, char *a7, uint64_t a8)
{
  uint64_t v8 = 4294960591;
  if (a4)
  {
    if (a5)
    {
      int v10 = a8;
      unsigned int v12 = a6;
      uint64_t v8 = sub_22683C8EC(a1, a4, a5, 0, (uint64_t)a5, a6, (uint64_t)a7, a8);
      if (!v8)
      {
        int v25 = 0;
        uint64_t v23 = 0;
        uint64_t v24 = 0;
        int8x8_t v22 = 0;
        if (*(unsigned char *)(a1 + 352)) {
          int v16 = "";
        }
        else {
          int v16 = a5;
        }
        uint64_t v8 = sub_22683DC04(a1, a2 & 0xC, v16, 0x15u, 0xFFFFFFFFuLL, 0);
        if (!v8)
        {
          uint64_t v8 = sub_22683D920(a1, v17, a3, 0);
          if (!v8)
          {
            uint64_t v24 = v12;
            int v25 = v10;
            uint64_t v8 = sub_22683DD28(a1, 0, (unsigned int *)&v24, a7);
            if (!v8)
            {
              uint64_t v8 = sub_22683DDD8(a1, 0, 0);
              if (!v8)
              {
                while (1)
                {
                  uint64_t v20 = sub_22683DE5C(a1, v18, a3, &v22);
                  if (v20) {
                    break;
                  }
                  if (v8) {
                    BOOL v19 = 1;
                  }
                  else {
                    BOOL v19 = HIDWORD(v23) == 0;
                  }
                  if (v19) {
                    uint64_t v8 = v8;
                  }
                  else {
                    uint64_t v8 = HIDWORD(v23);
                  }
                  if (!v22.i32[0]) {
                    goto LABEL_21;
                  }
                }
                uint64_t v8 = v20;
              }
            }
          }
        }
LABEL_21:
        if ((a2 & 4) == 0 || v8 == 32 || v8 == 54 || v8 == -6753) {
          sub_22683D35C(a1);
        }
      }
    }
  }
  return v8;
}

uint64_t sub_22683DC04(uint64_t a1, unsigned int a2, const char *a3, unsigned int a4, unint64_t a5, unsigned __int8 *a6)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t result = 4294960591;
  if (a1 && a3)
  {
    char v10 = a2;
    if (*(unsigned char *)(a1 + 352)) {
      uint64_t v11 = "";
    }
    else {
      uint64_t v11 = a3;
    }
    if (a6 || a5 == 0xFFFFFFFF || !a5)
    {
      memset(v12, 0, sizeof(v12));
      sub_22683BF28(a2 & 4 | (32 * ((a2 >> 3) & 1)), 0, a4, a5, a6, v11, (uint64_t)v12);
      uint64_t result = sub_22683E4D8(a1, v10, 0x7FFFFFFF, 0x80uLL, (char *)v12);
      if (!result && a5 && a5 != 0xFFFFFFFF) {
        return sub_22683E4D8(a1, v10, 0x7FFFFFFF, a5, (char *)a6);
      }
    }
    else
    {
      return 4294960553;
    }
  }
  return result;
}

uint64_t sub_22683DD28(uint64_t a1, char a2, unsigned int *a3, char *a4)
{
  uint64_t result = 4294960591;
  if (a1)
  {
    if (a3)
    {
      unsigned int v9 = a3[2];
      if (a4 || !v9)
      {
        unsigned int v10 = bswap32(a3[1] & 0xFFFFFFFD);
        v12[0] = bswap32(*a3);
        v12[1] = v10;
        v12[2] = bswap32(v9);
        uint64_t result = sub_22683E4D8(a1, a2, 0x7FFFFFFF, 0xCuLL, (char *)v12);
        if (!result)
        {
          size_t v11 = a3[2];
          if (v11) {
            return sub_22683E4D8(a1, a2, 0x7FFFFFFF, v11, a4);
          }
          else {
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22683DDD8(uint64_t a1, char a2, unsigned int a3)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t v6 = 0;
  int v7 = 0x4000000;
  unsigned int v8 = bswap32(a3);
  uint64_t result = sub_22683E4D8(a1, a2, 0x7FFFFFFF, 0xCuLL, (char *)&v6);
  if (!result) {
    return sub_22683E4D8(a1, a2, 0x7FFFFFFF, 4uLL, (char *)&v8);
  }
  return result;
}

uint64_t sub_22683DE5C(uint64_t a1, uint64_t a2, uint64_t a3, int8x8_t *a4)
{
  if (!a4) {
    return 4294960591;
  }
  uint64_t result = sub_22683E5C4(a1, a2, a3, 12, 12, (char *)a4, 0);
  if (!result)
  {
    *a4 = vrev32_s8(*a4);
    unsigned int v9 = a4[1].u32[0];
    a4[1].i32[0] = bswap32(v9);
    if (v9 == 0x4000000)
    {
      unsigned int v10 = (char *)&a4[1] + 4;
      uint64_t result = sub_22683E5C4(a1, v8, a3, 4, 4, v10, 0);
      if (!result)
      {
        v11.i32[0] = *(_DWORD *)v10;
        int16x8_t v12 = (int16x8_t)vmovl_u8(v11);
        *(int16x4_t *)v12.i8 = vrev64_s16(*(int16x4_t *)v12.i8);
        *(_DWORD *)unsigned int v10 = vmovn_s16(v12).u32[0];
      }
    }
    else
    {
      return 4294960553;
    }
  }
  return result;
}

uint64_t sub_22683DF18(uint64_t a1, char a2, uint64_t a3, char *a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = (unsigned __int8 *)a7;
  unint64_t v9 = a6;
  uint64_t v12 = a3;
  uint64_t v27 = *MEMORY[0x263EF8340];
  if (dword_268145D08 <= 3000 && (dword_268145D08 != -1 || sub_226865630((uint64_t)&dword_268145D08, 0xBB8u))) {
    sub_226865EB4((uint64_t)&dword_268145D08, (uint64_t)"ACPStatus ACPClientUpdateFirmware(ACPClientRef, ACPClientOptions, ACPDuration, const char *, const char *, ACPByteCount, const void *)", 3000, (uint64_t)"updating firmware (host=%s, pass=%s, size=%u, data:)\n", (uint64_t)a5, a6, a7, a8, (uint64_t)a4);
  }
  CFDataRef v15 = 0;
  int v24 = 0;
  uint64_t v16 = 4294960591;
  if (a1 && v9 && v8)
  {
    if (v9 >= 3 && *v8 == 80 && v8[1] == 75)
    {
      CFDataRef v15 = 0;
      goto LABEL_21;
    }
    uint64_t v17 = sub_22683C3C4((uint64_t)v8, v9, 0, 0, &v24, 0, 0);
    if (v17 == -20 || (uint64_t v16 = v17, v17 == -15))
    {
      if (v9 >= 0x180001)
      {
        CFDataRef v15 = 0;
        uint64_t v16 = 4294967281;
        goto LABEL_34;
      }
      CFDataRef v15 = (unsigned __int8 *)malloc_type_malloc(0x180000uLL, 0x2F77CE67uLL);
      if (!v15)
      {
        uint64_t v16 = 4294967293;
        goto LABEL_34;
      }
      int v22 = *(_DWORD *)&v8[v9 - 4];
      int v23 = *(_DWORD *)&v8[v9 - 8];
      __memcpy_chk();
      bzero(&v15[v9 - 8], 1572872 - v9);
      *((_DWORD *)v15 + 393214) = v23;
      *((_DWORD *)v15 + 393215) = v22;
      if (v22 != bswap32(sub_22683C0B8(1u, 0x1388uLL, v15, 0x17FFFCuLL)))
      {
        uint64_t v16 = 4294967290;
        goto LABEL_34;
      }
      uint64_t v8 = v15;
      unint64_t v9 = 1572864;
      uint64_t v12 = v12;
      goto LABEL_21;
    }
    CFDataRef v15 = 0;
    if (!v17)
    {
      CFDataRef v15 = 0;
      if (v24)
      {
        uint64_t v16 = 4294967276;
        goto LABEL_34;
      }
LABEL_21:
      uint64_t v18 = sub_22683E244(a1, 0, a3, a4, a5, 3, v9, v8);
      if (v18)
      {
LABEL_33:
        uint64_t v16 = v18;
        goto LABEL_34;
      }
      if (a2)
      {
        uint64_t v25 = 1633899086;
        int v26 = 0;
        uint64_t v19 = 1;
        if ((a2 & 2) == 0) {
          goto LABEL_32;
        }
      }
      else
      {
        if ((a2 & 2) == 0)
        {
          uint64_t v16 = 0;
          goto LABEL_34;
        }
        uint64_t v19 = 0;
      }
      uint64_t v20 = (char *)&v25 + 12 * v19;
      *(void *)uint64_t v20 = 1633899074;
      *((_DWORD *)v20 + 2) = 0;
      ++v19;
LABEL_32:
      uint64_t v18 = sub_22683E334(a1, 0, v12, a4, a5, v19, (uint64_t)&v25, a8);
      goto LABEL_33;
    }
  }
LABEL_34:
  if (dword_268145D08 <= 3000 && (dword_268145D08 != -1 || sub_226865630((uint64_t)&dword_268145D08, 0xBB8u))) {
    sub_226865EB4((uint64_t)&dword_268145D08, (uint64_t)"ACPStatus ACPClientUpdateFirmware(ACPClientRef, ACPClientOptions, ACPDuration, const char *, const char *, ACPByteCount, const void *)", 3000, (uint64_t)"updating firmware done (err=%#m)\n", (uint64_t)a5, a6, a7, a8, v16);
  }
  if (v15) {
    free(v15);
  }
  return v16;
}

uint64_t sub_22683E244(uint64_t a1, char a2, uint64_t a3, char *a4, char *a5, uint64_t a6, unint64_t a7, unsigned __int8 *a8)
{
  uint64_t v8 = 4294960591;
  if (a4)
  {
    if (a5)
    {
      unsigned int v12 = a6;
      if (!a7 || a8)
      {
        uint64_t v8 = sub_22683C8EC(a1, a4, a5, 0, (uint64_t)a5, a6, a7, (uint64_t)a8);
        if (!v8)
        {
          if (*(unsigned char *)(a1 + 352)) {
            CFDataRef v15 = "";
          }
          else {
            CFDataRef v15 = a5;
          }
          uint64_t v8 = sub_22683DC04(a1, 0, v15, v12, a7, a8);
          if (!v8) {
            uint64_t v8 = sub_22683D920(a1, v16, 0x7FFFFFFFLL, 0);
          }
          if ((a2 & 4) == 0 || v8 == 32 || v8 == 54 || v8 == -6753) {
            sub_22683D35C(a1);
          }
        }
      }
    }
  }
  return v8;
}

uint64_t sub_22683E334(uint64_t a1, char a2, uint64_t a3, char *a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = 4294960591;
  if (a4)
  {
    if (a5)
    {
      uint64_t v10 = a6;
      if (a6)
      {
        uint8x8_t v11 = (unsigned int *)a7;
        if (a7)
        {
          uint64_t v8 = sub_22683C8EC(a1, a4, a5, 0, (uint64_t)a5, a6, a7, a8);
          if (!v8)
          {
            int8x8_t v21 = 0;
            uint64_t v22 = 0;
            if (*(unsigned char *)(a1 + 352)) {
              CFDataRef v15 = "";
            }
            else {
              CFDataRef v15 = a5;
            }
            uint64_t v8 = sub_22683DC04(a1, 0, v15, 0x15u, 0xFFFFFFFFuLL, 0);
            if (!v8)
            {
              uint64_t v8 = sub_22683D920(a1, v16, a3, 0);
              if (!v8)
              {
                do
                {
                  if (v11[2])
                  {
                    uint64_t v8 = 4294967281;
                    goto LABEL_11;
                  }
                  uint64_t v18 = sub_22683DD28(a1, 0, v11, 0);
                  if (v18) {
                    goto LABEL_20;
                  }
                  v11 += 3;
                  --v10;
                }
                while (v10);
                uint64_t v8 = sub_22683DDD8(a1, 0, 0);
                if (!v8)
                {
                  while (1)
                  {
                    uint64_t v18 = sub_22683DE5C(a1, v19, a3, &v21);
                    if (v18) {
                      break;
                    }
                    uint64_t v8 = HIDWORD(v22);
                    if (HIDWORD(v22)) {
                      BOOL v20 = 1;
                    }
                    else {
                      BOOL v20 = v21.i32[0] == 0;
                    }
                    if (v20) {
                      goto LABEL_11;
                    }
                  }
LABEL_20:
                  uint64_t v8 = v18;
                }
              }
            }
LABEL_11:
            if ((a2 & 4) == 0 || v8 == -6753 || v8 == 54 || v8 == 32) {
              sub_22683D35C(a1);
            }
          }
        }
      }
    }
  }
  return v8;
}

uint64_t sub_22683E4B0(uint64_t a1, unsigned int a2, uint64_t a3, char *a4, char *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_22683EA60(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)&a9);
}

uint64_t sub_22683E4D8(uint64_t a1, char a2, int a3, size_t size, char *a5)
{
  unint64_t v5 = size;
  if (!size) {
    return v5;
  }
  if (*(unsigned char *)(a1 + 352) || *(unsigned char *)(a1 + 353))
  {
    unint64_t v9 = (char *)malloc_type_malloc(size, 0xF244C199uLL);
    if (!v9) {
      return 4294960568;
    }
    uint64_t v10 = v9;
    sub_22683FE30((void *)(a1 + 240), a5, v5, v9);
    a5 = v10;
    if ((a2 & 0x10) == 0) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v10 = 0;
    if ((a2 & 0x10) == 0)
    {
LABEL_6:
      uint64_t v11 = (*(uint64_t (**)(void))(*(void *)a1 + 32))();
      goto LABEL_10;
    }
  }
  uint64_t v11 = sub_226862748(a1 + 176, a5, v5);
LABEL_10:
  unint64_t v5 = v11;
  if (v10) {
    free(v10);
  }
  return v5;
}

uint64_t sub_22683E5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, void *a7)
{
  if (!a1) {
    return 4294960591;
  }
  unint64_t v11 = 0;
  uint64_t result = (*(uint64_t (**)(void))(*(void *)a1 + 24))();
  if (!result)
  {
    if (*(unsigned char *)(a1 + 352) || *(unsigned char *)(a1 + 353)) {
      sub_22683FE30((void *)(a1 + 296), a6, v11, a6);
    }
    uint64_t result = 0;
    if (a7) {
      *a7 = v11;
    }
  }
  return result;
}

uint64_t sub_22683E684(void *a1, int a2)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t v3 = a1[26];
  if (!v3) {
    return 0;
  }
  uint64_t result = (*(uint64_t (**)(void, void, uint64_t, void))(*a1 + 32))(*a1, a1[25], v3, (a2 / 1000));
  if (!result) {
    a1[26] = 0;
  }
  return result;
}

uint64_t sub_22683E6F8(uint64_t a1, int a2, uint64_t a3, char *a4, char *a5, uint64_t a6, const __CFString *a7, unsigned int *a8)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  CFDataRef theData = 0;
  uint64_t v8 = 4294960591;
  if (!a4) {
    return v8;
  }
  unint64_t v9 = a5;
  if (!a5) {
    return v8;
  }
  unsigned int v12 = a6;
  uint64_t v8 = sub_22683C8EC(a1, a4, a5, 0, (uint64_t)a5, a6, (uint64_t)a7, (uint64_t)a8);
  if (v8) {
    return v8;
  }
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  unsigned int v25 = 0;
  if (*(unsigned char *)(a1 + 352)) {
    unint64_t v9 = "";
  }
  if (!a7)
  {
    BytePtr = 0;
    size_t Length = 0;
LABEL_10:
    uint64_t v18 = (unsigned __int8 *)malloc_type_malloc(Length + 4, 0x5EC311B6uLL);
    if (v18)
    {
      uint64_t v19 = v18;
      unsigned int v20 = a2 | 4;
      *(_DWORD *)uint64_t v18 = bswap32(v12);
      if (Length) {
        memcpy(v18 + 4, BytePtr, Length);
      }
      if (theData)
      {
        CFRelease(theData);
        CFDataRef theData = 0;
      }
      uint64_t v8 = sub_22683DC04(a1, v20, v9, 0x18u, Length + 4, v19);
      free(v19);
      if (!v8)
      {
        uint64_t v8 = sub_22683D920(a1, v21, a3, (char *)&v27);
        if (!v8)
        {
          if (v28 == 4)
          {
            uint64_t v8 = sub_22683E5C4(a1, v22, a3, 4, 4, (char *)&v25, 0);
            if (!v8)
            {
              unsigned int v23 = bswap32(v25);
              unsigned int v25 = v23;
              uint64_t v8 = 0;
              if (a8) {
                *a8 = v23;
              }
            }
          }
          else
          {
            uint64_t v8 = 4294960553;
          }
        }
      }
    }
    else
    {
      uint64_t v8 = 4294960568;
    }
    goto LABEL_22;
  }
  uint64_t v8 = sub_22685EFD0((CFAllocatorRef)*MEMORY[0x263EFFB08], a7, (CFTypeRef *)&theData);
  if (!v8)
  {
    BytePtr = CFDataGetBytePtr(theData);
    size_t Length = CFDataGetLength(theData);
    goto LABEL_10;
  }
LABEL_22:
  if (theData) {
    CFRelease(theData);
  }
  if (v8 == -6753 || v8 == 54 || v8 == 32) {
    sub_22683D35C(a1);
  }
  return v8;
}

uint64_t sub_22683E93C(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v6 = sub_22683E5C4(a1, a2, a2, 8, 8, (char *)&v15, 0);
  if (v6) {
    return v6;
  }
  int v8 = HIDWORD(v15);
  size_t v9 = bswap32(HIDWORD(v15));
  HIDWORD(v15) = v9;
  if (!v8)
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (Mutable)
    {
      uint64_t v6 = 0;
      *a3 = Mutable;
      return v6;
    }
    return 4294960568;
  }
  uint64_t v10 = (char *)malloc_type_malloc(v9, 0x36A6941uLL);
  if (!v10) {
    return 4294960568;
  }
  unsigned int v12 = v10;
  uint64_t v6 = sub_22683E5C4(a1, v11, a2, HIDWORD(v15), HIDWORD(v15), v10, 0);
  if (!v6)
  {
    uint64_t v6 = sub_22685F568((const __CFAllocator *)*MEMORY[0x263EFFB08], (uint64_t)v12, HIDWORD(v15), (CFTypeRef *)&v14);
    if (!v6) {
      *a3 = v14;
    }
  }
  free(v12);
  return v6;
}

uint64_t sub_22683EA60(uint64_t a1, unsigned int a2, uint64_t a3, char *a4, char *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  long long v34 = 0;
  CFTypeRef v35 = 0;
  unsigned int v32 = 0;
  CFTypeRef cf = 0;
  CFAllocatorRef v16 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  uint64_t v21 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &v35, (uint64_t)"{%kO=%O%kO={%@}}", (uint64_t)a4, (uint64_t)a5, (uint64_t)a6, a7, a8, @"function");
  if (!v21)
  {
    uint64_t v21 = sub_2268607A8(v16, v34, a8, a9, v17, v18, v19, v20);
    if (!v21)
    {
      uint64_t v21 = sub_22683EBDC(a1, a2, a3, a4, a5, (const __CFString *)v35, &cf, v22);
      if (!v21)
      {
        sub_22686088C((const __CFString *)cf, (uint64_t)&v32, (UInt8 *)"%kO:err", v23, v24, v25, v26, v27, @"status");
        uint64_t v21 = v28;
        if (!v28)
        {
          uint64_t v21 = v32;
          if (!v32)
          {
            if (a6)
            {
              CFDataRef Value = CFDictionaryGetValue((CFDictionaryRef)cf, @"outputs");
              if (Value)
              {
                long long v31 = Value;
                CFRetain(Value);
                uint64_t v21 = 0;
                *a6 = v31;
              }
              else
              {
                uint64_t v21 = 4294960554;
              }
            }
            else
            {
              uint64_t v21 = 0;
            }
          }
        }
      }
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  if (v35) {
    CFRelease(v35);
  }
  return v21;
}

uint64_t sub_22683EBDC(uint64_t a1, unsigned int a2, uint64_t a3, char *a4, char *a5, const __CFString *a6, CFTypeRef *a7, uint64_t a8)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  uint64_t v14 = sub_22683C8EC(a1, a4, a5, 0, (uint64_t)a5, (uint64_t)a6, (uint64_t)a7, a8);
  if (!v14)
  {
    long long v33 = 0u;
    long long v34 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v27 = 0u;
    *(_OWORD *)size = 0u;
    CFDataRef theData = 0;
    int v15 = *(unsigned __int8 *)(a1 + 352);
    CFAllocatorRef v16 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    uint64_t v14 = sub_22685EFD0((CFAllocatorRef)*MEMORY[0x263EFFB08], a6, (CFTypeRef *)&theData);
    if (!v14)
    {
      uint64_t v17 = v15 ? "" : a5;
      BytePtr = (unsigned __int8 *)CFDataGetBytePtr(theData);
      CFIndex Length = CFDataGetLength(theData);
      uint64_t v14 = sub_22683DC04(a1, a2, v17, 0x19u, Length, BytePtr);
      CFRelease(theData);
      if (!v14)
      {
        uint64_t v14 = sub_22683D920(a1, v20, a3, (char *)&v27);
        if (!v14)
        {
          if (LODWORD(size[0]))
          {
            uint64_t v23 = (char *)malloc_type_malloc(LODWORD(size[0]), 0xBC82BA25uLL);
            if (v23)
            {
              uint64_t v25 = v23;
              uint64_t v14 = sub_22683E5C4(a1, v24, a3, LODWORD(size[0]), LODWORD(size[0]), v23, 0);
              if (!v14) {
                uint64_t v14 = sub_22685F568(v16, (uint64_t)v25, LODWORD(size[0]), a7);
              }
              free(v25);
            }
            else
            {
              uint64_t v14 = 4294960568;
            }
          }
          else
          {
            uint64_t v14 = 4294960553;
          }
        }
      }
    }
    if ((a2 & 4) == 0 || v14 == 32 || (v14 != 54 ? (BOOL v21 = v14 == -6753) : (BOOL v21 = 1), v21)) {
      sub_22683D35C(a1);
    }
  }
  return v14;
}

uint64_t sub_22683EDC0(void *a1, const char *a2, const char *a3, int a4, const void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (char *)malloc_type_calloc(1uLL, 0xB0uLL, 0x10F0040894D8A09uLL);
  if (!v14) {
    return 4294960568;
  }
  int v15 = v14;
  *(_DWORD *)uint64_t v14 = 1634561902;
  CFAllocatorRef v16 = v14 + 8;
  uint64_t v17 = pthread_mutex_init((pthread_mutex_t *)(v14 + 8), 0);
  if (v17)
  {
LABEL_13:
    sub_22683F080((unsigned __int8 *)v15);
    return v17;
  }
  *((void *)v15 + 9) = v16;
  uint64_t v18 = strdup(a2);
  *((void *)v15 + 12) = v18;
  if (!v18 || (uint64_t v19 = strdup(a3), (*((void *)v15 + 13) = v19) == 0))
  {
    uint64_t v17 = 4294960568;
    goto LABEL_13;
  }
  *((_DWORD *)v15 + 28) = a4;
  *((void *)v15 + 15) = a6;
  *((void *)v15 + 16) = a7;
  if (a5)
  {
    CFRetain(a5);
    *((void *)v15 + 17) = a5;
  }
  uint64_t v17 = sub_22683C738(2, a4, (void *)v15 + 11);
  if (v17) {
    goto LABEL_13;
  }
  uint64_t v17 = sub_22683E6F8(*((void *)v15 + 11), 0, 30000, *((char **)v15 + 12), *((char **)v15 + 13), 0, *((const __CFString **)v15 + 17), 0);
  if (v17) {
    goto LABEL_13;
  }
  uint64_t v17 = pthread_create((pthread_t *)v15 + 18, 0, (void *(__cdecl *)(void *))sub_22683EF2C, v15);
  if (v17) {
    goto LABEL_13;
  }
  *((void *)v15 + 19) = v15 + 144;
  *a1 = v15;
  return v17;
}

uint64_t sub_22683EF2C(uint64_t a1)
{
  uint64_t v2 = a1 + 88;
  uint64_t v3 = (CFTypeRef *)(a1 + 160);
  int v8 = sub_22683E93C(*(void *)(a1 + 88), 0x7FFFFFFFLL, (CFMutableDictionaryRef *)(a1 + 160));
  if (v8)
  {
LABEL_6:
    if (v8 != -6723
      && dword_268145D08 <= 3000
      && (dword_268145D08 != -1 || sub_226865630((uint64_t)&dword_268145D08, 0xBB8u)))
    {
      sub_226865EB4((uint64_t)&dword_268145D08, (uint64_t)"void *__ACPMonitoringClient_Thread(void *)", 3000, (uint64_t)"[ACPMonitoring %p] read event error: %#m\n", v4, v5, v6, v7, a1);
    }
    size_t v9 = (pthread_mutex_t **)(a1 + 72);
    pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 72));
    unsigned int v12 = *(void **)(a1 + 88);
    if (v12)
    {
      sub_22683C7D8(v12);
      uint64_t v3 = (CFTypeRef *)v2;
LABEL_15:
      *uint64_t v3 = 0;
    }
  }
  else
  {
    size_t v9 = (pthread_mutex_t **)(a1 + 72);
    uint64_t v10 = MEMORY[0x263EF83A0];
    while (1)
    {
      pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 72));
      if (*(unsigned char *)(a1 + 80)) {
        break;
      }
      ++*(_DWORD *)(a1 + 168);
      pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 72));
      dispatch_sync_f(v10, (void *)a1, (dispatch_function_t)sub_22683F26C);
      int v11 = sub_22683E93C(*(void *)(a1 + 88), 0x7FFFFFFFLL, (CFMutableDictionaryRef *)(v2 + 72));
      if (v11)
      {
        int v8 = v11;
        goto LABEL_6;
      }
    }
    if (*v3)
    {
      CFRelease(*v3);
      goto LABEL_15;
    }
  }
  pthread_mutex_unlock(*v9);
  return 0;
}

uint64_t sub_22683F080(unsigned __int8 *a1)
{
  if (!a1) {
    return 4294960591;
  }
  if (*(_DWORD *)a1 != 1634561902) {
    return 4294960556;
  }
  uint64_t v2 = (pthread_mutex_t *)*((void *)a1 + 9);
  if (v2)
  {
    pthread_mutex_lock(v2);
    uint64_t v3 = (pthread_mutex_t *)*((void *)a1 + 9);
    int v4 = a1[80];
    a1[80] = 1;
    if (v3) {
      pthread_mutex_unlock(v3);
    }
    if (v4) {
      return 4294960572;
    }
  }
  else
  {
    int v6 = a1[80];
    a1[80] = 1;
    if (v6) {
      return 4294960572;
    }
  }
  if (pthread_main_np())
  {
    sub_22683F16C((uint64_t)a1);
  }
  else
  {
    uint64_t v7 = (pthread_mutex_t *)*((void *)a1 + 9);
    if (v7)
    {
      pthread_mutex_lock(v7);
      int v8 = (pthread_mutex_t *)*((void *)a1 + 9);
      int v9 = *((_DWORD *)a1 + 42);
      if (v8) {
        pthread_mutex_unlock(v8);
      }
    }
    else
    {
      int v9 = *((_DWORD *)a1 + 42);
    }
    if (!v9) {
      dispatch_async_f(MEMORY[0x263EF83A0], a1, (dispatch_function_t)sub_22683F16C);
    }
  }
  return 0;
}

void sub_22683F16C(uint64_t a1)
{
  uint64_t v2 = *(pthread_mutex_t **)(a1 + 72);
  if (v2)
  {
    pthread_mutex_lock(v2);
    uint64_t v3 = *(pthread_mutex_t **)(a1 + 72);
    int v4 = *(_DWORD *)(a1 + 168);
    if (v3) {
      pthread_mutex_unlock(v3);
    }
  }
  else
  {
    int v4 = *(_DWORD *)(a1 + 168);
  }
  if (v4 <= 0)
  {
    uint64_t v5 = *(pthread_mutex_t **)(a1 + 72);
    if (v5)
    {
      pthread_mutex_lock(v5);
      uint64_t v6 = *(void *)(a1 + 88);
      if (v6)
      {
        *(unsigned char *)(v6 + 8) = 1;
        if (*(void *)v6) {
          sub_22686D9CC(*(void *)v6);
        }
      }
      pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 72));
    }
    if (*(void *)(a1 + 152))
    {
      pthread_join(*(pthread_t *)(a1 + 144), 0);
      *(void *)(a1 + 152) = 0;
    }
    uint64_t v7 = *(void **)(a1 + 88);
    if (v7)
    {
      sub_22683C7D8(v7);
      *(void *)(a1 + 88) = 0;
    }
    int v8 = *(const void **)(a1 + 136);
    if (v8)
    {
      CFRelease(v8);
      *(void *)(a1 + 136) = 0;
    }
    int v9 = *(void **)(a1 + 104);
    if (v9)
    {
      free(v9);
      *(void *)(a1 + 104) = 0;
    }
    uint64_t v10 = *(void **)(a1 + 96);
    if (v10)
    {
      free(v10);
      *(void *)(a1 + 96) = 0;
    }
    int v11 = *(pthread_mutex_t **)(a1 + 72);
    if (v11) {
      pthread_mutex_destroy(v11);
    }
    free((void *)a1);
  }
}

void sub_22683F26C(void *context)
{
  if (!*((unsigned char *)context + 80)) {
    (*((void (**)(void, void, void))context + 15))(0, *((void *)context + 20), *((void *)context + 16));
  }
  uint64_t v2 = (const void *)*((void *)context + 20);
  if (v2)
  {
    CFRelease(v2);
    *((void *)context + 20) = 0;
  }
  if (atomic_fetch_add((atomic_uint *volatile)context + 42, 0xFFFFFFFF) == 1 && *((unsigned char *)context + 80))
  {
    uint64_t v3 = MEMORY[0x263EF83A0];
    dispatch_async_f(v3, context, (dispatch_function_t)sub_22683F16C);
  }
}

uint64_t sub_22683F308(int a1, unsigned __int8 *a2, unint64_t a3, int a4, CFStringRef *a5)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  CFStringRef v20 = 0;
  BOOL v21 = 0;
  if (sub_22683C258(a1, &v21))
  {
LABEL_2:
    CFStringRef v10 = (const __CFString *)CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], a2, a3);
  }
  else
  {
    uint64_t result = 4294960562;
    switch(*((_DWORD *)v21 + 1))
    {
      case 2:
        CFStringRef v11 = CFStringCreateWithBytes((CFAllocatorRef)*MEMORY[0x263EFFB08], a2, a3, 0x8000100u, 0);
        if (v11) {
          goto LABEL_4;
        }
        return 4294960554;
      case 3:
        if (a3 == 1) {
          __int16 v13 = *a2;
        }
        else {
          __int16 v13 = 0;
        }
        *(_WORD *)cStr = v13;
        CFAllocatorRef v18 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        CFNumberType v19 = kCFNumberSInt16Type;
        goto LABEL_50;
      case 4:
        if (a3 == 2)
        {
          int v14 = *a2;
          if (a4 < 1) {
            int v15 = v14 | (a2[1] << 8);
          }
          else {
            int v15 = a2[1] | (v14 << 8);
          }
          *(_DWORD *)cStr = v15;
        }
        else
        {
          *(_DWORD *)cStr = 0;
        }
        CFAllocatorRef v18 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        CFNumberType v19 = kCFNumberSInt32Type;
        goto LABEL_50;
      case 5:
        if (a3 == 4)
        {
          if (a4 < 1) {
            uint64_t v16 = *(unsigned int *)a2;
          }
          else {
            uint64_t v16 = bswap32(*(_DWORD *)a2);
          }
          *(void *)cStr = v16;
        }
        else
        {
          *(void *)cStr = 0;
        }
        CFAllocatorRef v18 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        CFNumberType v19 = kCFNumberSInt64Type;
LABEL_50:
        CFStringRef v10 = (const __CFString *)CFNumberCreate(v18, v19, cStr);
        break;
      case 6:
        if (a3 == 1 && *a2) {
          uint64_t v17 = (CFStringRef *)MEMORY[0x263EFFB40];
        }
        else {
          uint64_t v17 = (CFStringRef *)MEMORY[0x263EFFB38];
        }
        CFStringRef v11 = *v17;
        goto LABEL_4;
      case 7:
        if (a3 != 4)
        {
          CFStringRef v11 = @"0.0.0.0";
          goto LABEL_37;
        }
        __sprintf_chk(cStr, 0, 0x80uLL, "%u.%u.%u.%u", *a2, a2[1], a2[2], a2[3]);
        goto LABEL_43;
      case 8:
        if (a3 == 6)
        {
          sub_22686F33C(a2, 6, cStr);
          goto LABEL_43;
        }
        CFStringRef v11 = @"00:00:00:00:00:00";
        goto LABEL_37;
      case 0xA:
        return result;
      case 0xC:
        if (a3 == 16)
        {
          sub_22686EC6C(a2, 0, -1, 0xFFFFFFFF, cStr);
LABEL_43:
          CFStringRef v10 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], cStr, 0x8000100u);
          break;
        }
        CFStringRef v11 = @"::";
LABEL_37:
        CFRetain(v11);
        goto LABEL_4;
      case 0xD:
        if (a3)
        {
          if (!sub_22685F568((const __CFAllocator *)*MEMORY[0x263EFFB08], (uint64_t)a2, a3, (CFTypeRef *)&v20))
          {
            CFStringRef v11 = v20;
            goto LABEL_4;
          }
        }
        else if (a1 == 1298223988)
        {
          CFStringRef v10 = (const __CFString *)CFArrayCreate(0, 0, 0, MEMORY[0x263EFFF70]);
          break;
        }
        CFStringRef v10 = (const __CFString *)CFDictionaryCreate(0, 0, 0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        break;
      default:
        goto LABEL_2;
    }
  }
  CFStringRef v11 = v10;
  if (!v10) {
    return 4294960568;
  }
LABEL_4:
  uint64_t result = 0;
  *a5 = v11;
  return result;
}

uint64_t sub_22683F68C(int a1, const __CFString *cf, int a3, CFDataRef *a4)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v26 = 0;
  CFDataRef v27 = 0;
  uint64_t v24 = 0;
  __s = 0;
  BOOL v23 = 0;
  unsigned int v22 = 0;
  uint64_t valuePtr = 0;
  CFTypeID v8 = CFGetTypeID(cf);
  if (!sub_22683C258(a1, &v26))
  {
    switch(*((_DWORD *)v26 + 1))
    {
      case 2:
        if (v8 != CFStringGetTypeID()) {
          return 4294960540;
        }
        uint64_t v14 = sub_226861988(cf, (const char **)&__s, (UInt8 **)&v24);
        if (v14) {
          return v14;
        }
        size_t v15 = strlen(__s);
        CFDataRef v13 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], (const UInt8 *)__s, v15);
        if (v24) {
          free(v24);
        }
        if (!v13) {
          return 4294960568;
        }
        goto LABEL_5;
      case 3:
        if (v8 != CFNumberGetTypeID()) {
          return 4294960540;
        }
        if (!CFNumberGetValue((CFNumberRef)cf, kCFNumberSInt64Type, &valuePtr)
          || (unint64_t)(valuePtr + 128) > 0x17F)
        {
          return 4294960586;
        }
        BOOL v23 = valuePtr;
        goto LABEL_33;
      case 4:
        if (v8 != CFNumberGetTypeID()) {
          return 4294960540;
        }
        if (!CFNumberGetValue((CFNumberRef)cf, kCFNumberSInt64Type, &valuePtr)
          || (unint64_t)(valuePtr + 0x8000) >> 15 > 2)
        {
          return 4294960586;
        }
        unsigned int v16 = bswap32(valuePtr) >> 16;
        if (a3 <= 0) {
          __int16 v17 = valuePtr;
        }
        else {
          __int16 v17 = v16;
        }
        LOWORD(v28) = v17;
        CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        unsigned int v12 = (const UInt8 *)&v28;
        CFIndex Length = 2;
        goto LABEL_4;
      case 5:
        if (v8 != CFNumberGetTypeID()) {
          return 4294960540;
        }
        if (!CFNumberGetValue((CFNumberRef)cf, kCFNumberSInt64Type, &valuePtr)
          || (unint64_t)(valuePtr + 0x80000000) >> 31 > 2)
        {
          return 4294960586;
        }
        unsigned int v18 = bswap32(valuePtr);
        if (a3 <= 0) {
          unsigned int v19 = valuePtr;
        }
        else {
          unsigned int v19 = v18;
        }
        goto LABEL_59;
      case 6:
        if (v8 != CFBooleanGetTypeID()) {
          return 4294960540;
        }
        BOOL v23 = CFBooleanGetValue((CFBooleanRef)cf) != 0;
LABEL_33:
        CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        unsigned int v12 = (const UInt8 *)&v23;
        CFIndex Length = 1;
        goto LABEL_4;
      case 7:
        if (v8 != CFStringGetTypeID()) {
          return 4294960540;
        }
        if (CFStringGetLength(cf))
        {
          uint64_t v14 = sub_226861988(cf, (const char **)&__s, (UInt8 **)&v24);
          if (v14) {
            return v14;
          }
          uint64_t v14 = sub_22686EA18(__s, 0, &v22, 0, 0, 0, 0);
          if (v24) {
            free(v24);
          }
          if (v14) {
            return v14;
          }
          unsigned int v19 = bswap32(v22);
        }
        else
        {
          unsigned int v19 = 0;
        }
LABEL_59:
        unsigned int v22 = v19;
        CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        unsigned int v12 = (const UInt8 *)&v22;
        CFIndex Length = 4;
        goto LABEL_4;
      case 8:
        if (v8 != CFStringGetTypeID()) {
          return 4294960540;
        }
        uint64_t v14 = sub_226861988(cf, (const char **)&__s, (UInt8 **)&v24);
        if (v14) {
          return v14;
        }
        uint64_t v14 = sub_22686F20C(__s, 0xFFFFFFFFFFFFFFFFLL, 6, &v28);
        if (v24) {
          free(v24);
        }
        if (v14) {
          return v14;
        }
        CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        unsigned int v12 = (const UInt8 *)&v28;
        CFIndex Length = 6;
        goto LABEL_4;
      case 0xC:
        if (v8 != CFStringGetTypeID()) {
          return 4294960540;
        }
        if (CFStringGetLength(cf))
        {
          uint64_t v14 = sub_226861988(cf, (const char **)&__s, (UInt8 **)&v24);
          if (v14) {
            return v14;
          }
          uint64_t v14 = sub_22686E524(__s, 0, &v28, 0, 0, 0, 0);
          if (v24) {
            free(v24);
          }
          if (v14) {
            return v14;
          }
        }
        else
        {
          long long v28 = 0uLL;
        }
        CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        unsigned int v12 = (const UInt8 *)&v28;
        CFIndex Length = 16;
        goto LABEL_4;
      case 0xD:
        uint64_t v14 = sub_22685EFD0((CFAllocatorRef)*MEMORY[0x263EFFB08], cf, (CFTypeRef *)&v27);
        if (v14) {
          return v14;
        }
        CFDataRef v13 = v27;
        goto LABEL_5;
      default:
        break;
    }
  }
  if (v8 != CFDataGetTypeID()) {
    return 4294960540;
  }
  BytePtr = CFDataGetBytePtr((CFDataRef)cf);
  CFIndex Length = CFDataGetLength((CFDataRef)cf);
  CFAllocatorRef v11 = 0;
  unsigned int v12 = BytePtr;
LABEL_4:
  CFDataRef v13 = CFDataCreate(v11, v12, Length);
  if (!v13) {
    return 4294960568;
  }
LABEL_5:
  uint64_t v14 = 0;
  *a4 = v13;
  return v14;
}

uint64_t sub_22683FB04(int a1, UInt8 *a2, size_t a3, CFStringRef *a4)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v17 = 0;
  unsigned int v18 = 0;
  unsigned int v16 = 0;
  uint64_t result = sub_22683C258(a1, &v18);
  if (!result)
  {
    uint64_t result = 4294960561;
    switch(*((_DWORD *)v18 + 1))
    {
      case 2:
        CFStringRef v14 = CFStringCreateWithBytes((CFAllocatorRef)*MEMORY[0x263EFFB08], a2, a3, 0x8000100u, 0);
        if (v14) {
          goto LABEL_26;
        }
        goto LABEL_27;
      case 3:
      case 4:
      case 5:
        if (sub_22686FF74((char *)a2, a3, "%li", v8, v9, v10, v11, v12, (int)&v17) != 1) {
          goto LABEL_27;
        }
        *(void *)uint64_t valuePtr = v17;
        CFStringRef v13 = (const __CFString *)CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt64Type, valuePtr);
        goto LABEL_22;
      case 6:
        if (!strncmp((const char *)a2, "1", a3)
          || !strcasecmp((const char *)a2, "true")
          || !strcasecmp((const char *)a2, "yes"))
        {
          size_t v15 = (CFStringRef *)MEMORY[0x263EFFB40];
        }
        else
        {
          if (strncmp((const char *)a2, "0", a3)
            && strcasecmp((const char *)a2, "false")
            && strcasecmp((const char *)a2, "no"))
          {
            goto LABEL_27;
          }
          size_t v15 = (CFStringRef *)MEMORY[0x263EFFB38];
        }
        CFStringRef v14 = *v15;
        if (v14)
        {
LABEL_26:
          uint64_t result = 0;
          *a4 = v14;
          return result;
        }
LABEL_27:
        uint64_t result = 4294960554;
        break;
      case 7:
        uint64_t result = sub_22686EA18((char *)a2, 0, &v16, 0, 0, 0, 0);
        if (result) {
          return result;
        }
        sub_22686714C(v16, 0xFFFFFFFF, valuePtr);
        goto LABEL_21;
      case 8:
        uint64_t result = sub_22686F20C((char *)a2, a3, 6, &v20);
        if (result) {
          return result;
        }
        sub_22686F33C((unsigned __int8 *)&v20, 6, valuePtr);
        goto LABEL_21;
      case 0xC:
        uint64_t result = sub_22686E524(a2, 0, &v20, 0, 0, 0, 0);
        if (result) {
          return result;
        }
        sub_22686EC6C(&v20, 0, -1, 0xFFFFFFFF, valuePtr);
LABEL_21:
        CFStringRef v13 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], valuePtr, 0x8000100u);
LABEL_22:
        CFStringRef v14 = v13;
        if (v13) {
          goto LABEL_26;
        }
        return 4294960568;
      default:
        return result;
    }
  }
  return result;
}

__n128 sub_22683FDD4(CCCryptorRef *cryptorRef, void *key, __n128 *a3)
{
  *cryptorRef = 0;
  if (!CCCryptorCreate(0, 0, 2u, key, 0x10uLL, 0, cryptorRef))
  {
    __n128 result = *a3;
    *(__n128 *)(cryptorRef + 1) = *a3;
    cryptorRef[5] = 0;
    *((unsigned char *)cryptorRef + 48) = 0;
  }
  return result;
}

uint64_t sub_22683FE30(void *dataIn, char *a2, unint64_t a3, unsigned char *a4)
{
  unint64_t v5 = a3;
  uint64_t v8 = (char *)(dataIn + 3);
  uint64_t v9 = dataIn[5];
  if (a3 && v9)
  {
    do
    {
      char v10 = *a2++;
      *a4++ = v8[v9] ^ v10;
      uint64_t v9 = ((int)v9 + 1) & 0xFLL;
      --v5;
    }
    while (v5 && v9);
  }
  size_t dataOutMoved = 0;
  dataIn[5] = v9;
  if (v5 < 0x10)
  {
LABEL_18:
    if (v5)
    {
      unsigned int v19 = (char *)(dataIn + 1);
      uint64_t result = CCCryptorUpdate((CCCryptorRef)*dataIn, dataIn + 1, 0x10uLL, v8, 0x10uLL, &dataOutMoved);
      if (result) {
        return result;
      }
      if (dataOutMoved != 16) {
        return 4294960553;
      }
      unsigned int v20 = 15;
      do
      {
        if (++v19[v20]) {
          BOOL v22 = 1;
        }
        else {
          BOOL v22 = v20 == 0;
        }
        --v20;
      }
      while (!v22);
      uint64_t v23 = 0;
      size_t dataOutMoved = 0;
      if (v5 <= 1) {
        uint64_t v24 = 1;
      }
      else {
        uint64_t v24 = v5;
      }
      do
      {
        a4[v23] = v8[v9 + v23] ^ a2[v23];
        size_t dataOutMoved = ++v23;
      }
      while (v24 != v23);
      if (!*((unsigned char *)dataIn + 48))
      {
        uint64_t result = 0;
        dataIn[5] = v9 + v23;
        return result;
      }
    }
    return 0;
  }
  uint64_t v11 = (char *)(dataIn + 1);
  while (1)
  {
    uint64_t result = CCCryptorUpdate((CCCryptorRef)*dataIn, dataIn + 1, 0x10uLL, v8, 0x10uLL, &dataOutMoved);
    if (result) {
      return result;
    }
    if (dataOutMoved != 16) {
      return 4294960553;
    }
    unsigned int v13 = 15;
    do
    {
      __int16 v14 = v11[v13];
      __int16 v15 = v14 + 1;
      v11[v13] = v14 + 1;
      BOOL v17 = v13-- != 0;
    }
    while ((v15 & 0x100) != 0 && v17);
    uint64_t v18 = 0;
    size_t dataOutMoved = 0;
    do
    {
      a4[v18] = v8[v18] ^ a2[v18];
      size_t dataOutMoved = ++v18;
    }
    while (v18 != 16);
    a2 += 16;
    a4 += 16;
    v5 -= 16;
    if (v5 <= 0xF) {
      goto LABEL_18;
    }
  }
}

double sub_22683FFFC(uint64_t a1)
{
  uint64_t v2 = *(_CCCryptor **)a1;
  if (v2) {
    CCCryptorRelease(v2);
  }
  *(void *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_226840120(int a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = (uint64_t)objc_alloc_init(MEMORY[0x263F086B0]);
  uint64_t v9 = v7;
  if (a4)
  {
    v57 = (const char *)v7;
    char v10 = objc_msgSend_delegate(a4, (const char *)v7, v8);
    CFStringRef v12 = (const __CFString *)objc_msgSend_objectForKey_(a3, v11, @"BSAssistantProgressKey_DictionaryParameter");
    if (a1 == 18)
    {
      uint64_t CompletionDictFromAutoGuessResults = objc_msgSend_createCompletionDictFromAutoGuessResults_(a4, v13, (uint64_t)v12);
      objc_msgSend_setGuessCompletionDict_(a4, v15, CompletionDictFromAutoGuessResults);
      if (v10 && (objc_opt_respondsToSelector() & 1) != 0)
      {
        uint64_t v18 = objc_msgSend_guessCompletionDict(a4, v16, v17);
        objc_msgSend_autoguessProgressComplete_(v10, v19, v18);
      }
      uint64_t v7 = objc_msgSend_autoGuessEngineComplete(a4, v16, v17);
      goto LABEL_21;
    }
    if ((a1 - 5) <= 1 && v12)
    {
      uint64_t v20 = (uint64_t)sub_22685DB1C((uint64_t)v12, (const char *)1, (uint64_t)v12);
    }
    else if ((a1 - 7) <= 1 && v12)
    {
      uint64_t v20 = (uint64_t)sub_22685DA7C(v12, (const char *)1, (uint64_t)v12);
    }
    else
    {
      uint64_t v20 = objc_msgSend_objectForKey_(a3, v13, @"BSAssistantProgressKey_StringParameter");
    }
    uint64_t v23 = v20;
    int v24 = a1 - 3;
    if ((a1 - 3) > 0xE || ((0x7955u >> v24) & 1) == 0)
    {
      uint64_t AutoGuessUISelector = objc_msgSend_lastAutoGuessUISelector(a4, v21, v22);
      objc_msgSend_setCurrentAutoGuessUISelector_(a4, v26, AutoGuessUISelector);
      uint64_t ParamString = objc_msgSend_lastParamString(a4, v27, v28);
      objc_msgSend_setCurrentParamString_(a4, v30, ParamString);
      if (objc_msgSend_lastAutoGuessUISelector(a4, v31, v32) != 14
        && v10
        && (objc_opt_respondsToSelector() & 1) != 0)
      {
        uint64_t v35 = objc_msgSend_lastAutoGuessUISelector(a4, v33, v34);
        uint64_t v38 = objc_msgSend_lastParamString(a4, v36, v37);
        objc_msgSend_autoguessProgressUpdated_paramString_(v10, v39, v35, v38);
      }
      objc_msgSend_setLastAutoGuessUISelector_(a4, v33, 14);
      uint64_t v7 = objc_msgSend_setLastParamString_(a4, v40, (uint64_t)&stru_26DA6BE88);
      goto LABEL_21;
    }
    uint64_t v41 = dword_226912D50[v24];
    uint64_t v42 = objc_msgSend_currentAutoGuessUISelector(a4, v21, v22);
    objc_msgSend_setLastAutoGuessUISelector_(a4, v43, v42);
    uint64_t v46 = objc_msgSend_currentParamString(a4, v44, v45);
    objc_msgSend_setLastParamString_(a4, v47, v46);
    objc_msgSend_setCurrentAutoGuessUISelector_(a4, v48, v41);
    uint64_t v7 = objc_msgSend_setCurrentParamString_(a4, v49, v23);
    uint64_t v9 = (uint64_t)v57;
    if (v10)
    {
      uint64_t v7 = objc_opt_respondsToSelector();
      uint64_t v9 = (uint64_t)v57;
      if (v7)
      {
        uint64_t v51 = objc_msgSend_currentAutoGuessUISelector(a4, v57, v50);
        uint64_t v54 = objc_msgSend_currentParamString(a4, v52, v53);
        uint64_t v7 = objc_msgSend_autoguessProgressUpdated_paramString_(v10, v55, v51, v54);
LABEL_21:
        uint64_t v9 = (uint64_t)v57;
      }
    }
  }

  return MEMORY[0x270F9A758](v7, v9);
}

void *sub_226842A94(void *a1, const char *a2, uint64_t a3)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  int v4 = objc_msgSend_string(MEMORY[0x263F089D8], a2, a3);
  uint64_t v7 = objc_msgSend_count(a1, v5, v6);
  if (v7 >= 2)
  {
    uint64_t v9 = v7;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v10 = objc_msgSend_countByEnumeratingWithState_objects_count_(a1, v8, (uint64_t)&v28, v32, 16);
    if (v10)
    {
      uint64_t v12 = v10;
      uint64_t v13 = 0;
      uint64_t v14 = *(void *)v29;
      do
      {
        uint64_t v15 = 0;
        uint64_t v26 = v13;
        do
        {
          if (*(void *)v29 != v14) {
            objc_enumerationMutation(a1);
          }
          uint64_t v16 = objc_msgSend_valueForKey_(*(void **)(*((void *)&v28 + 1) + 8 * v15), v11, @"name");
          objc_msgSend_appendString_(v4, v17, v16);
          if (v13 + 2 >= v9)
          {
            if (++v13 < v9)
            {
              uint64_t v20 = NSString;
              uint64_t v21 = sub_22685D62C(@"CommaListConjunction", qword_268148378);
              uint64_t valid = objc_msgSend_stringWithValidatedFormat_validFormatSpecifiers_error_(v20, v22, v21, @"%@", 0, a2);
              objc_msgSend_appendString_(v4, v24, valid);
            }
          }
          else
          {
            uint64_t v18 = sub_22685D62C(@"CommaListSeparator", qword_268148378);
            objc_msgSend_appendString_(v4, v19, v18);
            ++v13;
          }
          ++v15;
        }
        while (v12 != v15);
        uint64_t v13 = v26 + v12;
        uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(a1, v11, (uint64_t)&v28, v32, 16);
      }
      while (v12);
    }
  }
  return v4;
}

void *sub_226842C70(void *a1, const char *a2, uint64_t a3)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  int v4 = objc_msgSend_string(MEMORY[0x263F089D8], a2, a3);
  uint64_t v7 = objc_msgSend_count(a1, v5, v6);
  if (v7 >= 2)
  {
    uint64_t v9 = v7;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v10 = objc_msgSend_countByEnumeratingWithState_objects_count_(a1, v8, (uint64_t)&v28, v32, 16);
    if (v10)
    {
      uint64_t v12 = v10;
      uint64_t v13 = 0;
      uint64_t v14 = *(void *)v29;
      do
      {
        uint64_t v15 = 0;
        uint64_t v26 = v13;
        do
        {
          if (*(void *)v29 != v14) {
            objc_enumerationMutation(a1);
          }
          uint64_t v16 = objc_msgSend_valueForKey_(*(void **)(*((void *)&v28 + 1) + 8 * v15), v11, @"SSID_STR");
          objc_msgSend_appendString_(v4, v17, v16);
          if (v13 + 2 >= v9)
          {
            if (++v13 < v9)
            {
              uint64_t v20 = NSString;
              uint64_t v21 = sub_22685D62C(@"CommaListConjunction", qword_268148378);
              uint64_t valid = objc_msgSend_stringWithValidatedFormat_validFormatSpecifiers_error_(v20, v22, v21, @"%@", 0, a2);
              objc_msgSend_appendString_(v4, v24, valid);
            }
          }
          else
          {
            uint64_t v18 = sub_22685D62C(@"CommaListSeparator", qword_268148378);
            objc_msgSend_appendString_(v4, v19, v18);
            ++v13;
          }
          ++v15;
        }
        while (v12 != v15);
        uint64_t v13 = v26 + v12;
        uint64_t v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(a1, v11, (uint64_t)&v28, v32, 16);
      }
      while (v12);
    }
  }
  return v4;
}

uint64_t sub_226842F2C(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = objc_alloc_init(MEMORY[0x263F086B0]);
  if (a3) {
    uint64_t v8 = objc_msgSend_assistantCallback_withSelector_(a3, v6, a1, a2);
  }
  else {
    uint64_t v8 = 4294960591;
  }

  return v8;
}

uint64_t sub_226843070(uint64_t a1, const char *a2)
{
  uint64_t result = objc_msgSend_keychainWrapperWithMACAddress_(KeychainWrapper, a2, *(void *)(a1 + 32));
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(a1 + 40);
    sub_22685D62C(@"keychainBaseStationDescription", @"AirPortSettings");
    return MEMORY[0x270F9A6D0](v4, sel_addGenericPassword_withLabel_andDescription_, v5);
  }
  return result;
}

uint64_t sub_2268432F4(uint64_t a1, const char *a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = objc_msgSend_countByEnumeratingWithState_objects_count_(v3, a2, (uint64_t)&v13, v17, 16);
  if (v4)
  {
    uint64_t v6 = v4;
    uint64_t v7 = *(void *)v14;
    while (2)
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        if (*(void *)v14 != v7) {
          objc_enumerationMutation(v3);
        }
        uint64_t v9 = objc_msgSend_keychainPasswordForMACAddress_(KeychainWrapper, v5, *(void *)(*((void *)&v13 + 1) + 8 * i));
        if (v9)
        {
          uint64_t v10 = v9;
          goto LABEL_11;
        }
      }
      uint64_t v6 = objc_msgSend_countByEnumeratingWithState_objects_count_(v3, v5, (uint64_t)&v13, v17, 16);
      if (v6) {
        continue;
      }
      break;
    }
  }
  uint64_t v10 = 0;
LABEL_11:
  uint64_t result = objc_opt_respondsToSelector();
  if (result) {
    return objc_msgSend_assistantCallbackKeychainPassword_forBaseStation_(*(void **)(a1 + 40), v12, v10, *(void *)(a1 + 48));
  }
  return result;
}

uint64_t sub_2268434E8(uint64_t a1, const char *a2)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t result = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, a2, (uint64_t)&v10, v14, 16);
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = *(void *)v11;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v2);
        }
        uint64_t v8 = objc_msgSend_keychainWrapperWithMACAddress_(KeychainWrapper, v4, *(void *)(*((void *)&v10 + 1) + 8 * v7));
        if (v8) {
          objc_msgSend_removeGenericPassword(v8, v4, v9);
        }
        ++v7;
      }
      while (v5 != v7);
      uint64_t result = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v4, (uint64_t)&v10, v14, 16);
      uint64_t v5 = result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_22684425C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  uint64_t v41 = 0;
  sub_2268DCEEC(*(void *)(a1 + 32), @"BSAssistantCallback_KeychainServiceType", &v41, a4, a5, a6, a7, a8);
  int v17 = v16;
  if (!v16)
  {
    if (!v41)
    {
LABEL_21:
      int v17 = -6728;
      goto LABEL_22;
    }
    if (objc_msgSend_isEqualToString_(v41, v9, @"keychainBaseStationType"))
    {
      uint64_t v40 = 0;
      sub_2268DCEEC(*(void *)(a1 + 32), @"BSAssistantCallback_KeychainAccounts", &v40, v18, v19, v20, v21, v22);
      if (!v23)
      {
        if (v40)
        {
          uint64_t v25 = objc_msgSend_copy(v40, v24, v10);
          uint64_t v40 = v25;
          long long v36 = 0u;
          long long v37 = 0u;
          long long v38 = 0u;
          long long v39 = 0u;
          uint64_t v27 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v26, (uint64_t)&v36, v42, 16);
          if (v27)
          {
            uint64_t v29 = v27;
            uint64_t v30 = *(void *)v37;
            while (2)
            {
              for (uint64_t i = 0; i != v29; ++i)
              {
                if (*(void *)v37 != v30) {
                  objc_enumerationMutation(v25);
                }
                uint64_t v32 = objc_msgSend_keychainPasswordForMACAddress_(KeychainWrapper, v28, *(void *)(*((void *)&v36 + 1) + 8 * i));
                if (v32)
                {
                  uint64_t NetworkPassword = v32;
                  goto LABEL_28;
                }
              }
              uint64_t v29 = objc_msgSend_countByEnumeratingWithState_objects_count_(v25, v28, (uint64_t)&v36, v42, 16);
              if (v29) {
                continue;
              }
              break;
            }
          }
          uint64_t NetworkPassword = 0;
LABEL_28:

          if (!NetworkPassword) {
            goto LABEL_29;
          }
          goto LABEL_19;
        }
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v40 = 0;
      sub_2268DCEEC(*(void *)(a1 + 32), @"BSAssistantCallback_ScanInfo", &v40, v18, v19, v20, v21, v22);
      if (!v23)
      {
        uint64_t v10 = (uint64_t)v40;
        if (v40)
        {
          uint64_t NetworkPassword = objc_msgSend_getNetworkPassword_(WiFiUtils, v34, (uint64_t)v40);
          if (!NetworkPassword)
          {
LABEL_29:
            int v17 = -6727;
            goto LABEL_22;
          }
LABEL_19:
          int v17 = sub_2268DD050(*(void *)(a1 + 32), @"BSAssistantCallback_String", NetworkPassword, v11, v12, v13, v14, v15);
          if (!v17) {
            return sub_2268DD134(*(void **)(a1 + 32), v17, v10, v11, v12, v13, v14, v15);
          }
          goto LABEL_22;
        }
        goto LABEL_21;
      }
    }
    int v17 = v23;
  }
LABEL_22:
  if (dword_268145D88 <= 800 && (dword_268145D88 != -1 || sub_226865630((uint64_t)&dword_268145D88, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268145D88, (uint64_t)"-[AssistantCallbackController(Private) assistantCallback:withSelector:]_block_invoke", 800, (uint64_t)"failing inSelector: %d err: %m\n", v12, v13, v14, v15, *(unsigned int *)(a1 + 40));
  }
  return sub_2268DD134(*(void **)(a1 + 32), v17, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_226844B50(const char *a1, const char *a2, const char *a3, uint64_t *a4)
{
  uint64_t v4 = 0;
  CFArrayRef theArray = 0;
  uint64_t v5 = 4294960591;
  if (!a1 || !a2 || !a4) {
    goto LABEL_30;
  }
  uint64_t v10 = malloc_type_calloc(1uLL, 0x38uLL, 0x1060040067EBA7CuLL);
  uint64_t v4 = (uint64_t)v10;
  if (!v10) {
    goto LABEL_29;
  }
  *uint64_t v10 = 0;
  CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFStringRef v12 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], a1, 0x8000100u);
  *(void *)(v4 + 24) = v12;
  if (!v12) {
    goto LABEL_29;
  }
  CFStringRef v13 = CFStringCreateWithCString(v11, a2, 0x8000100u);
  *(void *)(v4 + 32) = v13;
  if (!v13) {
    goto LABEL_29;
  }
  uint64_t v14 = a3 ? a3 : "ACPBrowserSession";
  uint64_t v15 = dispatch_queue_create(v14, 0);
  *(void *)(v4 + 8) = v15;
  if (!v15) {
    goto LABEL_29;
  }
  dispatch_set_context(v15, (void *)v4);
  dispatch_set_finalizer_f(*(dispatch_object_t *)(v4 + 8), (dispatch_function_t)sub_226844E08);
  sub_226844E80(v4, MEMORY[0x263EF83A0]);
  *(unsigned char *)(v4 + 40) = 0;
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v11, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  *(void *)(v4 + 48) = Mutable;
  if (!Mutable) {
    goto LABEL_29;
  }
  uint64_t v19 = sub_226901528(&theArray, v17, v18);
  if (v19 == -6727)
  {
LABEL_28:
    uint64_t v5 = 0;
    *a4 = v4;
    uint64_t v4 = 0;
    goto LABEL_30;
  }
  uint64_t v5 = v19;
  if (v19) {
    goto LABEL_30;
  }
  if (!theArray)
  {
    uint64_t v5 = 4294960568;
LABEL_33:
    sub_226844E08((void *)v4);
    return v5;
  }
  CFNotificationCenterRef LocalCenter = CFNotificationCenterGetLocalCenter();
  if (!LocalCenter)
  {
LABEL_29:
    uint64_t v5 = 4294960568;
    goto LABEL_30;
  }
  uint64_t v21 = LocalCenter;
  CFIndex Count = CFArrayGetCount(theArray);
  if (Count < 1)
  {
LABEL_27:
    CFNotificationCenterAddObserver(v21, (const void *)v4, (CFNotificationCallback)sub_226844F30, @"com.apple.AirPort.WiFiShim.Notification.LinkChange", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
    goto LABEL_28;
  }
  CFIndex v28 = Count;
  uint64_t v29 = 0;
  while (1)
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    CFTypeRef cf = 0;
    sub_22686088C((const __CFString *)theArray, (uint64_t)&v53, (UInt8 *)"[*]", v23, v24, v25, v26, v27, v29);
    if (v30) {
      break;
    }
    if (!v53) {
      goto LABEL_29;
    }
    uint64_t v37 = sub_226852378((uint64_t)v11, v53, v31, v32, v33, v34, v35, v36);
    if (!v37) {
      goto LABEL_29;
    }
    long long v39 = (const void *)v37;
    uint64_t v5 = sub_226852A7C(v37, (char *)&cf, v38);
    CFRelease(v39);
    if (v5) {
      goto LABEL_30;
    }
    if (!cf) {
      goto LABEL_29;
    }
    uint64_t v52 = 0;
    sub_22686088C((const __CFString *)cf, (uint64_t)&v52, (UInt8 *)"%kO", v40, v41, v42, v43, v44, @"kNetworkLinkManager_LinkChangeKey_WiFiName");
    uint64_t v5 = sub_226844EC8(v4, v52, v53, v45, v46, v47, v48, v49);
    if (cf) {
      CFRelease(cf);
    }
    if (v5) {
      goto LABEL_30;
    }
    if (v28 == ++v29) {
      goto LABEL_27;
    }
  }
  uint64_t v5 = v30;
LABEL_30:
  if (theArray)
  {
    CFRelease(theArray);
    CFArrayRef theArray = 0;
  }
  if (v4) {
    goto LABEL_33;
  }
  return v5;
}

void sub_226844E08(void *a1)
{
  if (a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      dispatch_release(v2);
      a1[2] = 0;
    }
    uint64_t v3 = (const void *)a1[3];
    if (v3)
    {
      CFRelease(v3);
      a1[3] = 0;
    }
    uint64_t v4 = (const void *)a1[4];
    if (v4)
    {
      CFRelease(v4);
      a1[4] = 0;
    }
    uint64_t v5 = (const void *)a1[6];
    if (v5) {
      CFRelease(v5);
    }
    free(a1);
  }
}

void sub_226844E80(uint64_t a1, NSObject *a2)
{
  if (a2) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = MEMORY[0x263EF83A0];
  }
  dispatch_retain(v3);
  uint64_t v4 = *(NSObject **)(a1 + 16);
  if (v4) {
    dispatch_release(v4);
  }
  *(void *)(a1 + 16) = v3;
}

uint64_t sub_226844EC8(uint64_t a1, uint64_t a2, void *key, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(__CFArray **)(a1 + 48);
  if (!v9) {
    return 4294960591;
  }
  if (a2)
  {
    uint64_t result = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], v9, (uint64_t)"%kO=%O", a4, a5, a6, a7, a8, (uint64_t)key);
    if (result) {
      return result;
    }
  }
  else
  {
    CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 48), key);
  }
  return 0;
}

void sub_226844F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const __CFString *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    uint64_t v22 = 0;
    if (a5)
    {
      uint64_t v23 = 0;
      sub_22686088C(a5, (uint64_t)&v23, (UInt8 *)"%kO", a4, (uint64_t)a5, a6, a7, a8, @"kNetworkLinkManager_LinkChangeKey_IfName");
      if (!v15)
      {
        if (v23)
        {
          sub_22686088C(a5, (uint64_t)&v22, (UInt8 *)"%kO", v10, v11, v12, v13, v14, @"kNetworkLinkManager_LinkChangeKey_WiFiName");
          if (!v16 || v16 == -6727) {
            sub_226844EC8(a2, v22, v23, v17, v18, v19, v20, v21);
          }
        }
      }
    }
  }
}

uint64_t sub_226844FD8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = malloc_type_calloc(1uLL, 0x18uLL, 0x1070040319640ECuLL);
  if (!v6) {
    return 4294960568;
  }
  if (!a1) {
    return 4294960591;
  }
  *uint64_t v6 = a1;
  v6[1] = a2;
  *((unsigned char *)v6 + 16) = a3;
  dispatch_async_f(*(dispatch_queue_t *)(a1 + 8), v6, (dispatch_function_t)sub_22684506C);
  return 0;
}

uint64_t sub_226845064(uint64_t a1, uint64_t a2)
{
  return sub_226844FD8(a1, a2, 0);
}

void sub_22684506C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268145E28 <= 3000 && (dword_268145E28 != -1 || sub_226865630((uint64_t)&dword_268145E28, 0xBB8u))) {
    sub_226865EB4((uint64_t)&dword_268145E28, (uint64_t)"void __StartBrowseEx2(void *)", 3000, (uint64_t)"%s: starting browse\n", a5, a6, a7, a8, (uint64_t)"__StartBrowseEx2");
  }
  if (!**(void **)a1 && !sub_2268FF0EC(*(NSObject ****)a1, "ACPBrowserSession"))
  {
    sub_2268FF1E0(**(void **)a1, *(NSObject **)(*(void *)a1 + 8));
    sub_2268FF27C(**(void **)a1, (uint64_t)sub_22684543C, *(void *)a1);
    uint64_t v9 = 1;
    while (1)
    {
      uint64_t v10 = *((unsigned char *)a1 + 16) ? 0 : "local.";
      if (!sub_2268FF284(**(dispatch_queue_t ***)a1, "_airport._tcp", v10, *((const char **)a1 + 1), 0)) {
        break;
      }
      if (dword_268145E28 <= 5000 && (dword_268145E28 != -1 || sub_226865630((uint64_t)&dword_268145E28, 0x1388u))) {
        sub_226865EB4((uint64_t)&dword_268145E28, (uint64_t)"void __StartBrowseEx2(void *)", 5000, (uint64_t)"### waiting for bonjour to become ready (%d)\n", v11, v12, v13, v14, v9);
      }
      sleep(1u);
      uint64_t v9 = (v9 + 1);
      if (v9 == 31) {
        goto LABEL_22;
      }
    }
    if (dword_268145E28 <= 3000 && (dword_268145E28 != -1 || sub_226865630((uint64_t)&dword_268145E28, 0xBB8u))) {
      sub_226865EB4((uint64_t)&dword_268145E28, (uint64_t)"void __StartBrowseEx2(void *)", 3000, (uint64_t)"AirPort discovery started\n", v11, v12, v13, v14, v15);
    }
  }
LABEL_22:

  free(a1);
}

uint64_t sub_226845250(NSObject ***a1, const void *a2)
{
  uint64_t result = 4294960591;
  if (a1 && a2)
  {
    if (*a1)
    {
      sub_2268FF59C(*a1, a2, 1);
      return 0;
    }
    else
    {
      return 4294960591;
    }
  }
  return result;
}

uint64_t sub_226845294(dispatch_queue_t *context)
{
  if (!context) {
    return 4294960591;
  }
  dispatch_async_f(context[1], context, (dispatch_function_t)sub_2268452D8);
  return 0;
}

void sub_2268452D8(dispatch_queue_t **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a1)
  {
    uint64_t v10 = *a1;
    if (v10)
    {
      sub_2268FF4E8(v10);
      sub_2268FF228(*a1);
      *a1 = 0;
      if (dword_268145E28 <= 3000 && (dword_268145E28 != -1 || sub_226865630((uint64_t)&dword_268145E28, 0xBB8u)))
      {
        sub_226865EB4((uint64_t)&dword_268145E28, (uint64_t)"void _ACPBrowserSession_StopBrowse(void *)", 3000, (uint64_t)"AirPort discovery stopped\n", v11, v12, v13, v14, a9);
      }
    }
  }
}

uint64_t sub_226845378(void *context)
{
  if (!context) {
    return 4294960591;
  }
  if (!*((unsigned char *)context + 40))
  {
    *((unsigned char *)context + 40) = 1;
    dispatch_async_f(*((dispatch_queue_t *)context + 1), context, (dispatch_function_t)sub_2268453CC);
  }
  return 0;
}

void sub_2268453CC(dispatch_queue_t *a1)
{
  CFNotificationCenterRef LocalCenter = CFNotificationCenterGetLocalCenter();
  if (LocalCenter) {
    CFNotificationCenterRemoveObserver(LocalCenter, a1, @"com.apple.AirPort.WiFiShim.Notification.LinkChange", 0);
  }
  if (a1) {
    dispatch_async_f(a1[1], a1, (dispatch_function_t)sub_2268452D8);
  }
  uint64_t v3 = a1[1];

  dispatch_release(v3);
}

void sub_22684543C(int a1, CFDictionaryRef theDict, uint64_t a3)
{
  v90[2] = *(const char **)MEMORY[0x263EF8340];
  if (a1 != 3)
  {
    if (a3)
    {
      if (*(void *)a3)
      {
        CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        CFStringRef MutableCopy = (const __CFString *)CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, theDict);
        if (MutableCopy)
        {
          CFDictionaryRef v12 = (const __CFDictionary *)MutableCopy;
          v90[0] = 0;
          v88 = 0;
          sub_22686088C(MutableCopy, (uint64_t)v90, (UInt8 *)"%ks", v7, v8, v9, v10, v11, (uint64_t)"services");
          if (!v13)
          {
            if (v90[0])
            {
              CFIndex Count = CFArrayGetCount((CFArrayRef)v90[0]);
              if (Count)
              {
                CFIndex v20 = Count;
                if (Count >= 1)
                {
                  uint64_t v21 = 0;
                  do
                  {
                    v87 = 0;
                    sub_22686088C((const __CFString *)v90[0], (uint64_t)&v87, (UInt8 *)"[*]", v15, v16, v17, v18, v19, v21);
                    if (v27) {
                      goto LABEL_6;
                    }
                    if (!v87) {
                      goto LABEL_6;
                    }
                    sub_22686088C(v87, (uint64_t)&v88, (UInt8 *)"%ks", v22, v23, v24, v25, v26, (uint64_t)"ifname");
                    if (v33) {
                      goto LABEL_6;
                    }
                    *(void *)key = 0;
                    sub_22686088C(*(const __CFString **)(a3 + 48), (uint64_t)key, (UInt8 *)"%kO", v28, v29, v30, v31, v32, (uint64_t)v88);
                    if (*(void *)key)
                    {
                      if (sub_226860774(v5, (__CFArray *)v87, (uint64_t)"%kO=%O", v15, v16, v17, v18, v19, @"wifiname"))goto LABEL_6; {
                    }
                      }
                  }
                  while (v20 != ++v21);
                }
                CFDataRef v34 = (const __CFData *)CFDictionaryGetValue(v12, @"txt");
                if (v34)
                {
                  CFDataRef v35 = v34;
                  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v5, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
                  if (Mutable)
                  {
                    theDicta = Mutable;
                    CFTypeRef cf = 0;
                    value = 0;
                    uint8_t valueLen = 0;
                    BytePtr = CFDataGetBytePtr(v35);
                    uint16_t Length = CFDataGetLength(v35);
                    unsigned int v39 = TXTRecordGetCount(Length, BytePtr);
                    if (v39)
                    {
                      unsigned int v40 = v39;
                      uint16_t v41 = 0;
                      v82 = (const void *)*MEMORY[0x263EFFB40];
                      do
                      {
                        if (!TXTRecordGetItemAtIndex(Length, BytePtr, v41, 0x20u, (char *)key, &valueLen, (const void **)&value)&& strlen((const char *)key) == 4)
                        {
                          uint64_t v42 = bswap32(key[0]);
                          if (!sub_22683FB04(v42, (UInt8 *)value, valueLen, (CFStringRef *)&cf))
                          {
                            int v48 = sub_226860774(0, theDicta, (uint64_t)"%kC=%O", v43, v44, v45, v46, v47, v42);
                            CFRelease(cf);
                            if (v42 == 1886547810 && !v48)
                            {
                              uint64_t v54 = (unsigned __int8 *)value;
                              uint64_t v55 = valueLen;
                              v87 = 0;
                              v88 = value;
                              if (!sub_226860774(0, theDicta, (uint64_t)"%kO=[%@]", v49, v50, v51, v52, v53, @"problemArray"))
                              {
                                if (v55)
                                {
                                  v81 = BytePtr;
                                  uint64_t v56 = v55;
                                  char v57 = 0;
                                  unint64_t v58 = (unint64_t)&v54[v56];
                                  do
                                  {
                                    unint64_t v59 = v58;
                                    if (sub_2268702EC(v54, v58, 0x3Bu, v90, 16, 0, 0, (unsigned __int8 **)&v88))break; {
                                    sub_226860774(0, (__CFArray *)v87, (uint64_t)"%s", v60, v61, v62, v63, v64, (uint64_t)v90);
                                    }
                                    if (LOWORD(v90[0]) == 43) {
                                      char v57 = 1;
                                    }
                                    uint64_t v54 = (unsigned __int8 *)v88;
                                    unint64_t v58 = v59;
                                  }
                                  while ((unint64_t)v88 < v59);
                                  BytePtr = v81;
                                  if (v57) {
                                    CFDictionarySetValue(theDicta, @"hasMoreProblems", v82);
                                  }
                                }
                              }
                            }
                          }
                        }
                        ++v41;
                      }
                      while (v40 > v41);
                    }
                    v88 = 0;
                    if (!CFDictionaryGetValue(theDicta, @"syVs"))
                    {
                      v90[0] = 0;
                      CFStringRef v70 = (const __CFString *)CFDictionaryGetValue(theDicta, @"syDs");
                      if (v70 && !sub_226861988(v70, v90, (UInt8 **)&v88))
                      {
                        v71 = (char *)v90[0];
                        v72 = strstr((char *)v90[0], " V");
                        if (v72) {
                          v71 = v72 + 2;
                        }
                        if (!sub_22686F3A4(v71, -1, 0))
                        {
                          CFStringRef v73 = CFStringCreateWithCString(v5, v71, 0x8000100u);
                          if (v73)
                          {
                            CFStringRef v74 = v73;
                            CFDictionarySetValue(theDicta, @"syVs", v73);
                            CFRelease(v74);
                          }
                        }
                      }
                      if (v88) {
                        free(v88);
                      }
                    }
                    int v75 = sub_226860774(v5, v12, (uint64_t)"%kO=%O", v65, v66, v67, v68, v69, @"txt");
                    CFRelease(theDicta);
                    if (!v75 && !sub_22686084C((uint64_t)v12, theDicta))
                    {
                      if (a1 == 2)
                      {
                        if (dword_268145E28 <= 3000
                          && (dword_268145E28 != -1 || sub_226865630((uint64_t)&dword_268145E28, 0xBB8u)))
                        {
                          sub_226865EB4((uint64_t)&dword_268145E28, (uint64_t)"void browserCallBack(BonjourBrowserEventType, CFDictionaryRef, void *)", 3000, (uint64_t)"%s: removed service: %@\n", v76, v77, v78, v79, (uint64_t)"browserCallBack");
                        }
                        v80 = *(const void **)(a3 + 32);
                        goto LABEL_62;
                      }
                      if (a1 == 1)
                      {
                        if (dword_268145E28 <= 100
                          && (dword_268145E28 != -1 || sub_226865630((uint64_t)&dword_268145E28, 0x64u)))
                        {
                          sub_226865EB4((uint64_t)&dword_268145E28, (uint64_t)"void browserCallBack(BonjourBrowserEventType, CFDictionaryRef, void *)", 100, (uint64_t)"%s: starting resolve for service: %@\n", v76, v77, v78, v79, (uint64_t)"browserCallBack");
                        }
                        v80 = *(const void **)(a3 + 24);
LABEL_62:
                        sub_2268459B0(a3, v80, v12);
                      }
                    }
                  }
                }
              }
            }
          }
LABEL_6:
          CFRelease(v12);
        }
      }
    }
  }
}

void sub_2268459B0(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t v6 = malloc_type_calloc(1uLL, 0x10uLL, 0x600405BB7FD7CuLL);
  if (v6)
  {
    uint64_t v7 = v6;
    *uint64_t v6 = a2;
    CFRetain(a2);
    v7[1] = a3;
    CFRetain(a3);
    uint64_t v8 = *(NSObject **)(a1 + 16);
    dispatch_async_f(v8, v7, (dispatch_function_t)sub_226845A54);
  }
}

void sub_226845A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268145E28 <= 3000 && (dword_268145E28 != -1 || sub_226865630((uint64_t)&dword_268145E28, 0xBB8u))) {
    sub_226865EB4((uint64_t)&dword_268145E28, (uint64_t)"void __NotifyServiceAsync(void *)", 3000, (uint64_t)"%s: notify service\n", a5, a6, a7, a8, (uint64_t)"__NotifyServiceAsync");
  }
  CFNotificationCenterRef LocalCenter = CFNotificationCenterGetLocalCenter();
  if (LocalCenter) {
    CFNotificationCenterPostNotificationWithOptions(LocalCenter, *(CFNotificationName *)a1, 0, *(CFDictionaryRef *)(a1 + 8), 1uLL);
  }
  if (*(void *)a1)
  {
    CFRelease(*(CFTypeRef *)a1);
    *(void *)a1 = 0;
  }
  uint64_t v10 = *(const void **)(a1 + 8);
  if (v10) {
    CFRelease(v10);
  }

  free((void *)a1);
}

uint64_t sub_22684774C(uint64_t inSystemSoundID)
{
  if (inSystemSoundID) {
    return AudioServicesDisposeSystemSoundID(inSystemSoundID);
  }
  return inSystemSoundID;
}

uint64_t sub_22684E878(void *a1, char *a2, void *a3)
{
  if (objc_msgSend_length(a3, a2, (uint64_t)a3)) {
    objc_msgSend_setText_(a1, v6, (uint64_t)a3);
  }
  else {
    objc_msgSend_setText_(a1, v6, @"\n");
  }
  objc_msgSend_sizeToFit(a1, v7, v8);
  objc_msgSend_setNeedsLayout(a1, v9, v10);

  return objc_msgSend_setNeedsLayout(a2, v11, v12);
}

BOOL sub_22684EA0C(BOOL result, int a2)
{
  if (result)
  {
    uint64_t v2 = (void *)result;
    uint64_t v3 = sub_22685D6E8(a2);
    return objc_msgSend_indexOfObject_(v2, v4, v3) != 0x7FFFFFFFFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_22684EA54(int a1, const char *a2)
{
  uint64_t v6 = 0;
  if (a1 > 1651722063)
  {
    if (a1 != 1651722064 && a1 != 1651725131) {
      goto LABEL_12;
    }
    uint64_t v4 = 63;
LABEL_9:
    uint64_t v6 = v4;
    uint64_t v5 = 3;
    return objc_msgSend_formatterForBSFormatter_withMaxLen_(APFormatter, a2, v5);
  }
  if (a1 == 1651716432)
  {
    uint64_t v4 = sub_2268A61A8(1651721296);
    goto LABEL_9;
  }
  if (a1 == 1651720528)
  {
    uint64_t v6 = sub_2268A61A8(1651721296);
    return objc_msgSend_formatterForBSFormatter_withMaxLen_(APFormatter, v2, 1);
  }
LABEL_12:
  uint64_t v5 = sub_2268A8284(a1, &v6);
  uint64_t result = 0;
  if (v5 && v6) {
    return objc_msgSend_formatterForBSFormatter_withMaxLen_(APFormatter, a2, v5);
  }
  return result;
}

uint64_t sub_22685218C(const __CFString *a1, CFTypeRef *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFTypeRef cf = 0;
  if (a2) {
    *a2 = 0;
  }
  if (!a1) {
    return 0;
  }
  sub_22686088C(a1, (uint64_t)&cf, (UInt8 *)"%kO.%kO", a4, a5, a6, a7, a8, @"kNetworkLinkManager_LinkChangeKey_IPv4Dict");
  if (v10 == -6727)
  {
    sub_22686088C(a1, (uint64_t)&cf, (UInt8 *)"%kO.%kO", v11, v12, v13, v14, v15, @"kNetworkLinkManager_LinkChangeKey_IPv6Dict");
    if (v10 == -6727)
    {
      sub_22686088C(a1, (uint64_t)&cf, (UInt8 *)"%kO.%kO.[*]", v16, v12, v13, v14, v15, @"kNetworkLinkManager_LinkChangeKey_IPv6Dict");
      if (v10 == -6727) {
        sub_22686088C(a1, (uint64_t)&cf, (UInt8 *)"%kO.%kO.[*]", v17, v12, v13, v14, v15, @"kNetworkLinkManager_LinkChangeKey_IPv4Dict");
      }
    }
  }
  uint64_t v18 = 0;
  if (!v10)
  {
    CFStringRef v19 = (const __CFString *)cf;
    if (cf)
    {
      if (dword_2681461E8 <= 800)
      {
        if (dword_2681461E8 != -1
          || (v20 = sub_226865630((uint64_t)&dword_2681461E8, 0x320u), CFStringRef v19 = (const __CFString *)cf, v20))
        {
          sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"uint32_t _NetworkLinkManager_GetNetworkSignatureAndHashIdentifier(CFDictionaryRef, CFStringRef *)", 800, (uint64_t)"hashStr: %@\n", v12, v13, v14, v15, (uint64_t)v19);
          CFStringRef v19 = (const __CFString *)cf;
        }
      }
      CFTypeID v21 = CFGetTypeID(v19);
      if (v21 == CFStringGetTypeID()
        && (uint64_t v25 = 0, __s = 0, !sub_226861988(v19, (const char **)&__s, (UInt8 **)&v25)))
      {
        size_t v23 = strlen(__s);
        uint64_t v18 = sub_22686A4E0(1u, 0, (unsigned __int8 *)__s, v23);
        if (v25) {
          free(v25);
        }
      }
      else
      {
        uint64_t v18 = 0;
      }
      if (a2) {
        *a2 = cf;
      }
    }
  }
  return v18;
}

uint64_t sub_226852378(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_2681461E8 <= 800 && (dword_2681461E8 != -1 || sub_226865630((uint64_t)&dword_2681461E8, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"OSStatus _NetworkLinkManager_Create(CFAllocatorRef, CFStringRef, CFNetworkLinkManagerContextRef *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v34);
  }
  if (!a2) {
    return 0;
  }
  if (!qword_268148250) {
    qword_268148250 = _CFRuntimeRegisterClass();
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  uint64_t v10 = Instance;
  if (Instance)
  {
    *(void *)(Instance + 24) = 0;
    *(void *)(Instance + 32) = Instance;
    *(void *)(Instance + 40) = 0;
    *(void *)(Instance + 48) = 0;
    *(void *)(Instance + 56) = 0;
    CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    SCDynamicStoreRef v12 = SCDynamicStoreCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], @"com.apple.airport.airportutility", (SCDynamicStoreCallBack)sub_226852D94, (SCDynamicStoreContext *)(Instance + 24));
    *(void *)(v10 + 16) = v12;
    if (v12)
    {
      SCPreferencesRef v20 = SCPreferencesCreateWithAuthorization(v11, @"com.apple.airport.airportutility", 0, 0);
      *(void *)(v10 + 64) = v20;
      if (v20)
      {
        *(void *)(v10 + 88) = a2;
        CFRetain(a2);
        CFStringRef v21 = *(const __CFString **)(v10 + 88);
        if (dword_2681461E8 <= 800 && (dword_2681461E8 != -1 || sub_226865630((uint64_t)&dword_2681461E8, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"OSStatus _NetworkLink_InitDynamicStoreInfo(CFNetworkLinkManagerContextRef, CFStringRef)", 800, (uint64_t)" \n", v16, v17, v18, v19, v34);
        }
        if (v21)
        {
          if (*(void *)(v10 + 16))
          {
            if (*(void *)(v10 + 64))
            {
              CFStringRef v22 = sub_226853090(v10, v21);
              if (v22)
              {
                CFStringRef v23 = v22;
                CFStringRef v24 = (const __CFString *)*MEMORY[0x263F1BC10];
                CFStringRef NetworkServiceEntity = SCDynamicStoreKeyCreateNetworkServiceEntity(v11, (CFStringRef)*MEMORY[0x263F1BC10], v22, (CFStringRef)*MEMORY[0x263F1BC50]);
                *(void *)(v10 + 80) = NetworkServiceEntity;
                if (NetworkServiceEntity)
                {
                  CFStringRef v26 = SCDynamicStoreKeyCreateNetworkServiceEntity(v11, v24, v23, (CFStringRef)*MEMORY[0x263F1BC58]);
                  *(void *)(v10 + 112) = v26;
                  if (v26)
                  {
                    CFStringRef v27 = SCDynamicStoreKeyCreateNetworkServiceEntity(v11, v24, v23, (CFStringRef)*MEMORY[0x263F1BC38]);
                    *(void *)(v10 + 104) = v27;
                    if (v27)
                    {
                      uint64_t v28 = *(const __SCDynamicStore **)(v10 + 16);
                      CFStringRef v29 = SCDynamicStoreKeyCreateNetworkServiceEntity(v11, (CFStringRef)*MEMORY[0x263F1BC08], v23, (CFStringRef)*MEMORY[0x263F1BC60]);
                      CFDictionaryRef v30 = (const __CFDictionary *)SCDynamicStoreCopyValue(v28, v29);
                      if (v29) {
                        CFRelease(v29);
                      }
                      if (v30)
                      {
                        CFDataRef Value = CFDictionaryGetValue(v30, (const void *)*MEMORY[0x263F1BDA0]);
                        if (Value) {
                          Boolean v32 = CFEqual(Value, (CFTypeRef)*MEMORY[0x263F1BC20]);
                        }
                        else {
                          Boolean v32 = 0;
                        }
                        CFRelease(v30);
                      }
                      else
                      {
                        Boolean v32 = 0;
                      }
                      *(unsigned char *)(v10 + 120) = v32;
                      CFRelease(v23);
                      return v10;
                    }
                  }
                }
                CFRelease(v23);
              }
            }
          }
        }
      }
    }
    sub_226852960(v10, v13, v14, v15, v16, v17, v18, v19);
    return 0;
  }
  return v10;
}

uint64_t sub_226852648(uint64_t a1, CFTypeRef cf)
{
  uint64_t v2 = 4294960591;
  if (!a1 || !cf) {
    return v2;
  }
  CFTypeRef v5 = *(CFTypeRef *)(a1 + 96);
  if (v5 != cf && v5 != 0) {
    CFRelease(v5);
  }
  *(void *)(a1 + 96) = cf;
  CFRetain(cf);
  CFArrayRef patterns = 0;
  if (dword_2681461E8 <= 800 && (dword_2681461E8 != -1 || sub_226865630((uint64_t)&dword_2681461E8, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"OSStatus _NetworkLink_InitDynamicStoreMonitor(CFNetworkLinkManagerContextRef)", 800, (uint64_t)" \n", v7, v8, v9, v10, v48);
  }
  if (*(void *)(a1 + 16) && *(void *)(a1 + 64))
  {
    CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFStringRef v12 = (const __CFString *)*MEMORY[0x263F1BC10];
    CFStringRef v13 = (const __CFString *)*MEMORY[0x263F1BBF0];
    CFStringRef NetworkServiceEntity = SCDynamicStoreKeyCreateNetworkServiceEntity((CFAllocatorRef)*MEMORY[0x263EFFB08], (CFStringRef)*MEMORY[0x263F1BC10], (CFStringRef)*MEMORY[0x263F1BBF0], (CFStringRef)*MEMORY[0x263F1BC50]);
    if (NetworkServiceEntity)
    {
      CFStringRef v20 = NetworkServiceEntity;
      uint64_t v2 = sub_22685FC7C(v11, (CFTypeRef *)&patterns, (uint64_t)"[%O]", v15, v16, v17, v18, v19, (uint64_t)NetworkServiceEntity);
      CFRelease(v20);
      if (v2) {
        goto LABEL_31;
      }
      if (!patterns) {
        return 4294960568;
      }
      CFStringRef v21 = SCDynamicStoreKeyCreateNetworkServiceEntity(v11, v12, v13, (CFStringRef)*MEMORY[0x263F1BC58]);
      if (v21)
      {
        CFStringRef v27 = v21;
        uint64_t v2 = sub_226860774(v11, patterns, (uint64_t)"%O", v22, v23, v24, v25, v26, (uint64_t)v21);
        CFRelease(v27);
        if (v2) {
          goto LABEL_31;
        }
        CFStringRef NetworkInterfaceEntity = SCDynamicStoreKeyCreateNetworkInterfaceEntity(v11, v12, v13, (CFStringRef)*MEMORY[0x263F1BC70]);
        if (NetworkInterfaceEntity)
        {
          CFStringRef v34 = NetworkInterfaceEntity;
          uint64_t v2 = sub_226860774(v11, patterns, (uint64_t)"%O", v29, v30, v31, v32, v33, (uint64_t)NetworkInterfaceEntity);
          CFRelease(v34);
          if (!v2)
          {
            if (dword_2681461E8 <= 800 && (dword_2681461E8 != -1 || sub_226865630((uint64_t)&dword_2681461E8, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"OSStatus _NetworkLink_InitDynamicStoreMonitor(CFNetworkLinkManagerContextRef)", 800, (uint64_t)"SCDynamicStoreSetNotificationKeys keys: %@ patterns: %@\n", v35, v36, v37, v38, 0);
            }
            int v39 = SCDynamicStoreSetNotificationKeys(*(SCDynamicStoreRef *)(a1 + 16), 0, patterns);
            if (patterns)
            {
              CFRelease(patterns);
              CFArrayRef patterns = 0;
            }
            if (v39) {
              goto LABEL_28;
            }
            uint64_t v2 = SCError();
            if (dword_2681461E8 <= 800 && (dword_2681461E8 != -1 || sub_226865630((uint64_t)&dword_2681461E8, 0x320u)))
            {
              uint64_t v43 = SCErrorString(v2);
              sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"OSStatus _NetworkLink_InitDynamicStoreMonitor(CFNetworkLinkManagerContextRef)", 800, (uint64_t)"SCDynamicStoreSetNotificationKeys failed: %s\n", v44, v45, v46, v47, (uint64_t)v43);
            }
            if (!v2)
            {
LABEL_28:
              CFRunLoopSourceRef RunLoopSource = SCDynamicStoreCreateRunLoopSource(v11, *(SCDynamicStoreRef *)(a1 + 16), 0);
              *(void *)(a1 + 72) = RunLoopSource;
              if (RunLoopSource)
              {
                Main = CFRunLoopGetMain();
                CFRunLoopAddSource(Main, *(CFRunLoopSourceRef *)(a1 + 72), (CFRunLoopMode)*MEMORY[0x263EFFE88]);
                uint64_t v2 = 0;
              }
              else
              {
                uint64_t v2 = 4294960578;
              }
            }
          }
          goto LABEL_31;
        }
      }
    }
    uint64_t v2 = 4294960568;
  }
LABEL_31:
  if (patterns) {
    CFRelease(patterns);
  }
  return v2;
}

uint64_t sub_226852960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_2681461E8 <= 800 && (dword_2681461E8 != -1 || sub_226865630((uint64_t)&dword_2681461E8, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"OSStatus NetworkLinkManager_Release(CFNetworkLinkManagerContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v17);
  }
  if (!a1) {
    return 4294960591;
  }
  if (*(void *)(a1 + 72))
  {
    SCDynamicStoreSetNotificationKeys(*(SCDynamicStoreRef *)(a1 + 16), 0, 0);
    Main = CFRunLoopGetMain();
    CFRunLoopRemoveSource(Main, *(CFRunLoopSourceRef *)(a1 + 72), (CFRunLoopMode)*MEMORY[0x263EFFE88]);
    uint64_t v10 = *(const void **)(a1 + 72);
    if (v10)
    {
      CFRelease(v10);
      *(void *)(a1 + 72) = 0;
    }
  }
  CFAllocatorRef v11 = *(const void **)(a1 + 88);
  if (v11)
  {
    CFRelease(v11);
    *(void *)(a1 + 88) = 0;
  }
  CFStringRef v12 = *(const void **)(a1 + 64);
  if (v12)
  {
    CFRelease(v12);
    *(void *)(a1 + 64) = 0;
  }
  CFStringRef v13 = *(const void **)(a1 + 16);
  if (v13)
  {
    CFRelease(v13);
    *(void *)(a1 + 16) = 0;
  }
  uint64_t v14 = *(const void **)(a1 + 80);
  if (v14)
  {
    CFRelease(v14);
    *(void *)(a1 + 80) = 0;
  }
  uint64_t v15 = *(const void **)(a1 + 112);
  if (v15)
  {
    CFRelease(v15);
    *(void *)(a1 + 112) = 0;
  }
  uint64_t result = *(void *)(a1 + 104);
  if (result)
  {
    CFRelease((CFTypeRef)result);
    uint64_t result = 0;
    *(void *)(a1 + 104) = 0;
  }
  return result;
}

uint64_t sub_226852A7C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v46 = 0;
  uint64_t v3 = 4294960591;
  if (!a1 || !a2) {
    return v3;
  }
  CFTypeRef v44 = 0;
  CFDictionaryRef v45 = 0;
  if (!*(unsigned char *)(a1 + 120)) {
    goto LABEL_9;
  }
  uint64_t v6 = sub_2269015F8(&v45, a2, a3);
  if (v6 == -6727) {
    goto LABEL_9;
  }
  uint64_t v3 = v6;
  if (!v6)
  {
    if (v45)
    {
      CFDictionaryGetValue(v45, @"SSID_STR");
      if (v45)
      {
        CFRelease(v45);
        CFDictionaryRef v45 = 0;
      }
LABEL_9:
      CFStringRef v7 = (const __CFString *)SCDynamicStoreCopyValue(*(SCDynamicStoreRef *)(a1 + 16), *(CFStringRef *)(a1 + 80));
      CFStringRef v15 = sub_226852CF0(v7, v8, v9, v10, v11, v12, v13, v14);
      CFStringRef v16 = (const __CFString *)SCDynamicStoreCopyValue(*(SCDynamicStoreRef *)(a1 + 16), *(CFStringRef *)(a1 + 112));
      CFStringRef v24 = v16;
      if (!v15) {
        CFStringRef v15 = sub_226852CF0(v16, v17, v18, v19, v20, v21, v22, v23);
      }
      CFPropertyListRef v30 = SCDynamicStoreCopyValue(*(SCDynamicStoreRef *)(a1 + 16), *(CFStringRef *)(a1 + 104));
      if (dword_2681461E8 <= 800 && (dword_2681461E8 != -1 || sub_226865630((uint64_t)&dword_2681461E8, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"OSStatus NetworkLinkManager_CopyLinkStatusDictionary(CFNetworkLinkManagerContextRef, CFDictionaryRef *)", 800, (uint64_t)"linkState: %d wifiName: %@ ipDict: %@ ipV6Dict: %@\n", v26, v27, v28, v29, (uint64_t)v15);
      }
      CFAllocatorRef v31 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      uint64_t v3 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], (CFTypeRef *)&v46, (uint64_t)"{%kO=%O%kO=%b%kO=%i%kO=%O%kO=%O%kO=%O%kO=%O}", v25, v26, v27, v28, v29, @"kNetworkLinkManager_LinkChangeKey_IfName");
      if (!v3)
      {
        if (v46)
        {
          CFTypeRef v44 = 0;
          sub_22685218C(v46, &v44, v32, v33, v34, v35, v36, v37);
          uint64_t v3 = sub_226860774(v31, (__CFArray *)v46, (uint64_t)"%kO=%lli%kO=%O", v39, v40, v41, v42, v43, @"kNetworkLinkManager_LinkChangeKey_HashIdentifier");
          if (!v3)
          {
            *(void *)a2 = v46;
            uint64_t v46 = 0;
          }
        }
        else
        {
          uint64_t v3 = 4294960568;
        }
      }
      if (v7) {
        CFRelease(v7);
      }
      if (v24) {
        CFRelease(v24);
      }
      if (v30) {
        CFRelease(v30);
      }
      goto LABEL_22;
    }
    uint64_t v3 = 4294960568;
  }
LABEL_22:
  if (v46) {
    CFRelease(v46);
  }
  return v3;
}

CFStringRef sub_226852CF0(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result)
  {
    CFStringRef v8 = result;
    uint64_t v17 = 0;
    sub_22686088C(result, (uint64_t)&v17, (UInt8 *)"%kO", a4, a5, a6, a7, a8, *MEMORY[0x263F1BD38]);
    if (v9 == -6727) {
      sub_22686088C(v8, (uint64_t)&v17, (UInt8 *)"%kO", v12, v13, v14, v15, v16, *MEMORY[0x263F1BD68]);
    }
    if (v9)
    {
      return 0;
    }
    else
    {
      uint64_t result = v17;
      if (v17) {
        return (const __CFString *)(objc_msgSend_count(v17, v10, v11) != 0);
      }
    }
  }
  return result;
}

void sub_226852D94(const __SCDynamicStore *a1, CFArrayRef theArray, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_2681461E8 <= 800 && (dword_2681461E8 != -1 || sub_226865630((uint64_t)&dword_2681461E8, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"void _NetworkLink__DynamicStoreChanged(SCDynamicStoreRef, CFArrayRef, void *)", 800, (uint64_t)"changedKeys: %@ \n", a5, a6, a7, a8, (uint64_t)theArray);
  }
  if (a3)
  {
    CFIndex Count = CFArrayGetCount(theArray);
    if (Count >= 1)
    {
      CFIndex v11 = Count;
      int v34 = 0;
      CFIndex v12 = 0;
      CFAllocatorRef v13 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFStringRef v37 = (const __CFString *)*MEMORY[0x263F1BC08];
      CFStringRef v36 = (const __CFString *)*MEMORY[0x263F1BC60];
      key = (void *)*MEMORY[0x263F1BD98];
      CFStringRef suffix = (const __CFString *)*MEMORY[0x263F1BC50];
      while (1)
      {
        CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(theArray, v12);
        if (!ValueAtIndex) {
          goto LABEL_32;
        }
        if (!*(void *)(a3 + 88)) {
          goto LABEL_32;
        }
        CFStringRef v15 = ValueAtIndex;
        CFArrayRef ArrayBySeparatingStrings = CFStringCreateArrayBySeparatingStrings(v13, ValueAtIndex, @"/");
        if (!ArrayBySeparatingStrings) {
          goto LABEL_32;
        }
        CFArrayRef v17 = ArrayBySeparatingStrings;
        if (CFArrayGetCount(ArrayBySeparatingStrings) == 5)
        {
          CFStringRef v18 = (const __CFString *)CFArrayGetValueAtIndex(v17, 3);
          if (CFStringGetLength(v18) > 4)
          {
            CFStringRef NetworkServiceEntity = SCDynamicStoreKeyCreateNetworkServiceEntity(v13, v37, v18, v36);
LABEL_16:
            CFDictionaryRef v26 = (const __CFDictionary *)SCDynamicStoreCopyValue(a1, NetworkServiceEntity);
            if (dword_2681461E8 <= 800 && (dword_2681461E8 != -1 || sub_226865630((uint64_t)&dword_2681461E8, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"Boolean _NetworkLink__IsMyInterfaceName(CFNetworkLinkManagerContextRef, SCDynamicStoreRef, CFStringRef)", 800, (uint64_t)"interface_key: %@ returned interface_dict: %@ \n", v22, v23, v24, v25, (uint64_t)NetworkServiceEntity);
            }
            if (NetworkServiceEntity) {
              CFRelease(NetworkServiceEntity);
            }
            CFRelease(v17);
            if (!v26) {
              goto LABEL_32;
            }
            CFDataRef Value = CFDictionaryGetValue(v26, key);
            if (Value)
            {
              int v28 = CFEqual(Value, *(CFTypeRef *)(a3 + 88));
              CFRelease(v26);
              if (v28)
              {
                if (CFStringHasSuffix(v15, suffix))
                {
                  uint64_t v29 = *(const void **)(a3 + 80);
                  if (v29) {
                    CFRelease(v29);
                  }
                  *(void *)(a3 + 80) = v15;
                  CFRetain(v15);
                }
                int v34 = 1;
              }
              goto LABEL_32;
            }
            CFArrayRef v17 = v26;
            goto LABEL_31;
          }
          CFStringRef v19 = sub_226853090(a3, v18);
          if (v19)
          {
            CFStringRef v20 = v19;
            CFStringRef NetworkServiceEntity = SCDynamicStoreKeyCreateNetworkServiceEntity(v13, v37, v19, v36);
            CFRelease(v20);
            goto LABEL_16;
          }
        }
LABEL_31:
        CFRelease(v17);
LABEL_32:
        if (v11 == ++v12)
        {
          if (v34)
          {
            if (*(void *)(a3 + 96))
            {
              CFNotificationCenterRef LocalCenter = CFNotificationCenterGetLocalCenter();
              if (LocalCenter)
              {
                uint64_t v32 = LocalCenter;
                CFDictionaryRef userInfo = 0;
                if (!sub_226852A7C(a3, (char *)&userInfo, v31))
                {
                  if (userInfo)
                  {
                    CFNotificationCenterPostNotificationWithOptions(v32, *(CFNotificationName *)(a3 + 96), 0, userInfo, 1uLL);
                    if (userInfo) {
                      CFRelease(userInfo);
                    }
                  }
                }
              }
            }
          }
          return;
        }
      }
    }
  }
}

CFStringRef sub_226853090(uint64_t a1, const __CFString *a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v3 = SCNetworkSetCopyCurrent(*(SCPreferencesRef *)(a1 + 64));
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  CFArrayRef v5 = SCNetworkSetCopyServices(v3);
  CFIndex Count = CFArrayGetCount(v5);
  if (Count >= 1)
  {
    CFIndex v7 = Count;
    CFIndex v8 = 0;
    while (1)
    {
      CFStringRef ValueAtIndex = (const __SCNetworkService *)CFArrayGetValueAtIndex(v5, v8);
      if (ValueAtIndex)
      {
        uint64_t v10 = ValueAtIndex;
        Interface = SCNetworkServiceGetInterface(ValueAtIndex);
        if (Interface)
        {
          CFIndex v12 = Interface;
          if (SCNetworkInterfaceGetInterfaceType(Interface))
          {
            CFStringRef BSDName = SCNetworkInterfaceGetBSDName(v12);
            if (BSDName)
            {
              if (CFEqual(BSDName, a2)) {
                break;
              }
            }
          }
        }
      }
      if (v7 == ++v8) {
        goto LABEL_11;
      }
    }
    CFRetain(v10);
    CFStringRef ServiceID = SCNetworkServiceGetServiceID(v10);
    CFStringRef v14 = ServiceID;
    if (ServiceID)
    {
      CFRetain(ServiceID);
      if (dword_2681461E8 <= 800 && (dword_2681461E8 != -1 || sub_226865630((uint64_t)&dword_2681461E8, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"CFStringRef _NetworkLink__CopyServiceIDForIfName(CFNetworkLinkManagerContextRef, CFStringRef)", 800, (uint64_t)"inIfName: %@ mapped to foundServiceID: %@ \n", v17, v18, v19, v20, (uint64_t)a2);
      }
    }
    CFRelease(v10);
    if (!v5) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_11:
  CFStringRef v14 = 0;
  if (v5) {
LABEL_12:
  }
    CFRelease(v5);
LABEL_13:
  CFRelease(v4);
  return v14;
}

uint64_t sub_2268531F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_2681461E8 <= 800 && (dword_2681461E8 != -1 || sub_226865630((uint64_t)&dword_2681461E8, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"void __NetworkLinkDealloc(CFTypeRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v10);
  }

  return sub_226852960(a1, a2, a3, a4, a5, a6, a7, a8);
}

BOOL sub_226853274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_2681461E8 <= 800 && (dword_2681461E8 != -1 || sub_226865630((uint64_t)&dword_2681461E8, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"Boolean __NetworkLinkEqual(CFTypeRef, CFTypeRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v11);
  }
  if (a1 == a2) {
    return 1;
  }
  BOOL result = 0;
  if (a1)
  {
    if (a2) {
      return CFEqual(*(CFStringRef *)(a1 + 88), *(CFStringRef *)(a2 + 88));
    }
  }
  return result;
}

unint64_t sub_226853318(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_2681461E8 <= 800 && (dword_2681461E8 != -1 || sub_226865630((uint64_t)&dword_2681461E8, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_2681461E8, (uint64_t)"CFHashCode __NetworkLinkHash(CFTypeRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v10);
  }
  return a1 >> 2;
}

CFStringRef sub_226853388(CFStringRef result)
{
  if (result)
  {
    p_isa = &result->isa;
    CFAllocatorRef v2 = CFGetAllocator(result);
    CFAllocatorRef v3 = CFGetAllocator(p_isa);
    return CFStringCreateWithFormat(v2, 0, @"<NetworkLinkManager %p [%p]>{ifName = %@}", p_isa, v3, p_isa[11]);
  }
  return result;
}

uint64_t sub_226855B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268146288 <= 800 && (dword_268146288 != -1 || sub_226865630((uint64_t)&dword_268146288, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"OSStatus _AssistantResourceManager_Create(CFAllocatorRef, CFStringRef, CFAssistantResourceManagerContextRef *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v24);
  }
  if (!a2) {
    return 0;
  }
  if (!qword_268148258) {
    qword_268148258 = _CFRuntimeRegisterClass();
  }
  uint64_t Instance = _CFRuntimeCreateInstance();
  if (Instance)
  {
    uint64_t v10 = malloc_type_calloc(1uLL, 0x70uLL, 0x10E0040D8572FD4uLL);
    *(void *)(Instance + 16) = v10;
    if (!v10) {
      goto LABEL_12;
    }
    *uint64_t v10 = Instance;
    uint64_t v11 = dispatch_queue_create("AssistantResourceManager_Internal_queue", 0);
    CFIndex v12 = *(void **)(Instance + 16);
    v12[9] = v11;
    dispatch_set_context(v11, v12);
    dispatch_set_finalizer_f(*(dispatch_object_t *)(*(void *)(Instance + 16) + 72), (dispatch_function_t)sub_226856694);
    CFAllocatorRef v13 = *(void **)(Instance + 16);
    v13[2] = 0;
    v13[3] = v13;
    v13[5] = 0;
    v13[6] = 0;
    v13[4] = 0;
    CFAllocatorRef v14 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFStringRef v15 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, @"%@.%@");
    *(void *)(*(void *)(Instance + 16) + 56) = v15;
    if (!v15) {
      goto LABEL_12;
    }
    sub_2268560FC(Instance, MEMORY[0x263EF83A0]);
    if (sub_226856750(*(void *)(Instance + 16))) {
      goto LABEL_12;
    }
    uint64_t v22 = *(void *)(Instance + 16);
    if (dword_268146288 <= 800 && (dword_268146288 != -1 || sub_226865630((uint64_t)&dword_268146288, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"OSStatus _AssistantResource_InitDynamicStoreInfo(AssistantResourceManagerPvtPtr)", 800, (uint64_t)" \n", v16, v17, v18, v19, @"com.apple.airport.airportassistant");
    }
    if (!v22
      || !*(void *)(v22 + 8)
      || (CFStringRef v23 = SCDynamicStoreKeyCreate(v14, @"%@:/%@/%@/%@", @"com.apple.airport.airportassistant", @"Resource", @"Application", @"Configuration"), (*(void *)(v22 + 64) = v23) == 0))
    {
LABEL_12:
      uint64_t v20 = *(dispatch_queue_t **)(Instance + 16);
      if (!*((unsigned char *)v20 + 104))
      {
        *((unsigned char *)v20 + 104) = 1;
        *uint64_t v20 = 0;
        dispatch_async_f(v20[9], v20, (dispatch_function_t)sub_2268561A4);
      }
      return 0;
    }
  }
  return Instance;
}

uint64_t sub_226855D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = 0;
  CFIndex v8 = &v7;
  uint64_t v9 = 0x2020000000;
  int v10 = 0;
  if (a1)
  {
    CFAllocatorRef v3 = *(NSObject **)(*(void *)(a1 + 16) + 72);
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 3221225472;
    v6[2] = sub_226855E44;
    v6[3] = &unk_2647B85D8;
    v6[6] = a2;
    v6[7] = a3;
    v6[4] = &v7;
    v6[5] = a1;
    dispatch_sync(v3, v6);
    uint64_t v4 = *((unsigned int *)v8 + 6);
  }
  else
  {
    uint64_t v4 = 4294960591;
    int v10 = -6705;
  }
  _Block_object_dispose(&v7, 8);
  return v4;
}

uint64_t sub_226855E44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(*(void *)(a1[5] + 16) + 88) = a1[6];
  *(void *)(*(void *)(a1[5] + 16) + 96) = a1[7];
  uint64_t v9 = a1[6];
  uint64_t v10 = *(void *)(a1[5] + 16);
  if (v9) {
    uint64_t result = sub_226855EA4(v10, a2, a3, a4, a5, a6, a7, a8);
  }
  else {
    uint64_t result = sub_226856078(v10);
  }
  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = result;
  return result;
}

uint64_t sub_226855EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFArrayRef keys = 0;
  if (dword_268146288 <= 800 && (dword_268146288 != -1 || sub_226865630((uint64_t)&dword_268146288, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"OSStatus _AssistantResourceManager_StartDynamicStoreMonitor(AssistantResourceManagerPvtPtr)", 800, (uint64_t)" \n", a5, a6, a7, a8, v23);
  }
  if (a1 && *(void *)(a1 + 8))
  {
    uint64_t v13 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], (CFTypeRef *)&keys, (uint64_t)"[%O]", a4, a5, a6, a7, a8, *(void *)(a1 + 64));
    if (!v13)
    {
      CFArrayRef v14 = keys;
      if (!keys) {
        return 4294960568;
      }
      if (dword_268146288 <= 800)
      {
        if (dword_268146288 != -1 || (v15 = sub_226865630((uint64_t)&dword_268146288, 0x320u), CFArrayRef v14 = keys, v15))
        {
          sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"OSStatus _AssistantResourceManager_StartDynamicStoreMonitor(AssistantResourceManagerPvtPtr)", 800, (uint64_t)"SCDynamicStoreSetNotificationKeys keys: %@ patterns: %@\n", v9, v10, v11, v12, (uint64_t)v14);
          CFArrayRef v14 = keys;
        }
      }
      int v16 = SCDynamicStoreSetNotificationKeys(*(SCDynamicStoreRef *)(a1 + 8), v14, 0);
      if (keys)
      {
        CFRelease(keys);
        CFArrayRef keys = 0;
      }
      if (v16) {
        goto LABEL_16;
      }
      uint64_t v13 = SCError();
      if (dword_268146288 <= 800 && (dword_268146288 != -1 || sub_226865630((uint64_t)&dword_268146288, 0x320u)))
      {
        uint64_t v18 = SCErrorString(v13);
        sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"OSStatus _AssistantResourceManager_StartDynamicStoreMonitor(AssistantResourceManagerPvtPtr)", 800, (uint64_t)"SCDynamicStoreSetNotificationKeys failed: %s\n", v19, v20, v21, v22, (uint64_t)v18);
      }
      if (!v13)
      {
LABEL_16:
        SCDynamicStoreSetDispatchQueue(*(SCDynamicStoreRef *)(a1 + 8), *(dispatch_queue_t *)(a1 + 72));
        uint64_t v13 = 0;
        *(unsigned char *)(a1 + 105) = 1;
      }
    }
  }
  else
  {
    uint64_t v13 = 4294960591;
  }
  if (keys) {
    CFRelease(keys);
  }
  return v13;
}

uint64_t sub_226856078(uint64_t a1)
{
  if (!a1) {
    return 4294960591;
  }
  if (!*(unsigned char *)(a1 + 105)) {
    return 0;
  }
  if (SCDynamicStoreSetNotificationKeys(*(SCDynamicStoreRef *)(a1 + 8), 0, 0)
    && SCDynamicStoreSetDispatchQueue(*(SCDynamicStoreRef *)(a1 + 8), 0))
  {
    uint64_t result = 0;
    *(unsigned char *)(a1 + 105) = 0;
  }
  else
  {
    return SCError();
  }
  return result;
}

void sub_2268560FC(uint64_t a1, NSObject *a2)
{
  if (a2) {
    CFAllocatorRef v3 = a2;
  }
  else {
    CFAllocatorRef v3 = MEMORY[0x263EF83A0];
  }
  dispatch_retain(v3);
  uint64_t v4 = *(void *)(a1 + 16);
  CFArrayRef v5 = *(NSObject **)(v4 + 80);
  if (v5)
  {
    dispatch_release(v5);
    uint64_t v4 = *(void *)(a1 + 16);
  }
  *(void *)(v4 + 80) = v3;
}

uint64_t sub_22685614C(uint64_t a1)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t v1 = *(dispatch_queue_t **)(a1 + 16);
  if (!*((unsigned char *)v1 + 104))
  {
    *((unsigned char *)v1 + 104) = 1;
    *uint64_t v1 = 0;
    dispatch_async_f(v1[9], v1, (dispatch_function_t)sub_2268561A4);
  }
  return 0;
}

void sub_2268561A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268146288 <= 800 && (dword_268146288 != -1 || sub_226865630((uint64_t)&dword_268146288, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"void __AssistantResourceManager_ReleaseOnQueue(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v10);
  }
  if (a1)
  {
    sub_226856BC4(a1);
    uint64_t v9 = *(NSObject **)(a1 + 72);
    if (v9)
    {
      dispatch_release(v9);
      *(void *)(a1 + 72) = 0;
    }
  }
}

uint64_t sub_22685622C(uint64_t a1, void *a2)
{
  CFTypeRef cf = 0;
  uint64_t v2 = 4294960591;
  if (a1)
  {
    if (a2)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 104))
        {
          return 4294960569;
        }
        else
        {
          sub_226856C04(*(SCDynamicStoreRef *)(v4 + 8), *(const __CFString **)(v4 + 64));
          uint64_t v2 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%kO=%i}", v6, v7, v8, v9, v10, @"kAssistantResourceManager_StateKey");
          CFTypeRef v15 = cf;
          if (v2)
          {
            if (cf) {
              CFRelease(cf);
            }
          }
          else if (cf)
          {
            if (dword_268146288 <= 800)
            {
              if (dword_268146288 != -1 || (v16 = sub_226865630((uint64_t)&dword_268146288, 0x320u), CFTypeRef v15 = cf, v16))
              {
                sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"OSStatus _AssistantResourceManager_CopyStatusDictionary(CFAssistantResourceManagerContextRef, CFDictionaryRef *)", 800, (uint64_t)"statusDict: %@\n", v11, v12, v13, v14, (uint64_t)v15);
                CFTypeRef v15 = cf;
              }
            }
            uint64_t v2 = 0;
            *a2 = v15;
          }
          else
          {
            return 4294960568;
          }
        }
      }
    }
  }
  return v2;
}

uint64_t sub_226856340(uint64_t a1)
{
  uint64_t v5 = 0;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000;
  int v8 = 0;
  if (a1)
  {
    uint64_t v1 = *(NSObject **)(*(void *)(a1 + 16) + 72);
    v4[0] = MEMORY[0x263EF8330];
    v4[1] = 3221225472;
    v4[2] = sub_226856400;
    v4[3] = &unk_2647B8600;
    v4[4] = &v5;
    v4[5] = a1;
    dispatch_sync(v1, v4);
    uint64_t v2 = *((unsigned int *)v6 + 6);
  }
  else
  {
    uint64_t v2 = 4294960591;
    int v8 = -6705;
  }
  _Block_object_dispose(&v5, 8);
  return v2;
}

void sub_226856400(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2 && (uint64_t v3 = *(void *)(v2 + 16)) != 0)
  {
    if (*(unsigned char *)(v3 + 104))
    {
      int v4 = -6727;
    }
    else
    {
      int v5 = sub_226856C04(*(SCDynamicStoreRef *)(v3 + 8), *(const __CFString **)(v3 + 64));
      if (v5 == 1)
      {
        pid_t valuePtr = getpid();
        CFNumberRef v6 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt64Type, &valuePtr);
        if (v6)
        {
          CFNumberRef v7 = v6;
          int v8 = SCDynamicStoreAddTemporaryValue(*(SCDynamicStoreRef *)(*(void *)(v2 + 16) + 8), *(CFStringRef *)(*(void *)(v2 + 16) + 64), v6);
          CFRelease(v7);
          if (v8) {
            goto LABEL_13;
          }
          int v4 = SCError();
          if (dword_268146288 <= 800 && (dword_268146288 != -1 || sub_226865630((uint64_t)&dword_268146288, 0x320u)))
          {
            uint64_t v9 = SCErrorString(v4);
            sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"OSStatus _AssistantResourceManager_AquireLock(CFAssistantResourceManagerContextRef)", 800, (uint64_t)"SCDynamicStoreSetValue failed: %s\n", v10, v11, v12, v13, (uint64_t)v9);
          }
          if (!v4) {
LABEL_13:
          }
            int v4 = 0;
        }
        else
        {
          int v4 = -6728;
        }
      }
      else if (v5 == 3)
      {
        int v4 = 0;
      }
      else
      {
        int v4 = -6709;
      }
    }
  }
  else
  {
    int v4 = -6705;
  }
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v4;
}

uint64_t sub_226856548(uint64_t a1)
{
  uint64_t v5 = 0;
  CFNumberRef v6 = &v5;
  uint64_t v7 = 0x2020000000;
  int v8 = 0;
  if (a1)
  {
    uint64_t v1 = *(NSObject **)(*(void *)(a1 + 16) + 72);
    v4[0] = MEMORY[0x263EF8330];
    v4[1] = 3221225472;
    v4[2] = sub_226856608;
    v4[3] = &unk_2647B8600;
    v4[4] = &v5;
    v4[5] = a1;
    dispatch_sync(v1, v4);
    uint64_t v2 = *((unsigned int *)v6 + 6);
  }
  else
  {
    uint64_t v2 = 4294960591;
    int v8 = -6705;
  }
  _Block_object_dispose(&v5, 8);
  return v2;
}

uint64_t sub_226856608(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2 && (uint64_t v3 = *(void *)(v2 + 16)) != 0)
  {
    if (*(unsigned char *)(v3 + 104))
    {
      uint64_t result = 4294960569;
    }
    else
    {
      int v5 = *(unsigned __int8 *)(v3 + 105);
      uint64_t result = sub_226856BC4(v3);
      if (!result)
      {
        uint64_t result = sub_226856750(v3);
        if (!result)
        {
          if (!v5 || (uint64_t result = sub_226855EA4(v3, v6, v7, v8, v9, v10, v11, v12), !result)) {
            uint64_t result = 0;
          }
        }
      }
    }
  }
  else
  {
    uint64_t result = 4294960591;
  }
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

void sub_226856694(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268146288 <= 800 && (dword_268146288 != -1 || sub_226865630((uint64_t)&dword_268146288, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"void __AssistantResourceManager_Finalizer(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v12);
  }
  if (a1)
  {
    uint64_t v9 = a1[10];
    if (v9)
    {
      dispatch_release(v9);
      a1[10] = 0;
    }
    uint64_t v10 = (const void *)a1[8];
    if (v10)
    {
      CFRelease(v10);
      a1[8] = 0;
    }
    uint64_t v11 = (const void *)a1[7];
    if (v11) {
      CFRelease(v11);
    }
    free(a1);
  }
}

uint64_t sub_226856750(uint64_t a1)
{
  if (!a1) {
    return 4294960591;
  }
  CFStringRef v2 = *(const __CFString **)(a1 + 56);
  if (!v2) {
    return 4294960578;
  }
  SCDynamicStoreRef v3 = SCDynamicStoreCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], v2, (SCDynamicStoreCallBack)sub_2268567C4, (SCDynamicStoreContext *)(a1 + 16));
  *(void *)(a1 + 8) = v3;
  if (v3) {
    return 0;
  }
  else {
    return 4294960560;
  }
}

void sub_2268567C4(int a1, CFArrayRef theArray, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268146288 <= 800 && (dword_268146288 != -1 || sub_226865630((uint64_t)&dword_268146288, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"void _AssistantResource__DynamicStoreChanged(SCDynamicStoreRef, CFArrayRef, void *)", 800, (uint64_t)"changedKeys: %@ \n", a5, a6, a7, a8, (uint64_t)theArray);
  }
  if (a3)
  {
    if (!*(unsigned char *)(a3 + 104))
    {
      CFIndex Count = CFArrayGetCount(theArray);
      if (Count >= 1)
      {
        CFIndex v11 = Count;
        char v12 = 0;
        for (CFIndex i = 0; i != v11; ++i)
        {
          CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(theArray, i);
          if (ValueAtIndex && CFEqual(ValueAtIndex, *(CFStringRef *)(a3 + 64))) {
            char v12 = 1;
          }
        }
        if (v12)
        {
          uint64_t v15 = *(void *)a3;
          if (*(void *)a3)
          {
            if (*(void *)(a3 + 80))
            {
              if (*(void *)(a3 + 88))
              {
                if (!*(unsigned char *)(a3 + 104))
                {
                  uint64_t v22 = 0;
                  if (!sub_22685622C(v15, &v22))
                  {
                    uint64_t v20 = v22;
                    if (v22)
                    {
                      if (dword_268146288 > 800) {
                        goto LABEL_26;
                      }
                      if (dword_268146288 == -1)
                      {
                        if (!sub_226865630((uint64_t)&dword_268146288, 0x320u)) {
                          goto LABEL_26;
                        }
                        uint64_t v20 = v22;
                      }
                      sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"OSStatus _SendResourceStatusChangedNotify(AssistantResourceManagerPvtPtr)", 800, (uint64_t)"linkStatusDict: %@ \n", v16, v17, v18, v19, v20);
LABEL_26:
                      uint64_t v21 = (char *)malloc_type_calloc(1uLL, 0x18uLL, 0xE0040BC9ECFC2uLL);
                      if (v21)
                      {
                        *(void *)uint64_t v21 = v22;
                        *(_OWORD *)(v21 + 8) = *(_OWORD *)(a3 + 88);
                        dispatch_async_f(*(dispatch_queue_t *)(a3 + 80), v21, (dispatch_function_t)sub_226856988);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_226856988(const void **a1)
{
  CFStringRef v2 = *a1;
  if (v2)
  {
    SCDynamicStoreRef v3 = (void (*)(void))a1[1];
    if (!v3 || (v3(), (CFStringRef v2 = *a1) != 0)) {
      CFRelease(v2);
    }
  }

  free(a1);
}

uint64_t sub_2268569E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268146288 <= 800 && (dword_268146288 != -1 || sub_226865630((uint64_t)&dword_268146288, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"void __AssistantResourceDealloc(CFTypeRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v10);
  }

  return sub_22685614C(a1);
}

BOOL sub_226856A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268146288 <= 800 && (dword_268146288 != -1 || sub_226865630((uint64_t)&dword_268146288, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"Boolean __AssistantResourceEqual(CFTypeRef, CFTypeRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v11);
  }
  if (a1 == a2) {
    return 1;
  }
  BOOL result = 0;
  if (a1)
  {
    if (a2) {
      return CFEqual(*(CFStringRef *)(*(void *)(a1 + 16) + 64), *(CFStringRef *)(*(void *)(a2 + 16) + 64));
    }
  }
  return result;
}

unint64_t sub_226856B0C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268146288 <= 800 && (dword_268146288 != -1 || sub_226865630((uint64_t)&dword_268146288, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"CFHashCode __AssistantResourceHash(CFTypeRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v10);
  }
  return a1 >> 2;
}

CFStringRef sub_226856B7C(CFStringRef result)
{
  if (result)
  {
    CFStringRef v1 = result;
    CFAllocatorRef v2 = CFGetAllocator(result);
    return CFStringCreateWithFormat(v2, 0, @"<AssistantResourceManager %p", v1);
  }
  return result;
}

uint64_t sub_226856BC4(uint64_t a1)
{
  uint64_t v2 = sub_226856078(a1);
  if (!v2)
  {
    SCDynamicStoreRef v3 = *(const void **)(a1 + 8);
    if (v3)
    {
      CFRelease(v3);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v2;
}

uint64_t sub_226856C04(SCDynamicStoreRef store, const __CFString *a2)
{
  uint64_t result = 0;
  if (store && a2)
  {
    CFNumberRef v4 = (const __CFNumber *)SCDynamicStoreCopyValue(store, a2);
    if (v4)
    {
      CFNumberRef v5 = v4;
      unsigned int valuePtr = 0;
      CFNumberGetValue(v4, kCFNumberSInt64Type, &valuePtr);
      CFRelease(v5);
      if (dword_268146288 <= 800 && (dword_268146288 != -1 || sub_226865630((uint64_t)&dword_268146288, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268146288, (uint64_t)"eAssistantResourceState _GetStateForKey(SCDynamicStoreRef, CFStringRef)", 800, (uint64_t)"found pid: %d\n", v6, v7, v8, v9, valuePtr);
      }
      unsigned int v10 = valuePtr;
      if (v10 == getpid()) {
        return 3;
      }
      else {
        return 2;
      }
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_226857D44(void *a1, const char *a2, void *a3)
{
  uint64_t v4 = objc_msgSend_objectForKey_(a1, a2, @"SSID_STR");
  uint64_t v6 = objc_msgSend_objectForKey_(a3, v5, @"SSID_STR");

  return MEMORY[0x270F9A6D0](v4, sel_localizedCaseInsensitiveCompare_, v6);
}

uint64_t sub_226857DA4(void *a1, const char *a2, void *a3)
{
  CFNumberRef v5 = objc_msgSend_objectForKey_(a1, a2, @"SSID_STR");
  if (!objc_msgSend_length(v5, v6, v7)) {
    CFNumberRef v5 = objc_msgSend_objectForKey_(a1, v8, @"name");
  }
  uint64_t v9 = objc_msgSend_objectForKey_(a3, v8, @"SSID_STR");
  if (!objc_msgSend_length(v9, v10, v11)) {
    uint64_t v9 = objc_msgSend_objectForKey_(a3, v12, @"name");
  }

  return MEMORY[0x270F9A6D0](v5, sel_localizedCaseInsensitiveCompare_, v9);
}

uint64_t sub_22685AAD0(uint64_t result)
{
  if (result)
  {
    CFStringRef v1 = (const __CFString *)result;
    if (CFDictionaryContainsKey((CFDictionaryRef)result, @"txt"))
    {
      if (sub_22685ABE0(v1, (uint64_t)v2, v3, v4, v5, v6, v7, v8)) {
        return 2;
      }
      else {
        return 1;
      }
    }
    else
    {
      return sub_2269017E8((uint64_t)v1, v2);
    }
  }
  return result;
}

CFDictionaryRef sub_22685AB38(const __CFDictionary *result)
{
  if (result) {
    return (const __CFDictionary *)(CFDictionaryContainsKey(result, @"txt") != 0);
  }
  return result;
}

uint64_t sub_22685AB68(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result)
  {
    if (sub_22685ABE0((const __CFString *)result, a2, a3, a4, a5, a6, a7, a8)) {
      return 2;
    }
    else {
      return 1;
    }
  }
  return result;
}

CFStringRef sub_22685AB94(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = 0;
  if (result)
  {
    sub_22686088C(result, (uint64_t)&v8, (UInt8 *)"%kO.%kO:int", a4, a5, a6, a7, a8, @"txt");
    return (const __CFString *)v8;
  }
  return result;
}

CFStringRef sub_22685ABE0(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFStringRef result = sub_22685C9CC(a1, a2, a3, a4, a5, a6, a7, a8);
  if (result) {
    return (const __CFString *)(sub_22685C9CC(a1, v10, v11, v12, v13, v14, v15, v16) != 0);
  }
  return result;
}

CFDictionaryRef sub_22685AC18(const __CFDictionary *result)
{
  if (result)
  {
    CFDictionaryRef v1 = result;
    CFStringRef result = (const __CFDictionary *)CFDictionaryContainsKey(result, @"txt");
    if (result) {
      return (const __CFDictionary *)(CFDictionaryContainsKey(v1, @"connectionTypes") != 0);
    }
  }
  return result;
}

CFStringRef sub_22685AC68(const __CFString *a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a2) {
    return 0;
  }
  uint64_t v10 = 0;
  CFStringRef theString1 = 0;
  if (sub_22685ACD8(a1, &v10, &theString1, a4, a5, a6, a7, a8)) {
    return 0;
  }
  CFStringRef result = theString1;
  if (theString1) {
    return (CFStringRef)(CFEqual(theString1, a2));
  }
  return result;
}

uint64_t sub_22685ACD8(const __CFString *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v8 = 4294960591;
  if (!a1) {
    return v8;
  }
  if (!a2) {
    return v8;
  }
  CFArrayRef theArray = 0;
  sub_22686088C(a1, (uint64_t)&theArray, (UInt8 *)"%ks", a4, a5, a6, a7, a8, (uint64_t)"services");
  uint64_t v8 = v11;
  if (v11) {
    return v8;
  }
  if (!theArray) {
    return 4294960568;
  }
  CFIndex Count = CFArrayGetCount(theArray);
  uint64_t v8 = 4294960569;
  if (Count >= 1)
  {
    CFIndex v19 = Count;
    uint64_t v20 = 0;
    while (1)
    {
      sub_22686088C((const __CFString *)theArray, (uint64_t)&v24, (UInt8 *)"[*].%ks", v14, v15, v16, v17, v18, v20);
      if (v21 != -6727) {
        break;
      }
      if (v19 == ++v20) {
        return 4294960569;
      }
    }
    sub_22686088C((const __CFString *)theArray, (uint64_t)&v23, (UInt8 *)"[*].%ks", v14, v15, v16, v17, v18, v20);
    uint64_t v8 = v22;
    if (!v22)
    {
      if (v23)
      {
        *a2 = v23;
        uint64_t v8 = 0;
        if (a3) {
          *a3 = v24;
        }
        return v8;
      }
      return 4294960568;
    }
  }
  return v8;
}

BOOL sub_22685AE08(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = 0;
  return sub_22685ACD8(a1, &v9, 0, a4, a5, a6, a7, a8) == 0;
}

BOOL sub_22685AE3C(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = 0;
  sub_22685AE6C(a1, &v10, a3, a4, a5, a6, a7, a8);
  return v8 == 0;
}

void sub_22685AE6C(const __CFString *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v23 = 0;
  if (a1)
  {
    if (a2)
    {
      CFArrayRef theArray = 0;
      sub_22686088C(a1, (uint64_t)&theArray, (UInt8 *)"%ks", a4, a5, a6, a7, a8, (uint64_t)"services");
      if (!v9)
      {
        if (theArray)
        {
          CFIndex Count = CFArrayGetCount(theArray);
          if (Count >= 1)
          {
            CFIndex v16 = Count;
            for (uint64_t i = 0; v16 != i; ++i)
            {
              CFStringRef theString1 = 0;
              uint64_t v22 = 0;
              sub_22686088C((const __CFString *)theArray, (uint64_t)&theString1, (UInt8 *)"[*].%ks", v11, v12, v13, v14, v15, i);
              if (v18 || !theString1) {
                break;
              }
              if (CFEqual(theString1, @"local."))
              {
                sub_22686088C((const __CFString *)theArray, (uint64_t)&v22, (UInt8 *)"[*].%ks", v11, v12, v13, v14, v15, i);
                if (v19 == -6727)
                {
                  sub_22686088C((const __CFString *)theArray, (uint64_t)&v23, (UInt8 *)"[*].%ks", v11, v12, v13, v14, v15, i);
                  if (!v20)
                  {
                    if (v23) {
                      *a2 = v23;
                    }
                  }
                  return;
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_22685AFD0(const __CFString *a1)
{
  if (a1)
  {
    if (CFDictionaryContainsKey((CFDictionaryRef)a1, @"services"))
    {
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      sub_22685AE6C(a1, &v21, v2, v3, v4, v5, v6, v7);
      if (v13)
      {
        uint64_t v21 = 0;
        if (sub_22685ACD8(a1, &v21, 0, v8, v9, v10, v11, v12)) {
          sub_22685B050(a1, &v20, v14, v15, v16, v17, v18, v19);
        }
      }
    }
  }
}

void sub_22685B050(const __CFString *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v23 = 0;
  if (a1)
  {
    if (a2)
    {
      CFArrayRef theArray = 0;
      sub_22686088C(a1, (uint64_t)&theArray, (UInt8 *)"%ks", a4, a5, a6, a7, a8, (uint64_t)"services");
      if (!v9)
      {
        if (theArray)
        {
          CFIndex Count = CFArrayGetCount(theArray);
          if (Count >= 1)
          {
            CFIndex v16 = Count;
            for (uint64_t i = 0; v16 != i; ++i)
            {
              CFStringRef theString1 = 0;
              uint64_t v22 = 0;
              sub_22686088C((const __CFString *)theArray, (uint64_t)&theString1, (UInt8 *)"[*].%ks", v11, v12, v13, v14, v15, i);
              if (v18 || !theString1) {
                break;
              }
              if (CFStringCompare(theString1, @"local.", 0))
              {
                sub_22686088C((const __CFString *)theArray, (uint64_t)&v22, (UInt8 *)"[*].%ks", v11, v12, v13, v14, v15, i);
                if (v19 == -6727)
                {
                  sub_22686088C((const __CFString *)theArray, (uint64_t)&v23, (UInt8 *)"[*].%ks", v11, v12, v13, v14, v15, i);
                  if (!v20)
                  {
                    if (v23) {
                      *a2 = v23;
                    }
                  }
                  return;
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_22685B1B4(const __CFString *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v21 = 0;
  if (a1)
  {
    if (a2)
    {
      CFArrayRef theArray = 0;
      sub_22686088C(a1, (uint64_t)&theArray, (UInt8 *)"%ks", a4, a5, a6, a7, a8, (uint64_t)"services");
      if (!v9)
      {
        if (theArray)
        {
          CFIndex Count = CFArrayGetCount(theArray);
          if (Count >= 1)
          {
            CFIndex v16 = Count;
            for (uint64_t i = 0; v16 != i; ++i)
            {
              CFStringRef theString1 = 0;
              sub_22686088C((const __CFString *)theArray, (uint64_t)&theString1, (UInt8 *)"[*].%ks", v11, v12, v13, v14, v15, i);
              if (v18 || !theString1) {
                break;
              }
              if (CFEqual(theString1, @"local."))
              {
                sub_22686088C((const __CFString *)theArray, (uint64_t)&v21, (UInt8 *)"[*].%ks", v11, v12, v13, v14, v15, i);
                if (!v19)
                {
                  if (v21) {
                    *a2 = v21;
                  }
                }
                return;
              }
            }
          }
        }
      }
    }
  }
}

void sub_22685B2E8(const __CFString *a1, int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = 0;
  if (a1 && a3)
  {
    switch(a2)
    {
      case 0:
      case 3:
        sub_22685AE6C(a1, &v13, (uint64_t)a3, a4, a5, a6, a7, a8);
        if (v11 != -6727) {
          goto LABEL_13;
        }
        uint64_t v12 = v13;
        if (a2 || v13) {
          goto LABEL_17;
        }
        goto LABEL_7;
      case 1:
        goto LABEL_10;
      case 2:
LABEL_7:
        int v11 = sub_22685ACD8(a1, &v13, 0, a4, a5, a6, a7, a8);
        if (v11 != -6727) {
          goto LABEL_13;
        }
        uint64_t v12 = v13;
        if (a2 || v13) {
          goto LABEL_17;
        }
LABEL_10:
        sub_22685B050(a1, &v13, (uint64_t)a3, a4, a5, a6, a7, a8);
LABEL_12:
        if (v11 != -6727)
        {
LABEL_13:
          if (v11) {
            return;
          }
          uint64_t v12 = v13;
          if (!v13) {
            return;
          }
LABEL_18:
          *a3 = v12;
          return;
        }
        uint64_t v12 = v13;
LABEL_17:
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 4:
        sub_22685B1B4(a1, &v13, (uint64_t)a3, a4, a5, a6, a7, a8);
        goto LABEL_12;
      default:
        return;
    }
  }
}

uint64_t sub_22685B410(const __CFString *a1, __CFArray **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_2681464E8 <= 800 && (dword_2681464E8 != -1 || sub_226865630((uint64_t)&dword_2681464E8, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_2681464E8, (uint64_t)"OSStatus BSUtilities_CopyAllKeychainAccountKeysFromBaseStation(CFDictionaryRef, CFArrayRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v40);
  }
  uint64_t v10 = 4294960591;
  if (a1 && a2)
  {
    uint64_t v44 = 0;
    sub_22686088C(a1, (uint64_t)&v44, (UInt8 *)"%kC", a4, a5, a6, a7, a8, 2002865473);
    if (v11 == -6727) {
      goto LABEL_15;
    }
    uint64_t v10 = v11;
    if (v11) {
      return v10;
    }
    if (v44)
    {
LABEL_15:
      uint64_t v43 = 0;
      sub_22686088C(a1, (uint64_t)&v43, (UInt8 *)"%kC", v12, v13, v14, v15, v16, 1918979393);
      if (v17 == -6727) {
        goto LABEL_40;
      }
      uint64_t v10 = v17;
      if (v17) {
        return v10;
      }
      if (v43)
      {
LABEL_40:
        uint64_t v41 = 0;
        sub_22686088C(a1, (uint64_t)&v41, (UInt8 *)"%kC", v18, v19, v20, v21, v22, 1818316097);
        if (v23 == -6727) {
          goto LABEL_16;
        }
        uint64_t v10 = v23;
        if (v23) {
          return v10;
        }
        if (v41)
        {
LABEL_16:
          uint64_t v42 = 0;
          sub_22686088C(a1, (uint64_t)&v42, (UInt8 *)"%kC", v24, v25, v26, v27, v28, 1918979378);
          uint64_t v10 = v29;
          if (v29)
          {
            if (v29 != -6727) {
              return v10;
            }
            uint64_t v30 = v42;
          }
          else
          {
            uint64_t v30 = v42;
            if (!v42) {
              return 4294960568;
            }
          }
          if (!v44 && !v43 && !v30 && !v41) {
            return 4294960569;
          }
          CFAllocatorRef v31 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          CFMutableDictionaryRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
          if (Mutable)
          {
            uint64_t v38 = Mutable;
            if (v44 && (uint64_t v10 = sub_226860774(v31, Mutable, (uint64_t)"%O", v33, v34, v35, v36, v37, v44), v10)
              || v43 && (uint64_t v10 = sub_226860774(v31, v38, (uint64_t)"%O", v33, v34, v35, v36, v37, v43), v10)
              || v41 && (uint64_t v10 = sub_226860774(v31, v38, (uint64_t)"%O", v33, v34, v35, v36, v37, v41), v10)
              || v42 && (uint64_t v10 = sub_226860774(v31, v38, (uint64_t)"%O", v33, v34, v35, v36, v37, v42), v10))
            {
              CFRelease(v38);
            }
            else
            {
              *a2 = v38;
            }
            return v10;
          }
        }
      }
    }
    return 4294960568;
  }
  return v10;
}

CFStringRef sub_22685B6AC(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = 0;
  if (result)
  {
    sub_22686088C(result, (uint64_t)&v8, (UInt8 *)"%ks.%ks", a4, a5, a6, a7, a8, (uint64_t)"txt");
    return (const __CFString *)v8;
  }
  return result;
}

CFStringRef sub_22685B6F8(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = 0;
  if (result)
  {
    sub_22686088C(result, (uint64_t)&v8, (UInt8 *)"%ks", a4, a5, a6, a7, a8, (uint64_t)"name");
    return (const __CFString *)v8;
  }
  return result;
}

CFStringRef sub_22685B73C(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result)
  {
    CFStringRef v8 = result;
    uint64_t v25 = 0;
    CFArrayRef theArray = 0;
    sub_22686088C(result, (uint64_t)&theArray, (UInt8 *)"%ks", a4, a5, a6, a7, a8, (uint64_t)"services");
    if (v9)
    {
      int v15 = v9;
      CFStringRef result = 0;
      if (v15 == -6727)
      {
        uint64_t v27 = 0;
        sub_22686088C(v8, (uint64_t)&v27, (UInt8 *)"%ks.%ks", v10, v11, v12, v13, v14, (uint64_t)"txt");
        return (const __CFString *)v27;
      }
    }
    else
    {
      CFStringRef result = (const __CFString *)theArray;
      if (theArray)
      {
        CFIndex Count = CFArrayGetCount(theArray);
        if (Count < 1) {
          return 0;
        }
        CFIndex v22 = Count;
        for (uint64_t i = 0; i != v22; ++i)
        {
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v25, (UInt8 *)"[*].%ks", v17, v18, v19, v20, v21, i);
          if (v24 != -6727) {
            break;
          }
          CFStringRef result = 0;
        }
        if (v24) {
          return 0;
        }
        else {
          return (const __CFString *)v25;
        }
      }
    }
  }
  return result;
}

CFStringRef sub_22685B858(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = 0;
  if (result)
  {
    sub_22686088C(result, (uint64_t)&v8, (UInt8 *)"%ks.%ks", a4, a5, a6, a7, a8, (uint64_t)"txt");
    return (const __CFString *)v8;
  }
  return result;
}

CFStringRef sub_22685B8A4(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = 0;
  if (result)
  {
    sub_22686088C(result, (uint64_t)&v8, (UInt8 *)"%ks.%ks:int", a4, a5, a6, a7, a8, (uint64_t)"txt");
    return (const __CFString *)v8;
  }
  return result;
}

CFStringRef sub_22685B8F0(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result)
  {
    int v10 = 0;
    sub_22686088C(result, (uint64_t)&v10, (UInt8 *)"%ks.%kC:int", a4, a5, a6, a7, a8, (uint64_t)"txt");
    int v9 = v8;
    CFStringRef result = 0;
    if (!v9) {
      return (const __CFString *)((v10 >> 5) & 1);
    }
  }
  return result;
}

CFStringRef sub_22685B950(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result)
  {
    uint64_t v9 = 0;
    sub_22686088C(result, (uint64_t)&v9, (UInt8 *)"%ks.%ks", a4, a5, a6, a7, a8, (uint64_t)"txt");
    if (v8) {
      return 0;
    }
    else {
      return (const __CFString *)(v9 != 0);
    }
  }
  return result;
}

CFStringRef sub_22685B9B4(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result)
  {
    int v10 = 0;
    sub_22686088C(result, (uint64_t)&v10, (UInt8 *)"%ks.%kC:int", a4, a5, a6, a7, a8, (uint64_t)"txt");
    int v9 = v8;
    CFStringRef result = 0;
    if (!v9) {
      return (const __CFString *)((v10 >> 6) & 1);
    }
  }
  return result;
}

CFStringRef sub_22685BA14(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v8 = 0;
  if (result)
  {
    sub_22686088C(result, (uint64_t)&v8, (UInt8 *)"%kO.%kO:int", a4, a5, a6, a7, a8, @"txt");
    return (const __CFString *)v8;
  }
  return result;
}

BOOL sub_22685BA60(const __CFString *a1, const char *a2)
{
  BOOL result = 0;
  if (a1 && a2)
  {
    int v5 = sub_2269017F8((uint64_t)a1, a2);
    int v7 = sub_2269017F8((uint64_t)a2, v6);
    int v13 = v7;
    if (!v5 || v7)
    {
      BOOL result = 0;
      if (v5)
      {
        if (v5 != 3 && v5 != 102)
        {
          BOOL result = 1;
          if (v13)
          {
            if (v13 != 3 && v13 != 102)
            {
              int v19 = 0;
              sub_22686088C(a1, (uint64_t)&v19, (UInt8 *)"%kO:int", v8, v9, v10, v11, v12, @"CHANNEL");
              BOOL result = 0;
              if (v19 <= 14)
              {
                int v20 = 0;
                sub_22686088C((const __CFString *)a2, (uint64_t)&v20, (UInt8 *)"%kO:int", v14, v15, v16, v17, v18, @"CHANNEL");
                return v20 > 14;
              }
            }
          }
        }
      }
    }
    else
    {
      return 1;
    }
  }
  return result;
}

CFStringRef sub_22685BB54(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result)
  {
    unsigned int v10 = 0;
    sub_22686088C(result, (uint64_t)&v10, (UInt8 *)"%ks.%kC:int", a4, a5, a6, a7, a8, (uint64_t)"txt");
    int v9 = v8;
    BOOL result = 0;
    if (!v9) {
      return (const __CFString *)((v10 >> 17) & 1);
    }
  }
  return result;
}

uint64_t sub_22685BBB4(const void *a1, __CFArray **a2)
{
  unsigned int v10 = 0;
  uint64_t v2 = 4294960591;
  if (!a1 || !a2) {
    return v2;
  }
  value = 0;
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  if (Mutable)
  {
    uint64_t v6 = Mutable;
    uint64_t v2 = sub_2268623AC(a1, &v10);
    if (!v2)
    {
      int v7 = (uint64_t *)v10;
      if (v10)
      {
        while (sub_22686244C(v7, 0, &value))
        {
          CFArrayAppendValue(v6, value);
          int v7 = (uint64_t *)v10;
        }
        uint64_t v2 = 0;
        *a2 = v6;
        goto LABEL_11;
      }
      uint64_t v2 = 4294960568;
    }
    CFRelease(v6);
  }
  else
  {
    uint64_t v2 = 4294960568;
  }
LABEL_11:
  if (v10) {
    sub_226862440(v10);
  }
  return v2;
}

uint64_t sub_22685BC94(const __CFArray *a1, const __CFString *a2)
{
  CFIndex i = -1;
  if (a1)
  {
    if (a2)
    {
      CFIndex Count = CFArrayGetCount(a1);
      if (Count >= 1)
      {
        CFIndex v6 = Count;
        for (CFIndex i = 0; i != v6; ++i)
        {
          CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(a1, i);
          if (!ValueAtIndex) {
            break;
          }
          if (sub_22685BD10(ValueAtIndex, a2, v8, v9, v10, v11, v12, v13)) {
            return i;
          }
        }
        return -1;
      }
    }
  }
  return i;
}

uint64_t sub_22685BD10(const __CFString *a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = 0;
  if (a1 && a2)
  {
    CFStringRef v32 = 0;
    CFStringRef v33 = 0;
    CFStringRef v30 = 0;
    CFStringRef v31 = 0;
    sub_22686088C(a1, (uint64_t)&v33, (UInt8 *)"%ks.%ks", a4, a5, a6, a7, a8, (uint64_t)"txt");
    if ((v11 == -6727 || !v11 && v33)
      && ((sub_22686088C(a1, (uint64_t)&v32, (UInt8 *)"%ks.%ks", v12, v13, v14, v15, v16, (uint64_t)"txt"), v17 == -6727)
       || !v17 && v32)
      && ((sub_22686088C(a1, (uint64_t)&v31, (UInt8 *)"%ks.%ks", v18, v19, v20, v21, v22, (uint64_t)"txt"), v23 == -6727)
       || !v23 && v31)
      && ((sub_22686088C(a1, (uint64_t)&v30, (UInt8 *)"%ks.%ks", v24, v25, v26, v27, v28, (uint64_t)"txt"), v29 == -6727)
       || !v29 && v30))
    {
      if ((sub_2268A1408(v33, a2) & 1) != 0
        || v32 && (sub_2268A1408(v32, a2) & 1) != 0)
      {
        return 1;
      }
      if (v31 && (sub_2268A1408(v31, a2) & 1) != 0) {
        return 1;
      }
      uint64_t result = (uint64_t)v30;
      if (v30)
      {
        uint64_t result = (uint64_t)sub_2268A1408(v30, a2);
        if (result) {
          return 1;
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

CFStringRef sub_22685BE8C(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result)
  {
    unsigned int v10 = 0;
    sub_22686088C(result, (uint64_t)&v10, (UInt8 *)"%ks.%kC:int", a4, a5, a6, a7, a8, (uint64_t)"txt");
    int v9 = v8;
    uint64_t result = 0;
    if (!v9) {
      return (const __CFString *)((v10 >> 9) & 1);
    }
  }
  return result;
}

uint64_t sub_22685BEEC(const __CFString *a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = 0;
  if (a1 && a2)
  {
    CFStringRef v17 = 0;
    sub_22686088C(a2, (uint64_t)&v17, (UInt8 *)"%ks", a4, a5, a6, a7, a8, (uint64_t)"BSSID");
    if (v16 || !v17) {
      return 0;
    }
    else {
      return sub_22685BD10(a1, v17, v10, v11, v12, v13, v14, v15);
    }
  }
  return result;
}

BOOL sub_22685BF60(const __CFString *a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = 0;
  if (a1 && a2)
  {
    CFStringRef v18 = 0;
    sub_22686088C(a1, (uint64_t)&v18, (UInt8 *)"%ks.%ks", a4, a5, a6, a7, a8, (uint64_t)"txt");
    return !v16 && v18 && sub_22685BD10(a2, v18, v10, v11, v12, v13, v14, v15) != 0;
  }
  return v8;
}

uint64_t sub_22685BFE8(const __CFString *a1, uint64_t a2, CFArrayRef theArray)
{
  uint64_t result = -1;
  if (a1)
  {
    if (theArray)
    {
      CFIndex Count = CFArrayGetCount(theArray);
      uint64_t result = -1;
      if (Count)
      {
        if (Count > a2)
        {
          CFStringRef theString1 = 0;
          while (1)
          {
            sub_22686088C((const __CFString *)theArray, (uint64_t)&theString1, (UInt8 *)"[*].%kO", v7, v8, v9, v10, v11, a2);
            if (v13 != -6727)
            {
              if (!theString1) {
                return -1;
              }
              if (CFEqual(theString1, a1)) {
                break;
              }
            }
            if (Count == ++a2) {
              return -1;
            }
          }
          return a2;
        }
      }
    }
  }
  return result;
}

CFIndex sub_22685C0BC(const __CFString *a1, int a2, uint64_t a3, const __CFArray *a4)
{
  CFIndex result = -1;
  if (a1 && (a2 - 1) <= 2)
  {
    if (a2 == 3)
    {
      CFIndex result = sub_22685C13C(a1, 1, a4);
      if (result != -1) {
        return result;
      }
      a2 = 2;
    }
    return sub_22685C13C(a1, a2, a4);
  }
  return result;
}

CFIndex sub_22685C13C(const __CFString *a1, int a2, CFArrayRef theArray)
{
  if ((a2 - 1) > 1) {
    return -1;
  }
  CFStringRef v5 = a1;
  uint64_t v6 = 0;
  while (1)
  {
    CFIndex v7 = sub_22685BFE8(a1, v6, theArray);
    if (v7 == -1) {
      break;
    }
    CFStringRef ValueAtIndex = CFArrayGetValueAtIndex(theArray, v7);
    if (!ValueAtIndex) {
      return -1;
    }
    int v10 = sub_226901850((uint64_t)ValueAtIndex, v9);
    BOOL v11 = !v10 && a2 == 1;
    BOOL v12 = v10 && a2 == 2;
    if (v12 || v11) {
      break;
    }
    uint64_t v6 = v7 + 1;
    a1 = v5;
  }
  return v7;
}

uint64_t sub_22685C1DC(const __CFString *a1, uint64_t a2, CFArrayRef theArray)
{
  uint64_t result = -1;
  if (a1)
  {
    if (theArray)
    {
      CFIndex Count = CFArrayGetCount(theArray);
      uint64_t result = -1;
      if (Count)
      {
        if (Count > a2)
        {
          CFStringRef v14 = 0;
          while (1)
          {
            sub_22686088C((const __CFString *)theArray, (uint64_t)&v14, (UInt8 *)"[*].%ks", v7, v8, v9, v10, v11, a2);
            if (v13 || !v14) {
              return -1;
            }
            if (sub_2268A1408(a1, v14)) {
              break;
            }
            if (Count == ++a2) {
              return -1;
            }
          }
          return a2;
        }
      }
    }
  }
  return result;
}

uint64_t sub_22685C29C(const __CFString *a1, CFArrayRef theArray)
{
  uint64_t v2 = -1;
  if (a1)
  {
    if (theArray)
    {
      CFIndex Count = CFArrayGetCount(theArray);
      if (Count >= 1)
      {
        CFIndex v11 = Count;
        uint64_t v2 = 0;
        CFStringRef v20 = 0;
        do
        {
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v20, (UInt8 *)"[*]", v6, v7, v8, v9, v10, v2);
          if (v18 || !v20) {
            break;
          }
          if (sub_22685BEEC(a1, v20, v12, v13, v14, v15, v16, v17)) {
            return v2;
          }
          ++v2;
        }
        while (v11 != v2);
        return -1;
      }
    }
  }
  return v2;
}

void sub_22685C348(CFArrayRef theArray, const __CFDate *a2, const __CFString **a3)
{
  if (theArray)
  {
    if (a3)
    {
      CFIndex Count = CFArrayGetCount(theArray);
      if (Count >= 1)
      {
        CFIndex v12 = Count;
        CFStringRef v13 = 0;
        CFDateRef v14 = 0;
        uint64_t v15 = 0;
        CFStringRef v24 = 0;
        CFDateRef theDate = 0;
        while (1)
        {
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v24, (UInt8 *)"[*]", v7, v8, v9, v10, v11, v15);
          if (v21) {
            return;
          }
          if (!v24) {
            return;
          }
          sub_22686088C(v24, (uint64_t)&theDate, (UInt8 *)"%ks", v16, v17, v18, v19, v20, (uint64_t)"WiFiShim_PreferredNetwork_TimeAssociated");
          if (v22) {
            return;
          }
          CFDateRef v23 = theDate;
          if (!theDate) {
            return;
          }
          if (v14)
          {
            if (CFDateCompare(theDate, v14, 0) != kCFCompareGreaterThan) {
              goto LABEL_16;
            }
            CFDateRef v23 = theDate;
          }
          if (!a2) {
            goto LABEL_15;
          }
          if (CFDateCompare(v23, a2, 0) == kCFCompareLessThan)
          {
            CFDateRef v23 = theDate;
LABEL_15:
            CFStringRef v13 = v24;
            CFDateRef v14 = v23;
          }
LABEL_16:
          if (v12 == ++v15)
          {
            if (v13) {
              *a3 = v13;
            }
            return;
          }
        }
      }
    }
  }
}

const char *sub_22685C484(const char *result)
{
  if (result)
  {
    uint64_t result = (const char *)strlen(result);
    if (result) {
      return (const char *)((unint64_t)result <= sub_2268A61A8(1918979693));
    }
  }
  return result;
}

const char *sub_22685C4C8(const char *result)
{
  if (result)
  {
    CFDictionaryRef v1 = (char *)result;
    size_t v2 = strlen(result);
    return (const char *)sub_2268751C4(v1, v2);
  }
  return result;
}

const char *sub_22685C500(const char *result)
{
  if (result)
  {
    uint64_t result = (const char *)strlen(result);
    if (result) {
      return (const char *)((unint64_t)result <= sub_2268A61A8(1937329773));
    }
  }
  return result;
}

const char *sub_22685C544(const char *result)
{
  if (result)
  {
    uint64_t result = (const char *)strlen(result);
    if (result) {
      return (const char *)((unint64_t)result <= sub_2268A61A8(1937330263));
    }
  }
  return result;
}

const char *sub_22685C588(const char *result)
{
  if (result)
  {
    uint64_t result = (const char *)strlen(result);
    if (result) {
      return (const char *)((unint64_t)result <= sub_2268A61A8(1635077712));
    }
  }
  return result;
}

const char *sub_22685C5CC(const char *result)
{
  if (result)
  {
    uint64_t result = (const char *)strlen(result);
    if (result) {
      return (const char *)((unint64_t)result <= sub_2268A61A8(1718842224));
    }
  }
  return result;
}

CFTypeRef sub_22685C610(const void *a1, unsigned int *a2)
{
  uint64_t v17 = 0;
  CFTypeRef v18 = 0;
  if (a1)
  {
    uint64_t v15 = 0;
    CFStringRef v16 = 0;
    int v3 = sub_2268623AC(a1, &v17);
    uint64_t v4 = v17;
    if (!v3 && v17)
    {
      while (sub_22686244C((uint64_t *)v17, &v16, &v15))
      {
        unsigned int v5 = sub_2268A57E0(v16);
        if (v5 == 1684099956 || v5 == 1684886388 || v5 == 1684362100)
        {
          if (v15)
          {
            unsigned int v13 = v5;
            if (!sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &v18, (uint64_t)"{%kO=%O}", v6, v7, v8, v9, v10, (uint64_t)v16)&& a2&& v18)
            {
              *a2 = v13;
            }
          }
          break;
        }
      }
      uint64_t v4 = v17;
    }
    if (v4) {
      sub_226862440(v4);
    }
  }
  return v18;
}

BOOL sub_22685C704(const __CFString *a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a1) {
    return 0;
  }
  CFStringRef theString1 = 0;
  CFStringRef v24 = 0;
  sub_22686088C(a1, (uint64_t)&v24, (UInt8 *)"%kC", a4, a5, a6, a7, a8, 1684362100);
  if (v10 == -6727)
  {
    sub_22686088C(a1, (uint64_t)&v24, (UInt8 *)"%kC", v11, v12, v13, v14, v15, 1684099956);
    if (v19 == -6727)
    {
      sub_22686088C(a1, (uint64_t)&v24, (UInt8 *)"%kC", v11, v12, v13, v14, v15, 1684886388);
      BOOL v18 = 0;
      if (v20) {
        return v18;
      }
      CFStringRef v16 = v24;
      if (!v24) {
        return v18;
      }
      int v17 = 1298753353;
    }
    else
    {
      if (v19) {
        return 0;
      }
      CFStringRef v16 = v24;
      if (!v24) {
        return 0;
      }
      int v17 = 1098015561;
    }
  }
  else
  {
    if (v10) {
      return 0;
    }
    CFStringRef v16 = v24;
    if (!v24) {
      return 0;
    }
    int v17 = 1165123913;
  }
  sub_22686088C(v16, (uint64_t)&theString1, (UInt8 *)"%kO", v11, v12, v13, v14, v15, @"status");
  if (v21 || !theString1) {
    return 0;
  }
  BOOL v18 = CFEqual(theString1, @"starting");
  if (a2) {
    *a2 = v17;
  }
  return v18;
}

uint64_t sub_22685C850(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a1) {
    return 0;
  }
  CFStringRef theString1 = 0;
  CFStringRef v31 = 0;
  sub_22686088C(a1, (uint64_t)&v31, (UInt8 *)"%kC", a4, a5, a6, a7, a8, 1684362100);
  if (v10 == -6727)
  {
    sub_22686088C(a1, (uint64_t)&v31, (UInt8 *)"%kC", v11, v12, v13, v14, v15, 1684099956);
    if (v20 == -6727)
    {
      sub_22686088C(a1, (uint64_t)&v31, (UInt8 *)"%kC", v11, v12, v13, v14, v15, 1684886388);
      BOOL v19 = 0;
      if (v21) {
        return v19;
      }
      CFStringRef v16 = v31;
      if (!v31) {
        return v19;
      }
      CFStringRef v17 = @"migrateComplete";
      BOOL v18 = @"migrateError";
    }
    else
    {
      if (v20) {
        return 0;
      }
      CFStringRef v16 = v31;
      if (!v31) {
        return 0;
      }
      CFStringRef v17 = @"archiveComplete";
      BOOL v18 = @"archiveError";
    }
  }
  else
  {
    if (v10) {
      return 0;
    }
    CFStringRef v16 = v31;
    if (!v31) {
      return 0;
    }
    CFStringRef v17 = @"eraseComplete";
    BOOL v18 = @"eraseError";
  }
  sub_22686088C(v16, (uint64_t)&theString1, (UInt8 *)"%kO", v11, v12, v13, v14, v15, @"status");
  if (v22 || !theString1) {
    return 0;
  }
  CFComparisonResult v24 = CFStringCompare(theString1, v17, 0);
  BOOL v19 = v24 == kCFCompareEqualTo;
  if (a2 && v24 == kCFCompareEqualTo)
  {
    sub_22686088C(v31, a2, (UInt8 *)"%kO:err", v25, v26, v27, v28, v29, (uint64_t)v18);
    return 1;
  }
  return v19;
}

CFStringRef sub_22685C9CC(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result)
  {
    int v8 = 0;
    sub_22686088C(result, (uint64_t)&v8, (UInt8 *)"%kO.%kO:int", a4, a5, a6, a7, a8, @"txt");
    return (const __CFString *)(v8 == 118);
  }
  return result;
}

CFStringRef sub_22685CA24(const __CFString *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result)
  {
    int v10 = 0;
    sub_22686088C(result, (uint64_t)&v10, (UInt8 *)"%ks.%kC:int", a4, a5, a6, a7, a8, (uint64_t)"txt");
    int v9 = v8;
    uint64_t result = 0;
    if (!v9) {
      return (const __CFString *)((v10 & 0x18000) == 0x10000);
    }
  }
  return result;
}

BOOL sub_22685CA8C(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a1) {
    return 1;
  }
  int v17 = 0;
  sub_22686088C(a1, (uint64_t)&v17, (UInt8 *)"%ks.%ks:vers", a4, a5, a6, a7, a8, (uint64_t)"txt");
  BOOL result = v14 && (sub_22686088C(a1, (uint64_t)&v17, (UInt8 *)"%ks:vers", v9, v10, v11, v12, v13, (uint64_t)"syVs"), v15)
        || (v17 & 0xFFFFFF00) > 0x7318000
        || (v17 & 0xFFFFFF00) == 0x7318000 && !(_BYTE)v17;
  return result;
}

uint64_t sub_22685CB40(const __CFString *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = -1;
  if (a1)
  {
    if ((a2 - 1) <= 1)
    {
      CFTypeRef cf = 0;
      sub_22686088C(a1, (uint64_t)&cf, (UInt8 *)"%kO", a4, a5, a6, a7, a8, @"radios");
      int v12 = v11;
      uint64_t result = -1;
      if (!v12)
      {
        if (cf)
        {
          CFTypeID TypeID = CFArrayGetTypeID();
          if (TypeID == CFGetTypeID(cf))
          {
            CFIndex Count = CFArrayGetCount((CFArrayRef)cf);
            if (Count >= 1)
            {
              CFIndex v20 = Count;
              uint64_t v21 = 0;
              while (1)
              {
                int v23 = 0;
                sub_22686088C((const __CFString *)cf, (uint64_t)&v23, (UInt8 *)"[*].%kO:int", v15, v16, v17, v18, v19, v21);
                if (v22) {
                  break;
                }
                if (a2 == 2)
                {
                  if ((v23 & 0xE) != 0) {
                    return v21;
                  }
                }
                else if (a2 == 1 && (v23 & 0x70) != 0)
                {
                  return v21;
                }
                ++v21;
                uint64_t result = -1;
                if (v20 == v21) {
                  return result;
                }
              }
            }
          }
          return -1;
        }
      }
    }
  }
  return result;
}

void sub_22685CC74(const __CFString *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    if (a3)
    {
      CFArrayRef theArray = 0;
      sub_22686088C(a1, (uint64_t)&theArray, (UInt8 *)"%kO", a4, a5, a6, a7, a8, @"radios");
      if (!v12)
      {
        if (theArray)
        {
          CFIndex Count = CFArrayGetCount(theArray);
          if (Count)
          {
            if (a2)
            {
              CFIndex v20 = Count;
              uint64_t v21 = sub_22685CB40(a1, a2, v14, v15, v16, v17, v18, v19);
              if (v21 == -1) {
                return;
              }
              uint64_t v22 = v21;
              if (v21 >= v20) {
                return;
              }
            }
            else
            {
              uint64_t v22 = 0;
            }
            sub_22685CD50(a1, v22, a3, a4, v16, v17, v18, v19);
          }
        }
      }
    }
  }
}

void sub_22685CD50(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a4) {
    sub_22686088C(a1, a4, (UInt8 *)"%kO.[*].%kO", a4, a5, a6, a7, a8, @"radios");
  }
}

void sub_22685CDBC(const __CFString *a1, int a2, const void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    if (a3)
    {
      CFArrayRef theArray = 0;
      sub_22686088C(a1, (uint64_t)&theArray, (UInt8 *)"%kO", a4, a5, a6, a7, a8, @"radios");
      if (!v12)
      {
        if (theArray)
        {
          CFIndex Count = CFArrayGetCount(theArray);
          if (Count)
          {
            CFIndex v20 = Count;
            if (a2)
            {
              uint64_t v21 = sub_22685CB40(a1, a2, v14, v15, v16, v17, v18, v19);
              if (v21 != -1 && v21 < v20) {
                sub_22685CED0(a1, v21, a3, a4, v22, v23, v24, v25);
              }
            }
            else if (Count >= 1)
            {
              for (uint64_t i = 0; i != v20; ++i)
              {
                sub_22685CED0(a1, i, a3, a4, v16, v17, v18, v19);
                if (v27) {
                  break;
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_22685CED0(const __CFString *a1, uint64_t a2, const void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2 != -1)
  {
    theDict[3] = v8;
    theDict[4] = v9;
    theDict[0] = 0;
    sub_22686088C(a1, (uint64_t)theDict, (UInt8 *)"%kO.[*]", a4, a5, a6, a7, a8, @"radios");
    if (!v17)
    {
      if (theDict[0])
      {
        if (a4) {
          sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], theDict[0], (uint64_t)"%kO=%O", v12, v13, v14, v15, v16, (uint64_t)a3);
        }
        else {
          CFDictionaryRemoveValue(theDict[0], a3);
        }
      }
    }
  }
}

CFPropertyListRef sub_22685CF7C(const void *a1)
{
  if (!CFPropertyListIsValid(a1, kCFPropertyListXMLFormat_v1_0)) {
    return 0;
  }
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x263EFFB08];

  return CFPropertyListCreateDeepCopy(v2, a1, 2uLL);
}

const char *sub_22685CFDC(void *a1, const char *a2, uint64_t a3)
{
  uint64_t result = (const char *)objc_msgSend_UTF8String(a1, a2, a3);
  if (result)
  {
    return (const char *)strlen(result);
  }
  return result;
}

__CFString *sub_22685D010(void *a1, const char *a2, unint64_t a3)
{
  unsigned int v5 = (char *)objc_msgSend_UTF8String(a1, a2, a3);
  size_t v8 = objc_msgSend_UTF8ByteCount(a1, v6, v7);
  size_t v9 = sub_226870130(v5, v8, a3);
  uint64_t v10 = malloc_type_malloc(v9 + 1, 0x2B634DA6uLL);
  if (!v10) {
    return &stru_26DA6BE88;
  }
  int v11 = v10;
  memset(v10, 255, v9 + 1);
  uint64_t v14 = (const void *)objc_msgSend_UTF8String(a1, v12, v13);
  memcpy(v11, v14, v9);
  *((unsigned char *)v11 + v9) = 0;
  uint64_t v16 = objc_msgSend_stringWithCString_encoding_(NSString, v15, (uint64_t)v11, 4);
  free(v11);
  return (__CFString *)v16;
}

uint64_t sub_22685D0D4(void *a1, const char *a2, void *a3)
{
  unsigned int v5 = (char *)objc_msgSend_UTF8String(a3, a2, (uint64_t)a3);
  uint64_t v8 = objc_msgSend_UTF8String(a1, v6, v7);
  if (!v5) {
    return objc_msgSend_compare_(a1, v9, (uint64_t)a3);
  }
  uint64_t v10 = (char *)v8;
  if (!v8) {
    return objc_msgSend_compare_(a1, v9, (uint64_t)a3);
  }
  uint64_t v12 = 0;
  if (sub_22686EA18(v5, 0, (unsigned int *)&v12, 0, 0, 0, 0)
    || !v12
    || sub_22686EA18(v10, 0, (unsigned int *)&v12 + 1, 0, 0, 0, 0)
    || !HIDWORD(v12))
  {
    return objc_msgSend_compare_(a1, v9, (uint64_t)a3);
  }
  if (HIDWORD(v12) < v12) {
    return -1;
  }
  return HIDWORD(v12) > v12;
}

uint64_t sub_22685D1A4(void *a1, const char *a2, void *a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  unsigned int v5 = (unsigned char *)objc_msgSend_UTF8String(a3, a2, (uint64_t)a3);
  uint64_t v8 = objc_msgSend_UTF8String(a1, v6, v7);
  if (!v5) {
    return objc_msgSend_compare_(a1, v9, (uint64_t)a3);
  }
  uint64_t v10 = (unsigned char *)v8;
  if (!v8
    || sub_22686E524(v5, 0, &v15, 0, 0, 0, 0)
    || sub_22686E524(v10, 0, &v16, 0, 0, 0, 0))
  {
    return objc_msgSend_compare_(a1, v9, (uint64_t)a3);
  }
  unint64_t v12 = bswap64(v16);
  unint64_t v13 = bswap64(v15);
  if (v12 == v13
    && (unint64_t v12 = bswap64(*((unint64_t *)&v16 + 1)), v13 = bswap64(*((unint64_t *)&v15 + 1)), v12 == v13))
  {
    return 0;
  }
  else if (v12 < v13)
  {
    return -1;
  }
  else
  {
    return 1;
  }
}

uint64_t sub_22685D2C4(void *a1, const char *a2, uint64_t a3)
{
  if (!a1 || !objc_msgSend_length(a1, a2, a3)) {
    return (uint64_t)a1;
  }
  if (objc_msgSend_length(a1, v4, v5) == 1)
  {
    return objc_msgSend_uppercaseString(a1, v6, v7);
  }
  else
  {
    size_t v9 = NSString;
    uint64_t v10 = objc_msgSend_substringToIndex_(a1, v6, 1);
    uint64_t v13 = objc_msgSend_uppercaseString(v10, v11, v12);
    uint64_t v15 = objc_msgSend_substringFromIndex_(a1, v14, 1);
    return objc_msgSend_stringWithFormat_(v9, v16, @"%@%@", v13, v15);
  }
}

uint64_t sub_22685D3FC(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v11 = objc_msgSend_dictionary(MEMORY[0x263EFF9A0], a2, a3);
  uint64_t v13 = v11;
  if (a3) {
    objc_msgSend_setObject_forKey_(v11, v12, a3, @"name");
  }
  if (a4) {
    objc_msgSend_setObject_forKey_(v13, v12, a4, @"object");
  }
  if (a5) {
    objc_msgSend_setObject_forKey_(v13, v12, a5, @"userInfo");
  }

  return objc_msgSend_performSelectorOnMainThread_withObject_waitUntilDone_(a1, v12, (uint64_t)sel_postNotificationNameOnMainThreadHandler_, v13, a6);
}

uint64_t sub_22685D4B8(uint64_t a1, const char *a2, void *a3)
{
  uint64_t v5 = objc_msgSend_objectForKey_(a3, a2, @"name");
  objc_msgSend_objectForKey_(a3, v6, @"object");
  objc_msgSend_objectForKey_(a3, v7, @"userInfo");

  return MEMORY[0x270F9A6D0](a1, sel_postNotificationName_object_userInfo_, v5);
}

BOOL sub_22685D53C(void *a1, const char *a2, uint64_t a3)
{
  uint64_t v4 = objc_msgSend_pathExtension(a1, a2, a3);
  if ((unint64_t)objc_msgSend_length(v4, v5, v6) < 2) {
    return 0;
  }
  uint64_t v8 = objc_msgSend_rangeOfString_(a1, v7, @"@");
  if (v8 == 0x7FFFFFFFFFFFFFFFLL) {
    return 0;
  }
  unint64_t v12 = v8;
  uint64_t v13 = objc_msgSend_length(a1, v9, v10);
  return v13 - objc_msgSend_length(v4, v14, v15) - 2 > v12;
}

id sub_22685D5C4(id result)
{
  if ((id)qword_268148378 != result)
  {
    CFDictionaryRef v1 = result;

    uint64_t result = v1;
    qword_268148378 = (uint64_t)result;
  }
  return result;
}

void sub_22685D600()
{
  qword_268148378 = 0;
}

uint64_t sub_22685D62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)MEMORY[0x263F086E0];
  uint64_t v5 = objc_opt_class();
  uint64_t v7 = objc_msgSend_bundleForClass_(v4, v6, v5);

  return objc_msgSend_localizedStringForKey_value_table_(v7, v8, a1, &stru_26DA6BE88, a2);
}

uint64_t sub_22685D698(uint64_t a1, const char *a2)
{
  CFAllocatorRef v2 = (void *)MEMORY[0x263F08A30];
  uint64_t v4 = objc_msgSend_numberWithInteger_(NSNumber, a2, a1);

  return objc_msgSend_localizedStringFromNumber_numberStyle_(v2, v3, v4, 1);
}

uint64_t sub_22685D6E8(int a1)
{
  sub_22683C448(a1, v3);
  return objc_msgSend_stringWithCString_encoding_(NSString, v1, (uint64_t)v3, 4);
}

void *sub_22685D720(void *result, const char *a2, uint64_t a3)
{
  unsigned int v3 = 0;
  if (result)
  {
    uint64_t result = objc_msgSend_UTF8String(result, a2, a3);
    if (result)
    {
      sub_22683C470((char *)result, 0xFFFFFFFFFFFFFFFFLL, &v3);
      return (void *)v3;
    }
  }
  return result;
}

__CFString *sub_22685D75C(uint64_t a1, int a2)
{
  unsigned int v3 = sub_22683C4F8(a1) - 3;
  if (v3 < 8 && ((0xBFu >> v3) & 1) != 0)
  {
    uint64_t v4 = &off_2647B8630[v3];
  }
  else
  {
    if ((a2 - 2) >= 3) {
      return &stru_26DA6BE88;
    }
    uint64_t v4 = &off_2647B8670[a2 - 2];
  }
  return *v4;
}

__CFString *sub_22685D7D0(unsigned int a1, int a2, int a3)
{
  if (a3) {
    int v6 = 1937326416;
  }
  else {
    int v6 = 1651725136;
  }
  sub_22683C448(v6, v21);
  uint64_t v8 = objc_msgSend_stringWithCString_encoding_(NSString, v7, (uint64_t)v21, 4);
  uint64_t v11 = v8;
  if ((a2 - 5) > 0xFFFFFFFD)
  {
    unint64_t v12 = &stru_26DA6BE88;
LABEL_8:
    if (objc_msgSend_length(v12, v9, v10)) {
      return v12;
    }
    goto LABEL_9;
  }
  unint64_t v12 = sub_22685D8E8(v8, (const char *)a1);
  if (v12) {
    goto LABEL_8;
  }
LABEL_9:
  if (a2 != 2) {
    return sub_22685D8E8(v11, 0);
  }
  if (a3) {
    uint64_t v13 = @"longGenericAirPlayDeviceName";
  }
  else {
    uint64_t v13 = @"shortGenericAirPlayDeviceName";
  }
  uint64_t v14 = (void *)MEMORY[0x263F086E0];
  uint64_t v15 = objc_opt_class();
  uint64_t v17 = objc_msgSend_bundleForClass_(v14, v16, v15);
  return (__CFString *)objc_msgSend_localizedStringForKey_value_table_(v17, v18, (uint64_t)v13, &stru_26DA6BE88, @"AirPortSettings");
}

__CFString *sub_22685D8E8(uint64_t a1, const char *a2)
{
  CFAllocatorRef v2 = objc_msgSend_stringWithFormat_(NSString, a2, @"%@.%lu", a1, a2);
  unsigned int v3 = (void *)MEMORY[0x263F086E0];
  uint64_t v4 = objc_opt_class();
  int v6 = objc_msgSend_bundleForClass_(v3, v5, v4);
  uint64_t v8 = objc_msgSend_localizedStringForKey_value_table_(v6, v7, (uint64_t)v2, &stru_26DA6BE88, @"AirPortSettings");
  if (objc_msgSend_isEqualToString_(v8, v9, (uint64_t)v2))
  {
    uint64_t v11 = (void *)MEMORY[0x263F086E0];
    uint64_t v12 = objc_opt_class();
    uint64_t v14 = objc_msgSend_bundleForClass_(v11, v13, v12);
    uint64_t v8 = objc_msgSend_localizedStringForKey_value_table_(v14, v15, (uint64_t)v2, &stru_26DA6BE88, @"GuestNetwork");
  }
  if (objc_msgSend_isEqual_(v2, v10, (uint64_t)v8)) {
    return &stru_26DA6BE88;
  }
  else {
    return (__CFString *)v8;
  }
}

__CFString *sub_22685D9D0(uint64_t a1, const char *a2, int a3)
{
  unsigned int v4 = a2;
  unsigned int v6 = objc_msgSend_scanInfoDeviceKind_(WiFiUtils, a2, a1);
  if (v6 >= 3)
  {
    if (v6 - 3 >= 2)
    {
      return &stru_26DA6BE88;
    }
    else
    {
      return (__CFString *)objc_msgSend_scanInfoFriendlyName_(WiFiUtils, v7, a1);
    }
  }
  else
  {
    return sub_22685D7D0(v4, v6, a3);
  }
}

__CFString *sub_22685DA7C(const __CFString *a1, const char *a2, uint64_t a3)
{
  int v3 = (int)a2;
  uint64_t result = (__CFString *)objc_msgSend_string(NSString, a2, a3);
  if (a1)
  {
    if (v3 && sub_22685B9B4(a1, v6, v7, v8, v9, v10, v11, v12))
    {
      unsigned int v13 = sub_22685AB94(a1, v6, v7, v8, v9, v10, v11, v12);
      int v21 = sub_22685AB68((uint64_t)a1, v14, v15, v16, v17, v18, v19, v20);
      return sub_22685D7D0(v13, v21, 0);
    }
    else
    {
      return (__CFString *)sub_22685B6F8(a1, v6, v7, v8, v9, v10, v11, v12);
    }
  }
  return result;
}

__CFString *sub_22685DB1C(uint64_t a1, const char *a2, uint64_t a3)
{
  int v3 = (int)a2;
  uint64_t result = (__CFString *)objc_msgSend_string(NSString, a2, a3);
  if (a1)
  {
    if (v3 && objc_msgSend_scanInfoIsUnconfigured_(WiFiUtils, v6, a1))
    {
      unsigned int v7 = objc_msgSend_scanInfoAppleProductID_(WiFiUtils, v6, a1);
      int v9 = objc_msgSend_scanInfoDeviceKind_(WiFiUtils, v8, a1);
      return sub_22685D7D0(v7, v9, 0);
    }
    else
    {
      return (__CFString *)objc_msgSend_scanInfoNetworkName_(WiFiUtils, v6, a1);
    }
  }
  return result;
}

__CFString *sub_22685DBE0(int a1)
{
  CFDictionaryRef v1 = @"AirPortSetupTitle";
  if (a1 == 4) {
    CFDictionaryRef v1 = @"AccessorySetupTitle";
  }
  if ((a1 & 0xFFFFFFFE) == 2) {
    return @"AirPlaySetupTitle";
  }
  else {
    return v1;
  }
}

const char *sub_22685DC10(void *a1, const char *a2, uint64_t a3)
{
  int v3 = (int)a2;
  uint64_t v18 = *MEMORY[0x263EF8340];
  uint64_t result = (const char *)objc_msgSend_UTF8String(a1, a2, a3);
  if (result)
  {
    uint64_t v5 = (char *)result;
    __int16 v15 = 0;
    int v14 = 0;
    v16[0] = 0;
    v16[1] = 0;
    int v17 = 0;
    size_t v6 = strlen(result);
    int v7 = sub_22686F20C(v5, v6, 6, &v14);
    uint64_t result = 0;
    if (!v7)
    {
      uint64_t v8 = NSString;
      int v9 = sub_22686F33C((unsigned __int8 *)&v14, 6, v16);
      uint64_t v11 = objc_msgSend_stringWithCString_encoding_(v8, v10, (uint64_t)v9, 4);
      if (v3) {
        return (const char *)objc_msgSend_uppercaseString(v11, v12, v13);
      }
      else {
        return (const char *)objc_msgSend_lowercaseString(v11, v12, v13);
      }
    }
  }
  return result;
}

uint64_t sub_22685DCDC(int a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  CFAllocatorRef v2 = NSString;
  uint64_t v3 = sub_2268A7C60(v12, 0x11uLL);
  uint64_t v5 = objc_msgSend_stringWithCString_encoding_(v2, v4, v3, 4);
  size_t v6 = NSString;
  sub_22683C448(a1, v11);
  uint64_t v8 = objc_msgSend_stringWithCString_encoding_(NSString, v7, (uint64_t)v11, 4);
  return objc_msgSend_stringWithFormat_(v6, v9, @"%@%@", v5, v8);
}

void *sub_22685DD98(uint64_t a1, const char *a2)
{
  Object = objc_msgSend_stringWithString_(NSString, a2, a1);
  if ((unint64_t)objc_msgSend_length(Object, v3, v4) >= 5)
  {
    int v7 = objc_msgSend_componentsSeparatedByString_(Object, v5, @".");
    if (objc_msgSend_count(v7, v8, v9)) {
      Object = objc_msgSend_lastObject(v7, v5, v6);
    }
  }

  return sub_22685D720(Object, v5, v6);
}

uint64_t sub_22685DE10(int a1)
{
  sub_22683C448(a1, v4);
  CFAllocatorRef v2 = objc_msgSend_stringWithCString_encoding_(NSString, v1, (uint64_t)v4, 4);
  return sub_22685DE4C(v2);
}

uint64_t sub_22685DE4C(void *a1)
{
  CFAllocatorRef v2 = (void *)MEMORY[0x263F086E0];
  uint64_t v3 = objc_opt_class();
  uint64_t v5 = objc_msgSend_bundleForClass_(v2, v4, v3);
  uint64_t v7 = objc_msgSend_localizedStringForKey_value_table_(v5, v6, (uint64_t)a1, &stru_26DA6BE88, @"AirPortSettings");
  if (!objc_msgSend_isEqualToString_(a1, v8, v7)) {
    return v7;
  }
  uint64_t v9 = (void *)MEMORY[0x263F086E0];
  uint64_t v10 = objc_opt_class();
  uint64_t v12 = objc_msgSend_bundleForClass_(v9, v11, v10);

  return objc_msgSend_localizedStringForKey_value_table_(v12, v13, (uint64_t)a1, &stru_26DA6BE88, @"GuestNetwork");
}

__CFString *sub_22685DF10(int a1, const char *a2)
{
  sub_22683C448(a1, v6);
  uint64_t v4 = objc_msgSend_stringWithCString_encoding_(NSString, v3, (uint64_t)v6, 4);
  return sub_22685D8E8(v4, a2);
}

__CFString *sub_22685DF5C(void *a1, unint64_t a2)
{
  uint64_t v19 = 0;
  sub_2268FDEE8(&v19, 0, 0);
  if (a2 && objc_msgSend_UTF8ByteCount(a1, v4, v5) >= a2) {
    return &stru_26DA6BE88;
  }
  uint64_t v6 = &stru_26DA6BE88;
  if (objc_msgSend_length(v19, v4, v5))
  {
    uint64_t v7 = (void *)MEMORY[0x263F086E0];
    uint64_t v8 = objc_opt_class();
    uint64_t v10 = objc_msgSend_bundleForClass_(v7, v9, v8);
    uint64_t v12 = objc_msgSend_localizedStringForKey_value_table_(v10, v11, @"genericUserOwnership", &stru_26DA6BE88, @"AirPortSettings");
    uint64_t valid = objc_msgSend_stringWithValidatedFormat_validFormatSpecifiers_error_(NSString, v13, v12, @"%@%@", 0, v19, a1);
    if (objc_msgSend_UTF8ByteCount(valid, v15, v16) <= a2 || a2 == 0) {
      return (__CFString *)valid;
    }
  }
  return v6;
}

__CFString *sub_22685E04C(unsigned int a1, int a2)
{
  CFAllocatorRef v2 = sub_22685D7D0(a1, a2, 0);
  unint64_t v3 = sub_2268A61A8(1937329773);

  return sub_22685DF5C(v2, v3);
}

__CFString *sub_22685E098(unsigned int a1, int a2)
{
  CFAllocatorRef v2 = sub_22685D7D0(a1, a2, 0);
  unsigned int v3 = sub_2268A61A8(1937329773);
  if (!v3) {
    return v2;
  }
  unint64_t v6 = v3;
  uint64_t v9 = &stru_26DA6BE88;
  if (objc_msgSend_UTF8ByteCount(v2, v4, v5) < (unint64_t)v3 && objc_msgSend_UTF8ByteCount(v2, v7, v8) <= v6) {
    return v2;
  }
  return v9;
}

__CFString *sub_22685E110()
{
  v0 = (void *)MEMORY[0x263F086E0];
  uint64_t v1 = objc_opt_class();
  unsigned int v3 = objc_msgSend_bundleForClass_(v0, v2, v1);
  uint64_t v5 = objc_msgSend_localizedStringForKey_value_table_(v3, v4, @"genericWiFiNetwork", &stru_26DA6BE88, @"AirPortSettings");
  unint64_t v6 = sub_2268A61A8(1918979693);

  return sub_22685DF5C(v5, v6);
}

uint64_t sub_22685EFD0(CFAllocatorRef allocator, const __CFString *a2, CFTypeRef *a3)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  if (qword_268146568 == -1)
  {
    qword_268146570 = CFArrayGetTypeID();
    qword_268146578 = CFBooleanGetTypeID();
    qword_268146580 = CFDataGetTypeID();
    qword_268146588 = CFDateGetTypeID();
    qword_268146590 = CFDictionaryGetTypeID();
    qword_268146598 = CFNumberGetTypeID();
    qword_268146568 = CFStringGetTypeID();
  }
  CFMutableDataRef Mutable = CFDataCreateMutable(allocator, 0);
  CFTypeRef cf = Mutable;
  if (!Mutable) {
    return 4294960568;
  }
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  CFDataAppendBytes(Mutable, (const UInt8 *)"CFB0", 4);
  uint64_t v7 = sub_22685F134((uint64_t)&cf, a2);
  if (v7)
  {
    if (cf) {
      CFRelease(cf);
    }
  }
  else
  {
    CFDataAppendBytes((CFMutableDataRef)cf, (const UInt8 *)"END!", 4);
    *a3 = cf;
  }
  return v7;
}

uint64_t sub_22685F134(uint64_t a1, const __CFString *a2)
{
  UInt8 bytes = 0;
  unint64_t valuePtr = 0;
  CFIndex length = 0;
  CFTypeID v4 = CFGetTypeID(a2);
  if (v4 == qword_268146568)
  {
    UInt8 bytes = 112;
    CFDataAppendBytes(*(CFMutableDataRef *)a1, &bytes, 1);
    CFIndex v5 = CFStringGetLength(a2);
    if (v5 >= 1)
    {
      CFIndex v6 = v5;
      CFIndex v7 = 0;
      do
      {
        v47.location = v7;
        v47.CFIndex length = v6;
        CFIndex v8 = CFStringGetBytes(a2, v47, 0x8000100u, 0, 0, (UInt8 *)(a1 + 8), 256, &length);
        if (v8 < 1) {
          return 4294960561;
        }
        CFIndex v9 = v8;
        CFDataAppendBytes(*(CFMutableDataRef *)a1, (const UInt8 *)(a1 + 8), length);
        v7 += v9;
        BOOL v10 = v6 <= v9;
        v6 -= v9;
      }
      while (!v10);
    }
    long long v11 = *(__CFData **)a1;
    BytePtr = (const UInt8 *)"";
    goto LABEL_16;
  }
  if (v4 == qword_268146598)
  {
    CFNumberGetValue((CFNumberRef)a2, kCFNumberSInt64Type, &valuePtr);
    sub_22685FBC4((CFMutableDataRef *)a1, valuePtr);
    return 0;
  }
  if (v4 == qword_268146578)
  {
    if ((const __CFString *)*MEMORY[0x263EFFB40] == a2) {
      UInt8 v13 = 9;
    }
    else {
      UInt8 v13 = 8;
    }
    UInt8 bytes = v13;
    goto LABEL_15;
  }
  if (v4 == qword_268146580)
  {
    CFIndex v17 = CFDataGetLength((CFDataRef)a2);
    UInt8 v18 = v17 | 0x40;
    if (v17 >= 15) {
      UInt8 v18 = 79;
    }
    UInt8 bytes = v18;
    CFDataAppendBytes(*(CFMutableDataRef *)a1, &bytes, 1);
    if (v17 >= 15) {
      sub_22685FBC4((CFMutableDataRef *)a1, v17);
    }
    BytePtr = CFDataGetBytePtr((CFDataRef)a2);
    long long v11 = *(__CFData **)a1;
    CFIndex v14 = v17;
    goto LABEL_17;
  }
  if (v4 == qword_268146588)
  {
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v35 = 0;
    uint64_t v46 = (char *)&v37 + 4;
    CFDictionaryRef v45 = &v37;
    uint64_t v44 = (char *)&v36 + 4;
    uint64_t v43 = &v36;
    uint64_t v42 = (char *)&v35 + 4;
    uint64_t v41 = &v35;
    CFAllocatorRef Default = CFAllocatorGetDefault();
    CFCalendarRef v20 = CFCalendarCreateWithIdentifier(Default, (CFCalendarIdentifier)*MEMORY[0x263EFFC90]);
    if (v20)
    {
      long long v21 = v20;
      MEMORY[0x22A659DD0](a2);
      CFCalendarDecomposeAbsoluteTime(v21, v22, "yMdHms", &v46, &v45, &v44, &v43, &v42, &v41);
      CFRelease(v21);
    }
    LOBYTE(v46) = 48;
    BYTE1(v46) = HIDWORD(v37) >> 6;
    BYTE2(v46) = (4 * BYTE4(v37)) | (v37 >> 2) & 3;
    BYTE3(v46) = ((_BYTE)v37 << 6) | (2 * (BYTE4(v36) & 0x1F)) | ((v36 & 0x10) != 0);
    BYTE4(v46) = (16 * v36) | (BYTE4(v35) >> 2) & 0xF;
    BYTE5(v46) = v35 & 0x3F | (BYTE4(v35) << 6);
    long long v11 = *(__CFData **)a1;
    BytePtr = (const UInt8 *)&v46;
    CFIndex v14 = 6;
    goto LABEL_17;
  }
  if (v4 == qword_268146590)
  {
    UInt8 bytes = -48;
    CFDataAppendBytes(*(CFMutableDataRef *)a1, &bytes, 1);
    CFIndex Count = CFDictionaryGetCount((CFDictionaryRef)a2);
    if (Count >= 1)
    {
      CFIndex v24 = Count;
      long long v25 = (const void **)malloc_type_malloc(16 * Count, 0xC0040B8AA526DuLL);
      if (!v25) {
        return 4294960568;
      }
      uint64_t v26 = v25;
      int v27 = &v25[v24];
      CFDictionaryGetKeysAndValues((CFDictionaryRef)a2, v25, v27);
      uint64_t v28 = 0;
      while (1)
      {
        uint64_t v29 = sub_22685F134(a1, v26[v28]);
        if (v29) {
          break;
        }
        uint64_t v29 = sub_22685F134(a1, v27[v28]);
        if (v29) {
          break;
        }
        if (v24 == ++v28)
        {
          free(v26);
          goto LABEL_43;
        }
      }
      uint64_t v15 = v29;
      free(v26);
      return v15;
    }
LABEL_43:
    UInt8 bytes = 0;
LABEL_15:
    long long v11 = *(__CFData **)a1;
    BytePtr = &bytes;
LABEL_16:
    CFIndex v14 = 1;
LABEL_17:
    CFDataAppendBytes(v11, BytePtr, v14);
    return 0;
  }
  if (v4 != qword_268146570) {
    return 4294960561;
  }
  UInt8 bytes = -96;
  CFDataAppendBytes(*(CFMutableDataRef *)a1, &bytes, 1);
  CFIndex v30 = CFArrayGetCount((CFArrayRef)a2);
  if (v30 < 1) {
    goto LABEL_43;
  }
  CFIndex v31 = v30;
  CFIndex v32 = 0;
  while (1)
  {
    CFStringRef ValueAtIndex = CFArrayGetValueAtIndex((CFArrayRef)a2, v32);
    uint64_t v34 = sub_22685F134(a1, ValueAtIndex);
    if (v34) {
      return v34;
    }
    if (v31 == ++v32) {
      goto LABEL_43;
    }
  }
}

uint64_t sub_22685F568(const __CFAllocator *a1, uint64_t a2, unint64_t a3, CFTypeRef *a4)
{
  CFTypeRef cf = 0;
  if (a3 < 5) {
    return 4294960553;
  }
  if (*(_DWORD *)a2 == 809649731)
  {
    uint64_t v7 = a2 + a3;
    CFIndex v9 = (unsigned __int8 *)(a2 + 4);
    uint64_t v4 = sub_22685F648(a1, &v9, a2 + a3, (__CFDictionary **)&cf);
    if (v4)
    {
      if (!cf) {
        return v4;
      }
    }
    else
    {
      if (!cf) {
        return 4294960554;
      }
      if (v7 - (uint64_t)v9 < 4)
      {
        uint64_t v4 = 4294960553;
      }
      else
      {
        if (*(_DWORD *)v9 == 558124613)
        {
          uint64_t v4 = 0;
          *a4 = cf;
          return v4;
        }
        uint64_t v4 = 4294960580;
      }
    }
    CFRelease(cf);
    return v4;
  }
  return 4294960580;
}

uint64_t sub_22685F648(const __CFAllocator *a1, unsigned __int8 **a2, unint64_t a3, __CFDictionary **a4)
{
  value = 0;
  CFTypeRef cf = 0;
  uint64_t v4 = *a2;
  if ((unint64_t)*a2 >= a3) {
    return 4294960546;
  }
  CFMutableDataRef Mutable = 0;
  CFIndex valuePtr = 0;
  uint64_t v7 = v4 + 1;
  unsigned int v6 = *v4;
  uint64_t v46 = v4 + 1;
  uint64_t v8 = 4294960561;
  UInt8 v13 = 0;
  switch(v6 >> 4)
  {
    case 0u:
      CFMutableDataRef Mutable = 0;
      switch(v6)
      {
        case 0u:
          goto LABEL_43;
        case 9u:
          CFIndex v14 = (CFTypeRef *)MEMORY[0x263EFFB40];
          break;
        case 8u:
          CFIndex v14 = (CFTypeRef *)MEMORY[0x263EFFB38];
          break;
        default:
          goto LABEL_39;
      }
      UInt8 v13 = (__CFDictionary *)CFRetain(*v14);
      goto LABEL_59;
    case 1u:
      uint64_t v46 = v4;
      if ((v6 & 0xF0) != 0x10) {
        goto LABEL_40;
      }
      int v15 = 1 << (v6 & 0xF);
      if (v15 > (int)a3 - (int)v7) {
        goto LABEL_23;
      }
      CFIndex v16 = 0;
      unsigned int v17 = v15 + 1;
      do
      {
        unsigned int v18 = *v7++;
        CFIndex v16 = v18 | (unint64_t)(v16 << 8);
        --v17;
      }
      while (v17 > 1);
      CFIndex valuePtr = v16;
      uint64_t v46 = (unsigned __int8 *)v7;
      UInt8 v13 = CFNumberCreate(a1, kCFNumberSInt64Type, &valuePtr);
      if (!v13) {
        goto LABEL_61;
      }
      goto LABEL_59;
    case 2u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xBu:
    case 0xCu:
      goto LABEL_63;
    case 3u:
      if ((int)a3 - (int)v7 < 5) {
        goto LABEL_23;
      }
      int v19 = v4[1];
      unsigned int v20 = v4[2];
      unsigned int v21 = v4[3];
      unsigned int v22 = v4[4];
      unsigned int v23 = v4[5];
      uint64_t v46 = v4 + 6;
      CFIndex v24 = CFCalendarCreateWithIdentifier(a1, (CFCalendarIdentifier)*MEMORY[0x263EFFC90]);
      CFMutableDataRef Mutable = v24;
      if (!v24) {
        goto LABEL_50;
      }
      CFAbsoluteTime at = 0.0;
      if (!CFCalendarComposeAbsoluteTime(v24, &at, "yMdHms", (v20 >> 2) | (v19 << 6), (v21 >> 6) & 0xFFFFFFF3 | (4 * (v20 & 3)), (v21 >> 1) & 0x1F, (v22 >> 4) & 0xFFFFFFEF | (16 * (v21 & 1)), (v23 >> 6) & 0xFFFFFFC3 | (4 * (v22 & 0xF)), v23 & 0x3F))
      {
        CFRelease(Mutable);
        CFMutableDataRef Mutable = 0;
        goto LABEL_50;
      }
      UInt8 v13 = CFDateCreate(a1, at);
      CFRelease(Mutable);
      if (v13) {
        goto LABEL_59;
      }
      goto LABEL_61;
    case 4u:
      CFIndex v25 = v6 & 0xF;
      CFIndex valuePtr = v25;
      if ((v6 & 0xF) != 0xF) {
        goto LABEL_54;
      }
      if ((unint64_t)v7 >= a3) {
        goto LABEL_55;
      }
      UInt8 v26 = *v7;
      if ((*v7 & 0xF0) != 0x10)
      {
LABEL_40:
        CFMutableDataRef Mutable = 0;
        UInt8 v13 = 0;
        uint64_t v8 = 4294960540;
        goto LABEL_63;
      }
      uint64_t v7 = v4 + 2;
      int v27 = 1 << (v26 & 0xF);
      if (v27 > (int)a3 - (int)v7)
      {
LABEL_23:
        CFMutableDataRef Mutable = 0;
        UInt8 v13 = 0;
        uint64_t v8 = 4294960553;
        goto LABEL_63;
      }
      CFIndex v25 = 0;
      unsigned int v35 = v27 + 1;
      do
      {
        unsigned int v36 = *v7++;
        CFIndex v25 = v36 | (unint64_t)(v25 << 8);
        --v35;
      }
      while (v35 > 1);
      CFIndex valuePtr = v25;
      uint64_t v46 = (unsigned __int8 *)v7;
      if ((unint64_t)v25 >> 31)
      {
        CFMutableDataRef Mutable = 0;
        UInt8 v13 = 0;
        uint64_t v8 = 4294960586;
        goto LABEL_63;
      }
LABEL_54:
      if (v25 > (uint64_t)(a3 - (void)v7))
      {
LABEL_55:
        CFMutableDataRef Mutable = 0;
        UInt8 v13 = 0;
        goto LABEL_56;
      }
      UInt8 v13 = CFDataCreate(a1, v7, v25);
      if (v13)
      {
        uint64_t v46 = (unsigned __int8 *)&v7[v25];
        goto LABEL_59;
      }
LABEL_61:
      CFMutableDataRef Mutable = 0;
      goto LABEL_62;
    case 7u:
      if ((unint64_t)v7 >= a3) {
        goto LABEL_28;
      }
      uint64_t v28 = v4 + 2;
      unint64_t v29 = ~(unint64_t)v4 + a3;
      break;
    case 0xAu:
      CFMutableDataRef Mutable = CFArrayCreateMutable(a1, 0, MEMORY[0x263EFFF70]);
      if (!Mutable) {
        goto LABEL_50;
      }
      while (2)
      {
        uint64_t v30 = sub_22685F648(a1, &v46, a3, &value);
        if (v30)
        {
          uint64_t v8 = v30;
          goto LABEL_60;
        }
        CFIndex v31 = value;
        if (value)
        {
          CFArrayAppendValue((CFMutableArrayRef)Mutable, value);
          CFRelease(v31);
          value = 0;
          continue;
        }
        break;
      }
LABEL_43:
      UInt8 v13 = (__CFDictionary *)Mutable;
      goto LABEL_59;
    case 0xDu:
      UInt8 v13 = CFDictionaryCreateMutable(a1, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (!v13) {
        goto LABEL_61;
      }
      while (2)
      {
        uint64_t v32 = sub_22685F648(a1, &v46, a3, &cf);
        if (v32)
        {
          uint64_t v8 = v32;
          CFMutableDataRef Mutable = 0;
          goto LABEL_63;
        }
        CFTypeRef v33 = cf;
        if (!cf) {
          goto LABEL_59;
        }
        uint64_t v34 = sub_22685F648(a1, &v46, a3, &value);
        if (v34)
        {
          uint64_t v8 = v34;
          CFMutableDataRef Mutable = 0;
          goto LABEL_64;
        }
        CFMutableDataRef Mutable = value;
        if (value)
        {
          CFDictionarySetValue(v13, v33, value);
          CFRelease(v33);
          CFTypeRef cf = 0;
          CFRelease(Mutable);
          value = 0;
          continue;
        }
        break;
      }
LABEL_56:
      uint64_t v8 = 4294960546;
      goto LABEL_63;
    default:
LABEL_39:
      UInt8 v13 = 0;
      goto LABEL_63;
  }
  while (*(v28 - 1))
  {
    ++v28;
    if (!--v29)
    {
LABEL_28:
      CFMutableDataRef Mutable = 0;
      UInt8 v13 = 0;
      uint64_t v8 = 4294960569;
      goto LABEL_63;
    }
  }
  UInt8 v13 = (__CFDictionary *)CFStringCreateWithCString(a1, (const char *)v7, 0x8000100u);
  if (v13) {
    goto LABEL_46;
  }
  UInt8 v13 = (__CFDictionary *)CFStringCreateWithCString(a1, (const char *)v7, 0x500u);
  if (v13) {
    goto LABEL_46;
  }
  uint64_t v38 = strdup((const char *)v7);
  CFMutableDataRef Mutable = v38;
  if (v38)
  {
    char v39 = *v38;
    uint64_t v40 = v38;
    if (*v38)
    {
      uint64_t v41 = (unsigned __int8 *)(v38 + 1);
      uint64_t v40 = v38;
      do
      {
        if ((v39 & 0x80) == 0) {
          *v40++ = v39;
        }
        int v42 = *v41++;
        char v39 = v42;
      }
      while (v42);
    }
    char *v40 = 0;
    UInt8 v13 = (__CFDictionary *)CFStringCreateWithCString(a1, v38, 0x8000100u);
    free(Mutable);
    if (v13)
    {
LABEL_46:
      uint64_t v46 = v28;
LABEL_59:
      CFMutableDataRef Mutable = 0;
      uint64_t v8 = 0;
      *a4 = v13;
      *a2 = v46;
LABEL_60:
      UInt8 v13 = 0;
      goto LABEL_63;
    }
    CFMutableDataRef Mutable = 0;
    uint64_t v8 = 4294960554;
  }
  else
  {
LABEL_50:
    UInt8 v13 = 0;
LABEL_62:
    uint64_t v8 = 4294960568;
  }
LABEL_63:
  CFTypeRef v33 = cf;
  if (cf) {
LABEL_64:
  }
    CFRelease(v33);
  if (value) {
    CFRelease(value);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (v13) {
    CFRelease(v13);
  }
  return v8;
}

void sub_22685FBC4(CFMutableDataRef *a1, unint64_t a2)
{
  if (a2 > 0xFF)
  {
    if (a2 >> 16)
    {
      if (HIDWORD(a2))
      {
        UInt8 bytes = 19;
        CFIndex v4 = 8;
      }
      else
      {
        UInt8 bytes = 18;
        CFIndex v4 = 4;
      }
    }
    else
    {
      UInt8 bytes = 17;
      CFIndex v4 = 2;
    }
  }
  else
  {
    UInt8 bytes = 16;
    CFIndex v4 = 1;
  }
  CFDataAppendBytes(*a1, &bytes, 1);
  unint64_t v6 = bswap64(a2);
  CFDataAppendBytes(*a1, (const UInt8 *)&v6 - v4 + 8, v4);
}

uint64_t sub_22685FC7C(const __CFAllocator *a1, CFTypeRef *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_22685FCB4(a1, 0, a2, a3, (uint64_t)&a9, a6, a7, a8);
}

uint64_t sub_22685FCB4(const __CFAllocator *a1, __CFArray *cf, CFTypeRef *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = cf;
  uint64_t v108 = *MEMORY[0x263EF8340];
  CFTypeRef cfa = 0;
  v104 = (unsigned int *)a5;
  CFTypeRef v102 = 0;
  if (!a4)
  {
    UInt8 v13 = 0;
LABEL_6:
    uint64_t v14 = 4294960591;
    goto LABEL_174;
  }
  CFIndex v9 = (const UInt8 *)a4;
  if (cf)
  {
    CFTypeID v11 = CFGetTypeID(cf);
    if (v11 == CFArrayGetTypeID())
    {
      v97 = a3;
      long long v12 = 0;
      UInt8 v13 = v8;
    }
    else
    {
      UInt8 v13 = 0;
      if (v11 != CFDictionaryGetTypeID())
      {
LABEL_160:
        uint64_t v14 = 4294960540;
        goto LABEL_171;
      }
      v97 = a3;
      long long v12 = v8;
    }
  }
  else
  {
    v97 = a3;
    UInt8 v13 = 0;
    long long v12 = 0;
  }
  CFStringRef v100 = (const __CFString *)*MEMORY[0x263EFFC90];
  v99 = (const void *)*MEMORY[0x263EFFB40];
  v98 = (const void *)*MEMORY[0x263EFFB38];
  int v15 = v13;
  UInt8 v13 = 0;
  while (1)
  {
    unsigned int v16 = *v9;
    if (v16 <= 0x5C) {
      break;
    }
    if (v16 != 93)
    {
      if (v16 == 123)
      {
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(a1, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (!Mutable) {
          goto LABEL_159;
        }
        CFMutableDictionaryRef v19 = Mutable;
        uint64_t v14 = sub_2268607B8(v15, v12, &cfa, Mutable, &v102);
        CFRelease(v19);
        if (v14) {
          goto LABEL_171;
        }
        unsigned int v21 = (__CFArray *)malloc_type_calloc(1uLL, 0x18uLL, 0x20040960023A9uLL);
        if (!v21) {
          goto LABEL_159;
        }
        unsigned int v18 = 0;
        goto LABEL_27;
      }
      if (v16 != 125) {
        goto LABEL_36;
      }
    }
    if (!v13)
    {
      uint64_t v14 = 4294960554;
      goto LABEL_171;
    }
    unsigned int v17 = *(__CFArray **)v13;
    unsigned int v18 = (__CFArray *)*((void *)v13 + 1);
    CFMutableDictionaryRef v19 = (CFMutableDictionaryRef)*((void *)v13 + 2);
    free(v13);
    UInt8 v13 = v17;
LABEL_144:
    ++v9;
    int v15 = v18;
    long long v12 = v19;
  }
  if (v16 != 37)
  {
    if (v16 == 91)
    {
      CFMutableArrayRef v20 = CFArrayCreateMutable(a1, 0, MEMORY[0x263EFFF70]);
      if (!v20) {
        goto LABEL_159;
      }
      unsigned int v18 = v20;
      uint64_t v14 = sub_2268607B8(v15, v12, &cfa, v20, &v102);
      CFRelease(v18);
      if (v14) {
        goto LABEL_171;
      }
      unsigned int v21 = (__CFArray *)malloc_type_calloc(1uLL, 0x18uLL, 0x20040960023A9uLL);
      if (!v21) {
        goto LABEL_159;
      }
      CFMutableDictionaryRef v19 = 0;
LABEL_27:
      *(void *)unsigned int v21 = v13;
      *((void *)v21 + 1) = v15;
      UInt8 v13 = v21;
      *((void *)v21 + 2) = v12;
      goto LABEL_144;
    }
    if (!*v9) {
      goto LABEL_162;
    }
LABEL_36:
    CFIndex v27 = 0;
    if (*v9)
    {
      while (1)
      {
        if (v16 == 59) {
          goto LABEL_40;
        }
        if (v16 == 61) {
          break;
        }
        unsigned int v16 = v9[++v27];
        if (!v16) {
          goto LABEL_40;
        }
      }
      CFTypeRef v33 = cfa;
      uint64_t v14 = 4294960554;
      if (cfa || !v12) {
        goto LABEL_172;
      }
      CFTypeRef cfa = CFStringCreateWithBytes(a1, v9, v27, 0x8000100u, 0);
      if (!cfa) {
        goto LABEL_167;
      }
    }
    else
    {
LABEL_40:
      CFStringRef v28 = CFStringCreateWithBytes(a1, v9, v27, 0x8000100u, 0);
      if (!v28) {
        goto LABEL_159;
      }
      CFStringRef v29 = v28;
      uint64_t v14 = sub_2268607B8(v15, v12, &cfa, v28, &v102);
      CFRelease(v29);
      if (v14) {
        goto LABEL_171;
      }
      if (!v16)
      {
LABEL_162:
        uint64_t v14 = 0;
        if (v97)
        {
          CFTypeRef *v97 = v102;
          CFTypeRef v102 = 0;
        }
        goto LABEL_171;
      }
    }
    v9 += v27;
    unsigned int v18 = v15;
    CFMutableDictionaryRef v19 = v12;
    goto LABEL_144;
  }
  int v23 = 0;
  int v24 = 0;
  while (1)
  {
    for (uint64_t i = 0; ; ++i)
    {
      int v26 = v9[i + 1];
      if (v26 != 35) {
        break;
      }
    }
    if (v26 == 46) {
      break;
    }
    if (v26 != 108)
    {
      uint64_t v30 = &v9[i + 1];
      uint64_t v32 = 0xFFFFFFFFLL;
      goto LABEL_58;
    }
    ++v23;
    v24 += i;
    v9 += i + 1;
  }
  uint64_t v30 = &v9[i + 2];
  int v26 = *v30;
  if (v26 == 42)
  {
    CFIndex v31 = v104;
    v104 += 2;
    uint64_t v32 = *v31;
    if ((v32 & 0x80000000) == 0)
    {
      uint64_t v30 = &v9[i + 3];
      int v26 = *v30;
      goto LABEL_58;
    }
LABEL_166:
    uint64_t v14 = 4294960553;
    goto LABEL_171;
  }
  int v34 = v26 - 48;
  if ((v26 - 48) > 9)
  {
    uint64_t v32 = 0;
  }
  else
  {
    LODWORD(v32) = 0;
    do
    {
      uint64_t v32 = (v34 + 10 * v32);
      int v35 = *++v30;
      int v26 = v35;
      int v34 = v35 - 48;
    }
    while ((v35 - 48) < 0xA);
    if ((v32 & 0x80000000) != 0) {
      goto LABEL_166;
    }
  }
LABEL_58:
  int v36 = v24 + i;
  uint64_t v14 = 4294960579;
  if (v26 > 84)
  {
    switch(v26)
    {
      case 'a':
        uint64_t v37 = v104;
        v104 += 2;
        uint64_t v38 = *(void *)v37;
        if (!v38) {
          goto LABEL_165;
        }
        if (v36 == 2)
        {
          int v39 = sub_226862A3C((uint64_t)bytes, 64, "%##a", a4, a5, a6, a7, a8, v38);
          if (v39 <= 0)
          {
LABEL_170:
            uint64_t v14 = 4294960596;
            goto LABEL_171;
          }
        }
        else
        {
          int v39 = sub_226862A3C((uint64_t)bytes, 64, "%.*a", a4, a5, a6, a7, a8, v32, v38);
          if (v39 < 1) {
            goto LABEL_170;
          }
        }
        CFIndex v52 = v39;
        CFAllocatorRef v51 = a1;
        CFStringEncoding v53 = 134217984;
        goto LABEL_139;
      case 'b':
        if (v32 != -1) {
          goto LABEL_171;
        }
        uint64_t v67 = v104;
        v104 += 2;
        if (*v67) {
          CFTypeRef v68 = v99;
        }
        else {
          CFTypeRef v68 = v98;
        }
        uint64_t v69 = v15;
        CFStringRef v70 = v12;
        goto LABEL_130;
      case 'c':
      case 'e':
      case 'f':
      case 'g':
      case 'h':
      case 'j':
      case 'l':
      case 'm':
      case 'n':
        goto LABEL_171;
      case 'd':
        goto LABEL_77;
      case 'i':
        if (v32 != -1) {
          goto LABEL_171;
        }
        v71 = (CFAbsoluteTime *)v104;
        v104 += 2;
        if (v23 == 2) {
          CFAbsoluteTime v72 = *v71;
        }
        else {
          *(void *)&CFAbsoluteTime v72 = *(int *)v71;
        }
        CFAbsoluteTime at = v72;
        CFStringRef DeepCopy = (const __CFString *)CFNumberCreate(a1, kCFNumberSInt64Type, &at);
        if (!DeepCopy) {
          goto LABEL_159;
        }
        goto LABEL_140;
      case 'k':
        CFTypeRef v33 = cfa;
        uint64_t v14 = 4294960554;
        if (cfa || !v12) {
          goto LABEL_172;
        }
        unsigned int v73 = v30[1];
        uint64_t v14 = 4294960579;
        if (v73 <= 0x54)
        {
          if (v73 != 67)
          {
            if (v73 != 79) {
              goto LABEL_171;
            }
LABEL_134:
            if (v32 != -1) {
              goto LABEL_171;
            }
            v84 = (const void **)v104;
            v104 += 2;
            v85 = *v84;
            CFTypeRef cfa = v85;
            if (!v85) {
              goto LABEL_6;
            }
            CFRetain(v85);
            goto LABEL_157;
          }
          if (v32 != -1) {
            goto LABEL_171;
          }
          v90 = v104;
          v104 += 2;
          *(_DWORD *)UInt8 bytes = bswap32(*v90);
          uint64_t v78 = bytes;
          CFAllocatorRef v77 = a1;
          CFIndex v76 = 4;
          CFStringEncoding v79 = 0;
          goto LABEL_153;
        }
        switch(v73)
        {
          case 'U':
            if (v32 != -1) {
              goto LABEL_171;
            }
            v87 = (unsigned __int8 **)v104;
            v104 += 2;
            if (!*v87)
            {
LABEL_165:
              uint64_t v14 = 4294960591;
              goto LABEL_171;
            }
            v88 = sub_22686FD28(*v87, 0, (char *)bytes);
            CFAllocatorRef v89 = 0;
            break;
          case 'o':
            goto LABEL_134;
          case 's':
            CFStringRef v74 = (uint64_t *)v104;
            v104 += 2;
            uint64_t v75 = *v74;
            if (!*v74) {
              goto LABEL_165;
            }
            if ((v32 & 0x80000000) == 0)
            {
              CFIndex v76 = (int)sub_226870018(*v74, v32);
              CFAllocatorRef v77 = a1;
              uint64_t v78 = (UInt8 *)v75;
              CFStringEncoding v79 = 134217984;
LABEL_153:
              CFStringRef v91 = CFStringCreateWithBytes(v77, v78, v76, v79, 0);
              goto LABEL_156;
            }
            CFAllocatorRef v89 = a1;
            v88 = (char *)*v74;
            break;
          default:
            goto LABEL_171;
        }
        CFStringRef v91 = CFStringCreateWithCString(v89, v88, 0x8000100u);
LABEL_156:
        CFTypeRef cfa = v91;
        if (!v91)
        {
LABEL_167:
          uint64_t v14 = 4294960568;
          goto LABEL_174;
        }
LABEL_157:
        int v92 = v30[2];
        v30 += 2;
        if (v92 != 61) {
          goto LABEL_171;
        }
        break;
      case 'o':
        goto LABEL_82;
      default:
        if (v26 == 85)
        {
          v80 = (unsigned __int8 **)v104;
          v104 += 2;
          if (!*v80) {
            goto LABEL_165;
          }
          v81 = sub_22686FD28(*v80, 0, (char *)bytes);
          CFStringRef DeepCopy = CFStringCreateWithCString(0, v81, 0x8000100u);
          if (!DeepCopy)
          {
LABEL_159:
            uint64_t v14 = 4294960568;
            goto LABEL_171;
          }
          goto LABEL_140;
        }
        if (v26 != 115) {
          goto LABEL_171;
        }
        uint64_t v60 = (const char **)v104;
        v104 += 2;
        uint64_t v61 = *v60;
        if (!*v60) {
          goto LABEL_99;
        }
        if ((v32 & 0x80000000) != 0)
        {
          CFStringRef v63 = CFStringCreateWithCString(a1, *v60, 0x8000100u);
        }
        else
        {
          int v62 = sub_226870018((uint64_t)*v60, v32);
          CFStringRef v63 = CFStringCreateWithBytes(a1, (const UInt8 *)v61, v62, 0x8000100u, 0);
        }
        CFStringRef v86 = v63;
        if (!v63) {
          goto LABEL_159;
        }
        goto LABEL_141;
    }
    goto LABEL_143;
  }
  if (v26 <= 67)
  {
    if (v26 == 64)
    {
      if (v32 != -1) {
        goto LABEL_171;
      }
      uint64_t v64 = v104;
      v104 += 2;
      uint64_t v65 = *(__CFArray ***)v64;
      if (!v65) {
        goto LABEL_165;
      }
      if (v15) {
        uint64_t v66 = v15;
      }
      else {
        uint64_t v66 = v12;
      }
      *uint64_t v65 = v66;
      goto LABEL_143;
    }
    if (v26 != 67 || v32 != -1) {
      goto LABEL_171;
    }
    uint64_t v50 = v104;
    v104 += 2;
    *(_DWORD *)UInt8 bytes = bswap32(*v50);
    CFAllocatorRef v51 = a1;
    CFIndex v52 = 4;
    CFStringEncoding v53 = 0;
LABEL_139:
    CFStringRef DeepCopy = CFStringCreateWithBytes(v51, bytes, v52, v53, 0);
    if (!DeepCopy) {
      goto LABEL_159;
    }
    goto LABEL_140;
  }
  if (v26 == 68)
  {
LABEL_77:
    if (v32 != -1) {
      goto LABEL_171;
    }
    uint64_t v54 = v104;
    v104 += 2;
    uint64_t v55 = *(const UInt8 **)v54;
    v104 = v54 + 4;
    unsigned int v56 = v54[2];
    if (!v55 && v56) {
      goto LABEL_165;
    }
    CFStringRef DeepCopy = (const __CFString *)CFDataCreate(a1, v55, (int)v56);
    if (!DeepCopy) {
      goto LABEL_159;
    }
LABEL_140:
    CFStringRef v86 = DeepCopy;
LABEL_141:
    uint64_t v14 = sub_2268607B8(v15, v12, &cfa, v86, &v102);
    CFDateRef v49 = (CFDateRef)v86;
LABEL_142:
    CFRelease(v49);
    if (v14) {
      goto LABEL_171;
    }
    goto LABEL_143;
  }
  if (v26 != 79)
  {
    if (v26 != 84 || v32 != -1) {
      goto LABEL_171;
    }
    v96 = v8;
    uint64_t v40 = v104;
    v104 += 2;
    uint64_t v95 = *v40;
    v104 = v40 + 4;
    uint64_t v41 = v40[2];
    v104 = v40 + 6;
    uint64_t v42 = v40[4];
    v104 = v40 + 8;
    uint64_t v43 = v40[6];
    v104 = v40 + 10;
    uint64_t v44 = v40[8];
    v104 = v40 + 12;
    uint64_t v45 = v40[10];
    uint64_t v46 = CFCalendarCreateWithIdentifier(a1, v100);
    if (!v46) {
      goto LABEL_169;
    }
    CFRange v47 = v46;
    CFAbsoluteTime at = 0.0;
    if (!CFCalendarComposeAbsoluteTime(v46, &at, "yMdHms", v95, v41, v42, v43, v44, v45))
    {
      CFRelease(v47);
LABEL_169:
      uint64_t v14 = 4294960568;
      uint64_t v8 = v96;
      goto LABEL_171;
    }
    CFDateRef v48 = CFDateCreate(a1, at);
    CFRelease(v47);
    uint64_t v8 = v96;
    if (!v48) {
      goto LABEL_159;
    }
    uint64_t v14 = sub_2268607B8(v15, v12, &cfa, v48, &v102);
    CFDateRef v49 = v48;
    goto LABEL_142;
  }
LABEL_82:
  if (v32 != -1) {
    goto LABEL_171;
  }
  unint64_t v58 = (CFTypeRef *)v104;
  v104 += 2;
  CFDictionaryRef v59 = (const __CFDictionary *)*v58;
  if (!*v58)
  {
LABEL_99:
    if (cfa)
    {
      CFRelease(cfa);
      CFTypeRef cfa = 0;
    }
    goto LABEL_143;
  }
  if (v36 == 2)
  {
    CFTypeRef v33 = cfa;
    uint64_t v14 = 4294960591;
    if (cfa || !v12) {
      goto LABEL_172;
    }
    CFTypeID v82 = CFGetTypeID(*v58);
    if (v82 != CFDictionaryGetTypeID()) {
      goto LABEL_160;
    }
    *(void *)&CFAbsoluteTime at = v12;
    uint64_t v106 = 0;
    CFDictionaryApplyFunction(v59, (CFDictionaryApplierFunction)sub_2268621B0, &at);
    uint64_t v14 = v106;
    if (v106) {
      goto LABEL_171;
    }
    goto LABEL_143;
  }
  if (v36 == 1)
  {
    CFStringRef DeepCopy = (const __CFString *)CFPropertyListCreateDeepCopy(a1, *v58, 2uLL);
    if (!DeepCopy) {
      goto LABEL_159;
    }
    goto LABEL_140;
  }
  uint64_t v69 = v15;
  CFStringRef v70 = v12;
  CFTypeRef v68 = *v58;
LABEL_130:
  uint64_t v83 = sub_2268607B8(v69, v70, &cfa, v68, &v102);
  if (!v83)
  {
LABEL_143:
    unsigned int v18 = v15;
    CFMutableDictionaryRef v19 = v12;
    CFIndex v9 = v30;
    goto LABEL_144;
  }
  uint64_t v14 = v83;
LABEL_171:
  CFTypeRef v33 = cfa;
LABEL_172:
  if (v33) {
    CFRelease(v33);
  }
LABEL_174:
  if (!v8 && v102) {
    CFRelease(v102);
  }
  if (v13)
  {
    do
    {
      v93 = *(__CFArray **)v13;
      free(v13);
      UInt8 v13 = v93;
    }
    while (v93);
  }
  return v14;
}

uint64_t sub_226860774(const __CFAllocator *a1, __CFArray *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_22685FCB4(a1, a2, 0, a3, (uint64_t)&a9, a6, a7, a8);
}

uint64_t sub_2268607A8(const __CFAllocator *a1, __CFArray *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_22685FCB4(a1, a2, 0, a3, a4, a6, a7, a8);
}

uint64_t sub_2268607B8(__CFArray *a1, CFMutableDictionaryRef theDict, const void **a3, CFTypeRef cf, void *a5)
{
  if (a1)
  {
    CFArrayAppendValue(a1, cf);
  }
  else if (theDict)
  {
    if (!*a3) {
      return 4294960554;
    }
    CFDictionarySetValue(theDict, *a3, cf);
    CFRelease(*a3);
    *a3 = 0;
  }
  else
  {
    CFRetain(cf);
  }
  uint64_t result = 0;
  if (!*a5) {
    *a5 = cf;
  }
  return result;
}

uint64_t sub_22686084C(uint64_t a1, CFDictionaryRef theDict)
{
  uint64_t v3 = a1;
  uint64_t v4 = 0;
  CFDictionaryApplyFunction(theDict, (CFDictionaryApplierFunction)sub_2268621B0, &v3);
  return v4;
}

void sub_22686088C(const __CFString *a1, uint64_t a2, UInt8 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2268608B8(const __CFString *cf, uint64_t a2, UInt8 *bytes, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v95 = *MEMORY[0x263EF8340];
  CFIndex maxBufLen = 0;
  CFStringRef v91 = (UInt8 **)a4;
  BOOL v89 = 0;
  unsigned int v8 = *bytes;
  if (!*bytes) {
    return;
  }
  CFIndex v9 = bytes;
  CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  while (1)
  {
    CFIndex v12 = 0;
    for (unsigned int i = v8; i > 0x3A || ((1 << i) & 0x400400000000001) == 0; unsigned int i = v9[++v12])
      ;
    uint64_t v14 = &v9[v12];
    int v15 = &v9[v12];
    if (i)
    {
      do
      {
        if (i == 46) {
          break;
        }
        unsigned int v16 = *++v15;
        unsigned int i = v16;
      }
      while (v16);
    }
    if (v8 == 91)
    {
      int v18 = v9[1];
      if (v18 == 42)
      {
        if (v9[2] != 93) {
          return;
        }
        CFMutableDictionaryRef v19 = v91++;
        uint64_t v20 = *(unsigned int *)v19;
        if ((v20 & 0x80000000) != 0) {
          return;
        }
        uint64_t v14 = v9 + 3;
      }
      else
      {
        unsigned int v22 = v18 - 48;
        if (v22 > 9) {
          return;
        }
        uint64_t v20 = 0;
        uint64_t v14 = v9 + 2;
        do
        {
          uint64_t v20 = 10 * v20 + v22;
          int v24 = *v14++;
          int v23 = v24;
          unsigned int v22 = v24 - 48;
        }
        while ((v24 - 48) < 0xA);
        if (v20 < 0 || v23 != 93) {
          return;
        }
      }
      CFTypeID v25 = CFGetTypeID(cf);
      if (v25 != CFArrayGetTypeID() || v20 >= CFArrayGetCount((CFArrayRef)cf)) {
        return;
      }
      CFTypeRef cf = (const __CFString *)CFArrayGetValueAtIndex((CFArrayRef)cf, v20);
      goto LABEL_53;
    }
    if (v8 != 37)
    {
      if (v9 >= v14)
      {
        uint64_t v14 = v9;
        goto LABEL_53;
      }
      CFStringRef v21 = CFStringCreateWithBytes(v11, v9, v12, 0x8000100u, 0);
      if (!v21) {
        return;
      }
      goto LABEL_51;
    }
    if (v9[1] != 107) {
      return;
    }
    unsigned int v17 = v9[2];
    if (v17 > 0x68)
    {
      if (v9[2] > 0x72u)
      {
        if (v17 == 116)
        {
          uint64_t v37 = v91++;
          CFIndex v27 = *v37;
          if (!*v37) {
            return;
          }
          uint64_t v38 = v91++;
          CFIndex v29 = *(int *)v38;
          CFAllocatorRef v28 = v11;
          CFStringEncoding v30 = 134217984;
          goto LABEL_48;
        }
        if (v17 != 115) {
          return;
        }
        CFIndex v31 = (char **)v91++;
        uint64_t v32 = *v31;
        if (!*v31) {
          return;
        }
        CFAllocatorRef v33 = v11;
      }
      else
      {
        if (v17 != 105)
        {
          if (v17 != 111) {
            return;
          }
          goto LABEL_42;
        }
        int v35 = v91++;
        sub_226862A3C((uint64_t)cStr, 64, "%llu", a4, a5, a6, a7, a8, *v35);
        uint64_t v32 = cStr;
        CFAllocatorRef v33 = 0;
      }
      CFStringRef v36 = CFStringCreateWithCString(v33, v32, 0x8000100u);
      goto LABEL_49;
    }
    if (v17 == 67) {
      goto LABEL_37;
    }
    if (v17 != 79)
    {
      if (v17 != 99) {
        return;
      }
LABEL_37:
      int v26 = (unsigned int *)v91++;
      *(_DWORD *)v94 = bswap32(*v26);
      CFIndex v27 = v94;
      CFAllocatorRef v28 = v11;
      CFIndex v29 = 4;
      CFStringEncoding v30 = 0;
LABEL_48:
      CFStringRef v36 = CFStringCreateWithBytes(v28, v27, v29, v30, 0);
LABEL_49:
      CFStringRef v21 = v36;
      if (!v36) {
        return;
      }
      goto LABEL_50;
    }
LABEL_42:
    int v34 = (CFTypeRef *)v91++;
    CFStringRef v21 = (CFStringRef)*v34;
    if (!*v34) {
      return;
    }
    CFRetain(*v34);
LABEL_50:
    uint64_t v14 = v9 + 3;
LABEL_51:
    CFTypeID v39 = CFGetTypeID(cf);
    if (v39 != CFDictionaryGetTypeID())
    {
      CFRelease(v21);
      return;
    }
    CFTypeRef cf = (const __CFString *)CFDictionaryGetValue((CFDictionaryRef)cf, v21);
    CFRelease(v21);
    if (!cf) {
      return;
    }
LABEL_53:
    if (*v14 == 58) {
      break;
    }
    if (*v15) {
      CFIndex v9 = v15 + 1;
    }
    else {
      CFIndex v9 = v15;
    }
    unsigned int v8 = *v9;
    if (!*v9)
    {
      if (!cf) {
        return;
      }
      goto LABEL_59;
    }
  }
  uint64_t v40 = v14 + 1;
  for (j = v14 + 1; *j; ++j)
  {
    if (*j == 46) {
      return;
    }
  }
  if (!cf) {
    return;
  }
  if (!strcmp((const char *)v14 + 1, "err") || !strcmp((const char *)v14 + 1, "int"))
  {
    if (!sub_2268616C0(cf, &v89) && a2) {
LABEL_99:
    }
      *(_DWORD *)a2 = v89;
    return;
  }
  if (!strcmp((const char *)v14 + 1, "int8"))
  {
    if (!sub_2268616C0(cf, &v89) && a2) {
LABEL_102:
    }
      *(unsigned char *)a2 = v89;
    return;
  }
  if (!strcmp((const char *)v14 + 1, "int16"))
  {
    if (!sub_2268616C0(cf, &v89) && a2) {
LABEL_105:
    }
      *(_WORD *)a2 = v89;
    return;
  }
  if (!strcmp((const char *)v14 + 1, "int64"))
  {
    sub_2268616C0(cf, (BOOL *)a2);
    return;
  }
  if (!strcmp((const char *)v14 + 1, "int*"))
  {
    if (!sub_2268616C0(cf, &v89))
    {
      CFRange v47 = v91++;
      switch((unint64_t)*v47)
      {
        case 1uLL:
          goto LABEL_102;
        case 2uLL:
          goto LABEL_105;
        case 4uLL:
          goto LABEL_99;
        case 8uLL:
          *(void *)a2 = v89;
          break;
        default:
          return;
      }
    }
    return;
  }
  if (!strcmp((const char *)v14 + 1, "utf8"))
  {
    CFTypeID v48 = CFGetTypeID(cf);
    if (v48 == CFStringGetTypeID())
    {
      CFIndex Length = CFStringGetLength(cf);
      CFIndex maxBufLen = CFStringGetMaximumSizeForEncoding(Length, 0x8000100u);
      uint64_t v50 = (UInt8 *)malloc_type_malloc(maxBufLen + 1, 0xB4A46436uLL);
      if (v50)
      {
        CFAllocatorRef v51 = v50;
        v96.location = 0;
        v96.CFIndex length = Length;
        if (CFStringGetBytes(cf, v96, 0x8000100u, 0, 0, v50, maxBufLen, &maxBufLen) == Length)
        {
          v51[maxBufLen] = 0;
          if (a2) {
            *(void *)a2 = v51;
          }
          else {
            free(v51);
          }
        }
        else
        {
          free(v51);
        }
      }
    }
    return;
  }
  if (!strcmp((const char *)v14 + 1, "*utf8"))
  {
    CFTypeID v52 = CFGetTypeID(cf);
    if (v52 == CFStringGetTypeID())
    {
      CFStringEncoding v53 = (CFIndex *)v91++;
      CFStringGetCString(cf, (char *)a2, *v53, 0x8000100u);
    }
    return;
  }
  if (!strcmp((const char *)v14 + 1, "obj"))
  {
    if (!a2) {
      return;
    }
    CFRetain(cf);
    goto LABEL_60;
  }
  if (!strcmp((const char *)v14 + 1, "BOOL"))
  {
    CFTypeID v54 = CFGetTypeID(cf);
    if (v54 == CFBooleanGetTypeID() && a2) {
      *(unsigned char *)a2 = CFBooleanGetValue((CFBooleanRef)cf);
    }
    return;
  }
  if (!strcmp((const char *)v14 + 1, "mac"))
  {
    CFTypeID v55 = CFGetTypeID(cf);
    if (v55 == CFDataGetTypeID())
    {
      if (CFDataGetLength((CFDataRef)cf) == 6 && a2)
      {
        BytePtr = CFDataGetBytePtr((CFDataRef)cf);
        __int16 v57 = *((_WORD *)BytePtr + 2);
        *(_DWORD *)a2 = *(_DWORD *)BytePtr;
        *(_WORD *)(a2 + 4) = v57;
      }
    }
    else
    {
      CFTypeID v60 = CFGetTypeID(cf);
      if (v60 == CFStringGetTypeID() && CFStringGetCString(cf, cStr, 64, 0x8000100u)) {
        sub_22686F20C(cStr, 0xFFFFFFFFFFFFFFFFLL, 6, (unsigned char *)a2);
      }
    }
    return;
  }
  if (!strcmp((const char *)v14 + 1, "macStr"))
  {
    CFTypeID v58 = CFGetTypeID(cf);
    if (v58 == CFDataGetTypeID())
    {
      if (CFDataGetLength((CFDataRef)cf) != 6) {
        return;
      }
      CFDictionaryRef v59 = (unsigned __int8 *)CFDataGetBytePtr((CFDataRef)cf);
    }
    else
    {
      CFTypeID v62 = CFGetTypeID(cf);
      if (v62 != CFStringGetTypeID()
        || !CFStringGetCString(cf, cStr, 64, 0x8000100u)
        || sub_22686F20C(cStr, 0xFFFFFFFFFFFFFFFFLL, 6, v94))
      {
        return;
      }
      CFDictionaryRef v59 = v94;
    }
    sub_22686F33C(v59, 6, (unsigned char *)a2);
    return;
  }
  if (strcmp((const char *)v14 + 1, "code"))
  {
    if (!strcmp((const char *)v14 + 1, "ipv4"))
    {
      CFTypeID v63 = CFGetTypeID(cf);
      if (v63 == CFStringGetTypeID() && CFStringGetCString(cf, cStr, 64, 0x8000100u)) {
        sub_22686EA18(cStr, 0, (unsigned int *)a2, 0, 0, 0, 0);
      }
      return;
    }
    if (!strcmp((const char *)v14 + 1, "vers"))
    {
      CFTypeID v65 = CFGetTypeID(cf);
      if (v65 == CFStringGetTypeID())
      {
        v98.CFIndex length = CFStringGetLength(cf);
        CFIndex maxBufLen = 0;
        v98.location = 0;
        CFStringGetBytes(cf, v98, 0x8000100u, 0, 0, (UInt8 *)cStr, 63, &maxBufLen);
        sub_22686F3A4(cStr, maxBufLen, (int *)a2);
      }
      return;
    }
    if (!strcmp((const char *)v14 + 1, "svers"))
    {
      CFTypeID v66 = CFGetTypeID(cf);
      if (v66 == CFStringGetTypeID())
      {
        v99.CFIndex length = CFStringGetLength(cf);
        CFIndex maxBufLen = 0;
        v99.location = 0;
        CFStringGetBytes(cf, v99, 0x8000100u, 0, 0, (UInt8 *)cStr, 63, &maxBufLen);
        int v67 = sub_22686F9E4(cStr, maxBufLen);
        if (v67) {
          *(_DWORD *)a2 = v67;
        }
      }
      return;
    }
    if (!strcmp((const char *)v14 + 1, "uuid"))
    {
      CFTypeID v68 = CFGetTypeID(cf);
      if (v68 == CFDataGetTypeID())
      {
        if (CFDataGetLength((CFDataRef)cf) == 16 && a2) {
          *(_OWORD *)a2 = *(_OWORD *)CFDataGetBytePtr((CFDataRef)cf);
        }
      }
      else
      {
        CFTypeID v75 = CFGetTypeID(cf);
        if (v75 == CFStringGetTypeID() && CFStringGetCString(cf, valuePtr, 64, 0x8000100u)) {
          sub_22686FDF0(valuePtr, 0xFFFFFFFFFFFFFFFFLL, 0, (_OWORD *)a2, v76, v77, v78, v79);
        }
      }
      return;
    }
    if (!strcmp((const char *)v14 + 1, "CFStringUUID"))
    {
      CFTypeID v69 = CFGetTypeID(cf);
      if (v69 != CFStringGetTypeID()) {
        return;
      }
      if (!CFStringGetCString(cf, cStr, 64, 0x8000100u)) {
        return;
      }
      sub_22686FDF0(cStr, 0xFFFFFFFFFFFFFFFFLL, 0, 0, v70, v71, v72, v73);
      if (v74) {
        return;
      }
    }
    else
    {
      if (strncmp((const char *)v14 + 1, "CF", 2uLL))
      {
        if (!strcmp((const char *)v14 + 1, "data*"))
        {
          CFTypeID v82 = CFGetTypeID(cf);
          if (v82 == CFDataGetTypeID())
          {
            uint64_t v83 = v91++;
            v84 = *v83;
            if ((UInt8 *)CFDataGetLength((CFDataRef)cf) == v84)
            {
              if (a2) {
                *(void *)a2 = CFDataGetBytePtr((CFDataRef)cf);
              }
            }
          }
        }
        else
        {
          unsigned int v42 = *v40 - 48;
          if (v42 > 9)
          {
            if (*v40) {
              return;
            }
            size_t v43 = 0;
          }
          else
          {
            size_t v43 = 0;
            uint64_t v44 = v14 + 2;
            do
            {
              size_t v43 = 10 * v43 + v42;
              int v46 = *v44++;
              int v45 = v46;
              unsigned int v42 = v46 - 48;
            }
            while ((v46 - 48) < 0xA);
            if (v45 || (v43 & 0x8000000000000000) != 0) {
              return;
            }
          }
          CFTypeID v85 = CFGetTypeID(cf);
          if (v85 == CFDataGetTypeID() && CFDataGetLength((CFDataRef)cf) == v43 && a2)
          {
            CFStringRef v86 = CFDataGetBytePtr((CFDataRef)cf);
            memcpy((void *)a2, v86, v43);
          }
        }
        return;
      }
      v80 = strchr((char *)v14 + 1, 33);
      if (v80) {
        size_t v81 = v80 - v40;
      }
      else {
        size_t v81 = strlen((const char *)v14 + 1);
      }
      if (sub_226870048(v14 + 1, v81, "CFArray"))
      {
        if (sub_226870048(v14 + 1, v81, "CFBoolean"))
        {
          if (sub_226870048(v14 + 1, v81, "CFData"))
          {
            if (sub_226870048(v14 + 1, v81, "CFDate"))
            {
              if (sub_226870048(v14 + 1, v81, "CFDictionary"))
              {
                if (sub_226870048(v14 + 1, v81, "CFNumber"))
                {
                  if (sub_226870048(v14 + 1, v81, "CFString")) {
                    return;
                  }
                  CFTypeID TypeID = CFStringGetTypeID();
                }
                else
                {
                  CFTypeID TypeID = CFNumberGetTypeID();
                }
              }
              else
              {
                CFTypeID TypeID = CFDictionaryGetTypeID();
              }
            }
            else
            {
              CFTypeID TypeID = CFDateGetTypeID();
            }
          }
          else
          {
            CFTypeID TypeID = CFDataGetTypeID();
          }
        }
        else
        {
          CFTypeID TypeID = CFBooleanGetTypeID();
        }
      }
      else
      {
        CFTypeID TypeID = CFArrayGetTypeID();
      }
      if (CFGetTypeID(cf) != TypeID) {
        return;
      }
    }
LABEL_59:
    if (!a2) {
      return;
    }
LABEL_60:
    *(void *)a2 = cf;
    return;
  }
  *(_DWORD *)CFIndex valuePtr = 0;
  CFTypeID v61 = CFGetTypeID(cf);
  if (v61 == CFStringGetTypeID())
  {
    if (CFStringGetLength(cf) != 4) {
      return;
    }
    CFIndex maxBufLen = 0;
    v97.location = 0;
    v97.CFIndex length = 4;
    CFStringGetBytes(cf, v97, 0x8000100u, 0, 0, v94, 4, &maxBufLen);
    if (maxBufLen != 4) {
      return;
    }
    *(_DWORD *)CFIndex valuePtr = sub_22686F180(v94, 4uLL);
  }
  else
  {
    CFTypeID v64 = CFGetTypeID(cf);
    if (v64 != CFNumberGetTypeID()) {
      return;
    }
    CFNumberGetValue((CFNumberRef)cf, kCFNumberSInt32Type, valuePtr);
  }
  if (a2) {
    *(_DWORD *)a2 = *(_DWORD *)valuePtr;
  }
}

uint64_t sub_2268616C0(const __CFString *a1, BOOL *a2)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  BOOL valuePtr = 0;
  CFTypeID v4 = CFGetTypeID(a1);
  if (v4 == CFNumberGetTypeID())
  {
    if (!CFNumberGetValue((CFNumberRef)a1, kCFNumberSInt64Type, &valuePtr)) {
      return 4294960540;
    }
  }
  else
  {
    CFTypeID v5 = CFGetTypeID(a1);
    if (v5 == CFStringGetTypeID())
    {
      if (!CFStringGetCString(a1, buffer, 64, 0x8000100u)) {
        return 4294960545;
      }
      if (sub_22686FF74(buffer, 0xFFFFFFFFFFFFFFFFLL, "%lli", v6, v7, v8, v9, v10, (int)&valuePtr) != 1) {
        return 4294960540;
      }
    }
    else
    {
      CFTypeID v11 = CFGetTypeID(a1);
      if (v11 != CFBooleanGetTypeID()) {
        return 4294960540;
      }
      BOOL valuePtr = *MEMORY[0x263EFFB40] == (void)a1;
    }
  }
  uint64_t result = 0;
  if (a2) {
    *a2 = valuePtr;
  }
  return result;
}

uint64_t sub_2268617FC(const char *a1, CFMutableDataRef *a2)
{
  uint64_t v3 = fopen(a1, "rb");
  if (v3)
  {
    CFTypeID v4 = v3;
    uint64_t v5 = sub_22686188C(v3, a2);
    fclose(v4);
    return v5;
  }
  else if (*__error())
  {
    uint64_t result = *__error();
    if (!result)
    {
      return sub_22686188C(0, a2);
    }
  }
  else
  {
    return 4294960596;
  }
  return result;
}

uint64_t sub_22686188C(FILE *a1, CFMutableDataRef *a2)
{
  CFMutableDataRef Mutable = CFDataCreateMutable(0, 0);
  if (!Mutable) {
    return 4294960568;
  }
  CFMutableDataRef v5 = Mutable;
  uint64_t v6 = (UInt8 *)malloc_type_malloc(0x20000uLL, 0x26FA432EuLL);
  if (!v6)
  {
    uint64_t v10 = 4294960568;
LABEL_15:
    CFRelease(v5);
    return v10;
  }
  uint64_t v7 = v6;
  size_t v8 = fread(v6, 1uLL, 0x20000uLL, a1);
  if (v8)
  {
    size_t v9 = v8;
    do
    {
      CFDataAppendBytes(v5, v7, v9);
      size_t v9 = fread(v7, 1uLL, 0x20000uLL, a1);
    }
    while (v9);
  }
  if (feof(a1)) {
    goto LABEL_7;
  }
  if (!*__error())
  {
    uint64_t v10 = 4294960596;
    goto LABEL_14;
  }
  uint64_t v10 = *__error();
  if (v10)
  {
LABEL_14:
    free(v7);
    goto LABEL_15;
  }
LABEL_7:
  *a2 = v5;
  free(v7);
  return 0;
}

uint64_t sub_226861988(const __CFString *a1, const char **a2, UInt8 **a3)
{
  CStringPtr = CFStringGetCStringPtr(a1, 0x8000100u);
  if (CStringPtr)
  {
    uint64_t v7 = CStringPtr;
    size_t v8 = 0;
  }
  else
  {
    CFIndex Length = CFStringGetLength(a1);
    CFIndex MaximumSizeForEncoding = CFStringGetMaximumSizeForEncoding(Length, 0x8000100u);
    CFIndex usedBufLen = MaximumSizeForEncoding;
    CFIndex v12 = (UInt8 *)malloc_type_malloc(MaximumSizeForEncoding + 1, 0x6E325C90uLL);
    if (!v12) {
      return 4294960568;
    }
    size_t v8 = v12;
    v14.location = 0;
    v14.CFIndex length = Length;
    if (CFStringGetBytes(a1, v14, 0x8000100u, 0, 0, v12, MaximumSizeForEncoding, &usedBufLen) != Length)
    {
      free(v8);
      return 4294960596;
    }
    v8[usedBufLen] = 0;
    uint64_t v7 = (const char *)v8;
  }
  uint64_t result = 0;
  *a2 = v7;
  *a3 = v8;
  return result;
}

uint64_t sub_226861A84(const __CFString *a1, char **a2)
{
  CStringPtr = CFStringGetCStringPtr(a1, 0x8000100u);
  if (CStringPtr)
  {
    CFMutableDataRef v5 = strdup(CStringPtr);
    if (!v5) {
      return 4294960568;
    }
LABEL_7:
    uint64_t result = 0;
    *a2 = v5;
    return result;
  }
  CFIndex Length = CFStringGetLength(a1);
  CFIndex MaximumSizeForEncoding = CFStringGetMaximumSizeForEncoding(Length, 0x8000100u);
  CFIndex usedBufLen = MaximumSizeForEncoding;
  size_t v8 = (UInt8 *)malloc_type_malloc(MaximumSizeForEncoding + 1, 0x40A999DEuLL);
  if (!v8) {
    return 4294960568;
  }
  CFMutableDataRef v5 = (char *)v8;
  v11.location = 0;
  v11.CFIndex length = Length;
  if (CFStringGetBytes(a1, v11, 0x8000100u, 0, 0, v8, MaximumSizeForEncoding, &usedBufLen) == Length)
  {
    v5[usedBufLen] = 0;
    goto LABEL_7;
  }
  free(v5);
  return 4294960596;
}

CFNumberRef sub_226861B78(uint64_t a1)
{
  uint64_t valuePtr = a1;
  char v6 = 0;
  __int16 v5 = 0;
  int v4 = 0;
  if (a1 == (char)a1)
  {
    char v6 = a1;
    p_uint64_t valuePtr = (uint64_t *)&v6;
    CFNumberType v2 = kCFNumberSInt8Type;
  }
  else
  {
    p_uint64_t valuePtr = &valuePtr;
    CFNumberType v2 = kCFNumberSInt64Type;
  }
  return CFNumberCreate(0, v2, p_valuePtr);
}

const char *sub_226861BFC(const __CFString *cf, char *__dst, size_t __size)
{
  if (!__size) {
    return "";
  }
  if (!cf)
  {
    uint64_t v7 = "";
LABEL_7:
    strlcpy(__dst, v7, __size);
    return __dst;
  }
  CFTypeID v6 = CFGetTypeID(cf);
  if (v6 == CFStringGetTypeID())
  {
    CFStringGetCString(cf, __dst, __size, 0x8000100u);
    return __dst;
  }
  if (v6 == CFNumberGetTypeID())
  {
    if (CFNumberIsFloatType((CFNumberRef)cf))
    {
      uint64_t valuePtr = 0;
      CFNumberGetValue((CFNumberRef)cf, kCFNumberDoubleType, &valuePtr);
      snprintf(__dst, __size, "%f");
    }
    else
    {
      *(void *)&v24[4] = 0;
      CFNumberGetValue((CFNumberRef)cf, kCFNumberSInt64Type, &v24[4]);
      snprintf(__dst, __size, "%lld");
    }
    return __dst;
  }
  if ((const __CFString *)*MEMORY[0x263EFFB40] == cf)
  {
    uint64_t v7 = "true";
    goto LABEL_7;
  }
  if ((const __CFString *)*MEMORY[0x263EFFB38] == cf)
  {
    uint64_t v7 = "false";
    goto LABEL_7;
  }
  if (v6 == CFDataGetTypeID())
  {
    BytePtr = CFDataGetBytePtr((CFDataRef)cf);
    CFIndex Length = CFDataGetLength((CFDataRef)cf);
    uint64_t v10 = __dst;
    if (Length >= 1)
    {
      uint64_t v10 = __dst;
      if ((uint64_t)(__size - 1) >= 2)
      {
        uint64_t v11 = __size - 3;
        CFIndex v12 = BytePtr + 1;
        UInt8 v13 = __dst;
        do
        {
          unint64_t v14 = *(v12 - 1);
          *UInt8 v13 = a0123456789abcd[v14 >> 4];
          char v15 = a0123456789abcd[v14 & 0xF];
          uint64_t v10 = v13 + 2;
          v13[1] = v15;
          if (v12 >= &BytePtr[Length]) {
            break;
          }
          ++v12;
          v13 += 2;
          BOOL v16 = v11 <= 1;
          v11 -= 2;
        }
        while (!v16);
      }
    }
    *uint64_t v10 = 0;
  }
  else if (v6 == CFDateGetTypeID())
  {
    *(void *)int v24 = 0;
    uint64_t v23 = 0;
    uint64_t v22 = 0;
    CFAllocatorRef Default = CFAllocatorGetDefault();
    CFCalendarRef v18 = CFCalendarCreateWithIdentifier(Default, (CFCalendarIdentifier)*MEMORY[0x263EFFC90]);
    if (v18
      && (CFMutableDictionaryRef v19 = v18,
          MEMORY[0x22A659DD0](cf),
          CFCalendarDecomposeAbsoluteTime(v19, v20, "yMdHms", &v24[4], v24, (char *)&v23 + 4, &v23, (char *)&v22 + 4, &v22), modf((double)(int)v22, (long double *)&valuePtr), CFRelease(v19), v23))
    {
      if ((int)v23 > 12) {
        LODWORD(v23) = v23 - 12;
      }
    }
    else
    {
      LODWORD(v23) = 12;
    }
    snprintf(__dst, __size, "%04d-%02d-%02d %02d:%02d:%02d.%06d %s", *(unsigned int *)&v24[4], *(unsigned int *)v24);
  }
  else if (v6 == CFDictionaryGetTypeID())
  {
    snprintf(__dst, __size, "{}");
  }
  else if (v6 == CFArrayGetTypeID())
  {
    snprintf(__dst, __size, "[]");
  }
  else
  {
    snprintf(__dst, __size, "");
  }
  return __dst;
}

uint64_t sub_226861F2C(void *cf, uint64_t a2, const void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v11 = -1;
  CFIndex v12 = (const CFDictionaryKeyCallBacks *)MEMORY[0x263EFFF88];
  UInt8 v13 = (const CFDictionaryValueCallBacks *)MEMORY[0x263EFFF90];
  while (1)
  {
    for (CFIndex i = 0; *(unsigned char *)(a2 + i) && *(unsigned char *)(a2 + i) != 46; ++i)
      ;
    if (!*(unsigned char *)(a2 + i)) {
      break;
    }
    uint64_t v15 = a2 + i + 1;
    if (*(unsigned char *)a2 == 91)
    {
      LODWORD(idx) = 0;
      if (sub_22686FF74((char *)(a2 + 1), i - 1, "%i]", a4, a5, a6, a7, a8, (int)&idx) != 1) {
        return 4294960579;
      }
      CFTypeID v16 = CFGetTypeID(cf);
      if (v16 != CFArrayGetTypeID()) {
        return 4294960540;
      }
      CFIndex v17 = idx;
      if ((idx & 0x80000000) != 0 || CFArrayGetCount((CFArrayRef)cf) <= v17) {
        return 4294960586;
      }
      CFTypeRef cf = (void *)CFArrayGetValueAtIndex((CFArrayRef)cf, (int)idx);
      unsigned int v11 = idx;
      a2 = v15;
    }
    else
    {
      CFTypeID v18 = CFGetTypeID(cf);
      if (v18 != CFDictionaryGetTypeID()) {
        return 4294960540;
      }
      CFStringRef v19 = CFStringCreateWithBytes(0, (const UInt8 *)a2, i, 0x8000100u, 0);
      if (!v19) {
        return 4294960596;
      }
      CFStringRef v20 = v19;
      CFDataRef Value = CFDictionaryGetValue((CFDictionaryRef)cf, v19);
      if (!Value)
      {
        CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, v12, v13);
        if (!Mutable)
        {
          CFRelease(v20);
          return 4294960568;
        }
        CFDataRef Value = Mutable;
        CFDictionarySetValue((CFMutableDictionaryRef)cf, v20, Mutable);
        CFRelease(Value);
      }
      CFRelease(v20);
      unsigned int v11 = -1;
      a2 = v15;
      CFTypeRef cf = (void *)Value;
    }
  }
  CFTypeID v23 = CFGetTypeID(cf);
  if (v23 == CFDictionaryGetTypeID())
  {
    if (i)
    {
      CFStringRef v24 = CFStringCreateWithBytes(0, (const UInt8 *)a2, i, 0x8000100u, 0);
      if (!v24) {
        return 4294960596;
      }
      CFStringRef v25 = v24;
      if (a3) {
        CFDictionarySetValue((CFMutableDictionaryRef)cf, v24, a3);
      }
      else {
        CFDictionaryRemoveValue((CFMutableDictionaryRef)cf, v24);
      }
      CFRelease(v25);
      return 0;
    }
    return 4294960579;
  }
  CFTypeID v27 = CFGetTypeID(cf);
  if (v27 == CFArrayGetTypeID())
  {
    if (!i)
    {
      if (a3)
      {
        CFArrayAppendValue((CFMutableArrayRef)cf, a3);
      }
      else
      {
        if ((v11 & 0x80000000) != 0) {
          return 4294960579;
        }
        CFArrayRemoveValueAtIndex((CFMutableArrayRef)cf, v11);
      }
      return 0;
    }
    return 4294960579;
  }
  return 4294960540;
}

void sub_2268621B0(void *key, void *value, uint64_t a3)
{
  if (!*(_DWORD *)(a3 + 8))
  {
    CFDictionarySetValue(*(CFMutableDictionaryRef *)a3, key, value);
    *(_DWORD *)(a3 + 8) = 0;
  }
}

char *sub_2268621EC(const __CFDictionary *a1, const void *a2, char *a3, size_t a4, int *a5)
{
  CFStringRef Value = (const __CFString *)CFDictionaryGetValue(a1, a2);
  if (!Value)
  {
    int v9 = -6727;
    if (!a5) {
      return a3;
    }
    goto LABEL_3;
  }
  a3 = (char *)sub_226861BFC(Value, a3, a4);
  int v9 = 0;
  if (a5) {
LABEL_3:
  }
    *a5 = v9;
  return a3;
}

uint64_t sub_226862250(__CFDictionary *a1, const void *a2, char *cStr, CFIndex numBytes)
{
  if (numBytes == -1) {
    CFStringRef v6 = CFStringCreateWithCString(0, cStr, 0x8000100u);
  }
  else {
    CFStringRef v6 = CFStringCreateWithBytes(0, (const UInt8 *)cStr, numBytes, 0x8000100u, 0);
  }
  CFStringRef v7 = v6;
  if (!v6) {
    return 4294960596;
  }
  CFDictionarySetValue(a1, a2, v6);
  CFRelease(v7);
  return 0;
}

uint64_t sub_2268622E4(__CFDictionary *a1, const void *a2, UInt8 *bytes, CFIndex length)
{
  CFDataRef v6 = CFDataCreate(0, bytes, length);
  if (!v6) {
    return 4294960596;
  }
  CFDataRef v7 = v6;
  CFDictionarySetValue(a1, a2, v6);
  CFRelease(v7);
  return 0;
}

uint64_t sub_22686234C(__CFDictionary *a1, const void *a2, uint64_t a3)
{
  CFNumberRef v5 = sub_226861B78(a3);
  if (!v5) {
    return 4294960568;
  }
  CFNumberRef v6 = v5;
  CFDictionarySetValue(a1, a2, v5);
  CFRelease(v6);
  return 0;
}

uint64_t sub_2268623AC(const void *a1, const void ***a2)
{
  CFTypeID v4 = CFGetTypeID(a1);
  if (v4 != CFDictionaryGetTypeID()) {
    return 4294960540;
  }
  CFIndex Count = CFDictionaryGetCount((CFDictionaryRef)a1);
  CFNumberRef v6 = (const void **)malloc_type_malloc(16 * Count + 16, 0x3FA85CF1uLL);
  if (!v6) {
    return 4294960568;
  }
  CFDataRef v7 = v6;
  *CFNumberRef v6 = 0;
  v6[1] = (const void *)Count;
  CFDictionaryGetKeysAndValues((CFDictionaryRef)a1, v6 + 2, &v6[Count + 2]);
  uint64_t result = 0;
  *a2 = v7;
  return result;
}

void sub_226862440(void *a1)
{
  if (a1) {
    free(a1);
  }
}

uint64_t sub_22686244C(uint64_t *a1, void *a2, void *a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1 >= v4) {
    return 0;
  }
  if (a2) {
    *a2 = a1[v3 + 2];
  }
  if (a3) {
    *a3 = a1[v4 + 2 + v3];
  }
  *a1 = v3 + 1;
  return 1;
}

uint64_t sub_226862494(const Bytef *a1, uLong a2, void *a3, uLongf *a4)
{
  uLong v8 = a2 + a2 / 0xA;
  uLongf destLen = v8 + 12;
  int v9 = (Bytef *)malloc_type_malloc(v8 + 20, 0x92DA1CD0uLL);
  if (!v9) {
    return 4294960568;
  }
  uint64_t v10 = v9;
  *(_DWORD *)int v9 = 2053924451;
  v9[4] = BYTE3(a2);
  v9[5] = BYTE2(a2);
  v9[6] = BYTE1(a2);
  v9[7] = a2;
  uint64_t v11 = compress2(v9 + 8, &destLen, a1, a2, 9);
  if (v11)
  {
    uint64_t v12 = v11;
LABEL_13:
    free(v10);
    return v12;
  }
  size_t v14 = destLen + 8;
  destLen += 8;
  if (a3)
  {
    uint64_t v15 = malloc_type_realloc(v10, v14, 0x2DBB6E1AuLL);
    if (!v15)
    {
      uint64_t v12 = 4294960553;
      goto LABEL_13;
    }
    uint64_t v10 = 0;
    *a3 = v15;
  }
  if (a4) {
    *a4 = destLen;
  }
  uint64_t v12 = 0;
  uint64_t result = 0;
  if (v10) {
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_2268625B4(uint64_t a1, unint64_t a2, void *a3, uLongf *a4)
{
  uLong v4 = a2 - 8;
  if (a2 < 8) {
    return 4294960554;
  }
  if (*(unsigned char *)a1 != 99 && *(unsigned char *)(a1 + 1) != 102 && *(unsigned char *)(a1 + 2) != 108 && *(unsigned char *)(a1 + 3) != 122) {
    return 4294960548;
  }
  unint64_t v8 = (*(unsigned __int8 *)(a1 + 4) << 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 5) << 16) | ((unint64_t)*(unsigned __int8 *)(a1 + 6) << 8);
  uint64_t v9 = *(unsigned __int8 *)(a1 + 7);
  uLongf destLen = v8 | v9;
  if (v8 | v9)
  {
    uint64_t v10 = (Bytef *)malloc_type_malloc(v8 | v9, 0xABB20DADuLL);
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = uncompress(v10, &destLen, (const Bytef *)(a1 + 8), v4);
      if (v12)
      {
LABEL_17:
        free(v11);
        return v12;
      }
      goto LABEL_12;
    }
    return 4294960568;
  }
  uint64_t v11 = malloc_type_malloc(1uLL, 0x511897C6uLL);
  if (!v11) {
    return 4294960568;
  }
LABEL_12:
  if (a3)
  {
    *a3 = v11;
    uint64_t v11 = 0;
  }
  if (a4) {
    *a4 = destLen;
  }
  uint64_t v12 = 0;
  uint64_t result = 0;
  if (v11) {
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_2268626E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  *(void *)(result + 16) = a4;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a3;
  *(unsigned char *)(result + 48) = 0;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

void sub_226862700(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    CFNumberType v2 = *(void **)(a1 + 24);
    if (v2) {
      free(v2);
    }
  }
  uint64_t v3 = *(void *)(a1 + 8);
  *(void *)(a1 + 24) = *(void *)a1;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 52) = 0;
}

uint64_t sub_226862748(uint64_t a1, char *__s, size_t a3)
{
  size_t v3 = a3;
  if (a3 == -1) {
    size_t v3 = strlen(__s);
  }
  __dst = 0;
  uint64_t v6 = sub_2268627D8(a1, *(void *)(a1 + 32) + v3, (unint64_t *)&__dst);
  uint64_t v7 = v6;
  if (v6)
  {
    if (!*(_DWORD *)(a1 + 52)) {
      *(_DWORD *)(a1 + 52) = v6;
    }
  }
  else
  {
    memcpy(__dst, __s, v3);
  }
  return v7;
}

uint64_t sub_2268627D8(uint64_t a1, unint64_t a2, unint64_t *a3)
{
  uint64_t result = *(unsigned int *)(a1 + 52);
  if (!result)
  {
    unint64_t v7 = *(void *)(a1 + 32);
    if (v7 >= a2)
    {
      *(void *)(a1 + 32) = a2;
      if (a3)
      {
        uint64_t result = 0;
        unint64_t v8 = *(void *)(a1 + 24);
LABEL_26:
        *a3 = v8;
        return result;
      }
      return 0;
    }
    if (*(void *)(a1 + 40) >= a2)
    {
LABEL_24:
      *(void *)(a1 + 32) = a2;
      if (a3)
      {
        uint64_t result = 0;
        unint64_t v8 = *(void *)(a1 + 24) + v7;
        goto LABEL_26;
      }
      return 0;
    }
    if (*(void *)(a1 + 16) < a2)
    {
      uint64_t result = 4294960545;
LABEL_6:
      *(_DWORD *)(a1 + 52) = result;
      return result;
    }
    uint64_t v9 = 4096;
    if (a2 >> 17) {
      unint64_t v10 = (a2 + 0x1FFFF) & 0xFFFFFFFFFFFE0000;
    }
    else {
      unint64_t v10 = (a2 + 0x3FFF) & 0xFFFFFFFFFFFFC000;
    }
    if (a2 >= 0x1000) {
      uint64_t v9 = v10;
    }
    if (a2 >= 0x100) {
      size_t v11 = v9;
    }
    else {
      size_t v11 = 256;
    }
    uint64_t v12 = malloc_type_malloc(v11, 0x7C709581uLL);
    if (v12)
    {
      UInt8 v13 = v12;
      size_t v14 = *(void *)(a1 + 32);
      if (v14) {
        memcpy(v12, *(const void **)(a1 + 24), v14);
      }
      if (*(unsigned char *)(a1 + 48))
      {
        uint64_t v15 = *(void **)(a1 + 24);
        if (v15) {
          free(v15);
        }
      }
      *(void *)(a1 + 40) = v11;
      *(void *)(a1 + 24) = v13;
      *(unsigned char *)(a1 + 48) = 1;
      goto LABEL_24;
    }
    uint64_t result = 4294960568;
    if (!*(_DWORD *)(a1 + 52)) {
      goto LABEL_6;
    }
  }
  return result;
}

char *sub_226862918(uint64_t __errnum, char *a2, uint64_t a3)
{
  if (__errnum)
  {
    uint64_t v6 = &off_2647B86A0;
    while (1)
    {
      unint64_t v7 = *v6;
      if (!*v6) {
        break;
      }
      int v8 = *((_DWORD *)v6 - 2);
      v6 += 2;
      if (v8 == __errnum) {
        goto LABEL_16;
      }
    }
    if ((byte_268148268 & 1) == 0)
    {
      uint64_t v9 = dlopen("/System/Library/Frameworks/CoreServices.framework/CoreServices", 5);
      if (v9) {
        off_268148270 = dlsym(v9, "GetMacOSStatusErrorString");
      }
      byte_268148268 = 1;
    }
    if (!off_268148270 || (unint64_t v7 = (char *)((uint64_t (*)(uint64_t))off_268148270)(__errnum)) == 0 || !*v7)
    {
      unint64_t v7 = strerror(__errnum);
      if (!v7) {
        unint64_t v7 = "<< NO ERROR STRING >>";
      }
    }
  }
  else
  {
    unint64_t v7 = "noErr";
  }
LABEL_16:
  if (!a2 || !a3) {
    return v7;
  }
  uint64_t v10 = a3 - 1;
  size_t v11 = a2;
  if (a3 - 1 >= 1)
  {
    size_t v11 = a2;
    do
    {
      char v12 = *v7;
      if (!*v7) {
        break;
      }
      ++v7;
      *v11++ = v12;
      --v10;
    }
    while (v10 > 0);
  }
  *size_t v11 = 0;
  return a2;
}

uint64_t sub_226862A3C(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  return sub_226862A68(a1, a2, a3, (uint64_t)va, a5, a6, a7, a8);
}

uint64_t sub_226862A68(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  size_t v11 = (uint64_t (*)(const char *, uint64_t, void))sub_226862ACC;
  uint64_t v12 = a1;
  uint64_t v9 = a2 - 1;
  if (!a2) {
    uint64_t v9 = 0;
  }
  uint64_t v13 = 0;
  uint64_t v14 = v9;
  uint64_t result = sub_226862B54(&v11, a3, a4, a4, a5, a6, a7, a8);
  if (a2) {
    *(unsigned char *)(v12 + v13) = 0;
  }
  return result;
}

size_t sub_226862ACC(unsigned char *__src, size_t __n, void *a3)
{
  size_t v4 = __n;
  uint64_t v5 = a3[2];
  size_t v6 = a3[3] - v5;
  if (v6 >= __n)
  {
    if (!__n) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (v6)
  {
    while ((__src[v6] & 0xC0) == 0x80)
    {
      if (!--v6) {
        goto LABEL_5;
      }
    }
    size_t v4 = v6;
LABEL_9:
    memcpy((void *)(a3[1] + v5), __src, v4);
    uint64_t v5 = a3[2];
    goto LABEL_10;
  }
LABEL_5:
  size_t v4 = 0;
LABEL_10:
  a3[2] = v5 + v4;
  return v4;
}

uint64_t sub_226862B54(uint64_t (**a1)(const char *, uint64_t, void), const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = a1;
  uint64_t v10 = 0;
  uint64_t v287 = *MEMORY[0x263EF8340];
  v278 = (unsigned int *)a3;
  long long v276 = 0u;
  long long v277 = 0u;
  v271 = (__CFString *)*MEMORY[0x263EFFB40];
LABEL_2:
  uint64_t v11 = 0;
  for (uint64_t i = 0; ; ++i)
  {
    int v13 = a2[i];
    if (!a2[i] || v13 == 37) {
      break;
    }
    v11 += 0x100000000;
  }
  if (i)
  {
    uint64_t v14 = v11 >> 32;
    uint64_t v15 = (*v9)(a2, v11 >> 32, v9);
    if ((v15 & 0x80000000) != 0) {
      return v15;
    }
    v10 += v14;
  }
  if (!v13) {
    return v10;
  }
  int v16 = 0;
  char v17 = 0;
  char v18 = 0;
  int v19 = 0;
  long long v276 = 0u;
  long long v277 = 0u;
  CFStringRef v20 = (char *)&a2[i];
  uint64_t v273 = v10;
  while (2)
  {
    CFStringRef v21 = v20 + 2;
LABEL_12:
    LOBYTE(v22) = *(v21 - 1);
    switch((char)v22)
    {
      case ' ':
        int v16 = 32;
        BYTE4(v276) = 32;
        CFStringRef v20 = v21 - 1;
        continue;
      case '#':
        BYTE3(v276) = ++v17;
        CFStringRef v20 = v21 - 1;
        continue;
      case '\'':
        BYTE8(v277) = ++v18;
        CFStringRef v20 = v21 - 1;
        continue;
      case '*':
        CFTypeID v23 = v278;
        v278 += 2;
        unsigned int v24 = *v23;
        if ((*v23 & 0x80000000) != 0)
        {
          unsigned int v24 = -v24;
          LOBYTE(v19) = v19 | 1;
          LOBYTE(v276) = v19;
        }
        DWORD2(v276) = v24;
        LODWORD(v22) = *v21;
        goto LABEL_28;
      case '+':
        v19 |= 2u;
        goto LABEL_16;
      case '-':
        v19 |= 1u;
        goto LABEL_16;
      case '0':
        v19 |= 4u;
LABEL_16:
        LOBYTE(v276) = v19;
        ++v21;
        goto LABEL_12;
      default:
        LODWORD(v22) = (char)v22;
        --v21;
        if (((char)v22 - 48) > 9)
        {
          unsigned int v24 = 0;
        }
        else
        {
          unsigned int v24 = 0;
          do
          {
            unsigned int v24 = v22 + 10 * v24 - 48;
            DWORD2(v276) = v24;
            int v25 = *++v21;
            LODWORD(v22) = v25;
          }
          while ((v25 - 48) < 0xA);
        }
LABEL_28:
        if (v22 != 46)
        {
          unint64_t v27 = 0;
          if ((v19 & 1) == 0) {
            goto LABEL_40;
          }
LABEL_39:
          LOBYTE(v19) = v19 & 0xFB;
          LOBYTE(v276) = v19;
          goto LABEL_40;
        }
        int v26 = v21 + 1;
        LODWORD(v22) = v21[1];
        if (v22 == 42)
        {
          uint64_t v22 = v278;
          v278 += 2;
          unint64_t v27 = *v22;
          *(void *)&long long v277 = v27;
          LODWORD(v22) = v21[2];
          int v26 = v21 + 2;
        }
        else if ((v22 - 48) > 9)
        {
          unint64_t v27 = 0;
        }
        else
        {
          unint64_t v27 = 0;
          do
          {
            unint64_t v27 = (v22 - 48) + 10 * v27;
            *(void *)&long long v277 = v27;
            int v28 = *++v26;
            LODWORD(v22) = v28;
          }
          while ((v28 - 48) < 0xA);
        }
        LOBYTE(v19) = v19 | 8;
        LOBYTE(v276) = v19;
        CFStringRef v21 = v26;
        if (v19) {
          goto LABEL_39;
        }
LABEL_40:
        unsigned __int8 v29 = 0;
        char v30 = 0;
        CFIndex v31 = (unsigned __int8 *)(v21 + 1);
        break;
    }
    break;
  }
  while (2)
  {
    HIDWORD(v32) = v22;
    LODWORD(v32) = v22 - 104;
    switch((v32 >> 1))
    {
      case 0u:
        BYTE1(v276) = ++v29;
        goto LABEL_44;
      case 1u:
      case 6u:
      case 9u:
        if (v29 | v30) {
          return 0xFFFFFFFFLL;
        }
        unsigned __int8 v29 = 0;
        char v30 = 1;
        BYTE2(v276) = 1;
        LODWORD(v22) = (char)*v31;
        goto LABEL_47;
      case 2u:
        BYTE2(v276) = ++v30;
LABEL_44:
        int v33 = (char)*v31++;
        LODWORD(v22) = v33;
        continue;
      default:
        uint64_t v39 = 0xFFFFFFFFLL;
        if ((char)v29 > 2 || v30 > 2) {
          return v39;
        }
        --v31;
        if (v29 && v30) {
          return 0xFFFFFFFFLL;
        }
LABEL_47:
        if ((int)v22 <= 71)
        {
          if (v22 == 37)
          {
            char __str = 37;
LABEL_261:
            LODWORD(v39) = 1;
LABEL_262:
            p_str = &__str;
            goto LABEL_263;
          }
          if (v22 != 64)
          {
            if (v22 == 67)
            {
              uint64_t v40 = v278;
              v278 += 2;
              unsigned int v41 = *v40;
              if (v18)
              {
                char __str = 39;
                unsigned int v42 = 1;
              }
              else
              {
                unsigned int v42 = 0;
              }
              uint64_t v9 = a1;
              unsigned int v145 = HIBYTE(v41);
              p_str = &__str;
              v146 = &v281[v42 - 1];
              if (HIBYTE(v41) - 127 < 0xFFFFFFA1) {
                LOBYTE(v145) = 94;
              }
              unsigned char *v146 = v145;
              char v147 = BYTE2(v41);
              if (BYTE2(v41) - 127 < 0xFFFFFFA1) {
                char v147 = 94;
              }
              v146[1] = v147;
              char v148 = BYTE1(v41);
              if (BYTE1(v41) - 127 < 0xFFFFFFA1) {
                char v148 = 94;
              }
              v146[2] = v148;
              BOOL v149 = v41 << 24 == 2130706432 || (int)(v41 << 24) < 520093697;
              if (v149) {
                LOBYTE(v41) = 94;
              }
              v146[3] = v41;
              if (v18)
              {
                LODWORD(v39) = v42 + 5;
                v281[(v42 | 4) - 1] = 39;
              }
              else
              {
                LODWORD(v39) = v42 | 4;
              }
              goto LABEL_439;
            }
LABEL_169:
            p_str = &__str;
            int v59 = sub_226862A3C(&__str, 300, "<<UNKNOWN FORMAT CONVERSION CODE %%%c>>");
LABEL_170:
            LODWORD(v39) = v59;
LABEL_263:
            uint64_t v9 = a1;
            goto LABEL_439;
          }
          CFTypeRef v102 = (__CFString **)v278;
          v278 += 2;
          v103 = *v102;
          if (v103) {
            v104 = v103;
          }
          else {
            v104 = @"<<NULL>>";
          }
          if (v18)
          {
            if ((v19 & 8) != 0)
            {
              if (v27 < 2)
              {
                *(void *)&long long v277 = 0;
                BYTE8(v277) = 0;
                goto LABEL_350;
              }
              *(void *)&long long v277 = v27 - 2;
            }
            if (v18 == 2)
            {
              __int16 v105 = 8738;
            }
            else
            {
              if (v18 != 1) {
                goto LABEL_350;
              }
              __int16 v105 = 10023;
            }
            *(_WORD *)((char *)&v277 + 9) = v105;
          }
LABEL_350:
          CFTypeID v154 = CFGetTypeID(v104);
          uint64_t v155 = v273;
          if (v154 == CFBooleanGetTypeID())
          {
            if (v271 == v104) {
              v156 = "true";
            }
            else {
              v156 = "false";
            }
            if (v271 == v104) {
              uint64_t v157 = 4;
            }
            else {
              uint64_t v157 = 5;
            }
            uint64_t v9 = a1;
          }
          else
          {
            uint64_t v9 = a1;
            if (v154 != CFNumberGetTypeID())
            {
              if (v154 != CFStringGetTypeID())
              {
                int v285 = 0;
                uint64_t v286 = 0;
                *(void *)uint64_t valuePtr = a1;
                v283 = &v276;
                int v284 = DWORD2(v276);
                uint64_t v39 = sub_22686674C((uint64_t (***)(const char *, ...))valuePtr, v104, 1, 0);
                if ((v39 & 0x80000000) == 0 && (v154 == CFArrayGetTypeID() || v154 == CFDictionaryGetTypeID()))
                {
                  int v188 = (*a1)("\n", 1, a1);
                  if (v188 <= 0) {
                    int v189 = 0;
                  }
                  else {
                    int v189 = v39;
                  }
                  uint64_t v39 = (v189 + v188);
                  if ((v39 & 0x80000000) != 0) {
                    return v39;
                  }
                  goto LABEL_364;
                }
                goto LABEL_363;
              }
              CFIndex Length = CFStringGetLength(v104);
              size_t MaximumSizeForEncoding = CFStringGetMaximumSizeForEncoding(Length, 0x8000100u);
              if (MaximumSizeForEncoding)
              {
                CFIndex v161 = MaximumSizeForEncoding;
                *(void *)uint64_t valuePtr = 0;
                v162 = (UInt8 *)malloc_type_malloc(MaximumSizeForEncoding, 0xDF19D30FuLL);
                if (v162)
                {
                  v163 = (char *)v162;
                  *(void *)uint64_t valuePtr = 0;
                  v288.location = 0;
                  v288.CFIndex length = Length;
                  CFStringGetBytes(v104, v288, 0x8000100u, 0x5Eu, 0, v162, v161, (CFIndex *)valuePtr);
                  uint64_t v164 = *(void *)valuePtr;
                  if ((v276 & 8) != 0 && *(uint64_t *)valuePtr > (uint64_t)v277)
                  {
                    uint64_t v165 = (int)v277;
                    *(void *)uint64_t valuePtr = (int)v277;
                    uint64_t v164 = (int)v277;
                    if ((uint64_t)((void)v277 << 32) >= 1)
                    {
                      while ((v163[v165] & 0xC0) == 0x80)
                      {
                        uint64_t v164 = v165 - 1;
                        *(void *)uint64_t valuePtr = v165 - 1;
                        BOOL v149 = v165-- < 2;
                        if (v149) {
                          goto LABEL_677;
                        }
                      }
                      uint64_t v164 = v165;
                    }
                  }
LABEL_677:
                  uint64_t v39 = sub_2268665D4(a1, (uint64_t)&v276, v163, v164);
                  free(v163);
                }
                else
                {
                  uint64_t v39 = 4294960568;
                }
                uint64_t v155 = v273;
                uint64_t v9 = a1;
                if ((v39 & 0x80000000) != 0) {
                  return v39;
                }
LABEL_364:
                uint64_t v10 = v155 + (v39 & ~((int)v39 >> 31));
                goto LABEL_443;
              }
              v158 = a1;
              v156 = "";
              uint64_t v157 = 0;
LABEL_362:
              uint64_t v39 = sub_2268665D4(v158, (uint64_t)&v276, v156, v157);
LABEL_363:
              if ((v39 & 0x80000000) != 0) {
                return v39;
              }
              goto LABEL_364;
            }
            *(void *)uint64_t valuePtr = 0;
            if (!CFNumberGetValue((CFNumberRef)v104, kCFNumberSInt64Type, valuePtr)) {
              return 4294960559;
            }
            uint64_t v157 = (int)sub_226862A3C(&__str, 300, "%lld", *(void *)valuePtr);
            v156 = &__str;
          }
          v158 = v9;
          goto LABEL_362;
        }
        int v34 = 0;
        unsigned int v35 = 10;
        CFStringRef v36 = "0123456789ABCDEF";
        switch((int)v22)
        {
          case 'H':
            size_t v43 = v278;
            v278 += 2;
            uint64_t v44 = *(const char **)v43;
            v278 = v43 + 4;
            unsigned int v45 = v43[2];
            size_t v46 = (int)v45;
            v278 = v43 + 6;
            unint64_t v47 = (int)v43[4];
            if (v44) {
              BOOL v48 = 1;
            }
            else {
              BOOL v48 = v45 == 0;
            }
            if (!v48)
            {
              uint64_t v9 = a1;
              uint64_t v118 = sub_2268665A8((uint64_t)a1, (uint64_t)"<<NULL %zu/%zu>>", a3, a4, a5, a6, a7, a8, (int)v45);
              goto LABEL_440;
            }
            if (v45 == -1) {
              size_t v46 = strlen(v44);
            }
            switch(v27)
            {
              case 0uLL:
                if (v46 >= v47) {
                  size_t v46 = v47;
                }
                uint64_t v9 = a1;
                if (!v46) {
                  goto LABEL_493;
                }
                uint64_t v49 = v273;
                if (v17 == 2)
                {
                  LODWORD(v39) = 0;
LABEL_75:
                  uint64_t v50 = (*a1)("|", 1, a1);
                  goto LABEL_76;
                }
                uint64_t v246 = 0;
                LODWORD(v39) = 0;
                do
                {
                  if (v246)
                  {
                    valuePtr[0] = 32;
                    uint64_t v247 = 1;
                  }
                  else
                  {
                    uint64_t v247 = 0;
                  }
                  unint64_t v248 = v44[v246];
                  v249 = &valuePtr[v247];
                  char *v249 = a0123456789abcd[v248 >> 4];
                  v249[1] = a0123456789abcd[v248 & 0xF];
                  uint64_t v50 = (*a1)(valuePtr, v247 | 2, a1);
                  if ((v50 & 0x80000000) != 0) {
                    goto LABEL_614;
                  }
                  uint64_t v39 = (v50 + v39);
                  ++v246;
                }
                while (v46 != v246);
                if (SBYTE3(v276) < 1) {
                  goto LABEL_672;
                }
                if ((int)v39 < 1) {
                  goto LABEL_75;
                }
                uint64_t v50 = (*a1)(" |", 2, a1);
LABEL_76:
                if ((v50 & 0x80000000) != 0) {
                  goto LABEL_614;
                }
                int v51 = v50 + v39;
                if (v46 <= 1) {
                  size_t v46 = 1;
                }
                while (1)
                {
                  int v53 = *(unsigned __int8 *)v44++;
                  char v52 = v53;
                  if ((v53 - 127) < 0xFFFFFFA1) {
                    char v52 = 94;
                  }
                  LOBYTE(v275.tv_sec) = v52;
                  uint64_t v54 = (*a1)((const char *)&v275, 1, a1);
                  uint64_t v39 = v54;
                  if ((v54 & 0x80000000) != 0) {
                    goto LABEL_672;
                  }
                  v51 += v54;
                  if (!--v46)
                  {
                    int v55 = (*a1)("|", 1, a1);
                    if (v55 >= 0) {
                      int v56 = v51;
                    }
                    else {
                      int v56 = 0;
                    }
                    goto LABEL_476;
                  }
                }
              case 1uLL:
                uint64_t v9 = a1;
                uint64_t v192 = sub_226866128((uint64_t)a1, v24, (uint64_t)v44, v46, v47, a6, a7, a8);
                goto LABEL_619;
              case 2uLL:
                uint64_t v9 = a1;
                if (v46)
                {
                  uint64_t v49 = v273;
                  uint64_t v193 = (uint64_t)a1;
                  if (v46 > 0x10)
                  {
                    uint64_t v15 = sub_2268665A8((uint64_t)a1, (uint64_t)"\n", a3, a4, a5, a6, a7, a8, usedBufLen);
                    if ((v15 & 0x80000000) != 0) {
                      return v15;
                    }
                    int v194 = DWORD2(v276);
                    uint64_t v193 = (uint64_t)a1;
                  }
                  else
                  {
                    int v194 = 0;
                  }
                  uint64_t v50 = sub_226866128(v193, v194, (uint64_t)v44, v46, v47, a6, a7, a8);
LABEL_614:
                  uint64_t v39 = v50;
LABEL_672:
                  if ((v39 & 0x80000000) != 0) {
                    return v39;
                  }
LABEL_442:
                  uint64_t v10 = v49 + v39;
                  goto LABEL_443;
                }
                uint64_t v190 = (uint64_t)a1;
                v191 = "(0 bytes)\n";
                break;
              case 3uLL:
                if (v46 >= v47) {
                  uint64_t v195 = v47;
                }
                else {
                  uint64_t v195 = v46;
                }
                uint64_t v9 = a1;
                if (v195 < 1)
                {
LABEL_493:
                  uint64_t v39 = 0;
                  goto LABEL_671;
                }
                uint64_t v196 = 0;
                uint64_t v39 = 0;
                v197 = &v44[v195];
                uint64_t v49 = v273;
                do
                {
                  if (v196 == 64)
                  {
                    uint64_t v50 = (*a1)(valuePtr, 64, a1);
                    if ((v50 & 0x80000000) != 0) {
                      goto LABEL_614;
                    }
                    uint64_t v196 = 0;
                    uint64_t v39 = (v50 + v39);
                  }
                  v198 = &valuePtr[v196];
                  unsigned int v199 = *(unsigned __int8 *)v44++;
                  char *v198 = a0123456789abcd[(unint64_t)v199 >> 4];
                  v196 += 2;
                  v198[1] = a0123456789abcd[v199 & 0xF];
                }
                while (v44 < v197);
                if (v196)
                {
                  int v55 = (*a1)(valuePtr, v196, a1);
                  if (v55 >= 0) {
                    int v56 = v39;
                  }
                  else {
                    int v56 = 0;
                  }
LABEL_476:
                  uint64_t v39 = (v56 + v55);
                }
                goto LABEL_672;
              default:
                uint64_t v9 = a1;
                uint64_t v190 = (uint64_t)a1;
                v191 = "<< BAD %%H PRECISION >>";
                goto LABEL_618;
            }
            goto LABEL_618;
          case 'N':
            v275.time_t tv_sec = 0;
            *(void *)&v275.tv_usec = 0;
            time_t tv_sec = 0;
            gettimeofday(&v275, 0);
            time_t tv_sec = v275.tv_sec;
            __int16 v57 = localtime(&tv_sec);
            strftime(valuePtr, 0x18uLL, "%Y-%m-%d %I:%M:%S", v57);
            strftime(v279, 8uLL, "%p", v57);
            p_str = &__str;
            int v59 = sub_226862A3C(&__str, 300, "%s.%06u %s");
            goto LABEL_170;
          case 'S':
            CFTypeID v60 = v278;
            v278 += 2;
            CFTypeID v61 = *(unsigned __int8 **)v60;
            int v62 = v19 & 8;
            if (!v61)
            {
              LODWORD(v39) = 8;
              if ((v19 & 8) == 0 || v27) {
                goto LABEL_172;
              }
            }
            if (v18)
            {
              if ((v19 & 8) == 0)
              {
                BOOL v63 = 1;
                goto LABEL_391;
              }
              BOOL v84 = v27 >= 2;
              v27 -= 2;
              if (v84)
              {
                *(void *)&long long v277 = v27;
              }
              else
              {
                char v18 = 0;
                unint64_t v27 = 0;
                *(void *)&long long v277 = 0;
                BYTE8(v277) = 0;
              }
              int v62 = 1;
            }
            else
            {
              char v18 = 0;
            }
            BOOL v63 = v62 == 0;
            if (v62 && !v27)
            {
              BOOL v63 = 0;
              goto LABEL_398;
            }
LABEL_391:
            int v174 = *v61;
            if (v174 == 255)
            {
              if (v61[1] == 254)
              {
                char v17 = 2;
                goto LABEL_397;
              }
            }
            else if (v174 == 254 && v61[1] == 255)
            {
              char v17 = 1;
LABEL_397:
              BYTE3(v276) = v17;
              --v27;
              v61 += 2;
              *(void *)&long long v277 = v27;
              goto LABEL_399;
            }
LABEL_398:
            if ((v17 - 1) >= 2)
            {
              if (v17)
              {
                LODWORD(v39) = sub_226862A3C(&__str, 300, "<< ERROR: %%S with too many #'s (%d) >>", v17);
                char v18 = BYTE8(v277);
                goto LABEL_432;
              }
              int v181 = (int)v27 > 0 || v63;
              if (v181 == 1)
              {
                uint64_t v39 = 0;
                uint64_t v182 = (int)v27;
                uint64_t v183 = 300;
                uint64_t v9 = a1;
                do
                {
                  int v184 = *(unsigned __int16 *)&v61[2 * v39];
                  if (*(_WORD *)&v61[2 * v39]) {
                    BOOL v185 = v183 < 1;
                  }
                  else {
                    BOOL v185 = 1;
                  }
                  if (v185) {
                    break;
                  }
                  if ((v184 - 32) >= 0x5F) {
                    LOBYTE(v184) = 94;
                  }
                  v281[v39++ - 1] = v184;
                  BOOL v186 = v39 < v182 || v63;
                  --v183;
                }
                while (v186);
LABEL_433:
                if (v18 == 1)
                {
                  __int16 v187 = 10023;
                }
                else
                {
                  if (v18 != 2)
                  {
LABEL_438:
                    p_str = &__str;
                    goto LABEL_439;
                  }
                  __int16 v187 = 8738;
                }
                *(_WORD *)((char *)&v277 + 9) = v187;
                goto LABEL_438;
              }
LABEL_430:
              LODWORD(v39) = 0;
LABEL_432:
              uint64_t v9 = a1;
              goto LABEL_433;
            }
LABEL_399:
            if (v63 || (int)v27 >= 1)
            {
              uint64_t v39 = 0;
              uint64_t v175 = (int)v27;
              uint64_t v176 = 300;
              uint64_t v177 = 2 - v17;
              uint64_t v9 = a1;
              do
              {
                if (*(_WORD *)&v61[2 * v39]) {
                  BOOL v178 = v176 < 1;
                }
                else {
                  BOOL v178 = 1;
                }
                if (v178) {
                  break;
                }
                int v179 = v61[v177];
                if ((v179 - 32) >= 0x5F) {
                  LOBYTE(v179) = 94;
                }
                v281[v39++ - 1] = v179;
                BOOL v180 = v39 < v175 || v63;
                --v176;
                v177 += 2;
              }
              while (v180);
              goto LABEL_433;
            }
            goto LABEL_430;
          case 'U':
            CFTypeID v64 = v278;
            v278 += 2;
            CFTypeID v65 = *(unsigned __int8 **)v64;
            if (!v65) {
              goto LABEL_171;
            }
            uint64_t v9 = a1;
            if (v17) {
              uint64_t v66 = *v65;
            }
            else {
              uint64_t v66 = v65[3];
            }
            p_str = &__str;
            int v101 = sub_226862A3C(&__str, 300, "%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x", v66);
            goto LABEL_330;
          case 'V':
            int v67 = v278;
            v278 += 2;
            uint64_t v68 = *(void *)v67;
            v278 = v67 + 4;
            LODWORD(v39) = 8;
            if (!v68) {
              goto LABEL_172;
            }
            CFTypeID v69 = (void *)*((void *)v67 + 1);
            uint64_t v9 = a1;
            if (v69)
            {
              uint64_t v118 = sub_226862B54(a1, v68, *v69);
              goto LABEL_440;
            }
            p_str = "<<NULL>>";
            goto LABEL_439;
          case 'X':
            goto LABEL_130;
          case 'a':
            uint64_t v70 = (unsigned __int8 **)v278;
            v278 += 2;
            uint64_t v71 = *v70;
            if (!*v70)
            {
LABEL_171:
              LODWORD(v39) = 8;
              goto LABEL_172;
            }
            if (v17 != 2)
            {
              if (v17 != 1)
              {
                *((void *)&v153 + 1) = v27;
                *(void *)&long long v153 = v27 - 4;
                switch((unint64_t)(v153 >> 1))
                {
                  case 0uLL:
                    goto LABEL_339;
                  case 1uLL:
                    p_str = &__str;
                    int v59 = sub_226862A3C(&__str, 300, "%02X:%02X:%02X:%02X:%02X:%02X", *v71);
                    goto LABEL_170;
                  case 2uLL:
                    p_str = &__str;
                    int v59 = sub_226862A3C(&__str, 300, "%02X:%02X:%02X:%02X:%02X:%02X:%02X:%02X", *v71, v71[1]);
                    goto LABEL_170;
                  case 6uLL:
                    p_str = &__str;
                    sub_226867274(v71, 0, 0, &__str);
                    LODWORD(v39) = strlen(&__str);
                    break;
                  default:
                    goto LABEL_596;
                }
                goto LABEL_263;
              }
              if (v27 == 4)
              {
LABEL_339:
                p_str = &__str;
                int v59 = sub_226862A3C(&__str, 300, "%u.%u.%u.%u");
              }
              else
              {
LABEL_596:
                p_str = &__str;
                int v59 = sub_226862A3C(&__str, 300, "%s");
              }
              goto LABEL_170;
            }
            unsigned int v152 = v71[1];
            if (v152 > 0x11)
            {
              uint64_t v9 = a1;
              if (v152 == 18)
              {
                v245 = &v71[v71[5] + 8];
                p_str = &__str;
                if (v71[6] == 6) {
                  int v101 = sub_226862A3C(&__str, 300, "%02X:%02X:%02X:%02X:%02X:%02X", *v245);
                }
                else {
                  int v101 = sub_226862A3C(&__str, 300, "<< AF_LINK %H >>", v245);
                }
                goto LABEL_330;
              }
              if (v152 == 30)
              {
                p_str = &__str;
                sub_226867274(v71 + 8, *((_DWORD *)v71 + 6), bswap32(*((unsigned __int16 *)v71 + 1)) >> 16, &__str);
                goto LABEL_457;
              }
              goto LABEL_600;
            }
            uint64_t v9 = a1;
            if (v71[1])
            {
              if (v152 == 2)
              {
                p_str = &__str;
                sub_22686714C(bswap32(*((_DWORD *)v71 + 1)), bswap32(*((unsigned __int16 *)v71 + 1)) >> 16, &__str);
LABEL_457:
                LODWORD(v39) = strlen(&__str);
                goto LABEL_439;
              }
LABEL_600:
              p_str = &__str;
              int v101 = sub_226862A3C(&__str, 300, "<< ERROR: %%##a used with unknown family: %d >>");
              goto LABEL_330;
            }
            p_str = &__str;
            int v101 = sub_226862A3C(&__str, 300, "<< AF_UNSPEC >>", usedBufLen);
            goto LABEL_330;
          case 'b':
            unsigned int v35 = 2;
            int v34 = 1;
            goto LABEL_131;
          case 'c':
            uint64_t v72 = v278;
            v278 += 2;
            unsigned int v73 = *v72;
            if (!v18)
            {
              char __str = v73;
              goto LABEL_261;
            }
            char __str = 39;
            if (v73 - 32 >= 0x5F) {
              char v74 = 94;
            }
            else {
              char v74 = v73;
            }
            v281[0] = v74;
            v281[1] = 39;
            LODWORD(v39) = 3;
            goto LABEL_262;
          case 'd':
          case 'i':
            if (v30 == 1 || v30 == 2)
            {
              uint64_t v37 = (unint64_t *)v278;
              v278 += 2;
              unint64_t v38 = *v37;
            }
            else
            {
              uint64_t v106 = v278;
              v278 += 2;
              unint64_t v38 = (int)*v106;
            }
            if (v29 == 2)
            {
              unint64_t v38 = (char)v38;
              if (((char)v38 & 0x8000000000000000) == 0)
              {
LABEL_178:
                unsigned int v35 = 10;
                if ((v19 & 2) == 0) {
                  goto LABEL_183;
                }
                int v16 = 43;
LABEL_182:
                BYTE4(v276) = v16;
LABEL_183:
                CFStringRef v36 = "0123456789ABCDEF";
                if ((v19 & 8) == 0)
                {
LABEL_184:
                  if ((v19 & 4) != 0)
                  {
                    unsigned int v107 = 2 * (v35 != 10);
                    if (v35 == 8) {
                      unsigned int v107 = 1;
                    }
                    if (!v17) {
                      unsigned int v107 = 0;
                    }
                    if (v16) {
                      ++v107;
                    }
                    BOOL v84 = v24 >= v107;
                    unsigned int v108 = v24 - v107;
                    if (v84) {
                      unint64_t v27 = v108;
                    }
                    else {
                      unint64_t v27 = 0;
                    }
                    *(void *)&long long v277 = v27;
                  }
                  if (!v27)
                  {
                    unint64_t v27 = 1;
                    goto LABEL_199;
                  }
                }
LABEL_196:
                if (v27 < 0x12C) {
                  goto LABEL_200;
                }
                unint64_t v27 = 299;
LABEL_199:
                *(void *)&long long v277 = v27;
LABEL_200:
                if (v18)
                {
                  int v109 = 0;
                  int v110 = -1;
                  unsigned int v111 = 1;
                  for (j = valuePtr; ; j = p_str)
                  {
                    if (HIDWORD(v38))
                    {
                      unint64_t v113 = v38 / v35;
                      *(j - 1) = v36[v38 % v35];
                      p_str = j - 1;
                      LODWORD(v39) = v109 + 1;
                    }
                    else
                    {
                      unint64_t v113 = v38 / v35;
                      *(j - 1) = v36[v38 % v35];
                      p_str = j - 1;
                      LODWORD(v39) = v109 + 1;
                      if (v35 > v38)
                      {
                        LODWORD(v27) = v277;
                        goto LABEL_221;
                      }
                    }
                    unint64_t v38 = v113;
                    if (BYTE8(v277) && !(v110 + 3 * (v111 / 3)))
                    {
                      *(j - 2) = 44;
                      LODWORD(v39) = v109 + 2;
                      p_str = j - 2;
                    }
                    --v110;
                    ++v111;
                    int v109 = v39;
                  }
                }
                if (v38)
                {
                  uint64_t v114 = 0;
                  do
                  {
                    if (HIDWORD(v38)) {
                      int v115 = v38 % v35;
                    }
                    else {
                      int v115 = v38 % v35;
                    }
                    if (HIDWORD(v38)) {
                      v38 /= v35;
                    }
                    else {
                      unint64_t v38 = v38 / v35;
                    }
                    v281[v114-- + 298] = v36[v115];
                  }
                  while (v38);
                  p_str = &valuePtr[v114];
                  LODWORD(v39) = -(int)v114;
                }
                else
                {
                  LODWORD(v39) = 0;
                  p_str = valuePtr;
                }
LABEL_221:
                if ((int)v39 >= (int)v27)
                {
                  uint64_t v9 = a1;
                }
                else
                {
                  uint64_t v9 = a1;
                  do
                  {
                    *--p_str = 48;
                    LODWORD(v39) = v39 + 1;
                  }
                  while ((int)v39 < (int)v277);
                }
                if (!BYTE3(v276)) {
                  goto LABEL_232;
                }
                if (v35 == 8)
                {
                  int v116 = 1;
                  uint64_t v117 = -1;
                }
                else
                {
                  if (v35 == 10) {
                    goto LABEL_232;
                  }
                  *(p_str - 1) = (char)v22;
                  int v116 = 2;
                  uint64_t v117 = -2;
                }
                p_str += v117;
                char *p_str = 48;
                LODWORD(v39) = v116 + v39;
LABEL_232:
                if (BYTE4(v276))
                {
                  *--p_str = BYTE4(v276);
                  LODWORD(v39) = v39 + 1;
                }
                goto LABEL_439;
              }
            }
            else
            {
              if (v29 == 1) {
                unint64_t v38 = (__int16)v38;
              }
              if ((v38 & 0x8000000000000000) == 0) {
                goto LABEL_178;
              }
            }
            unint64_t v38 = -(uint64_t)v38;
            unsigned int v35 = 10;
            int v16 = 45;
            goto LABEL_182;
          case 'f':
            v278 += 2;
            if ((v19 & 8) != 0) {
              uint64_t v75 = snprintf(&__str, 0x12CuLL, "%*.*f");
            }
            else {
              uint64_t v75 = snprintf(&__str, 0x12CuLL, "%*f");
            }
            uint64_t v39 = v75;
            uint64_t v9 = a1;
            if ((v75 & 0x80000000) != 0) {
              return v39;
            }
            goto LABEL_438;
          case 'm':
            uint64_t v76 = v278;
            v278 += 2;
            uint64_t v77 = *v76;
            if (v17) {
              int v78 = sub_226862A3C(&__str, 300, "%lld/0x%llX ", (int)v77, (int)v77);
            }
            else {
              int v78 = 0;
            }
            uint64_t v9 = a1;
            sub_226862918(v77, &v281[v78 - 1], 300 - v78);
            uint64_t v123 = 0;
            do
              LODWORD(v39) = v123;
            while (v281[v123++ - 1]);
            p_str = &__str;
            goto LABEL_439;
          case 'n':
            uint64_t v79 = v278;
            v278 += 2;
            v80 = *(unsigned char **)v79;
            if (v29 == 2)
            {
              uint64_t v10 = v273;
              unsigned char *v80 = v273;
              goto LABEL_558;
            }
            uint64_t v9 = a1;
            uint64_t v10 = v273;
            if (v29 == 1)
            {
              *(_WORD *)v80 = v273;
            }
            else if (v30 == 2 || v30 == 1)
            {
              *(void *)v80 = v273;
            }
            else
            {
              *(_DWORD *)v80 = v273;
            }
            goto LABEL_443;
          case 'o':
            int v34 = 0;
            unsigned int v35 = 8;
            goto LABEL_131;
          case 'p':
            int v16 = 0;
            uint64_t v22 = v278;
            v278 += 2;
            unint64_t v38 = *(void *)v22;
            unint64_t v27 = 16;
            *(void *)&long long v277 = 16;
            LOBYTE(v19) = v19 | 8;
            LOBYTE(v276) = v19;
            char v17 = 1;
            BYTE3(v276) = 1;
            LOBYTE(v22) = 120;
            unsigned int v35 = 16;
            goto LABEL_182;
          case 's':
            size_t v81 = (char **)v278;
            v278 += 2;
            p_str = *v81;
            if (*v81)
            {
              int v82 = v19 & 8;
              BOOL v83 = v82 == 0;
              if (v18 && v82)
              {
                BOOL v84 = v27 >= 2;
                v27 -= 2;
                if (v84)
                {
                  BOOL v83 = 0;
                  *(void *)&long long v277 = v27;
                  goto LABEL_495;
                }
                goto LABEL_271;
              }
            }
            else
            {
              LODWORD(v39) = 8;
              if ((v19 & 8) == 0 || v27)
              {
LABEL_172:
                p_str = "<<NULL>>";
                goto LABEL_263;
              }
              if (v18)
              {
LABEL_271:
                BOOL v83 = 0;
                LODWORD(v27) = 0;
                *(void *)&long long v277 = 0;
                BYTE8(v277) = 0;
                goto LABEL_495;
              }
              BOOL v83 = 0;
              LODWORD(v27) = 0;
            }
LABEL_495:
            switch(v17)
            {
              case 0:
                if (v83)
                {
                  uint64_t v209 = 0;
                  uint64_t v9 = a1;
                  do
                    LODWORD(v39) = v209;
                  while (p_str[v209++]);
                }
                else
                {
                  if ((int)v27 < 1) {
                    goto LABEL_633;
                  }
                  uint64_t v218 = 0;
                  while (p_str[v218])
                  {
                    if (v27 == ++v218) {
                      goto LABEL_621;
                    }
                  }
                  LODWORD(v27) = v218;
LABEL_621:
                  if (!v27)
                  {
LABEL_633:
                    LODWORD(v39) = 0;
                    goto LABEL_634;
                  }
                  int v250 = 0;
                  int v251 = v27 - 1;
                  while (1)
                  {
                    int v252 = p_str[v251];
                    int v253 = v27 + v250;
                    if ((v252 & 0x80) == 0) {
                      break;
                    }
                    --v250;
                    if (v253 >= 2)
                    {
                      --v251;
                      if ((v252 & 0xC0) == 0x80) {
                        continue;
                      }
                    }
                    int v253 = v27 + v250;
                    break;
                  }
                  int v254 = -v250;
                  if ((((255 << (8 - v254)) | (1 << (7 - v254))) & v252) == (255 << (8 - v254))) {
                    int v255 = v254;
                  }
                  else {
                    int v255 = 0;
                  }
                  int v256 = v255 + v253;
                  if ((v254 - 2) <= 4) {
                    LODWORD(v39) = v256;
                  }
                  else {
                    LODWORD(v39) = v253;
                  }
LABEL_634:
                  uint64_t v9 = a1;
                }
                goto LABEL_635;
              case 1:
                int v211 = *p_str++;
                LODWORD(v39) = v211;
                goto LABEL_634;
              case 2:
                unsigned int v212 = *p_str;
                if (*p_str)
                {
                  uint64_t v213 = 0;
                  v214 = &__str;
                  uint64_t v9 = a1;
                }
                else
                {
                  char __str = 46;
                  unsigned int v212 = *p_str;
                  v214 = v281;
                  uint64_t v9 = a1;
                  if (!*p_str) {
                    goto LABEL_563;
                  }
                  v214 = v281;
                  uint64_t v213 = 1;
                }
                while (2)
                {
                  if (v212 >= 0x40)
                  {
                    int v232 = sub_226862A3C(v214, 300 - v213, "<<INVALID DNS LABEL LENGTH %u>>");
                  }
                  else
                  {
                    uint64_t v225 = 300 - v213;
                    if (v213 + v212 < 254)
                    {
                      v213 += (int)sub_226862A3C(v214, v225, "%#s.", p_str);
                      v226 = &p_str[*p_str];
                      unsigned int v227 = v226[1];
                      p_str = v226 + 1;
                      unsigned int v212 = v227;
                      v214 = &v281[v213 - 1];
                      if (!v227) {
                        goto LABEL_563;
                      }
                      continue;
                    }
                    int v232 = sub_226862A3C(v214, v225, "<<DNS NAME TOO LONG>>");
                  }
                  break;
                }
                LODWORD(v214) = v214 + v232;
LABEL_563:
                p_str = &__str;
                LODWORD(v39) = v214 - &__str;
                goto LABEL_635;
              case 3:
                v215 = p_str + 1;
                v216 = p_str;
                while (2)
                {
                  int v217 = *(v215 - 1);
                  if (v217 == 32)
                  {
                    v216 = v215;
                    goto LABEL_510;
                  }
                  if (!*(v215 - 1))
                  {
                    v219 = p_str;
                    uint64_t v9 = a1;
                    goto LABEL_519;
                  }
                  if (v217 != 58)
                  {
LABEL_510:
                    ++v215;
                    continue;
                  }
                  break;
                }
                v219 = p_str;
                uint64_t v9 = a1;
                if (*v215 == 58)
                {
                  p_str = v215 + 1;
                  v219 = v216;
                  goto LABEL_526;
                }
                while (1)
                {
LABEL_519:
                  int v220 = *p_str;
                  if (v220 == 32)
                  {
                    v219 = p_str + 1;
                    goto LABEL_524;
                  }
                  if (!*p_str || v220 == 40) {
                    break;
                  }
LABEL_524:
                  ++p_str;
                }
LABEL_526:
                while (1)
                {
                  int v221 = *p_str;
                  if (!*p_str || v221 == 32) {
                    break;
                  }
                  if (v221 == 40)
                  {
                    if (p_str[1] == 41)
                    {
                      int v222 = p_str[2];
                      uint64_t v223 = 3;
                      if (v222 != 39) {
                        uint64_t v223 = 0;
                      }
                      v224 = &p_str[v223];
                      if (v222 == 40) {
                        p_str += 2;
                      }
                      else {
                        p_str = v224;
                      }
                    }
                    break;
                  }
                  ++p_str;
                }
                if (v219 < p_str && *v219 == 42) {
                  ++v219;
                }
                LODWORD(v39) = p_str - v219;
                p_str = v219;
LABEL_635:
                if ((v276 & 8) != 0)
                {
                  int v257 = v277;
                  if ((int)v39 > (int)v277)
                  {
                    if ((int)v277 >= 1)
                    {
                      while ((p_str[v257] & 0xC0) == 0x80)
                      {
                        BOOL v258 = __OFSUB__(v257--, 1);
                        if ((v257 < 0) ^ v258 | (v257 == 0))
                        {
                          LODWORD(v39) = 0;
                          goto LABEL_643;
                        }
                      }
                    }
                    LODWORD(v39) = v257;
                  }
                }
LABEL_643:
                if (BYTE8(v277) == 2)
                {
                  __int16 v259 = 8738;
LABEL_647:
                  *(_WORD *)((char *)&v277 + 9) = v259;
                }
                else if (BYTE8(v277) == 1)
                {
                  __int16 v259 = 10023;
                  goto LABEL_647;
                }
LABEL_439:
                uint64_t v118 = sub_2268665D4(v9, (uint64_t)&v276, p_str, (int)v39);
LABEL_440:
                uint64_t v39 = v118;
                if ((v118 & 0x80000000) == 0)
                {
                  uint64_t v49 = v273;
                  goto LABEL_442;
                }
                return v39;
              default:
                p_str = &__str;
                LODWORD(v39) = sub_226862A3C(&__str, 300, "<< ERROR: %%s with too many #'s (%d) >>", v17);
                goto LABEL_634;
            }
          case 'u':
            goto LABEL_131;
          case 'v':
            CFTypeID v85 = v278;
            v278 += 2;
            unsigned int v86 = *v85;
            int v87 = HIWORD(*v85) & 0xF;
            int v88 = sub_226862A3C(&__str, 300, "%u", HIBYTE(*v85));
            BOOL v89 = &v281[v88 - 1];
            int v90 = sub_226862A3C(v89, 300 - v88, ".%u", (v86 >> 20) & 0xF);
            CFStringRef v91 = &v89[v90];
            if (v87) {
              v91 += (int)sub_226862A3C(&v89[v90], valuePtr - v91, ".%u", HIWORD(v86) & 0xF);
            }
            uint64_t v9 = a1;
            HIDWORD(v92) = v86 >> 8;
            LODWORD(v92) = ((v86 >> 8) & 0xE0) - 32;
            switch((v92 >> 5))
            {
              case 0u:
                int v93 = sub_226862A3C(v91, valuePtr - v91, "d%u");
                goto LABEL_345;
              case 1u:
                int v93 = sub_226862A3C(v91, valuePtr - v91, "a%u");
                goto LABEL_345;
              case 2u:
                int v93 = sub_226862A3C(v91, valuePtr - v91, "b%u");
                goto LABEL_345;
              case 3u:
                if (!(_BYTE)v86) {
                  goto LABEL_346;
                }
                int v93 = sub_226862A3C(v91, valuePtr - v91, "f%u");
LABEL_345:
                LODWORD(v91) = v91 + v93;
LABEL_346:
                p_str = &__str;
                LODWORD(v39) = v91 - &__str;
                break;
              default:
                int v93 = sub_226862A3C(v91, valuePtr - v91, "<< ERROR: invalid NumVersion stage: 0x%02X >>");
                goto LABEL_345;
            }
            goto LABEL_439;
          case 'x':
            CFStringRef v36 = "0123456789abcdef";
LABEL_130:
            int v34 = 0;
            unsigned int v35 = 16;
LABEL_131:
            if (v30 == 2 || v30 == 1)
            {
              v94 = (unint64_t *)v278;
              v278 += 2;
              unint64_t v38 = *v94;
            }
            else
            {
              uint64_t v95 = v278;
              v278 += 2;
              unint64_t v38 = *v95;
            }
            if (v29 == 2)
            {
              unint64_t v38 = v38;
            }
            else if (v29 == 1)
            {
              unint64_t v38 = (unsigned __int16)v38;
            }
            BYTE4(v276) = 0;
            if (v17 > 1) {
              int v96 = v34;
            }
            else {
              int v96 = 0;
            }
            if (v96 != 1)
            {
              int v16 = 0;
              if ((v19 & 8) == 0) {
                goto LABEL_184;
              }
              goto LABEL_196;
            }
            if ((v19 & 8) == 0)
            {
              if (v29 == 1)
              {
                unint64_t v27 = 16;
              }
              else if (v29 == 2)
              {
                unint64_t v27 = 8;
              }
              else if (((v30 - 1) & 0xFE) != 0)
              {
                unint64_t v27 = 32;
              }
              else
              {
                unint64_t v27 = 64;
              }
              goto LABEL_243;
            }
            if (v27 >= 0x41)
            {
              p_str = &__str;
              int v59 = sub_226862A3C(&__str, 300, "ERROR: << precision must be 0-%d >>");
              goto LABEL_170;
            }
            if (!v27)
            {
              unint64_t v27 = 1;
LABEL_243:
              *(void *)&long long v277 = v27;
            }
            uint64_t v119 = (v27 - 1);
            if (v17 == 2)
            {
              LODWORD(v39) = 0;
              uint64_t v9 = a1;
              do
              {
                if ((v38 >> v119))
                {
                  v120 = "";
                  if ((int)v39 > 0) {
                    v120 = " ";
                  }
                  LODWORD(v39) = sub_226862A3C(&v281[(int)v39 - 1], 300 - (int)v39, "%s%d", v120, v119) + v39;
                }
                BOOL v149 = v119-- <= 0;
              }
              while (!v149);
              goto LABEL_438;
            }
            uint64_t v121 = 0;
            LODWORD(v39) = 0;
            do
            {
              if ((v38 >> v119))
              {
                v122 = "";
                if ((int)v39 > 0) {
                  v122 = " ";
                }
                LODWORD(v39) = sub_226862A3C(&v281[(int)v39 - 1], 300 - (int)v39, "%s%d", v122, v121) + v39;
              }
              ++v121;
              LOBYTE(v119) = v119 - 1;
            }
            while (v27 != v121);
            goto LABEL_262;
          case '{':
            uint64_t v97 = 0;
            CFRange v98 = v31 + 1;
            int v99 = 123;
            uint64_t v9 = a1;
            do
            {
              if (v99 == 125) {
                break;
              }
              int v99 = (char)v31[v97++ + 2];
            }
            while (v99);
            int v100 = sub_226865768(v31 + 1, v97, "ie");
            v31 += v97 + 1;
            if (v100)
            {
              if (!sub_226865768(v98, v97, "dur"))
              {
                if (BYTE2(v276) == 2)
                {
                  v200 = v278;
                  v278 += 2;
                  unint64_t v151 = *(void *)v200;
                }
                else
                {
                  v150 = v278;
                  v278 += 2;
                  if (BYTE2(v276) == 1) {
                    unint64_t v151 = *(void *)v150;
                  }
                  else {
                    unint64_t v151 = (int)*v150;
                  }
                }
                if (BYTE1(v276) == 1) {
                  unint64_t v151 = (__int16)v151;
                }
                if (BYTE1(v276) == 2) {
                  unint64_t v201 = (char)v151;
                }
                else {
                  unint64_t v201 = v151;
                }
                if (v201 >> 7 >= 0x2A3)
                {
                  uint64_t v203 = 0;
                  uint64_t v204 = 1;
                  unint64_t v205 = v201 / 0x15180;
                  do
                  {
                    uint64_t v206 = v203;
                    uint64_t v207 = v204;
                    valuePtr[v203++] = (v205 % 0xA) | 0x30;
                    ++v204;
                    BOOL v149 = v205 > 9;
                    v205 /= 0xAuLL;
                  }
                  while (v149);
                  if (&valuePtr[v203] <= valuePtr)
                  {
                    v208 = &__str;
                  }
                  else
                  {
                    v208 = &__str;
                    do
                    {
                      *v208++ = v281[v207-- + 298];
                      --v206;
                    }
                    while (v206 != -1);
                  }
                  char *v208 = 100;
                  v202 = v208 + 1;
                }
                else
                {
                  v202 = &__str;
                }
                unsigned int v228 = v201 % 0x15180;
                if (v228 >= 0xE10)
                {
                  if (v202 == &__str)
                  {
                    v229 = &__str;
                  }
                  else
                  {
                    char *v202 = 32;
                    v229 = v202 + 1;
                  }
                  v233 = valuePtr;
                  unsigned int v234 = v228 / 0xE10;
                  do
                  {
                    *v233++ = (v234 % 0xA) | 0x30;
                    BOOL v149 = v234 > 9;
                    v234 /= 0xAu;
                  }
                  while (v149);
                  while (v233 > valuePtr)
                  {
                    char v235 = *--v233;
                    *v229++ = v235;
                  }
                  char *v229 = 104;
                  v202 = v229 + 1;
                }
                unsigned int v236 = v228 % 0xE10;
                if (v236 >= 0x3C)
                {
                  if (v202 == &__str)
                  {
                    v237 = &__str;
                  }
                  else
                  {
                    char *v202 = 32;
                    v237 = v202 + 1;
                  }
                  v238 = valuePtr;
                  unsigned int v239 = (unsigned __int16)v236 / 0x3Cu;
                  do
                  {
                    *v238++ = (v239 % 0xA) | 0x30;
                    BOOL v149 = v239 > 9;
                    v239 /= 0xAu;
                  }
                  while (v149);
                  while (v238 > valuePtr)
                  {
                    char v240 = *--v238;
                    *v237++ = v240;
                  }
                  char *v237 = 109;
                  v202 = v237 + 1;
                }
                unsigned int v241 = (unsigned __int16)v236 % 0x3Cu;
                if ((unsigned __int16)v236 % 0x3Cu || v202 == &__str)
                {
                  if (v202 == &__str)
                  {
                    v242 = &__str;
                  }
                  else
                  {
                    char *v202 = 32;
                    v242 = v202 + 1;
                  }
                  v243 = valuePtr;
                  do
                  {
                    *v243++ = (v241 % 0xA) | 0x30;
                    BOOL v149 = v241 > 9;
                    v241 /= 0xAu;
                  }
                  while (v149);
                  while (v243 > valuePtr)
                  {
                    char v244 = *--v243;
                    *v242++ = v244;
                  }
                  char *v242 = 115;
                  v202 = v242 + 1;
                }
                char *v202 = 0;
                p_str = &__str;
                LODWORD(v39) = v202 - &__str;
                goto LABEL_439;
              }
              if (sub_226865768(v98, v97, "txt"))
              {
                p_str = &__str;
                int v101 = sub_226862A3C(&__str, 300, "<<UNKNOWN PRINTF EXTENSION '%.*s'>>");
LABEL_330:
                LODWORD(v39) = v101;
                goto LABEL_439;
              }
              v166 = v278;
              v278 += 2;
              v167 = *(unsigned __int8 **)v166;
              v278 = v166 + 4;
              uint64_t v168 = *((void *)v166 + 1);
              uint64_t v169 = (4 * DWORD2(v276));
              v170 = &v167[v168];
              if ((unint64_t)v168 < 6
                || (*(_DWORD *)(v167 + 1) == 1095590263 ? (BOOL v171 = v167[5] == 61) : (BOOL v171 = 0), !v171))
              {
                if (v168 >= 1)
                {
                  LODWORD(v39) = 0;
                  v172 = v167;
                  while (1)
                  {
                    unint64_t v173 = (unint64_t)&v172[*v172 + 1];
                    if (v173 > (unint64_t)v170) {
                      break;
                    }
                    uint64_t v15 = sub_2268665A8((uint64_t)a1, (uint64_t)"%*s%.*s\n", a3, a4, a5, a6, a7, a8, v169);
                    if ((v15 & 0x80000000) != 0) {
                      return v15;
                    }
                    uint64_t v39 = (v15 + v39);
                    v172 = (unsigned __int8 *)v173;
                    if (v173 >= (unint64_t)v170) {
                      goto LABEL_663;
                    }
                  }
                  uint64_t v9 = a1;
                  int v260 = sub_2268665A8((uint64_t)a1, (uint64_t)"%*s### TXT record length byte too big (%zu, %zu max)\n", a3, a4, a5, a6, a7, a8, v169);
LABEL_667:
                  if (v260 >= 0) {
                    int v267 = v39;
                  }
                  else {
                    int v267 = 0;
                  }
                  uint64_t v39 = (v267 + v260);
                  goto LABEL_671;
                }
                goto LABEL_662;
              }
              if (&v167[*v167 + 1] == v170)
              {
                if (v168 < 2)
                {
LABEL_662:
                  uint64_t v39 = 0;
LABEL_663:
                  if (v168 && *v167)
                  {
                    uint64_t v9 = a1;
                    uint64_t v49 = v273;
                    goto LABEL_672;
                  }
                  uint64_t v9 = a1;
                  int v260 = sub_2268665A8((uint64_t)a1, (uint64_t)"\n", a3, a4, a5, a6, a7, a8, usedBufLen);
                  goto LABEL_667;
                }
                LODWORD(v39) = 0;
                v261 = v167 + 1;
                while (2)
                {
                  v262 = valuePtr;
                  v263 = v261;
                  do
                  {
                    int v265 = *v261++;
                    int v264 = v265;
                    if (v265 == 92)
                    {
                      if (v261 >= v170)
                      {
                        uint64_t v9 = a1;
                        int v260 = sub_2268665A8((uint64_t)a1, (uint64_t)"%*s### bad TXT escape: %.*s\n", a3, a4, a5, a6, a7, a8, v169);
                        goto LABEL_667;
                      }
                      v261 = v263 + 2;
                      LOBYTE(v264) = v263[1];
                    }
                    else if (v264 == 44)
                    {
                      break;
                    }
                    *v262++ = v264;
                    v263 = v261;
                  }
                  while (v261 < v170);
                  uint64_t v266 = sub_2268665A8((uint64_t)a1, (uint64_t)"%*s%.*s\n", a3, a4, a5, a6, a7, a8, v169);
                  if ((v266 & 0x80000000) == 0)
                  {
                    uint64_t v39 = (v266 + v39);
                    if (v261 < v170) {
                      continue;
                    }
                    goto LABEL_663;
                  }
                  break;
                }
                uint64_t v39 = v266;
                uint64_t v9 = a1;
              }
              else
              {
                uint64_t usedBufLen = (4 * DWORD2(v276));
                uint64_t v9 = a1;
                uint64_t v190 = (uint64_t)a1;
                v191 = "%*s### bad TXT record length byte (%zu, %zu expected)\n";
LABEL_618:
                uint64_t v192 = sub_2268665A8(v190, (uint64_t)v191, a3, a4, a5, a6, a7, a8, usedBufLen);
LABEL_619:
                uint64_t v39 = v192;
              }
LABEL_671:
              uint64_t v49 = v273;
              goto LABEL_672;
            }
            v125 = v278;
            v278 += 2;
            v126 = *(unsigned __int8 **)v125;
            v278 = v125 + 4;
            uint64_t v127 = *((void *)v125 + 1);
            if (v127 < 1)
            {
              LODWORD(v39) = 0;
              goto LABEL_557;
            }
            LODWORD(v39) = 0;
            uint64_t v128 = (4 * DWORD2(v276));
            v129 = &v126[v127];
            uint64_t v270 = v128;
            break;
          default:
            goto LABEL_169;
        }
        while (1)
        {
          if ((unint64_t)(v129 - v126) <= 1)
          {
            int v230 = sub_2268665A8((uint64_t)a1, (uint64_t)"### bad IE header:\n%2.1H\n", a3, a4, a5, a6, a7, a8, (uint64_t)v126);
            goto LABEL_552;
          }
          uint64_t v130 = v126[1];
          v131 = &v126[v130 + 2];
          if (v131 > v129)
          {
            int v230 = sub_2268665A8((uint64_t)a1, (uint64_t)"### bad IE length:\n%2.1H\n", a3, a4, a5, a6, a7, a8, (uint64_t)v126);
            goto LABEL_552;
          }
          unsigned int v132 = *v126;
          if (v132 <= 2) {
            break;
          }
          if (v132 == 3 || v132 == 50) {
            goto LABEL_286;
          }
          if (v132 != 221) {
            goto LABEL_288;
          }
          if (v130 <= 3)
          {
            int v230 = sub_2268665A8((uint64_t)a1, (uint64_t)"### bad vendor IE:\n%2.1H\n", a3, a4, a5, a6, a7, a8, (uint64_t)v126);
            goto LABEL_552;
          }
          int v133 = bswap32(*(_DWORD *)(v126 + 2));
          v134 = v126 + 6;
          uint64_t v135 = v130 - 4;
          if (v133 <= 1569282)
          {
            if (v133 == 234241)
            {
              if (v131 - v134 <= 2)
              {
                int v230 = sub_2268665A8((uint64_t)a1, (uint64_t)"### bad Apple General IE:\n%2.1H\n", a3, a4, a5, a6, a7, a8, (uint64_t)v126);
LABEL_552:
                if (v230 >= 0) {
                  int v231 = v39;
                }
                else {
                  int v231 = 0;
                }
                uint64_t v39 = (v231 + v230);
LABEL_556:
                if ((v39 & 0x80000000) != 0) {
                  return v39;
                }
LABEL_557:
                uint64_t v10 = v273 + v39;
LABEL_558:
                uint64_t v9 = a1;
LABEL_443:
                a2 = (const char *)(v31 + 1);
                goto LABEL_2;
              }
              uint64_t v128 = v270;
              uint64_t v15 = sub_2268665A8((uint64_t)a1, (uint64_t)"%*s%3d %-*s product ID %d flags 0x%x\n", a3, a4, a5, a6, a7, a8, v270);
            }
            else
            {
LABEL_303:
              uint64_t v128 = v270;
LABEL_286:
              uint64_t v15 = sub_2268665A8((uint64_t)a1, (uint64_t)"%*s%3d %-*s %2.2H", a3, a4, a5, a6, a7, a8, v128);
            }
            goto LABEL_289;
          }
          if (v133 == 1569283)
          {
            uint64_t v140 = sub_2268665A8((uint64_t)a1, (uint64_t)"%*s%3d %-*s\n", a3, a4, a5, a6, a7, a8, v270);
            if ((v140 & 0x80000000) != 0) {
              return v140;
            }
            uint64_t v15 = sub_2268676EC((uint64_t)a1, (uint64_t)&v276, v134, v135, v141, v142, v143, v144);
            if ((v15 & 0x80000000) != 0) {
              return v15;
            }
          }
          else
          {
            if (v133 != 5304836) {
              goto LABEL_303;
            }
            uint64_t v140 = sub_2268665A8((uint64_t)a1, (uint64_t)"%*s%3d %-*s\n", a3, a4, a5, a6, a7, a8, v270);
            if ((v140 & 0x80000000) != 0) {
              return v140;
            }
            uint64_t v15 = sub_22686790C((uint64_t)a1, (uint64_t)&v276, (unint64_t)v134, v135, v136, v137, v138, v139);
            if ((v15 & 0x80000000) != 0) {
              return v15;
            }
          }
          uint64_t v39 = (v140 + v39 + v15);
          uint64_t v128 = v270;
LABEL_291:
          v126 = v131;
          if (v131 >= v129) {
            goto LABEL_556;
          }
        }
        if (*v126)
        {
          if (v132 == 1) {
            goto LABEL_286;
          }
LABEL_288:
          uint64_t v15 = sub_2268665A8((uint64_t)a1, (uint64_t)"%*s%3d %-*s %2.2H\n", a3, a4, a5, a6, a7, a8, v128);
        }
        else
        {
          uint64_t v15 = sub_2268665A8((uint64_t)a1, (uint64_t)"%*s%3d %-*s '%.*s'\n", a3, a4, a5, a6, a7, a8, v128);
        }
LABEL_289:
        if ((v15 & 0x80000000) != 0) {
          return v15;
        }
        uint64_t v39 = (v15 + v39);
        goto LABEL_291;
    }
  }
}

void sub_2268652A4(void *a1)
{
  CFNumberType v2 = (void *)a1[1];
  if (v2) {
    free(v2);
  }
  size_t v3 = (void *)a1[2];
  if (v3) {
    free(v3);
  }
  size_t v4 = (void *)a1[3];
  if (v4) {
    free(v4);
  }

  free(a1);
}

void sub_2268652FC(void *a1)
{
  if (*((_DWORD *)a1 + 8) == 2)
  {
    CFNumberType v2 = (void *)a1[5];
    if (v2)
    {
      free(v2);
      a1[5] = 0;
    }
    size_t v3 = (FILE *)a1[6];
    if (v3)
    {
      if (v3 != (FILE *)*MEMORY[0x263EF8348] && v3 != (FILE *)*MEMORY[0x263EF8358]) {
        fclose(v3);
      }
      a1[6] = 0;
    }
    uint64_t v5 = (void *)a1[10];
    if (v5)
    {
      free(v5);
      a1[10] = 0;
    }
  }
  size_t v6 = (void *)a1[2];
  if (v6) {
    free(v6);
  }

  free(a1);
}

uint64_t sub_22686539C(unsigned __int8 *a1)
{
  if (!a1)
  {
    while (1)
    {
      uint64_t result = qword_268148280;
      if (!qword_268148280) {
        break;
      }
      qword_268148280 = *(void *)qword_268148280;
      sub_2268652A4((void *)result);
    }
    return result;
  }
  uint64_t v1 = a1;
  int v2 = *a1;
  if (*a1)
  {
    while (2)
    {
      uint64_t v3 = 0;
      if (!v2) {
        return 4294960554;
      }
      while (v2 != 58)
      {
        int v2 = v1[++v3];
        if (!v2) {
          return 4294960554;
        }
      }
      uint64_t v4 = 0;
      uint64_t v5 = &v1[v3];
      while (1)
      {
        if (!v5[v4 + 1]) {
          return 4294960554;
        }
        if (v5[v4 + 1] == 61) {
          break;
        }
        ++v4;
      }
      size_t v6 = 0;
      unint64_t v7 = &v1[v3 + 2 + v4];
      for (uint64_t i = v7; ; ++i)
      {
        int v9 = *i;
        if (!*i || v9 == 44) {
          break;
        }
        ++v6;
      }
      if (v9 == 44) {
        uint64_t v10 = i + 1;
      }
      else {
        uint64_t v10 = i;
      }
      uint64_t v11 = qword_268148280;
      if (qword_268148280)
      {
        while (1)
        {
          uint64_t v12 = (uint64_t *)v11;
          if (!sub_226865768(v1, v3, *(unsigned char **)(v11 + 8))
            && !sub_226865768(&v1[v3 + 1], v4, (unsigned char *)v12[2]))
          {
            break;
          }
          uint64_t v11 = *v12;
          if (!*v12) {
            goto LABEL_24;
          }
        }
        char v18 = malloc_type_malloc(v6 + 1, 0x61B4FDF3uLL);
        if (v18)
        {
          int v19 = v18;
          memcpy(v18, v7, v6);
          v19[v6] = 0;
          free((void *)v12[3]);
          _DWORD v12[3] = (uint64_t)v19;
LABEL_29:
          int v2 = *v10;
          uint64_t v1 = v10;
          if (*v10) {
            continue;
          }
          break;
        }
      }
      else
      {
        uint64_t v12 = &qword_268148280;
LABEL_24:
        int v13 = malloc_type_calloc(1uLL, 0x20uLL, 0x30040E3C0B0CCuLL);
        if (v13)
        {
          uint64_t v14 = v13;
          uint64_t v15 = malloc_type_malloc(v3 + 1, 0xCC4A32C3uLL);
          v14[1] = v15;
          if (v15)
          {
            memcpy(v15, v1, v3);
            *(unsigned char *)(v14[1] + v3) = 0;
            int v16 = malloc_type_malloc(v4 + 1, 0xAC5CD173uLL);
            v14[2] = v16;
            if (v16)
            {
              memcpy(v16, &v1[v3 + 1], v4);
              *(unsigned char *)(v14[2] + v4) = 0;
              char v17 = malloc_type_malloc(v6 + 1, 0xC219957FuLL);
              v14[3] = v17;
              if (v17)
              {
                memcpy(v17, &v1[v3 + 2 + v4], v6);
                *(unsigned char *)(v14[3] + v6) = 0;
                *uint64_t v12 = (uint64_t)v14;
                goto LABEL_29;
              }
            }
            CFStringRef v21 = (void *)v14[1];
            if (v21) {
              free(v21);
            }
          }
          uint64_t v22 = (void *)v14[2];
          if (v22) {
            free(v22);
          }
          CFTypeID v23 = (void *)v14[3];
          if (v23) {
            free(v23);
          }
          free(v14);
        }
      }
      return 4294960568;
    }
  }

  return (uint64_t)sub_2268657EC(0);
}

BOOL sub_226865630(uint64_t a1, unsigned __int16 a2)
{
  if (byte_268148380) {
    return 0;
  }
  pthread_mutex_lock(&stru_2681465A0);
  if (*(_DWORD *)a1 == -1)
  {
    *(_DWORD *)a1 = *(_DWORD *)(a1 + 4);
    uint64_t v5 = &qword_268148278;
    uint64_t v6 = qword_268148278;
    if (qword_268148278)
    {
      if ((int)sub_226865768(*(unsigned __int8 **)(qword_268148278 + 24), -1, *(unsigned char **)(a1 + 24)) <= 0)
      {
        do
        {
          uint64_t v7 = v6;
          uint64_t v6 = *(void *)(v6 + 48);
          if (!v6)
          {
            uint64_t v8 = 0;
            uint64_t v5 = (uint64_t *)(v7 + 48);
            goto LABEL_13;
          }
        }
        while ((int)sub_226865768(*(unsigned __int8 **)(v6 + 24), -1, *(unsigned char **)(a1 + 24)) < 1);
        uint64_t v5 = (uint64_t *)(v7 + 48);
      }
      else
      {
        uint64_t v5 = &qword_268148278;
      }
      uint64_t v8 = *v5;
    }
    else
    {
      uint64_t v8 = 0;
    }
LABEL_13:
    *(void *)(a1 + 48) = v8;
    *uint64_t v5 = a1;
    int v9 = *(unsigned __int8 **)(a1 + 8);
    if (v9) {
      sub_22686539C(v9);
    }
    sub_2268657EC(a1);
    uint64_t v10 = a1 + 56;
    if (!*(void *)(a1 + 56))
    {
      sub_226865BA0("console", (uint64_t **)(a1 + 56));
      if (*(void *)v10) {
        ++*(_DWORD *)(*(void *)v10 + 8);
      }
    }
  }
  int v11 = *(_DWORD *)a1;
  pthread_mutex_unlock(&stru_2681465A0);
  return v11 <= a2;
}

uint64_t sub_226865768(unsigned __int8 *a1, uint64_t a2, unsigned char *a3)
{
  if (a2)
  {
    uint64_t v4 = a2;
    while (1)
    {
      --v4;
      __darwin_ct_rune_t v6 = __tolower(*a1);
      uint64_t result = __tolower(*a3);
      if (v6 < (int)result) {
        return 0xFFFFFFFFLL;
      }
      if (v6 > (int)result) {
        return 1;
      }
      if (!result) {
        return result;
      }
      ++a1;
      ++a3;
      if (!v4) {
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
    if (*a3) {
      return 0xFFFFFFFFLL;
    }
    else {
      return 0;
    }
  }
}

uint64_t *sub_2268657EC(uint64_t a1)
{
  uint64_t v1 = qword_268148280;
  if (qword_268148280)
  {
    do
    {
      if (!strcmp(*(const char **)(v1 + 16), "level"))
      {
        int v3 = sub_226865D38(*(char **)(v1 + 24));
        if (v3 != -1)
        {
          uint64_t v4 = qword_268148278;
          if (qword_268148278)
          {
            int v5 = v3;
            do
            {
              if ((!a1 || v4 == a1) && sub_226867A58(*(unsigned char **)(v1 + 8), *(unsigned char **)(v4 + 24))) {
                *(_DWORD *)uint64_t v4 = v5;
              }
              uint64_t v4 = *(void *)(v4 + 48);
            }
            while (v4);
          }
        }
      }
      uint64_t v1 = *(void *)v1;
    }
    while (v1);
    uint64_t v6 = qword_268148280;
    if (qword_268148280)
    {
      do
      {
        if (!strcmp(*(const char **)(v6 + 16), "flags"))
        {
          uint64_t v7 = *(const char **)(v6 + 24);
          int v8 = 0;
          int v9 = &v7[strlen(v7)];
LABEL_17:
          uint64_t v10 = (unsigned __int8 *)v7;
          while (v10 < (unsigned __int8 *)v9)
          {
            if (*v10 == 59)
            {
              BOOL v11 = 1;
              uint64_t v12 = v10;
            }
            else
            {
              int v13 = v10 + 1;
              size_t v14 = v9 - 1 - (const char *)v10;
              while (1)
              {
                uint64_t v15 = v13;
                if (!v14) {
                  break;
                }
                ++v13;
                --v14;
                if (*v15 == 59)
                {
                  uint64_t v12 = v15;
                  goto LABEL_26;
                }
              }
              uint64_t v12 = (unsigned __int8 *)v9;
LABEL_26:
              BOOL v11 = v15 < (unsigned __int8 *)v9;
            }
            uint64_t v16 = v12 - v10;
            uint64_t v7 = (const char *)&v12[v11];
            if (!sub_226865768(v10, v12 - v10, "none"))
            {
              int v8 = 0;
              goto LABEL_17;
            }
            if (!sub_226865768(v10, v16, "time"))
            {
              v8 |= 1u;
              goto LABEL_17;
            }
            if (!sub_226865768(v10, v16, "pid"))
            {
              v8 |= 2u;
              goto LABEL_17;
            }
            if (!sub_226865768(v10, v16, "program"))
            {
              v8 |= 4u;
              goto LABEL_17;
            }
            if (!sub_226865768(v10, v16, "category"))
            {
              v8 |= 8u;
              goto LABEL_17;
            }
            if (!sub_226865768(v10, v16, "level"))
            {
              v8 |= 0x10u;
              goto LABEL_17;
            }
            if (!sub_226865768(v10, v16, "prefix"))
            {
              v8 |= 0x20u;
              goto LABEL_17;
            }
            int v17 = sub_226865768(v10, v16, "function");
            uint64_t v10 = (unsigned __int8 *)v7;
            if (!v17)
            {
              v8 |= 0x40u;
              goto LABEL_17;
            }
          }
          for (uint64_t i = qword_268148278; i; uint64_t i = *(void *)(i + 48))
          {
            if (!a1 || i == a1)
            {
              int v19 = *(char **)(i + 24);
              if (sub_226867A58(*(unsigned char **)(v6 + 8), v19))
              {
                if ((v8 & 0x20) != 0)
                {
                  CFStringRef v20 = strchr(v19, 95);
                  if (!v20) {
                    LODWORD(v20) = v19 + strlen(v19);
                  }
                  *(void *)(i + 32) = v19;
                  *(_DWORD *)(i + 40) = v20 - v19;
                }
                *(_DWORD *)(i + 16) = v8;
              }
            }
          }
        }
        uint64_t v6 = *(void *)v6;
      }
      while (v6);
      for (uint64_t j = qword_268148280; j; uint64_t j = *(void *)j)
      {
        if (!strcmp(*(const char **)(j + 16), "output"))
        {
          for (uint64_t k = qword_268148278; k; uint64_t k = *(void *)(k + 48))
          {
            if ((!a1 || k == a1) && sub_226867A58(*(unsigned char **)(j + 8), *(unsigned char **)(k + 24)))
            {
              int v28 = 0;
              uint64_t result = (uint64_t *)sub_226865BA0(*(char **)(j + 24), &v28);
              if (result) {
                return result;
              }
              uint64_t v24 = *(void *)(k + 56);
              int v25 = v28;
              if ((uint64_t *)v24 != v28)
              {
                if (v24) {
                  --*(_DWORD *)(v24 + 8);
                }
                ++*((_DWORD *)v25 + 2);
                *(void *)(k + 56) = v25;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v26 = qword_268148288;
  if (qword_268148288)
  {
    uint64_t result = &qword_268148288;
    do
    {
      unint64_t v27 = result;
      uint64_t result = (uint64_t *)v26;
      while (1)
      {
        uint64_t v26 = *result;
        if (*((_DWORD *)result + 2)) {
          break;
        }
        *unint64_t v27 = v26;
        sub_2268652FC(result);
        uint64_t result = (uint64_t *)*v27;
        if (!*v27) {
          return result;
        }
      }
    }
    while (v26);
  }
  return 0;
}

uint64_t sub_226865BA0(char *__s2, uint64_t **a2)
{
  uint64_t v4 = &qword_268148288;
  while (1)
  {
    uint64_t v4 = (uint64_t *)*v4;
    if (!v4) {
      break;
    }
    if (!strcmp((const char *)v4[2], __s2))
    {
      uint64_t v5 = 0;
LABEL_5:
      *a2 = v4;
      return v5;
    }
  }
  uint64_t v6 = (uint64_t *)malloc_type_calloc(1uLL, 0x60uLL, 0x10B2040E503BF9DuLL);
  if (v6)
  {
    uint64_t v4 = v6;
    *((_DWORD *)v6 + 2) = 0;
    uint64_t v7 = strdup(__s2);
    v4[2] = (uint64_t)v7;
    if (v7)
    {
      for (uint64_t i = 0; __s2[i] && __s2[i] != 59; ++i)
        ;
      if (!i)
      {
        uint64_t v5 = 4294960540;
        goto LABEL_27;
      }
      if (__s2[i]) {
        int v9 = __s2 + 1;
      }
      else {
        int v9 = __s2;
      }
      uint64_t v10 = (unsigned __int8 *)&v9[i];
      if (sub_226865768((unsigned __int8 *)__s2, i, "console")
        && sub_226865768((unsigned __int8 *)__s2, i, "file"))
      {
        if (sub_226865768((unsigned __int8 *)__s2, i, "syslog"))
        {
          if (sub_226865768((unsigned __int8 *)__s2, i, "callback"))
          {
            uint64_t v5 = 4294960591;
LABEL_27:
            sub_2268652FC(v4);
            return v5;
          }
          uint64_t v11 = sub_22686824C((uint64_t)v4, v10);
        }
        else
        {
          uint64_t v11 = sub_2268680F0((uint64_t)v4, v10);
        }
      }
      else
      {
        uint64_t v11 = sub_226867BB8((uint64_t)v4, (char *)v10);
      }
      uint64_t v5 = v11;
      if (!v11)
      {
        uint64_t v5 = 0;
        *uint64_t v4 = qword_268148288;
        qword_268148288 = (uint64_t)v4;
        goto LABEL_5;
      }
      goto LABEL_27;
    }
    uint64_t v5 = 4294960568;
    goto LABEL_27;
  }
  return 4294960568;
}

uint64_t sub_226865D38(char *__s1)
{
  uint64_t v2 = MEMORY[0x263EF8318];
  int v3 = __s1;
  do
  {
    uint64_t v4 = v3;
    int v5 = *v3;
    if (*v3 < 0) {
      int v6 = __maskrune(*v3, 0x100uLL);
    }
    else {
      int v6 = *(_DWORD *)(v2 + 4 * *v3 + 60) & 0x100;
    }
    ++v3;
  }
  while (v6);
  size_t v7 = v4 - __s1;
  if (v4 == __s1)
  {
    int v9 = *__s1;
    if ((v9 - 48) > 9)
    {
      unsigned int v10 = 0;
    }
    else
    {
      unsigned int v10 = 0;
      uint64_t v11 = __s1 + 1;
      do
      {
        unsigned int v10 = 10 * v10 + (char)v9 - 48;
        int v12 = *v11++;
        int v9 = v12;
      }
      while ((v12 - 48) < 0xA);
    }
    if (v9) {
      return 0xFFFFFFFFLL;
    }
    else {
      return v10;
    }
  }
  uint64_t v8 = 0;
  while (strncmp(__s1, *(const char **)&dword_2647BA4F8[v8 + 2], v7))
  {
    v8 += 4;
    if (v8 == 68) {
      return 0xFFFFFFFFLL;
    }
  }
  uint64_t result = dword_2647BA4F8[v8];
  if (v5 && result != -1)
  {
    int v14 = *v3;
    if ((v14 - 48) > 9)
    {
      int v15 = 0;
      if (!*v3)
      {
LABEL_27:
        if (v5 != 45)
        {
          if (v5 == 43) {
            return (v15 + result);
          }
          return 0xFFFFFFFFLL;
        }
        return (result - v15);
      }
    }
    else
    {
      int v15 = 0;
      uint64_t v16 = 1;
      do
      {
        int v15 = 10 * v15 + (char)v14 - 48;
        int v14 = v3[v16++];
      }
      while ((v14 - 48) < 0xA);
      if (!v14) {
        goto LABEL_27;
      }
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_226865EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9 = MEMORY[0x270FA5388]();
  uint64_t v11 = v10;
  int v13 = v12;
  uint64_t v14 = v9;
  uint64_t v31 = *MEMORY[0x263EF8340];
  if (qword_268148298 != -1) {
    dispatch_once(&qword_268148298, &unk_26DA6B158);
  }
  if (qword_268148290) {
    int v15 = qword_268148290;
  }
  else {
    int v15 = &_os_log_internal;
  }
  if (v13 > 4999)
  {
    if (v13 > 9999)
    {
      if (v13 == 10000 || v13 == 11000)
      {
LABEL_24:
        os_log_type_t v16 = OS_LOG_TYPE_FAULT;
        goto LABEL_25;
      }
      int v17 = 12000;
    }
    else
    {
      if (v13 == 5000)
      {
        os_log_type_t v16 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_25;
      }
      if (v13 == 8000)
      {
        os_log_type_t v16 = OS_LOG_TYPE_ERROR;
        goto LABEL_25;
      }
      int v17 = 9000;
    }
    if (v13 != v17)
    {
LABEL_36:
      os_log_type_t v16 = OS_LOG_TYPE_DEBUG;
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  os_log_type_t v16 = OS_LOG_TYPE_INFO;
  if (v13 > 799)
  {
    if (v13 != 800 && v13 != 1000 && v13 != 3000) {
      goto LABEL_36;
    }
  }
  else if (v13 && v13 != 100 && v13 != 500)
  {
    goto LABEL_36;
  }
LABEL_25:
  if (!sub_2268FEF88() || strlen(v11) < 2) {
    return 0;
  }
  if ((*(unsigned char *)(v14 + 16) & 0x40) != 0) {
    __sprintf_chk(v25, 0, 0x3E8uLL, "%s: %s");
  }
  else {
    __sprintf_chk(v25, 0, 0x3E8uLL, "%s");
  }
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  *(void *)&long long buf = sub_226862ACC;
  *((void *)&buf + 1) = v26;
  long long v28 = xmmword_226912E70;
  uint64_t v18 = sub_226862B54((uint64_t (**)(const char *, uint64_t, void))&buf, v25, (uint64_t)&a9, v20, v21, v22, v23, v24);
  *(unsigned char *)(*((void *)&buf + 1) + v28) = 0;
  if (os_log_type_enabled(v15, v16))
  {
    LODWORD(buf) = 136315138;
    *(void *)((char *)&buf + 4) = v26;
    _os_log_impl(&dword_22683A000, v15, v16, "%s", (uint8_t *)&buf, 0xCu);
  }
  return v18;
}

uint64_t sub_226866128(uint64_t a1, int a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = a3;
  uint64_t result = 0;
  int v74 = 0;
  uint64_t v72 = 0;
  uint64_t v84 = *MEMORY[0x263EF8340];
  if (a4 >= a5) {
    unint64_t v11 = a5;
  }
  else {
    unint64_t v11 = a4;
  }
  uint64_t v78 = (4 * a2);
  int v12 = &v82;
  int v13 = &v83;
  uint64_t v77 = a1;
  while (1)
  {
    unint64_t v14 = 0;
    unint64_t v15 = v11 >= 0x10 ? 16 : v11;
    v80 = v13;
    do
    {
      if (v14 && (v14 & 3) == 0) {
        *v13++ = 32;
      }
      if (v14 >= v15)
      {
        char v16 = 32;
        *int v13 = 32;
      }
      else
      {
        *int v13 = a0123456789abcd[(unint64_t)*(unsigned __int8 *)(v8 + v14) >> 4];
        char v16 = a0123456789abcd[*(unsigned char *)(v8 + v14) & 0xF];
      }
      v13[1] = v16;
      v13 += 2;
      ++v14;
    }
    while (v14 != 16);
    unint64_t v17 = 0;
    *int v13 = 0;
    do
    {
      if (v17 >= v15)
      {
        LOBYTE(v18) = 32;
      }
      else
      {
        int v18 = *(unsigned __int8 *)(v8 + v17);
        if ((v18 - 32) >= 0x5F) {
          LOBYTE(v18) = 94;
        }
      }
      v81[v17++] = v18;
    }
    while (v17 != 16);
    v81[16] = 0;
    if (a4 > 0x10)
    {
      if (v8 == a3)
      {
        int v76 = result;
        uint64_t v41 = a1;
        uint64_t v29 = sub_2268665A8(a1, (uint64_t)"%*s", a3, a4, a5, a6, a7, a8, v78);
        if ((v29 & 0x80000000) != 0) {
          return v29;
        }
        uint64_t result = sub_2268665A8(v41, (uint64_t)"+%04X: %s |%s| (%zu bytes)\n", v42, v43, v44, v45, v46, v47, 0);
        if ((result & 0x80000000) != 0) {
          return result;
        }
        uint64_t result = (v29 + v76 + result);
        a1 = v77;
      }
      else
      {
        BOOL v30 = *(void *)v80 == *(void *)v12 && *((void *)v80 + 1) == *((void *)v12 + 1);
        BOOL v31 = v30 && *((void *)v80 + 2) == *((void *)v12 + 2);
        if (v31 && *((void *)v80 + 3) == *((void *)v12 + 3))
        {
          ++v74;
          v72 += v15;
        }
        else
        {
          int v75 = result;
          if (v74 < 1)
          {
            uint64_t v40 = v12;
          }
          else
          {
            uint64_t v33 = a1;
            uint64_t v29 = sub_2268665A8(a1, (uint64_t)"%*s", a3, a4, a5, a6, a7, a8, v78);
            if ((v29 & 0x80000000) != 0) {
              return v29;
            }
            uint64_t result = sub_2268665A8(v33, (uint64_t)"* (%d duplicate lines, %zu duplicate bytes)\n", v34, v35, v36, v37, v38, v39, (v74 + 1));
            if ((result & 0x80000000) != 0) {
              return result;
            }
            uint64_t v40 = v12;
            uint64_t v72 = 0;
            int v74 = 0;
            v75 += v29 + result;
            a1 = v77;
          }
          uint64_t v48 = a1;
          uint64_t v29 = sub_2268665A8(a1, (uint64_t)"%*s", a3, a4, a5, a6, a7, a8, v78);
          if ((v29 & 0x80000000) != 0) {
            return v29;
          }
          uint64_t result = sub_2268665A8(v48, (uint64_t)"+%04X: %s |%s|\n", v49, v50, v51, v52, v53, v54, v8 - a3);
          if ((result & 0x80000000) != 0) {
            return result;
          }
          uint64_t result = (v29 + v75 + result);
          a1 = v77;
          int v12 = v40;
        }
      }
    }
    else
    {
      unint64_t v19 = v11;
      uint64_t v20 = v12;
      int v21 = result;
      uint64_t v22 = a1;
      uint64_t v29 = sub_2268665A8(a1, (uint64_t)"%*s", a3, a4, a5, a6, a7, a8, v78);
      if ((v29 & 0x80000000) != 0) {
        return v29;
      }
      uint64_t result = sub_2268665A8(v22, (uint64_t)"%s |%s| (%zu bytes)\n", v23, v24, v25, v26, v27, v28, (uint64_t)v80);
      if ((result & 0x80000000) != 0) {
        return result;
      }
      uint64_t result = (v29 + v21 + result);
      a1 = v77;
      int v12 = v20;
      unint64_t v11 = v19;
    }
    v11 -= v15;
    if (!v11) {
      break;
    }
    v8 += v15;
    int v13 = v12;
    int v12 = v80;
  }
  if (v74 >= 1)
  {
    int v55 = result;
    uint64_t v56 = a1;
    uint64_t v29 = sub_2268665A8(a1, (uint64_t)"%*s", a3, a4, a5, a6, a7, a8, v78);
    if ((v29 & 0x80000000) != 0) {
      return v29;
    }
    uint64_t result = sub_2268665A8(v56, (uint64_t)"* (%d duplicate lines, %zu duplicate bytes)\n", v57, v58, v59, v60, v61, v62, (v74 + 1));
    if ((result & 0x80000000) != 0) {
      return result;
    }
    uint64_t result = (v29 + v55 + result);
    a1 = v77;
  }
  if (a4 <= a5) {
    return result;
  }
  int v63 = result;
  uint64_t v64 = a1;
  uint64_t v29 = sub_2268665A8(a1, (uint64_t)"%*s", a3, a4, a5, a6, a7, a8, v78);
  if ((v29 & 0x80000000) != 0) {
    return v29;
  }
  uint64_t result = sub_2268665A8(v64, (uint64_t)"... %zu more bytes ...\n", v65, v66, v67, v68, v69, v70, a4 - a5);
  if ((result & 0x80000000) == 0) {
    return (v29 + v63 + result);
  }
  return result;
}

uint64_t sub_2268665A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_226862B54(a1, a2, &a9);
}

uint64_t sub_2268665D4(uint64_t (**a1)(const char *, uint64_t, void), uint64_t a2, const char *a3, uint64_t a4)
{
  uint64_t v8 = (const char *)(a2 + 25);
  if (*(unsigned char *)(a2 + 25)) {
    int v9 = a4 + 1;
  }
  else {
    int v9 = a4;
  }
  unsigned int v10 = (const char *)(a2 + 26);
  if (*(unsigned char *)(a2 + 26)) {
    int v11 = v9 + 1;
  }
  else {
    int v11 = v9;
  }
  if ((*(unsigned char *)a2 & 1) == 0 && v11 < *(_DWORD *)(a2 + 8))
  {
    int v12 = 0;
    while (1)
    {
      uint64_t v13 = (*a1)(" ", 1, a1);
      if ((v13 & 0x80000000) != 0) {
        return v13;
      }
      ++v12;
      int v14 = *(_DWORD *)(a2 + 8) - 1;
      *(_DWORD *)(a2 + 8) = v14;
      if (v11 >= v14)
      {
        if (*v8) {
          goto LABEL_15;
        }
        goto LABEL_17;
      }
    }
  }
  int v12 = 0;
  if (*(unsigned char *)(a2 + 25))
  {
LABEL_15:
    uint64_t v13 = (*a1)(v8, 1, a1);
    if ((v13 & 0x80000000) != 0) {
      return v13;
    }
    ++v12;
  }
LABEL_17:
  uint64_t v13 = (*a1)(a3, a4, a1);
  if ((v13 & 0x80000000) != 0) {
    return v13;
  }
  uint64_t v15 = (v12 + a4);
  if (!*v10) {
    goto LABEL_21;
  }
  uint64_t v13 = (*a1)(v10, 1, a1);
  if ((v13 & 0x80000000) != 0) {
    return v13;
  }
  uint64_t v15 = (v15 + 1);
LABEL_21:
  if (v11 < *(_DWORD *)(a2 + 8))
  {
    while (1)
    {
      uint64_t v13 = (*a1)(" ", 1, a1);
      if ((v13 & 0x80000000) != 0) {
        break;
      }
      uint64_t v15 = (v15 + 1);
      if (++v11 >= *(_DWORD *)(a2 + 8)) {
        return v15;
      }
    }
    return v13;
  }
  return v15;
}

uint64_t sub_22686674C(uint64_t (***a1)(const char *, ...), const __CFString *a2, uint64_t a3, int a4)
{
  int v8 = *((unsigned __int8 *)a1[1] + 3);
  if (a3 || v8 != 1)
  {
    if (a3) {
      BOOL v10 = v8 == 2;
    }
    else {
      BOOL v10 = 0;
    }
    int v9 = v10;
  }
  else
  {
    int v9 = 1;
  }
  CFTypeID v11 = CFGetTypeID(a2);
  if (v11 == CFArrayGetTypeID())
  {
    uint64_t v18 = sub_2268665A8((uint64_t)*a1, (uint64_t)"%*s", v12, v13, v14, v15, v16, v17, (4 * *((_DWORD *)a1 + 4)));
    if ((v18 & 0x80000000) != 0) {
      return v18;
    }
    CFIndex Count = CFArrayGetCount((CFArrayRef)a2);
    uint64_t v20 = **a1;
    if (Count >= 1)
    {
      CFIndex v21 = Count;
      uint64_t v22 = v20("[\n", 2);
      if ((v22 & 0x80000000) == 0)
      {
        CFIndex v23 = 0;
        int v24 = v22 + v18;
        while (1)
        {
          CFStringRef ValueAtIndex = CFArrayGetValueAtIndex((CFArrayRef)a2, v23);
          ++*((_DWORD *)a1 + 4);
          uint64_t v18 = sub_22686674C(a1, ValueAtIndex, a3, 1);
          --*((_DWORD *)a1 + 4);
          if ((v18 & 0x80000000) != 0) {
            break;
          }
          uint64_t v22 = (**a1)("\n", 1);
          if ((v22 & 0x80000000) != 0) {
            return v22;
          }
          v24 += v18 + v22;
          if (v21 == ++v23)
          {
            uint64_t v18 = sub_2268665A8((uint64_t)*a1, (uint64_t)"%*s", v26, v27, v28, v29, v30, v31, (4 * *((_DWORD *)a1 + 4)));
            if ((v18 & 0x80000000) != 0) {
              return v18;
            }
            uint64_t v22 = (**a1)("]", 1);
            if ((v22 & 0x80000000) == 0)
            {
              int v32 = v18 + v24;
              return (v32 + v22);
            }
            return v22;
          }
        }
        return v18;
      }
      return v22;
    }
    uint64_t v39 = "[]";
    goto LABEL_34;
  }
  if (v11 == CFBooleanGetTypeID())
  {
    uint64_t v18 = sub_2268665A8((uint64_t)*a1, (uint64_t)"%*s", v33, v34, v35, v36, v37, v38, (4 * *((_DWORD *)a1 + 4)));
    if ((v18 & 0x80000000) != 0) {
      return v18;
    }
    if (!v9)
    {
      if ((const __CFString *)*MEMORY[0x263EFFB40] == a2) {
        uint64_t v52 = 4;
      }
      else {
        uint64_t v52 = 5;
      }
      if ((const __CFString *)*MEMORY[0x263EFFB40] == a2) {
        uint64_t v39 = "true";
      }
      else {
        uint64_t v39 = "false";
      }
      uint64_t v20 = **a1;
      goto LABEL_42;
    }
    uint64_t v20 = **a1;
    uint64_t v39 = "%b";
    goto LABEL_34;
  }
  if (v11 == CFDataGetTypeID())
  {
    if (!v9)
    {
      int v53 = *((_DWORD *)a1 + 4);
      unint64_t Length = CFDataGetLength((CFDataRef)a2);
      unint64_t v55 = Length;
      if (a4 || Length >= 0x11)
      {
        uint64_t v18 = (**a1)("\n", 1);
        if ((v18 & 0x80000000) != 0) {
          return v18;
        }
        int v56 = v53 + 1;
      }
      else
      {
        int v56 = 0;
        LODWORD(v18) = 0;
      }
      *((_DWORD *)a1 + 4) = v56;
      uint64_t v72 = (uint64_t)*a1;
      BytePtr = CFDataGetBytePtr((CFDataRef)a2);
      uint64_t v22 = sub_226866128(v72, v56, (uint64_t)BytePtr, v55, v55, v74, v75, v76);
      if ((v22 & 0x80000000) == 0)
      {
        uint64_t v18 = (v22 + v18);
        *((_DWORD *)a1 + 4) = v53;
        return v18;
      }
      return v22;
    }
    uint64_t v18 = sub_2268665A8((uint64_t)*a1, (uint64_t)"%*s", v40, v41, v42, v43, v44, v45, (4 * *((_DWORD *)a1 + 4)));
    if ((v18 & 0x80000000) != 0) {
      return v18;
    }
    uint64_t v20 = **a1;
    uint64_t v39 = "%D";
    goto LABEL_34;
  }
  if (v11 == CFDateGetTypeID())
  {
    uint64_t v18 = sub_2268665A8((uint64_t)*a1, (uint64_t)"%*s", v46, v47, v48, v49, v50, v51, (4 * *((_DWORD *)a1 + 4)));
    if ((v18 & 0x80000000) != 0) {
      return v18;
    }
    if (!v9)
    {
      LODWORD(valuePtr) = 0;
      LODWORD(v137) = 0;
      uint64_t v139 = 0;
      uint64_t v140 = 0;
      CFAllocatorRef Default = CFAllocatorGetDefault();
      CFCalendarRef v86 = CFCalendarCreateWithIdentifier(Default, (CFCalendarIdentifier)*MEMORY[0x263EFFC90]);
      if (v86)
      {
        int v93 = v86;
        MEMORY[0x22A659DD0](a2);
        CFCalendarDecomposeAbsoluteTime(v93, v94, "yMdHms", &valuePtr, &v137, (char *)&v140 + 4, &v140, (char *)&v139 + 4, &v139);
        CFRelease(v93);
        uint64_t v95 = valuePtr;
      }
      else
      {
        uint64_t v95 = 0;
      }
      LODWORD(v22) = sub_2268665A8((uint64_t)*a1, (uint64_t)"%04d-%02d-%02d %02d:%02d:%02d", v87, v88, v89, v90, v91, v92, v95);
      goto LABEL_43;
    }
    uint64_t v20 = **a1;
    uint64_t v39 = "%T";
    goto LABEL_34;
  }
  if (v11 == CFDictionaryGetTypeID())
  {
    uint64_t v18 = sub_2268665A8((uint64_t)*a1, (uint64_t)"%*s", v57, v58, v59, v60, v61, v62, (4 * *((_DWORD *)a1 + 4)));
    if ((v18 & 0x80000000) != 0) {
      return v18;
    }
    CFIndex v63 = CFDictionaryGetCount((CFDictionaryRef)a2);
    uint64_t v20 = **a1;
    if (v63 >= 1)
    {
      uint64_t v22 = v20("{\n", 2);
      if ((v22 & 0x80000000) != 0) {
        return v22;
      }
      ++*((_DWORD *)a1 + 4);
      *((_DWORD *)a1 + 5) = v22 + v18;
      CFDictionaryApplyFunction((CFDictionaryRef)a2, (CFDictionaryApplierFunction)sub_226866F08, a1);
      uint64_t v18 = *((unsigned int *)a1 + 6);
      if ((v18 & 0x80000000) != 0) {
        return v18;
      }
      int v70 = *((_DWORD *)a1 + 5);
      int v71 = *((_DWORD *)a1 + 4) - 1;
      *((_DWORD *)a1 + 4) = v71;
      uint64_t v18 = sub_2268665A8((uint64_t)*a1, (uint64_t)"%*s", v64, v65, v66, v67, v68, v69, (4 * v71));
      if ((v18 & 0x80000000) != 0) {
        return v18;
      }
      uint64_t v22 = (**a1)("}", 1);
      if ((v22 & 0x80000000) != 0) {
        return v22;
      }
      int v32 = v18 + v70;
      return (v32 + v22);
    }
    uint64_t v39 = "{}";
LABEL_34:
    uint64_t v52 = 2;
LABEL_42:
    LODWORD(v22) = v20(v39, v52);
    goto LABEL_43;
  }
  if (v11 == CFNumberGetTypeID())
  {
    uint64_t v83 = sub_2268665A8((uint64_t)*a1, (uint64_t)"%*s", v77, v78, v79, v80, v81, v82, (4 * *((_DWORD *)a1 + 4)));
    int v84 = v83;
    if ((v83 & 0x80000000) != 0) {
      return v83;
    }
    if (v9)
    {
      LODWORD(v22) = (**a1)("%i", usedBufLen);
    }
    else
    {
      CFIndex valuePtr = 0;
      if (!CFNumberGetValue((CFNumberRef)a2, kCFNumberSInt64Type, &valuePtr))
      {
        uint64_t v137 = 0;
        int Value = CFNumberGetValue((CFNumberRef)a2, kCFNumberDoubleType, &v137);
        uint64_t v134 = (uint64_t)*a1;
        if (Value) {
          uint64_t v135 = sub_2268665A8(v134, (uint64_t)"%f", v127, v128, v129, v130, v131, v132, v137);
        }
        else {
          uint64_t v135 = sub_2268665A8(v134, (uint64_t)"<< BAD NUMBER >>", v127, v128, v129, v130, v131, v132, (uint64_t)usedBufLen);
        }
        uint64_t v18 = v135;
        if ((v135 & 0x80000000) == 0) {
          return (v135 + v84);
        }
        return v18;
      }
      LODWORD(v22) = sub_2268665A8((uint64_t)*a1, (uint64_t)"%lld", v114, v115, v116, v117, v118, v119, valuePtr);
    }
    if ((int)v22 >= 0) {
      int v32 = v84;
    }
    else {
      int v32 = 0;
    }
    return (v32 + v22);
  }
  CFTypeID TypeID = CFStringGetTypeID();
  uint64_t v103 = sub_2268665A8((uint64_t)*a1, (uint64_t)"%*s", v97, v98, v99, v100, v101, v102, (4 * *((_DWORD *)a1 + 4)));
  uint64_t v18 = v103;
  if (v11 != TypeID)
  {
    if ((v103 & 0x80000000) != 0) {
      return v18;
    }
    CFStringRef v110 = CFCopyDescription(a2);
    uint64_t v111 = (uint64_t)*a1;
    if (v110)
    {
      int v112 = sub_2268665A8(v111, (uint64_t)"%@", v104, v105, v106, v107, v108, v109, (uint64_t)v110);
      CFRelease(v110);
      if (v112 >= 0) {
        int v113 = v18;
      }
      else {
        int v113 = 0;
      }
      return (v113 + v112);
    }
    LODWORD(v22) = sub_2268665A8(v111, (uint64_t)"<<UNKNOWN CF OBJECT TYPE: %d>>", v104, v105, v106, v107, v108, v109, v11);
    goto LABEL_43;
  }
  if ((v103 & 0x80000000) != 0) {
    return v18;
  }
  if (v9)
  {
    uint64_t v20 = **a1;
    if (!a3)
    {
      uint64_t v39 = "%ks";
      uint64_t v52 = 3;
      goto LABEL_42;
    }
    uint64_t v39 = "%s";
    goto LABEL_34;
  }
  if (a3)
  {
    uint64_t v22 = (**a1)("\"", 1);
    if ((v22 & 0x80000000) != 0) {
      return v22;
    }
    uint64_t v18 = (v22 + v18);
  }
  CFIndex v120 = CFStringGetLength(a2);
  size_t MaximumSizeForEncoding = CFStringGetMaximumSizeForEncoding(v120, 0x8000100u);
  if (MaximumSizeForEncoding)
  {
    CFIndex v122 = MaximumSizeForEncoding;
    uint64_t v123 = (UInt8 *)malloc_type_malloc(MaximumSizeForEncoding, 0x874C834EuLL);
    if (!v123) {
      return 4294960568;
    }
    v124 = v123;
    CFIndex valuePtr = 0;
    v141.location = 0;
    v141.CFIndex length = v120;
    CFStringGetBytes(a2, v141, 0x8000100u, 0x5Eu, 0, v123, v122, &valuePtr);
    uint64_t v125 = (**a1)((const char *)v124, valuePtr);
    free(v124);
    if ((v125 & 0x80000000) != 0) {
      return v125;
    }
    uint64_t v18 = (v125 + v18);
  }
  if (a3)
  {
    LODWORD(v22) = (**a1)("\"", 1);
LABEL_43:
    if ((int)v22 >= 0) {
      int v32 = v18;
    }
    else {
      int v32 = 0;
    }
    return (v32 + v22);
  }
  return v18;
}

uint64_t sub_226866F08(uint64_t result, const void *a2, uint64_t a3)
{
  if (*(_DWORD *)(a3 + 24)) {
    return result;
  }
  uint64_t result = sub_22686674C(a3, result, 0, 0);
  int v5 = result;
  if ((result & 0x80000000) != 0) {
    goto LABEL_22;
  }
  uint64_t result = (**(uint64_t (***)(const char *, uint64_t))a3)("=", 1);
  if ((result & 0x80000000) != 0)
  {
LABEL_21:
    int v5 = result;
    goto LABEL_22;
  }
  int v6 = result + v5;
  CFTypeID v7 = CFGetTypeID(a2);
  if (v7 == CFArrayGetTypeID())
  {
    CFIndex Count = CFArrayGetCount((CFArrayRef)a2);
    int v9 = **(uint64_t (***)(const char *, uint64_t))a3;
    if (Count >= 1)
    {
      uint64_t result = v9("\n", 1);
      int v5 = result;
      if ((result & 0x80000000) == 0)
      {
        uint64_t v10 = a3;
        CFTypeID v11 = a2;
        uint64_t v12 = 1;
LABEL_12:
        uint64_t result = sub_22686674C(v10, v11, 1, v12);
        int v14 = result;
        if ((result & 0x80000000) != 0)
        {
          int v5 = result;
          goto LABEL_22;
        }
        uint64_t result = (**(uint64_t (***)(const char *, uint64_t))a3)("\n", 1);
        if ((result & 0x80000000) == 0)
        {
          int v15 = v5 + v6 + v14 + result;
LABEL_20:
          *(_DWORD *)(a3 + 20) += v15;
          return result;
        }
        goto LABEL_21;
      }
      goto LABEL_22;
    }
    uint64_t v17 = "[]\n";
LABEL_28:
    uint64_t result = v9(v17, 3);
    goto LABEL_29;
  }
  if (v7 == CFDictionaryGetTypeID())
  {
    CFIndex v13 = CFDictionaryGetCount((CFDictionaryRef)a2);
    int v9 = **(uint64_t (***)(const char *, uint64_t))a3;
    if (v13 >= 1)
    {
      uint64_t result = v9("\n", 1);
      int v5 = result;
      if ((result & 0x80000000) == 0)
      {
        uint64_t v10 = a3;
        CFTypeID v11 = a2;
        uint64_t v12 = 0;
        goto LABEL_12;
      }
LABEL_22:
      *(_DWORD *)(a3 + 20) += v5;
LABEL_23:
      *(_DWORD *)(a3 + 24) = v5;
      return result;
    }
    uint64_t v17 = "{}\n";
    goto LABEL_28;
  }
  if (v7 != CFDataGetTypeID() || *(unsigned char *)(*(void *)(a3 + 8) + 3) == 2)
  {
    int v16 = *(_DWORD *)(a3 + 16);
    *(_DWORD *)(a3 + 16) = 0;
    uint64_t result = sub_22686674C(a3, a2, 1, 0);
    int v5 = result;
    if ((result & 0x80000000) != 0) {
      goto LABEL_22;
    }
    *(_DWORD *)(a3 + 16) = v16;
    uint64_t result = (**(uint64_t (***)(const char *, uint64_t))a3)("\n", 1);
    if ((result & 0x80000000) == 0)
    {
      int v15 = v5 + v6 + result;
      goto LABEL_20;
    }
    goto LABEL_21;
  }
  uint64_t result = sub_22686674C(a3, a2, 1, 0);
LABEL_29:
  int v5 = result;
  if ((int)result >= 0) {
    int v18 = v6;
  }
  else {
    int v18 = 0;
  }
  *(_DWORD *)(a3 + 20) += result + v18;
  if ((result & 0x80000000) != 0) {
    goto LABEL_23;
  }
  return result;
}

unsigned char *sub_22686714C(unsigned int a1, unsigned int a2, unsigned char *a3)
{
  unsigned int v3 = 1;
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t v4 = a3;
  do
  {
    unsigned int v5 = (a1 >> (-8 * v3));
    int v6 = v12;
    do
    {
      *v6++ = (v5 % 0xA) | 0x30;
      BOOL v7 = v5 > 9;
      v5 /= 0xAu;
    }
    while (v7);
    while (v6 > v12)
    {
      char v8 = *--v6;
      *v4++ = v8;
    }
    if (v3 <= 3) {
      *v4++ = 46;
    }
    ++v3;
  }
  while (v3 != 5);
  if ((int)a2 >= 1)
  {
    *uint64_t v4 = 58;
    int v9 = v12;
    do
    {
      *v9++ = (a2 % 0xA) | 0x30;
      BOOL v7 = a2 > 9;
      a2 /= 0xAu;
    }
    while (v7);
    ++v4;
    while (v9 > v12)
    {
      char v10 = *--v9;
      *v4++ = v10;
    }
  }
  *uint64_t v4 = 0;
  return a3;
}

char *sub_226867274(unsigned char *a1, unsigned int a2, int a3, char *a4)
{
  unsigned int v5 = a3;
  unsigned int v6 = a2;
  uint64_t v45 = *MEMORY[0x263EF8340];
  BOOL v7 = a4;
  if (a3 >= 1)
  {
    *a4 = 91;
    BOOL v7 = a4 + 1;
  }
  if (*a1 || a1[1]) {
    goto LABEL_25;
  }
  if (!a1[2]
    && !a1[3]
    && !a1[4]
    && !a1[5]
    && !a1[6]
    && !a1[7]
    && !a1[8]
    && !a1[9]
    && a1[10] == 255
    && a1[11] == 255)
  {
    *(_WORD *)BOOL v7 = 14906;
    uint64_t v37 = v7 + 6;
    *(_DWORD *)(v7 + 2) = 1717986918;
    v7 += 7;
    goto LABEL_81;
  }
  if (a1[2]
    || a1[3]
    || a1[4]
    || a1[5]
    || a1[6]
    || a1[7]
    || a1[8]
    || a1[9]
    || a1[10]
    || a1[11]
    || !a1[12] && !a1[13] && (!a1[14] && !a1[15] || !a1[14] && a1[15] == 1))
  {
LABEL_25:
    unint64_t v8 = 0;
    int v9 = v43;
    while (1)
    {
      uint64_t v10 = v8 | 1;
      unint64_t v11 = a1[v8];
      if (v11 >= 0x10)
      {
        *int v9 = a0123456789abcd[v11 >> 4];
        LODWORD(v11) = v11 & 0xF;
        uint64_t v12 = 1;
      }
      else
      {
        if (!a1[v8])
        {
          uint64_t v14 = 0;
          uint64_t v16 = 0;
          v8 += 2;
          unsigned int v15 = a1[v10];
          if (v15 < 0x10) {
            goto LABEL_32;
          }
          goto LABEL_31;
        }
        uint64_t v12 = 0;
      }
      char v13 = a0123456789abcd[v11];
      uint64_t v14 = v12 + 1;
      v9[v12] = v13;
      v8 += 2;
      unsigned int v15 = a1[v10];
LABEL_31:
      uint64_t v16 = v14 + 1;
      v9[v14] = a0123456789abcd[(unint64_t)v15 >> 4];
LABEL_32:
      *(_WORD *)&v9[v16] = a0123456789abcd[v15 & 0xF];
      v9 += 5;
      if (v8 >= 0x10)
      {
        int v17 = 0;
        int v18 = a1 + 15;
        for (uint64_t i = 28; i != -4; i -= 4)
        {
          if (*(v18 - 1))
          {
            int v17 = 0;
          }
          else if (*v18)
          {
            int v17 = 0;
          }
          else
          {
            ++v17;
          }
          *(_DWORD *)&v42[i] = v17;
          v18 -= 2;
        }
        uint64_t v20 = 0;
        int v21 = 0;
        int v22 = -1;
        do
        {
          if (*(_DWORD *)&v42[4 * v20] > v21)
          {
            int v21 = *(_DWORD *)&v42[4 * v20];
            int v22 = v20;
          }
          ++v20;
        }
        while (v20 != 8);
        int v23 = 0;
        while (1)
        {
          if (v23 == v22)
          {
            if (!v22) {
              *v7++ = 58;
            }
            *BOOL v7 = 58;
            int v23 = v22 - 1 + *(_DWORD *)&v42[4 * v22];
          }
          else
          {
            char v24 = v43[5 * v23];
            if (v24)
            {
              uint64_t v25 = &v43[5 * v23 + 1];
              do
              {
                *v7++ = v24;
                int v26 = *v25++;
                char v24 = v26;
              }
              while (v26);
            }
            if (v23 == 7) {
              goto LABEL_57;
            }
            *BOOL v7 = 58;
          }
          ++v7;
          BOOL v27 = v23++ < 7;
          if (!v27) {
            goto LABEL_57;
          }
        }
      }
    }
  }
  uint64_t v37 = v7 + 1;
  *BOOL v7 = 58;
  v7 += 2;
LABEL_81:
  uint64_t v38 = 12;
  *uint64_t v37 = 58;
  while (1)
  {
    unsigned int v39 = a1[v38];
    uint64_t v40 = v44;
    do
    {
      *v40++ = (v39 % 0xA) | 0x30;
      BOOL v27 = v39 > 9;
      v39 /= 0xAu;
    }
    while (v27);
    while (v40 > v44)
    {
      char v41 = *--v40;
      *v7++ = v41;
    }
    if (v38 == 15) {
      break;
    }
    *v7++ = 46;
    ++v38;
  }
LABEL_57:
  if (a2)
  {
    *v7++ = 37;
    uint64_t v28 = if_indextoname(a2, v44);
    if (v28)
    {
      char v29 = *v28;
      if (*v28)
      {
        uint64_t v30 = (unsigned __int8 *)(v28 + 1);
        do
        {
          *v7++ = v29;
          int v31 = *v30++;
          char v29 = v31;
        }
        while (v31);
      }
    }
    else
    {
      uint64_t v35 = v44;
      do
      {
        *v35++ = (v6 % 0xA) | 0x30;
        BOOL v27 = v6 > 9;
        v6 /= 0xAu;
      }
      while (v27);
      while (v35 > v44)
      {
        char v36 = *--v35;
        *v7++ = v36;
      }
    }
  }
  if ((int)v5 >= 1)
  {
    *(_WORD *)BOOL v7 = 14941;
    int v32 = v44;
    do
    {
      *v32++ = (v5 % 0xA) | 0x30;
      BOOL v27 = v5 > 9;
      v5 /= 0xAu;
    }
    while (v27);
    v7 += 2;
    while (v32 > v44)
    {
      char v33 = *--v32;
      *v7++ = v33;
    }
  }
  *BOOL v7 = 0;
  return a4;
}

uint64_t sub_2268676EC(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a4 < 1) {
    return 0;
  }
  LODWORD(v9) = 0;
  uint64_t v10 = (4 * *(_DWORD *)(a2 + 8) + 8);
  unint64_t v11 = &a3[a4];
  while (1)
  {
    if ((unint64_t)(v11 - a3) <= 1)
    {
      int v16 = sub_2268665A8(a1, (uint64_t)"### EasyConnect IE too small for header:\n%2.1H\n", (uint64_t)a3, a4, a5, a6, a7, a8, (uint64_t)a3);
      goto LABEL_16;
    }
    unint64_t v12 = (unint64_t)&a3[a3[1] + 2];
    if (v12 > (unint64_t)v11) {
      break;
    }
    switch(*a3)
    {
      case 0:
      case 1:
      case 5:
        uint64_t v18 = v10;
        goto LABEL_8;
      case 3:
        uint64_t v18 = v10;
LABEL_8:
        uint64_t v13 = a1;
        uint64_t v14 = "%*s%-*s '%.*s'\n";
        break;
      default:
        uint64_t v18 = v10;
        uint64_t v13 = a1;
        uint64_t v14 = "%*s%-*s %3.2H";
        break;
    }
    uint64_t result = sub_2268665A8(v13, (uint64_t)v14, (uint64_t)a3, a4, a5, a6, a7, a8, v18);
    if ((result & 0x80000000) == 0)
    {
      uint64_t v9 = (result + v9);
      a3 = (unsigned char *)v12;
      uint64_t result = v9;
      if (v12 < (unint64_t)v11) {
        continue;
      }
    }
    return result;
  }
  int v16 = sub_2268665A8(a1, (uint64_t)"### EasyConnect IE bad length:\n%2.1H\n", (uint64_t)a3, a4, a5, a6, a7, a8, (uint64_t)a3);
LABEL_16:
  if (v16 >= 0) {
    int v17 = v9;
  }
  else {
    int v17 = 0;
  }
  return (v17 + v16);
}

uint64_t sub_22686790C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a4 < 1) {
    return 0;
  }
  LODWORD(v9) = 0;
  uint64_t v10 = (4 * *(_DWORD *)(a2 + 8) + 8);
  unint64_t v11 = a3 + a4;
  while (1)
  {
    if (v11 - a3 <= 3)
    {
      int v15 = sub_2268665A8(a1, (uint64_t)"### WPS TLV too small for header:\n%2.1H\n", a3, a4, a5, a6, a7, a8, a3);
      goto LABEL_14;
    }
    unint64_t v12 = a3 + 4 + __rev16(*(unsigned __int16 *)(a3 + 2));
    if (v12 < a3 || v12 > v11) {
      break;
    }
    uint64_t result = sub_2268665A8(a1, (uint64_t)"%*s%-*s %3.2H", a3, a4, a5, a6, a7, a8, v10);
    if ((result & 0x80000000) == 0)
    {
      uint64_t v9 = (result + v9);
      a3 = v12;
      uint64_t result = v9;
      if (v12 < v11) {
        continue;
      }
    }
    return result;
  }
  int v15 = sub_2268665A8(a1, (uint64_t)"### WPS TLV bad length:\n%2.1H\n", a3, a4, a5, a6, a7, a8, a3);
LABEL_14:
  if (v15 >= 0) {
    int v16 = v9;
  }
  else {
    int v16 = 0;
  }
  return (v16 + v15);
}

uint64_t sub_226867A58(unsigned char *a1, unsigned char *a2)
{
  uint64_t v2 = a2;
  if (*a1 == 94)
  {
    uint64_t v4 = a1 + 1;
    return sub_226867AD0(v4, a2);
  }
  else
  {
    while (!sub_226867AD0(a1, v2))
    {
      if (!*v2++) {
        return 0;
      }
    }
    return 1;
  }
}

uint64_t sub_226867AD0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  if (*a1)
  {
    for (uint64_t i = a1 + 2; ; ++i)
    {
      int v5 = *(i - 1);
      if (v5 == 42) {
        break;
      }
      int v6 = *a2;
      if (v2 == 36 && !*(i - 1)) {
        return v6 == 0;
      }
      if (!*a2 || v2 != 46 && v2 != v6) {
        return 0;
      }
      ++a2;
      int v2 = v5;
      if (!v5) {
        return 1;
      }
    }
    while (1)
    {
      uint64_t result = sub_226867AD0(i, a2);
      if (result) {
        break;
      }
      int v8 = *a2++;
      int v7 = v8;
      BOOL v10 = v2 == 46 || v7 == v2;
      if (!v7 || !v10) {
        return result;
      }
    }
  }
  return 1;
}

os_log_t sub_226867B88()
{
  os_log_t result = os_log_create("com.apple.airportutility", "general");
  qword_268148290 = (uint64_t)result;
  return result;
}

uint64_t sub_226867BB8(uint64_t a1, char *__s1)
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  int v3 = *__s1;
  if (!*__s1 || (uint64_t v4 = (unsigned __int8 *)__s1, !strcmp(__s1, "stderr")))
  {
    uint64_t v47 = (FILE **)MEMORY[0x263EF8348];
  }
  else
  {
    if (strcmp((const char *)v4, "stdout"))
    {
      while (1)
      {
        int v5 = v4;
        if (!v3) {
          return 4294960554;
        }
        while (v3 != 61)
        {
          int v6 = *++v5;
          int v3 = v6;
          if (!v6) {
            return 4294960554;
          }
        }
        int v7 = v5 + 1;
        uint64_t v8 = -1;
        for (size_t i = 1; v5[i] && v5[i] != 59; ++i)
          ++v8;
        BOOL v10 = &v5[i];
        if (v5[i]) {
          unint64_t v11 = v10 + 1;
        }
        else {
          unint64_t v11 = &v5[i];
        }
        uint64_t v48 = v11;
        if (sub_226865768(v4, v5 - v4, "path"))
        {
          if (sub_226865768(v4, v5 - v4, "roll"))
          {
            if (sub_226865768(v4, v5 - v4, "backup")) {
              return 4294960561;
            }
            if (i < 2)
            {
              BOOL v14 = 0;
              size_t v12 = 1;
              uint64_t v13 = v5 + 1;
LABEL_39:
              if (v12 != i && *v13 != 35) {
                return 4294960591;
              }
            }
            else
            {
              if (*v7 == 35)
              {
                size_t v12 = 1;
                uint64_t v13 = v5 + 1;
                BOOL v14 = 1;
                goto LABEL_39;
              }
              uint64_t v27 = 2;
              while (v8)
              {
                int v28 = v5[v27];
                --v8;
                ++v27;
                if (v28 == 35)
                {
                  size_t v12 = v27 - 1;
                  BOOL v14 = v27 - 1 < i;
                  uint64_t v13 = &v5[v27 - 1];
                  goto LABEL_39;
                }
              }
              BOOL v14 = 0;
              uint64_t v13 = &v5[v27];
              size_t v12 = i;
            }
            size_t v37 = v12 - 1;
            if (v12 == 1)
            {
              uint64_t v38 = 0;
            }
            else
            {
              unsigned int v39 = malloc_type_malloc(v12, 0xF7BB2B65uLL);
              if (!v39) {
                return 4294960568;
              }
              uint64_t v38 = v39;
              memcpy(v39, v7, v37);
              v38[v37] = 0;
            }
            uint64_t v40 = *(void **)(a1 + 80);
            if (v40) {
              free(v40);
            }
            *(void *)(a1 + 80) = v38;
            char v41 = &v13[v14];
            if (v41 >= v10)
            {
              int v42 = 0;
            }
            else
            {
              int v42 = 0;
              do
              {
                int v43 = *v41;
                if ((v43 - 48) > 9) {
                  break;
                }
                int v42 = (char)v43 + 10 * v42 - 48;
                ++v41;
              }
              while (v41 < v10);
            }
            if (v10 != v41) {
              return 4294960591;
            }
            *(_DWORD *)(a1 + 88) = v42;
            goto LABEL_95;
          }
          if (i < 2)
          {
            uint64_t v24 = 0;
          }
          else
          {
            uint64_t v24 = 0;
            while (1)
            {
              int v25 = *v7;
              int v26 = (char)v25;
              if ((v25 - 48) > 9) {
                break;
              }
              uint64_t v24 = (char)v25 + 10 * v24 - 48;
              if (++v7 >= v10) {
                goto LABEL_62;
              }
            }
            uint64_t v29 = v24 << 10;
            uint64_t v30 = v24 << 20;
            if (v25 == 77) {
              int v31 = v7 + 1;
            }
            else {
              int v31 = v7;
            }
            if (v25 != 77) {
              uint64_t v30 = v24;
            }
            BOOL v32 = v25 == 75;
            if (v25 == 75) {
              char v33 = v7 + 1;
            }
            else {
              char v33 = v31;
            }
            if (!v32) {
              uint64_t v29 = v30;
            }
            if (v26 == 66) {
              ++v7;
            }
            else {
              int v7 = v33;
            }
            if (v26 != 66) {
              uint64_t v24 = v29;
            }
          }
LABEL_62:
          if (v10 != v7 && *v7 != 35) {
            return 4294960591;
          }
          *(void *)(a1 + 64) = v24;
          uint64_t v34 = v7 >= v10 ? v7 : v7 + 1;
          if (v34 >= v10)
          {
            int v35 = 0;
          }
          else
          {
            int v35 = 0;
            do
            {
              int v36 = *v34;
              if ((v36 - 48) > 9) {
                break;
              }
              int v35 = (char)v36 + 10 * v35 - 48;
              ++v34;
            }
            while (v34 < v10);
          }
          if (v10 != v34) {
            return 4294960591;
          }
          *(_DWORD *)(a1 + 72) = v35;
        }
        else
        {
          if (i == 1) {
            return 4294960592;
          }
          int v15 = (char *)malloc_type_malloc(i, 0x5C4A2E0DuLL);
          if (!v15) {
            return 4294960568;
          }
          int v16 = v15;
          memcpy(v15, v7, i - 1);
          v16[i - 1] = 0;
          int v17 = *(void **)(a1 + 40);
          if (v17) {
            free(v17);
          }
          *(void *)(a1 + 40) = v16;
          uint64_t v18 = strrchr(v16, 47);
          if (v18)
          {
            int64_t v19 = v18 - v16;
            if ((unint64_t)(v18 - v16) > 0x400) {
              return 4294960592;
            }
            __memcpy_chk();
            v50[v19] = 0;
            memset(&v49, 0, sizeof(v49));
            uint64_t v20 = v51;
            __strlcpy_chk();
            while (1)
            {
              int v21 = &v20[strspn(v20, "/")];
              uint64_t v20 = (char *)&v21[strcspn(v21, "/")];
              int v22 = *v20;
              *uint64_t v20 = 0;
              if (mkdir(v51, 0x1F8u) < 0)
              {
                int v23 = *__error();
                if (stat(v51, &v49) < 0) {
                  goto LABEL_91;
                }
                if ((v49.st_mode & 0xF000) != 0x4000) {
                  break;
                }
              }
              if (!v22) {
                goto LABEL_92;
              }
              *uint64_t v20 = 47;
            }
            int v23 = 20;
LABEL_91:
            *__error() = v23;
LABEL_92:
            int v16 = *(char **)(a1 + 40);
          }
          uint64_t v44 = fopen(v16, "a");
          *(void *)(a1 + 48) = v44;
          if (!v44) {
            return 4294960541;
          }
          fseeko(v44, 0, 2);
          *(void *)(a1 + 56) = ftello(*(FILE **)(a1 + 48));
        }
LABEL_95:
        uint64_t v4 = v48;
        int v3 = *v48;
        if (!*v48)
        {
          uint64_t v45 = *(FILE **)(a1 + 48);
          if (v45) {
            goto LABEL_100;
          }
          return 4294960591;
        }
      }
    }
    uint64_t v47 = (FILE **)MEMORY[0x263EF8358];
  }
  uint64_t v45 = *v47;
  *(void *)(a1 + 48) = *v47;
LABEL_100:
  setvbuf(v45, 0, 2, 0);
  uint64_t result = 0;
  *(void *)(a1 + 24) = sub_226868438;
  *(_DWORD *)(a1 + 32) = 2;
  return result;
}

uint64_t sub_2268680F0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  *(_DWORD *)(a1 + 40) = -1;
  int v3 = *a2;
  if (*a2)
  {
    uint64_t v4 = a2;
    while (1)
    {
      uint64_t v5 = 1;
      if (!v3) {
        return 4294960554;
      }
      while (v3 != 61)
      {
        int v3 = v4[v5++];
        if (!v3) {
          return 4294960554;
        }
      }
      unint64_t v6 = 0;
      int v7 = &v4[v5];
      while (1)
      {
        int v8 = v7[v6];
        if (!v7[v6] || v8 == 59) {
          break;
        }
        ++v6;
      }
      if (sub_226865768(v4, v5 - 1, "level")) {
        return 4294960561;
      }
      if (v8) {
        uint64_t v9 = v4 + 1;
      }
      else {
        uint64_t v9 = v4;
      }
      uint64_t v4 = &v9[v5 + v6];
      if (v6 >= 0x1F) {
        uint64_t v10 = 31;
      }
      else {
        uint64_t v10 = v6;
      }
      __memcpy_chk();
      __s1[v10] = 0;
      *(_DWORD *)(a1 + 40) = sub_226865D38(__s1);
      int v3 = *v4;
      if (!*v4) {
        goto LABEL_19;
      }
    }
  }
  else
  {
LABEL_19:
    uint64_t result = 0;
    *(void *)(a1 + 24) = sub_22686881C;
    *(_DWORD *)(a1 + 32) = 6;
  }
  return result;
}

uint64_t sub_22686824C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v14 = 0;
  *(void *)(a1 + 40) = 0;
  int v3 = (void *)(a1 + 40);
  *(void *)(a1 + 48) = 0;
  uint64_t v4 = a1 + 48;
  int v5 = *a2;
  if (!*a2)
  {
LABEL_23:
    uint64_t result = 0;
    *(void *)(a1 + 24) = sub_2268688F4;
    *(_DWORD *)(a1 + 32) = 11;
    return result;
  }
  unint64_t v6 = a2;
  int v7 = "func";
  while (1)
  {
    uint64_t v8 = 1;
    if (!v5) {
      return 4294960554;
    }
    while (v5 != 61)
    {
      int v5 = v6[v8++];
      if (!v5) {
        return 4294960554;
      }
    }
    unint64_t v9 = 0;
    uint64_t v10 = &v6[v8];
    while (v10[v9] && v10[v9] != 59)
      ++v9;
    uint64_t v11 = (uint64_t)(v10[v9] ? v6 + 1 : v6);
    size_t v12 = v7;
    if (sub_226865768(v6, v8 - 1, v7)) {
      break;
    }
    if (v9 > 0x3F) {
      return 4294960553;
    }
    __memcpy_chk();
    v15[v9] = 0;
    if (sscanf(v15, "%p", &v14) != 1) {
      return 4294960554;
    }
    *int v3 = v14;
LABEL_22:
    unint64_t v6 = (unsigned __int8 *)(v11 + v8 + v9);
    int v5 = *v6;
    int v7 = v12;
    if (!*v6) {
      goto LABEL_23;
    }
  }
  if (!sub_226865768(v6, v8 - 1, "arg"))
  {
    if (v9 > 0x3F) {
      return 4294960553;
    }
    __memcpy_chk();
    v15[v9] = 0;
    if (sscanf(v15, "%p", v4) != 1) {
      return 4294960554;
    }
    goto LABEL_22;
  }
  return 4294960561;
}

FILE *sub_226868438(uint64_t a1, const void *a2, size_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v58 = *MEMORY[0x263EF8340];
  uint64_t v10 = *(void *)(*(void *)a1 + 56);
  uint64_t result = *(FILE **)(v10 + 48);
  size_t v12 = (FILE **)MEMORY[0x263EF8348];
  uint64_t v13 = (FILE **)MEMORY[0x263EF8358];
  if (result != (FILE *)*MEMORY[0x263EF8348] && result != (FILE *)*MEMORY[0x263EF8358])
  {
    uint64_t v15 = *(void *)(v10 + 64);
    uint64_t v16 = *(void *)(v10 + 56) + a3;
    *(void *)(v10 + 56) = v16;
    if (v15 >= 1 && v16 > v15)
    {
      if (*(void *)(v10 + 80))
      {
        int v18 = *(_DWORD *)(v10 + 88);
        BOOL v19 = __OFSUB__(v18, 1);
        uint64_t v20 = (v18 - 1);
        if ((int)v20 < 0 == v19)
        {
          sub_226862A3C((uint64_t)&__p, 1025, "%s.%d", a4, a5, a6, a7, a8, *(void *)(v10 + 80), v20);
          remove(&__p, v21);
          int v27 = *(_DWORD *)(v10 + 88);
          if (v27 >= 3)
          {
            uint64_t v28 = (v27 - 2);
            do
            {
              sub_226862A3C((uint64_t)&__p, 1025, "%s.%d", v22, v23, v24, v25, v26, *(void *)(v10 + 80), v28);
              sub_226862A3C((uint64_t)&__to, 1025, "%s.%d", v29, v30, v31, v32, v33, *(void *)(v10 + 80), (v28 + 1));
              rename(&__p, &__to, v34);
              BOOL v35 = v28 != 0;
              uint64_t v28 = (v28 - 1);
            }
            while (v28 != 0 && v35);
          }
          sub_226862A3C((uint64_t)&__to, 1025, "%s.1", v22, v23, v24, v25, v26, *(void *)(v10 + 80));
          rename(*(const std::__fs::filesystem::path **)(v10 + 80), &__to, v36);
          sub_226862A3C((uint64_t)&__to, 1025, "%s", v37, v38, v39, v40, v41, *(void *)(v10 + 80));
          int v42 = *(const char **)(v10 + 40);
          int v43 = malloc_type_malloc(0x1000uLL, 0x30F77872uLL);
          if (v43)
          {
            uint64_t v44 = v43;
            uint64_t v45 = fopen(v42, "r");
            if (v45 || *__error() && !*__error())
            {
              uint64_t v46 = fopen((const char *)&__to, "w");
              if (v46 || *__error() && !*__error())
              {
                do
                  size_t v47 = fread(v44, 1uLL, 0x1000uLL, v45);
                while (v47 && (fwrite(v44, 1uLL, v47, v46) == v47 || *__error() && !*__error()));
              }
              if (v45) {
                fclose(v45);
              }
              if (v46) {
                fclose(v46);
              }
            }
            free(v44);
          }
        }
      }
      uint64_t v48 = *(FILE **)(v10 + 48);
      if (v48)
      {
        fwrite("\nLOG ENDED, CONTINUES IN NEXT LOG FILE\n", 0x27uLL, 1uLL, v48);
        fclose(*(FILE **)(v10 + 48));
        *(void *)(v10 + 48) = 0;
      }
      snprintf((char *)&__p, 0x401uLL, "%s.%d", *(const char **)(v10 + 40), *(_DWORD *)(v10 + 72) - 1);
      remove(&__p, v49);
      int v50 = *(_DWORD *)(v10 + 72);
      if (v50 >= 3)
      {
        int v51 = v50 - 2;
        do
        {
          snprintf((char *)&__p, 0x401uLL, "%s.%d", *(const char **)(v10 + 40), v51);
          snprintf((char *)&__to, 0x401uLL, "%s.%d", *(const char **)(v10 + 40), v51 + 1);
          rename(&__p, &__to, v52);
          BOOL v35 = v51-- != 0;
        }
        while (v51 != 0 && v35);
      }
      snprintf((char *)&__to, 0x401uLL, "%s.%d", *(const char **)(v10 + 40), 1);
      rename(*(const std::__fs::filesystem::path **)(v10 + 40), &__to, v53);
      uint64_t v54 = fopen(*(const char **)(v10 + 40), "w");
      *(void *)(v10 + 48) = v54;
      if (!v54 && *__error()) {
        __error();
      }
      *(void *)(v10 + 56) = a3;
      uint64_t result = *(FILE **)(v10 + 48);
    }
  }
  if (result)
  {
    if (result == *v12)
    {
      int v55 = 2;
    }
    else if (result == *v13)
    {
      int v55 = 1;
    }
    else
    {
      int v55 = fileno(result);
    }
    return (FILE *)write(v55, a2, a3);
  }
  return result;
}

void sub_22686881C(unsigned __int16 *a1, const char *a2, uint64_t a3)
{
  unsigned int v3 = *(_DWORD *)(*(void *)(*(void *)a1 + 56) + 40);
  if (v3 == -1) {
    unsigned int v3 = a1[4];
  }
  if ((int)v3 >= 501)
  {
    if (v3 >= 0x3E9)
    {
      if (v3 >= 0xBB9)
      {
        if (v3 >= 0x1389)
        {
          if (v3 >= 0x1F41)
          {
            if (v3 >= 0x2329) {
              int v4 = v3 < 0x2711;
            }
            else {
              int v4 = 2;
            }
          }
          else
          {
            int v4 = 3;
          }
        }
        else
        {
          int v4 = 4;
        }
      }
      else
      {
        int v4 = 5;
      }
    }
    else
    {
      int v4 = 6;
    }
  }
  else
  {
    int v4 = 7;
  }
  do
  {
    uint64_t v5 = a3;
    if (!a3) {
      break;
    }
    --a3;
  }
  while (a2[v5 - 1] == 10);
  syslog(v4, "%.*s", v5, a2);
}

uint64_t sub_2268688F4(uint64_t result)
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(*(void *)result + 56) + 40);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_226868DBC(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector();
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(v3 + 16);
    return MEMORY[0x270F9A6D0](v4, sel_auUIAlertDestructiveAction_, v3);
  }
  return result;
}

uint64_t sub_226868E18(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector();
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(v3 + 16);
    return MEMORY[0x270F9A6D0](v4, sel_auUIAlertCancelAction_, v3);
  }
  return result;
}

uint64_t sub_226868E74(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector();
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(v3 + 16);
    return MEMORY[0x270F9A6D0](v4, sel_auUIAlertAlternateAction_, v3);
  }
  return result;
}

uint64_t sub_226868ED0(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector();
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(v3 + 16);
    return MEMORY[0x270F9A6D0](v4, sel_auUIAlertOKAction_, v3);
  }
  return result;
}

uint64_t sub_226869204(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector();
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(v3 + 16);
    return MEMORY[0x270F9A6D0](v4, sel_auUIAlertOKAction_, v3);
  }
  return result;
}

uint64_t sub_2268692E4(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector();
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(v3 + 16);
    return MEMORY[0x270F9A6D0](v4, sel_auUIAlertCancelAction_, v3);
  }
  return result;
}

uint64_t sub_226869698(unsigned __int8 *a1, unint64_t a2, int a3, unsigned __int8 **a4, void *a5, unsigned __int8 **a6)
{
  do
  {
    if (a2 - (unint64_t)a1 < 2)
    {
      uint64_t v10 = 4294960569;
      if (!a6) {
        return v10;
      }
      goto LABEL_13;
    }
    uint64_t v6 = a1[1];
    int v7 = a1 + 2;
    uint64_t v8 = &a1[v6 + 2];
    if ((unint64_t)v8 > a2)
    {
      uint64_t v10 = 4294960546;
      if (!a6) {
        return v10;
      }
      goto LABEL_13;
    }
    int v9 = *a1;
    a1 += v6 + 2;
  }
  while (v9 != a3);
  if (a4) {
    *a4 = v7;
  }
  uint64_t v10 = 0;
  if (a5) {
    *a5 = v6;
  }
  a1 = v8;
  if (a6) {
LABEL_13:
  }
    *a6 = a1;
  return v10;
}

uint64_t sub_226869708(unsigned __int8 *a1, unint64_t a2, int a3, void *a4, void *a5, void *a6)
{
  if ((uint64_t)(a2 - (void)a1) < 2) {
    return 4294960569;
  }
  uint64_t v6 = a1;
  while (1)
  {
    int v7 = v6;
    int v8 = *v6;
    uint64_t v9 = v6[1];
    v6 += v9 + 2;
    if (v8 == 221)
    {
      if (v6 < a1 || (unint64_t)v6 > a2) {
        return 4294960553;
      }
      if (v9 >= 4 && bswap32(*(_DWORD *)(v7 + 2)) == a3) {
        break;
      }
    }
    if ((uint64_t)(a2 - (void)v6) <= 1) {
      return 4294960569;
    }
  }
  *a4 = v7 + 6;
  *a5 = v9 - 4;
  uint64_t result = 0;
  if (a6) {
    *a6 = v6;
  }
  return result;
}

uint64_t sub_226869794(unsigned __int8 *a1, unint64_t a2, unsigned char *a3, _WORD *a4)
{
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t result = sub_226869708(a1, a2, 234241, &v9, &v8, 0);
  if (!result)
  {
    if (v8 >= 3)
    {
      unsigned int v7 = *(unsigned __int16 *)(v9 + 1);
      if (a3) {
        *a3 = *(unsigned char *)v9;
      }
      uint64_t result = 0;
      if (a4) {
        *a4 = bswap32(v7) >> 16;
      }
    }
    else
    {
      return 4294960553;
    }
  }
  return result;
}

uint64_t sub_22686981C(unsigned __int8 *a1, unint64_t a2, void *a3, void *a4)
{
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t result = sub_226869708(a1, a2, 1569287, &v9, &v8, 0);
  if (!result)
  {
    unint64_t v7 = v8;
    if (v8 >= 0xA)
    {
      if (*v9)
      {
        return 4294960540;
      }
      else if (v9[1] == 1)
      {
        uint64_t result = 0;
        *a3 = v9 + 2;
        *a4 = v7 - 2;
      }
      else
      {
        return 4294960581;
      }
    }
    else
    {
      return 4294960553;
    }
  }
  return result;
}

uint64_t sub_2268698B8(unsigned __int8 *a1, unint64_t a2, int a3, unsigned __int8 **a4, void *a5, unsigned __int8 **a6)
{
  do
  {
    if (a2 - (unint64_t)a1 < 2) {
      return 4294960569;
    }
    uint64_t v6 = a1[1];
    unint64_t v7 = a1 + 2;
    unint64_t v8 = &a1[v6 + 2];
    if ((unint64_t)v8 > a2) {
      return 4294960546;
    }
    int v9 = *a1;
    a1 += v6 + 2;
  }
  while (v9 != a3);
  *a4 = v7;
  *a5 = v6;
  uint64_t result = 0;
  if (a6) {
    *a6 = v8;
  }
  return result;
}

double sub_226869910(uint64_t a1)
{
  double result = -3.59869635e230;
  *(_OWORD *)a1 = xmmword_226912E90;
  *(void *)(a1 + 16) = 0;
  return result;
}

void *sub_226869924(uint64_t a1, char *a2, size_t a3)
{
  return sub_226869934(a1, a2, a3, 0);
}

double sub_22686992C(_OWORD *a1, uint64_t a2)
{
  return sub_226869A2C(a1, a2, 0);
}

void *sub_226869934(uint64_t a1, char *__src, size_t a3, int a4)
{
  uint64_t v5 = __src;
  int v7 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = v7 + a3;
  if (__CFADD__(v7, a3)) {
    ++*(_DWORD *)(a1 + 20);
  }
  size_t v8 = 64 - (v7 & 0x3F);
  unint64_t v9 = a3 - v8;
  if (a3 >= v8)
  {
    uint64_t v11 = (_OWORD *)(a1 + 24);
    memcpy((void *)(a1 - v8 + 88), __src, v8);
    sub_226869AEC((_DWORD *)a1, (int *)(a1 + 24), a4);
    size_t v12 = &v5[v8];
    if (v9 >= 0x40)
    {
      do
      {
        long long v13 = *(_OWORD *)v12;
        long long v14 = *((_OWORD *)v12 + 1);
        long long v15 = *((_OWORD *)v12 + 3);
        *(_OWORD *)(a1 + 56) = *((_OWORD *)v12 + 2);
        *(_OWORD *)(a1 + 72) = v15;
        *uint64_t v11 = v13;
        *(_OWORD *)(a1 + 40) = v14;
        sub_226869AEC((_DWORD *)a1, (int *)(a1 + 24), a4);
        v12 += 64;
        v9 -= 64;
      }
      while (v9 > 0x3F);
    }
    uint64_t v10 = (void *)(a1 + 24);
    __src = v12;
    a3 = v9;
  }
  else
  {
    uint64_t v10 = (void *)(a1 - v8 + 88);
  }

  return memcpy(v10, __src, a3);
}

double sub_226869A2C(_OWORD *a1, uint64_t a2, int a3)
{
  uint64_t v6 = *(_DWORD *)(a2 + 16) & 0x3F;
  int v7 = (int *)(a2 + 24);
  size_t v8 = (unsigned char *)(a2 + 24 + v6);
  *size_t v8 = 0x80;
  unint64_t v9 = (int *)(v8 + 1);
  if (v6 < 0x38)
  {
    unsigned int v10 = 55 - v6;
  }
  else
  {
    bzero(v9, v6 ^ 0x3F);
    sub_226869AEC((_DWORD *)a2, v7, a3);
    unsigned int v10 = 56;
    unint64_t v9 = v7;
  }
  bzero(v9, v10);
  *(void *)(a2 + 80) = 8 * *(void *)(a2 + 16);
  sub_226869AEC((_DWORD *)a2, v7, a3);
  *a1 = *(_OWORD *)a2;
  double result = 0.0;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(void *)(a2 + 80) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

_DWORD *sub_226869AEC(_DWORD *result, int *a2, int a3)
{
  int v3 = result[1];
  int v5 = result[2];
  int v4 = result[3];
  int v6 = *a2;
  int v7 = a2[1];
  HIDWORD(v8) = *result + *a2 - 680876936 + (v5 & v3 | v4 & ~v3);
  LODWORD(v8) = HIDWORD(v8);
  int v9 = (v8 >> 25) + v3;
  HIDWORD(v8) = v4 + v7 - 389564586 + (v3 & v9 | v5 & ~v9);
  LODWORD(v8) = HIDWORD(v8);
  int v10 = (v8 >> 20) + v9;
  int v11 = a2[2];
  int v12 = a2[3];
  HIDWORD(v8) = v5 + v11 + 606105819 + (v9 & v10 | v3 & ~v10);
  LODWORD(v8) = HIDWORD(v8);
  int v13 = (v8 >> 15) + v10;
  HIDWORD(v8) = v3 + v12 - 1044525330 + (v10 & v13 | v9 & ~v13);
  LODWORD(v8) = HIDWORD(v8);
  int v14 = (v8 >> 10) + v13;
  int v16 = a2[4];
  int v15 = a2[5];
  HIDWORD(v8) = v16 + v9 - 176418897 + (v13 & v14 | v10 & ~v14);
  LODWORD(v8) = HIDWORD(v8);
  int v17 = (v8 >> 25) + v14;
  HIDWORD(v8) = v15 + v10 + 1200080426 + (v14 & v17 | v13 & ~v17);
  LODWORD(v8) = HIDWORD(v8);
  int v18 = (v8 >> 20) + v17;
  int v19 = a2[6];
  int v20 = a2[7];
  HIDWORD(v8) = v19 + v13 - 1473231341 + (v17 & v18 | v14 & ~v18);
  LODWORD(v8) = HIDWORD(v8);
  int v21 = (v8 >> 15) + v18;
  HIDWORD(v8) = v20 + v14 - 45705983 + (v18 & v21 | v17 & ~v21);
  LODWORD(v8) = HIDWORD(v8);
  int v22 = (v8 >> 10) + v21;
  int v23 = a2[8];
  int v24 = a2[9];
  HIDWORD(v8) = v23 + v17 + 1770035416 + (v21 & v22 | v18 & ~v22);
  LODWORD(v8) = HIDWORD(v8);
  int v25 = (v8 >> 25) + v22;
  HIDWORD(v8) = v24 + v18 - 1958414417 + (v22 & v25 | v21 & ~v25);
  LODWORD(v8) = HIDWORD(v8);
  int v26 = (v8 >> 20) + v25;
  int v28 = a2[10];
  int v27 = a2[11];
  HIDWORD(v8) = v28 + v21 - 42063 + (v25 & v26 | v22 & ~v26);
  LODWORD(v8) = HIDWORD(v8);
  int v29 = (v8 >> 15) + v26;
  HIDWORD(v8) = v27 + v22 - 1990404162 + (v26 & v29 | v25 & ~v29);
  LODWORD(v8) = HIDWORD(v8);
  int v30 = (v8 >> 10) + v29;
  int v32 = a2[12];
  int v31 = a2[13];
  HIDWORD(v8) = v32 + v25 + 1804603682 + (v29 & v30 | v26 & ~v30);
  LODWORD(v8) = HIDWORD(v8);
  int v33 = (v8 >> 25) + v30;
  HIDWORD(v8) = v31 + v26 - 40341101 + (v30 & v33 | v29 & ~v33);
  LODWORD(v8) = HIDWORD(v8);
  int v34 = (v8 >> 20) + v33;
  int v36 = a2[14];
  int v35 = a2[15];
  HIDWORD(v8) = v36 + v29 - 1502002290 + (v33 & v34 | v30 & ~v34);
  LODWORD(v8) = HIDWORD(v8);
  int v37 = (v8 >> 15) + v34;
  HIDWORD(v8) = v35 + v30 + 1236535329 + (v34 & v37 | v33 & ~v37);
  LODWORD(v8) = HIDWORD(v8);
  int v38 = (v8 >> 10) + v37;
  HIDWORD(v8) = v7 + v33 - 165796510 + (v38 & v34 | v37 & ~v34);
  LODWORD(v8) = HIDWORD(v8);
  int v39 = (v8 >> 27) + v38;
  HIDWORD(v8) = v19 + v34 - 1069501632 + (v39 & v37 | v38 & ~v37);
  LODWORD(v8) = HIDWORD(v8);
  int v40 = (v8 >> 23) + v39;
  HIDWORD(v8) = v27 + v37 + 643717713 + (v40 & v38 | v39 & ~v38);
  LODWORD(v8) = HIDWORD(v8);
  int v41 = (v8 >> 18) + v40;
  HIDWORD(v8) = v6 + v38 - 373897302 + (v41 & v39 | v40 & ~v39);
  LODWORD(v8) = HIDWORD(v8);
  int v42 = (v8 >> 12) + v41;
  HIDWORD(v8) = v15 + v39 - 701558691 + (v42 & v40 | v41 & ~v40);
  LODWORD(v8) = HIDWORD(v8);
  int v43 = (v8 >> 27) + v42;
  HIDWORD(v8) = v28 + v40 + 38016083 + (v43 & v41 | v42 & ~v41);
  LODWORD(v8) = HIDWORD(v8);
  int v44 = (v8 >> 23) + v43;
  HIDWORD(v8) = v35 + v41 - 660478335 + (v44 & v42 | v43 & ~v42);
  LODWORD(v8) = HIDWORD(v8);
  int v45 = (v8 >> 18) + v44;
  HIDWORD(v8) = v16 + v42 - 405537848 + (v45 & v43 | v44 & ~v43);
  LODWORD(v8) = HIDWORD(v8);
  int v46 = (v8 >> 12) + v45;
  HIDWORD(v8) = v24 + v43 + 568446438 + (v46 & v44 | v45 & ~v44);
  LODWORD(v8) = HIDWORD(v8);
  int v47 = (v8 >> 27) + v46;
  HIDWORD(v8) = v36 + v44 - 1019803690 + (v47 & v45 | v46 & ~v45);
  LODWORD(v8) = HIDWORD(v8);
  int v48 = (v8 >> 23) + v47;
  HIDWORD(v8) = v12 + v45 - 187363961 + (v48 & v46 | v47 & ~v46);
  LODWORD(v8) = HIDWORD(v8);
  int v49 = (v8 >> 18) + v48;
  int v50 = v46 + v23 + (v49 & v47 | v48 & ~v47);
  HIDWORD(v8) = v50 + 1163531501;
  LODWORD(v8) = v50 + 1163531501;
  int v51 = v8 >> 12;
  BOOL v52 = a3 == 1;
  HIDWORD(v8) = v50 + 1146754285;
  LODWORD(v8) = v50 + 1146754285;
  int v53 = v8 >> 12;
  if (!v52) {
    int v53 = v51;
  }
  int v54 = v53 + v49;
  HIDWORD(v55) = v31 + v47 - 1444681467 + (v54 & v48 | v49 & ~v48);
  LODWORD(v55) = HIDWORD(v55);
  int v56 = (v55 >> 27) + v54;
  HIDWORD(v55) = v11 + v48 - 51403784 + (v56 & v49 | v54 & ~v49);
  LODWORD(v55) = HIDWORD(v55);
  int v57 = (v55 >> 23) + v56;
  HIDWORD(v55) = v20 + v49 + 1735328473 + (v57 & v54 | v56 & ~v54);
  LODWORD(v55) = HIDWORD(v55);
  int v58 = (v55 >> 18) + v57;
  HIDWORD(v55) = v32 + v54 - 1926607734 + ((v58 ^ v57) & v56 ^ v57);
  LODWORD(v55) = HIDWORD(v55);
  int v59 = (v55 >> 12) + v58;
  HIDWORD(v55) = v15 + v56 - 378558 + (v58 ^ v57 ^ v59);
  LODWORD(v55) = HIDWORD(v55);
  int v60 = (v55 >> 28) + v59;
  HIDWORD(v55) = v23 + v57 - 2022574463 + (v59 ^ v58 ^ v60);
  LODWORD(v55) = HIDWORD(v55);
  int v61 = (v55 >> 21) + v60;
  HIDWORD(v55) = v27 + v58 + 1839030562 + (v60 ^ v59 ^ v61);
  LODWORD(v55) = HIDWORD(v55);
  int v62 = (v55 >> 16) + v61;
  HIDWORD(v55) = v36 + v59 - 35309556 + (v61 ^ v60 ^ v62);
  LODWORD(v55) = HIDWORD(v55);
  int v63 = (v55 >> 9) + v62;
  HIDWORD(v55) = v7 + v60 - 1530992060 + (v62 ^ v61 ^ v63);
  LODWORD(v55) = HIDWORD(v55);
  int v64 = (v55 >> 28) + v63;
  HIDWORD(v55) = v16 + v61 + 1272893353 + (v63 ^ v62 ^ v64);
  LODWORD(v55) = HIDWORD(v55);
  int v65 = (v55 >> 21) + v64;
  HIDWORD(v55) = v20 + v62 - 155497632 + (v64 ^ v63 ^ v65);
  LODWORD(v55) = HIDWORD(v55);
  int v66 = (v55 >> 16) + v65;
  HIDWORD(v55) = v28 + v63 - 1094730640 + (v65 ^ v64 ^ v66);
  LODWORD(v55) = HIDWORD(v55);
  int v67 = (v55 >> 9) + v66;
  HIDWORD(v55) = v31 + v64 + 681279174 + (v66 ^ v65 ^ v67);
  LODWORD(v55) = HIDWORD(v55);
  int v68 = (v55 >> 28) + v67;
  HIDWORD(v55) = v6 + v65 - 358537222 + (v67 ^ v66 ^ v68);
  LODWORD(v55) = HIDWORD(v55);
  int v69 = (v55 >> 21) + v68;
  HIDWORD(v55) = v12 + v66 - 722521979 + (v68 ^ v67 ^ v69);
  LODWORD(v55) = HIDWORD(v55);
  int v70 = (v55 >> 16) + v69;
  HIDWORD(v55) = v19 + v67 + 76029189 + (v69 ^ v68 ^ v70);
  LODWORD(v55) = HIDWORD(v55);
  int v71 = (v55 >> 9) + v70;
  HIDWORD(v55) = v24 + v68 - 640364487 + (v70 ^ v69 ^ v71);
  LODWORD(v55) = HIDWORD(v55);
  int v72 = (v55 >> 28) + v71;
  HIDWORD(v55) = v32 + v69 - 421815835 + (v71 ^ v70 ^ v72);
  LODWORD(v55) = HIDWORD(v55);
  int v73 = (v55 >> 21) + v72;
  HIDWORD(v55) = v35 + v70 + 530742520 + (v72 ^ v71 ^ v73);
  LODWORD(v55) = HIDWORD(v55);
  int v74 = (v55 >> 16) + v73;
  HIDWORD(v55) = v11 + v71 - 995338651 + (v73 ^ v72 ^ v74);
  LODWORD(v55) = HIDWORD(v55);
  int v75 = (v55 >> 9) + v74;
  HIDWORD(v55) = v6 + v72 - 198630844 + ((v75 | ~v73) ^ v74);
  LODWORD(v55) = HIDWORD(v55);
  int v76 = (v55 >> 26) + v75;
  HIDWORD(v55) = v20 + v73 + 1126891415 + ((v76 | ~v74) ^ v75);
  LODWORD(v55) = HIDWORD(v55);
  int v77 = (v55 >> 22) + v76;
  HIDWORD(v55) = v36 + v74 - 1416354905 + ((v77 | ~v75) ^ v76);
  LODWORD(v55) = HIDWORD(v55);
  int v78 = (v55 >> 17) + v77;
  HIDWORD(v55) = v15 + v75 - 57434055 + ((v78 | ~v76) ^ v77);
  LODWORD(v55) = HIDWORD(v55);
  int v79 = (v55 >> 11) + v78;
  HIDWORD(v55) = v32 + v76 + 1700485571 + ((v79 | ~v77) ^ v78);
  LODWORD(v55) = HIDWORD(v55);
  int v80 = (v55 >> 26) + v79;
  HIDWORD(v55) = v12 + v77 - 1894986606 + ((v80 | ~v78) ^ v79);
  LODWORD(v55) = HIDWORD(v55);
  int v81 = (v55 >> 22) + v80;
  HIDWORD(v55) = v28 + v78 - 1051523 + ((v81 | ~v79) ^ v80);
  LODWORD(v55) = HIDWORD(v55);
  int v82 = (v55 >> 17) + v81;
  HIDWORD(v55) = v7 + v79 - 2054922799 + ((v82 | ~v80) ^ v81);
  LODWORD(v55) = HIDWORD(v55);
  int v83 = (v55 >> 11) + v82;
  HIDWORD(v55) = v23 + v80 + 1873313359 + ((v83 | ~v81) ^ v82);
  LODWORD(v55) = HIDWORD(v55);
  int v84 = (v55 >> 26) + v83;
  HIDWORD(v55) = v35 + v81 - 30611744 + ((v84 | ~v82) ^ v83);
  LODWORD(v55) = HIDWORD(v55);
  int v85 = (v55 >> 22) + v84;
  HIDWORD(v55) = v19 + v82 - 1560198380 + ((v85 | ~v83) ^ v84);
  LODWORD(v55) = HIDWORD(v55);
  int v86 = (v55 >> 17) + v85;
  HIDWORD(v55) = v31 + v83 + 1309151649 + ((v86 | ~v84) ^ v85);
  LODWORD(v55) = HIDWORD(v55);
  int v87 = (v55 >> 11) + v86;
  HIDWORD(v55) = v16 + v84 - 145523070 + ((v87 | ~v85) ^ v86);
  LODWORD(v55) = HIDWORD(v55);
  int v88 = (v55 >> 26) + v87;
  HIDWORD(v55) = v27 + v85 - 1120210379 + ((v88 | ~v86) ^ v87);
  LODWORD(v55) = HIDWORD(v55);
  int v89 = (v55 >> 22) + v88;
  HIDWORD(v55) = v11 + v86 + 718787259 + ((v89 | ~v87) ^ v88);
  LODWORD(v55) = HIDWORD(v55);
  int v90 = (v55 >> 17) + v89;
  HIDWORD(v55) = v24 + v87 - 343485551 + ((v90 | ~v88) ^ v89);
  LODWORD(v55) = HIDWORD(v55);
  *result += v88;
  result[1] = v90 + v3 + (v55 >> 11);
  result[2] = v90 + v5;
  result[3] = v89 + v4;
  return result;
}

uint64_t sub_22686A4E0(unsigned int a1, int a2, unsigned __int8 *a3, unint64_t a4)
{
  if (a2 == -1) {
    int v4 = 5000;
  }
  else {
    int v4 = a2;
  }
  if (!a2) {
    int v4 = 5552;
  }
  unsigned int v5 = (unsigned __int16)a1;
  for (unsigned int i = HIWORD(a1); a4; a4 -= v7)
  {
    if (a4 >= v4) {
      unint64_t v7 = v4;
    }
    else {
      unint64_t v7 = a4;
    }
    unint64_t v8 = v7;
    if (v7 >= 0x10)
    {
      do
      {
        int v9 = v5 + *a3;
        int v10 = v9 + i;
        int v11 = v9 + a3[1];
        int v12 = v10 + v11;
        int v13 = v11 + a3[2];
        int v14 = v12 + v13;
        int v15 = v13 + a3[3];
        int v16 = v14 + v15;
        int v17 = v15 + a3[4];
        int v18 = v16 + v17;
        int v19 = v17 + a3[5];
        int v20 = v18 + v19;
        int v21 = v19 + a3[6];
        int v22 = v20 + v21;
        int v23 = v21 + a3[7];
        int v24 = v22 + v23;
        int v25 = v23 + a3[8];
        int v26 = v24 + v25;
        int v27 = v25 + a3[9];
        int v28 = v26 + v27;
        int v29 = v27 + a3[10];
        int v30 = v28 + v29;
        int v31 = v29 + a3[11];
        int v32 = v30 + v31;
        int v33 = v31 + a3[12];
        int v34 = v32 + v33;
        int v35 = v33 + a3[13];
        int v36 = v34 + v35;
        int v37 = v35 + a3[14];
        int v38 = v36 + v37;
        unsigned int v5 = v37 + a3[15];
        unsigned int i = v38 + v5;
        a3 += 16;
        v8 -= 16;
      }
      while (v8 > 0xF);
    }
    unint64_t v39 = v8;
    int v40 = a3;
    if (v8)
    {
      do
      {
        int v41 = *v40++;
        v5 += v41;
        i += v5;
        --v39;
      }
      while (v39);
      a3 += v8;
    }
    v5 %= 0xFFF1u;
    i %= 0xFFF1u;
  }
  return v5 | (i << 16);
}

uint64_t sub_22686B3E0(void *a1, const char *a2, double a3)
{
  objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(a1, a2, 0);
  objc_msgSend_setNumberOfLines_(a1, v5, 0);
  objc_msgSend_setTextAlignment_(a1, v6, 1);
  objc_msgSend_setLineBreakMode_(a1, v7, 0);
  uint64_t v10 = objc_msgSend__secondaryLabelColor(MEMORY[0x263F1C550], v8, v9);
  objc_msgSend_setTextColor_(a1, v11, v10);
  uint64_t v14 = objc_msgSend_systemFontOfSize_(MEMORY[0x263F1C658], v12, v13, a3);
  objc_msgSend_setFont_(a1, v15, v14);
  objc_msgSend_setAdjustsFontSizeToFitWidth_(a1, v16, 1);
  int v19 = objc_msgSend_font(a1, v17, v18);
  objc_msgSend_pointSize(v19, v20, v21);
  double v23 = v22 + -4.0;
  int v26 = objc_msgSend_font(a1, v24, v25);
  objc_msgSend_pointSize(v26, v27, v28);
  double v32 = v23 / v31;

  return objc_msgSend_setMinimumScaleFactor_(a1, v29, v30, v32);
}

double sub_22686B8F4(double a1, uint64_t a2, const char *a3, uint64_t a4)
{
  unsigned int v5 = objc_msgSend_mainScreen(MEMORY[0x263F1C920], a3, a4);
  objc_msgSend_scale(v5, v6, v7);
  if (v8 < 2.0)
  {
    float v9 = a1;
    return roundf(v9);
  }
  return a1;
}

double sub_22686CA2C(double a1, uint64_t a2, const char *a3, uint64_t a4)
{
  unsigned int v5 = objc_msgSend_mainScreen(MEMORY[0x263F1C920], a3, a4);
  objc_msgSend_scale(v5, v6, v7);
  if (v8 < 2.0)
  {
    float v9 = a1;
    return roundf(v9) + -0.5;
  }
  return a1;
}

uint64_t sub_22686CBB0(void *a1, const char *a2, uint64_t a3)
{
  uint64_t v4 = sub_226905310(a1, a2, a3);
  objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(a1, v5, 0);
  uint64_t v7 = objc_msgSend_imageNamed_(ImageStore, v6, @"Reset-Modem");
  double v8 = [AUImageView alloc];
  uint64_t v10 = objc_msgSend_initWithImage_(v8, v9, (uint64_t)v7);
  objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(v10, v11, 0);
  objc_msgSend_addSubview_(a1, v12, (uint64_t)v10);

  uint64_t v13 = objc_alloc_init(AULabel);
  uint64_t v14 = sub_22685D62C(@"CyclePower", @"AirPortSettings");
  objc_msgSend_setText_(v13, v15, v14);
  if (v4 == 1) {
    double v17 = 14.0;
  }
  else {
    double v17 = 17.0;
  }
  sub_22686B3E0(v13, v16, v17);
  objc_msgSend_sizeToFit(v13, v18, v19);
  objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(v13, v20, 0);
  objc_msgSend_frame(v10, v21, v22);
  float v24 = v23 * 0.5;
  objc_msgSend_textRectForBounds_limitedToNumberOfLines_(v13, v25, 0, 0.0, 0.0, (float)(floorf(v24) + -10.0), 3.40282347e38);
  double v27 = v26;
  objc_msgSend_bounds(v13, v28, v29);
  double v34 = v33;
  if (v27 == v33)
  {
    objc_msgSend_frame(v10, v30, v31);
    float v36 = v35 * 0.5;
    objc_msgSend_setPreferredMaxLayoutWidth_(v13, v37, v38, (float)(floorf(v36) + -10.0));
  }
  LODWORD(v32) = 1148846080;
  objc_msgSend_setContentCompressionResistancePriority_forAxis_(v13, v30, 1, v32);
  LODWORD(v39) = 1148846080;
  objc_msgSend_setContentCompressionResistancePriority_forAxis_(v13, v40, 0, v39);
  objc_msgSend_addSubview_(a1, v41, (uint64_t)v13);

  int v42 = objc_alloc_init(AULabel);
  uint64_t v43 = sub_22685D62C(@"RemoveBattery", @"AirPortSettings");
  objc_msgSend_setText_(v42, v44, v43);
  sub_22686B3E0(v42, v45, v17);
  objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(v42, v46, 0);
  objc_msgSend_sizeToFit(v42, v47, v48);
  objc_msgSend_frame(v10, v49, v50);
  float v52 = v51 * 0.5;
  objc_msgSend_textRectForBounds_limitedToNumberOfLines_(v42, v53, 0, 0.0, 0.0, (float)(floorf(v52) + -10.0), 3.40282347e38);
  double v55 = v54;
  objc_msgSend_bounds(v42, v56, v57);
  double v62 = v61;
  if (v55 == v61)
  {
    objc_msgSend_frame(v10, v58, v59);
    float v64 = v63 * 0.5;
    objc_msgSend_setPreferredMaxLayoutWidth_(v42, v65, v66, (float)(floorf(v64) + -10.0));
  }
  LODWORD(v60) = 1148846080;
  objc_msgSend_setContentCompressionResistancePriority_forAxis_(v42, v58, 1, v60);
  LODWORD(v67) = 1148846080;
  objc_msgSend_setContentCompressionResistancePriority_forAxis_(v42, v68, 0, v67);
  objc_msgSend_addSubview_(a1, v69, (uint64_t)v42);

  int v70 = (void *)MEMORY[0x263F08938];
  objc_msgSend_size(v7, v71, v72);
  uint64_t v75 = objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(v70, v73, (uint64_t)v10, 7, 0, 0, 0, 1.0, v74);
  objc_msgSend_addConstraint_(a1, v76, v75);
  int v77 = (void *)MEMORY[0x263F08938];
  objc_msgSend_size(v7, v78, v79);
  uint64_t v81 = objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(v77, v80, (uint64_t)v10, 8, 0, 0, 0, 1.0);
  objc_msgSend_addConstraint_(a1, v82, v81);
  uint64_t v84 = objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(MEMORY[0x263F08938], v83, (uint64_t)v10, 9, 0, a1, 9, 1.0, 0.0);
  objc_msgSend_addConstraint_(a1, v85, v84);
  int v88 = (void *)MEMORY[0x263F08938];
  if (v27 == v34)
  {
    objc_msgSend_frame(v10, v86, v87);
    float v90 = v89 * 0.286458343;
    uint64_t v92 = objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(v88, v91, (uint64_t)v13, 9, 0, v10, 1, 1.0, floorf(v90));
    LODWORD(v93) = 1132068864;
    objc_msgSend_setPriority_(v92, v94, v95, v93);
  }
  else
  {
    uint64_t v97 = _NSDictionaryOfVariableBindings(&cfstr_Cyclelabel.isa, v13, 0);
    uint64_t v99 = objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(v88, v98, @"H:|-(>=10)-[cycleLabel]", 0x10000, 0, v97);
    objc_msgSend_addConstraints_(a1, v100, v99);
    uint64_t v92 = objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(MEMORY[0x263F08938], v101, (uint64_t)v13, 2, 0, v10, 9, 1.0, -14.0);
  }
  objc_msgSend_addConstraint_(a1, v96, (uint64_t)v92);
  uint64_t v102 = (void *)MEMORY[0x263F08938];
  uint64_t v103 = _NSDictionaryOfVariableBindings(&cfstr_CyclelabelImag.isa, v13, v10, 0);
  uint64_t v105 = objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(v102, v104, @"V:|-20-[cycleLabel]-(>=20)-[imageView]-20-|", 0, 0, v103);
  objc_msgSend_addConstraints_(a1, v106, v105);
  uint64_t v109 = (void *)MEMORY[0x263F08938];
  if (v55 == v62)
  {
    objc_msgSend_frame(v10, v107, v108);
    float v111 = v110 * 0.713541667;
    int v113 = objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(v109, v112, (uint64_t)v42, 9, 0, v10, 1, 1.0, floorf(v111));
    LODWORD(v114) = 1132068864;
    objc_msgSend_setPriority_(v113, v115, v116, v114);
  }
  else
  {
    uint64_t v118 = _NSDictionaryOfVariableBindings(&cfstr_Removelabel.isa, v42, 0);
    uint64_t v120 = objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(v109, v119, @"H:[removeLabel]-(>=10)-|", 0x10000, 0, v118);
    objc_msgSend_addConstraints_(a1, v121, v120);
    int v113 = objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(MEMORY[0x263F08938], v122, (uint64_t)v42, 1, 0, v10, 9, 1.0, 14.0);
  }
  objc_msgSend_addConstraint_(a1, v117, (uint64_t)v113);
  uint64_t v123 = (void *)MEMORY[0x263F08938];
  v124 = _NSDictionaryOfVariableBindings(&cfstr_RemovelabelIma.isa, v42, v10, 0);
  uint64_t v126 = objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(v123, v125, @"V:|-20-[removeLabel]-(>=20)-[imageView]-20-|", 0, 0, v124);
  objc_msgSend_addConstraints_(a1, v127, v126);
  uint64_t v128 = (void *)MEMORY[0x263F08938];
  uint64_t v129 = _NSDictionaryOfVariableBindings(&cfstr_CyclelabelRemo.isa, v13, v42, 0);
  uint64_t v131 = objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(v128, v130, @"H:[cycleLabel]-(>=12)-[removeLabel]", 65544, 0, v129);
  objc_msgSend_addConstraints_(a1, v132, v131);

  return objc_msgSend_setNeedsLayout(a1, v133, v134);
}

uint64_t sub_22686D1A0(void *a1)
{
  v6[1] = *(int32x2_t *)MEMORY[0x263EF8340];
  int v2 = malloc_type_calloc(1uLL, 0x80uLL, 0x1090040AE1C4F64uLL);
  if (!v2) {
    return 4294960568;
  }
  int v3 = v2;
  *int v2 = -2441908381;
  *(void *)((char *)v2 + 12) = -1;
  if (pipe((int *)v6))
  {
    if (*__error())
    {
      uint64_t v4 = *__error();
      if (!v4) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v4 = 4294960596;
    }
    sub_22686D8A8(v3);
    return v4;
  }
LABEL_5:
  uint64_t v4 = 0;
  *(int32x2_t *)((char *)v3 + 12) = vrev64_s32(v6[0]);
  v3[3] = sub_22686D2C8;
  v3[4] = sub_22686D460;
  unsigned char v3[5] = sub_22686D560;
  v3[6] = sub_22686D68C;
  *a1 = v3;
  return v4;
}

uint64_t sub_22686D2C8(uint64_t a1, size_t a2, uint64_t a3, char *__dst, size_t *a5, int a6, unsigned int a7)
{
  if (a1 && *(_DWORD *)a1 == 1853058915)
  {
    if (*(unsigned char *)(a1 + 8))
    {
      size_t v9 = 0;
      uint64_t result = 4294960573;
      goto LABEL_6;
    }
    if ((*(_DWORD *)(a1 + 4) & 0x80000000) != 0)
    {
      size_t v9 = 0;
      uint64_t result = 4294960551;
    }
    else
    {
      uint64_t v13 = __dst;
      uint64_t v14 = a3;
      int v16 = *(const void **)(a1 + 64);
      uint64_t v17 = *(void *)(a1 + 72) - (void)v16;
      if (v17 < 1)
      {
        size_t v9 = 0;
      }
      else
      {
        if (v17 >= a3) {
          size_t v9 = a3;
        }
        else {
          size_t v9 = *(void *)(a1 + 72) - (void)v16;
        }
        memcpy(__dst, v16, v9);
        *(void *)(a1 + 64) += v9;
        v13 += v9;
        v14 -= v9;
      }
      if (v14 >= 1)
      {
        while (1)
        {
          ssize_t v18 = recv(*(_DWORD *)(a1 + 4), v13, (int)v14, a6);
          if (v18 >= 1) {
            break;
          }
          if (!v18)
          {
            if (v9 >= a2) {
              uint64_t result = 0;
            }
            else {
              uint64_t result = 4294960543;
            }
            goto LABEL_6;
          }
          if (!*__error())
          {
            uint64_t result = 4294960596;
            goto LABEL_6;
          }
          uint64_t result = *__error();
          if (result != 4)
          {
            if (result != 35) {
              goto LABEL_6;
            }
            if (v9 >= a2) {
              goto LABEL_29;
            }
            uint64_t result = sub_22686DB38(a1, *(_DWORD *)(a1 + 4), 0, a7);
            if (result) {
              goto LABEL_6;
            }
LABEL_27:
            uint64_t result = 0;
            if (v14 <= 0) {
              goto LABEL_6;
            }
          }
        }
        v13 += v18;
        v14 -= v18;
        v9 += v18;
        goto LABEL_27;
      }
LABEL_29:
      uint64_t result = 0;
    }
  }
  else
  {
    size_t v9 = 0;
    uint64_t result = 4294960556;
  }
LABEL_6:
  if (a5) {
    *a5 = v9;
  }
  return result;
}

uint64_t sub_22686D460(uint64_t a1, char *a2, uint64_t a3, unsigned int a4)
{
  if (!a1) {
    return 4294960556;
  }
  if (*(_DWORD *)a1 == 1853058915)
  {
    if (*(unsigned char *)(a1 + 8)) {
      return 4294960573;
    }
    if ((*(_DWORD *)(a1 + 4) & 0x80000000) != 0) {
      return 4294960551;
    }
    uint64_t v6 = a3;
    if (!a3) {
      return 0;
    }
    while (1)
    {
      ssize_t v9 = send(*(_DWORD *)(a1 + 4), a2, (int)v6, 0);
      if (v9 < 1)
      {
        if (!*__error()) {
          return 4294960596;
        }
        uint64_t result = *__error();
        if (result != 4)
        {
          if (result != 35) {
            return result;
          }
          uint64_t result = sub_22686DB38(a1, *(_DWORD *)(a1 + 4), 1, a4);
          if (result) {
            return result;
          }
        }
      }
      else
      {
        a2 += v9;
        v6 -= v9;
      }
      uint64_t result = 0;
      if (!v6) {
        return result;
      }
    }
  }
  return 4294960556;
}

uint64_t sub_22686D560(uint64_t a1, iovec *a2, int a3, unsigned int a4)
{
  if (!a1) {
    return 4294960556;
  }
  if (*(_DWORD *)a1 == 1853058915)
  {
    if (*(unsigned char *)(a1 + 8)) {
      return 4294960573;
    }
    if ((*(_DWORD *)(a1 + 4) & 0x80000000) != 0) {
      return 4294960551;
    }
    while (1)
    {
      while (1)
      {
        ssize_t v9 = writev(*(_DWORD *)(a1 + 4), a2, a3);
        if (v9 < 0) {
          break;
        }
        ssize_t v10 = v9;
        if (a3 < 1)
        {
          if (!a3) {
            return 0;
          }
          int64_t iov_len = a2->iov_len;
        }
        else
        {
          while (1)
          {
            int64_t iov_len = a2->iov_len;
            if (v10 < iov_len) {
              break;
            }
            uint64_t result = 0;
            ++a2;
            v10 -= iov_len;
            BOOL v12 = __OFSUB__(a3--, 1);
            if ((a3 < 0) ^ v12 | (a3 == 0)) {
              return result;
            }
          }
        }
        a2->iov_base = (char *)a2->iov_base + v10;
        a2->int64_t iov_len = iov_len - v10;
LABEL_22:
        uint64_t result = sub_22686DB38(a1, *(_DWORD *)(a1 + 4), 1, a4);
        if (result) {
          return result;
        }
      }
      if (!*__error()) {
        return 4294960596;
      }
      uint64_t result = *__error();
      if (result != 4)
      {
        if (result != 35) {
          return result;
        }
        goto LABEL_22;
      }
    }
  }
  return 4294960556;
}

uint64_t sub_22686D68C(uint64_t a1, void *a2, int a3, void *a4, int a5, int a6, off_t a7, uint64_t a8, unsigned int a9)
{
  if (!a1 || *(_DWORD *)a1 != 1853058915) {
    return 4294960556;
  }
  if (*(unsigned char *)(a1 + 8)) {
    return 4294960573;
  }
  if ((*(_DWORD *)(a1 + 4) & 0x80000000) != 0) {
    return 4294960551;
  }
  if (a3 < 1)
  {
LABEL_12:
    if (lseek(a6, a7, 0) != -1) {
      goto LABEL_13;
    }
    if (!*__error()) {
      return 4294960596;
    }
    uint64_t v10 = *__error();
    if (!v10)
    {
LABEL_13:
      if (a8 < 1)
      {
        uint64_t v21 = 0;
LABEL_30:
        if (*(_DWORD *)a1 == 1853058915)
        {
          if (a5 < 1)
          {
LABEL_35:
            uint64_t v10 = 0;
          }
          else
          {
            double v27 = &a4[2 * a5];
            while (1)
            {
              uint64_t v25 = (*(uint64_t (**)(uint64_t, void, void, void))(a1 + 32))(a1, *a4, a4[1], a9);
              if (v25) {
                break;
              }
              a4 += 2;
              if (a4 >= v27) {
                goto LABEL_35;
              }
            }
LABEL_38:
            uint64_t v10 = v25;
          }
        }
        else
        {
          uint64_t v10 = 4294960556;
        }
      }
      else
      {
        int v20 = malloc_type_malloc(0x100000uLL, 0xC90692C0uLL);
        if (!v20) {
          return 4294960568;
        }
        uint64_t v21 = v20;
        while (1)
        {
          size_t v22 = a8 >= 0x100000 ? 0x100000 : a8;
          ssize_t v23 = read(a6, v21, v22);
          ssize_t v24 = v23;
          if (v23 < 1) {
            break;
          }
          uint64_t v25 = (*(uint64_t (**)(uint64_t, void *, ssize_t, void))(a1 + 32))(a1, v21, v23, a9);
          if (v25) {
            goto LABEL_38;
          }
          BOOL v26 = a8 <= v24;
          a8 -= v24;
          if (v26) {
            goto LABEL_30;
          }
        }
        if (v23)
        {
          if (*__error()) {
            uint64_t v10 = *__error();
          }
          else {
            uint64_t v10 = 4294960596;
          }
        }
        else
        {
          uint64_t v10 = 4294960546;
        }
      }
      if (v21) {
        free(v21);
      }
    }
  }
  else
  {
    uint64_t v17 = a2;
    unint64_t v18 = (unint64_t)&a2[2 * a3];
    while (1)
    {
      uint64_t v19 = (*(uint64_t (**)(uint64_t, void, void, void))(a1 + 32))(a1, *v17, v17[1], a9);
      if (v19) {
        return v19;
      }
      v17 += 2;
      if ((unint64_t)v17 >= v18) {
        goto LABEL_12;
      }
    }
  }
  return v10;
}

uint64_t sub_22686D8A8(void *a1)
{
  if (!a1) {
    return 4294960556;
  }
  if (*(_DWORD *)a1 != 1853058915) {
    return 4294960556;
  }
  int v2 = (void (*)(void *))a1[7];
  if (v2) {
    v2(a1);
  }
  int v3 = *((_DWORD *)a1 + 1);
  if ((v3 & 0x80000000) == 0)
  {
    if (close(v3) && *__error()) {
      __error();
    }
    *((_DWORD *)a1 + 1) = -1;
  }
  int v4 = *((_DWORD *)a1 + 3);
  if ((v4 & 0x80000000) == 0)
  {
    if (close(v4) && *__error()) {
      __error();
    }
    *((_DWORD *)a1 + 3) = -1;
  }
  int v5 = *((_DWORD *)a1 + 4);
  if ((v5 & 0x80000000) == 0)
  {
    if (close(v5) && *__error()) {
      __error();
    }
    *((_DWORD *)a1 + 4) = -1;
  }
  uint64_t v6 = (void *)a1[10];
  if (v6)
  {
    free(v6);
    a1[10] = 0;
  }
  uint64_t v7 = (void *)a1[14];
  if (v7) {
    free(v7);
  }
  free(a1);
  return 0;
}

uint64_t sub_22686D9A4(_DWORD *a1)
{
  if (a1 && *a1 == 1853058915) {
    return a1[1];
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_22686D9CC(uint64_t a1)
{
  if (!a1) {
    return 4294960556;
  }
  if (*(_DWORD *)a1 != 1853058915) {
    return 4294960556;
  }
  if (*(unsigned char *)(a1 + 8)) {
    return 0;
  }
  *(unsigned char *)(a1 + 8) = 1;
  if (write(*(_DWORD *)(a1 + 12), "Q", 1uLL) == 1) {
    return 0;
  }
  if (*__error()) {
    return *__error();
  }
  return 4294960596;
}

uint64_t sub_22686DA5C(uint64_t a1, char *a2, int a3, int a4)
{
  return sub_22686DA6C(a1, (uint64_t)a2, a2, a3, a4);
}

uint64_t sub_22686DA6C(uint64_t a1, uint64_t a2, char *a3, int a4, int a5)
{
  if (!a1) {
    return 4294960556;
  }
  if (*(_DWORD *)a1 != 1853058915) {
    return 4294960556;
  }
  if (*(unsigned char *)(a1 + 8)) {
    return 4294960573;
  }
  int v8 = -1;
  uint64_t result = sub_226902FA4(a3, a4, 6, 1000000000 * a5, -1, -1, 0, 0, &v8);
  if (result == -6722) {
    return 4294960543;
  }
  if (!result)
  {
    int v7 = v8;
    *(_DWORD *)(a1 + 4) = v8;
    return (v7 >> 31) & 0xFFFFE59F;
  }
  return result;
}

uint64_t sub_22686DB38(uint64_t a1, unsigned int a2, int a3, unsigned int a4)
{
  if (!a1) {
    return 4294960556;
  }
  if (*(_DWORD *)a1 != 1853058915) {
    return 4294960556;
  }
  if (*(unsigned char *)(a1 + 8)) {
    return 4294960573;
  }
  if ((a2 & 0x80000000) != 0) {
    return 4294960551;
  }
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  memset(&v29, 0, sizeof(v29));
  int v9 = *(_DWORD *)(a1 + 16);
  if (__darwin_check_fd_set_overflow(v9, &v29, 0)) {
    *(__int32_t *)((char *)v29.fds_bits + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFFCLL)) |= 1 << v9;
  }
  if (a3 == 2)
  {
    if (!__darwin_check_fd_set_overflow(a2, &v29, 0)) {
      goto LABEL_21;
    }
    unsigned int v12 = a2 >> 5;
    int v13 = v29.fds_bits[a2 >> 5] | (1 << a2);
    goto LABEL_20;
  }
  if (a3 == 1)
  {
    if (!__darwin_check_fd_set_overflow(a2, &v29, 0)) {
      goto LABEL_21;
    }
    unsigned int v12 = a2 >> 5;
    int v13 = v29.fds_bits[a2 >> 5] & ~(1 << a2);
LABEL_20:
    v29.fds_bits[v12] = v13;
LABEL_21:
    long long v27 = 0u;
    long long v28 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    uint64_t v10 = (fd_set *)&v21;
    int v11 = (fd_set *)&v21;
    if (!__darwin_check_fd_set_overflow(a2, &v21, 0)) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (a3) {
    return 4294960591;
  }
  uint64_t v10 = &v29;
  int v11 = 0;
  if (__darwin_check_fd_set_overflow(a2, &v29, 0)) {
LABEL_22:
  }
    v10->fds_bits[a2 >> 5] |= 1 << a2;
LABEL_23:
  if ((a4 & 0x80000000) != 0)
  {
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v19 = a4;
    LODWORD(v20) = 0;
    uint64_t v14 = (timeval *)&v19;
  }
  signed int v15 = *(_DWORD *)(a1 + 16);
  if (v15 <= (int)a2) {
    signed int v15 = a2;
  }
  int v16 = v15 + 1;
  while (1)
  {
    int v17 = select(v16, &v29, v11, 0, v14);
    if ((v17 & 0x80000000) == 0) {
      break;
    }
    if (!*__error()) {
      return 4294960596;
    }
    uint64_t result = *__error();
    if (result != 4) {
      return result;
    }
  }
  if (v17)
  {
    int v18 = *(_DWORD *)(a1 + 16);
    if (!__darwin_check_fd_set_overflow(v18, &v29, 0)
      || ((*(unsigned int *)((char *)v29.fds_bits + (((unint64_t)v18 >> 3) & 0x1FFFFFFFFFFFFFFCLL)) >> v18) & 1) == 0)
    {
      return 0;
    }
    return 4294960573;
  }
  return 4294960574;
}

uint64_t sub_22686DDC8(char *a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t v11 = 0;
  if (!sub_22686EA18(a1, 0, (unsigned int *)&v11 + 1, (int *)&v11, 0, 0, 0))
  {
    if (a3 >= 0x10)
    {
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0;
      *(_WORD *)a2 = 528;
      *(_WORD *)(a2 + 2) = bswap32((unsigned __int16)v11) >> 16;
      *(_DWORD *)(a2 + 4) = bswap32(HIDWORD(v11));
      uint64_t result = 0;
      if (!a4) {
        return result;
      }
      uint64_t v9 = 16;
      goto LABEL_9;
    }
    return 4294960553;
  }
  if (a3 < 0x1C) {
    return 4294960553;
  }
  unsigned int v10 = 0;
  uint64_t result = sub_22686E524(a1, 0, &v12, &v10, (int *)&v11, 0, 0);
  if (!result)
  {
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)a2 = 0;
    *(_WORD *)a2 = 7708;
    *(_WORD *)(a2 + 2) = bswap32((unsigned __int16)v11) >> 16;
    *(_OWORD *)(a2 + 8) = v12;
    *(_DWORD *)(a2 + 24) = v10;
    uint64_t result = 0;
    if (a4)
    {
      uint64_t v9 = 28;
LABEL_9:
      *a4 = v9;
    }
  }
  return result;
}

uint64_t sub_22686DF0C(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 1);
  if (v1 == 30 || v1 == 2) {
    return bswap32(*(unsigned __int16 *)(a1 + 2)) >> 16;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_22686DF38(uint64_t result, unsigned int a2)
{
  int v2 = *(unsigned __int8 *)(result + 1);
  if (v2 == 30 || v2 == 2) {
    *(_WORD *)(result + 2) = bswap32(a2) >> 16;
  }
  return result;
}

uint64_t sub_22686DF5C(int a1, int a2)
{
  BOOL v3 = a2 != 0;
  int v4 = fcntl(a1, 3, 0);
  if (fcntl(a1, 4, v4 & 0xFFFFFFFB | (4 * v3)) != -1) {
    return 0;
  }
  if (*__error()) {
    return *__error();
  }
  return 4294960596;
}

uint64_t sub_22686DFD8(int a1, int a2, int a3)
{
  int v13 = a3;
  uint64_t result = 4294960591;
  if ((a1 & 0x80000000) == 0 && (a2 - 4097) <= 1)
  {
    int v12 = 0;
    if (a3 < 1)
    {
      if (a3 == -1)
      {
        return 0;
      }
      else
      {
        int v7 = -a3;
        size_t v11 = 4;
        if (sysctlbyname("kern.ipc.maxsockbuf", &v12, &v11, 0, 0) && (!*__error() || *__error())) {
          int v12 = 0x40000;
        }
        signed int v8 = (85 * v12 / 100 + 4095) & 0xFFFFF000;
        if (v8 > v7 && a3 < 0) {
          signed int v8 = v7;
        }
        int v12 = v8;
        do
        {
          uint64_t result = setsockopt(a1, 0xFFFF, a2, &v12, 4u);
          if (!result) {
            break;
          }
          if (*__error())
          {
            uint64_t result = *__error();
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t result = 4294960596;
          }
          int v10 = v12;
          v12 -= 1024;
        }
        while (v10 > 33791);
      }
    }
    else
    {
      uint64_t result = setsockopt(a1, 0xFFFF, a2, &v13, 4u);
      if (result)
      {
        if (*__error()) {
          return *__error();
        }
        else {
          return 4294960596;
        }
      }
    }
  }
  return result;
}

uint64_t sub_22686E160(int a1, int a2)
{
  int v3 = a2;
  uint64_t result = setsockopt(a1, 0xFFFF, 4356, &v3, 4u);
  if (result)
  {
    if (*__error()) {
      return *__error();
    }
    else {
      return 4294960596;
    }
  }
  return result;
}

uint64_t sub_22686E1B4(int a1, int a2, int a3)
{
  int v7 = a3;
  if (a1 < 0) {
    return 4294960591;
  }
  if (a2 != 30 && a2 != 2 || !a3) {
    return 0;
  }
  BOOL v3 = a2 == 30;
  if (a2 == 30) {
    int v4 = 41;
  }
  else {
    int v4 = 0;
  }
  if (v3) {
    int v5 = 125;
  }
  else {
    int v5 = 25;
  }
  uint64_t result = setsockopt(a1, v4, v5, &v7, 4u);
  if (result)
  {
    if (*__error()) {
      return *__error();
    }
    else {
      return 4294960596;
    }
  }
  return result;
}

uint64_t sub_22686E240(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 1);
  if (v1 == 30) {
    unsigned int v2 = 28;
  }
  else {
    unsigned int v2 = 0;
  }
  if (v1 == 2) {
    return 16;
  }
  else {
    return v2;
  }
}

unsigned __int8 *sub_22686E260(unsigned __int8 *__src, void *__dst)
{
  int v2 = __src[1];
  if (v2 == 2)
  {
    size_t v3 = 16;
  }
  else
  {
    if (v2 != 30) {
      return __src;
    }
    size_t v3 = 28;
  }
  return (unsigned __int8 *)memcpy(__dst, __src, v3);
}

uint64_t sub_22686E294(int a1)
{
  int v3 = a1;
  int v1 = (unsigned __int8 *)&unk_226912F38;
  while (!sub_22686E2F8((unsigned __int8 *)&v3, v1, v1[4]))
  {
    v1 += 5;
    if (v1 >= byte_226912F83) {
      return 0;
    }
  }
  return 1;
}

BOOL sub_22686E2F8(unsigned __int8 *a1, unsigned __int8 *a2, unsigned int a3)
{
  if (a3 >= 8)
  {
    uint64_t v3 = ((a3 - 8) >> 3) + 1;
    int v4 = &a2[v3];
    int v5 = &a1[v3];
    while (*a1 == *a2)
    {
      ++a2;
      ++a1;
      LOBYTE(a3) = a3 - 8;
      if (a3 <= 7u)
      {
        a1 = v5;
        a2 = v4;
        return !(_BYTE)a3 || ((-256 >> a3) & (*a2 ^ *a1)) == 0;
      }
    }
    return 0;
  }
  return !(_BYTE)a3 || ((-256 >> a3) & (*a2 ^ *a1)) == 0;
}

BOOL sub_22686E374(unsigned __int8 *a1, char a2)
{
  uint64_t v4 = 0;
  while (!sub_22686E2F8(a1, *(unsigned __int8 **)((char *)&off_2647BA680 + v4), *((unsigned __int8 *)&off_2647BA680 + v4 + 8)))
  {
    v4 += 16;
    if (v4 == 400) {
      return 0;
    }
  }
  if ((a2 & 1) != 0 && !v4 || (a2 & 2) != 0 && v4 == 320) {
    return 0;
  }
  return (a2 & 4) == 0 || v4 != 304;
}

BOOL sub_22686E400(unsigned int a1)
{
  BOOL result = 0;
  unsigned int v3 = bswap32(a1);
  if ((v3 & 0xFFFF0000) != 0xA9FE0000 && (v3 + 0x20000000) >> 24 >= 0x21 && (v3 & 0xFF000000) != 0x7F000000)
  {
    BOOL result = 0;
    if ((v3 & 0xFFFF0000) != 0xC0A80000 && (v3 & 0xFF000000) != 0xA000000 && (v3 & 0xFFF00000) != 0xAC100000)
    {
      BOOL result = 0;
      unsigned int v4 = v3 >> 8;
      if (v4 != 12582914 && v4 != 12989284) {
        return v4 != 13303921;
      }
    }
  }
  return result;
}

BOOL sub_22686E4A8(const char *a1)
{
  return strncmp(a1, "awdl", 4uLL) == 0;
}

uint64_t sub_22686E4D4(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = bswap32(*(_DWORD *)a1);
  unsigned int v3 = bswap32(*(_DWORD *)a2);
  if (v2 == v3)
  {
    unsigned int v2 = bswap32(*(unsigned __int16 *)(a1 + 4)) >> 16;
    unsigned int v4 = bswap32(*(unsigned __int16 *)(a2 + 4));
    if (v2 == HIWORD(v4)) {
      return 0;
    }
    unsigned int v3 = HIWORD(v4);
  }
  if (v2 < v3) {
    return 0xFFFFFFFFLL;
  }
  else {
    return 1;
  }
}

uint64_t sub_22686E524(unsigned char *a1, char a2, _OWORD *a3, unsigned int *a4, int *a5, unsigned int *a6, void *a7)
{
  uint64_t v68 = *MEMORY[0x263EF8340];
  if (!a1) {
    return 4294960591;
  }
  int v12 = a1 + 1;
  if (*a1 != 91) {
    int v12 = a1;
  }
  *(void *)double v67 = v12;
  long long v66 = 0uLL;
  if (*v12 == 58)
  {
    int v13 = *++v12;
    *(void *)double v67 = v12;
    if (v13 != 58) {
      return 4294960554;
    }
  }
  unint64_t v14 = 0;
  signed int v15 = 0;
LABEL_7:
  unsigned int v16 = 0;
  int v17 = v12;
  int v18 = v15;
  while (2)
  {
    signed int v15 = v18;
    int v12 = v17 + 1;
    char v19 = 1;
    while (1)
    {
      int v20 = *(v12 - 1);
      if ((v20 - 37) <= 0x38 && ((1 << (v20 - 37)) & 0x100000000000401) != 0
        || v20 == 0)
      {
        *(void *)double v67 = v12;
        goto LABEL_32;
      }
      int v20 = (char)v20;
      if (((char)v20 - 97) < 6) {
        int v20 = (char)v20 - 32;
      }
      uint64_t v23 = v20 - 48;
      if (v23 >= 0xA && (v20 - 65) > 5) {
        break;
      }
      char v19 = 0;
      ++v12;
      unsigned int v16 = byte_226913004[v23] | (16 * v16);
      if (v16 >= 0x10000) {
        return 4294960586;
      }
    }
    if (v20 == 58)
    {
      if (v19)
      {
        int v17 = v12;
        int v18 = &v67[v14 - 16];
        if (!v15) {
          continue;
        }
        return 4294960554;
      }
      *(void *)double v67 = v12;
      if (*v12)
      {
        if (v14 <= 0xE)
        {
          uint64_t v25 = v14 | 1;
          v67[v14 - 16] = BYTE1(v16);
          v14 += 2;
          v67[v25 - 16] = v16;
          goto LABEL_7;
        }
        return 4294960545;
      }
      return 4294960546;
    }
    break;
  }
  *(void *)double v67 = v12;
  if ((a2 & 8) == 0 && v20 == 46 && v14 <= 0xC)
  {
    double v32 = a6;
    uint64_t v31 = sub_22686EBB4(v17, &v67[v14 - 16], v67);
    if (v31) {
      return v31;
    }
    v14 += 4;
    int v12 = (unsigned char *)++*(void *)v67;
    a6 = v32;
    if (!v15) {
      goto LABEL_48;
    }
LABEL_36:
    if ((uint64_t)v14 <= 15)
    {
      long long v27 = (char *)(&v67[v14 - 16] - v15);
      if ((int)(&v67[v14 - 16] - v15) >= 1)
      {
        uint64_t v28 = (v27 + 1) - 1;
        fd_set v29 = (char *)&v66 + 15;
        uint64_t v30 = &v15[(int)v27 - 1];
        do
        {
          *v29-- = *v30;
          *v30-- = 0;
          --v28;
        }
        while (v28);
        int v12 = *(unsigned char **)v67;
      }
      goto LABEL_49;
    }
    return 4294960545;
  }
LABEL_32:
  if ((v19 & 1) == 0)
  {
    if (v14 > 0xE) {
      return 4294960545;
    }
    uint64_t v26 = v14 | 1;
    v67[v14 - 16] = BYTE1(v16);
    v14 += 2;
    v67[v26 - 16] = v16;
  }
  if (v15) {
    goto LABEL_36;
  }
LABEL_48:
  if (v14 != 16) {
    return 4294960546;
  }
LABEL_49:
  unsigned int v33 = 0;
  int v34 = 0;
  int v35 = 0;
  int v36 = 0;
  int v37 = 0;
  unsigned int v38 = 0;
  uint64_t v39 = 0;
  int v40 = v12 - 1;
  uint64_t v41 = a2 & 1;
  uint64_t v42 = a2 & 4;
LABEL_50:
  while (2)
  {
    int v43 = *v40;
    while (1)
    {
      while (v43 == 47)
      {
        if (v37 | a2 & 2)
        {
          BOOL v58 = v37 == 0;
          goto LABEL_105;
        }
        int v44 = *++v40;
        int v43 = v44;
        if ((v44 - 48) <= 9)
        {
          do
          {
            unsigned int v38 = v43 + 10 * v38 - 48;
            int v45 = *++v40;
            int v43 = v45;
          }
          while ((v45 - 48) < 0xA);
        }
        int v37 = 1;
        if (v38 >= 0x81) {
          return 4294960586;
        }
      }
      if (v43 == 93)
      {
        if (v39) {
          return 4294960554;
        }
        ++v40;
        uint64_t v39 = 1;
        goto LABEL_50;
      }
      if (v43 != 58) {
        break;
      }
      if (v35 | v41)
      {
        BOOL v58 = v35 == 0;
        goto LABEL_105;
      }
      int v46 = *++v40;
      int v43 = v46;
      if ((v46 - 48) <= 9)
      {
        do
        {
          int v36 = v43 + 10 * v36 - 48;
          int v47 = *++v40;
          int v43 = v47;
        }
        while ((v47 - 48) < 0xA);
      }
      uint64_t v31 = 4294960586;
      int v35 = 1;
      if (v36 >= 0x10000) {
        return v31;
      }
    }
    if (v43 == 37)
    {
      if (v34 | v42)
      {
        BOOL v58 = v34 == 0;
LABEL_105:
        if (v58) {
          return 4294960560;
        }
        else {
          return 4294960554;
        }
      }
      float v64 = a7;
      for (uint64_t i = 0; ; ++i)
      {
        int v49 = v40[i + 1];
        BOOL v50 = (v49 - 47) > 0x2E || ((1 << (v49 - 47)) & 0x400000000801) == 0;
        BOOL v51 = !v50 || v49 == 0;
        if (v51 || i == 63) {
          break;
        }
        v67[i] = v49;
      }
      double v60 = a3;
      double v61 = a4;
      double v62 = a5;
      double v63 = a6;
      v67[i] = 0;
      uint64_t v52 = v41;
      uint64_t v53 = v39;
      uint64_t v54 = v42;
      int v65 = v35;
      unsigned int v33 = if_nametoindex(v67);
      int v35 = v65;
      uint64_t v42 = v54;
      uint64_t v39 = v53;
      uint64_t v41 = v52;
      if (v33) {
        goto LABEL_87;
      }
      int v55 = v67[0];
      if (v67[0] - 48 > 9)
      {
        unsigned int v33 = 0;
        int v56 = v67;
      }
      else
      {
        unsigned int v33 = 0;
        int v56 = v67;
        do
        {
          unsigned int v33 = v55 + 10 * v33 - 48;
          int v57 = *++v56;
          int v55 = v57;
        }
        while ((v57 - 48) < 0xA);
      }
      if (!v55 && v56 != v67 && (int)(v56 - v67) < 11)
      {
LABEL_87:
        v40 += i + 1;
        int v34 = 1;
        a6 = v63;
        a7 = v64;
        a4 = v61;
        a5 = v62;
        a3 = v60;
        continue;
      }
      return 4294960554;
    }
    break;
  }
  if (a3) {
    *a3 = v66;
  }
  if (a4 && v34) {
    *a4 = v33;
  }
  if (a5 && v35) {
    *a5 = v36;
  }
  if (a6 && v37) {
    *a6 = v38;
  }
  uint64_t v31 = 0;
  if (a7) {
    *a7 = v40;
  }
  return v31;
}

uint64_t sub_22686EA18(char *a1, char a2, unsigned int *a3, int *a4, int *a5, int *a6, char **a7)
{
  long long v27 = a1;
  if (!a1) {
    return 4294960591;
  }
  uint64_t result = sub_22686EBB4(a1, &v26, &v27);
  if (!result)
  {
    unint64_t v14 = v27;
    int v15 = *v27;
    if (v15 == 58)
    {
      if (a2) {
        return 4294960560;
      }
      unint64_t v14 = v27 + 1;
      int v16 = v27[1];
      if ((v16 - 48) > 9)
      {
        int v17 = 0;
        ++v27;
      }
      else
      {
        int v17 = 0;
        do
        {
          int v17 = v16 + 10 * v17 - 48;
          int v18 = *++v14;
          int v16 = v18;
        }
        while ((v18 - 48) < 0xA);
        long long v27 = v14;
        if (v17 >= 0x10000) {
          return 4294960586;
        }
      }
    }
    else
    {
      int v17 = 0;
      int v16 = *v27;
    }
    unsigned int v19 = bswap32(v26);
    if (v16 != 47)
    {
      int v24 = 0;
      int v25 = 0;
      if (!a3) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
    if ((a2 & 2) == 0)
    {
      int v21 = *++v14;
      int v20 = v21;
      if ((v21 - 48) > 9)
      {
        LOBYTE(v22) = 0;
      }
      else
      {
        unsigned int v22 = 0;
        do
        {
          unsigned int v22 = v20 + 10 * v22 - 48;
          int v23 = *++v14;
          int v20 = v23;
        }
        while ((v23 - 48) < 0xA);
        if (v22 > 0x20) {
          return 4294960586;
        }
      }
      int v24 = -1 << -(char)v22;
      int v25 = v24 & v19 | 1;
      if (!a3) {
        goto LABEL_22;
      }
LABEL_21:
      *a3 = v19;
LABEL_22:
      if (a4 && v15 == 58) {
        *a4 = v17;
      }
      if (a5 && v16 == 47) {
        *a5 = v24;
      }
      if (a6 && v16 == 47) {
        *a6 = v25;
      }
      uint64_t result = 0;
      if (a7) {
        *a7 = v14;
      }
      return result;
    }
    return 4294960560;
  }
  return result;
}

uint64_t sub_22686EBB4(unsigned char *a1, unsigned char *a2, void *a3)
{
  *a2 = 0;
  int v3 = *a1;
  if (!*a1) {
    return 4294960546;
  }
  LOBYTE(v4) = 0;
  int v5 = 0;
  int v6 = 0;
  do
  {
    if ((v3 - 48) <= 9)
    {
      unsigned int v4 = v3 + 10 * v4 - 48;
      if (v4 > 0xFF) {
        return 4294960586;
      }
      *a2 = v4;
      if (!v5)
      {
        if (v6 > 3) {
          return 4294960545;
        }
        ++v6;
      }
      int v5 = 1;
      goto LABEL_13;
    }
    if (!v5 || v3 != 46) {
      break;
    }
    if (v6 > 3) {
      return 4294960554;
    }
    LOBYTE(v4) = 0;
    int v5 = 0;
    *++a2 = 0;
LABEL_13:
    int v7 = *++a1;
    int v3 = v7;
  }
  while (v7);
  if (v6 != 4) {
    return 4294960546;
  }
  uint64_t v8 = 0;
  *a3 = a1;
  return v8;
}

char *sub_22686EC6C(unsigned char *a1, unsigned int a2, int a3, unsigned int a4, char *a5)
{
  unsigned int v7 = a3;
  unsigned int v8 = a2;
  uint64_t v50 = *MEMORY[0x263EF8340];
  if (a3 > 0 || (uint64_t v9 = a5, a3 == -2))
  {
    *a5 = 91;
    uint64_t v9 = a5 + 1;
  }
  if (*a1 || a1[1]) {
    goto LABEL_30;
  }
  BOOL v10 = !a1[2]
     && !a1[3]
     && !a1[4]
     && !a1[5]
     && !a1[6]
     && !a1[7]
     && !a1[8]
     && !a1[9]
     && a1[10] == 255
     && a1[11] == 255;
  if (a1[2] || a1[3] || a1[4] || a1[5] || a1[6] || a1[7] || a1[8] || a1[9] || a1[10] || a1[11])
  {
    int v11 = 0;
    goto LABEL_27;
  }
  if (a1[12] || a1[13]) {
    goto LABEL_101;
  }
  if (a1[14] || (int v11 = a1[15], a1[15]))
  {
    if (a1[14])
    {
LABEL_101:
      int v11 = 1;
      goto LABEL_27;
    }
    int v11 = a1[15] != 1;
  }
LABEL_27:
  if ((v10 | v11) != 1)
  {
LABEL_30:
    unint64_t v12 = 0;
    int v13 = v48;
    while (1)
    {
      uint64_t v14 = v12 | 1;
      unint64_t v15 = a1[v12];
      if (v15 >= 0x10)
      {
        *int v13 = a0123456789abcd_1[v15 >> 4];
        LODWORD(v15) = v15 & 0xF;
        uint64_t v16 = 1;
      }
      else
      {
        if (!a1[v12])
        {
          uint64_t v18 = 0;
          uint64_t v20 = 0;
          v12 += 2;
          unsigned int v19 = a1[v14];
          if (v19 < 0x10) {
            goto LABEL_37;
          }
          goto LABEL_36;
        }
        uint64_t v16 = 0;
      }
      char v17 = a0123456789abcd_1[v15];
      uint64_t v18 = v16 + 1;
      v13[v16] = v17;
      v12 += 2;
      unsigned int v19 = a1[v14];
LABEL_36:
      uint64_t v20 = v18 + 1;
      v13[v18] = a0123456789abcd_1[(unint64_t)v19 >> 4];
LABEL_37:
      *(_WORD *)&v13[v20] = a0123456789abcd_1[v19 & 0xF];
      v13 += 5;
      if (v12 >= 0x10)
      {
        int v21 = 0;
        unsigned int v22 = a1 + 15;
        for (uint64_t i = 28; i != -4; i -= 4)
        {
          if (*(v22 - 1))
          {
            int v21 = 0;
          }
          else if (*v22)
          {
            int v21 = 0;
          }
          else
          {
            ++v21;
          }
          *(_DWORD *)&v47[i] = v21;
          v22 -= 2;
        }
        uint64_t v24 = 0;
        int v25 = 0;
        int v26 = -1;
        do
        {
          if (*(_DWORD *)&v47[4 * v24] > v25)
          {
            int v25 = *(_DWORD *)&v47[4 * v24];
            int v26 = v24;
          }
          ++v24;
        }
        while (v24 != 8);
        int v27 = 0;
        while (1)
        {
          if (v27 == v26)
          {
            if (!v26) {
              *v9++ = 58;
            }
            *uint64_t v9 = 58;
            int v27 = v26 - 1 + *(_DWORD *)&v47[4 * v26];
          }
          else
          {
            char v28 = v48[5 * v27];
            if (v28)
            {
              fd_set v29 = &v48[5 * v27 + 1];
              do
              {
                *v9++ = v28;
                int v30 = *v29++;
                char v28 = v30;
              }
              while (v30);
            }
            if (v27 == 7) {
              goto LABEL_62;
            }
            *uint64_t v9 = 58;
          }
          ++v9;
          BOOL v31 = v27++ < 7;
          if (!v31) {
            goto LABEL_62;
          }
        }
      }
    }
  }
  *(_WORD *)uint64_t v9 = 14906;
  if (v10)
  {
    *(_DWORD *)(v9 + 2) = 1717986918;
    v9[6] = 58;
    v9 += 7;
  }
  else
  {
    v9 += 2;
  }
  for (uint64_t j = 12; ; ++j)
  {
    unsigned int v44 = a1[j];
    int v45 = v49;
    do
    {
      *v45++ = (v44 % 0xA) | 0x30;
      BOOL v31 = v44 > 9;
      v44 /= 0xAu;
    }
    while (v31);
    while (v45 > v49)
    {
      char v46 = *--v45;
      *v9++ = v46;
    }
    if (j == 15) {
      break;
    }
    *v9++ = 46;
  }
LABEL_62:
  if (a2)
  {
    *v9++ = 37;
    double v32 = if_indextoname(a2, v49);
    if (v32)
    {
      char v33 = *v32;
      if (*v32)
      {
        int v34 = (unsigned __int8 *)(v32 + 1);
        do
        {
          *v9++ = v33;
          int v35 = *v34++;
          char v33 = v35;
        }
        while (v35);
      }
    }
    else
    {
      uint64_t v41 = v49;
      do
      {
        *v41++ = (v8 % 0xA) | 0x30;
        BOOL v31 = v8 > 9;
        v8 /= 0xAu;
      }
      while (v31);
      while (v41 > v49)
      {
        char v42 = *--v41;
        *v9++ = v42;
      }
    }
  }
  if ((int)v7 < 1)
  {
    if (v7 == -2) {
      *v9++ = 93;
    }
  }
  else
  {
    *(_WORD *)uint64_t v9 = 14941;
    int v36 = v49;
    do
    {
      *v36++ = (v7 % 0xA) | 0x30;
      BOOL v31 = v7 > 9;
      v7 /= 0xAu;
    }
    while (v31);
    v9 += 2;
    while (v36 > v49)
    {
      char v37 = *--v36;
      *v9++ = v37;
    }
  }
  if ((a4 & 0x80000000) == 0)
  {
    *uint64_t v9 = 47;
    unsigned int v38 = v49;
    do
    {
      *v38++ = (a4 % 0xA) | 0x30;
      BOOL v31 = a4 > 9;
      a4 /= 0xAu;
    }
    while (v31);
    ++v9;
    while (v38 > v49)
    {
      char v39 = *--v38;
      *v9++ = v39;
    }
  }
  *uint64_t v9 = 0;
  return a5;
}

uint64_t sub_22686F180(unsigned __int8 *a1, unint64_t a2)
{
  int v2 = 0x2000;
  if (a2)
  {
    if (*a1) {
      int v3 = *a1 << 8;
    }
    else {
      int v3 = 0x2000;
    }
    int v4 = 32;
    if (a2 == 1)
    {
      int v5 = 32;
    }
    else
    {
      if (a1[1]) {
        int v5 = a1[1];
      }
      else {
        int v5 = 32;
      }
      int v2 = 0x2000;
      if (a2 >= 3)
      {
        if (a1[2]) {
          int v2 = a1[2] << 8;
        }
        else {
          int v2 = 0x2000;
        }
        int v4 = 32;
        if (a2 != 3)
        {
          if (a1[3]) {
            int v4 = a1[3];
          }
          else {
            int v4 = 32;
          }
        }
      }
    }
  }
  else
  {
    int v5 = 32;
    int v3 = 0x2000;
    int v4 = 32;
  }
  return v4 | v2 | ((v3 | v5) << 16);
}

uint64_t sub_22686F20C(char *__s, size_t a2, int a3, unsigned char *a4)
{
  int v6 = __s;
  if (a2 == -1) {
    a2 = strlen(__s);
  }
  if (a3 < 1) {
    return 0;
  }
  unsigned int v7 = &v6[a2];
  uint64_t v8 = MEMORY[0x263EF8318];
LABEL_5:
  if (v6 < v7)
  {
    int v9 = 0;
    int v10 = 0;
    int v11 = v6 + 1;
    while (1)
    {
      int v6 = v11;
      __darwin_ct_rune_t v12 = *(v11 - 1);
      if ((v12 - 48) > 9)
      {
        if ((*(_DWORD *)(v8 + 4 * *(v11 - 1) + 60) & 0x10000) == 0)
        {
          if (v10) {
            goto LABEL_20;
          }
          if ((char)v12 > 0x3A || ((1 << v12) & 0x400200100000000) == 0) {
            return 4294960554;
          }
          int v10 = 0;
          goto LABEL_18;
        }
        int v9 = __tolower(v12) + 16 * v9 - 87;
      }
      else
      {
        int v9 = (char)v12 + 16 * v9 - 48;
      }
      ++v10;
LABEL_18:
      if (v10 <= 1)
      {
        int v11 = v6 + 1;
        if (v6 < v7) {
          continue;
        }
      }
LABEL_20:
      if (!v10) {
        return 4294960554;
      }
      if (a4) {
        *a4++ = v9;
      }
      if (a3-- <= 1) {
        return 0;
      }
      goto LABEL_5;
    }
  }
  return 4294960554;
}

unsigned char *sub_22686F33C(unsigned __int8 *a1, uint64_t a2, unsigned char *a3)
{
  int v3 = a3;
  if (a2 >= 1)
  {
    int v4 = &a1[a2];
    int v3 = a3;
    do
    {
      int v5 = a3;
      if (v3 != a3)
      {
        *int v3 = 58;
        int v5 = v3 + 1;
      }
      unsigned int v6 = *a1++;
      *int v5 = a0123456789abcd_0[(unint64_t)v6 >> 4];
      int v3 = v5 + 2;
      v5[1] = a0123456789abcd_0[v6 & 0xF];
    }
    while (a1 < v4);
  }
  *int v3 = 0;
  return a3;
}

uint64_t sub_22686F3A4(char *__s, int64_t a2, int *a3)
{
  int64_t v4 = a2;
  if (a2 == -1) {
    int64_t v4 = strlen(__s);
  }
  unsigned int v6 = &__s[v4];
  if (v4 < 1)
  {
    uint64_t v8 = __s;
  }
  else
  {
    uint64_t v7 = MEMORY[0x263EF8318];
    uint64_t v8 = __s;
    do
    {
      uint64_t v9 = *v8;
      if (*v8 < 0)
      {
        if (!__maskrune(v9, 0x4000uLL)) {
          break;
        }
      }
      else if ((*(_DWORD *)(v7 + 4 * v9 + 60) & 0x4000) == 0)
      {
        break;
      }
      ++v8;
    }
    while (v8 < v6);
  }
  if (v8 >= v6)
  {
    BOOL v14 = 0;
LABEL_21:
    int v10 = v8;
    goto LABEL_22;
  }
  if (*v8 - 48 > 9)
  {
    BOOL v14 = 1;
    goto LABEL_21;
  }
  int v10 = &__s[v4];
  int v11 = v8 + 1;
  __darwin_ct_rune_t v12 = &__s[v4 + ~(unint64_t)v8];
  while (1)
  {
    int v13 = v11;
    if (!v12) {
      break;
    }
    ++v11;
    --v12;
    if (*v13 - 48 > 9)
    {
      int v10 = v13;
      break;
    }
  }
  BOOL v14 = v13 < v6;
LABEL_22:
  if (v8 == v10) {
    return 4294960554;
  }
  unsigned int v15 = sub_22686F724(v8, v10 - v8, 10);
  if (v15 > 0xFF) {
    return 4294960586;
  }
  unsigned int v16 = v15;
  char v17 = &v10[v14];
  if (v17 >= v6)
  {
    BOOL v20 = 1;
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v18 = v17;
    while (1)
    {
      unsigned int v19 = *v18 - 48;
      BOOL v20 = v19 < 0xA;
      if (v19 > 9) {
        break;
      }
      if (++v18 >= v6)
      {
        uint64_t v18 = &__s[v4];
        break;
      }
    }
  }
  unsigned int v22 = sub_22686F724(v17, v18 - v17, 10);
  if (v22 > 0xF) {
    return 4294960586;
  }
  unsigned int v23 = v22;
  char v24 = v17 == v18 || v20;
  if ((v24 & 1) == 0)
  {
    char v28 = v18 + 1;
    __darwin_ct_rune_t v29 = __tolower(*v18);
    if (v29 != 46)
    {
      unsigned int v25 = 0;
      int v30 = v28;
      goto LABEL_46;
    }
    if (v28 >= v6)
    {
      uint64_t v31 = 1;
      int v30 = v18 + 1;
      BOOL v35 = 1;
    }
    else
    {
      if (v18[1] - 48 > 9)
      {
        char v47 = 0;
        uint64_t v31 = 1;
        int v30 = v18 + 1;
LABEL_79:
        unsigned int v44 = sub_22686F724(v18 + 1, v31 - 1, 10);
        if (v44 <= 0xF)
        {
          unsigned int v25 = v44;
          char v45 = v47;
          if (v31 == 1) {
            char v45 = 1;
          }
          if (v45)
          {
            int v37 = 0x8000;
LABEL_54:
            unsigned int v38 = v30;
            if (v30 < v6)
            {
              char v39 = (char *)(&__s[v4] - v30);
              unsigned int v38 = v30;
              while (*v38 - 48 <= 9)
              {
                ++v38;
                if (!--v39)
                {
                  unsigned int v38 = &__s[v4];
                  break;
                }
              }
            }
            if (v30 >= v38) {
              unsigned int v40 = 0;
            }
            else {
              unsigned int v40 = sub_22686F724(v30, v38 - v30, 10);
            }
            BOOL v42 = v30 == v38 || v40 > 0xFF;
            BOOL v43 = !v42;
            if (v42) {
              int v27 = 0x8000;
            }
            else {
              int v27 = v37;
            }
            if (v43) {
              unsigned int v26 = v40;
            }
            else {
              unsigned int v26 = 0;
            }
            goto LABEL_74;
          }
          __darwin_ct_rune_t v46 = *v30++;
          __darwin_ct_rune_t v29 = __tolower(v46);
LABEL_46:
          if (v29 == 100) {
            int v36 = 0x2000;
          }
          else {
            int v36 = 0x8000;
          }
          if (v29 == 98) {
            int v36 = 24576;
          }
          if (v29 == 97) {
            int v37 = 0x4000;
          }
          else {
            int v37 = v36;
          }
          goto LABEL_54;
        }
        return 4294960586;
      }
      int v30 = &__s[v4];
      uint64_t v31 = &__s[v4] - v18;
      uint64_t v32 = 2;
      while (1)
      {
        uint64_t v33 = v32;
        if (v31 == v32) {
          break;
        }
        unsigned int v34 = v18[v32++] - 48;
        if (v34 > 9)
        {
          uint64_t v31 = v33;
          int v30 = &v18[v33];
          break;
        }
      }
      BOOL v35 = &v18[v33] >= v6;
    }
    char v47 = v35;
    goto LABEL_79;
  }
  unsigned int v25 = 0;
  unsigned int v26 = 0;
  int v27 = 0x8000;
LABEL_74:
  uint64_t result = 0;
  if (a3) {
    *a3 = (v23 << 20) | (v16 << 24) | (v25 << 16) | v27 | v26;
  }
  return result;
}

uint64_t sub_22686F724(char *__s, int64_t a2, int a3)
{
  int64_t v4 = a2;
  if (a2 == -1) {
    int64_t v4 = strlen(__s);
  }
  unsigned int v6 = &__s[v4];
  if (v4 < 1)
  {
    uint64_t v8 = __s;
  }
  else
  {
    uint64_t v7 = MEMORY[0x263EF8318];
    uint64_t v8 = __s;
    do
    {
      uint64_t v9 = *v8;
      if (*v8 < 0)
      {
        if (!__maskrune(v9, 0x4000uLL)) {
          break;
        }
      }
      else if ((*(_DWORD *)(v7 + 4 * v9 + 60) & 0x4000) == 0)
      {
        break;
      }
      ++v8;
    }
    while (v8 < v6);
  }
  if (v6 - v8 <= 1)
  {
    if (a3) {
      goto LABEL_22;
    }
  }
  else
  {
    if (*v8 == 48)
    {
      if (__tolower(v8[1]) == 120)
      {
        v8 += 2;
        a3 = 16;
LABEL_22:
        int v10 = a3 - 2;
        goto LABEL_27;
      }
      if (*v8 == 48 && __tolower(v8[1]) == 98)
      {
        v8 += 2;
        a3 = 2;
        goto LABEL_22;
      }
    }
    if (a3) {
      goto LABEL_22;
    }
    if (*v8 == 48 && (v8[1] & 0xF8) == 0x30)
    {
      a3 = 8;
      ++v8;
      goto LABEL_22;
    }
  }
  int v10 = 8;
LABEL_27:
  uint64_t v11 = 0;
  HIDWORD(v12) = v10;
  LODWORD(v12) = v10;
  switch((v12 >> 1))
  {
    case 0u:
      if (v8 >= v6) {
        goto LABEL_54;
      }
      uint64_t v11 = 0;
      int v13 = (char *)(&__s[v4] - v8);
      do
      {
        int v14 = *v8;
        if ((v14 - 50) < 0xFFFFFFFE) {
          break;
        }
        ++v8;
        uint64_t v11 = (v14 + 2 * v11 - 48);
        --v13;
      }
      while (v13);
      break;
    case 3u:
      if (v8 >= v6) {
        goto LABEL_54;
      }
      uint64_t v11 = 0;
      unsigned int v15 = (char *)(&__s[v4] - v8);
      do
      {
        int v16 = *v8;
        if ((v16 - 56) < 0xFFFFFFF8) {
          break;
        }
        ++v8;
        uint64_t v11 = (v16 + 8 * v11 - 48);
        --v15;
      }
      while (v15);
      break;
    case 4u:
      int v17 = *v8;
      if (v17 == 45 || v17 == 43) {
        ++v8;
      }
      unsigned int v18 = 0;
      while (v8 < v6)
      {
        int v20 = *v8++;
        int v19 = v20;
        if (v20 != 44)
        {
          unsigned int v21 = v19 - 48;
          if (v21 > 9) {
            break;
          }
          unsigned int v18 = v21 + 10 * v18;
        }
      }
      if (v17 == 45) {
        uint64_t v11 = -v18;
      }
      else {
        uint64_t v11 = v18;
      }
      break;
    case 7u:
      if (v8 >= v6)
      {
LABEL_54:
        uint64_t v11 = 0;
      }
      else
      {
        uint64_t v11 = 0;
        unsigned int v22 = (char *)(&__s[v4] - v8);
        uint64_t v23 = MEMORY[0x263EF8318];
        do
        {
          unsigned int v25 = *v8++;
          unsigned int v24 = v25;
          unsigned int v26 = v25 - 48;
          if (v25 - 48 > 9)
          {
            if ((*(_DWORD *)(v23 + 4 * v24 + 60) & 0x10000) == 0) {
              return v11;
            }
            uint64_t v11 = (__tolower(v24) + 16 * v11 - 87);
          }
          else
          {
            uint64_t v11 = v26 + 16 * v11;
          }
          --v22;
        }
        while (v22);
      }
      break;
    default:
      return v11;
  }
  return v11;
}

uint64_t sub_22686F9E4(char *__s, int64_t a2)
{
  int64_t v2 = a2;
  if (a2 == -1) {
    int64_t v2 = strlen(__s);
  }
  int64_t v4 = &__s[v2];
  if (v2 < 1)
  {
    unsigned int v6 = __s;
  }
  else
  {
    uint64_t v5 = MEMORY[0x263EF8318];
    unsigned int v6 = __s;
    do
    {
      uint64_t v7 = *v6;
      if (*v6 < 0)
      {
        if (!__maskrune(v7, 0x4000uLL)) {
          break;
        }
      }
      else if ((*(_DWORD *)(v5 + 4 * v7 + 60) & 0x4000) == 0)
      {
        break;
      }
      ++v6;
    }
    while (v6 < v4);
  }
  if (v6 >= v4)
  {
    int v10 = 0;
    unsigned int v8 = 0;
  }
  else
  {
    unsigned int v8 = 0;
    uint64_t v9 = (char *)(&__s[v2] - v6);
    while (1)
    {
      int v10 = *v6;
      if ((v10 - 48) > 9 || v8 >= 0x346DC) {
        break;
      }
      unsigned int v8 = v10 - 48 + 10 * v8;
      ++v6;
      if (!--v9)
      {
        unsigned int v6 = &__s[v2];
        break;
      }
    }
    if (v8 > 0x346DB) {
      return 0;
    }
  }
  if (v10 == 46) {
    unint64_t v12 = v6 + 1;
  }
  else {
    unint64_t v12 = v6;
  }
  if (v12 >= v4)
  {
    unsigned int v13 = 0;
  }
  else
  {
    unsigned int v13 = 0;
    while (1)
    {
      int v10 = *v12;
      if ((v10 - 48) > 9 || v13 > 0x63) {
        break;
      }
      unsigned int v13 = v10 - 48 + 10 * v13;
      if (++v12 >= v4)
      {
        unint64_t v12 = &__s[v2];
        break;
      }
    }
    if (v13 > 0x63) {
      return 0;
    }
  }
  if (v10 == 46) {
    ++v12;
  }
  if (v12 >= v4)
  {
    unsigned int v14 = 0;
  }
  else
  {
    unsigned int v14 = 0;
    do
    {
      unsigned int v15 = *v12 - 48;
      if (v15 > 9) {
        break;
      }
      if (v14 > 0x63) {
        break;
      }
      unsigned int v14 = v15 + 10 * v14;
      ++v12;
    }
    while (v12 < v4);
    if (v14 > 0x63) {
      return 0;
    }
  }
  return 10000 * v8 + 100 * v13 + v14;
}

uint64_t sub_22686FBB0(char *__s, int64_t a2, uint64_t a3, unsigned char *a4, void *a5)
{
  unsigned int v8 = __s;
  if (a2 == -1) {
    a2 = strlen(__s);
  }
  uint64_t v9 = &v8[a2];
  uint64_t v10 = MEMORY[0x263EF8318];
  if (a2 >= 1)
  {
    do
    {
      uint64_t v11 = *v8;
      if (*v8 < 0)
      {
        if (!__maskrune(v11, 0x4000uLL)) {
          break;
        }
      }
      else if ((*(_DWORD *)(v10 + 4 * v11 + 60) & 0x4000) == 0)
      {
        break;
      }
      ++v8;
    }
    while (v8 < v9);
  }
  uint64_t v12 = v9 - v8;
  if (v9 - v8 <= 1)
  {
    uint64_t result = 0;
    unsigned int v14 = a4;
    if (a5) {
LABEL_28:
    }
      *a5 = v14 - a4;
  }
  else
  {
    unint64_t v13 = (unint64_t)&a4[a3];
    unsigned int v14 = a4;
    while (1)
    {
      unsigned int v15 = __tolower(*v8);
      if (v15 > 0xFF || (unsigned int v16 = v15, (*(_DWORD *)(v10 + 4 * v15 + 60) & 0x10000) == 0))
      {
LABEL_25:
        uint64_t result = 0;
        if (a5) {
          goto LABEL_28;
        }
        return result;
      }
      unsigned int v17 = __tolower(v8[1]);
      if (v17 > 0xFF || (*(_DWORD *)(v10 + 4 * v17 + 60) & 0x10000) == 0) {
        break;
      }
      if (a4 && (unint64_t)v14 < v13)
      {
        if (v16 <= 0x60) {
          char v18 = -48;
        }
        else {
          char v18 = -87;
        }
        char v19 = v18 + v16;
        if (v17 <= 0x60) {
          char v20 = -48;
        }
        else {
          char v20 = -87;
        }
        *unsigned int v14 = (v20 + v17) | (16 * v19);
      }
      ++v14;
      v12 -= 2;
      v8 += 2;
      if (v12 <= 1) {
        goto LABEL_25;
      }
    }
    uint64_t result = 4294960554;
    if (a5) {
      goto LABEL_28;
    }
  }
  return result;
}

char *sub_22686FD28(unsigned __int8 *a1, int a2, char *__str)
{
  if (a2)
  {
    int v4 = a1[3];
    int v5 = a1[2];
    int v6 = a1[1];
    int v7 = *a1;
    int v8 = a1[5];
    int v9 = a1[4];
    int v10 = a1[7];
    int v11 = a1[6];
  }
  else
  {
    int v4 = *a1;
    int v5 = a1[1];
    int v6 = a1[2];
    int v7 = a1[3];
    int v8 = a1[4];
    int v9 = a1[5];
    int v10 = a1[6];
    int v11 = a1[7];
  }
  snprintf(__str, 0x25uLL, "%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x", v4, v5, v6, v7, v8, v9, v10, v11, a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return __str;
}

double sub_22686FDF0(char *__s, size_t a2, int a3, _OWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  if (a2 == -1) {
    a2 = strlen(__s);
  }
  if (a2 == 36)
  {
    int v13 = 0;
    if (a3) {
      int v12 = sub_22686FF74(__s, 0x24uLL, "%2hhx%2hhx%2hhx%2hhx-%2hhx%2hhx-%2hhx%2hhx-%2hhx%2hhx-%2hhx%2hhx%2hhx%2hhx%2hhx%2hhx%n", (uint64_t)&v14 + 4, (uint64_t)&v14 + 7, (uint64_t)&v14 + 6, (uint64_t)&v13, a8, (int)&v14 + 3);
    }
    else {
      int v12 = sub_22686FF74(__s, 0x24uLL, "%2hhx%2hhx%2hhx%2hhx-%2hhx%2hhx-%2hhx%2hhx-%2hhx%2hhx-%2hhx%2hhx%2hhx%2hhx%2hhx%2hhx%n", (uint64_t)&v14 + 5, (uint64_t)&v14 + 6, (uint64_t)&v14 + 7, (uint64_t)&v13, a8, (int)&v14);
    }
    if (v12 == 16 && v13 == 36)
    {
      if (a4)
      {
        double result = *(double *)&v14;
        *a4 = v14;
      }
    }
  }
  return result;
}

uint64_t sub_22686FF74(char *a1, size_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return sub_2268703B8(a1, a2, a3, &a9);
}

unsigned char *sub_22686FFA0(unsigned char *a1, size_t a2)
{
  size_t v3 = 0;
  if (a2)
  {
    while (a1[v3])
    {
      if (a2 == ++v3)
      {
        size_t v3 = a2;
        break;
      }
    }
  }
  int v4 = malloc_type_malloc(v3 + 1, 0xAD0833DAuLL);
  int v5 = v4;
  if (v4)
  {
    memcpy(v4, a1, v3);
    v5[v3] = 0;
  }
  return v5;
}

uint64_t sub_226870018(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t result = 0;
  while (*(unsigned char *)(a1 + result))
  {
    if (a2 == ++result) {
      return a2;
    }
  }
  return result;
}

uint64_t sub_226870048(unsigned __int8 *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v4 = a3;
  while (v3)
  {
    unsigned int v6 = *a1++;
    unsigned int v5 = v6;
    unsigned int v8 = *v4++;
    unsigned int v7 = v8;
    BOOL v9 = v5 > v8;
    if (v5 < v8) {
      return 0xFFFFFFFFLL;
    }
    if (v9) {
      return 1;
    }
    --v3;
    if (!v7) {
      return 0;
    }
  }
  if (a3[a2]) {
    return 0xFFFFFFFFLL;
  }
  else {
    return 0;
  }
}

unsigned char *sub_226870098(unsigned char *a1, unsigned char *a2)
{
  if (a2 && *a2)
  {
    __darwin_ct_rune_t v4 = __tolower(*a2);
    while (*a1)
    {
      if (__tolower(*a1) == v4)
      {
        uint64_t v5 = 1;
        do
        {
          __darwin_ct_rune_t v6 = __tolower(a1[v5]);
          __darwin_ct_rune_t v7 = __tolower(a2[v5++]);
          if (v6) {
            BOOL v8 = v6 == v7;
          }
          else {
            BOOL v8 = 0;
          }
        }
        while (v8);
        if (!v7) {
          return a1;
        }
      }
      ++a1;
    }
    return 0;
  }
  return a1;
}

unint64_t sub_226870130(char *__s, size_t a2, unint64_t a3)
{
  if (a2 == -1) {
    a2 = strlen(__s);
  }
  if (a2 >= a3) {
    unint64_t result = a3;
  }
  else {
    unint64_t result = a2;
  }
  if (result)
  {
    while (__s[result - 1] < 0)
    {
      unsigned int v6 = 0;
      unsigned int v7 = __s[result - 1];
      unsigned int v8 = 1;
      if (result == 1 || v7 > 0xBF)
      {
        --result;
        char v11 = 0;
      }
      else
      {
        char v9 = 0;
        unint64_t v10 = result - 2;
        while (1)
        {
          char v11 = v7;
          unsigned int v12 = v8;
          if ((__s[v10] & 0x80000000) == 0) {
            break;
          }
          unsigned int v7 = __s[v10];
          ++v8;
          if (v10-- != 0)
          {
            char v9 = v11;
            if (v7 < 0xC0) {
              continue;
            }
          }
          unint64_t result = v10 + 1;
          unsigned int v6 = v12;
          goto LABEL_18;
        }
        unsigned int v6 = v8 - 1;
        unint64_t result = v10 + 1;
        char v11 = v9;
      }
LABEL_18:
      if (v6 < 6
        && (((255 << (7 - v6)) | (1 << (6 - v6))) & v7) == (255 << (7 - v6))
        && (v7 != 237 || (v11 & 0xF0) != 0xA0))
      {
        result += v8;
        return result;
      }
      if (!result) {
        return result;
      }
    }
  }
  return result;
}

uint64_t sub_226870250(unsigned __int8 *a1, unint64_t a2, unsigned char *a3, uint64_t a4, void *a5, void *a6, unsigned char *a7, uint64_t a8, void *a9, void *a10, void *a11)
{
  uint64_t v15 = a1;
  if ((unint64_t)a1 >= a2)
  {
    uint64_t result = 4294960569;
  }
  else
  {
    uint64_t result = sub_2268702EC(a1, a2, 0x3Du, a3, a4, a5, a6, &v15);
    if (!result) {
      uint64_t result = sub_2268702EC(v15, a2, 0x2Cu, a7, a8, a9, a10, &v15);
    }
  }
  if (a11) {
    *a11 = v15;
  }
  return result;
}

uint64_t sub_2268702EC(unsigned __int8 *a1, unint64_t a2, unsigned __int8 a3, unsigned char *a4, uint64_t a5, void *a6, void *a7, unsigned __int8 **a8)
{
  if (a5) {
    uint64_t v8 = a5 - 1;
  }
  else {
    uint64_t v8 = 0;
  }
  if ((unint64_t)a1 < a2)
  {
    uint64_t v9 = 0;
    unint64_t v10 = (unint64_t)&a4[v8];
    char v11 = a4;
    while (1)
    {
      unsigned int v12 = a1 + 1;
      int v13 = *a1;
      if (v13 == a3)
      {
        ++a1;
        goto LABEL_19;
      }
      if (v13 == 92)
      {
        if ((unint64_t)v12 >= a2)
        {
          uint64_t v14 = 4294960546;
          if (!a6) {
            goto LABEL_24;
          }
LABEL_23:
          *a6 = v11 - a4;
          goto LABEL_24;
        }
        LOBYTE(v13) = a1[1];
        a1 += 2;
      }
      else
      {
        ++a1;
      }
      if ((unint64_t)v11 < v10)
      {
        if (a4) {
          *char v11 = v13;
        }
        ++v11;
      }
      ++v9;
      if ((unint64_t)a1 >= a2) {
        goto LABEL_19;
      }
    }
  }
  uint64_t v9 = 0;
  char v11 = a4;
LABEL_19:
  uint64_t v14 = 0;
  if (a4 && a5)
  {
    uint64_t v14 = 0;
    *char v11 = 0;
  }
  unsigned int v12 = a1;
  if (a6) {
    goto LABEL_23;
  }
LABEL_24:
  if (a7) {
    *a7 = v9;
  }
  if (a8) {
    *a8 = v12;
  }
  return v14;
}

uint64_t sub_2268703B8(char *__s, size_t a2, unsigned __int8 *a3, _DWORD *a4)
{
  uint64_t v5 = __s;
  if (a2 == -1) {
    a2 = strlen(__s);
  }
  unsigned int v113 = 0;
  uint64_t v6 = MEMORY[0x263EF8318];
  int v111 = (int)v5;
  uint64_t v115 = &v5[a2];
LABEL_4:
  while (2)
  {
    while (2)
    {
      while (2)
      {
        while (2)
        {
          while (2)
          {
            uint64_t v7 = *a3;
            if (((char)*a3 & 0x80000000) == 0)
            {
              if ((*(_DWORD *)(v6 + 4 * v7 + 60) & 0x4000) != 0) {
                goto LABEL_6;
              }
LABEL_19:
              int v13 = v5;
              unint64_t v10 = v115;
              goto LABEL_22;
            }
            if (!__maskrune(v7, 0x4000uLL)) {
              goto LABEL_19;
            }
            do
            {
LABEL_6:
              while (1)
              {
                int v8 = (char)*++a3;
                uint64_t v9 = v8;
                if (v8 < 0) {
                  break;
                }
                if ((*(_DWORD *)(v6 + 4 * v9 + 60) & 0x4000) == 0) {
                  goto LABEL_10;
                }
              }
            }
            while (__maskrune(v9, 0x4000uLL));
LABEL_10:
            unint64_t v10 = v115;
            if (v5 >= v115) {
              goto LABEL_21;
            }
            int64_t v11 = v115 - v5;
            while (1)
            {
              uint64_t v12 = *v5;
              if (*v5 < 0) {
                break;
              }
              if ((*(_DWORD *)(v6 + 4 * v12 + 60) & 0x4000) == 0) {
                goto LABEL_20;
              }
LABEL_16:
              ++v5;
              if (!--v11)
              {
                unint64_t v10 = v115;
                uint64_t v5 = v115;
                goto LABEL_21;
              }
            }
            if (__maskrune(v12, 0x4000uLL)) {
              goto LABEL_16;
            }
LABEL_20:
            unint64_t v10 = v115;
LABEL_21:
            int v13 = v5;
LABEL_22:
            int v14 = *a3;
            if (v14 != 37)
            {
              if (*a3)
              {
                if (v13 < v10)
                {
                  ++a3;
                  uint64_t v5 = v13 + 1;
                  if (v14 == *v13) {
                    continue;
                  }
                }
              }
              return v113;
            }
            break;
          }
          int v15 = 0;
          uint64_t v16 = 0;
          uint64_t v17 = 1;
          while (2)
          {
            char v18 = a3 + 1;
            uint64_t v19 = v16;
            do
            {
              uint64_t v16 = v19;
              int v21 = *v18++;
              int v20 = v21;
              uint64_t v19 = 1;
            }
            while (v21 == 42);
            if (v20 == 38)
            {
              uint64_t v17 = 0;
              goto LABEL_34;
            }
            if (v20 == 35)
            {
              ++v15;
LABEL_34:
              a3 = v18 - 1;
              continue;
            }
            break;
          }
          unsigned int v22 = v18 - 1;
          if ((v20 - 48) > 9)
          {
            if (v20 != 46)
            {
              int v23 = 0x7FFFFFFF;
              goto LABEL_43;
            }
            unsigned int v26 = a4;
            a4 += 2;
            int v23 = *v26;
            if ((*v26 & 0x80000000) == 0)
            {
              int v27 = *v18;
              int v20 = v27;
              unsigned int v22 = v18;
              goto LABEL_44;
            }
            return v113;
          }
          int v23 = 0;
          do
          {
            int v24 = v20 + 10 * v23;
            int v25 = *++v22;
            int v20 = v25;
            int v23 = v24 - 48;
          }
          while ((v25 - 48) < 0xA);
LABEL_43:
          int v27 = v20;
LABEL_44:
          int v28 = 0;
          HIDWORD(v29) = v27;
          LODWORD(v29) = v27 - 104;
          switch((v29 >> 1))
          {
            case 0u:
              int v30 = *++v22;
              BOOL v31 = v30 == 104;
              int v32 = 104;
              int v27 = 72;
              goto LABEL_48;
            case 1u:
            case 6u:
            case 9u:
              ++v22;
              goto LABEL_51;
            case 2u:
              int v33 = *++v22;
              BOOL v31 = v33 == 108;
              int v32 = 108;
              int v27 = 76;
LABEL_48:
              if (v31) {
                ++v22;
              }
              else {
                int v27 = v32;
              }
LABEL_51:
              int v20 = *v22;
              int v28 = v27;
              break;
            default:
              break;
          }
          int v114 = v28;
          if (!v20) {
            return v113;
          }
          a3 = v22 + 1;
          if (v20 > 97)
          {
            int v34 = 0;
            int v35 = 0;
            int v36 = 0;
            uint64_t v37 = 10;
            switch(v20)
            {
              case 'b':
                int v34 = 0;
                int v35 = 0;
                int v36 = 1;
                uint64_t v37 = 2;
                goto LABEL_91;
              case 'c':
                if (v28) {
                  return v113;
                }
                if (v17)
                {
                  if (v23 == 0x7FFFFFFF) {
                    int v45 = 1;
                  }
                  else {
                    int v45 = v23;
                  }
                  if (v10 - v13 < v45) {
                    return v113;
                  }
                  int v46 = v45;
                  if (v16)
                  {
                    uint64_t v5 = &v13[v45];
                    continue;
                  }
                  uint64_t v104 = a4;
                  a4 += 2;
                  uint64_t v105 = (unsigned char *)*v104;
                  if (!v105) {
                    return v113;
                  }
                  if (v46 < 1)
                  {
                    unsigned int v94 = v113;
                  }
                  else
                  {
                    unsigned int v106 = v46 + 1;
                    unsigned int v94 = v113;
                    do
                    {
                      char v107 = *v13++;
                      *v105++ = v107;
                      --v106;
                    }
                    while (v106 > 1);
                  }
                }
                else
                {
                  int64_t v75 = v10 - v13;
                  if (v10 - v13 >= (unint64_t)v23) {
                    int64_t v75 = v23;
                  }
                  if (v16)
                  {
                    uint64_t v5 = &v13[v75];
                    continue;
                  }
                  float v90 = (char ***)a4;
                  uint64_t v117 = (void **)(a4 + 2);
                  uint64_t v91 = *v90;
                  if (v91) {
                    *uint64_t v91 = v13;
                  }
                  uint64_t v92 = v117;
                  a4 = v117 + 1;
                  double v93 = *v92;
                  unsigned int v94 = v113;
                  if (v93) {
                    int64_t *v93 = v75;
                  }
                  v13 += v75;
                }
                unsigned int v113 = v94 + 1;
                uint64_t v5 = v13;
                continue;
              case 'd':
              case 'u':
                goto LABEL_91;
              case 'i':
                int v35 = 0;
                int v36 = 0;
                uint64_t v37 = 0;
                int v34 = 1;
                goto LABEL_91;
              case 'n':
                if (v28) {
                  return v113;
                }
                if (v23 != 0x7FFFFFFF) {
                  return v113;
                }
                if (v16) {
                  return v113;
                }
                char v47 = (_DWORD **)a4;
                a4 += 2;
                uint64_t v48 = *v47;
                if (!v48) {
                  return v113;
                }
                *uint64_t v48 = v13 - v111;
                uint64_t v5 = v13;
                continue;
              case 'o':
                int v34 = 0;
                int v35 = 0;
                int v36 = 0;
                uint64_t v37 = 8;
                goto LABEL_91;
              case 'p':
                int v49 = v28;
                if (!v28) {
                  int v49 = 112;
                }
                int v114 = v49;
                goto LABEL_90;
              case 's':
                if (v28) {
                  return v113;
                }
                if (v13 >= v10) {
                  goto LABEL_170;
                }
                float v64 = v10;
                int64_t v65 = v10 - v13;
                uint64_t v5 = v13;
                break;
              case 'x':
                goto LABEL_90;
              default:
                return v113;
            }
            while (2)
            {
              uint64_t v66 = *v5;
              if (*v5 < 0)
              {
                uint64_t v67 = v17;
                int v68 = __maskrune(v66, 0x4000uLL);
                uint64_t v17 = v67;
                if (v68) {
                  goto LABEL_168;
                }
LABEL_217:
                if (!v15)
                {
                  unint64_t v10 = v115;
                  if (*v5) {
                    goto LABEL_171;
                  }
                  return v113;
                }
                unint64_t v10 = v115;
                if (v16) {
                  goto LABEL_172;
                }
              }
              else
              {
                if ((*(_DWORD *)(v6 + 4 * v66 + 60) & 0x4000) == 0) {
                  goto LABEL_217;
                }
LABEL_168:
                ++v5;
                if (--v65) {
                  continue;
                }
                int v13 = v64;
                unint64_t v10 = v115;
LABEL_170:
                uint64_t v5 = v13;
                if (!v15) {
                  return v113;
                }
LABEL_171:
                if (v16)
                {
LABEL_172:
                  if (v5 < v10)
                  {
                    int64_t v69 = v10 - v5;
                    while (1)
                    {
                      uint64_t v70 = *v5;
                      if (!*v5) {
                        break;
                      }
                      int v71 = (v70 & 0x80) != 0 ? __maskrune(v70, 0x4000uLL) : *(_DWORD *)(v6 + 4 * v70 + 60) & 0x4000;
                      if (v71 || v23 < 1) {
                        break;
                      }
                      --v23;
                      ++v5;
                      if (!--v69)
                      {
                        uint64_t v5 = v115;
                        goto LABEL_4;
                      }
                    }
                  }
                  goto LABEL_4;
                }
              }
              break;
            }
            if ((v17 & 1) == 0)
            {
              uint64_t v95 = v5;
              if (v5 < v10)
              {
                int64_t v96 = v10 - v5;
                uint64_t v95 = v5;
                while (1)
                {
                  uint64_t v97 = *v95;
                  if (!*v95) {
                    break;
                  }
                  int v98 = (v97 & 0x80) != 0 ? __maskrune(v97, 0x4000uLL) : *(_DWORD *)(v6 + 4 * v97 + 60) & 0x4000;
                  if (v98 || v23 < 1) {
                    break;
                  }
                  --v23;
                  ++v95;
                  if (!--v96)
                  {
                    uint64_t v95 = v115;
                    break;
                  }
                }
              }
              uint64_t v100 = (char ***)a4;
              uint64_t v118 = (void **)(a4 + 2);
              uint64_t v101 = *v100;
              if (v101) {
                *uint64_t v101 = v5;
              }
              uint64_t v102 = v118;
              a4 = v118 + 1;
              uint64_t v103 = *v102;
              if (v103) {
                void *v103 = v95 - v5;
              }
              ++v113;
              uint64_t v5 = v95;
              continue;
            }
            int v76 = (char **)a4;
            a4 += 2;
            int v77 = *v76;
            if (!*v76) {
              return v113;
            }
            if (v5 < v10)
            {
              int64_t v78 = v10 - v5;
              while (1)
              {
                uint64_t v79 = *v5;
                if (!*v5) {
                  break;
                }
                char v80 = *v5;
                int v81 = (char)v79 < 0 ? __maskrune(v79, 0x4000uLL) : *(_DWORD *)(v6 + 4 * v79 + 60) & 0x4000;
                if (v81 || v23 < 1) {
                  break;
                }
                --v23;
                ++v5;
                *v77++ = v80;
                if (!--v78)
                {
                  uint64_t v5 = v115;
                  break;
                }
              }
            }
            unsigned int v73 = v113;
            *int v77 = 0;
LABEL_198:
            unsigned int v113 = v73 + 1;
            continue;
          }
          break;
        }
        if (v20 == 37)
        {
          if (!v28 && v23 == 0x7FFFFFFF && !v16 && v13 < v10)
          {
            uint64_t v5 = v13 + 1;
            if (*v13 == 37) {
              continue;
            }
          }
          return v113;
        }
        break;
      }
      if (v20 != 88)
      {
        if (v20 == 91 && !v28)
        {
          int v38 = v22[1];
          char v39 = v22 + 2;
          uint64_t v40 = v38 == 94 ? 2 : 1;
          uint64_t v41 = (uint64_t)(v38 == 94 ? v22 + 2 : v22 + 1);
          int v42 = v22[v40];
          uint64_t v43 = v42 == 93;
          for (uint64_t i = (unsigned __int8 *)(v42 == 93 ? v41 + 1 : v41); ; ++i)
          {
            if (!*i) {
              return v113;
            }
            if (*i == 93) {
              break;
            }
            ++v43;
          }
          uint64_t v5 = v13;
          if (v38 == 94)
          {
            if (v13 < v10)
            {
              uint64_t v5 = v13;
              while (*v5)
              {
                BOOL v58 = __OFSUB__(v23--, 1);
                if (v23 < 0 != v58) {
                  break;
                }
                if (v39 < i)
                {
                  uint64_t v74 = 0;
                  while (*(unsigned __int8 *)(v41 + v74) != *v5)
                  {
                    if (v43 == ++v74) {
                      goto LABEL_208;
                    }
                  }
                  break;
                }
LABEL_208:
                if (++v5 == v10)
                {
                  uint64_t v5 = v10;
                  break;
                }
              }
            }
          }
          else if (v13 < v10)
          {
            uint64_t v5 = v13;
            while (*v5)
            {
              BOOL v58 = __OFSUB__(v23, 1);
              if (--v23 < 0 != v58) {
                break;
              }
              uint64_t v83 = v43;
              uint64_t v84 = (unsigned __int8 *)v41;
              if (a3 >= i) {
                break;
              }
              while (*v84 != *v5)
              {
                ++v84;
                if (!--v83) {
                  goto LABEL_244;
                }
              }
              if (++v5 == v10)
              {
                uint64_t v5 = v10;
                break;
              }
            }
          }
LABEL_244:
          if (v13 != v5 || v15)
          {
            a3 = i + 1;
            if (v16) {
              continue;
            }
            int v85 = (unsigned char **)a4;
            a4 += 2;
            int v86 = *v85;
            if (v17)
            {
              if (!v86) {
                return v113;
              }
              if (v13 >= v5)
              {
                unsigned int v88 = v113;
              }
              else
              {
                int64_t v87 = v5 - v13;
                unsigned int v88 = v113;
                do
                {
                  char v89 = *v13++;
                  *v86++ = v89;
                  --v87;
                }
                while (v87);
              }
              *int v86 = 0;
            }
            else
            {
              if (v86) {
                *(void *)int v86 = v13;
              }
              uint64_t v108 = (void **)a4;
              a4 += 2;
              uint64_t v109 = *v108;
              unsigned int v88 = v113;
              if (v109) {
                *uint64_t v109 = v5 - v13;
              }
            }
            unsigned int v113 = v88 + 1;
            continue;
          }
        }
        return v113;
      }
      break;
    }
LABEL_90:
    int v34 = 0;
    int v36 = 0;
    int v35 = 1;
    uint64_t v37 = 16;
LABEL_91:
    if (v13 < v10)
    {
      int v112 = v10;
      int64_t v50 = v10 - v13;
      do
      {
        uint64_t v51 = *v13;
        if (*v13 < 0)
        {
          if (!__maskrune(v51, 0x4000uLL)) {
            goto LABEL_99;
          }
        }
        else if ((*(_DWORD *)(v6 + 4 * v51 + 60) & 0x4000) == 0)
        {
          goto LABEL_99;
        }
        ++v13;
        --v50;
      }
      while (v50);
      int v13 = v112;
LABEL_99:
      unint64_t v10 = v115;
    }
    int v52 = 1;
    if (v10 - v13 >= 2 && v23 >= 1)
    {
      int v53 = *v13;
      if (v53 == 43) {
        goto LABEL_105;
      }
      if (v53 == 45)
      {
        int v52 = 0;
LABEL_105:
        ++v13;
        --v23;
      }
    }
    if (!v34)
    {
      if (v35)
      {
        if (v10 - v13 >= 2 && v23 >= 2 && *v13 == 48)
        {
          BOOL v31 = __tolower(v13[1]) == 120;
          unint64_t v10 = v115;
          if (v31)
          {
            uint64_t v5 = v13 + 2;
            v23 -= 2;
            uint64_t v37 = 16;
            goto LABEL_142;
          }
        }
      }
      if (!v36) {
        goto LABEL_141;
      }
      if (v10 - v13 < 2 || v23 < 2 || *v13 != 48)
      {
        uint64_t v37 = 2;
        goto LABEL_141;
      }
      if (__tolower(v13[1]) == 98)
      {
        uint64_t v5 = v13 + 2;
        v23 -= 2;
        uint64_t v37 = 2;
      }
      else
      {
        uint64_t v37 = 2;
        uint64_t v5 = v13;
      }
LABEL_254:
      unint64_t v10 = v115;
      goto LABEL_142;
    }
    uint64_t v54 = v10 - v13;
    if (v10 - v13 <= 2 || v23 < 2 || *v13 != 48) {
      goto LABEL_130;
    }
    if (__tolower(v13[1]) == 120)
    {
      uint64_t v5 = v13 + 2;
      if ((*(_DWORD *)(v6 + 4 * v13[2] + 60) & 0x10000) != 0)
      {
        v23 -= 2;
        uint64_t v37 = 16;
        goto LABEL_254;
      }
    }
    unint64_t v10 = v115;
    if (*v13 == 48)
    {
      BOOL v31 = __tolower(v13[1]) == 98;
      unint64_t v10 = v115;
      if (v31)
      {
        uint64_t v5 = v13 + 2;
        if ((v13[2] & 0xFE) == 0x30)
        {
          v23 -= 2;
          uint64_t v37 = 2;
          goto LABEL_142;
        }
      }
    }
LABEL_130:
    if (v54 < 2 || v23 < 1 || *v13 != 48)
    {
      uint64_t v37 = 10;
LABEL_141:
      uint64_t v5 = v13;
      goto LABEL_142;
    }
    int v55 = v13[1] & 0xF8;
    if (v55 == 48)
    {
      --v23;
      uint64_t v37 = 8;
    }
    else
    {
      uint64_t v37 = 10;
    }
    if (v55 == 48) {
      uint64_t v5 = v13 + 1;
    }
    else {
      uint64_t v5 = v13;
    }
LABEL_142:
    if (v5 >= v10)
    {
      uint64_t v56 = 0;
    }
    else
    {
      uint64_t v56 = 0;
      int64_t v57 = v10 - v5;
      while (1)
      {
        BOOL v58 = __OFSUB__(v23, 1);
        if (--v23 < 0 != v58) {
          break;
        }
        __darwin_ct_rune_t v59 = *v5;
        int v60 = v59 - 48;
        if ((v59 - 48) >= 0xA)
        {
          if ((*(_DWORD *)(v6 + 4 * *v5 + 60) & 0x10000) == 0) {
            break;
          }
          int v60 = __tolower(v59) - 87;
        }
        if (v60 >= (int)v37) {
          break;
        }
        uint64_t v56 = v56 * v37 + v60;
        ++v5;
        if (!--v57)
        {
          uint64_t v5 = v115;
          break;
        }
      }
    }
    if (v5 != v13)
    {
      if (v16) {
        continue;
      }
      uint64_t v61 = v52 ? v56 : -v56;
      double v62 = (_WORD **)a4;
      a4 += 2;
      double v63 = *v62;
      if (v63)
      {
        if (v114 > 103)
        {
          switch(v114)
          {
            case 'h':
              *double v63 = v61;
              goto LABEL_197;
            case 'i':
            case 'k':
            case 'm':
            case 'n':
            case 'o':
              return v113;
            case 'j':
            case 'l':
            case 'p':
              goto LABEL_196;
            default:
              if (v114 == 116 || v114 == 122) {
                goto LABEL_196;
              }
              break;
          }
          return v113;
        }
        if (v114)
        {
          if (v114 == 72)
          {
            *(unsigned char *)double v63 = v61;
          }
          else
          {
            if (v114 != 76) {
              return v113;
            }
LABEL_196:
            *(void *)double v63 = v61;
          }
        }
        else
        {
          *(_DWORD *)double v63 = v61;
        }
LABEL_197:
        unsigned int v73 = v113;
        goto LABEL_198;
      }
    }
    return v113;
  }
}

uint64_t sub_226870FE0()
{
  if (byte_2681482A0 == 1) {
    return qword_2681482A8;
  }
  unint64_t v0 = 1000000000;
  mach_timebase_info info = 0;
  if (!mach_timebase_info(&info) && info.numer && info.denom) {
    unint64_t v0 = 1000000000 * (unint64_t)info.denom / info.numer;
  }
  qword_2681482A8 = v0;
  byte_2681482A0 = 1;
  return v0;
}

uint64_t sub_226871064(tm *a1, _DWORD *a2)
{
  if (!a2) {
    return 4294960591;
  }
  memset(&v10.tm_wday, 0, 32);
  time_t v9 = 0;
  if (!a1)
  {
    time_t v9 = time(0);
    if (v9 == -1) {
      return 4294960596;
    }
    a1 = gmtime(&v9);
    if (!a1) {
      return 4294960561;
    }
  }
  long long v3 = *(_OWORD *)&a1->tm_sec;
  long long v4 = *(_OWORD *)&a1->tm_mon;
  long long v5 = *(_OWORD *)&a1->tm_isdst;
  v11.tm_zone = a1->tm_zone;
  *(_OWORD *)&v11.tm_mon = v4;
  *(_OWORD *)&v11.tm_isdst = v5;
  *(_OWORD *)&v11.tm_sec = v3;
  time_t v9 = mktime(&v11);
  if (v9 == -1) {
    return 4294960596;
  }
  *(void *)&v10.tm_mon = 0x6500000000;
  *(_OWORD *)&v10.tm_sec = xmmword_226913030;
  v10.tm_isdst = -1;
  time_t v6 = mktime(&v10);
  if (v6 == -1) {
    return 4294960596;
  }
  double v7 = difftime(v9, v6);
  if (v7 < 0.0) {
    return 4294960586;
  }
  uint64_t result = 0;
  *a2 = v7;
  return result;
}

uint64_t sub_226871160(unsigned __int8 *a1, int *a2)
{
  uint64_t v12 = 0;
  int v13 = 0;
  uint64_t result = sub_2268712B4(a1, "days", &v13, &v12, 0);
  if (result == -6727)
  {
    int v11 = 127;
LABEL_30:
    uint64_t result = 0;
    *a2 = v11;
    return result;
  }
  if (result) {
    return result;
  }
  if (v12 == 7)
  {
    int v4 = *v13;
    if ((v4 | 0x40) == 0x6D)
    {
      int v5 = v13[1];
      if (v5 == 116 || v5 == 45)
      {
        int v6 = v13[2];
        if (v6 == 119 || v6 == 45)
        {
          int v7 = v13[3];
          if (v7 == 116 || v7 == 45)
          {
            int v8 = v13[4];
            if (v8 == 102 || v8 == 45)
            {
              int v9 = v13[5];
              if (v9 == 115 || v9 == 45)
              {
                int v10 = v13[6];
                if (v10 == 115 || v10 == 45)
                {
                  int v11 = v4 != 45;
                  if (v5 != 45) {
                    v11 |= 2u;
                  }
                  if (v6 != 45) {
                    v11 |= 4u;
                  }
                  if (v7 != 45) {
                    v11 |= 8u;
                  }
                  if (v8 != 45) {
                    v11 |= 0x10u;
                  }
                  if (v9 != 45) {
                    v11 |= 0x20u;
                  }
                  if (v10 != 45) {
                    v11 |= 0x40u;
                  }
                  goto LABEL_30;
                }
              }
            }
          }
        }
      }
    }
  }
  return 4294960554;
}

uint64_t sub_2268712B4(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, void *a4, void *a5)
{
  uint64_t v10 = MEMORY[0x263EF8318];
  do
  {
    do
    {
      int v11 = a1;
      uint64_t v12 = *a1;
      if ((char)*a1 < 0) {
        int v13 = __maskrune(*a1, 0x4000uLL);
      }
      else {
        int v13 = *(_DWORD *)(v10 + 4 * v12 + 60) & 0x4000;
      }
      ++a1;
    }
    while (v13);
    if (!v12) {
      return 4294960569;
    }
    for (uint64_t i = 0; ; ++i)
    {
      if (!v11[i]) {
        return 4294960554;
      }
      if (v11[i] == 61) {
        break;
      }
    }
    int v15 = &v11[i];
    for (uint64_t j = 1; ; ++j)
    {
      int v17 = v15[j];
      if (!v15[j] || v17 == 59) {
        break;
      }
    }
    if (v17 == 59) {
      char v18 = v11 + 1;
    }
    else {
      char v18 = v11;
    }
    a1 = &v18[i + j];
  }
  while (sub_226870048(v11, i, a2));
  uint64_t v19 = &v11[i];
  if (v17 == 59) {
    int v20 = v19 + 1;
  }
  else {
    int v20 = &v11[i];
  }
  if (a3) {
    *a3 = v19 + 1;
  }
  if (a4) {
    *a4 = j - 1;
  }
  uint64_t result = 0;
  if (a5) {
    *a5 = &v20[j];
  }
  return result;
}

uint64_t sub_2268713E8(unsigned __int8 *a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, _DWORD *a7)
{
  int v23 = 0;
  int v24 = a1;
  uint64_t v22 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v18 = 0;
  uint64_t result = sub_2268712B4(a1, "t", &v23, &v22, &v24);
  if (!result)
  {
    int v21 = v23;
    int v14 = &v23[v22];
    uint64_t result = sub_226871558(v23, (unint64_t)&v23[v22], (int *)&v20 + 1, (int *)&v20, (int *)&v19 + 1, &v21);
    if (!result)
    {
      if (v21 >= v14 || *v21 != 45) {
        return 4294960554;
      }
      uint64_t result = 4294960586;
      if (HIDWORD(v20) <= 0x17 && v20 <= 0x3B && HIDWORD(v19) <= 0x3D)
      {
        ++v21;
        uint64_t result = sub_226871558(v21, (unint64_t)v14, (int *)&v19, (int *)&v18 + 1, (int *)&v18, &v21);
        if (!result)
        {
          if (v21 != v14) {
            return 4294960554;
          }
          int v15 = v19;
          uint64_t result = 4294960586;
          if (v19 <= 0x18)
          {
            int v16 = HIDWORD(v18);
            if (HIDWORD(v18) <= 0x3C)
            {
              int v17 = v18;
              if (v18 <= 0x3E)
              {
                uint64_t result = 0;
                *a2 = HIDWORD(v20);
                *a3 = v20;
                *a4 = HIDWORD(v19);
                *a5 = v15;
                *a6 = v16;
                *a7 = v17;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_226871558(unsigned char *a1, unint64_t a2, int *a3, int *a4, int *a5, void *a6)
{
  if ((unint64_t)a1 < a2)
  {
    int v6 = 0;
    int v7 = a1;
    while (1)
    {
      int v8 = *v7;
      if ((v8 - 48) > 9) {
        break;
      }
      int v6 = (char)v8 + 10 * v6 - 48;
      if (++v7 == (unsigned char *)a2)
      {
        if ((unsigned char *)a2 == a1) {
          return 4294960554;
        }
        int v9 = 0;
LABEL_7:
        int v7 = (unsigned char *)a2;
LABEL_16:
        if ((unint64_t)v7 < a2 && *v7 == 58)
        {
          if ((unint64_t)(v7 + 1) >= a2) {
            return 4294960554;
          }
          int v12 = 0;
          uint64_t v13 = 1;
          while (1)
          {
            int v14 = v7[v13];
            if ((v14 - 48) > 9) {
              break;
            }
            int v12 = (char)v14 + 10 * v12 - 48;
            if (a2 - (void)v7 == ++v13)
            {
              uint64_t v13 = a2 - (void)v7;
              goto LABEL_35;
            }
          }
          a2 = (unint64_t)&v7[v13];
LABEL_35:
          int v7 = (unsigned char *)a2;
          if (v13 == 1) {
            return 4294960554;
          }
        }
        else
        {
          int v12 = 0;
        }
        if (a3) {
          *a3 = v6;
        }
        if (a4) {
          *a4 = v9;
        }
        if (a5) {
          *a5 = v12;
        }
        uint64_t result = 0;
        if (a6) {
          *a6 = v7;
        }
        return result;
      }
    }
    if (v7 == a1) {
      return 4294960554;
    }
    if ((char)v8 != 58)
    {
      int v9 = 0;
      goto LABEL_16;
    }
    if ((unint64_t)(v7 + 1) < a2)
    {
      int v9 = 0;
      uint64_t v10 = 1;
      while (1)
      {
        int v11 = v7[v10];
        if ((v11 - 48) > 9) {
          break;
        }
        int v9 = (char)v11 + 10 * v9 - 48;
        if ((unint64_t)&v7[++v10] >= a2) {
          goto LABEL_7;
        }
      }
      if (v10 != 1)
      {
        v7 += v10;
        goto LABEL_16;
      }
    }
  }
  return 4294960554;
}

uint64_t sub_2268716B8(char *__s, char *a2, char **a3, char **a4)
{
  int v6 = __s;
  if (!a2) {
    a2 = &__s[strlen(__s)];
  }
  if (a2 <= v6) {
    goto LABEL_14;
  }
  uint64_t v7 = 0;
  do
  {
    unsigned int v8 = v6[v7];
    if (v8 <= 0x3F && ((1 << v8) & 0x8400800800000000) != 0)
    {
      uint64_t v10 = &v6[v7];
      goto LABEL_12;
    }
    ++v7;
  }
  while (a2 - v6 != v7);
  uint64_t v10 = a2;
LABEL_12:
  if (v8 == 58)
  {
    int v11 = v10 + 1;
  }
  else
  {
LABEL_14:
    uint64_t v10 = 0;
    int v11 = v6;
    int v6 = 0;
  }
  if (a2 - v11 >= 2 && *v11 == 47 && v11[1] == 47)
  {
    int v12 = v11 + 2;
    if (v11 + 2 >= a2)
    {
      uint64_t v20 = 0;
      int v21 = 0;
      uint64_t v22 = 0;
      int v23 = 0;
      unint64_t v18 = (unint64_t)(v11 + 2);
      int v24 = v11 + 2;
    }
    else
    {
      uint64_t v13 = 2;
      while (1)
      {
        unsigned int v14 = v11[v13];
        BOOL v15 = v14 > 0x3F;
        unint64_t v16 = (1 << v14) & 0x8000800800000000;
        if (!v15 && v16 != 0) {
          break;
        }
        if (a2 - v11 == ++v13)
        {
          uint64_t v13 = a2 - v11;
          break;
        }
      }
      unint64_t v18 = (unint64_t)&v11[v13];
      if (v13 < 3)
      {
LABEL_31:
        uint64_t v20 = 0;
        int v21 = 0;
        uint64_t v22 = 0;
        int v23 = 0;
      }
      else
      {
        unint64_t v19 = 2;
        while (v11[v19] != 64)
        {
          if (v13 == ++v19) {
            goto LABEL_31;
          }
        }
        int v38 = &v11[v19];
        if (v19 < 3)
        {
          int v23 = 0;
          uint64_t v22 = 0;
          int v21 = v11 + 2;
        }
        else
        {
          int v21 = v11 + 2;
          uint64_t v22 = (unsigned __int8 *)(v11 + 2);
          while (1)
          {
            int v39 = *v22++;
            if (v39 == 58) {
              break;
            }
            int v21 = v22;
            if (v22 >= (unsigned __int8 *)v38)
            {
              int v23 = 0;
              int v21 = v22;
              uint64_t v22 = 0;
              goto LABEL_69;
            }
          }
          int v23 = &v11[v19];
        }
LABEL_69:
        uint64_t v20 = v11 + 2;
        int v12 = v38 + 1;
      }
      int v24 = (unsigned char *)v18;
    }
  }
  else
  {
    uint64_t v20 = 0;
    int v21 = 0;
    uint64_t v22 = 0;
    int v23 = 0;
    int v12 = 0;
    int v24 = 0;
    unint64_t v18 = (unint64_t)v11;
  }
  if (v18 >= (unint64_t)a2)
  {
    int v28 = 0;
    int v30 = 0;
    int v27 = 0;
    BOOL v31 = (unsigned __int8 *)v18;
    unint64_t v26 = v18;
  }
  else
  {
    int v25 = &a2[-v18];
    unint64_t v26 = v18;
    while (1)
    {
      int v27 = *(unsigned __int8 *)v26;
      if (v27 == 35 || v27 == 63) {
        break;
      }
      ++v26;
      if (!--v25)
      {
        unint64_t v26 = (unint64_t)a2;
        break;
      }
    }
    if (v27 == 63)
    {
      int v28 = (char *)(v26 + 1);
      if (v26 + 1 >= (unint64_t)a2)
      {
        int v27 = 63;
        BOOL v31 = (unsigned __int8 *)v26++;
        int v30 = v28;
      }
      else
      {
        unint64_t v29 = &a2[~v26];
        int v30 = (char *)(v26 + 1);
        while (1)
        {
          int v27 = *v30;
          if (v27 == 35) {
            break;
          }
          ++v30;
          if (!--v29)
          {
            BOOL v31 = (unsigned __int8 *)v26;
            unint64_t v26 = (unint64_t)a2;
            int v30 = a2;
            goto LABEL_49;
          }
        }
        BOOL v31 = (unsigned __int8 *)v26;
        unint64_t v26 = (unint64_t)v30;
      }
    }
    else
    {
      int v28 = 0;
      int v30 = 0;
      BOOL v31 = (unsigned __int8 *)v26;
    }
  }
LABEL_49:
  int v32 = (char *)(v23 - (char *)v22);
  *a3 = v6;
  a3[1] = (char *)(v10 - v6);
  int v33 = (unsigned __int8 *)(v30 - v28);
  a3[2] = v20;
  a3[3] = (char *)(v21 - v20);
  if (v27 == 35) {
    int v34 = (unsigned __int8 *)(v26 + 1);
  }
  else {
    int v34 = 0;
  }
  a3[4] = (char *)v22;
  a3[5] = v32;
  a3[6] = v12;
  a3[7] = (char *)(v24 - v12);
  a3[8] = (char *)v18;
  a3[9] = (char *)&v31[-v18];
  a3[10] = v28;
  a3[11] = (char *)v33;
  if (v27 == 35) {
    int v35 = a2;
  }
  else {
    int v35 = 0;
  }
  a3[12] = (char *)v34;
  a3[13] = (char *)(v35 - (char *)v34);
  if (a4)
  {
    if (v27 == 35) {
      int v36 = a2;
    }
    else {
      int v36 = (char *)v26;
    }
    *a4 = v36;
  }
  return 0;
}

uint64_t sub_226872B6C(CFDictionaryRef theDict, void *a2, void *a3)
{
  uint64_t v13 = 0;
  uint64_t result = 4294960591;
  if (theDict && a2 && a3)
  {
    CFDataRef Value = (const __CFData *)CFDictionaryGetValue(theDict, @"IE");
    if (Value)
    {
      CFDataRef v8 = Value;
      BytePtr = CFDataGetBytePtr(Value);
      if (!BytePtr) {
        return 4294960568;
      }
      uint64_t v10 = (unsigned __int8 *)BytePtr;
      uint64_t v12 = 0;
      CFIndex Length = CFDataGetLength(v8);
      uint64_t result = sub_22686981C(v10, (unint64_t)&v10[Length], &v13, &v12);
      if (result) {
        return result;
      }
      if (v13)
      {
        uint64_t result = 0;
        *a2 = v13;
        *a3 = v12;
      }
      else
      {
        return 4294960568;
      }
    }
    else
    {
      return 4294960569;
    }
  }
  return result;
}

void sub_22687504C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_2268750B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

double sub_2268750FC(uint64_t a1, int a2, void *a3, size_t a4, _OWORD *a5)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  __memcpy_chk();
  sub_226875294(key, a2, a3, a4, 1, (uint64_t)&v11);
  sub_226875294(key, a2, a3, a4, 2, (uint64_t)&v12 + 4);
  double result = *(double *)&v11;
  long long v10 = v12;
  *a5 = v11;
  a5[1] = v10;
  return result;
}

BOOL sub_2268751C4(char *__s, uint64_t a2)
{
  int64_t v2 = __s;
  uint64_t v9 = *MEMORY[0x263EF8340];
  if ((unint64_t)(a2 - 8) > 0x37)
  {
    if (a2 != 64 || strspn(__s, "0123456789abcdefABCDEF") != 64) {
      return 0;
    }
    uint64_t v7 = 0;
    return !sub_22686FBB0(v2, 64, 32, v8, &v7) && v7 == 32;
  }
  else
  {
    do
    {
      int v4 = *v2++;
      int v3 = v4;
    }
    while ((v4 - 127) > 0xFFFFFFA0);
    return v3 == 0;
  }
}

void sub_226875294(void *key, int a2, void *__src, size_t __n, char a5, uint64_t a6)
{
  int v8 = __n;
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((int)__n >= 1) {
    memcpy(&__dst, __src, __n);
  }
  long long v11 = (char *)&__dst + v8;
  *(_WORD *)long long v11 = 0;
  v11[2] = 0;
  v11[3] = a5;
  CCHmac(0, key, a2, &__dst, v8 + 4, &v14);
  int v12 = 0;
  *(_OWORD *)a6 = v14;
  *(_DWORD *)(a6 + 16) = v15;
  do
  {
    CCHmac(0, key, a2, &v14, 0x14uLL, &__dst);
    uint64_t v13 = 0;
    long long v14 = __dst;
    int v15 = v17;
    do
    {
      *(unsigned char *)(a6 + v13) ^= *((unsigned char *)&__dst + v13);
      ++v13;
    }
    while (v13 != 20);
    ++v12;
  }
  while (v12 != 4095);
}

dispatch_group_t sub_2268753F0()
{
  qword_2681482C0 = (uint64_t)dispatch_queue_create("com.apple.airport.airportutility.setupcontroller.keychain", 0);
  dispatch_group_t result = dispatch_group_create();
  qword_2681482C8 = (uint64_t)result;
  return result;
}

void sub_226875560(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v129 = *MEMORY[0x263EF8340];
  id v98 = objc_alloc_init(MEMORY[0x263F086B0]);
  if (!a4) {
    goto LABEL_90;
  }
  id v8 = a4;
  id v13 = (id)objc_msgSend_setupDelegates(a4, v9, v10);
  if (!a2) {
    objc_msgSend_updateLastHeardFromDevice(a4, v11, v12);
  }
  CFStringRef v14 = (const __CFString *)objc_msgSend_objectForKey_(a3, v11, @"BSAssistantProgressKey_DictionaryParameter");
  uint64_t v17 = (uint64_t)v14;
  if (a1 == 135)
  {
    long long v121 = 0u;
    long long v122 = 0u;
    long long v119 = 0u;
    long long v120 = 0u;
    id v18 = (id)objc_msgSend_copy(v13, v15, v16);
    uint64_t v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v18, v19, (uint64_t)&v119, v128, 16);
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = *(void *)v120;
      do
      {
        for (uint64_t i = 0; i != v21; ++i)
        {
          if (*(void *)v120 != v22) {
            objc_enumerationMutation(v18);
          }
          int v24 = *(void **)(*((void *)&v119 + 1) + 8 * i);
          if (objc_opt_respondsToSelector()) {
            objc_msgSend_setupMonitoringMessage_paramDict_forController_(v24, v25, a2, v17, a4);
          }
        }
        uint64_t v21 = objc_msgSend_countByEnumeratingWithState_objects_count_(v18, v25, (uint64_t)&v119, v128, 16);
      }
      while (v21);
    }
    goto LABEL_90;
  }
  if ((a1 - 5) <= 1 && v14)
  {
    unint64_t v26 = sub_22685DB1C((uint64_t)v14, (const char *)1, v16);
LABEL_21:
    uint64_t v29 = (uint64_t)v26;
    int v28 = objc_msgSend_dictionaryWithDictionary_(MEMORY[0x263EFF9A0], v27, v17);
    objc_msgSend_setObject_forKey_(v28, v30, v29, @"BSAssistantProgressKey_StringParameter");
    goto LABEL_22;
  }
  int v28 = a3;
  if ((a1 - 7) <= 1)
  {
    int v28 = a3;
    if (v14)
    {
      unint64_t v26 = sub_22685DA7C(v14, (const char *)1, v16);
      goto LABEL_21;
    }
  }
LABEL_22:
  int64_t v96 = v13;
  uint64_t v97 = a3;
  long long v117 = 0u;
  long long v118 = 0u;
  long long v115 = 0u;
  long long v116 = 0u;
  id v31 = (id)objc_msgSend_copy(v13, v15, v16);
  uint64_t v33 = objc_msgSend_countByEnumeratingWithState_objects_count_(v31, v32, (uint64_t)&v115, v127, 16);
  if (v33)
  {
    uint64_t v36 = v33;
    uint64_t v37 = *(void *)v116;
    do
    {
      for (uint64_t j = 0; j != v36; ++j)
      {
        if (*(void *)v116 != v37) {
          objc_enumerationMutation(v31);
        }
        int v39 = *(void **)(*((void *)&v115 + 1) + 8 * j);
        if (objc_opt_respondsToSelector()) {
          objc_msgSend_setupProgressUpdated_status_paramDict_forController_(v39, v40, a1, a2, v28, a4);
        }
      }
      uint64_t v36 = objc_msgSend_countByEnumeratingWithState_objects_count_(v31, v40, (uint64_t)&v115, v127, 16);
    }
    while (v36);
  }
  if ((int)a1 <= 27)
  {
    uint64_t v41 = v97;
    switch(a1)
    {
      case 0xE:
        goto LABEL_90;
      case 0xF:
        if (a2) {
          uint64_t v74 = 0;
        }
        else {
          uint64_t v74 = objc_msgSend_targetBaseInfoDict(a4, v34, v35);
        }
        long long v113 = 0u;
        long long v114 = 0u;
        long long v111 = 0u;
        long long v112 = 0u;
        id v87 = (id)objc_msgSend_copy(v96, v34, v35);
        uint64_t v89 = objc_msgSend_countByEnumeratingWithState_objects_count_(v87, v88, (uint64_t)&v111, v126, 16);
        if (v89)
        {
          uint64_t v91 = v89;
          uint64_t v92 = *(void *)v112;
          do
          {
            for (uint64_t k = 0; k != v91; ++k)
            {
              if (*(void *)v112 != v92) {
                objc_enumerationMutation(v87);
              }
              unsigned int v94 = *(void **)(*((void *)&v111 + 1) + 8 * k);
              if (objc_opt_respondsToSelector()) {
                objc_msgSend_setupCompleteWithResult_baseStationInfo_forController_(v94, v95, a2, v74, a4);
              }
            }
            uint64_t v91 = objc_msgSend_countByEnumeratingWithState_objects_count_(v87, v95, (uint64_t)&v111, v126, 16);
          }
          while (v91);
        }
        objc_msgSend_handleSetupComplete_(a4, v90, a2);
        break;
      case 0x13:
        if (!objc_msgSend_performingManualRead(a4, v34, v35)) {
          goto LABEL_90;
        }
        if (!a2 || a2 == -16) {
          objc_msgSend_updateRememberKeychainFlagsButSkipBasePassword_(a4, v58, 1);
        }
        objc_msgSend_updateKeychainWithPasswordsWithStatus_(a4, v58, a2);
        break;
      default:
LABEL_65:
        if (a1 == 34 && !a2)
        {
          uint64_t v75 = objc_msgSend_objectForKey_(v41, v34, @"BSAssistantProgressKey_DictionaryParameter");
          if (v75)
          {
            uint64_t v78 = v75;
            long long v101 = 0u;
            long long v102 = 0u;
            long long v99 = 0u;
            long long v100 = 0u;
            id v79 = (id)objc_msgSend_copy(v96, v76, v77);
            uint64_t v81 = objc_msgSend_countByEnumeratingWithState_objects_count_(v79, v80, (uint64_t)&v99, v123, 16);
            if (v81)
            {
              uint64_t v82 = v81;
              uint64_t v83 = *(void *)v100;
              do
              {
                for (uint64_t m = 0; m != v82; ++m)
                {
                  if (*(void *)v100 != v83) {
                    objc_enumerationMutation(v79);
                  }
                  int v85 = *(void **)(*((void *)&v99 + 1) + 8 * m);
                  if (objc_opt_respondsToSelector()) {
                    objc_msgSend_setupMonitoredSettingChanged_paramDict_forController_(v85, v86, 0, v78, a4);
                  }
                }
                uint64_t v82 = objc_msgSend_countByEnumeratingWithState_objects_count_(v79, v86, (uint64_t)&v99, v123, 16);
              }
              while (v82);
            }
          }
        }
        goto LABEL_90;
    }
LABEL_89:
    objc_msgSend_handleBusyComplete(a4, v59, v60);
    goto LABEL_90;
  }
  uint64_t v41 = v97;
  switch((int)a1)
  {
    case 28:
      uint64_t v42 = objc_msgSend_objectForKey_(v97, v34, @"BSAssistantProgressKey_DictionaryParameter");
      unsigned int v44 = objc_msgSend_objectForKey_(v97, v43, @"kBSAssistantProgressKey_NumberParameter");
      uint64_t v47 = objc_msgSend_integerValue(v44, v45, v46);
      long long v103 = 0u;
      long long v104 = 0u;
      long long v105 = 0u;
      long long v106 = 0u;
      id v50 = (id)objc_msgSend_copy(v96, v48, v49);
      uint64_t v52 = objc_msgSend_countByEnumeratingWithState_objects_count_(v50, v51, (uint64_t)&v103, v124, 16);
      if (v52)
      {
        uint64_t v53 = v52;
        uint64_t v54 = *(void *)v104;
        do
        {
          for (uint64_t n = 0; n != v53; ++n)
          {
            if (*(void *)v104 != v54) {
              objc_enumerationMutation(v50);
            }
            uint64_t v56 = *(void **)(*((void *)&v103 + 1) + 8 * n);
            if (objc_opt_respondsToSelector()) {
              objc_msgSend_setupRPCResponseWithResult_rpcSelector_responseDict_forController_(v56, v57, a2, v47, v42, a4);
            }
          }
          uint64_t v53 = objc_msgSend_countByEnumeratingWithState_objects_count_(v50, v57, (uint64_t)&v103, v124, 16);
        }
        while (v53);
      }
      break;
    case 29:
      break;
    case 30:
      uint64_t v61 = objc_msgSend_objectForKey_(v97, v34, @"BSAssistantProgressKey_DictionaryParameter");
      long long v107 = 0u;
      long long v108 = 0u;
      long long v109 = 0u;
      long long v110 = 0u;
      id v64 = (id)objc_msgSend_copy(v96, v62, v63);
      uint64_t v66 = objc_msgSend_countByEnumeratingWithState_objects_count_(v64, v65, (uint64_t)&v107, v125, 16);
      if (v66)
      {
        uint64_t v69 = v66;
        uint64_t v70 = *(void *)v108;
        do
        {
          for (iuint64_t i = 0; ii != v69; ++ii)
          {
            if (*(void *)v108 != v70) {
              objc_enumerationMutation(v64);
            }
            uint64_t v72 = *(void **)(*((void *)&v107 + 1) + 8 * ii);
            if (objc_opt_respondsToSelector()) {
              objc_msgSend_setupTaskResponseWithResult_responseDict_forController_(v72, v73, a2, v61, a4);
            }
          }
          uint64_t v69 = objc_msgSend_countByEnumeratingWithState_objects_count_(v64, v73, (uint64_t)&v107, v125, 16);
        }
        while (v69);
      }
      objc_msgSend_handleTaskComplete(a4, v67, v68);
      goto LABEL_89;
    case 36:
      if (!a2) {
        objc_msgSend_updateKeychainWithPasswords(a4, v34, v35);
      }
      break;
    default:
      goto LABEL_65;
  }
LABEL_90:
}

void sub_226875E50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_226876A10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_226876AF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_226876BB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_2268771E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_2268771F4(uint64_t a1, const char *a2)
{
  uint64_t v3 = objc_msgSend_keychainPasswordForBaseStation_(AUSetupController, a2, *(void *)(a1 + 40));
  objc_msgSend_setKeychainBasePassword_(*(void **)(a1 + 32), v4, v3);
  int v5 = *(const void **)(a1 + 40);

  CFRelease(v5);
}

void sub_22687747C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_226877490(uint64_t a1, const char *a2, uint64_t a3)
{
  int v4 = *(void **)(a1 + 32);
  uint64_t v5 = objc_msgSend_keychainBasePassword(*(void **)(a1 + 40), a2, a3);
  uint64_t result = objc_msgSend_isEqualToString_(v4, v6, v5);
  if ((result & 1) == 0)
  {
    uint64_t result = objc_msgSend_updateKeychainBasePassword_forMACAddress_withBaseName_(AUSetupController, v8, *(void *)(a1 + 32), *(void *)(a1 + 48), *(void *)(a1 + 56));
    uint64_t v14 = result;
    if (dword_268146740 <= 800)
    {
      if (dword_268146740 != -1 || (uint64_t result = sub_226865630((uint64_t)&dword_268146740, 0x320u), result)) {
        uint64_t result = sub_226865EB4((uint64_t)&dword_268146740, (uint64_t)"-[AUSetupController saveKeychainBasePassword]_block_invoke", 800, (uint64_t)"updateKeychainBasePassword err: %#m\n", v10, v11, v12, v13, v14);
      }
    }
    if (!v14)
    {
      uint64_t v16 = *(void *)(a1 + 32);
      int v15 = *(void **)(a1 + 40);
      return objc_msgSend_setKeychainBasePassword_(v15, v9, v16);
    }
  }
  return result;
}

void sub_226877630(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_226877644(uint64_t a1, const char *a2)
{
  if (objc_msgSend_removeKeychainPasswordForBaseStation_(AUSetupController, a2, *(void *)(a1 + 40)) != -6727)objc_msgSend_setKeychainBasePassword_(*(void **)(a1 + 32), v3, 0); {
  int v4 = *(const void **)(a1 + 40);
  }

  CFRelease(v4);
}

void sub_226877810(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_226877824(uint64_t a1)
{
  id v2 = objc_alloc(NSDictionary);
  int v4 = objc_msgSend_initWithObjectsAndKeys_(v2, v3, *(void *)(a1 + 32), @"SSID_STR", 0);
  uint64_t NetworkPassword = objc_msgSend_getNetworkPassword_(WiFiUtils, v5, (uint64_t)v4);

  if (objc_msgSend_BOOLValue(*(void **)(a1 + 40), v7, v8)) {
    BOOL v11 = NetworkPassword == 0;
  }
  else {
    BOOL v11 = 0;
  }
  if (v11)
  {
    if (!objc_msgSend_length(*(void **)(a1 + 48), v9, v10)) {
      goto LABEL_12;
    }
    id v12 = objc_alloc(NSDictionary);
    uint64_t v14 = objc_msgSend_initWithObjectsAndKeys_(v12, v13, *(void *)(a1 + 48), @"SSID_STR", 0);
    uint64_t NetworkPassword = objc_msgSend_getNetworkPassword_(WiFiUtils, v15, (uint64_t)v14);
  }
  if (NetworkPassword)
  {
    uint64_t v16 = *(void *)(a1 + 56);
    return MEMORY[0x270F9A6D0](v16, sel_setKeychainWiFiPassword_, NetworkPassword);
  }
LABEL_12:
  uint64_t v17 = *(void **)(a1 + 56);

  return objc_msgSend_setRememberWiFiPassword_(v17, v9, 0);
}

void sub_226877AA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_226877AB8(uint64_t a1)
{
  int v2 = sub_2268FDEE0();
  uint64_t result = objc_msgSend_BOOLValue(*(void **)(a1 + 40), v3, v4);
  if (result)
  {
    uint64_t result = objc_msgSend_length(*(void **)(a1 + 48), v6, v7);
    if (result)
    {
      uint64_t result = sub_2268FDEE0();
      int v2 = result;
    }
  }
  if (!v2)
  {
    uint64_t v8 = *(void *)(a1 + 56);
    return MEMORY[0x270F9A6D0](v8, sel_setKeychainWiFiPassword_, 0);
  }
  return result;
}

void sub_226878244(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_226879580(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v21 = objc_alloc_init(MEMORY[0x263F086B0]);
  if (a4)
  {
    uint64_t v10 = objc_msgSend_delegate(a4, v8, v9);
    if (v10)
    {
      id v12 = (void *)v10;
      if (objc_opt_respondsToSelector())
      {
        CFStringRef v14 = (const __CFString *)objc_msgSend_objectForKey_(a3, v13, @"BSAssistantProgressKey_DictionaryParameter");
        if ((a1 - 5) <= 1 && v14)
        {
          uint64_t v17 = (uint64_t)sub_22685DB1C((uint64_t)v14, (const char *)1, v16);
        }
        else if ((a1 - 7) <= 1 && v14)
        {
          uint64_t v17 = (uint64_t)sub_22685DA7C(v14, (const char *)1, v16);
        }
        else
        {
          uint64_t v17 = objc_msgSend_objectForKey_(a3, v15, @"BSAssistantProgressKey_StringParameter");
        }
        objc_msgSend_stepByStepProgressUpdated_status_paramString_(v12, v18, a1, a2, v17);
      }
      if (a1 == 15)
      {
        uint64_t v19 = objc_msgSend_objectForKey_(a3, v13, @"BSAssistantProgressKey_DictionaryParameter");
        if (objc_opt_respondsToSelector()) {
          objc_msgSend_stepByStepCompleteWithResult_paramDict_(v12, v20, a2, v19);
        }
      }
    }
    else if (a1 == 15)
    {
      objc_msgSend_objectForKey_(a3, v11, @"BSAssistantProgressKey_DictionaryParameter");
    }
  }
}

uint64_t sub_226879BB4(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  *(void *)a1 = &unk_26DA6B1C8;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(void *)(a1 + 112) = time(0);
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 200) = 0;
  *(_WORD *)(a1 + 384) = 0;
  *(unsigned char *)(a1 + 386) = 0;
  *(_DWORD *)(a1 + 456) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 144) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(_WORD *)(a1 + 192) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(_DWORD *)(a1 + 223) = 0;
  *(void *)(a1 + 232) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(void *)(a1 + 344) = 0;
  *(_DWORD *)(a1 + 256) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 328) = 0;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 366) = 0;
  pthread_mutexattr_init(&v9);
  pthread_mutexattr_settype(&v9, 2);
  pthread_mutex_init((pthread_mutex_t *)(a1 + 392), &v9);
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  *(void *)(a1 + 32) = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  *(void *)(a1 + 40) = CFDictionaryCreateMutable(v2, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  *(void *)(a1 + 48) = CFDictionaryCreateMutable(v2, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  sub_22685FC7C(v2, (CFTypeRef *)(a1 + 56), (uint64_t)"{%kO=%i%kO=[{%kO={%kO={}%kO=[]}}]}", v3, v4, v5, v6, v7, @"Version");
  *(void *)(a1 + 336) = 0;
  sub_226879E8C(a1);
  return a1;
}

void sub_226879DCC(_Unwind_Exception *a1)
{
  sub_22689EDB8(v2);
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v3);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_226879E8C(uint64_t a1)
{
  *(_WORD *)(a1 + 384) = 0;
  CFAllocatorRef v2 = *(__CFDictionary **)(a1 + 32);
  if (v2) {
    CFDictionaryRemoveAllValues(v2);
  }
  uint64_t v3 = *(__CFDictionary **)(a1 + 40);
  if (v3) {
    CFDictionaryRemoveAllValues(v3);
  }
  uint64_t v4 = *(__CFDictionary **)(a1 + 48);
  if (v4) {
    CFDictionaryRemoveAllValues(v4);
  }
  sub_226879F0C(a1);
  *(unsigned char *)(a1 + 226) = 0;

  return sub_22687DB9C(a1);
}

void sub_226879EF4(void *a1)
{
}

uint64_t sub_226879F0C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 104);
  if (v1)
  {
    CFAllocatorRef v2 = (void *)result;
    uint64_t v3 = (void *)(result + 64);
    do
    {
      CFRelease(*(CFTypeRef *)(*(void *)(v2[9] + (((unint64_t)(v1 + v2[12] - 1) >> 6) & 0x3FFFFFFFFFFFFF8))
                             + 8 * ((v1 + v2[12] - 1) & 0x1FF)));
      --v2[13];
      uint64_t result = sub_22689FB84(v3, 1);
      uint64_t v1 = v2[13];
    }
    while (v1);
  }
  return result;
}

void sub_226879F80(uint64_t a1, CFTypeRef cf)
{
  CFTypeRef v3 = *(CFTypeRef *)(a1 + 336);
  if (v3 != cf)
  {
    if (v3) {
      CFRelease(v3);
    }
    *(void *)(a1 + 336) = cf;
    if (cf)
    {
      CFRetain(cf);
    }
  }
}

uint64_t sub_226879FE0(uint64_t a1, int a2)
{
  value = 0;
  int valuePtr = 0;
  CFPropertyListRef propertyList = 0;
  if (a2) {
    uint64_t v4 = 2;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = sub_22687CDBC(a1, 1349676902, &propertyList, v4);
  if (v5) {
    goto LABEL_27;
  }
  CFPropertyListRef v6 = propertyList;
  CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  if (propertyList)
  {
    CFPropertyListRef propertyList = CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], propertyList, 2uLL);
    CFRelease(v6);
    CFMutableDictionaryRef Mutable = propertyList;
    if (!propertyList) {
      goto LABEL_26;
    }
  }
  else
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v7, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    CFPropertyListRef propertyList = Mutable;
    if (!Mutable) {
      goto LABEL_26;
    }
  }
  pthread_mutexattr_t v9 = (void *)CFDictionaryGetValue((CFDictionaryRef)Mutable, @"profiles");
  if (!v9)
  {
    CFMutableArrayRef v10 = CFArrayCreateMutable(v7, 0, MEMORY[0x263EFFF70]);
    if (!v10) {
      goto LABEL_26;
    }
    pthread_mutexattr_t v9 = v10;
    CFDictionarySetValue((CFMutableDictionaryRef)propertyList, @"profiles", v10);
    CFRelease(v9);
  }
  if (CFArrayGetCount((CFArrayRef)v9) < 1)
  {
    uint64_t v5 = sub_22687D724(a1, qword_268148388, (__CFArray **)&value);
    if (v5) {
      goto LABEL_27;
    }
    CFArrayAppendValue((CFMutableArrayRef)v9, value);
    CFRelease(value);
    CFStringRef ValueAtIndex = value;
  }
  else
  {
    CFStringRef ValueAtIndex = (void *)CFArrayGetValueAtIndex((CFArrayRef)v9, 0);
    value = ValueAtIndex;
    if (a2) {
      *(unsigned char *)(a1 + 372) = 1;
    }
  }
  if (!CFDictionaryGetValue((CFDictionaryRef)ValueAtIndex, @"name"))
  {
    CFStringRef v12 = CFStringCreateWithCString(v7, (const char *)qword_268148388, 0x8000100u);
    if (!v12)
    {
      uint64_t v5 = 4294960554;
      goto LABEL_27;
    }
    CFStringRef v13 = v12;
    CFDictionarySetValue((CFMutableDictionaryRef)value, @"name", v12);
    CFRelease(v13);
  }
  CFNumberRef v14 = (const __CFNumber *)CFDictionaryGetValue((CFDictionaryRef)propertyList, @"currentProfile");
  if (!v14)
  {
    *(_DWORD *)(a1 + 368) = 0;
    CFNumberRef v15 = CFNumberCreate(v7, kCFNumberIntType, (const void *)(a1 + 368));
    if (v15)
    {
      CFNumberRef v16 = v15;
      CFDictionarySetValue((CFMutableDictionaryRef)propertyList, @"currentProfile", v15);
      CFRelease(v16);
      goto LABEL_25;
    }
LABEL_26:
    uint64_t v5 = 4294960568;
    goto LABEL_27;
  }
  if (CFNumberGetValue(v14, kCFNumberIntType, &valuePtr))
  {
    *(_DWORD *)(a1 + 368) = valuePtr;
LABEL_25:
    uint64_t v5 = sub_22687AF44(a1, 1349676902, (const __CFString *)propertyList, 0);
    goto LABEL_27;
  }
  uint64_t v5 = 4294960553;
LABEL_27:
  if (propertyList) {
    CFRelease(propertyList);
  }
  return v5;
}

uint64_t sub_22687A254(uint64_t a1)
{
  *(void *)a1 = &unk_26DA6B1C8;
  if (*(void *)(a1 + 40))
  {
    pthread_mutex_lock((pthread_mutex_t *)(a1 + 392));
    ++*(_DWORD *)(a1 + 456);
    CFRelease(*(CFTypeRef *)(a1 + 40));
    *(void *)(a1 + 40) = 0;
    --*(_DWORD *)(a1 + 456);
    pthread_mutex_unlock((pthread_mutex_t *)(a1 + 392));
  }
  if (*(void *)(a1 + 32))
  {
    pthread_mutex_lock((pthread_mutex_t *)(a1 + 392));
    ++*(_DWORD *)(a1 + 456);
    CFRelease(*(CFTypeRef *)(a1 + 32));
    *(void *)(a1 + 32) = 0;
    --*(_DWORD *)(a1 + 456);
    pthread_mutex_unlock((pthread_mutex_t *)(a1 + 392));
  }
  CFAllocatorRef v2 = *(const void **)(a1 + 48);
  if (v2)
  {
    CFRelease(v2);
    *(void *)(a1 + 48) = 0;
  }
  CFTypeRef v3 = *(const void **)(a1 + 56);
  if (v3)
  {
    CFRelease(v3);
    *(void *)(a1 + 56) = 0;
  }
  sub_226879F0C(a1);
  uint64_t v4 = *(const void **)(a1 + 336);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 336) = 0;
  }
  pthread_mutex_destroy((pthread_mutex_t *)(a1 + 392));
  if (*(char *)(a1 + 367) < 0) {
    operator delete(*(void **)(a1 + 344));
  }
  if (*(char *)(a1 + 335) < 0) {
    operator delete(*(void **)(a1 + 312));
  }
  if (*(char *)(a1 + 311) < 0) {
    operator delete(*(void **)(a1 + 288));
  }
  if (*(char *)(a1 + 287) < 0) {
    operator delete(*(void **)(a1 + 264));
  }
  uint64_t v5 = *(void **)(a1 + 232);
  if (v5)
  {
    *(void *)(a1 + 240) = v5;
    operator delete(v5);
  }
  CFPropertyListRef v6 = *(void **)(a1 + 200);
  if (v6)
  {
    *(void *)(a1 + 208) = v6;
    operator delete(v6);
  }
  if (*(char *)(a1 + 191) < 0) {
    operator delete(*(void **)(a1 + 168));
  }
  if (*(char *)(a1 + 143) < 0) {
    operator delete(*(void **)(a1 + 120));
  }
  sub_22689EDB8((void *)(a1 + 64));
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_22687A3EC(_Unwind_Exception *a1)
{
  CFTypeRef v3 = v2;
  --*(_DWORD *)(v1 + 456);
  pthread_mutex_unlock(v3);
  if (*(char *)(v1 + 367) < 0) {
    operator delete(*(void **)(v1 + 344));
  }
  if (*(char *)(v1 + 335) < 0) {
    operator delete(*(void **)(v1 + 312));
  }
  if (*(char *)(v1 + 311) < 0) {
    operator delete(*(void **)(v1 + 288));
  }
  if (*(char *)(v1 + 287) < 0) {
    operator delete(*(void **)(v1 + 264));
  }
  uint64_t v5 = *(void **)(v1 + 232);
  if (v5)
  {
    *(void *)(v1 + 240) = v5;
    operator delete(v5);
  }
  CFPropertyListRef v6 = *(void **)(v1 + 200);
  if (v6)
  {
    *(void *)(v1 + 208) = v6;
    operator delete(v6);
  }
  if (*(char *)(v1 + 191) < 0) {
    operator delete(*(void **)(v1 + 168));
  }
  if (*(char *)(v1 + 143) < 0) {
    operator delete(*(void **)(v1 + 120));
  }
  sub_22689EDB8((void *)(v1 + 64));
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*(void **)(v1 + 8));
  }
  _Unwind_Resume(a1);
}

void sub_22687A4E8(uint64_t a1)
{
  sub_22687A254(a1);

  JUMPOUT(0x22A65AC10);
}

void sub_22687A530(_Unwind_Exception *a1)
{
  MEMORY[0x22A65AC10](v1, 0x10F3C40C1DAC261);
  _Unwind_Resume(a1);
}

uint64_t sub_22687A554(uint64_t a1, int a2)
{
  uint64_t v23 = 0;
  int v22 = 0;
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v21 = 0;
  uint64_t v4 = sub_22687AB24(a1, 1937326416, (char *)&v23 + 4, 0);
  if (!v4)
  {
    int v5 = sub_22683C4F8(HIDWORD(v23));
    *(_DWORD *)(a1 + 256) = v5;
    if (v5) {
      BOOL v10 = 0;
    }
    else {
      BOOL v10 = dword_268146940 <= 5000;
    }
    if (v10 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1388u))) {
      sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::Prepare(BOOL)", 5000, (uint64_t)"### no product family for product ID %d\n", v6, v7, v8, v9, HIDWORD(v23));
    }
    unsigned int v11 = HIDWORD(v23);
    uint64_t v4 = sub_22687AB24(a1, 1717907505, &v23, 0);
    if (!v4)
    {
      if (v11 <= 0x67) {
        LODWORD(v23) = v23 | 0x1000000;
      }
      if (HIDWORD(v23) <= 1) {
        LODWORD(v23) = v23 | 0x2000000;
      }
      if (v11 <= 0x67)
      {
        LODWORD(v23) = v23 | 0x7C000000;
        if (HIDWORD(v23))
        {
LABEL_17:
          if (!a2) {
            goto LABEL_72;
          }
          goto LABEL_21;
        }
      }
      else if (HIDWORD(v23))
      {
        goto LABEL_17;
      }
      LODWORD(v23) = v23 | 0x1F880;
      if (!a2)
      {
LABEL_72:
        int v13 = HIDWORD(v23);
        if (HIDWORD(v23) == 102)
        {
          sub_22687ABC0(a1, 0x61546E73u);
          sub_22687ABC0(a1, 0x4C454449u);
          sub_22687ABC0(a1, 0x4C454443u);
          int v13 = HIDWORD(v23);
        }
        unsigned int v14 = v13 - 104;
        if (v14 <= 5 && v14 != 3) {
          sub_22687ABC0(a1, 0x52544370u);
        }
        uint64_t v4 = sub_22687AB24(a1, 1937327724, &v22, 0);
        if (!v4)
        {
          if ((*(_WORD *)(a1 + 224) & 8) != 0 || (v22 & 8) != 0 || HIDWORD(v23) == 104) {
            sub_22687ABC0(a1, 0x4C454449u);
          }
          sub_22687ACC0(a1, 1330463043);
          if (*(unsigned char *)(a1 + 385))
          {
            CFTypeRef cf = 0;
            if (!sub_22687AE04(a1, "raMA", -1, (CFMutableDictionaryRef *)&cf, 2)) {
              sub_22687AF44(a1, 1918979393, (const __CFString *)cf, 2);
            }
            *(unsigned char *)(a1 + 385) = 0;
            if (cf) {
              CFRelease(cf);
            }
          }
          sub_22687B1F8(a1, 1);
          if (a2)
          {
            *(_DWORD *)(a1 + 260) = -1;
            uint64_t v4 = sub_22687CB2C(a1, 1836013171, (uint64_t)__p, 0);
            CFNumberRef v15 = (_DWORD *)(a1 + 260);
            if (v21 >= 0) {
              CFNumberRef v16 = (char *)__p;
            }
            else {
              CFNumberRef v16 = (char *)__p[0];
            }
            uint64_t v17 = strstr(v16, "APPLE VERSION ");
            if (v17) {
              sscanf(v17 + 14, "%u", a1 + 260);
            }
            if ((*v15 & 0x80000000) != 0) {
              *CFNumberRef v15 = 7;
            }
            if (sub_22687CBC8(a1, 1347372333) || (uint64_t v4 = sub_22687CC58(a1, 1769161027, 1, 2), !v4))
            {
              if (sub_22687CBC8(a1, 1349676902)) {
                sub_22687CD0C(a1);
              }
            }
          }
          else
          {
            uint64_t v4 = 0;
          }
        }
        goto LABEL_100;
      }
LABEL_21:
      if (v11 <= 0x67)
      {
        int v12 = v23;
        if (v23)
        {
          sub_22687ABC0(a1, 0x53416343u);
          int v12 = v23;
        }
        if ((v12 & 2) != 0)
        {
          sub_22687ABC0(a1, 0x52654449u);
          int v12 = v23;
        }
        if ((v12 & 4) != 0)
        {
          sub_22687ABC0(a1, 0x444D6573u);
          int v12 = v23;
        }
        if ((v12 & 8) != 0)
        {
          sub_22687ABC0(a1, 0x4E414F4Cu);
          int v12 = v23;
        }
        if ((v12 & 0x10) != 0)
        {
          sub_22687ABC0(a1, 0x4E6F4D57u);
          int v12 = v23;
        }
        if ((v12 & 0x20) != 0)
        {
          sub_22687ABC0(a1, 0x41436853u);
          int v12 = v23;
        }
        if ((v12 & 0x40) != 0)
        {
          sub_22687ABC0(a1, 0x5261526Fu);
          int v12 = v23;
        }
        if ((v12 & 0x80) != 0)
        {
          sub_22687ABC0(a1, 0x53447557u);
          int v12 = v23;
        }
        if ((v12 & 0x100) != 0)
        {
          sub_22687ABC0(a1, 0x4D435274u);
          int v12 = v23;
        }
        if ((v12 & 0x200) != 0)
        {
          sub_22687ABC0(a1, 0x416C7444u);
          int v12 = v23;
        }
        if ((v12 & 0x400) != 0)
        {
          sub_22687ABC0(a1, 0x416C7449u);
          int v12 = v23;
        }
        if ((v12 & 0x800) != 0)
        {
          sub_22687ABC0(a1, 0x5750412Du);
          int v12 = v23;
        }
        if ((v12 & 0x1000) != 0)
        {
          sub_22687ABC0(a1, 0x4145532Du);
          int v12 = v23;
        }
        if ((v12 & 0x2000) != 0)
        {
          sub_22687ABC0(a1, 0x5379734Cu);
          int v12 = v23;
        }
        if ((v12 & 0x4000) != 0)
        {
          sub_22687ABC0(a1, 0x4E54502Du);
          int v12 = v23;
        }
        if ((v12 & 0x8000) != 0)
        {
          sub_22687ABC0(a1, 0x50726F66u);
          int v12 = v23;
        }
        if ((v12 & 0x10000) != 0)
        {
          sub_22687ABC0(a1, 0x42535441u);
          int v12 = v23;
        }
        if ((v12 & 0x1000000) != 0)
        {
          sub_22687ABC0(a1, 0x52614D53u);
          int v12 = v23;
        }
        if ((v12 & 0x2000000) != 0)
        {
          sub_22687ABC0(a1, 0x52616444u);
          int v12 = v23;
        }
        if ((v12 & 0x4000000) != 0)
        {
          sub_22687ABC0(a1, 0x5553422Du);
          int v12 = v23;
        }
        if ((v12 & 0x8000000) != 0)
        {
          sub_22687ABC0(a1, 0x54785077u);
          int v12 = v23;
        }
        if ((v12 & 0x10000000) != 0)
        {
          sub_22687ABC0(a1, 0x5744532Du);
          int v12 = v23;
        }
        if ((v12 & 0x20000000) != 0)
        {
          sub_22687ABC0(a1, 0x4E507241u);
          int v12 = v23;
        }
        if ((v12 & 0x40000000) != 0)
        {
          sub_22687ABC0(a1, 0x4E446548u);
          int v12 = v23;
        }
        if (v12 < 0) {
          sub_22687ABC0(a1, 0x504F452Du);
        }
      }
      goto LABEL_72;
    }
  }
LABEL_100:
  if (SHIBYTE(v21) < 0) {
    operator delete(__p[0]);
  }
  return v4;
}

void sub_22687AB08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22687AB24(uint64_t a1, int a2, void *a3, uint64_t a4)
{
  sub_22683C448(a2, __s);
  sub_22689F090(__p, __s);
  uint64_t v7 = sub_226888134(a1, (uint64_t)__p, a3, a4);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  return v7;
}

void sub_22687ABA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_22687ABC0(uint64_t a1, unsigned int a2)
{
  CFTypeRef cf = 0;
  if (!sub_22687CBC8(a1, a2))
  {
    *(_DWORD *)UInt8 bytes = 0;
    if (!sub_22687CDBC(a1, 1717920116, &cf, 0))
    {
      if (!cf) {
        return;
      }
      CFTypeID v4 = CFGetTypeID(cf);
      if (v4 == CFDataGetTypeID())
      {
        CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        CFIndex Length = CFDataGetLength((CFDataRef)cf);
        CFStringRef MutableCopy = CFDataCreateMutableCopy(v5, Length + 4, (CFDataRef)cf);
        if (MutableCopy)
        {
          CFStringRef v8 = (const __CFString *)MutableCopy;
          *(_DWORD *)UInt8 bytes = bswap32(a2);
          CFDataAppendBytes(MutableCopy, bytes, 4);
          if (!sub_22687AF44(a1, 1717920116, v8, 2)) {
            sub_22687B1F8(a1, 1);
          }
          CFRelease(v8);
        }
      }
    }
    if (cf) {
      CFRelease(cf);
    }
  }
}

void sub_22687ACC0(uint64_t a1, int a2)
{
  CFTypeRef cf = 0;
  if (sub_22687CBC8(a1, a2))
  {
    if (!sub_22687CDBC(a1, 1717920116, &cf, 0))
    {
      if (!cf) {
        return;
      }
      CFTypeID v4 = CFGetTypeID(cf);
      if (v4 == CFDataGetTypeID())
      {
        BytePtr = CFDataGetBytePtr((CFDataRef)cf);
        unint64_t Length = CFDataGetLength((CFDataRef)cf);
        CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        CFIndex v8 = CFDataGetLength((CFDataRef)cf);
        CFMutableDataRef Mutable = CFDataCreateMutable(v7, v8 - 4);
        if (Mutable)
        {
          char v10 = Mutable;
          if (Length >= 4)
          {
            if (Length >> 2 <= 1) {
              uint64_t v11 = 1;
            }
            else {
              uint64_t v11 = Length >> 2;
            }
            do
            {
              if (bswap32(*(_DWORD *)BytePtr) != a2) {
                CFDataAppendBytes(v10, BytePtr, 4);
              }
              BytePtr += 4;
              --v11;
            }
            while (v11);
          }
          if (!sub_22687AF44(a1, 1717920116, (const __CFString *)v10, 2)) {
            sub_22687B1F8(a1, 1);
          }
          CFRelease(v10);
        }
      }
    }
    if (cf) {
      CFRelease(cf);
    }
  }
}

uint64_t sub_22687AE04(uint64_t a1, char *a2, uint64_t a3, CFMutableDictionaryRef *a4, uint64_t a5)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  memset(&v13, 0, sizeof(v13));
  if (a4)
  {
    sub_226894368(v14, 0x11uLL, a3);
    MEMORY[0x22A65ABB0](&v13, v14);
    sub_22689F090(__p, a2);
    sub_226881624((unsigned __int8 *)&v13, (uint64_t)__p, &v13);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v9 = sub_2268820DC(a1, (uint64_t)&v13, a4, a5);
    if (v9 == -5)
    {
      *a4 = (CFMutableDictionaryRef)&stru_26DA6BE88;
      CFRetain(&stru_26DA6BE88);
      uint64_t v9 = 0;
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_22687AF0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22687AF44(uint64_t a1, uint64_t a2, const __CFString *a3, uint64_t a4)
{
  value = 0;
  char v17 = 0;
  CFIndex v8 = (pthread_mutex_t *)(a1 + 392);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 392));
  ++*(_DWORD *)(a1 + 456);
  sub_22683C448(a2, cStr);
  CFStringRef v9 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], cStr, 0x8000100u);
  if (v9)
  {
    if (sub_22687EF64(a1, a2))
    {
      sub_22689F090(__p, cStr);
      uint64_t v10 = sub_22688377C(a1, (uint64_t)__p, (uint64_t)a3, a4);
      if (v16 < 0) {
        operator delete(__p[0]);
      }
      goto LABEL_20;
    }
    if (a3)
    {
      uint64_t v10 = sub_226888014(a1, a2, a3, &value, &v17);
      if (v10 || !value) {
        goto LABEL_20;
      }
      __p[0] = 0;
      if (a4 > 1)
      {
        CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 32), v9, value);
        __p[0] = value;
LABEL_17:
        if (v17) {
          CFRelease(value);
        }
        goto LABEL_19;
      }
      if (a2 != 2002862934)
      {
        __p[0] = (void *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 32), v9);
        goto LABEL_23;
      }
      uint64_t v10 = sub_22687D4B0((CFDictionaryRef *)a1, 2002862934, (CFNumberRef *)__p, 2);
      if (!v10)
      {
LABEL_23:
        char v12 = (void *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 40), v9);
        std::string v13 = v12;
        if (v12 && !CFEqual(v12, value) || !__p[0] || !CFEqual(__p[0], value))
        {
          BOOL v14 = !sub_2268880B8(a1, a2);
          if (a2 == 1466517097) {
            LOBYTE(v14) = 0;
          }
          if (!v14)
          {
            CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 40), v9, value);
            std::string v13 = value;
          }
        }
        if (__p[0])
        {
          if (v13)
          {
            if (CFEqual(v13, __p[0]))
            {
              uint64_t v10 = sub_22687AF44(a1, a2, 0, 1);
              if (v10) {
                goto LABEL_20;
              }
            }
          }
        }
        goto LABEL_17;
      }
    }
    else
    {
      if (a4 <= 1)
      {
        CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 40), v9);
LABEL_19:
        uint64_t v10 = 0;
        goto LABEL_20;
      }
      uint64_t v10 = 4294960591;
    }
LABEL_20:
    CFRelease(v9);
    goto LABEL_21;
  }
  uint64_t v10 = 4294960568;
LABEL_21:
  --*(_DWORD *)(a1 + 456);
  pthread_mutex_unlock(v8);
  return v10;
}

void sub_22687B1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  --*(_DWORD *)(v16 + 456);
  pthread_mutex_unlock(v15);
  _Unwind_Resume(a1);
}

void sub_22687B1F8(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0 || *(void *)(a1 + 208) == *(void *)(a1 + 200))
  {
    int v50 = 0;
    if (!sub_22687AB24(a1, 1752641585, &v50, 0))
    {
      BOOL v3 = sub_22687CBC8(a1, 2003390540);
      BOOL v4 = sub_22687CBC8(a1, 1382368329);
      char v49 = v50;
      BOOL v48 = sub_22687CBC8(a1, 1768961614);
      BOOL v5 = sub_22687CBC8(a1, 1765164850);
      BOOL v47 = sub_22687CBC8(a1, 1198748750);
      int v6 = 1651861868;
      unint64_t v7 = 0;
      do
      {
        int v8 = *(_DWORD *)((char *)&qword_2269113F8 + v7 + 12);
        v7 += 12;
      }
      while (v8);
      uint64_t v10 = (unint64_t *)(a1 + 200);
      uint64_t v9 = *(void *)(a1 + 200);
      char v12 = (void *)(a1 + 208);
      uint64_t v11 = *(void *)(a1 + 208);
      if (v11 - v9 >= v7)
      {
        if (v11 - v9 > v7) {
          *char v12 = v9 + v7;
        }
      }
      else
      {
        sub_22689F1EC((unint64_t *)(a1 + 200), v9 - v11 + v7);
        int v6 = 1651861868;
      }
      BOOL v13 = (v49 & 1) == 0 && v4;
      BOOL v46 = v13;
      uint64_t v14 = 0;
      for (uint64_t i = &qword_2269113F8; ; uint64_t i = (uint64_t *)((char *)i + 12))
      {
        if (v6 > 1885688653)
        {
          if (v6 > 1936611158)
          {
            if (v6 <= 2002862896)
            {
              if (v6 > 1937330257)
              {
                if (v6 <= 1937331825)
                {
                  if (v6 > 1937331018)
                  {
                    if (v6 <= 1937331059)
                    {
                      if (v6 == 1937331019) {
                        goto LABEL_446;
                      }
                      unsigned __int16 v32 = 21326;
                      goto LABEL_355;
                    }
                    if (v6 != 1937331060)
                    {
                      unsigned __int16 v32 = 21844;
LABEL_355:
                      int v31 = v32 | 0x73790000;
                      goto LABEL_406;
                    }
LABEL_412:
                    uint64_t v21 = a1;
                    unsigned __int16 v38 = 21364;
LABEL_413:
                    int v22 = v38 | 0x53790000;
                    goto LABEL_440;
                  }
                  if (v6 == 1937330258 || v6 == 1937330263) {
                    goto LABEL_446;
                  }
                  unsigned __int16 v30 = 21093;
                  goto LABEL_290;
                }
                if (v6 <= 1953066361)
                {
                  if ((v6 - 1937331826) >= 2)
                  {
                    if (v6 == 1950434124)
                    {
                      uint64_t v21 = a1;
                      int v22 = 1950434124;
                    }
                    else
                    {
                      if (v6 != 1953066341) {
                        goto LABEL_447;
                      }
LABEL_390:
                      uint64_t v21 = a1;
                      int v22 = 1381253996;
                    }
                    goto LABEL_440;
                  }
                  goto LABEL_446;
                }
                if (v6 > 1970496069)
                {
                  if (v6 == 1970496070) {
                    goto LABEL_446;
                  }
                  if (v6 == 1970500196)
                  {
                    uint64_t v21 = a1;
                    int v22 = 1433617506;
                    goto LABEL_440;
                  }
                  goto LABEL_447;
                }
                if (v6 == 1953066362) {
                  goto LABEL_390;
                }
                int v34 = 1953645423;
                goto LABEL_394;
              }
              if (v6 > 1937326963)
              {
                if (v6 <= 1937328486)
                {
                  if (v6 == 1937326964 || v6 == 1937327182) {
                    goto LABEL_446;
                  }
                  unsigned __int16 v32 = 18028;
                  goto LABEL_355;
                }
                if (v6 > 1937329262)
                {
                  if (v6 == 1937329263) {
                    goto LABEL_446;
                  }
                  unsigned __int16 v32 = 20077;
                  goto LABEL_355;
                }
                if (v6 == 1937328487) {
                  goto LABEL_412;
                }
                unsigned __int16 v30 = 19538;
LABEL_290:
                if (v6 == (v30 | 0x73790000))
                {
                  uint64_t v21 = a1;
                  int v22 = 942682734;
                  goto LABEL_440;
                }
                goto LABEL_447;
              }
              if (v6 <= 1937011780)
              {
                if (v6 == 1936611159 || v6 == 1936876406) {
                  goto LABEL_446;
                }
                if (v6 == 1937006964)
                {
LABEL_260:
                  uint64_t v21 = a1;
                  int v22 = 1097749364;
                  goto LABEL_440;
                }
              }
              else
              {
                if (v6 > 1937326412)
                {
                  if (v6 == 1937326413) {
                    goto LABEL_446;
                  }
                  unsigned __int16 v32 = 16720;
                  goto LABEL_355;
                }
                if ((v6 - 1937011781) < 2) {
                  goto LABEL_260;
                }
                if (v6 == 1937068114)
                {
                  uint64_t v21 = a1;
                  int v22 = 1937068114;
                  goto LABEL_440;
                }
              }
            }
            else
            {
              if (v6 <= 2002866766)
              {
                if (v6 <= 2002864463)
                {
                  if ((v6 - 2002863153) > 0x22
                    || ((1 << (v6 - 49)) & 0x420040007) == 0)
                  {
                    unsigned int v33 = v6 - 2002862897;
                    if (v33 > 0x25 || ((1 << v33) & 0x2000080007) == 0) {
                      goto LABEL_447;
                    }
                  }
                  goto LABEL_446;
                }
                if (v6 <= 2002865472)
                {
                  if (v6 == 2002864464) {
                    goto LABEL_446;
                  }
                  unsigned __int16 v19 = 18798;
                }
                else
                {
                  if (v6 == 2002865473) {
                    goto LABEL_446;
                  }
                  if (v6 == 2002865741)
                  {
                    uint64_t v21 = a1;
                    int v22 = 1315917143;
                    goto LABEL_440;
                  }
                  unsigned __int16 v19 = 21057;
                }
                goto LABEL_189;
              }
              if (v6 <= 2002932291)
              {
                if (v6 > 2002927938)
                {
                  if (((v6 - 2002929742) > 7 || ((1 << (v6 - 78)) & 0x85) == 0)
                    && v6 != 2002927939
                    && v6 != 2002929006)
                  {
                    goto LABEL_447;
                  }
                  goto LABEL_216;
                }
                if (v6 != 2002866767)
                {
                  if (v6 == 2002867012)
                  {
                    uint64_t v21 = a1;
                    int v22 = 1396995415;
                    goto LABEL_440;
                  }
                  unsigned __int16 v19 = 21325;
LABEL_189:
                  int v31 = v19 | 0x77610000;
                  goto LABEL_406;
                }
                uint64_t v40 = a1;
                int v41 = 1400460148;
LABEL_428:
                if (sub_22687CBC8(v40, v41)) {
                  goto LABEL_447;
                }
                goto LABEL_446;
              }
              if (v6 <= 2003003252)
              {
                if ((v6 - 2002932292) > 0x11 || ((1 << (v6 - 68)) & 0x21001) == 0)
                {
                  int v29 = 2003003251;
LABEL_204:
                  if (v6 != v29) {
                    goto LABEL_447;
                  }
LABEL_297:
                  uint64_t v21 = a1;
                  int v22 = 1635215715;
                  goto LABEL_440;
                }
LABEL_216:
                uint64_t v21 = a1;
                int v22 = 2000834122;
                goto LABEL_440;
              }
              if (v6 <= 2003061874)
              {
                if (v6 == 2003003253) {
                  goto LABEL_297;
                }
                if (v6 != 2003060332) {
                  goto LABEL_447;
                }
LABEL_415:
                if (!v3)
                {
                  uint64_t v21 = a1;
                  int v22 = 1464095533;
                  goto LABEL_440;
                }
                goto LABEL_447;
              }
              if (v6 == 2003061875) {
                goto LABEL_415;
              }
              if (v6 == 2004050793)
              {
                uint64_t v21 = a1;
                int v22 = 1465074477;
                goto LABEL_440;
              }
            }
          }
          else if (v6 > 1918979648)
          {
            if (v6 <= 1918981233)
            {
              if (v6 > 1918980913)
              {
                if (v6 <= 1918981169)
                {
                  char v24 = v6 - 76;
                  if ((v6 - 1918980940) <= 0x28)
                  {
                    if (((1 << v24) & 0x10082000000) != 0) {
                      goto LABEL_445;
                    }
                    if (((1 << v24) & 0x41) != 0) {
                      goto LABEL_446;
                    }
                  }
                  unsigned __int16 v20 = 21298;
                  goto LABEL_443;
                }
                if (v6 != 1918981170)
                {
                  unsigned __int16 v20 = 21613;
                  goto LABEL_443;
                }
LABEL_445:
                if (!v3) {
                  goto LABEL_446;
                }
                goto LABEL_447;
              }
              if (v6 <= 1918980215)
              {
                if (v6 == 1918979649) {
                  goto LABEL_446;
                }
                if (v6 != 1918979693)
                {
                  if (v6 != 1918980207 || v3) {
                    goto LABEL_447;
                  }
                  uint64_t v21 = a1;
                  int v22 = 1417171063;
                  goto LABEL_440;
                }
                goto LABEL_445;
              }
              if (v6 > 1918980708)
              {
                if (v6 != 1918980709)
                {
                  if (v6 != 1918980719 || v3) {
                    goto LABEL_447;
                  }
                  uint64_t v21 = a1;
                  unsigned __int16 v37 = 21103;
LABEL_421:
                  int v22 = v37 | 0x52610000;
LABEL_440:
                  if (!sub_22687CBC8(v21, v22)) {
                    goto LABEL_447;
                  }
LABEL_446:
                  uint64_t v42 = *v10 + 12 * v14++;
                  uint64_t v43 = *i;
                  *(_DWORD *)(v42 + 8) = *((_DWORD *)i + 2);
                  *(void *)uint64_t v42 = v43;
                  goto LABEL_447;
                }
                goto LABEL_445;
              }
              if (v6 == 1918980216) {
                goto LABEL_446;
              }
              unsigned __int16 v20 = 21042;
LABEL_443:
              int v39 = v20 | 0x72610000;
LABEL_444:
              if (v6 != v39) {
                goto LABEL_447;
              }
              goto LABEL_445;
            }
            if (v6 > 1936488043)
            {
              if (v6 > 1936608342)
              {
                if (v6 > 1936609878)
                {
                  if (v6 == 1936609879) {
                    goto LABEL_446;
                  }
                  unsigned __int16 v27 = 22348;
                }
                else
                {
                  if (v6 == 1936608343) {
                    goto LABEL_446;
                  }
                  unsigned __int16 v27 = 21068;
                }
              }
              else if (v6 > 1936606034)
              {
                if (v6 == 1936606035)
                {
                  uint64_t v21 = a1;
                  int v22 = 1936606035;
                  goto LABEL_440;
                }
                unsigned __int16 v27 = 19532;
              }
              else
              {
                if (v6 == 1936488044)
                {
LABEL_367:
                  uint64_t v21 = a1;
                  unsigned __int16 v38 = 29516;
                  goto LABEL_413;
                }
                unsigned __int16 v27 = 16710;
              }
              int v31 = v27 | 0x736E0000;
              goto LABEL_406;
            }
            if (v6 <= 1918981956)
            {
              if (v6 > 1918981953)
              {
                if (v6 != 1918981954)
                {
                  if (v6 != 1918981955 || v3) {
                    goto LABEL_447;
                  }
                  uint64_t v21 = a1;
                  int v22 = 1466188648;
                  goto LABEL_440;
                }
                goto LABEL_446;
              }
              if (v6 == 1918981234) {
                goto LABEL_446;
              }
              unsigned __int16 v20 = 21810;
              goto LABEL_443;
            }
            if (v6 <= 1936017003)
            {
              if (v6 != 1918981957)
              {
                unsigned __int16 v20 = 22349;
                goto LABEL_443;
              }
              goto LABEL_445;
            }
            if (v6 == 1936017004) {
              goto LABEL_446;
            }
            if (v6 == 1936474988) {
              goto LABEL_367;
            }
          }
          else if (v6 > 1918977106)
          {
            if (v6 > 1918978899)
            {
              if (v6 > 1918979392)
              {
                if (v6 == 1918979393) {
                  goto LABEL_446;
                }
                if (v6 != 1918979428)
                {
                  if (v6 != 1918979445 || v3) {
                    goto LABEL_447;
                  }
                  uint64_t v21 = a1;
                  int v22 = 1296257652;
                  goto LABEL_440;
                }
              }
              else if (v6 != 1918978900)
              {
                if (v6 == 1918979139) {
                  goto LABEL_446;
                }
                int v31 = 1918979142;
                goto LABEL_406;
              }
              goto LABEL_445;
            }
            if (v6 > 1918977585)
            {
              if ((v6 - 1918978353) >= 2 && v6 != 1918977586)
              {
                unsigned __int16 v20 = 18028;
                goto LABEL_443;
              }
              goto LABEL_445;
            }
            if (v6 == 1918977107) {
              goto LABEL_446;
            }
            if (v6 != 1918977125)
            {
              if (v6 != 1918977345 || v3) {
                goto LABEL_447;
              }
              uint64_t v21 = a1;
              int v22 = 1464877357;
              goto LABEL_440;
            }
            if (!v3)
            {
              uint64_t v21 = a1;
              unsigned __int16 v37 = 25668;
              goto LABEL_421;
            }
          }
          else
          {
            if (v6 <= 1918972226)
            {
              if (v6 <= 1886213216)
              {
                if ((v6 - 1886212169) <= 0xA && ((1 << (v6 - 73)) & 0x601) != 0 || v6 == 1885688654) {
                  goto LABEL_446;
                }
                unsigned __int16 v17 = 21838;
                goto LABEL_405;
              }
              if (v6 > 1886547537)
              {
                if (v6 != 1886547538)
                {
                  if (v6 != 1918128974 || v3) {
                    goto LABEL_447;
                  }
                  uint64_t v21 = a1;
                  int v22 = 1414745645;
                  goto LABEL_440;
                }
              }
              else
              {
                if (v6 == 1886213217)
                {
                  uint64_t v40 = a1;
                  int v41 = 1181898604;
                  goto LABEL_428;
                }
                if (v6 != 1886547529) {
                  goto LABEL_447;
                }
              }
              uint64_t v21 = a1;
              int v22 = 1431519789;
              goto LABEL_440;
            }
            if (v6 <= 1918976817)
            {
              if (v6 != 1918972227 && v6 != 1918976355)
              {
                unsigned __int16 v20 = 16757;
                goto LABEL_443;
              }
              goto LABEL_445;
            }
            if ((v6 - 1918976833) > 0x31) {
              goto LABEL_442;
            }
            if (((1 << (v6 - 65)) & 0x2098000000000) != 0) {
              goto LABEL_445;
            }
            if (v6 != 1918976833)
            {
LABEL_442:
              unsigned __int16 v20 = 17202;
              goto LABEL_443;
            }
            if (!v3)
            {
              uint64_t v21 = a1;
              int v22 = 1094936659;
              goto LABEL_440;
            }
          }
        }
        else if (v6 > 1684558667)
        {
          if (v6 > 1836007759)
          {
            if (v6 <= 1851868525)
            {
              if (v6 <= 1836011587)
              {
                if (v6 <= 1836008531)
                {
                  if (v6 == 1836007760 || v6 == 1836008259)
                  {
LABEL_379:
                    if (v49) {
                      goto LABEL_447;
                    }
                    goto LABEL_446;
                  }
                  unsigned __int16 v25 = 17225;
                }
                else if (v6 > 1836010821)
                {
                  if (v6 == 1836010822) {
                    goto LABEL_379;
                  }
                  unsigned __int16 v25 = 19792;
                }
                else
                {
                  if (v6 == 1836008532) {
                    goto LABEL_379;
                  }
                  unsigned __int16 v25 = 18756;
                }
                goto LABEL_378;
              }
              if (v6 <= 1836013170)
              {
                if ((v6 - 1836011588) <= 0x13 && ((1 << (v6 - 68)) & 0x80401) != 0) {
                  goto LABEL_379;
                }
                unsigned __int16 v25 = 21838;
                goto LABEL_378;
              }
              if (v6 > 1851867461)
              {
                if (v6 == 1851867462)
                {
                  uint64_t v21 = a1;
                  int v22 = 1312902988;
                  goto LABEL_440;
                }
                unsigned __int16 v36 = 16999;
                goto LABEL_386;
              }
              if (v6 == 1836013171) {
                goto LABEL_379;
              }
              if (v6 == 1849970010)
              {
                uint64_t v21 = a1;
                int v22 = 1313105224;
                goto LABEL_440;
              }
            }
            else
            {
              if (v6 > 1885621570)
              {
                if (v6 > 1885684046)
                {
                  if (v6 > 1885687894)
                  {
                    if (v6 == 1885687895) {
                      goto LABEL_446;
                    }
                    unsigned __int16 v17 = 21315;
                  }
                  else
                  {
                    if (v6 == 1885684047) {
                      goto LABEL_446;
                    }
                    unsigned __int16 v17 = 18756;
                  }
                  goto LABEL_405;
                }
                if (v6 > 1885623629)
                {
                  if (v6 == 1885623630)
                  {
LABEL_371:
                    if (!v46) {
                      goto LABEL_447;
                    }
                    goto LABEL_446;
                  }
                  unsigned __int16 v17 = 16707;
LABEL_405:
                  int v31 = v17 | 0x70650000;
                  goto LABEL_406;
                }
                if (v6 == 1885621571) {
                  goto LABEL_371;
                }
                unsigned __int16 v28 = 20567;
                goto LABEL_370;
              }
              if (v6 > 1853117269)
              {
                if (v6 > 1885619819)
                {
                  if (v6 == 1885619820) {
                    goto LABEL_371;
                  }
                  unsigned __int16 v28 = 18756;
                }
                else
                {
                  if (v6 == 1853117270)
                  {
                    uint64_t v21 = a1;
                    int v22 = 1314148397;
                    goto LABEL_440;
                  }
                  unsigned __int16 v28 = 16722;
                }
LABEL_370:
                if (v6 == (v28 | 0x70640000)) {
                  goto LABEL_371;
                }
                goto LABEL_447;
              }
              if (v6 > 1851871854)
              {
                if (v6 == 1851871855) {
                  goto LABEL_446;
                }
                unsigned __int16 v36 = 21326;
LABEL_386:
                int v31 = v36 | 0x6E610000;
LABEL_406:
                if (v6 != v31) {
                  goto LABEL_447;
                }
                goto LABEL_446;
              }
              if (v6 == 1851868526) {
                goto LABEL_446;
              }
              if (v6 == 1851868780)
              {
                uint64_t v21 = a1;
                int v22 = 1313885520;
                goto LABEL_440;
              }
            }
          }
          else if (v6 > 1752641584)
          {
            if (v6 <= 1818449521)
            {
              if (v6 <= 1818315087)
              {
                if (v6 == 1752641585) {
                  goto LABEL_446;
                }
                if (v6 == 1766026340)
                {
                  uint64_t v21 = a1;
                  int v22 = 1766018116;
                  goto LABEL_440;
                }
                int v31 = 1769161027;
              }
              else if (v6 > 1818317644)
              {
                if (v6 == 1818317645) {
                  goto LABEL_446;
                }
                int v31 = 1818447190;
              }
              else
              {
                if (v6 == 1818315088) {
                  goto LABEL_446;
                }
                int v31 = 1818316097;
              }
              goto LABEL_406;
            }
            if (v6 > 1835090283)
            {
              if (v6 > 1835626066)
              {
                if (v6 == 1835626067) {
                  goto LABEL_446;
                }
                unsigned __int16 v25 = 16708;
LABEL_378:
                if (v6 == (v25 | 0x6D6F0000)) {
                  goto LABEL_379;
                }
                goto LABEL_447;
              }
              if (v6 == 1835090284) {
                goto LABEL_446;
              }
              if (v6 == 1835094130) {
                goto LABEL_224;
              }
            }
            else
            {
              if ((v6 - 1818449522) < 2 || v6 == 1818455382) {
                goto LABEL_446;
              }
              if (v6 == 1818575203)
              {
                uint64_t v21 = a1;
                int v22 = 1279607875;
                goto LABEL_440;
              }
            }
          }
          else
          {
            if (v6 > 1718842223)
            {
              if (v6 > 1735281764)
              {
                if (v6 > 1735283310)
                {
                  if (v6 == 1735283311) {
                    goto LABEL_395;
                  }
                  unsigned __int16 v26 = 21326;
                }
                else
                {
                  if (v6 == 1735281765) {
                    goto LABEL_395;
                  }
                  unsigned __int16 v26 = 19815;
                }
              }
              else if (v6 > 1735279206)
              {
                if (v6 == 1735279207) {
                  goto LABEL_395;
                }
                unsigned __int16 v26 = 17774;
              }
              else
              {
                if (v6 == 1718842224) {
                  goto LABEL_346;
                }
                unsigned __int16 v26 = 14645;
              }
              int v34 = v26 | 0x676E0000;
LABEL_394:
              if (v6 == v34)
              {
LABEL_395:
                if (!v47) {
                  goto LABEL_447;
                }
                goto LABEL_446;
              }
              goto LABEL_447;
            }
            if (v6 <= 1702519653)
            {
              if (v6 > 1684886387)
              {
                if (v6 == 1684886388)
                {
                  uint64_t v21 = a1;
                  int v22 = 1298616948;
                }
                else
                {
                  if (v6 != 1685538412 || v3) {
                    goto LABEL_447;
                  }
                  uint64_t v21 = a1;
                  int v22 = 1685540419;
                }
                goto LABEL_440;
              }
              if (v6 == 1684558668) {
                goto LABEL_446;
              }
              unsigned __int16 v18 = 21326;
LABEL_246:
              int v31 = v18 | 0x64680000;
              goto LABEL_406;
            }
            if (v6 <= 1717920115)
            {
              if (v6 == 1702519654)
              {
LABEL_220:
                uint64_t v21 = a1;
                int v22 = 1163543378;
                goto LABEL_440;
              }
              int v31 = 1717907505;
              goto LABEL_406;
            }
            if (v6 == 1717920116) {
              goto LABEL_446;
            }
            if (v6 == 1718186597)
            {
              uint64_t v21 = a1;
              int v22 = 1181898604;
              goto LABEL_440;
            }
          }
        }
        else if (v6 > 1280077418)
        {
          if (v6 <= 1633899616)
          {
            if (v6 <= 1397572214)
            {
              if (v6 <= 1349676901)
              {
                if (v6 == 1280077419) {
                  goto LABEL_446;
                }
                if (v6 == 1298223988)
                {
LABEL_346:
                  uint64_t v21 = a1;
                  int v22 = 1297314927;
                  goto LABEL_440;
                }
                int v31 = 1346918739;
                goto LABEL_406;
              }
              if (v6 <= 1381328491)
              {
                if (v6 == 1349676902)
                {
LABEL_224:
                  uint64_t v21 = a1;
                  int v22 = 1349676902;
                }
                else
                {
                  if (v6 != 1381327990) {
                    goto LABEL_447;
                  }
LABEL_411:
                  uint64_t v21 = a1;
                  int v22 = 1179996994;
                }
                goto LABEL_440;
              }
              if (v6 == 1381328492) {
                goto LABEL_411;
              }
              if (v6 == 1397572211) {
                goto LABEL_346;
              }
            }
            else
            {
              if (v6 > 1464626794)
              {
                if (v6 <= 1633116525)
                {
                  if (v6 != 1464626795 && (v6 != 1466517097 || !v3)) {
                    goto LABEL_447;
                  }
                  goto LABEL_446;
                }
                if (v6 == 1633116526) {
                  goto LABEL_383;
                }
                int v39 = 1633895790;
                goto LABEL_444;
              }
              if (v6 > 1398097520)
              {
                if (v6 == 1398097521) {
                  goto LABEL_325;
                }
                unsigned __int16 v23 = 21366;
              }
              else
              {
                if (v6 == 1397572215) {
                  goto LABEL_346;
                }
                unsigned __int16 v23 = 17774;
              }
              if (v6 == (v23 | 0x53550000))
              {
LABEL_325:
                uint64_t v21 = a1;
                int v22 = 1130911088;
                goto LABEL_440;
              }
            }
          }
          else
          {
            if (v6 <= 1683440722)
            {
              if (v6 > 1635078737)
              {
                if (v6 > 1668573548)
                {
                  if (v6 == 1668573549) {
                    goto LABEL_446;
                  }
                  int v31 = 1668703602;
                  goto LABEL_406;
                }
                if (v6 != 1635078738)
                {
                  int v29 = 1635214181;
                  goto LABEL_204;
                }
              }
              else if (v6 > 1635077711)
              {
                if (v6 != 1635077712)
                {
                  int v31 = 1635078258;
                  goto LABEL_406;
                }
              }
              else
              {
                if (v6 == 1633899617)
                {
                  uint64_t v40 = a1;
                  int v41 = 1950434124;
                  goto LABEL_428;
                }
                if (v6 != 1635077710) {
                  goto LABEL_447;
                }
              }
LABEL_383:
              uint64_t v21 = a1;
              int v22 = 1632923251;
              goto LABEL_440;
            }
            if (v6 > 1684554342)
            {
              if (v6 <= 1684556900)
              {
                if (v6 == 1684554343) {
                  goto LABEL_446;
                }
                unsigned __int16 v18 = 17774;
                goto LABEL_246;
              }
              if (v6 == 1684556901) {
                goto LABEL_446;
              }
              if (v6 == 1684557159)
              {
                uint64_t v21 = a1;
                int v22 = 1145922931;
                goto LABEL_440;
              }
            }
            else if (v6 > 1684362099)
            {
              if (v6 == 1684362100)
              {
                uint64_t v21 = a1;
                int v22 = 1165123913;
                goto LABEL_440;
              }
              if (v6 == 1684551989)
              {
                uint64_t v21 = a1;
                int v22 = 1684551989;
                goto LABEL_440;
              }
            }
            else if (v6 == 1683440723)
            {
              if (!v3)
              {
                uint64_t v21 = a1;
                int v22 = 1146569811;
                goto LABEL_440;
              }
            }
            else if (v6 == 1684099956)
            {
              uint64_t v21 = a1;
              int v22 = 1098015561;
              goto LABEL_440;
            }
          }
        }
        else
        {
          if (v6 <= 911697527)
          {
            if (v6 <= 910976630)
            {
              if (v6 <= 910382944)
              {
                if (v6 == 910380129 || v6 == 910381153) {
                  goto LABEL_446;
                }
                int v31 = 910381164;
                goto LABEL_406;
              }
              if ((v6 - 910382945) <= 0xF && ((1 << (v6 - 97)) & 0x8041) != 0) {
                goto LABEL_446;
              }
              int v16 = 910975332;
              goto LABEL_302;
            }
            if (v6 <= 911102816)
            {
              if ((v6 - 910976631) < 2)
              {
LABEL_303:
                if (!v48) {
                  goto LABEL_447;
                }
              }
              else if ((v6 - 911102769) >= 2 || !v5)
              {
                goto LABEL_447;
              }
              goto LABEL_446;
            }
            if (v6 <= 911230059)
            {
              if ((v6 - 911102817) < 2) {
                goto LABEL_446;
              }
              int v16 = 911230049;
              goto LABEL_302;
            }
            if (v6 == 911230060) {
              goto LABEL_303;
            }
            unsigned __int16 v35 = 24932;
LABEL_301:
            int v16 = v35 | 0x36570000;
            goto LABEL_302;
          }
          if (v6 <= 913532258)
          {
            if (v6 <= 912356723)
            {
              if (v6 == 911697528 || v6 == 911697783) {
                goto LABEL_303;
              }
              unsigned __int16 v35 = 29797;
              goto LABEL_301;
            }
            if (v6 <= 912684907)
            {
              if (v6 == 912356724) {
                goto LABEL_303;
              }
              int v16 = 912483943;
LABEL_302:
              if (v6 == v16) {
                goto LABEL_303;
              }
              goto LABEL_447;
            }
            if (v6 == 912684908)
            {
              uint64_t v21 = a1;
              int v22 = 1768961606;
              goto LABEL_440;
            }
            if (v6 == 913337712)
            {
              uint64_t v21 = a1;
              int v22 = 913337712;
              goto LABEL_440;
            }
          }
          else if (v6 > 1148808786)
          {
            if (v6 > 1229213292)
            {
              if (v6 == 1229213293)
              {
                uint64_t v21 = a1;
                int v22 = 1231975492;
                goto LABEL_440;
              }
              if (v6 == 1229409616)
              {
                uint64_t v21 = a1;
                int v22 = 1229409616;
                goto LABEL_440;
              }
            }
            else
            {
              if (v6 == 1148808787)
              {
                uint64_t v21 = a1;
                int v22 = 1835881796;
                goto LABEL_440;
              }
              if (v6 == 1163543366) {
                goto LABEL_220;
              }
            }
          }
          else
          {
            if (v6 <= 913601123)
            {
              if (v6 == 913532259)
              {
                uint64_t v21 = a1;
                int v22 = 913532259;
                goto LABEL_440;
              }
              int v16 = 913532535;
              goto LABEL_302;
            }
            if (v6 == 913601124)
            {
              uint64_t v21 = a1;
              int v22 = 913601124;
              goto LABEL_440;
            }
            if (v6 == 1146250611)
            {
              uint64_t v21 = a1;
              int v22 = 1146250611;
              goto LABEL_440;
            }
          }
        }
LABEL_447:
        int v44 = *((_DWORD *)i + 3);
        int v6 = v44;
        if (!v44)
        {
          unint64_t v45 = *v12 - *v10;
          if (12 * v14 <= v45)
          {
            if (12 * v14 < v45) {
              *char v12 = *v10 + 12 * v14;
            }
          }
          else
          {
            sub_22689F1EC(v10, 12 * v14 - v45);
          }
          return;
        }
      }
    }
  }
}

uint64_t sub_22687CB2C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  sub_22683C448(a2, __s);
  sub_22689F090(__p, __s);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)__p, a3, a4);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  return v7;
}

void sub_22687CBAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_22687CBC8(uint64_t a1, int a2)
{
  CFTypeRef cf = 0;
  if (sub_22687CDBC(a1, 1717920116, &cf, 2)) {
    goto LABEL_2;
  }
  if (!cf) {
    return 0;
  }
  CFTypeID v4 = CFGetTypeID(cf);
  if (v4 != CFDataGetTypeID()) {
LABEL_2:
  }
    BOOL v3 = 0;
  else {
    BOOL v3 = sub_226888924((CFDataRef)cf, a2);
  }
  if (cf) {
    CFRelease(cf);
  }
  return v3;
}

uint64_t sub_22687CC58(uint64_t a1, int a2, int a3, uint64_t a4)
{
  sub_22683C448(a2, __s);
  sub_22689F090(__p, __s);
  uint64_t v7 = (const __CFString **)MEMORY[0x263EFFB40];
  if (!a3) {
    uint64_t v7 = (const __CFString **)MEMORY[0x263EFFB38];
  }
  uint64_t v8 = sub_2268809AC(a1, (uint64_t)__p, *v7, a4);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  return v8;
}

void sub_22687CCF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22687CD0C(uint64_t a1)
{
  CFTypeRef cf = 0;
  if (*(unsigned char *)(a1 + 373)
    || sub_22687CDBC(a1, 1349676902, &cf, 2)
    || !cf
    || (CFTypeID v4 = CFGetTypeID(cf), v4 != CFDataGetTypeID())
    || (uint64_t v2 = sub_22687CE78(a1, 1349676902, (const __CFString *)cf, 0), !v2))
  {
    uint64_t v2 = sub_226879FE0(a1, 1);
  }
  if (cf) {
    CFRelease(cf);
  }
  return v2;
}

uint64_t sub_22687CDBC(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  uint64_t v8 = (pthread_mutex_t *)(a1 + 392);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 392));
  ++*(_DWORD *)(a1 + 456);
  uint64_t v9 = sub_22687D4B0(a1, a2, a3, a4);
  uint64_t v10 = v9;
  if (a3 && !v9 && *a3) {
    CFRetain(*a3);
  }
  --*(_DWORD *)(a1 + 456);
  pthread_mutex_unlock(v8);
  return v10;
}

void sub_22687CE54(_Unwind_Exception *a1)
{
  --*(_DWORD *)(v2 + 456);
  pthread_mutex_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_22687CE78(uint64_t a1, uint64_t a2, const __CFString *a3, uint64_t a4)
{
  CFTypeRef cf = 0;
  if (!a3) {
    return 4294967292;
  }
  CFStringRef v5 = a3;
  int v8 = sub_2268824B8(a1, a2);
  if (!v8)
  {
    CFTypeRef cf = v5;
    goto LABEL_7;
  }
  unsigned int v9 = sub_22688256C(a1, a2, (CFDataRef)v5, &cf);
  if (!v9)
  {
    CFStringRef v5 = (const __CFString *)cf;
LABEL_7:
    unsigned int v9 = sub_22687AF44(a1, a2, v5, a4);
    if (cf) {
      int v11 = v8;
    }
    else {
      int v11 = 0;
    }
    if (v11 == 1) {
      CFRelease(cf);
    }
  }
  if (v9 == -19) {
    return 0;
  }
  else {
    return v9;
  }
}

uint64_t sub_22687CF38(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  CFDictionaryRef theDict = 0;
  sub_226879F0C(a1);
  uint64_t v2 = sub_22687D29C(a1);
  if (v2) {
    return v2;
  }
  time_t v16 = 0;
  if (sub_22687CBC8(a1, 1381253996))
  {
    theString[0] = 0;
    uint64_t v2 = sub_22687CDBC(a1, 1953066362, (CFTypeRef *)&theDict, 0);
    if (v2) {
      goto LABEL_34;
    }
    if (!theDict) {
      return 4294960569;
    }
    CFStringRef Value = (const __CFString *)CFDictionaryGetValue(theDict, @"zoneName");
    CFStringRef v4 = Value;
    if (!Value
      || !CFStringGetLength(Value)
      || !sub_2268C7080(v4, (__CFString **)theString)
      || !theString[0]
      || !CFStringGetLength(theString[0]))
    {
      if (CFDictionaryGetCount(theDict))
      {
        if (!sub_2268C6FF4((const __CFString *)theDict, v5, v6)) {
          goto LABEL_19;
        }
        theString[0] = v4;
        if (!v4) {
          goto LABEL_19;
        }
        CFIndex Length = CFStringGetLength(v4);
      }
      else
      {
        int v8 = sub_2268C6E98(0, v5, v6);
        theString[0] = v8;
        if (!v8) {
          goto LABEL_19;
        }
        CFIndex Length = CFStringGetLength(v8);
      }
      if (!Length) {
        goto LABEL_19;
      }
    }
    uint64_t v2 = sub_22687AF44(a1, 1651725402, theString[0], 0);
    if (v2) {
      goto LABEL_34;
    }
  }
LABEL_19:
  if (!sub_22687CBC8(a1, 1349676902) || (uint64_t v2 = sub_22687D39C(a1), !v2))
  {
    if (sub_22687CBC8(a1, 1920159858))
    {
      theString[0] = 0;
      CFMutableDictionaryRef v13 = 0;
      pthread_mutex_lock((pthread_mutex_t *)(a1 + 392));
      ++*(_DWORD *)(a1 + 456);
      uint64_t v2 = sub_22687D4B0((CFDictionaryRef *)a1, 1349676902, &v13, 0);
      if (v2 || (uint64_t v2 = sub_22687D724(a1, (uint64_t)"restoreProfile", (__CFArray **)theString), v2))
      {
        --*(_DWORD *)(a1 + 456);
        pthread_mutex_unlock((pthread_mutex_t *)(a1 + 392));
        goto LABEL_34;
      }
      CFDictionarySetValue(v13, @"restoreProfile", theString[0]);
      CFRelease(theString[0]);
      --*(_DWORD *)(a1 + 456);
      pthread_mutex_unlock((pthread_mutex_t *)(a1 + 392));
    }
    sub_22687D940(a1);
    time_t v16 = time(0);
    unsigned int v9 = gmtime(&v16);
    if (!v9
      || v9->tm_year < 106
      || (gettimeofday(&v15, 0), uint64_t v2 = sub_22687D9A0(a1, 1953066341, v15.tv_sec, 0), !v2))
    {
      uint64_t v2 = sub_226901198(__s, 0x10u);
      if (!v2)
      {
        sub_22689F090(theString, __s);
        uint64_t v2 = sub_22687DA3C(a1, 1818449523, (uint64_t)theString, 0);
        if (v12 < 0) {
          operator delete((void *)theString[0]);
        }
        if (!v2) {
          uint64_t v2 = sub_22687D9A0(a1, 1818449522, 0x2000000, 0);
        }
      }
    }
  }
LABEL_34:
  if (theDict) {
    CFRelease(theDict);
  }
  return v2;
}

void sub_22687D24C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22687D29C(uint64_t a1)
{
  uint64_t result = sub_22687CBC8(a1, 1396995415);
  if (result)
  {
    BOOL v8 = 0;
    uint64_t result = sub_2268883A8(a1, 1918979649, &v8, 0);
    if (!result && !v8)
    {
      int v7 = 0;
      uint64_t result = sub_22687AB24(a1, 2002867012, &v7, 0);
      if (!result)
      {
        if ((v7 & 0xF) != 0)
        {
          if (dword_268146940 <= 5000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1388u))) {
            sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::FixUpSettingsAfterConfig()", 5000, (uint64_t)"%s: WAN was not Auto in bridge mode, so setting to Auto\n", v3, v4, v5, v6, (uint64_t)"ACPStatus BaseStation::FixUpSettingsAfterConfig()");
          }
          return sub_22687D9A0(a1, 2002867012, 0, 0);
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_22687D39C(uint64_t a1)
{
  unsigned int v9 = 0;
  value = 0;
  CFTypeRef cf = 0;
  uint64_t v2 = sub_22688C090(a1, &cf);
  if (!v2)
  {
    if (!cf) {
      return 4294960551;
    }
    CFArrayRef v3 = (const __CFArray *)CFDictionaryGetValue((CFDictionaryRef)cf, @"profiles");
    if (v3
      && (uint64_t v4 = v3,
          CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(v3, *(int *)(a1 + 368)),
          (value = ValueAtIndex) != 0))
    {
      CFStringRef v6 = (const __CFString *)CFDictionaryGetValue(ValueAtIndex, @"name");
      if (v6)
      {
        uint64_t v2 = sub_226861A84(v6, (char **)&v9);
        if (!v2)
        {
          uint64_t v2 = sub_22687D724(a1, (uint64_t)v9, (__CFArray **)&value);
          free(v9);
          if (!v2)
          {
            CFArraySetValueAtIndex(v4, *(int *)(a1 + 368), value);
            CFRelease(value);
            uint64_t v2 = sub_22687AF44(a1, 1349676902, (const __CFString *)cf, 0);
          }
        }
      }
      else
      {
        uint64_t v2 = 4294960569;
      }
    }
    else
    {
      uint64_t v2 = 4294960551;
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  return v2;
}

uint64_t sub_22687D4B0(CFDictionaryRef *a1, uint64_t a2, CFNumberRef *a3, uint64_t a4)
{
  if (!a3) {
    return 4294960591;
  }
  *a3 = 0;
  sub_22683C448(a2, cStr);
  if (sub_22687EF64((uint64_t)a1, a2))
  {
    sub_22689F090(__p, cStr);
    uint64_t v8 = sub_226885F84((uint64_t)a1, (uint64_t)__p, (uint64_t)a3, a4);
    uint64_t v9 = v8;
    if (v29 < 0)
    {
      operator delete(__p[0]);
      if (v9) {
        return v9;
      }
    }
    else if (v8)
    {
      return v9;
    }
    CFStringRef v11 = 0;
    goto LABEL_22;
  }
  CFStringRef v10 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], cStr, 0x8000100u);
  if (!v10) {
    return 4294960568;
  }
  CFStringRef v11 = v10;
  CFDictionaryRef v12 = a1[5];
  if (!v12 || !a1[4])
  {
    uint64_t v9 = 0;
    goto LABEL_35;
  }
  if (a4 <= 1)
  {
    if (CFDictionaryContainsKey(v12, v11))
    {
      CFNumberRef Value = (const __CFNumber *)CFDictionaryGetValue(a1[5], v11);
      *a3 = Value;
      if (!Value)
      {
LABEL_17:
        uint64_t v9 = 0xFFFFFFFFLL;
LABEL_35:
        CFRelease(v11);
        return v9;
      }
    }
  }
  CFNumberRef v14 = *a3;
  if ((a4 & 0xFFFFFFFD) != 0 || v14) {
    goto LABEL_23;
  }
  if (CFDictionaryContainsKey(a1[4], v11))
  {
    CFNumberRef v15 = (const __CFNumber *)CFDictionaryGetValue(a1[4], v11);
    *a3 = v15;
    if (v15) {
      goto LABEL_24;
    }
    goto LABEL_17;
  }
LABEL_22:
  CFNumberRef v14 = *a3;
LABEL_23:
  if (v14) {
    goto LABEL_24;
  }
  if ((a4 & 0xFFFFFFFD) != 0)
  {
    uint64_t v9 = 4294967291;
    goto LABEL_34;
  }
  __p[0] = 0;
  uint64_t v16 = sub_22687DCD0((uint64_t)a1, a2, (CFMutableDictionaryRef *)__p);
  if (v16) {
    goto LABEL_33;
  }
  *a3 = (CFNumberRef)__p[0];
  uint64_t v9 = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], a1[6], (uint64_t)"%kC=%O", v22, v23, v24, v25, v26, a2);
  if (__p[0]) {
    CFRelease(__p[0]);
  }
  if (!v9)
  {
LABEL_24:
    if (a2 != 2002862934)
    {
      uint64_t v9 = 0;
      goto LABEL_34;
    }
    __p[0] = 0;
    uint64_t v16 = sub_2268A0150(*a3, 4095, (CFNumberRef *)__p);
    if (!v16)
    {
      if (__p[0])
      {
        *a3 = (CFNumberRef)__p[0];
        uint64_t v9 = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], a1[6], (uint64_t)"%kC=%O", v17, v18, v19, v20, v21, 2002862934);
        if (__p[0]) {
          CFRelease(__p[0]);
        }
      }
      else
      {
        uint64_t v9 = 4294960568;
      }
      goto LABEL_34;
    }
LABEL_33:
    uint64_t v9 = v16;
  }
LABEL_34:
  if (v11) {
    goto LABEL_35;
  }
  return v9;
}

void sub_22687D708(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22687D724(uint64_t a1, uint64_t a2, __CFArray **a3)
{
  uint64_t v3 = 4294960591;
  if (a2 && a3)
  {
    CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableDataRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (Mutable)
    {
      uint64_t v9 = *(unsigned int **)(a1 + 200);
      uint64_t v8 = *(unsigned int **)(a1 + 208);
      if (v8 == v9)
      {
        sub_22687B1F8(a1, 0);
        uint64_t v9 = *(unsigned int **)(a1 + 200);
        uint64_t v8 = *(unsigned int **)(a1 + 208);
      }
      unint64_t v10 = (char *)v8 - (char *)v9;
      if (v10 >= 0xC)
      {
        unint64_t v11 = v10 / 0xC;
        if (v11 <= 1) {
          uint64_t v12 = 1;
        }
        else {
          uint64_t v12 = v11;
        }
        while (1)
        {
          char v21 = 0;
          CFTypeRef cf = 0;
          unsigned int v14 = *v9;
          v9 += 3;
          uint64_t v13 = v14;
          if (sub_22683C528(v14) && !sub_2268836AC(a1, v13, (CFStringRef *)&cf, &v21))
          {
            uint64_t v3 = sub_226860774(v6, Mutable, (uint64_t)"%kC=%O", v15, v16, v17, v18, v19, v13);
            if (v21 && cf) {
              CFRelease(cf);
            }
            if (v3) {
              break;
            }
          }
          if (!--v12)
          {
            uint64_t v3 = sub_226860774(v6, Mutable, (uint64_t)"%kO=%s", v15, v16, v17, v18, v19, @"name");
            if (v3) {
              break;
            }
            *a3 = Mutable;
            return v3;
          }
        }
      }
      else
      {
        uint64_t v3 = 4294960551;
      }
      CFRelease(Mutable);
    }
    else
    {
      return 4294960568;
    }
  }
  return v3;
}

#error "22687D918: call analysis failed (funcsize=24)"

void sub_22687D92C(_Unwind_Exception *a1)
{
}

uint64_t sub_22687D940(uint64_t a1)
{
  int v4 = 0;
  if (sub_226871064(0, &v4))
  {
    int v2 = -1;
    int v4 = -1;
  }
  else
  {
    int v2 = v4;
  }
  return sub_22687D9A0(a1, 1668573549, v2, 0);
}

uint64_t sub_22687D9A0(uint64_t a1, int a2, int a3, uint64_t a4)
{
  sub_22683C448(a2, __s);
  sub_22689F090(__p, __s);
  uint64_t v7 = sub_2268814C8(a1, (uint64_t)__p, a3, a4);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  return v7;
}

void sub_22687DA20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22687DA3C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  sub_22683C448(a2, __s);
  sub_22689F090(__p, __s);
  uint64_t v7 = sub_226888444(a1, (uint64_t)__p, a3, a4);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  return v7;
}

void sub_22687DABC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_22687DAD8(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, std::string *a8@<X8>)
{
  a8->__r_.__value_.__r.__words[0] = 0;
  a8->__r_.__value_.__l.__size_ = 0;
  a8->__r_.__value_.__r.__words[2] = 0;
  if (*(char *)(a1 + 287) < 0)
  {
    if (*(void *)(a1 + 272)) {
      goto LABEL_3;
    }
  }
  else if (*(unsigned char *)(a1 + 287))
  {
LABEL_3:
    std::string::operator=(a8, (const std::string *)(a1 + 264));
    return;
  }
  CFStringRef v11 = 0;
  sub_22685B2E8(*(const __CFString **)(a1 + 336), a2, &v11, a3, a4, a5, a6, a7);
  if (!v9)
  {
    if (v11)
    {
      char v10 = 0;
      if (!sub_226861A84(v11, (char **)&v10))
      {
        if (v10)
        {
          MEMORY[0x22A65ABB0](a8);
          if (v10) {
            free(v10);
          }
        }
      }
    }
  }
}

void sub_22687DB7C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22687DB9C(uint64_t a1)
{
  CFTypeRef cf = 0;
  uint64_t v1 = (void *)qword_268148390;
  if (!qword_268148390) {
    return 4294960578;
  }
  uint64_t v2 = a1;
  if (!*(void *)(qword_268148390 + 16))
  {
    a1 = (uint64_t)sub_2268C5F90();
    uint64_t v1 = (void *)qword_268148390;
  }
  uint64_t v3 = (void *)*v1;
  if ((void *)*v1 == v1 + 1) {
    return 0;
  }
  while (1)
  {
    uint64_t v4 = v3[5];
    uint64_t v5 = *(unsigned int *)(v4 + 4);
    a1 = sub_226882198(a1, *(_DWORD *)(v4 + 4));
    if ((a1 & 1) == 0)
    {
      BOOL v6 = !v5 || v5 == 913532535;
      if (!v6)
      {
        a1 = sub_22687DCD0(v2, v5, (CFMutableDictionaryRef *)&cf);
        CFTypeRef v7 = cf;
        if (a1) {
          goto LABEL_23;
        }
        if (cf) {
          break;
        }
      }
    }
LABEL_14:
    uint64_t v8 = (void *)v3[1];
    if (v8)
    {
      do
      {
        int v9 = v8;
        uint64_t v8 = (void *)*v8;
      }
      while (v8);
    }
    else
    {
      do
      {
        int v9 = (void *)v3[2];
        BOOL v6 = *v9 == (void)v3;
        uint64_t v3 = v9;
      }
      while (!v6);
    }
    uint64_t v3 = v9;
    if (v9 == (void *)(qword_268148390 + 8)) {
      return 0;
    }
  }
  a1 = sub_22687CE78(v2, v5, (const __CFString *)cf, 2);
  CFTypeRef v7 = cf;
  if (!a1)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
    goto LABEL_14;
  }
LABEL_23:
  uint64_t v10 = a1;
  if (v7) {
    CFRelease(v7);
  }
  return v10;
}

uint64_t sub_22687DCD0(uint64_t a1, int a2, CFMutableDictionaryRef *a3)
{
  uint64_t v5 = sub_22683C448(a2, v9);
  sub_22689F090(&__p, v5);
  uint64_t v6 = sub_22687DD5C(a1, &__p, a3);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v6;
}

void sub_22687DD40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22687DD5C(uint64_t a1, std::string *__str, CFMutableDictionaryRef *a3)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  int v26 = 0;
  memset(&__p, 0, sizeof(__p));
  sub_22687EA70(__str, (unsigned int *)&v26, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
    if (__p.__r_.__value_.__l.__size_ != 4 || *(_DWORD *)__p.__r_.__value_.__l.__data_ != 1917018482)
    {
      if (__p.__r_.__value_.__l.__size_ == 7)
      {
        if (*(_DWORD *)__p.__r_.__value_.__l.__data_ == 1650552389
          && *(_DWORD *)(__p.__r_.__value_.__r.__words[0] + 3) == 1684368482)
        {
          goto LABEL_36;
        }
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      if (size == 4)
      {
        if (*(_DWORD *)__p.__r_.__value_.__l.__data_ == 1096045424) {
          goto LABEL_36;
        }
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      if (size != 9)
      {
        if (v26 != 2003061875) {
          goto LABEL_47;
        }
LABEL_46:
        CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
LABEL_65:
        uint64_t v14 = 0;
        *a3 = Mutable;
        goto LABEL_66;
      }
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      goto LABEL_19;
    }
    goto LABEL_31;
  }
  if (HIBYTE(__p.__r_.__value_.__r.__words[2]) == 4)
  {
    if (LODWORD(__p.__r_.__value_.__l.__data_) != 1917018482)
    {
      if (LODWORD(__p.__r_.__value_.__l.__data_) != 1096045424) {
        goto LABEL_39;
      }
LABEL_36:
      uint64_t v14 = 0;
      uint64_t v15 = (__CFString **)MEMORY[0x263EFFB38];
LABEL_37:
      uint64_t v16 = *v15;
LABEL_38:
      *a3 = (CFMutableDictionaryRef)v16;
      goto LABEL_66;
    }
LABEL_31:
    CFStringRef v13 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], "", 0x8000100u);
    *a3 = (CFMutableDictionaryRef)v13;
    if (v13) {
LABEL_32:
    }
      uint64_t v14 = 0;
    else {
      uint64_t v14 = 4294960568;
    }
    goto LABEL_66;
  }
  if (HIBYTE(__p.__r_.__value_.__r.__words[2]) == 7)
  {
    if (LODWORD(__p.__r_.__value_.__l.__data_) != 1650552389
      || *(_DWORD *)((char *)__p.__r_.__value_.__r.__words + 3) != 1684368482)
    {
      BOOL v11 = 0;
      goto LABEL_40;
    }
    goto LABEL_36;
  }
  if (HIBYTE(__p.__r_.__value_.__r.__words[2]) != 9)
  {
LABEL_39:
    BOOL v11 = 0;
    goto LABEL_40;
  }
  p_p = &__p;
LABEL_19:
  std::string::size_type v8 = p_p->__r_.__value_.__r.__words[0];
  int v9 = p_p->__r_.__value_.__s.__data_[8];
  BOOL v11 = v8 == 0x647779636167656CLL && v9 == 115;
LABEL_40:
  if (v11 || v26 == 2003061875) {
    goto LABEL_46;
  }
  if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) == 0)
  {
    if (HIBYTE(__p.__r_.__value_.__r.__words[2]) != 4) {
      goto LABEL_53;
    }
    if (LODWORD(__p.__r_.__value_.__l.__data_) == 1297572210)
    {
LABEL_114:
      LODWORD(valuePtr[0]) = 0;
      CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
      goto LABEL_65;
    }
    goto LABEL_51;
  }
LABEL_47:
  if (__p.__r_.__value_.__l.__size_ != 4) {
    goto LABEL_53;
  }
  uint64_t v18 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if (*(_DWORD *)__p.__r_.__value_.__l.__data_ == 1297572210) {
    goto LABEL_114;
  }
  if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
    goto LABEL_52;
  }
  if (HIBYTE(__p.__r_.__value_.__r.__words[2]) != 4) {
    goto LABEL_53;
  }
LABEL_51:
  uint64_t v18 = &__p;
LABEL_52:
  if (LODWORD(v18->__r_.__value_.__l.__data_) == 1414226290) {
    goto LABEL_126;
  }
LABEL_53:
  if (sub_22687EBF4(&__p, "raCh") || sub_22687EBF4(&__p, "raDe")) {
    goto LABEL_98;
  }
  if (sub_22687EBF4(&__p, "raMu"))
  {
    LODWORD(valuePtr[0]) = 2;
    CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
    goto LABEL_65;
  }
  if (sub_22687EBF4(&__p, "raMd"))
  {
LABEL_62:
    LOWORD(valuePtr[0]) = 1;
    CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt16Type, valuePtr);
    goto LABEL_65;
  }
  if (sub_22687EBF4(&__p, "raPo"))
  {
LABEL_64:
    LOWORD(valuePtr[0]) = 100;
    CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt16Type, valuePtr);
    goto LABEL_65;
  }
  if (v26 > 1835090283)
  {
    if (v26 > 1885688642)
    {
      if (v26 <= 1918980215)
      {
        if (v26 <= 1918979138)
        {
          if (v26 == 1885688643) {
            goto LABEL_133;
          }
          unsigned __int16 v20 = 17491;
        }
        else
        {
          if (v26 == 1918979139)
          {
            LOWORD(valuePtr[0]) = 0x3FFF;
            CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt16Type, valuePtr);
            goto LABEL_65;
          }
          if (v26 == 1918979142)
          {
            LODWORD(valuePtr[0]) = 260047018;
            CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
            goto LABEL_65;
          }
          unsigned __int16 v20 = 20033;
        }
        int v21 = v20 | 0x72610000;
        goto LABEL_132;
      }
      if (v26 > 1937326415)
      {
        switch(v26)
        {
          case 2002864494:
            LODWORD(valuePtr[0]) = 16;
            CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
            goto LABEL_65;
          case 2002862934:
            LODWORD(valuePtr[0]) = 1024;
            CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
            goto LABEL_65;
          case 1937326416:
            goto LABEL_114;
        }
        goto LABEL_159;
      }
      if (v26 == 1918980216) {
        goto LABEL_64;
      }
      if (v26 != 1936488044) {
        goto LABEL_159;
      }
LABEL_111:
      LODWORD(valuePtr[0]) = 5;
      CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
      goto LABEL_65;
    }
    if (v26 <= 1836010831)
    {
      if (v26 <= 1836008258)
      {
        if (v26 == 1835090284)
        {
          LODWORD(valuePtr[0]) = 500;
          CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
          goto LABEL_65;
        }
        if (v26 != 1835094130) {
          goto LABEL_159;
        }
        goto LABEL_111;
      }
      if (v26 == 1836008259)
      {
        LODWORD(valuePtr[0]) = 22;
        CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
        goto LABEL_65;
      }
      if (v26 != 1836009796) {
        goto LABEL_159;
      }
    }
    else
    {
      if (v26 <= 1885620547)
      {
        if (v26 == 1836010832) {
          goto LABEL_98;
        }
        if (v26 == 1885618514)
        {
          LODWORD(valuePtr[0]) = 3;
          CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
          goto LABEL_65;
        }
        goto LABEL_159;
      }
      if (v26 != 1885620548)
      {
        if (v26 == 1885621571) {
          goto LABEL_114;
        }
        int v21 = 1885684035;
LABEL_132:
        if (v26 != v21) {
          goto LABEL_159;
        }
        goto LABEL_133;
      }
    }
    LODWORD(valuePtr[0]) = 600;
    CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
    goto LABEL_65;
  }
  if (v26 <= 1464626794)
  {
    if (v26 > 913532534)
    {
      if (v26 > 1280077418)
      {
        switch(v26)
        {
          case 1280077419:
            goto LABEL_114;
          case 1381328492:
            goto LABEL_98;
          case 1398097521:
            LODWORD(valuePtr[0]) = 604800;
            CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
            goto LABEL_65;
        }
        goto LABEL_159;
      }
      if (v26 == 913532535)
      {
        BOOL v22 = sub_22687CBC8(a1, 912681828);
        uint64_t v14 = 0;
        uint64_t v15 = (__CFString **)MEMORY[0x263EFFB40];
        if (!v22) {
          uint64_t v15 = (__CFString **)MEMORY[0x263EFFB38];
        }
        goto LABEL_37;
      }
      if (v26 != 913601124) {
        goto LABEL_159;
      }
      goto LABEL_36;
    }
    if (v26 <= 913337711)
    {
      if (!v26)
      {
        uint64_t v14 = 4294967291;
        goto LABEL_66;
      }
      if (v26 == 912483943) {
        goto LABEL_114;
      }
      goto LABEL_159;
    }
    if (v26 != 913337712)
    {
      int v21 = 913532259;
      goto LABEL_132;
    }
LABEL_133:
    uint64_t v14 = 0;
    uint64_t v15 = (__CFString **)MEMORY[0x263EFFB40];
    goto LABEL_37;
  }
  if (v26 <= 1735279981)
  {
    if (v26 <= 1635078737)
    {
      if (v26 == 1464626795)
      {
        LODWORD(valuePtr[0]) = 4;
        CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
        goto LABEL_65;
      }
      if (v26 == 1635076676) {
        goto LABEL_114;
      }
    }
    else
    {
      switch(v26)
      {
        case 1635078738:
          goto LABEL_62;
        case 1684556901:
          LODWORD(valuePtr[0]) = 86400;
          CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
          goto LABEL_65;
        case 1735279207:
          uint64_t v14 = 0;
          uint64_t v16 = @"172.16.42.2";
          goto LABEL_38;
      }
    }
    goto LABEL_159;
  }
  if (v26 <= 1735283310)
  {
    if (v26 == 1735279982)
    {
      uint64_t v14 = 0;
      uint64_t v16 = @"172.16.42.200";
      goto LABEL_38;
    }
    if (v26 != 1735281765) {
      goto LABEL_159;
    }
LABEL_126:
    LODWORD(valuePtr[0]) = 3600;
    CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
    goto LABEL_65;
  }
  switch(v26)
  {
    case 1735283311:
      uint64_t v14 = 0;
      uint64_t v16 = @"172.16.42.1";
      goto LABEL_38;
    case 1735283534:
      uint64_t v14 = 0;
      uint64_t v16 = @"255.255.255.0";
      goto LABEL_38;
    case 1818575203:
LABEL_98:
      LODWORD(valuePtr[0]) = 1;
      CFMutableArrayRef Mutable = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, valuePtr);
      goto LABEL_65;
  }
LABEL_159:
  *(void *)&valuePtr[0] = 0;
  uint64_t v23 = sub_22683C258(v26, (uint64_t **)valuePtr);
  uint64_t v14 = v23;
  if (!v23)
  {
    unint64_t v24 = 0;
    switch(*(_DWORD *)(*(void *)&valuePtr[0] + 4))
    {
      case 3:
      case 6:
        unint64_t v24 = 1;
        break;
      case 4:
        unint64_t v24 = 2;
        break;
      case 5:
        unint64_t v24 = 4;
        break;
      case 7:
      case 8:
      case 0xC:
        goto LABEL_31;
      case 0xD:
        sub_22687EC88(v23, v26, a3);
        goto LABEL_32;
      default:
        break;
    }
    memset(valuePtr, 0, sizeof(valuePtr));
    uint64_t v14 = sub_22683F308(v26, (unsigned __int8 *)valuePtr, v24, 1, (CFStringRef *)a3);
  }
LABEL_66:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v14;
}

void sub_22687E9A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_22687EA70(std::string *__str, unsigned int *a2, std::string *a3)
{
  memset(&v22, 0, sizeof(v22));
  int v6 = SHIBYTE(__str->__r_.__value_.__r.__words[2]);
  BOOL v7 = v6 < 0;
  if (v6 >= 0) {
    std::string::size_type v8 = __str;
  }
  else {
    std::string::size_type v8 = (std::string *)__str->__r_.__value_.__r.__words[0];
  }
  if (v7) {
    std::string::size_type size = __str->__r_.__value_.__l.__size_;
  }
  else {
    std::string::size_type size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  }
  uint64_t v10 = (unsigned __int8 *)v8 + size;
  if (size)
  {
    BOOL v11 = v8;
    uint64_t v12 = (std::string *)((char *)v8 + size);
    do
    {
      CFStringRef v13 = v11;
      uint64_t v14 = (unsigned __int8 *)v11;
      while (1)
      {
        int v15 = *v14++;
        if (v15 == 46) {
          break;
        }
        CFStringRef v13 = (std::string *)v14;
        if (v14 == v10)
        {
          CFStringRef v13 = v12;
          goto LABEL_16;
        }
      }
      BOOL v11 = (std::string *)((char *)&v13->__r_.__value_.__l.__data_ + 1);
      uint64_t v12 = v13;
    }
    while (v14 != v10);
  }
  else
  {
    CFStringRef v13 = v8;
  }
LABEL_16:
  int64_t v16 = (char *)v13 - (char *)v8;
  if (v13 == (std::string *)v10) {
    std::string::size_type v17 = 0;
  }
  else {
    std::string::size_type v17 = v16 + 1;
  }
  std::string::basic_string(&__stra, __str, v17, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v23);
  std::string::operator=(&v22, &__stra);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string::size_type v18 = HIBYTE(v22.__r_.__value_.__r.__words[2]);
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v18 = v22.__r_.__value_.__l.__size_;
  }
  if (v18 == 4)
  {
    if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v19 = __str;
    }
    else {
      uint64_t v19 = (std::string *)__str->__r_.__value_.__r.__words[0];
    }
    unsigned int v20 = sub_22688BA8C((const char *)v19);
    if (a2) {
      goto LABEL_28;
    }
  }
  else
  {
    unsigned int v20 = 0;
    if (a2) {
LABEL_28:
    }
      *a2 = v20;
  }
  if (a3) {
    std::string::operator=(a3, &v22);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
}

void sub_22687EBBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_22687EBF4(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (*((char *)a1 + 23) < 0)
  {
    if (v4 == a1[1])
    {
      if (v4 == -1) {
        goto LABEL_10;
      }
      a1 = (void *)*a1;
      return memcmp(a1, __s, v4) == 0;
    }
  }
  else if (v4 == *((unsigned __int8 *)a1 + 23))
  {
    if (v4 == -1) {
LABEL_10:
    }
      sub_22689F144();
    return memcmp(a1, __s, v4) == 0;
  }
  return 0;
}

uint64_t sub_22687EC88(uint64_t a1, int a2, CFMutableDictionaryRef *a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  if (a2 != 1298223988)
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    *a3 = Mutable;
    if (!Mutable) {
      return 4294960568;
    }
    CFMutableArrayRef v9 = CFArrayCreateMutable(v5, 0, MEMORY[0x263EFFF70]);
    if (!v9) {
      return 4294960568;
    }
    uint64_t v10 = v9;
    uint64_t v7 = 0;
    if (a2 <= 1718186596)
    {
      if (a2 > 1466517096)
      {
        if (a2 != 1466517097)
        {
          if (a2 == 1684558668)
          {
            uint64_t v12 = *a3;
            CFStringRef v13 = @"leases";
            goto LABEL_31;
          }
          goto LABEL_34;
        }
        CFDictionarySetValue(*a3, @"radios", v9);
        uint64_t v19 = sub_226860774(v5, v10, (uint64_t)"{}", v25, v26, v27, v28, v29, v31);
        goto LABEL_33;
      }
      if (a2 != 912684908)
      {
        if (a2 == 1146250611)
        {
          uint64_t v12 = *a3;
          CFStringRef v13 = @"dhcpReservations";
LABEL_31:
          CFDictionarySetValue(v12, v13, v10);
          uint64_t v7 = 0;
        }
LABEL_34:
        CFRelease(v10);
        return v7;
      }
    }
    else
    {
      if (a2 > 1937328486)
      {
        if (a2 == 1937328487)
        {
          uint64_t v12 = *a3;
          CFStringRef v13 = @"problems";
          goto LABEL_31;
        }
        if (a2 != 1950434124)
        {
          int v11 = 1970500196;
          goto LABEL_21;
        }
        CFDictionarySetValue(*a3, @"entries", v9);
        unsigned __int16 v32 = 0;
        uint64_t v19 = sub_226860774(v5, v10, (uint64_t)"{%@}", v14, v15, v16, v17, v18, (uint64_t)&v32);
        if (!v19) {
          uint64_t v19 = sub_226860774(v5, v32, (uint64_t)"%kO=[%O]%kO=%O%kO=%i%kO=%O", v20, v21, v22, v23, v24, @"wirelessAccessTimes");
        }
LABEL_33:
        uint64_t v7 = v19;
        goto LABEL_34;
      }
      if (a2 != 1718186597)
      {
        int v11 = 1766026340;
LABEL_21:
        if (a2 == v11)
        {
          uint64_t v12 = *a3;
          CFStringRef v13 = @"users";
          goto LABEL_31;
        }
        goto LABEL_34;
      }
      CFDictionarySetValue(*a3, @"firewallEnabled", (const void *)*MEMORY[0x263EFFB38]);
    }
    uint64_t v12 = *a3;
    CFStringRef v13 = @"entries";
    goto LABEL_31;
  }
  CFMutableArrayRef v6 = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = v6;
  if (v6) {
    return 0;
  }
  else {
    return 4294960568;
  }
}

BOOL sub_22687EF64(uint64_t a1, int a2)
{
  BOOL result = 0;
  if (!*(unsigned char *)(a1 + 386))
  {
    uint64_t v3 = 0;
    if (!sub_2268A5FD4(a2, &v3) && v3 && *(unsigned char *)(v3 + 25)) {
      return 1;
    }
  }
  return result;
}

BOOL sub_22687EFBC(uint64_t a1, std::string *__str)
{
  int v4 = 0;
  sub_22687EA70(__str, (unsigned int *)&v4, 0);
  return v4 && sub_22687EF64(a1, v4);
}

std::string *sub_22687F014@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  BOOL result = (std::string *)sub_22689F090(a2, "WiFi.radios.[*].");
  if (a1 != -1)
  {
    snprintf(__str, 0x10uLL, "%d", a1);
    char v5 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
    if (v5 >= 0) {
      int64_t size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
    }
    else {
      int64_t size = a2->__r_.__value_.__l.__size_;
    }
    if (v5 >= 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    std::string::size_type v8 = (char *)v7 + size;
    if (size >= 1)
    {
      CFMutableArrayRef v9 = v7;
      do
      {
        uint64_t v10 = (char *)memchr(v9, 42, size);
        if (!v10) {
          break;
        }
        if (*v10 == 42) {
          goto LABEL_14;
        }
        CFMutableArrayRef v9 = (std::string *)(v10 + 1);
        int64_t size = v8 - (char *)v9;
      }
      while (v8 - (char *)v9 > 0);
    }
    uint64_t v10 = v8;
LABEL_14:
    if (v10 == v8) {
      std::string::size_type v11 = -1;
    }
    else {
      std::string::size_type v11 = v10 - (char *)v7;
    }
    return std::string::replace(a2, v11, 1uLL, __str);
  }
  return result;
}

void sub_22687F114(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_22687F130(uint64_t *a1, char *__s, unint64_t a3)
{
  uint64_t v5 = (uint64_t)a1;
  if (*((char *)a1 + 23) < 0)
  {
    uint64_t v5 = *a1;
    unint64_t v6 = a1[1];
  }
  else
  {
    unint64_t v6 = *((unsigned __int8 *)a1 + 23);
  }
  size_t v7 = strlen(__s);
  if (v6 < a3) {
    return -1;
  }
  int64_t v8 = v7;
  if (v7)
  {
    CFMutableArrayRef v9 = (void *)(v5 + a3);
    uint64_t v10 = (char *)(v5 + v6);
    int64_t v11 = v6 - a3;
    if ((uint64_t)(v6 - a3) >= v8)
    {
      int v14 = *__s;
      do
      {
        uint64_t v15 = v11 - v8;
        if (v15 == -1) {
          break;
        }
        uint64_t v16 = (char *)memchr(v9, v14, v15 + 1);
        if (!v16) {
          break;
        }
        uint64_t v12 = v16;
        if (!memcmp(v16, __s, v8)) {
          goto LABEL_9;
        }
        CFMutableArrayRef v9 = v12 + 1;
        int64_t v11 = v10 - (v12 + 1);
      }
      while (v11 >= v8);
    }
    uint64_t v12 = v10;
LABEL_9:
    if (v12 == v10) {
      return -1;
    }
    else {
      return (unint64_t)&v12[-v5];
    }
  }
  return a3;
}

uint64_t sub_22687F208(uint64_t a1, const __CFString *a2, const __CFString *a3, const __CFString *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v126 = *MEMORY[0x263EF8340];
  CFStringRef v123 = 0;
  memset(&__p, 0, sizeof(__p));
  CFArrayRef theArray = 0;
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_6;
  }
  sub_22686088C(a3, (uint64_t)&theArray, (UInt8 *)"%kC.%kO", (uint64_t)a4, a5, a6, a7, a8, 1466517097);
  uint64_t v12 = v11;
  if (v11) {
    goto LABEL_6;
  }
  CFIndex v13 = sub_2268801D8(a1, theArray);
  uint64_t v14 = v13 < 2 ? 0 : sub_226880258(a1, theArray);
  CFIndex v20 = sub_2268801D8(a1, 0);
  uint64_t v21 = v20 < 2 ? 0 : sub_226880258(a1, 0);
  uint64_t v12 = 0;
  BOOL v114 = v21 == 0;
  if (!v13) {
    goto LABEL_6;
  }
  uint64_t v115 = v21;
  if (!v20) {
    goto LABEL_6;
  }
  uint64_t v12 = 0;
  if (v13 > 2 || v20 > 2) {
    goto LABEL_6;
  }
  int v22 = 1651861868;
  uint64_t v12 = 0;
  BOOL v23 = v20 == 2;
  BOOL v24 = v13 == 1 && v20 == 2;
  if (v13 != 2) {
    BOOL v23 = 0;
  }
  BOOL v112 = v23;
  BOOL v113 = v24;
  uint64_t v25 = &qword_2269113F8;
  do
  {
    if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
      sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)", 8000, (uint64_t)"%s: Importing propertyCode: '%C'\n", v16, v17, v18, v19, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)");
    }
    if (!sub_22688035C(v22)) {
      goto LABEL_43;
    }
    uint64_t v26 = sub_22683C448(v22, v124);
    uint64_t v27 = sub_22689F090(v119, v26);
    if (v22 == 2003061875) {
      uint64_t v27 = (void *)MEMORY[0x22A65ABB0](v119, "legacywds");
    }
    if (v20 == 1 || (uint64_t v29 = sub_226880778((uint64_t)v27, v22), (v29 & 1) != 0))
    {
LABEL_32:
      sub_22686088C(a4, (uint64_t)&v123, (UInt8 *)"[*].%ks", v28, v16, v17, v18, v19, v14);
      if (v30) {
        goto LABEL_33;
      }
      MEMORY[0x22A65ABB0](&__p, "WiFi.radios.[*].");
      sub_226880920((unsigned __int8 *)&__p, v22, &__p);
      if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
        sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)", 8000, (uint64_t)"%s: Importing val: '%@' @ %s in simple case.\n", v32, v33, v34, v35, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)");
      }
LABEL_38:
      uint64_t v36 = sub_2268809AC(a1, (uint64_t)&__p, v123, 0);
LABEL_39:
      uint64_t v12 = v36;
      char v31 = 0;
      if (!v36) {
        goto LABEL_33;
      }
      goto LABEL_40;
    }
    if (v113)
    {
      if (sub_2268808A4(v29, v22)) {
        goto LABEL_32;
      }
      sub_22686088C(a4, (uint64_t)&v123, (UInt8 *)"[*].%ks", v28, v16, v17, v18, v19, v14);
      if (v38) {
        goto LABEL_33;
      }
      MEMORY[0x22A65ABB0](&__p, "WiFi.radios.[*].");
      sub_226880920((unsigned __int8 *)&__p, v22, &__p);
      if (v22 > 1918981954)
      {
        if (v22 == 2003061875 || v22 == 2003060332)
        {
LABEL_103:
          snprintf(__str, 0x10uLL, "%ld", v115);
          std::string::size_type v78 = sub_22687F130((uint64_t *)&__p, "*", 0);
          std::string::replace(&__p, v78, 1uLL, __str);
          if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
            sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)", 8000, (uint64_t)"%s: Importing val: '%@' @ %s into 2.4GHzOnly radio.\n", v79, v80, v81, v82, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)");
          }
        }
        else
        {
          if (v22 != 1918981955)
          {
LABEL_124:
            if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
              sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)", 8000, (uint64_t)"%s: Code '%s' isn't supported.\n", v16, v17, v18, v19, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)");
            }
            goto LABEL_33;
          }
          unsigned int v118 = 0;
          sub_22686088C(a4, (uint64_t)&v118, (UInt8 *)"[*].%kO:int", v39, v16, v17, v18, v19, v14);
          uint64_t v12 = v76;
          if (v76) {
            goto LABEL_132;
          }
          if (v118 > 0xA || ((1 << v118) & 0x520) == 0)
          {
LABEL_140:
            uint64_t v12 = 0;
            goto LABEL_33;
          }
          CFDictionaryRef valuePtr = 0;
          HIDWORD(v116) = 0;
          sub_22686088C(a2, (uint64_t)&valuePtr, (UInt8 *)"%kC", v75, v16, v17, v18, v19, 1937329234);
          uint64_t v12 = v77;
          if (v77 == -6727)
          {
            uint64_t v12 = 4294960569;
LABEL_33:
            char v31 = 1;
            goto LABEL_40;
          }
          if (!valuePtr) {
            goto LABEL_132;
          }
          CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(valuePtr, @"regions");
          if (!Value) {
            goto LABEL_132;
          }
          sub_22686088C(a2, (uint64_t)&v116 + 4, (UInt8 *)"%kC:int", v91, v16, v17, v18, v19, 1937330789);
          uint64_t v12 = v93;
          if (v93) {
            goto LABEL_132;
          }
          CFBooleanRef v94 = (const __CFBoolean *)sub_22688129C(0, Value, SHIDWORD(v116), @"ht40_5GHz");
          uint64_t v12 = (uint64_t)v94;
          if (!v94) {
            goto LABEL_132;
          }
          int v95 = CFBooleanGetValue(v94);
          CFRelease((CFTypeRef)v12);
          if (!v95) {
            goto LABEL_140;
          }
          snprintf(__str, 0x10uLL, "%ld", v114);
          std::string::size_type v96 = sub_22687F130((uint64_t *)&__p, "*", 0);
          std::string::replace(&__p, v96, 1uLL, __str);
          if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
            sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)", 8000, (uint64_t)"%s: Importing val: '%@' @ %s into 5GHzOnly radio.\n", v97, v98, v99, v100, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)");
          }
        }
        goto LABEL_38;
      }
      if (v22 == 1651720515) {
        goto LABEL_103;
      }
      if (v22 != 1918976872)
      {
        if (v22 != 1918979445) {
          goto LABEL_124;
        }
        LODWORD(valuePtr) = 0;
        unsigned int v118 = 0;
        uint64_t v116 = 0;
        sub_22686088C(a4, (uint64_t)&valuePtr, (UInt8 *)"[*].%kO:int", v39, v16, v17, v18, v19, v14);
        uint64_t v12 = v41;
        if (v41) {
          goto LABEL_132;
        }
        char v42 = (char)valuePtr;
        BOOL v43 = valuePtr < 0xB;
        sub_22686088C(a4, (uint64_t)&v118, (UInt8 *)"[*].%kC:int", v40, v16, v17, v18, v19, v14);
        uint64_t v12 = v44;
        if (v44) {
          goto LABEL_132;
        }
        unsigned int v45 = v43 & (0x530u >> v42);
        uint64_t v46 = sub_226881374(v44, 1918979445, v45, 0, v118, (int *)&v116 + 1);
        uint64_t v12 = v46;
        if (v46) {
          goto LABEL_132;
        }
        uint64_t v12 = sub_226881374(v46, 1918979445, v45, 1, v118, (int *)&v116);
        if (v12) {
          goto LABEL_132;
        }
        MEMORY[0x22A65ABB0](&__p, "WiFi.radios.[*].");
        sub_226880920((unsigned __int8 *)&__p, 1918979445, &__p);
        snprintf(__str, 0x10uLL, "%ld", v115);
        std::string::size_type v47 = sub_22687F130((uint64_t *)&__p, "*", 0);
        std::string::replace(&__p, v47, 1uLL, __str);
        sub_226880920((unsigned __int8 *)&__p, 1918979445, &__p);
        if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
          sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)", 8000, (uint64_t)"%s: Mapping %u to 2.4GHz val: %u @ %s. into my radio\n", v48, v49, v50, v51, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)");
        }
        uint64_t v12 = sub_2268814C8(a1, (uint64_t)&__p, SHIDWORD(v116), 0);
        if (v12)
        {
LABEL_132:
          char v31 = 0;
          goto LABEL_40;
        }
        MEMORY[0x22A65ABB0](&__p, "WiFi.radios.[*].");
        sub_226880920((unsigned __int8 *)&__p, 1918979445, &__p);
        snprintf(__str, 0x10uLL, "%ld", v114);
        std::string::size_type v52 = sub_22687F130((uint64_t *)&__p, "*", 0);
        std::string::replace(&__p, v52, 1uLL, __str);
        sub_226880920((unsigned __int8 *)&__p, 1918979445, &__p);
        if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
          sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)", 8000, (uint64_t)"%s: Mapping %u to 5 GHz val: %u @ %s into my radio.\n", v53, v54, v55, v56, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)");
        }
        uint64_t v36 = sub_2268814C8(a1, (uint64_t)&__p, v116, 0);
        goto LABEL_39;
      }
      if (sub_2268A60D8(1651724867) != 6) {
        goto LABEL_132;
      }
      LODWORD(valuePtr) = 0;
      if (CFNumberGetValue((CFNumberRef)v123, kCFNumberIntType, &valuePtr))
      {
        uint64_t v83 = 0;
        char v84 = 1;
        while (1)
        {
          char v85 = v84;
          MEMORY[0x22A65ABB0](&__p, "WiFi.radios.[*].");
          sub_226880920((unsigned __int8 *)&__p, 1651724867, &__p);
          snprintf(__str, 0x10uLL, "%ld", v83);
          std::string::size_type v86 = sub_22687F130((uint64_t *)&__p, "*", 0);
          std::string::replace(&__p, v86, 1uLL, __str);
          if (sub_226881550(a1, (uint64_t)&__p, (int)valuePtr, 1))
          {
            sub_226880920((unsigned __int8 *)&__p, 1918976872, &__p);
            if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
              sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)", 8000, (uint64_t)"%s: Importing val: %u @ %s into my radio index %ld.\n", v87, v88, v89, v90, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)");
            }
            uint64_t v12 = sub_2268809AC(a1, (uint64_t)&__p, v123, 0);
            if (v12) {
              goto LABEL_132;
            }
          }
          else if (dword_268146940 <= 8000 {
                 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u)))
          }
          {
            sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)", 8000, (uint64_t)"%s: Value: %u @ path '%s' isn't supported.\n", v16, v17, v18, v19, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)");
          }
          char v84 = 0;
          uint64_t v83 = 1;
          if ((v85 & 1) == 0) {
            goto LABEL_33;
          }
        }
      }
      char v31 = 0;
      uint64_t v12 = 4294967292;
    }
    else
    {
      if (!v112) {
        goto LABEL_33;
      }
      sub_22686088C(a4, (uint64_t)&v123, (UInt8 *)"[*].%ks", v28, v16, v17, v18, v19, v14);
      if (v58) {
        goto LABEL_68;
      }
      MEMORY[0x22A65ABB0](&__p, "WiFi.radios.[*].");
      sub_226880920((unsigned __int8 *)&__p, v22, &__p);
      snprintf(__str, 0x10uLL, "%ld", v115);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int64_t size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        int64_t size = __p.__r_.__value_.__l.__size_;
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      uint64_t v67 = (char *)p_p + size;
      if (size >= 1)
      {
        uint64_t v68 = p_p;
        do
        {
          uint64_t v69 = memchr(v68, 42, size);
          if (!v69) {
            break;
          }
          if (*v69 == 42) {
            goto LABEL_86;
          }
          uint64_t v68 = (std::string *)(v69 + 1);
          int64_t size = v67 - (unsigned char *)v68;
        }
        while (v67 - (unsigned char *)v68 > 0);
      }
      uint64_t v69 = v67;
LABEL_86:
      if (v69 == v67) {
        std::string::size_type v70 = -1;
      }
      else {
        std::string::size_type v70 = v69 - (unsigned char *)p_p;
      }
      std::string::replace(&__p, v70, 1uLL, __str);
      if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
        sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)", 8000, (uint64_t)"%s: Importing val: '%@' @ %s into 2.4GHz radio.\n", v71, v72, v73, v74, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)");
      }
      uint64_t v12 = sub_2268809AC(a1, (uint64_t)&__p, v123, 0);
      char v31 = 0;
      if (!v12)
      {
LABEL_68:
        sub_22686088C(a4, (uint64_t)&v123, (UInt8 *)"[*].%ks", v57, v16, v17, v18, v19, v14 == 0);
        if (v59) {
          goto LABEL_33;
        }
        MEMORY[0x22A65ABB0](&__p, "WiFi.radios.[*].");
        sub_226880920((unsigned __int8 *)&__p, v22, &__p);
        snprintf(__str, 0x10uLL, "%ld", v114);
        std::string::size_type v60 = sub_22687F130((uint64_t *)&__p, "*", 0);
        std::string::replace(&__p, v60, 1uLL, __str);
        if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
          sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)", 8000, (uint64_t)"%s: Importing val: '%@' @ %s into 5GHz radio.\n", v61, v62, v63, v64, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)");
        }
        goto LABEL_38;
      }
    }
LABEL_40:
    if (v120 < 0) {
      operator delete(v119[0]);
    }
    if ((v31 & 1) == 0) {
      goto LABEL_6;
    }
LABEL_43:
    int v37 = *((_DWORD *)v25 + 3);
    uint64_t v25 = (uint64_t *)((char *)v25 + 12);
    int v22 = v37;
  }
  while (v37);
  if (sub_22687CBC8(a1, 1198748750))
  {
    sub_22686088C(a4, (uint64_t)&v123, (UInt8 *)"[*].%ks", v102, v103, v104, v105, v106, v14);
    if (!v107)
    {
      MEMORY[0x22A65ABB0](&__p, "WiFi.radios.[*].");
      sub_22689F090(v119, "vaps");
      sub_226881624((unsigned __int8 *)&__p, (uint64_t)v119, &__p);
      if (v120 < 0) {
        operator delete(v119[0]);
      }
      if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
        sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)", 8000, (uint64_t)"%s: Importing vaps to %s.\n", v108, v109, v110, v111, (uint64_t)"ACPStatus BaseStation::MergeRadiosArraySettings(CFDictionaryRef, CFDictionaryRef, CFArrayRef)");
      }
      uint64_t v12 = sub_2268809AC(a1, (uint64_t)&__p, v123, 0);
    }
  }
LABEL_6:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v12;
}

void sub_226880178(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(exception_object);
}

CFIndex sub_2268801D8(uint64_t a1, CFArrayRef theArray)
{
  CFDictionaryRef theDict = 0;
  if (theArray
    || !sub_22687CDBC(a1, 1466517097, (CFTypeRef *)&theDict, 0)
    && (CFArrayRef theArray = (CFArrayRef)CFDictionaryGetValue(theDict, @"radios")) != 0)
  {
    CFIndex Count = CFArrayGetCount(theArray);
  }
  else
  {
    CFIndex Count = 0;
  }
  if (theDict) {
    CFRelease(theDict);
  }
  return Count;
}

uint64_t sub_226880258(uint64_t a1, CFArrayRef theArray)
{
  CFArrayRef Value = theArray;
  int v15 = 0;
  CFDictionaryRef theDict = 0;
  if (!theArray)
  {
    if (!sub_22687CBC8(a1, 1935819842)) {
      return 0;
    }
    if (sub_22687CDBC(a1, 1466517097, (CFTypeRef *)&theDict, 0)) {
      goto LABEL_11;
    }
    CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(theDict, @"radios");
    if (!Value) {
      goto LABEL_11;
    }
  }
  CFIndex Count = CFArrayGetCount(Value);
  if (Count >= 2)
  {
    CFIndex v9 = Count;
    uint64_t v10 = 0;
    while (1)
    {
      sub_22686088C((const __CFString *)Value, (uint64_t)&v15, (UInt8 *)"[*].%kO:int", v4, v5, v6, v7, v8, v10);
      if (!v11 && (v15 & 0xE) != 0) {
        break;
      }
      if (v9 == ++v10) {
        goto LABEL_11;
      }
    }
  }
  else
  {
LABEL_11:
    uint64_t v10 = 0;
  }
  if (theDict) {
    CFRelease(theDict);
  }
  return v10;
}

uint64_t sub_22688035C(int a1)
{
  uint64_t result = 1;
  if (a1 > 1918977124)
  {
    if (a1 <= 1918980657)
    {
      if (a1 <= 1918978352)
      {
        if (a1 > 1918977365)
        {
          if (a1 == 1918977366 || a1 == 1918977586) {
            return result;
          }
          unsigned __int16 v5 = 18028;
        }
        else
        {
          if (a1 == 1918977125 || a1 == 1918977140) {
            return result;
          }
          unsigned __int16 v5 = 17729;
        }
      }
      else if (a1 <= 1918979406)
      {
        if ((a1 - 1918978353) < 2) {
          return result;
        }
        unsigned __int16 v5 = 19284;
      }
      else
      {
        if ((a1 - 1918979407) <= 0x26 && ((1 << (a1 - 79)) & 0x4000200001) != 0
          || a1 == 1918979693)
        {
          return result;
        }
        unsigned __int16 v5 = 20591;
      }
    }
    else if (a1 <= 1918981169)
    {
      if ((a1 - 1918980658) <= 0x3D && ((1 << (a1 - 50)) & 0x2008000000000001) != 0
        || (a1 - 1918980965) <= 0xF && ((1 << (a1 - 101)) & 0x8041) != 0)
      {
        return result;
      }
      unsigned __int16 v5 = 21298;
    }
    else
    {
      if (a1 > 1918981954)
      {
        if (((a1 - 1918981955) > 0xA || ((1 << (a1 - 67)) & 0x405) == 0) && a1 != 2003060332)
        {
          int v4 = 2003061875;
          goto LABEL_68;
        }
        return result;
      }
      if (a1 == 1918981170 || a1 == 1918981229) {
        return result;
      }
      unsigned __int16 v5 = 21810;
    }
LABEL_62:
    int v4 = v5 | 0x72610000;
    goto LABEL_68;
  }
  if (a1 > 1651724877)
  {
    if (a1 <= 1918976354)
    {
      if (a1 <= 1683440722)
      {
        if (a1 > 1651725132)
        {
          if (a1 == 1651725133) {
            return result;
          }
          unsigned __int16 v3 = 29268;
        }
        else
        {
          if (a1 == 1651724878) {
            return result;
          }
          unsigned __int16 v3 = 21323;
        }
        goto LABEL_67;
      }
      if (a1 > 1700876864)
      {
        if (a1 == 1700876865) {
          return result;
        }
        int v4 = 1918128974;
      }
      else
      {
        if (a1 == 1683440723) {
          return result;
        }
        int v4 = 1685538412;
      }
LABEL_68:
      if (a1 == v4) {
        return result;
      }
      return 0;
    }
    if (a1 > 1918976832)
    {
      unsigned int v6 = a1 - 1918976833;
      if (v6 > 0x31 || ((1 << v6) & 0x2098000000001) == 0) {
        return 0;
      }
      return result;
    }
    if (a1 == 1918976355 || a1 == 1918976373) {
      return result;
    }
    unsigned __int16 v5 = 17202;
    goto LABEL_62;
  }
  if (a1 > 1651723636)
  {
    if (a1 <= 1651724336)
    {
      if (a1 == 1651723637) {
        return result;
      }
      unsigned __int16 v3 = 20045;
      goto LABEL_67;
    }
    if ((a1 - 1651724337) > 0x14 || ((1 << (a1 - 49)) & 0x100003) == 0)
    {
      unsigned __int16 v3 = 21059;
      goto LABEL_67;
    }
  }
  else if (a1 <= 1651720514)
  {
    if (a1 != 1633895790 && a1 != 1651717459)
    {
      unsigned __int16 v3 = 14413;
      goto LABEL_67;
    }
  }
  else if (((a1 - 1651722051) > 0x10 || ((1 << (a1 - 67)) & 0x12C05) == 0) && a1 != 1651720515)
  {
    unsigned __int16 v3 = 16724;
LABEL_67:
    int v4 = v3 | 0x62730000;
    goto LABEL_68;
  }
  return result;
}

uint64_t sub_226880778(uint64_t a1, int a2)
{
  uint64_t result = sub_22688035C(a2);
  if (result)
  {
    uint64_t result = 1;
    if (a2 <= 1918979427)
    {
      if (a2 > 1651724866)
      {
        if (a2 != 1651724867 && a2 != 1918976833)
        {
          unsigned __int16 v4 = 17256;
          goto LABEL_17;
        }
      }
      else if (a2 != 1651718221 && a2 != 1651720515)
      {
        int v5 = 1651723637;
        goto LABEL_20;
      }
    }
    else if (a2 <= 1918981954)
    {
      if (a2 != 1918979428 && a2 != 1918979445)
      {
        unsigned __int16 v4 = 20077;
        goto LABEL_17;
      }
    }
    else if (a2 > 2003060331)
    {
      if (a2 != 2003061875)
      {
        int v5 = 2003060332;
LABEL_20:
        if (a2 != v5) {
          return result;
        }
      }
    }
    else if (a2 != 1918981955)
    {
      unsigned __int16 v4 = 22341;
LABEL_17:
      int v5 = v4 | 0x72610000;
      goto LABEL_20;
    }
    return 0;
  }
  return result;
}

uint64_t sub_2268808A4(uint64_t a1, int a2)
{
  uint64_t result = sub_22688035C(a2);
  if (result)
  {
    uint64_t result = 1;
    if (a2 > 1918979692)
    {
      if (a2 == 1918979693) {
        return result;
      }
      unsigned __int16 v4 = 22341;
    }
    else
    {
      if (a2 == 1918976833) {
        return result;
      }
      unsigned __int16 v4 = 19812;
    }
    if (a2 != (v4 | 0x72610000)) {
      return 0;
    }
  }
  return result;
}

void sub_226880920(unsigned __int8 *a1, int a2, std::string *a3)
{
  char v9 = 0;
  int v8 = 0;
  int v5 = sub_22683C448(a2, &v8);
  sub_22689F090(__p, v5);
  sub_226881624(a1, (uint64_t)__p, a3);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_226880990(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268809AC(uint64_t a1, uint64_t a2, const __CFString *DeepCopy, uint64_t a4)
{
  uint64_t v75 = *MEMORY[0x263EF8340];
  memset(&v73, 0, sizeof(v73));
  memset(&__p, 0, sizeof(__p));
  unsigned int v71 = 0;
  CFTypeRef cf = 0;
  int v8 = (pthread_mutex_t *)(a1 + 392);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 392));
  ++*(_DWORD *)(a1 + 456);
  std::string::basic_string(&__str, (const std::string *)a2, 0, 4uLL, (std::allocator<char> *)__s);
  std::string::operator=(&v73, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (*(char *)(a2 + 23) >= 0) {
    char v9 = (char *)a2;
  }
  else {
    char v9 = *(char **)a2;
  }
  uint64_t v10 = sub_22683C470(v9, 4uLL, &v71);
  if (v10) {
    goto LABEL_7;
  }
  unint64_t v12 = *(unsigned __int8 *)(a2 + 23);
  if ((v12 & 0x80u) != 0) {
    unint64_t v12 = *(void *)(a2 + 8);
  }
  if (v12 >= 5)
  {
    std::string::basic_string(&__str, (const std::string *)a2, 5uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)__s);
    std::string::operator=(&__p, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
  std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (!size)
  {
    uint64_t v10 = sub_22687AF44(a1, v71, DeepCopy, a4);
    goto LABEL_7;
  }
  if (!sub_22687EFBC(a1, (std::string *)a2))
  {
    if (a4 == 2)
    {
      uint64_t v21 = sub_22687D4B0((CFDictionaryRef *)a1, v71, (CFNumberRef *)&cf, 2);
      int v22 = 0;
      BOOL v23 = 0;
      CFTypeRef v24 = cf;
      goto LABEL_39;
    }
    uint64_t v35 = sub_22687D4B0((CFDictionaryRef *)a1, v71, (CFNumberRef *)&cf, 1);
    uint64_t v10 = v35;
    if (v35 == -5 || (CFTypeRef v24 = cf) == 0)
    {
      uint64_t v21 = sub_22687D4B0((CFDictionaryRef *)a1, v71, (CFNumberRef *)&cf, 2);
      BOOL v23 = 0;
      int v22 = 0;
      CFTypeRef v24 = cf;
      if (!cf || v21)
      {
LABEL_39:
        if (v21 == -5 || !v24)
        {
          uint64_t v10 = sub_22687EC88(v21, v71, (CFMutableDictionaryRef *)&cf);
          if (v10)
          {
LABEL_149:
            if (v23) {
              CFRelease(v23);
            }
            goto LABEL_151;
          }
          CFTypeRef v24 = cf;
          int v25 = 1;
          if (!cf)
          {
            uint64_t v10 = 0;
            goto LABEL_146;
          }
          int v22 = 1;
        }
        else
        {
          int v25 = 0;
        }
        CFTypeRef v68 = 0;
        char v67 = 0;
        CFTypeID v26 = CFGetTypeID(v24);
        if (v26 == CFDictionaryGetTypeID() || (CFTypeID v27 = CFGetTypeID(cf), v27 == CFArrayGetTypeID()))
        {
          if (!DeepCopy)
          {
            __str.__r_.__value_.__r.__words[0] = 0;
            if (a4 > 1)
            {
              uint64_t v10 = 4294960591;
              goto LABEL_146;
            }
            if (sub_226885770((CFDictionaryRef *)a1, a2, (CFMutableDictionaryRef *)&__str, 2))
            {
              if (dword_268146940 <= 1000
                && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x3E8u)))
              {
                sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::SetPropertyCF(const std::string &, CFTypeRef, eWhichValue)", 1000, (uint64_t)"%s: This path (%s) does not exist in original settings for removal", v45, v46, v47, v48, (uint64_t)"SetPropertyCF");
              }
              CFStringRef DeepCopy = 0;
            }
            else
            {
              CFStringRef DeepCopy = (const __CFString *)CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], __str.__r_.__value_.__l.__data_, 2uLL);
              if (!DeepCopy)
              {
                uint64_t v10 = 4294960568;
                goto LABEL_146;
              }
            }
          }
          uint64_t v10 = sub_226885D44(a1, &__p, DeepCopy, &v68, &v67);
          if (!v10)
          {
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              p_p = &__p;
            }
            else {
              p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            if (sub_22688BA8C((const char *)p_p) == 2003061875)
            {
              sub_22689F090(&__str, "legacywds");
              sub_226881624((unsigned __int8 *)&__p, (uint64_t)&__str, &__p);
              if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__str.__r_.__value_.__l.__data_);
              }
            }
            if (!sub_22687F130((uint64_t *)a2, "WiFi.radios.[*].", 0))
            {
              memset(&__str, 0, sizeof(__str));
              CFIndex v49 = sub_2268801D8(a1, 0);
              CFIndex v50 = v49;
              if (v49)
              {
                if (v49 < 1)
                {
                  BOOL v66 = 0;
                  uint64_t v10 = 0;
                  BOOL v65 = 1;
                }
                else
                {
                  uint64_t v51 = 0;
                  while (1)
                  {
                    snprintf(__s, 0x10uLL, "%ld", v51);
                    std::string::operator=(&__str, &__p);
                    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                      int64_t v52 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                    }
                    else {
                      int64_t v52 = __str.__r_.__value_.__l.__size_;
                    }
                    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                      p_str = &__str;
                    }
                    else {
                      p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
                    }
                    uint64_t v54 = (char *)p_str + v52;
                    if (v52 >= 1)
                    {
                      uint64_t v55 = p_str;
                      do
                      {
                        uint64_t v56 = memchr(v55, 42, v52);
                        if (!v56) {
                          break;
                        }
                        if (*v56 == 42) {
                          goto LABEL_121;
                        }
                        uint64_t v55 = (std::string *)(v56 + 1);
                        int64_t v52 = v54 - (unsigned char *)v55;
                      }
                      while (v54 - (unsigned char *)v55 > 0);
                    }
                    uint64_t v56 = v54;
LABEL_121:
                    std::string::size_type v57 = v56 == v54 ? -1 : v56 - (unsigned char *)p_str;
                    std::string::replace(&__str, v57, 1uLL, __s);
                    uint64_t v63 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                        ? &__str
                        : (std::string *)__str.__r_.__value_.__r.__words[0];
                    uint64_t v64 = sub_226861F2C((void *)cf, (uint64_t)v63, v68, v58, v59, v60, v61, v62);
                    BOOL v65 = v64 == 0;
                    uint64_t v10 = v64;
                    if (v64) {
                      break;
                    }
                    if (++v51 == v50)
                    {
                      uint64_t v10 = 0;
                      break;
                    }
                  }
                  BOOL v66 = v64 != 0;
                }
              }
              else
              {
                BOOL v65 = 0;
                uint64_t v10 = 4294967291;
                BOOL v66 = 1;
              }
              if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__str.__r_.__value_.__l.__data_);
              }
              if (!v65)
              {
                if (!v66) {
                  goto LABEL_151;
                }
                goto LABEL_146;
              }
              goto LABEL_141;
            }
            if (sub_22687F130((uint64_t *)a2, "vaps.[*]", 0) == -1
              || (uint64_t v10 = (*(uint64_t (**)(uint64_t, CFTypeRef, uint64_t, uint64_t, std::string *))(*(void *)a1 + 24))(a1, cf, a2, 1, &__p), !v10))
            {
              uint64_t v34 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                  ? &__p
                  : (std::string *)__p.__r_.__value_.__r.__words[0];
              uint64_t v10 = sub_226861F2C((void *)cf, (uint64_t)v34, v68, v29, v30, v31, v32, v33);
              if (!v10)
              {
LABEL_141:
                if (v67) {
                  CFRelease(v68);
                }
                if (v22) {
                  uint64_t v10 = sub_22687AF44(a1, v71, (const __CFString *)cf, 1);
                }
              }
            }
          }
        }
        else
        {
          uint64_t v10 = 4294960540;
        }
LABEL_146:
        if (v25 && cf) {
          CFRelease(cf);
        }
        goto LABEL_149;
      }
      CFTypeRef v24 = CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], cf, 2uLL);
      if (v24)
      {
        uint64_t v21 = 0;
        CFTypeRef cf = v24;
        int v22 = 1;
        BOOL v23 = v24;
        goto LABEL_39;
      }
      uint64_t v10 = 4294967293;
    }
    else if (!v35)
    {
      int v22 = 0;
      BOOL v23 = 0;
      uint64_t v21 = 0;
      goto LABEL_39;
    }
LABEL_7:
    --*(_DWORD *)(a1 + 456);
    pthread_mutex_unlock(v8);
    goto LABEL_8;
  }
  uint64_t v14 = *(unsigned __int8 *)(a2 + 23);
  BOOL v15 = (v14 & 0x80u) != 0;
  if ((v14 & 0x80u) != 0) {
    uint64_t v14 = *(void *)(a2 + 8);
  }
  if (v15) {
    uint64_t v16 = *(char **)a2;
  }
  else {
    uint64_t v16 = (char *)a2;
  }
  if (v14 >= 16)
  {
    uint64_t v17 = &v16[v14];
    uint64_t v18 = v16;
    do
    {
      uint64_t v19 = (char *)memchr(v18, 87, v14 - 15);
      if (!v19) {
        break;
      }
      if (*(void *)v19 == 0x6461722E69466957 && *((void *)v19 + 1) == 0x2E5D2A5B2E736F69)
      {
        if (v19 == v17 || v19 != v16) {
          break;
        }
        memset(&__str, 0, sizeof(__str));
        CFIndex v36 = sub_2268801D8(a1, 0);
        CFIndex v37 = v36;
        if (v36)
        {
          if (v36 < 1)
          {
LABEL_93:
            uint64_t v10 = 0;
          }
          else
          {
            uint64_t v38 = 0;
            while (1)
            {
              snprintf(__s, 0x10uLL, "%ld", v38);
              std::string::operator=(&__str, (const std::string *)a2);
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                int64_t v39 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
              }
              else {
                int64_t v39 = __str.__r_.__value_.__l.__size_;
              }
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                uint64_t v40 = &__str;
              }
              else {
                uint64_t v40 = (std::string *)__str.__r_.__value_.__r.__words[0];
              }
              uint64_t v41 = (char *)v40 + v39;
              if (v39 >= 1)
              {
                char v42 = v40;
                do
                {
                  BOOL v43 = memchr(v42, 42, v39);
                  if (!v43) {
                    break;
                  }
                  if (*v43 == 42) {
                    goto LABEL_88;
                  }
                  char v42 = (std::string *)(v43 + 1);
                  int64_t v39 = v41 - (unsigned char *)v42;
                }
                while (v41 - (unsigned char *)v42 > 0);
              }
              BOOL v43 = v41;
LABEL_88:
              std::string::size_type v44 = v43 == v41 ? -1 : v43 - (unsigned char *)v40;
              std::string::replace(&__str, v44, 1uLL, __s);
              uint64_t v10 = sub_22688377C(a1, (uint64_t)&__str, (uint64_t)DeepCopy, a4);
              if (v10) {
                break;
              }
              if (++v38 == v37) {
                goto LABEL_93;
              }
            }
          }
        }
        else
        {
          uint64_t v10 = 4294967291;
        }
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        goto LABEL_151;
      }
      uint64_t v18 = v19 + 1;
      uint64_t v14 = v17 - v18;
    }
    while (v17 - v18 >= 16);
  }
  uint64_t v10 = sub_22688377C(a1, a2, (uint64_t)DeepCopy, a4);
LABEL_151:
  if (a1) {
    goto LABEL_7;
  }
LABEL_8:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v73.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_2268811DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (v32)
  {
    --*(_DWORD *)(v32 + 456);
    pthread_mutex_unlock(v33);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(exception_object);
}

const void *sub_22688129C(int a1, CFArrayRef theArray, int a3, const void *a4)
{
  CFIndex Count = CFArrayGetCount(theArray);
  if (Count >= 1)
  {
    CFIndex v8 = Count;
    CFIndex v9 = 0;
    int valuePtr = 0;
    do
    {
      CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(theArray, v9);
      if (!ValueAtIndex) {
        break;
      }
      CFDictionaryRef v11 = ValueAtIndex;
      CFNumberRef Value = (const __CFNumber *)CFDictionaryGetValue(ValueAtIndex, @"region");
      if (!Value) {
        break;
      }
      CFNumberGetValue(Value, kCFNumberIntType, &valuePtr);
      if (valuePtr == a3)
      {
        BOOL v15 = CFDictionaryGetValue(v11, a4);
        CFIndex v13 = v15;
        if (v15) {
          CFRetain(v15);
        }
        return v13;
      }
      ++v9;
    }
    while (v8 != v9);
  }
  return 0;
}

uint64_t sub_226881374(uint64_t a1, int a2, int a3, int a4, unsigned int a5, int *a6)
{
  if (sub_2268A60D8(a2) != 6) {
    return 4294967292;
  }
  int v11 = sub_22688035C(a2);
  uint64_t result = 4294967292;
  if (a2 == 1918979445 && v11)
  {
    if (a3)
    {
      if (a5 > 0x24 || ((1 << a5) & 0x46) != 0) {
        goto LABEL_18;
      }
      if (((1 << a5) & 0x60200) == 0)
      {
        if (((1 << a5) & 0x1001000000) == 0) {
          goto LABEL_18;
        }
        goto LABEL_13;
      }
LABEL_17:
      BOOL v13 = a4 == 0;
      int v14 = 85;
      int v15 = 18;
      goto LABEL_19;
    }
    if (a5 <= 0x24)
    {
      if (((1 << a5) & 0x1001060200) != 0)
      {
LABEL_13:
        BOOL v13 = a4 == 0;
        int v14 = 17;
        int v15 = 36;
LABEL_19:
        if (!v13) {
          int v14 = v15;
        }
        uint64_t result = 0;
        *a6 = v14;
        return result;
      }
      if (((1 << a5) & 6) != 0) {
        goto LABEL_18;
      }
      if (a5 == 6) {
        goto LABEL_17;
      }
    }
    if (a5 == 85) {
      goto LABEL_17;
    }
LABEL_18:
    BOOL v13 = a4 == 0;
    int v14 = 2;
    int v15 = 6;
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_2268814C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int valuePtr = a3;
  CFStringRef v7 = (const __CFString *)CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
  if (!v7) {
    return 4294960568;
  }
  CFStringRef v8 = v7;
  uint64_t v9 = sub_2268809AC(a1, a2, v7, a4);
  CFRelease(v8);
  return v9;
}

CFArrayRef sub_226881550(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int valuePtr = a3;
  CFArrayRef theArray = 0;
  CFNumberRef v7 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
  if (!v7) {
    return 0;
  }
  CFNumberRef v8 = v7;
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v9 = (const char *)a2;
  }
  else {
    uint64_t v9 = *(const char **)a2;
  }
  if (sub_2268C60C4(a1, v9, &theArray, a4))
  {
    CFArrayRef v10 = 0;
  }
  else
  {
    CFArrayRef v10 = theArray;
    if (theArray)
    {
      v14.CFIndex length = CFArrayGetCount(theArray);
      v14.locatiouint64_t n = 0;
      CFArrayRef v10 = (const __CFArray *)CFArrayContainsValue(v10, v14, v8);
    }
  }
  CFRelease(v8);
  if (theArray) {
    CFRelease(theArray);
  }
  return v10;
}

void sub_226881624(unsigned __int8 *a1, uint64_t a2, std::string *a3)
{
  int v5 = a1;
  int v6 = (char)a1[23];
  if ((v6 & 0x80000000) == 0)
  {
    std::string __str = *(std::string *)a1;
LABEL_4:
    uint64_t v7 = v6;
    goto LABEL_5;
  }
  sub_22689EF14(&__str, *(void **)a1, *((void *)a1 + 1));
  int v6 = (char)v5[23];
  if ((v6 & 0x80000000) == 0) {
    goto LABEL_4;
  }
  uint64_t v19 = v5;
  int v5 = *(unsigned __int8 **)v5;
  uint64_t v7 = *((void *)v19 + 1);
LABEL_5:
  CFNumberRef v8 = &v5[v7];
  if (v7)
  {
    uint64_t v9 = v5;
    CFArrayRef v10 = &v5[v7];
    do
    {
      int v11 = v9;
      unint64_t v12 = v9;
      while (1)
      {
        int v13 = *v12++;
        if (v13 == 46) {
          break;
        }
        int v11 = v12;
        if (v12 == v8)
        {
          int v11 = v10;
          goto LABEL_14;
        }
      }
      uint64_t v9 = v11 + 1;
      CFArrayRef v10 = v11;
    }
    while (v12 != v8);
  }
  else
  {
    int v11 = v5;
  }
LABEL_14:
  if (v11 == v8) {
    std::string::size_type v14 = 0;
  }
  else {
    std::string::size_type v14 = v11 - v5 + 1;
  }
  std::string::basic_string(&v20, &__str, 0, v14, (std::allocator<char> *)&v22);
  std::string::operator=(&__str, &v20);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  int v15 = *(char *)(a2 + 23);
  if (v15 >= 0) {
    uint64_t v16 = (const std::string::value_type *)a2;
  }
  else {
    uint64_t v16 = *(const std::string::value_type **)a2;
  }
  if (v15 >= 0) {
    std::string::size_type v17 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::string::size_type v17 = *(void *)(a2 + 8);
  }
  uint64_t v18 = std::string::append(&__str, v16, v17);
  std::string::operator=(a3, v18);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_226881764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22688179C(uint64_t a1)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  CFDictionaryRef theDict = 0;
  memset(&v40, 0, sizeof(v40));
  CFTypeRef cf = 0;
  uint64_t v2 = sub_22687CDBC(a1, 1466517097, (CFTypeRef *)&theDict, 0);
  if (v2) {
    goto LABEL_63;
  }
  CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(theDict, @"radios");
  CFStringRef v4 = (const __CFString *)Value;
  if (!Value) {
    goto LABEL_60;
  }
  CFIndex Count = CFArrayGetCount(Value);
  if (Count < 1)
  {
    uint64_t v2 = 0;
    goto LABEL_63;
  }
  uint64_t v11 = 0;
  CFIndex v33 = Count;
  CFAllocatorRef allocator = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  while (2)
  {
    CFNumberRef v37 = 0;
    CFDictionaryRef v38 = 0;
    int valuePtr = 0;
    sub_22686088C(v4, (uint64_t)&v38, (UInt8 *)"[*]", v6, v7, v8, v9, v10, v11);
    uint64_t v2 = v12;
    if (!v12)
    {
      if (v38)
      {
        for (uint64_t i = 0; i != 4; ++i)
        {
          CFNumberRef v14 = (const __CFNumber *)CFDictionaryGetValue(v38, *(&off_2647BA880 + 2 * i));
          if (!v14)
          {
            uint64_t v2 = 4294967291;
            goto LABEL_63;
          }
          MEMORY[0x22A65ABB0](&v40, "WiFi.radios.[*].");
          sub_226880920((unsigned __int8 *)&v40, *((_DWORD *)&off_2647BA880 + 4 * i + 2), &v40);
          snprintf(__str, 0x10uLL, "%ld", v11);
          if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int64_t size = HIBYTE(v40.__r_.__value_.__r.__words[2]);
          }
          else {
            int64_t size = v40.__r_.__value_.__l.__size_;
          }
          if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v16 = &v40;
          }
          else {
            uint64_t v16 = (std::string *)v40.__r_.__value_.__r.__words[0];
          }
          std::string::size_type v17 = (char *)v16 + size;
          if (size >= 1)
          {
            uint64_t v18 = v16;
            do
            {
              uint64_t v19 = memchr(v18, 42, size);
              if (!v19) {
                break;
              }
              if (*v19 == 42) {
                goto LABEL_21;
              }
              uint64_t v18 = (std::string *)(v19 + 1);
              int64_t size = v17 - (unsigned char *)v18;
            }
            while (v17 - (unsigned char *)v18 > 0);
          }
          uint64_t v19 = v17;
LABEL_21:
          if (v19 == v17) {
            std::string::size_type v20 = -1;
          }
          else {
            std::string::size_type v20 = v19 - (unsigned char *)v16;
          }
          std::string::replace(&v40, v20, 1uLL, __str);
          if (!CFNumberGetValue(v14, kCFNumberIntType, &valuePtr)) {
            goto LABEL_60;
          }
          CFNumberRef v37 = 0;
          if (i == 3)
          {
            int v35 = 0;
            sub_2268A80C4((const __CFString *)v38, &v35, v21, v22, v23, v24, v25, v26);
            int v28 = v27;
            if (!v27)
            {
              switch(v35)
              {
                case 2:
                case 3:
                  if (!sub_22687CBC8(a1, 1852787795)) {
                    break;
                  }
                  int v35 = 1;
                  CFNumberRef v37 = CFNumberCreate(allocator, kCFNumberNSIntegerType, &v35);
                  sub_226880920((unsigned __int8 *)&v40, 1651725131, &v40);
                  uint64_t v2 = sub_2268809AC(a1, (uint64_t)&v40, &stru_26DA6BE88, 0);
                  if (!v2) {
                    break;
                  }
                  goto LABEL_63;
                case 4:
                case 6:
                case 8:
                  if (!sub_22687CBC8(a1, 1852787795)) {
                    break;
                  }
                  goto LABEL_29;
                case 5:
                  if (!sub_22687CBC8(a1, 1852788045)) {
                    break;
                  }
LABEL_29:
                  int v35 = 7;
                  CFNumberRef v29 = CFNumberCreate(allocator, kCFNumberNSIntegerType, &v35);
                  goto LABEL_57;
                case 9:
                case 11:
                  if (!sub_22687CBC8(a1, 1852787795)) {
                    break;
                  }
                  goto LABEL_56;
                case 10:
                  if (!sub_22687CBC8(a1, 1852788045)) {
                    break;
                  }
LABEL_56:
                  int v35 = 12;
                  CFNumberRef v29 = CFNumberCreate(allocator, kCFNumberNSIntegerType, &v35);
LABEL_57:
                  CFNumberRef v37 = v29;
                  break;
                default:
                  break;
              }
            }
          }
          else
          {
            if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              uint64_t v30 = &v40;
            }
            else {
              uint64_t v30 = (std::string *)v40.__r_.__value_.__r.__words[0];
            }
            int v28 = sub_226881CE0(a1, (char *)v30, v14, 1, (CFTypeRef *)&v37);
          }
          CFNumberRef v31 = v37;
          if (v28 || v37)
          {
            if (cf)
            {
              CFRelease(cf);
              CFTypeRef cf = 0;
              CFNumberRef v31 = v37;
            }
            if (v31)
            {
              CFTypeRef cf = v31;
            }
            else
            {
              uint64_t v2 = sub_2268820DC(a1, (uint64_t)&v40, (CFMutableDictionaryRef *)&cf, 2);
              if (v2) {
                goto LABEL_63;
              }
            }
            sub_226880920((unsigned __int8 *)&v40, *((_DWORD *)&off_2647BA880 + 4 * i + 3), &v40);
            uint64_t v2 = sub_2268809AC(a1, (uint64_t)&v40, (const __CFString *)cf, 0);
            if (v2) {
              goto LABEL_63;
            }
          }
          else if (dword_268146940 <= 8000 {
                 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u)))
          }
          {
            sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::PostImportValidateWiFiPlistSettings()", 8000, (uint64_t)"%s: val is good: %u @ %s in radio index %ld.\n", v7, v8, v9, v10, (uint64_t)"ACPStatus BaseStation::PostImportValidateWiFiPlistSettings()");
          }
        }
        uint64_t v2 = 0;
        if (++v11 != v33) {
          continue;
        }
        break;
      }
LABEL_60:
      uint64_t v2 = 4294967292;
    }
    break;
  }
LABEL_63:
  if (theDict)
  {
    CFRelease(theDict);
    CFDictionaryRef theDict = 0;
  }
  if (cf) {
    CFRelease(cf);
  }
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v40.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_226881C8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226881CE0(uint64_t a1, char *a2, const __CFBoolean *a3, uint64_t a4, CFTypeRef *a5)
{
  int v43 = 0;
  uint64_t v42 = 0;
  unsigned __int16 v41 = 0;
  int valuePtr = 0;
  unsigned __int8 v39 = 0;
  unsigned __int16 v38 = 0;
  int v37 = 0;
  int v10 = sub_22688BA8C(a2);
  CFArrayRef theArray = 0;
  int v35 = 0;
  uint64_t v11 = sub_2268A5FD4(v10, &v42);
  if (v11) {
    goto LABEL_2;
  }
  if (*(_DWORD *)(v42 + 12) != 6) {
    goto LABEL_21;
  }
  uint64_t v12 = 0;
  CFStringRef v13 = 0;
  if (v10 == 1651725402 || v10 == 1937326416) {
    goto LABEL_23;
  }
  uint64_t v11 = sub_2268C60C4(a1, a2, &theArray, 1);
  if (v11) {
    goto LABEL_2;
  }
  if (!theArray) {
    return 0;
  }
  CFIndex Count = CFArrayGetCount(theArray);
  if (Count < 1) {
    goto LABEL_21;
  }
  CFIndex v15 = Count;
  uint64_t v11 = sub_2268A5D3C(v10, &v43);
  if (v11)
  {
LABEL_2:
    uint64_t v12 = v11;
    CFStringRef v13 = 0;
    goto LABEL_23;
  }
  if (v43 == 2)
  {
    p_int valuePtr = &v41;
    CFNumberRef v18 = a3;
    CFNumberType v19 = kCFNumberShortType;
LABEL_16:
    CFNumberGetValue(v18, v19, p_valuePtr);
    int Value = 0;
    goto LABEL_17;
  }
  if (v43 != 1)
  {
    p_int valuePtr = (unsigned __int16 *)&valuePtr;
    CFNumberRef v18 = a3;
    CFNumberType v19 = kCFNumberIntType;
    goto LABEL_16;
  }
  int Value = CFBooleanGetValue(a3);
LABEL_17:
  if (v10 == 1651718221 && valuePtr == 9 || v10 == 1651724867 && valuePtr == 1000) {
    goto LABEL_21;
  }
  int v21 = 0;
  for (CFIndex i = 0; i != v15; ++i)
  {
    CFNumberRef ValueAtIndex = (const __CFNumber *)CFArrayGetValueAtIndex(theArray, i);
    if (v43 == 2)
    {
      CFNumberGetValue(ValueAtIndex, kCFNumberShortType, &v38);
      int v24 = v38;
      int v25 = v41;
    }
    else
    {
      if (v43 == 1)
      {
        CFNumberGetValue(ValueAtIndex, kCFNumberSInt8Type, &v39);
        int v24 = v39;
        if (v39 == Value) {
          goto LABEL_21;
        }
        goto LABEL_36;
      }
      CFNumberGetValue(ValueAtIndex, kCFNumberIntType, &v37);
      int v24 = v37;
      int v25 = valuePtr;
    }
    if (v24 == v25) {
      goto LABEL_21;
    }
LABEL_36:
    if (!i)
    {
      int v35 = v24;
      int v21 = v24;
    }
  }
  if (v21 == 8888)
  {
LABEL_21:
    CFStringRef v13 = 0;
LABEL_22:
    uint64_t v12 = 0;
    goto LABEL_23;
  }
  if (v10 == 1398097521)
  {
    if (valuePtr == 2678400)
    {
      int v28 = 2592000;
      goto LABEL_69;
    }
    if (!valuePtr)
    {
      int v28 = 604800;
      goto LABEL_69;
    }
  }
  else if (v10 == 1651725133 || v10 == 1651722067)
  {
    CFIndex v26 = 0;
    while (1)
    {
      CFNumberRef v27 = (const __CFNumber *)CFArrayGetValueAtIndex(theArray, v26);
      CFNumberGetValue(v27, kCFNumberIntType, &v37);
      if ((valuePtr & 0xFFFFFFFE) == 2)
      {
        int v28 = v37;
        if ((v37 & 0xFFFFFFFE) == 2) {
          break;
        }
      }
      if ((valuePtr - 2) < 6 || valuePtr == 13)
      {
        int v28 = v37;
        int v30 = v37 - 4;
        if (v37 - 4) < 0xA && ((0x20Fu >> v30))
        {
          int v28 = dword_22691311C[v30];
          break;
        }
        if (((valuePtr - 4) < 4 || valuePtr == 13) && v37 == 13) {
          break;
        }
      }
      if ((valuePtr - 9) <= 3)
      {
        int v28 = v37;
        if ((v37 - 9) < 4) {
          break;
        }
      }
      if (v15 == ++v26) {
        goto LABEL_70;
      }
    }
LABEL_69:
    int v35 = v28;
  }
LABEL_70:
  CFStringRef v13 = (const __CFString *)CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberIntType, &v35);
  if (!v13) {
    goto LABEL_22;
  }
  sub_22689F090(__p, a2);
  uint64_t v12 = sub_2268809AC(a1, (uint64_t)__p, v13, a4);
  if (v34 < 0) {
    operator delete(__p[0]);
  }
  if (a5 && !v12) {
    *a5 = CFRetain(v13);
  }
LABEL_23:
  if (theArray)
  {
    CFRelease(theArray);
    CFArrayRef theArray = 0;
  }
  if (v13) {
    CFRelease(v13);
  }
  return v12;
}

void sub_2268820C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268820DC(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3, uint64_t a4)
{
  uint64_t v8 = (pthread_mutex_t *)(a1 + 392);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 392));
  ++*(_DWORD *)(a1 + 456);
  uint64_t v9 = sub_226885770((CFDictionaryRef *)a1, a2, a3, a4);
  uint64_t v10 = v9;
  if (a3 && !v9 && *a3) {
    CFRetain(*a3);
  }
  --*(_DWORD *)(a1 + 456);
  pthread_mutex_unlock(v8);
  return v10;
}

void sub_226882174(_Unwind_Exception *a1)
{
  --*(_DWORD *)(v2 + 456);
  pthread_mutex_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_226882198(uint64_t a1, int a2)
{
  uint64_t result = 1;
  if (a2 <= 1918978352)
  {
    if (a2 <= 1918128973)
    {
      if (a2 > 1651725132)
      {
        if (a2 > 1651733075)
        {
          if (a2 != 1651733076 && a2 != 1683440723)
          {
            int v5 = 1685538412;
            goto LABEL_55;
          }
          return result;
        }
        if (a2 == 1651725133) {
          return result;
        }
        unsigned __int16 v4 = 22349;
      }
      else
      {
        if (a2 <= 1651724866)
        {
          if (a2 == 910976632) {
            return result;
          }
          int v5 = 1633895790;
          goto LABEL_55;
        }
        if (a2 == 1651724867 || a2 == 1651724877) {
          return result;
        }
        unsigned __int16 v4 = 21323;
      }
      int v5 = v4 | 0x62730000;
      goto LABEL_55;
    }
    if (a2 > 1918977124)
    {
      if (a2 > 1918977585)
      {
        if (a2 == 1918977586) {
          return result;
        }
        unsigned __int16 v3 = 18028;
      }
      else
      {
        if (a2 == 1918977125) {
          return result;
        }
        unsigned __int16 v3 = 17729;
      }
    }
    else
    {
      if ((a2 - 1918976833) <= 0x31 && ((1 << (a2 - 65)) & 0x2098000000001) != 0
        || a2 == 1918128974)
      {
        return result;
      }
      unsigned __int16 v3 = 16757;
    }
LABEL_54:
    int v5 = v3 | 0x72610000;
    goto LABEL_55;
  }
  if (a2 > 1918980913)
  {
    if (a2 > 1918981425)
    {
      if (a2 <= 2003060331)
      {
        if ((a2 - 1918981955) <= 0xA && ((1 << (a2 - 67)) & 0x405) != 0) {
          return result;
        }
        unsigned __int16 v3 = 21810;
        goto LABEL_54;
      }
      if (a2 == 2003060332) {
        return result;
      }
      int v5 = 2003061875;
LABEL_55:
      if (a2 == v5) {
        return result;
      }
      return 0;
    }
    if ((a2 - 1918980965) <= 0xF && ((1 << (a2 - 101)) & 0x8041) != 0 || a2 == 1918980914) {
      return result;
    }
    unsigned __int16 v3 = 21618;
    goto LABEL_54;
  }
  if (a2 <= 1918979406)
  {
    if (a2 > 1918979138)
    {
      if (a2 == 1918979139) {
        return result;
      }
      unsigned __int16 v3 = 19526;
    }
    else
    {
      if ((a2 - 1918978353) < 2) {
        return result;
      }
      unsigned __int16 v3 = 19284;
    }
    goto LABEL_54;
  }
  if (a2 > 1918979692)
  {
    if (a2 > 1918980215)
    {
      if (a2 == 1918980216) {
        return result;
      }
      unsigned __int16 v3 = 21103;
    }
    else
    {
      if (a2 == 1918979693) {
        return result;
      }
      unsigned __int16 v3 = 20591;
    }
    goto LABEL_54;
  }
  if ((a2 - 1918979407) > 0x26 || ((1 << (a2 - 79)) & 0x4000200001) == 0) {
    return 0;
  }
  return result;
}

uint64_t sub_2268824B8(uint64_t a1, int a2)
{
  uint64_t result = 1;
  if (a2 > 1886547537)
  {
    if (a2 > 2002862933)
    {
      if (a2 == 2002862934) {
        return result;
      }
      int v3 = 2003061875;
    }
    else
    {
      if (a2 == 1886547538) {
        return result;
      }
      int v3 = 1918976882;
    }
  }
  else if (a2 > 1633899616)
  {
    if (a2 == 1633899617) {
      return result;
    }
    int v3 = 1886213217;
  }
  else
  {
    if (a2 == 1349676902) {
      return result;
    }
    int v3 = 1466517097;
  }
  if (a2 != v3) {
    return 0;
  }
  return result;
}

uint64_t sub_22688256C(uint64_t a1, int a2, CFDataRef theData, CFTypeRef *a4)
{
  uint64_t v101 = *MEMORY[0x263EF8340];
  uint64_t v4 = 4294967292;
  if (!theData || !a4) {
    return v4;
  }
  CFDataRef v6 = theData;
  uint64_t v4 = 4294967286;
  if (a2 > 1886547537)
  {
    if (a2 > 2002862933)
    {
      if (a2 == 2002862934)
      {
        *(_DWORD *)cStr = 0;
        if (!CFNumberGetValue(theData, kCFNumberSInt32Type, cStr)) {
          return 4294960553;
        }
        LODWORD(cf) = *(_DWORD *)cStr;
        uint64_t v4 = 0;
        *a4 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &cf);
        return v4;
      }
      if (a2 != 2003061875) {
        return v4;
      }
      unint64_t Length = CFDataGetLength(theData);
      BytePtr = CFDataGetBytePtr(v6);
      CFAllocatorRef v64 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
      if (Mutable)
      {
        uint64_t v54 = Mutable;
        if (!Length) {
          goto LABEL_103;
        }
        if (!*(_DWORD *)BytePtr)
        {
          unsigned int v66 = *((_DWORD *)BytePtr + 1);
          unint64_t v67 = bswap32(v66);
          if (Length >= 40 * (unint64_t)v67 + 16)
          {
            if (v66)
            {
              CFTypeRef v68 = (UInt8 *)(BytePtr + 16);
              if (v67 <= 1) {
                uint64_t v69 = 1;
              }
              else {
                uint64_t v69 = v67;
              }
              std::string::size_type v70 = (const CFDictionaryKeyCallBacks *)MEMORY[0x263EFFF88];
              unsigned int v71 = (const CFDictionaryValueCallBacks *)MEMORY[0x263EFFF90];
              while (1)
              {
                uint64_t v72 = CFDictionaryCreateMutable(v64, 0, v70, v71);
                if (!v72) {
                  goto LABEL_110;
                }
                CFDataRef v6 = v72;
                if (!sub_2268A01F0(v68, (char *)v68 + 6, v72))
                {
LABEL_111:
                  uint64_t v4 = 0xFFFFFFFFLL;
                  goto LABEL_106;
                }
                CFArrayAppendValue(v54, v6);
                CFRelease(v6);
                v68 += 40;
                if (!--v69) {
                  goto LABEL_103;
                }
              }
            }
            goto LABEL_103;
          }
          goto LABEL_85;
        }
        goto LABEL_78;
      }
    }
    else
    {
      if (a2 != 1886547538)
      {
        if (a2 == 1918976882)
        {
          CFTypeID TypeID = CFStringGetTypeID();
          return sub_2268C6854(1918976882, (const __CFString *)v6, TypeID, a4);
        }
        return v4;
      }
      unint64_t v73 = CFDataGetLength(theData);
      uint64_t v74 = CFDataGetBytePtr(v6);
      CFAllocatorRef v75 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFMutableArrayRef v76 = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
      if (v76)
      {
        uint64_t v54 = v76;
        if (!v73) {
          goto LABEL_103;
        }
        if (*(_DWORD *)v74 == 50331648)
        {
          unsigned int v77 = *((_DWORD *)v74 + 1);
          unint64_t v78 = bswap32(v77);
          if (v73 < 720 * (unint64_t)v78 + 16)
          {
            uint64_t v4 = 4294967281;
            goto LABEL_107;
          }
          if (v77)
          {
            if (v78 <= 1) {
              uint64_t v85 = 1;
            }
            else {
              uint64_t v85 = v78;
            }
            std::string::size_type v86 = (const CFDictionaryKeyCallBacks *)MEMORY[0x263EFFF88];
            uint64_t v87 = (const CFDictionaryValueCallBacks *)MEMORY[0x263EFFF90];
            while (1)
            {
              *((_WORD *)v74 + 8) = bswap32(*((unsigned __int16 *)v74 + 8)) >> 16;
              *((_WORD *)v74 + 9) = bswap32(*((unsigned __int16 *)v74 + 9)) >> 16;
              *((_WORD *)v74 + 367) = bswap32(*((unsigned __int16 *)v74 + 367)) >> 16;
              uint64_t v88 = CFDictionaryCreateMutable(v75, 0, v86, v87);
              if (!v88) {
                goto LABEL_110;
              }
              CFDataRef v6 = v88;
              if (!sub_2268A0488((uint64_t)(v74 + 16), v88)) {
                goto LABEL_111;
              }
              CFArrayAppendValue(v54, v6);
              CFRelease(v6);
              v74 += 720;
              if (!--v85) {
                goto LABEL_103;
              }
            }
          }
          goto LABEL_103;
        }
        goto LABEL_78;
      }
    }
    return 4294960568;
  }
  if (a2 > 1633899616)
  {
    if (a2 == 1633899617)
    {
      unint64_t v79 = CFDataGetLength(theData);
      uint64_t v80 = CFDataGetBytePtr(v6);
      CFAllocatorRef v81 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFMutableArrayRef v82 = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
      if (v82)
      {
        uint64_t v54 = v82;
        if (!v79) {
          goto LABEL_103;
        }
        if (!*(_DWORD *)v80)
        {
          unsigned int v83 = *((_DWORD *)v80 + 1);
          unint64_t v84 = bswap32(v83);
          if (v79 >= 40 * (unint64_t)v84 + 16)
          {
            if (v83)
            {
              uint64_t v89 = (UInt8 *)(v80 + 16);
              if (v84 <= 1) {
                uint64_t v90 = 1;
              }
              else {
                uint64_t v90 = v84;
              }
              uint64_t v91 = (const CFDictionaryKeyCallBacks *)MEMORY[0x263EFFF88];
              uint64_t v92 = (const CFDictionaryValueCallBacks *)MEMORY[0x263EFFF90];
              do
              {
                uint64_t v93 = CFDictionaryCreateMutable(v81, 0, v91, v92);
                if (!v93) {
                  goto LABEL_110;
                }
                CFDataRef v6 = v93;
                if (!sub_2268A01F0(v89, (char *)v89 + 6, v93)) {
                  goto LABEL_111;
                }
                CFArrayAppendValue(v54, v6);
                CFRelease(v6);
                v89 += 40;
              }
              while (--v90);
            }
LABEL_103:
            uint64_t v4 = 0;
            *a4 = v54;
            goto LABEL_107;
          }
LABEL_85:
          uint64_t v4 = 4294967292;
          goto LABEL_107;
        }
LABEL_78:
        uint64_t v4 = 4294967277;
        goto LABEL_107;
      }
      return 4294960568;
    }
    if (a2 == 1886213217)
    {
      unint64_t v50 = CFDataGetLength(theData);
      uint64_t v51 = CFDataGetBytePtr(v6);
      CFAllocatorRef v52 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFMutableArrayRef v53 = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
      if (v53)
      {
        uint64_t v54 = v53;
        if (!v50) {
          goto LABEL_103;
        }
        if (!*(_DWORD *)v51)
        {
          unsigned int v55 = *((_DWORD *)v51 + 1);
          unint64_t v56 = bswap32(v55);
          if (v50 >= 8 * (unint64_t)v56 + 16)
          {
            if (v55)
            {
              uint64_t v57 = (uint64_t)(v51 + 16);
              if (v56 <= 1) {
                uint64_t v58 = 1;
              }
              else {
                uint64_t v58 = v56;
              }
              uint64_t v59 = (const CFDictionaryKeyCallBacks *)MEMORY[0x263EFFF88];
              uint64_t v60 = (const CFDictionaryValueCallBacks *)MEMORY[0x263EFFF90];
              while (1)
              {
                *(_DWORD *)uint64_t v57 = bswap32(*(_DWORD *)v57);
                *(_WORD *)(v57 + 4) = bswap32(*(unsigned __int16 *)(v57 + 4)) >> 16;
                *(_WORD *)(v57 + 6) = bswap32(*(unsigned __int16 *)(v57 + 6)) >> 16;
                uint64_t v61 = CFDictionaryCreateMutable(v52, 0, v59, v60);
                if (!v61) {
                  break;
                }
                CFDataRef v6 = v61;
                if (!sub_2268A0704(v57, v61)) {
                  goto LABEL_111;
                }
                CFArrayAppendValue(v54, v6);
                CFRelease(v6);
                v57 += 8;
                if (!--v58) {
                  goto LABEL_103;
                }
              }
LABEL_110:
              uint64_t v4 = 4294960568;
LABEL_107:
              if (!*a4) {
                CFRelease(v54);
              }
              return v4;
            }
            goto LABEL_103;
          }
          goto LABEL_85;
        }
        goto LABEL_78;
      }
      return 4294960568;
    }
    return v4;
  }
  if (a2 != 1349676902)
  {
    if (a2 != 1466517097) {
      return v4;
    }
    CFStringRef theString1 = 0;
    CFTypeRef cf = 0;
    CFRetain(theData);
    CFRetain(v6);
    *a4 = v6;
    CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(v6, @"radios");
    if (!Value) {
      goto LABEL_30;
    }
    CFStringRef v9 = (const __CFString *)Value;
    CFIndex Count = CFArrayGetCount(Value);
    if (Count >= 1)
    {
      CFIndex v16 = Count;
      uint64_t v17 = 0;
      CFAllocatorRef alloc = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      while (1)
      {
        CFMutableDictionaryRef theDict = 0;
        sub_22686088C(v9, (uint64_t)&theDict, (UInt8 *)"[*]", v11, v12, v13, v14, v15, v17);
        if (v18)
        {
LABEL_83:
          uint64_t v4 = v18;
          goto LABEL_105;
        }
        if (!theDict) {
          break;
        }
        sub_22686088C((const __CFString *)theDict, (uint64_t)v98, (UInt8 *)"%kO:mac", v19, v20, v21, v22, v23, @"raMA");
        if (!v24)
        {
          *(_OWORD *)cStr = 0u;
          long long v100 = 0u;
          sub_22686F33C(v98, 6, cStr);
          CFStringRef v25 = CFStringCreateWithCString(alloc, cStr, 0x8000100u);
          CFTypeRef cf = v25;
          if (!v25) {
            goto LABEL_30;
          }
          CFDictionarySetValue(theDict, @"raMA", v25);
          CFRelease(cf);
        }
        CFStringRef v26 = (const __CFString *)CFDictionaryGetValue(theDict, @"raMO");
        CFStringRef theString1 = v26;
        if (v26)
        {
          CFTypeID v32 = CFGetTypeID(v26);
          if (v32 == CFStringGetTypeID()) {
            *(unsigned char *)(a1 + 385) = 1;
          }
        }
        sub_22686088C((const __CFString *)theDict, (uint64_t)&theString1, (UInt8 *)"%kO", v27, v28, v29, v30, v31, @"raCr");
        if (!v38)
        {
          CFStringRef v39 = theString1;
          CFTypeID v40 = CFStringGetTypeID();
          uint64_t v18 = sub_2268C6854(1918976882, v39, v40, &cf);
          if (v18) {
            goto LABEL_83;
          }
          CFDictionarySetValue(theDict, @"raCr", cf);
          CFRelease(cf);
        }
        sub_22686088C((const __CFString *)theDict, (uint64_t)&theString1, (UInt8 *)"%kO", v33, v34, v35, v36, v37, @"raI1");
        if (!v46 && CFEqual(theString1, @"0.0.0.0"))
        {
          CFStringRef theString1 = &stru_26DA6BE88;
          CFDictionarySetValue(theDict, @"raI1", &stru_26DA6BE88);
        }
        sub_22686088C((const __CFString *)theDict, (uint64_t)&theString1, (UInt8 *)"%kO", v41, v42, v43, v44, v45, @"raI2");
        if (!v47 && CFEqual(theString1, @"0.0.0.0"))
        {
          CFStringRef theString1 = &stru_26DA6BE88;
          CFDictionarySetValue(theDict, @"raI2", &stru_26DA6BE88);
        }
        uint64_t v18 = sub_2268C61A8(theDict);
        if (v18) {
          goto LABEL_83;
        }
        uint64_t v18 = sub_2268C660C(theDict);
        if (v18) {
          goto LABEL_83;
        }
        if (v16 == ++v17) {
          goto LABEL_30;
        }
      }
      uint64_t v4 = 4294967292;
    }
    else
    {
LABEL_30:
      uint64_t v4 = 0;
    }
LABEL_105:
    uint64_t v54 = 0;
LABEL_106:
    CFRelease(v6);
    if (!v54) {
      return v4;
    }
    goto LABEL_107;
  }

  return sub_226888614(a1, theData, a4);
}

uint64_t sub_226882E48(CFDictionaryRef *a1, uint64_t a2, CFStringRef *a3, unsigned char *a4, uint64_t a5)
{
  CFStringRef theString1 = 0;
  uint64_t v5 = 4294967292;
  if (!a3) {
    return v5;
  }
  if (!a4) {
    return v5;
  }
  int v8 = a2;
  *a3 = 0;
  uint64_t v10 = sub_22687D4B0(a1, a2, (CFNumberRef *)&theString1, a5);
  uint64_t v5 = v10;
  if (v10) {
    return v5;
  }
  if (!sub_2268824B8(v10, v8))
  {
    uint64_t v14 = 0;
    uint64_t v5 = sub_22683C258(v8, &v14);
    if (v5) {
      return v5;
    }
    int v12 = *((_DWORD *)v14 + 1);
    if (v12 == 7)
    {
      if (CFEqual(theString1, &stru_26DA6BE88))
      {
        CFStringRef v13 = @"0.0.0.0";
LABEL_18:
        CFStringRef theString1 = v13;
      }
    }
    else
    {
      if (v12 != 12)
      {
        if (v12 != 8 || CFStringCompare(theString1, &stru_26DA6BE88, 0)) {
          goto LABEL_19;
        }
        CFStringRef v13 = @"00:00:00:00:00:00";
        goto LABEL_18;
      }
      if (CFEqual(theString1, &stru_26DA6BE88))
      {
        CFStringRef v13 = @"::";
        goto LABEL_18;
      }
    }
LABEL_19:
    *a3 = theString1;
    *a4 = 0;
    return v5;
  }
  uint64_t v5 = sub_226882FA0((uint64_t)a1, v8, (const __CFNumber *)theString1, a3);
  if (!v5) {
    *a4 = 1;
  }
  return v5;
}

uint64_t sub_226882FA0(uint64_t a1, int a2, const __CFNumber *propertyList, CFStringRef *a4)
{
  uint64_t v4 = 4294967292;
  if (!propertyList || !a4) {
    return v4;
  }
  uint64_t v4 = 4294967286;
  if (a2 > 1886547537)
  {
    if (a2 > 2002862933)
    {
      if (a2 == 2002862934)
      {
        LODWORD(theString1) = 0;
        LODWORD(cf) = 0;
        if (!CFNumberGetValue(propertyList, kCFNumberSInt32Type, &cf)) {
          return 4294960553;
        }
        sub_22686088C(*(const __CFString **)(a1 + 32), (uint64_t)&theString1, (UInt8 *)"%kC:int", v71, v72, v73, v74, v75, 2002862934);
        if (!v19)
        {
          if (((unsigned __int16)cf & 0x400) != 0)
          {
            unsigned int v77 = theString1 & 0xFFFFF0FF | 0x400;
          }
          else
          {
            unsigned int v76 = theString1 & 0xFFFFF0FF;
            if ((~cf & 0x900) != 0) {
              unsigned int v77 = v76 | 0x300;
            }
            else {
              unsigned int v77 = v76 | 0x900;
            }
          }
          LODWORD(theString1) = v77;
          uint64_t v4 = 0;
          *a4 = (CFStringRef)CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &theString1);
          return v4;
        }
        return v19;
      }
      if (a2 != 2003061875) {
        return v4;
      }
      CFIndex Count = CFArrayGetCount(propertyList);
      size_t v49 = 40 * Count + 16;
      uint64_t v57 = malloc_type_malloc(v49, 0xB1E239B3uLL);
      if (v57)
      {
        uint64_t v51 = v57;
        bzero(v57, v49);
        *uint64_t v51 = 0;
        v51[1] = bswap32(Count);
        if (Count >= 1)
        {
          CFIndex v58 = 0;
          uint64_t v59 = (uint64_t)(v51 + 4);
          do
          {
            CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(propertyList, v58);
            if (!ValueAtIndex) {
              goto LABEL_76;
            }
            if ((sub_2268A0314(ValueAtIndex, v59, (unsigned char *)(v59 + 6), 0x14uLL) & 1) == 0)
            {
LABEL_77:
              uint64_t v4 = 0xFFFFFFFFLL;
              goto LABEL_78;
            }
            ++v58;
            v59 += 40;
          }
          while (Count != v58);
        }
        int v55 = 2003061875;
        goto LABEL_70;
      }
    }
    else
    {
      if (a2 != 1886547538)
      {
        if (a2 != 1918976882) {
          return v4;
        }
        CFTypeID TypeID = CFDataGetTypeID();
        return sub_2268C6854(1918976882, (const __CFString *)propertyList, TypeID, a4);
      }
      CFIndex v61 = CFArrayGetCount(propertyList);
      size_t v49 = 720 * v61 + 16;
      uint64_t v62 = malloc_type_malloc(v49, 0x863190E7uLL);
      if (v62)
      {
        uint64_t v51 = v62;
        bzero(v62, v49);
        *uint64_t v51 = 50331648;
        v51[1] = bswap32(v61);
        if (v61 >= 1)
        {
          CFIndex v63 = 0;
          CFAllocatorRef v64 = v51;
          do
          {
            CFDictionaryRef v65 = (const __CFDictionary *)CFArrayGetValueAtIndex(propertyList, v63);
            if (!v65) {
              goto LABEL_76;
            }
            if (!sub_2268A0610(v65, (uint64_t)(v64 + 8))) {
              goto LABEL_77;
            }
            v64[8] = bswap32((unsigned __int16)v64[8]) >> 16;
            v64[9] = bswap32((unsigned __int16)v64[9]) >> 16;
            v64[367] = bswap32((unsigned __int16)v64[367]) >> 16;
            ++v63;
            v64 += 360;
          }
          while (v61 != v63);
        }
        int v55 = 1886547538;
        goto LABEL_70;
      }
    }
    return 4294960568;
  }
  if (a2 > 1633899616)
  {
    if (a2 == 1633899617)
    {
      CFIndex v66 = CFArrayGetCount(propertyList);
      size_t v49 = 40 * v66 + 16;
      unint64_t v67 = malloc_type_malloc(v49, 0xCF00DC24uLL);
      if (v67)
      {
        uint64_t v51 = v67;
        bzero(v67, v49);
        *uint64_t v51 = 0;
        v51[1] = bswap32(v66);
        if (v66 >= 1)
        {
          CFIndex v68 = 0;
          uint64_t v69 = (uint64_t)(v51 + 4);
          do
          {
            CFDictionaryRef v70 = (const __CFDictionary *)CFArrayGetValueAtIndex(propertyList, v68);
            if (!v70) {
              goto LABEL_76;
            }
            if ((sub_2268A0314(v70, v69, (unsigned char *)(v69 + 6), 0x14uLL) & 1) == 0) {
              goto LABEL_77;
            }
            ++v68;
            v69 += 40;
          }
          while (v66 != v68);
        }
        int v55 = 1633899617;
LABEL_70:
        uint64_t v4 = sub_22683F308(v55, (unsigned __int8 *)v51, v49, 1, a4);
LABEL_78:
        free(v51);
        return v4;
      }
    }
    else
    {
      if (a2 != 1886213217) {
        return v4;
      }
      CFIndex v48 = CFArrayGetCount(propertyList);
      size_t v49 = 8 * v48 + 16;
      unint64_t v50 = malloc_type_malloc(v49, 0x8BCCD48AuLL);
      if (v50)
      {
        uint64_t v51 = v50;
        bzero(v50, v49);
        *uint64_t v51 = 0;
        v51[1] = bswap32(v48);
        if (v48 >= 1)
        {
          CFIndex v52 = 0;
          uint64_t v53 = (uint64_t)(v51 + 4);
          while (1)
          {
            CFDictionaryRef v54 = (const __CFDictionary *)CFArrayGetValueAtIndex(propertyList, v52);
            if (!v54) {
              break;
            }
            if (!sub_2268A0890(v54, v53)) {
              goto LABEL_77;
            }
            *(_DWORD *)uint64_t v53 = bswap32(*(_DWORD *)v53);
            *(_WORD *)(v53 + 4) = bswap32(*(unsigned __int16 *)(v53 + 4)) >> 16;
            *(_WORD *)(v53 + 6) = bswap32(*(unsigned __int16 *)(v53 + 6)) >> 16;
            ++v52;
            v53 += 8;
            if (v48 == v52) {
              goto LABEL_43;
            }
          }
LABEL_76:
          uint64_t v4 = 4294967291;
          goto LABEL_78;
        }
LABEL_43:
        int v55 = 1886213217;
        goto LABEL_70;
      }
    }
    return 4294960568;
  }
  if (a2 != 1349676902)
  {
    if (a2 == 1466517097)
    {
      CFTypeRef cf = 0;
      CFStringRef theString1 = 0;
      CFDictionaryRef DeepCopy = (const __CFDictionary *)CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], propertyList, 2uLL);
      if (!DeepCopy) {
        return 4294967293;
      }
      *a4 = (CFStringRef)DeepCopy;
      CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(DeepCopy, @"radios");
      if (!Value) {
        return 4294967293;
      }
      CFStringRef v10 = (const __CFString *)Value;
      CFIndex v11 = CFArrayGetCount(Value);
      if (v11 >= 1)
      {
        CFIndex v17 = v11;
        uint64_t v18 = 0;
        while (1)
        {
          CFTypeRef v78 = 0;
          CFMutableDictionaryRef theDict = 0;
          sub_22686088C(v10, (uint64_t)&theDict, (UInt8 *)"[*]", v12, v13, v14, v15, v16, v18);
          if (v19) {
            break;
          }
          if (!theDict) {
            return 4294967292;
          }
          sub_22686088C((const __CFString *)theDict, (uint64_t)&v78, (UInt8 *)"%kO", v20, v21, v22, v23, v24, @"raMA");
          if (!v30)
          {
            uint64_t v19 = sub_22683F68C(1918979393, (const __CFString *)v78, 1, (CFDataRef *)&cf);
            if (v19) {
              return v19;
            }
            CFDictionarySetValue(theDict, @"raMA", cf);
            CFRelease(cf);
          }
          sub_22686088C((const __CFString *)theDict, (uint64_t)&theString1, (UInt8 *)"%kO", v25, v26, v27, v28, v29, @"raCr");
          if (!v36)
          {
            CFStringRef v37 = theString1;
            CFTypeID v38 = CFDataGetTypeID();
            uint64_t v19 = sub_2268C6854(1918976882, v37, v38, &cf);
            if (v19) {
              return v19;
            }
            CFDictionarySetValue(theDict, @"raCr", cf);
            CFRelease(cf);
          }
          sub_22686088C((const __CFString *)theDict, (uint64_t)&theString1, (UInt8 *)"%kO", v31, v32, v33, v34, v35, @"raI1");
          if (!v44 && CFEqual(theString1, &stru_26DA6BE88))
          {
            CFStringRef theString1 = @"0.0.0.0";
            CFDictionarySetValue(theDict, @"raI1", @"0.0.0.0");
          }
          sub_22686088C((const __CFString *)theDict, (uint64_t)&theString1, (UInt8 *)"%kO", v39, v40, v41, v42, v43, @"raI2");
          if (!v45 && CFEqual(theString1, &stru_26DA6BE88))
          {
            CFStringRef theString1 = @"0.0.0.0";
            CFDictionarySetValue(theDict, @"raI2", @"0.0.0.0");
          }
          uint64_t v19 = sub_2268C63E4(theDict);
          if (v19) {
            return v19;
          }
          uint64_t v19 = sub_2268C6A60(theDict);
          if (v19) {
            return v19;
          }
          if (v17 == ++v18) {
            return 0;
          }
        }
        return v19;
      }
      return 0;
    }
    return v4;
  }

  return sub_22688874C(a1, (uint64_t)propertyList, (CFTypeRef *)a4);
}

uint64_t sub_2268836AC(uint64_t a1, uint64_t a2, CFStringRef *a3, unsigned char *a4)
{
  int v8 = (pthread_mutex_t *)(a1 + 392);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 392));
  ++*(_DWORD *)(a1 + 456);
  uint64_t v9 = sub_226882E48((CFDictionaryRef *)a1, a2, a3, a4, 0);
  uint64_t v10 = v9;
  if (a3 && !v9 && *a3)
  {
    if (!*a4) {
      CFRetain(*a3);
    }
    *a4 = 1;
  }
  --*(_DWORD *)(a1 + 456);
  pthread_mutex_unlock(v8);
  return v10;
}

void sub_226883758(_Unwind_Exception *a1)
{
  --*(_DWORD *)(v2 + 456);
  pthread_mutex_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_22688377C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(char *)(a2 + 23) >= 0) {
    int v8 = (const char *)a2;
  }
  else {
    int v8 = *(const char **)a2;
  }
  int v9 = sub_22688BA8C(v8);
  if (v9 <= 1651722562)
  {
    if (v9 <= 1651721067)
    {
      if (v9 > 1651720514)
      {
        if (v9 > 1651720788)
        {
          if (v9 <= 1651721024)
          {
            if (v9 == 1651720789)
            {
              uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 992);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            }
            if (v9 == 1651720791)
            {
              uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 776);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            }
          }
          else
          {
            switch(v9)
            {
              case 1651721025:
                uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1184);
                uint64_t v11 = a1;
                uint64_t v12 = a2;
                uint64_t v13 = a3;
                uint64_t v14 = a4;
                return v10(v11, v12, v13, v14);
              case 1651721027:
                uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 232);
                uint64_t v11 = a1;
                uint64_t v12 = a2;
                uint64_t v13 = a3;
                uint64_t v14 = a4;
                return v10(v11, v12, v13, v14);
              case 1651721040:
                uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1216);
                uint64_t v11 = a1;
                uint64_t v12 = a2;
                uint64_t v13 = a3;
                uint64_t v14 = a4;
                return v10(v11, v12, v13, v14);
            }
          }
        }
        else if (v9 <= 1651720520)
        {
          if (v9 == 1651720515)
          {
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 152);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
          if (v9 == 1651720519)
          {
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 928);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
        }
        else
        {
          switch(v9)
          {
            case 1651720521:
              uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 912);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            case 1651720532:
              uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 456);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            case 1651720788:
              uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1088);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
          }
        }
      }
      else if (v9 > 1651717698)
      {
        if (v9 <= 1651717711)
        {
          if (v9 == 1651717699)
          {
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1104);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
          if (v9 == 1651717709)
          {
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1120);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
        }
        else
        {
          switch(v9)
          {
            case 1651717712:
              uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1200);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            case 1651717715:
              uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1136);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            case 1651718221:
              uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 824);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
          }
        }
      }
      else if (v9 <= 1651717453)
      {
        if (v9 == 1651716685)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 896);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 == 1651717453)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 880);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
      }
      else
      {
        switch(v9)
        {
          case 1651717454:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 848);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651717459:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 864);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651717697:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1168);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
        }
      }
    }
    else
    {
      if (v9 > 1651721804)
      {
        switch(v9)
        {
          case 1651722049:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 520);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722050:
          case 1651722054:
          case 1651722055:
          case 1651722056:
          case 1651722057:
          case 1651722058:
          case 1651722060:
          case 1651722063:
          case 1651722065:
          case 1651722066:
            return 4294967292;
          case 1651722051:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 712);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722052:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 696);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722053:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 632);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722059:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 424);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722061:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 792);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722062:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 648);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722064:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 680);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722067:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 664);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          default:
            if (v9 == 1651721805)
            {
              uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 536);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
            }
            else
            {
              if (v9 != 1651721811) {
                return 4294967292;
              }
              uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 472);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
            }
            break;
        }
        return v10(v11, v12, v13, v14);
      }
      if (v9 > 1651721295)
      {
        if (v9 <= 1651721538)
        {
          if (v9 == 1651721296)
          {
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 40);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
          if (v9 == 1651721299)
          {
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1056);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
        }
        else
        {
          switch(v9)
          {
            case 1651721539:
              uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1008);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            case 1651721552:
              uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1024);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            case 1651721797:
              uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1152);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
          }
        }
      }
      else if (v9 <= 1651721281)
      {
        if (v9 == 1651721068)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1072);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 == 1651721281)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 584);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
      }
      else
      {
        switch(v9)
        {
          case 1651721282:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 760);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651721289:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 200);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651721294:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1040);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
        }
      }
    }
    return 4294967292;
  }
  if (v9 > 1651725130)
  {
    if (v9 <= 1651725650)
    {
      if (v9 <= 1651725391)
      {
        switch(v9)
        {
          case 1651725131:
            goto LABEL_139;
          case 1651725132:
          case 1651725135:
          case 1651725136:
          case 1651725137:
          case 1651725138:
            return 4294967292;
          case 1651725133:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 104);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651725134:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 344);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651725139:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 568);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          default:
            if (v9 != 1651725143) {
              return 4294967292;
            }
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 360);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            break;
        }
        return v10(v11, v12, v13, v14);
      }
      if (v9 <= 1651725632)
      {
        if (v9 == 1651725392)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 216);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 == 1651725402)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 552);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
      }
      else
      {
        switch(v9)
        {
          case 1651725633:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 184);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651725634:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 744);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651725648:
            uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 832);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
        }
      }
      return 4294967292;
    }
    if (v9 <= 1651726159)
    {
      if (v9 > 1651726149)
      {
        if (v9 == 1651726150)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 504);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 == 1651726157)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 296);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
      }
      else
      {
        if (v9 == 1651725651)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 960);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 == 1651726147)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 408);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
      }
    }
    else
    {
      if (v9 > 1651733075)
      {
        if (v9 == 1651733076)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 == 1918976882)
        {
LABEL_139:
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 72);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 != 1918979693) {
          return 4294967292;
        }
LABEL_181:
        uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 88);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
      if (v9 == 1651726160)
      {
        uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 392);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
      if (v9 == 1651726165)
      {
        uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 976);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
    }
    return 4294967292;
  }
  if (v9 <= 1651724357)
  {
    if (v9 <= 1651723855)
    {
      if (v9 > 1651723636)
      {
        if (v9 == 1651723637)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 808);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 == 1651723853)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 440);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
      }
      else
      {
        if (v9 == 1651722563)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 168);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 == 1651722583)
        {
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 600);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
      }
    }
    else if (v9 <= 1651724337)
    {
      if (v9 == 1651723856)
      {
        uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 248);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
      if (v9 == 1651724337)
      {
        uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 264);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
    }
    else
    {
      switch(v9)
      {
        case 1651724338:
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 280);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        case 1651724355:
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 312);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        case 1651724357:
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 728);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
      }
    }
    return 4294967292;
  }
  if (v9 > 1651724866)
  {
    if (v9 <= 1651724876)
    {
      if (v9 == 1651724867)
      {
        uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 120);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
      if (v9 == 1651724870)
      {
        uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 488);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
    }
    else
    {
      switch(v9)
      {
        case 1651724877:
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 328);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        case 1651724878:
          goto LABEL_181;
        case 1651724880:
          uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 376);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
      }
    }
    return 4294967292;
  }
  uint64_t v15 = 0;
  if (v9 > 1651724370)
  {
    if (v9 == 1651724371)
    {
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 616);
      uint64_t v11 = a1;
      uint64_t v12 = a2;
      uint64_t v13 = a3;
      uint64_t v14 = a4;
      return v10(v11, v12, v13, v14);
    }
    unsigned __int16 v16 = 20565;
  }
  else
  {
    if (v9 == 1651724358)
    {
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 944);
      uint64_t v11 = a1;
      uint64_t v12 = a2;
      uint64_t v13 = a3;
      uint64_t v14 = a4;
      return v10(v11, v12, v13, v14);
    }
    unsigned __int16 v16 = 20560;
  }
  if (v9 != (v16 | 0x62730000)) {
    return 4294967292;
  }
  return v15;
}

uint64_t sub_226885770(CFDictionaryRef *a1, uint64_t a2, CFMutableDictionaryRef *a3, uint64_t a4)
{
  uint64_t v49 = *MEMORY[0x263EF8340];
  memset(&v45, 0, sizeof(v45));
  memset(&__p, 0, sizeof(__p));
  unsigned int v43 = 0;
  CFTypeRef cf = 0;
  if (!a3)
  {
    uint64_t v9 = 4294967292;
    goto LABEL_18;
  }
  *a3 = 0;
  std::string::basic_string(&__str, (const std::string *)a2, 0, 4uLL, (std::allocator<char> *)&__s);
  std::string::operator=(&v45, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (*(char *)(a2 + 23) >= 0) {
    int v8 = (char *)a2;
  }
  else {
    int v8 = *(char **)a2;
  }
  uint64_t v9 = sub_22683C470(v8, 4uLL, &v43);
  if (!v9)
  {
    uint64_t v10 = sub_22687D4B0(a1, v43, (CFNumberRef *)&cf, a4);
    uint64_t v9 = v10;
    if (v10 == -5)
    {
      if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u)))
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v15 = a2;
        }
        else {
          uint64_t v15 = *(void *)a2;
        }
        sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::GetPropertyCFInternal(const std::string &, CFTypeRef *, eWhichValue) const", 8000, (uint64_t)"Need default value for %s\n", v11, v12, v13, v14, v15);
      }
      uint64_t v9 = 4294967291;
      goto LABEL_18;
    }
    if (a4 != 2 || !v10)
    {
      unint64_t v17 = *(unsigned __int8 *)(a2 + 23);
      if ((v17 & 0x80u) != 0) {
        unint64_t v17 = *(void *)(a2 + 8);
      }
      if (v17 >= 5)
      {
        std::string::basic_string(&__str, (const std::string *)a2, 5uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&__s);
        std::string::operator=(&__p, &__str);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
      }
      if (cf)
      {
        std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type size = __p.__r_.__value_.__l.__size_;
        }
        if (!size)
        {
          *a3 = (CFMutableDictionaryRef)cf;
          goto LABEL_18;
        }
        CFTypeID v19 = CFGetTypeID(cf);
        if (v19 != CFDictionaryGetTypeID())
        {
          CFTypeID v20 = CFGetTypeID(cf);
          if (v20 != CFArrayGetTypeID())
          {
            uint64_t v9 = 4294960540;
            goto LABEL_18;
          }
        }
        if (sub_22687EFBC((uint64_t)a1, (std::string *)a2))
        {
          if (*(char *)(a2 + 23) < 0) {
            sub_22689EF14(&__str, *(void **)a2, *(void *)(a2 + 8));
          }
          else {
            std::string __str = *(std::string *)a2;
          }
          if (!sub_22687F130((uint64_t *)&__str, "WiFi.radios.[*].", 0))
          {
            uint64_t v21 = sub_226880258((uint64_t)a1, 0);
            snprintf((char *)&__s, 0x10uLL, "%ld", v21);
            std::string::size_type v22 = sub_22687F130((uint64_t *)&__str, "*", 0);
            std::string::replace(&__str, v22, 1uLL, (const std::string::value_type *)&__s);
          }
          uint64_t v23 = sub_226885F84((uint64_t)a1, (uint64_t)&__str, (uint64_t)a3, a4);
        }
        else
        {
          if (*(char *)(a2 + 23) < 0) {
            sub_22689EF14(&__str, *(void **)a2, *(void *)(a2 + 8));
          }
          else {
            std::string __str = *(std::string *)a2;
          }
          if (!sub_22687F130((uint64_t *)&__str, "WiFi.radios.[*].", 0))
          {
            uint64_t v24 = sub_226880258((uint64_t)a1, 0);
            snprintf(v48, 0x10uLL, "%ld", v24);
            std::string::size_type v25 = sub_22687F130((uint64_t *)&__str, "*", 0);
            std::string::replace(&__str, v25, 1uLL, v48);
            std::string::basic_string(&__s, &__str, 5uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v46);
            std::string::operator=(&__p, &__s);
            if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__s.__r_.__value_.__l.__data_);
            }
          }
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            p_p = &__p;
          }
          else {
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          if (sub_22688BA8C((const char *)p_p) == 2003061875)
          {
            sub_22689F090(&__s, "legacywds");
            sub_226881624((unsigned __int8 *)&__p, (uint64_t)&__s, &__p);
            if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__s.__r_.__value_.__l.__data_);
            }
          }
          if (sub_22687F130((uint64_t *)a2, "vaps.[*]", 0) != -1)
          {
            uint64_t v9 = (*((uint64_t (**)(CFDictionaryRef *, CFTypeRef, uint64_t, void, std::string *))*a1 + 3))(a1, cf, a2, 0, &__p);
            if (v9) {
              goto LABEL_74;
            }
          }
          uint64_t v32 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
              ? &__p
              : (std::string *)__p.__r_.__value_.__r.__words[0];
          sub_22686088C((const __CFString *)cf, (uint64_t)a3, (UInt8 *)v32, v27, v28, v29, v30, v31, v40);
          uint64_t v9 = v33;
          if (v33 != -5 && v33 != -6727) {
            goto LABEL_74;
          }
          if (a4 == 2)
          {
            uint64_t v9 = sub_22687DD5C((uint64_t)a1, (std::string *)a2, a3);
            if (!v9)
            {
              if (*a3)
              {
                if (*(char *)(a2 + 23) >= 0) {
                  uint64_t v39 = a2;
                }
                else {
                  uint64_t v39 = *(void *)a2;
                }
                uint64_t v9 = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], a1[6], (uint64_t)"%ks=%O", v34, v35, v36, v37, v38, v39);
                CFRelease(*a3);
              }
              else
              {
                uint64_t v9 = 0;
              }
            }
            goto LABEL_74;
          }
          uint64_t v23 = sub_226885770(a1, a2, a3, 2);
        }
        uint64_t v9 = v23;
LABEL_74:
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
      }
    }
  }
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226885CBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (*(char *)(v30 - 73) < 0) {
    operator delete(*(void **)(v30 - 96));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226885D44(int a1, std::string *__str, const __CFString *a3, void *a4, unsigned char *a5)
{
  uint64_t result = 4294967292;
  if (a4 && a5)
  {
    if (a3)
    {
      uint64_t v19 = 0;
      int v18 = 0;
      sub_22687EA70(__str, (unsigned int *)&v18, 0);
      uint64_t result = sub_22688BCB4(v10, __str, (_DWORD *)&v19 + 1, &v19);
      if (!result)
      {
        CFTypeID v11 = CFGetTypeID(a3);
        uint64_t result = 4294967286;
        switch(HIDWORD(v19))
        {
          case 1:
          case 0xB:
            CFTypeID TypeID = CFDataGetTypeID();
            goto LABEL_28;
          case 2:
            CFTypeID TypeID = CFStringGetTypeID();
            goto LABEL_28;
          case 3:
            goto LABEL_16;
          case 4:
            if (v11 != CFBooleanGetTypeID()) {
              goto LABEL_16;
            }
            __int16 valuePtr = *MEMORY[0x263EFFB38] != (void)a3;
            CFNumberRef v13 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt16Type, &valuePtr);
            *a4 = v13;
            if (v13)
            {
              uint64_t result = 0;
              goto LABEL_15;
            }
            uint64_t result = 4294967293;
            break;
          case 5:
            if (v19 == 8 && v11 == CFBooleanGetTypeID())
            {
              int v14 = v18;
              CFTypeID v15 = CFNumberGetTypeID();
              uint64_t result = sub_2268C6854(v14, a3, v15, a4);
              if (!result) {
LABEL_15:
              }
                *a5 = 1;
            }
            else
            {
LABEL_16:
              CFTypeID TypeID = CFNumberGetTypeID();
LABEL_28:
              if (v11 == TypeID)
              {
LABEL_29:
                uint64_t result = 0;
                *a4 = a3;
              }
              else
              {
LABEL_30:
                uint64_t result = 4294967292;
              }
            }
            break;
          case 6:
            CFTypeID TypeID = CFBooleanGetTypeID();
            goto LABEL_28;
          case 7:
            if (v11 != CFStringGetTypeID()) {
              goto LABEL_30;
            }
            CFStringRef v16 = @"0.0.0.0";
            goto LABEL_24;
          case 8:
            if (v11 != CFStringGetTypeID()) {
              goto LABEL_30;
            }
            CFStringRef v16 = @"00:00:00:00:00:00";
            goto LABEL_24;
          case 9:
            goto LABEL_29;
          case 0xC:
            if (v11 != CFStringGetTypeID()) {
              goto LABEL_30;
            }
            CFStringRef v16 = @"::";
LABEL_24:
            uint64_t result = CFStringCompare(a3, v16, 0);
            if (result) {
              goto LABEL_29;
            }
            *a4 = &stru_26DA6BE88;
            return result;
          case 0xD:
            if (v11 == CFDictionaryGetTypeID()) {
              goto LABEL_29;
            }
            CFTypeID TypeID = CFArrayGetTypeID();
            goto LABEL_28;
          default:
            return result;
        }
      }
    }
    else
    {
      uint64_t result = 0;
      *a4 = 0;
      *a5 = 0;
    }
  }
  return result;
}

uint64_t sub_226885F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(char *)(a2 + 23) >= 0) {
    int v8 = (const char *)a2;
  }
  else {
    int v8 = *(const char **)a2;
  }
  int v9 = sub_22688BA8C(v8);
  if (v9 <= 1651722562)
  {
    if (v9 <= 1651721067)
    {
      if (v9 > 1651720514)
      {
        if (v9 > 1651720788)
        {
          if (v9 <= 1651721024)
          {
            if (v9 == 1651720789)
            {
              int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1000);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            }
            if (v9 == 1651720791)
            {
              int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 768);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            }
          }
          else
          {
            switch(v9)
            {
              case 1651721025:
                int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1192);
                uint64_t v11 = a1;
                uint64_t v12 = a2;
                uint64_t v13 = a3;
                uint64_t v14 = a4;
                return v10(v11, v12, v13, v14);
              case 1651721027:
                int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 224);
                uint64_t v11 = a1;
                uint64_t v12 = a2;
                uint64_t v13 = a3;
                uint64_t v14 = a4;
                return v10(v11, v12, v13, v14);
              case 1651721040:
                int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1224);
                uint64_t v11 = a1;
                uint64_t v12 = a2;
                uint64_t v13 = a3;
                uint64_t v14 = a4;
                return v10(v11, v12, v13, v14);
            }
          }
        }
        else if (v9 <= 1651720520)
        {
          if (v9 == 1651720515)
          {
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 144);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
          if (v9 == 1651720519)
          {
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 936);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
        }
        else
        {
          switch(v9)
          {
            case 1651720521:
              int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 920);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            case 1651720532:
              int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 448);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            case 1651720788:
              int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1096);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
          }
        }
      }
      else if (v9 > 1651717698)
      {
        if (v9 <= 1651717711)
        {
          if (v9 == 1651717699)
          {
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1112);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
          if (v9 == 1651717709)
          {
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1128);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
        }
        else
        {
          switch(v9)
          {
            case 1651717712:
              int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1208);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            case 1651717715:
              int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1144);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            case 1651718221:
              int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 816);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
          }
        }
      }
      else if (v9 <= 1651717453)
      {
        if (v9 == 1651716685)
        {
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 904);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 == 1651717453)
        {
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 888);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
      }
      else
      {
        switch(v9)
        {
          case 1651717454:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 856);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651717459:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 872);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651717697:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1176);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
        }
      }
    }
    else
    {
      if (v9 > 1651721804)
      {
        switch(v9)
        {
          case 1651722049:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 512);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722050:
          case 1651722054:
          case 1651722055:
          case 1651722056:
          case 1651722057:
          case 1651722058:
          case 1651722060:
          case 1651722063:
          case 1651722065:
          case 1651722066:
            return 4294967292;
          case 1651722051:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 704);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722052:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 688);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722053:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 624);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722059:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 416);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722061:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 784);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722062:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 640);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722064:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 672);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651722067:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 656);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          default:
            if (v9 == 1651721805)
            {
              int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 528);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
            }
            else
            {
              if (v9 != 1651721811) {
                return 4294967292;
              }
              int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 464);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
            }
            break;
        }
        return v10(v11, v12, v13, v14);
      }
      if (v9 > 1651721295)
      {
        if (v9 <= 1651721538)
        {
          if (v9 == 1651721296)
          {
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
          if (v9 == 1651721299)
          {
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1064);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
        }
        else
        {
          switch(v9)
          {
            case 1651721539:
              int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1016);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            case 1651721552:
              int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1032);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
            case 1651721797:
              int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1160);
              uint64_t v11 = a1;
              uint64_t v12 = a2;
              uint64_t v13 = a3;
              uint64_t v14 = a4;
              return v10(v11, v12, v13, v14);
          }
        }
      }
      else if (v9 <= 1651721281)
      {
        if (v9 == 1651721068)
        {
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1080);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 == 1651721281)
        {
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 576);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
      }
      else
      {
        switch(v9)
        {
          case 1651721282:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 752);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651721289:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 192);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651721294:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 1048);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
        }
      }
    }
    return 4294967292;
  }
  if (v9 <= 1651725130)
  {
    if (v9 <= 1651724357)
    {
      if (v9 <= 1651723855)
      {
        if (v9 > 1651723636)
        {
          if (v9 == 1651723637)
          {
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 800);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
          if (v9 == 1651723853)
          {
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 432);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
        }
        else
        {
          if (v9 == 1651722563)
          {
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 160);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
          if (v9 == 1651722583)
          {
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 592);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          }
        }
      }
      else if (v9 <= 1651724337)
      {
        if (v9 == 1651723856)
        {
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 240);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 == 1651724337)
        {
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 256);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
      }
      else
      {
        switch(v9)
        {
          case 1651724338:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 272);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651724355:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 304);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
          case 1651724357:
            int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 720);
            uint64_t v11 = a1;
            uint64_t v12 = a2;
            uint64_t v13 = a3;
            uint64_t v14 = a4;
            return v10(v11, v12, v13, v14);
        }
      }
      return 4294967292;
    }
    if (v9 <= 1651724866)
    {
      if (v9 > 1651724370)
      {
        if (v9 == 1651724371)
        {
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 608);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 == 1651724373)
        {
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
      }
      else
      {
        if (v9 == 1651724358)
        {
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 952);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
        if (v9 == 1651724368)
        {
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 56);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        }
      }
      return 4294967292;
    }
    if (v9 <= 1651724876)
    {
      if (v9 == 1651724867)
      {
        int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 112);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
      if (v9 == 1651724870)
      {
        int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 480);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
      return 4294967292;
    }
    if (v9 == 1651724877)
    {
      int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 320);
      uint64_t v11 = a1;
      uint64_t v12 = a2;
      uint64_t v13 = a3;
      uint64_t v14 = a4;
      return v10(v11, v12, v13, v14);
    }
    if (v9 != 1651724878)
    {
      if (v9 == 1651724880)
      {
        int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 368);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
      return 4294967292;
    }
    goto LABEL_150;
  }
  if (v9 <= 1651725650)
  {
    if (v9 <= 1651725391)
    {
      switch(v9)
      {
        case 1651725131:
          goto LABEL_142;
        case 1651725132:
        case 1651725135:
        case 1651725136:
        case 1651725137:
        case 1651725138:
          return 4294967292;
        case 1651725133:
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 96);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        case 1651725134:
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 336);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        case 1651725139:
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 560);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        default:
          if (v9 != 1651725143) {
            return 4294967292;
          }
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 352);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          break;
      }
      return v10(v11, v12, v13, v14);
    }
    if (v9 <= 1651725632)
    {
      if (v9 == 1651725392)
      {
        int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 208);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
      if (v9 == 1651725402)
      {
        int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 544);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
    }
    else
    {
      switch(v9)
      {
        case 1651725633:
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 176);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        case 1651725634:
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 736);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
        case 1651725648:
          int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 840);
          uint64_t v11 = a1;
          uint64_t v12 = a2;
          uint64_t v13 = a3;
          uint64_t v14 = a4;
          return v10(v11, v12, v13, v14);
      }
    }
    return 4294967292;
  }
  if (v9 <= 1651726159)
  {
    if (v9 > 1651726149)
    {
      if (v9 == 1651726150)
      {
        int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 496);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
      if (v9 == 1651726157)
      {
        int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 288);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
    }
    else
    {
      if (v9 == 1651725651)
      {
        int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 968);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
      if (v9 == 1651726147)
      {
        int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 400);
        uint64_t v11 = a1;
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = a4;
        return v10(v11, v12, v13, v14);
      }
    }
    return 4294967292;
  }
  if (v9 <= 1651733075)
  {
    if (v9 == 1651726160)
    {
      int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 384);
      uint64_t v11 = a1;
      uint64_t v12 = a2;
      uint64_t v13 = a3;
      uint64_t v14 = a4;
      return v10(v11, v12, v13, v14);
    }
    if (v9 == 1651726165)
    {
      int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 984);
      uint64_t v11 = a1;
      uint64_t v12 = a2;
      uint64_t v13 = a3;
      uint64_t v14 = a4;
      return v10(v11, v12, v13, v14);
    }
    return 4294967292;
  }
  switch(v9)
  {
    case 1651733076:
      int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 128);
      uint64_t v11 = a1;
      uint64_t v12 = a2;
      uint64_t v13 = a3;
      uint64_t v14 = a4;
      return v10(v11, v12, v13, v14);
    case 1918976882:
LABEL_142:
      int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 64);
      uint64_t v11 = a1;
      uint64_t v12 = a2;
      uint64_t v13 = a3;
      uint64_t v14 = a4;
      return v10(v11, v12, v13, v14);
    case 1918979693:
LABEL_150:
      int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 80);
      uint64_t v11 = a1;
      uint64_t v12 = a2;
      uint64_t v13 = a3;
      uint64_t v14 = a4;
      return v10(v11, v12, v13, v14);
  }
  return 4294967292;
}

uint64_t sub_226888014(int a1, int a2, const __CFString *a3, void *a4, unsigned char *a5)
{
  int v9 = sub_22683C448(a2, v13);
  sub_22689F090(&__p, v9);
  uint64_t v10 = sub_226885D44(a1, &__p, a3, a4, a5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_22688809C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_2268880B8(uint64_t a1, int a2)
{
  int v3 = *(char **)(a1 + 200);
  uint64_t v4 = *(char **)(a1 + 208);
  if (v4 == v3)
  {
    sub_22687B1F8(a1, 0);
    int v3 = *(char **)(a1 + 200);
    uint64_t v4 = *(char **)(a1 + 208);
  }
  unint64_t v6 = v4 - v3;
  if (v6 < 0xC) {
    return 0;
  }
  unint64_t v7 = v6 / 0xC - 1;
  do
  {
    int v8 = *(_DWORD *)v3;
    v3 += 12;
    BOOL result = v8 == a2;
  }
  while (v8 != a2 && v7-- != 0);
  return result;
}

uint64_t sub_226888134(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  CFNumberRef number = 0;
  uint64_t v5 = sub_2268820DC(a1, a2, &number, a4);
  if (!v5)
  {
    if (CFNumberGetValue(number, kCFNumberSInt32Type, a3)) {
      uint64_t v5 = 0;
    }
    else {
      uint64_t v5 = 4294960553;
    }
  }
  if (number) {
    CFRelease(number);
  }
  return v5;
}

uint64_t sub_22688819C(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  __int16 valuePtr = a3;
  CFStringRef v7 = (const __CFString *)CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt16Type, &valuePtr);
  if (!v7) {
    return 4294960568;
  }
  CFStringRef v8 = v7;
  uint64_t v9 = sub_2268809AC(a1, a2, v7, a4);
  CFRelease(v8);
  return v9;
}

uint64_t sub_226888224(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  CFNumberRef number = 0;
  uint64_t v5 = sub_2268820DC(a1, a2, &number, a4);
  if (!v5)
  {
    if (CFNumberGetValue(number, kCFNumberSInt16Type, a3)) {
      uint64_t v5 = 0;
    }
    else {
      uint64_t v5 = 4294960553;
    }
  }
  if (number) {
    CFRelease(number);
  }
  return v5;
}

uint64_t sub_22688828C(uint64_t a1, int a2, void *a3, uint64_t a4)
{
  sub_22683C448(a2, __s);
  sub_22689F090(__p, __s);
  uint64_t v7 = sub_226888224(a1, (uint64_t)__p, a3, a4);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  return v7;
}

void sub_22688830C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226888328(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4 = (const __CFString **)MEMORY[0x263EFFB40];
  if (!a3) {
    uint64_t v4 = (const __CFString **)MEMORY[0x263EFFB38];
  }
  return sub_2268809AC(a1, a2, *v4, a4);
}

uint64_t sub_226888348(uint64_t a1, uint64_t a2, BOOL *a3, uint64_t a4)
{
  BOOLeauint64_t n = 0;
  uint64_t v5 = sub_2268820DC(a1, a2, &BOOLean, a4);
  if (!v5) {
    *a3 = CFBooleanGetValue(BOOLean) != 0;
  }
  if (BOOLean) {
    CFRelease(BOOLean);
  }
  return v5;
}

uint64_t sub_2268883A8(uint64_t a1, int a2, BOOL *a3, uint64_t a4)
{
  sub_22683C448(a2, __s);
  sub_22689F090(__p, __s);
  uint64_t v7 = sub_226888348(a1, (uint64_t)__p, a3, a4);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  return v7;
}

void sub_226888428(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226888444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(char *)(a3 + 23) >= 0) {
    uint64_t v7 = (const char *)a3;
  }
  else {
    uint64_t v7 = *(const char **)a3;
  }
  CFStringRef v8 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], v7, 0x8000100u);
  if (!v8) {
    return 4294960568;
  }
  CFStringRef v9 = v8;
  uint64_t v10 = sub_2268809AC(a1, a2, v8, a4);
  CFRelease(v9);
  return v10;
}

uint64_t sub_2268884D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v13 = 0;
  CFTypeRef cf = 0;
  uint64_t v12 = 0;
  uint64_t v5 = sub_2268820DC(a1, a2, (CFMutableDictionaryRef *)&cf, a4);
  CFTypeRef v6 = cf;
  if (!v5 && cf)
  {
    CFTypeID v7 = CFGetTypeID(cf);
    CFTypeID TypeID = CFNumberGetTypeID();
    CFStringRef v9 = (const __CFString *)cf;
    if (v7 == TypeID)
    {
      int valuePtr = 0;
      if (CFNumberGetValue((CFNumberRef)cf, kCFNumberSInt32Type, &valuePtr))
      {
        snprintf(__str, 0x20uLL, "%ld", valuePtr);
        if (cf)
        {
          CFRelease(cf);
          CFTypeRef cf = 0;
        }
        CFStringRef v9 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], __str, 0x8000100u);
        CFTypeRef cf = v9;
        if (v9) {
          goto LABEL_8;
        }
        uint64_t v5 = 4294967293;
      }
      else
      {
        uint64_t v5 = 4294960553;
      }
LABEL_12:
      CFTypeRef v6 = cf;
      goto LABEL_13;
    }
LABEL_8:
    uint64_t v5 = sub_226861988(v9, &v13, (UInt8 **)&v12);
    if (!v5) {
      MEMORY[0x22A65ABB0](a3, v13);
    }
    goto LABEL_12;
  }
LABEL_13:
  if (v6)
  {
    CFRelease(v6);
    CFTypeRef cf = 0;
  }
  if (v12) {
    free(v12);
  }
  return v5;
}

uint64_t sub_226888614(uint64_t a1, CFDataRef theData, CFTypeRef *a3)
{
  uint64_t result = 4294960591;
  if (theData && a3)
  {
    BytePtr = CFDataGetBytePtr(theData);
    CFIndex Length = CFDataGetLength(theData);
    *a3 = 0;
    if (BytePtr && (unint64_t v9 = Length) != 0)
    {
      CFIndex v13 = 0;
      uint64_t v14 = 0;
      int v10 = sub_2268625B4((uint64_t)BytePtr, Length, &v14, (uLongf *)&v13);
      CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      if (v10)
      {
        uint64_t result = sub_22685F568((const __CFAllocator *)*MEMORY[0x263EFFB08], (uint64_t)BytePtr, v9, a3);
        if (result) {
          return result;
        }
      }
      else
      {
        CFDataRef v12 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], (const UInt8 *)v14, v13);
        free(v14);
        if (!v12) {
          return 4294960568;
        }
        *a3 = CFPropertyListCreateWithData(v11, v12, 2uLL, 0, 0);
        CFRelease(v12);
        if (!*a3) {
          return 4294960568;
        }
      }
    }
    else
    {
      *a3 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    }
    uint64_t result = 0;
    *(unsigned char *)(a1 + 373) = 1;
  }
  return result;
}

uint64_t sub_22688874C(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  CFIndex v15 = 0;
  uint64_t v16 = 0;
  uint64_t v3 = 4294960591;
  CFTypeRef cf = 0;
  if (!a2 || !a3)
  {
LABEL_13:
    if (v16) {
      free(v16);
    }
    return v3;
  }
  uint64_t v3 = sub_22688C090(a1, &cf);
  if (v3)
  {
LABEL_4:
    if (cf) {
      CFRelease(cf);
    }
    goto LABEL_13;
  }
  if (!cf)
  {
    uint64_t v3 = 4294960569;
    goto LABEL_13;
  }
  if (*(unsigned char *)(a1 + 372)) {
    goto LABEL_10;
  }
  if (sub_22687CBC8(a1, 1920159858))
  {
    CFDictionaryRemoveValue((CFMutableDictionaryRef)cf, @"profiles");
    CFDictionaryRemoveValue((CFMutableDictionaryRef)cf, @"currentProfile");
LABEL_10:
    BOOL v6 = sub_22687CBC8(a1, 1651534953);
    CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    if (v6)
    {
      uint64_t v3 = sub_22685EFD0((CFAllocatorRef)*MEMORY[0x263EFFB08], (const __CFString *)cf, a3);
    }
    else
    {
      CFDataRef Data = CFPropertyListCreateData((CFAllocatorRef)*MEMORY[0x263EFFB08], cf, kCFPropertyListXMLFormat_v1_0, 0, 0);
      if (Data)
      {
        CFDataRef v10 = Data;
        BytePtr = CFDataGetBytePtr(Data);
        uLong Length = CFDataGetLength(v10);
        uint64_t v3 = sub_226862494(BytePtr, Length, &v16, (uLongf *)&v15);
        CFRelease(v10);
        if (!v3)
        {
          CFDataRef v13 = CFDataCreate(v7, (const UInt8 *)v16, v15);
          *a3 = v13;
          if (v13) {
            uint64_t v3 = 0;
          }
          else {
            uint64_t v3 = 4294960568;
          }
        }
      }
      else
      {
        uint64_t v3 = 4294960568;
      }
    }
    goto LABEL_4;
  }
  if (cf) {
    CFRelease(cf);
  }
  return 4294960576;
}

BOOL sub_2268888D0(uint64_t a1, int a2)
{
  int v4 = 0;
  sub_2268A6104(a2, &v4);
  return !v4 || sub_22687CBC8(a1, v4);
}

BOOL sub_226888924(CFDataRef theData, int a2)
{
  BOOL result = 0;
  if (theData && a2)
  {
    BytePtr = CFDataGetBytePtr(theData);
    unint64_t Length = CFDataGetLength(theData);
    if (Length >= 4)
    {
      uint64_t v7 = (Length >> 2) - 1;
      do
      {
        unsigned int v8 = *(_DWORD *)BytePtr;
        BytePtr += 4;
        unsigned int v9 = bswap32(v8);
        BOOL result = v9 == a2;
      }
      while (v9 != a2 && v7-- != 0);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

__CFArray *sub_2268889A4(uint64_t a1)
{
  CFTypeRef cf = 0;
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  if (!sub_22687CDBC(a1, 1717920116, &cf, 0))
  {
    if (!cf) {
      return Mutable;
    }
    CFTypeID v4 = CFGetTypeID(cf);
    if (v4 == CFDataGetTypeID())
    {
      BytePtr = CFDataGetBytePtr((CFDataRef)cf);
      unint64_t Length = CFDataGetLength((CFDataRef)cf);
      if (Length >= 4)
      {
        uint64_t v12 = (Length >> 2) - 1;
        do
        {
          unsigned int v13 = *(_DWORD *)BytePtr;
          BytePtr += 4;
          if (sub_226860774(v2, Mutable, (uint64_t)"%C", v7, v8, v9, v10, v11, bswap32(v13))) {
            BOOL v14 = 1;
          }
          else {
            BOOL v14 = v12 == 0;
          }
          --v12;
        }
        while (!v14);
      }
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  return Mutable;
}

uint64_t sub_226888AAC(uint64_t a1, CFMutableArrayRef theArray)
{
  if (!theArray) {
    return 4294967292;
  }
  if (!*(void *)(a1 + 40)) {
    return 0;
  }
  CFArrayRemoveAllValues(theArray);
  CFIndex Count = CFDictionaryGetCount(*(CFDictionaryRef *)(a1 + 40));
  if (Count < 1) {
    return 0;
  }
  CFIndex v5 = Count;
  BOOL v6 = (const void **)malloc_type_malloc(8 * Count, 0x80040B8603338uLL);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  CFDictionaryGetKeysAndValues(*(CFDictionaryRef *)(a1 + 40), v6, 0);
  if (!*v7)
  {
LABEL_22:
    uint64_t v11 = 0;
    goto LABEL_26;
  }
  uint64_t v8 = (const __CFString **)v7;
  while (*v8)
  {
    int v9 = sub_226888C0C(*v8);
    if (v9 > 1936017003)
    {
      if (v9 == 1936017004 || v9 == 1953066341) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    if (v9 == 1349676902)
    {
      if (!*(unsigned char *)(a1 + 372) && !sub_226888C70(a1)) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    if (v9 != 1668573549)
    {
      if (!v9) {
        break;
      }
LABEL_20:
      CFArrayAppendValue(theArray, *v8);
    }
LABEL_21:
    ++v8;
    if (!--v5) {
      goto LABEL_22;
    }
  }
  uint64_t v11 = 4294967291;
LABEL_26:
  free(v7);
  return v11;
}

const char *sub_226888C0C(const __CFString *a1)
{
  uint64_t v3 = 0;
  if (!a1) {
    return 0;
  }
  if (sub_226861A84(a1, (char **)&v3)) {
    uint64_t v1 = 0;
  }
  else {
    uint64_t v1 = sub_22688BA8C((const char *)v3);
  }
  if (v3) {
    free(v3);
  }
  return v1;
}

BOOL sub_226888C70(uint64_t a1)
{
  BOOL result = sub_22687CBC8(a1, 1349676902);
  if (result)
  {
    BOOL result = sub_22687CBC8(a1, 1920159858);
    if (result) {
      return sub_22688C278(a1, 0) == 0;
    }
  }
  return result;
}

uint64_t sub_226888CC8(uint64_t a1, CFMutableDictionaryRef theDict)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  CFTypeRef cf = 0;
  if (!theDict) {
    return 4294967292;
  }
  if (!*(void *)(a1 + 40)) {
    return 0;
  }
  CFDictionaryRemoveAllValues(theDict);
  CFIndex Count = CFDictionaryGetCount(*(CFDictionaryRef *)(a1 + 40));
  if (Count < 1) {
    return 0;
  }
  CFIndex v5 = Count;
  BOOL v6 = (const void **)malloc_type_malloc(8 * Count, 0x80040B8603338uLL);
  if (!v6) {
    return 4294967293;
  }
  uint64_t v7 = v6;
  CFDictionaryGetKeysAndValues(*(CFDictionaryRef *)(a1 + 40), v6, 0);
  if (!*v7)
  {
    uint64_t v18 = 0;
    goto LABEL_36;
  }
  CFAllocatorRef v30 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  uint64_t v8 = (const __CFString **)v7;
  do
  {
    v32[0] = 0;
    if (!*v8)
    {
LABEL_35:
      uint64_t v18 = 4294967291;
      goto LABEL_36;
    }
    int v9 = sub_226888C0C(*v8);
    uint64_t v10 = (uint64_t)v9;
    if ((int)v9 <= 1936017003)
    {
      if (v9 == 1349676902)
      {
        if (!*(unsigned char *)(a1 + 372) && !sub_226888C70(a1)) {
          goto LABEL_26;
        }
        goto LABEL_20;
      }
      if (!v9) {
        goto LABEL_35;
      }
    }
    else if (v9 == 1936017004 || v9 == 1953066341)
    {
      goto LABEL_26;
    }
    if (!sub_2268880B8(a1, (int)v9)) {
      goto LABEL_26;
    }
LABEL_20:
    uint64_t v12 = sub_2268836AC(a1, v10, (CFStringRef *)&cf, v32);
    if (v12) {
      goto LABEL_30;
    }
    uint64_t v18 = sub_226860774(v30, theDict, (uint64_t)"%kC=%O", v13, v14, v15, v16, v17, v10);
    if (v32[0])
    {
      if (cf) {
        CFRelease(cf);
      }
      CFTypeRef cf = 0;
    }
    if (v18) {
      goto LABEL_36;
    }
LABEL_26:
    ++v8;
    --v5;
  }
  while (v5);
  uint64_t v18 = sub_226901198(v32, 0x10u);
  if (!v18)
  {
    uint64_t v18 = sub_226860774(v30, theDict, (uint64_t)"%kC=%s", v19, v20, v21, v22, v23, 1818449523);
    if (!v18)
    {
      uint64_t v12 = sub_226860774(v30, theDict, (uint64_t)"%kC=%i", v24, v25, v26, v27, v28, 1818449522);
LABEL_30:
      uint64_t v18 = v12;
    }
  }
LABEL_36:
  free(v7);
  return v18;
}

uint64_t sub_226888F2C(uint64_t result)
{
  *(_WORD *)(result + 372) = 0;
  return result;
}

uint64_t sub_226888F34(uint64_t a1)
{
  CFAllocatorRef v2 = (pthread_mutex_t *)(a1 + 392);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 392));
  ++*(_DWORD *)(a1 + 456);
  uint64_t v3 = *(__CFDictionary **)(a1 + 40);
  if (v3) {
    CFDictionaryRemoveAllValues(v3);
  }
  if (sub_22687CBC8(a1, 1349676902))
  {
    *(_WORD *)(a1 + 372) = 0;
    sub_22687CD0C(a1);
  }
  *(unsigned char *)(a1 + 385) = 0;
  --*(_DWORD *)(a1 + 456);
  pthread_mutex_unlock(v2);
  return 0;
}

void sub_226888FBC(_Unwind_Exception *a1)
{
  --*(_DWORD *)(v2 + 456);
  pthread_mutex_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_226888FE0(uint64_t a1)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v2 = (pthread_mutex_t *)(a1 + 392);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 392));
  ++*(_DWORD *)(a1 + 456);
  uint64_t v13 = 0;
  if (!*(void *)(a1 + 40))
  {
    uint64_t v3 = 4294960591;
    goto LABEL_15;
  }
  if (sub_226889124(a1))
  {
    uint64_t v3 = sub_2268623AC(*(const void **)(a1 + 40), &v13);
    if (v3) {
      goto LABEL_13;
    }
    if (!v13)
    {
      uint64_t v3 = 4294960568;
      goto LABEL_15;
    }
    CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    while (sub_22686244C((uint64_t *)v13, &v12, &v11))
    {
      uint64_t v3 = sub_226860774(v4, *(__CFArray **)(a1 + 32), (uint64_t)"%kO=%O", v5, v6, v7, v8, v9, v12);
      if (v3) {
        goto LABEL_13;
      }
    }
    sub_226888F34(a1);
  }
  uint64_t v3 = 0;
LABEL_13:
  if (v13) {
    sub_226862440(v13);
  }
LABEL_15:
  --*(_DWORD *)(a1 + 456);
  pthread_mutex_unlock(v2);
  return v3;
}

void sub_2268890F4(_Unwind_Exception *a1)
{
  --*(_DWORD *)(v2 + 456);
  pthread_mutex_unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_226889124(uint64_t a1)
{
  CFIndex Count = CFDictionaryGetCount(*(CFDictionaryRef *)(a1 + 40));
  if (Count < 1) {
    return 0;
  }
  if (Count != 1 || *(unsigned char *)(a1 + 372) != 0) {
    return 1;
  }
  CFTypeRef cf = 0;
  BOOL v4 = sub_22687CDBC(a1, 1349676902, &cf, 1) == -5;
  if (cf) {
    CFRelease(cf);
  }
  return v4;
}

uint64_t sub_2268891B0(uint64_t a1, void *a2)
{
  if (!a2) {
    return 4294960591;
  }
  CFPropertyListRef DeepCopy = CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], *(CFPropertyListRef *)(a1 + 32), 2uLL);
  *a2 = DeepCopy;
  if (!DeepCopy) {
    return 4294960568;
  }
  CFDictionaryRef v5 = *(const __CFDictionary **)(a1 + 40);

  return sub_22686084C((uint64_t)DeepCopy, v5);
}

uint64_t sub_226889224(uint64_t a1, const __CFDictionary *a2, CFMutableDictionaryRef *a3)
{
  uint64_t v3 = 4294960591;
  if (a2 && a3)
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    *a3 = Mutable;
    if (!Mutable) {
      return 4294967293;
    }
    CFIndex Count = CFDictionaryGetCount(a2);
    if (Count < 1) {
      return 0;
    }
    CFIndex v9 = Count;
    size_t v10 = 8 * Count;
    uint64_t v11 = (const void **)malloc_type_malloc(8 * Count, 0x80040B8603338uLL);
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = (const void **)malloc_type_malloc(v10, 0x80040B8603338uLL);
      if (v13)
      {
        uint64_t v14 = v13;
        CFDictionaryGetKeysAndValues(a2, v12, v13);
        uint64_t v15 = 0;
        while (1)
        {
          CFStringRef v16 = (const __CFString *)v12[v15];
          if (!v16 || !v14[v15]) {
            break;
          }
          uint64_t v17 = sub_226888C0C(v16);
          if (v17 == 1466517097) {
            goto LABEL_13;
          }
          uint64_t v3 = (uint64_t)v17;
          if (!v17) {
            goto LABEL_24;
          }
          if (sub_2268880B8(a1, (int)v17))
          {
LABEL_13:
            CFDictionarySetValue(*a3, v12[v15], v14[v15]);
          }
          else if (dword_268146940 <= 5000 {
                 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1388u)))
          }
          {
            sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::_CopySupported(CFDictionaryRef, CFDictionaryRef *)", 5000, (uint64_t)"%s: skipping key: %@ value: %@ because it isn't supported.\n", v18, v19, v20, v21, (uint64_t)"ACPStatus BaseStation::_CopySupported(CFDictionaryRef, CFDictionaryRef *)");
          }
          if (v9 == ++v15)
          {
            uint64_t v3 = 0;
            goto LABEL_24;
          }
        }
        uint64_t v3 = 4294967291;
LABEL_24:
        free(v12);
      }
      else
      {
        uint64_t v3 = 4294967293;
        uint64_t v14 = v12;
      }
      free(v14);
    }
    else
    {
      return 4294967293;
    }
  }
  return v3;
}

uint64_t sub_226889414(uint64_t a1, CFMutableDictionaryRef *a2)
{
  CFTypeRef cf = 0;
  if (!a2) {
    return 4294960591;
  }
  uint64_t v4 = sub_2268891B0(a1, &cf);
  if (!v4)
  {
    if (!cf) {
      return 4294967291;
    }
    uint64_t v4 = sub_226889224(a1, (const __CFDictionary *)cf, a2);
  }
  if (cf) {
    CFRelease(cf);
  }
  return v4;
}

uint64_t sub_226889498(uint64_t a1, CFMutableDictionaryRef *a2)
{
  if (!a2) {
    return 4294960591;
  }
  CFDictionaryRef DeepCopy = (const __CFDictionary *)CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], *(CFPropertyListRef *)(a1 + 32), 2uLL);
  if (!DeepCopy) {
    return 4294960568;
  }
  CFDictionaryRef v5 = DeepCopy;
  uint64_t v6 = sub_226889224(a1, DeepCopy, a2);
  CFRelease(v5);
  return v6;
}

uint64_t sub_226889518(uint64_t a1, void *a2)
{
  if (!a2) {
    return 4294960591;
  }
  CFPropertyListRef DeepCopy = CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], *(CFPropertyListRef *)(a1 + 32), 2uLL);
  *a2 = DeepCopy;
  if (DeepCopy) {
    return 0;
  }
  else {
    return 4294960568;
  }
}

uint64_t sub_226889574(uint64_t a1, const __CFDictionary *a2, int a3, uint64_t a4)
{
  uint64_t v74 = *MEMORY[0x263EF8340];
  CFTypeRef v71 = 0;
  CFTypeRef cf = 0;
  sub_22689F090(v69, "WiFi.radios.[*].");
  memset(&__p, 0, sizeof(__p));
  if (!a2)
  {
    uint64_t v14 = 4294960591;
    goto LABEL_21;
  }
  if (!CFDictionaryGetValue(a2, @"APPLE-CONFIG"))
  {
    uint64_t v14 = 4294960569;
    goto LABEL_21;
  }
  sub_226879E8C(a1);
  sub_22686088C((const __CFString *)a2, (uint64_t)&v71, (UInt8 *)"%kC", v8, v9, v10, v11, v12, 1937326416);
  uint64_t v14 = v13;
  if (v13) {
    goto LABEL_21;
  }
  if (!v71) {
    goto LABEL_20;
  }
  uint64_t v14 = sub_22687CE78(a1, 1937326416, (const __CFString *)v71, 2);
  if (v14) {
    goto LABEL_21;
  }
  sub_22686088C((const __CFString *)a2, (uint64_t)&v71, (UInt8 *)"%kC", v15, v16, v17, v18, v19, 1717907505);
  uint64_t v14 = v20;
  if (v20) {
    goto LABEL_21;
  }
  if (!v71) {
    goto LABEL_20;
  }
  uint64_t v14 = sub_22687CE78(a1, 1717907505, (const __CFString *)v71, 2);
  if (v14) {
    goto LABEL_21;
  }
  sub_22686088C((const __CFString *)a2, (uint64_t)&v71, (UInt8 *)"%kC", v21, v22, v23, v24, v25, 1937327724);
  uint64_t v14 = v26;
  if (v26) {
    goto LABEL_21;
  }
  if (!v71)
  {
LABEL_20:
    uint64_t v14 = 4294967291;
    goto LABEL_21;
  }
  uint64_t v14 = sub_22687CE78(a1, 1937327724, (const __CFString *)v71, 2);
  if (v14) {
    goto LABEL_21;
  }
  sub_22686088C((const __CFString *)a2, (uint64_t)&v71, (UInt8 *)"%kC", v27, v28, v29, v30, v31, 1717920116);
  if (v32)
  {
    sub_22687A554(a1, 1);
  }
  else
  {
    uint64_t v14 = sub_22687CE78(a1, 1717920116, (const __CFString *)v71, 2);
    if (v14) {
      goto LABEL_21;
    }
  }
  CFDataRef Value = (const __CFData *)CFDictionaryGetValue(a2, @"secureProperties");
  if (a4 && Value)
  {
    if (*(char *)(a4 + 23) < 0) {
      uint64_t v39 = *(void *)(a4 + 8);
    }
    else {
      uint64_t v39 = *(unsigned __int8 *)(a4 + 23);
    }
    if (!v39)
    {
      uint64_t v14 = 4294967280;
      goto LABEL_21;
    }
    uint64_t v14 = sub_226889B54((int)Value, (void *)a4, Value, &cf);
    if (v14) {
      goto LABEL_21;
    }
  }
  CFTypeRef v71 = 0;
  if (cf)
  {
    sub_22686088C((const __CFString *)cf, (uint64_t)&v71, (UInt8 *)"%kC", v34, v35, v36, v37, v38, 1466517097);
    CFStringRef v42 = (const __CFString *)v71;
    BOOL v67 = v41 == 0 && v71 != 0;
    if (v67) {
      uint64_t v14 = 0;
    }
    else {
      uint64_t v14 = v41;
    }
    if (v71) {
      goto LABEL_44;
    }
  }
  else
  {
    uint64_t v14 = 0;
    BOOL v67 = 0;
  }
  sub_22686088C((const __CFString *)a2, (uint64_t)&v71, (UInt8 *)"%kC", v34, v35, v36, v37, v38, 1466517097);
  if (v43)
  {
    int v44 = 0;
    goto LABEL_46;
  }
  CFStringRef v42 = (const __CFString *)v71;
LABEL_44:
  uint64_t v14 = sub_22687CE78(a1, 1466517097, v42, 2);
  if (v14) {
    goto LABEL_21;
  }
  int v44 = 1;
LABEL_46:
  char v46 = *(unsigned int **)(a1 + 200);
  std::string v45 = *(unsigned int **)(a1 + 208);
  if (v45 == v46)
  {
    sub_22687B1F8(a1, 0);
    char v46 = *(unsigned int **)(a1 + 200);
    std::string v45 = *(unsigned int **)(a1 + 208);
  }
  unint64_t v47 = (char *)v45 - (char *)v46;
  if (v47 >= 0xC)
  {
    unint64_t v48 = v47 / 0xC;
    CFAllocatorRef alloc = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    if (v48 <= 1) {
      uint64_t v49 = 1;
    }
    else {
      uint64_t v49 = v48;
    }
    while (1)
    {
      unsigned int v51 = *v46;
      v46 += 3;
      uint64_t v50 = v51;
      int v52 = sub_22688035C(v51);
      if (a3) {
        BOOL v53 = sub_226889D48(a1, v50);
      }
      else {
        BOOL v53 = sub_226889E00(a1, v50);
      }
      if (v50 == 1466517097) {
        char v54 = v44;
      }
      else {
        char v54 = 0;
      }
      if ((v54 & 1) != 0 || !v53) {
        goto LABEL_66;
      }
      if ((int)v50 > 1937326415)
      {
        if (v50 == 1937326416) {
          goto LABEL_66;
        }
        int v55 = 1937327724;
      }
      else
      {
        if (v50 == 1717907505) {
          goto LABEL_66;
        }
        int v55 = 1717920116;
      }
      if (v50 != v55)
      {
        if (!v44
          || (!cf ? (char v56 = v52) : (char v56 = 0),
              (v56 & 1) == 0
           && (cf ? (int v57 = v52) : (int v57 = 0), v57 != 1 || !(v67 | ((sub_22688A13C(v53, v50) & 1) == 0)))))
        {
          if (v52)
          {
            sub_226880920((unsigned __int8 *)v69, v50, &__p);
          }
          else if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          {
            *__p.__r_.__value_.__l.__data_ = 0;
            __p.__r_.__value_.__l.__size_ = 0;
          }
          else
          {
            __p.__r_.__value_.__s.__data_[0] = 0;
            *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
          }
          sub_22683C448(v50, cStr);
          CFStringRef v58 = CFStringCreateWithCString(alloc, cStr, 0x8000100u);
          CFStringRef v59 = v58;
          if (!v58)
          {
            uint64_t v14 = 4294960554;
            break;
          }
          unsigned __int8 v60 = sub_22688A13C((uint64_t)v58, v50);
          if ((v60 & (cf != 0)) != 0) {
            CFDictionaryRef v61 = (const __CFDictionary *)cf;
          }
          else {
            CFDictionaryRef v61 = a2;
          }
          CFTypeRef v71 = CFDictionaryGetValue(v61, v59);
          CFRelease(v59);
          CFDataRef v63 = (const __CFData *)v71;
          if (v71)
          {
            std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type size = __p.__r_.__value_.__l.__size_;
            }
            if (size)
            {
              int v65 = sub_2268824B8(v62, v50);
              if (v65)
              {
                uint64_t v14 = sub_22688256C(a1, v50, v63, &v71);
                if (v14) {
                  break;
                }
                CFDataRef v63 = (const __CFData *)v71;
              }
              uint64_t v14 = sub_2268809AC(a1, (uint64_t)&__p, (const __CFString *)v63, 2);
              if (v65) {
                CFRelease(v71);
              }
            }
            else
            {
              uint64_t v14 = sub_22687CE78(a1, v50, (const __CFString *)v71, 2);
            }
            if (v14) {
              break;
            }
          }
        }
      }
LABEL_66:
      if (!--v49)
      {
        *(unsigned char *)(a1 + 193) = 1;
        uint64_t v14 = sub_22687A554(a1, 1);
        break;
      }
    }
  }
LABEL_21:
  if (cf) {
    CFRelease(cf);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v70 < 0) {
    operator delete(v69[0]);
  }
  return v14;
}

void sub_226889B18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226889B54(int a1, void *data, const __CFData *a3, void *a4)
{
  cryptorRef[7] = *(CCCryptorRef *)MEMORY[0x263EF8340];
  if (*((char *)data + 23) < 0)
  {
    uint64_t v6 = 4294960591;
    if (!a4) {
      return v6;
    }
    if (!a3) {
      return v6;
    }
    uint64_t v7 = data[1];
    if (!v7) {
      return v6;
    }
    data = (void *)*data;
  }
  else
  {
    uint64_t v6 = 4294960591;
    if (!a4) {
      return v6;
    }
    if (!a3) {
      return v6;
    }
    LODWORD(v7) = *((unsigned __int8 *)data + 23);
    if (!*((unsigned char *)data + 23)) {
      return v6;
    }
  }
  CC_SHA1(data, v7, md);
  __n128 v17 = 0uLL;
  sub_22683FDD4(cryptorRef, md, &v17);
  CFIndex Length = CFDataGetLength(a3);
  uint64_t v9 = (UInt8 *)malloc_type_malloc(Length, 0x4EF403F0uLL);
  if (!v9) {
    return 4294960568;
  }
  uint64_t v10 = v9;
  BytePtr = (char *)CFDataGetBytePtr(a3);
  sub_22683FE30(cryptorRef, BytePtr, Length, v10);
  sub_22683FFFC((uint64_t)cryptorRef);
  CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFDataRef v13 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], v10, Length);
  if (v13)
  {
    CFDataRef v14 = v13;
    CFPropertyListRef v15 = CFPropertyListCreateWithData(v12, v13, 0, 0, 0);
    if (v15) {
      uint64_t v6 = 0;
    }
    else {
      uint64_t v6 = 4294967280;
    }
    *a4 = v15;
    CFRelease(v14);
  }
  else
  {
    uint64_t v6 = 4294960568;
  }
  free(v10);
  return v6;
}

void sub_226889CCC(uint64_t a1, void *a2, unint64_t *a3)
{
  if (*(void *)(a1 + 208) != *(void *)(a1 + 200))
  {
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  sub_22687B1F8(a1, 0);
  if (a2) {
LABEL_3:
  }
    *a2 = *(void *)(a1 + 200);
LABEL_4:
  if (a3) {
    *a3 = (*(void *)(a1 + 208) - *(void *)(a1 + 200)) / 0xCuLL;
  }
}

BOOL sub_226889D48(uint64_t a1, int a2)
{
  int v4 = 0;
  sub_22687AB24(a1, 1937326416, &v4, 0);
  BOOL result = 0;
  if (a2 <= 1464626794)
  {
    if (a2 != 1280077419 && a2 != 1346918739) {
      return 1;
    }
  }
  else if (a2 != 1464626795 && a2 != 1936017004)
  {
    if (a2 == 1937326416) {
      return v4 == 0;
    }
    return 1;
  }
  return result;
}

BOOL sub_226889E00(uint64_t a1, int a2)
{
  if (!qword_268148390) {
    return 1;
  }
  uint64_t v2 = *(void *)(qword_268148390 + 8);
  if (!v2) {
    return 1;
  }
  uint64_t v4 = qword_268148390 + 8;
  do
  {
    int v5 = *(_DWORD *)(v2 + 32);
    BOOL v6 = v5 < a2;
    if (v5 >= a2) {
      uint64_t v7 = (uint64_t *)v2;
    }
    else {
      uint64_t v7 = (uint64_t *)(v2 + 8);
    }
    if (!v6) {
      uint64_t v4 = v2;
    }
    uint64_t v2 = *v7;
  }
  while (*v7);
  if (v4 == qword_268148390 + 8 || *(_DWORD *)(v4 + 32) > a2) {
    return 1;
  }
  uint64_t v9 = *(void *)(v4 + 40);
  if (*(unsigned char *)(v9 + 24)) {
    return 0;
  }
  if (*(unsigned char *)(v9 + 25)) {
    return 1;
  }
  BOOL result = 1;
  if (a2 <= 1717907504)
  {
    if (a2 <= 1349676901)
    {
      if (a2 <= 1229213292)
      {
        if (a2 == 1095783250 || a2 == 1097098612) {
          return 0;
        }
        int v10 = 1148808787;
      }
      else if (a2 > 1298223987)
      {
        if (a2 == 1298223988) {
          return 0;
        }
        int v10 = 1346918739;
      }
      else
      {
        if (a2 == 1229213293) {
          return 0;
        }
        int v10 = 1280077419;
      }
    }
    else if (a2 > 1684099955)
    {
      if (a2 > 1684558667)
      {
        if (a2 == 1684558668) {
          return 0;
        }
        int v10 = 1684886388;
      }
      else
      {
        if (a2 == 1684099956) {
          return 0;
        }
        int v10 = 1684362100;
      }
    }
    else if (a2 > 1464626794)
    {
      if (a2 == 1464626795) {
        return 0;
      }
      int v10 = 1635078258;
    }
    else
    {
      if (a2 == 1349676902) {
        return 0;
      }
      int v10 = 1381327990;
    }
    goto LABEL_61;
  }
  if (a2 <= 1918980945)
  {
    if (a2 > 1835090283)
    {
      if ((a2 - 1886547529) <= 0x20 && ((1 << (a2 - 73)) & 0x100000201) != 0
        || a2 == 1835090284)
      {
        return 0;
      }
      int v10 = 1918980940;
    }
    else
    {
      if (a2 == 1717907505 || a2 == 1717920116) {
        return 0;
      }
      int v10 = 1752641585;
    }
LABEL_61:
    if (a2 != v10) {
      return result;
    }
    return 0;
  }
  if (a2 > 1937326417)
  {
    if (a2 > 1937330257)
    {
      if (a2 == 1937330258) {
        return 0;
      }
      unsigned __int16 v11 = 20567;
    }
    else
    {
      if (a2 == 1937326418) {
        return 0;
      }
      unsigned __int16 v11 = 19538;
    }
    int v10 = v11 | 0x73790000;
    goto LABEL_61;
  }
  if (a2 <= 1937006963)
  {
    if (a2 == 1918980946) {
      return 0;
    }
    int v10 = 1936017004;
    goto LABEL_61;
  }
  if (a2 == 1937006964) {
    return 0;
  }
  if (a2 == 1937326416)
  {
    int v12 = 0;
    sub_22687AB24(a1, 1937326416, &v12, 0);
    return v12 == 0;
  }
  return result;
}

uint64_t sub_22688A13C(uint64_t a1, int a2)
{
  uint64_t result = 1;
  if (a2 <= 1918981956)
  {
    if (a2 > 1885622358)
    {
      if (a2 <= 1918976881)
      {
        if (a2 == 1885622359) {
          return result;
        }
        int v3 = 1885687895;
        goto LABEL_30;
      }
      if (a2 == 1918976882 || a2 == 1918980914) {
        return result;
      }
      int v3 = 1918980965;
    }
    else
    {
      if (a2 <= 1718842223)
      {
        if (a2 == 1635077712) {
          return result;
        }
        int v3 = 1682792803;
        goto LABEL_30;
      }
      if (a2 == 1718842224 || a2 == 1766026340) {
        return result;
      }
      int v3 = 1836011607;
    }
LABEL_30:
    if (a2 != v3) {
      return 0;
    }
    return result;
  }
  if (a2 <= 1936611158)
  {
    if (a2 <= 1936609867)
    {
      if (a2 == 1918981957) {
        return result;
      }
      unsigned __int16 v4 = 17235;
    }
    else
    {
      if (a2 == 1936609868 || a2 == 1936609879) {
        return result;
      }
      unsigned __int16 v4 = 22348;
    }
    int v3 = v4 | 0x736E0000;
    goto LABEL_30;
  }
  if (a2 > 1970500195)
  {
    if (a2 == 1970500196 || a2 == 2002929744) {
      return result;
    }
    int v3 = 2002932304;
    goto LABEL_30;
  }
  if (a2 != 1936611159 && a2 != 1937330258)
  {
    int v3 = 1937330263;
    goto LABEL_30;
  }
  return result;
}

void sub_22688A2EC(unint64_t *a1, unint64_t a2)
{
  unint64_t v2 = a1[1] - *a1;
  BOOL v3 = a2 >= v2;
  size_t v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_22689F1EC(a1, v4);
  }
  else if (!v3)
  {
    a1[1] = *a1 + a2;
  }
}

uint64_t sub_22688A314(uint64_t a1, CFDictionaryRef theDict, const __CFString *a3, int a4)
{
  memset(&__p, 0, sizeof(__p));
  if (!theDict)
  {
    uint64_t v10 = 4294967292;
    goto LABEL_114;
  }
  CFIndex Count = CFDictionaryGetCount(theDict);
  CFIndex v8 = Count;
  if (Count <= 0)
  {
    uint64_t v10 = 0;
    goto LABEL_114;
  }
  CFArrayRef keys = (void **)malloc_type_malloc(8 * Count, 0x80040B8603338uLL);
  if (!keys)
  {
    uint64_t v10 = 4294967293;
    goto LABEL_114;
  }
  uint64_t v9 = (const void **)malloc_type_malloc(8 * v8, 0x80040B8603338uLL);
  if (!v9)
  {
    uint64_t v10 = 4294967293;
    CFIndex v66 = keys;
    goto LABEL_113;
  }
  CFDictionaryGetKeysAndValues(theDict, (const void **)keys, v9);
  CFStringRef v68 = a3;
  uint64_t v69 = v9;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = off_268146980;
  while (1)
  {
    CFStringRef v13 = (const __CFString *)keys[v11];
    if (!v13 || !v69[v11])
    {
      uint64_t v10 = 4294967291;
      goto LABEL_112;
    }
    CFDataRef v14 = v12;
    int v15 = sub_226888C0C(v13);
    if (!v15) {
      goto LABEL_112;
    }
    if (a4 == 1 && !sub_226889E00(a1, v15)) {
      goto LABEL_92;
    }
    BOOL v16 = sub_22687EF64(a1, v15);
    BOOL v17 = v16;
    if (v16)
    {
      LODWORD(valuePtr[0]) = 0;
      uint64_t v10 = sub_2268A6104(v15, valuePtr);
      if (v10) {
        goto LABEL_112;
      }
      if (LODWORD(valuePtr[0]) && !sub_22687CBC8(a1, (int)valuePtr[0])) {
        goto LABEL_103;
      }
      uint64_t v10 = 0;
    }
    else
    {
      BOOL v18 = sub_2268880B8(a1, v15);
      int v19 = v15 == 1466517097 || v18;
      if (v19 != 1) {
        goto LABEL_104;
      }
    }
    uint64_t v20 = sub_22683C448(v15, v75);
    MEMORY[0x22A65ABB0](&__p, v20);
    if (sub_22688035C(v15))
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int64_t size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        int64_t size = __p.__r_.__value_.__l.__size_;
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if (size >= 1)
      {
        uint64_t v23 = (char *)p_p + size;
        uint64_t v24 = p_p;
        do
        {
          uint64_t v25 = memchr(v24, 46, size);
          if (!v25) {
            break;
          }
          if (*v25 == 46)
          {
            if (v25 != v23 && v25 - (unsigned char *)p_p != -1) {
              goto LABEL_39;
            }
            break;
          }
          uint64_t v24 = (std::string *)(v25 + 1);
          int64_t size = v23 - (unsigned char *)v24;
        }
        while (v23 - (unsigned char *)v24 >= 1);
      }
      MEMORY[0x22A65ABB0](&__p, "WiFi.radios.[*].");
      sub_226880920((unsigned __int8 *)&__p, v15, &__p);
      if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
        sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::ImportFromDictionary(CFDictionaryRef, CFDictionaryRef, eImportChoice)", 8000, (uint64_t)"%s: Just created a path %s for a WiFi setting without one.\n", v26, v27, v28, v29, (uint64_t)"ACPStatus BaseStation::ImportFromDictionary(CFDictionaryRef, CFDictionaryRef, eImportChoice)");
      }
    }
LABEL_39:
    int v12 = v14;
    if (sub_2268A60D8(v15) == 6) {
      break;
    }
LABEL_44:
    if (!v17)
    {
      valuePtr[0] = 0;
      uint64_t v10 = sub_22687DD5C(a1, &__p, valuePtr);
      if (!v10)
      {
        if (valuePtr[0])
        {
          if (sub_22688AB38(0, &__p))
          {
            if (!sub_22688B5B8(a1, &__p, (const __CFString *)v69[v11]))
            {
              if (dword_268146940 <= 5000
                && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1388u)))
              {
                sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::ImportFromDictionary(CFDictionaryRef, CFDictionaryRef, eImportChoice)", 5000, (uint64_t)"%s: skipping import of value \"%@\" for \"%s\" because it is invalid, reseting to default val: \"%@\".\n", v54, v55, v56, v57, (uint64_t)"ACPStatus BaseStation::ImportFromDictionary(CFDictionaryRef, CFDictionaryRef, eImportChoice)");
              }
              uint64_t v10 = sub_2268809AC(a1, (uint64_t)&__p, (const __CFString *)valuePtr[0], 0);
              CFRelease(valuePtr[0]);
              if (v10) {
                goto LABEL_112;
              }
              goto LABEL_103;
            }
          }
          else if (CFEqual(valuePtr[0], v69[v11]))
          {
            if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
              sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::ImportFromDictionary(CFDictionaryRef, CFDictionaryRef, eImportChoice)", 8000, (uint64_t)"%s: skipping import of default value \"%@\" for \"%s\".\n", v62, v63, v64, v65, (uint64_t)"ACPStatus BaseStation::ImportFromDictionary(CFDictionaryRef, CFDictionaryRef, eImportChoice)");
            }
            CFRelease(valuePtr[0]);
LABEL_103:
            uint64_t v10 = 0;
            goto LABEL_104;
          }
          CFRelease(valuePtr[0]);
        }
      }
    }
    CFStringRef v35 = (const __CFString *)v69[v11];
    if (v15 != 1466517097)
    {
      uint64_t v10 = sub_2268809AC(a1, (uint64_t)&__p, (const __CFString *)v69[v11], 0);
      if (dword_268146940 <= 5000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1388u))) {
        sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::ImportFromDictionary(CFDictionaryRef, CFDictionaryRef, eImportChoice)", 5000, (uint64_t)"%s: Importing '%s' as: %@\n", v58, v59, v60, v61, (uint64_t)"ACPStatus BaseStation::ImportFromDictionary(CFDictionaryRef, CFDictionaryRef, eImportChoice)");
      }
      if (v10) {
        goto LABEL_112;
      }
LABEL_92:
      int v12 = v14;
      goto LABEL_104;
    }
    if (CFDictionaryGetCount((CFDictionaryRef)v69[v11]))
    {
      uint64_t v41 = 0;
      CFStringRef v74 = 0;
      do
      {
        sub_22686088C(v35, (uint64_t)&v74, (UInt8 *)"%ks", v36, v37, v38, v39, v40, (uint64_t)v14[v41]);
        if (!v42)
        {
          sub_22689F090(valuePtr, v14[v41]);
          if (v73 < 0)
          {
            if (valuePtr[1] == (CFMutableDictionaryRef)6)
            {
              BOOL v49 = *(_DWORD *)valuePtr[0] != 1768186226 || *((_WORD *)valuePtr[0] + 2) != 29551;
              operator delete(valuePtr[0]);
              if (!v49)
              {
LABEL_65:
                uint64_t v10 = sub_22687F208(a1, (const __CFString *)theDict, v68, v74, v43, v44, v45, v46);
                if (v10) {
                  goto LABEL_112;
                }
                uint64_t v10 = sub_22688179C(a1);
                goto LABEL_75;
              }
            }
            else
            {
              operator delete(valuePtr[0]);
            }
          }
          else if (v73 == 6 && LODWORD(valuePtr[0]) == 1768186226 && WORD2(valuePtr[0]) == 29551)
          {
            goto LABEL_65;
          }
          MEMORY[0x22A65ABB0](&__p, "WiFi.");
          sub_22689F090(valuePtr, v14[v41]);
          sub_226881624((unsigned __int8 *)&__p, (uint64_t)valuePtr, &__p);
          if (v73 < 0) {
            operator delete(valuePtr[0]);
          }
          if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
            sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::ImportFromDictionary(CFDictionaryRef, CFDictionaryRef, eImportChoice)", 8000, (uint64_t)"%s: Importing WiFi root property val: '%@' @ %s.\n", v50, v51, v52, v53, (uint64_t)"ACPStatus BaseStation::ImportFromDictionary(CFDictionaryRef, CFDictionaryRef, eImportChoice)");
          }
          uint64_t v10 = sub_2268809AC(a1, (uint64_t)&__p, v74, 0);
          if (v10) {
            goto LABEL_112;
          }
        }
LABEL_75:
        ++v41;
      }
      while (v41 != 4);
    }
LABEL_104:
    if (++v11 == v8)
    {
      uint64_t v10 = sub_22687D29C(a1);
      goto LABEL_112;
    }
  }
  LODWORD(valuePtr[0]) = 0;
  if (CFNumberGetValue((CFNumberRef)v69[v11], kCFNumberIntType, valuePtr))
  {
    unsigned int v30 = valuePtr[0];
    if (v15 == 2002862934)
    {
      unsigned int v30 = (uint64_t)valuePtr[0] & 0xFFFE7FFF;
      LODWORD(valuePtr[0]) &= 0xFFFE7FFF;
    }
    if (!sub_226881550(a1, (uint64_t)&__p, v30, 1))
    {
      if (dword_268146940 <= 8000 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u))) {
        sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::ImportFromDictionary(CFDictionaryRef, CFDictionaryRef, eImportChoice)", 8000, (uint64_t)"%s: skipping %s because possible value (%u) isn't supported.\n", v31, v32, v33, v34, (uint64_t)"ACPStatus BaseStation::ImportFromDictionary(CFDictionaryRef, CFDictionaryRef, eImportChoice)");
      }
      goto LABEL_104;
    }
    goto LABEL_44;
  }
  uint64_t v10 = 4294967292;
LABEL_112:
  free(keys);
  CFIndex v66 = (void **)v69;
LABEL_113:
  free(v66);
LABEL_114:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_22688AAE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_22688AB38(int a1, std::string *__str)
{
  int v15 = 0;
  sub_22687EA70(__str, (unsigned int *)&v15, 0);
  BOOL result = 0;
  if (v15 <= 1851868779)
  {
    if (v15 <= 1635078737)
    {
      if (v15 > 913337459)
      {
        if (v15 <= 1397572210)
        {
          if (v15 > 913601123)
          {
            if (v15 > 1146250610)
            {
              if (v15 != 1146250611) {
                return v15 == 1163543366;
              }
              return 1;
            }
            if (v15 == 913601124) {
              return 1;
            }
            int v3 = 913730676;
          }
          else if (v15 > 913532258)
          {
            if (v15 == 913532259) {
              return 1;
            }
            int v3 = 913532535;
          }
          else
          {
            if (v15 == 913337460) {
              return 1;
            }
            int v3 = 913337712;
          }
        }
        else if (v15 <= 1633116525)
        {
          if (v15 > 1398097261)
          {
            if (v15 == 1398097262) {
              return 1;
            }
            int v3 = 1398097521;
          }
          else
          {
            if (v15 == 1397572211) {
              return 1;
            }
            int v3 = 1397572215;
          }
        }
        else if (v15 <= 1633899616)
        {
          if (v15 == 1633116526) {
            return 1;
          }
          int v3 = 1633895790;
        }
        else
        {
          if (v15 == 1633899617 || v15 == 1635077710) {
            return 1;
          }
          int v3 = 1635077712;
        }
      }
      else
      {
        if (v15 <= 911697527)
        {
          if (v15 <= 911230048)
          {
            if ((v15 - 911102769) >= 3 && (v15 - 910976631) >= 2)
            {
              int v3 = 910975332;
              goto LABEL_188;
            }
            return 1;
          }
          if (v15 == 911230049 || v15 == 911230060) {
            return 1;
          }
          unsigned __int16 v12 = 24932;
          goto LABEL_131;
        }
        if (v15 <= 912356723)
        {
          if (v15 <= 911701092)
          {
            if (v15 == 911697528) {
              return 1;
            }
            unsigned __int16 v12 = 26487;
LABEL_131:
            int v3 = v12 | 0x36570000;
            goto LABEL_188;
          }
          if (v15 == 911701093) {
            return 1;
          }
          int v3 = 912353394;
        }
        else if (v15 <= 912550002)
        {
          if (v15 == 912356724) {
            return 1;
          }
          int v3 = 912483943;
        }
        else
        {
          if (v15 == 912550003 || v15 == 912552815) {
            return 1;
          }
          int v3 = 912684908;
        }
      }
LABEL_188:
      if (v15 != v3) {
        return result;
      }
      return 1;
    }
    if (v15 <= 1766026339)
    {
      if (v15 > 1718186596)
      {
        if (v15 <= 1735279981)
        {
          if (v15 <= 1735276852)
          {
            if (v15 == 1718186597) {
              return 1;
            }
            int v3 = 1718842224;
            goto LABEL_188;
          }
          if (v15 == 1735276853) {
            return 1;
          }
          unsigned __int16 v5 = 16999;
        }
        else if (v15 <= 1735282022)
        {
          if (v15 == 1735279982) {
            return 1;
          }
          unsigned __int16 v5 = 19557;
        }
        else
        {
          if (v15 == 1735282023 || v15 == 1735283311) {
            return 1;
          }
          unsigned __int16 v5 = 21326;
        }
        int v3 = v5 | 0x676E0000;
        goto LABEL_188;
      }
      if (v15 > 1684555117)
      {
        if (v15 > 1684557158)
        {
          if (v15 == 1684557159) {
            return 1;
          }
          int v3 = 1685538412;
          goto LABEL_188;
        }
        if (v15 == 1684555118) {
          return 1;
        }
        unsigned __int16 v13 = 19557;
      }
      else
      {
        if (v15 <= 1684551988)
        {
          if (v15 == 1635078738) {
            return 1;
          }
          int v3 = 1683440723;
          goto LABEL_188;
        }
        if (v15 == 1684551989) {
          return 1;
        }
        unsigned __int16 v13 = 16999;
      }
      int v3 = v13 | 0x64680000;
      goto LABEL_188;
    }
    if (v15 <= 1836009795)
    {
      if (v15 > 1836007759)
      {
        if (v15 > 1836008264)
        {
          if (v15 == 1836008265) {
            return 1;
          }
          unsigned __int16 v14 = 17492;
        }
        else
        {
          if (v15 == 1836007760) {
            return 1;
          }
          unsigned __int16 v14 = 17219;
        }
      }
      else
      {
        if (v15 <= 1818317644)
        {
          if (v15 == 1766026340) {
            return 1;
          }
          int v3 = 1818315088;
          goto LABEL_188;
        }
        if (v15 == 1818317645) {
          return 1;
        }
        unsigned __int16 v14 = 16708;
      }
    }
    else
    {
      if (v15 > 1836011587)
      {
        if (v15 > 1836012877)
        {
          if (v15 == 1836012878 || v15 == 1849970010) {
            return 1;
          }
          int v3 = 1851867462;
          goto LABEL_188;
        }
        if ((v15 - 1836011588) > 0x13) {
          return result;
        }
        int v6 = 1 << (v15 - 68);
        int v7 = 525313;
        goto LABEL_78;
      }
      if (v15 == 1836009796 || v15 == 1836010822) {
        return 1;
      }
      unsigned __int16 v14 = 19792;
    }
    int v3 = v14 | 0x6D6F0000;
    goto LABEL_188;
  }
  if (v15 <= 1918980718)
  {
    if (v15 > 1918976832)
    {
      if (v15 > 1918977643)
      {
        if (v15 > 1918979427)
        {
          if (v15 > 1918979648)
          {
            if (v15 == 1918979649) {
              return 1;
            }
            unsigned __int16 v4 = 20591;
          }
          else
          {
            if (v15 == 1918979428) {
              return 1;
            }
            unsigned __int16 v4 = 19829;
          }
        }
        else
        {
          if ((v15 - 1918978353) < 2 || v15 == 1918977644) {
            return 1;
          }
          unsigned __int16 v4 = 19284;
        }
      }
      else
      {
        if (v15 <= 1918977106)
        {
          uint64_t v8 = (v15 - 1918976833);
          if (v8 <= 0x31 && (((1 << (v15 - 65)) & 0x2088000000001) != 0 || v8 == 40)) {
            return 1;
          }
          return result;
        }
        if (v15 > 1918977344)
        {
          if (v15 == 1918977345) {
            return 1;
          }
          unsigned __int16 v4 = 17970;
        }
        else
        {
          if (v15 == 1918977107) {
            return 1;
          }
          unsigned __int16 v4 = 17509;
        }
      }
LABEL_187:
      int v3 = v4 | 0x72610000;
      goto LABEL_188;
    }
    if (v15 > 1885684046)
    {
      if (v15 <= 1885688653)
      {
        if (v15 > 1885687894)
        {
          if (v15 == 1885687895) {
            return 1;
          }
          unsigned __int16 v11 = 21315;
        }
        else
        {
          if (v15 == 1885684047) {
            return 1;
          }
          unsigned __int16 v11 = 18756;
        }
      }
      else
      {
        if (v15 > 1886213216)
        {
          if (v15 == 1886213217 || v15 == 1918128974) {
            return 1;
          }
          unsigned __int16 v4 = 16757;
          goto LABEL_187;
        }
        if (v15 == 1885688654) {
          return 1;
        }
        unsigned __int16 v11 = 21838;
      }
LABEL_179:
      int v3 = v11 | 0x70650000;
      goto LABEL_188;
    }
    if (v15 > 1885621570)
    {
      if (v15 > 1885623629)
      {
        if (v15 == 1885623630) {
          return 1;
        }
        unsigned __int16 v11 = 16707;
        goto LABEL_179;
      }
      if (v15 == 1885621571) {
        return 1;
      }
      unsigned __int16 v10 = 20567;
    }
    else if (v15 > 1885619819)
    {
      if (v15 == 1885619820) {
        return 1;
      }
      unsigned __int16 v10 = 18756;
    }
    else
    {
      if (v15 == 1851868780) {
        return 1;
      }
      unsigned __int16 v10 = 16722;
    }
    int v3 = v10 | 0x70640000;
    goto LABEL_188;
  }
  if (v15 <= 2002863152)
  {
    if (v15 <= 1936488043)
    {
      if (v15 > 1918980979)
      {
        if ((v15 - 1918981954) <= 0xB && ((1 << (v15 - 66)) & 0x80B) != 0 || v15 == 1918980980) {
          return 1;
        }
        unsigned __int16 v4 = 21810;
      }
      else
      {
        if (v15 == 1918980719 || v15 == 1918980914) {
          return 1;
        }
        unsigned __int16 v4 = 21349;
      }
      goto LABEL_187;
    }
    if (v15 <= 1937329262)
    {
      if (v15 > 1937068113)
      {
        if (v15 == 1937068114) {
          return 1;
        }
        int v3 = 1937326964;
      }
      else
      {
        if (v15 == 1936488044) {
          return 1;
        }
        int v3 = 1936605510;
      }
      goto LABEL_188;
    }
    if (v15 <= 1953645422)
    {
      if (v15 == 1937329263) {
        return 1;
      }
      int v3 = 1950434124;
      goto LABEL_188;
    }
    if (v15 == 1953645423 || v15 == 2002862916) {
      return 1;
    }
    unsigned __int16 v9 = 17238;
LABEL_141:
    int v3 = v9 | 0x77610000;
    goto LABEL_188;
  }
  if (v15 > 2002929005)
  {
    if (v15 <= 2002932291)
    {
      if ((v15 - 2002929742) <= 7 && ((1 << (v15 - 78)) & 0x85) != 0) {
        return 1;
      }
      int v3 = 2002929006;
    }
    else
    {
      if ((v15 - 2002932292) <= 0x11 && ((1 << (v15 - 68)) & 0x21001) != 0 || v15 == 2003060332) {
        return 1;
      }
      int v3 = 2003061875;
    }
    goto LABEL_188;
  }
  if (v15 > 2002864493)
  {
    if (v15 == 2002864494 || v15 == 2002865741) {
      return 1;
    }
    unsigned __int16 v9 = 21316;
    goto LABEL_141;
  }
  if ((v15 - 2002863153) > 0x1D) {
    return result;
  }
  int v6 = 1 << (v15 - 49);
  int v7 = 537133063;
LABEL_78:
  if ((v6 & v7) != 0) {
    return 1;
  }
  return result;
}

BOOL sub_22688B5B8(int a1, std::string *__str, const __CFString *a3)
{
  uint64_t v12 = 0;
  sub_22687EA70(__str, (unsigned int *)&v12 + 1, 0);
  if (sub_22688BCB4(v5, __str, &v12, &v11)) {
    return 1;
  }
  CFTypeID v7 = CFGetTypeID(a3);
  if (HIDWORD(v12) != 1970496070)
  {
    if (HIDWORD(v12) == 1853117270)
    {
      if (v7 == CFStringGetTypeID()) {
        return CFStringCompare(a3, &stru_26DA6BE88, 0) != kCFCompareEqualTo;
      }
      return 1;
    }
    if (v12 == 7)
    {
      if (v7 == CFStringGetTypeID())
      {
        CFStringRef v9 = @"0.0.0.0";
        goto LABEL_20;
      }
    }
    else if (v12 == 12)
    {
      if (v7 == CFStringGetTypeID())
      {
        CFStringRef v9 = @"::";
        goto LABEL_20;
      }
    }
    else if (v12 == 8 && v7 == CFStringGetTypeID())
    {
      CFStringRef v9 = @"00:00:00:00:00:00";
LABEL_20:
      if (CFEqual(a3, v9)
        || CFEqual(a3, &stru_26DA6BE88))
      {
        return 0;
      }
    }
    return 1;
  }
  if (v7 != CFNumberGetTypeID()) {
    return 1;
  }
  int v10 = 0;
  int Value = CFNumberGetValue((CFNumberRef)a3, kCFNumberSInt32Type, &v10);
  BOOL result = v10 != 0;
  if (!Value) {
    return 1;
  }
  return result;
}

BOOL sub_22688B734(uint64_t a1, const void *a2)
{
  CFBooleanRef v2 = (const __CFBoolean *)sub_22688B77C(a1, a2);
  if (!v2) {
    return 0;
  }
  CFBooleanRef v3 = v2;
  BOOL v4 = CFBooleanGetValue(v2) != 0;
  CFRelease(v3);
  return v4;
}

const void *sub_22688B77C(uint64_t a1, const void *a2)
{
  CFDictionaryRef theDict = 0;
  if (!a2) {
    return 0;
  }
  int v9 = 0;
  int v4 = sub_22687CDBC(a1, 1937329234, (CFTypeRef *)&theDict, 0);
  int v5 = 0;
  CFDictionaryRef v6 = theDict;
  if (!v4 && theDict)
  {
    if (sub_22687AB24(a1, 1937330789, &v9, 0)
      || (CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(theDict, @"regions")) == 0)
    {
      int v5 = 0;
    }
    else
    {
      int v5 = sub_22688129C((int)Value, Value, v9, a2);
    }
    CFDictionaryRef v6 = theDict;
  }
  if (v6) {
    CFRelease(v6);
  }
  return v5;
}

uint64_t sub_22688B84C(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(char *)(a2 + 23) >= 0) {
    CFDictionaryRef v6 = (const char *)a2;
  }
  else {
    CFDictionaryRef v6 = *(const char **)a2;
  }
  unsigned int v7 = sub_22688BA8C(v6);
  uint64_t v8 = 4294967292;
  if (!a3 || !v7) {
    return v8;
  }
  if (v7 == 1398097521)
  {
    int v9 = 604800;
LABEL_12:
    *a3 = v9;
    return 0;
  }
  if (v7 != 1918979445)
  {
    int v9 = 0;
    goto LABEL_12;
  }
  int v15 = 0;
  if (*(char *)(a2 + 23) < 0) {
    sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __dst = *(std::string *)a2;
  }
  sub_22689F090(__p, "raMd");
  sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v8 = sub_226888134(a1, (uint64_t)&__dst, &v15, 0);
  if (!v8)
  {
    if ((v15 - 4) > 6) {
      int v10 = 2;
    }
    else {
      int v10 = dword_226913144[v15 - 4];
    }
    *a3 = v10;
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  if (!v8) {
    return 0;
  }
  return v8;
}

void sub_22688B998(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22688B9D0(uint64_t a1, char *a2)
{
  CFTypeRef cf = 0;
  sub_22689F090(__p, a2);
  uint64_t v4 = sub_2268820DC(a1, (uint64_t)__p, (CFMutableDictionaryRef *)&cf, 0);
  uint64_t v5 = v4;
  if (v8 < 0)
  {
    operator delete(__p[0]);
    if (v5) {
      goto LABEL_3;
    }
  }
  else if (v4)
  {
    goto LABEL_3;
  }
  uint64_t v5 = sub_226881CE0(a1, a2, (const __CFBoolean *)cf, 0, 0);
LABEL_3:
  if (cf) {
    CFRelease(cf);
  }
  return v5;
}

void sub_22688BA70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

const char *sub_22688BA8C(const char *a1)
{
  uint64_t v1 = a1;
  unsigned int v16 = 0;
  std::string __p = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  if (!a1) {
    return v1;
  }
  MEMORY[0x22A65ABB0](&__p, a1);
  uint64_t v2 = HIBYTE(v15);
  p_p = (unsigned __int8 *)__p;
  if (v15 < 0) {
    uint64_t v2 = v14;
  }
  else {
    p_p = (unsigned __int8 *)&__p;
  }
  if (v2)
  {
    uint64_t v4 = &p_p[v2];
    uint64_t v5 = p_p;
    CFDictionaryRef v6 = (char *)&p_p[v2];
    do
    {
      unsigned int v7 = v5;
      char v8 = v5;
      while (1)
      {
        int v9 = *v8++;
        if (v9 == 46) {
          break;
        }
        unsigned int v7 = v8;
        if (v8 == v4)
        {
          unsigned int v7 = (unsigned __int8 *)v6;
          goto LABEL_12;
        }
      }
      uint64_t v5 = v7 + 1;
      CFDictionaryRef v6 = (char *)v7;
    }
    while (v8 != v4);
LABEL_12:
    if (v7 != v4)
    {
      int64_t v10 = v7 - p_p;
      if (v10 != -1)
      {
        if (v2 + ~v10 != 4) {
          goto LABEL_15;
        }
LABEL_19:
        size_t v12 = strlen(v1);
        sub_22683C470((char *)&v1[v12 - 4], 4uLL, &v16);
        uint64_t v1 = (const char *)v16;
        if ((v15 & 0x8000000000000000) == 0) {
          return v1;
        }
        goto LABEL_16;
      }
    }
  }
  if (strlen(v1) == 4) {
    goto LABEL_19;
  }
LABEL_15:
  uint64_t v1 = 0;
  if (v15 < 0) {
LABEL_16:
  }
    operator delete(__p);
  return v1;
}

void sub_22688BBB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22688BBD0(uint64_t a1, uint64_t a2, BOOL *a3)
{
  CFTypeRef cf2 = 0;
  CFTypeRef cf1 = 0;
  if (!a3) {
    return 4294967292;
  }
  *a3 = 0;
  uint64_t v6 = sub_2268820DC(a1, a2, (CFMutableDictionaryRef *)&cf1, 1);
  if (v6 == -5)
  {
    uint64_t v7 = 0;
LABEL_10:
    if (cf1)
    {
      CFRelease(cf1);
      CFTypeRef cf1 = 0;
    }
    goto LABEL_12;
  }
  uint64_t v7 = v6;
  if (v6) {
    goto LABEL_10;
  }
  if (cf1)
  {
    uint64_t v7 = sub_2268820DC(a1, a2, (CFMutableDictionaryRef *)&cf2, 2);
    if (!v7)
    {
      if (cf2)
      {
        uint64_t v7 = 0;
        *a3 = CFEqual(cf1, cf2) == 0;
      }
      else
      {
        uint64_t v7 = 4294967291;
      }
    }
    goto LABEL_10;
  }
  uint64_t v7 = 4294967291;
LABEL_12:
  if (cf2) {
    CFRelease(cf2);
  }
  return v7;
}

uint64_t sub_22688BCB4(int a1, std::string *__str, _DWORD *a3, _DWORD *a4)
{
  if (!qword_268148390) {
    return 4294960578;
  }
  int v30 = 0;
  sub_22687EA70(__str, (unsigned int *)&v30, 0);
  *a4 = 0;
  if (!v30)
  {
    *a3 = 9;
    if (dword_268146940 <= 5000)
    {
      if (dword_268146940 != -1 || (uint64_t result = sub_226865630((uint64_t)&dword_268146940, 0x1388u), result))
      {
        if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v24 = __str;
        }
        else {
          uint64_t v24 = (std::string *)__str->__r_.__value_.__r.__words[0];
        }
        sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::GetPropertyTypeInfo(const std::string &, ACPPropertyType &, BSUIType &) const", 5000, (uint64_t)"Property in path: %s ***ASSUMED*** to be kACPPropertyTypeCustom\n", v7, v8, v9, v10, (uint64_t)v24);
        return 0;
      }
      return result;
    }
    return 0;
  }
  uint64_t v11 = *(void *)(qword_268148390 + 8);
  if (v11)
  {
    uint64_t v12 = qword_268148390 + 8;
    do
    {
      int v13 = *(_DWORD *)(v11 + 32);
      BOOL v14 = v13 < v30;
      if (v13 >= v30) {
        uint64_t v15 = (uint64_t *)v11;
      }
      else {
        uint64_t v15 = (uint64_t *)(v11 + 8);
      }
      if (!v14) {
        uint64_t v12 = v11;
      }
      uint64_t v11 = *v15;
    }
    while (*v15);
    if (v12 != qword_268148390 + 8 && v30 >= *(_DWORD *)(v12 + 32))
    {
      uint64_t result = 0;
      uint64_t v26 = *(void *)(v12 + 40);
      int v27 = *(_DWORD *)(v26 + 8);
      LODWORD(v26) = *(_DWORD *)(v26 + 12);
      *a3 = v27;
      *a4 = v26;
      return result;
    }
  }
  BOOL v17 = dword_268146940 > 5000 || v30 == 1918979378 || v30 == 1937327219;
  if (!v17 && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1388u)))
  {
    if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v28 = __str;
    }
    else {
      uint64_t v28 = (std::string *)__str->__r_.__value_.__r.__words[0];
    }
    sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::GetPropertyTypeInfo(const std::string &, ACPPropertyType &, BSUIType &) const", 5000, (uint64_t)"Property in path: %s NOT in _propertyMap\n", v7, v8, v9, v10, (uint64_t)v28);
  }
  uint64_t v29 = 0;
  uint64_t result = sub_22683C258(v30, &v29);
  if (!result)
  {
    uint64_t v25 = *((unsigned int *)v29 + 1);
    *a3 = v25;
    if (dword_268146940 <= 5000)
    {
      uint64_t result = 0;
      if (v30 != 1918979378 && v30 != 1937327219)
      {
        if (dword_268146940 == -1)
        {
          uint64_t result = sub_226865630((uint64_t)&dword_268146940, 0x1388u);
          if (!result) {
            return result;
          }
          uint64_t v25 = *a3;
        }
        sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::GetPropertyTypeInfo(const std::string &, ACPPropertyType &, BSUIType &) const", 5000, (uint64_t)"...but found it in ACP Property Map, type: %d\n", v19, v20, v21, v22, v25);
        return 0;
      }
      return result;
    }
    return 0;
  }
  if (result != -5) {
    return result;
  }
  *a3 = 9;
  if (dword_268146940 > 5000) {
    return 0;
  }
  if (dword_268146940 != -1 || (uint64_t result = sub_226865630((uint64_t)&dword_268146940, 0x1388u), result))
  {
    if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v23 = __str;
    }
    else {
      uint64_t v23 = (std::string *)__str->__r_.__value_.__r.__words[0];
    }
    sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"ACPStatus BaseStation::GetPropertyTypeInfo(const std::string &, ACPPropertyType &, BSUIType &) const", 5000, (uint64_t)"...and not found in ACP Property Map... so ***ASSUMED*** to be type: kACPPropertyTypeCustom\n", v19, v20, v21, v22, (uint64_t)v23);
    return 0;
  }
  return result;
}

char *sub_22688BF74(char *__s)
{
  if (!qword_268148388)
  {
    uint64_t v1 = __s;
    if ((__s[23] & 0x80000000) == 0 || (uint64_t v1 = *(const char **)__s) != 0)
    {
      size_t v2 = strlen(v1);
      qword_268148388 = (uint64_t)malloc_type_malloc(v2 + 1, 0x1972F8C4uLL);
      std::string __s = strncpy((char *)qword_268148388, v1, v2);
      *(unsigned char *)(qword_268148388 + v2) = 0;
    }
  }
  return __s;
}

BOOL sub_22688BFEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) == 0;
  }
  if (!a1[23]) {
    return 1;
  }
  uint64_t v6 = v2 - 1;
  do
  {
    int v8 = *a1++;
    int v7 = v8;
    int v10 = *a2++;
    int v9 = v10;
    BOOL v12 = v6-- != 0;
    BOOL v13 = v7 == v9;
    BOOL v14 = v7 == v9;
  }
  while (v13 && v12);
  return v14;
}

uint64_t sub_22688C090(uint64_t a1, void *a2)
{
  CFPropertyListRef propertyList = 0;
  if (!a2) {
    return 4294967292;
  }
  uint64_t v3 = sub_22687CDBC(a1, 1349676902, &propertyList, 0);
  if (!v3)
  {
    CFPropertyListRef DeepCopy = CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], propertyList, 2uLL);
    if (DeepCopy)
    {
      uint64_t v3 = 0;
      *a2 = DeepCopy;
    }
    else
    {
      uint64_t v3 = 4294960568;
    }
  }
  if (propertyList) {
    CFRelease(propertyList);
  }
  return v3;
}

uint64_t sub_22688C120(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  if (!a2) {
    return 4294960591;
  }
  int v5 = *(char **)(a1 + 200);
  uint64_t v4 = *(char **)(a1 + 208);
  if (v4 == v5)
  {
    sub_22687B1F8(a1, 0);
    int v5 = *(char **)(a1 + 200);
    uint64_t v4 = *(char **)(a1 + 208);
  }
  unint64_t v6 = v4 - v5;
  if (v6 < 0xC) {
    return 4294960551;
  }
  unint64_t v8 = v6 / 0xC;
  CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  if (v8 <= 1) {
    uint64_t v10 = 1;
  }
  else {
    uint64_t v10 = v8;
  }
  while (1)
  {
    unsigned int v12 = *(_DWORD *)v5;
    v5 += 12;
    uint64_t v11 = v12;
    if (v12 != 1349676902) {
      break;
    }
LABEL_14:
    if (!--v10) {
      return 0;
    }
  }
  sub_22683C448(v11, v16);
  CFStringRef v13 = CFStringCreateWithCString(v9, v16, 0x8000100u);
  if (v13)
  {
    CFStringRef v14 = v13;
    CFStringRef Value = (const __CFString *)CFDictionaryGetValue(a2, v13);
    CFRelease(v14);
    if (Value) {
      sub_22687CE78(a1, v11, Value, 0);
    }
    goto LABEL_14;
  }
  return 4294960554;
}

uint64_t sub_22688C278(uint64_t a1, CFTypeRef *a2)
{
  CFTypeRef cf = 0;
  uint64_t v4 = sub_22688C090(a1, &cf);
  if (!v4)
  {
    if (!cf) {
      return 4294960551;
    }
    if (sub_22687CBC8(a1, 1920159858))
    {
      CFStringRef Value = CFDictionaryGetValue((CFDictionaryRef)cf, @"restoreProfile");
      if (Value)
      {
        uint64_t v4 = 0;
        if (a2) {
          *a2 = CFRetain(Value);
        }
      }
      else
      {
        uint64_t v4 = 4294960569;
      }
    }
    else
    {
      uint64_t v4 = 4294960561;
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  return v4;
}

uint64_t sub_22688C334(uint64_t a1)
{
  CFTypeRef cf = 0;
  uint64_t v2 = sub_22688C278(a1, &cf);
  CFTypeRef v3 = cf;
  if (!v2 && cf)
  {
    uint64_t v2 = sub_22688C120(a1, (const __CFDictionary *)cf);
    CFTypeRef v3 = cf;
  }
  if (v3) {
    CFRelease(v3);
  }
  return v2;
}

uint64_t sub_22688C398(uint64_t a1, const __CFArray **a2)
{
  if (!sub_22688C41C(a1)) {
    return 4294960569;
  }
  uint64_t v4 = *(void *)(a1 + 104);
  if (!v4) {
    return 4294960569;
  }
  if (!a2) {
    return 4294960591;
  }
  CFArrayRef v5 = sub_2268A0C6C(*(const __CFDictionary **)(a1 + 40), *(const __CFString **)(*(void *)(*(void *)(a1 + 72)+ (((unint64_t)(v4 + *(void *)(a1 + 96) - 1) >> 6) & 0x3FFFFFFFFFFFFF8))+ 8 * ((v4 + *(void *)(a1 + 96) - 1) & 0x1FF)));
  *a2 = v5;
  if (v5) {
    return 0;
  }
  else {
    return 4294960569;
  }
}

BOOL sub_22688C41C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 104);
  return v1
      && CFEqual(*(CFTypeRef *)(*(void *)(*(void *)(a1 + 72)+ (((unint64_t)(v1 + *(void *)(a1 + 96) - 1) >> 6) & 0x3FFFFFFFFFFFFF8))+ 8 * ((v1 + *(void *)(a1 + 96) - 1) & 0x1FF)), *(CFTypeRef *)(a1 + 40)) == 0;
}

uint64_t sub_22688C478(uint64_t a1)
{
  uint64_t v1 = *(const void **)(a1 + 40);
  if (!v1) {
    return 4294960591;
  }
  CFPropertyListRef DeepCopy = CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], v1, 2uLL);
  if (!DeepCopy) {
    return 4294960568;
  }
  sub_22689F340((void *)(a1 + 64), &DeepCopy);
  return 0;
}

uint64_t sub_22688C4E4(uint64_t a1, int a2)
{
  CFTypeRef v3 = *(const void **)(a1 + 40);
  if (!v3) {
    return 4294960591;
  }
  uint64_t v4 = *(void *)(a1 + 104);
  if (!v4) {
    return 4294960569;
  }
  if (a2)
  {
    CFRelease(v3);
    uint64_t v5 = *(void *)(a1 + 104) - 1;
    *(void *)(a1 + 40) = *(void *)(*(void *)(*(void *)(a1 + 72)
                                                 + (((unint64_t)(v5 + *(void *)(a1 + 96)) >> 6) & 0x3FFFFFFFFFFFFF8))
                                     + 8 * ((v5 + *(void *)(a1 + 96)) & 0x1FF));
    *(unsigned char *)(a1 + 384) = 0;
  }
  else
  {
    CFRelease(*(CFTypeRef *)(*(void *)(*(void *)(a1 + 72)
                                       + (((unint64_t)(v4 + *(void *)(a1 + 96) - 1) >> 6) & 0x3FFFFFFFFFFFFF8))
                           + 8 * ((v4 + *(void *)(a1 + 96) - 1) & 0x1FF)));
    uint64_t v5 = *(void *)(a1 + 104) - 1;
  }
  *(void *)(a1 + 104) = v5;
  sub_22689FB84((void *)(a1 + 64), 1);
  return 0;
}

BOOL sub_22688C5A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unint64_t *a5)
{
  if ((a4 - 1) > 1) {
    return sub_22688C9E0(a1, a2, a3, a5, 0);
  }
  else {
    return sub_22688C5D0(a3, a4, a5, 0);
  }
}

BOOL sub_22688C5D0(uint64_t a1, int a2, unint64_t *a3, char a4)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  int v4 = *(char *)(a1 + 23);
  if (v4 >= 0) {
    uint64_t v5 = (char *)a1;
  }
  else {
    uint64_t v5 = *(char **)a1;
  }
  if (v4 >= 0) {
    unint64_t v6 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    unint64_t v6 = *(void *)(a1 + 8);
  }
  if (!v6) {
    return v6;
  }
  if (a2 == 2) {
    size_t v9 = 13;
  }
  else {
    size_t v9 = 5;
  }
  if (v6 == v9)
  {
    uint64_t v10 = (void *)*a3;
    unint64_t v11 = a3[1] - *a3;
    if (v6 <= v11)
    {
      if (v6 < v11) {
        a3[1] = (unint64_t)v10 + v6;
      }
    }
    else
    {
      sub_22689F1EC(a3, v6 - v11);
      uint64_t v10 = (void *)*a3;
    }
    uint64_t v17 = v5;
    size_t v18 = v6;
    goto LABEL_26;
  }
  uint64_t v34 = 0;
  uint64_t v13 = 10;
  if (a2 == 2) {
    uint64_t v13 = 26;
  }
  if (v6 == v13)
  {
    if (strspn(v5, "0123456789abcdefABCDEF") == v6)
    {
      if (v6 == 10) {
        unint64_t v14 = 5;
      }
      else {
        unint64_t v14 = 13;
      }
      uint64_t v15 = (unsigned char *)*a3;
      unint64_t v16 = a3[1] - *a3;
      if (v14 <= v16)
      {
        if (v14 < v16) {
          a3[1] = (unint64_t)&v15[v14];
        }
      }
      else
      {
        sub_22689F1EC(a3, v14 - v16);
        uint64_t v15 = (unsigned char *)*a3;
      }
      int v21 = sub_22686FBB0(v5, v6, v14, v15, &v34);
LABEL_67:
      if (!v21) {
        return v34 == v14;
      }
      return 0;
    }
    if (a2 != 2 || v6 != 15) {
      goto LABEL_36;
    }
    goto LABEL_33;
  }
  uint64_t v19 = 7;
  if (a2 == 2) {
    uint64_t v19 = 15;
  }
  if (v6 == v19)
  {
LABEL_33:
    if (*v5 == 34 && v5[v6 - 1] == 34)
    {
      sub_22688A2EC(a3, v6 - 2);
      uint64_t v10 = (void *)*a3;
      uint64_t v17 = v5 + 1;
      size_t v18 = v6 - 2;
LABEL_26:
      memcpy(v10, v17, v18);
      return 1;
    }
  }
LABEL_36:
  uint64_t v20 = 11;
  if (a2 == 2) {
    uint64_t v20 = 27;
  }
  if (v6 == v20 && *v5 == 36 && strspn(v5 + 1, "0123456789abcdefABCDEF") == v6 - 1)
  {
    if (v6 == 11) {
      unint64_t v14 = 5;
    }
    else {
      unint64_t v14 = 13;
    }
    sub_22688A2EC(a3, v14);
    int v21 = sub_22686FBB0(v5 + 1, v6 - 1, v14, (unsigned char *)*a3, &v34);
    goto LABEL_67;
  }
  uint64_t v22 = 12;
  if (a2 == 2) {
    uint64_t v22 = 28;
  }
  if (v6 == v22 && *v5 == 48 && (v5[1] | 0x20) == 0x78)
  {
    size_t v23 = strspn(v5 + 2, "0123456789abcdefABCDEF");
    if (v23 == v6 - 2)
    {
      int64_t v24 = v23;
      if (v6 == 12) {
        unint64_t v14 = 5;
      }
      else {
        unint64_t v14 = 13;
      }
      sub_22688A2EC(a3, v14);
      int v21 = sub_22686FBB0(v5 + 2, v24, v14, (unsigned char *)*a3, &v34);
      goto LABEL_67;
    }
  }
  uint64_t v26 = (unsigned char *)*a3;
  uint64_t v25 = (unsigned char *)a3[1];
  if (a4)
  {
    if (v25 != v26)
    {
      unint64_t v6 = 0;
      a3[1] = (unint64_t)v26;
      return v6;
    }
    return 0;
  }
  size_t v27 = v25 - v26;
  if (v9 <= v27)
  {
    if (v9 < v27) {
      a3[1] = (unint64_t)&v26[v9];
    }
  }
  else
  {
    sub_22689F1EC(a3, v9 - v27);
    uint64_t v26 = (unsigned char *)*a3;
  }
  size_t v28 = strlen(v5);
  uint64_t v29 = (char *)malloc_type_malloc(v28 + 17, 0x7CA645C9uLL);
  unint64_t v6 = v29 != 0;
  if (v29)
  {
    int v30 = v29;
    uint64_t v31 = strcpy(v29, v5);
    strcpy(&v30[strlen(v31)], "\x16\xEB\xAD\x57\x0F\xF4\xE3\xDE\x7Dtr\xE8\xD2\xAB\xA6\xA7");
    sub_226869910((uint64_t)v35);
    size_t v32 = strlen(v30);
    sub_226869924((uint64_t)v35, v30, v32);
    sub_22686992C(&__src, (uint64_t)v35);
    sub_226869924((uint64_t)v35, (char *)&__src, 0x10uLL);
    sub_22686992C(&__src, (uint64_t)v35);
    sub_226869924((uint64_t)v35, (char *)&__src, 0x10uLL);
    sub_22686992C(&__src, (uint64_t)v35);
    memcpy(v26, &__src, v9);
    free(v30);
  }
  return v6;
}

BOOL sub_22688C9E0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, char *a5)
{
  v14[0] = 0;
  v14[1] = 0;
  uint64_t v15 = 0;
  if (*(char *)(a2 + 23) < 0) {
    sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __dst = *(std::string *)a2;
  }
  sub_22689F090(__p, "raNm");
  sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  sub_2268884D0(a1, (uint64_t)&__dst, (uint64_t)v14, 0);
  BOOL v9 = sub_22688CB20(a3, v14, a4, a5);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return v9;
}

void sub_22688CAD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_22688CB20(uint64_t a1, void **a2, unint64_t *a3, char *a4)
{
  uint64_t v22 = 0;
  int v6 = *(char *)(a1 + 23);
  if (v6 >= 0) {
    int v7 = (char *)a1;
  }
  else {
    int v7 = *(char **)a1;
  }
  if (v6 >= 0) {
    uint64_t v8 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v8 = *(void *)(a1 + 8);
  }
  if ((unint64_t)(v8 - 8) > 0x37)
  {
    if (v8 == 64 && strspn(v7, "0123456789abcdefABCDEF") == 64)
    {
      unint64_t v14 = (unsigned char *)*a3;
      unint64_t v15 = a3[1] - *a3;
      if (v15 > 0x1F)
      {
        if (v15 != 32) {
          a3[1] = (unint64_t)(v14 + 32);
        }
      }
      else
      {
        sub_22689F1EC(a3, 32 - v15);
        unint64_t v14 = (unsigned char *)*a3;
      }
      if (!sub_22686FBB0(v7, 64, 32, v14, &v22))
      {
        char v21 = 0;
        BOOL result = v22 == 32;
        if (!a4) {
          return result;
        }
        goto LABEL_32;
      }
    }
LABEL_31:
    BOOL result = 0;
    char v21 = 0;
    if (!a4) {
      return result;
    }
    goto LABEL_32;
  }
  uint64_t v10 = v7;
  do
  {
    int v12 = *v10++;
    int v11 = v12;
  }
  while ((v12 - 127) > 0xFFFFFFA0);
  if (v11) {
    goto LABEL_31;
  }
  unint64_t v13 = a3[1] - *a3;
  if (v13 > 0x1F)
  {
    if (v13 != 32) {
      a3[1] = *a3 + 32;
    }
  }
  else
  {
    sub_22689F1EC(a3, 32 - v13);
  }
  int v16 = *((char *)a2 + 23);
  if (v16 < 0)
  {
    uint64_t v19 = a2;
    a2 = (void **)*a2;
    unint64_t v18 = (unint64_t)v19[1];
    if (v18 >= 0x20) {
      size_t v17 = 32;
    }
    else {
      size_t v17 = v18;
    }
  }
  else if ((v16 & 0xE0) != 0)
  {
    size_t v17 = 32;
  }
  else
  {
    size_t v17 = *((unsigned __int8 *)a2 + 23);
  }
  sub_2268750FC((uint64_t)v7, v8, a2, v17, (_OWORD *)*a3);
  BOOL result = 1;
  char v21 = 1;
  if (a4) {
LABEL_32:
  }
    *a4 = v21;
  return result;
}

uint64_t sub_22688CCBC(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(a1 + 260);
  if (v2 == 1 || v2 == 4)
  {
    if (a2 == 5) {
      return 1;
    }
    uint64_t v4 = 0;
    uint64_t v5 = &byte_226913056;
    while (v4 != 36)
    {
      int v6 = *v5;
      v5 += 5;
      ++v4;
      if (v6 == a2) {
        return byte_226913050[5 * v4];
      }
    }
  }
  else
  {
    if (a2 == 5) {
      return 1;
    }
    uint64_t v4 = 0;
    uint64_t v8 = &byte_226913057;
    while (v4 != 36)
    {
      int v9 = *v8;
      v8 += 5;
      ++v4;
      if (v9 == a2) {
        return byte_226913050[5 * v4];
      }
    }
  }
  return 37;
}

uint64_t sub_22688CD4C(uint64_t a1, unsigned int a2, _DWORD *a3, _DWORD *a4)
{
  if (a2 > 0x25) {
    return 4294960586;
  }
  int v4 = *(_DWORD *)(a1 + 260);
  BOOL v5 = v4 == 1 || v4 == 4;
  int v6 = &byte_226913050[5 * a2];
  int v7 = v6 - 2;
  uint64_t v8 = v6 - 4;
  int v9 = v6 - 1;
  uint64_t v10 = v6 - 3;
  if (v5)
  {
    int v9 = v7;
    int v11 = v8;
  }
  else
  {
    int v11 = v10;
  }
  uint64_t result = 4294960561;
  if ((*v9 & 0x80000000) == 0)
  {
    int v13 = *v11;
    if ((v13 & 0x80000000) == 0)
    {
      uint64_t result = 0;
      *a4 = *v9;
      *a3 = v13;
    }
  }
  return result;
}

uint64_t sub_22688CDC0(uint64_t a1, unsigned char *a2, BOOL *a3, uint64_t a4)
{
  int v4 = a4;
  int v23 = 0;
  CFTypeRef cf = 0;
  uint64_t v7 = sub_22687CDBC(a1, 1466517097, &cf, a4);
  uint64_t v8 = v7;
  if ((v4 != 1 || v7 != -5) && !v7)
  {
    CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue((CFDictionaryRef)cf, @"radios");
    if (Value)
    {
      CFStringRef v11 = (const __CFString *)Value;
      CFIndex Count = CFArrayGetCount(Value);
      if (Count < 1) {
        goto LABEL_18;
      }
      CFIndex v18 = Count;
      for (uint64_t i = 0; i != v18; ++i)
      {
        sub_22686088C(v11, (uint64_t)&v23, (UInt8 *)"[*].%kO:int", v13, v14, v15, v16, v17, i);
        if (v20)
        {
          uint64_t v8 = v20;
          goto LABEL_4;
        }
        char v21 = v23;
        if (v23) {
          break;
        }
        uint64_t v8 = 0;
      }
      *a2 = 1;
      if (a3)
      {
        uint64_t v8 = 0;
        *a3 = (v21 & 2) != 0;
      }
      else
      {
LABEL_18:
        uint64_t v8 = 0;
      }
    }
    else
    {
      uint64_t v8 = 4294967291;
    }
  }
LABEL_4:
  if (cf) {
    CFRelease(cf);
  }
  return v8;
}

uint64_t sub_22688CEEC(uint64_t a1, CFArrayRef theArray)
{
  CFArrayRef Value = theArray;
  int v15 = 0;
  CFDictionaryRef theDict = 0;
  if (!theArray)
  {
    if (!sub_22687CBC8(a1, 1935819842)) {
      return 0;
    }
    if (sub_22687CDBC(a1, 1466517097, (CFTypeRef *)&theDict, 0)) {
      goto LABEL_11;
    }
    CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(theDict, @"radios");
    if (!Value) {
      goto LABEL_11;
    }
  }
  CFIndex Count = CFArrayGetCount(Value);
  if (Count >= 2)
  {
    CFIndex v9 = Count;
    uint64_t v10 = 0;
    while (1)
    {
      sub_22686088C((const __CFString *)Value, (uint64_t)&v15, (UInt8 *)"[*].%kO:int", v4, v5, v6, v7, v8, v10);
      if (!v11 && (v15 & 0x70) != 0) {
        break;
      }
      if (v9 == ++v10) {
        goto LABEL_11;
      }
    }
  }
  else
  {
LABEL_11:
    uint64_t v10 = 0;
  }
  if (theDict) {
    CFRelease(theDict);
  }
  return v10;
}

BOOL sub_22688CFF0(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  BOOL v6 = 0;
  memset(&__p, 0, sizeof(__p));
  if (!sub_22687CBC8(a1, 1198748750)) {
    return 0;
  }
  uint64_t v2 = sub_2268A7C60(v7, 0x11uLL);
  MEMORY[0x22A65ABB0](&__p, v2);
  sub_226880920((unsigned __int8 *)&__p, 1651722053, &__p);
  sub_226888348(a1, (uint64_t)&__p, &v6, 0);
  BOOL v3 = v6;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_22688D0C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_22688D0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (!sub_22687CBC8(a1, 1935819842)) {
    return 0;
  }
  memset(&v18, 0, sizeof(v18));
  BOOL v17 = 0;
  if (sub_2268801D8(a1, 0) != 2) {
    return 0;
  }
  char v4 = 0;
  uint64_t v5 = 0;
  while (1)
  {
    MEMORY[0x22A65ABB0](&v18, "WiFi.radios.[*].");
    snprintf(__str, 0x10uLL, "%ld", v5);
    if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int64_t size = HIBYTE(v18.__r_.__value_.__r.__words[2]);
    }
    else {
      int64_t size = v18.__r_.__value_.__l.__size_;
    }
    if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v7 = &v18;
    }
    else {
      uint64_t v7 = (std::string *)v18.__r_.__value_.__r.__words[0];
    }
    uint64_t v8 = (char *)v7 + size;
    if (size >= 1)
    {
      CFIndex v9 = v7;
      do
      {
        uint64_t v10 = memchr(v9, 42, size);
        if (!v10) {
          break;
        }
        if (*v10 == 42) {
          goto LABEL_16;
        }
        CFIndex v9 = (std::string *)(v10 + 1);
        int64_t size = v8 - (unsigned char *)v9;
      }
      while (v8 - (unsigned char *)v9 > 0);
    }
    uint64_t v10 = v8;
LABEL_16:
    if (v10 == v8) {
      std::string::size_type v11 = -1;
    }
    else {
      std::string::size_type v11 = v10 - (unsigned char *)v7;
    }
    std::string::replace(&v18, v11, 1uLL, __str);
    sub_22689F090(__p, "raCA");
    sub_226881624((unsigned __int8 *)&v18, (uint64_t)__p, &v18);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
    if (sub_226888348(a1, (uint64_t)&v18, &v17, a2)) {
      break;
    }
    BOOL v12 = !v17;
    BOOL v13 = v12 | v4;
    char v4 = 1;
    uint64_t v5 = 1;
    if (v13) {
      goto LABEL_27;
    }
  }
  BOOL v12 = 0;
LABEL_27:
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  return v12;
}

void sub_22688D2C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22688D2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = *MEMORY[0x263EF8340];
  if (*(char *)(a2 + 23) >= 0) {
    char v4 = (const char *)a2;
  }
  else {
    char v4 = *(const char **)a2;
  }
  int v5 = sub_22688BA8C(v4);
  int v60 = 0;
  if (!v5) {
    return 1;
  }
  int v6 = v5;
  sub_2268A6104(v5, &v60);
  if (v60 && !sub_22687CBC8(a1, v60)) {
    return 0;
  }
  uint64_t v58 = 0;
  uint64_t v59 = 0;
  __int16 v57 = 0;
  unsigned __int8 v56 = 0;
  BOOL v7 = sub_22687CBC8(a1, 1935819842);
  BOOL v8 = sub_22687CBC8(a1, 1198748750);
  BOOL v9 = sub_22687CBC8(a1, 1196311928);
  BOOL v55 = 0;
  int v54 = 0;
  if (*(char *)(a2 + 23) < 0) {
    sub_22689EF14(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  int v52 = 0;
  __int16 v51 = 0;
  uint64_t v50 = 0;
  int v49 = 0;
  __int16 v48 = 0;
  unsigned __int8 v47 = 0;
  if (sub_22687AB24(a1, 1651722563, &v49, 0)) {
    goto LABEL_44;
  }
  std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (size == 4)
  {
    uint64_t v12 = sub_2268A7C60(v61, 0x11uLL);
    MEMORY[0x22A65ABB0](&__p, v12);
  }
  sub_226880920((unsigned __int8 *)&__p, 1651723853, &__p);
  if (sub_226888134(a1, (uint64_t)&__p, (char *)&v59 + 4, 0)) {
    goto LABEL_44;
  }
  int v13 = HIDWORD(v59);
  BOOL v14 = !HIDWORD(v59) || HIDWORD(v59) == 10;
  unsigned __int8 v15 = v14;
  sub_226880920((unsigned __int8 *)&__p, 1651718221, &__p);
  if (sub_226888134(a1, (uint64_t)&__p, &v58, 0)) {
    goto LABEL_44;
  }
  if (v7)
  {
    BOOL v16 = (v58 & 0xFFFF0000) == 0x50000 || (v58 & 0xFFFD0000) == 0x80000;
    BOOL v17 = v16;
  }
  else
  {
    BOOL v17 = v58 <= 0xA && (0x520u >> v58) & 1;
  }
  sub_226880920((unsigned __int8 *)&__p, 1651725133, &__p);
  if (sub_226888134(a1, (uint64_t)&__p, &v59, 0)) {
    goto LABEL_44;
  }
  BOOL v18 = sub_22688CFF0(a1);
  HIDWORD(v58) = 1;
  if (v18)
  {
    sub_226880920((unsigned __int8 *)&__p, 1651722067, &__p);
    sub_226888134(a1, (uint64_t)&__p, (char *)&v58 + 4, 0);
  }
  if (sub_2268883A8(a1, 1918979649, (BOOL *)&v57 + 1, 0)) {
    goto LABEL_44;
  }
  if (sub_22687AB24(a1, 1851868780, &v50, 0)) {
    goto LABEL_44;
  }
  if (sub_2268883A8(a1, 1918977107, (BOOL *)&v57, 0)) {
    goto LABEL_44;
  }
  if (sub_2268883A8(a1, 1651721811, &v55, 0)) {
    goto LABEL_44;
  }
  if (sub_2268883A8(a1, 1635078738, (BOOL *)&v48 + 1, 0)) {
    goto LABEL_44;
  }
  if (sub_2268883A8(a1, 1885688643, (BOOL *)&v48, 0)) {
    goto LABEL_44;
  }
  int v54 = 2;
  BOOL v46 = v55;
  if (v55
    && (sub_2268883A8(a1, 1651724870, (BOOL *)&v56, 0)
     || sub_22687AB24(a1, 1651721805, &v54, 0)))
  {
    goto LABEL_44;
  }
  if (sub_22687CBC8(a1, 1768961606))
  {
    if (sub_22687AB24(a1, 912483943, &v52, 0)
      || sub_2268883A8(a1, 912356724, (BOOL *)&v51 + 1, 0)
      || sub_2268883A8(a1, 913532535, (BOOL *)&v51, 0))
    {
      goto LABEL_44;
    }
  }
  else
  {
    int v52 = 0;
  }
  if (sub_2268883A8(a1, 2002929006, (BOOL *)&v47, 0)
    || (int v20 = v59,
        unsigned __int8 v45 = sub_22687CBC8(a1, 1950434124),
        sub_226880920((unsigned __int8 *)&__p, 1651720532, &__p),
        sub_226888134(a1, (uint64_t)&__p, (char *)&v50 + 4, 0)))
  {
LABEL_44:
    unsigned __int8 v10 = 1;
    goto LABEL_45;
  }
  unsigned int v21 = v20 - 9;
  unsigned __int8 v10 = 1;
  if (v6 > 1684554342)
  {
    if (v6 > 1918979427)
    {
      if (v6 > 1950434123)
      {
        if (v6 <= 2002929741)
        {
          if (v6 <= 2002863170)
          {
            if (v6 == 1950434124)
            {
              unsigned __int8 v32 = v45;
              if (HIDWORD(v50) != 3) {
                unsigned __int8 v32 = 0;
              }
              BOOL v31 = v13 == 1;
LABEL_306:
              if (v31) {
                unsigned __int8 v10 = 0;
              }
              else {
                unsigned __int8 v10 = v32;
              }
              goto LABEL_45;
            }
            if (v6 != 1970500196) {
              goto LABEL_45;
            }
            BOOL v37 = !v46;
            int v38 = v54;
            goto LABEL_267;
          }
          if (v6 == 2002863171)
          {
            BOOL v40 = v49 == 2 || v49 == 7;
            goto LABEL_298;
          }
          if (v6 != 2002867012)
          {
            if (v6 != 2002929006) {
              goto LABEL_45;
            }
            BOOL v30 = sub_22687CBC8(a1, 2000834122);
            goto LABEL_322;
          }
LABEL_192:
          unsigned __int8 v10 = HIBYTE(v57);
          goto LABEL_45;
        }
        if (v6 <= 2002932291)
        {
          if ((v6 - 2002929742) > 7 || ((1 << (v6 - 78)) & 0x85) == 0) {
            goto LABEL_45;
          }
        }
        else if ((v6 - 2002932292) > 0x11 || ((1 << (v6 - 68)) & 0x21001) == 0)
        {
          if (v6 == 2003003251 || v6 == 2003003253)
          {
LABEL_234:
            BOOL v30 = sub_22687CBC8(a1, 1635215715);
            goto LABEL_322;
          }
          goto LABEL_45;
        }
        unsigned __int8 v10 = v47;
        goto LABEL_45;
      }
      if (v6 <= 1918980913)
      {
        if (v6 > 1918979692)
        {
          if (v6 == 1918979693) {
            goto LABEL_240;
          }
          unsigned __int8 v10 = v15;
          if (v6 != 1918980207)
          {
            unsigned __int8 v10 = 1;
            if (v6 == 1918980719)
            {
              if (v13 != 10 && v13) {
                goto LABEL_290;
              }
              if (!sub_2268A8254(v58) || !sub_22687CBC8(a1, 1382109807))
              {
                if (sub_2268A822C(v58))
                {
                  BOOL v30 = sub_22687CBC8(a1, 1381123655);
LABEL_322:
                  unsigned __int8 v10 = v30;
                  goto LABEL_45;
                }
                goto LABEL_290;
              }
            }
          }
        }
        else
        {
          if (v6 == 1918979428) {
            goto LABEL_271;
          }
          unsigned __int8 v10 = v15;
          if (v6 != 1918979445)
          {
            unsigned __int8 v10 = 1;
            if (v6 == 1918979649) {
              goto LABEL_221;
            }
          }
        }
        goto LABEL_45;
      }
      if (v6 > 1918981954)
      {
        if (v6 > 1937011780)
        {
          if (v6 != 1937011781)
          {
            int v39 = 1937330789;
            goto LABEL_248;
          }
        }
        else
        {
          if (v6 == 1918981955)
          {
            if ((v13 == 10 || !v13) && v17)
            {
              BOOL v30 = sub_22688B734(a1, @"ht40_5GHz");
              goto LABEL_322;
            }
            goto LABEL_290;
          }
          if (v6 != 1937006964) {
            goto LABEL_45;
          }
        }
        BOOL v30 = sub_22687CBC8(a1, 1097749364);
        goto LABEL_322;
      }
      if (v6 != 1918980914 && v6 != 1918980965)
      {
        unsigned __int16 v24 = 21810;
        goto LABEL_163;
      }
    }
    else
    {
      if (v6 <= 1885688642)
      {
        if (v6 <= 1735279981)
        {
          if (v6 <= 1684557158)
          {
            if (v6 != 1684554343 && v6 != 1684555118)
            {
              int v23 = 1684556901;
              goto LABEL_264;
            }
          }
          else
          {
            if (v6 > 1718842223)
            {
              if (v6 == 1718842224)
              {
                BOOL v25 = v46 && v54 == 1;
                goto LABEL_327;
              }
              if (v6 != 1735279207) {
                goto LABEL_45;
              }
              goto LABEL_237;
            }
            if (v6 != 1684557159)
            {
              int v22 = 1718186597;
              goto LABEL_186;
            }
          }
LABEL_265:
          unsigned __int8 v10 = v57;
          goto LABEL_45;
        }
        if (v6 <= 1851868779)
        {
          if (v6 != 1735279982)
          {
            if (v6 == 1818315088) {
              goto LABEL_192;
            }
            int v22 = 1849970010;
            goto LABEL_186;
          }
          goto LABEL_237;
        }
        if (v6 > 1885686083)
        {
          if (v6 == 1885686084)
          {
            BOOL v28 = v49 == 2;
            int v42 = v48;
LABEL_324:
            BOOL v25 = v28 && v42 == 0;
            goto LABEL_327;
          }
          unsigned __int16 v26 = 20567;
        }
        else
        {
          if (v6 == 1851868780) {
            goto LABEL_192;
          }
          unsigned __int16 v26 = 16707;
        }
LABEL_260:
        if (v6 != (v26 | 0x70650000)) {
          goto LABEL_45;
        }
        goto LABEL_261;
      }
      if (v6 <= 1918977106)
      {
        if (v6 <= 1886213216)
        {
          if (v6 == 1885688643 || v6 == 1885688654) {
            goto LABEL_261;
          }
          unsigned __int16 v26 = 21838;
          goto LABEL_260;
        }
        if (v6 <= 1918976872)
        {
          if (v6 == 1886213217)
          {
            char v41 = sub_22687CBC8(a1, 1181898604);
            unsigned __int8 v10 = (HIBYTE(v57) != 0) & ~v41;
            goto LABEL_45;
          }
          unsigned __int16 v24 = 16757;
          goto LABEL_163;
        }
        if (v6 != 1918976873)
        {
          int v39 = 1918976876;
LABEL_248:
          if (v6 != v39) {
            goto LABEL_45;
          }
          goto LABEL_249;
        }
        goto LABEL_252;
      }
      if (v6 > 1918978352)
      {
        if ((v6 - 1918978353) >= 2)
        {
          int v35 = 1918978900;
LABEL_209:
          if (v6 == v35) {
LABEL_210:
          }
            unsigned __int8 v10 = v15;
          goto LABEL_45;
        }
        goto LABEL_252;
      }
      if (v6 == 1918977107) {
        goto LABEL_221;
      }
      if (v6 != 1918977586)
      {
        unsigned __int16 v24 = 18028;
LABEL_163:
        int v27 = v24 | 0x72610000;
LABEL_164:
        if (v6 != v27) {
          goto LABEL_45;
        }
      }
    }
LABEL_252:
    BOOL v25 = v21 < 4 || HIDWORD(v50) == 2;
    goto LABEL_327;
  }
  if (v6 <= 1651721024)
  {
    if (v6 > 1397572214)
    {
      if (v6 <= 1651717458)
      {
        if (v6 > 1635077709)
        {
          if (v6 <= 1635214180)
          {
            if (v6 == 1635077710 || v6 == 1635077712) {
              unsigned __int8 v10 = HIBYTE(v48);
            }
            goto LABEL_45;
          }
          if (v6 != 1635214181)
          {
            int v39 = 1651717454;
            goto LABEL_248;
          }
          goto LABEL_234;
        }
        unsigned __int8 v10 = v46;
        if (v6 == 1397572215) {
          goto LABEL_45;
        }
        if (v6 != 1633116526)
        {
          unsigned __int8 v10 = 1;
          if (v6 != 1633899617) {
            goto LABEL_45;
          }
          BOOL v31 = v13 == 1;
          unsigned __int8 v32 = (HIDWORD(v50) == 1) & ~v45;
          goto LABEL_306;
        }
        BOOL v34 = HIBYTE(v48) == 0;
        int v33 = HIBYTE(v57);
        goto LABEL_295;
      }
      if (v6 > 1651717711)
      {
        if (v6 <= 1651718220)
        {
          if (v6 != 1651717712)
          {
            if (v6 != 1651717715) {
              goto LABEL_45;
            }
            if (!sub_22688E4B8(a1))
            {
              BOOL v25 = (v52 & 0xFFFFFFFB) == 1;
              goto LABEL_327;
            }
LABEL_290:
            unsigned __int8 v10 = 0;
            goto LABEL_45;
          }
          BOOL v28 = v52 == 3 || v52 == 5;
          goto LABEL_302;
        }
        if (v6 != 1651718221)
        {
          if (v6 != 1651720532) {
            goto LABEL_45;
          }
          BOOL v40 = v13 == 1;
          goto LABEL_298;
        }
LABEL_271:
        if (v13 == 10 || !v13)
        {
          unsigned __int8 v10 = !sub_22687CBC8(a1, 1852782669);
          goto LABEL_45;
        }
        goto LABEL_290;
      }
      if (v6 == 1651717459)
      {
LABEL_249:
        if (v13 == 20) {
          unsigned __int8 v10 = 1;
        }
        else {
          unsigned __int8 v10 = v15;
        }
        goto LABEL_45;
      }
      if (v6 != 1651717697)
      {
        int v36 = 1651717709;
        goto LABEL_205;
      }
      goto LABEL_266;
    }
    if (v6 > 912684907)
    {
      if (v6 > 913601123)
      {
        if (v6 > 1229409615)
        {
          if (v6 != 1229409616)
          {
            if (v6 == 1397572211) {
              unsigned __int8 v10 = v46;
            }
            goto LABEL_45;
          }
          BOOL v30 = sub_22687CBC8(a1, 1229409616);
          goto LABEL_322;
        }
        if (v6 != 913601124)
        {
          int v23 = 1146250611;
          goto LABEL_264;
        }
LABEL_226:
        if (v52 != 5 && v52 != 3) {
          goto LABEL_290;
        }
        int v29 = v51;
        goto LABEL_289;
      }
      if (v6 == 912684908 || v6 == 913532259) {
        goto LABEL_226;
      }
      if (v6 != 913532535) {
        goto LABEL_45;
      }
LABEL_169:
      BOOL v25 = v52 == 3 || v52 == 5;
      goto LABEL_327;
    }
    if (v6 > 911697782)
    {
      if (v6 == 911697783)
      {
LABEL_206:
        int v29 = v52;
LABEL_289:
        BOOL v40 = v29 == 0;
LABEL_298:
        unsigned __int8 v10 = !v40;
        goto LABEL_45;
      }
      if (v6 != 911701093)
      {
        int v36 = 912356724;
LABEL_205:
        if (v6 != v36) {
          goto LABEL_45;
        }
        goto LABEL_206;
      }
      BOOL v28 = v52 == 3;
    }
    else
    {
      if (v6 == 910975332) {
        goto LABEL_169;
      }
      if (v6 == 911696228)
      {
LABEL_266:
        BOOL v37 = v52 == 0;
        int v38 = HIBYTE(v51);
LABEL_267:
        BOOL v25 = !v37 && v38 == 0;
        goto LABEL_327;
      }
      if (v6 != 911697528) {
        goto LABEL_45;
      }
      BOOL v28 = (v52 & 0xFFFFFFFB) == 1;
    }
LABEL_302:
    int v42 = HIBYTE(v51);
    goto LABEL_324;
  }
  if (v6 <= 1651724354)
  {
    if (v6 > 1651722058)
    {
      switch(v6)
      {
        case 1651722059:
          goto LABEL_210;
        case 1651722060:
        case 1651722061:
        case 1651722063:
        case 1651722065:
        case 1651722066:
          goto LABEL_45;
        case 1651722062:
        case 1651722067:
          unsigned __int8 v10 = v18;
          goto LABEL_45;
        case 1651722064:
          BOOL v40 = !v18 || HIDWORD(v58) == 1;
          goto LABEL_298;
        default:
          if ((v6 - 1651724337) < 2) {
            goto LABEL_252;
          }
          int v35 = 1651723637;
          goto LABEL_209;
      }
    }
    if (v6 <= 1651722048)
    {
      if (v6 != 1651721025)
      {
        if (v6 == 1651721040)
        {
          if (v52 != 5 && v52 != 3) {
            goto LABEL_290;
          }
          int v29 = HIBYTE(v51);
        }
        else
        {
          if (v6 != 1651721797 || (v52 == 5 || v52 == 3) && (_BYTE)v51) {
            goto LABEL_45;
          }
          int v29 = HIBYTE(v57);
        }
        goto LABEL_289;
      }
      BOOL v34 = v52 == 0;
      int v33 = HIBYTE(v51);
      goto LABEL_295;
    }
    unsigned __int8 v10 = v46;
    if (v6 == 1651722049) {
      goto LABEL_45;
    }
    if (v6 != 1651722052)
    {
      unsigned __int8 v10 = 1;
      if (v6 != 1651722053) {
        goto LABEL_45;
      }
      if (v8)
      {
        if (v13 != 10 && v13 || HIBYTE(v57) != v57) {
          unsigned __int8 v10 = v13 == 20 && v9;
        }
        goto LABEL_45;
      }
      goto LABEL_290;
    }
LABEL_237:
    BOOL v34 = !v18;
    int v33 = v57;
    goto LABEL_295;
  }
  if (v6 > 1651725142)
  {
    if (v6 <= 1651726164)
    {
      if (v6 != 1651725143 && v6 != 1651726147)
      {
        if (v6 == 1651726150) {
          unsigned __int8 v10 = v56;
        }
        goto LABEL_45;
      }
      goto LABEL_192;
    }
    if (v6 <= 1683440722)
    {
      if (v6 == 1651726165) {
        goto LABEL_192;
      }
      int v27 = 1651733076;
      goto LABEL_164;
    }
    unsigned __int8 v10 = v15;
    if (v6 == 1683440723) {
      goto LABEL_45;
    }
    int v23 = 1684551989;
    unsigned __int8 v10 = 1;
LABEL_264:
    if (v6 != v23) {
      goto LABEL_45;
    }
    goto LABEL_265;
  }
  if (v6 <= 1651724876)
  {
    if (v6 != 1651724355)
    {
      unsigned __int8 v10 = v15;
      if (v6 == 1651724867) {
        goto LABEL_45;
      }
      unsigned __int8 v10 = 1;
      if (v6 != 1651724870) {
        goto LABEL_45;
      }
      int v33 = HIBYTE(v57);
      BOOL v34 = !v46;
LABEL_295:
      BOOL v40 = v34 || v33 == 0;
      goto LABEL_298;
    }
LABEL_261:
    BOOL v25 = v49 == 2;
LABEL_327:
    unsigned __int8 v10 = v25;
    goto LABEL_45;
  }
  if (v6 <= 1651725130)
  {
    if (v6 != 1651724877)
    {
      int v22 = 1651724880;
LABEL_186:
      if (v6 != v22) {
        goto LABEL_45;
      }
      goto LABEL_192;
    }
LABEL_221:
    v61[0] = 0;
    unsigned __int8 v10 = sub_22687AB24(a1, 1937326416, v61, 0);
    if (v10) {
      goto LABEL_45;
    }
    BOOL v31 = sub_22683C4C8(v61[0]) == 1 && v13 == 3;
    unsigned __int8 v32 = (v13 == 20) ^ (v13 != 1);
    goto LABEL_306;
  }
  if (v6 == 1651725131)
  {
    unsigned __int8 v10 = v13 != 3 && v59 != 1 && v21 > 3;
    goto LABEL_45;
  }
  if (v6 == 1651725133)
  {
LABEL_240:
    BOOL v40 = v13 == 3;
    goto LABEL_298;
  }
LABEL_45:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_22688E468(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_22688E4B8(uint64_t a1)
{
  sub_22689F090(&__p, "WiFi.radios.[*].");
  int v6 = 0;
  sub_226880920((unsigned __int8 *)&__p, 1651723853, &__p);
  BOOL v2 = 0;
  if (!sub_226888134(a1, (uint64_t)&__p, &v6, 0) && v6 == 1)
  {
    if (sub_22687CBC8(a1, 1884509249))
    {
      BOOL v5 = 0;
      sub_226880920((unsigned __int8 *)&__p, 1651724357, &__p);
      int v3 = sub_226888348(a1, (uint64_t)&__p, &v5, 0);
      BOOL v2 = (v3 | v5) == 0;
    }
    else
    {
      BOOL v2 = 1;
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_22688E59C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22688E5BC(uint64_t a1, const __CFString *a2, const std::string *a3, int a4, std::string *a5)
{
  uint64_t v66 = *MEMORY[0x263EF8340];
  CFArrayRef v62 = 0;
  uint64_t v63 = 0;
  memset(&__p, 0, sizeof(__p));
  int v60 = 0;
  value = 0;
  uint64_t size = HIBYTE(a3->__r_.__value_.__r.__words[2]);
  BOOL v6 = (size & 0x80u) != 0;
  if ((size & 0x80u) != 0) {
    uint64_t size = a3->__r_.__value_.__l.__size_;
  }
  if (v6) {
    BOOL v7 = (const std::string *)a3->__r_.__value_.__r.__words[0];
  }
  else {
    BOOL v7 = a3;
  }
  if (size < 8)
  {
LABEL_11:
    uint64_t v15 = 4294967292;
    goto LABEL_12;
  }
  uint64_t v12 = (char *)v7 + size;
  int v13 = (std::string *)v7;
  while (1)
  {
    BOOL v14 = (char *)memchr(v13, 118, size - 7);
    if (!v14) {
      goto LABEL_11;
    }
    if (*(void *)v14 == 0x5D2A5B2E73706176) {
      break;
    }
    int v13 = (std::string *)(v14 + 1);
    uint64_t size = v12 - (char *)v13;
    if (v12 - (char *)v13 < 8) {
      goto LABEL_11;
    }
  }
  if (v14 == v12) {
    std::string::size_type v17 = -1;
  }
  else {
    std::string::size_type v17 = v14 - (char *)v7;
  }
  uint64_t v15 = 4294967292;
  if (a2 && v17 != -1)
  {
    std::string::basic_string(&__str, a3, 0, v17, (std::allocator<char> *)&v64);
    std::string::operator=(&__p, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int64_t v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      int64_t v18 = __p.__r_.__value_.__l.__size_;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    int v20 = (char *)p_p + v18;
    if (v18 >= 1)
    {
      unsigned int v21 = p_p;
      do
      {
        int v22 = memchr(v21, 46, v18);
        if (!v22) {
          break;
        }
        if (*v22 == 46) {
          goto LABEL_34;
        }
        unsigned int v21 = (std::string *)(v22 + 1);
        int64_t v18 = v20 - (unsigned char *)v21;
      }
      while (v20 - (unsigned char *)v21 > 0);
    }
    int v22 = v20;
LABEL_34:
    if (v22 == v20) {
      std::string::size_type v23 = 0;
    }
    else {
      std::string::size_type v23 = v22 - (unsigned char *)p_p + 1;
    }
    std::string::basic_string(&__str, &__p, v23, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v64);
    std::string::operator=(&__p, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    int v29 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &__p
        : (std::string *)__p.__r_.__value_.__r.__words[0];
    sub_22686088C(a2, (uint64_t)&v63, (UInt8 *)v29, v24, v25, v26, v27, v28, v57);
    uint64_t v15 = v35;
    if (!v35)
    {
      sub_22686088C(v63, (uint64_t)&v62, (UInt8 *)"%kO", v30, v31, v32, v33, v34, @"vaps");
      if ((a4 & 1) != 0 || (uint64_t v15 = v36, !v36))
      {
        if (v62)
        {
          CFIndex Count = CFArrayGetCount(v62);
          if (Count >= 1)
          {
            uint64_t v48 = 0;
            while (1)
            {
              sub_22686088C((const __CFString *)v62, (uint64_t)&v60, (UInt8 *)"[*].%kO:int", v42, v43, v44, v45, v46, v48);
              uint64_t v15 = v49;
              if (v49) {
                goto LABEL_12;
              }
              if (v60 == 6)
              {
                value = (void *)CFArrayGetValueAtIndex(v62, v48);
                if (!value) {
                  goto LABEL_55;
                }
                goto LABEL_60;
              }
              if (Count == ++v48)
              {
                uint64_t v48 = Count;
                goto LABEL_55;
              }
            }
          }
          uint64_t v48 = 0;
LABEL_55:
          if (!a4)
          {
            uint64_t v15 = 4294967291;
            goto LABEL_12;
          }
          uint64_t v15 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], (CFTypeRef *)&value, (uint64_t)"{%kO=%b%kO=%i%kO=%O%kO=%i%kO=%b}", v42, v43, v44, v45, v46, @"Enabled");
          if (v15) {
            goto LABEL_12;
          }
          CFArrayAppendValue(v62, value);
          CFRelease(value);
        }
        else
        {
          uint64_t v15 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], (CFTypeRef *)&v62, (uint64_t)"[{%kO=%b%kO=%i%kO=%O%kO=%i%kO=%b}]", v37, v38, v39, v40, v41, @"Enabled");
          if (v15) {
            goto LABEL_12;
          }
          CFDictionarySetValue((CFMutableDictionaryRef)v63, @"vaps", v62);
          CFRelease(v62);
          uint64_t v48 = 0;
        }
LABEL_60:
        snprintf(__s, 0x20uLL, "%ld", v48);
        char v50 = HIBYTE(a5->__r_.__value_.__r.__words[2]);
        if (v50 >= 0) {
          int64_t v51 = HIBYTE(a5->__r_.__value_.__r.__words[2]);
        }
        else {
          int64_t v51 = a5->__r_.__value_.__l.__size_;
        }
        if (v50 >= 0) {
          int v52 = a5;
        }
        else {
          int v52 = (std::string *)a5->__r_.__value_.__r.__words[0];
        }
        uint64_t v53 = (char *)v52 + v51;
        if (v51 >= 1)
        {
          int v54 = v52;
          do
          {
            BOOL v55 = (char *)memchr(v54, 42, v51);
            if (!v55) {
              break;
            }
            if (*v55 == 42) {
              goto LABEL_72;
            }
            int v54 = (std::string *)(v55 + 1);
            int64_t v51 = v53 - (char *)v54;
          }
          while (v53 - (char *)v54 > 0);
        }
        BOOL v55 = v53;
LABEL_72:
        if (v55 == v53) {
          std::string::size_type v56 = -1;
        }
        else {
          std::string::size_type v56 = v55 - (char *)v52;
        }
        std::string::replace(a5, v56, 1uLL, __s);
        uint64_t v15 = 0;
      }
    }
  }
LABEL_12:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v15;
}

void sub_22688EA24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22688EA68(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (*(char *)(a1 + 143) < 0)
  {
    sub_22689EF14(__p, *(void **)(a1 + 120), *(void *)(a1 + 128));
    if (a3) {
      goto LABEL_3;
    }
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)(a1 + 120);
    uint64_t v18 = *(void *)(a1 + 136);
    if (a3)
    {
LABEL_3:
      CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      if (v18 >= 0) {
        BOOL v7 = __p;
      }
      else {
        BOOL v7 = (void **)__p[0];
      }
      CFStringRef v8 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], (const char *)v7, 0x8000100u);
      *a3 = v8;
      if (v8)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v14 = a2;
        }
        else {
          uint64_t v14 = *(void *)a2;
        }
        uint64_t v15 = sub_226860774(v6, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v9, v10, v11, v12, v13, v14);
        CFRelease(*a3);
      }
      else
      {
        uint64_t v15 = 4294960568;
      }
      goto LABEL_14;
    }
  }
  uint64_t v15 = 4294967292;
LABEL_14:
  if (SHIBYTE(v18) < 0) {
    operator delete(__p[0]);
  }
  return v15;
}

void sub_22688EB60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22688EB7C(std::string *a1, uint64_t a2, const __CFString *a3)
{
  CFStringRef v8 = 0;
  BOOL v7 = 0;
  uint64_t v4 = sub_226861988(a3, (const char **)&v8, (UInt8 **)&v7);
  if (!v4)
  {
    sub_22689F090(&__str, v8);
    std::string::operator=(a1 + 5, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
  if (v7) {
    free(v7);
  }
  return v4;
}

void sub_22688EC00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22688EC1C(uint64_t a1, uint64_t a2, void *a3)
{
  if (!a3) {
    return 4294967292;
  }
  uint64_t result = 0;
  if (*(unsigned char *)(a1 + 372)) {
    BOOL v5 = (void *)MEMORY[0x263EFFB40];
  }
  else {
    BOOL v5 = (void *)MEMORY[0x263EFFB38];
  }
  *a3 = *v5;
  return result;
}

uint64_t sub_22688EC58(uint64_t a1, uint64_t a2, void *a3)
{
  if (!a3) {
    return 4294967292;
  }
  BOOL v4 = sub_226888C70(a1);
  uint64_t result = 0;
  if (v4) {
    CFAllocatorRef v6 = (void *)MEMORY[0x263EFFB40];
  }
  else {
    CFAllocatorRef v6 = (void *)MEMORY[0x263EFFB38];
  }
  *a3 = *v6;
  return result;
}

uint64_t sub_22688ECB4(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  memset(&v29, 0, sizeof(v29));
  int v28 = 0;
  CFTypeRef cf = 0;
  memset(&v26, 0, sizeof(v26));
  if (!a3)
  {
    uint64_t v9 = 4294967292;
    goto LABEL_10;
  }
  sub_22689F090(__p, "raWM");
  sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v29);
  if (v31 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v8 = sub_226888134(a1, (uint64_t)&v29, &v28, a4);
  uint64_t v9 = v8;
  if ((a4 != 1 || v8 != -5) && !v8)
  {
    if ((v28 - 1) > 1)
    {
      if ((v28 - 3) <= 5)
      {
        sub_22689F090(__p, "raCr");
        sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v29);
        if (v31 < 0) {
          operator delete(__p[0]);
        }
        *(unsigned char *)(a1 + 386) = 1;
        uint64_t v14 = sub_2268884D0(a1, (uint64_t)&v29, (uint64_t)&v26, a4);
        uint64_t v9 = v14;
        *(unsigned char *)(a1 + 386) = 0;
        if (v14 != -5)
        {
          if (v14) {
            goto LABEL_7;
          }
        }
      }
    }
    else
    {
      sub_22689F090(__p, "raWE");
      sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v29);
      if (v31 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v9 = sub_2268820DC(a1, (uint64_t)&v29, (CFMutableDictionaryRef *)&cf, a4);
      if (v9) {
        goto LABEL_7;
      }
      BytePtr = CFDataGetBytePtr((CFDataRef)cf);
      for (CFIndex i = CFDataGetLength((CFDataRef)cf); i; --i)
      {
        int v13 = *BytePtr++;
        snprintf((char *)__p, 0x20uLL, "%.2X", v13);
        char v25 = 2;
        *(_WORD *)std::string __s = __p[0];
        __s[2] = 0;
        std::string::append(&v26, __s, 2uLL);
        if (v25 < 0) {
          operator delete(*(void **)__s);
        }
      }
    }
    CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      BOOL v16 = &v26;
    }
    else {
      BOOL v16 = (std::string *)v26.__r_.__value_.__r.__words[0];
    }
    CFStringRef v17 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], (const char *)v16, 0x8000100u);
    *a3 = v17;
    if (v17)
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v23 = a2;
      }
      else {
        uint64_t v23 = *(void *)a2;
      }
      uint64_t v9 = sub_226860774(v15, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v18, v19, v20, v21, v22, v23);
      CFRelease(*a3);
    }
    else
    {
      uint64_t v9 = 4294960568;
    }
  }
LABEL_7:
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
LABEL_10:
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v26.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v29.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_22688EF98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22688F00C(uint64_t a1, uint64_t a2, const __CFString *a3, uint64_t a4)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __dst = *(std::string *)a2;
  }
  int v29 = 0;
  uint64_t v27 = 0;
  int v28 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  __s1 = 0;
  __uint64_t n = 0;
  uint64_t v23 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  CFTypeRef cf = 0;
  if (a3)
  {
    uint64_t v7 = sub_226861988(a3, &v28, &v27);
    if (v7) {
      goto LABEL_54;
    }
    MEMORY[0x22A65ABB0](&v24, v28);
  }
  else
  {
    LOBYTE(v24) = 0;
    HIBYTE(v26) = 0;
  }
  sub_22689F090(__p, "raCr");
  sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
  if (v16 < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 386) = 1;
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&__dst, (uint64_t)&__s1, a4);
  *(unsigned char *)(a1 + 386) = 0;
  if (v7) {
    goto LABEL_54;
  }
  uint64_t v8 = HIBYTE(v23);
  if (v23 >= 0) {
    size_t v9 = HIBYTE(v23);
  }
  else {
    size_t v9 = __n;
  }
  uint64_t v10 = HIBYTE(v26);
  if (v26 < 0) {
    uint64_t v10 = v25;
  }
  if (v9 == v10)
  {
    if (v26 >= 0) {
      uint64_t v11 = (unsigned __int8 *)&v24;
    }
    else {
      uint64_t v11 = (unsigned __int8 *)v24;
    }
    if (v23 < 0)
    {
      if (memcmp(__s1, v11, __n)) {
        goto LABEL_27;
      }
    }
    else if (HIBYTE(v23))
    {
      p_s1 = &__s1;
      while (*(unsigned __int8 *)p_s1 == *v11)
      {
        uint64_t v7 = 0;
        p_s1 = (void **)((char *)p_s1 + 1);
        ++v11;
        if (!--v8) {
          goto LABEL_54;
        }
      }
      goto LABEL_27;
    }
    uint64_t v7 = 0;
    goto LABEL_54;
  }
LABEL_27:
  sub_22689F090(__p, "raWM");
  sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
  if (v16 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = sub_226888134(a1, (uint64_t)&__dst, &v29, a4);
  if (!v7)
  {
    uint64_t v13 = HIBYTE(v26);
    if (v26 < 0) {
      uint64_t v13 = v25;
    }
    if (v13)
    {
      if (!sub_22688C5A4(a1, (uint64_t)&__dst, (uint64_t)&v24, v29, (unint64_t *)&v18))
      {
        sub_22689F090(__p, "raCr");
        sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
        if (v16 < 0) {
          operator delete(__p[0]);
        }
        *(unsigned char *)(a1 + 386) = 1;
        sub_22689F090(__p, "");
        uint64_t v7 = sub_226888444(a1, (uint64_t)&__dst, (uint64_t)__p, a4);
        if (v16 < 0) {
          operator delete(__p[0]);
        }
        goto LABEL_53;
      }
      uint64_t v7 = sub_22683F308(1918981957, (unsigned __int8 *)v18, v19 - (unsigned char *)v18, 1, (CFStringRef *)&cf);
      if (!v7)
      {
        sub_22689F090(__p, "raWE");
        sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
        if (v16 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v7 = sub_2268809AC(a1, (uint64_t)&__dst, (const __CFString *)cf, a4);
        if (!v7)
        {
          if ((v29 - 3) >= 6) {
            MEMORY[0x22A65ABB0](&v24, "");
          }
LABEL_46:
          sub_22689F090(__p, "raCr");
          sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
          if (v16 < 0) {
            operator delete(__p[0]);
          }
          *(unsigned char *)(a1 + 386) = 1;
          uint64_t v7 = sub_226888444(a1, (uint64_t)&__dst, (uint64_t)&v24, a4);
LABEL_53:
          *(unsigned char *)(a1 + 386) = 0;
        }
      }
    }
    else
    {
      uint64_t v7 = sub_22683F308(1918981957, 0, 0, 1, (CFStringRef *)&cf);
      if (!v7)
      {
        sub_22689F090(__p, "raWE");
        sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
        if (v16 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v7 = sub_2268809AC(a1, (uint64_t)&__dst, (const __CFString *)cf, a4);
        if (!v7) {
          goto LABEL_46;
        }
      }
    }
  }
LABEL_54:
  if (cf) {
    CFRelease(cf);
  }
  if (v27) {
    free(v27);
  }
  if (v18)
  {
    uint64_t v19 = v18;
    operator delete(v18);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete(__s1);
  }
  if (SHIBYTE(v26) < 0) {
    operator delete(v24);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_22688F470(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a16) {
    operator delete(a16);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (*(char *)(v30 - 41) < 0) {
    operator delete(*(void **)(v30 - 64));
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_22688F510(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 1;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) != 0;
  }
  if (a1[23])
  {
    uint64_t v6 = v2 - 1;
    do
    {
      int v8 = *a1++;
      int v7 = v8;
      int v9 = *a2++;
      BOOL v10 = v7 == v9;
      uint64_t v2 = v7 != v9;
      BOOL v10 = !v10 || v6-- == 0;
    }
    while (!v10);
  }
  return v2;
}

uint64_t sub_22688F5A8(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3, uint64_t a4)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
    if (a3) {
      goto LABEL_3;
    }
LABEL_12:
    uint64_t v9 = 4294967292;
    goto LABEL_13;
  }
  std::string __dst = *(std::string *)a2;
  if (!a3) {
    goto LABEL_12;
  }
LABEL_3:
  sub_22689F090(__p, "raNm");
  sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 386) = 1;
  unsigned int v7 = sub_226885770((CFDictionaryRef *)a1, (uint64_t)&__dst, a3, a4);
  *(unsigned char *)(a1 + 386) = 0;
  if (v7 == -5 && a4 == 1) {
    uint64_t v9 = 4294967291;
  }
  else {
    uint64_t v9 = v7;
  }
LABEL_13:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_22688F68C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22688F6C4(uint64_t a1, uint64_t a2, const __CFString *a3, uint64_t a4)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __dst = *(std::string *)a2;
  }
  int v16 = 0;
  uint64_t v14 = 0;
  CFTypeRef cf = 0;
  char v12 = 0;
  uint64_t v13 = 0;
  sub_22689F090(__p, "raNm");
  sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = sub_2268820DC(a1, (uint64_t)&__dst, (CFMutableDictionaryRef *)&cf, a4);
  if (!v7)
  {
    if (!cf)
    {
      uint64_t v7 = 4294967291;
      goto LABEL_28;
    }
    *(unsigned char *)(a1 + 386) = 1;
    uint64_t v7 = sub_2268809AC(a1, (uint64_t)&__dst, a3, a4);
    *(unsigned char *)(a1 + 386) = 0;
    if (!v7)
    {
      sub_22689F090(__p, "raWM");
      sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
      if (v11 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v7 = sub_226888134(a1, (uint64_t)&__dst, &v16, a4);
      if (!v7 && a3 && (v16 - 3) <= 5)
      {
        if (CFEqual(a3, (CFStringRef)cf)) {
          goto LABEL_33;
        }
        sub_22689F090(__p, "raCr");
        sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
        if (v11 < 0) {
          operator delete(__p[0]);
        }
        *(unsigned char *)(a1 + 386) = 1;
        uint64_t v7 = sub_2268884D0(a1, (uint64_t)&__dst, (uint64_t)&v12, a4);
        *(unsigned char *)(a1 + 386) = 0;
        if (v7) {
          goto LABEL_7;
        }
        uint64_t v8 = HIBYTE(v14);
        if (v14 < 0) {
          uint64_t v8 = v13;
        }
        if (v8)
        {
          *(unsigned char *)(a1 + 386) = 1;
          sub_22689F090(__p, "");
          uint64_t v7 = sub_226888444(a1, (uint64_t)&__dst, (uint64_t)__p, a4);
          if (v11 < 0) {
            operator delete(__p[0]);
          }
          *(unsigned char *)(a1 + 386) = 0;
          if (!v7)
          {
            sub_226880920((unsigned __int8 *)&__dst, 1651725131, &__dst);
            uint64_t v7 = sub_226888444(a1, (uint64_t)&__dst, (uint64_t)&v12, a4);
          }
        }
        else
        {
LABEL_33:
          uint64_t v7 = 0;
        }
      }
    }
  }
LABEL_7:
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
LABEL_28:
  if (SHIBYTE(v14) < 0) {
    operator delete(v12);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_22688F950(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22688F9B0(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&v27, 0, sizeof(v27));
  BOOL v8 = sub_22687CBC8(a1, 1095062317);
  uint64_t valuePtr = 0;
  BOOL v25 = 0;
  if (a3)
  {
    BOOL v9 = v8;
    sub_22689F090(__p, "raEA");
    sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v27);
    if (v24 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v10 = sub_226888348(a1, (uint64_t)&v27, &v25, a4);
    uint64_t v11 = v10;
    if ((a4 != 1 || v10 != -5) && !v10)
    {
      sub_22689F090(__p, "raWM");
      sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v27);
      if (v24 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v11 = sub_226888134(a1, (uint64_t)&v27, (char *)&valuePtr + 4, a4);
      if (!v11)
      {
        switch(HIDWORD(valuePtr))
        {
          case 0:
            int v12 = 1;
            goto LABEL_37;
          case 1:
            int v12 = 2;
            goto LABEL_37;
          case 2:
            int v12 = 3;
            goto LABEL_37;
          case 3:
            if (v9)
            {
              if (v25) {
                int v12 = 11;
              }
              else {
                int v12 = 6;
              }
            }
            else if (v25)
            {
              int v12 = 9;
            }
            else
            {
              int v12 = 4;
            }
            goto LABEL_37;
          case 4:
            BOOL v22 = 0;
            sub_22689F090(__p, "rTSN");
            sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v27);
            if (v24 < 0) {
              operator delete(__p[0]);
            }
            if (sub_22687CBC8(a1, 1414745645))
            {
              uint64_t v11 = sub_226888348(a1, (uint64_t)&v27, &v22, a4);
              if (v11) {
                break;
              }
            }
            if (v25)
            {
              int v12 = 10;
            }
            else if (v22)
            {
              int v12 = 8;
            }
            else
            {
              int v12 = 5;
            }
LABEL_37:
            LODWORD(valuePtr) = v12;
LABEL_38:
            CFAllocatorRef v14 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
            CFNumberRef v15 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
            *a3 = v15;
            if (v15)
            {
              if (*(char *)(a2 + 23) >= 0) {
                uint64_t v21 = a2;
              }
              else {
                uint64_t v21 = *(void *)a2;
              }
              uint64_t v11 = sub_226860774(v14, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v16, v17, v18, v19, v20, v21);
              CFRelease(*a3);
            }
            else
            {
              uint64_t v11 = 4294960568;
            }
            break;
          case 5:
            if (v25) {
              int v12 = 12;
            }
            else {
              int v12 = 7;
            }
            goto LABEL_37;
          default:
            goto LABEL_38;
        }
      }
    }
  }
  else
  {
    uint64_t v11 = 4294967292;
  }
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v27.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_22688FC54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22688FCB8(uint64_t a1, uint64_t a2, const __CFNumber *a3, uint64_t a4)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __dst = *(std::string *)a2;
  }
  BOOL v7 = sub_22687CBC8(a1, 1095062317);
  uint64_t valuePtr = 0;
  if (CFNumberGetValue(a3, kCFNumberSInt32Type, (char *)&valuePtr + 4))
  {
    switch(HIDWORD(valuePtr))
    {
      case 1:
        sub_22689F090(__p, "raWM");
        sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
        if (v16 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__dst, 0, a4);
        goto LABEL_30;
      case 2:
        sub_22689F090(__p, "raWM");
        sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
        if (v16 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__dst, 1, a4);
        goto LABEL_30;
      case 3:
        sub_22689F090(__p, "raWM");
        sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
        if (v16 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__dst, 2, a4);
        goto LABEL_30;
      case 4:
      case 6:
      case 9:
      case 0xB:
        sub_22689F090(__p, "raWM");
        sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
        if (v16 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__dst, 3, a4);
        goto LABEL_30;
      case 5:
      case 8:
      case 0xA:
        sub_22689F090(__p, "raWM");
        sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
        if (v16 < 0) {
          operator delete(__p[0]);
        }
        if (v7) {
          int v10 = 4;
        }
        else {
          int v10 = 3;
        }
        goto LABEL_15;
      case 7:
      case 0xC:
        sub_22689F090(__p, "raWM");
        sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
        if (v16 < 0) {
          operator delete(__p[0]);
        }
        if (v7) {
          int v10 = 5;
        }
        else {
          int v10 = 3;
        }
LABEL_15:
        uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__dst, v10, a4);
LABEL_30:
        uint64_t v9 = v8;
        if (v8) {
          break;
        }
        if (SHIDWORD(valuePtr) <= 8)
        {
          sub_22689F090(__p, "raEA");
          sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
          if (v16 < 0) {
            operator delete(__p[0]);
          }
          uint64_t v12 = *MEMORY[0x263EFFB38];
          uint64_t v13 = sub_2268809AC(a1, (uint64_t)&__dst, (const __CFString *)*MEMORY[0x263EFFB38], a4);
LABEL_38:
          uint64_t v9 = v13;
          if (!v13)
          {
            if (!sub_22687CBC8(a1, 1414745645)) {
              goto LABEL_46;
            }
            sub_22689F090(__p, "rTSN");
            sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
            if (v16 < 0) {
              operator delete(__p[0]);
            }
            CFStringRef v14 = (const __CFString *)(HIDWORD(valuePtr) == 8 ? *MEMORY[0x263EFFB40] : v12);
            uint64_t v9 = sub_2268809AC(a1, (uint64_t)&__dst, v14, a4);
            if (!v9)
            {
LABEL_46:
              sub_22689F090(__p, "raKT");
              sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
              if (v16 < 0) {
                operator delete(__p[0]);
              }
              uint64_t v9 = sub_226888134(a1, (uint64_t)&__dst, &valuePtr, a4);
              if (!v9 && SHIDWORD(valuePtr) >= 4 && !valuePtr)
              {
                sub_22689F090(__p, "raKT");
                sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
                if (v16 < 0) {
                  operator delete(__p[0]);
                }
                uint64_t v9 = sub_2268814C8(a1, (uint64_t)&__dst, 3600, a4);
              }
            }
          }
          break;
        }
        sub_22689F090(__p, "raEA");
        sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
        if (v16 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v9 = sub_2268809AC(a1, (uint64_t)&__dst, (const __CFString *)*MEMORY[0x263EFFB40], a4);
        if (!v9)
        {
          sub_22689F090(__p, "acEn");
          sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
          if (v16 < 0) {
            operator delete(__p[0]);
          }
          uint64_t v12 = *MEMORY[0x263EFFB38];
          uint64_t v9 = sub_2268809AC(a1, (uint64_t)&__dst, (const __CFString *)*MEMORY[0x263EFFB38], a4);
          if (!v9)
          {
            sub_22689F090(__p, "raFl");
            sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
            if (v16 < 0) {
              operator delete(__p[0]);
            }
            uint64_t v9 = sub_2268814C8(a1, (uint64_t)&__dst, 0, a4);
            if (!v9)
            {
              sub_22689F090(__p, "raF2");
              sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
              if (v16 < 0) {
                operator delete(__p[0]);
              }
              uint64_t v13 = sub_2268814C8(a1, (uint64_t)&__dst, 0, a4);
              goto LABEL_38;
            }
          }
        }
        break;
      default:
        uint64_t v9 = 4294967292;
        break;
    }
  }
  else
  {
    uint64_t v9 = 4294960553;
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226890228(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268902FC(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&v23, 0, sizeof(v23));
  int valuePtr = 1000;
  if (a3)
  {
    sub_22689F090(__p, "raCA");
    sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v23);
    if (v20 < 0) {
      operator delete(__p[0]);
    }
    BOOL v22 = 0;
    uint64_t v8 = sub_226888348(a1, (uint64_t)&v23, &v22, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      if (v22) {
        goto LABEL_8;
      }
      sub_22689F090(__p, "raCh");
      sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v23);
      if (v20 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v9 = sub_226888134(a1, (uint64_t)&v23, &valuePtr, a4);
      if (!v9)
      {
LABEL_8:
        CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        CFNumberRef v11 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
        *a3 = v11;
        if (v11)
        {
          if (*(char *)(a2 + 23) >= 0) {
            uint64_t v17 = a2;
          }
          else {
            uint64_t v17 = *(void *)a2;
          }
          uint64_t v9 = sub_226860774(v10, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v12, v13, v14, v15, v16, v17);
          CFRelease(*a3);
        }
        else
        {
          uint64_t v9 = 4294960568;
        }
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226890488(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268904C8(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v41 = *MEMORY[0x263EF8340];
  memset(&v38, 0, sizeof(v38));
  unsigned int valuePtr = 0;
  CFArrayRef theArray = 0;
  if (number)
  {
    if (!CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr))
    {
      uint64_t v7 = 4294960553;
      goto LABEL_78;
    }
    uint64_t v7 = valuePtr;
    switch(valuePtr)
    {
      case 0u:
        goto LABEL_78;
      case 0x3E8u:
        sub_22689F090(__p, "raCA");
        sub_226881624(a2, (uint64_t)__p, &v38);
        if (v40 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v32 = (const __CFString **)MEMORY[0x263EFFB40];
        goto LABEL_76;
      case 0x7D0u:
        BOOL v8 = sub_22688D0E0(a1, v4);
        if (v8) {
          goto LABEL_10;
        }
        MEMORY[0x22A65ABB0](&v38, "WiFi.radios.[*].");
        sub_22689F090(__p, "raCA");
        sub_226881624((unsigned __int8 *)&v38, (uint64_t)__p, &v38);
        if (v40 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v7 = sub_2268809AC(a1, (uint64_t)&v38, (const __CFString *)*MEMORY[0x263EFFB38], v4);
        if (!v7)
        {
LABEL_10:
          CFIndex v9 = sub_2268801D8(a1, 0);
          int v35 = 0;
          if (v9 < 1)
          {
LABEL_83:
            uint64_t v7 = 0;
          }
          else
          {
            uint64_t v10 = 0;
            CFNumberRef v11 = "WiFi.radios.[*].";
            while (1)
            {
              MEMORY[0x22A65ABB0](&v38, v11);
              sub_226880920((unsigned __int8 *)&v38, 1651724867, &v38);
              snprintf((char *)__p, 0x10uLL, "%ld", v10);
              if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                int64_t size = HIBYTE(v38.__r_.__value_.__r.__words[2]);
              }
              else {
                int64_t size = v38.__r_.__value_.__l.__size_;
              }
              if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                uint64_t v13 = &v38;
              }
              else {
                uint64_t v13 = (std::string *)v38.__r_.__value_.__r.__words[0];
              }
              uint64_t v14 = (char *)v13 + size;
              if (size >= 1)
              {
                uint64_t v15 = v13;
                do
                {
                  uint64_t v16 = memchr(v15, 42, size);
                  if (!v16) {
                    break;
                  }
                  if (*v16 == 42) {
                    goto LABEL_24;
                  }
                  uint64_t v15 = (std::string *)(v16 + 1);
                  int64_t size = v14 - (unsigned char *)v15;
                }
                while (v14 - (unsigned char *)v15 > 0);
              }
              uint64_t v16 = v14;
LABEL_24:
              std::string::size_type v17 = v16 == v14 ? -1 : v16 - (unsigned char *)v13;
              std::string::replace(&v38, v17, 1uLL, (const std::string::value_type *)__p);
              uint64_t v7 = sub_226888134(a1, (uint64_t)&v38, &v35, 0);
              if (v7) {
                break;
              }
              if (!sub_226881550(a1, (uint64_t)&v38, v35, 1))
              {
                if (!v8)
                {
                  BOOL v22 = v11;
                  int v34 = 0;
                  if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    std::string v23 = &v38;
                  }
                  else {
                    std::string v23 = (std::string *)v38.__r_.__value_.__r.__words[0];
                  }
                  uint64_t v7 = sub_2268C60C4(a1, (const char *)v23, &theArray, 1);
                  if (v7) {
                    goto LABEL_78;
                  }
                  if (!theArray)
                  {
                    uint64_t v7 = 4294967293;
                    goto LABEL_78;
                  }
                  CFIndex Count = CFArrayGetCount(theArray);
                  if (Count >= 1)
                  {
                    uint64_t v26 = 0;
                    do
                    {
                      sub_22686088C((const __CFString *)theArray, (uint64_t)&v34, (UInt8 *)"[*]:int", v24, v18, v19, v20, v21, v26);
                      uint64_t v7 = v27;
                      if (v27) {
                        goto LABEL_78;
                      }
                      int v28 = v34;
                      if (v34 != 1000 && v34 != 8888)
                      {
                        if (dword_268146940 <= 8000)
                        {
                          if (dword_268146940 != -1
                            || (v30 = sub_226865630((uint64_t)&dword_268146940, 0x1F40u), int v28 = v34, v30))
                          {
                            sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"virtual ACPStatus BaseStation::SetBSSimpleChannel(const std::string &, CFTypeRef, eWhichValue)", 8000, (uint64_t)"%s: Fixing radio channel value for index: %ld @ %s to be %d.\n", v18, v19, v20, v21, (uint64_t)"virtual ACPStatus BaseStation::SetBSSimpleChannel(const std::string &, CFTypeRef, eWhichValue)");
                            int v28 = v34;
                          }
                        }
                        uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v38, v28, 0);
                        if (!v7)
                        {
                          CFNumberRef v11 = v22;
                          goto LABEL_50;
                        }
                        goto LABEL_78;
                      }
                    }
                    while (Count != ++v26);
                  }
                  CFNumberRef v11 = v22;
                }
                if (dword_268146940 <= 8000
                  && (dword_268146940 != -1 || sub_226865630((uint64_t)&dword_268146940, 0x1F40u)))
                {
                  sub_226865EB4((uint64_t)&dword_268146940, (uint64_t)"virtual ACPStatus BaseStation::SetBSSimpleChannel(const std::string &, CFTypeRef, eWhichValue)", 8000, (uint64_t)"%s: Fixing radio channel value for index: %ld @ %s to be BSChannelAuto.\n", v18, v19, v20, v21, (uint64_t)"virtual ACPStatus BaseStation::SetBSSimpleChannel(const std::string &, CFTypeRef, eWhichValue)");
                }
                uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v38, 1000, 0);
                if (v7) {
                  goto LABEL_78;
                }
              }
LABEL_50:
              if (++v10 == v9) {
                goto LABEL_83;
              }
            }
          }
        }
        goto LABEL_78;
    }
    sub_22689F090(__p, "raCh");
    sub_226881624(a2, (uint64_t)__p, &v38);
    if (v40 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v38, valuePtr, v4);
    if (!v7)
    {
      sub_22689F090(__p, "raCA");
      sub_226881624(a2, (uint64_t)__p, &v38);
      if (v40 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v32 = (const __CFString **)MEMORY[0x263EFFB38];
LABEL_76:
      CFStringRef v31 = *v32;
LABEL_77:
      uint64_t v7 = sub_2268809AC(a1, (uint64_t)&v38, v31, v4);
    }
  }
  else
  {
    if (a4 != 1)
    {
      uint64_t v7 = 0;
      goto LABEL_80;
    }
    sub_22689F090(__p, "raCh");
    sub_226881624(a2, (uint64_t)__p, &v38);
    if (v40 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_2268809AC(a1, (uint64_t)&v38, 0, 1);
    if (!v7)
    {
      sub_22689F090(__p, "raCA");
      sub_226881624(a2, (uint64_t)__p, &v38);
      if (v40 < 0) {
        operator delete(__p[0]);
      }
      CFStringRef v31 = 0;
      uint64_t v4 = 1;
      goto LABEL_77;
    }
  }
LABEL_78:
  if (theArray) {
    CFRelease(theArray);
  }
LABEL_80:
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_226890A78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226890AF0(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&v23, 0, sizeof(v23));
  if (a3)
  {
    sub_22689F090(__p, "raCi");
    sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v23);
    if (v20 < 0) {
      operator delete(__p[0]);
    }
    BOOL v22 = 0;
    uint64_t v8 = sub_226888348(a1, (uint64_t)&v23, &v22, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      BOOL valuePtr = v22;
      CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFNumberRef v11 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
      *a3 = v11;
      if (v11)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v17 = a2;
        }
        else {
          uint64_t v17 = *(void *)a2;
        }
        uint64_t v9 = sub_226860774(v10, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v12, v13, v14, v15, v16, v17);
        CFRelease(*a3);
      }
      else
      {
        uint64_t v9 = 4294960568;
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226890C24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226890C5C(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  memset(&v13, 0, sizeof(v13));
  int valuePtr = 0;
  if (!CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr)) {
    return 4294960553;
  }
  sub_22689F090(__p, "raCi");
  sub_226881624(a2, (uint64_t)__p, &v13);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = (const __CFString **)MEMORY[0x263EFFB40];
  if (!valuePtr) {
    uint64_t v7 = (const __CFString **)MEMORY[0x263EFFB38];
  }
  uint64_t v8 = sub_2268809AC(a1, (uint64_t)&v13, *v7, a4);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226890D38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226890D70(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&v15, 0, sizeof(v15));
  int v14 = 0;
  if (a3)
  {
    sub_22689F090(__p, "wdFl");
    sub_226881624(a2, (uint64_t)__p, &v15);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_226888134(a1, (uint64_t)&v15, &v14, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      if ((v14 & 4) != 0) {
        CFAllocatorRef v10 = (void *)MEMORY[0x263EFFB40];
      }
      else {
        CFAllocatorRef v10 = (void *)MEMORY[0x263EFFB38];
      }
      *a3 = *v10;
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226890E58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226890E90(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&v13, 0, sizeof(v13));
  unsigned int v12 = 0;
  sub_22689F090(__p, "wdFl");
  sub_226881624(a2, (uint64_t)__p, &v13);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v8 = sub_226888134(a1, (uint64_t)&v13, &v12, a4);
  if (!v8)
  {
    unsigned int v12 = v12 & 0xFFFFFFFB | (4 * (*MEMORY[0x263EFFB40] == a3));
    sub_22689F090(__p, "wdFl");
    sub_226881624(a2, (uint64_t)__p, &v13);
    if (v11 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_2268814C8(a1, (uint64_t)&v13, v12, a4);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226890FA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226890FE8(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  uint64_t valuePtr = 0;
  int v21 = 0;
  if (a3)
  {
    sub_226880920((unsigned __int8 *)a2, 2002864494, &__p);
    uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &valuePtr, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      sub_226880920((unsigned __int8 *)a2, 2002862934, &__p);
      uint64_t v10 = sub_226888134(a1, (uint64_t)&__p, &v21, a4);
      uint64_t v9 = v10;
      if ((a4 != 1 || v10 != -5) && !v10)
      {
        if (valuePtr == 16)
        {
          if ((~v21 & 0x900) != 0)
          {
            if ((v21 & 0x300) != 0) {
              int v11 = 6;
            }
            else {
              int v11 = 7;
            }
          }
          else
          {
            int v11 = 2;
          }
          HIDWORD(valuePtr) = v11;
        }
        CFAllocatorRef v13 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        CFNumberRef v14 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, (char *)&valuePtr + 4);
        *a3 = v14;
        if (v14)
        {
          if (*(char *)(a2 + 23) >= 0) {
            uint64_t v20 = a2;
          }
          else {
            uint64_t v20 = *(void *)a2;
          }
          uint64_t v9 = sub_226860774(v13, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v15, v16, v17, v18, v19, v20);
          CFRelease(*a3);
        }
        else
        {
          uint64_t v9 = 4294960568;
        }
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226891178(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226891194(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  memset(&v22, 0, sizeof(v22));
  int valuePtr = 0;
  unsigned int v19 = 0;
  int v20 = 0;
  std::string __p = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  if (!CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr))
  {
    uint64_t v7 = 4294960553;
    goto LABEL_11;
  }
  sub_226880920(a2, 2002862934, &v22);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v22, &v19, a4);
  if (v7) {
    goto LABEL_11;
  }
  if ((valuePtr - 6) < 2)
  {
    sub_226880920(a2, 2002864494, &v22);
    uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v22, 16, a4);
    if (v7) {
      goto LABEL_11;
    }
    if (valuePtr == 7) {
      int v8 = 1024;
    }
    else {
      int v8 = 768;
    }
    unsigned int v19 = v19 & 0xFFFFF0FF | v8;
    sub_226880920(a2, 2002862934, &v22);
    int v9 = v19;
    goto LABEL_9;
  }
  if (valuePtr != 2) {
    goto LABEL_29;
  }
  sub_226880920(a2, 2002864494, &v22);
  uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v22, 16, a4);
  if (!v7)
  {
    unsigned int v19 = v19 & 0xFFFFF0FF | 0x900;
    sub_226880920(a2, 2002862934, &v22);
    uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v22, v19, a4);
    if (!v7)
    {
      sub_226880920(a2, 2002864464, &v22);
      uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v22, (uint64_t)&__p, a4);
      if (!v7)
      {
        uint64_t v11 = HIBYTE(v18);
        if (v18 < 0) {
          uint64_t v11 = v17;
        }
        if (v11) {
          goto LABEL_40;
        }
        sub_22689F090(v14, "169.254.255.1");
        uint64_t v7 = sub_226888444(a1, (uint64_t)&v22, (uint64_t)v14, a4);
        if (v15 < 0) {
          operator delete(v14[0]);
        }
        if (!v7)
        {
          sub_226880920(a2, 2002867021, &v22);
          sub_22689F090(v14, "255.255.255.0");
          uint64_t v7 = sub_226888444(a1, (uint64_t)&v22, (uint64_t)v14, a4);
          if (v15 < 0) {
            operator delete(v14[0]);
          }
          if (!v7)
          {
LABEL_40:
            sub_226880920(a2, 1651724877, &v22);
            uint64_t v7 = sub_22688819C(a1, (uint64_t)&v22, 0, a4);
            if (!v7)
            {
              sub_226880920(a2, 912483943, &v22);
              uint64_t v7 = sub_226888134(a1, (uint64_t)&v22, &v20, a4);
              if (!v7)
              {
                BOOL v12 = sub_22687CBC8(a1, 1347437878);
                if (v20) {
                  char v13 = v12;
                }
                else {
                  char v13 = 1;
                }
                if ((v13 & 1) == 0)
                {
                  sub_226880920(a2, 912483943, &v22);
                  int v9 = 0;
LABEL_9:
                  uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v22, v9, a4);
                  goto LABEL_11;
                }
LABEL_29:
                uint64_t v7 = 0;
              }
            }
          }
        }
      }
    }
  }
LABEL_11:
  if (SHIBYTE(v18) < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268914DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (*(char *)(v21 - 33) < 0) {
    operator delete(*(void **)(v21 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689152C(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (a3)
  {
    sub_226880920(a2, 1836010822, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if (v11) {
        int v9 = (void *)MEMORY[0x263EFFB40];
      }
      else {
        int v9 = (void *)MEMORY[0x263EFFB38];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268915F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226891610(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  sub_226880920(a2, 1836010822, &__p);
  uint64_t v7 = sub_2268814C8(a1, (uint64_t)&__p, *MEMORY[0x263EFFB40] == a3, a4);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268916A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268916BC(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (a3)
  {
    sub_226880920(a2, 1885619820, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if (v11) {
        int v9 = (void *)MEMORY[0x263EFFB40];
      }
      else {
        int v9 = (void *)MEMORY[0x263EFFB38];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226891784(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268917A0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  sub_226880920(a2, 1885619820, &__p);
  uint64_t v7 = sub_2268814C8(a1, (uint64_t)&__p, *MEMORY[0x263EFFB40] == a3, a4);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_226891830(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689184C(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  if (a3)
  {
    sub_226880920((unsigned __int8 *)a2, 1836011588, &__p);
    BOOL v21 = 0;
    uint64_t v8 = sub_226888348(a1, (uint64_t)&__p, &v21, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      if (v21) {
        int v10 = 2;
      }
      else {
        int v10 = 1;
      }
      int valuePtr = v10;
      CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFNumberRef v12 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
      *a3 = v12;
      if (v12)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v18 = a2;
        }
        else {
          uint64_t v18 = *(void *)a2;
        }
        uint64_t v9 = sub_226860774(v11, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v13, v14, v15, v16, v17, v18);
        CFRelease(*a3);
      }
      else
      {
        uint64_t v9 = 4294960568;
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226891970(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689198C(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int valuePtr = 0;
  if (!CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr)) {
    return 4294960553;
  }
  int v7 = valuePtr;
  sub_226880920(a2, 1836011588, &__p);
  uint64_t v8 = (const __CFString **)MEMORY[0x263EFFB40];
  if (v7 != 2) {
    uint64_t v8 = (const __CFString **)MEMORY[0x263EFFB38];
  }
  uint64_t v9 = sub_2268809AC(a1, (uint64_t)&__p, *v8, a4);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226891A4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226891A68(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v19 = 0;
  if (a3)
  {
    sub_226880920((unsigned __int8 *)a2, 1836008265, &__p);
    uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v19, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      int valuePtr = sub_22688CCBC(a1, v19);
      if (valuePtr == -1)
      {
        uint64_t v9 = 4294967291;
      }
      else
      {
        CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        CFNumberRef v11 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
        *a3 = v11;
        if (v11)
        {
          if (*(char *)(a2 + 23) >= 0) {
            uint64_t v17 = a2;
          }
          else {
            uint64_t v17 = *(void *)a2;
          }
          uint64_t v9 = sub_226860774(v10, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v12, v13, v14, v15, v16, v17);
          CFRelease(*a3);
        }
        else
        {
          uint64_t v9 = 4294960568;
        }
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226891B98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226891BB4(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  if (!number)
  {
    sub_226880920(a2, 1836008259, &__p);
    uint64_t v7 = sub_2268809AC(a1, (uint64_t)&__p, 0, a4);
    if (v7) {
      goto LABEL_10;
    }
    sub_226880920(a2, 1836008265, &__p);
    uint64_t v8 = sub_2268809AC(a1, (uint64_t)&__p, 0, a4);
    goto LABEL_8;
  }
  uint64_t valuePtr = 0;
  int v10 = 0;
  if (CFNumberGetValue(number, kCFNumberSInt32Type, (char *)&valuePtr + 4))
  {
    uint64_t v7 = sub_22688CD4C(a1, HIDWORD(valuePtr), &v10, &valuePtr);
    if (!v7)
    {
      sub_226880920(a2, 1836008259, &__p);
      uint64_t v7 = sub_2268814C8(a1, (uint64_t)&__p, valuePtr, a4);
      if (!v7)
      {
        sub_226880920(a2, 1836008265, &__p);
        uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v10, a4);
LABEL_8:
        uint64_t v7 = v8;
      }
    }
  }
  else
  {
    uint64_t v7 = 4294960553;
  }
LABEL_10:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_226891D08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226891D28(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&v22, 0, sizeof(v22));
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v21 = 0;
  if (a3)
  {
    sub_226880920((unsigned __int8 *)a2, 1853117270, &v22);
    uint64_t v8 = sub_2268884D0(a1, (uint64_t)&v22, (uint64_t)__p, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      if (v21 >= 0) {
        CFNumberRef v11 = __p;
      }
      else {
        CFNumberRef v11 = (void **)__p[0];
      }
      CFStringRef v12 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], (const char *)v11, 0x8000100u);
      *a3 = v12;
      if (v12)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v18 = a2;
        }
        else {
          uint64_t v18 = *(void *)a2;
        }
        uint64_t v9 = sub_226860774(v10, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v13, v14, v15, v16, v17, v18);
        CFRelease(*a3);
      }
      else
      {
        uint64_t v9 = 4294960568;
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(v21) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226891E60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226891E8C(uint64_t a1, unsigned __int8 *a2, const __CFString *a3, uint64_t a4)
{
  memset(&v13, 0, sizeof(v13));
  CFNumberRef v11 = 0;
  std::string __s = 0;
  uint64_t v7 = sub_226861988(a3, (const char **)&__s, (UInt8 **)&v11);
  if (!v7)
  {
    sub_226880920(a2, 1853117270, &v13);
    sub_22689F090(__p, __s);
    uint64_t v7 = sub_226888444(a1, (uint64_t)&v13, (uint64_t)__p, a4);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
  }
  if (v11) {
    free(v11);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_226891F54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226891F8C(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  memset(&v22, 0, sizeof(v22));
  int v21 = 0;
  if (a3)
  {
    sub_22689F090(__p, "raAu");
    sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v22);
    if (v20 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_226888134(a1, (uint64_t)&v22, &v21, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      snprintf(__str, 0x20uLL, "%u", v21);
      CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFStringRef v11 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], __str, 0x8000100u);
      *a3 = v11;
      if (v11)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v17 = a2;
        }
        else {
          uint64_t v17 = *(void *)a2;
        }
        uint64_t v9 = sub_226860774(v10, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v12, v13, v14, v15, v16, v17);
        CFRelease(*a3);
      }
      else
      {
        uint64_t v9 = 4294960568;
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226892104(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689213C(uint64_t a1, unsigned __int8 *a2, CFStringRef theString1, uint64_t a4)
{
  memset(&v15, 0, sizeof(v15));
  int v14 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  if (theString1 && CFStringCompare(theString1, &stru_26DA6BE88, 0))
  {
    uint64_t v8 = sub_226861988(theString1, (const char **)&v13, (UInt8 **)&v12);
    if (v8) {
      goto LABEL_9;
    }
    sscanf(v13, "%u", &v14);
  }
  else
  {
    int v14 = 0;
  }
  sub_22689F090(__p, "raAu");
  sub_226881624(a2, (uint64_t)__p, &v15);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v8 = sub_2268814C8(a1, (uint64_t)&v15, v14, a4);
LABEL_9:
  if (v12) {
    free(v12);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226892244(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689227C(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  memset(&v22, 0, sizeof(v22));
  int v21 = 0;
  if (a3)
  {
    sub_22689F090(__p, "raU2");
    sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v22);
    if (v20 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_226888134(a1, (uint64_t)&v22, &v21, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      snprintf(__str, 0x20uLL, "%u", v21);
      CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFStringRef v11 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], __str, 0x8000100u);
      *a3 = v11;
      if (v11)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v17 = a2;
        }
        else {
          uint64_t v17 = *(void *)a2;
        }
        uint64_t v9 = sub_226860774(v10, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v12, v13, v14, v15, v16, v17);
        CFRelease(*a3);
      }
      else
      {
        uint64_t v9 = 4294960568;
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_2268923F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689242C(uint64_t a1, unsigned __int8 *a2, CFStringRef theString1, uint64_t a4)
{
  memset(&v15, 0, sizeof(v15));
  int v14 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  if (theString1 && CFStringCompare(theString1, &stru_26DA6BE88, 0))
  {
    uint64_t v8 = sub_226861988(theString1, (const char **)&v13, (UInt8 **)&v12);
    if (v8) {
      goto LABEL_9;
    }
    sscanf(v13, "%u", &v14);
  }
  else
  {
    int v14 = 0;
  }
  sub_22689F090(__p, "raU2");
  sub_226881624(a2, (uint64_t)__p, &v15);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v8 = sub_2268814C8(a1, (uint64_t)&v15, v14, a4);
LABEL_9:
  if (v12) {
    free(v12);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226892534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689256C(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&v23, 0, sizeof(v23));
  uint64_t valuePtr = 0;
  if (a3)
  {
    sub_22689F090(__p, "wdFl");
    sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v23);
    if (v21 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_226888134(a1, (uint64_t)&v23, &valuePtr, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      if (valuePtr)
      {
        if ((valuePtr & 2) != 0) {
          int v10 = 2;
        }
        else {
          int v10 = 1;
        }
      }
      else
      {
        if ((valuePtr & 2) == 0) {
          goto LABEL_18;
        }
        int v10 = 3;
      }
      HIDWORD(valuePtr) = v10;
LABEL_18:
      CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFNumberRef v13 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, (char *)&valuePtr + 4);
      *a3 = v13;
      if (v13)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v19 = a2;
        }
        else {
          uint64_t v19 = *(void *)a2;
        }
        uint64_t v9 = sub_226860774(v12, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v14, v15, v16, v17, v18, v19);
        CFRelease(*a3);
      }
      else
      {
        uint64_t v9 = 4294960568;
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_2268926C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268926F8(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  memset(&v13, 0, sizeof(v13));
  uint64_t valuePtr = 0;
  if (CFNumberGetValue(number, kCFNumberSInt32Type, (char *)&valuePtr + 4))
  {
    sub_22689F090(__p, "wdFl");
    sub_226881624(a2, (uint64_t)__p, &v13);
    if (v11 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v13, &valuePtr, a4);
    if (!v7)
    {
      switch(HIDWORD(valuePtr))
      {
        case 0:
          int v8 = valuePtr & 0xFFFFFFFC;
          goto LABEL_11;
        case 1:
          int v8 = valuePtr & 0xFFFFFFFC | 1;
          goto LABEL_11;
        case 2:
          int v8 = valuePtr | 3;
          goto LABEL_11;
        case 3:
          int v8 = valuePtr & 0xFFFFFFFC | 2;
LABEL_11:
          LODWORD(valuePtr) = v8;
          break;
        default:
          break;
      }
      sub_22689F090(__p, "wdFl");
      sub_226881624(a2, (uint64_t)__p, &v13);
      if (v11 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v13, valuePtr, a4);
    }
  }
  else
  {
    uint64_t v7 = 4294960553;
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_226892868(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268928B8(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  if (a3)
  {
    sub_226880920((unsigned __int8 *)a2, 1885684035, &__p);
    BOOL v22 = 0;
    uint64_t v8 = sub_226888348(a1, (uint64_t)&__p, &v22, a4);
    uint64_t v9 = v8;
    if (a4 == 1 && v8 == -5) {
      goto LABEL_10;
    }
    if (v8) {
      goto LABEL_10;
    }
    sub_226880920((unsigned __int8 *)a2, 1885688643, &__p);
    BOOL v21 = 0;
    uint64_t v9 = sub_226888348(a1, (uint64_t)&__p, &v21, a4);
    if (v9) {
      goto LABEL_10;
    }
    if (v22)
    {
      if (v21)
      {
        int valuePtr = 0;
        goto LABEL_16;
      }
      int v11 = 1;
    }
    else
    {
      int v11 = 2;
    }
    int valuePtr = v11;
LABEL_16:
    CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFNumberRef v13 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
    *a3 = v13;
    if (v13)
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v19 = a2;
      }
      else {
        uint64_t v19 = *(void *)a2;
      }
      uint64_t v9 = sub_226860774(v12, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v14, v15, v16, v17, v18, v19);
      CFRelease(*a3);
    }
    else
    {
      uint64_t v9 = 4294960568;
    }
    goto LABEL_10;
  }
  uint64_t v9 = 4294967292;
LABEL_10:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226892A24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226892A40(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  unsigned int valuePtr = 0;
  if (CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr))
  {
    char v7 = valuePtr;
    if (valuePtr > 2)
    {
      uint64_t v11 = 0;
    }
    else
    {
      sub_226880920(a2, 1885684035, &__p);
      uint64_t v8 = *MEMORY[0x263EFFB40];
      uint64_t v9 = *MEMORY[0x263EFFB38];
      if ((3u >> (v7 & 7))) {
        CFStringRef v10 = (const __CFString *)*MEMORY[0x263EFFB40];
      }
      else {
        CFStringRef v10 = (const __CFString *)*MEMORY[0x263EFFB38];
      }
      uint64_t v11 = sub_2268809AC(a1, (uint64_t)&__p, v10, a4);
      if (!v11)
      {
        sub_226880920(a2, 1885688643, &__p);
        int v12 = v7 & 7;
        CFStringRef v13 = (const __CFString *)(v12 ? v9 : v8);
        uint64_t v11 = sub_2268809AC(a1, (uint64_t)&__p, v13, a4);
        if (!(v12 | v11))
        {
          sub_226880920(a2, 1885686084, &__p);
          uint64_t v11 = sub_2268814C8(a1, (uint64_t)&__p, 0, 0);
        }
      }
    }
  }
  else
  {
    uint64_t v11 = 4294960553;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_226892B98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226892BB4(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  if (a3)
  {
    sub_226880920((unsigned __int8 *)a2, 1918977107, &__p);
    BOOL v22 = 0;
    uint64_t v8 = sub_226888348(a1, (uint64_t)&__p, &v22, a4);
    uint64_t v9 = v8;
    if (a4 == 1 && v8 == -5) {
      goto LABEL_10;
    }
    if (v8) {
      goto LABEL_10;
    }
    sub_226880920((unsigned __int8 *)a2, 1918979649, &__p);
    BOOL v21 = 0;
    uint64_t v9 = sub_226888348(a1, (uint64_t)&__p, &v21, a4);
    if (v9) {
      goto LABEL_10;
    }
    if (v22)
    {
      if (v21)
      {
        int valuePtr = 0;
        goto LABEL_18;
      }
      int v11 = 1;
    }
    else if (v21)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = 3;
    }
    int valuePtr = v11;
LABEL_18:
    CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFNumberRef v13 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
    *a3 = v13;
    if (v13)
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v19 = a2;
      }
      else {
        uint64_t v19 = *(void *)a2;
      }
      uint64_t v9 = sub_226860774(v12, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v14, v15, v16, v17, v18, v19);
      CFRelease(*a3);
    }
    else
    {
      uint64_t v9 = 4294960568;
    }
    goto LABEL_10;
  }
  uint64_t v9 = 4294967292;
LABEL_10:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226892D2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226892D48(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  unsigned int valuePtr = 0;
  if (CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr))
  {
    char v7 = valuePtr;
    if (valuePtr > 3) {
      goto LABEL_20;
    }
    sub_226880920(a2, 1918979649, &__p);
    uint64_t v8 = *MEMORY[0x263EFFB40];
    uint64_t v9 = *MEMORY[0x263EFFB38];
    if (v7) {
      CFStringRef v10 = (const __CFString *)*MEMORY[0x263EFFB38];
    }
    else {
      CFStringRef v10 = (const __CFString *)*MEMORY[0x263EFFB40];
    }
    uint64_t v11 = sub_2268809AC(a1, (uint64_t)&__p, v10, a4);
    if (v11) {
      goto LABEL_21;
    }
    sub_226880920(a2, 1918977107, &__p);
    CFStringRef v12 = (const __CFString *)(((3u >> (v7 & 0xF)) & 1) != 0 ? v8 : v9);
    uint64_t v11 = sub_2268809AC(a1, (uint64_t)&__p, v12, a4);
    if (v11) {
      goto LABEL_21;
    }
    sub_226880920(a2, 1918981954, &__p);
    CFStringRef v13 = (const __CFString *)((v7 & 1) != 0 ? v8 : v9);
    uint64_t v11 = sub_2268809AC(a1, (uint64_t)&__p, v13, a4);
    if (v11) {
      goto LABEL_21;
    }
    BOOL v14 = !sub_22687CBC8(a1, 1396995415);
    if ((v7 & 1) == 0) {
      LOBYTE(v14) = 1;
    }
    if (v14)
    {
LABEL_20:
      uint64_t v11 = 0;
    }
    else
    {
      sub_226880920(a2, 2002867012, &__p);
      uint64_t v11 = sub_2268814C8(a1, (uint64_t)&__p, 0, a4);
    }
  }
  else
  {
    uint64_t v11 = 4294960553;
  }
LABEL_21:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_226892EF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226892F0C(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (a3)
  {
    sub_226880920(a2, 1936605510, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if ((v11 & 0xFFFFFFFE) == 2) {
        uint64_t v9 = (void *)MEMORY[0x263EFFB38];
      }
      else {
        uint64_t v9 = (void *)MEMORY[0x263EFFB40];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226892FD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226892FF4(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  sub_226880920(a2, 1936605510, &__p);
  uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
  if (!v8)
  {
    if (*MEMORY[0x263EFFB40] == a3) {
      int v9 = v11 & 0xFFFFFFFD;
    }
    else {
      int v9 = v11 | 3;
    }
    int v11 = v9;
    sub_226880920(a2, 1936605510, &__p);
    uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v11, a4);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268930D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268930F4(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (a3)
  {
    sub_226880920(a2, 1936605510, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if (((v11 - 1) & 0xFFFFFFFD) != 0) {
        int v9 = (void *)MEMORY[0x263EFFB40];
      }
      else {
        int v9 = (void *)MEMORY[0x263EFFB38];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268931C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268931DC(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  unsigned int v10 = 0;
  sub_226880920(a2, 1936605510, &__p);
  uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v10, a4);
  if (!v8)
  {
    unsigned int v10 = v10 & 0xFFFFFFFE | (*MEMORY[0x263EFFB40] != a3);
    sub_226880920(a2, 1936605510, &__p);
    uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v10, a4);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268932C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268932DC(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (a3)
  {
    sub_226880920(a2, 1970496070, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if ((v11 & 2) != 0) {
        int v9 = (void *)MEMORY[0x263EFFB40];
      }
      else {
        int v9 = (void *)MEMORY[0x263EFFB38];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268933A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268933C0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  unsigned int v10 = 0;
  sub_226880920(a2, 1970496070, &__p);
  uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v10, a4);
  if (!v8)
  {
    unsigned int v10 = v10 & 0xFFFFFFFD | (2 * (*MEMORY[0x263EFFB40] == a3));
    sub_226880920(a2, 1970496070, &__p);
    uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v10, a4);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268934A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268934BC(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (a3)
  {
    sub_226880920(a2, 1970496070, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if ((v11 & 0x100) != 0) {
        int v9 = (void *)MEMORY[0x263EFFB40];
      }
      else {
        int v9 = (void *)MEMORY[0x263EFFB38];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226893584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268935A0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  unsigned int v10 = 0;
  sub_226880920(a2, 1970496070, &__p);
  uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v10, a4);
  if (!v8)
  {
    unsigned int v10 = v10 & 0xFFFFFEFF | ((*MEMORY[0x263EFFB40] == a3) << 8);
    sub_226880920(a2, 1970496070, &__p);
    uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v10, a4);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226893680(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689369C(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  if (a3)
  {
    sub_226880920(a2, 2002865741, &__p);
    BOOL v11 = 0;
    uint64_t v7 = sub_226888348(a1, (uint64_t)&__p, &v11, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if (v11) {
        int v9 = (void *)MEMORY[0x263EFFB38];
      }
      else {
        int v9 = (void *)MEMORY[0x263EFFB40];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226893764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226893780(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  CFStringRef v6 = (const __CFString *)*MEMORY[0x263EFFB38];
  if (*MEMORY[0x263EFFB40] == a3) {
    CFStringRef v7 = (const __CFString *)*MEMORY[0x263EFFB38];
  }
  else {
    CFStringRef v7 = (const __CFString *)*MEMORY[0x263EFFB40];
  }
  sub_226880920(a2, 2002865741, &__p);
  uint64_t v8 = sub_2268809AC(a1, (uint64_t)&__p, v7, a4);
  if (!v8)
  {
    BOOL v12 = 0;
    uint64_t v8 = sub_2268883A8(a1, 2002929006, &v12, 0);
    if (!v8)
    {
      BOOL v10 = v12 && v7 == v6;
      uint64_t v8 = sub_22687CC58(a1, 2002927939, v10, 0);
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689386C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226893888(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&v22, 0, sizeof(v22));
  unsigned int valuePtr = 0;
  if (a3)
  {
    sub_22689F090(__p, "raKT");
    sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v22);
    if (v20 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_226888134(a1, (uint64_t)&v22, &valuePtr, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      valuePtr /= 0x3Cu;
      CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFNumberRef v11 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
      *a3 = v11;
      if (v11)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v17 = a2;
        }
        else {
          uint64_t v17 = *(void *)a2;
        }
        uint64_t v9 = sub_226860774(v10, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v12, v13, v14, v15, v16, v17);
        CFRelease(*a3);
      }
      else
      {
        uint64_t v9 = 4294960568;
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_2268939CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226893A04(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  memset(&v12, 0, sizeof(v12));
  int valuePtr = 0;
  if (!CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr)) {
    return 4294960553;
  }
  sub_22689F090(__p, "raKT");
  sub_226881624(a2, (uint64_t)__p, &v12);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v12, 60 * valuePtr, a4);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_226893ACC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226893B04(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&v24, 0, sizeof(v24));
  uint64_t valuePtr = 0;
  BOOL v22 = 0;
  if (a3)
  {
    sub_22689F090(__p, "wdFl");
    sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v24);
    if (v21 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_226888134(a1, (uint64_t)&v24, (char *)&valuePtr + 4, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      sub_22689F090(__p, "raSt");
      sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v24);
      if (v21 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v9 = sub_226888134(a1, (uint64_t)&v24, &valuePtr, a4);
      if (!v9)
      {
        if (sub_22687CBC8(a1, 1146569811))
        {
          sub_22689F090(__p, "dWDS");
          sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v24);
          if (v21 < 0) {
            operator delete(__p[0]);
          }
          sub_226888348(a1, (uint64_t)&v24, &v22, a4);
        }
        if (valuePtr)
        {
          if (valuePtr != 1 || !v22)
          {
LABEL_25:
            CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
            CFNumberRef v13 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
            *a3 = v13;
            if (v13)
            {
              if (*(char *)(a2 + 23) >= 0) {
                uint64_t v19 = a2;
              }
              else {
                uint64_t v19 = *(void *)a2;
              }
              uint64_t v9 = sub_226860774(v12, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v14, v15, v16, v17, v18, v19);
              CFRelease(*a3);
            }
            else
            {
              uint64_t v9 = 4294960568;
            }
            goto LABEL_19;
          }
          int v10 = 20;
        }
        else
        {
          if ((valuePtr & 0x300000000) == 0) {
            goto LABEL_25;
          }
          int v10 = 10;
        }
        LODWORD(valuePtr) = v10;
        goto LABEL_25;
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
LABEL_19:
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226893D0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226893D54(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  memset(&v19, 0, sizeof(v19));
  uint64_t valuePtr = 0;
  if (!CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr))
  {
    uint64_t v7 = 4294960553;
    goto LABEL_17;
  }
  sub_22689F090(&__p, "wdFl");
  sub_226881624(a2, (uint64_t)&__p, &v19);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v19, (char *)&valuePtr + 4, a4);
  if (v7) {
    goto LABEL_17;
  }
  int v8 = 0;
  int v9 = 1;
  if ((int)valuePtr > 2)
  {
    if (valuePtr != 3)
    {
      if (valuePtr == 10)
      {
        if ((valuePtr & 0x300000000) == 0)
        {
          uint64_t v13 = sub_226880258(a1, 0);
          sub_226894368(__s, 0x11uLL, v13);
          sub_22689F090(&__p, __s);
          sub_22689F090(v15, "wdFl");
          sub_226881624((unsigned __int8 *)&__p, (uint64_t)v15, &__p);
          if (v16 < 0) {
            operator delete(v15[0]);
          }
          HIDWORD(valuePtr) |= 1u;
          sub_22689F090(v15, "wdFl");
          sub_226881624(a2, (uint64_t)v15, &v19);
          if (v16 < 0) {
            operator delete(v15[0]);
          }
          if (!sub_22688BFEC((unsigned __int8 *)&v19, (unsigned __int8 *)&__p)) {
            goto LABEL_50;
          }
          uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v19, SHIDWORD(valuePtr), a4);
          if (v7) {
            goto LABEL_49;
          }
          sub_22689F090(v15, "raCA");
          sub_226881624((unsigned __int8 *)&v19, (uint64_t)v15, &v19);
          if (v16 < 0) {
            operator delete(v15[0]);
          }
          uint64_t v7 = sub_2268809AC(a1, (uint64_t)&v19, (const __CFString *)*MEMORY[0x263EFFB38], a4);
          if (v7)
          {
LABEL_49:
            char v14 = 0;
          }
          else
          {
LABEL_50:
            uint64_t v7 = 0;
            char v14 = 1;
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if ((v14 & 1) == 0) {
            goto LABEL_17;
          }
        }
        int v8 = 0;
        LODWORD(valuePtr) = 0;
      }
      else if (valuePtr == 20)
      {
        BOOL v10 = sub_22687CBC8(a1, 1196311928);
        sub_22689F090(&__p, "wdFl");
        sub_226881624(a2, (uint64_t)&__p, &v19);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v19, 0, a4);
        if (v7) {
          goto LABEL_17;
        }
        sub_22689F090(&__p, "dWDS");
        sub_226881624(a2, (uint64_t)&__p, &v19);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        uint64_t v7 = sub_2268809AC(a1, (uint64_t)&v19, (const __CFString *)*MEMORY[0x263EFFB40], a4);
        if (v7) {
          goto LABEL_17;
        }
        int v8 = !v10;
        LODWORD(valuePtr) = 1;
      }
      goto LABEL_55;
    }
    goto LABEL_23;
  }
  if (!valuePtr)
  {
LABEL_24:
    sub_22689F090(&__p, "wdFl");
    sub_226881624(a2, (uint64_t)&__p, &v19);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v19, 0, a4);
    if (v7) {
      goto LABEL_17;
    }
    if (sub_22687CBC8(a1, 1146569811))
    {
      sub_22689F090(&__p, "dWDS");
      sub_226881624(a2, (uint64_t)&__p, &v19);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      CFAllocatorRef v12 = (const __CFString **)MEMORY[0x263EFFB40];
      if (valuePtr) {
        CFAllocatorRef v12 = (const __CFString **)MEMORY[0x263EFFB38];
      }
      uint64_t v7 = sub_2268809AC(a1, (uint64_t)&v19, *v12, a4);
      if (v7) {
        goto LABEL_17;
      }
    }
    if (valuePtr == 3)
    {
      LODWORD(__p.__r_.__value_.__l.__data_) = 0;
      uint64_t v7 = sub_22687AB24(a1, 1651724358, &__p, 0);
      if (v7) {
        goto LABEL_17;
      }
      if (LODWORD(__p.__r_.__value_.__l.__data_) == 4)
      {
        uint64_t v7 = sub_22687D9A0(a1, 1651724877, 3, a4);
        if (v7) {
          goto LABEL_17;
        }
      }
    }
    if (!v9)
    {
LABEL_59:
      if (!v8
        || !sub_22687CBC8(a1, 1198748750)
        || (sub_226880920(a2, 1651722053, &v19),
            uint64_t v7 = sub_2268809AC(a1, (uint64_t)&v19, (const __CFString *)*MEMORY[0x263EFFB38], a4),
            !v7))
      {
        sub_22689F090(&__p, "raSt");
        sub_226881624(a2, (uint64_t)&__p, &v19);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v19, valuePtr, a4);
      }
      goto LABEL_17;
    }
    goto LABEL_55;
  }
  if (valuePtr == 1)
  {
    int v9 = 0;
LABEL_23:
    int v8 = 1;
    goto LABEL_24;
  }
LABEL_55:
  if (!sub_22687CBC8(a1, 1884509249)) {
    goto LABEL_59;
  }
  sub_22689F090(&__p, "pSTA");
  sub_226881624(a2, (uint64_t)&__p, &v19);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v7 = sub_2268809AC(a1, (uint64_t)&v19, (const __CFString *)*MEMORY[0x263EFFB38], a4);
  if (!v7) {
    goto LABEL_59;
  }
LABEL_17:
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268942C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

void *sub_226894368(void *a1, std::string::size_type a2, uint64_t a3)
{
  memset(&v8, 0, sizeof(v8));
  if (a1 && a2 >= 0x11)
  {
    bzero(a1, a2);
    sub_22687F014(a3, &__p);
    std::string::operator=(&v8, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0)
    {
      if (v8.__r_.__value_.__l.__size_ < a2) {
        strcpy((char *)a1, v8.__r_.__value_.__l.__data_);
      }
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    else if (HIBYTE(v8.__r_.__value_.__r.__words[2]) < a2)
    {
      strcpy((char *)a1, (const char *)&v8);
    }
  }
  return a1;
}

void sub_226894430(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226894464(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&v26, 0, sizeof(v26));
  int valuePtr = 0;
  BOOL v24 = 0;
  uint64_t v23 = 0;
  if (a3)
  {
    sub_22689F090(__p, "acEn");
    sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v26);
    if (v22 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_226888348(a1, (uint64_t)&v26, &v24, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      sub_22689F090(__p, "raFl");
      sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v26);
      if (v22 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v10 = sub_226888134(a1, (uint64_t)&v26, (char *)&v23 + 4, a4);
      uint64_t v9 = v10;
      if ((a4 != 1 || v10 != -5) && !v10)
      {
        sub_22689F090(__p, "raF2");
        sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v26);
        if (v22 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v9 = sub_226888134(a1, (uint64_t)&v26, &v23, a4);
        if (!v9)
        {
          if (v24)
          {
            if (sub_22687CBC8(a1, 1950434124)) {
              int v11 = 3;
            }
            else {
              int v11 = 1;
            }
          }
          else
          {
            if ((v23 & 0x100000000) == 0 && (v23 & 1) == 0)
            {
LABEL_27:
              CFAllocatorRef v13 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
              CFNumberRef v14 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
              *a3 = v14;
              if (v14)
              {
                if (*(char *)(a2 + 23) >= 0) {
                  uint64_t v20 = a2;
                }
                else {
                  uint64_t v20 = *(void *)a2;
                }
                uint64_t v9 = sub_226860774(v13, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v15, v16, v17, v18, v19, v20);
                CFRelease(*a3);
              }
              else
              {
                uint64_t v9 = 4294960568;
              }
              goto LABEL_19;
            }
            int v11 = 2;
          }
          int valuePtr = v11;
          goto LABEL_27;
        }
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
LABEL_19:
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v26.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226894684(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268946CC(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  memset(&v16, 0, sizeof(v16));
  uint64_t valuePtr = 0;
  int v14 = 0;
  if (CFNumberGetValue(number, kCFNumberSInt32Type, (char *)&valuePtr + 4))
  {
    sub_22689F090(__p, "raFl");
    sub_226881624(a2, (uint64_t)__p, &v16);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v16, &valuePtr, a4);
    if (!v7)
    {
      sub_22689F090(__p, "raF2");
      sub_226881624(a2, (uint64_t)__p, &v16);
      if (v13 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v7 = sub_226888134(a1, (uint64_t)&v16, &v14, a4);
      if (!v7)
      {
        switch(HIDWORD(valuePtr))
        {
          case 0:
            uint64_t v8 = (const __CFString **)MEMORY[0x263EFFB38];
            goto LABEL_16;
          case 1:
          case 3:
            uint64_t v8 = (const __CFString **)MEMORY[0x263EFFB40];
LABEL_16:
            CFStringRef v10 = *v8;
            LODWORD(valuePtr) = valuePtr & 0xFFFFFFFE;
            int v11 = v14 & 0xFFFFFFFE;
            goto LABEL_18;
          case 2:
            CFStringRef v10 = (const __CFString *)*MEMORY[0x263EFFB38];
            LODWORD(valuePtr) = valuePtr | 1;
            int v11 = v14 | 1;
LABEL_18:
            int v14 = v11;
            sub_22689F090(__p, "acEn");
            sub_226881624(a2, (uint64_t)__p, &v16);
            if (v13 < 0) {
              operator delete(__p[0]);
            }
            uint64_t v7 = sub_2268809AC(a1, (uint64_t)&v16, v10, a4);
            if (!v7)
            {
              sub_22689F090(__p, "raFl");
              sub_226881624(a2, (uint64_t)__p, &v16);
              if (v13 < 0) {
                operator delete(__p[0]);
              }
              uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v16, valuePtr, a4);
              if (!v7)
              {
                sub_22689F090(__p, "raF2");
                sub_226881624(a2, (uint64_t)__p, &v16);
                if (v13 < 0) {
                  operator delete(__p[0]);
                }
                uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v16, v14, a4);
              }
            }
            break;
          default:
            uint64_t v7 = 0;
            break;
        }
      }
    }
  }
  else
  {
    uint64_t v7 = 4294960553;
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_226894948(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268949B0(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (a3)
  {
    sub_226880920(a2, 1970496070, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if ((v11 & 4) != 0) {
        uint64_t v9 = (void *)MEMORY[0x263EFFB38];
      }
      else {
        uint64_t v9 = (void *)MEMORY[0x263EFFB40];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226894A78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226894A94(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  unsigned int v10 = 0;
  sub_226880920(a2, 1970496070, &__p);
  uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v10, a4);
  if (!v8)
  {
    unsigned int v10 = v10 & 0xFFFFFFFB | (4 * (*MEMORY[0x263EFFB40] != a3));
    sub_226880920(a2, 1970496070, &__p);
    uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v10, a4);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226894B74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226894B90(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (a3)
  {
    sub_226880920(a2, 1970496070, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if ((v11 & 8) != 0) {
        uint64_t v9 = (void *)MEMORY[0x263EFFB40];
      }
      else {
        uint64_t v9 = (void *)MEMORY[0x263EFFB38];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226894C58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226894C74(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  unsigned int v14 = 0;
  sub_226880920(a2, 1970496070, &__p);
  uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v14, a4);
  if (!v8)
  {
    uint64_t v9 = *MEMORY[0x263EFFB40];
    unsigned int v14 = v14 & 0xFFFFFFF7 | (8 * (*MEMORY[0x263EFFB40] == a3));
    sub_226880920(a2, 1970496070, &__p);
    uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v14, a4);
    if (!v8)
    {
      BOOL v13 = 0;
      uint64_t v8 = sub_2268883A8(a1, 2002929006, &v13, 0);
      if (!v8)
      {
        if (v9 != a3 || !v13) {
          uint64_t v11 = *MEMORY[0x263EFFB38];
        }
        else {
          uint64_t v11 = v9;
        }
        uint64_t v8 = (*(uint64_t (**)(uint64_t, unsigned __int8 *, uint64_t, uint64_t))(*(void *)a1 + 504))(a1, a2, v11, a4);
      }
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226894DD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226894DF0(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (a3)
  {
    sub_226880920(a2, 1970496070, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if ((v11 & 0x200) != 0) {
        uint64_t v9 = (void *)MEMORY[0x263EFFB40];
      }
      else {
        uint64_t v9 = (void *)MEMORY[0x263EFFB38];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226894EB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226894ED4(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  unsigned int v10 = 0;
  sub_226880920(a2, 1970496070, &__p);
  uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v10, a4);
  if (!v8)
  {
    unsigned int v10 = v10 & 0xFFFFFDFF | ((*MEMORY[0x263EFFB40] == a3) << 9);
    sub_226880920(a2, 1970496070, &__p);
    uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v10, a4);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226894FB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226894FD0(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v21 = 0;
  if (a3)
  {
    sub_226880920((unsigned __int8 *)a2, 1970496070, &__p);
    uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v21, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      if ((v21 & 0x10) != 0)
      {
        int valuePtr = 0;
      }
      else
      {
        if ((v21 & 0x20) != 0) {
          int v10 = 1;
        }
        else {
          int v10 = 2;
        }
        int valuePtr = v10;
      }
      CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFNumberRef v13 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
      *a3 = v13;
      if (v13)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v19 = a2;
        }
        else {
          uint64_t v19 = *(void *)a2;
        }
        uint64_t v9 = sub_226860774(v12, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v14, v15, v16, v17, v18, v19);
        CFRelease(*a3);
      }
      else
      {
        uint64_t v9 = 4294960568;
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226895104(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226895120(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  uint64_t v10 = 0;
  if (CFNumberGetValue(number, kCFNumberSInt32Type, &v10))
  {
    sub_226880920(a2, 1970496070, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, (char *)&v10 + 4, a4);
    if (!v7)
    {
      if (v10 == 1)
      {
        unsigned int v8 = HIDWORD(v10) & 0xFFFFFFCF | 0x20;
      }
      else if (v10 == 2)
      {
        unsigned int v8 = HIDWORD(v10) & 0xFFFFFFCF;
      }
      else
      {
        unsigned int v8 = HIDWORD(v10) | 0x30;
      }
      HIDWORD(v10) = v8;
      sub_226880920(a2, 1970496070, &__p);
      uint64_t v7 = sub_2268814C8(a1, (uint64_t)&__p, SHIDWORD(v10), a4);
    }
  }
  else
  {
    uint64_t v7 = 4294960553;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_226895230(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689524C(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&v27, 0, sizeof(v27));
  int v26 = 0;
  std::string __p = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  if (!a3)
  {
    uint64_t v9 = 4294967292;
    goto LABEL_8;
  }
  sub_226880920((unsigned __int8 *)a2, 1970496070, &v27);
  uint64_t v8 = sub_226888134(a1, (uint64_t)&v27, &v26, a4);
  uint64_t v9 = v8;
  if ((a4 != 1 || v8 != -5) && !v8)
  {
    if ((v26 & 0x40) != 0)
    {
      sub_226880920((unsigned __int8 *)a2, 1718842224, &v27);
      uint64_t v11 = sub_2268884D0(a1, (uint64_t)&v27, (uint64_t)&__p, a4);
      uint64_t v9 = v11;
      if (v11)
      {
        if (v11 != -5) {
          goto LABEL_8;
        }
        MEMORY[0x22A65ABB0](&__p, "");
      }
      uint64_t v12 = HIBYTE(v25);
      if (v25 < 0) {
        uint64_t v12 = v24;
      }
      if (v12 || *(unsigned char *)(a1 + 384)) {
        int v13 = 1;
      }
      else {
        int v13 = 2;
      }
      int valuePtr = v13;
    }
    else
    {
      int valuePtr = 0;
    }
    CFAllocatorRef v14 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFNumberRef v15 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
    *a3 = v15;
    if (v15)
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v21 = a2;
      }
      else {
        uint64_t v21 = *(void *)a2;
      }
      uint64_t v9 = sub_226860774(v14, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v16, v17, v18, v19, v20, v21);
      CFRelease(*a3);
    }
    else
    {
      uint64_t v9 = 4294960568;
    }
  }
LABEL_8:
  if (SHIBYTE(v25) < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v27.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_2268953FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226895428(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  memset(&v12, 0, sizeof(v12));
  uint64_t valuePtr = 0;
  if (!number)
  {
    uint64_t v7 = 4294960591;
    goto LABEL_15;
  }
  if (!CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr))
  {
    uint64_t v7 = 4294960553;
    goto LABEL_15;
  }
  sub_226880920(a2, 1970496070, &v12);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v12, (char *)&valuePtr + 4, a4);
  if (v7) {
    goto LABEL_15;
  }
  *(unsigned char *)(a1 + 384) = 0;
  if (valuePtr == 1)
  {
    HIDWORD(valuePtr) |= 0x40u;
    *(unsigned char *)(a1 + 384) = 1;
LABEL_14:
    sub_226880920(a2, 1970496070, &v12);
    uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v12, SHIDWORD(valuePtr), a4);
    goto LABEL_15;
  }
  if (valuePtr == 2) {
    HIDWORD(valuePtr) |= 0x40u;
  }
  else {
    HIDWORD(valuePtr) &= ~0x40u;
  }
  sub_226880920(a2, 1718842224, &v12);
  sub_22689F090(__p, "");
  uint64_t v7 = sub_226888444(a1, (uint64_t)&v12, (uint64_t)__p, a4);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  if (!v7) {
    goto LABEL_14;
  }
LABEL_15:
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268955DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689561C(CFDictionaryRef *a1, unsigned __int8 *a2, __CFString **a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  CFDictionaryRef theDict = 0;
  if (a3)
  {
    sub_226880920(a2, 1953066362, &__p);
    uint64_t v7 = sub_226885770(a1, (uint64_t)&__p, &theDict, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if (theDict)
      {
        CFStringRef Value = (const __CFString *)CFDictionaryGetValue(theDict, @"zoneName");
        char v10 = (__CFString *)Value;
        if (!Value || !CFStringGetLength(Value)) {
          char v10 = @"GMT";
        }
        uint64_t v8 = 0;
        *a3 = v10;
      }
      else
      {
        uint64_t v8 = 0;
      }
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226895700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689571C(uint64_t a1, unsigned __int8 *a2, CFStringRef theString, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  CFStringRef v9 = 0;
  if (!theString) {
    return 4294960591;
  }
  uint64_t v7 = sub_2268C6EF8(theString, &v9);
  if (!v7)
  {
    sub_226880920(a2, 1953066362, &__p);
    uint64_t v7 = sub_2268809AC(a1, (uint64_t)&__p, v9, a4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return v7;
}

void sub_2268957C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268957DC(CFDictionaryRef *a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  CFTypeRef cf = 0;
  int v38 = 0;
  CFTypeRef v37 = 0;
  int v36 = 0;
  int v34 = 0;
  CFTypeRef v35 = 0;
  int v33 = 0;
  if (a3)
  {
    sub_226880920((unsigned __int8 *)a2, 1668573549, &__p);
    sub_226888134((uint64_t)a1, (uint64_t)&__p, &v33, a4);
    sub_226880920((unsigned __int8 *)a2, 1937331060, &__p);
    uint64_t v8 = sub_226885770(a1, (uint64_t)&__p, (CFMutableDictionaryRef *)&cf, a4);
    if (!v8)
    {
      if (!cf)
      {
        uint64_t v8 = 4294967291;
        goto LABEL_12;
      }
      CFRetain(cf);
      CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue((CFDictionaryRef)cf, @"problems");
      CFStringRef theArray = (const __CFString *)Value;
      if (Value)
      {
        CFIndex Count = CFArrayGetCount(Value);
        sub_226880920((unsigned __int8 *)a2, 1937328487, &__p);
        CFIndex v15 = 0;
        if (sub_226885770(a1, (uint64_t)&__p, (CFMutableDictionaryRef *)&v37, a4))
        {
          CFStringRef v16 = 0;
        }
        else
        {
          CFStringRef v16 = 0;
          if (v37)
          {
            CFRetain(v37);
            CFArrayRef v17 = (const __CFArray *)CFDictionaryGetValue((CFDictionaryRef)v37, @"problems");
            CFStringRef v16 = (const __CFString *)v17;
            if (v17) {
              CFIndex v15 = CFArrayGetCount(v17);
            }
            else {
              CFIndex v15 = 0;
            }
          }
        }
        CFAllocatorRef v30 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        uint64_t v8 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &v35, (uint64_t)"{%kO=[%@]}", v10, v11, v12, v13, v14, @"problems");
        if (!v8)
        {
          if (Count >= 1)
          {
            for (uint64_t i = 0; i != Count; ++i)
            {
              sub_22686088C(theArray, (uint64_t)&v38, (UInt8 *)"[*].%kO:code", v19, v20, v21, v22, v23, i);
              uint64_t v8 = v25;
              if (v25) {
                goto LABEL_10;
              }
              if (v15 >= 1)
              {
                uint64_t v26 = 0;
                while (1)
                {
                  sub_22686088C(v16, (uint64_t)&v36, (UInt8 *)"[*].%kO:code", v19, v20, v21, v22, v23, v26);
                  uint64_t v8 = v27;
                  if (v27) {
                    goto LABEL_10;
                  }
                  if (v38 == v36) {
                    goto LABEL_32;
                  }
                  if (v15 == ++v26) {
                    goto LABEL_33;
                  }
                }
              }
              uint64_t v26 = 0;
LABEL_32:
              if (v26 == v15)
              {
LABEL_33:
                if (v33) {
                  goto LABEL_34;
                }
                if (v38 > 2002862917)
                {
                  if (v38 == 2002862918) {
                    continue;
                  }
                  int v28 = 2002867022;
                }
                else
                {
                  if (v38 == 1869631063) {
                    continue;
                  }
                  int v28 = 1886741072;
                }
                if (v38 != v28)
                {
LABEL_34:
                  uint64_t v8 = sub_226860774(v30, v34, (uint64_t)"{%kO=%C}", v19, v20, v21, v22, v23, @"code");
                  if (v8) {
                    goto LABEL_10;
                  }
                }
              }
            }
          }
          *a3 = v35;
          if (*(char *)(a2 + 23) >= 0) {
            uint64_t v29 = a2;
          }
          else {
            uint64_t v29 = *(void *)a2;
          }
          uint64_t v8 = sub_226860774(v30, a1[6], (uint64_t)"%ks=%O", v19, v20, v21, v22, v23, v29);
          CFRelease(*a3);
        }
      }
      else
      {
        uint64_t v8 = 0;
      }
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
LABEL_10:
  if (cf) {
    CFRelease(cf);
  }
LABEL_12:
  if (v37) {
    CFRelease(v37);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226895B24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226895B48()
{
  return 0;
}

uint64_t sub_226895B50(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&v15, 0, sizeof(v15));
  int v14 = 0;
  if (a3)
  {
    sub_22689F090(__p, "dwFl");
    sub_226881624(a2, (uint64_t)__p, &v15);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_226888134(a1, (uint64_t)&v15, &v14, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      if ((v14 & 2) != 0) {
        uint64_t v10 = (void *)MEMORY[0x263EFFB38];
      }
      else {
        uint64_t v10 = (void *)MEMORY[0x263EFFB40];
      }
      *a3 = *v10;
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226895C38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226895C70(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&v13, 0, sizeof(v13));
  unsigned int v12 = 0;
  sub_22689F090(__p, "dwFl");
  sub_226881624(a2, (uint64_t)__p, &v13);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v8 = sub_226888134(a1, (uint64_t)&v13, &v12, a4);
  if (!v8)
  {
    unsigned int v12 = v12 & 0xFFFFFFFD | (2 * (*MEMORY[0x263EFFB40] != a3));
    sub_22689F090(__p, "dwFl");
    sub_226881624(a2, (uint64_t)__p, &v13);
    if (v11 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_2268814C8(a1, (uint64_t)&v13, v12, a4);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226895D88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226895DC8(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (a3)
  {
    sub_226880920(a2, 1936017004, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      uint64_t v9 = (void *)MEMORY[0x263EFFB40];
      if ((~v11 & 0x10001) != 0) {
        uint64_t v9 = (void *)MEMORY[0x263EFFB38];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226895E94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226895EB0()
{
  return 0;
}

uint64_t sub_226895EB8(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  CFDataRef theData = 0;
  if (a3)
  {
    CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableDictionaryRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
    if (Mutable)
    {
      sub_226880920((unsigned __int8 *)a2, 1346918739, &__p);
      uint64_t v10 = sub_2268820DC(a1, (uint64_t)&__p, &theData, a4);
      uint64_t v11 = v10;
      if ((a4 != 1 || v10 != -5) && !v10)
      {
        unint64_t Length = CFDataGetLength(theData);
        if (Length && (BytePtr = CFDataGetBytePtr(theData), Length >= 4))
        {
          uint64_t v19 = (unsigned int *)BytePtr;
          unint64_t v20 = Length >> 2;
          while (1)
          {
            unsigned int v21 = *v19++;
            uint64_t v11 = sub_226860774(v8, Mutable, (uint64_t)"%i", v12, v13, v14, v15, v16, bswap32(v21));
            if (v11) {
              break;
            }
            if (!--v20) {
              goto LABEL_11;
            }
          }
        }
        else
        {
LABEL_11:
          *a3 = Mutable;
          if (*(char *)(a2 + 23) >= 0) {
            uint64_t v22 = a2;
          }
          else {
            uint64_t v22 = *(void *)a2;
          }
          uint64_t v11 = sub_226860774(v8, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v12, v13, v14, v15, v16, v22);
          CFRelease(*a3);
        }
      }
    }
    else
    {
      uint64_t v11 = 4294960568;
    }
    if (theData)
    {
      CFRelease(theData);
      CFDataRef theData = 0;
    }
    if (v11 && Mutable) {
      CFRelease(Mutable);
    }
  }
  else
  {
    uint64_t v11 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_22689605C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226896080()
{
  return 0;
}

uint64_t sub_226896088(int a1, uint64_t a2, uint64_t a3, std::string *this)
{
  memset(&v30, 0, sizeof(v30));
  int v6 = *(char *)(a2 + 23);
  BOOL v7 = v6 < 0;
  if (v6 >= 0) {
    CFAllocatorRef v8 = (unsigned __int8 *)a2;
  }
  else {
    CFAllocatorRef v8 = *(unsigned __int8 **)a2;
  }
  if (v7) {
    uint64_t v9 = *(void *)(a2 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(a2 + 23);
  }
  uint64_t v10 = &v8[v9];
  if (!v9)
  {
    uint64_t v19 = v8;
LABEL_28:
    std::string::size_type v22 = v19 - v8;
    if (v19 == v10) {
      std::string::size_type v16 = -1;
    }
    else {
      std::string::size_type v16 = v22;
    }
    goto LABEL_31;
  }
  uint64_t v11 = v8;
  uint64_t v12 = &v8[v9];
  do
  {
    if (*v11 == 46)
    {
      uint64_t v13 = 1u;
      while (v13 != 6)
      {
        if (&v11[v13] == v10) {
          goto LABEL_18;
        }
        int v14 = v11[v13];
        int v15 = aVaps_1[v13++];
        if (v14 != v15) {
          goto LABEL_10;
        }
      }
      uint64_t v12 = v11;
    }
LABEL_10:
    ++v11;
  }
  while (v11 != v10);
LABEL_18:
  if (v12 == v10 || (std::string::size_type v16 = v12 - v8, v12 - v8 == -1))
  {
    CFArrayRef v17 = v8;
    uint64_t v18 = &v8[v9];
    do
    {
      uint64_t v19 = v17;
      unint64_t v20 = v17;
      while (1)
      {
        int v21 = *v20++;
        if (v21 == 46) {
          break;
        }
        uint64_t v19 = v20;
        if (v20 == v10)
        {
          uint64_t v19 = v18;
          goto LABEL_28;
        }
      }
      CFArrayRef v17 = v19 + 1;
      uint64_t v18 = v19;
    }
    while (v20 != v10);
    goto LABEL_28;
  }
LABEL_31:
  std::string::operator=(this, (const std::string *)a2);
  if (v16 == -1) {
    return 4294967292;
  }
  std::string::basic_string(&__str, this, 0, v16, (std::allocator<char> *)__p);
  std::string::operator=(&v30, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  sub_22689F090(__p, "vaps.[*]");
  if ((v28 & 0x80u) == 0) {
    size_t v23 = v28;
  }
  else {
    size_t v23 = (size_t)__p[1];
  }
  p_str = &__str;
  sub_22689FBF4((uint64_t)&__str, v23 + 1);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
  }
  if (v23)
  {
    if ((v28 & 0x80u) == 0) {
      uint64_t v25 = __p;
    }
    else {
      uint64_t v25 = (void **)__p[0];
    }
    memmove(p_str, v25, v23);
  }
  *(_WORD *)((char *)&p_str->__r_.__value_.__l.__data_ + v23) = 46;
  sub_226881624((unsigned __int8 *)this, (uint64_t)&__str, this);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if ((char)v28 < 0) {
    operator delete(__p[0]);
  }
  sub_226881624((unsigned __int8 *)this, a3, this);
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v30.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_2268962CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226896334(CFDictionaryRef *a1, uint64_t a2, CFMutableDictionaryRef *a3, uint64_t a4)
{
  v13[0] = 0;
  v13[1] = 0;
  uint64_t v14 = 0;
  if (!a3)
  {
    uint64_t v9 = 4294967292;
    goto LABEL_9;
  }
  sub_22689F090(__p, "Enabled");
  uint64_t v8 = (*((uint64_t (**)(CFDictionaryRef *, uint64_t, void **, void **))*a1 + 2))(a1, a2, __p, v13);
  uint64_t v9 = v8;
  if (v12 < 0)
  {
    operator delete(__p[0]);
    if (v9) {
      goto LABEL_9;
    }
  }
  else if (v8)
  {
    goto LABEL_9;
  }
  uint64_t v9 = sub_226885770(a1, (uint64_t)v13, a3, a4);
  if (v9 == -5)
  {
    uint64_t v9 = 0;
    *a3 = (CFMutableDictionaryRef)*MEMORY[0x263EFFB38];
  }
LABEL_9:
  if (SHIBYTE(v14) < 0) {
    operator delete(v13[0]);
  }
  return v9;
}

void sub_226896430(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226896468(uint64_t a1, uint64_t a2, const __CFString *a3, uint64_t a4)
{
  v13[0] = 0;
  v13[1] = 0;
  uint64_t v14 = 0;
  sub_22689F090(__p, "Enabled");
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, void **, void **))(*(void *)a1 + 16))(a1, a2, __p, v13);
  uint64_t v9 = v8;
  if (v12 < 0)
  {
    operator delete(__p[0]);
    if (v9) {
      goto LABEL_9;
    }
  }
  else if (v8)
  {
    goto LABEL_9;
  }
  uint64_t v9 = sub_2268809AC(a1, (uint64_t)v13, a3, a4);
  if (!v9)
  {
    if ((const __CFString *)*MEMORY[0x263EFFB38] != a3) {
      (*(void (**)(uint64_t, uint64_t, void, uint64_t))(*(void *)a1 + 712))(a1, a2, *MEMORY[0x263EFFB38], a4);
    }
    uint64_t v9 = 0;
  }
LABEL_9:
  if (SHIBYTE(v14) < 0) {
    operator delete(v13[0]);
  }
  return v9;
}

void sub_226896598(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268965D0(CFDictionaryRef *a1, uint64_t a2, CFMutableDictionaryRef *a3, uint64_t a4)
{
  v13[0] = 0;
  v13[1] = 0;
  uint64_t v14 = 0;
  if (!a3)
  {
    uint64_t v9 = 4294967292;
    goto LABEL_9;
  }
  sub_22689F090(__p, "raNm");
  uint64_t v8 = (*((uint64_t (**)(CFDictionaryRef *, uint64_t, void **, void **))*a1 + 2))(a1, a2, __p, v13);
  uint64_t v9 = v8;
  if (v12 < 0)
  {
    operator delete(__p[0]);
    if (v9) {
      goto LABEL_9;
    }
  }
  else if (v8)
  {
    goto LABEL_9;
  }
  *((unsigned char *)a1 + 386) = 1;
  uint64_t v9 = sub_226885770(a1, (uint64_t)v13, a3, a4);
  *((unsigned char *)a1 + 386) = 0;
  if (v9 == -5)
  {
    uint64_t v9 = 0;
    *a3 = (CFMutableDictionaryRef)&stru_26DA6BE88;
  }
LABEL_9:
  if (SHIBYTE(v14) < 0) {
    operator delete(v13[0]);
  }
  return v9;
}

void sub_2268966D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689670C(unsigned char *a1, unsigned __int8 *a2, const __CFString *a3, uint64_t a4)
{
  memset(&v21, 0, sizeof(v21));
  BOOL v20 = 0;
  CFTypeRef cf = 0;
  sub_22689F090(&__p, "Enabled");
  uint64_t v8 = (*(uint64_t (**)(unsigned char *, unsigned __int8 *, void **, std::string *))(*(void *)a1 + 16))(a1, a2, &__p, &v21);
  uint64_t v9 = v8;
  if (SHIBYTE(v18) < 0)
  {
    operator delete(__p);
    if (v9) {
      goto LABEL_14;
    }
  }
  else if (v8)
  {
    goto LABEL_14;
  }
  if (sub_226888348((uint64_t)a1, (uint64_t)&v21, &v20, a4) == -5)
  {
    uint64_t v9 = 0;
    goto LABEL_14;
  }
  int v15 = 0;
  std::string __p = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  sub_22689F090(v13, "raNm");
  uint64_t v10 = (*(uint64_t (**)(unsigned char *, unsigned __int8 *, void **, std::string *))(*(void *)a1 + 16))(a1, a2, v13, &v21);
  uint64_t v9 = v10;
  if (v14 < 0)
  {
    operator delete(v13[0]);
    if (!v9) {
      goto LABEL_11;
    }
  }
  else if (!v10)
  {
LABEL_11:
    uint64_t v9 = sub_2268820DC((uint64_t)a1, (uint64_t)&v21, (CFMutableDictionaryRef *)&cf, a4);
    if (!v9)
    {
      if (cf)
      {
        a1[386] = 1;
        uint64_t v9 = sub_2268809AC((uint64_t)a1, (uint64_t)&v21, a3, a4);
        a1[386] = 0;
        if (!v9)
        {
          sub_22689F090(v13, "raWM");
          sub_226881624((unsigned __int8 *)&v21, (uint64_t)v13, &v21);
          if (v14 < 0) {
            operator delete(v13[0]);
          }
          uint64_t v9 = sub_226888134((uint64_t)a1, (uint64_t)&v21, &v15, a4);
          if (!v9)
          {
            if (!a3 || (v15 - 3) > 5 || CFEqual(a3, (CFStringRef)cf)) {
              goto LABEL_37;
            }
            sub_22689F090(v13, "raCr");
            sub_226881624((unsigned __int8 *)&v21, (uint64_t)v13, &v21);
            if (v14 < 0) {
              operator delete(v13[0]);
            }
            a1[386] = 1;
            uint64_t v9 = sub_2268884D0((uint64_t)a1, (uint64_t)&v21, (uint64_t)&__p, a4);
            a1[386] = 0;
            if (!v9)
            {
              uint64_t v12 = HIBYTE(v18);
              if (v18 < 0) {
                uint64_t v12 = v17;
              }
              if (!v12) {
                goto LABEL_37;
              }
              a1[386] = 1;
              sub_22689F090(v13, "");
              uint64_t v9 = sub_226888444((uint64_t)a1, (uint64_t)&v21, (uint64_t)v13, a4);
              if (v14 < 0) {
                operator delete(v13[0]);
              }
              a1[386] = 0;
              if (!v9)
              {
                sub_226880920(a2, 1651722064, &v21);
                uint64_t v9 = sub_226888444((uint64_t)a1, (uint64_t)&v21, (uint64_t)&__p, a4);
                if (!v9) {
LABEL_37:
                }
                  uint64_t v9 = 0;
              }
            }
          }
        }
      }
      else
      {
        uint64_t v9 = 4294967291;
      }
    }
  }
  if (SHIBYTE(v18) < 0) {
    operator delete(__p);
  }
LABEL_14:
  if (cf) {
    CFRelease(cf);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226896A5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226896ACC(__CFArray **a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  int v25 = 0;
  int valuePtr = 1;
  v23[0] = 0;
  v23[1] = 0;
  uint64_t v24 = 0;
  if (!a3)
  {
    uint64_t v9 = 4294967292;
    goto LABEL_20;
  }
  sub_22689F090(__p, "raWM");
  uint64_t v8 = (*((uint64_t (**)(__CFArray **, uint64_t, void **, void **))*a1 + 2))(a1, a2, __p, v23);
  uint64_t v9 = v8;
  if (v22 < 0)
  {
    operator delete(__p[0]);
    if (v9) {
      goto LABEL_20;
    }
  }
  else if (v8)
  {
    goto LABEL_20;
  }
  uint64_t v10 = sub_226888134((uint64_t)a1, (uint64_t)v23, &v25, a4);
  uint64_t v9 = v10;
  if (v10 == -5 || !v10)
  {
    if (v25 == 5)
    {
      int v11 = 7;
    }
    else if (v25 == 4)
    {
      int v11 = 5;
    }
    else
    {
      int v11 = 1;
    }
    int valuePtr = v11;
    CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFNumberRef v13 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
    *a3 = v13;
    if (v13)
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v19 = a2;
      }
      else {
        uint64_t v19 = *(void *)a2;
      }
      uint64_t v9 = sub_226860774(v12, a1[6], (uint64_t)"%ks=%O", v14, v15, v16, v17, v18, v19);
      CFRelease(*a3);
    }
    else
    {
      uint64_t v9 = 4294960568;
    }
  }
LABEL_20:
  if (SHIBYTE(v24) < 0) {
    operator delete(v23[0]);
  }
  return v9;
}

void sub_226896C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226896C8C(CFDictionaryRef *a1, uint64_t a2, CFNumberRef number, uint64_t a4)
{
  int valuePtr = 1;
  memset(&__str, 0, sizeof(__str));
  if (!CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr))
  {
    uint64_t v10 = 4294960553;
    goto LABEL_39;
  }
  CFStringRef v7 = (const __CFString *)*MEMORY[0x263EFFB38];
  if ((valuePtr | 2) != 7)
  {
    CFMutableDictionaryRef theDict = 0;
    sub_22689F090(&__p, "");
    uint64_t v11 = (*((uint64_t (**)(CFDictionaryRef *, uint64_t, std::string *, std::string *))*a1 + 2))(a1, a2, &__p, &__str);
    uint64_t v10 = v11;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if (v10) {
        goto LABEL_39;
      }
    }
    else if (v11)
    {
      goto LABEL_39;
    }
    std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __str.__r_.__value_.__l.__size_;
    }
    std::string::basic_string(&__p, &__str, 0, size - 1, (std::allocator<char> *)&v18);
    if (!sub_226885770(a1, (uint64_t)&__p, &theDict, a4) && theDict)
    {
      CFDictionaryRemoveValue(theDict, @"raKT");
      CFDictionaryRemoveValue(theDict, @"rTSN");
      CFDictionaryRemoveValue(theDict, @"raEA");
      CFDictionaryRemoveValue(theDict, @"raWE");
      CFDictionaryRemoveValue(theDict, @"raCr");
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    int v8 = 0;
    goto LABEL_33;
  }
  if (valuePtr == 5) {
    int v8 = 4;
  }
  else {
    int v8 = 5;
  }
  sub_22689F090(&__p, "");
  uint64_t v9 = (*((uint64_t (**)(CFDictionaryRef *, uint64_t, std::string *, std::string *))*a1 + 2))(a1, a2, &__p, &__str);
  uint64_t v10 = v9;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (v10) {
      goto LABEL_39;
    }
  }
  else if (v9)
  {
    goto LABEL_39;
  }
  sub_22689F090(&__p, "raKT");
  sub_226881624((unsigned __int8 *)&__str, (uint64_t)&__p, &__str);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v10 = sub_2268814C8((uint64_t)a1, (uint64_t)&__str, 3600, a4);
  if (!v10)
  {
    sub_22689F090(&__p, "rTSN");
    sub_226881624((unsigned __int8 *)&__str, (uint64_t)&__p, &__str);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v10 = sub_2268809AC((uint64_t)a1, (uint64_t)&__str, v7, a4);
    if (!v10)
    {
      sub_22689F090(&__p, "raEA");
      sub_226881624((unsigned __int8 *)&__str, (uint64_t)&__p, &__str);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      uint64_t v10 = sub_2268809AC((uint64_t)a1, (uint64_t)&__str, v7, a4);
      if (!v10)
      {
        CFStringRef v7 = (const __CFString *)*MEMORY[0x263EFFB40];
LABEL_33:
        sub_22689F090(&__p, "raWM");
        sub_226881624((unsigned __int8 *)&__str, (uint64_t)&__p, &__str);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        uint64_t v10 = sub_2268814C8((uint64_t)a1, (uint64_t)&__str, v8, a4);
        if (!v10)
        {
          sub_22689F090(&__p, "raSk");
          sub_226881624((unsigned __int8 *)&__str, (uint64_t)&__p, &__str);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          uint64_t v10 = sub_2268809AC((uint64_t)a1, (uint64_t)&__str, v7, a4);
        }
      }
    }
  }
LABEL_39:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_226897038(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268970A8(CFDictionaryRef *a1, uint64_t a2, CFMutableDictionaryRef *a3, uint64_t a4)
{
  v13[0] = 0;
  v13[1] = 0;
  uint64_t v14 = 0;
  if (!a3)
  {
    uint64_t v9 = 4294967292;
    goto LABEL_9;
  }
  sub_22689F090(__p, "raCr");
  uint64_t v8 = (*((uint64_t (**)(CFDictionaryRef *, uint64_t, void **, void **))*a1 + 2))(a1, a2, __p, v13);
  uint64_t v9 = v8;
  if (v12 < 0)
  {
    operator delete(__p[0]);
    if (v9) {
      goto LABEL_9;
    }
  }
  else if (v8)
  {
    goto LABEL_9;
  }
  *((unsigned char *)a1 + 386) = 1;
  uint64_t v9 = sub_226885770(a1, (uint64_t)v13, a3, a4);
  *((unsigned char *)a1 + 386) = 0;
  if (v9 == -5)
  {
    uint64_t v9 = 0;
    *a3 = (CFMutableDictionaryRef)&stru_26DA6BE88;
  }
LABEL_9:
  if (SHIBYTE(v14) < 0) {
    operator delete(v13[0]);
  }
  return v9;
}

void sub_2268971AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268971E4(CFDictionaryRef *a1, uint64_t a2, const __CFString *a3, uint64_t a4)
{
  int v30 = 0;
  unsigned __int8 v28 = 0;
  uint64_t v29 = 0;
  v26[0] = 0;
  v26[1] = 0;
  uint64_t v27 = 0;
  CFStringRef v25 = 0;
  memset(&__str, 0, sizeof(__str));
  sub_22689F090(&__p, "raWM");
  uint64_t v8 = (*((uint64_t (**)(CFDictionaryRef *, uint64_t, std::string *, std::string *))*a1 + 2))(a1, a2, &__p, &__str);
  uint64_t v9 = v8;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (v9) {
      goto LABEL_6;
    }
  }
  else if (v8)
  {
    goto LABEL_6;
  }
  uint64_t v9 = sub_226861988(a3, &v29, &v28);
  if (!v9)
  {
    MEMORY[0x22A65ABB0](v26, v29);
    uint64_t v11 = sub_226888134((uint64_t)a1, (uint64_t)&__str, &v30, a4);
    uint64_t v9 = v11;
    if (v11 != -5)
    {
      if (v11) {
        goto LABEL_6;
      }
      if ((v30 & 0xFFFFFFFE) == 4)
      {
        memset(&__p, 0, sizeof(__p));
        theDict[0] = 0;
        theDict[1] = 0;
        uint64_t v22 = 0;
        char v18 = 0;
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        sub_22689F090(v16, "raCr");
        sub_226881624((unsigned __int8 *)&__str, (uint64_t)v16, &__str);
        if (v17 < 0) {
          operator delete(v16[0]);
        }
        *((unsigned char *)a1 + 386) = 1;
        uint64_t v12 = sub_2268884D0((uint64_t)a1, (uint64_t)&__str, (uint64_t)theDict, a4);
        uint64_t v9 = v12;
        *((unsigned char *)a1 + 386) = 0;
        if (v12 != -5 && v12) {
          goto LABEL_43;
        }
        if (sub_22688F510((unsigned __int8 *)v26, (unsigned __int8 *)theDict))
        {
          sub_22689F090(v16, "raNm");
          sub_226881624((unsigned __int8 *)&__str, (uint64_t)v16, &__str);
          if (v17 < 0) {
            operator delete(v16[0]);
          }
          *((unsigned char *)a1 + 386) = 1;
          uint64_t v9 = sub_2268884D0((uint64_t)a1, (uint64_t)&__str, (uint64_t)&__p, a4);
          *((unsigned char *)a1 + 386) = 0;
          if (v9) {
            goto LABEL_43;
          }
          if (!sub_22688CB20((uint64_t)v26, (void **)&__p.__r_.__value_.__l.__data_, (unint64_t *)&v18, 0))
          {
            MEMORY[0x22A65ABB0](v26, "");
            sub_22689F090(v16, "raWE");
            sub_226881624((unsigned __int8 *)&__str, (uint64_t)v16, &__str);
            if (v17 < 0) {
              operator delete(v16[0]);
            }
            CFStringRef v25 = (CFStringRef)CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, 0);
            uint64_t v14 = sub_2268809AC((uint64_t)a1, (uint64_t)&__str, v25, a4);
            goto LABEL_53;
          }
          int v13 = sub_22688BA8C("raWE");
          uint64_t v9 = sub_22683F308(v13, (unsigned __int8 *)v18, v19 - (unsigned char *)v18, 1, &v25);
          if (!v9)
          {
            sub_22689F090(v16, "raWE");
            sub_226881624((unsigned __int8 *)&__str, (uint64_t)v16, &__str);
            if (v17 < 0) {
              operator delete(v16[0]);
            }
            uint64_t v14 = sub_2268809AC((uint64_t)a1, (uint64_t)&__str, v25, a4);
LABEL_53:
            uint64_t v9 = v14;
            if (!v14)
            {
              sub_22689F090(v16, "raCr");
              sub_226881624((unsigned __int8 *)&__str, (uint64_t)v16, &__str);
              if (v17 < 0) {
                operator delete(v16[0]);
              }
              *((unsigned char *)a1 + 386) = 1;
              uint64_t v9 = sub_226888444((uint64_t)a1, (uint64_t)&__str, (uint64_t)v26, a4);
              *((unsigned char *)a1 + 386) = 0;
            }
          }
        }
        else
        {
          uint64_t v9 = 0;
        }
LABEL_43:
        if (v18)
        {
          uint64_t v19 = v18;
          operator delete(v18);
        }
        if (SHIBYTE(v22) < 0) {
          operator delete(theDict[0]);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        goto LABEL_6;
      }
      theDict[0] = 0;
      sub_22689F090(&__p, "");
      uint64_t v9 = (*((uint64_t (**)(CFDictionaryRef *, uint64_t, std::string *, std::string *))*a1 + 2))(a1, a2, &__p, &__str);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (v9) {
        goto LABEL_6;
      }
      std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = __str.__r_.__value_.__l.__size_;
      }
      std::string::basic_string(&__p, &__str, 0, size - 1, (std::allocator<char> *)&v18);
      if (!sub_226885770(a1, (uint64_t)&__p, theDict, a4) && theDict[0])
      {
        CFDictionaryRemoveValue(theDict[0], @"raWE");
        CFDictionaryRemoveValue(theDict[0], @"raCr");
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    uint64_t v9 = 0;
  }
LABEL_6:
  if (v25) {
    CFRelease(v25);
  }
  if (v28) {
    free(v28);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v27) < 0) {
    operator delete(v26[0]);
  }
  return v9;
}

void sub_2268976A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (*(char *)(v35 - 73) < 0) {
    operator delete(*(void **)(v35 - 96));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226897764(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&v35, 0, sizeof(v35));
  std::string __p = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v30 = 0;
  unint64_t v31 = 0;
  uint64_t v29 = 0;
  if (!a3)
  {
    uint64_t v8 = 4294967292;
    goto LABEL_18;
  }
  sub_226880920((unsigned __int8 *)a2, 1684554343, &v35);
  uint64_t v8 = sub_2268884D0(a1, (uint64_t)&v35, (uint64_t)&__p, a4);
  if (!v8)
  {
    uint64_t v9 = v34 >= 0 ? (char *)&__p : (char *)__p;
    uint64_t v8 = sub_22686EA18(v9, 0, (unsigned int *)&v31 + 1, 0, 0, 0, 0);
    if (!v8)
    {
      sub_226880920((unsigned __int8 *)a2, 1684555118, &v35);
      uint64_t v8 = sub_2268884D0(a1, (uint64_t)&v35, (uint64_t)&__p, a4);
      if (!v8)
      {
        uint64_t v10 = v34 >= 0 ? (char *)&__p : (char *)__p;
        uint64_t v8 = sub_22686EA18(v10, 0, (unsigned int *)&v31, 0, 0, 0, 0);
        if (!v8)
        {
          sub_226880920((unsigned __int8 *)a2, 1735283534, &v35);
          uint64_t v11 = sub_2268884D0(a1, (uint64_t)&v35, (uint64_t)&__p, a4);
          if (v11) {
            goto LABEL_13;
          }
          if (SHIBYTE(v34) < 0)
          {
            if (!v33) {
              goto LABEL_13;
            }
            p_p = (char *)__p;
          }
          else
          {
            if (!HIBYTE(v34)) {
              goto LABEL_13;
            }
            p_p = (char *)&__p;
          }
          uint64_t v8 = sub_22686EA18(p_p, 0, (unsigned int *)&v29, 0, 0, 0, 0);
          if (v8) {
            goto LABEL_18;
          }
LABEL_13:
          unsigned int v12 = v29;
          if (!v29)
          {
            uint64_t v8 = sub_22686EA18("255.255.255.0", 0, (unsigned int *)&v29, 0, 0, 0, 0);
            if (v8) {
              goto LABEL_18;
            }
            uint64_t v11 = 0;
            unsigned int v12 = v29;
          }
          unint64_t v31 = _byteswap_uint64(__PAIR64__(v31, HIDWORD(v31)));
          LODWORD(v29) = bswap32(v12);
          int v13 = (char *)malloc_type_malloc(0x1BuLL, 0xA3D29CFFuLL);
          uint64_t v14 = v13;
          uint64_t v8 = v11;
          if (!v13) {
            goto LABEL_18;
          }
          *(void *)int v13 = 0;
          *((void *)v13 + 1) = 0;
          *(_DWORD *)(v13 + 23) = 0;
          *((void *)v13 + 2) = 0;
          if (SHIBYTE(v34) < 0)
          {
            *(unsigned char *)std::string __p = 0;
            uint64_t v33 = 0;
          }
          else
          {
            LOBYTE(__p) = 0;
            HIBYTE(v34) = 0;
          }
          sub_226880920((unsigned __int8 *)a2, 1735279207, &v35);
          if (!sub_2268884D0(a1, (uint64_t)&v35, (uint64_t)&__p, a4))
          {
            if (SHIBYTE(v34) < 0)
            {
              if (!v33) {
                goto LABEL_30;
              }
              char v17 = (char *)__p;
            }
            else
            {
              if (!HIBYTE(v34)) {
                goto LABEL_30;
              }
              char v17 = (char *)&__p;
            }
            uint64_t v8 = sub_22686EA18(v17, 0, (unsigned int *)&v30 + 1, 0, 0, 0, 0);
            if (v8) {
              goto LABEL_77;
            }
          }
LABEL_30:
          if (!HIDWORD(v30))
          {
            uint64_t v8 = sub_22686EA18("172.16.42.2", 0, (unsigned int *)&v30 + 1, 0, 0, 0, 0);
            if (v8) {
              goto LABEL_77;
            }
            int v18 = bswap32(HIDWORD(v30)) & v29;
            HIDWORD(v30) = bswap32(v18 & 0xFFFFFF) & 0xFFFFFF00 | ((v18 + (HIBYTE(v31) << 24)) >> 24);
          }
          if (SHIBYTE(v34) < 0)
          {
            *(unsigned char *)std::string __p = 0;
            uint64_t v33 = 0;
          }
          else
          {
            LOBYTE(__p) = 0;
            HIBYTE(v34) = 0;
          }
          sub_226880920((unsigned __int8 *)a2, 1735279982, &v35);
          if (!sub_2268884D0(a1, (uint64_t)&v35, (uint64_t)&__p, a4))
          {
            if (SHIBYTE(v34) < 0)
            {
              if (!v33) {
                goto LABEL_44;
              }
              uint64_t v19 = (char *)__p;
            }
            else
            {
              if (!HIBYTE(v34)) {
                goto LABEL_44;
              }
              uint64_t v19 = (char *)&__p;
            }
            uint64_t v8 = sub_22686EA18(v19, 0, (unsigned int *)&v30, 0, 0, 0, 0);
            if (v8) {
              goto LABEL_77;
            }
          }
LABEL_44:
          if (!v30)
          {
            uint64_t v8 = sub_22686EA18("172.16.42.200", 0, (unsigned int *)&v30, 0, 0, 0, 0);
            if (v8) {
              goto LABEL_77;
            }
            LODWORD(v30) = (bswap32(v30) & v29) + (BYTE3(v31) << 24);
          }
          if (SHIBYTE(v34) < 0)
          {
            *(unsigned char *)std::string __p = 0;
            uint64_t v33 = 0;
          }
          else
          {
            LOBYTE(__p) = 0;
            HIBYTE(v34) = 0;
          }
          sub_226880920((unsigned __int8 *)a2, 1735283311, &v35);
          if (sub_2268884D0(a1, (uint64_t)&v35, (uint64_t)&__p, a4)) {
            goto LABEL_54;
          }
          if (SHIBYTE(v34) < 0)
          {
            if (v33)
            {
              unsigned __int8 v28 = (char *)__p;
              goto LABEL_73;
            }
          }
          else if (HIBYTE(v34))
          {
            unsigned __int8 v28 = (char *)&__p;
LABEL_73:
            uint64_t v8 = sub_22686EA18(v28, 0, (unsigned int *)&v29 + 1, 0, 0, 0, 0);
            if (v8) {
              goto LABEL_77;
            }
            if (HIDWORD(v29))
            {
LABEL_55:
              sub_22686714C(HIDWORD(v30), 0, v14);
              CFAllocatorRef v20 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
              CFStringRef v21 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], v14, 0x8000100u);
              *a3 = v21;
              if (v21)
              {
                if (*(char *)(a2 + 23) >= 0) {
                  uint64_t v27 = a2;
                }
                else {
                  uint64_t v27 = *(void *)a2;
                }
                uint64_t v8 = sub_226860774(v20, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v22, v23, v24, v25, v26, v27);
                CFRelease(*a3);
              }
              else
              {
                uint64_t v8 = 4294960568;
              }
              goto LABEL_77;
            }
          }
LABEL_54:
          uint64_t v8 = sub_22686EA18("172.16.42.1", 0, (unsigned int *)&v29 + 1, 0, 0, 0, 0);
          if (!v8) {
            goto LABEL_55;
          }
LABEL_77:
          free(v14);
        }
      }
    }
  }
LABEL_18:
  if (SHIBYTE(v34) < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v35.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226897CE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226897D10(uint64_t a1, unsigned __int8 *a2, const __CFString *a3, uint64_t a4)
{
  memset(&v36, 0, sizeof(v36));
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v31 = 0;
  unint64_t v32 = 0;
  unsigned int v30 = 0;
  unsigned __int8 v28 = 0;
  uint64_t v29 = 0;
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v27 = 0;
  uint64_t v7 = sub_226861988(a3, &v29, (UInt8 **)&v28);
  if (v7) {
    goto LABEL_12;
  }
  MEMORY[0x22A65ABB0](__p, v29);
  sub_226880920(a2, 1684554343, &v36);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v36, (uint64_t)&v33, a4);
  if (v7) {
    goto LABEL_12;
  }
  uint64_t v8 = v35 >= 0 ? (char *)&v33 : (char *)v33;
  uint64_t v7 = sub_22686EA18(v8, 0, (unsigned int *)&v32 + 1, 0, 0, 0, 0);
  if (v7) {
    goto LABEL_12;
  }
  sub_226880920(a2, 1684555118, &v36);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v36, (uint64_t)&v33, a4);
  if (v7) {
    goto LABEL_12;
  }
  uint64_t v9 = v35 >= 0 ? (char *)&v33 : (char *)v33;
  uint64_t v7 = sub_22686EA18(v9, 0, (unsigned int *)&v32, 0, 0, 0, 0);
  if (v7) {
    goto LABEL_12;
  }
  sub_226880920(a2, 1735283534, &v36);
  if (!sub_2268884D0(a1, (uint64_t)&v36, (uint64_t)&v33, a4))
  {
    if (SHIBYTE(v35) < 0)
    {
      if (!v34) {
        goto LABEL_25;
      }
      uint64_t v22 = (char *)v33;
    }
    else
    {
      if (!HIBYTE(v35)) {
        goto LABEL_25;
      }
      uint64_t v22 = (char *)&v33;
    }
    uint64_t v7 = sub_22686EA18(v22, 0, &v30, 0, 0, 0, 0);
    if (v7) {
      goto LABEL_12;
    }
  }
LABEL_25:
  unsigned int v12 = v30;
  if (!v30)
  {
    MEMORY[0x22A65ABB0](&v33, "255.255.255.0");
    if (v35 >= 0) {
      uint64_t v23 = (char *)&v33;
    }
    else {
      uint64_t v23 = (char *)v33;
    }
    uint64_t v7 = sub_22686EA18(v23, 0, &v30, 0, 0, 0, 0);
    if (v7) {
      goto LABEL_12;
    }
    sub_226880920(a2, 1735283534, &v36);
    uint64_t v7 = sub_226888444(a1, (uint64_t)&v36, (uint64_t)&v33, a4);
    if (v7) {
      goto LABEL_12;
    }
    unsigned int v12 = v30;
  }
  unint64_t v32 = _byteswap_uint64(__PAIR64__(v32, HIDWORD(v32)));
  unsigned int v30 = bswap32(v12);
  if (v27 >= 0) {
    int v13 = (char *)__p;
  }
  else {
    int v13 = (char *)__p[0];
  }
  sub_22686EA18(v13, 0, (unsigned int *)&v31 + 1, 0, 0, 0, 0);
  int v14 = v32;
  unsigned int v15 = bswap32(HIDWORD(v31));
  HIDWORD(v31) = v15;
  unsigned int v16 = v30;
  int v17 = HIBYTE(v32);
  uint64_t v7 = sub_22686EA18("172.16.42.1", 0, (unsigned int *)&v31, 0, 0, 0, 0);
  if (v7)
  {
LABEL_12:
    uint64_t v10 = 0;
    goto LABEL_13;
  }
  int v18 = v16 & v15;
  int v19 = v18 | (v17 << 24);
  LODWORD(v31) = v30 & v19 | (v31 << 24);
  CFAllocatorRef v20 = (char *)malloc_type_malloc(0x1BuLL, 0x9B9A4D81uLL);
  uint64_t v10 = v20;
  if (v20)
  {
    *(void *)CFAllocatorRef v20 = 0;
    *((void *)v20 + 1) = 0;
    *(_DWORD *)(v20 + 23) = 0;
    *((void *)v20 + 2) = 0;
    unsigned int v21 = bswap32(v18 & 0xFFFFFF);
    sub_22686714C(v21 & 0xFFFFFF00 | HIBYTE(v19), 0, v20);
    sub_226880920(a2, 1735279207, &v36);
    sub_22689F090(v24, v10);
    uint64_t v7 = sub_226888444(a1, (uint64_t)&v36, (uint64_t)v24, a4);
    if (v25 < 0) {
      operator delete(v24[0]);
    }
    if (!v7)
    {
      sub_22686714C(v21 | ((v14 | v18) >> 24), 0, v10);
      sub_226880920(a2, 1735279982, &v36);
      sub_22689F090(v24, v10);
      uint64_t v7 = sub_226888444(a1, (uint64_t)&v36, (uint64_t)v24, a4);
      if (v25 < 0) {
        operator delete(v24[0]);
      }
      if (!v7)
      {
        sub_22686714C(bswap32(v31), 0, v10);
        sub_226880920(a2, 1735283311, &v36);
        sub_22689F090(v24, v10);
        uint64_t v7 = sub_226888444(a1, (uint64_t)&v36, (uint64_t)v24, a4);
        if (v25 < 0) {
          operator delete(v24[0]);
        }
      }
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
LABEL_13:
  if (v28) {
    free(v28);
  }
  if (v10) {
    free(v10);
  }
  if (SHIBYTE(v27) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v35) < 0) {
    operator delete(v33);
  }
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v36.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268981B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  if (*(char *)(v32 - 65) < 0) {
    operator delete(*(void **)(v32 - 88));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226898220(__CFArray **a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  int valuePtr = 0;
  v22[0] = 0;
  v22[1] = 0;
  uint64_t v23 = 0;
  if (!a3)
  {
    uint64_t v9 = 4294967292;
    goto LABEL_16;
  }
  sub_22689F090(__p, "tlna_limit");
  uint64_t v8 = (*((uint64_t (**)(__CFArray **, uint64_t, void **, void **))*a1 + 2))(a1, a2, __p, v22);
  uint64_t v9 = v8;
  if (v21 < 0)
  {
    operator delete(__p[0]);
    if (v9) {
      goto LABEL_16;
    }
  }
  else if (v8)
  {
    goto LABEL_16;
  }
  uint64_t v10 = sub_226888134((uint64_t)a1, (uint64_t)v22, &valuePtr, a4);
  uint64_t v9 = v10;
  if (!v10) {
    goto LABEL_10;
  }
  if (v10 == -5)
  {
    int valuePtr = 0;
LABEL_10:
    CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFNumberRef v12 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
    *a3 = v12;
    if (v12)
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v18 = a2;
      }
      else {
        uint64_t v18 = *(void *)a2;
      }
      uint64_t v9 = sub_226860774(v11, a1[6], (uint64_t)"%ks=%O", v13, v14, v15, v16, v17, v18);
      CFRelease(*a3);
    }
    else
    {
      uint64_t v9 = 4294960568;
    }
  }
LABEL_16:
  if (SHIBYTE(v23) < 0) {
    operator delete(v22[0]);
  }
  return v9;
}

void sub_22689837C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268983B4(uint64_t a1, uint64_t a2, const __CFNumber *a3, uint64_t a4)
{
  int valuePtr = 0;
  memset(&v13, 0, sizeof(v13));
  sub_22689F090(__p, "tlna_limit");
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, void **, std::string *))(*(void *)a1 + 16))(a1, a2, __p, &v13);
  uint64_t v9 = v8;
  if (v12 < 0)
  {
    operator delete(__p[0]);
    if (v9) {
      goto LABEL_11;
    }
  }
  else if (v8)
  {
    goto LABEL_11;
  }
  if (CFNumberGetValue(a3, kCFNumberSInt32Type, &valuePtr))
  {
    uint64_t v9 = sub_2268814C8(a1, (uint64_t)&v13, valuePtr, a4);
    if (!v9)
    {
      sub_22689F090(__p, "tlna_period");
      sub_226881624((unsigned __int8 *)&v13, (uint64_t)__p, &v13);
      if (v12 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v9 = sub_2268814C8(a1, (uint64_t)&v13, 1440, a4);
    }
  }
  else
  {
    uint64_t v9 = 4294960553;
  }
LABEL_11:
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_2268984F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226898534(uint64_t a1, uint64_t a2, const __CFString *a3, uint64_t a4)
{
  v15[0] = 0;
  v15[1] = 0;
  uint64_t v16 = 0;
  sub_22689F090(__p, "Enabled");
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, void **, void **))(*(void *)a1 + 16))(a1, a2, __p, v15);
  uint64_t v9 = v8;
  if (v13 < 0)
  {
    operator delete(__p[0]);
    if (v9) {
      goto LABEL_12;
    }
  }
  else if (v8)
  {
    goto LABEL_12;
  }
  if (sub_226888348(a1, (uint64_t)v15, &v14, a4) == -5)
  {
    uint64_t v9 = 0;
    goto LABEL_12;
  }
  sub_22689F090(__p, "raCl");
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, void **, void **))(*(void *)a1 + 16))(a1, a2, __p, v15);
  uint64_t v9 = v10;
  if (v13 < 0)
  {
    operator delete(__p[0]);
    if (v9) {
      goto LABEL_12;
    }
  }
  else if (v10)
  {
    goto LABEL_12;
  }
  uint64_t v9 = sub_2268809AC(a1, (uint64_t)v15, a3, a4);
LABEL_12:
  if (SHIBYTE(v16) < 0) {
    operator delete(v15[0]);
  }
  return v9;
}

void sub_226898698(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268986D8(CFDictionaryRef *a1, uint64_t a2, CFMutableDictionaryRef *a3, uint64_t a4)
{
  v13[0] = 0;
  v13[1] = 0;
  uint64_t v14 = 0;
  if (!a3)
  {
    uint64_t v9 = 4294967292;
    goto LABEL_9;
  }
  sub_22689F090(__p, "raCl");
  uint64_t v8 = (*((uint64_t (**)(CFDictionaryRef *, uint64_t, void **, void **))*a1 + 2))(a1, a2, __p, v13);
  uint64_t v9 = v8;
  if (v12 < 0)
  {
    operator delete(__p[0]);
    if (v9) {
      goto LABEL_9;
    }
  }
  else if (v8)
  {
    goto LABEL_9;
  }
  uint64_t v9 = sub_226885770(a1, (uint64_t)v13, a3, a4);
  if (v9 == -5)
  {
    uint64_t v9 = 0;
    *a3 = (CFMutableDictionaryRef)*MEMORY[0x263EFFB38];
  }
LABEL_9:
  if (SHIBYTE(v14) < 0) {
    operator delete(v13[0]);
  }
  return v9;
}

void sub_2268987D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689880C(CFDictionaryRef *a1, uint64_t a2, CFMutableDictionaryRef *a3, uint64_t a4)
{
  if ((*(char *)(a2 + 23) & 0x80000000) == 0)
  {
    std::string __dst = *(std::string *)a2;
    if (a3) {
      goto LABEL_3;
    }
LABEL_13:
    uint64_t v9 = 4294967292;
    goto LABEL_15;
  }
  sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
  if (!a3) {
    goto LABEL_13;
  }
LABEL_3:
  if (sub_22687CBC8((uint64_t)a1, 2003390540))
  {
    sub_22689F090(__p, "pSTA");
    sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
    unsigned int v7 = sub_226885770(a1, (uint64_t)&__dst, a3, a4);
    if (v7 == -5 && a4 == 1) {
      uint64_t v9 = 4294967291;
    }
    else {
      uint64_t v9 = v7;
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
LABEL_15:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226898900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226898938(uint64_t a1, uint64_t a2, const __CFString *a3, uint64_t a4)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __dst = *(std::string *)a2;
  }
  if (sub_22687CBC8(a1, 2003390540))
  {
    sub_22689F090(__p, "pSTA");
    sub_226881624((unsigned __int8 *)&__dst, (uint64_t)__p, &__dst);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_2268809AC(a1, (uint64_t)&__dst, a3, a4);
  }
  else
  {
    uint64_t v7 = 0;
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_226898A14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226898A4C(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __dst = *(std::string *)a2;
  }
  int valuePtr = 0;
  if (a3)
  {
    std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    if (size == 4)
    {
      sub_22683C448(1953645423, __s);
      sub_22689F090(v26, __s);
      if ((v27 & 0x80u) == 0) {
        size_t v9 = v27;
      }
      else {
        size_t v9 = (size_t)v26[1];
      }
      char v10 = __p;
      sub_22689FBF4((uint64_t)__p, v9 + 1);
      if ((v29 & 0x80u) != 0) {
        char v10 = (void **)__p[0];
      }
      if (v9)
      {
        if ((v27 & 0x80u) == 0) {
          CFAllocatorRef v11 = v26;
        }
        else {
          CFAllocatorRef v11 = (void **)v26[0];
        }
        memmove(v10, v11, v9);
      }
      *(_WORD *)((char *)v10 + v9) = 46;
      if ((v29 & 0x80u) == 0) {
        size_t v12 = v29;
      }
      else {
        size_t v12 = (size_t)__p[1];
      }
      p_str = &__str;
      sub_22689FBF4((uint64_t)&__str, v12 + 22);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      if (v12)
      {
        if ((v29 & 0x80u) == 0) {
          uint64_t v14 = __p;
        }
        else {
          uint64_t v14 = (void **)__p[0];
        }
        memmove(p_str, v14, v12);
      }
      strcpy((char *)p_str + v12, "1stMileUplinkBandwidth");
      std::string::operator=(&__dst, &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      if ((char)v29 < 0) {
        operator delete(__p[0]);
      }
      if ((char)v27 < 0) {
        operator delete(v26[0]);
      }
    }
    uint64_t v15 = sub_226888134(a1, (uint64_t)&__dst, &valuePtr, a4);
    uint64_t v16 = v15;
    if (!v15) {
      goto LABEL_37;
    }
    if (v15 == -5)
    {
      int valuePtr = 128;
LABEL_37:
      CFAllocatorRef v17 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFNumberRef v18 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
      *a3 = v18;
      if (v18)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v24 = a2;
        }
        else {
          uint64_t v24 = *(void *)a2;
        }
        uint64_t v16 = sub_226860774(v17, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v19, v20, v21, v22, v23, v24);
        CFRelease(*a3);
      }
      else
      {
        uint64_t v16 = 4294960568;
      }
    }
  }
  else
  {
    uint64_t v16 = 4294967292;
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return v16;
}

void sub_226898CBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  if (*(char *)(v29 - 57) < 0) {
    operator delete(*(void **)(v29 - 80));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226898D28(uint64_t a1, uint64_t a2, CFNumberRef number, uint64_t a4)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __dst = *(std::string *)a2;
  }
  int valuePtr = 0;
  if (CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr))
  {
    std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    if (size == 4)
    {
      sub_22683C448(1953645423, __s);
      sub_22689F090(v16, __s);
      if ((v17 & 0x80u) == 0) {
        size_t v8 = v17;
      }
      else {
        size_t v8 = (size_t)v16[1];
      }
      size_t v9 = __p;
      sub_22689FBF4((uint64_t)__p, v8 + 1);
      if ((v19 & 0x80u) != 0) {
        size_t v9 = (void **)__p[0];
      }
      if (v8)
      {
        if ((v17 & 0x80u) == 0) {
          char v10 = v16;
        }
        else {
          char v10 = (void **)v16[0];
        }
        memmove(v9, v10, v8);
      }
      *(_WORD *)((char *)v9 + v8) = 46;
      if ((v19 & 0x80u) == 0) {
        size_t v11 = v19;
      }
      else {
        size_t v11 = (size_t)__p[1];
      }
      p_str = &__str;
      sub_22689FBF4((uint64_t)&__str, v11 + 22);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      if (v11)
      {
        if ((v19 & 0x80u) == 0) {
          char v13 = __p;
        }
        else {
          char v13 = (void **)__p[0];
        }
        memmove(p_str, v13, v11);
      }
      strcpy((char *)p_str + v11, "1stMileUplinkBandwidth");
      std::string::operator=(&__dst, &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      if ((char)v19 < 0) {
        operator delete(__p[0]);
      }
      if ((char)v17 < 0) {
        operator delete(v16[0]);
      }
    }
    uint64_t v14 = sub_2268814C8(a1, (uint64_t)&__dst, valuePtr, a4);
  }
  else
  {
    uint64_t v14 = 4294960553;
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return v14;
}

void sub_226898F2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (*(char *)(v27 - 41) < 0) {
    operator delete(*(void **)(v27 - 64));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226898F98(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __dst = *(std::string *)a2;
  }
  int valuePtr = 0;
  if (a3)
  {
    std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    if (size == 4)
    {
      sub_22683C448(1953645423, __s);
      sub_22689F090(v26, __s);
      if ((v27 & 0x80u) == 0) {
        size_t v9 = v27;
      }
      else {
        size_t v9 = (size_t)v26[1];
      }
      char v10 = __p;
      sub_22689FBF4((uint64_t)__p, v9 + 1);
      if ((v29 & 0x80u) != 0) {
        char v10 = (void **)__p[0];
      }
      if (v9)
      {
        if ((v27 & 0x80u) == 0) {
          size_t v11 = v26;
        }
        else {
          size_t v11 = (void **)v26[0];
        }
        memmove(v10, v11, v9);
      }
      *(_WORD *)((char *)v10 + v9) = 46;
      if ((v29 & 0x80u) == 0) {
        size_t v12 = v29;
      }
      else {
        size_t v12 = (size_t)__p[1];
      }
      p_str = &__str;
      sub_22689FBF4((uint64_t)&__str, v12 + 24);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      if (v12)
      {
        if ((v29 & 0x80u) == 0) {
          uint64_t v14 = __p;
        }
        else {
          uint64_t v14 = (void **)__p[0];
        }
        memmove(p_str, v14, v12);
      }
      strcpy((char *)p_str + v12, "1stMileDownlinkBandwidth");
      std::string::operator=(&__dst, &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      if ((char)v29 < 0) {
        operator delete(__p[0]);
      }
      if ((char)v27 < 0) {
        operator delete(v26[0]);
      }
    }
    uint64_t v15 = sub_226888134(a1, (uint64_t)&__dst, &valuePtr, a4);
    uint64_t v16 = v15;
    if (!v15) {
      goto LABEL_37;
    }
    if (v15 == -5)
    {
      int valuePtr = 768;
LABEL_37:
      CFAllocatorRef v17 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFNumberRef v18 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
      *a3 = v18;
      if (v18)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v24 = a2;
        }
        else {
          uint64_t v24 = *(void *)a2;
        }
        uint64_t v16 = sub_226860774(v17, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v19, v20, v21, v22, v23, v24);
        CFRelease(*a3);
      }
      else
      {
        uint64_t v16 = 4294960568;
      }
    }
  }
  else
  {
    uint64_t v16 = 4294967292;
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return v16;
}

void sub_226899208(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  if (*(char *)(v29 - 57) < 0) {
    operator delete(*(void **)(v29 - 80));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226899274(uint64_t a1, uint64_t a2, CFNumberRef number, uint64_t a4)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __dst = *(std::string *)a2;
  }
  int valuePtr = 0;
  if (CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr))
  {
    std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    if (size == 4)
    {
      sub_22683C448(1953645423, __s);
      sub_22689F090(v16, __s);
      if ((v17 & 0x80u) == 0) {
        size_t v8 = v17;
      }
      else {
        size_t v8 = (size_t)v16[1];
      }
      size_t v9 = __p;
      sub_22689FBF4((uint64_t)__p, v8 + 1);
      if ((v19 & 0x80u) != 0) {
        size_t v9 = (void **)__p[0];
      }
      if (v8)
      {
        if ((v17 & 0x80u) == 0) {
          char v10 = v16;
        }
        else {
          char v10 = (void **)v16[0];
        }
        memmove(v9, v10, v8);
      }
      *(_WORD *)((char *)v9 + v8) = 46;
      if ((v19 & 0x80u) == 0) {
        size_t v11 = v19;
      }
      else {
        size_t v11 = (size_t)__p[1];
      }
      p_str = &__str;
      sub_22689FBF4((uint64_t)&__str, v11 + 24);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      if (v11)
      {
        if ((v19 & 0x80u) == 0) {
          char v13 = __p;
        }
        else {
          char v13 = (void **)__p[0];
        }
        memmove(p_str, v13, v11);
      }
      strcpy((char *)p_str + v11, "1stMileDownlinkBandwidth");
      std::string::operator=(&__dst, &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      if ((char)v19 < 0) {
        operator delete(__p[0]);
      }
      if ((char)v17 < 0) {
        operator delete(v16[0]);
      }
    }
    uint64_t v14 = sub_2268814C8(a1, (uint64_t)&__dst, valuePtr, a4);
  }
  else
  {
    uint64_t v14 = 4294960553;
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return v14;
}

void sub_226899478(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (*(char *)(v27 - 41) < 0) {
    operator delete(*(void **)(v27 - 64));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268994E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __dst = *(std::string *)a2;
  }
  int v24 = 0;
  if (a3)
  {
    std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    if (size == 4)
    {
      sub_22683C448(1953645423, __s);
      sub_22689F090(v18, __s);
      if ((v19 & 0x80u) == 0) {
        size_t v8 = v19;
      }
      else {
        size_t v8 = (size_t)v18[1];
      }
      size_t v9 = __p;
      sub_22689FBF4((uint64_t)__p, v8 + 1);
      if ((v21 & 0x80u) != 0) {
        size_t v9 = (void **)__p[0];
      }
      if (v8)
      {
        if ((v19 & 0x80u) == 0) {
          char v10 = v18;
        }
        else {
          char v10 = (void **)v18[0];
        }
        memmove(v9, v10, v8);
      }
      *(_WORD *)((char *)v9 + v8) = 46;
      if ((v21 & 0x80u) == 0) {
        size_t v11 = v21;
      }
      else {
        size_t v11 = (size_t)__p[1];
      }
      p_str = &__str;
      sub_22689FBF4((uint64_t)&__str, v11 + 5);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      if (v11)
      {
        if ((v21 & 0x80u) == 0) {
          char v13 = __p;
        }
        else {
          char v13 = (void **)__p[0];
        }
        memmove(p_str, v13, v11);
      }
      strcpy((char *)p_str + v11, "flags");
      std::string::operator=(&__dst, &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      if ((char)v21 < 0) {
        operator delete(__p[0]);
      }
      if ((char)v19 < 0) {
        operator delete(v18[0]);
      }
    }
    uint64_t v14 = sub_226888134(a1, (uint64_t)&__dst, &v24, a4);
    uint64_t v15 = v14;
    if (v14 == -5) {
      goto LABEL_39;
    }
    if (v14) {
      goto LABEL_41;
    }
    if ((v24 & 3) == 0) {
LABEL_39:
    }
      uint64_t v16 = (void *)MEMORY[0x263EFFB38];
    else {
      uint64_t v16 = (void *)MEMORY[0x263EFFB40];
    }
    uint64_t v15 = 0;
    *a3 = *v16;
  }
  else
  {
    uint64_t v15 = 4294967292;
  }
LABEL_41:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return v15;
}

void sub_226899710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (*(char *)(v27 - 57) < 0) {
    operator delete(*(void **)(v27 - 80));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689977C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_22689EF14(&__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __dst = *(std::string *)a2;
  }
  int v25 = 0;
  std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
  if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __dst.__r_.__value_.__l.__size_;
  }
  if (size == 4)
  {
    sub_22683C448(1953645423, __s);
    sub_22689F090(v19, __s);
    if ((v20 & 0x80u) == 0) {
      size_t v8 = v20;
    }
    else {
      size_t v8 = (size_t)v19[1];
    }
    size_t v9 = __p;
    sub_22689FBF4((uint64_t)__p, v8 + 1);
    if ((v22 & 0x80u) != 0) {
      size_t v9 = (void **)__p[0];
    }
    if (v8)
    {
      if ((v20 & 0x80u) == 0) {
        char v10 = v19;
      }
      else {
        char v10 = (void **)v19[0];
      }
      memmove(v9, v10, v8);
    }
    *(_WORD *)((char *)v9 + v8) = 46;
    if ((v22 & 0x80u) == 0) {
      size_t v11 = v22;
    }
    else {
      size_t v11 = (size_t)__p[1];
    }
    p_str = &__str;
    sub_22689FBF4((uint64_t)&__str, v11 + 5);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
    }
    if (v11)
    {
      if ((v22 & 0x80u) == 0) {
        char v13 = __p;
      }
      else {
        char v13 = (void **)__p[0];
      }
      memmove(p_str, v13, v11);
    }
    strcpy((char *)p_str + v11, "flags");
    std::string::operator=(&__dst, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if ((char)v22 < 0) {
      operator delete(__p[0]);
    }
    if ((char)v20 < 0) {
      operator delete(v19[0]);
    }
  }
  uint64_t v14 = sub_226888134(a1, (uint64_t)&__dst, &v25, a4);
  uint64_t v15 = v14;
  if (v14 == -5)
  {
    unsigned int v16 = 0;
    goto LABEL_37;
  }
  if (!v14)
  {
    unsigned int v16 = v25 & 0xFFFFFFFC;
LABEL_37:
    if (*MEMORY[0x263EFFB40] == a3) {
      int v17 = 3;
    }
    else {
      int v17 = 0;
    }
    int v25 = v16 | v17;
    uint64_t v15 = sub_2268814C8(a1, (uint64_t)&__dst, v16 | v17, a4);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return v15;
}

void sub_2268999B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (*(char *)(v27 - 57) < 0) {
    operator delete(*(void **)(v27 - 80));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226899A20(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&v25, 0, sizeof(v25));
  int v24 = 0;
  if (a3)
  {
    sub_22689F090(__p, "raMu");
    sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v25);
    if (v22 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_226888134(a1, (uint64_t)&v25, &v24, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      BOOL v10 = sub_22687CBC8(a1, 1935819842);
      int v11 = v24;
      if (!v10) {
        goto LABEL_21;
      }
      if (v24 > 35)
      {
        if (v24 == 85) {
          goto LABEL_19;
        }
        if (v24 != 36)
        {
LABEL_20:
          int v11 = 1000;
LABEL_21:
          int valuePtr = v11;
          CFAllocatorRef v13 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          CFNumberRef v14 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
          *a3 = v14;
          if (v14)
          {
            if (*(char *)(a2 + 23) >= 0) {
              uint64_t v20 = a2;
            }
            else {
              uint64_t v20 = *(void *)a2;
            }
            uint64_t v9 = sub_226860774(v13, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v15, v16, v17, v18, v19, v20);
            CFRelease(*a3);
          }
          else
          {
            uint64_t v9 = 4294960568;
          }
          goto LABEL_13;
        }
      }
      else if (v24 != 17)
      {
        if (v24 != 18) {
          goto LABEL_20;
        }
LABEL_19:
        int v11 = 2000;
        goto LABEL_21;
      }
      int v11 = 3000;
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
LABEL_13:
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v25.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_226899BA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226899BE0(uint64_t a1, unsigned __int8 *a2, const __CFNumber *a3, uint64_t a4)
{
  memset(&v21, 0, sizeof(v21));
  uint64_t valuePtr = 0;
  sub_22689F090(__p, "raMd");
  sub_226881624(a2, (uint64_t)__p, &v21);
  if (v19 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v8 = sub_226888134(a1, (uint64_t)&v21, &valuePtr, a4);
  if (!v8)
  {
    int v9 = sub_2268A822C(valuePtr);
    if (valuePtr == 3) {
      int v10 = 1;
    }
    else {
      int v10 = v9;
    }
    if (valuePtr == 7) {
      int v11 = 1;
    }
    else {
      int v11 = v10;
    }
    if (!CFNumberGetValue(a3, kCFNumberSInt32Type, (char *)&valuePtr + 4))
    {
      uint64_t v8 = 4294967293;
      goto LABEL_28;
    }
    BOOL v12 = sub_22687CBC8(a1, 1935819842);
    int v13 = HIDWORD(valuePtr);
    if (!v12) {
      goto LABEL_25;
    }
    if (SHIDWORD(valuePtr) > 1999)
    {
      if (HIDWORD(valuePtr) == 2000)
      {
        BOOL v14 = v11 == 0;
        int v15 = 85;
        int v16 = 18;
        goto LABEL_22;
      }
      if (HIDWORD(valuePtr) == 3000)
      {
        BOOL v14 = v11 == 0;
        int v15 = 17;
        int v16 = 36;
        goto LABEL_22;
      }
    }
    else if ((HIDWORD(valuePtr) - 1) < 2 || HIDWORD(valuePtr) == 85)
    {
      goto LABEL_25;
    }
    BOOL v14 = v11 == 0;
    int v15 = 2;
    int v16 = 6;
LABEL_22:
    if (v14) {
      int v13 = v15;
    }
    else {
      int v13 = v16;
    }
LABEL_25:
    sub_22689F090(__p, "raMu");
    sub_226881624(a2, (uint64_t)__p, &v21);
    if (v19 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_2268814C8(a1, (uint64_t)&v21, v13, a4);
  }
LABEL_28:
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_226899D88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_226899DC8(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  memset(&v20, 0, sizeof(v20));
  unsigned int valuePtr = 0;
  unsigned __int16 v18 = 0;
  int v17 = 0;
  if (!CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr))
  {
    uint64_t v8 = 4294967293;
    goto LABEL_45;
  }
  unsigned int v7 = valuePtr;
  if (!valuePtr)
  {
    uint64_t v8 = 4294967284;
    goto LABEL_45;
  }
  if (sub_22687CBC8(a1, 1935819842))
  {
    sub_22689F090(__p, "raMd");
    sub_226881624(a2, (uint64_t)__p, &v20);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_226888224(a1, (uint64_t)&v20, &v18, a4);
    if (v8) {
      goto LABEL_45;
    }
    if (sub_2268A822C(v18))
    {
      uint64_t v8 = sub_22688819C(a1, (uint64_t)&v20, SHIWORD(v7), a4);
      if (v8) {
        goto LABEL_45;
      }
      v7 >>= 16;
    }
    else
    {
      if ((sub_2268A8254(v18) & 1) == 0)
      {
        LOWORD(v7) = v18;
        goto LABEL_19;
      }
      uint64_t v8 = sub_22688819C(a1, (uint64_t)&v20, v7, a4);
      if (v8) {
        goto LABEL_45;
      }
    }
  }
  else
  {
    sub_22689F090(__p, "raMd");
    sub_226881624(a2, (uint64_t)__p, &v20);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
    unsigned int v9 = HIWORD(v7);
    if (!HIWORD(v7)) {
      LOWORD(v9) = v7;
    }
    uint64_t v8 = sub_22688819C(a1, (uint64_t)&v20, v9, a4);
    if (v8) {
      goto LABEL_45;
    }
    LOWORD(v7) = valuePtr;
  }
  unsigned __int16 v18 = v7;
LABEL_19:
  if (!sub_2268A822C((unsigned __int16)v7))
  {
    sub_22689F090(__p, "raWC");
    sub_226881624(a2, (uint64_t)__p, &v20);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v13 = sub_2268809AC(a1, (uint64_t)&v20, (const __CFString *)*MEMORY[0x263EFFB38], a4);
    goto LABEL_33;
  }
  BOOL v10 = sub_22688B734(a1, @"ht40_5GHz");
  sub_22689F090(__p, "raWC");
  sub_226881624(a2, (uint64_t)__p, &v20);
  if (v16 < 0) {
    operator delete(__p[0]);
  }
  CFStringRef v11 = (const __CFString *)*MEMORY[0x263EFFB38];
  if (v10) {
    CFStringRef v12 = (const __CFString *)*MEMORY[0x263EFFB40];
  }
  else {
    CFStringRef v12 = (const __CFString *)*MEMORY[0x263EFFB38];
  }
  uint64_t v8 = sub_2268809AC(a1, (uint64_t)&v20, v12, a4);
  if (!v8)
  {
    if (sub_22687CBC8(a1, 1381123655))
    {
LABEL_34:
      sub_22689F090(__p, "raMu");
      sub_226881624(a2, (uint64_t)__p, &v20);
      if (v16 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v8 = sub_226888134(a1, (uint64_t)&v20, &v17, a4);
      if (!v8)
      {
        if (sub_226881550(a1, (uint64_t)&v20, v17, 1))
        {
          uint64_t v8 = 0;
        }
        else
        {
          uint64_t v8 = sub_22688B84C(a1, (uint64_t)&v20, &v17);
          if (!v8) {
            uint64_t v8 = sub_2268814C8(a1, (uint64_t)&v20, v17, a4);
          }
        }
      }
      goto LABEL_45;
    }
    sub_22689F090(__p, "raRo");
    sub_226881624(a2, (uint64_t)__p, &v20);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v13 = sub_2268809AC(a1, (uint64_t)&v20, v11, a4);
LABEL_33:
    uint64_t v8 = v13;
    if (v13) {
      goto LABEL_45;
    }
    goto LABEL_34;
  }
LABEL_45:
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689A158(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689A1BC(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  memset(&v36, 0, sizeof(v36));
  unsigned __int16 v35 = 0;
  if (!a3) {
    goto LABEL_35;
  }
  if (sub_22687CBC8(a1, 1935819842))
  {
    if (sub_2268801D8(a1, 0) == 2)
    {
      int v8 = 0;
      uint64_t v9 = 0;
      int v10 = 0;
      char v11 = 1;
      while (1)
      {
        char v12 = v11;
        MEMORY[0x22A65ABB0](&v36, "WiFi.radios.[*].");
        snprintf(__str, 0x10uLL, "%ld", v9);
        if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int64_t size = HIBYTE(v36.__r_.__value_.__r.__words[2]);
        }
        else {
          int64_t size = v36.__r_.__value_.__l.__size_;
        }
        if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          BOOL v14 = &v36;
        }
        else {
          BOOL v14 = (std::string *)v36.__r_.__value_.__r.__words[0];
        }
        int v15 = (char *)v14 + size;
        if (size >= 1)
        {
          char v16 = v14;
          do
          {
            int v17 = memchr(v16, 42, size);
            if (!v17) {
              break;
            }
            if (*v17 == 42) {
              goto LABEL_17;
            }
            char v16 = (std::string *)(v17 + 1);
            int64_t size = v15 - (unsigned char *)v16;
          }
          while (v15 - (unsigned char *)v16 > 0);
        }
        int v17 = v15;
LABEL_17:
        if (v17 == v15) {
          std::string::size_type v18 = -1;
        }
        else {
          std::string::size_type v18 = v17 - (unsigned char *)v14;
        }
        std::string::replace(&v36, v18, 1uLL, __str);
        sub_22689F090(__p, "raMd");
        sub_226881624((unsigned __int8 *)&v36, (uint64_t)__p, &v36);
        if (v33 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v19 = sub_226888224(a1, (uint64_t)&v36, &v35, a4);
        uint64_t v20 = v19;
        if (a4 == 1 && v19 == -5) {
          goto LABEL_48;
        }
        if (v19) {
          goto LABEL_48;
        }
        if (sub_2268A822C(v35))
        {
          int v10 = v35;
        }
        else if (sub_2268A8254(v35))
        {
          int v8 = v35;
        }
        else
        {
          if (sub_22687CBC8(a1, 825319779)) {
            int v10 = 10;
          }
          else {
            int v10 = 5;
          }
          int v8 = 6;
        }
        char v11 = 0;
        uint64_t v9 = 1;
        if ((v12 & 1) == 0)
        {
          int v21 = v8 + (v10 << 16);
          goto LABEL_42;
        }
      }
    }
LABEL_35:
    uint64_t v20 = 4294967292;
    goto LABEL_48;
  }
  sub_22689F090(__p, "raMd");
  sub_226881624((unsigned __int8 *)a2, (uint64_t)__p, &v36);
  if (v33 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v22 = sub_226888224(a1, (uint64_t)&v36, &v35, a4);
  uint64_t v20 = v22;
  if ((a4 != 1 || v22 != -5) && !v22)
  {
    int v21 = v35;
LABEL_42:
    int valuePtr = v21;
    CFAllocatorRef v23 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFNumberRef v24 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
    *a3 = v24;
    if (v24)
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v30 = a2;
      }
      else {
        uint64_t v30 = *(void *)a2;
      }
      uint64_t v20 = sub_226860774(v23, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v25, v26, v27, v28, v29, v30);
      CFRelease(*a3);
    }
    else
    {
      uint64_t v20 = 4294960568;
    }
  }
LABEL_48:
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v36.__r_.__value_.__l.__data_);
  }
  return v20;
}

void sub_22689A4C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689A50C(uint64_t a1, unsigned __int8 *a2, const __CFString *a3, uint64_t a4)
{
  memset(&v11, 0, sizeof(v11));
  sub_226880920(a2, 1937068114, &v11);
  std::string::append(&v11, ".");
  sub_22689F090(__p, "enabled");
  sub_226881624((unsigned __int8 *)&v11, (uint64_t)__p, &v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = sub_2268809AC(a1, (uint64_t)&v11, a3, a4);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_22689A5CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689A604(CFDictionaryRef *a1, unsigned __int8 *a2, CFMutableDictionaryRef *a3, uint64_t a4)
{
  memset(&v11, 0, sizeof(v11));
  if (a3)
  {
    sub_226880920(a2, 1937068114, &v11);
    std::string::append(&v11, ".");
    sub_22689F090(__p, "enabled");
    sub_226881624((unsigned __int8 *)&v11, (uint64_t)__p, &v11);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_226885770(a1, (uint64_t)&v11, a3, a4);
    if (v7 == -5)
    {
      uint64_t v7 = 0;
      *a3 = (CFMutableDictionaryRef)*MEMORY[0x263EFFB38];
    }
  }
  else
  {
    uint64_t v7 = 4294967292;
  }
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_22689A6EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689A724()
{
  return 0;
}

uint64_t sub_22689A72C(CFDictionaryRef *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  sub_226894368(__s, 0x11uLL, 0);
  sub_22689F090(&v17, __s);
  sub_226894368(__s, 0x11uLL, 1);
  sub_22689F090(&v16, __s);
  CFStringRef v14 = 0;
  CFStringRef v15 = 0;
  if (a3)
  {
    if (!sub_22687CBC8((uint64_t)a1, 1935819842) || sub_2268801D8((uint64_t)a1, 0) < 2)
    {
      char v10 = (void *)MEMORY[0x263EFFB38];
LABEL_16:
      uint64_t v8 = 0;
      *a3 = *v10;
      goto LABEL_18;
    }
    sub_22689F090(__p, "raNm");
    sub_226881624((unsigned __int8 *)&v17, (uint64_t)__p, &v17);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    sub_22689F090(__p, "raNm");
    sub_226881624((unsigned __int8 *)&v16, (uint64_t)__p, &v16);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_226885770(a1, (uint64_t)&v17, (CFMutableDictionaryRef *)&v15, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      uint64_t v8 = sub_226885770(a1, (uint64_t)&v16, (CFMutableDictionaryRef *)&v14, a4);
      if (!v8)
      {
        CFComparisonResult v9 = CFStringCompare(v15, v14, 0);
        char v10 = (void *)MEMORY[0x263EFFB40];
        if (v9 == kCFCompareEqualTo) {
          char v10 = (void *)MEMORY[0x263EFFB38];
        }
        goto LABEL_16;
      }
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
LABEL_18:
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689A908(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689A968(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3, uint64_t a4)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  memset(&v14, 0, sizeof(v14));
  if (!a3) {
    return 4294967292;
  }
  uint64_t v7 = sub_22688CEEC(a1, 0);
  sub_226894368(v15, 0x11uLL, v7);
  MEMORY[0x22A65ABB0](&v14, v15);
  sub_22689F090(__p, "raNm");
  sub_226881624((unsigned __int8 *)&v14, (uint64_t)__p, &v14);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  *(unsigned char *)(a1 + 386) = 1;
  unsigned int v8 = sub_226885770((CFDictionaryRef *)a1, (uint64_t)&v14, a3, a4);
  *(unsigned char *)(a1 + 386) = 0;
  if (v8 == -5 && a4 == 1) {
    uint64_t v10 = 4294967291;
  }
  else {
    uint64_t v10 = v8;
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_22689AA78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689AAB0(uint64_t a1, uint64_t a2, const __CFString *a3, uint64_t a4)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  memset(&v20, 0, sizeof(v20));
  int v19 = 0;
  CFStringRef v17 = 0;
  CFTypeRef cf = 0;
  std::string v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v7 = sub_226880258(a1, 0);
  sub_226894368(v21, 0x11uLL, v7);
  MEMORY[0x22A65ABB0](&v20, v21);
  sub_22689F090(__p, "raNm");
  sub_226881624((unsigned __int8 *)&v20, (uint64_t)__p, &v20);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v8 = sub_226885770((CFDictionaryRef *)a1, (uint64_t)&v20, (CFMutableDictionaryRef *)&v17, a4);
  if (!v8)
  {
    uint64_t v9 = sub_22688CEEC(a1, 0);
    sub_226894368(v21, 0x11uLL, v9);
    MEMORY[0x22A65ABB0](&v20, v21);
    sub_22689F090(__p, "raNm");
    sub_226881624((unsigned __int8 *)&v20, (uint64_t)__p, &v20);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = sub_226885770((CFDictionaryRef *)a1, (uint64_t)&v20, (CFMutableDictionaryRef *)&cf, a4);
    if (!v8)
    {
      if (!cf)
      {
        uint64_t v8 = 4294967291;
        goto LABEL_9;
      }
      CFRetain(cf);
      *(unsigned char *)(a1 + 386) = 1;
      if (!CFStringGetLength(a3)) {
        a3 = v17;
      }
      uint64_t v8 = sub_2268809AC(a1, (uint64_t)&v20, a3, a4);
      *(unsigned char *)(a1 + 386) = 0;
      if (!v8)
      {
        sub_22689F090(__p, "raWM");
        sub_226881624((unsigned __int8 *)&v20, (uint64_t)__p, &v20);
        if (v13 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v8 = sub_226888134(a1, (uint64_t)&v20, &v19, a4);
        if (!v8 && a3 && (v19 - 3) <= 5)
        {
          if (CFEqual(a3, (CFStringRef)cf)) {
            goto LABEL_35;
          }
          sub_22689F090(__p, "raCr");
          sub_226881624((unsigned __int8 *)&v20, (uint64_t)__p, &v20);
          if (v13 < 0) {
            operator delete(__p[0]);
          }
          *(unsigned char *)(a1 + 386) = 1;
          uint64_t v8 = sub_2268884D0(a1, (uint64_t)&v20, (uint64_t)&v14, a4);
          *(unsigned char *)(a1 + 386) = 0;
          if (v8) {
            goto LABEL_7;
          }
          uint64_t v11 = HIBYTE(v16);
          if (v16 < 0) {
            uint64_t v11 = v15;
          }
          if (v11)
          {
            *(unsigned char *)(a1 + 386) = 1;
            sub_22689F090(__p, "");
            uint64_t v8 = sub_226888444(a1, (uint64_t)&v20, (uint64_t)__p, a4);
            if (v13 < 0) {
              operator delete(__p[0]);
            }
            *(unsigned char *)(a1 + 386) = 0;
            if (!v8)
            {
              sub_226880920((unsigned __int8 *)&v20, 1651725131, &v20);
              uint64_t v8 = sub_226888444(a1, (uint64_t)&v20, (uint64_t)&v14, a4);
            }
          }
          else
          {
LABEL_35:
            uint64_t v8 = 0;
          }
        }
      }
    }
  }
LABEL_7:
  if (cf) {
    CFRelease(cf);
  }
LABEL_9:
  if (SHIBYTE(v16) < 0) {
    operator delete(v14);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689ADF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689AE5C()
{
  return 0;
}

uint64_t sub_22689AE64(CFDictionaryRef *a1, uint64_t a2, CFNumberRef *a3, uint64_t a4)
{
  CFTypeRef cf = 0;
  if (!a3) {
    return 4294967292;
  }
  uint64_t v7 = sub_226880258((uint64_t)a1, 0);
  uint64_t result = sub_22689AF68(a1, "raMA", v7, (CFMutableDictionaryRef *)&cf, a4);
  if ((a4 != 1 || result != -5) && !result)
  {
    if (cf
      && (CFTypeID v9 = CFGetTypeID(cf), v9 == CFStringGetTypeID())
      && CFStringGetLength((CFStringRef)cf)
      && CFStringCompare((CFStringRef)cf, @"00:00:00:00:00:00", 0))
    {
      CFTypeRef v10 = cf;
      *a3 = (CFNumberRef)cf;
    }
    else
    {
      CFTypeRef v10 = *a3;
    }
    if (v10)
    {
      return 0;
    }
    else
    {
      LODWORD(result) = sub_22687D4B0(a1, 1918979393, a3, a4);
      if (result == -5 && a4 == 1) {
        return 4294967291;
      }
      else {
        return result;
      }
    }
  }
  return result;
}

uint64_t sub_22689AF68(CFDictionaryRef *a1, char *a2, uint64_t a3, CFMutableDictionaryRef *a4, uint64_t a5)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  memset(&v13, 0, sizeof(v13));
  if (a4)
  {
    sub_226894368(v14, 0x11uLL, a3);
    MEMORY[0x22A65ABB0](&v13, v14);
    sub_22689F090(__p, a2);
    sub_226881624((unsigned __int8 *)&v13, (uint64_t)__p, &v13);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v9 = sub_226885770(a1, (uint64_t)&v13, a4, a5);
    if (v9 == -5)
    {
      uint64_t v9 = 0;
      *a4 = (CFMutableDictionaryRef)&stru_26DA6BE88;
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_22689B06C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689B0A4()
{
  return 0;
}

uint64_t sub_22689B0AC(CFDictionaryRef *a1, uint64_t a2, CFMutableDictionaryRef *a3, uint64_t a4)
{
  if (!a3) {
    return 4294967292;
  }
  uint64_t v7 = sub_22688CEEC((uint64_t)a1, 0);
  LODWORD(result) = sub_22689AF68(a1, "raMA", v7, a3, a4);
  if (result == -5 && a4 == 1) {
    return 4294967291;
  }
  else {
    return result;
  }
}

uint64_t sub_22689B120()
{
  return 0;
}

uint64_t sub_22689B128(CFDictionaryRef *a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  CFStringRef v24 = 0;
  CFStringRef v25 = 0;
  uint64_t v22 = 0;
  CFAllocatorRef v23 = 0;
  if (!a3)
  {
    uint64_t v10 = 4294967292;
LABEL_15:
    *a3 = &stru_26DA6BE88;
    return v10;
  }
  uint64_t v8 = sub_22688CEEC((uint64_t)a1, 0);
  uint64_t v9 = sub_22689AF68(a1, "raMA", v8, (CFMutableDictionaryRef *)&v25, a4);
  uint64_t v10 = v9;
  if ((a4 != 1 || v9 != -5) && !v9)
  {
    uint64_t v11 = sub_226880258((uint64_t)a1, 0);
    uint64_t v12 = sub_22689AF68(a1, "raMA", v11, (CFMutableDictionaryRef *)&v24, a4);
    uint64_t v10 = v12;
    if ((a4 != 1 || v12 != -5) && !v12)
    {
      if (v24)
      {
        if (v25)
        {
          uint64_t v10 = sub_226861A84(v24, (char **)&v23);
          if (!v10)
          {
            if (!v23)
            {
              uint64_t v10 = 4294960568;
              goto LABEL_10;
            }
            uint64_t v10 = sub_226861A84(v25, (char **)&v22);
            if (!v10)
            {
              if (v22)
              {
                CFAllocatorRef v14 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
                CFStringRef v15 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, @"%s / %s", v22, v23);
                *a3 = v15;
                if (v15)
                {
                  if (*(char *)(a2 + 23) >= 0) {
                    uint64_t v21 = a2;
                  }
                  else {
                    uint64_t v21 = *(void *)a2;
                  }
                  uint64_t v10 = sub_226860774(v14, a1[6], (uint64_t)"%ks=%O", v16, v17, v18, v19, v20, v21);
                  CFRelease(*a3);
                }
                else
                {
                  uint64_t v10 = 4294960579;
                }
              }
              else
              {
                uint64_t v10 = 4294960568;
              }
            }
          }
        }
      }
    }
  }
  if (v23) {
    free(v23);
  }
LABEL_10:
  if (v22) {
    free(v22);
  }
  if (v10) {
    goto LABEL_15;
  }
  return v10;
}

uint64_t sub_22689B2EC(CFDictionaryRef *a1, uint64_t a2, CFMutableDictionaryRef *a3, uint64_t a4)
{
  sub_22689F090(&v11, "WiFi.");
  if (a3)
  {
    if (sub_22687CBC8((uint64_t)a1, 2003390540) && sub_22687CBC8((uint64_t)a1, 1198748750))
    {
      sub_22689F090(__p, "guestnet_intrabss");
      sub_226881624((unsigned __int8 *)&v11, (uint64_t)__p, &v11);
      if (v10 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v7 = sub_226885770(a1, (uint64_t)&v11, a3, a4);
      if (v7 == -5)
      {
        uint64_t v7 = 0;
        *a3 = (CFMutableDictionaryRef)*MEMORY[0x263EFFB38];
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
  else
  {
    uint64_t v7 = 4294967292;
  }
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_22689B3E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689B420(uint64_t a1, uint64_t a2, const __CFString *a3, uint64_t a4)
{
  sub_22689F090(&v11, "WiFi.");
  if (sub_22687CBC8(a1, 2003390540) && sub_22687CBC8(a1, 1198748750))
  {
    sub_22689F090(__p, "guestnet_intrabss");
    sub_226881624((unsigned __int8 *)&v11, (uint64_t)__p, &v11);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_2268809AC(a1, (uint64_t)&v11, a3, a4);
  }
  else
  {
    uint64_t v7 = 0;
  }
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_22689B4F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689B52C(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  memset(&__str, 0, sizeof(__str));
  int valuePtr = 0;
  if (a3)
  {
    if (!sub_22687CB2C(a1, 1937326413, (uint64_t)&__str, a4))
    {
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int64_t size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      }
      else {
        int64_t size = __str.__r_.__value_.__l.__size_;
      }
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_str = &__str;
      }
      else {
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      uint64_t v9 = (char *)p_str + size;
      if (size >= 11)
      {
        int64_t v10 = size;
        std::string v11 = p_str;
        while (1)
        {
          uint64_t v12 = (char *)memchr(v11, 84, v10 - 10);
          if (!v12) {
            goto LABEL_22;
          }
          if (*(void *)v12 == 0x73706143656D6954 && *(void *)(v12 + 3) == 0x656C757370614365) {
            break;
          }
          std::string v11 = (std::string *)(v12 + 1);
          int64_t v10 = v9 - (char *)v11;
          if (v9 - (char *)v11 < 11) {
            goto LABEL_22;
          }
        }
        if (v12 != v9 && v12 - (char *)p_str != -1)
        {
          int valuePtr = 6;
          goto LABEL_45;
        }
      }
LABEL_22:
      if (size >= 7)
      {
        CFStringRef v15 = p_str;
        while (1)
        {
          uint64_t v16 = (char *)memchr(v15, 65, size - 6);
          if (!v16) {
            goto LABEL_43;
          }
          if (*(_DWORD *)v16 == 1349675329 && *(_DWORD *)(v16 + 3) == 1953656656) {
            break;
          }
          CFStringRef v15 = (std::string *)(v16 + 1);
          int64_t size = v9 - (char *)v15;
          if (v9 - (char *)v15 < 7) {
            goto LABEL_43;
          }
        }
        if (v16 == v9) {
          goto LABEL_43;
        }
        int64_t v18 = v16 - (char *)p_str;
        if (v18 == -1) {
          goto LABEL_43;
        }
        std::string::size_type v19 = std::string::find(&__str, 44, 0);
        std::string::basic_string(&v32, &__str, v18 + 7, v19 - (v18 + 7), (std::allocator<char> *)&v35);
        if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
        {
          std::string::size_type v20 = v32.__r_.__value_.__l.__size_;
          if (!v32.__r_.__value_.__l.__size_)
          {
            int v22 = 0;
LABEL_41:
            operator delete(v32.__r_.__value_.__l.__data_);
LABEL_42:
            if (v22) {
              goto LABEL_45;
            }
            goto LABEL_43;
          }
          uint64_t v21 = (std::string *)v32.__r_.__value_.__r.__words[0];
        }
        else
        {
          std::string::size_type v20 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
          if (!*((unsigned char *)&v32.__r_.__value_.__s + 23)) {
            goto LABEL_43;
          }
          uint64_t v21 = &v32;
        }
        int v22 = sub_22686F724((char *)v21, v20, 10);
        int valuePtr = v22;
        if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_42;
        }
        goto LABEL_41;
      }
    }
LABEL_43:
    LODWORD(v32.__r_.__value_.__l.__data_) = 0;
    uint64_t v14 = sub_22687AB24(a1, 1937326416, &v32, 0);
    if (!v14)
    {
      int valuePtr = sub_22683C4F8(LODWORD(v32.__r_.__value_.__l.__data_));
LABEL_45:
      CFAllocatorRef v23 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFNumberRef v24 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
      *a3 = v24;
      if (v24)
      {
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v30 = a2;
        }
        else {
          uint64_t v30 = *(void *)a2;
        }
        uint64_t v14 = sub_226860774(v23, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v25, v26, v27, v28, v29, v30);
        CFRelease(*a3);
      }
      else
      {
        uint64_t v14 = 4294960568;
      }
    }
  }
  else
  {
    uint64_t v14 = 4294967292;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return v14;
}

void sub_22689B7CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689B808()
{
  return 0;
}

uint64_t sub_22689B810(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (sub_22687CBC8(a1, 2003390540))
  {
    sub_226880920(a2, 1381328492, &__p);
    uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    if (!v8)
    {
      if (v11) {
        uint64_t v9 = (void *)MEMORY[0x263EFFB40];
      }
      else {
        uint64_t v9 = (void *)MEMORY[0x263EFFB38];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689B8D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689B8F4(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  unsigned int v10 = 0;
  if (sub_22687CBC8(a1, 2003390540))
  {
    sub_226880920(a2, 1381328492, &__p);
    uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v10, a4);
    if (!v8)
    {
      unsigned int v10 = v10 & 0xFFFFFFFE | (*MEMORY[0x263EFFB40] == a3);
      uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v10, a4);
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689B9D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689B9EC(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (sub_22687CBC8(a1, 2003390540))
  {
    sub_226880920(a2, 1381328492, &__p);
    uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    if (!v8)
    {
      if ((v11 & 2) != 0) {
        uint64_t v9 = (void *)MEMORY[0x263EFFB40];
      }
      else {
        uint64_t v9 = (void *)MEMORY[0x263EFFB38];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689BAB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689BAD0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  unsigned int v10 = 0;
  if (sub_22687CBC8(a1, 2003390540))
  {
    sub_226880920(a2, 1381328492, &__p);
    uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v10, a4);
    if (!v8)
    {
      unsigned int v10 = v10 & 0xFFFFFFFD | (2 * (*MEMORY[0x263EFFB40] == a3));
      uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v10, a4);
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689BBA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689BBC4(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (sub_22687CBC8(a1, 2003390540))
  {
    sub_226880920(a2, 1381328492, &__p);
    uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    if (!v8)
    {
      if ((v11 & 4) != 0) {
        uint64_t v9 = (void *)MEMORY[0x263EFFB40];
      }
      else {
        uint64_t v9 = (void *)MEMORY[0x263EFFB38];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689BC8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689BCA8(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  unsigned int v10 = 0;
  if (sub_22687CBC8(a1, 2003390540))
  {
    sub_226880920(a2, 1381328492, &__p);
    uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v10, a4);
    if (!v8)
    {
      unsigned int v10 = v10 & 0xFFFFFFFB | (4 * (*MEMORY[0x263EFFB40] == a3));
      uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v10, a4);
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689BD80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689BD9C(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (a3)
  {
    sub_226880920(a2, 1163543366, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if (v11) {
        uint64_t v9 = (void *)MEMORY[0x263EFFB38];
      }
      else {
        uint64_t v9 = (void *)MEMORY[0x263EFFB40];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689BE64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689BE80(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  unsigned int v10 = 0;
  sub_226880920(a2, 1163543366, &__p);
  uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v10, a4);
  if (!v8)
  {
    unsigned int v10 = v10 & 0xFFFFFFFE | (*MEMORY[0x263EFFB40] != a3);
    sub_226880920(a2, 1163543366, &__p);
    uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v10, a4);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689BF64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689BF80(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  int v11 = 0;
  if (a3)
  {
    sub_226880920(a2, 1163543366, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, &v11, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if ((v11 & 2) != 0) {
        uint64_t v9 = (void *)MEMORY[0x263EFFB40];
      }
      else {
        uint64_t v9 = (void *)MEMORY[0x263EFFB38];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689C048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689C064(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  unsigned int v10 = 0;
  sub_226880920(a2, 1163543366, &__p);
  uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v10, a4);
  if (!v8)
  {
    unsigned int v10 = v10 & 0xFFFFFFFD | (2 * (*MEMORY[0x263EFFB40] == a3));
    sub_226880920(a2, 1163543366, &__p);
    uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v10, a4);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689C144(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689C160(CFDictionaryRef *a1, unsigned __int8 *a2, CFMutableDictionaryRef *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  sub_226880920(a2, 1229213293, &__p);
  uint64_t v7 = sub_226885770(a1, (uint64_t)&__p, a3, a4);
  if (v7 == -5 || !*a3 || !CFStringGetLength((CFStringRef)*a3))
  {
    CFStringRef v10 = 0;
    uint64_t v7 = sub_22687D4B0(a1, 1298223988, (CFNumberRef *)&v10, 0);
    if (!v7)
    {
      if (v10)
      {
        sub_2268A215C(v10, 0, 0, (uint64_t)a3);
        if (v8) {
          uint64_t v7 = 4294967291;
        }
        else {
          uint64_t v7 = 0;
        }
      }
      else
      {
        uint64_t v7 = 4294967291;
      }
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_22689C248(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689C268(uint64_t a1, unsigned __int8 *a2, const __CFString *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  sub_226880920(a2, 1229213293, &__p);
  uint64_t v7 = sub_2268809AC(a1, (uint64_t)&__p, a3, a4);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_22689C2E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689C304(CFDictionaryRef *a1, uint64_t a2, CFTypeRef *a3)
{
  CFStringRef v24 = 0;
  int v23 = 0;
  int v21 = 0;
  int v22 = 0;
  uint64_t v6 = sub_22687D4B0(a1, 1298223988, (CFNumberRef *)&v24, 0);
  if (!v6)
  {
    if (v24)
    {
      sub_2268A1C64(v24, 0, (uint64_t)&v23, (uint64_t)&v22, (uint64_t)&v21);
      uint64_t v6 = v13;
      if (!v13)
      {
        CFAllocatorRef v14 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        uint64_t v6 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], a3, (uint64_t)"{%kO=%i%kO=%i%kO=%i}", v8, v9, v10, v11, v12, @"mbsize");
        if (!v6)
        {
          if (*a3)
          {
            if (*(char *)(a2 + 23) >= 0) {
              uint64_t v20 = a2;
            }
            else {
              uint64_t v20 = *(void *)a2;
            }
            uint64_t v6 = sub_226860774(v14, a1[6], (uint64_t)"%ks=%O", v15, v16, v17, v18, v19, v20);
            CFRelease(*a3);
          }
          else
          {
            return 4294960568;
          }
        }
      }
    }
    else
    {
      return 4294967291;
    }
  }
  return v6;
}

uint64_t sub_22689C438()
{
  return 0;
}

uint64_t sub_22689C440(CFDictionaryRef *a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  CFDictionaryRef theDict = 0;
  *a3 = 0;
  sub_226880920(a2, 1668050755, &__p);
  uint64_t v7 = sub_226885770(a1, (uint64_t)&__p, &theDict, a4);
  if (v7)
  {
    if (*a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  CFArrayRef Value = CFDictionaryGetValue(theDict, @"enabled");
  *a3 = Value;
  if (!Value) {
LABEL_3:
  }
    *a3 = *MEMORY[0x263EFFB40];
LABEL_4:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_22689C500(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689C51C(CFDictionaryRef *a1, unsigned __int8 *a2, const void *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  CFMutableDictionaryRef theDict = 0;
  sub_226880920(a2, 1668050755, &__p);
  uint64_t v7 = sub_226885770(a1, (uint64_t)&__p, &theDict, a4);
  if (!v7)
  {
    CFDictionarySetValue(theDict, @"enabled", a3);
    uint64_t v7 = sub_2268809AC((uint64_t)a1, (uint64_t)&__p, (const __CFString *)theDict, a4);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_22689C5D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689C5EC(CFDictionaryRef *a1, uint64_t a2, __CFArray **a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  *a3 = 0;
  CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  if (sub_22687CBC8((uint64_t)a1, 1766018116)
    && (CFDictionaryRef theDict = 0,
        sub_226880920((unsigned __int8 *)a2, 1766026340, &__p),
        !sub_226885770(a1, (uint64_t)&__p, &theDict, a4))
    && (CFArrayRef v18 = (const __CFArray *)CFDictionaryGetValue(theDict, @"users"), (v19 = v18) != 0)
    && (CFIndex Count = CFArrayGetCount(v18), Count >= 1))
  {
    CFIndex v21 = 0;
    while (1)
    {
      CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(v19, v21);
      if (!ValueAtIndex) {
        break;
      }
      int v23 = CFDictionaryCreateMutable(v8, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      CFArrayRef Value = CFDictionaryGetValue(ValueAtIndex, @"appleID");
      if (!Value) {
        break;
      }
      CFDictionarySetValue(v23, @"appleID", Value);
      uint64_t v25 = CFDictionaryGetValue(ValueAtIndex, @"ncBag");
      if (v25) {
        CFDictionarySetValue(v23, @"ncBag", v25);
      }
      uint64_t v26 = CFDictionaryGetValue(ValueAtIndex, @"accountStatus");
      if (v26)
      {
        CFDictionarySetValue(v23, @"status", v26);
      }
      else
      {
        uint64_t v16 = sub_226860774(v8, v23, (uint64_t)"%kO=%i", v27, v28, v29, v30, v31, @"status");
        if (v16) {
          goto LABEL_7;
        }
      }
      CFArrayAppendValue(Mutable, v23);
      CFRelease(v23);
      if (Count == ++v21) {
        goto LABEL_3;
      }
    }
    uint64_t v16 = 0;
  }
  else
  {
LABEL_3:
    *a3 = Mutable;
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v15 = a2;
    }
    else {
      uint64_t v15 = *(void *)a2;
    }
    uint64_t v16 = sub_226860774(v8, a1[6], (uint64_t)"%ks=%O", v10, v11, v12, v13, v14, v15);
  }
LABEL_7:
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v16;
}

void sub_22689C838(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689C864(CFDictionaryRef *a1, unsigned __int8 *a2, const __CFArray *a3, unsigned int a4)
{
  memset(&__p, 0, sizeof(__p));
  CFDictionaryRef theDict = 0;
  if (!a3 || !sub_22687CBC8((uint64_t)a1, 1766018116))
  {
    uint64_t v15 = 0;
    goto LABEL_34;
  }
  CFAllocatorRef allocator = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef theArray = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  CFIndex Count = CFArrayGetCount(a3);
  if (Count < 1)
  {
LABEL_10:
    sub_226880920(a2, 1766026340, &__p);
    uint64_t v15 = sub_226885770(a1, (uint64_t)&__p, &theDict, a4);
    if (v15) {
      goto LABEL_32;
    }
    CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(theDict, @"users");
    CFStringRef v17 = (const __CFString *)Value;
    if (Value) {
      CFIndex v18 = CFArrayGetCount(Value);
    }
    else {
      CFIndex v18 = 0;
    }
    if (CFArrayGetCount(theArray) == v18)
    {
      CFTypeRef cf1 = 0;
      CFStringRef theString1 = 0;
      CFTypeRef cf2 = 0;
      CFStringRef theString2 = 0;
      if (v18 >= 1)
      {
        uint64_t v24 = 0;
        do
        {
          sub_22686088C(v17, (uint64_t)&theString1, (UInt8 *)"[*].%kO", v19, v20, v21, v22, v23, v24);
          uint64_t v15 = v30;
          if (v30) {
            goto LABEL_32;
          }
          sub_22686088C((const __CFString *)theArray, (uint64_t)&theString2, (UInt8 *)"[*].%kO", v25, v26, v27, v28, v29, v24);
          uint64_t v15 = v31;
          if (v31) {
            goto LABEL_32;
          }
          if (!theString1 || CFStringCompare(theString1, theString2, 0)) {
            goto LABEL_29;
          }
          sub_22686088C(v17, (uint64_t)&cf1, (UInt8 *)"[*].%kO", v32, v33, v34, v35, v36, v24);
          uint64_t v15 = v42;
          if (v42) {
            goto LABEL_32;
          }
          sub_22686088C((const __CFString *)theArray, (uint64_t)&cf2, (UInt8 *)"[*].%kO", v37, v38, v39, v40, v41, v24);
          uint64_t v15 = v43;
          if (v43) {
            goto LABEL_32;
          }
          if (!cf1 || !CFEqual(cf1, cf2)) {
            goto LABEL_29;
          }
        }
        while (v18 != ++v24);
      }
    }
    else
    {
LABEL_29:
      CFPropertyListRef DeepCopy = (__CFDictionary *)CFPropertyListCreateDeepCopy(allocator, theDict, 2uLL);
      CFStringRef v45 = (const __CFString *)DeepCopy;
      if (DeepCopy)
      {
        CFDictionarySetValue(DeepCopy, @"users", theArray);
        uint64_t v15 = sub_2268809AC((uint64_t)a1, (uint64_t)&__p, v45, a4);
        CFRelease(v45);
        goto LABEL_32;
      }
    }
  }
  else
  {
    CFIndex v7 = 0;
    CFAllocatorRef v8 = (const CFDictionaryKeyCallBacks *)MEMORY[0x263EFFF88];
    uint64_t v9 = (const CFDictionaryValueCallBacks *)MEMORY[0x263EFFF90];
    while (1)
    {
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(allocator, 0, v8, v9);
      if (!Mutable) {
        break;
      }
      CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(a3, v7);
      CFDictionaryRef v12 = ValueAtIndex;
      if (!ValueAtIndex)
      {
        CFRelease(Mutable);
        break;
      }
      uint64_t v13 = CFDictionaryGetValue(ValueAtIndex, @"appleID");
      if (!v13) {
        break;
      }
      CFDictionarySetValue(Mutable, @"appleID", v13);
      uint64_t v14 = CFDictionaryGetValue(v12, @"ncBag");
      if (!v14) {
        break;
      }
      CFDictionarySetValue(Mutable, @"ncBag", v14);
      CFArrayAppendValue(theArray, Mutable);
      CFRelease(Mutable);
      if (Count == ++v7) {
        goto LABEL_10;
      }
    }
  }
  uint64_t v15 = 0;
LABEL_32:
  if (theArray) {
    CFRelease(theArray);
  }
LABEL_34:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v15;
}

void sub_22689CB90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689CBBC(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  int v24 = 0;
  BOOL v23 = 0;
  int valuePtr = 0;
  memset(&__p, 0, sizeof(__p));
  if (a3)
  {
    *a3 = 0;
    sub_226880920((unsigned __int8 *)a2, 912483943, &__p);
    uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &v24, a4);
    uint64_t v9 = v8;
    if ((a4 != 1 || v8 != -5) && !v8)
    {
      sub_226880920((unsigned __int8 *)a2, 912356724, &__p);
      uint64_t v10 = sub_226888348(a1, (uint64_t)&__p, &v23, 0);
      uint64_t v9 = v10;
      if ((a4 != 1 || v10 != -5) && !v10)
      {
        switch(v24)
        {
          case 0:
            int valuePtr = 0;
            break;
          case 1:
          case 3:
          case 5:
            if (v23) {
              int v11 = 1;
            }
            else {
              int v11 = 2;
            }
            int valuePtr = v11;
            break;
          default:
            break;
        }
        CFAllocatorRef v13 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        CFNumberRef v14 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
        *a3 = v14;
        if (v14)
        {
          if (*(char *)(a2 + 23) >= 0) {
            uint64_t v20 = a2;
          }
          else {
            uint64_t v20 = *(void *)a2;
          }
          uint64_t v9 = sub_226860774(v13, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v15, v16, v17, v18, v19, v20);
          CFRelease(*a3);
        }
        else
        {
          uint64_t v9 = 4294960568;
        }
      }
    }
  }
  else
  {
    uint64_t v9 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_22689CD60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689CD94(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  int valuePtr = 0;
  int v14 = 0;
  memset(&__p, 0, sizeof(__p));
  if (!number) {
    goto LABEL_19;
  }
  if (!CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr))
  {
    uint64_t v8 = 4294967293;
    goto LABEL_20;
  }
  sub_226880920(a2, 912356724, &__p);
  BOOL v15 = 0;
  uint64_t v7 = sub_226888348(a1, (uint64_t)&__p, &v15, a4);
  uint64_t v8 = v7;
  if (a4 == 1 && v7 == -5) {
    goto LABEL_20;
  }
  if (v7) {
    goto LABEL_20;
  }
  sub_226880920(a2, 912483943, &__p);
  uint64_t v9 = sub_226888134(a1, (uint64_t)&__p, &v14, a4);
  uint64_t v8 = v9;
  if (a4 == 1 && v9 == -5) {
    goto LABEL_20;
  }
  if (v9) {
    goto LABEL_20;
  }
  if ((valuePtr - 1) < 2)
  {
    BOOL v15 = valuePtr == 1;
    if (!v14) {
      int v14 = 1;
    }
    goto LABEL_15;
  }
  if (valuePtr)
  {
LABEL_19:
    uint64_t v8 = 4294967292;
    goto LABEL_20;
  }
  int v14 = 0;
LABEL_15:
  sub_226880920(a2, 912356724, &__p);
  uint64_t v10 = (const __CFString **)MEMORY[0x263EFFB40];
  if (!v15) {
    uint64_t v10 = (const __CFString **)MEMORY[0x263EFFB38];
  }
  uint64_t v8 = sub_2268809AC(a1, (uint64_t)&__p, *v10, a4);
  if (!v8)
  {
    sub_226880920(a2, 912483943, &__p);
    uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v14, a4);
  }
LABEL_20:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689CF4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689CF68(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  uint64_t valuePtr = 0;
  memset(&__p, 0, sizeof(__p));
  if (a3)
  {
    *a3 = 0;
    sub_226880920((unsigned __int8 *)a2, 912483943, &__p);
    uint64_t v8 = sub_226888134(a1, (uint64_t)&__p, &valuePtr, a4);
    uint64_t v9 = v8;
    if (a4 == 1 && v8 == -5 || v8) {
      goto LABEL_8;
    }
    if (valuePtr == 3)
    {
      int v10 = 1;
    }
    else
    {
      if (!sub_22688E4B8(a1))
      {
        HIDWORD(valuePtr) = 0;
LABEL_15:
        CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        CFNumberRef v13 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, (char *)&valuePtr + 4);
        *a3 = v13;
        if (v13)
        {
          if (*(char *)(a2 + 23) >= 0) {
            uint64_t v19 = a2;
          }
          else {
            uint64_t v19 = *(void *)a2;
          }
          uint64_t v9 = sub_226860774(v12, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v14, v15, v16, v17, v18, v19);
          CFRelease(*a3);
        }
        else
        {
          uint64_t v9 = 4294960568;
        }
        goto LABEL_8;
      }
      int v10 = 2;
    }
    HIDWORD(valuePtr) = v10;
    goto LABEL_15;
  }
  uint64_t v9 = 4294967292;
LABEL_8:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_22689D0A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689D0C4(uint64_t a1, unsigned __int8 *a2, CFNumberRef number, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  if (!number) {
    return 4294967292;
  }
  unsigned int valuePtr = 0;
  if (!CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr)) {
    return 4294967293;
  }
  if (valuePtr > 2) {
    return 4294967292;
  }
  int v7 = dword_226913160[valuePtr];
  sub_226880920(a2, 912483943, &__p);
  uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v7, a4);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689D18C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689D1A8(CFDictionaryRef *a1, uint64_t a2, CFMutableArrayRef *a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  if (a3)
  {
    CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
    *a3 = Mutable;
    if (Mutable)
    {
      if (sub_22687CBC8((uint64_t)a1, 1181898604)
        && (CFDictionaryRef theDict = 0,
            sub_226880920((unsigned __int8 *)a2, 1718186597, &__p),
            !sub_226885770(a1, (uint64_t)&__p, &theDict, a4))
        && theDict
        && (CFArrayRef v10 = (const __CFArray *)CFDictionaryGetValue(theDict, @"entries"), (v11 = v10) != 0)
        && (CFIndex v12 = CFArrayGetCount(v10), v41 = 0, v12 >= 1))
      {
        CFIndex v13 = 0;
        uint64_t v14 = (const void *)*MEMORY[0x263EFFB38];
        while (1)
        {
          CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(v11, v13);
          CFStringRef v21 = ValueAtIndex;
          if (!ValueAtIndex) {
            break;
          }
          sub_22686088C(ValueAtIndex, (uint64_t)&v41, (UInt8 *)"%kO:BOOL", v16, v17, v18, v19, v20, @"entryEnabled");
          if (v22 || v41)
          {
            CFPropertyListRef DeepCopy = (__CFDictionary *)CFPropertyListCreateDeepCopy(v8, v21, 2uLL);
            int v24 = DeepCopy;
            if (!DeepCopy) {
              goto LABEL_29;
            }
            CFDictionarySetValue(DeepCopy, @"firewallEntryIsIPv6", v14);
            CFArrayAppendValue(*a3, v24);
            CFRelease(v24);
          }
          if (v12 == ++v13) {
            goto LABEL_15;
          }
        }
      }
      else
      {
LABEL_15:
        if (!sub_22687CBC8((uint64_t)a1, 1768961606)
          || (CFDictionaryRef theDict = 0,
              sub_226880920((unsigned __int8 *)a2, 912684908, &__p),
              sub_226885770(a1, (uint64_t)&__p, &theDict, a4))
          || !theDict
          || (Value = (const __CFArray *)CFDictionaryGetValue(theDict, @"entries"), (CFArrayRef v31 = Value) == 0)
          || (CFIndex Count = CFArrayGetCount(Value), Count < 1))
        {
LABEL_24:
          if (*(char *)(a2 + 23) >= 0) {
            uint64_t v38 = a2;
          }
          else {
            uint64_t v38 = *(void *)a2;
          }
          uint64_t v39 = sub_226860774(v8, a1[6], (uint64_t)"%ks=%O", v25, v26, v27, v28, v29, v38);
          CFRelease(*a3);
          goto LABEL_30;
        }
        CFIndex v33 = 0;
        uint64_t v34 = (const void *)*MEMORY[0x263EFFB40];
        while (1)
        {
          uint64_t v35 = CFArrayGetValueAtIndex(v31, v33);
          if (!v35) {
            break;
          }
          uint64_t v36 = (__CFDictionary *)CFPropertyListCreateDeepCopy(v8, v35, 2uLL);
          uint64_t v37 = v36;
          if (!v36) {
            goto LABEL_29;
          }
          CFDictionarySetValue(v36, @"firewallEntryIsIPv6", v34);
          CFArrayAppendValue(*a3, v37);
          CFRelease(v37);
          if (Count == ++v33) {
            goto LABEL_24;
          }
        }
      }
      uint64_t v39 = 4294967291;
    }
    else
    {
LABEL_29:
      uint64_t v39 = 4294967293;
    }
  }
  else
  {
    uint64_t v39 = 4294967292;
  }
LABEL_30:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v39;
}

void sub_22689D48C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689D4C8(CFDictionaryRef *a1, unsigned __int8 *a2, CFTypeRef cf, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  char v43 = 0;
  CFDictionaryRef v41 = 0;
  CFDictionaryRef theDict = 0;
  if (!cf || (CFTypeID v8 = CFGetTypeID(cf), v8 != CFArrayGetTypeID()))
  {
    uint64_t v10 = 4294967292;
    goto LABEL_58;
  }
  CFIndex Count = CFArrayGetCount((CFArrayRef)cf);
  if (sub_22687CBC8((uint64_t)a1, 1181898604))
  {
    sub_226880920(a2, 1718186597, &__p);
    uint64_t v10 = sub_226885770(a1, (uint64_t)&__p, &theDict, a4);
    if (v10)
    {
      CFArrayRef Value = 0;
    }
    else
    {
      CFArrayRef Value = CFDictionaryGetValue(theDict, @"entries");
      if (!Value)
      {
        uint64_t v10 = 4294967291;
        goto LABEL_58;
      }
    }
    CFMutableArrayRef theArray = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  }
  else
  {
    CFArrayRef Value = 0;
    CFMutableArrayRef theArray = 0;
    uint64_t v10 = 0;
  }
  if (sub_22687CBC8((uint64_t)a1, 1768961606))
  {
    sub_226880920(a2, 912684908, &__p);
    uint64_t v10 = sub_226885770(a1, (uint64_t)&__p, &v41, a4);
    if (v10)
    {
      CFIndex v12 = 0;
    }
    else
    {
      CFIndex v12 = CFDictionaryGetValue(v41, @"entries");
      if (!v12)
      {
        CFMutableArrayRef Mutable = 0;
LABEL_53:
        uint64_t v10 = 4294967291;
        goto LABEL_54;
      }
    }
    CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  }
  else
  {
    CFIndex v12 = 0;
    CFMutableArrayRef Mutable = 0;
  }
  if (Count >= 1)
  {
    uint64_t v37 = Value;
    uint64_t v38 = a2;
    uint64_t v39 = a1;
    CFIndex v14 = 0;
    CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    while (1)
    {
      CFStringRef ValueAtIndex = CFArrayGetValueAtIndex((CFArrayRef)cf, v14);
      if (!ValueAtIndex) {
        goto LABEL_53;
      }
      CFStringRef DeepCopy = (const __CFString *)CFPropertyListCreateDeepCopy(v15, ValueAtIndex, 2uLL);
      BOOL v23 = (__CFDictionary *)DeepCopy;
      if (!DeepCopy)
      {
        uint64_t v10 = 4294967293;
        goto LABEL_54;
      }
      sub_22686088C(DeepCopy, (uint64_t)&v43, (UInt8 *)"%kO:BOOL", v18, v19, v20, v21, v22, @"firewallEntryIsIPv6");
      uint64_t v10 = v24;
      if (v24) {
        BOOL v25 = 1;
      }
      else {
        BOOL v25 = v43 == 0;
      }
      int v26 = !v25;
      CFDictionaryRemoveValue(v23, @"firewallEntryIsIPv6");
      if (Mutable) {
        int v27 = v26;
      }
      else {
        int v27 = 0;
      }
      uint64_t v28 = Mutable;
      if (v27 == 1 || ((uint64_t v28 = theArray) == 0 ? (v29 = 1) : (v29 = v26), v29 != 1)) {
        CFArrayAppendValue(v28, v23);
      }
      CFRelease(v23);
      if (Count == ++v14)
      {
        a4 = a4;
        a2 = v38;
        a1 = v39;
        CFArrayRef Value = v37;
        break;
      }
    }
  }
  BOOL v30 = 0;
  if (theArray && Value) {
    BOOL v30 = CFEqual(theArray, Value) == 0;
  }
  BOOL v31 = 0;
  if (Mutable && v12) {
    BOOL v31 = CFEqual(Mutable, v12) == 0;
  }
  if (!v30) {
    goto LABEL_46;
  }
  uint64_t v32 = (__CFDictionary *)CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], theDict, 2uLL);
  CFStringRef v33 = (const __CFString *)v32;
  if (!v32) {
    goto LABEL_50;
  }
  CFDictionarySetValue(v32, @"entries", theArray);
  sub_226880920(a2, 1718186597, &__p);
  uint64_t v10 = sub_2268809AC((uint64_t)a1, (uint64_t)&__p, v33, a4);
  CFRelease(v33);
  if (!v10)
  {
LABEL_46:
    if (v31)
    {
      uint64_t v34 = (__CFDictionary *)CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], v41, 2uLL);
      CFStringRef v35 = (const __CFString *)v34;
      if (v34)
      {
        CFDictionarySetValue(v34, @"entries", Mutable);
        sub_226880920(a2, 912684908, &__p);
        uint64_t v10 = sub_2268809AC((uint64_t)a1, (uint64_t)&__p, v35, a4);
        CFRelease(v35);
        goto LABEL_54;
      }
LABEL_50:
      uint64_t v10 = 4294960568;
    }
  }
LABEL_54:
  if (theArray) {
    CFRelease(theArray);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
LABEL_58:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_22689D8D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689D8FC(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  memset(&v27, 0, sizeof(v27));
  std::string __p = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  if (!a3)
  {
    uint64_t v9 = 4294967292;
    goto LABEL_12;
  }
  int v23 = 0;
  sub_226880920((unsigned __int8 *)a2, 911696228, &v27);
  uint64_t v8 = sub_2268884D0(a1, (uint64_t)&v27, (uint64_t)&__p, a4);
  uint64_t v9 = v8;
  if ((a4 != 1 || v8 != -5) && !v8)
  {
    sub_226880920((unsigned __int8 *)a2, 911697528, &v27);
    uint64_t v10 = sub_226888134(a1, (uint64_t)&v27, &v23, a4);
    uint64_t v9 = v10;
    if ((a4 != 1 || v10 != -5) && !v10)
    {
      if (SHIBYTE(v26) < 0)
      {
        p_p = (char *)__p;
        if (!v25) {
          goto LABEL_24;
        }
      }
      else
      {
        p_p = (char *)&__p;
        if (!HIBYTE(v26))
        {
LABEL_24:
          CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          CFStringRef v16 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], p_p, 0x8000100u);
          *a3 = v16;
          if (v16)
          {
            if (*(char *)(a2 + 23) >= 0) {
              uint64_t v22 = a2;
            }
            else {
              uint64_t v22 = *(void *)a2;
            }
            uint64_t v9 = sub_226860774(v15, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v17, v18, v19, v20, v21, v22);
            CFRelease(*a3);
          }
          else
          {
            uint64_t v9 = 4294960568;
          }
          goto LABEL_12;
        }
      }
      uint64_t v9 = sub_22686E524(p_p, 0, &v28, 0, 0, 0, 0);
      if (v9) {
        goto LABEL_12;
      }
      unsigned int v13 = v23;
      if ((v23 & 0xFFFFFFBF) == 0)
      {
        unsigned int v13 = -1;
        int v23 = -1;
      }
      CFIndex v14 = sub_22686EC6C(&v28, 0, 0, v13, v29);
      MEMORY[0x22A65ABB0](&__p, v14);
      if (SHIBYTE(v26) < 0) {
        p_p = (char *)__p;
      }
      else {
        p_p = (char *)&__p;
      }
      goto LABEL_24;
    }
  }
LABEL_12:
  if (SHIBYTE(v26) < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v27.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_22689DB1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689DB48(uint64_t a1, unsigned __int8 *a2, const __CFString *a3, uint64_t a4)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  memset(&v18, 0, sizeof(v18));
  CFStringRef v16 = 0;
  uint64_t v17 = 0;
  std::string __p = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  int v12 = 0;
  if (!a3)
  {
    uint64_t v7 = 4294967292;
    goto LABEL_6;
  }
  uint64_t v7 = sub_226861988(a3, &v17, (UInt8 **)&v16);
  if (!v7)
  {
    MEMORY[0x22A65ABB0](&__p, v17);
    int v12 = 0;
    if (SHIBYTE(v15) < 0)
    {
      p_p = __p;
      if (v14)
      {
LABEL_15:
        uint64_t v7 = sub_22686E524(p_p, 0, &v20, 0, 0, (unsigned int *)&v12, 0);
        if (v7) {
          goto LABEL_3;
        }
        uint64_t v10 = sub_22686EC6C(&v20, 0, 0, 0xFFFFFFFF, v19);
        MEMORY[0x22A65ABB0](&__p, v10);
        sub_226880920(a2, 911696228, &v18);
        uint64_t v7 = sub_226888444(a1, (uint64_t)&v18, (uint64_t)&__p, a4);
        if (v7) {
          goto LABEL_3;
        }
        if (!v12) {
          int v12 = 64;
        }
        sub_226880920(a2, 911697528, &v18);
        int v11 = v12;
LABEL_24:
        uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v18, v11, a4);
        goto LABEL_3;
      }
      *(unsigned char *)std::string __p = 0;
      uint64_t v14 = 0;
    }
    else
    {
      if (HIBYTE(v15))
      {
        p_p = &__p;
        goto LABEL_15;
      }
      LOBYTE(__p) = 0;
      HIBYTE(v15) = 0;
    }
    sub_226880920(a2, 911696228, &v18);
    uint64_t v7 = sub_226888444(a1, (uint64_t)&v18, (uint64_t)&__p, a4);
    if (v7) {
      goto LABEL_3;
    }
    sub_226880920(a2, 911697528, &v18);
    int v11 = 0;
    goto LABEL_24;
  }
LABEL_3:
  if (v16)
  {
    free(v16);
    CFStringRef v16 = 0;
  }
LABEL_6:
  if (SHIBYTE(v15) < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_22689DD64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689DD90(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  memset(&v27, 0, sizeof(v27));
  std::string __p = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  if (!a3)
  {
    uint64_t v9 = 4294967292;
    goto LABEL_12;
  }
  int v23 = 0;
  sub_226880920((unsigned __int8 *)a2, 910382945, &v27);
  uint64_t v8 = sub_2268884D0(a1, (uint64_t)&v27, (uint64_t)&__p, a4);
  uint64_t v9 = v8;
  if ((a4 != 1 || v8 != -5) && !v8)
  {
    sub_226880920((unsigned __int8 *)a2, 910382960, &v27);
    uint64_t v10 = sub_226888134(a1, (uint64_t)&v27, &v23, a4);
    uint64_t v9 = v10;
    if ((a4 != 1 || v10 != -5) && !v10)
    {
      if (SHIBYTE(v26) < 0)
      {
        p_p = (char *)__p;
        if (!v25) {
          goto LABEL_24;
        }
      }
      else
      {
        p_p = (char *)&__p;
        if (!HIBYTE(v26))
        {
LABEL_24:
          CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          CFStringRef v16 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], p_p, 0x8000100u);
          *a3 = v16;
          if (v16)
          {
            if (*(char *)(a2 + 23) >= 0) {
              uint64_t v22 = a2;
            }
            else {
              uint64_t v22 = *(void *)a2;
            }
            uint64_t v9 = sub_226860774(v15, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v17, v18, v19, v20, v21, v22);
            CFRelease(*a3);
          }
          else
          {
            uint64_t v9 = 4294960568;
          }
          goto LABEL_12;
        }
      }
      uint64_t v9 = sub_22686E524(p_p, 0, &v28, 0, 0, 0, 0);
      if (v9) {
        goto LABEL_12;
      }
      unsigned int v13 = v23;
      if ((v23 & 0xFFFFFFBF) == 0)
      {
        unsigned int v13 = -1;
        int v23 = -1;
      }
      uint64_t v14 = sub_22686EC6C(&v28, 0, 0, v13, v29);
      MEMORY[0x22A65ABB0](&__p, v14);
      if (SHIBYTE(v26) < 0) {
        p_p = (char *)__p;
      }
      else {
        p_p = (char *)&__p;
      }
      goto LABEL_24;
    }
  }
LABEL_12:
  if (SHIBYTE(v26) < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v27.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_22689DFB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689DFDC()
{
  return 0;
}

uint64_t sub_22689DFE4(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  memset(&v27, 0, sizeof(v27));
  std::string __p = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  if (!a3)
  {
    uint64_t v9 = 4294967292;
    goto LABEL_12;
  }
  int v23 = 0;
  sub_226880920((unsigned __int8 *)a2, 911230049, &v27);
  uint64_t v8 = sub_2268884D0(a1, (uint64_t)&v27, (uint64_t)&__p, a4);
  uint64_t v9 = v8;
  if ((a4 != 1 || v8 != -5) && !v8)
  {
    sub_226880920((unsigned __int8 *)a2, 911230060, &v27);
    uint64_t v10 = sub_226888134(a1, (uint64_t)&v27, &v23, a4);
    uint64_t v9 = v10;
    if ((a4 != 1 || v10 != -5) && !v10)
    {
      if (SHIBYTE(v26) < 0)
      {
        p_p = (char *)__p;
        if (!v25) {
          goto LABEL_24;
        }
      }
      else
      {
        p_p = (char *)&__p;
        if (!HIBYTE(v26))
        {
LABEL_24:
          CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          CFStringRef v16 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], p_p, 0x8000100u);
          *a3 = v16;
          if (v16)
          {
            if (*(char *)(a2 + 23) >= 0) {
              uint64_t v22 = a2;
            }
            else {
              uint64_t v22 = *(void *)a2;
            }
            uint64_t v9 = sub_226860774(v15, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v17, v18, v19, v20, v21, v22);
            CFRelease(*a3);
          }
          else
          {
            uint64_t v9 = 4294960568;
          }
          goto LABEL_12;
        }
      }
      uint64_t v9 = sub_22686E524(p_p, 0, &v28, 0, 0, 0, 0);
      if (v9) {
        goto LABEL_12;
      }
      unsigned int v13 = v23;
      if (!v23)
      {
        unsigned int v13 = 48;
        int v23 = 48;
      }
      uint64_t v14 = sub_22686EC6C(&v28, 0, 0, v13, v29);
      MEMORY[0x22A65ABB0](&__p, v14);
      if (SHIBYTE(v26) < 0) {
        p_p = (char *)__p;
      }
      else {
        p_p = (char *)&__p;
      }
      goto LABEL_24;
    }
  }
LABEL_12:
  if (SHIBYTE(v26) < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v27.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_22689E200(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689E22C(uint64_t a1, unsigned __int8 *a2, const __CFString *a3, uint64_t a4)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  memset(&v18, 0, sizeof(v18));
  CFStringRef v16 = 0;
  uint64_t v17 = 0;
  std::string __p = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  int v12 = 0;
  if (!a3)
  {
    uint64_t v7 = 4294967292;
    goto LABEL_6;
  }
  uint64_t v7 = sub_226861988(a3, &v17, (UInt8 **)&v16);
  if (!v7)
  {
    MEMORY[0x22A65ABB0](&__p, v17);
    int v12 = 0;
    if (SHIBYTE(v15) < 0)
    {
      p_p = __p;
      if (v14)
      {
LABEL_15:
        uint64_t v7 = sub_22686E524(p_p, 0, &v20, 0, 0, (unsigned int *)&v12, 0);
        if (v7) {
          goto LABEL_3;
        }
        uint64_t v10 = sub_22686EC6C(&v20, 0, 0, 0xFFFFFFFF, v19);
        MEMORY[0x22A65ABB0](&__p, v10);
        sub_226880920(a2, 911230049, &v18);
        uint64_t v7 = sub_226888444(a1, (uint64_t)&v18, (uint64_t)&__p, a4);
        if (v7) {
          goto LABEL_3;
        }
        if (!v12) {
          int v12 = 48;
        }
        sub_226880920(a2, 911230060, &v18);
        int v11 = v12;
LABEL_24:
        uint64_t v7 = sub_2268814C8(a1, (uint64_t)&v18, v11, a4);
        goto LABEL_3;
      }
      *(unsigned char *)std::string __p = 0;
      uint64_t v14 = 0;
    }
    else
    {
      if (HIBYTE(v15))
      {
        p_p = &__p;
        goto LABEL_15;
      }
      LOBYTE(__p) = 0;
      HIBYTE(v15) = 0;
    }
    sub_226880920(a2, 911230049, &v18);
    uint64_t v7 = sub_226888444(a1, (uint64_t)&v18, (uint64_t)&__p, a4);
    if (v7) {
      goto LABEL_3;
    }
    sub_226880920(a2, 911230060, &v18);
    int v11 = 0;
    goto LABEL_24;
  }
LABEL_3:
  if (v16)
  {
    free(v16);
    CFStringRef v16 = 0;
  }
LABEL_6:
  if (SHIBYTE(v15) < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_22689E448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689E474(uint64_t a1, uint64_t a2, CFTypeRef *a3, uint64_t a4)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  memset(&v27, 0, sizeof(v27));
  std::string __p = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  if (!a3)
  {
    uint64_t v9 = 4294967292;
    goto LABEL_12;
  }
  int v23 = 0;
  sub_226880920((unsigned __int8 *)a2, 910381153, &v27);
  uint64_t v8 = sub_2268884D0(a1, (uint64_t)&v27, (uint64_t)&__p, a4);
  uint64_t v9 = v8;
  if ((a4 != 1 || v8 != -5) && !v8)
  {
    sub_226880920((unsigned __int8 *)a2, 910381164, &v27);
    uint64_t v10 = sub_226888134(a1, (uint64_t)&v27, &v23, a4);
    uint64_t v9 = v10;
    if ((a4 != 1 || v10 != -5) && !v10)
    {
      if (SHIBYTE(v26) < 0)
      {
        p_p = (char *)__p;
        if (!v25) {
          goto LABEL_24;
        }
      }
      else
      {
        p_p = (char *)&__p;
        if (!HIBYTE(v26))
        {
LABEL_24:
          CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          CFStringRef v16 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], p_p, 0x8000100u);
          *a3 = v16;
          if (v16)
          {
            if (*(char *)(a2 + 23) >= 0) {
              uint64_t v22 = a2;
            }
            else {
              uint64_t v22 = *(void *)a2;
            }
            uint64_t v9 = sub_226860774(v15, *(__CFArray **)(a1 + 48), (uint64_t)"%ks=%O", v17, v18, v19, v20, v21, v22);
            CFRelease(*a3);
          }
          else
          {
            uint64_t v9 = 4294960568;
          }
          goto LABEL_12;
        }
      }
      uint64_t v9 = sub_22686E524(p_p, 0, &v28, 0, 0, 0, 0);
      if (v9) {
        goto LABEL_12;
      }
      unsigned int v13 = v23;
      if (!v23)
      {
        unsigned int v13 = 48;
        int v23 = 48;
      }
      uint64_t v14 = sub_22686EC6C(&v28, 0, 0, v13, v29);
      MEMORY[0x22A65ABB0](&__p, v14);
      if (SHIBYTE(v26) < 0) {
        p_p = (char *)__p;
      }
      else {
        p_p = (char *)&__p;
      }
      goto LABEL_24;
    }
  }
LABEL_12:
  if (SHIBYTE(v26) < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v27.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_22689E690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689E6BC()
{
  return 0;
}

uint64_t sub_22689E6C4(uint64_t a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  int v12 = 0;
  memset(&__p, 0, sizeof(__p));
  if (a3)
  {
    *a3 = 0;
    sub_226880920(a2, 912483943, &__p);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&__p, &v12, a4);
    uint64_t v8 = v7;
    if ((a4 != 1 || v7 != -5) && !v7)
    {
      if (((v12 - 3) & 0xFFFFFFFD) != 0) {
        uint64_t v9 = (void *)MEMORY[0x263EFFB38];
      }
      else {
        uint64_t v9 = (void *)MEMORY[0x263EFFB40];
      }
      *a3 = *v9;
    }
  }
  else
  {
    uint64_t v8 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689E794(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689E7B0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  memset(&__p, 0, sizeof(__p));
  if (!a3) {
    return 4294967292;
  }
  sub_226880920(a2, 912483943, &__p);
  if (*MEMORY[0x263EFFB40] == a3) {
    int v7 = 5;
  }
  else {
    int v7 = 1;
  }
  uint64_t v8 = sub_2268814C8(a1, (uint64_t)&__p, v7, a4);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_22689E850(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_22689E86C(void *a1, std::string::size_type a2, uint64_t a3, int a4)
{
  memset(&v10, 0, sizeof(v10));
  if (a1 && a2 >= 0x15)
  {
    bzero(a1, a2);
    sub_22689E970(a3, a4, &__p);
    std::string::operator=(&v10, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      if (v10.__r_.__value_.__l.__size_ < a2) {
        strcpy((char *)a1, v10.__r_.__value_.__l.__data_);
      }
      operator delete(v10.__r_.__value_.__l.__data_);
    }
    else if (HIBYTE(v10.__r_.__value_.__r.__words[2]) < a2)
    {
      strcpy((char *)a1, (const char *)&v10);
    }
  }
  return a1;
}

void sub_22689E93C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_22689E970(uint64_t a1@<X0>, int a2@<W1>, std::string *a3@<X8>)
{
}

void sub_22689E9A8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22689E9C4(uint64_t a1)
{
  CFTypeRef cf = 0;
  if (sub_22687CDBC(a1, 1684362100, &cf, 0) || !CFDictionaryGetCount((CFDictionaryRef)cf))
  {
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    if (sub_22687CDBC(a1, 1684099956, &cf, 0) || !CFDictionaryGetCount((CFDictionaryRef)cf))
    {
      if (cf)
      {
        CFRelease(cf);
        CFTypeRef cf = 0;
      }
      int v2 = sub_22687CDBC(a1, 1684886388, &cf, 0);
      uint64_t v3 = 0;
      if (!v2)
      {
        if (CFDictionaryGetCount((CFDictionaryRef)cf)) {
          uint64_t v3 = 1298753353;
        }
        else {
          uint64_t v3 = 0;
        }
      }
    }
    else
    {
      uint64_t v3 = 1098015561;
    }
  }
  else
  {
    uint64_t v3 = 1165123913;
  }
  if (cf) {
    CFRelease(cf);
  }
  return v3;
}

BOOL sub_22689EABC(uint64_t a1, int a2, BOOL *a3, uint64_t a4)
{
  CFTypeRef cf = 0;
  if (!a2) {
    return 0;
  }
  if (sub_22687CDBC(a1, 1937331060, &cf, a4))
  {
LABEL_3:
    BOOL v8 = 0;
    goto LABEL_4;
  }
  if (!cf) {
    return 0;
  }
  CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue((CFDictionaryRef)cf, @"problems");
  if (!Value) {
    goto LABEL_3;
  }
  BOOL v8 = sub_2268A1B78(Value, a2) != -1;
  if (a3)
  {
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    if (!sub_22687CDBC(a1, 1937328487, &cf, a4))
    {
      if (!cf) {
        return v8;
      }
      CFArrayRef v10 = (const __CFArray *)CFDictionaryGetValue((CFDictionaryRef)cf, @"problems");
      if (v10) {
        *a3 = sub_2268A1B78(v10, a2) != -1;
      }
    }
  }
LABEL_4:
  if (cf) {
    CFRelease(cf);
  }
  return v8;
}

uint64_t sub_22689EBC4(uint64_t a1, int a2)
{
  CFTypeRef cf = 0;
  if (!a2) {
    return 4294960591;
  }
  uint64_t v4 = sub_22687CDBC(a1, 1937328487, &cf, 0);
  if (v4)
  {
    uint64_t v5 = v4;
    CFStringRef v6 = 0;
  }
  else
  {
    if (!cf) {
      return 4294960569;
    }
    CFDictionaryRef DeepCopy = (const __CFDictionary *)CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], cf, 2uLL);
    CFStringRef v6 = (const __CFString *)DeepCopy;
    if (DeepCopy)
    {
      CFArrayRef Value = (__CFArray *)CFDictionaryGetValue(DeepCopy, @"problems");
      if (Value)
      {
        uint64_t v10 = sub_2268A1AFC(Value, a2);
        if (!v10) {
          uint64_t v10 = sub_22687AF44(a1, 1937328487, v6, 0);
        }
        uint64_t v5 = v10;
      }
      else
      {
        uint64_t v5 = 4294960569;
      }
    }
    else
    {
      uint64_t v5 = 4294960568;
    }
  }
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (v6) {
    CFRelease(v6);
  }
  return v5;
}

uint64_t sub_22689ECC4(uint64_t a1, int a2)
{
  CFTypeRef cf = 0;
  if (!a2) {
    return 4294960591;
  }
  uint64_t v4 = sub_22687CDBC(a1, 1937328487, &cf, 0);
  if (!v4)
  {
    if (!cf) {
      return 4294960569;
    }
    CFDictionaryRef DeepCopy = (const __CFDictionary *)CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], cf, 2uLL);
    if (DeepCopy)
    {
      CFStringRef v7 = (const __CFString *)DeepCopy;
      CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(DeepCopy, @"problems");
      if (Value)
      {
        uint64_t v4 = sub_2268A1C18(Value, a2);
        if (!v4) {
          uint64_t v4 = sub_22687AF44(a1, 1937328487, v7, 0);
        }
      }
      else
      {
        uint64_t v4 = 4294960569;
      }
      CFRelease(v7);
    }
    else
    {
      uint64_t v4 = 4294960568;
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  return v4;
}

uint64_t sub_22689EDB8(void *a1)
{
  int v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  unint64_t v4 = (char *)v3 - (char *)v2;
  if (v3 == v2)
  {
    uint64_t v5 = a1 + 5;
  }
  else
  {
    uint64_t v5 = a1 + 5;
    unint64_t v6 = a1[4];
    CFStringRef v7 = &v2[v6 >> 9];
    uint64_t v8 = (uint64_t)*v7;
    uint64_t v9 = (uint64_t)*v7 + 8 * (v6 & 0x1FF);
    while ((void *)v9 != *(char **)((char *)v2 + (((a1[5] + v6) >> 6) & 0x3FFFFFFFFFFFFF8))
                        + 8 * ((a1[5] + v6) & 0x1FF))
    {
      v9 += 8;
      if (v9 - v8 == 4096)
      {
        uint64_t v10 = (uint64_t)v7[1];
        ++v7;
        uint64_t v8 = v10;
        uint64_t v9 = v10;
      }
    }
  }
  *uint64_t v5 = 0;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      int v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v11 = v4 >> 3;
  if (v11 == 1)
  {
    uint64_t v12 = 256;
  }
  else
  {
    if (v11 != 2) {
      goto LABEL_15;
    }
    uint64_t v12 = 512;
  }
  a1[4] = v12;
LABEL_15:
  while (v2 != v3)
  {
    unsigned int v13 = *v2++;
    operator delete(v13);
  }

  return sub_22689EEC4((uint64_t)a1);
}

uint64_t sub_22689EEC4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3) {
    *(void *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  unint64_t v4 = *(void **)a1;
  if (*(void *)a1) {
    operator delete(v4);
  }
  return a1;
}

void *sub_22689EF14(unsigned char *__dst, void *__src, unint64_t a3)
{
  uint64_t v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_22689EFB4();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    uint64_t v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    *uint64_t v5 = v8;
    uint64_t v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, a3 + 1);
}

void sub_22689EFB4()
{
}

void sub_22689EFCC(const char *a1)
{
  exceptiouint64_t n = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_22689F028(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_2647B7EE8, MEMORY[0x263F8C060]);
}

void sub_22689F014(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_22689F028(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

void sub_22689F05C()
{
  exceptiouint64_t n = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x263F8C208], MEMORY[0x263F8C090]);
}

void *sub_22689F090(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_22689EFB4();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void sub_22689F144()
{
}

void sub_22689F15C(const char *a1)
{
  exceptiouint64_t n = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_22689F1B8(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_2647B7EF0, MEMORY[0x263F8C068]);
}

void sub_22689F1A4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_22689F1B8(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C390] + 16);
  return result;
}

void sub_22689F1EC(unint64_t *a1, size_t a2)
{
  size_t v5 = (char *)a1[1];
  size_t v4 = (char *)a1[2];
  if (v4 - v5 >= a2)
  {
    if (a2)
    {
      bzero((void *)a1[1], a2);
      v5 += a2;
    }
    a1[1] = (unint64_t)v5;
  }
  else
  {
    unint64_t v6 = *a1;
    uint64_t v7 = &v5[-*a1];
    unint64_t v8 = (unint64_t)&v7[a2];
    if ((uint64_t)&v7[a2] < 0) {
      sub_22689F328();
    }
    unint64_t v9 = (unint64_t)&v4[-v6];
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v10 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v10 = v8;
    }
    if (v10) {
      unint64_t v11 = (unint64_t)operator new(v10);
    }
    else {
      unint64_t v11 = 0;
    }
    uint64_t v12 = &v7[v11];
    unsigned int v13 = (char *)(v11 + v10);
    bzero(v12, a2);
    if (v5 == (char *)v6)
    {
      unint64_t v11 = (unint64_t)v12;
    }
    else
    {
      uint64_t v14 = &v5[~v6];
      do
      {
        char v15 = *--v5;
        (v14--)[v11] = v15;
      }
      while (v5 != (char *)v6);
      size_t v5 = (char *)*a1;
    }
    *a1 = v11;
    a1[1] = (unint64_t)&v12[a2];
    a1[2] = (unint64_t)v13;
    if (v5)
    {
      operator delete(v5);
    }
  }
}

void sub_22689F328()
{
}

void sub_22689F340(void *a1, void *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = ((v4 - v5) << 6) - 1;
  }
  uint64_t v7 = a1[5];
  unint64_t v8 = v7 + a1[4];
  if (v6 == v8)
  {
    sub_22689F3C8(a1);
    uint64_t v5 = a1[1];
    uint64_t v7 = a1[5];
    unint64_t v8 = a1[4] + v7;
  }
  *(void *)(*(void *)(v5 + ((v8 >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * (v8 & 0x1FF)) = *a2;
  a1[5] = v7 + 1;
}

void sub_22689F3C8(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x200;
  unint64_t v4 = v2 - 512;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    unint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_22689FB4C(v5, v33);
      CFStringRef v35 = &v34[8 * (v33 >> 2)];
      uint64_t v37 = &v34[8 * v36];
      uint64_t v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        CFDictionaryRef v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)CFDictionaryRef v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      unint64_t v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_22689F6E0(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_22689F7F8((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    unint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_22689FB4C((uint64_t)(a1 + 3), v46);
      CFStringRef v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        int64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)int64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      char v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  std::string::size_type v56 = a1 + 3;
  *(void *)&long long v54 = sub_22689FB4C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_22689F918(&v54, &v53);
  std::string v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_22689FA30((uint64_t)&v54, v27);
  }
  int v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_22689F694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_22689F6E0(void *a1, void *a2)
{
  uint64_t v5 = (char *)a1[3];
  uint64_t v4 = (uint64_t)(a1 + 3);
  uint64_t v6 = *(char **)(v4 - 8);
  if (v6 == v5)
  {
    uint64_t v7 = (char *)a1[1];
    uint64_t v8 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v18 = 1;
      }
      else {
        unint64_t v18 = (uint64_t)&v6[-*a1] >> 2;
      }
      uint64_t v19 = (char *)sub_22689FB4C(v4, v18);
      uint64_t v21 = &v19[8 * (v18 >> 2)];
      unint64_t v22 = (uint64_t *)a1[1];
      uint64_t v6 = v21;
      uint64_t v23 = a1[2] - (void)v22;
      if (v23)
      {
        uint64_t v6 = &v21[v23 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v24 = 8 * (v23 >> 3);
        unint64_t v25 = &v19[8 * (v18 >> 2)];
        do
        {
          uint64_t v26 = *v22++;
          *(void *)unint64_t v25 = v26;
          v25 += 8;
          v24 -= 8;
        }
        while (v24);
      }
      std::string v27 = (char *)*a1;
      *a1 = v19;
      a1[1] = v21;
      a1[2] = v6;
      a1[3] = &v19[8 * v20];
      if (v27)
      {
        operator delete(v27);
        uint64_t v6 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v9 = v8 >> 3;
      BOOL v10 = v8 >> 3 < -1;
      uint64_t v11 = (v8 >> 3) + 2;
      if (v10) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = v9 + 1;
      }
      uint64_t v13 = -(v12 >> 1);
      uint64_t v14 = v12 >> 1;
      uint64_t v15 = &v7[-8 * v14];
      int64_t v16 = v6 - v7;
      if (v6 != v7)
      {
        memmove(&v7[-8 * v14], v7, v6 - v7);
        uint64_t v6 = (char *)a1[1];
      }
      uint64_t v17 = &v6[8 * v13];
      uint64_t v6 = &v15[v16];
      a1[1] = v17;
      a1[2] = &v15[v16];
    }
  }
  *(void *)uint64_t v6 = *a2;
  a1[2] += 8;
}

void sub_22689F7F8(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = a1 + 24;
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    uint64_t v8 = *(unsigned char **)(a1 + 16);
    if (v8 >= v7)
    {
      if (v7 == v4) {
        unint64_t v12 = 1;
      }
      else {
        unint64_t v12 = (v7 - v4) >> 2;
      }
      uint64_t v13 = 2 * v12;
      uint64_t v14 = (char *)sub_22689FB4C(v6, v12);
      uint64_t v5 = &v14[(v13 + 6) & 0xFFFFFFFFFFFFFFF8];
      int64_t v16 = *(uint64_t **)(a1 + 8);
      uint64_t v17 = v5;
      uint64_t v18 = *(void *)(a1 + 16) - (void)v16;
      if (v18)
      {
        uint64_t v17 = &v5[v18 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v19 = 8 * (v18 >> 3);
        uint64_t v20 = v5;
        do
        {
          uint64_t v21 = *v16++;
          *(void *)uint64_t v20 = v21;
          v20 += 8;
          v19 -= 8;
        }
        while (v19);
      }
      unint64_t v22 = *(char **)a1;
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = &v14[8 * v15];
      if (v22)
      {
        operator delete(v22);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v9 = (v7 - v8) >> 3;
      if (v9 >= -1) {
        uint64_t v10 = v9 + 1;
      }
      else {
        uint64_t v10 = v9 + 2;
      }
      uint64_t v11 = v10 >> 1;
      uint64_t v5 = &v4[8 * (v10 >> 1)];
      if (v8 != v4)
      {
        memmove(&v4[8 * (v10 >> 1)], v4, v8 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v11];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void sub_22689F918(void *a1, void *a2)
{
  uint64_t v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    uint64_t v5 = (char *)a1[1];
    uint64_t v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1) {
        unint64_t v16 = 1;
      }
      else {
        unint64_t v16 = (uint64_t)&v4[-*a1] >> 2;
      }
      uint64_t v17 = (char *)sub_22689FB4C(a1[4], v16);
      uint64_t v19 = &v17[8 * (v16 >> 2)];
      uint64_t v20 = (uint64_t *)a1[1];
      uint64_t v4 = v19;
      uint64_t v21 = a1[2] - (void)v20;
      if (v21)
      {
        uint64_t v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v22 = 8 * (v21 >> 3);
        uint64_t v23 = &v17[8 * (v16 >> 2)];
        do
        {
          uint64_t v24 = *v20++;
          *(void *)uint64_t v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      unint64_t v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        uint64_t v4 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v7 = v6 >> 3;
      BOOL v8 = v6 >> 3 < -1;
      uint64_t v9 = (v6 >> 3) + 2;
      if (v8) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v7 + 1;
      }
      uint64_t v11 = -(v10 >> 1);
      uint64_t v12 = v10 >> 1;
      uint64_t v13 = &v5[-8 * v12];
      int64_t v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        uint64_t v4 = (char *)a1[1];
      }
      uint64_t v15 = &v4[8 * v11];
      uint64_t v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(void *)uint64_t v4 = *a2;
  a1[2] += 8;
}

void sub_22689FA30(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = *(unsigned char **)(a1 + 16);
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    if (v6 >= v7)
    {
      if (v7 == v4) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = (v7 - v4) >> 2;
      }
      uint64_t v12 = 2 * v11;
      uint64_t v13 = (char *)sub_22689FB4C(*(void *)(a1 + 32), v11);
      uint64_t v5 = &v13[(v12 + 6) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v15 = *(uint64_t **)(a1 + 8);
      unint64_t v16 = v5;
      uint64_t v17 = *(void *)(a1 + 16) - (void)v15;
      if (v17)
      {
        unint64_t v16 = &v5[v17 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v18 = 8 * (v17 >> 3);
        uint64_t v19 = v5;
        do
        {
          uint64_t v20 = *v15++;
          *(void *)uint64_t v19 = v20;
          v19 += 8;
          v18 -= 8;
        }
        while (v18);
      }
      uint64_t v21 = *(char **)a1;
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = &v13[8 * v14];
      if (v21)
      {
        operator delete(v21);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v8 = (v7 - v6) >> 3;
      if (v8 >= -1) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = v8 + 2;
      }
      uint64_t v10 = v9 >> 1;
      uint64_t v5 = &v4[8 * (v9 >> 1)];
      if (v6 != v4)
      {
        memmove(&v4[8 * (v9 >> 1)], v4, v6 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v10];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void *sub_22689FB4C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_22689F05C();
  }
  return operator new(8 * a2);
}

uint64_t sub_22689FB84(void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = ((v2 - v3) << 6) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x200) {
    a2 = 1;
  }
  if (v5 < 0x400) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

uint64_t sub_22689FBF4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    sub_22689EFB4();
  }
  if (a2 > 0x16)
  {
    uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17) {
      uint64_t v4 = a2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = operator new(v4 + 1);
    *(void *)(a1 + 8) = a2;
    *(void *)(a1 + 16) = v5 | 0x8000000000000000;
    *(void *)a1 = v6;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 23) = a2;
  }
  return a1;
}

__CFString *sub_22689FC7C(int *a1)
{
  CFMutableArrayRef Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0);
  sub_22683C448(*a1, cStr);
  CFStringAppendCString(Mutable, cStr, 0x8000100u);
  CFStringAppendCString(Mutable, ".", 0x8000100u);
  char v6 = 0;
  *(_DWORD *)uint64_t v5 = 0;
  int v3 = a1[1];
  if ((v3 - 1732604481) > 8) {
    sub_22683C448(v3, v5);
  }
  else {
    __sprintf_chk(v5, 0, 5uLL, "%c", (v3 - 1732604416));
  }
  CFStringAppendCString(Mutable, v5, 0x8000100u);
  return Mutable;
}

uint64_t sub_22689FD64(uint64_t a1, int a2, __CFString **a3)
{
  uint64_t v3 = 0;
  int v8 = a2;
  uint64_t v6 = 0;
  int v7 = 0;
  if (a1)
  {
    if (a2)
    {
      uint64_t v3 = 1;
      sub_2268A5950(a1, &v8, 1uLL, &v7, &v6);
      if (v6)
      {
        uint64_t v3 = 0;
        if (a3) {
          *a3 = sub_22689FC7C((int *)v7);
        }
      }
    }
  }
  if (v7) {
    free(v7);
  }
  return v3;
}

uint64_t sub_22689FDEC(uint64_t a1)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t result = sub_2268A58D0(a1, 1381253996);
  if (result)
  {
    char v6 = 0;
    sub_2268A511C(a1, 1651725402, &v6);
    uint64_t result = 0;
    if (!v6)
    {
      uint64_t v5 = sub_2268C6E98(0, v3, v4);
      if (v5) {
        return sub_2268A5444(a1, 1651725402, v5);
      }
      else {
        return 4294960569;
      }
    }
  }
  return result;
}

uint64_t sub_22689FE7C(uint64_t a1, int a2)
{
  if (!a1) {
    return 4294960591;
  }
  char v8 = 0;
  sub_2268A511C(a1, 1937330789, &v8);
  uint64_t result = 0;
  if (!v8)
  {
    int v5 = sub_22689FF0C(a1);
    if (v5 != -1 || a2 == 0) {
      int v7 = v5;
    }
    else {
      int v7 = 0;
    }
    if (v7 == -1) {
      return 4294960569;
    }
    else {
      return sub_2268A5490(a1, 1937330789, v7);
    }
  }
  return result;
}

uint64_t sub_22689FF0C(uint64_t a1)
{
  char v6 = 0;
  unsigned int v7 = 0;
  if (a1)
  {
    CFLocaleRef v2 = CFLocaleCopyCurrent();
    CFLocaleRef v3 = v2;
    if (v2)
    {
      CFStringRef Value = (const __CFString *)CFLocaleGetValue(v2, (CFLocaleKey)*MEMORY[0x263EFFCB0]);
      if (!sub_226861A84(Value, (char **)&v6) && (sub_22689FFA8(a1, (char *)v6, &v7) & 1) == 0) {
        unsigned int v7 = -1;
      }
    }
    if (v6)
    {
      free(v6);
      char v6 = 0;
    }
    if (v3) {
      CFRelease(v3);
    }
  }
  return v7;
}

uint64_t sub_22689FFA8(uint64_t a1, char *a2, _DWORD *a3)
{
  int v20 = 0;
  CFArrayRef theArray = 0;
  sub_22683C448(1937330789, __s);
  if (a3)
  {
    *a3 = sub_2268A0A24(a2);
    int v6 = sub_2268A00D0(a1, __s, 0, &theArray);
    uint64_t v7 = 0;
    if (v6) {
      goto LABEL_16;
    }
    if (!theArray) {
      return 0;
    }
    CFIndex Count = CFArrayGetCount(theArray);
    if (Count >= 1)
    {
      CFIndex v14 = Count;
      for (uint64_t i = 0; v14 != i; ++i)
      {
        sub_22686088C((const __CFString *)theArray, (uint64_t)&v20, (UInt8 *)"[*]:int", v9, v10, v11, v12, v13, i);
        if (v16) {
          break;
        }
        if (v20 == 51)
        {
          if (*a3 == 1)
          {
LABEL_20:
            *a3 = v20;
LABEL_21:
            uint64_t v7 = 1;
            goto LABEL_16;
          }
        }
        else if (v20 == 50)
        {
          if (!*a3) {
            goto LABEL_20;
          }
        }
        else if (*a3 == v20)
        {
          goto LABEL_21;
        }
      }
    }
  }
  uint64_t v7 = 0;
LABEL_16:
  if (theArray) {
    CFRelease(theArray);
  }
  return v7;
}

uint64_t sub_2268A00D0(uint64_t a1, char *__s, uint64_t a3, void *a4)
{
  if (!a1) {
    return 4294967292;
  }
  size_t v8 = strlen(__s);
  if (!a4 || v8 < 4) {
    return 4294967292;
  }

  return sub_2268A5D24(a1, __s, a4, a3);
}

uint64_t sub_2268A0150(CFNumberRef number, int a2, CFNumberRef *a3)
{
  uint64_t result = 4294960591;
  if (number && a2 && a3)
  {
    int valuePtr = 0;
    if (CFNumberGetValue(number, kCFNumberSInt32Type, &valuePtr))
    {
      valuePtr &= a2;
      CFNumberRef v7 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
      if (v7)
      {
        CFNumberRef v8 = v7;
        uint64_t result = 0;
        *a3 = v8;
      }
      else
      {
        return 4294960568;
      }
    }
    else
    {
      return 4294960553;
    }
  }
  return result;
}

uint64_t sub_2268A01F0(unsigned __int8 *a1, char *__s, __CFDictionary *a3)
{
  uint64_t result = 0;
  uint64_t v13 = *MEMORY[0x263EF8340];
  if (a1 && __s && a3)
  {
    size_t v7 = strlen(__s);
    if (v7 >= 0x14) {
      CFIndex v8 = 20;
    }
    else {
      CFIndex v8 = v7;
    }
    CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    uint64_t result = (uint64_t)CFStringCreateWithBytes((CFAllocatorRef)*MEMORY[0x263EFFB08], (const UInt8 *)__s, v8, 0x8000100u, 0);
    if (result)
    {
      uint64_t v10 = (const void *)result;
      CFDictionarySetValue(a3, @"Description", (const void *)result);
      CFRelease(v10);
      memset(v12, 0, sizeof(v12));
      sub_22686F33C(a1, 6, v12);
      uint64_t result = (uint64_t)CFStringCreateWithCString(v9, (const char *)v12, 0x8000100u);
      if (result)
      {
        uint64_t v11 = (const void *)result;
        CFDictionarySetValue(a3, @"PeerMAC", (const void *)result);
        CFRelease(v11);
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_2268A0314(const __CFDictionary *a1, uint64_t a2, unsigned char *a3, size_t a4)
{
  uint64_t v4 = 0;
  uint64_t v24 = *MEMORY[0x263EF8340];
  std::string __s = 0;
  if (a1 && a2 && a3)
  {
    *(_WORD *)(a2 + 4) = 0;
    *(_DWORD *)a2 = 0;
    bzero(a3, a4);
    CFStringRef Value = (const __CFString *)CFDictionaryGetValue(a1, @"PeerMAC");
    if (Value
      && (*(_OWORD *)buffer = 0u, long long v23 = 0u, CFStringGetCString(Value, buffer, 32, 0x8000100u))
      && (size_t v10 = strlen(buffer), !sub_22686F20C(buffer, v10, 6, (unsigned char *)a2)))
    {
      sub_22686088C((const __CFString *)a1, (uint64_t)&__s, (UInt8 *)"%kO:utf8", v11, v12, v13, v14, v15, @"Description");
      if (v17 || (uint64_t v18 = __s, (v19 = strlen(__s)) == 0))
      {
        *a3 = 0;
      }
      else
      {
        size_t v20 = v19;
        if (v19 > a4)
        {
          size_t v20 = sub_226870130(__s, v19, a4);
          uint64_t v18 = __s;
        }
        strncpy(a3, v18, v20);
      }
      uint64_t v4 = 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
  }
  if (__s) {
    free(__s);
  }
  return v4;
}

__CFString *sub_2268A0488(uint64_t a1, __CFDictionary *a2)
{
  uint64_t result = 0;
  if (a1)
  {
    if (a2)
    {
      CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      uint64_t result = (__CFString *)CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x263EFFB08], (const char *)(a1 + 136), 0x8000100u);
      if (result)
      {
        int v6 = result;
        CFDictionarySetValue(a2, @"USB_PRINTER_NAME", result);
        CFRelease(v6);
        uint64_t result = (__CFString *)CFStringCreateWithCString(v5, (const char *)(a1 + 8), 0x8000100u);
        if (result)
        {
          size_t v7 = result;
          CFDictionarySetValue(a2, @"USB_PRINTER_UNIQUEID", result);
          CFRelease(v7);
          uint64_t result = CFStringCreateMutable(v5, 0);
          if (result)
          {
            CFIndex v8 = result;
            CFStringAppendCString(result, (const char *)(a1 + 204), 0x8000100u);
            CFStringAppendCString(v8, " ", 0x8000100u);
            CFStringAppendCString(v8, (const char *)(a1 + 460), 0x8000100u);
            CFDictionarySetValue(a2, @"USB_PRINTER_MAKE_MODEL", v8);
            CFRelease(v8);
            uint64_t result = (__CFString *)CFDataCreate(v5, (const UInt8 *)a1, 720);
            if (result)
            {
              CFAllocatorRef v9 = result;
              CFDictionarySetValue(a2, @"USB_PRINTER_ENTRY", result);
              CFRelease(v9);
              size_t v10 = (const void **)MEMORY[0x263EFFB40];
              if (!*(unsigned char *)(a1 + 716)) {
                size_t v10 = (const void **)MEMORY[0x263EFFB38];
              }
              CFDictionarySetValue(a2, @"USB_PRINTER_PLUGGED_IN", *v10);
              return (__CFString *)1;
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_2268A0610(const __CFDictionary *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  if (!a2) {
    return 0;
  }
  CFDataRef Value = (const __CFData *)CFDictionaryGetValue(a1, @"USB_PRINTER_ENTRY");
  if (!Value) {
    return 0;
  }
  CFDataRef v5 = Value;
  if (CFDataGetLength(Value) != 720) {
    return 0;
  }
  v10.locatiouint64_t n = 0;
  v10.CFIndex length = 720;
  CFDataGetBytes(v5, v10, (UInt8 *)a2);
  CFStringRef v6 = (const __CFString *)CFDictionaryGetValue(a1, @"USB_PRINTER_NAME");
  if (!v6) {
    return 0;
  }
  *(_OWORD *)(a2 + 136) = 0u;
  *(_OWORD *)(a2 + 168) = 0u;
  *(_OWORD *)(a2 + 184) = 0u;
  *(_OWORD *)(a2 + 152) = 0u;
  if (!CFStringGetCString(v6, (char *)(a2 + 136), 64, 0x8000100u)) {
    return 0;
  }
  CFStringRef v7 = (const __CFString *)CFDictionaryGetValue(a1, @"USB_PRINTER_UNIQUEID");
  if (!v7) {
    return 0;
  }
  *(_OWORD *)(a2 + 8) = 0u;
  uint64_t v8 = a2 + 8;
  *(_OWORD *)(v8 + 96) = 0u;
  *(_OWORD *)(v8 + 112) = 0u;
  *(_OWORD *)(v8 + 64) = 0u;
  *(_OWORD *)(v8 + 80) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_OWORD *)(v8 + 48) = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  return CFStringGetCString(v7, (char *)v8, 128, 0x8000100u) != 0;
}

CFStringRef sub_2268A0704(uint64_t a1, __CFDictionary *a2)
{
  CFStringRef result = 0;
  uint64_t v12 = *MEMORY[0x263EF8340];
  if (a1)
  {
    if (a2)
    {
      *(_OWORD *)cStr = 0u;
      long long v11 = 0u;
      CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFStringRef v6 = sub_22686714C(*(_DWORD *)a1, 0, cStr);
      CFStringRef result = CFStringCreateWithCString(v5, v6, 0x8000100u);
      if (result)
      {
        CFStringRef v7 = result;
        CFDictionarySetValue(a2, @"PORT_MAP_PRIV_IP", result);
        CFRelease(v7);
        *(_OWORD *)cStr = 0u;
        long long v11 = 0u;
        __sprintf_chk(cStr, 0, 0x20uLL, "%d", *(unsigned __int16 *)(a1 + 4));
        CFStringRef result = CFStringCreateWithCString(v5, cStr, 0x8000100u);
        if (result)
        {
          uint64_t v8 = result;
          CFDictionarySetValue(a2, @"PORT_MAP_PRIV_PORT", result);
          CFRelease(v8);
          *(_OWORD *)cStr = 0u;
          long long v11 = 0u;
          __sprintf_chk(cStr, 0, 0x20uLL, "%d", *(unsigned __int16 *)(a1 + 6));
          CFStringRef result = CFStringCreateWithCString(v5, cStr, 0x8000100u);
          if (result)
          {
            CFAllocatorRef v9 = result;
            CFDictionarySetValue(a2, @"PORT_MAP_PUB_PORT", result);
            CFRelease(v9);
            return (CFStringRef)1;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2268A0890(CFDictionaryRef theDict, uint64_t a2)
{
  uint64_t result = 0;
  uint64_t v12 = *MEMORY[0x263EF8340];
  if (theDict)
  {
    if (a2)
    {
      uint64_t result = (uint64_t)CFDictionaryGetValue(theDict, @"PORT_MAP_PRIV_IP");
      if (result)
      {
        long long v10 = 0u;
        long long v11 = 0u;
        uint64_t result = CFStringGetCString((CFStringRef)result, (char *)&v10, 32, 0x8000100u);
        if (result)
        {
          int v5 = sub_22686EA18((char *)&v10, 0, (unsigned int *)a2, 0, 0, 0, 0);
          uint64_t result = 0;
          if (!v5)
          {
            uint64_t result = (uint64_t)CFDictionaryGetValue(theDict, @"PORT_MAP_PRIV_PORT");
            if (result)
            {
              CFStringRef v6 = (const __CFString *)result;
              if (CFStringGetLength((CFStringRef)result))
              {
                long long v10 = 0u;
                long long v11 = 0u;
                uint64_t result = CFStringGetCString(v6, (char *)&v10, 32, 0x8000100u);
                if (!result) {
                  return result;
                }
                size_t v7 = strlen((const char *)&v10);
                *(_WORD *)(a2 + 4) = sub_22686F724((char *)&v10, v7, 10);
              }
              uint64_t result = (uint64_t)CFDictionaryGetValue(theDict, @"PORT_MAP_PUB_PORT");
              if (result)
              {
                CFStringRef v8 = (const __CFString *)result;
                if (!CFStringGetLength((CFStringRef)result)) {
                  return 1;
                }
                long long v10 = 0u;
                long long v11 = 0u;
                uint64_t result = CFStringGetCString(v8, (char *)&v10, 32, 0x8000100u);
                if (result)
                {
                  size_t v9 = strlen((const char *)&v10);
                  *(_WORD *)(a2 + 6) = sub_22686F724((char *)&v10, v9, 10);
                  return 1;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2268A0A24(char *__s1)
{
  if (!__s1) {
    return 0;
  }
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  do
  {
    uint64_t v5 = *(void *)((char *)&unk_2681469A0 + v2);
    unsigned int v6 = *(_DWORD *)((char *)&unk_2681469A0 + v2 + 8);
    if (!strncmp(__s1, (const char *)&v5, 2uLL) || !strncmp(__s1, (const char *)&v5 + 3, 3uLL)) {
      uint64_t v3 = v6;
    }
    v2 += 12;
  }
  while (v2 != 1956);
  return v3;
}

uint64_t sub_2268A0AD0(unsigned int *a1, __CFArray **a2)
{
  uint64_t v2 = 4294960591;
  if (a1 && a2)
  {
    uint64_t v4 = a1;
    if (*a1)
    {
      CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
      if (Mutable)
      {
        uint64_t v12 = Mutable;
        while (1)
        {
          uint64_t v13 = *v4;
          if (!v13) {
            break;
          }
          ++v4;
          uint64_t v14 = sub_226860774(v5, v12, (uint64_t)"%C", v7, v8, v9, v10, v11, v13);
          if (v14)
          {
            uint64_t v2 = v14;
            CFRelease(v12);
            return v2;
          }
        }
        uint64_t v2 = 0;
        *a2 = v12;
      }
      else
      {
        return 4294960568;
      }
    }
    else
    {
      return 4294960553;
    }
  }
  return v2;
}

__CFString *sub_2268A0BA0(unsigned int a1, int a2)
{
  return sub_22685D7D0(a1, a2, 0);
}

CFStringRef sub_2268A0BA8(int a1)
{
  CFAllocatorRef v1 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  uint64_t v2 = sub_22683C448(a1, v4);
  return CFStringCreateWithCString(v1, v2, 0x8000100u);
}

uint64_t sub_2268A0BF4(const __CFString *a1)
{
  unsigned int v5 = 0;
  std::string __s = 0;
  if (a1)
  {
    if (!sub_226861A84(a1, &__s))
    {
      uint64_t v2 = __s;
      if (__s)
      {
        size_t v3 = strlen(__s);
        if (!v3)
        {
LABEL_8:
          free(v2);
          return v5;
        }
        if (!sub_22683C470(__s, v3, &v5))
        {
          uint64_t v2 = __s;
          goto LABEL_8;
        }
      }
    }
  }
  return v5;
}

CFArrayRef sub_2268A0C6C(const __CFDictionary *a1, const __CFString *a2)
{
  CFArrayRef v2 = 0;
  long long v23 = 0;
  if (!a1 || !a2) {
    return v2;
  }
  CFTypeRef v21 = 0;
  uint64_t v22 = 0;
  CFTypeRef v20 = 0;
  if (CFDictionaryGetCount(a1) && !sub_2268623AC(a1, &v23))
  {
    CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
    if (Mutable)
    {
      if (!sub_22686244C((uint64_t *)v23, &v22, &v21))
      {
LABEL_18:
        CFIndex Count = CFArrayGetCount(Mutable);
        if (Count) {
          CFArrayRef v2 = Mutable;
        }
        else {
          CFArrayRef v2 = 0;
        }
        if (Count) {
          CFArrayRef Mutable = 0;
        }
        goto LABEL_6;
      }
      while (1)
      {
        sub_22686088C(a2, (uint64_t)&v20, (UInt8 *)"%kO", v8, v9, v10, v11, v12, v22);
        if (v13 == -6727) {
          goto LABEL_27;
        }
        if (v13) {
          break;
        }
        if (!CFEqual(v21, v20))
        {
LABEL_27:
          if (sub_226860774(v7, Mutable, (uint64_t)"%O", v14, v15, v16, v17, v18, v22)) {
            break;
          }
        }
        if (!sub_22686244C((uint64_t *)v23, &v22, &v21)) {
          goto LABEL_18;
        }
      }
    }
    CFArrayRef v2 = 0;
  }
  else
  {
    CFArrayRef v2 = 0;
    CFArrayRef Mutable = 0;
  }
LABEL_6:
  if (v23) {
    sub_226862440(v23);
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  return v2;
}

uint64_t sub_2268A0DCC(uint64_t a1, __CFArray **a2)
{
  uint64_t v106 = *MEMORY[0x263EF8340];
  unsigned int v101 = 0;
  CFTypeRef cf = 0;
  std::string __s = 0;
  CFTypeRef v98 = 0;
  BOOL v4 = sub_2268A58D0(a1, 1935819842);
  uint64_t v5 = 4294967292;
  if (!a1 || !a2) {
    goto LABEL_23;
  }
  BOOL v6 = v4;
  CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    uint64_t v5 = 4294967293;
    goto LABEL_23;
  }
  uint64_t v9 = Mutable;
  uint64_t v5 = sub_2268A55B8(a1, 1918979393, (CFMutableDictionaryRef *)&cf);
  if (v5) {
    goto LABEL_23;
  }
  std::string __s = 0;
  uint64_t v5 = sub_226861A84((const __CFString *)cf, &__s);
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (v5) {
    goto LABEL_23;
  }
  uint64_t v10 = __s;
  if (!__s) {
    goto LABEL_53;
  }
  uint64_t v105 = 0;
  *(_OWORD *)cStr = 0u;
  long long v104 = 0u;
  if (strlen(__s) == 17)
  {
    uint64_t v95 = __tolower(__s[9]);
    uint64_t v94 = __tolower(v10[10]);
    uint64_t v11 = __tolower(v10[12]);
    uint64_t v12 = __tolower(v10[13]);
    uint64_t v13 = __tolower(v10[15]);
    uint64_t v14 = __tolower(v10[16]);
    __sprintf_chk(cStr, 0, 0x28uLL, "Apple Network %c%c%c%c%c%c", v95, v94, v11, v12, v13, v14);
    uint64_t v10 = __s;
  }
  free(v10);
  if (!cStr[0])
  {
    uint64_t v5 = 4294967281;
    goto LABEL_23;
  }
  uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%s", v15, v16, v17, v18, v19, 1918979693);
  if (!v5)
  {
    uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%i", v20, v21, v22, v23, v24, 1651725133);
    if (!v5)
    {
      uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%i", v25, v26, v27, v28, v29, 1651723853);
      if (!v5)
      {
        uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%i", v30, v31, v32, v33, v34, 2003060332);
        if (!v5)
        {
          uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%i", v35, v36, v37, v38, v39, 1651720515);
          if (!v5)
          {
            uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=[]", v40, v41, v42, v43, v44, 2003061875);
            if (!v5)
            {
              if (sub_2268A58D0(a1, 1146569811) && sub_2268A58D0(a1, 1685540419))
              {
                int valuePtr = 0;
                sub_2268A7C60(v102, 0x15uLL);
                sub_22683C448(1685538412, v97);
                __strcat_chk();
                uint64_t v45 = sub_2268A54A8(a1, v102, (CFMutableDictionaryRef *)&v98);
                if (v45)
                {
                  uint64_t v5 = v45;
                  goto LABEL_23;
                }
                if (!CFNumberGetValue((CFNumberRef)v98, kCFNumberIntType, &valuePtr))
                {
                  uint64_t v5 = 0;
                  goto LABEL_23;
                }
                if (v98)
                {
                  CFRelease(v98);
                  CFTypeRef v98 = 0;
                }
                valuePtr &= ~2u;
                uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%i", v47, v48, v49, v50, v51, 1685538412);
                if (v5) {
                  goto LABEL_23;
                }
              }
              if (!sub_2268A58D0(a1, 825319779) && !v6) {
                sub_2268A58D0(a1, 942682734);
              }
              uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%i", v52, v53, v54, v55, v56, 1651718221);
              if (v5) {
                goto LABEL_23;
              }
              uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%i", v57, v58, v59, v60, v61, 1651724877);
              if (v5) {
                goto LABEL_23;
              }
              uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%i", v62, v63, v64, v65, v66, 1651722563);
              if (v5) {
                goto LABEL_23;
              }
              CFTypeRef cf = 0;
              uint64_t v5 = sub_2268A55B8(a1, 1684554343, (CFMutableDictionaryRef *)&cf);
              if (v5) {
                goto LABEL_23;
              }
              uint64_t v105 = 0;
              *(_OWORD *)cStr = 0u;
              long long v104 = 0u;
              std::string __s = 0;
              uint64_t v5 = sub_226861A84((const __CFString *)cf, &__s);
              if (cf)
              {
                CFRelease(cf);
                CFTypeRef cf = 0;
              }
              if (v5) {
                goto LABEL_23;
              }
              if (__s)
              {
                uint64_t v5 = sub_22686EA18(__s, 0, &v101, 0, 0, 0, 0);
                if (!v5)
                {
                  free(__s);
                  uint64_t v105 = 0;
                  *(_OWORD *)cStr = 0u;
                  long long v104 = 0u;
                  sub_22686714C(v101 - 1, 0, cStr);
                  CFTypeRef cf = CFStringCreateWithCString(v7, cStr, 0x8000100u);
                  if (!cf)
                  {
                    uint64_t v5 = 4294967293;
                    goto LABEL_25;
                  }
                  CFStringRef v67 = sub_2268A0BA8(1818315088);
                  if (v67)
                  {
                    CFStringRef v68 = v67;
                    CFDictionarySetValue(v9, v67, cf);
                    CFRelease(v68);
                    CFRelease(cf);
                    CFTypeRef cf = 0;
                    uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%O", v69, v70, v71, v72, v73, 2002864464);
                    if (!v5)
                    {
                      uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%O", v74, v75, v76, v77, v78, 2002867021);
                      if (!v5)
                      {
                        uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%O", v79, v80, v81, v82, v83, 2002866753);
                        if (!v5)
                        {
                          uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%O", v84, v85, v86, v87, v88, 2002863153);
                          if (!v5)
                          {
                            uint64_t v5 = sub_226860774(v7, v9, (uint64_t)"%kC=%O", v89, v90, v91, v92, v93, 2002863154);
                            if (!v5) {
                              *a2 = v9;
                            }
                          }
                        }
                      }
                    }
                  }
                  else
                  {
                    uint64_t v5 = 4294967292;
                  }
                }
                goto LABEL_23;
              }
LABEL_53:
              uint64_t v5 = 4294967270;
            }
          }
        }
      }
    }
  }
LABEL_23:
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
LABEL_25:
  if (v98) {
    CFRelease(v98);
  }
  return v5;
}

char *sub_2268A1408(const __CFString *a1, const __CFString *a2)
{
  std::string __s = 0;
  if (!a1) {
    return 0;
  }
  CFIndex Length = CFStringGetLength(a1);
  uint64_t v5 = 0;
  if (!a2 || !Length) {
    goto LABEL_8;
  }
  if (!CFStringGetLength(a2)) {
    goto LABEL_7;
  }
  sub_226861A84(a1, &__s);
  uint64_t v5 = __s;
  if (!__s) {
    return v5;
  }
  size_t v6 = strlen(__s);
  if (sub_22686F20C(__s, v6, 6, v10)) {
    goto LABEL_7;
  }
  free(__s);
  std::string __s = 0;
  sub_226861A84(a2, &__s);
  if (!__s) {
    return 0;
  }
  size_t v7 = strlen(__s);
  if (sub_22686F20C(__s, v7, 6, v9))
  {
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  uint64_t v5 = (char *)(sub_22686E4D4((uint64_t)v10, (uint64_t)v9) == 0);
LABEL_8:
  if (__s) {
    free(__s);
  }
  return v5;
}

void sub_2268A1508(const __CFString *a1, const __CFString *a2, CFPropertyListRef *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    if (a2)
    {
      if (a3)
      {
        CFArrayRef theArray = 0;
        sub_22686088C(a1, (uint64_t)&theArray, (UInt8 *)"%kO", a4, a5, a6, a7, a8, @"entries");
        if (!v10)
        {
          if (theArray)
          {
            CFIndex Count = CFArrayGetCount(theArray);
            if (Count)
            {
              CFIndex v17 = Count;
              if (Count >= 1)
              {
                for (uint64_t i = 0; v17 != i; ++i)
                {
                  CFStringRef v26 = 0;
                  CFPropertyListRef propertyList = 0;
                  sub_22686088C((const __CFString *)theArray, (uint64_t)&propertyList, (UInt8 *)"[*]", v12, v13, v14, v15, v16, i);
                  if (v24) {
                    break;
                  }
                  if (!propertyList) {
                    break;
                  }
                  sub_22686088C((const __CFString *)propertyList, (uint64_t)&v26, (UInt8 *)"%kO", v19, v20, v21, v22, v23, @"macAddress");
                  if (v25 || !v26) {
                    break;
                  }
                  if (sub_2268A1408(v26, a2))
                  {
                    if (propertyList) {
                      *a3 = CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], propertyList, 2uLL);
                    }
                    return;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_2268A1664(const __CFString *a1, const void *a2, CFIndex a3, uint64_t a4, const __CFString *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    if (a2)
    {
      if (a4)
      {
        if (a5)
        {
          CFArrayRef theArray = 0;
          sub_22686088C(a1, (uint64_t)&theArray, (UInt8 *)"%kO", a4, (uint64_t)a5, a6, a7, a8, @"entries");
          if (!v11)
          {
            if (theArray)
            {
              CFIndex Count = CFArrayGetCount(theArray);
              if (Count)
              {
                CFIndex v18 = Count;
                if (Count < 1)
                {
LABEL_25:
                  sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], theArray, (uint64_t)"{%kO=[%O]%kO=%O%kO=%i%kO=%O}", v13, v14, v15, v16, v17, @"wirelessAccessTimes");
                }
                else
                {
                  uint64_t v19 = 0;
                  while (1)
                  {
                    CFStringRef v34 = 0;
                    CFArrayRef v35 = 0;
                    sub_22686088C((const __CFString *)theArray, (uint64_t)&v35, (UInt8 *)"[*]", v13, v14, v15, v16, v17, v19);
                    if (v25) {
                      break;
                    }
                    if (!v35) {
                      break;
                    }
                    sub_22686088C((const __CFString *)v35, (uint64_t)&v34, (UInt8 *)"%kO", v20, v21, v22, v23, v24, @"macAddress");
                    if (v26 || !v34) {
                      break;
                    }
                    if (sub_2268A1408(v34, a5))
                    {
                      uint64_t v27 = (__CFString *)v35;
                      if (!v35) {
                        goto LABEL_25;
                      }
                      CFArrayRef v35 = 0;
                      sub_22686088C(v27, (uint64_t)&v35, (UInt8 *)"%kO", v13, v14, v15, v16, v17, @"wirelessAccessTimes");
                      if (!v33 && v35)
                      {
                        if (a3 == -2)
                        {
                          sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], (__CFArray *)v27, (uint64_t)"%kO=[%O]", v28, v29, v30, v31, v32, @"wirelessAccessTimes");
                        }
                        else if (a3 == -1)
                        {
                          sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], v35, (uint64_t)"%O", v28, v29, v30, v31, v32, (uint64_t)a2);
                        }
                        else if (CFArrayGetCount(v35) > a3)
                        {
                          CFArraySetValueAtIndex(v35, a3, a2);
                        }
                      }
                      return;
                    }
                    if (v18 == ++v19) {
                      goto LABEL_25;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

BOOL sub_2268A18A8(const __CFString *a1, const __CFString *a2)
{
  BOOL v2 = 0;
  uint64_t v15 = 0;
  uint64_t v9 = 0;
  if (a1 && a2)
  {
    uint64_t v16 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    int v11 = 0;
    uint64_t v12 = 0;
    int v10 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v6 = 0;
    int v5 = 0;
    BOOL v2 = 0;
    if (!sub_226861988(a1, (const char **)&v16, &v15)) {
      BOOL v2 = !sub_226861988(a2, (const char **)&v10, (UInt8 **)&v9)
    }
        && !sub_226871160((unsigned __int8 *)v16, (int *)&v14 + 1)
        && !sub_226871160((unsigned __int8 *)v10, (int *)&v8 + 1)
        && HIDWORD(v14) == HIDWORD(v8)
        && !sub_2268713E8((unsigned __int8 *)v16, &v14, (_DWORD *)&v13 + 1, &v13, (_DWORD *)&v12 + 1, &v12, &v11)&& !sub_2268713E8((unsigned __int8 *)v10, &v8, (_DWORD *)&v7 + 1, &v7, (_DWORD *)&v6 + 1, &v6, &v5)&& v14 == v8&& v13 == v7&& v12 == v6&& v11 == v5;
    if (v15)
    {
      free(v15);
      uint64_t v15 = 0;
    }
    if (v9) {
      free(v9);
    }
  }
  return v2;
}

CFArrayRef sub_2268A1A2C(CFArrayRef result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result)
  {
    CFArrayRef theArray = 0;
    sub_22686088C((const __CFString *)result, (uint64_t)&theArray, (UInt8 *)"%kO", a4, a5, a6, a7, a8, @"wirelessAccessTimes");
    if (v8) {
      return 0;
    }
    uint64_t result = theArray;
    if (theArray)
    {
      CFIndex Count = CFArrayGetCount(theArray);
      if (Count >= 1)
      {
        CFIndex v15 = Count;
        uint64_t v16 = 0;
        while (1)
        {
          CFStringRef v18 = 0;
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v18, (UInt8 *)"[*]", v10, v11, v12, v13, v14, v16);
          if (v17) {
            break;
          }
          uint64_t result = (CFArrayRef)v18;
          if (!v18) {
            return result;
          }
          uint64_t result = (CFArrayRef)sub_2268A18A8(v18, @"days=mtwtfss;t=0-0");
          if (result) {
            return (CFArrayRef)1;
          }
          if (v15 == ++v16) {
            return result;
          }
        }
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_2268A1AFC(__CFArray *a1, int a2)
{
  uint64_t result = 4294967292;
  if (a1 && a2)
  {
    if (sub_2268A1B78(a1, a2) == -1) {
      return sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], a1, (uint64_t)"{%kO=%C}", v4, v5, v6, v7, v8, @"code");
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2268A1B78(const __CFArray *a1, int a2)
{
  int v13 = 0;
  if (a1)
  {
    CFIndex Count = CFArrayGetCount(a1);
    if (Count >= 1)
    {
      CFIndex v10 = Count;
      for (uint64_t i = 0; i != v10; ++i)
      {
        sub_22686088C((const __CFString *)a1, (uint64_t)&v13, (UInt8 *)"[*].%kO:code", v5, v6, v7, v8, v9, i);
        if (!v13) {
          break;
        }
        if (v13 == a2) {
          return i;
        }
      }
    }
  }
  return -1;
}

uint64_t sub_2268A1C18(const __CFArray *a1, int a2)
{
  uint64_t result = 4294967292;
  if (a1 && a2)
  {
    CFIndex v4 = sub_2268A1B78(a1, a2);
    if (v4 != -1) {
      CFArrayRemoveValueAtIndex(a1, v4);
    }
    return 0;
  }
  return result;
}

void sub_2268A1C64(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    CFTypeID v10 = CFGetTypeID(a1);
    if (v10 == CFArrayGetTypeID())
    {
      CFIndex Count = CFArrayGetCount((CFArrayRef)a1);
      if (Count >= 1)
      {
        CFIndex v17 = Count;
        uint64_t v18 = 0;
        while (1)
        {
          char v24 = 0;
          sub_22686088C(a1, (uint64_t)&v24, (UInt8 *)"[*].%ks:BOOL", v12, v13, v14, v15, v16, v18);
          if (v19 != -6727 && v24 != 0) {
            break;
          }
          if (v17 == ++v18) {
            return;
          }
        }
        if (!v19)
        {
          if (!a2 || (sub_22686088C(a1, a2, (UInt8 *)"[*].%ks.[0].%ks:int", v12, v13, v14, v15, v16, v18), !v21))
          {
            if (!a3 || (sub_22686088C(a1, a3, (UInt8 *)"[*].%ks.[0].%ks:int", v12, v13, v14, v15, v16, v18), !v22))
            {
              if (!a4 || (sub_22686088C(a1, a4, (UInt8 *)"[*].%ks.[0].%ks:int", v12, v13, v14, v15, v16, v18), !v23))
              {
                if (a5) {
                  sub_22686088C(a1, a5, (UInt8 *)"[*].%ks.[0].%ks:int", v12, v13, v14, v15, v16, v18);
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2268A1E14(const __CFArray *a1, const __CFArray *a2, __CFString **a3)
{
  uint64_t v3 = 4294960591;
  if (!a1) {
    return v3;
  }
  if (!a2) {
    return v3;
  }
  if (!a3) {
    return v3;
  }
  CFIndex Count = CFArrayGetCount(a1);
  CFIndex v8 = CFArrayGetCount(a2);
  uint64_t v3 = 4294960569;
  if (!Count) {
    return v3;
  }
  uint64_t v9 = v8;
  if (!v8) {
    return v3;
  }
  CFAllocatorRef v43 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable) {
    return 4294960568;
  }
  uint64_t v16 = (__CFString *)Mutable;
  CFStringRef v47 = 0;
  CFStringRef v48 = 0;
  if (Count >= 1)
  {
    for (uint64_t i = 0; i != Count; ++i)
    {
      sub_22686088C((const __CFString *)a1, (uint64_t)&v48, (UInt8 *)"[*]", v11, v12, v13, v14, v15, i);
      if (v18)
      {
        uint64_t v3 = v18;
        goto LABEL_38;
      }
      CFDataRef v19 = (const __CFData *)sub_2269018B0((uint64_t)v48);
      if (v19)
      {
        uint64_t v20 = (UInt8 *)v19;
        if (CFDataGetLength(v19))
        {
          int v21 = sub_2268A20B0(v20);
          if (!v21)
          {
            uint64_t v3 = 4294960568;
            goto LABEL_38;
          }
          CFStringRef v27 = (const __CFString *)v21;
          if (v9 >= 1)
          {
            uint64_t v28 = 0;
            while (1)
            {
              uint64_t v45 = 0;
              CFStringRef v46 = 0;
              uint64_t v44 = 0;
              sub_22686088C((const __CFString *)a2, (uint64_t)&v46, (UInt8 *)"[*]", v22, v23, v24, v25, v26, v28);
              if (v29) {
                break;
              }
              if (!v46) {
                goto LABEL_34;
              }
              sub_22686088C(v46, (uint64_t)&v47, (UInt8 *)"%kO", v30, v31, v32, v33, v34, @"raMA");
              if (!v47) {
                goto LABEL_34;
              }
              if (sub_2268A1408(v47, v27))
              {
                sub_22686088C(v16, (uint64_t)&v45, (UInt8 *)"%kO", v22, v23, v24, v25, v26, (uint64_t)v47);
                uint64_t v3 = v40;
                if (v40 == -6727) {
                  uint64_t v3 = sub_226860774(v43, (__CFArray *)v16, (uint64_t)"%kO=[%@]", v35, v36, v37, v38, v39, (uint64_t)v47);
                }
                if (v3) {
                  goto LABEL_37;
                }
                if (!v45) {
                  goto LABEL_34;
                }
                sub_22686088C(v48, (uint64_t)&v44, (UInt8 *)"%kO", v35, v36, v37, v38, v39, @"SSID_STR");
                if (v41 != -6727)
                {
                  uint64_t v3 = v41;
                  if (v41) {
                    goto LABEL_37;
                  }
                  if (!v44)
                  {
LABEL_34:
                    uint64_t v3 = 4294960568;
                    goto LABEL_37;
                  }
                  uint64_t v29 = sub_226860774(v43, v45, (uint64_t)"%O", v22, v23, v24, v25, v26, v44);
                  if (!v29) {
                    goto LABEL_29;
                  }
                  break;
                }
              }
              if (v9 == ++v28) {
                goto LABEL_29;
              }
            }
            uint64_t v3 = v29;
LABEL_37:
            CFRelease(v27);
LABEL_38:
            CFRelease(v16);
            return v3;
          }
LABEL_29:
          CFRelease(v27);
        }
      }
    }
  }
  if (!CFDictionaryGetCount((CFDictionaryRef)v16))
  {
    uint64_t v3 = 4294960569;
    goto LABEL_38;
  }
  uint64_t v3 = 0;
  *a3 = v16;
  return v3;
}

UInt8 *sub_2268A20B0(UInt8 *result)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (result)
  {
    CFDataRef v1 = (const __CFData *)result;
    CFTypeID v2 = CFGetTypeID(result);
    if (v2 == CFDataGetTypeID())
    {
      uint64_t result = (UInt8 *)CFDataGetBytePtr(v1);
      if (result)
      {
        CFAllocatorRef v3 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
        CFIndex v4 = sub_22686F33C(result, 6, v5);
        return (UInt8 *)CFStringCreateWithCString(v3, v4, 0x8000100u);
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_2268A215C(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v21 = 0;
  if (a1)
  {
    CFTypeID v8 = CFGetTypeID(a1);
    if (v8 == CFArrayGetTypeID())
    {
      CFIndex Count = CFArrayGetCount((CFArrayRef)a1);
      if (Count >= 1)
      {
        CFIndex v15 = Count;
        uint64_t v16 = 0;
        while (1)
        {
          sub_22686088C(a1, (uint64_t)&v21, (UInt8 *)"[*].%ks:BOOL", v10, v11, v12, v13, v14, v16);
          if (!v17 && v21 != 0) {
            break;
          }
          if (v15 == ++v16) {
            return;
          }
        }
        if (!a2 || (sub_22686088C(a1, a2, (UInt8 *)"[*].%ks.[0].%ks:obj", v10, v11, v12, v13, v14, v16), !v19))
        {
          if (!a3 || (sub_22686088C(a1, a3, (UInt8 *)"[*].%ks.[0].%ks:obj", v10, v11, v12, v13, v14, v16), !v20))
          {
            if (a4) {
              sub_22686088C(a1, a4, (UInt8 *)"[*].%ks.[0].%ks:obj", v10, v11, v12, v13, v14, v16);
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2268A22CC(uint64_t a1)
{
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 24) = 0;
  if (*(_DWORD *)a1) {
    operator new();
  }
  if ((*(_DWORD *)a1 & 4) == 0) {
    return 0;
  }

  return sub_22683C738(2, 0, (void *)(a1 + 16));
}

void sub_2268A2368(_Unwind_Exception *a1)
{
  MEMORY[0x22A65AC10](v1, 0x10F3C40C1DAC261);
  _Unwind_Resume(a1);
}

int *sub_2268A238C(int *result)
{
  if (result)
  {
    uint64_t v1 = result;
    CFTypeID v2 = (unsigned __int8 *)*((void *)result + 3);
    if (v2)
    {
      sub_22683F080(v2);
      *((void *)v1 + 3) = 0;
    }
    int v3 = *v1;
    if (*v1)
    {
      uint64_t v4 = *((void *)v1 + 1);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        *((void *)v1 + 1) = 0;
        int v3 = *v1;
      }
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v5 = (void *)*((void *)v1 + 2);
      if (v5)
      {
        sub_22683C7D8(v5);
        *((void *)v1 + 2) = 0;
      }
    }
    JUMPOUT(0x22A65AC10);
  }
  return result;
}

uint64_t sub_2268A243C(uint64_t a1)
{
  if (a1)
  {
    if ((byte_2681482D0 & 1) == 0)
    {
      sub_2268C5F90();
      byte_2681482D0 = 1;
    }
    operator new();
  }
  return 4294967292;
}

uint64_t sub_2268A2580(uint64_t a1, uint64_t a2)
{
  if ((byte_2681482D0 & 1) == 0)
  {
    sub_2268C5F90();
    byte_2681482D0 = 1;
  }
  if (a1 && a2) {
    operator new();
  }
  sub_2268A238C(0);
  return 4294967292;
}

void sub_2268A26E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A2704(uint64_t a1, const void *a2)
{
  uint64_t result = 4294960591;
  if (a1)
  {
    if (a2)
    {
      sub_226879F80(*(void *)(a1 + 8), a2);
      return 0;
    }
  }
  return result;
}

uint64_t sub_2268A2738(uint64_t a1, const __CFString *a2, int a3)
{
  uint64_t v14 = 0;
  uint64_t v3 = 4294960591;
  if (!a1 || !a2) {
    return v3;
  }
  uint64_t v12 = 0;
  CFTypeRef cf = 0;
  CFDataRef data = 0;
  uint64_t v11 = 0;
  if (pthread_main_np())
  {
    uint64_t v3 = 4294960593;
  }
  else
  {
    uint64_t v3 = sub_226861988(a2, &v12, (UInt8 **)&v11);
    if (!v3)
    {
      uint64_t v3 = sub_2268617FC(v12, &data);
      if (v11)
      {
        free(v11);
        uint64_t v11 = 0;
      }
      if (!v3)
      {
        if (!data) {
          goto LABEL_22;
        }
        CFStringRef v7 = (const __CFString *)CFPropertyListCreateWithData(0, data, 0, 0, 0);
        if (data)
        {
          CFRelease(data);
          CFDataRef data = 0;
        }
        if (!v7) {
          goto LABEL_22;
        }
        CFTypeID v8 = sub_2268C7110(v7);
        CFRelease(v7);
        if (!v8) {
          goto LABEL_22;
        }
        uint64_t v3 = sub_2268A2580((uint64_t)&v14, (uint64_t)v8);
        CFRelease(v8);
        if (v3) {
          goto LABEL_23;
        }
        if (!v14) {
          return 4294960568;
        }
        uint64_t v3 = sub_2268A28C8((uint64_t)v14);
        if (v3) {
          goto LABEL_23;
        }
        if (!v14) {
          return 4294960591;
        }
        uint64_t v3 = sub_226889518(*((void *)v14 + 1), &cf);
        if (v3) {
          goto LABEL_23;
        }
        if (cf)
        {
          uint64_t v3 = sub_22688A314(*(void *)(a1 + 8), (CFDictionaryRef)cf, (const __CFString *)cf, a3 != 0);
          if (cf)
          {
            CFRelease(cf);
            CFTypeRef cf = 0;
          }
        }
        else
        {
LABEL_22:
          uint64_t v3 = 4294960568;
        }
      }
    }
  }
LABEL_23:
  if (v14) {
    sub_2268A238C(v14);
  }
  return v3;
}

uint64_t sub_2268A28C8(uint64_t a1)
{
  if (!a1) {
    return 4294967292;
  }
  sub_22687A554(*(void *)(a1 + 8), 1);
  if (!sub_22687CBC8(*(void *)(a1 + 8), 1400460148)) {
    sub_2268A7DDC(a1);
  }
  for (uint64_t i = 0; i != 300; ++i)
  {
    if (sub_2268888D0(*(void *)(a1 + 8), dword_268147188[i])) {
      sub_2268A7AF0(a1, dword_268147188[i]);
    }
  }
  return 0;
}

uint64_t sub_2268A2960(uint64_t a1, const __CFString *a2, CFDictionaryRef theDict, int a4)
{
  if (a1) {
    return sub_22688A314(*(void *)(a1 + 8), theDict, a2, a4 != 0);
  }
  else {
    return 4294967292;
  }
}

uint64_t sub_2268A2988(uint64_t a1, const void *a2)
{
  uint64_t v9 = 0;
  uint64_t v2 = 4294960591;
  if (a1 && a2)
  {
    CFStringRef v10 = 0;
    CFStringRef v11 = 0;
    uint64_t v2 = sub_2268623AC(a2, &v9);
    if (!v2)
    {
      if (!v9) {
        return 4294960568;
      }
      while (sub_22686244C((uint64_t *)v9, &v10, &v11))
      {
        int v4 = sub_2268A0BF4(v10);
        CFStringRef v5 = v11;
        uint64_t v6 = sub_22683C448(v4, v12);
        uint64_t v7 = sub_2268A53BC(a1, v6, v5);
        if (v7) {
          goto LABEL_10;
        }
      }
      uint64_t v7 = sub_2268A28C8(a1);
LABEL_10:
      uint64_t v2 = v7;
    }
    if (v9) {
      sub_226862440(v9);
    }
  }
  return v2;
}

unsigned __int8 *sub_2268A2A48(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 **)(a1 + 24);
  if (result)
  {
    uint64_t result = (unsigned __int8 *)sub_22683F080(result);
    *(void *)(a1 + 24) = 0;
  }
  if ((*(unsigned char *)a1 & 4) != 0)
  {
    uint64_t result = *(unsigned __int8 **)(a1 + 16);
    if (result)
    {
      return (unsigned __int8 *)sub_22683C89C((uint64_t)result);
    }
  }
  return result;
}

uint64_t sub_2268A2AA8(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t result = *(void *)(result + 24);
    if (result)
    {
      uint64_t result = sub_22683F080((unsigned __int8 *)result);
      *(void *)(v1 + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_2268A2AE0(uint64_t a1, const __CFArray *a2, int a3)
{
  if (!a1) {
    return 4294967292;
  }
  uint64_t result = sub_2268A2B38(*(void *)(a1 + 16), a2, a3, *(const std::string **)(a1 + 8));
  if (!result)
  {
    return sub_2268A3590(a1);
  }
  return result;
}

uint64_t sub_2268A2B38(uint64_t a1, const __CFArray *a2, int a3, const std::string *a4)
{
  unsigned int v74 = 0;
  int v8 = sub_22683C8DC(a1);
  CFTypeRef cf = 0;
  unint64_t v73 = 0;
  uint64_t v71 = 0;
  int v70 = 0;
  memset(&v69, 0, sizeof(v69));
  memset(&v68, 0, sizeof(v68));
  uint64_t v9 = sub_22687AB24((uint64_t)a4, 1937326416, &v70, 0);
  if (!v9)
  {
    if (v70 == 102 || v70 == 3)
    {
      uint64_t v10 = v8 & 0xFFFFF3FF | 0x800;
    }
    else if (a3)
    {
      uint64_t v10 = v8 & 0xFFFFF3FF | 0x400;
    }
    else
    {
      uint64_t v10 = v8 & 0xFFFFFBFF;
    }
    sub_22683C8E4(a1, v10);
    sub_22687DAD8((uint64_t)a4, 0, v11, v12, v13, v14, v15, &__str);
    std::string::operator=(&v69, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v68, a4 + 5);
    int v20 = (v69.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v69
        : (std::string *)v69.__r_.__value_.__r.__words[0];
    char v21 = (v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v68
        : (std::string *)v68.__r_.__value_.__r.__words[0];
    uint64_t v9 = sub_22683C8EC(a1, (char *)v20, v21, v10, v16, v17, v18, v19);
    if (!v9)
    {
      unint64_t v79 = 0;
      v80[0] = 0;
      CFStringRef v78 = 0;
      memset(&__str, 0, sizeof(__str));
      memset(&v76, 0, sizeof(v76));
      sub_22687DAD8((uint64_t)a4, 0, v22, v23, v24, v25, v26, &v75);
      std::string::operator=(&__str, &v75);
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v75.__r_.__value_.__l.__data_);
      }
      std::string::operator=(&v76, a4 + 5);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_str = &__str;
      }
      else {
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v28 = &v76;
      }
      else {
        uint64_t v28 = (std::string *)v76.__r_.__value_.__r.__words[0];
      }
      uint64_t v29 = sub_22683D588(a1, 4, 60000, (char *)p_str, (char *)v28, 1717920116, v80, &v79);
      uint64_t v9 = v29;
      if (v29 == -16) {
        goto LABEL_86;
      }
      if (!v29)
      {
        uint64_t v9 = sub_22683F308(1717920116, (unsigned __int8 *)v80[0], v79, 1, &v78);
        if (v9) {
          goto LABEL_86;
        }
        if (!v78) {
          goto LABEL_85;
        }
        uint64_t v9 = sub_22687AF44((uint64_t)a4, 1717920116, v78, 2);
        if (v78)
        {
          CFRelease(v78);
          CFStringRef v78 = 0;
        }
        if (v9) {
          goto LABEL_86;
        }
        free(v80[0]);
        v80[0] = 0;
      }
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v30 = &__str;
      }
      else {
        uint64_t v30 = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v31 = &v76;
      }
      else {
        uint64_t v31 = (std::string *)v76.__r_.__value_.__r.__words[0];
      }
      if (!sub_22683D588(a1, 4, 60000, (char *)v30, (char *)v31, 1717907505, v80, &v79))
      {
        uint64_t v9 = sub_22683F308(1717907505, (unsigned __int8 *)v80[0], v79, 1, &v78);
        if (v9) {
          goto LABEL_86;
        }
        if (!v78) {
          goto LABEL_85;
        }
        uint64_t v9 = sub_22687AF44((uint64_t)a4, 1717907505, v78, 2);
        if (v78)
        {
          CFRelease(v78);
          CFStringRef v78 = 0;
        }
        if (v9) {
          goto LABEL_86;
        }
        free(v80[0]);
        v80[0] = 0;
      }
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v32 = &__str;
      }
      else {
        uint64_t v32 = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v33 = &v76;
      }
      else {
        uint64_t v33 = (std::string *)v76.__r_.__value_.__r.__words[0];
      }
      if (!sub_22683D588(a1, 4, 60000, (char *)v32, (char *)v33, 1752641585, v80, &v79))
      {
        uint64_t v9 = sub_22683F308(1752641585, (unsigned __int8 *)v80[0], v79, 1, &v78);
        if (v9) {
          goto LABEL_86;
        }
        if (!v78) {
          goto LABEL_85;
        }
        uint64_t v9 = sub_22687AF44((uint64_t)a4, 1752641585, v78, 2);
        if (v78)
        {
          CFRelease(v78);
          CFStringRef v78 = 0;
        }
        if (v9) {
          goto LABEL_86;
        }
        free(v80[0]);
        v80[0] = 0;
      }
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v34 = &__str;
      }
      else {
        uint64_t v34 = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v35 = &v76;
      }
      else {
        uint64_t v35 = (std::string *)v76.__r_.__value_.__r.__words[0];
      }
      if (!sub_22683D588(a1, 4, 60000, (char *)v34, (char *)v35, 1937326416, v80, &v79))
      {
        uint64_t v9 = sub_22683F308(1937326416, (unsigned __int8 *)v80[0], v79, 1, &v78);
        if (v9) {
          goto LABEL_86;
        }
        if (!v78) {
          goto LABEL_85;
        }
        uint64_t v9 = sub_22687AF44((uint64_t)a4, 1937326416, v78, 2);
        if (v78)
        {
          CFRelease(v78);
          CFStringRef v78 = 0;
        }
        if (v9) {
          goto LABEL_86;
        }
        free(v80[0]);
        v80[0] = 0;
      }
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v36 = &__str;
      }
      else {
        uint64_t v36 = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v37 = &v76;
      }
      else {
        uint64_t v37 = (std::string *)v76.__r_.__value_.__r.__words[0];
      }
      uint64_t v9 = sub_22683D588(a1, 4, 60000, (char *)v36, (char *)v37, 1937327724, v80, &v79);
      if (v9) {
        goto LABEL_86;
      }
      uint64_t v9 = sub_22683F308(1937327724, (unsigned __int8 *)v80[0], v79, 1, &v78);
      if (v9) {
        goto LABEL_86;
      }
      if (v78)
      {
        uint64_t v9 = sub_22687AF44((uint64_t)a4, 1937327724, v78, 2);
        if (v78)
        {
          CFRelease(v78);
          CFStringRef v78 = 0;
        }
        if (!v9)
        {
          free(v80[0]);
          v80[0] = 0;
LABEL_88:
          if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v76.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(__str.__r_.__value_.__l.__data_);
            if (v9) {
              goto LABEL_120;
            }
          }
          else if (v9)
          {
            goto LABEL_120;
          }
          sub_22687A554((uint64_t)a4, 0);
          if (!a2) {
            goto LABEL_99;
          }
          if (sub_22687CBC8((uint64_t)a4, 2003390540)) {
            goto LABEL_96;
          }
          CFStringRef v40 = sub_2268A0BA8(1466517097);
          if (!v40)
          {
LABEL_119:
            uint64_t v9 = 4294967293;
            goto LABEL_120;
          }
          v81.CFIndex length = CFArrayGetCount(a2);
          v81.locatiouint64_t n = 0;
          int v41 = CFArrayContainsValue(a2, v81, v40);
          CFRelease(v40);
          if (!v41)
          {
LABEL_96:
            CFIndex Count = CFArrayGetCount(a2);
            char v39 = 0;
            unint64_t v73 = Count;
          }
          else
          {
LABEL_99:
            sub_226889CCC((uint64_t)a4, &v71, &v73);
            a2 = 0;
            char v39 = 1;
            CFIndex Count = v73;
          }
          if (!Count)
          {
            uint64_t v9 = 0;
            goto LABEL_120;
          }
          uint64_t v42 = (int *)malloc_type_malloc(12 * Count, 0x10000403E1C8BA9uLL);
          CFStringRef v48 = v42;
          if (v42)
          {
            unint64_t v49 = v73;
            CFStringRef v67 = v42;
            if (!v73) {
              goto LABEL_112;
            }
            uint64_t v50 = 0;
            uint64_t v51 = 0;
            unint64_t v52 = 0;
            while (1)
            {
              if (v39)
              {
                *CFStringRef v48 = *(_DWORD *)(v71 + v50);
              }
              else
              {
                sub_22686088C((const __CFString *)a2, (uint64_t)v48, (UInt8 *)"[*]:code", v43, v44, v45, v46, v47, v52);
                uint64_t v9 = v53;
                if (v53) {
                  goto LABEL_117;
                }
                if (!sub_2268880B8((uint64_t)a4, *v48))
                {
                  ++v51;
                  goto LABEL_110;
                }
              }
              v48[1] = 0;
              v48[2] = 0;
              v48 += 3;
LABEL_110:
              ++v52;
              v50 += 12;
              if (v52 >= v73)
              {
                unint64_t v49 = v73 - v51;
                CFStringRef v48 = v67;
LABEL_112:
                unint64_t v73 = v49;
                std::string::operator=(&v68, a4 + 5);
                if ((v68.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v54 = &v68;
                }
                else {
                  uint64_t v54 = (std::string *)v68.__r_.__value_.__r.__words[0];
                }
                uint64_t v9 = sub_22683D830(a1, 4, (const char *)v54, v73, v48);
                if (v9 || (uint64_t v9 = sub_22683D920(a1, 0, 60000, 0), v9))
                {
LABEL_117:
                  free(v67);
                  goto LABEL_120;
                }
                while (2)
                {
                  LODWORD(v76.__r_.__value_.__r.__words[1]) = 0;
                  v76.__r_.__value_.__r.__words[0] = 0;
                  uint64_t v9 = sub_22683DA24(a1, 0, 60000, (int8x8_t *)&v76);
                  if (v9) {
                    goto LABEL_117;
                  }
                  uint64_t data_low = LODWORD(v76.__r_.__value_.__l.__data_);
                  if (LODWORD(v76.__r_.__value_.__l.__data_) && (v76.__r_.__value_.__s.__data_[4] & 1) == 0)
                  {
                    memset(&__str, 0, sizeof(__str));
                    sub_22688A2EC((unint64_t *)&__str, LODWORD(v76.__r_.__value_.__r.__words[1]));
                    if (LODWORD(v76.__r_.__value_.__r.__words[1]))
                    {
                      uint64_t v9 = sub_22683DA84(a1, 0, 60000, LODWORD(v76.__r_.__value_.__r.__words[1]), __str.__r_.__value_.__l.__data_);
                      if (!v9)
                      {
                        if ((v76.__r_.__value_.__s.__data_[4] & 2) != 0) {
                          sub_22683C014(LODWORD(v76.__r_.__value_.__r.__words[1]), (uint64_t)__str.__r_.__value_.__l.__data_);
                        }
                        uint64_t v9 = sub_22683F308((int)v76.__r_.__value_.__l.__data_, (unsigned __int8 *)__str.__r_.__value_.__l.__data_, LODWORD(v76.__r_.__value_.__r.__words[1]), 1, (CFStringRef *)&cf);
                        if (!v9)
                        {
LABEL_146:
                          uint64_t v9 = sub_22687CE78((uint64_t)a4, LODWORD(v76.__r_.__value_.__l.__data_), (const __CFString *)cf, 2);
                          if (v9) {
                            goto LABEL_147;
                          }
                          CFRelease(cf);
                          int v65 = 0;
                          uint64_t v9 = 0;
                          CFTypeRef cf = 0;
                          char v66 = 1;
LABEL_148:
                          if (__str.__r_.__value_.__r.__words[0])
                          {
                            __str.__r_.__value_.__l.__size_ = __str.__r_.__value_.__r.__words[0];
                            operator delete(__str.__r_.__value_.__l.__data_);
                          }
                          if ((v66 & 1) == 0)
                          {
LABEL_143:
                            if (v65) {
                              goto LABEL_117;
                            }
                            continue;
                          }
LABEL_142:
                          int v65 = 0;
                          goto LABEL_143;
                        }
                      }
                    }
                    else
                    {
                      uint64_t v9 = sub_22683F308((int)v76.__r_.__value_.__l.__data_, 0, 0, 1, (CFStringRef *)&cf);
                      if (!v9) {
                        goto LABEL_146;
                      }
                    }
LABEL_147:
                    char v66 = 0;
                    int v65 = 6;
                    goto LABEL_148;
                  }
                  break;
                }
                unsigned int v74 = 0;
                if (LODWORD(v76.__r_.__value_.__r.__words[1]) != 4)
                {
                  if (dword_268147148 <= 8000)
                  {
                    if (dword_268147148 != -1) {
                      goto LABEL_157;
                    }
                    if (sub_226865630((uint64_t)&dword_268147148, 0x1F40u))
                    {
                      uint64_t data_low = LODWORD(v76.__r_.__value_.__l.__data_);
LABEL_157:
                      sub_226865EB4((uint64_t)&dword_268147148, (uint64_t)"ACPStatus _BSReadConfiguration(ACPClientRef, CFArrayRef, Boolean, BaseStation *)", 8000, (uint64_t)"bad property size (code='%C', expected=%u, actual=%u)\n", v56, v57, v58, v59, data_low);
                    }
                  }
                  uint64_t v9 = 4294960553;
                  goto LABEL_117;
                }
                uint64_t v9 = sub_22683DA84(a1, 0, 60000, 4, (char *)&v74);
                if (v9) {
                  goto LABEL_117;
                }
                unsigned int v74 = bswap32(v74);
                if (dword_268147148 <= 8000
                  && (dword_268147148 != -1 || sub_226865630((uint64_t)&dword_268147148, 0x1F40u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147148, (uint64_t)"ACPStatus _BSReadConfiguration(ACPClientRef, CFArrayRef, Boolean, BaseStation *)", 8000, (uint64_t)"read property error (code='%C' error = %m)\n", v61, v62, v63, v64, LODWORD(v76.__r_.__value_.__l.__data_));
                }
                if (!LODWORD(v76.__r_.__value_.__l.__data_))
                {
                  sub_22687A554((uint64_t)a4, 1);
                  uint64_t v9 = 0;
                  a4[9].__r_.__value_.__s.__data_[10] = 1;
                  goto LABEL_117;
                }
                uint64_t v9 = 0;
                goto LABEL_142;
              }
            }
          }
          goto LABEL_119;
        }
LABEL_86:
        if (v80[0]) {
          free(v80[0]);
        }
        goto LABEL_88;
      }
LABEL_85:
      uint64_t v9 = 4294960568;
      goto LABEL_86;
    }
  }
LABEL_120:
  sub_22683D35C(a1);
  if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v68.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v69.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_2268A34F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A3590(uint64_t a1)
{
  CFTypeRef cf = 0;
  if (!a1) {
    return 0;
  }
  if (sub_22687CBC8(*(void *)(a1 + 8), 2003390540))
  {
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%kO=[{%@}]}", v2, v3, v4, v5, v6, @"radios");
    if (!v7)
    {
      uint64_t v7 = sub_2268A8C90(a1, 0, 1918979693);
      if (!v7)
      {
        uint64_t v7 = sub_2268A8C90(a1, 0, 1918976876);
        if (!v7)
        {
          uint64_t v8 = sub_2268A8C90(a1, 0, 1918980971);
          if (v8 == -6727 || (uint64_t v7 = v8, !v8) || v8 == -5)
          {
            uint64_t v7 = sub_2268A8C90(a1, 0, 1918981965);
            if (!v7)
            {
              uint64_t v7 = sub_2268A8C90(a1, 0, 1918977345);
              if (!v7)
              {
                uint64_t v10 = sub_2268A8C90(a1, 0, 1918976882);
                if (v10 == -6727 || (uint64_t v7 = v10, !v10) || v10 == -5)
                {
                  uint64_t v11 = sub_2268A8C90(a1, 0, 1918981957);
                  if (v11 == -6727 || (uint64_t v7 = v11, !v11) || v11 == -5)
                  {
                    uint64_t v7 = sub_2268A8C90(a1, 0, 1918978900);
                    if (!v7)
                    {
                      uint64_t v7 = sub_2268A8C90(a1, 0, 1918980719);
                      if (!v7)
                      {
                        uint64_t v7 = sub_2268A8C90(a1, 0, 1918976833);
                        if (!v7)
                        {
                          uint64_t v7 = sub_2268A8C90(a1, 0, 1918976872);
                          if (!v7)
                          {
                            uint64_t v12 = sub_2268A8C90(a1, 0, 1918981955);
                            if (v12 == -6727 || (uint64_t v7 = v12, !v12) || v12 == -5)
                            {
                              uint64_t v7 = sub_2268A8C90(a1, 0, 1918979445);
                              if (!v7)
                              {
                                uint64_t v7 = sub_2268A8C90(a1, 0, 1918979428);
                                if (!v7)
                                {
                                  uint64_t v7 = sub_2268A8C90(a1, 0, 1918980207);
                                  if (!v7)
                                  {
                                    uint64_t v7 = sub_2268A8C90(a1, 0, 1918980980);
                                    if (!v7)
                                    {
                                      uint64_t v7 = sub_2268A8C90(a1, 0, 1918128974);
                                      if (!v7)
                                      {
                                        uint64_t v7 = sub_2268A8C90(a1, 0, 1633895790);
                                        if (!v7)
                                        {
                                          uint64_t v7 = sub_2268A8C90(a1, 0, 2003060332);
                                          if (!v7)
                                          {
                                            uint64_t v7 = sub_2268A8C90(a1, 0, 2003061875);
                                            if (!v7)
                                            {
                                              uint64_t v13 = sub_2268A8C90(a1, 0, 1683440723);
                                              if (v13 == -6727 || (uint64_t v7 = v13, !v13) || v13 == -5)
                                              {
                                                uint64_t v14 = sub_2268A8C90(a1, 0, 1685538412);
                                                if (v14 == -6727
                                                  || (uint64_t v7 = v14, !v14)
                                                  || v14 == -5)
                                                {
                                                  uint64_t v7 = sub_2268A8C90(a1, 0, 1918977644);
                                                  if (!v7)
                                                  {
                                                    uint64_t v15 = sub_2268A8C90(a1, 0, 1918978353);
                                                    if (v15 == -6727
                                                      || (uint64_t v7 = v15, !v15)
                                                      || v15 == -5)
                                                    {
                                                      uint64_t v7 = sub_2268A8C90(a1, 0, 1918976373);
                                                      if (!v7)
                                                      {
                                                        uint64_t v16 = sub_2268A8C90(a1, 0, 1918980965);
                                                        if (v16 == -6727
                                                          || (uint64_t v7 = v16, !v16)
                                                          || v16 == -5)
                                                        {
                                                          uint64_t v7 = sub_2268A8C90(a1, 0, 1918977586);
                                                          if (!v7)
                                                          {
                                                            uint64_t v17 = sub_2268A8C90(a1, 0, 1918978354);
                                                            if (v17 == -6727
                                                              || (uint64_t v7 = v17, !v17)
                                                              || v17 == -5)
                                                            {
                                                              uint64_t v18 = sub_2268A8C90(a1, 0, 1918981426);
                                                              if (v18 == -6727
                                                                || (uint64_t v7 = v18, !v18)
                                                                || v18 == -5)
                                                              {
                                                                uint64_t v19 = sub_2268A8C90(a1, 0, 1918980914);
                                                                if (v19 == -6727
                                                                  || (uint64_t v7 = v19, !v19)
                                                                  || v19 == -5)
                                                                {
                                                                  uint64_t v7 = sub_2268A8C90(a1, 0, 1918976873);
                                                                  if (!v7) {
                                                                    uint64_t v7 = sub_22687AF44(*(void *)(a1 + 8), 1466517097, (const __CFString *)cf, 2);
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  return v7;
}

uint64_t sub_2268A3A40(uint64_t a1, BOOL *a2, CFTypeRef *a3)
{
  uint64_t v49 = *MEMORY[0x263EF8340];
  memset(&__str, 0, sizeof(__str));
  CFTypeRef cf = 0;
  if (!a1)
  {
    BOOL v31 = 0;
    uint64_t v6 = 4294967292;
    goto LABEL_25;
  }
  uint64_t v6 = sub_226901198(v48, 0x10u);
  if (v6) {
    goto LABEL_24;
  }
  MEMORY[0x22A65ABB0](&__str, v48);
  uint64_t v6 = sub_2268A3D28(a1);
  if (v6) {
    goto LABEL_24;
  }
  std::string::operator=((std::string *)(*(void *)(a1 + 8) + 344), &__str);
  sub_22687D9A0(*(void *)(a1 + 8), 1818449522, 0x2000000, 0);
  sub_22687CF38(*(void *)(a1 + 8));
  if (!sub_22687CBC8(*(void *)(a1 + 8), 1835626098))
  {
    if (sub_22687CBC8(*(void *)(a1 + 8), 1685214297)) {
      uint64_t v39 = sub_2268A4694(a1);
    }
    else {
      uint64_t v39 = sub_2268A49F0(a1, v32, v33, v34, v35, v36, v37, v38);
    }
    uint64_t v6 = v39;
    goto LABEL_24;
  }
  CFTypeRef v44 = 0;
  uint64_t v45 = 0;
  CFStringRef theString1 = 0;
  uint64_t v6 = sub_2268A42F0(a1, &cf);
  if (v6) {
    goto LABEL_24;
  }
  if (!cf)
  {
LABEL_32:
    BOOL v31 = 0;
    uint64_t v6 = 4294960568;
    goto LABEL_25;
  }
  sub_22686088C((const __CFString *)cf, (uint64_t)&v45, (UInt8 *)"%ks", v7, v8, v9, v10, v11, (uint64_t)"drTY");
  uint64_t v6 = v16;
  if (v16)
  {
LABEL_24:
    BOOL v31 = 0;
    goto LABEL_25;
  }
  uint64_t v17 = v45;
  if (!v45) {
    goto LABEL_32;
  }
  if (dword_268147148 <= 1000)
  {
    if (dword_268147148 != -1 || (v18 = sub_226865630((uint64_t)&dword_268147148, 0x3E8u), uint64_t v17 = v45, v18))
    {
      sub_226865EB4((uint64_t)&dword_268147148, (uint64_t)"ACPStatus BSWriteWithMinimalRestart(BSRef, Boolean *, CFArrayRef *)", 1000, (uint64_t)"dirtyProperties: %@\n", v12, v13, v14, v15, v17);
      uint64_t v17 = v45;
    }
  }
  uint64_t v6 = sub_2268A4510(a1, v17);
  if (v6) {
    goto LABEL_24;
  }
  sub_22686088C((const __CFString *)cf, (uint64_t)&theString1, (UInt8 *)"%ks", v19, v20, v21, v22, v23, (uint64_t)"result");
  uint64_t v6 = v24;
  if (v24) {
    goto LABEL_24;
  }
  if (!theString1) {
    goto LABEL_32;
  }
  CFComparisonResult v25 = CFStringCompare(theString1, @"minimal", 0);
  BOOL v31 = v25 == kCFCompareEqualTo;
  if (a3)
  {
    if (v25)
    {
      BOOL v31 = 0;
      uint64_t v6 = 0;
      *a3 = 0;
    }
    else
    {
      sub_22686088C((const __CFString *)cf, (uint64_t)&v44, (UInt8 *)"%ks", v26, v27, v28, v29, v30, (uint64_t)"interruptions");
      uint64_t v6 = v41;
      if (!v41)
      {
        CFTypeRef v42 = v44;
        if (v44)
        {
          *a3 = v44;
          CFRetain(v42);
          uint64_t v6 = 0;
        }
        else
        {
          uint64_t v6 = 4294960568;
        }
      }
      BOOL v31 = 1;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
LABEL_25:
  if (a2) {
    *a2 = v31;
  }
  if (cf) {
    CFRelease(cf);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return v6;
}

void sub_2268A3D08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A3D28(uint64_t a1)
{
  CFStringRef v40 = 0;
  CFTypeRef cf = 0;
  if (!a1) {
    return 0;
  }
  if (sub_22687CBC8(*(void *)(a1 + 8), 2003390540))
  {
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = sub_22687CDBC(*(void *)(a1 + 8), 1466517097, &cf, 0);
    if (!v2)
    {
      sub_22686088C((const __CFString *)cf, (uint64_t)&v40, (UInt8 *)"%kO.[0]", v3, v4, v5, v6, v7, @"radios");
      uint64_t v2 = v8;
      if (!v8)
      {
        uint64_t v10 = sub_2268A8B94(a1, v40, 1918979693);
        if (v10 == -6727 || (uint64_t v2 = v10, !v10) || v10 == -5)
        {
          uint64_t v11 = sub_2268A8B94(a1, v40, 1918976876);
          if (v11 == -6727 || (uint64_t v2 = v11, !v11) || v11 == -5)
          {
            uint64_t v12 = sub_2268A8B94(a1, v40, 1918980971);
            if (v12 == -6727 || (uint64_t v2 = v12, !v12) || v12 == -5)
            {
              uint64_t v13 = sub_2268A8B94(a1, v40, 1918981965);
              if (v13 == -6727 || (uint64_t v2 = v13, !v13) || v13 == -5)
              {
                uint64_t v14 = sub_2268A8B94(a1, v40, 1918977345);
                if (v14 == -6727 || (uint64_t v2 = v14, !v14) || v14 == -5)
                {
                  uint64_t v15 = sub_2268A8B94(a1, v40, 1918976882);
                  if (v15 == -6727 || (uint64_t v2 = v15, !v15) || v15 == -5)
                  {
                    uint64_t v16 = sub_2268A8B94(a1, v40, 1918981957);
                    if (v16 == -6727 || (uint64_t v2 = v16, !v16) || v16 == -5)
                    {
                      uint64_t v17 = sub_2268A8B94(a1, v40, 1918978900);
                      if (v17 == -6727 || (uint64_t v2 = v17, !v17) || v17 == -5)
                      {
                        uint64_t v18 = sub_2268A8B94(a1, v40, 1918980719);
                        if (v18 == -6727 || (uint64_t v2 = v18, !v18) || v18 == -5)
                        {
                          uint64_t v19 = sub_2268A8B94(a1, v40, 1918976833);
                          if (v19 == -6727 || (uint64_t v2 = v19, !v19) || v19 == -5)
                          {
                            uint64_t v20 = sub_2268A8B94(a1, v40, 1918976872);
                            if (v20 == -6727 || (uint64_t v2 = v20, !v20) || v20 == -5)
                            {
                              uint64_t v21 = sub_2268A8B94(a1, v40, 1918981955);
                              if (v21 == -6727 || (uint64_t v2 = v21, !v21) || v21 == -5)
                              {
                                uint64_t v22 = sub_2268A8B94(a1, v40, 1918979445);
                                if (v22 == -6727 || (uint64_t v2 = v22, !v22) || v22 == -5)
                                {
                                  uint64_t v23 = sub_2268A8B94(a1, v40, 1918979428);
                                  if (v23 == -6727 || (uint64_t v2 = v23, !v23) || v23 == -5)
                                  {
                                    uint64_t v24 = sub_2268A8B94(a1, v40, 1918980207);
                                    if (v24 == -6727 || (uint64_t v2 = v24, !v24) || v24 == -5)
                                    {
                                      uint64_t v25 = sub_2268A8B94(a1, v40, 1918980980);
                                      if (v25 == -6727 || (uint64_t v2 = v25, !v25) || v25 == -5)
                                      {
                                        uint64_t v26 = sub_2268A8B94(a1, v40, 1918128974);
                                        if (v26 == -6727 || (uint64_t v2 = v26, !v26) || v26 == -5)
                                        {
                                          uint64_t v27 = sub_2268A8B94(a1, v40, 1633895790);
                                          if (v27 == -6727 || (uint64_t v2 = v27, !v27) || v27 == -5)
                                          {
                                            uint64_t v28 = sub_2268A8B94(a1, v40, 2003060332);
                                            if (v28 == -6727 || (uint64_t v2 = v28, !v28) || v28 == -5)
                                            {
                                              uint64_t v29 = sub_2268A8B94(a1, v40, 2003061875);
                                              if (v29 == -6727 || (uint64_t v2 = v29, !v29) || v29 == -5)
                                              {
                                                uint64_t v30 = sub_2268A8B94(a1, v40, 1683440723);
                                                if (v30 == -6727
                                                  || (uint64_t v2 = v30, !v30)
                                                  || v30 == -5)
                                                {
                                                  uint64_t v31 = sub_2268A8B94(a1, v40, 1685538412);
                                                  if (v31 == -6727
                                                    || (uint64_t v2 = v31, !v31)
                                                    || v31 == -5)
                                                  {
                                                    uint64_t v32 = sub_2268A8B94(a1, v40, 1918977644);
                                                    if (v32 == -6727
                                                      || (uint64_t v2 = v32, !v32)
                                                      || v32 == -5)
                                                    {
                                                      uint64_t v33 = sub_2268A8B94(a1, v40, 1918978353);
                                                      if (v33 == -6727
                                                        || (uint64_t v2 = v33, !v33)
                                                        || v33 == -5)
                                                      {
                                                        uint64_t v34 = sub_2268A8B94(a1, v40, 1918976373);
                                                        if (v34 == -6727
                                                          || (uint64_t v2 = v34, !v34)
                                                          || v34 == -5)
                                                        {
                                                          uint64_t v35 = sub_2268A8B94(a1, v40, 1918980965);
                                                          if (v35 == -6727
                                                            || (uint64_t v2 = v35, !v35)
                                                            || v35 == -5)
                                                          {
                                                            uint64_t v36 = sub_2268A8B94(a1, v40, 1918977586);
                                                            if (v36 == -6727
                                                              || (uint64_t v2 = v36, !v36)
                                                              || v36 == -5)
                                                            {
                                                              uint64_t v37 = sub_2268A8B94(a1, v40, 1918978354);
                                                              if (!v37 || (uint64_t v2 = v37, v37 == -6727))
                                                              {
                                                                uint64_t v38 = sub_2268A8B94(a1, v40, 1918981426);
                                                                if (v38 == -6727
                                                                  || (uint64_t v2 = v38, !v38)
                                                                  || v38 == -5)
                                                                {
                                                                  uint64_t v39 = sub_2268A8B94(a1, v40, 1918980914);
                                                                  if (v39 == -6727
                                                                    || (uint64_t v2 = v39, !v39)
                                                                    || v39 == -5)
                                                                  {
                                                                    uint64_t v2 = sub_2268A8B94(a1, v40, 1918976873);
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  return v2;
}

uint64_t sub_2268A42F0(uint64_t a1, CFTypeRef *a2)
{
  memset(&v23, 0, sizeof(v23));
  memset(&v22, 0, sizeof(v22));
  uint64_t v2 = 4294967292;
  if (!a1 || !a2) {
    goto LABEL_24;
  }
  if (!sub_22687CBC8(*(void *)(a1 + 8), 1835626098))
  {
    uint64_t v2 = 0;
    goto LABEL_24;
  }
  sub_22687CF38(*(void *)(a1 + 8));
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable)
  {
    uint64_t v2 = 4294967293;
    goto LABEL_24;
  }
  uint64_t v2 = sub_226888CC8(*(void *)(a1 + 8), Mutable);
  if (!v2)
  {
    sub_22687DAD8(*(void *)(a1 + 8), 0, v7, v8, v9, v10, v11, &__str);
    std::string::operator=(&v23, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v22, (const std::string *)(*(void *)(a1 + 8) + 120));
    uint64_t v12 = (v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v23
        : (std::string *)v23.__r_.__value_.__r.__words[0];
    uint64_t v13 = (v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v22
        : (std::string *)v22.__r_.__value_.__r.__words[0];
    uint64_t v2 = sub_22683E4B0(*(void *)(a1 + 16), 4u, 60000, (char *)v12, (char *)v13, a2, @"acpd.parseDirtyPlist", (uint64_t)"%ks=%O", (uint64_t)"drTY");
    if (!v2)
    {
      CFTypeRef v19 = *a2;
      if (!*a2) {
        goto LABEL_21;
      }
      uint64_t v2 = sub_22685FC7C(v5, a2, (uint64_t)"{%##O%ks=%O}", v14, v15, v16, v17, v18, (uint64_t)v19);
      if (v2) {
        goto LABEL_22;
      }
      if (*a2)
      {
        CFRelease(v19);
        uint64_t v2 = 0;
      }
      else
      {
LABEL_21:
        uint64_t v2 = 4294967293;
      }
    }
  }
LABEL_22:
  CFRelease(Mutable);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
LABEL_24:
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_2268A44C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A4510(uint64_t a1, uint64_t a2)
{
  memset(&v14, 0, sizeof(v14));
  memset(&v13, 0, sizeof(v13));
  uint64_t v2 = 4294967292;
  if (a1 && a2)
  {
    if (sub_22687CBC8(*(void *)(a1 + 8), 1835626098))
    {
      sub_22687DAD8(*(void *)(a1 + 8), 0, v4, v5, v6, v7, v8, &__str);
      std::string::operator=(&v14, &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      std::string::operator=(&v13, (const std::string *)(*(void *)(a1 + 8) + 120));
      if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v9 = &v14;
      }
      else {
        uint64_t v9 = (std::string *)v14.__r_.__value_.__r.__words[0];
      }
      if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v10 = &v13;
      }
      else {
        uint64_t v10 = (std::string *)v13.__r_.__value_.__r.__words[0];
      }
      uint64_t v2 = sub_22683E4B0(*(void *)(a1 + 16), 0, 60000, (char *)v9, (char *)v10, 0, @"acpd.setDirtyPlist", (uint64_t)"%ks=%O%ks=%b", (uint64_t)"drTY");
      if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v13.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_2268A464C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v25 - 33) < 0) {
    operator delete(*(void **)(v25 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A4694(uint64_t a1)
{
  CFStringRef v47 = 0;
  CFStringRef v48 = 0;
  CFTypeRef cf = 0;
  CFDataRef theData = 0;
  memset(&v44, 0, sizeof(v44));
  memset(&v43, 0, sizeof(v43));
  CFAllocatorRef v2 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  if (Mutable)
  {
    uint64_t v9 = sub_226888AAC(*(void *)(a1 + 8), Mutable);
    if (!v9)
    {
      uint64_t v9 = sub_226860774(v2, Mutable, (uint64_t)"%C", v4, v5, v6, v7, v8, 1668573549);
      if (!v9)
      {
        uint64_t v9 = sub_226860774(v2, Mutable, (uint64_t)"%C", v10, v11, v12, v13, v14, 1818449523);
        if (!v9)
        {
          CFIndex Count = CFArrayGetCount(Mutable);
          uint64_t v9 = sub_22685FC7C(v2, (CFTypeRef *)&v48, (uint64_t)"{}", v16, v17, v18, v19, v20, v41);
          if (!v9)
          {
            if (Count < 1)
            {
LABEL_21:
              uint64_t v9 = sub_22685EFD0(v2, v48, (CFTypeRef *)&theData);
              if (!v9)
              {
                sub_22687DAD8(*(void *)(a1 + 8), 0, v30, v31, v32, v33, v34, &__str);
                std::string::operator=(&v44, &__str);
                if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(__str.__r_.__value_.__l.__data_);
                }
                uint64_t v35 = &v43;
                std::string::operator=(&v43, (const std::string *)(*(void *)(a1 + 8) + 120));
                uint64_t v36 = *(void *)(a1 + 16);
                if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v37 = &v44;
                }
                else {
                  uint64_t v37 = (std::string *)v44.__r_.__value_.__r.__words[0];
                }
                if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  uint64_t v35 = (std::string *)v43.__r_.__value_.__r.__words[0];
                }
                BytePtr = (char *)CFDataGetBytePtr(theData);
                CFIndex Length = CFDataGetLength(theData);
                uint64_t v9 = sub_22683DA94(v36, 0, 60000, (char *)v37, (char *)v35, 1685214297, BytePtr, Length);
              }
            }
            else
            {
              uint64_t v26 = 0;
              while (1)
              {
                __str.__r_.__value_.__s.__data_[0] = 0;
                sub_22686088C((const __CFString *)Mutable, (uint64_t)&cf, (UInt8 *)"[*]:utf8", v21, v22, v23, v24, v25, v26);
                uint64_t v9 = v27;
                if (v27) {
                  break;
                }
                if (!cf)
                {
                  uint64_t v9 = 4294960569;
                  break;
                }
                uint64_t v28 = sub_22688BA8C((const char *)cf);
                free((void *)cf);
                CFTypeRef cf = 0;
                if (v28)
                {
                  if (sub_2268880B8(*(void *)(a1 + 8), (int)v28))
                  {
                    uint64_t v29 = sub_2268836AC(*(void *)(a1 + 8), (uint64_t)v28, &v47, &__str);
                    uint64_t v9 = v29;
                    if (v28 != 1349676902 || v29 != -6720)
                    {
                      if (v29) {
                        break;
                      }
                      uint64_t v9 = sub_226860774(v2, (__CFArray *)v48, (uint64_t)"%kC=%O", v21, v22, v23, v24, v25, (uint64_t)v28);
                      if (__str.__r_.__value_.__s.__data_[0])
                      {
                        if (v47) {
                          CFRelease(v47);
                        }
                        CFStringRef v47 = 0;
                      }
                      if (v9) {
                        break;
                      }
                    }
                  }
                }
                if (Count == ++v26) {
                  goto LABEL_21;
                }
              }
            }
          }
        }
      }
    }
  }
  else
  {
    uint64_t v9 = 4294960568;
  }
  if (v48) {
    CFRelease(v48);
  }
  if (theData) {
    CFRelease(theData);
  }
  if (cf) {
    CFRelease(cf);
  }
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v43.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v44.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_2268A49A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A49F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFStringRef MutableCopy = 0;
  uint64_t v49 = 0;
  unint64_t v50 = 0;
  CFTypeRef cf = 0;
  CFTypeRef v48 = 0;
  memset(&v46, 0, sizeof(v46));
  memset(&v45, 0, sizeof(v45));
  uint64_t v9 = 4294967292;
  uint64_t v10 = *(void **)(a1 + 16);
  if (!v10) {
    goto LABEL_18;
  }
  uint64_t v12 = *(const std::string **)(a1 + 8);
  if (!v12) {
    goto LABEL_18;
  }
  sub_22687DAD8(*(void *)(a1 + 8), 0, a4, a5, a6, a7, a8, &__str);
  std::string::operator=(&v46, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  std::string::operator=(&v45, v12 + 5);
  if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v17 = &v46;
  }
  else {
    uint64_t v17 = (std::string *)v46.__r_.__value_.__r.__words[0];
  }
  if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v18 = &v45;
  }
  else {
    uint64_t v18 = (std::string *)v45.__r_.__value_.__r.__words[0];
  }
  uint64_t v9 = sub_22683C8EC((uint64_t)v10, (char *)v17, v18, 0, v13, v14, v15, v16);
  if (v9
    || ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
      ? (uint64_t v19 = &v45)
      : (uint64_t v19 = (std::string *)v45.__r_.__value_.__r.__words[0]),
        (uint64_t v9 = sub_22683DC04((uint64_t)v10, 4u, (const char *)v19, 0x15u, 0xFFFFFFFFuLL, 0), v9)
     || (uint64_t v9 = sub_22683D920((uint64_t)v10, 0, 60000, 0), v9)))
  {
LABEL_17:
    CFStringRef MutableCopy = 0;
    goto LABEL_18;
  }
  sub_226889CCC((uint64_t)v12, &v49, &v50);
  if (!v50)
  {
    CFStringRef MutableCopy = 0;
    uint64_t v9 = 0;
    goto LABEL_18;
  }
  uint64_t v21 = 0;
  unint64_t v22 = 0;
  CFAllocatorRef allocator = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  do
  {
    char v43 = 0;
    int v23 = *(_DWORD *)(v49 + v21);
    __str.__r_.__value_.__r.__words[0] = 0;
    uint64_t v24 = sub_2268A5FD4(v23, &__str);
    uint64_t v9 = v24;
    if (v24) {
      BOOL v25 = 1;
    }
    else {
      BOOL v25 = __str.__r_.__value_.__r.__words[0] == 0;
    }
    if (v25)
    {
      if (v24 != -5 && v24 != 0) {
        goto LABEL_17;
      }
    }
    else if (*(unsigned char *)(__str.__r_.__value_.__r.__words[0] + 24))
    {
      goto LABEL_120;
    }
    int v27 = *(_DWORD *)(v49 + v21);
    if (v27 > 1918979427)
    {
      if (v27 > 1918980964)
      {
        if (v27 <= 1918981954)
        {
          if (((v27 - 1918980965) > 0xF || ((1 << (v27 - 101)) & 0x8041) == 0) && v27 != 1918981426) {
            goto LABEL_97;
          }
          goto LABEL_96;
        }
        BOOL v28 = (v27 - 1918981955) <= 0xA && ((1 << (v27 - 67)) & 0x405) != 0 || v27 == 2003061875;
        int v29 = 2003060332;
        goto LABEL_91;
      }
      if (v27 > 1918980206)
      {
        BOOL v28 = v27 == 1918980207 || v27 == 1918980719;
        unsigned __int16 v31 = 21298;
      }
      else
      {
        BOOL v28 = v27 == 1918979428 || v27 == 1918979445;
        unsigned __int16 v31 = 20077;
      }
      goto LABEL_90;
    }
    if (v27 > 1918977344)
    {
      if (v27 > 1918978352)
      {
        if ((v27 - 1918978353) >= 2 && v27 != 1918978900) {
          goto LABEL_97;
        }
        goto LABEL_96;
      }
      BOOL v28 = v27 == 1918977345 || v27 == 1918977586;
      unsigned __int16 v31 = 18028;
      goto LABEL_90;
    }
    if (v27 > 1918128973)
    {
      BOOL v28 = (v27 - 1918976833) <= 0x31 && ((1 << (v27 - 65)) & 0x2098000000001) != 0
         || v27 == 1918128974;
      unsigned __int16 v31 = 16757;
LABEL_90:
      int v29 = v31 | 0x72610000;
      goto LABEL_91;
    }
    BOOL v28 = v27 == 1633895790 || v27 == 1683440723;
    int v29 = 1685538412;
LABEL_91:
    if (!v28 && v27 != v29) {
      goto LABEL_97;
    }
LABEL_96:
    if (sub_22687CBC8(*(void *)(a1 + 8), 2003390540)) {
      goto LABEL_120;
    }
LABEL_97:
    if (!sub_2268A615C(a1, v27)
      || sub_2268836AC((uint64_t)v12, *(unsigned int *)(v49 + v21), (CFStringRef *)&v48, &v43))
    {
      goto LABEL_120;
    }
    if (!v48)
    {
      uint64_t v9 = 4294960559;
      goto LABEL_17;
    }
    uint64_t v9 = sub_22683F68C(*(_DWORD *)(v49 + v21), (const __CFString *)v48, 1, (CFDataRef *)&cf);
    if (v9) {
      goto LABEL_17;
    }
    LODWORD(v52) = *(_DWORD *)(v49 + v21);
    HIDWORD(v52) = *(_DWORD *)(v49 + v21 + 8);
    unsigned int Length = CFDataGetLength((CFDataRef)cf);
    unsigned int v53 = Length;
    if (Length)
    {
      CFIndex v38 = Length;
    }
    else
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
      __str.__r_.__value_.__r.__words[0] = 0;
      uint64_t v9 = sub_22683C258(v52, (uint64_t **)&__str);
      if (v9) {
        goto LABEL_17;
      }
      if (*(_DWORD *)(__str.__r_.__value_.__r.__words[0] + 4) == 13) {
        goto LABEL_120;
      }
      CFIndex v38 = v53;
    }
    if (cf)
    {
      CFStringRef MutableCopy = CFDataCreateMutableCopy(allocator, v38, (CFDataRef)cf);
      CFRelease(cf);
      CFTypeRef cf = 0;
      if (!MutableCopy)
      {
        uint64_t v9 = 0;
        goto LABEL_17;
      }
      CFIndex v38 = v53;
    }
    else
    {
      CFStringRef MutableCopy = 0;
    }
    if (v38) {
      MutableBytePtr = (char *)CFDataGetMutableBytePtr(MutableCopy);
    }
    else {
      MutableBytePtr = 0;
    }
    uint64_t v9 = sub_22683DD28((uint64_t)v10, 16, (unsigned int *)&v52, MutableBytePtr);
    if (v9) {
      goto LABEL_18;
    }
    if (v43)
    {
      if (v48) {
        CFRelease(v48);
      }
      CFTypeRef v48 = 0;
    }
    if (MutableCopy) {
      CFRelease(MutableCopy);
    }
LABEL_120:
    ++v22;
    v21 += 12;
  }
  while (v22 < v50);
  uint64_t v52 = 1633896014;
  unsigned int v53 = 0;
  uint64_t v9 = sub_22683DD28((uint64_t)v10, 16, (unsigned int *)&v52, 0);
  if (v9) {
    goto LABEL_17;
  }
  BOOL v40 = sub_22687CBC8((uint64_t)v12, 1383287118);
  unsigned int v53 = 0;
  unsigned int v41 = v40 ? 1633899081 : 1633899074;
  uint64_t v52 = v41;
  uint64_t v9 = sub_22683DD28((uint64_t)v10, 16, (unsigned int *)&v52, 0);
  if (v9) {
    goto LABEL_17;
  }
  uint64_t v9 = sub_22683DDD8((uint64_t)v10, 16, 0);
  if (v9) {
    goto LABEL_17;
  }
  uint64_t v9 = sub_22683E684(v10, 0x7FFFFFFF);
  if (v9) {
    goto LABEL_17;
  }
  CFStringRef MutableCopy = 0;
  do
    uint64_t v9 = sub_22683DE5C((uint64_t)v10, 0, 60000, v51);
  while (!v9 && v51[0].i32[0]);
LABEL_18:
  if (cf) {
    CFRelease(cf);
  }
  if (MutableCopy) {
    CFRelease(MutableCopy);
  }
  sub_22683D35C((uint64_t)v10);
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v46.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_2268A502C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A5080(uint64_t a1)
{
  if (a1) {
    return sub_226888FE0(*(void *)(a1 + 8));
  }
  else {
    return 4294967292;
  }
}

uint64_t sub_2268A5094(uint64_t a1, unsigned char *a2)
{
  if (!a1) {
    return 4294967292;
  }
  uint64_t result = 4294967292;
  if (a2)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (v5)
    {
      char v6 = sub_226889124(v5);
      uint64_t result = 0;
      *a2 = v6;
    }
  }
  return result;
}

uint64_t sub_2268A50EC(uint64_t a1, unsigned char *a2)
{
  if (!a1) {
    return 4294967292;
  }
  uint64_t result = 4294967292;
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (v4)
    {
      uint64_t result = 0;
      *a2 = *(unsigned char *)(v4 + 226);
    }
  }
  return result;
}

uint64_t sub_2268A511C(uint64_t a1, int a2, unsigned char *a3)
{
  uint64_t v5 = sub_22683C448(a2, v7);
  return sub_2268A5168(a1, v5, a3);
}

uint64_t sub_2268A5168(uint64_t a1, char *a2, unsigned char *a3)
{
  if (!a1) {
    return 4294967292;
  }
  uint64_t v4 = 4294967292;
  if (a3)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (v5)
    {
      BOOL v9 = 0;
      sub_22689F090(__p, a2);
      uint64_t v4 = sub_22688BBD0(v5, (uint64_t)__p, &v9);
      if (v8 < 0) {
        operator delete(__p[0]);
      }
      *a3 = v9;
    }
  }
  return v4;
}

void sub_2268A51F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A520C(uint64_t a1, char *a2, const __CFString *a3)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  sub_22689F090(__p, a2);
  uint64_t v5 = sub_2268809AC(v4, (uint64_t)__p, a3, 0);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_2268A5278(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A5294(uint64_t a1, char *a2, int a3)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  sub_22689F090(__p, a2);
  uint64_t v5 = sub_2268814C8(v4, (uint64_t)__p, a3, 0);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_2268A5300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A531C(uint64_t a1, char *a2, int a3)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  sub_22689F090(__p, a2);
  uint64_t v5 = sub_226888328(v4, (uint64_t)__p, a3, 0);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_2268A5388(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A53A4(uint64_t a1, int a2, int a3)
{
  if (a1) {
    return sub_22687CC58(*(void *)(a1 + 8), a2, a3, 0);
  }
  else {
    return 4294960591;
  }
}

uint64_t sub_2268A53BC(uint64_t a1, char *a2, const __CFString *a3)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  sub_22689F090(__p, a2);
  uint64_t v5 = sub_2268809AC(v4, (uint64_t)__p, a3, 2);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_2268A5428(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A5444(uint64_t a1, int a2, const __CFString *a3)
{
  uint64_t v5 = sub_22683C448(a2, v7);
  return sub_2268A520C(a1, v5, a3);
}

uint64_t sub_2268A5490(uint64_t a1, int a2, int a3)
{
  if (a1) {
    return sub_22687D9A0(*(void *)(a1 + 8), a2, a3, 0);
  }
  else {
    return 4294960591;
  }
}

uint64_t sub_2268A54A8(uint64_t a1, char *a2, CFMutableDictionaryRef *a3)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  sub_22689F090(__p, a2);
  uint64_t v5 = sub_2268820DC(v4, (uint64_t)__p, a3, 0);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_2268A5514(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A5530(uint64_t a1, char *a2, CFMutableDictionaryRef *a3)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  sub_22689F090(__p, a2);
  uint64_t v5 = sub_2268820DC(v4, (uint64_t)__p, a3, 2);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_2268A559C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A55B8(uint64_t a1, int a2, CFMutableDictionaryRef *a3)
{
  uint64_t v5 = sub_22683C448(a2, v7);
  return sub_2268A54A8(a1, v5, a3);
}

uint64_t sub_2268A5604(uint64_t a1, int a2, void *a3)
{
  if (a1) {
    return sub_22687AB24(*(void *)(a1 + 8), a2, a3, 0);
  }
  else {
    return 4294960591;
  }
}

uint64_t sub_2268A561C(uint64_t a1, char *a2, void *a3)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  sub_22689F090(__p, a2);
  uint64_t v5 = sub_226888134(v4, (uint64_t)__p, a3, 0);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

void sub_2268A5688(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A56A4(uint64_t a1, int a2, unsigned char *a3)
{
  if (!a1) {
    return 4294960591;
  }
  BOOL v5 = 0;
  uint64_t result = sub_2268883A8(*(void *)(a1 + 8), a2, &v5, 0);
  *a3 = v5;
  return result;
}

uint64_t sub_2268A56F8(uint64_t a1, int a2, unsigned char *a3)
{
  if (!a1) {
    return 4294960591;
  }
  BOOL v5 = 0;
  uint64_t result = sub_2268883A8(*(void *)(a1 + 8), a2, &v5, 2);
  *a3 = v5;
  return result;
}

uint64_t sub_2268A574C(uint64_t a1, char *a2, unsigned char *a3)
{
  uint64_t v3 = 4294960591;
  if (a1 && a3)
  {
    BOOL v9 = 0;
    uint64_t v5 = *(void *)(a1 + 8);
    sub_22689F090(__p, a2);
    uint64_t v3 = sub_226888348(v5, (uint64_t)__p, &v9, 0);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
    *a3 = v9;
  }
  return v3;
}

void sub_2268A57C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

CFStringRef sub_2268A57E4(unsigned int a1)
{
  if (!a1) {
    return 0;
  }
  *(_DWORD *)UInt8 bytes = bswap32(a1);
  return CFStringCreateWithBytes((CFAllocatorRef)*MEMORY[0x263EFFB08], bytes, 4, 0, 0);
}

uint64_t sub_2268A5838(uint64_t a1, const __CFArray **a2)
{
  if (a1) {
    return sub_22688C398(*(void *)(a1 + 8), a2);
  }
  else {
    return 4294960591;
  }
}

BOOL sub_2268A584C(BOOL result)
{
  if (result) {
    return sub_22688C41C(*(void *)(result + 8));
  }
  return result;
}

uint64_t sub_2268A585C(uint64_t result)
{
  if (result) {
    return sub_226879F0C(*(void *)(result + 8));
  }
  return result;
}

uint64_t sub_2268A586C(uint64_t result)
{
  if (result) {
    return sub_22688C478(*(void *)(result + 8));
  }
  return result;
}

uint64_t sub_2268A587C(uint64_t result, int a2)
{
  if (result) {
    return sub_22688C4E4(*(void *)(result + 8), a2 != 0);
  }
  return result;
}

uint64_t sub_2268A5894(uint64_t a1, void *a2)
{
  if (a1) {
    return sub_2268891B0(*(void *)(a1 + 8), a2);
  }
  else {
    return 4294960591;
  }
}

uint64_t sub_2268A58A8(uint64_t a1, CFMutableDictionaryRef *a2)
{
  if (a1) {
    return sub_226889414(*(void *)(a1 + 8), a2);
  }
  else {
    return 4294960591;
  }
}

uint64_t sub_2268A58BC(uint64_t a1, CFMutableDictionaryRef *a2)
{
  if (a1) {
    return sub_226889498(*(void *)(a1 + 8), a2);
  }
  else {
    return 4294960591;
  }
}

BOOL sub_2268A58D0(BOOL result, int a2)
{
  if (result) {
    return sub_22687CBC8(*(void *)(result + 8), a2);
  }
  return result;
}

__CFArray *sub_2268A58F4(__CFArray *result)
{
  if (result) {
    return sub_2268889A4(*((void *)result + 1));
  }
  return result;
}

BOOL sub_2268A5904(BOOL result, int a2, BOOL *a3)
{
  if (result) {
    return sub_22689EABC(*(void *)(result + 8), a2, a3, 0);
  }
  return result;
}

uint64_t sub_2268A5918(uint64_t result)
{
  if (result) {
    return sub_22689E9C4(*(void *)(result + 8));
  }
  return result;
}

uint64_t sub_2268A5928(uint64_t a1, int a2)
{
  if (a1) {
    return sub_22689EBC4(*(void *)(a1 + 8), a2);
  }
  else {
    return 4294960591;
  }
}

uint64_t sub_2268A593C(uint64_t a1, int a2)
{
  if (a1) {
    return sub_22689ECC4(*(void *)(a1 + 8), a2);
  }
  else {
    return 4294960591;
  }
}

uint64_t sub_2268A5950(uint64_t a1, int *a2, unint64_t a3, void *a4, void *a5)
{
  uint64_t v7 = a2;
  *a4 = 0;
  *a5 = 0;
  if (a2)
  {
    if (a3 <= 1) {
      uint64_t v9 = 1;
    }
    else {
      uint64_t v9 = a3;
    }
    do
    {
      int v10 = *v7++;
      uint64_t result = sub_2268BC820(*(void *)(a1 + 8), v10, (uint64_t)a4, (uint64_t)a5);
      --v9;
    }
    while (v9);
  }
  else
  {
    do
      uint64_t result = sub_2268BC820(*(void *)(a1 + 8), *(int *)((char *)dword_268147188 + (void)v7++), (uint64_t)a4, (uint64_t)a5);
    while (v7 != (int *)1200);
  }
  return result;
}

uint64_t sub_2268A59E8(uint64_t a1, const __CFString *theArray, __CFArray **a3)
{
  unsigned int v41 = 0;
  uint64_t v3 = 4294960591;
  if (!a1 || !a3) {
    return v3;
  }
  CFIndex capacity = 0;
  if (theArray && (size_t Count = CFArrayGetCount((CFArrayRef)theArray)) != 0)
  {
    unint64_t v8 = Count;
    uint64_t v9 = (int *)malloc_type_calloc(Count, 4uLL, 0x100004052888210uLL);
    uint64_t v15 = v9;
    if (!v9)
    {
LABEL_42:
      uint64_t v3 = 4294960568;
      goto LABEL_49;
    }
    uint64_t v16 = 0;
    uint64_t v17 = (uint64_t)v9;
    do
    {
      sub_22686088C(theArray, v17, (UInt8 *)"[*]:code", v10, v11, v12, v13, v14, v16);
      if (v18)
      {
        uint64_t v3 = v18;
        goto LABEL_49;
      }
      ++v16;
      v17 += 4;
    }
    while (v8 != v16);
    sub_2268A5950(a1, v15, v8, &v41, &capacity);
    free(v15);
  }
  else
  {
    sub_2268A5950(a1, 0, 0, &v41, &capacity);
  }
  if (!capacity)
  {
    uint64_t v15 = 0;
    uint64_t v3 = 4294960569;
    goto LABEL_49;
  }
  CFAllocatorRef v19 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], capacity, MEMORY[0x263EFFF70]);
  if (!Mutable)
  {
    uint64_t v15 = 0;
    goto LABEL_42;
  }
  uint64_t v21 = Mutable;
  if (!capacity)
  {
LABEL_40:
    uint64_t v3 = 0;
    uint64_t v15 = 0;
    *a3 = v21;
    goto LABEL_49;
  }
  unint64_t v22 = 0;
  uint64_t v23 = 4;
  while (1)
  {
    CFStringRef v24 = sub_2268A57E4(*(_DWORD *)((char *)v41 + v23 - 4));
    CFStringRef v25 = sub_2268A57E4(*(_DWORD *)((char *)v41 + v23));
    CFStringRef v31 = v25;
    if ((*(_DWORD *)((char *)v41 + v23) - 1732604481) < 8)
    {
      CFStringRef v32 = v25;
      goto LABEL_20;
    }
    CFStringRef v33 = CFStringCreateWithFormat(v19, 0, @"vErr.%@", v25);
    if (!v33) {
      break;
    }
    CFStringRef v32 = v33;
    if (v31) {
      CFRelease(v31);
    }
LABEL_20:
    int v34 = *(_DWORD *)((char *)v41 + v23);
    if (v34 <= 1886741071)
    {
      BOOL v35 = v34 == 1849970259;
      int v36 = 1869631063;
    }
    else
    {
      BOOL v35 = v34 == 1886741072 || v34 == 2002867022;
      int v36 = 2002862918;
    }
    if (v35 || v34 == v36) {
      uint64_t v38 = sub_226860774(v19, v21, (uint64_t)"{%kO=%O%kO=%O%kO=%C}", v26, v27, v28, v29, v30, @"kValidationErrorKey_BSSetting");
    }
    else {
      uint64_t v38 = sub_226860774(v19, v21, (uint64_t)"{%kO=%O%kO=%O}", v26, v27, v28, v29, v30, @"kValidationErrorKey_BSSetting");
    }
    uint64_t v3 = v38;
    if (v38)
    {
      CFStringRef v31 = v32;
      if (!v24) {
        goto LABEL_46;
      }
      goto LABEL_45;
    }
    if (v24) {
      CFRelease(v24);
    }
    if (v32) {
      CFRelease(v32);
    }
    ++v22;
    v23 += 8;
    if (v22 >= capacity) {
      goto LABEL_40;
    }
  }
  uint64_t v3 = 4294960568;
  if (v24) {
LABEL_45:
  }
    CFRelease(v24);
LABEL_46:
  if (v31) {
    CFRelease(v31);
  }
  CFRelease(v21);
  uint64_t v15 = 0;
LABEL_49:
  if (v41)
  {
    free(v41);
    unsigned int v41 = 0;
  }
  if (v15) {
    free(v15);
  }
  return v3;
}

uint64_t sub_2268A5D18(uint64_t a1, __CFArray **a2)
{
  return sub_2268A59E8(a1, 0, a2);
}

uint64_t sub_2268A5D24(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  if (a1 && a3) {
    return sub_2268C60C4(*(void *)(a1 + 8), a2, a3, a4);
  }
  else {
    return 4294967292;
  }
}

uint64_t sub_2268A5D3C(int a1, int *a2)
{
  if ((byte_2681482D0 & 1) == 0)
  {
    sub_2268C5F90();
    byte_2681482D0 = 1;
  }
  *a2 = 0;
  uint64_t v4 = *(void *)(qword_268148390 + 8);
  if (!v4) {
    return 4294967291;
  }
  uint64_t v5 = qword_268148390 + 8;
  do
  {
    int v6 = *(_DWORD *)(v4 + 32);
    BOOL v7 = v6 < a1;
    if (v6 >= a1) {
      unint64_t v8 = (uint64_t *)v4;
    }
    else {
      unint64_t v8 = (uint64_t *)(v4 + 8);
    }
    if (!v7) {
      uint64_t v5 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v5 == qword_268148390 + 8 || *(_DWORD *)(v5 + 32) > a1) {
    return 4294967291;
  }
  uint64_t result = 4294967291;
  int v10 = 6;
  switch(*(_DWORD *)(*(void *)(v5 + 40) + 8))
  {
    case 2:
      goto LABEL_30;
    case 3:
    case 6:
      int v10 = 1;
      goto LABEL_30;
    case 4:
      int v10 = 2;
      goto LABEL_30;
    case 5:
      int v10 = 3;
      goto LABEL_30;
    case 7:
      int v10 = 4;
      goto LABEL_30;
    case 8:
      int v10 = 7;
      goto LABEL_30;
    case 9:
      if (a1 <= 1651722066)
      {
        if (a1 > 1651722052)
        {
          if (a1 != 1651722053)
          {
            if (a1 == 1651722062)
            {
LABEL_43:
              int v10 = 12;
              goto LABEL_30;
            }
            unsigned __int16 v11 = 18256;
LABEL_42:
            if (a1 != (v11 | 0x62730000)) {
              return result;
            }
            goto LABEL_43;
          }
        }
        else
        {
          if (a1 == 1633899617)
          {
            int v10 = 15;
            goto LABEL_30;
          }
          if (a1 != 1651722051)
          {
            unsigned __int16 v11 = 18244;
            goto LABEL_42;
          }
        }
        int v10 = 11;
        goto LABEL_30;
      }
      if (a1 <= 1702261835)
      {
        if (a1 == 1651722067)
        {
          int v10 = 13;
          goto LABEL_30;
        }
        if (a1 != 1651724371 && a1 != 1651725139) {
          return result;
        }
        int v10 = 10;
LABEL_30:
        uint64_t result = 0;
        *a2 = v10;
        return result;
      }
      if (a1 <= 1886547537)
      {
        if (a1 == 1702261836)
        {
          int v10 = 18;
        }
        else
        {
          if (a1 != 1886213217) {
            return result;
          }
          int v10 = 14;
        }
        goto LABEL_30;
      }
      if (a1 == 1886547538)
      {
        int v10 = 17;
        goto LABEL_30;
      }
      if (a1 == 2003061875)
      {
        int v10 = 16;
        goto LABEL_30;
      }
      return result;
    case 0xB:
      int v10 = 5;
      goto LABEL_30;
    case 0xC:
      int v10 = 8;
      goto LABEL_30;
    case 0xD:
      int v10 = 9;
      goto LABEL_30;
    default:
      return result;
  }
}

uint64_t sub_2268A5FD4(int a1, void *a2)
{
  if ((byte_2681482D0 & 1) == 0)
  {
    sub_2268C5F90();
    byte_2681482D0 = 1;
  }
  if (!a2) {
    return 4294967291;
  }
  uint64_t v4 = *(void *)(qword_268148390 + 8);
  if (!v4) {
    return 4294967291;
  }
  uint64_t v5 = qword_268148390 + 8;
  do
  {
    int v6 = *(_DWORD *)(v4 + 32);
    BOOL v7 = v6 < a1;
    if (v6 >= a1) {
      unint64_t v8 = (uint64_t *)v4;
    }
    else {
      unint64_t v8 = (uint64_t *)(v4 + 8);
    }
    if (!v7) {
      uint64_t v5 = v4;
    }
    uint64_t v4 = *v8;
  }
  while (*v8);
  if (v5 == qword_268148390 + 8 || *(_DWORD *)(v5 + 32) > a1) {
    return 4294967291;
  }
  uint64_t result = 0;
  *a2 = *(void *)(v5 + 40);
  return result;
}

uint64_t sub_2268A6078(int a1, _DWORD *a2)
{
  uint64_t v5 = 0;
  uint64_t result = 4294967292;
  if (a1)
  {
    if (a2)
    {
      uint64_t result = sub_2268A5FD4(a1, &v5);
      if (!result)
      {
        if (v5)
        {
          uint64_t result = 0;
          *a2 = *(_DWORD *)(v5 + 12);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2268A60D8(int a1)
{
  unsigned int v2 = 0;
  sub_2268A6078(a1, &v2);
  return v2;
}

uint64_t sub_2268A6104(int a1, _DWORD *a2)
{
  uint64_t v4 = 0;
  if (!a2) {
    return 4294967292;
  }
  uint64_t result = sub_2268A5FD4(a1, &v4);
  if (!result)
  {
    if (v4)
    {
      uint64_t result = 0;
      *a2 = *(_DWORD *)(v4 + 32);
    }
  }
  return result;
}

BOOL sub_2268A615C(BOOL result, int a2)
{
  if (result)
  {
    uint64_t v3 = result;
    return sub_2268880B8(*(void *)(result + 8), a2) || sub_2268888D0(*(void *)(v3 + 8), a2);
  }
  return result;
}

uint64_t sub_2268A61A8(uint64_t result)
{
  uint64_t v1 = 0;
  if (result)
  {
    if (sub_2268A5FD4(result, &v1) || !v1) {
      return 0;
    }
    else {
      return *(unsigned int *)(v1 + 20);
    }
  }
  return result;
}

uint64_t sub_2268A61EC(uint64_t a1, uint64_t a2, uint64_t a3, BOOL *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v24 = 0;
  CFStringRef v25 = 0;
  CFStringRef v23 = 0;
  memset(&v22, 0, sizeof(v22));
  memset(&v21, 0, sizeof(v21));
  if (!a1) {
    goto LABEL_13;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (!v9)
  {
    uint64_t v15 = 4294967279;
    goto LABEL_15;
  }
  if (!a2)
  {
LABEL_13:
    uint64_t v15 = 4294967292;
    goto LABEL_15;
  }
  sub_22687DAD8(v9, 0, (uint64_t)a4, a5, a6, a7, a8, &__str);
  std::string::operator=(&v22, &__str);
  std::string::operator=(&v21, (const std::string *)(*(void *)(a1 + 8) + 120));
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v12 = &v22;
  }
  else {
    uint64_t v12 = (std::string *)v22.__r_.__value_.__r.__words[0];
  }
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v13 = &v21;
  }
  else {
    uint64_t v13 = (std::string *)v21.__r_.__value_.__r.__words[0];
  }
  uint64_t v14 = sub_22683D588(*(void *)(a1 + 16), 4, 60000, (char *)v12, (char *)v13, a2, &v25, &v24);
  uint64_t v15 = v14;
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__str.__r_.__value_.__l.__data_);
    if (v15) {
      goto LABEL_15;
    }
  }
  else if (v14)
  {
    goto LABEL_15;
  }
  if (v25)
  {
    if (v24)
    {
      uint64_t v15 = sub_22683F308(a2, (unsigned __int8 *)v25, v24, 1, &v23);
      if (!v15)
      {
        if (a4)
        {
          char v19 = 0;
          __str.__r_.__value_.__r.__words[0] = 0;
          int v17 = sub_2268836AC(*(void *)(a1 + 8), a2, (CFStringRef *)&__str, &v19);
          uint64_t v18 = (const void *)__str.__r_.__value_.__r.__words[0];
          if (v17 || !__str.__r_.__value_.__r.__words[0])
          {
            if (v17 == -5 || v17 == -6727) {
              *a4 = 1;
            }
          }
          else
          {
            *a4 = CFEqual(__str.__r_.__value_.__l.__data_, v23) == 0;
            uint64_t v18 = (const void *)__str.__r_.__value_.__r.__words[0];
          }
          if (v19 && v18) {
            CFRelease(v18);
          }
        }
        uint64_t v15 = sub_22687CE78(*(void *)(a1 + 8), a2, v23, 2);
        if (!v15)
        {
          CFRelease(v23);
          CFStringRef v23 = 0;
          uint64_t v15 = sub_22687AF44(*(void *)(a1 + 8), a2, 0, 1);
        }
      }
    }
  }
LABEL_15:
  if (v23) {
    CFRelease(v23);
  }
  if (v25) {
    free(v25);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  return v15;
}

void sub_2268A6408(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A6454(uint64_t a1, int a2)
{
  sub_22683C448(a2, v4);
  return sub_2268A6498(a1, v4);
}

uint64_t sub_2268A6498(uint64_t a1, const char *a2)
{
  uint64_t v10 = 0;
  uint64_t result = 4294967292;
  if (a1 && a2 && *a2)
  {
    int v4 = sub_22688BA8C(a2);
    if (sub_22688035C(v4) && sub_22687CBC8(*(void *)(a1 + 8), 2003390540)) {
      int v4 = 1466517097;
    }
    uint64_t result = sub_2268A5FD4(v4, &v10);
    if (!result)
    {
      if (*(_DWORD *)(v10 + 4))
      {
        uint64_t result = sub_2268A615C(a1, v4);
        if (result) {
          return sub_2268A61EC(a1, *(unsigned int *)(v10 + 4), v5, 0, v6, v7, v8, v9);
        }
      }
      else
      {
        return 4294967291;
      }
    }
  }
  return result;
}

uint64_t sub_2268A6558(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  memset(&v17, 0, sizeof(v17));
  memset(&v16, 0, sizeof(v16));
  uint64_t v8 = 4294967292;
  if (a1 && a2)
  {
    sub_22687DAD8(*(void *)(a1 + 8), 0, a4, a5, a6, a7, a8, &__str);
    std::string::operator=(&v17, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v16, (const std::string *)(*(void *)(a1 + 8) + 120));
    uint64_t v19 = 0;
    int v18 = a2;
    if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v12 = &v17;
    }
    else {
      uint64_t v12 = (std::string *)v17.__r_.__value_.__r.__words[0];
    }
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v13 = &v16;
    }
    else {
      uint64_t v13 = (std::string *)v16.__r_.__value_.__r.__words[0];
    }
    uint64_t v8 = sub_22683E334(*(void *)(a1 + 16), 0, 60000, (char *)v12, (char *)v13, 1, (uint64_t)&v18, v11);
    if (!v8)
    {
      if (a2 == 1633899078) {
        sub_226888F2C(*(void *)(a1 + 8));
      }
      uint64_t v8 = 0;
    }
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268A6674(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A66BC(uint64_t a1, char *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  memset(&v31, 0, sizeof(v31));
  memset(&v30, 0, sizeof(v30));
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  std::string __p = 0;
  int64_t v27 = 0;
  unsigned int v25 = 0;
  if (!a1) {
    goto LABEL_8;
  }
  sub_22687DAD8(*(void *)(a1 + 8), 0, a4, a5, a6, a7, a8, &__str);
  std::string::operator=(&v31, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0 && !v31.__r_.__value_.__r.__words[0]
    || (std::string::operator=(&v30, (const std::string *)(*(void *)(a1 + 8) + 120)),
        SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
    && !v30.__r_.__value_.__r.__words[0])
  {
LABEL_8:
    uint64_t v11 = 4294967292;
    goto LABEL_9;
  }
  uint64_t v11 = sub_22683C404((uint64_t)a2, a3, (_DWORD *)&v29 + 1, 0, 0, (int *)&v25, 0, 0, 0);
  if (v11) {
    goto LABEL_9;
  }
  uint64_t v11 = sub_22687AB24(*(void *)(a1 + 8), 1937326416, &v29, 0);
  if (v11) {
    goto LABEL_9;
  }
  if (v29 != HIDWORD(v29)) {
    goto LABEL_44;
  }
  if (!sub_22687CB2C(*(void *)(a1 + 8), 1835626067, (uint64_t)&__p, 0))
  {
    if (SHIBYTE(v28) < 0)
    {
      int64_t v21 = v27;
      if (!v27) {
        goto LABEL_20;
      }
      p_p = (char *)__p;
    }
    else
    {
      int64_t v21 = HIBYTE(v28);
      if (!HIBYTE(v28)) {
        goto LABEL_20;
      }
      p_p = (char *)&__p;
    }
    unsigned int v23 = sub_22686F9E4(p_p, v21);
    if (v23)
    {
      if (v25 < v23)
      {
LABEL_44:
        uint64_t v11 = 4294967277;
        goto LABEL_9;
      }
    }
  }
LABEL_20:
  BOOL v14 = sub_22687CBC8(*(void *)(a1 + 8), 1634104688);
  uint64_t v15 = *(void *)(a1 + 16);
  if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string v16 = &v31;
  }
  else {
    std::string v16 = (std::string *)v31.__r_.__value_.__r.__words[0];
  }
  if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string v17 = &v30;
  }
  else {
    std::string v17 = (std::string *)v30.__r_.__value_.__r.__words[0];
  }
  if (v14)
  {
    uint64_t v11 = sub_22683DA94(v15, 4, 60000, (char *)v16, (char *)v17, 1718973808, a2, a3);
    if (v11) {
      goto LABEL_9;
    }
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v18 = &v31;
    }
    else {
      int v18 = (std::string *)v31.__r_.__value_.__r.__words[0];
    }
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v19 = &v30;
    }
    else {
      uint64_t v19 = (std::string *)v30.__r_.__value_.__r.__words[0];
    }
    uint64_t v20 = sub_22683DA94(*(void *)(a1 + 16), 4, 60000, (char *)v18, (char *)v19, 1718973300, 0, 0);
  }
  else
  {
    uint64_t v20 = sub_22683DF18(v15, 2, 60000, (char *)v16, (char *)v17, a3, (uint64_t)a2, v13);
  }
  uint64_t v11 = v20;
LABEL_9:
  if (SHIBYTE(v28) < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v30.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v31.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_2268A6930(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A698C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  size_t v21 = 0;
  std::string v22 = 0;
  memset(&v20, 0, sizeof(v20));
  memset(&v19, 0, sizeof(v19));
  uint64_t v8 = 4294967292;
  if (a1 && a2 && a3)
  {
    char v11 = a4;
    sub_22687DAD8(*(void *)(a1 + 8), 0, a4, a5, a6, a7, a8, &__str);
    std::string::operator=(&v20, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v19, (const std::string *)(*(void *)(a1 + 8) + 120));
    if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v13 = &v20;
    }
    else {
      uint64_t v13 = (std::string *)v20.__r_.__value_.__r.__words[0];
    }
    if ((v19.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      BOOL v14 = &v19;
    }
    else {
      BOOL v14 = (std::string *)v19.__r_.__value_.__r.__words[0];
    }
    uint64_t v8 = sub_22683D588(*(void *)(a1 + 16), v11, 60000, (char *)v13, (char *)v14, 1718970224, &v22, &v21);
    if (!v8)
    {
      size_t v16 = v21;
      uint64_t v15 = v22;
      memcpy(__dst, v22, v21);
      __dst[v16] = 0;
      free(v15);
      if (sscanf(__dst, "%u/%u", a2, a3) == 2) {
        uint64_t v8 = 0;
      }
      else {
        uint64_t v8 = 4294967270;
      }
    }
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268A6B14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A6B5C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = 0;
  memset(&v16, 0, sizeof(v16));
  memset(&v15, 0, sizeof(v15));
  uint64_t v8 = 4294967292;
  if (a1 && a2)
  {
    sub_22687DAD8(*(void *)(a1 + 8), 0, a4, a5, a6, a7, a8, &__p);
    std::string::operator=(&v16, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v15, (const std::string *)(*(void *)(a1 + 8) + 120));
    uint64_t v17 = 0;
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      char v11 = &v16;
    }
    else {
      char v11 = (std::string *)v16.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v12 = &v15;
    }
    else {
      uint64_t v12 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    uint64_t v8 = sub_22683E4B0(*(void *)(a1 + 16), 4u, 60000, (char *)v11, (char *)v12, &v17, @"acpd.system.interfaces", (uint64_t)"", (uint64_t)__p.__r_.__value_.__l.__data_);
    *a2 = v17;
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268A6C6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A6CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  memset(&v15, 0, sizeof(v15));
  memset(&v14, 0, sizeof(v14));
  if (a1)
  {
    sub_22687DAD8(*(void *)(a1 + 8), 0, a4, a5, a6, a7, a8, &__str);
    std::string::operator=(&v15, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v14, (const std::string *)(*(void *)(a1 + 8) + 120));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v9 = &v15;
    }
    else {
      uint64_t v9 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v14;
    }
    else {
      uint64_t v10 = (std::string *)v14.__r_.__value_.__r.__words[0];
    }
    uint64_t v11 = sub_22683E4B0(*(void *)(a1 + 16), 4u, 60000, (char *)v9, (char *)v10, 0, @"wsc.start", (uint64_t)"%kO=%i%kO=%i%kO=%i%kO=%i", @"mode");
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v11 = 4294967292;
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_2268A6DF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v29 - 49) < 0) {
    operator delete(*(void **)(v29 - 72));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A6E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  memset(&v16, 0, sizeof(v16));
  memset(&v15, 0, sizeof(v15));
  if (a1)
  {
    sub_22687DAD8(*(void *)(a1 + 8), 0, a4, a5, a6, a7, a8, &__str);
    std::string::operator=(&v16, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v15, (const std::string *)(*(void *)(a1 + 8) + 120));
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v9 = &v16;
    }
    else {
      uint64_t v9 = (std::string *)v16.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v15;
    }
    else {
      uint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    uint64_t v11 = sub_22683E4B0(*(void *)(a1 + 16), 4u, 60000, (char *)v9, (char *)v10, 0, @"wsc.stop", (uint64_t)"", v13);
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v11 = 4294967292;
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_2268A6F34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A6F7C(uint64_t a1, CFDictionaryRef theDict)
{
  memset(&v15, 0, sizeof(v15));
  memset(&v14, 0, sizeof(v14));
  uint64_t v2 = 4294967292;
  if (a1 && theDict && CFDictionaryGetCount(theDict))
  {
    sub_22687DAD8(*(void *)(a1 + 8), 0, v5, v6, v7, v8, v9, &__str);
    std::string::operator=(&v15, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v14, (const std::string *)(*(void *)(a1 + 8) + 120));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v15;
    }
    else {
      uint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v11 = &v14;
    }
    else {
      uint64_t v11 = (std::string *)v14.__r_.__value_.__r.__words[0];
    }
    uint64_t v2 = sub_22683E4B0(*(void *)(a1 + 16), 4u, 60000, (char *)v10, (char *)v11, 0, @"wsc.authorize", (uint64_t)"%##O", (uint64_t)theDict);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_2268A708C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A70D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  memset(&v15, 0, sizeof(v15));
  memset(&v14, 0, sizeof(v14));
  uint64_t v8 = 4294967292;
  if (a1 && a2)
  {
    sub_22687DAD8(*(void *)(a1 + 8), 0, a4, a5, a6, a7, a8, &__str);
    std::string::operator=(&v15, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v14, (const std::string *)(*(void *)(a1 + 8) + 120));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v15;
    }
    else {
      uint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v11 = &v14;
    }
    else {
      uint64_t v11 = (std::string *)v14.__r_.__value_.__r.__words[0];
    }
    uint64_t v8 = sub_22683E4B0(*(void *)(a1 + 16), 4u, 60000, (char *)v10, (char *)v11, 0, @"diskd.disconnectAll", (uint64_t)"%kO=%O", @"message");
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268A71E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v23 - 33) < 0) {
    operator delete(*(void **)(v23 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A7228(uint64_t a1, CFDictionaryRef theDict)
{
  memset(&v15, 0, sizeof(v15));
  memset(&v14, 0, sizeof(v14));
  uint64_t v2 = 4294967292;
  if (a1 && theDict && CFDictionaryGetCount(theDict))
  {
    sub_22687DAD8(*(void *)(a1 + 8), 0, v5, v6, v7, v8, v9, &__str);
    std::string::operator=(&v15, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v14, (const std::string *)(*(void *)(a1 + 8) + 120));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v15;
    }
    else {
      uint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v11 = &v14;
    }
    else {
      uint64_t v11 = (std::string *)v14.__r_.__value_.__r.__words[0];
    }
    uint64_t v2 = sub_22683E4B0(*(void *)(a1 + 16), 4u, 60000, (char *)v10, (char *)v11, 0, @"diskd.eraseDisk", (uint64_t)"%##O", (uint64_t)theDict);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_2268A7338(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A7380(uint64_t a1, CFDictionaryRef theDict)
{
  memset(&v15, 0, sizeof(v15));
  memset(&v14, 0, sizeof(v14));
  uint64_t v2 = 4294967292;
  if (a1 && theDict && CFDictionaryGetCount(theDict))
  {
    sub_22687DAD8(*(void *)(a1 + 8), 0, v5, v6, v7, v8, v9, &__str);
    std::string::operator=(&v15, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v14, (const std::string *)(*(void *)(a1 + 8) + 120));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v15;
    }
    else {
      uint64_t v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v11 = &v14;
    }
    else {
      uint64_t v11 = (std::string *)v14.__r_.__value_.__r.__words[0];
    }
    uint64_t v2 = sub_22683E4B0(*(void *)(a1 + 16), 4u, 60000, (char *)v10, (char *)v11, 0, @"diskd.archiveDisk", (uint64_t)"%##O", (uint64_t)theDict);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_2268A7490(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A74D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  memset(&v16, 0, sizeof(v16));
  memset(&v15, 0, sizeof(v15));
  if (a1)
  {
    sub_22687DAD8(*(void *)(a1 + 8), 0, a4, a5, a6, a7, a8, &__str);
    std::string::operator=(&v16, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v15, (const std::string *)(*(void *)(a1 + 8) + 120));
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v16;
    }
    else {
      uint64_t v10 = (std::string *)v16.__r_.__value_.__r.__words[0];
    }
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v11 = &v15;
    }
    else {
      uint64_t v11 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    uint64_t v12 = sub_22683E4B0(*(void *)(a1 + 16), 4u, 60000, (char *)v10, (char *)v11, 0, a2, (uint64_t)"", 0);
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v12 = 4294967292;
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v12;
}

void sub_2268A75D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A7620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  memset(&v15, 0, sizeof(v15));
  memset(&v14, 0, sizeof(v14));
  if (a1)
  {
    sub_22687DAD8(*(void *)(a1 + 8), 0, a4, a5, a6, a7, a8, &__str);
    std::string::operator=(&v15, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v14, (const std::string *)(*(void *)(a1 + 8) + 120));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v9 = &v15;
    }
    else {
      uint64_t v9 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v14;
    }
    else {
      uint64_t v10 = (std::string *)v14.__r_.__value_.__r.__words[0];
    }
    uint64_t v11 = sub_22683E4B0(*(void *)(a1 + 16), 4u, 60000, (char *)v9, (char *)v10, 0, @"acpd.checkConnection", (uint64_t)"", 0);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v11 = 4294967292;
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_2268A7718(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A7760(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  memset(&v17, 0, sizeof(v17));
  memset(&v16, 0, sizeof(v16));
  uint64_t v4 = 4294967292;
  if (a2 && a1 && a3)
  {
    if (sub_22687CBC8(*(void *)(a1 + 8), 1919052402))
    {
      sub_22687DAD8(*(void *)(a1 + 8), 0, v7, v8, v9, v10, v11, &__str);
      std::string::operator=(&v17, &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      std::string::operator=(&v16, (const std::string *)(*(void *)(a1 + 8) + 120));
      if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v12 = &v17;
      }
      else {
        uint64_t v12 = (std::string *)v17.__r_.__value_.__r.__words[0];
      }
      if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v13 = &v16;
      }
      else {
        uint64_t v13 = (std::string *)v16.__r_.__value_.__r.__words[0];
      }
      uint64_t v4 = sub_22683E4B0(*(void *)(a1 + 16), 4u, 60000, (char *)v12, (char *)v13, a4, @"remoteBonjour.browse", (uint64_t)"%kO=%O%kO=%O", @"domain");
      if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v16.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      uint64_t v4 = 4294960561;
    }
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_2268A78A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v25 - 49) < 0) {
    operator delete(*(void **)(v25 - 72));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A78F0(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_22687DAD8(*(void *)(a1 + 8), 0, a4, a5, a6, a7, a8, &v22);
  uint64_t v12 = *(void *)(a1 + 8);
  if (*(char *)(v12 + 143) < 0)
  {
    sub_22689EF14(__p, *(void **)(v12 + 120), *(void *)(v12 + 128));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)(v12 + 120);
    uint64_t v21 = *(void *)(v12 + 136);
  }
  std::string v15 = *(unsigned __int8 **)(a1 + 24);
  std::string v14 = (void *)(a1 + 24);
  uint64_t v13 = v15;
  if (v15)
  {
    sub_22683F080(v13);
    *std::string v14 = 0;
  }
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string v16 = &v22;
  }
  else {
    std::string v16 = (std::string *)v22.__r_.__value_.__r.__words[0];
  }
  if (v21 >= 0) {
    std::string v17 = __p;
  }
  else {
    std::string v17 = (void **)__p[0];
  }
  uint64_t v18 = sub_22683EDC0(v14, (const char *)v16, (const char *)v17, 0, a2, a3, a4);
  if (SHIBYTE(v21) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  return v18;
}

void sub_2268A79E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_2268A7A14(BOOL result)
{
  if (result) {
    return *(void *)(result + 24) != 0;
  }
  return result;
}

void sub_2268A7A28(char *__s)
{
  sub_22689F090(__p, __s);
  sub_22688BF74((char *)__p);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
}

void sub_2268A7A70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A7A8C(uint64_t a1)
{
  uint64_t result = sub_2268A3D28(a1);
  if (!result)
  {
    if (!a1
      || (uint64_t result = sub_22687CD0C(*(void *)(a1 + 8)), !result)
      && (uint64_t result = sub_22688C334(*(void *)(a1 + 8)), !result))
    {
      return sub_2268A3590(a1);
    }
  }
  return result;
}

uint64_t sub_2268A7AF0(uint64_t a1, int a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  if (!a1) {
    return 4294960591;
  }
  sub_22683C448(a2, v12);
  if (!sub_22688035C(a2))
  {
    if ((sub_226882198(*(void *)(a1 + 8), a2) & 1) == 0) {
      return sub_22688B9D0(*(void *)(a1 + 8), v12);
    }
    return 0;
  }
  memset(&__p, 0, sizeof(__p));
  CFIndex v4 = sub_2268801D8(*(void *)(a1 + 8), 0);
  if (v4 <= 0) {
    return 0;
  }
  uint64_t v5 = 0;
  CFIndex v6 = v4 - 1;
  do
  {
    sub_226894368(v13, 0x11uLL, v5);
    MEMORY[0x22A65ABB0](&__p, v13);
    sub_226880920((unsigned __int8 *)&__p, a2, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    uint64_t v8 = sub_22688B9D0(*(void *)(a1 + 8), (char *)p_p);
    if (v8) {
      BOOL v9 = 1;
    }
    else {
      BOOL v9 = v6 == v5;
    }
    ++v5;
  }
  while (!v9);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268A7C3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_2268A7C64(uint64_t result)
{
  if (result) {
    return sub_22688CEEC(*(void *)(result + 8), 0);
  }
  return result;
}

uint64_t sub_2268A7C78(uint64_t result)
{
  if (result) {
    return sub_226880258(*(void *)(result + 8), 0);
  }
  return result;
}

uint64_t sub_2268A7C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  memset(&v15, 0, sizeof(v15));
  memset(&v14, 0, sizeof(v14));
  if (a1)
  {
    sub_22687DAD8(*(void *)(a1 + 8), 0, a4, a5, a6, a7, a8, &__str);
    std::string::operator=(&v15, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::operator=(&v14, (const std::string *)(*(void *)(a1 + 8) + 120));
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      BOOL v9 = &v15;
    }
    else {
      BOOL v9 = (std::string *)v15.__r_.__value_.__r.__words[0];
    }
    if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = &v14;
    }
    else {
      uint64_t v10 = (std::string *)v14.__r_.__value_.__r.__words[0];
    }
    uint64_t v11 = sub_22683E4B0(*(void *)(a1 + 16), 4u, 60000, (char *)v9, (char *)v10, 0, @"dhcp.client.lease.action", (uint64_t)"%kO=%O", @"action");
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v11 = 4294967292;
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_2268A7D94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v23 - 17) < 0) {
    operator delete(*(void **)(v23 - 40));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A7DDC(uint64_t a1)
{
  BOOL v20 = 0;
  uint64_t v19 = 0;
  uint64_t v18 = 0;
  CFStringRef v17 = 0;
  std::string v16 = 0;
  int v15 = 0;
  sub_22689F090(&__p, "WiFi.radios.[*].");
  if (!a1)
  {
    uint64_t v7 = 4294967292;
    goto LABEL_8;
  }
  uint64_t v7 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], (CFTypeRef *)&v17, (uint64_t)"{%kO=[%@]}", v2, v3, v4, v5, v6, @"problems");
  if (!v7)
  {
    uint64_t v7 = sub_22687AB24(*(void *)(a1 + 8), 1464626795, &v18, 0);
    if (!v7)
    {
      if (sub_22687CBC8(*(void *)(a1 + 8), 1147761477))
      {
        int v12 = 0;
        uint64_t v7 = sub_22687AB24(*(void *)(a1 + 8), 2002867012, &v12, 0);
        BOOL v8 = (v7 | ~v12 & 0xF) == 0;
        if (v7) {
          goto LABEL_8;
        }
      }
      else
      {
        BOOL v8 = 0;
      }
      uint64_t v7 = sub_22687AB24(*(void *)(a1 + 8), 2002864494, (char *)&v19 + 4, 0);
      if (!v7)
      {
        sub_226880920((unsigned __int8 *)&__p, 1651726157, &__p);
        uint64_t v7 = sub_226888134(*(void *)(a1 + 8), (uint64_t)&__p, (char *)&v18 + 4, 0);
        if (!v7)
        {
          sub_226880920((unsigned __int8 *)&__p, 1651723853, &__p);
          uint64_t v7 = sub_226888134(*(void *)(a1 + 8), (uint64_t)&__p, &v19, 0);
          if (!v7)
          {
            if (v8
              || HIDWORD(v19) != 16
              || HIDWORD(v18) == 2
              || HIDWORD(v18) == 3
              || v19 == 1
              || v18
              || (uint64_t v7 = sub_2268A1AFC(v16, 2002865740), !v7))
            {
              uint64_t v7 = sub_2268883A8(*(void *)(a1 + 8), 2002866767, &v20, 0);
              if (!v7)
              {
                if (!v20 || (uint64_t v7 = sub_2268A1AFC(v16, 2002866794), !v7))
                {
                  uint64_t v7 = sub_22687AB24(*(void *)(a1 + 8), 1937327724, &v15, 0);
                  if (!v7)
                  {
                    __int16 v10 = v15;
                    if ((v15 & 0x40) != 0)
                    {
                      uint64_t v7 = sub_2268A1AFC(v16, 1668573549);
                      if (v7) {
                        goto LABEL_8;
                      }
                      __int16 v10 = v15;
                    }
                    if ((v10 & 0x2000) == 0 || (uint64_t v7 = sub_2268A1AFC(v16, 1936680564), !v7))
                    {
                      uint64_t v11 = sub_22683C448(1937331060, v14);
                      uint64_t v7 = sub_2268A53BC(a1, v11, v17);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_8:
  if (v17) {
    CFRelease(v17);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268A80A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2268A80C4(const __CFString *a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    if (a2)
    {
      int v27 = 0;
      char v26 = 0;
      sub_22686088C(a1, (uint64_t)&v27, (UInt8 *)"%ks:int", a4, a5, a6, a7, a8, (uint64_t)"raWM");
      if (!v15)
      {
        sub_22686088C(a1, (uint64_t)&v26, (UInt8 *)"%ks:BOOL", v10, v11, v12, v13, v14, (uint64_t)"raEA");
        if (!v21)
        {
          char v25 = 0;
          sub_22686088C(a1, (uint64_t)&v25, (UInt8 *)"%ks:BOOL", v16, v17, v18, v19, v20, (uint64_t)"rTSN");
          int v22 = 1;
          switch(v27)
          {
            case 0:
              goto LABEL_17;
            case 1:
              int v22 = 2;
              goto LABEL_17;
            case 2:
              int v22 = 3;
              goto LABEL_17;
            case 3:
              if (v25) {
                goto LABEL_12;
              }
              BOOL v23 = v26 == 0;
              int v22 = 11;
              int v24 = 6;
              goto LABEL_15;
            case 4:
              if (v25)
              {
LABEL_12:
                int v22 = 8;
              }
              else
              {
                BOOL v23 = v26 == 0;
                int v22 = 10;
                int v24 = 5;
LABEL_15:
                if (v23) {
                  int v22 = v24;
                }
              }
LABEL_17:
              *a2 = v22;
              break;
            case 5:
              BOOL v23 = v26 == 0;
              int v22 = 12;
              int v24 = 7;
              goto LABEL_15;
            default:
              int v22 = 0;
              goto LABEL_17;
          }
        }
      }
    }
  }
}

uint64_t sub_2268A822C(unsigned int a1)
{
  unsigned int v1 = (0x530u >> a1) & 1;
  if (a1 > 0xA) {
    unsigned int v1 = 0;
  }
  if (HIWORD(a1)) {
    return 1;
  }
  else {
    return v1;
  }
}

uint64_t sub_2268A8254(unsigned int a1)
{
  if (a1 >= 0x10000 && (_WORD)a1) {
    return 1;
  }
  if ((a1 & 0xFFF8) != 0) {
    return 0;
  }
  return (0xCEu >> a1) & 1;
}

uint64_t sub_2268A8284(int a1, void *a2)
{
  uint64_t result = 0;
  if (a1 && a2)
  {
    uint64_t v7 = 0;
    *a2 = 0;
    if (sub_2268A5FD4(a1, &v7)) {
      return 0;
    }
    uint64_t v5 = v7;
    if (!v7) {
      return 0;
    }
    *a2 = *(unsigned int *)(v7 + 20);
    if (*(_DWORD *)(v5 + 12) == 2) {
      return 3;
    }
    int v6 = *(_DWORD *)(v5 + 28) - 2;
    if (v6 > 0xD) {
      return 0;
    }
    else {
      return dword_226913178[v6];
    }
  }
  return result;
}

uint64_t sub_2268A8320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFTypeRef cf = 0;
  if (!a1) {
    return 4294960591;
  }
  uint64_t v9 = sub_2268A6558(a1, 1633899078, a3, a4, a5, a6, a7, a8);
  if (!v9)
  {
    uint64_t v20 = 0;
    uint64_t v9 = sub_2268891B0(*(void *)(a1 + 8), &cf);
    if (!v9)
    {
      if (!cf) {
        return 4294960568;
      }
      uint64_t v9 = sub_2268A0DCC(a1, &v20);
      if (!v9)
      {
        if (v20)
        {
          uint64_t v9 = sub_22688A314(*(void *)(a1 + 8), v20, (const __CFString *)cf, 1);
          if (v20)
          {
            CFRelease(v20);
            uint64_t v20 = 0;
          }
          if (!v9)
          {
            uint64_t v11 = *(std::string **)(a1 + 8);
            sub_22689F090(&__str, "public");
            std::string::operator=(v11 + 5, &__str);
            if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__str.__r_.__value_.__l.__data_);
            }
            uint64_t v9 = sub_2268A6558(a1, 1633899074, v12, v13, v14, v15, v16, v17);
          }
        }
        else
        {
          uint64_t v9 = 4294960568;
        }
      }
    }
    if (cf) {
      CFRelease(cf);
    }
  }
  return v9;
}

void sub_2268A843C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2268A8458(int a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a1)
  {
    if (a3)
    {
      if (*(void *)a3)
      {
        if (*(void *)(a3 + 24))
        {
          CFStringRef v38 = 0;
          CFStringRef theString1 = 0;
          CFStringRef v36 = 0;
          CFStringRef v37 = 0;
          CFArrayRef theArray = 0;
          sub_22686088C(a2, (uint64_t)&theString1, (UInt8 *)"%ks.%ks", a4, a5, a6, a7, a8, (uint64_t)"ACPRemoteBonjour");
          if (!v10)
          {
            if (theString1)
            {
              if (CFEqual(theString1, *(CFStringRef *)a3))
              {
                sub_22686088C(a2, (uint64_t)&v36, (UInt8 *)"%ks.%ks", v11, v12, v13, v14, v15, (uint64_t)"ACPRemoteBonjour");
                if (!v21)
                {
                  if (v36)
                  {
                    sub_22686088C(v36, (uint64_t)&v38, (UInt8 *)"%ks.%ks", v16, v17, v18, v19, v20, (uint64_t)"txt");
                    if (!v27)
                    {
                      if (v38)
                      {
                        if (!*(void *)(a3 + 16)
                          || ((CFStringRef v34 = 0,
                               sub_22686088C(v36, (uint64_t)&v34, (UInt8 *)"%ks.%ks", v22, v23, v24, v25, v26, (uint64_t)"txt"), v28 == -6727)|| !v28 && v34)&& (sub_2268A1408(v38, *(const __CFString **)(a3 + 16)) & 1) == 0&& (!v34 || (sub_2268A1408(v34, *(const __CFString **)(a3 + 16)) & 1) == 0))
                        {
                          if (*(void *)(a3 + 8))
                          {
                            sub_22686088C(v36, (uint64_t)&theArray, (UInt8 *)"%ks", v22, v23, v24, v25, v26, (uint64_t)"services");
                            if (!v29)
                            {
                              if (theArray)
                              {
                                CFIndex Count = CFArrayGetCount(theArray);
                                if (Count >= 1)
                                {
                                  CFIndex v31 = Count;
                                  for (uint64_t i = 0; i != v31; ++i)
                                  {
                                    sub_22686088C((const __CFString *)theArray, (uint64_t)&v37, (UInt8 *)"[*].%ks", v22, v23, v24, v25, v26, i);
                                    if (v33 || !v37) {
                                      break;
                                    }
                                    if (CFEqual(v37, *(CFStringRef *)(a3 + 8))) {
                                      goto LABEL_30;
                                    }
                                  }
                                }
                              }
                            }
                          }
                          else
                          {
LABEL_30:
                            sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], *(__CFArray **)(a3 + 24), (uint64_t)"%kO=%O", v22, v23, v24, v25, v26, (uint64_t)v38);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2268A8688(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, unsigned int a5, int a6, void *a7)
{
  CFTypeRef v40 = 0;
  CFTypeRef cf = 0;
  CFTypeRef v42 = 0;
  CFTypeRef v39 = 0;
  uint64_t v7 = 4294960591;
  if (!a1 || !a2 || !a3 || !a7) {
    goto LABEL_9;
  }
  if (!sub_22687CBC8(*(void *)(a1 + 8), 1919052402))
  {
    uint64_t v7 = 4294960561;
    goto LABEL_9;
  }
  if (pthread_main_np())
  {
    uint64_t v7 = 4294960593;
    goto LABEL_9;
  }
  if (a6)
  {
    uint64_t v16 = sub_22683C448(1651716685, v43);
    uint64_t v7 = sub_2268A54A8(a1, v16, (CFMutableDictionaryRef *)&v39);
    if (v7) {
      goto LABEL_9;
    }
    CFTypeRef v17 = v39;
  }
  else
  {
    CFTypeRef v17 = 0;
    CFTypeRef v39 = 0;
  }
  uint64_t v18 = malloc_type_calloc(1uLL, 0x20uLL, 0x60040FAD0F902uLL);
  if (!v18)
  {
LABEL_30:
    uint64_t v7 = 4294960568;
    goto LABEL_9;
  }
  uint64_t v19 = (uint64_t)v18;
  *uint64_t v18 = 0;
  v18[2] = v17;
  if (v17) {
    CFRetain(v17);
  }
  *(void *)(v19 + 8) = a4;
  if (a4) {
    CFRetain(a4);
  }
  CFAllocatorRef v20 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  *(void *)(v19 + 24) = Mutable;
  if (!Mutable)
  {
    sub_2268A8984((const void **)v19);
    goto LABEL_30;
  }
  uint64_t v7 = sub_22685FC7C(v20, &v42, (uint64_t)"{%ks={%ks={}}}", v22, v23, v24, v25, v26, (uint64_t)"filters");
  if (!v7)
  {
    uint64_t v7 = sub_2268A78F0(a1, v42, (uint64_t)sub_2268A8458, v19, v27, v28, v29, v30);
    if (!v7)
    {
      uint64_t v7 = sub_2268A7760(a1, a2, a3, &cf);
      if (!v7)
      {
        if (cf)
        {
          sub_22686088C((const __CFString *)cf, (uint64_t)&v40, (UInt8 *)"%ks", v31, v32, v33, v34, v35, (uint64_t)"uuid");
          uint64_t v7 = v36;
          if (v36) {
            goto LABEL_27;
          }
          if (!v40) {
            goto LABEL_42;
          }
          uint64_t v7 = sub_2268A8934((const void **)v19, v40);
          if (v7) {
            goto LABEL_27;
          }
          if (cf)
          {
            CFRelease(cf);
            CFTypeRef cf = 0;
          }
          sleep(a5);
          CFStringRef v37 = *(unsigned __int8 **)(a1 + 24);
          if (v37)
          {
            sub_22683F080(v37);
            *(void *)(a1 + 24) = 0;
          }
          *a7 = 0;
          CFStringRef v38 = *(const void **)(v19 + 24);
          if (v38)
          {
            *a7 = v38;
            CFRetain(v38);
            uint64_t v7 = 0;
          }
          else
          {
LABEL_42:
            uint64_t v7 = 4294960568;
          }
        }
        else
        {
          uint64_t v7 = 4294960569;
        }
      }
    }
  }
LABEL_27:
  sub_2268A8984((const void **)v19);
  if (v42)
  {
    CFRelease(v42);
    CFTypeRef v42 = 0;
  }
LABEL_9:
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (v39) {
    CFRelease(v39);
  }
  return v7;
}

uint64_t sub_2268A8934(const void **a1, CFTypeRef cf)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t v4 = *a1;
  if (v4) {
    CFRelease(v4);
  }
  *a1 = cf;
  CFRetain(cf);
  return 0;
}

void sub_2268A8984(const void **a1)
{
  uint64_t v2 = *a1;
  if (v2)
  {
    CFRelease(v2);
    *a1 = 0;
  }
  uint64_t v3 = a1[2];
  if (v3)
  {
    CFRelease(v3);
    a1[2] = 0;
  }
  uint64_t v4 = a1[1];
  if (v4)
  {
    CFRelease(v4);
    a1[1] = 0;
  }
  uint64_t v5 = a1[3];
  if (v5) {
    CFRelease(v5);
  }

  free(a1);
}

uint64_t sub_2268A89F4(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, unsigned int a5, int a6, CFTypeRef *a7)
{
  CFTypeRef v21 = 0;
  uint64_t v22 = 0;
  CFTypeRef cf = 0;
  uint64_t v7 = 4294960591;
  if (a1 && a2 && a3 && a7)
  {
    if (pthread_main_np())
    {
      uint64_t v7 = 4294960593;
    }
    else
    {
      uint64_t v7 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"[%C%C%C]", v14, v15, v16, v17, v18, 1466517097);
      if (!v7)
      {
        if (!cf)
        {
          uint64_t v7 = 4294960568;
          goto LABEL_10;
        }
        uint64_t v7 = sub_2268A243C((uint64_t)&v22);
        if (!v7)
        {
          uint64_t v7 = sub_2268A2AE0((uint64_t)v22, (const __CFArray *)cf, 1);
          if (!v7)
          {
            if (v22 && sub_22687CBC8(*((void *)v22 + 1), 1919052402))
            {
              uint64_t v7 = sub_2268A8688((uint64_t)v22, a2, a3, a4, a5, a6, &v21);
              if (!v7)
              {
                if (v21)
                {
                  uint64_t v7 = 0;
                  *a7 = v21;
                  CFTypeRef v21 = 0;
                }
                else
                {
                  uint64_t v7 = 4294960568;
                }
              }
            }
            else
            {
              uint64_t v7 = 4294960561;
            }
          }
        }
      }
    }
  }
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
LABEL_10:
  if (v21)
  {
    CFRelease(v21);
    CFTypeRef v21 = 0;
  }
  if (v22) {
    sub_2268A238C(v22);
  }
  return v7;
}

uint64_t sub_2268A8B94(uint64_t a1, const __CFString *a2, uint64_t a3)
{
  uint64_t v17 = 0;
  CFStringRef v18 = 0;
  __p[0] = 0;
  __p[1] = 0;
  if (a3 == 2003061875)
  {
    MEMORY[0x22A65ABB0](__p, "legacywds");
  }
  else
  {
    sub_22683C448(a3, v15);
    MEMORY[0x22A65ABB0](__p, v15);
  }
  uint64_t v11 = __p;
  if (v17 < 0) {
    uint64_t v11 = (void **)__p[0];
  }
  sub_22686088C(a2, (uint64_t)&v18, (UInt8 *)"%ks", v6, v7, v8, v9, v10, (uint64_t)v11);
  uint64_t v13 = v12;
  if (!v12) {
    uint64_t v13 = sub_22687AF44(*(void *)(a1 + 8), a3, v18, 0);
  }
  if (SHIBYTE(v17) < 0) {
    operator delete(__p[0]);
  }
  return v13;
}

void sub_2268A8C70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268A8C90(uint64_t a1, __CFArray *a2, uint64_t a3)
{
  CFTypeRef v19 = 0;
  sub_22683C448(a3, v18);
  uint64_t v6 = sub_22687CDBC(*(void *)(a1 + 8), a3, &v19, 0);
  if (a3 != 2003061875)
  {
    uint64_t v14 = v6;
    if (v6)
    {
      if (v6 != -5) {
        goto LABEL_19;
      }
      if (a3 != 1918128974)
      {
        if (a3 != 1918977586 && a3 != 1918980980)
        {
          uint64_t v14 = 0;
          goto LABEL_19;
        }
        uint64_t v15 = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], a2, (uint64_t)"%ks=%i", v7, v8, v9, v10, v11, (uint64_t)v18);
LABEL_18:
        uint64_t v14 = v15;
        goto LABEL_19;
      }
      CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    }
    else
    {
      CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    }
    uint64_t v13 = v18;
    goto LABEL_17;
  }
  if (v19)
  {
LABEL_3:
    CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    uint64_t v13 = "legacywds";
LABEL_17:
    uint64_t v15 = sub_226860774(v12, a2, (uint64_t)"%ks=%O", v7, v8, v9, v10, v11, (uint64_t)v13);
    goto LABEL_18;
  }
  CFTypeRef cf = 0;
  uint64_t v15 = sub_22683F308(2003061875, 0, 0, 1, (CFStringRef *)&cf);
  if (v15) {
    goto LABEL_18;
  }
  uint64_t v14 = sub_22688256C(*(void *)(a1 + 8), 2003061875, (CFDataRef)cf, &v19);
  if (cf) {
    CFRelease(cf);
  }
  if (!v14) {
    goto LABEL_3;
  }
LABEL_19:
  if (v19) {
    CFRelease(v19);
  }
  return v14;
}

uint64_t sub_2268A8E3C(uint64_t a1, _DWORD *a2)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t result = 4294960591;
  if (a2)
  {
    if (*(_DWORD *)(a1 + 144) == 1634561902)
    {
      uint64_t result = 0;
      *a2 = *(_DWORD *)(a1 + 84);
    }
  }
  return result;
}

uint64_t sub_2268A8E78(uint64_t a1, _DWORD *a2)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t result = 4294960591;
  if (a2)
  {
    if (*(_DWORD *)(a1 + 144) == 1634561902)
    {
      uint64_t result = 0;
      *a2 = *(_DWORD *)(a1 + 80);
    }
  }
  return result;
}

uint64_t sub_2268A8EB4(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetTaskState(BSConfigurationContextRef, eBSConfigurationTaskState)", 800, (uint64_t)" \n", a5, a6, a7, a8, v12);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  if (a2 > 6) {
    return 4294960586;
  }
  if (a2)
  {
    if (a2 == 6) {
      unsigned int v10 = 1;
    }
    else {
      unsigned int v10 = 2;
    }
    sub_2268DCE10(*(void *)(a1 + 128), v10, a3, a4, a5, a6, a7, a8);
    if (*(_DWORD *)(a1 + 80)) {
      return 4294960587;
    }
  }
  else
  {
    sub_2268DCE10(*(void *)(a1 + 128), 0, a3, a4, a5, a6, a7, a8);
  }
  uint64_t result = 0;
  *(_DWORD *)(a1 + 80) = a2;
  *(_DWORD *)(a1 + 84) = 0;
  return result;
}

uint64_t sub_2268A8F94(uint64_t a1, _DWORD *a2)
{
  if (a1 && *(_DWORD *)(a1 + 144) == 1634561902) {
    return sub_2268DCDD4(*(void *)(a1 + 128), a2);
  }
  else {
    return 4294960591;
  }
}

uint64_t sub_2268A8FBC(void *context, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_RPCRefreshClientListAndSystemInterfacesAsync(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v16);
  }
  if (!context) {
    return 4294960591;
  }
  if (*((_DWORD *)context + 36) != 1634561902) {
    return 4294960591;
  }
  uint64_t v9 = *((void *)context + 15);
  if (!v9) {
    return 4294960591;
  }
  unsigned int v10 = *((void *)context + 14);
  if (!v10) {
    return 4294960591;
  }
  dispatch_group_async_f(v9, v10, context, (dispatch_function_t)sub_2268A9088);
  sub_2268DCB00(*((void *)context + 16), 27, 0, 0, v11, v12, v13, v14);
  return 0;
}

void sub_2268A9088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_RPCRefreshClientListAndSystemInterfacesSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v20);
  }
  uint64_t v21 = 0;
  CFTypeRef cf = 0;
  if (a1)
  {
    if (*(_DWORD *)(a1 + 144) == 1634561902 && *(void *)(a1 + 8))
    {
      uint64_t v9 = sub_2268DBB2C(*(void *)(a1 + 128), a2, a3, a4, a5, a6, a7, a8);
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = 0;
      }
      else
      {
        uint64_t v10 = sub_2268A6454(*(void *)(a1 + 8), 1918980940);
        if (!v10)
        {
          uint64_t v10 = sub_2268A6B5C(*(void *)(a1 + 8), &cf, v13, v14, v15, v16, v17, v18);
          if (!v10)
          {
            if (cf)
            {
              sub_22686088C((const __CFString *)cf, (uint64_t)&v21, (UInt8 *)"%ks", v14, v15, v16, v17, v18, (uint64_t)"data");
              uint64_t v10 = v19;
              if (!v19)
              {
                if (v21) {
                  uint64_t v10 = 0;
                }
                else {
                  uint64_t v10 = 4294960568;
                }
              }
            }
            else
            {
              uint64_t v10 = 4294960568;
            }
          }
        }
        sub_2268DBBDC(*(void *)(a1 + 128), v12, v13, v14, v15, v16, v17, v18);
        uint64_t v11 = v21;
      }
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v10 = 4294960591;
    }
    sub_2268DC994(*(void *)(a1 + 128), 28, 1, v10, v11, a6, a7, a8);
    if (cf) {
      CFRelease(cf);
    }
  }
}

uint64_t sub_2268A91E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_RPCStartRemoteBrowseAsync(BSConfigurationContextRef, CFStringRef, CFStringRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v22);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902 || !*(void *)(a1 + 120)) {
    return 4294960591;
  }
  uint64_t v11 = 4294960591;
  if (a3)
  {
    if (a2)
    {
      if (*(void *)(a1 + 112))
      {
        CFTypeRef cf = 0;
        context = 0;
        uint64_t v11 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%kO=%O%kO=%O}", a4, a5, a6, a7, a8, @"kAsyncParam_RemoteBrowse_Domain");
        if (!v11)
        {
          if (!cf) {
            return 0;
          }
          uint64_t v11 = sub_2268A9354(a1, cf, &context, v12, v13, v14, v15, v16);
          if (cf)
          {
            CFRelease(cf);
            CFTypeRef cf = 0;
          }
          if (!v11)
          {
            if (!context) {
              return 4294960568;
            }
            dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), context, (dispatch_function_t)sub_2268A943C);
            sub_2268DCB00(*(void *)(a1 + 128), 27, 0, 0, v17, v18, v19, v20);
            return 0;
          }
        }
      }
    }
  }
  return v11;
}

uint64_t sub_2268A9354(uint64_t a1, const void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus __AsyncContext_Create(BSConfigurationContextRef, CFDictionaryRef, __AsyncContextRef *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v14);
  }
  uint64_t result = 4294960591;
  if (a3 && *(_DWORD *)(a1 + 144) == 1634561902)
  {
    uint64_t v12 = malloc_type_calloc(1uLL, 0x18uLL, 0x106004025F8D3E0uLL);
    if (v12)
    {
      uint64_t v13 = v12;
      *uint64_t v12 = a1;
      v12[1] = a2;
      if (a2) {
        CFRetain(a2);
      }
      uint64_t result = 0;
      *((_DWORD *)v13 + 4) = 1634561902;
      *a3 = v13;
    }
    else
    {
      return 4294960568;
    }
  }
  return result;
}

void sub_2268A943C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_RPCStartRemoteBrowseSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v24);
  }
  CFTypeRef cf = 0;
  if (a1)
  {
    if (*((_DWORD *)a1 + 4) == 1634561902)
    {
      uint64_t v9 = *a1;
      if (*a1)
      {
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        if (*(_DWORD *)(v9 + 144) != 1634561902 || !*(void *)(v9 + 8))
        {
          CFTypeRef v13 = 0;
          uint64_t v12 = 4294960591;
          goto LABEL_13;
        }
        uint64_t v10 = sub_2268DBB2C(*(void *)(v9 + 128), a2, a3, a4, a5, a6, a7, a8);
        if (v10)
        {
          uint64_t v12 = v10;
          CFTypeRef v13 = 0;
          goto LABEL_13;
        }
        sub_22686088C((const __CFString *)a1[1], (uint64_t)&v26, (UInt8 *)"%kO", v11, a5, a6, a7, a8, @"kAsyncParam_RemoteBrowse_Domain");
        uint64_t v12 = v21;
        if (!v21)
        {
          if (!v26)
          {
LABEL_22:
            uint64_t v12 = 4294960568;
            goto LABEL_23;
          }
          sub_22686088C((const __CFString *)a1[1], (uint64_t)&v27, (UInt8 *)"%kO", v16, v17, v18, v19, v20, @"kAsyncParam_RemoteBrowse_Service");
          uint64_t v12 = v22;
          if (!v22)
          {
            uint64_t v15 = v27;
            if (v27)
            {
              uint64_t v23 = sub_2268A7760(*(void *)(v9 + 8), v26, v27, &cf);
              uint64_t v12 = v23;
              if (v23 != -6735)
              {
                if (v23 == 0 && cf == 0) {
                  uint64_t v12 = 4294960568;
                }
                else {
                  uint64_t v12 = v23;
                }
              }
              goto LABEL_23;
            }
            goto LABEL_22;
          }
        }
LABEL_23:
        sub_2268DBBDC(*(void *)(v9 + 128), v14, v15, v16, v17, v18, v19, v20);
        CFTypeRef v13 = cf;
LABEL_13:
        sub_2268DC568(*(void *)(v9 + 128), 28, v12, (uint64_t)v13, a5, a6, a7, a8);
        if (cf) {
          CFRelease(cf);
        }
      }
    }
  }
}

uint64_t sub_2268A95F0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_RPCRefreshBSSettingAsync(BSConfigurationContextRef, BSSetting)", 800, (uint64_t)" \n", a5, a6, a7, a8, v21);
  }
  uint64_t v10 = 4294960591;
  if (a1)
  {
    if (a2)
    {
      if (*(_DWORD *)(a1 + 144) == 1634561902)
      {
        if (*(void *)(a1 + 120))
        {
          if (*(void *)(a1 + 112))
          {
            CFTypeRef cf = 0;
            context = 0;
            uint64_t v10 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%kO=%i}", a4, a5, a6, a7, a8, @"kAsyncParam_Refresh_BSSetting");
            if (!v10)
            {
              if (!cf) {
                return 0;
              }
              uint64_t v10 = sub_2268A9354(a1, cf, &context, v11, v12, v13, v14, v15);
              if (cf)
              {
                CFRelease(cf);
                CFTypeRef cf = 0;
              }
              if (!v10)
              {
                if (!context) {
                  return 4294960568;
                }
                dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), context, (dispatch_function_t)sub_2268A9744);
                sub_2268DCB00(*(void *)(a1 + 128), 27, 0, 0, v16, v17, v18, v19);
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return v10;
}

void sub_2268A9744(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_RPCRefreshBSSettingSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v23);
  }
  CFTypeRef cf = 0;
  CFTypeRef v25 = 0;
  if (a1)
  {
    unsigned int v26 = 0;
    if (*((_DWORD *)a1 + 4) == 1634561902)
    {
      uint64_t v9 = *a1;
      if (*a1)
      {
        if (*(_DWORD *)(v9 + 144) == 1634561902 && *(void *)(v9 + 8) && a1[1])
        {
          uint64_t v10 = sub_2268DBB2C(*(void *)(v9 + 128), a2, a3, a4, a5, a6, a7, a8);
          if (v10)
          {
            uint64_t v13 = v10;
            CFTypeRef v14 = 0;
          }
          else
          {
            sub_22686088C((const __CFString *)a1[1], (uint64_t)&v26, (UInt8 *)"%kO:int", v11, v12, a6, a7, a8, @"kAsyncParam_Refresh_BSSetting");
            uint64_t v13 = v22;
            if (!v22)
            {
              uint64_t v15 = v26;
              if (v26)
              {
                uint64_t v13 = sub_2268A6454(*(void *)(v9 + 8), v26);
                if (!v13)
                {
                  uint64_t v13 = sub_2268A55B8(*(void *)(v9 + 8), v26, (CFMutableDictionaryRef *)&v25);
                  if (!v13)
                  {
                    uint64_t v13 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%kO=%O}", v17, v18, v19, v20, v21, @"kBSConfigurationRefreshBSSettingKey_Value");
                    if (!v13)
                    {
                      if (cf) {
                        uint64_t v13 = 0;
                      }
                      else {
                        uint64_t v13 = 4294960568;
                      }
                    }
                  }
                }
              }
              else
              {
                uint64_t v13 = 4294960568;
              }
            }
            sub_2268DBBDC(*(void *)(v9 + 128), v15, v16, v17, v18, v19, v20, v21);
            CFTypeRef v14 = cf;
          }
        }
        else
        {
          CFTypeRef v14 = 0;
          uint64_t v13 = 4294960591;
        }
        sub_2268DC994(*(void *)(v9 + 128), 28, 3, v13, (uint64_t)v14, a6, a7, a8);
      }
    }
    sub_2268B3C40(a1, a2, a3, a4, a5, a6, a7, a8);
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    if (v25) {
      CFRelease(v25);
    }
  }
}

uint64_t sub_2268A9914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_RPCDisconnectAllDiskUsersWithMessageAsync(BSConfigurationContextRef, CFStringRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v20);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902 || !*(void *)(a1 + 120) || !*(void *)(a1 + 112)) {
    return 4294960591;
  }
  CFTypeRef cf = 0;
  context = 0;
  uint64_t v14 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%kO=%O}", a4, a5, a6, a7, a8, @"kAsyncParam_DisconnectMessage");
  if (!v14)
  {
    if (!cf) {
      return 0;
    }
    uint64_t v14 = sub_2268A9354(a1, cf, &context, v9, v10, v11, v12, v13);
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    if (!v14)
    {
      if (!context) {
        return 4294960568;
      }
      dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), context, (dispatch_function_t)sub_2268A9A60);
      sub_2268DCB00(*(void *)(a1 + 128), 27, 0, 0, v15, v16, v17, v18);
      return 0;
    }
  }
  return v14;
}

void sub_2268A9A60(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_RPCDisconnectAllDiskUsersWithMessageSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v22);
  }
  if (a1)
  {
    uint64_t v23 = 0;
    if (*((_DWORD *)a1 + 4) != 1634561902) {
      goto LABEL_17;
    }
    uint64_t v9 = *a1;
    if (!*a1) {
      goto LABEL_17;
    }
    if (*(_DWORD *)(v9 + 144) == 1634561902 && *(void *)(v9 + 8) && a1[1])
    {
      uint64_t v12 = sub_2268DBB2C(*(void *)(v9 + 128), a2, a3, a4, a5, a6, a7, a8);
      if (!v12)
      {
        CFStringRef v13 = (const __CFString *)a1[1];
        uint64_t v23 = 0;
        sub_22686088C(v13, (uint64_t)&v23, (UInt8 *)"%kO", v10, v11, a6, a7, a8, @"kAsyncParam_DisconnectMessage");
        if (v14)
        {
          uint64_t v12 = v14;
          if (v14 != -6727)
          {
LABEL_22:
            sub_2268DBBDC(*(void *)(v9 + 128), v15, v16, v17, v18, v19, v20, v21);
            goto LABEL_16;
          }
          uint64_t v15 = v23;
        }
        else
        {
          uint64_t v15 = v23;
          if (!v23)
          {
            uint64_t v12 = 4294960591;
            goto LABEL_22;
          }
        }
        uint64_t v12 = sub_2268A70D4(*(void *)(v9 + 8), v15, v16, v17, v18, v19, v20, v21);
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v12 = 4294960591;
    }
LABEL_16:
    sub_2268DC994(*(void *)(v9 + 128), 28, 4, v12, 0, a6, a7, a8);
LABEL_17:
    sub_2268B3C40(a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_2268A9BB4(void *context, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_RPCRenewDHCPLeaseAsync(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v16);
  }
  if (!context) {
    return 4294960591;
  }
  if (*((_DWORD *)context + 36) != 1634561902) {
    return 4294960591;
  }
  uint64_t v9 = *((void *)context + 15);
  if (!v9) {
    return 4294960591;
  }
  uint64_t v10 = *((void *)context + 14);
  if (!v10) {
    return 4294960591;
  }
  dispatch_group_async_f(v9, v10, context, (dispatch_function_t)sub_2268A9C80);
  sub_2268DCB00(*((void *)context + 16), 27, 0, 0, v11, v12, v13, v14);
  return 0;
}

void sub_2268A9C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_RPCRenewDHCPLeaseSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v22);
  }
  if (a1)
  {
    if (*(_DWORD *)(a1 + 144) == 1634561902 && *(void *)(a1 + 8))
    {
      uint64_t v13 = sub_2268DBB2C(*(void *)(a1 + 128), a2, a3, a4, a5, a6, a7, a8);
      if (!v13)
      {
        uint64_t v13 = sub_2268A7C8C(*(void *)(a1 + 8), v9, v10, v11, v12, a6, a7, a8);
        sub_2268DBBDC(*(void *)(a1 + 128), v14, v15, v16, v17, v18, v19, v20);
      }
    }
    else
    {
      uint64_t v13 = 4294960591;
    }
    uint64_t v21 = *(void *)(a1 + 128);
    sub_2268DC994(v21, 28, 5, v13, 0, a6, a7, a8);
  }
}

uint64_t sub_2268A9D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_RPCWPSStartAsync(BSConfigurationContextRef, Boolean, Boolean, uint32_t)", 800, (uint64_t)" \n", a5, a6, a7, a8, v20);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902 || !*(void *)(a1 + 120) || !*(void *)(a1 + 112)) {
    return 4294960591;
  }
  uint64_t v22 = 0;
  CFTypeRef cf = 0;
  uint64_t v14 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%kO=%b%kO=%b%kO=%i}", a4, a5, a6, a7, a8, @"kAsyncParam_WPSStart_UsePIN");
  if (!v14)
  {
    if (!cf) {
      return 0;
    }
    uint64_t v14 = sub_2268A9354(a1, cf, &v22, v9, v10, v11, v12, v13);
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    if (!v14)
    {
      if (!v22) {
        return 4294960568;
      }
      dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), v22, (dispatch_function_t)sub_2268A9EE8);
      sub_2268DCB00(*(void *)(a1 + 128), 27, 0, 0, v15, v16, v17, v18);
      return 0;
    }
  }
  return v14;
}

void sub_2268A9EE8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_RPCWPSStartSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v30);
  }
  if (a1)
  {
    __int16 v32 = 0;
    unsigned int v31 = 0;
    if (*((_DWORD *)a1 + 4) == 1634561902)
    {
      uint64_t v9 = *a1;
      if (*a1)
      {
        if (*(_DWORD *)(v9 + 144) == 1634561902 && *(void *)(v9 + 8) && a1[1])
        {
          uint64_t v12 = sub_2268DBB2C(*(void *)(v9 + 128), a2, a3, a4, a5, a6, a7, a8);
          if (!v12)
          {
            sub_22686088C((const __CFString *)a1[1], (uint64_t)&v32 + 1, (UInt8 *)"%kO:BOOL", v10, v11, a6, a7, a8, @"kAsyncParam_WPSStart_UsePIN");
            uint64_t v12 = v20;
            if (!v20)
            {
              sub_22686088C((const __CFString *)a1[1], (uint64_t)&v32, (UInt8 *)"%kO:BOOL", v15, v16, v17, v18, v19, @"kAsyncParam_WPSStart_DayPass");
              uint64_t v12 = v21;
              if (!v21)
              {
                sub_22686088C((const __CFString *)a1[1], (uint64_t)&v31, (UInt8 *)"%kO:int", v15, v16, v17, v18, v19, @"kAsyncParam_WPSStart_Timeout");
                if (v26)
                {
                  uint64_t v27 = 300;
                  unsigned int v31 = 300;
                }
                else
                {
                  uint64_t v27 = v31;
                }
                int v28 = v32;
                *(unsigned char *)(v9 + 89) = v32;
                if (v28) {
                  uint64_t v29 = 86400;
                }
                else {
                  uint64_t v29 = 0xFFFFFFFFLL;
                }
                uint64_t v12 = sub_2268A6CB4(*(void *)(v9 + 8), HIBYTE(v32) != 0, v29, v27, v22, v23, v24, v25);
              }
            }
            sub_2268DBBDC(*(void *)(v9 + 128), v13, v14, v15, v16, v17, v18, v19);
          }
        }
        else
        {
          uint64_t v12 = 4294960591;
        }
        sub_2268DC994(*(void *)(v9 + 128), 28, 6, v12, 0, a6, a7, a8);
      }
    }
    sub_2268B3C40(a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_2268AA09C(void *context, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_RPCWPSStopAsync(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v16);
  }
  if (!context) {
    return 4294960591;
  }
  if (*((_DWORD *)context + 36) != 1634561902) {
    return 4294960591;
  }
  uint64_t v9 = *((void *)context + 15);
  if (!v9) {
    return 4294960591;
  }
  uint64_t v10 = *((void *)context + 14);
  if (!v10) {
    return 4294960591;
  }
  dispatch_group_async_f(v9, v10, context, (dispatch_function_t)sub_2268AA168);
  sub_2268DCB00(*((void *)context + 16), 27, 0, 0, v11, v12, v13, v14);
  return 0;
}

void sub_2268AA168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_RPCWPSStopSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v27);
  }
  if (a1)
  {
    if (*(_DWORD *)(a1 + 144) == 1634561902 && *(void *)(a1 + 8))
    {
      uint64_t v13 = sub_2268DBB2C(*(void *)(a1 + 128), a2, a3, a4, a5, a6, a7, a8);
      if (!v13)
      {
        uint64_t v13 = sub_2268A6E40(*(void *)(a1 + 8), v9, v10, v11, v12, a6, a7, a8);
        if (!v13)
        {
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_WPSUpdateTimedAccess(BSConfigurationContextRef)", 800, (uint64_t)" \n", v17, v18, v19, v20, v27);
          }
          if (*(_DWORD *)(a1 + 144) == 1634561902 && (uint64_t v21 = *(void *)(a1 + 8)) != 0)
          {
            uint64_t v13 = sub_2268A6454(v21, 1633895790);
            if (!v13)
            {
              char v30 = 0;
              sub_2268A80C0(v31, 0x15uLL);
              uint64_t v13 = sub_2268A574C(*(void *)(a1 + 8), v31, &v30);
              if (!v13)
              {
                if (v30)
                {
                  CFTypeRef cf = 0;
                  uint64_t v29 = 0;
                  sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%kO=%i%kO=%b}", v16, v17, v18, v19, v20, @"kAsyncParam_Refresh_BSSetting");
                  uint64_t v13 = sub_2268A9354(a1, cf, &v29, v22, v23, v24, v25, v26);
                  if (cf)
                  {
                    CFRelease(cf);
                    CFTypeRef cf = 0;
                  }
                  if (!v13)
                  {
                    if (v29)
                    {
                      sub_2268B3CFC((const __CFString **)v29, v14, v15, v16, v17, v18, v19, v20);
                      uint64_t v13 = 0;
                    }
                    else
                    {
                      uint64_t v13 = 4294960568;
                    }
                  }
                }
              }
            }
          }
          else
          {
            uint64_t v13 = 4294960591;
          }
        }
        sub_2268DBBDC(*(void *)(a1 + 128), (uint64_t)v14, v15, v16, v17, v18, v19, v20);
      }
    }
    else
    {
      uint64_t v13 = 4294960591;
    }
    sub_2268DC994(*(void *)(a1 + 128), 28, 7, v13, 0, a6, a7, a8);
  }
}

uint64_t sub_2268AA3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_RPCWPSAllowClientAsync(BSConfigurationContextRef, CFStringRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v20);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902 || !*(void *)(a1 + 120) || !*(void *)(a1 + 112)) {
    return 4294960591;
  }
  CFTypeRef cf = 0;
  context = 0;
  uint64_t v14 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%kO=%O}", a4, a5, a6, a7, a8, @"kAsyncParam_WPSAllowClient_PIN");
  if (!v14)
  {
    if (!cf) {
      return 0;
    }
    uint64_t v14 = sub_2268A9354(a1, cf, &context, v9, v10, v11, v12, v13);
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    if (!v14)
    {
      if (!context) {
        return 4294960568;
      }
      dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), context, (dispatch_function_t)sub_2268AA4FC);
      sub_2268DCB00(*(void *)(a1 + 128), 27, 0, 0, v15, v16, v17, v18);
      return 0;
    }
  }
  return v14;
}

void sub_2268AA4FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_RPCWPSAllowClientSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v21);
  }
  if (a1)
  {
    CFDictionaryRef v22 = 0;
    uint64_t v23 = 0;
    if (*((_DWORD *)a1 + 4) != 1634561902) {
      goto LABEL_20;
    }
    uint64_t v9 = *a1;
    if (!*a1) {
      goto LABEL_20;
    }
    if (*(_DWORD *)(v9 + 144) == 1634561902 && *(void *)(v9 + 8) && a1[1])
    {
      uint64_t v12 = sub_2268DBB2C(*(void *)(v9 + 128), a2, a3, a4, a5, a6, a7, a8);
      if (!v12)
      {
        sub_22686088C((const __CFString *)a1[1], (uint64_t)&v23, (UInt8 *)"%kO", v10, v11, a6, a7, a8, @"kAsyncParam_WPSAllowClient_PIN");
        uint64_t v12 = v20;
        if (!v20)
        {
          if (!v23)
          {
LABEL_22:
            uint64_t v12 = 4294960568;
            goto LABEL_23;
          }
          uint64_t v12 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], (CFTypeRef *)&v22, (uint64_t)"{%kO=%O%kO=%i%kO=%D%kO=%O}", v15, v16, v17, v18, v19, @"pin");
          if (!v12)
          {
            CFDictionaryRef v13 = v22;
            if (v22)
            {
              uint64_t v12 = sub_2268A6F7C(*(void *)(v9 + 8), v22);
              if (v22)
              {
                CFRelease(v22);
                CFDictionaryRef v22 = 0;
              }
              goto LABEL_23;
            }
            goto LABEL_22;
          }
        }
LABEL_23:
        sub_2268DBBDC(*(void *)(v9 + 128), (uint64_t)v13, v14, v15, v16, v17, v18, v19);
      }
    }
    else
    {
      uint64_t v12 = 4294960591;
    }
    sub_2268DC994(*(void *)(v9 + 128), 28, 8, v12, 0, a6, a7, a8);
LABEL_20:
    sub_2268B3C40(a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_2268AA6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_TaskRestartAsync(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v14);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902 || !*(void *)(a1 + 120)) {
    return 4294960591;
  }
  uint64_t result = sub_2268A8EB4(a1, 3u, a3, a4, a5, a6, a7, a8);
  if (!result)
  {
    dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), (void *)a1, (dispatch_function_t)sub_2268AA7AC);
    sub_2268AB478(a1, 3, 0, 1, v10, v11, v12, v13);
    return 0;
  }
  return result;
}

void sub_2268AA7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v43);
  }
  CFStringRef v49 = 0;
  CFTypeRef cf = 0;
  uint64_t v46 = 0;
  if (a1)
  {
    CFTypeRef v47 = 0;
    BOOL v45 = 0;
    if (*(_DWORD *)(a1 + 144) != 1634561902 || !*(void *)(a1 + 8))
    {
      uint64_t v17 = 0;
      uint64_t v20 = 4294960591;
      goto LABEL_13;
    }
    CFStringRef v9 = sub_22685B6F8(*(const __CFString **)a1, a2, a3, a4, a5, a6, a7, a8);
    uint64_t v17 = (__CFString *)v9;
    if (v9) {
      CFRetain(v9);
    }
    uint64_t v18 = sub_2268DBB2C(*(void *)(a1 + 128), v10, v11, v12, v13, v14, v15, v16);
    if (v18)
    {
      uint64_t v20 = v18;
LABEL_13:
      sub_2268A8EB4(a1, 0, a3, a4, a5, a6, a7, a8);
      sub_2268B4540(a1, 3, 0, v20, v21, v22, v23, v24);
      if (v49)
      {
        CFRelease(v49);
        CFStringRef v49 = 0;
      }
      if (cf)
      {
        CFRelease(cf);
        CFTypeRef cf = 0;
      }
      if (v17) {
        CFRelease(v17);
      }
      return;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"Stopping monitoring");
    }
    uint64_t v20 = sub_2268B3FE8(a1, v19, a3, a4, a5, a6, a7, a8);
    if (v20) {
      goto LABEL_78;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v28, v29, v30, v31, (uint64_t)"Stopping monitoring");
    }
    BOOL v44 = 0;
    uint64_t v20 = sub_2268B4048(a1, (CFTypeRef *)&v49, &cf, &v46, &v45, &v44);
    if (v20) {
      goto LABEL_78;
    }
    if (dword_268147638 <= 800)
    {
      if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"finalNetworkName: %@ goingAwayNetwork: %@ networkMaytransition: %d deviceMayLoseTouch: %d \n", v28, v29, v30, v31, (uint64_t)v49);
      }
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v28, v29, v30, v31, (uint64_t)"Sending restart action");
      }
    }
    sub_2268DCB00(*(void *)(a1 + 128), 20, 0, (uint64_t)v17, v28, v29, v30, v31);
    uint64_t v20 = sub_2268A6558(*(void *)(a1 + 8), 1633899074, v32, v33, v34, v35, v36, v37);
    if (v20) {
      goto LABEL_78;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v28, v29, v30, v31, (uint64_t)"Sending restart action");
    }
    sub_2268DCB00(*(void *)(a1 + 128), 21, 0, (uint64_t)v17, v28, v29, v30, v31);
    if (*(_DWORD *)(a1 + 144) != 1634561902)
    {
      uint64_t v20 = 4294960591;
      goto LABEL_78;
    }
    uint64_t v20 = sub_2268DCE10(*(void *)(a1 + 128), 1u, v26, v27, v28, v29, v30, v31);
    if (v20) {
      goto LABEL_78;
    }
    if (v46)
    {
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v28, v29, v30, v31, (uint64_t)"Disassociating");
      }
      uint64_t v20 = sub_2268DD7D0(*(void *)(a1 + 128));
      if (v20) {
        goto LABEL_78;
      }
      if (dword_268147638 <= 800)
      {
        if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v28, v29, v30, v31, (uint64_t)"Disassociating");
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v28, v29, v30, v31, (uint64_t)"Clearing Scan Cache");
        }
      }
      uint64_t v20 = sub_2268DDE9C(*(void *)(a1 + 128), (uint64_t)v25, v26, v27, v28, v29, v30, v31);
      if (v20) {
        goto LABEL_78;
      }
      if (dword_268147638 > 800)
      {
LABEL_68:
        sub_22685AFD0(*(const __CFString **)a1);
        int v39 = v38;
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
        {
          if (v39) {
            CFTypeRef v40 = "base station is remote\n";
          }
          else {
            CFTypeRef v40 = "base station is not remote\n";
          }
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)v40, v28, v29, v30, v31, v43);
        }
        if (v39 == 1)
        {
LABEL_76:
          uint64_t v20 = 0;
          goto LABEL_78;
        }
        if (dword_268147638 <= 800)
        {
          if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v28, v29, v30, v31, (uint64_t)"Determining if base station is remote");
          }
          if (dword_268147638 <= 800)
          {
            if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v28, v29, v30, v31, (uint64_t)"Pausing after restart");
            }
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"pausing for: %d secs\n", v28, v29, v30, v31, 20);
            }
          }
        }
        uint64_t v20 = sub_2268DDC20(*(void *)(a1 + 128), 20);
        if (v20) {
          goto LABEL_78;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v28, v29, v30, v31, (uint64_t)"Pausing after restart");
        }
        if (v49)
        {
          if (v45)
          {
            if (dword_268147638 <= 800)
            {
              if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v28, v29, v30, v31, (uint64_t)"Network transition pause");
              }
              if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
                sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"pausing for: %d secs\n", v28, v29, v30, v31, 20);
              }
            }
            uint64_t v20 = sub_2268DDC20(*(void *)(a1 + 128), 20);
            if (v20) {
              goto LABEL_78;
            }
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v28, v29, v30, v31, (uint64_t)"Network transition pause");
            }
          }
          if (!sub_2268DD6CC(*(void *)(a1 + 128), v49, 0, v27, v28, v29, v30, v31))
          {
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v28, v29, v30, v31, (uint64_t)"Joining Network");
            }
            uint64_t v20 = sub_2268DFCF4(*(void *)(a1 + 128), v49, (const __CFString *)cf, 1, 0, v29, v30, v31);
            if (v20) {
              goto LABEL_78;
            }
            if (dword_268147638 > 800)
            {
LABEL_116:
              if (!sub_22685B950(*(const __CFString **)a1, (uint64_t)v25, v26, v27, v28, v29, v30, v31))
              {
                if (dword_268147638 <= 800)
                {
                  if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v41, v42, v30, v31, (uint64_t)"No bonjour seed pause");
                  }
                  if (dword_268147638 <= 800
                    && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                  {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"pausing for: %d secs\n", v41, v42, v30, v31, 8);
                  }
                }
                uint64_t v20 = sub_2268DDC20(*(void *)(a1 + 128), 8);
                if (v20) {
                  goto LABEL_78;
                }
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v28, v29, v30, v31, (uint64_t)"No bonjour seed pause");
                }
              }
              uint64_t v20 = sub_2268DF1D0(*(void *)(a1 + 128), v17, *(const __CFString **)a1, 1, 120, &v47, v30, v31);
              if (!v20)
              {
                CFTypeRef v25 = v47;
                if (!v47)
                {
                  uint64_t v20 = 4294960568;
                  goto LABEL_78;
                }
                uint64_t v20 = sub_2268B431C(a1, (const __CFString *)v47);
                if (v47)
                {
                  CFRelease(v47);
                  CFTypeRef v47 = 0;
                }
                if (v20) {
                  goto LABEL_78;
                }
                if (dword_268147638 <= 800)
                {
                  if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v28, v29, v30, v31, (uint64_t)"Final waiting for target base after restart");
                  }
                  if (dword_268147638 <= 800
                    && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                  {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v28, v29, v30, v31, (uint64_t)"Rereading settings after restart");
                  }
                }
                uint64_t v20 = sub_2268AFE20(a1, 0, *(const __CFString **)a1, *(void *)(a1 + 8), 0, 0, 0, v31);
                if (v20) {
                  goto LABEL_78;
                }
                if (dword_268147638 <= 800)
                {
                  if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v28, v29, v30, v31, (uint64_t)"Rereading settings after restart");
                  }
                  if (dword_268147638 <= 800
                    && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                  {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v28, v29, v30, v31, (uint64_t)"Checking if monitoring needs restored");
                  }
                }
                uint64_t v20 = sub_2268B443C(a1, (uint64_t)v25, v26, v27, v28, v29, v30, v31);
                if (v20) {
                  goto LABEL_78;
                }
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v28, v29, v30, v31, (uint64_t)"Checking if monitoring needs restored");
                }
                goto LABEL_76;
              }
LABEL_78:
              sub_2268DBBDC(*(void *)(a1 + 128), (uint64_t)v25, v26, v27, v28, v29, v30, v31);
              goto LABEL_13;
            }
            if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v28, v29, v30, v31, (uint64_t)"Joining Network");
            }
          }
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v28, v29, v30, v31, (uint64_t)"Final waiting for target base");
        }
        goto LABEL_116;
      }
      if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v28, v29, v30, v31, (uint64_t)"Clearing Scan Cache");
      }
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestartSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v28, v29, v30, v31, (uint64_t)"Determining if base station is remote");
    }
    goto LABEL_68;
  }
}

void sub_2268AB478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(_DWORD *)(a1 + 144) == 1634561902)
  {
    CFTypeRef v13 = 0;
    if (!sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &v13, (uint64_t)"{%kO=%i%kO=%i%kO=%b}", a4, a5, a6, a7, a8, @"kBSConfigurationTaskStart_TaskState"))
    {
      if (v13)
      {
        sub_2268DC568(*(void *)(a1 + 128), 29, 0, (uint64_t)v13, v9, v10, v11, v12);
        if (v13) {
          CFRelease(v13);
        }
      }
    }
  }
}

uint64_t sub_2268AB524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_TaskRestoreDefaultsAsync(BSConfigurationContextRef, Boolean)", 800, (uint64_t)" \n", a5, a6, a7, a8, v26);
  }
  context = 0;
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902 || !*(void *)(a1 + 120)) {
    return 4294960591;
  }
  uint64_t v14 = sub_2268A8EB4(a1, 4u, a3, a4, a5, a6, a7, a8);
  if (!v14)
  {
    CFTypeRef cf = 0;
    uint64_t v14 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%ks=%b}", v9, v10, v11, v12, v13, (uint64_t)"AsyncParam_WaitAndJoinFlag");
    if (v14)
    {
LABEL_10:
      sub_2268A8EB4(a1, 0, (uint64_t)v15, v16, v17, v18, v19, v20);
      return v14;
    }
    if (cf)
    {
      uint64_t v14 = sub_2268A9354(a1, cf, &context, v16, v17, v18, v19, v20);
      if (cf)
      {
        CFRelease(cf);
        CFTypeRef cf = 0;
      }
      if (v14) {
        goto LABEL_10;
      }
      uint64_t v15 = context;
      if (!context)
      {
        uint64_t v14 = 4294960568;
        goto LABEL_10;
      }
      dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), context, (dispatch_function_t)sub_2268AB69C);
      sub_2268AB478(a1, 4, 0, 1, v22, v23, v24, v25);
    }
    return 0;
  }
  return v14;
}

void sub_2268AB69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v46);
  }
  CFTypeRef v51 = 0;
  CFTypeRef cf = 0;
  CFTypeRef v50 = 0;
  if (a1)
  {
    CFStringRef v9 = 0;
    char v53 = 0;
    __int16 v49 = 0;
    CFTypeRef v48 = 0;
    if (*(_DWORD *)(a1 + 16) == 1634561902)
    {
      uint64_t v10 = *(void *)a1;
      if (*(void *)a1)
      {
        if (*(_DWORD *)(v10 + 144) != 1634561902
          || !*(void *)(v10 + 8)
          || (CFStringRef v11 = *(const __CFString **)(a1 + 8)) == 0)
        {
          CFStringRef v9 = 0;
          uint64_t v14 = 4294960591;
          goto LABEL_14;
        }
        sub_22686088C(v11, (uint64_t)&v53, (UInt8 *)"%ks:BOOL", a4, a5, a6, a7, a8, (uint64_t)"AsyncParam_WaitAndJoinFlag");
        if (v12)
        {
          uint64_t v14 = v12;
          CFStringRef v9 = 0;
          goto LABEL_14;
        }
        CFStringRef v19 = sub_22685B6F8(*(const __CFString **)v10, v13, a3, a4, a5, a6, a7, a8);
        CFStringRef v9 = v19;
        if (v19) {
          CFRetain(v19);
        }
        uint64_t v27 = sub_2268DBB2C(*(void *)(v10 + 128), v20, v21, v22, v23, v24, v25, v26);
        if (v27)
        {
          uint64_t v14 = v27;
          goto LABEL_14;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"Stopping monitoring");
        }
        uint64_t v14 = sub_2268B3FE8(v10, v28, a3, a4, a5, a6, a7, a8);
        if (v14) {
          goto LABEL_48;
        }
        if (dword_268147638 <= 800)
        {
          if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v32, v33, v34, v35, (uint64_t)"Stopping monitoring");
          }
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v32, v33, v34, v35, (uint64_t)"Sending restore defaults action");
          }
        }
        sub_2268DCB00(*(void *)(v10 + 128), 20, 0, (uint64_t)v9, v32, v33, v34, v35);
        uint64_t v14 = sub_2268A8320(*(void *)(v10 + 8), v36, v37, v38, v39, v40, v41, v42);
        if (v14) {
          goto LABEL_48;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v32, v33, v34, v35, (uint64_t)"Sending restore defaults action");
        }
        sub_2268DCB00(*(void *)(v10 + 128), 21, 0, (uint64_t)v9, v32, v33, v34, v35);
        uint64_t v14 = sub_2268B4048(v10, &cf, &v51, &v50, (BOOL *)&v49 + 1, (BOOL *)&v49);
        if (v14)
        {
LABEL_48:
          sub_2268DBBDC(*(void *)(v10 + 128), (uint64_t)v29, v30, v31, v32, v33, v34, v35);
LABEL_14:
          sub_2268A8EB4(v10, 0, a3, a4, a5, a6, a7, a8);
          sub_2268B4540(v10, 4, 0, v14, v15, v16, v17, v18);
          if (cf)
          {
            CFRelease(cf);
            CFTypeRef cf = 0;
          }
          goto LABEL_17;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"finalNetworkName: %@ goingAwayNetwork: %@ networkMaytransition: %d deviceMayLoseTouch: %d \n", v32, v33, v34, v35, (uint64_t)cf);
        }
        if (v50)
        {
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v32, v33, v34, v35, (uint64_t)"Disassociating");
          }
          uint64_t v14 = sub_2268DD7D0(*(void *)(v10 + 128));
          if (v14) {
            goto LABEL_48;
          }
          if (dword_268147638 <= 800)
          {
            if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v32, v33, v34, v35, (uint64_t)"Disassociating");
            }
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v32, v33, v34, v35, (uint64_t)"Clearing Scan Cache");
            }
          }
          uint64_t v14 = sub_2268DDE9C(*(void *)(v10 + 128), (uint64_t)v29, v30, v31, v32, v33, v34, v35);
          if (v14) {
            goto LABEL_48;
          }
          if (dword_268147638 <= 800)
          {
            if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v32, v33, v34, v35, (uint64_t)"Clearing Scan Cache");
            }
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v32, v33, v34, v35, (uint64_t)"Waiting for network to GO AWAY");
            }
          }
          uint64_t v14 = sub_2268DDA20(*(void *)(v10 + 128), (const __CFString *)v50, *(const __CFString **)v10);
          if (v14) {
            goto LABEL_48;
          }
          if (dword_268147638 > 800)
          {
LABEL_85:
            sub_22685AFD0(*(const __CFString **)v10);
            int v44 = v43;
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
            {
              if (v44) {
                BOOL v45 = "base station is remote\n";
              }
              else {
                BOOL v45 = "base station is not remote\n";
              }
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)v45, v32, v33, v34, v35, v47);
            }
            if (v44 == 1) {
              goto LABEL_147;
            }
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v32, v33, v34, v35, (uint64_t)"Determining if base station is remote");
            }
            if (!v53) {
              goto LABEL_147;
            }
            if (cf)
            {
              if (HIBYTE(v49) && !v50)
              {
                if (dword_268147638 <= 800)
                {
                  if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v32, v33, v34, v35, (uint64_t)"Network transition pause");
                  }
                  if (dword_268147638 <= 800
                    && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                  {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"pausing for: %d secs\n", v32, v33, v34, v35, 40);
                  }
                }
                uint64_t v14 = sub_2268DDC20(*(void *)(v10 + 128), 40);
                if (v14) {
                  goto LABEL_48;
                }
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v32, v33, v34, v35, (uint64_t)"Network transition pause");
                }
              }
              if (!sub_2268DD6CC(*(void *)(v10 + 128), (const __CFString *)cf, 0, v31, v32, v33, v34, v35))
              {
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v32, v33, v34, v35, (uint64_t)"Joining Network");
                }
                uint64_t v14 = sub_2268DFCF4(*(void *)(v10 + 128), (const __CFString *)cf, (const __CFString *)v51, 1, 0, v33, v34, v35);
                if (v14) {
                  goto LABEL_48;
                }
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v32, v33, v34, v35, (uint64_t)"Joining Network");
                }
              }
            }
            if (!sub_22685B950(*(const __CFString **)v10, (uint64_t)v29, v30, v31, v32, v33, v34, v35))
            {
              if (dword_268147638 <= 800)
              {
                if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v32, v33, v34, v35, (uint64_t)"No bonjour seed pause");
                }
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"pausing for: %d secs\n", v32, v33, v34, v35, 8);
                }
              }
              uint64_t v14 = sub_2268DDC20(*(void *)(v10 + 128), 8);
              if (v14) {
                goto LABEL_48;
              }
              if (dword_268147638 > 800) {
                goto LABEL_120;
              }
              if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v32, v33, v34, v35, (uint64_t)"No bonjour seed pause");
              }
            }
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v32, v33, v34, v35, (uint64_t)"Final waiting for target base after restore defaults");
            }
LABEL_120:
            uint64_t v14 = sub_2268DF1D0(*(void *)(v10 + 128), 0, *(const __CFString **)v10, 1, 120, &v48, v34, v35);
            if (v14) {
              goto LABEL_48;
            }
            CFTypeRef v29 = v48;
            if (!v48)
            {
              uint64_t v14 = 4294960568;
              goto LABEL_48;
            }
            uint64_t v14 = sub_2268B431C(v10, (const __CFString *)v48);
            if (v48)
            {
              CFRelease(v48);
              CFTypeRef v48 = 0;
            }
            if (v14) {
              goto LABEL_48;
            }
            if (dword_268147638 <= 800)
            {
              if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v32, v33, v34, v35, (uint64_t)"Final waiting for target base after restore defaults");
              }
              if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
                sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v32, v33, v34, v35, (uint64_t)"Rereading settings after restore");
              }
            }
            uint64_t v14 = sub_2268AFE20(v10, 0, *(const __CFString **)v10, *(void *)(v10 + 8), 0, 0, 0, v35);
            if (v14) {
              goto LABEL_48;
            }
            if (dword_268147638 <= 800)
            {
              if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v32, v33, v34, v35, (uint64_t)"Rereading settings after restore");
              }
              if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
                sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v32, v33, v34, v35, (uint64_t)"Checking if monitoring needs restored");
              }
            }
            uint64_t v14 = sub_2268B443C(v10, (uint64_t)v29, v30, v31, v32, v33, v34, v35);
            if (v14) {
              goto LABEL_48;
            }
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v32, v33, v34, v35, (uint64_t)"Checking if monitoring needs restored");
            }
LABEL_147:
            uint64_t v14 = 0;
            goto LABEL_48;
          }
          if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v32, v33, v34, v35, (uint64_t)"Waiting for network to GO AWAY");
          }
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskRestoreDefaultsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v32, v33, v34, v35, (uint64_t)"Determining if base station is remote");
        }
        goto LABEL_85;
      }
      CFStringRef v9 = 0;
    }
LABEL_17:
    if (v51)
    {
      CFRelease(v51);
      CFTypeRef v51 = 0;
    }
    if (v50)
    {
      CFRelease(v50);
      CFTypeRef v50 = 0;
    }
    if (v9) {
      CFRelease(v9);
    }
    sub_2268B3C40((_DWORD *)a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_2268AC360(uint64_t a1, CFDataRef theData, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_TaskUploadFirmwareAsync(BSConfigurationContextRef, CFDataRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v33);
  }
  context = 0;
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t v10 = 4294960591;
  if (theData)
  {
    if (*(void *)(a1 + 120))
    {
      if (CFDataGetLength(theData))
      {
        uint64_t v10 = sub_2268A8EB4(a1, 5u, v11, v12, v13, v14, v15, v16);
        if (!v10)
        {
          CFTypeRef cf = 0;
          uint64_t v10 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%ks=%O}", v17, v18, v19, v20, v21, (uint64_t)"AsyncParam_FirmwareData");
          if (v10)
          {
LABEL_12:
            sub_2268A8EB4(a1, 0, (uint64_t)v22, v23, v24, v25, v26, v27);
            return v10;
          }
          if (cf)
          {
            uint64_t v10 = sub_2268A9354(a1, cf, &context, v23, v24, v25, v26, v27);
            if (cf)
            {
              CFRelease(cf);
              CFTypeRef cf = 0;
            }
            if (v10) {
              goto LABEL_12;
            }
            uint64_t v22 = context;
            if (!context)
            {
              uint64_t v10 = 4294960568;
              goto LABEL_12;
            }
            dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), context, (dispatch_function_t)sub_2268AC4E8);
            sub_2268AB478(a1, 5, 0, 1, v29, v30, v31, v32);
          }
          return 0;
        }
      }
    }
  }
  return v10;
}

void sub_2268AC4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v66);
  }
  CFTypeRef v74 = 0;
  CFTypeRef cf = 0;
  uint64_t v72 = 0;
  if (a1)
  {
    CFStringRef v9 = 0;
    CFDataRef theData = 0;
    CFTypeRef v73 = 0;
    __int16 v71 = 0;
    if (*(_DWORD *)(a1 + 16) == 1634561902)
    {
      uint64_t v10 = *(void *)a1;
      if (*(void *)a1)
      {
        if (*(_DWORD *)(v10 + 144) != 1634561902) {
          goto LABEL_20;
        }
        if (!*(void *)(v10 + 8)) {
          goto LABEL_20;
        }
        CFStringRef v11 = *(const __CFString **)(a1 + 8);
        if (!v11) {
          goto LABEL_20;
        }
        sub_22686088C(v11, (uint64_t)&theData, (UInt8 *)"%ks", a4, a5, a6, a7, a8, (uint64_t)"AsyncParam_FirmwareData");
        if (v12)
        {
          uint64_t v13 = v12;
          CFStringRef v9 = 0;
          goto LABEL_21;
        }
        if (!theData)
        {
          CFStringRef v9 = 0;
          uint64_t v13 = 4294960568;
          goto LABEL_21;
        }
        CFIndex Length = CFDataGetLength(theData);
        if (!Length)
        {
LABEL_20:
          CFStringRef v9 = 0;
          uint64_t v13 = 4294960591;
          goto LABEL_21;
        }
        unint64_t v16 = Length;
        CFStringRef v17 = sub_22685B6F8(*(const __CFString **)v10, v15, a3, a4, a5, a6, a7, a8);
        CFStringRef v9 = (__CFString *)v17;
        if (v17) {
          CFRetain(v17);
        }
        uint64_t v25 = sub_2268DBB2C(*(void *)(v10 + 128), v18, v19, v20, v21, v22, v23, v24);
        if (v25)
        {
          uint64_t v13 = v25;
          goto LABEL_21;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"Stopping monitoring");
        }
        uint64_t v13 = sub_2268B3FE8(v10, v26, a3, a4, a5, a6, a7, a8);
        if (v13) {
          goto LABEL_49;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v34, v35, v36, v37, (uint64_t)"Stopping monitoring");
        }
        uint64_t v13 = sub_2268B4048(v10, &cf, &v74, &v72, (BOOL *)&v71 + 1, (BOOL *)&v71);
        if (v13) {
          goto LABEL_49;
        }
        if (dword_268147638 <= 800)
        {
          if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"finalNetworkName: %@ goingAwayNetwork: %@ networkMaytransition: %d deviceMayLoseTouch: %d \n", v34, v35, v36, v37, (uint64_t)cf);
          }
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v34, v35, v36, v37, (uint64_t)"Uploading firmware");
          }
        }
        sub_2268DCB00(*(void *)(v10 + 128), 20, 0, (uint64_t)v9, v34, v35, v36, v37);
        uint64_t v38 = *(void *)(v10 + 8);
        BytePtr = (char *)CFDataGetBytePtr(theData);
        uint64_t v13 = sub_2268A66BC(v38, BytePtr, v16, v40, v41, v42, v43, v44);
        if (v13) {
          goto LABEL_49;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v34, v35, v36, v37, (uint64_t)"Uploading firmware");
        }
        sub_2268DCB00(*(void *)(v10 + 128), 21, 0, (uint64_t)v9, v34, v35, v36, v37);
        if (sub_2268A58D0(*(void *)(v10 + 8), 1634104688))
        {
          unsigned int v69 = 0;
          unsigned int v70 = 0;
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v34, v35, v36, v37, (uint64_t)"Uploading firmware reading update status");
          }
          unsigned int v69 = 0;
          CFAllocatorRef v45 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          for (uint64_t i = 1; ; uint64_t i = (i + 1))
          {
            uint64_t v47 = sub_2268DDC20(*(void *)(v10 + 128), 1);
            if (v47)
            {
              uint64_t v13 = v47;
              goto LABEL_49;
            }
            uint64_t v48 = sub_2268A698C(*(void *)(v10 + 8), (uint64_t)&v70, (uint64_t)&v69, 4, v34, v35, v36, v37);
            if (v48)
            {
LABEL_81:
              uint64_t v13 = v48;
              goto LABEL_49;
            }
            if (v69)
            {
              CFTypeRef v68 = 0;
              if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
                sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"Firmware progress: %u of %u \n", v34, v35, v36, v37, v70);
              }
              uint64_t v48 = sub_22685FC7C(v45, &v68, (uint64_t)"{%ks=%i%ks=%i}", (uint64_t)v33, v34, v35, v36, v37, (uint64_t)"kBSConfigurationFirmwareStatus_TotalBytesKey");
              if (v48) {
                goto LABEL_81;
              }
              CFTypeRef v33 = v68;
              if (!v68) {
                goto LABEL_195;
              }
              sub_2268DC568(*(void *)(v10 + 128), 31, 0, (uint64_t)v68, v34, v35, v36, v37);
              if (v68)
              {
                CFRelease(v68);
                CFTypeRef v68 = 0;
              }
              if (v70 && v70 >= v69)
              {
                uint64_t v54 = sub_22685FC7C(v45, &v68, (uint64_t)"{%ks=%b}", v49, v50, v51, v52, v53, (uint64_t)"kBSConfigurationFirmwareStatus_UploadComplete");
                uint64_t v13 = v54;
                if (!v54)
                {
                  CFTypeRef v33 = v68;
                  if (!v68) {
                    goto LABEL_195;
                  }
                  sub_2268DC568(*(void *)(v10 + 128), 31, 0, (uint64_t)v68, v34, v35, v36, v37);
                  if (v68)
                  {
                    CFRelease(v68);
                    CFTypeRef v68 = 0;
                  }
                  uint64_t v13 = sub_2268A8EB4(v10, 0, v55, v56, v57, v58, v59, v60);
                  if (!v13)
                  {
                    uint64_t v13 = sub_2268A8EB4(v10, 3u, v32, (uint64_t)v33, v34, v35, v36, v37);
                    if (!v13)
                    {
                      uint64_t v13 = sub_2268DDC20(*(void *)(v10 + 128), 1);
                      if (!v13)
                      {
                        uint64_t v13 = sub_2268A6558(*(void *)(v10 + 8), 1633899074, v32, (uint64_t)v33, v34, v35, v36, v37);
                        if (!v13)
                        {
                          if (dword_268147638 < 801
                            && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                          {
                            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v34, v35, v36, v37, (uint64_t)"Uploading firmware reading update status");
                          }
                          break;
                        }
                      }
                    }
                  }
                }
                goto LABEL_49;
              }
            }
            else
            {
              if (i > 0x12B)
              {
                uint64_t v13 = 4294960574;
                goto LABEL_49;
              }
              if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
                sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"Still no progress for: %u seconds \n", v34, v35, v36, v37, i);
              }
            }
          }
        }
        if (*(_DWORD *)(v10 + 144) != 1634561902)
        {
          uint64_t v13 = 4294960591;
          goto LABEL_49;
        }
        uint64_t v13 = sub_2268DCE10(*(void *)(v10 + 128), 1u, v32, (uint64_t)v33, v34, v35, v36, v37);
        if (v13) {
          goto LABEL_49;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v34, v35, v36, v37, (uint64_t)"Determining if base station is remote");
        }
        sub_22685AFD0(*(const __CFString **)v10);
        int v62 = v61;
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
        {
          if (v62) {
            uint64_t v63 = "base station is remote\n";
          }
          else {
            uint64_t v63 = "base station is not remote\n";
          }
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)v63, v34, v35, v36, v37, v67);
        }
        if (v62 == 1)
        {
LABEL_108:
          uint64_t v13 = 0;
          goto LABEL_49;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v34, v35, v36, v37, (uint64_t)"Determining if base station is remote");
        }
        if (v72)
        {
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v34, v35, v36, v37, (uint64_t)"Disassociating");
          }
          uint64_t v13 = sub_2268DD7D0(*(void *)(v10 + 128));
          if (v13) {
            goto LABEL_49;
          }
          if (dword_268147638 <= 800)
          {
            if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v34, v35, v36, v37, (uint64_t)"Disassociating");
            }
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v34, v35, v36, v37, (uint64_t)"Clearing Scan Cache");
            }
          }
          uint64_t v13 = sub_2268DDE9C(*(void *)(v10 + 128), (uint64_t)v31, v32, (uint64_t)v33, v34, v35, v36, v37);
          if (v13) {
            goto LABEL_49;
          }
          if (dword_268147638 > 800)
          {
LABEL_142:
            uint64_t v13 = sub_2268DDC20(*(void *)(v10 + 128), 20);
            if (v13) {
              goto LABEL_49;
            }
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v34, v35, v36, v37, (uint64_t)"Pausing after restart");
            }
            if (cf)
            {
              if (HIBYTE(v71))
              {
                if (dword_268147638 <= 800)
                {
                  if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v34, v35, v36, v37, (uint64_t)"Network transition pause");
                  }
                  if (dword_268147638 <= 800
                    && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                  {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"pausing for: %d secs\n", v34, v35, v36, v37, 20);
                  }
                }
                uint64_t v13 = sub_2268DDC20(*(void *)(v10 + 128), 20);
                if (v13) {
                  goto LABEL_49;
                }
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v34, v35, v36, v37, (uint64_t)"Network transition pause");
                }
              }
              if (!sub_2268DD6CC(*(void *)(v10 + 128), (const __CFString *)cf, 0, (uint64_t)v33, v34, v35, v36, v37))
              {
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v34, v35, v36, v37, (uint64_t)"Joining Network");
                }
                uint64_t v13 = sub_2268DFCF4(*(void *)(v10 + 128), (const __CFString *)cf, (const __CFString *)v74, 1, 0, v35, v36, v37);
                if (v13) {
                  goto LABEL_49;
                }
                if (dword_268147638 > 800) {
                  goto LABEL_167;
                }
                if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v34, v35, v36, v37, (uint64_t)"Joining Network");
                }
              }
            }
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v34, v35, v36, v37, (uint64_t)"Final waiting for target base");
            }
LABEL_167:
            if (!sub_22685B950(*(const __CFString **)v10, (uint64_t)v31, v32, (uint64_t)v33, v34, v35, v36, v37))
            {
              if (dword_268147638 <= 800)
              {
                if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v64, v65, v36, v37, (uint64_t)"No bonjour seed pause");
                }
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"pausing for: %d secs\n", v64, v65, v36, v37, 8);
                }
              }
              uint64_t v13 = sub_2268DDC20(*(void *)(v10 + 128), 8);
              if (v13) {
                goto LABEL_49;
              }
              if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
                sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v34, v35, v36, v37, (uint64_t)"No bonjour seed pause");
              }
            }
            uint64_t v13 = sub_2268DF1D0(*(void *)(v10 + 128), v9, *(const __CFString **)v10, 1, 120, &v73, v36, v37);
            if (v13) {
              goto LABEL_49;
            }
            CFTypeRef v31 = v73;
            if (!v73)
            {
LABEL_195:
              uint64_t v13 = 4294960568;
              goto LABEL_49;
            }
            uint64_t v13 = sub_2268B431C(v10, (const __CFString *)v73);
            if (v73)
            {
              CFRelease(v73);
              CFTypeRef v73 = 0;
            }
            if (!v13)
            {
              if (dword_268147638 <= 800)
              {
                if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v34, v35, v36, v37, (uint64_t)"Final waiting for target base after firmware update");
                }
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v34, v35, v36, v37, (uint64_t)"Rereading settings after firmware update");
                }
              }
              uint64_t v13 = sub_2268AFE20(v10, 0, *(const __CFString **)v10, *(void *)(v10 + 8), 0, 0, 0, v37);
              if (!v13)
              {
                if (dword_268147638 <= 800)
                {
                  if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v34, v35, v36, v37, (uint64_t)"Rereading settings after firmware update");
                  }
                  if (dword_268147638 <= 800
                    && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                  {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v34, v35, v36, v37, (uint64_t)"Checking if monitoring needs restored");
                  }
                }
                uint64_t v13 = sub_2268B443C(v10, (uint64_t)v31, v32, (uint64_t)v33, v34, v35, v36, v37);
                if (!v13)
                {
                  if (dword_268147638 <= 800
                    && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                  {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v34, v35, v36, v37, (uint64_t)"Checking if monitoring needs restored");
                  }
                  goto LABEL_108;
                }
              }
            }
LABEL_49:
            sub_2268DBBDC(*(void *)(v10 + 128), (uint64_t)v31, v32, (uint64_t)v33, v34, v35, v36, v37);
LABEL_21:
            sub_2268A8EB4(v10, 0, a3, a4, a5, a6, a7, a8);
            sub_2268B4540(v10, 5, 0, v13, v27, v28, v29, v30);
            if (cf)
            {
              CFRelease(cf);
              CFTypeRef cf = 0;
            }
            goto LABEL_23;
          }
          if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v34, v35, v36, v37, (uint64_t)"Clearing Scan Cache");
          }
        }
        if (dword_268147638 <= 800)
        {
          if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v34, v35, v36, v37, (uint64_t)"Pausing after restart");
          }
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskUploadFirmwareSync(void *)", 800, (uint64_t)"pausing for: %d secs\n", v34, v35, v36, v37, 20);
          }
        }
        goto LABEL_142;
      }
      CFStringRef v9 = 0;
    }
LABEL_23:
    if (v74)
    {
      CFRelease(v74);
      CFTypeRef v74 = 0;
    }
    if (v9) {
      CFRelease(v9);
    }
    sub_2268B3C40((_DWORD *)a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_2268AD554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_TaskEraseDiskAsync(BSConfigurationContextRef, CFDictionaryRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v27);
  }
  context = 0;
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t v10 = 4294960591;
  if (a2)
  {
    if (*(void *)(a1 + 120))
    {
      uint64_t v10 = sub_2268AD6D8(a1, 1165123913, a3, a4, a5, a6, a7, a8);
      if (!v10)
      {
        CFTypeRef cf = 0;
        uint64_t v10 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%ks=%O}", v11, v12, v13, v14, v15, (uint64_t)"kAsyncParam_DiskOptions");
        if (v10)
        {
LABEL_11:
          sub_2268A8EB4(a1, 0, (uint64_t)v16, v17, v18, v19, v20, v21);
          return v10;
        }
        if (cf)
        {
          uint64_t v10 = sub_2268A9354(a1, cf, &context, v17, v18, v19, v20, v21);
          if (cf)
          {
            CFRelease(cf);
            CFTypeRef cf = 0;
          }
          if (v10) {
            goto LABEL_11;
          }
          unint64_t v16 = context;
          if (!context)
          {
            uint64_t v10 = 4294960568;
            goto LABEL_11;
          }
          dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), context, (dispatch_function_t)sub_2268AD778);
          sub_2268AB478(a1, 6, 1165123913, 1, v23, v24, v25, v26);
        }
        return 0;
      }
    }
  }
  return v10;
}

uint64_t sub_2268AD6D8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_SetTaskStateAndCode(BSConfigurationContextRef, eBSConfigurationTaskState, ACPTaskCode)", 800, (uint64_t)" \n", a5, a6, a7, a8, v11);
  }
  if (*(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t result = sub_2268A8EB4(a1, 6u, a3, a4, a5, a6, a7, a8);
  if (!result) {
    *(_DWORD *)(a1 + 84) = a2;
  }
  return result;
}

void sub_2268AD778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskEraseDiskSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v27);
  }
  if (a1)
  {
    CFStringRef v28 = 0;
    CFDictionaryRef theDict = 0;
    if (*(_DWORD *)(a1 + 16) == 1634561902)
    {
      uint64_t v9 = *(void *)a1;
      if (*(void *)a1)
      {
        if (*(_DWORD *)(v9 + 144) == 1634561902 && *(void *)(v9 + 8) && (CFStringRef v10 = *(const __CFString **)(a1 + 8)) != 0)
        {
          sub_22686088C(v10, (uint64_t)&theDict, (UInt8 *)"%ks", a4, a5, a6, a7, a8, (uint64_t)"kAsyncParam_DiskOptions");
          uint64_t v13 = v12;
          if (!v12)
          {
            if (theDict)
            {
              uint64_t v13 = sub_2268DBB2C(*(void *)(v9 + 128), v11, a3, a4, a5, a6, a7, a8);
              if (!v13)
              {
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskEraseDiskSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"Starting monitoring if needed");
                }
                uint64_t v13 = sub_2268B4718(v9, v14, a3, a4, a5, a6, a7, a8);
                if (!v13)
                {
                  if (dword_268147638 <= 800)
                  {
                    if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskEraseDiskSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v18, v19, v20, v21, (uint64_t)"Starting monitoring if needed");
                    }
                    if (dword_268147638 <= 800
                      && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                    {
                      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskEraseDiskSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v18, v19, v20, v21, (uint64_t)"Setting internal disk name");
                    }
                  }
                  sub_22686088C((const __CFString *)theDict, (uint64_t)&v28, (UInt8 *)"%kO", v17, v18, v19, v20, v21, @"volumeName");
                  uint64_t v13 = v22;
                  if (!v22)
                  {
                    CFStringRef v16 = v28;
                    if (v28)
                    {
                      uint64_t v13 = sub_2268A5444(*(void *)(v9 + 8), 1229213293, v28);
                      if (!v13)
                      {
                        if (dword_268147638 <= 800)
                        {
                          if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskEraseDiskSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v18, v19, v20, v21, (uint64_t)"Setting internal disk name");
                          }
                          if (dword_268147638 <= 800
                            && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                          {
                            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskEraseDiskSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v18, v19, v20, v21, (uint64_t)"Sending erase command");
                          }
                        }
                        uint64_t v13 = sub_2268A7228(*(void *)(v9 + 8), theDict);
                        if (!v13)
                        {
                          if (dword_268147638 <= 800
                            && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                          {
                            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskEraseDiskSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v18, v19, v20, v21, (uint64_t)"Sending erase command");
                          }
                          if (*(_DWORD *)(v9 + 144) == 1634561902) {
                            sub_2268DCE10(*(void *)(v9 + 128), 0, (uint64_t)v16, v17, v18, v19, v20, v21);
                          }
                          sub_2268DBBDC(*(void *)(v9 + 128), v15, (uint64_t)v16, v17, v18, v19, v20, v21);
                          goto LABEL_31;
                        }
                      }
                    }
                    else
                    {
                      uint64_t v13 = 4294960568;
                    }
                  }
                }
                sub_2268DBBDC(*(void *)(v9 + 128), v15, (uint64_t)v16, v17, v18, v19, v20, v21);
              }
            }
            else
            {
              uint64_t v13 = 4294960568;
            }
          }
        }
        else
        {
          uint64_t v13 = 4294960591;
        }
        sub_2268A8EB4(v9, 0, a3, a4, a5, a6, a7, a8);
        sub_2268B4540(v9, 6, 0, v13, v23, v24, v25, v26);
      }
    }
LABEL_31:
    sub_2268B3C40((_DWORD *)a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_2268ADB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_TaskArchiveDiskAsync(BSConfigurationContextRef, CFDictionaryRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v27);
  }
  context = 0;
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t v10 = 4294960591;
  if (a2)
  {
    if (*(void *)(a1 + 120))
    {
      uint64_t v10 = sub_2268AD6D8(a1, 1098015561, a3, a4, a5, a6, a7, a8);
      if (!v10)
      {
        CFTypeRef cf = 0;
        uint64_t v10 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%ks=%O}", v11, v12, v13, v14, v15, (uint64_t)"kAsyncParam_DiskOptions");
        if (v10)
        {
LABEL_11:
          sub_2268A8EB4(a1, 0, (uint64_t)v16, v17, v18, v19, v20, v21);
          return v10;
        }
        if (cf)
        {
          uint64_t v10 = sub_2268A9354(a1, cf, &context, v17, v18, v19, v20, v21);
          if (cf)
          {
            CFRelease(cf);
            CFTypeRef cf = 0;
          }
          if (v10) {
            goto LABEL_11;
          }
          CFStringRef v16 = context;
          if (!context)
          {
            uint64_t v10 = 4294960568;
            goto LABEL_11;
          }
          dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), context, (dispatch_function_t)sub_2268ADCCC);
          sub_2268AB478(a1, 6, 1098015561, 1, v23, v24, v25, v26);
        }
        return 0;
      }
    }
  }
  return v10;
}

void sub_2268ADCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskArchiveDiskSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v26);
  }
  if (a1)
  {
    CFDictionaryRef theDict = 0;
    if (*(_DWORD *)(a1 + 16) == 1634561902)
    {
      uint64_t v9 = *(void *)a1;
      if (*(void *)a1)
      {
        if (*(_DWORD *)(v9 + 144) == 1634561902 && *(void *)(v9 + 8) && (CFStringRef v10 = *(const __CFString **)(a1 + 8)) != 0)
        {
          sub_22686088C(v10, (uint64_t)&theDict, (UInt8 *)"%ks", a4, a5, a6, a7, a8, (uint64_t)"kAsyncParam_DiskOptions");
          uint64_t v13 = v12;
          if (!v12)
          {
            if (theDict)
            {
              uint64_t v13 = sub_2268DBB2C(*(void *)(v9 + 128), v11, a3, a4, a5, a6, a7, a8);
              if (!v13)
              {
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskArchiveDiskSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"Starting monitoring if needed");
                }
                uint64_t v13 = sub_2268B4718(v9, v14, a3, a4, a5, a6, a7, a8);
                if (!v13)
                {
                  if (dword_268147638 <= 800)
                  {
                    if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskArchiveDiskSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v18, v19, v20, v21, (uint64_t)"Starting monitoring if needed");
                    }
                    if (dword_268147638 <= 800
                      && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                    {
                      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskArchiveDiskSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v18, v19, v20, v21, (uint64_t)"Sending erase command");
                    }
                  }
                  uint64_t v13 = sub_2268A7380(*(void *)(v9 + 8), theDict);
                  if (!v13)
                  {
                    if (dword_268147638 <= 800
                      && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                    {
                      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_TaskArchiveDiskSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v18, v19, v20, v21, (uint64_t)"Sending erase command");
                    }
                    if (*(_DWORD *)(v9 + 144) == 1634561902) {
                      sub_2268DCE10(*(void *)(v9 + 128), 0, v16, v17, v18, v19, v20, v21);
                    }
                    sub_2268DBBDC(*(void *)(v9 + 128), v15, v16, v17, v18, v19, v20, v21);
                    goto LABEL_31;
                  }
                }
                sub_2268DBBDC(*(void *)(v9 + 128), v15, v16, v17, v18, v19, v20, v21);
              }
            }
            else
            {
              uint64_t v13 = 4294960568;
            }
          }
        }
        else
        {
          uint64_t v13 = 4294960591;
        }
        sub_2268A8EB4(v9, 0, a3, a4, a5, a6, a7, a8);
        sub_2268B4540(v9, 6, 0, v13, v22, v23, v24, v25);
      }
    }
LABEL_31:
    sub_2268B3C40((_DWORD *)a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_2268ADFA4(uint64_t a1, uint64_t a2, CFTypeRef cf, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetConfigurationModeAndSetupOptions(BSConfigurationContextRef, eBSConfigurationSettingsMode, CFDictionaryRef)", 800, (uint64_t)"inMode: %d \n", a5, a6, a7, a8, a2);
  }
  uint64_t result = 4294960591;
  if (a1 && cf && *(_DWORD *)(a1 + 144) == 1634561902)
  {
    *(_DWORD *)(a1 + 72) = a2;
    *(void *)(a1 + 64) = cf;
    CFRetain(cf);
    return 0;
  }
  return result;
}

uint64_t sub_2268AE060(uint64_t a1, CFTypeRef cf, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetTargetNetwork(BSConfigurationContextRef, CFDictionaryRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v12);
  }
  uint64_t result = 4294960591;
  if (a1 && cf && *(_DWORD *)(a1 + 144) == 1634561902)
  {
    if (*(void *)(a1 + 56))
    {
      return 4294960577;
    }
    else
    {
      CFTypeRef v11 = CFRetain(cf);
      uint64_t result = 0;
      *(void *)(a1 + 56) = v11;
    }
  }
  return result;
}

uint64_t sub_2268AE114(uint64_t a1, const __CFString *a2, const void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetTargetBaseAndSettings(BSConfigurationContextRef, CFDictionaryRef, CFDictionaryRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v13);
  }
  uint64_t result = 4294960591;
  if (a1 && a2 && *(_DWORD *)(a1 + 144) == 1634561902)
  {
    if (*(void *)a1)
    {
      return 4294960577;
    }
    else
    {
      uint64_t result = sub_2268AE1F8(a1, a2);
      if (a3 && !result)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        return sub_2268A2988(v12, a3);
      }
    }
  }
  return result;
}

uint64_t sub_2268AE1F8(uint64_t a1, const __CFString *cf)
{
  if (!a1) {
    return 4294960578;
  }
  if (*(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960578;
  }
  CFStringRef v4 = *(const __CFString **)a1;
  if (*(const __CFString **)a1 == cf) {
    return 0;
  }
  if (!cf || !v4) {
    goto LABEL_15;
  }
  int v5 = CFEqual(cf, v4);
  if (!v5 || dword_268147638 > 800)
  {
    if (v5) {
      return 0;
    }
    CFStringRef v4 = *(const __CFString **)a1;
LABEL_15:
    if (v4) {
      CFRelease(v4);
    }
    *(void *)a1 = cf;
    if (cf) {
      CFRetain(cf);
    }
    CFStringRef v20 = *(const __CFString **)a1;
    uint64_t v19 = *(int **)(a1 + 8);
    if (v19)
    {
      if (v20)
      {
        uint64_t result = sub_2268A2704((uint64_t)v19, v20);
        if (result) {
          return result;
        }
      }
      else
      {
        *(void *)(a1 + 8) = 0;
        sub_2268A238C(v19);
      }
    }
    else if (v20)
    {
      uint64_t v21 = 0;
      uint64_t result = sub_2268A243C((uint64_t)&v21);
      if (result) {
        return result;
      }
      if (!v21) {
        return 4294960568;
      }
      *(void *)(a1 + 8) = v21;
    }
    return 0;
  }
  if (dword_268147638 != -1 || (uint64_t result = sub_226865630((uint64_t)&dword_268147638, 0x320u), result))
  {
    CFStringRef v14 = sub_22685B6F8(cf, v6, v7, v8, v9, v10, v11, v12);
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetTargetBase(BSConfigurationContextRef, CFDictionaryRef)", 800, (uint64_t)"equal SKIPPING update for: %@\n", v15, v16, v17, v18, (uint64_t)v14);
    return 0;
  }
  return result;
}

uint64_t sub_2268AE340(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_Create(BSConfigurationContextRef *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v27);
  }
  if (!a1) {
    return 4294960591;
  }
  uint64_t v9 = (char *)malloc_type_calloc(1uLL, 0x98uLL, 0x1060040BBF23B49uLL);
  if (!v9) {
    return 4294960568;
  }
  uint64_t v10 = (uint64_t)v9;
  *((void *)v9 + 17) = 0;
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  *(_OWORD *)(v9 + 60) = 0u;
  *((void *)v9 + 10) = 0;
  *(_DWORD *)(v9 + 87) = 0;
  *((void *)v9 + 12) = 0;
  *((void *)v9 + 13) = 0;
  *((void *)v9 + 15) = dispatch_group_create();
  *(void *)(v10 + 112) = dispatch_queue_create("BSConfiguration_serial_queue", 0);
  uint64_t v25 = sub_2268DB560((void *)(v10 + 128), v11, v12, v13, v14, v15, v16, v17);
  if (!v25)
  {
    if (*(void *)(v10 + 128))
    {
      uint64_t v25 = 0;
      *(_DWORD *)(v10 + 144) = 1634561902;
      *a1 = v10;
      return v25;
    }
    uint64_t v25 = 4294960568;
  }
  sub_2268AE470(v10, v18, v19, v20, v21, v22, v23, v24);
  return v25;
}

uint64_t sub_2268AE470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_Release(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v30);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t v9 = sub_2268AE640(a1, 1, a3, a4, a5, a6, a7, a8);
  if (dword_268147638 <= 800)
  {
    uint64_t v17 = v9;
    if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_Release(BSConfigurationContextRef)", 800, (uint64_t)"cancel err: %#m \n", v13, v14, v15, v16, v17);
    }
  }
  *(_DWORD *)(a1 + 144) = 1095585614;
  if (*(void *)a1)
  {
    CFRelease(*(CFTypeRef *)a1);
    *(void *)a1 = 0;
  }
  uint64_t v18 = *(int **)(a1 + 8);
  if (v18) {
    sub_2268A238C(v18);
  }
  uint64_t v19 = *(const void **)(a1 + 16);
  if (v19)
  {
    CFRelease(v19);
    *(void *)(a1 + 16) = 0;
  }
  uint64_t v20 = *(int **)(a1 + 24);
  if (v20) {
    sub_2268A238C(v20);
  }
  uint64_t v21 = *(const void **)(a1 + 32);
  if (v21)
  {
    CFRelease(v21);
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v22 = *(const void **)(a1 + 40);
  if (v22)
  {
    CFRelease(v22);
    *(void *)(a1 + 40) = 0;
  }
  uint64_t v23 = *(const void **)(a1 + 48);
  if (v23)
  {
    CFRelease(v23);
    *(void *)(a1 + 48) = 0;
  }
  uint64_t v24 = *(const void **)(a1 + 56);
  if (v24)
  {
    CFRelease(v24);
    *(void *)(a1 + 56) = 0;
  }
  uint64_t v25 = *(const void **)(a1 + 64);
  if (v25)
  {
    CFRelease(v25);
    *(void *)(a1 + 64) = 0;
  }
  uint64_t v26 = *(NSObject **)(a1 + 120);
  if (v26) {
    dispatch_release(v26);
  }
  *(void *)(a1 + 120) = 0;
  uint64_t v27 = *(NSObject **)(a1 + 112);
  if (v27) {
    dispatch_release(v27);
  }
  *(void *)(a1 + 112) = 0;
  CFStringRef v28 = *(void **)(a1 + 136);
  if (v28) {
    sub_226901388(v28);
  }
  *(void *)(a1 + 136) = 0;
  sub_2268DB710(*(_DWORD **)(a1 + 128), v10, v11, v12, v13, v14, v15, v16);
  free((void *)a1);
  return 0;
}

uint64_t sub_2268AE640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a2;
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_Cancel(BSConfigurationContextRef, Boolean)", 800, (uint64_t)" \n", a5, a6, a7, a8, v20);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  if (v8) {
    unsigned int v10 = 0;
  }
  else {
    unsigned int v10 = sub_2268AE78C((void *)a1, a2, a3, a4, a5, a6, a7, a8);
  }
  unsigned int v12 = sub_2268DBA54(*(void *)(a1 + 128), a2, a3, a4, a5, a6, a7, a8);
  if (v12 == -6720) {
    unsigned int v13 = 0;
  }
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14) {
    sub_2268A2A48(v14);
  }
  uint64_t v15 = *(void *)(a1 + 24);
  if (v15) {
    sub_2268A2A48(v15);
  }
  dispatch_group_wait(*(dispatch_group_t *)(a1 + 120), 0xFFFFFFFFFFFFFFFFLL);
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_Cancel(BSConfigurationContextRef, Boolean)", 800, (uint64_t)"Done waiting on dispatch group \n", v16, v17, v18, v19, v20);
  }
  uint64_t result = 4294960525;
  if (v13 != -6771 && v10 != -6771)
  {
    if (v13) {
      return v13;
    }
    else {
      return v10;
    }
  }
  return result;
}

uint64_t sub_2268AE78C(void *context, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_CancelTask(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v11);
  }
  if (!context || *((_DWORD *)context + 36) != 1634561902) {
    return 4294960591;
  }
  if (*((_DWORD *)context + 20) == 6)
  {
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_CancelDiskTaskAsync(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v11);
    }
    if (*((_DWORD *)context + 36) == 1634561902)
    {
      uint64_t v9 = *((void *)context + 15);
      if (v9)
      {
        dispatch_group_async_f(v9, *((dispatch_queue_t *)context + 14), context, (dispatch_function_t)sub_2268B5064);
        return 4294960525;
      }
    }
    return 4294960591;
  }
  return 0;
}

uint64_t sub_2268AE8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetProgressCallback(BSConfigurationContextRef, assistant_progress_t, void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v13);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t v11 = *(void *)(a1 + 128);

  return sub_2268DC4C4(v11, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_2268AE974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetAssistantCallback(BSConfigurationContextRef, assistant_callback_t, void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v13);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t v11 = *(void *)(a1 + 128);

  return sub_2268DBF38(v11, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_2268AEA38(uint64_t result)
{
  if (result) {
    return *(void *)(result + 128);
  }
  return result;
}

uint64_t sub_2268AEA44(uint64_t a1, uint64_t a2, CFTypeRef cf, CFTypeRef a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetModeSourceBaseAndSettings(BSConfigurationContextRef, eBSConfigurationSettingsMode, CFDictionaryRef, CFDictionaryRef)", 800, (uint64_t)"inMode: %d \n", a5, a6, a7, a8, a2);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  *(_DWORD *)(a1 + 72) = a2;
  if (cf)
  {
    *(void *)(a1 + 16) = cf;
    CFRetain(cf);
  }
  if (a4)
  {
    *(void *)(a1 + 32) = a4;
    CFRetain(a4);
  }
  return 0;
}

uint64_t sub_2268AEB18(uint64_t a1, CFTypeRef cf, int a3, const __CFString *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetSettingsToJoinNetwork(BSConfigurationContextRef, CFDictionaryRef, BSSecMode, CFStringRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v16);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t result = 4294960591;
  if (cf && *(void *)(a1 + 8))
  {
    *(_DWORD *)(a1 + 72) = 2;
    *(void *)(a1 + 48) = cf;
    CFRetain(cf);
    uint64_t v14 = sub_2269016D4(*(void *)(a1 + 48), v13);
    if (v14)
    {
      CFStringRef v15 = (const __CFString *)v14;
      int v17 = 0;
      uint64_t result = sub_2268A5604(*(void *)(a1 + 8), 1937327724, &v17);
      if (!result)
      {
        if ((v17 & 0x40) != 0 || (uint64_t result = sub_2268A5490(*(void *)(a1 + 8), 2002862934, 768), !result))
        {
          sub_2268A80C0(v18, 0x15uLL);
          uint64_t result = sub_2268A5294(*(void *)(a1 + 8), v18, 1);
          if (!result)
          {
            sub_2268A80C0(v18, 0x15uLL);
            uint64_t result = sub_2268A520C(*(void *)(a1 + 8), v18, v15);
            if (!result)
            {
              sub_2268A80C0(v18, 0x15uLL);
              uint64_t result = sub_2268A5294(*(void *)(a1 + 8), v18, a3);
              if (!result)
              {
                if (a3 == 1
                  || !a4
                  || (sub_2268A80C0(v18, 0x15uLL), uint64_t result = sub_2268A520C(*(void *)(a1 + 8), v18, a4), !result))
                {
                  uint64_t result = sub_2268A5490(*(void *)(a1 + 8), 1651724877, 3);
                  if (!result)
                  {
                    uint64_t result = sub_2268A58D0(*(void *)(a1 + 8), 1884509249);
                    if (result)
                    {
                      sub_2268A80C0(v18, 0x15uLL);
                      return sub_2268A520C(*(void *)(a1 + 8), v18, (const __CFString *)*MEMORY[0x263EFFB40]);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    else
    {
      return 4294960569;
    }
  }
  return result;
}

uint64_t sub_2268AED7C(uint64_t a1, const __CFString *a2, int a3, const __CFString *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v13[3] = *MEMORY[0x263EF8340];
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetSettingsToCreateNetwork(BSConfigurationContextRef, CFStringRef, BSSecMode, CFStringRef, Boolean)", 800, (uint64_t)" \n", a5, a6, a7, a8, v13[0]);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902 || !*(void *)(a1 + 8) || a3 != 1 && !a4) {
    return 4294960591;
  }
  *(_DWORD *)(a1 + 72) = 1;
  sub_2268A80C0((char *)v13 + 3, 0x15uLL);
  uint64_t result = sub_2268A5294(*(void *)(a1 + 8), (char *)v13 + 3, 0);
  if (!result)
  {
    sub_2268A80C0((char *)v13 + 3, 0x15uLL);
    uint64_t result = sub_2268A520C(*(void *)(a1 + 8), (char *)v13 + 3, a2);
    if (!result)
    {
      sub_2268A80C0((char *)v13 + 3, 0x15uLL);
      uint64_t result = sub_2268A5294(*(void *)(a1 + 8), (char *)v13 + 3, a3);
      if (!result)
      {
        if (a3 == 1
          || (sub_2268A80C0((char *)v13 + 3, 0x15uLL),
              uint64_t result = sub_2268A520C(*(void *)(a1 + 8), (char *)v13 + 3, a4),
              !result))
        {
          sub_2268A80C0((char *)v13 + 3, 0x15uLL);
          uint64_t result = sub_2268A520C(*(void *)(a1 + 8), (char *)v13 + 3, (const __CFString *)*MEMORY[0x263EFFB40]);
          if (!result) {
            return sub_2268A5490(*(void *)(a1 + 8), 1651724877, 0);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2268AEF70(uint64_t a1, CFTypeRef cf)
{
  if (!a1) {
    return 4294960591;
  }
  if (*(_DWORD *)(a1 + 144) != 1634561902 || *(void *)(a1 + 104)) {
    return 4294960591;
  }
  *(_DWORD *)(a1 + 72) = 3;
  *(void *)(a1 + 104) = cf;
  if (cf) {
    CFRetain(cf);
  }
  return 0;
}

uint64_t sub_2268AEFD4(uint64_t a1, CFTypeRef cf)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t result = 4294960591;
  if (cf && *(_DWORD *)(a1 + 144) == 1634561902)
  {
    if (*(void *)(a1 + 104))
    {
      return 4294960591;
    }
    else
    {
      *(_DWORD *)(a1 + 72) = 4;
      *(void *)(a1 + 104) = cf;
      CFRetain(cf);
      return 0;
    }
  }
  return result;
}

uint64_t sub_2268AF040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetupSecureWANManagementFlags(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v16);
  }
  if (!a1) {
    return 4294960591;
  }
  if (*(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (!v9) {
    return 4294960591;
  }
  uint64_t v17 = 0;
  uint64_t result = sub_2268A5604(v9, 1937327724, (char *)&v17 + 4);
  if (!result)
  {
    if ((v17 & 0x4000000000) == 0) {
      return 0;
    }
    CFStringRef v11 = (const __CFString *)*MEMORY[0x263EFFB38];
    uint64_t result = sub_2268A5444(*(void *)(a1 + 8), 1651725143, (const __CFString *)*MEMORY[0x263EFFB38]);
    if (!result)
    {
      uint64_t result = sub_2268A5604(*(void *)(a1 + 8), 1936017004, &v17);
      if (!result)
      {
        if ((v17 & 0x10001) != 0x10000) {
          return 0;
        }
        uint64_t result = sub_2268A5444(*(void *)(a1 + 8), 1651726147, v11);
        if (!result)
        {
          if (dword_268147638 > 800) {
            return 0;
          }
          if (dword_268147638 != -1 || (uint64_t result = sub_226865630((uint64_t)&dword_268147638, 0x320u), result))
          {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetupSecureWANManagementFlags(BSConfigurationContextRef)", 800, (uint64_t)"BSSimpleWanConfiguration OFF \n", v12, v13, v14, v15, v16);
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2268AF1C0(uint64_t a1, int a2, const __CFString *a3, const __CFString **a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_CopySourceWiFIPlistForImport(BSConfigurationContextRef, eBSConfigurationSettingsMode, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v42);
  }
  uint64_t v12 = 4294960591;
  if (a1)
  {
    if (a4)
    {
      if (a3)
      {
        if (*(_DWORD *)(a1 + 144) == 1634561902)
        {
          CFDataRef theData = 0;
          CFTypeRef cf = 0;
          sub_22686088C(a3, (uint64_t)&cf, (UInt8 *)"%kC", (uint64_t)a4, a5, a6, a7, a8, 1466517097);
          uint64_t v12 = v13;
          if (!v13)
          {
            if (!cf) {
              return 4294960568;
            }
            CFTypeID TypeID = CFDictionaryGetTypeID();
            if (TypeID != CFGetTypeID(cf)) {
              return 4294960540;
            }
            CFStringRef DeepCopy = (const __CFString *)CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], cf, 2uLL);
            if (DeepCopy)
            {
              CFStringRef v21 = DeepCopy;
              sub_22686088C(a3, (uint64_t)&theData, (UInt8 *)"%kC", v16, v17, v18, v19, v20, 1717920116);
              uint64_t v12 = v22;
              if (!v22)
              {
                if (theData)
                {
                  BOOL v27 = !sub_2268A58D0(*(void *)(a1 + 8), 1198748750) || sub_2268E1098(theData, 1198748750) == 0;
                  for (uint64_t i = 0; i != 29; ++i)
                  {
                    sub_22685CDBC(v21, 0, off_2647BA8C0[i], 0, v23, v24, v25, v26);
                    if (v29) {
                      goto LABEL_44;
                    }
                  }
                  if (*(_DWORD *)(a1 + 144) != 1634561902 || (*(_DWORD *)(a1 + 72) - 13) < 0xFFFFFFFC)
                  {
                    uint64_t v30 = 0;
                    while (1)
                    {
                      sub_22685CDBC(v21, 0, off_2647BA9B0[v30], 0, v23, v24, v25, v26);
                      if (v29) {
                        break;
                      }
                      if (++v30 == 4)
                      {
                        if (v27)
                        {
                          sub_22685CDBC(v21, 0, @"vaps", 0, v23, v24, v25, v26);
                          uint64_t v12 = v31;
                          if (v31) {
                            goto LABEL_45;
                          }
                        }
                        if (a2 != 8 && a2 != 6) {
                          goto LABEL_35;
                        }
                        sub_22685CDBC(v21, 0, @"raCA", *MEMORY[0x263EFFB40], v23, v24, v25, v26);
                        uint64_t v12 = v32;
                        if (v32) {
                          goto LABEL_45;
                        }
                        if (a2 != 8)
                        {
LABEL_35:
                          uint64_t v33 = 0;
                          while (1)
                          {
                            sub_22685CDBC(v21, 0, off_2647BA9D8[v33], 0, v23, v24, v25, v26);
                            if (v29) {
                              goto LABEL_44;
                            }
                            if (++v33 == 16)
                            {
                              if (a2 != 7 && a2 != 2) {
                                goto LABEL_52;
                              }
                              uint64_t v34 = 0;
                              while (1)
                              {
                                sub_22685CDBC(v21, 0, off_2647BAA60[v34], 0, v23, v24, v25, v26);
                                if (v29) {
                                  goto LABEL_44;
                                }
                                if (++v34 == 9) {
                                  goto LABEL_52;
                                }
                              }
                            }
                          }
                        }
                        goto LABEL_52;
                      }
                    }
LABEL_44:
                    uint64_t v12 = v29;
                    goto LABEL_45;
                  }
                  if (sub_2268A58D0(*(void *)(a1 + 8), 1884509249)
                    && sub_2268E1098(theData, 1884509249)
                    || (sub_22685CDBC(v21, 0, @"pSTA", 0, v36, v37, v38, v39), uint64_t v12 = v40, !v40))
                  {
                    if (!v27
                      || (sub_22685CDBC(v21, 0, @"vaps", 0, v36, v37, v38, v39), uint64_t v12 = v41, !v41))
                    {
LABEL_52:
                      uint64_t v12 = 0;
                      *a4 = v21;
                      return v12;
                    }
                  }
                }
                else
                {
                  uint64_t v12 = 4294960568;
                }
              }
LABEL_45:
              CFRelease(v21);
            }
            else
            {
              return 4294960568;
            }
          }
        }
      }
    }
  }
  return v12;
}

uint64_t sub_2268AF548(uint64_t a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_UpdateSettingsWithConfigOptions(BSConfigurationContextRef, CFDictionaryRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v136);
  }
  CFTypeRef v143 = 0;
  CFTypeRef v144 = 0;
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960578;
  }
  if (!a2 || !*(_DWORD *)(a1 + 72)) {
    return 4294960591;
  }
  CFStringRef v147 = 0;
  CFStringRef v148 = 0;
  v146 = 0;
  unsigned int v145 = 0;
  char v142 = 0;
  sub_22686088C(a2, (uint64_t)&v148, (UInt8 *)"%kO", a4, a5, a6, a7, a8, @"kBSAutoGuessSetupOptionKey_BaseName");
  uint64_t v16 = v15;
  if (!v15)
  {
    if (!v148) {
      return 4294960569;
    }
    sub_22686088C(a2, (uint64_t)&v147, (UInt8 *)"%kO", v10, v11, v12, v13, v14, @"kBSAutoGuessSetupOptionKey_TargetBase");
    if (v17 != -6727)
    {
      uint64_t v16 = v17;
      if (v17) {
        return v16;
      }
      if (v147)
      {
        sub_22686088C(a2, (uint64_t)&v145, (UInt8 *)"%kO", v18, v19, v20, v21, v22, @"kBSAutoGuessSetupOptionKey_TargetSettings");
        uint64_t v16 = v28;
        if (v28) {
          return v16;
        }
        if (v145)
        {
          uint64_t v16 = sub_2268AE114(a1, v147, v145, v23, v24, v25, v26, v27);
          if (v16) {
            return v16;
          }
          goto LABEL_17;
        }
      }
      return 4294960568;
    }
    CFTypeRef cf = 0;
    sub_22686088C(a2, (uint64_t)&v146, (UInt8 *)"%kO", v18, v19, v20, v21, v22, @"kBSAutoGuessSetupOptionKey_TargetNetwork");
    uint64_t v16 = v57;
    if (v57) {
      return v16;
    }
    if (!v146) {
      return 4294960568;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_UpdateSettingsWithConfigOptions(BSConfigurationContextRef, CFDictionaryRef)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v53, v54, v55, v56, (uint64_t)"Joining/browsing for target");
    }
    uint64_t v16 = sub_2268E0818(*(void *)(a1 + 128), v146, 0, &cf, v53, v54, v55, v56);
    if (!v16)
    {
      if (!cf) {
        goto LABEL_39;
      }
      uint64_t v16 = sub_2268AE1F8(a1, (const __CFString *)cf);
      if (cf)
      {
        CFRelease(cf);
        CFTypeRef cf = 0;
      }
      if (!v16)
      {
LABEL_39:
        if (dword_268147638 <= 800)
        {
          if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_UpdateSettingsWithConfigOptions(BSConfigurationContextRef, CFDictionaryRef)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v58, v59, v60, v61, (uint64_t)"Joining/browsing for target");
          }
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_UpdateSettingsWithConfigOptions(BSConfigurationContextRef, CFDictionaryRef)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v58, v59, v60, v61, (uint64_t)"Reading target settings");
          }
        }
        uint64_t v16 = sub_2268AFE20(a1, 0, *(const __CFString **)a1, *(void *)(a1 + 8), 0, 0, 1, v61);
        if (!v16)
        {
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_UpdateSettingsWithConfigOptions(BSConfigurationContextRef, CFDictionaryRef)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v32, v33, v34, v35, (uint64_t)"Reading target settings");
          }
LABEL_17:
          uint64_t v16 = sub_2268AF040(a1, v29, v30, v31, v32, v33, v34, v35);
          if (!v16)
          {
            uint64_t v16 = 4294960561;
            switch(*(_DWORD *)(a1 + 72))
            {
              case 1:
                goto LABEL_79;
              case 2:
                CFTypeRef cf = 0;
                CFStringRef v139 = 0;
                int v137 = 0;
                sub_22686088C(a2, (uint64_t)&cf, (UInt8 *)"%kO", v36, v37, v38, v39, v40, @"kBSAutoGuessSetupOptionKey_SourceNetwork");
                uint64_t v16 = v62;
                if (v62) {
                  return v16;
                }
                if (!cf) {
                  return 4294960568;
                }
                sub_226901660((uint64_t)cf, (const char *)&v137, 0);
                if (v137 == 8) {
                  int v137 = 5;
                }
                CFTypeRef v140 = 0;
                sub_22686088C(a2, (uint64_t)&v140, (UInt8 *)"%kO", v63, v64, v65, v66, v67, @"kBSAutoGuessSetupOptionKey_NetworkPassword");
                if (v68)
                {
                  uint64_t v16 = v68;
                  if (v68 != -6727) {
                    return v16;
                  }
                }
                sub_22686088C(a2, (uint64_t)&v139, (UInt8 *)"%kO", v69, v70, v71, v72, v73, @"kBSAutoGuessSetupOptionKey_BasePassword");
                if (v74)
                {
                  uint64_t v16 = v74;
                  if (v74 != -6727) {
                    return v16;
                  }
                  if (!sub_22685ABE0(*(const __CFString **)a1, v75, v76, v77, v78, v79, v80, v81)) {
                    return 4294960569;
                  }
                  CFStringRef v139 = @"public";
                }
                else if (!v139)
                {
                  return 4294960568;
                }
                CFStringRef v138 = 0;
                sub_22686088C(a2, (uint64_t)&v138, (UInt8 *)"%kO", v77, v78, v79, v80, v81, @"kBSAutoGuessSetupOptionKey_AirPlayPassword");
                if (v131)
                {
                  uint64_t v16 = v131;
                  if (v131 != -6727) {
                    return v16;
                  }
                }
                uint64_t v16 = sub_2268AEB18(a1, cf, v137, (const __CFString *)v140, v132, v133, v134, v135);
                if (v16) {
                  return v16;
                }
                uint64_t v16 = sub_2268A5444(*(void *)(a1 + 8), 1937330263, v139);
                if (v16) {
                  return v16;
                }
                CFStringRef v91 = v138;
                if (!v138) {
                  goto LABEL_67;
                }
                uint64_t v92 = *(void *)(a1 + 8);
                int v93 = 1635077712;
                goto LABEL_76;
              case 3:
                CFTypeRef cf = 0;
                sub_22686088C(a2, (uint64_t)&cf, (UInt8 *)"%kO", v36, v37, v38, v39, v40, @"kBSAutoGuessSetupOptionKey_ConfigChangeLogDict");
                if (v82)
                {
                  uint64_t v16 = v82;
                  if (v82 != -6727) {
                    return v16;
                  }
                }
                uint64_t v83 = sub_2268AEF70(a1, cf);
                goto LABEL_66;
              case 4:
                CFTypeRef v140 = 0;
                CFTypeRef cf = 0;
                sub_22686088C(a2, (uint64_t)&v140, (UInt8 *)"%kO", v36, v37, v38, v39, v40, @"kBSAutoGuessSetupOptionKey_ConfigChangeLogDict");
                uint64_t v16 = v84;
                if (v84) {
                  return v16;
                }
                if (!v140) {
                  return 4294960568;
                }
                uint64_t v16 = sub_2268AEFD4(a1, v140);
                if (v16) {
                  return v16;
                }
                sub_22686088C(a2, (uint64_t)&cf, (UInt8 *)"%kO", v85, v86, v87, v88, v89, @"kBSAutoGuessSetupOptionKey_BasePassword");
                uint64_t v16 = v90;
                if (v90) {
                  return v16;
                }
                CFStringRef v91 = (const __CFString *)cf;
                if (!cf) {
                  return 4294960568;
                }
                uint64_t v92 = *(void *)(a1 + 8);
                int v93 = 1937330263;
                goto LABEL_76;
              case 6:
              case 7:
              case 8:
              case 9:
              case 0xA:
              case 0xB:
                sub_22686088C(a2, (uint64_t)&v144, (UInt8 *)"%kO", v36, v37, v38, v39, v40, @"kBSAutoGuessSetupOptionKey_SourceBase");
                uint64_t v16 = v46;
                if (v46) {
                  return v16;
                }
                if (!v144) {
                  return 4294960568;
                }
                sub_22686088C(a2, (uint64_t)&v143, (UInt8 *)"%kO", v41, v42, v43, v44, v45, @"kBSAutoGuessSetupOptionKey_SourceSettings");
                if (v47 == -6727) {
                  goto LABEL_67;
                }
                uint64_t v16 = v47;
                if (v47) {
                  return v16;
                }
                if (!v143) {
                  return 4294960568;
                }
                goto LABEL_67;
              case 0xC:
                sub_22686088C(a2, (uint64_t)&v144, (UInt8 *)"%kO", v36, v37, v38, v39, v40, @"kBSAutoGuessSetupOptionKey_SourceBase");
                uint64_t v16 = v94;
                if (v94) {
                  return v16;
                }
                if (!v144) {
                  return 4294960568;
                }
LABEL_79:
                CFTypeRef v140 = 0;
                CFTypeRef cf = 0;
                CFStringRef v138 = 0;
                CFStringRef v139 = 0;
                sub_22686088C(a2, (uint64_t)&cf, (UInt8 *)"%kO", v36, v37, v38, v39, v40, @"kBSAutoGuessSetupOptionKey_NetworkName");
                uint64_t v16 = v100;
                if (v100) {
                  return v16;
                }
                if (!cf) {
                  return 4294960568;
                }
                sub_22686088C(a2, (uint64_t)&v140, (UInt8 *)"%kO", v95, v96, v97, v98, v99, @"kBSAutoGuessSetupOptionKey_NetworkPassword");
                uint64_t v16 = v106;
                if (v106) {
                  return v16;
                }
                if (!v140) {
                  return 4294960568;
                }
                sub_22686088C(a2, (uint64_t)&v139, (UInt8 *)"%kO", v101, v102, v103, v104, v105, @"kBSAutoGuessSetupOptionKey_BasePassword");
                uint64_t v16 = v112;
                if (v112) {
                  return v16;
                }
                if (!v139) {
                  return 4294960568;
                }
                char v142 = 0;
                sub_22686088C(a2, (uint64_t)&v142, (UInt8 *)"%kO:BOOL", v107, v108, v109, v110, v111, @"kBSAutoGuessSetupOptionKey_SkipInternetTests");
                if (v113)
                {
                  uint64_t v16 = v113;
                  if (v113 != -6727) {
                    return v16;
                  }
                }
                if (!sub_2268A58D0(*(void *)(a1 + 8), 1464877357)) {
                  return 4294960561;
                }
                if (sub_2268A58D0(*(void *)(a1 + 8), 1095062317)) {
                  int v117 = 7;
                }
                else {
                  int v117 = 4;
                }
                uint64_t v16 = sub_2268AED7C(a1, (const __CFString *)cf, v117, (const __CFString *)v140, 0, v114, v115, v116);
                if (v16) {
                  return v16;
                }
                uint64_t v16 = sub_2268A5444(*(void *)(a1 + 8), 1937330263, v139);
                if (v16) {
                  return v16;
                }
                sub_2268B025C(a1, a2, v118, v119, v120, v121, v122, v123);
                uint64_t v16 = v129;
                if (v129) {
                  return v16;
                }
                sub_22686088C(a2, (uint64_t)&v138, (UInt8 *)"%kO", v124, v125, v126, v127, v128, @"kBSAutoGuessSetupOptionKey_DiskSharing_Password");
                if (v130 == -6727) {
                  goto LABEL_67;
                }
                uint64_t v16 = v130;
                if (v130) {
                  return v16;
                }
                if (!v138) {
                  return 4294960568;
                }
                uint64_t v16 = sub_2268A5490(*(void *)(a1 + 8), 1651721805, 1);
                if (!v16)
                {
                  uint64_t v92 = *(void *)(a1 + 8);
                  CFStringRef v91 = v138;
                  int v93 = 1718842224;
LABEL_76:
                  uint64_t v83 = sub_2268A5444(v92, v93, v91);
LABEL_66:
                  uint64_t v16 = v83;
                  if (!v83)
                  {
LABEL_67:
                    if (!v144
                      || (uint64_t v16 = sub_2268AEA44(a1, *(unsigned int *)(a1 + 72), v144, v143, v48, v49, v50, v51),
                          !v16))
                    {
                      uint64_t v16 = sub_2268A5444(*(void *)(a1 + 8), 1937329773, v148);
                    }
                  }
                }
                break;
              default:
                return v16;
            }
          }
        }
      }
    }
  }
  return v16;
}

uint64_t sub_2268AFE20(uint64_t a1, const __CFArray *a2, const __CFString *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a7;
  int v9 = a6;
  int v10 = a5;
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_ReadPropertiesForBase(BSConfigurationContextRef, CFArrayRef, CFDictionaryRef, BSRef, Boolean, Boolean, Boolean)", 800, (uint64_t)"\n", a5, a6, a7, a8, v61);
  }
  if (!a3 || !a4)
  {
    uint64_t v32 = 4294960591;
    sub_2268DCB00(*(void *)(a1 + 128), 19, 4294960591, 0, a5, a6, a7, a8);
    return v32;
  }
  sub_22685AFD0(a3);
  uint64_t v23 = 18;
  if (!v15) {
    uint64_t v23 = 3;
  }
  uint64_t v66 = v23;
  if (v15) {
    uint64_t v24 = 10;
  }
  else {
    uint64_t v24 = 6;
  }
  if (v9)
  {
    unsigned int v25 = sub_2268DBB2C(*(void *)(a1 + 128), v16, v17, v18, v19, v20, v21, v22);
    if (v25)
    {
      unsigned int v30 = v25;
      CFStringRef v31 = 0;
      a3 = 0;
      goto LABEL_63;
    }
  }
  uint64_t v65 = v24;
  CFRetain(a3);
  CFStringRef v31 = sub_22685B6F8(a3, v33, v34, v35, v36, v37, v38, v39);
  if (!v31)
  {
    unsigned int v30 = -6727;
    goto LABEL_61;
  }
  int v62 = v8;
  sub_2268DCB00(*(void *)(a1 + 128), 18, 0, (uint64_t)v31, v26, v27, v28, v29);
  uint64_t v64 = 0;
  int v63 = 0;
  int v43 = 0;
  while (1)
  {
    while (1)
    {
      unsigned int v44 = sub_2268A2AE0(a4, a2, 1);
      if (v44 != -16) {
        break;
      }
      if (v43)
      {
        int v43 = 1;
        if (v10) {
          goto LABEL_46;
        }
      }
      else
      {
        if (*(_DWORD *)(a1 + 144) != 1634561902 || !sub_22685B6F8(a3, v40, (uint64_t)v41, v42, v26, v27, v28, v29))
        {
LABEL_60:
          unsigned int v30 = -6705;
          goto LABEL_61;
        }
        CFTypeRef cf = 0;
        unsigned int v45 = sub_2268DE568(*(void *)(a1 + 128), @"keychainBaseStationType", a3, &cf, v26, v27, v28, v29);
        if (v45)
        {
          unsigned int v30 = v45;
          if (v45 == -6727) {
            goto LABEL_32;
          }
        }
        else
        {
          CFTypeRef v41 = cf;
          if (!cf)
          {
            unsigned int v30 = -6728;
            goto LABEL_61;
          }
          unsigned int v30 = sub_2268A5444(a4, 1651721296, (const __CFString *)cf);
          if (cf) {
            CFRelease(cf);
          }
        }
        int v43 = 1;
        if (v30)
        {
          if (v30 != -6727) {
            goto LABEL_61;
          }
LABEL_32:
          if (v62 && !*(unsigned char *)(a1 + 90))
          {
            unsigned int v46 = sub_2268DBD60(*(void *)(a1 + 128), 0, (uint64_t)v41, v42, v26, v27, v28, v29);
            if (v46 || !v10)
            {
              if (v46) {
                unsigned int v30 = v46;
              }
              else {
                unsigned int v30 = -16;
              }
              goto LABEL_61;
            }
          }
          else if (!v10)
          {
            unsigned int v30 = -16;
            goto LABEL_61;
          }
LABEL_46:
          if (*(_DWORD *)(a1 + 144) != 1634561902) {
            goto LABEL_60;
          }
          CFTypeRef cf = 0;
          CFRetain(a3);
          CFStringRef v54 = sub_22685B6F8(a3, v47, v48, v49, v50, v51, v52, v53);
          if (!v54)
          {
            unsigned int v30 = -6705;
LABEL_74:
            CFRelease(a3);
            goto LABEL_61;
          }
          unsigned int v59 = sub_2268DE938(*(void *)(a1 + 128), @"keychainBaseStationType", (uint64_t)v54, &cf, v55, v56, v57, v58);
          if (v59)
          {
            unsigned int v30 = v59;
            goto LABEL_74;
          }
          if (!cf)
          {
            unsigned int v30 = -6728;
            goto LABEL_74;
          }
          unsigned int v30 = sub_2268A5444(a4, 1651721296, (const __CFString *)cf);
          if (cf)
          {
            CFRelease(cf);
            CFTypeRef cf = 0;
          }
          CFRelease(a3);
          int v63 = 1;
          int v43 = 1;
          if (v30) {
            goto LABEL_61;
          }
        }
      }
    }
    unsigned int v30 = v44;
    if (v44 != -6753) {
      break;
    }
    if (v64 == v66 - 1)
    {
      unsigned int v30 = -6753;
      goto LABEL_61;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_ReadPropertiesForBase(BSConfigurationContextRef, CFArrayRef, CFDictionaryRef, BSRef, Boolean, Boolean, Boolean)", 800, (uint64_t)"## connection err, retries: %d of %d \n", v26, v27, v28, v29, v64 + 1);
    }
    ++v64;
    unsigned int v30 = sub_2268DDC20(*(void *)(a1 + 128), v65);
    if (v30) {
      goto LABEL_61;
    }
  }
  if (!v44)
  {
    LOBYTE(cf) = 0;
    unsigned int v30 = sub_2268DBCB8(*(void *)(a1 + 128), &cf, (uint64_t)v41, v42, v26, v27, v28, v29);
    if (!v30 && (_BYTE)cf && v63) {
      sub_2268B5274(a1, a3, a4, v42, v26, v27, v28, v29);
    }
  }
LABEL_61:
  if (v9) {
    sub_2268DBBDC(*(void *)(a1 + 128), v40, (uint64_t)v41, v42, v26, v27, v28, v29);
  }
LABEL_63:
  if (v30 == -6735) {
    uint64_t v32 = 4294967280;
  }
  else {
    uint64_t v32 = v30;
  }
  sub_2268DCB00(*(void *)(a1 + 128), 19, v32, (uint64_t)v31, v26, v27, v28, v29);
  if (a3) {
    CFRelease(a3);
  }
  return v32;
}

void sub_2268B025C(uint64_t a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  if (*(_DWORD *)(a1 + 144) == 1634561902)
  {
    if (*(void *)(a1 + 8))
    {
      CFStringRef theString = 0;
      char v30 = 0;
      int v29 = 0;
      sub_22686088C(a2, (uint64_t)&v30, (UInt8 *)"%kO:BOOL", a4, a5, a6, a7, a8, @"kBSAutoGuessSetupOptionKey_GuestNetwork_On");
      if (!v10)
      {
        sub_2268A80C0(v32, 0x15uLL);
        if (!sub_2268A531C(*(void *)(a1 + 8), v32, v30 != 0))
        {
          if (v30)
          {
            sub_22686088C(a2, (uint64_t)&theString, (UInt8 *)"%kO", v11, v12, v13, v14, v15, @"kBSAutoGuessSetupOptionKey_GuestNetwork_Name");
            if (v16 == -6727
              || !v16
              && theString
              && (sub_2268A80C0(v32, 0x15uLL), !sub_2268A520C(*(void *)(a1 + 8), v32, theString)))
            {
              sub_22686088C(a2, (uint64_t)&v29, (UInt8 *)"%kO:int", v17, v18, v19, v20, v21, @"kBSAutoGuessSetupOptionKey_GuestNetwork_Security");
              if (!v22)
              {
                sub_2268A80C0(v32, 0x15uLL);
                if (!sub_2268A5294(*(void *)(a1 + 8), v32, v29) && v29 != 1)
                {
                  sub_22686088C(a2, (uint64_t)&theString, (UInt8 *)"%kO", v23, v24, v25, v26, v27, @"kBSAutoGuessSetupOptionKey_GuestNetwork_Password");
                  if (!v28)
                  {
                    if (theString)
                    {
                      if (CFStringGetLength(theString))
                      {
                        sub_2268A80C0(v32, 0x15uLL);
                        sub_2268A520C(*(void *)(a1 + 8), v32, theString);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2268B0494(uint64_t a1, void *a2)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t result = 4294960591;
  if (a2 && *(_DWORD *)(a1 + 144) == 1634561902)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (v4)
    {
      uint64_t result = 0;
      *a2 = v4;
    }
    else
    {
      return 4294960569;
    }
  }
  return result;
}

uint64_t sub_2268B04DC(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_GetSaveBasePasswordToKeychain(BSConfigurationContextRef, Boolean *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v12);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t v10 = *(void *)(a1 + 128);

  return sub_2268DBCB8(v10, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_2268B058C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetSaveBasePasswordToKeychain(BSConfigurationContextRef, Boolean)", 800, (uint64_t)" \n", a5, a6, a7, a8, v12);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t v10 = *(void *)(a1 + 128);

  return sub_2268DBD60(v10, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_2268B063C(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_GetSaveWiFiPasswordToKeychain(BSConfigurationContextRef, Boolean *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v12);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t v10 = *(void *)(a1 + 128);

  return sub_2268DBDF8(v10, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_2268B06EC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetSaveWiFiPasswordToKeychain(BSConfigurationContextRef, Boolean)", 800, (uint64_t)" \n", a5, a6, a7, a8, v12);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t v10 = *(void *)(a1 + 128);

  return sub_2268DBEA0(v10, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_2268B079C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetAskAboutSavingBasePasswords(BSConfigurationContextRef, Boolean)", 800, (uint64_t)" \n", a5, a6, a7, a8, v11);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t result = 0;
  *(unsigned char *)(a1 + 90) = a2;
  return result;
}

uint64_t sub_2268B0834(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetSettingsModeIsAutomatic(BSConfigurationContextRef, Boolean)", 800, (uint64_t)" \n", a5, a6, a7, a8, v11);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t result = 0;
  *(unsigned char *)(a1 + 76) = a2;
  return result;
}

uint64_t sub_2268B08CC(uint64_t a1, void *a2)
{
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960578;
  }
  if (!a2) {
    return 4294960591;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 4294960569;
  }
  uint64_t result = 0;
  *a2 = v2;
  return result;
}

uint64_t sub_2268B0914(uint64_t *a1, void *a2)
{
  if (!a1 || *((_DWORD *)a1 + 36) != 1634561902) {
    return 4294960578;
  }
  if (!a2) {
    return 4294960591;
  }
  uint64_t v2 = *a1;
  if (!*a1) {
    return 4294960569;
  }
  uint64_t result = 0;
  *a2 = v2;
  return result;
}

uint64_t sub_2268B095C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_JoinAsync(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v10);
  }
  context = 0;
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902 || !*(void *)(a1 + 120)) {
    return 4294960591;
  }
  uint64_t result = sub_2268A9354(a1, 0, &context, a4, a5, a6, a7, a8);
  if (!result)
  {
    if (context)
    {
      dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), context, (dispatch_function_t)sub_2268B0A3C);
      return 0;
    }
    else
    {
      return 4294960568;
    }
  }
  return result;
}

void sub_2268B0A3C(_DWORD *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_JoinSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v13);
  }
  if (a1)
  {
    if (a1[4] == 1634561902)
    {
      uint64_t v9 = *(void *)a1;
      uint64_t v10 = *(const char **)(*(void *)a1 + 56);
      uint64_t v11 = sub_2269016D4((uint64_t)v10, a2);
      if (v11)
      {
        CFStringRef v12 = (const __CFString *)v11;
        if (sub_2269016E4((uint64_t)v10, a2))
        {
          if (!sub_2268DD6CC(*(void *)(v9 + 128), v12, 0, a4, a5, a6, a7, a8))
          {
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_JoinSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"Joining Network");
            }
            if (!sub_2268DFEFC(*(void *)(v9 + 128), v10, &stru_26DA6BE88, 1, 0, a6, a7, a8)
              && dword_268147638 <= 800
              && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
            {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_JoinSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", a5, a6, a7, a8, (uint64_t)"Joining Network");
            }
          }
        }
      }
    }
    sub_2268B3C40(a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_2268B0C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_JoinAndBrowseAsync(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v10);
  }
  context = 0;
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902 || !*(void *)(a1 + 120)) {
    return 4294960591;
  }
  uint64_t result = sub_2268A9354(a1, 0, &context, a4, a5, a6, a7, a8);
  if (!result)
  {
    if (context)
    {
      dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), context, (dispatch_function_t)sub_2268B0CE4);
      return 0;
    }
    else
    {
      return 4294960568;
    }
  }
  return result;
}

void sub_2268B0CE4(_DWORD *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_JoinAndBrowseSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v26);
  }
  CFTypeRef cf = 0;
  if (a1)
  {
    CFStringRef v28 = 0;
    if (a1[4] == 1634561902)
    {
      uint64_t v9 = *(CFTypeRef **)a1;
      uint64_t v10 = *(const char **)(*(void *)a1 + 56);
      uint64_t v11 = sub_2269016D4((uint64_t)v10, a2);
      if (v11)
      {
        CFStringRef v12 = (const __CFString *)v11;
        if (sub_2269016E4((uint64_t)v10, a2))
        {
          if (!sub_2268DD6CC((uint64_t)v9[16], v12, 0, a4, a5, a6, a7, a8))
          {
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_JoinAndBrowseSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v13, v14, v15, v16, (uint64_t)"Joining Network");
            }
            if (sub_2268DFEFC((uint64_t)v9[16], v10, &stru_26DA6BE88, 1, 0, v14, v15, v16)) {
              goto LABEL_22;
            }
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_JoinAndBrowseSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", a5, a6, a7, a8, (uint64_t)"Joining Network");
            }
          }
          unsigned int v17 = sub_2269017F8((uint64_t)v10, a2);
          CFAllocatorRef v18 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          sub_22690177C((uint64_t)v10, v19);
          if (!sub_22685FC7C(v18, (CFTypeRef *)&v28, (uint64_t)"{%ks={%ks=%O%ks=%i%ks=%i}}", v20, v21, v22, v23, v24, (uint64_t)"txt")&& sub_2268A0BA0(v17, 1))
          {
            int v25 = sub_2268DF1D0((uint64_t)v9[16], 0, v28, 0, 120, &cf, a7, a8);
            if (v28)
            {
              CFRelease(v28);
              CFStringRef v28 = 0;
            }
            if (!v25 && cf)
            {
              *uint64_t v9 = cf;
              CFTypeRef cf = 0;
            }
          }
        }
      }
    }
LABEL_22:
    sub_2268B3C40(a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8);
    if (cf) {
      CFRelease(cf);
    }
  }
}

uint64_t sub_2268B0F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_ReadPropertiesAsync(BSConfigurationContextRef, CFArrayRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v14);
  }
  context = 0;
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902 || !*(void *)(a1 + 120)) {
    return 4294960591;
  }
  CFTypeRef cf = 0;
  if (a2)
  {
    uint64_t v10 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%ks=%O}", a4, a5, a6, a7, a8, (uint64_t)"AsyncParam_PropertiesArray");
    CFTypeRef v11 = cf;
    if (v10) {
      BOOL v12 = 1;
    }
    else {
      BOOL v12 = cf == 0;
    }
    if (v12) {
      return v10;
    }
  }
  else
  {
    CFTypeRef v11 = 0;
    CFTypeRef cf = 0;
  }
  uint64_t v10 = sub_2268A9354(a1, v11, &context, a4, a5, a6, a7, a8);
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (!v10)
  {
    if (context)
    {
      dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), context, (dispatch_function_t)sub_2268B10B8);
      return 0;
    }
    else
    {
      return 4294960568;
    }
  }
  return v10;
}

void sub_2268B10B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_ReadPropertiesSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v14);
  }
  if (a1)
  {
    CFArrayRef v15 = 0;
    if (*(_DWORD *)(a1 + 16) == 1634561902)
    {
      uint64_t v9 = *(void *)a1;
      if (*(void *)a1)
      {
        if (*(_DWORD *)(v9 + 144) == 1634561902)
        {
          if (*(void *)v9)
          {
            if (*(void *)(v9 + 8))
            {
              CFArrayRef v15 = 0;
              CFStringRef v10 = *(const __CFString **)(a1 + 8);
              if (!v10
                || (sub_22686088C(v10, (uint64_t)&v15, (UInt8 *)"%ks", a4, a5, a6, a7, a8, (uint64_t)"AsyncParam_PropertiesArray"), v11 == -6727)|| !v11 && v15)
              {
                if (!sub_2268DBC88(*(void *)(v9 + 128))) {
                  goto LABEL_25;
                }
                CFStringRef v12 = *(const __CFString **)v9;
                CFRetain(*(CFTypeRef *)v9);
                int v13 = sub_2268B431C(v9, v12);
                if (v12) {
                  CFRelease(v12);
                }
                if (!v13)
                {
LABEL_25:
                  if (!sub_2268AFE20(v9, v15, *(const __CFString **)v9, *(void *)(v9 + 8), 1, 1, 0, a8)&& !sub_2268B443C(v9, a2, a3, a4, a5, a6, a7, a8))
                  {
                    sub_2268B5160(v9, a2, a3, a4, a5, a6, a7, a8);
                  }
                }
              }
            }
          }
        }
      }
    }
    sub_2268B3C40((_DWORD *)a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_2268B1228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_WriteSettingsAsync(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v14);
  }
  if (!a1 || *(_DWORD *)(a1 + 144) != 1634561902 || !*(void *)(a1 + 120)) {
    return 4294960591;
  }
  uint64_t result = sub_2268A8EB4(a1, 1u, a3, a4, a5, a6, a7, a8);
  if (!result)
  {
    dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), (void *)a1, (dispatch_function_t)sub_2268B1300);
    sub_2268DCB00(*(void *)(a1 + 128), 14, 0, 0, v10, v11, v12, v13);
    return 0;
  }
  return result;
}

void sub_2268B1300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v285[3] = *(CFDataRef *)MEMORY[0x263EF8340];
  BOOL v271 = 0;
  CFTypeRef v268 = 0;
  CFTypeRef v269 = 0;
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v263);
  }
  CFTypeRef cf = 0;
  CFTypeRef v281 = 0;
  CFTypeRef v278 = 0;
  CFTypeRef DeepCopy = 0;
  CFTypeRef v276 = 0;
  CFTypeRef v277 = 0;
  CFTypeRef v274 = 0;
  CFTypeRef v275 = 0;
  BOOL v272 = 0;
  __int16 v270 = 0;
  CFTypeRef v273 = 0;
  CFTypeRef v267 = 0;
  if (!a1) {
    goto LABEL_56;
  }
  uint64_t v16 = sub_2268DBB2C(*(void *)(a1 + 128), a2, a3, a4, a5, a6, a7, a8);
  if (v16) {
    goto LABEL_48;
  }
  LOBYTE(v270) = 0;
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17 && sub_2268A7A14(v17))
  {
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v12, v13, v14, v15, (uint64_t)"Stopping monitoring");
    }
    uint64_t v16 = sub_2268B3FE8(a1, (uint64_t)v9, v10, v11, v12, v13, v14, v15);
    if (v16) {
      goto LABEL_47;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v12, v13, v14, v15, (uint64_t)"Stopping monitoring");
    }
  }
  if (*(unsigned char *)(a1 + 90))
  {
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v12, v13, v14, v15, (uint64_t)"Asking about keychain saving");
    }
    char v18 = sub_2268DF598(*(void *)(a1 + 128), @"KeychainBasePasswordRemember.title", 0, 0, @"KeychainBasePasswordRemember.message", 0, 0, @"kSave", @"kDontSave") != -6723;
    uint64_t v16 = sub_2268B058C(a1, v18, v19, v20, v21, v22, v23, v24);
    if (v16) {
      goto LABEL_47;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v12, v13, v14, v15, (uint64_t)"Done asking about keychain saving");
    }
  }
  if (*(_DWORD *)(a1 + 72))
  {
    uint64_t v16 = sub_2268AF548(a1, *(const __CFString **)(a1 + 64), v10, v11, v12, v13, v14, v15);
    if (v16) {
      goto LABEL_47;
    }
  }
  if (!*(void *)a1 || (uint64_t v25 = *(void *)(a1 + 8)) == 0)
  {
    uint64_t v16 = 4294960591;
    goto LABEL_47;
  }
  uint64_t v16 = sub_2268A55B8(v25, 1937329773, (CFMutableDictionaryRef *)&v276);
  if (v16) {
    goto LABEL_47;
  }
  if (!v276)
  {
    uint64_t v16 = 4294960568;
    goto LABEL_47;
  }
  uint64_t v16 = sub_2268DF7FC(*(void *)(a1 + 128), 300);
  if (v16) {
    goto LABEL_47;
  }
  unsigned int v26 = *(_DWORD *)(a1 + 72);
  switch(v26)
  {
    case 0u:
      goto LABEL_240;
    case 1u:
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v12, v13, v14, v15, (uint64_t)"Verify connection");
      }
      CFTypeRef DeepCopy = 0;
      uint64_t v27 = sub_2268B5358(a1, *(void *)(a1 + 8), *(const __CFString **)a1, &DeepCopy);
      if (v27)
      {
        uint64_t v16 = v27;
        if (v27 != -6735) {
          goto LABEL_424;
        }
        if (dword_268147638 > 800) {
          goto LABEL_239;
        }
        if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"***No system status or monitoring support\n", v12, v13, v14, v15, v263);
        }
      }
      else
      {
        CFTypeRef v9 = DeepCopy;
        if (DeepCopy)
        {
          uint64_t v16 = sub_2268AE1F8(a1, (const __CFString *)DeepCopy);
          if (DeepCopy)
          {
            CFRelease(DeepCopy);
            CFTypeRef DeepCopy = 0;
          }
          if (v16) {
            goto LABEL_424;
          }
        }
      }
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
      {
        uint64_t v77 = "Verify connection";
        goto LABEL_147;
      }
      goto LABEL_239;
    case 2u:
      LODWORD(v284[0]) = 0;
      sub_2268A80C0(v285, 0x15uLL);
      uint64_t v16 = sub_2268A561C(*(void *)(a1 + 8), (char *)v285, v284);
      if (v16) {
        goto LABEL_424;
      }
      if (LODWORD(v284[0]) == 1) {
        goto LABEL_106;
      }
      if (!*(void *)(a1 + 48)) {
        goto LABEL_211;
      }
      sub_2268A80C0(v285, 0x15uLL);
      uint64_t v16 = sub_2268A54A8(*(void *)(a1 + 8), (char *)v285, (CFMutableDictionaryRef *)&v269);
      if (v16) {
        goto LABEL_424;
      }
      if (!v269) {
        goto LABEL_558;
      }
      sub_2268A80C0(v285, 0x15uLL);
      uint64_t v16 = sub_2268A54A8(*(void *)(a1 + 8), (char *)v285, (CFMutableDictionaryRef *)&v268);
      if (v16) {
        goto LABEL_424;
      }
      if (!v268) {
        goto LABEL_558;
      }
      if (CFEqual(&stru_26DA6BE88, (CFStringRef)v268) && v268)
      {
        CFRelease(v268);
        CFTypeRef v268 = 0;
      }
      uint64_t v92 = sub_2268DE568(*(void *)(a1 + 128), @"keychainNetworkType", *(const __CFString **)(a1 + 48), &v281, v88, v89, v90, v91);
      if (v92)
      {
        uint64_t v16 = v92;
        if (v92 != -6727) {
          goto LABEL_424;
        }
        CFStringRef v93 = (const __CFString *)v281;
      }
      else
      {
        CFStringRef v93 = (const __CFString *)v281;
        if (!v281) {
          goto LABEL_558;
        }
      }
      uint64_t v51 = (const char *)v268;
      if (v268)
      {
        if (v93)
        {
          CFStringRef v93 = (const __CFString *)CFStringCompare(v93, (CFStringRef)v268, 0);
          if (!v93) {
            goto LABEL_106;
          }
        }
      }
      int v212 = sub_226901504((uint64_t)v93, v51, v52);
      uint64_t v213 = *(void *)(a1 + 128);
      if (v212)
      {
        if (sub_2268DD6CC(v213, (const __CFString *)v269, 0, v207, v208, v209, v210, v211))
        {
          uint64_t v16 = sub_2268E065C(*(void *)(a1 + 128), *(const __CFString **)a1, 0, 0, 0, 0, &DeepCopy, v216);
          if (v16) {
            goto LABEL_424;
          }
          if (DeepCopy)
          {
            uint64_t v16 = sub_2268AE1F8(a1, (const __CFString *)DeepCopy);
            if (DeepCopy)
            {
              CFRelease(DeepCopy);
              CFTypeRef DeepCopy = 0;
            }
            if (v16) {
              goto LABEL_424;
            }
          }
        }
        CFStringRef v217 = (const __CFString *)(v268 ? v268 : v281);
        uint64_t v16 = sub_2268DFEFC(*(void *)(a1 + 128), *(const char **)(a1 + 48), v217, 0, (const void *)1, v214, v215, v216);
        if (v16) {
          goto LABEL_424;
        }
        if (v281)
        {
          CFRelease(v281);
          CFTypeRef v281 = 0;
        }
        uint64_t v16 = sub_2268DE568(*(void *)(a1 + 128), @"keychainNetworkType", *(const __CFString **)(a1 + 48), &v281, v218, v219, v220, v221);
        if (v16) {
          goto LABEL_424;
        }
      }
      else
      {
        uint64_t v16 = sub_2268DE938(v213, @"keychainNetworkType", (uint64_t)v269, &v281, v208, v209, v210, v211);
        if (v16) {
          goto LABEL_424;
        }
      }
      if (!v281) {
        goto LABEL_558;
      }
      uint64_t v16 = sub_2268A520C(*(void *)(a1 + 8), (char *)v285, (const __CFString *)v281);
      if (v16) {
        goto LABEL_424;
      }
      if (v281)
      {
        CFRelease(v281);
        CFTypeRef v281 = 0;
      }
LABEL_106:
      if (sub_22685ABE0(*(const __CFString **)a1, (uint64_t)v51, v52, v53, v54, v55, v56, v57))
      {
        LODWORD(v283[0]) = 0;
        uint64_t v16 = sub_2268A6454(*(void *)(a1 + 8), 1937327724);
        if (v16) {
          goto LABEL_424;
        }
        uint64_t v16 = sub_2268A5604(*(void *)(a1 + 8), 1937327724, v283);
        if (v16) {
          goto LABEL_424;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"target base systemFlags: 0x%X\n", v12, v13, v14, v15, LODWORD(v283[0]));
        }
        if (((uint64_t)v283[0] & 0x80) == 0)
        {
          uint64_t v58 = sub_2268B5958(a1, (uint64_t)v9, v10, v11, v12, v13, v14, v15);
          uint64_t v16 = v58;
          if (v58 == -6757 ? 0 : v58) {
            goto LABEL_424;
          }
        }
      }
      goto LABEL_239;
    case 3u:
      LODWORD(v284[0]) = 0;
      uint64_t v16 = sub_2268E065C(*(void *)(a1 + 128), *(const __CFString **)a1, 0, 0, 0, 0, &DeepCopy, v15);
      if (v16) {
        goto LABEL_424;
      }
      if (DeepCopy)
      {
        uint64_t v16 = sub_2268AE1F8(a1, (const __CFString *)DeepCopy);
        if (DeepCopy)
        {
          CFRelease(DeepCopy);
          CFTypeRef DeepCopy = 0;
        }
        if (v16) {
          goto LABEL_424;
        }
      }
      uint64_t v16 = sub_2268A5604(*(void *)(a1 + 8), 1937327724, v284);
      if (v16) {
        goto LABEL_424;
      }
      if ((BYTE2(v284[0]) & 2) != 0)
      {
        uint64_t v16 = sub_2268A6454(*(void *)(a1 + 8), 1349676902);
        if (v16) {
          goto LABEL_424;
        }
        uint64_t v76 = sub_2268A7A8C(*(void *)(a1 + 8));
      }
      else
      {
        v285[0] = 0;
        CFStringRef v65 = *(const __CFString **)(a1 + 104);
        if (!v65) {
          goto LABEL_423;
        }
        sub_22686088C(v65, (uint64_t)v285, (UInt8 *)"%ks", v60, v61, v62, v63, v64, (uint64_t)"path");
        if (v66) {
          goto LABEL_128;
        }
        CFStringRef v73 = (const __CFString *)v285[0];
        if (!v285[0]) {
          goto LABEL_558;
        }
        uint64_t v74 = *(void *)(a1 + 8);
        int v75 = 0;
LABEL_138:
        uint64_t v76 = sub_2268A2738(v74, v73, v75);
      }
      uint64_t v16 = v76;
      if (v76) {
        goto LABEL_424;
      }
      goto LABEL_239;
    case 4u:
      v285[0] = 0;
      if (!*(void *)(a1 + 104)) {
        goto LABEL_423;
      }
      uint64_t v16 = sub_2268E065C(*(void *)(a1 + 128), *(const __CFString **)a1, 0, 0, 0, 0, &DeepCopy, v15);
      if (v16) {
        goto LABEL_424;
      }
      if (DeepCopy)
      {
        uint64_t v16 = sub_2268AE1F8(a1, (const __CFString *)DeepCopy);
        if (DeepCopy)
        {
          CFRelease(DeepCopy);
          CFTypeRef DeepCopy = 0;
        }
        if (v16) {
          goto LABEL_424;
        }
      }
      sub_22686088C(*(const __CFString **)(a1 + 104), (uint64_t)v285, (UInt8 *)"%ks", v67, v68, v69, v70, v71, (uint64_t)"path");
      uint64_t v16 = v72;
      if (v72) {
        goto LABEL_424;
      }
      CFStringRef v73 = (const __CFString *)v285[0];
      if (!v285[0]) {
        goto LABEL_558;
      }
      uint64_t v74 = *(void *)(a1 + 8);
      int v75 = 1;
      goto LABEL_138;
    default:
      if (v26 < 6) {
        goto LABEL_239;
      }
      BOOL v33 = v26 - 9 < 4 && *(_DWORD *)(a1 + 144) == 1634561902;
      if (!*(void *)(a1 + 16)) {
        goto LABEL_423;
      }
      if (*(void *)(a1 + 32) && !v33) {
        goto LABEL_148;
      }
      if (v26 == 12) {
        goto LABEL_85;
      }
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v12, v13, v14, v15, (uint64_t)"Read source settings");
      }
      CFStringRef v94 = sub_22685B6F8(*(const __CFString **)(a1 + 16), (uint64_t)v9, v10, v11, v12, v13, v14, v15);
      if (!v94) {
        goto LABEL_423;
      }
      uint64_t v96 = (uint64_t)v94;
      uint64_t v16 = sub_2268E065C(*(void *)(a1 + 128), *(const __CFString **)(a1 + 16), 0, 0, (const void *)1, 0, &DeepCopy, v95);
      if (v16) {
        goto LABEL_424;
      }
      if (DeepCopy)
      {
        CFRelease(*(CFTypeRef *)(a1 + 16));
        *(void *)(a1 + 16) = DeepCopy;
        CFTypeRef DeepCopy = 0;
      }
      sub_2268DCB00(*(void *)(a1 + 128), 18, 0, v96, v97, v98, v99, v100);
      uint64_t v16 = sub_2268B5CC8(a1, v33, v101, v102, v103, v104, v105, v106);
      if (v16) {
        goto LABEL_424;
      }
      uint64_t v107 = *(void *)(a1 + 24);
      if (!v107)
      {
LABEL_211:
        uint64_t v16 = 4294960569;
        goto LABEL_424;
      }
      uint64_t v16 = sub_2268A58A8(v107, (CFMutableDictionaryRef *)&v278);
      if (v16) {
        goto LABEL_424;
      }
      if (!v278) {
        goto LABEL_558;
      }
      if (!sub_2268A58D0(*(void *)(a1 + 24), 1231975492)) {
        goto LABEL_206;
      }
      uint64_t v112 = sub_2268A55B8(*(void *)(a1 + 24), 1651721294, (CFMutableDictionaryRef *)&v267);
      if (v112 || !v267) {
        goto LABEL_207;
      }
      if (CFStringGetLength((CFStringRef)v267))
      {
        uint64_t v16 = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], (__CFArray *)v278, (uint64_t)"%kC=%O", v113, v108, v109, v110, v111, 1229213293);
        if (v16) {
          goto LABEL_424;
        }
      }
LABEL_206:
      uint64_t v112 = 0;
LABEL_207:
      sub_2268DCB00(*(void *)(a1 + 128), 19, v112, v96, v108, v109, v110, v111);
      *(void *)(a1 + 32) = v278;
      CFTypeRef v278 = 0;
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v12, v13, v14, v15, (uint64_t)"Read source settings");
      }
LABEL_85:
      unsigned int v26 = *(_DWORD *)(a1 + 72);
      if (v33)
      {
        unsigned int v266 = 0;
        if (v26 == 12)
        {
          if (sub_22685BE8C(*(const __CFString **)(a1 + 16), (uint64_t)v9, v10, v11, v12, v13, v14, v15))
          {
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"source base is unconfigurable, so found WAN link in bonjour record\n", v12, v13, v14, v15, v263);
            }
            unsigned int v266 = 512;
          }
        }
        else
        {
          uint64_t v16 = sub_2268A6454(*(void *)(a1 + 24), 1937327724);
          if (v16) {
            goto LABEL_424;
          }
          uint64_t v16 = sub_2268A5604(*(void *)(a1 + 24), 1937327724, &v266);
          if (v16) {
            goto LABEL_424;
          }
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"source base systemFlags: 0x%X\n", v12, v13, v14, v15, v266);
          }
        }
        if ((v266 & 0x200) == 0) {
          goto LABEL_94;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v12, v13, v14, v15, (uint64_t)"Prompting for Swap Cabling");
        }
        uint64_t v114 = sub_2268B5E04(a1, (uint64_t)v9, v10, v11, v12, v13, v14, v15);
        if (v114 == -6757) {
          uint64_t v115 = 0;
        }
        else {
          uint64_t v115 = v114;
        }
        if (v115)
        {
          if (v115 == -6723)
          {
            uint64_t v16 = v115;
            goto LABEL_424;
          }
          uint64_t v16 = v114;
          if (v115 != -6769) {
            goto LABEL_424;
          }
LABEL_232:
          uint64_t v16 = 4294960527;
          goto LABEL_424;
        }
        unint64_t v205 = *(int **)(a1 + 24);
        if (v205)
        {
          sub_2268A238C(v205);
          *(void *)(a1 + 24) = 0;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v12, v13, v14, v15, (uint64_t)"Prompting for Swap Cabling");
        }
        int v34 = *(_DWORD *)(a1 + 72);
        if (v34 != 12)
        {
LABEL_95:
          if ((v34 - 10) >= 2)
          {
            if (v34 != 12 || !*(void *)(a1 + 40)) {
              goto LABEL_237;
            }
          }
          else
          {
            sub_22686088C(*(const __CFString **)(a1 + 32), (uint64_t)&DeepCopy, (UInt8 *)"%kC", v11, v12, v13, v14, v15, 1466517097);
            uint64_t v16 = v41;
            if (v41) {
              goto LABEL_424;
            }
            if (!DeepCopy) {
              goto LABEL_558;
            }
            sub_22685CB40((const __CFString *)DeepCopy, 1, v35, v36, v37, v38, v39, v40);
            CFTypeRef DeepCopy = 0;
            int v42 = *(_DWORD *)(a1 + 72);
            if (v42 == 11)
            {
              if (!*(void *)(a1 + 40))
              {
                CFAllocatorRef v250 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
                uint64_t v251 = sub_2268A80C0(v285, 0x15uLL);
                sub_2268A80C0(v284, 0x15uLL);
                sub_2268A80C0(v283, 0x15uLL);
                uint64_t v50 = sub_22685FC7C(v250, &DeepCopy, (uint64_t)"{%ks=%i%ks=%O%ks=%O%kC=%i}", v252, v253, v254, v255, v256, v251);
                goto LABEL_544;
              }
            }
            else
            {
              if (v42 != 10) {
                goto LABEL_237;
              }
              CFTypeRef v265 = 0;
              if (!*(void *)(a1 + 40))
              {
                sub_22686088C(*(const __CFString **)(a1 + 32), (uint64_t)&v265, (UInt8 *)"%kC", v11, v12, v13, v14, v15, 1717920116);
                uint64_t v16 = v43;
                if (v43) {
                  goto LABEL_424;
                }
                if (v265)
                {
                  sub_2268E1098((CFDataRef)v265, 1884509249);
                  CFAllocatorRef v264 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
                  uint64_t v44 = sub_2268A80C0(v285, 0x15uLL);
                  sub_2268A80C0(v284, 0x15uLL);
                  sub_2268A80C0(v283, 0x15uLL);
                  sub_2268A80C0(v282, 0x15uLL);
                  uint64_t v50 = sub_22685FC7C(v264, &DeepCopy, (uint64_t)"{%ks=%i%ks=%O%ks=%O%ks=%O%kC=%i}", v45, v46, v47, v48, v49, v44);
LABEL_544:
                  uint64_t v16 = v50;
                  if (v50) {
                    goto LABEL_424;
                  }
                  if (DeepCopy)
                  {
                    *(void *)(a1 + 40) = DeepCopy;
                    CFTypeRef DeepCopy = 0;
                    goto LABEL_237;
                  }
                }
LABEL_558:
                uint64_t v16 = 4294960568;
                goto LABEL_424;
              }
            }
          }
LABEL_423:
          uint64_t v16 = 4294960591;
          goto LABEL_424;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v12, v13, v14, v15, (uint64_t)"Verify connection");
        }
        CFTypeRef DeepCopy = 0;
        uint64_t v206 = sub_2268B5358(a1, *(void *)(a1 + 8), *(const __CFString **)a1, &DeepCopy);
        uint64_t v16 = v206;
        if ((int)v206 > -6724)
        {
          if (v206) {
            goto LABEL_424;
          }
          CFTypeRef v9 = DeepCopy;
          if (DeepCopy)
          {
            uint64_t v16 = sub_2268AE1F8(a1, (const __CFString *)DeepCopy);
            if (DeepCopy)
            {
              CFRelease(DeepCopy);
              CFTypeRef DeepCopy = 0;
            }
            if (v16) {
              goto LABEL_424;
            }
          }
        }
        else
        {
          if (v206 == -6769) {
            goto LABEL_232;
          }
          if (v206 != -6735) {
            goto LABEL_424;
          }
          if (dword_268147638 > 800)
          {
LABEL_94:
            int v34 = *(_DWORD *)(a1 + 72);
            goto LABEL_95;
          }
          if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"***No system status or monitoring support\n", v12, v13, v14, v15, v263);
          }
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v12, v13, v14, v15, (uint64_t)"Verify connection");
        }
        goto LABEL_94;
      }
LABEL_148:
      if (v26 != 6) {
        goto LABEL_238;
      }
      LOBYTE(v266) = 0;
      v284[0] = 0;
      v283[0] = 0;
      if (dword_268147638 <= 800)
      {
        if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"Verifying DWDS on Source\n", v12, v13, v14, v15, v263);
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v12, v13, v14, v15, (uint64_t)"Verifying DWDS on Source");
        }
      }
      sub_22686088C(*(const __CFString **)(a1 + 32), (uint64_t)v284, (UInt8 *)"%kC", v11, v12, v13, v14, v15, 1466517097);
      uint64_t v16 = v81;
      if (v81) {
        goto LABEL_424;
      }
      if (!v284[0]) {
        goto LABEL_558;
      }
      sub_2268E0DC0(v284[0], 0, 0, 0, &v266, v78, v79, v80);
      uint64_t v16 = v86;
      if (v86) {
        goto LABEL_424;
      }
      if ((_BYTE)v266) {
        goto LABEL_161;
      }
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"Enabling DWDS on source\n", v82, v83, v84, v85, v263);
      }
      if (*(void *)(a1 + 40)) {
        goto LABEL_423;
      }
      sub_2268A80C0(v285, 0x15uLL);
      uint64_t v66 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &DeepCopy, (uint64_t)"{%ks=%b}", v243, v244, v245, v246, v247, (uint64_t)v285);
      if (v66) {
        goto LABEL_128;
      }
      if (!DeepCopy) {
        goto LABEL_558;
      }
      *(void *)(a1 + 40) = DeepCopy;
      CFTypeRef DeepCopy = 0;
LABEL_161:
      if (dword_268147638 <= 800)
      {
        if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v82, v83, v84, v85, (uint64_t)"Verifying DWDS on Source");
        }
        if (dword_268147638 <= 800)
        {
          if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"Verifying Timed Access on Source\n", v82, v83, v84, v85, v263);
          }
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v82, v83, v84, v85, (uint64_t)"Verifying Timed Access on Source");
          }
        }
      }
      sub_22685CC74(v284[0], 0, @"acEn", (uint64_t)v283, v82, v83, v84, v85);
      if (v87 || !CFBooleanGetValue(v283[0])) {
        goto LABEL_174;
      }
      v285[0] = 0;
      sub_22686088C(*(const __CFString **)(a1 + 32), (uint64_t)v285, (UInt8 *)"%kC", v11, v12, v13, v14, v15, 1717920116);
      uint64_t v16 = v222;
      if (v222) {
        goto LABEL_424;
      }
      if (!v285[0]) {
        goto LABEL_558;
      }
      if (!sub_2268E1098(v285[0], 1950434124)) {
        goto LABEL_174;
      }
      v282[0] = 0;
      CFTypeRef v265 = 0;
      sub_22686088C(*(const __CFString **)(a1 + 32), (uint64_t)v282, (UInt8 *)"%kC", v11, v12, v13, v14, v15, 1950434124);
      if (v66)
      {
LABEL_128:
        uint64_t v16 = v66;
        goto LABEL_424;
      }
      if (!v282[0]) {
        goto LABEL_558;
      }
      sub_2268A1508(v282[0], @"00:00:00:00:00:00", &v265, v223, v224, v225, v226, v227);
      if (v228) {
        goto LABEL_174;
      }
      if (!v265) {
        goto LABEL_558;
      }
      unsigned int v229 = sub_2268A1A2C((CFArrayRef)v265, (uint64_t)v9, v10, v11, v12, v13, v14, v15);
      if (v265)
      {
        CFRelease(v265);
        CFTypeRef v265 = 0;
      }
      if (v229) {
        goto LABEL_174;
      }
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"Source default ACL is not Full Access\n", v12, v13, v14, v15, v263);
      }
      CFAllocatorRef v230 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFTypeRef DeepCopy = CFPropertyListCreateDeepCopy((CFAllocatorRef)*MEMORY[0x263EFFB08], v282[0], 2uLL);
      if (!DeepCopy) {
        goto LABEL_558;
      }
      uint64_t v231 = 0;
      char v232 = 1;
      break;
  }
  do
  {
    while (1)
    {
      uint64_t v233 = v231;
      int v234 = sub_2268A55B8(*(void *)(a1 + 8), *(_DWORD *)&aM2sbm5sb[4 * v231], (CFMutableDictionaryRef *)&v281);
      CFTypeRef v9 = v281;
      if (v234) {
        BOOL v235 = 1;
      }
      else {
        BOOL v235 = v281 == 0;
      }
      if (v235) {
        goto LABEL_494;
      }
      sub_2268A1508(v282[0], (const __CFString *)v281, &v265, v11, v12, v13, v14, v15);
      if (v236)
      {
        uint64_t v16 = v236;
        if (v236 != -6727) {
          goto LABEL_424;
        }
        goto LABEL_497;
      }
      if (!v265) {
        goto LABEL_558;
      }
      unsigned int v241 = sub_2268A1A2C((CFArrayRef)v265, v237, v238, v239, v240, v13, v14, v15);
      if (v265)
      {
        CFRelease(v265);
        CFTypeRef v265 = 0;
      }
      if (v241) {
        break;
      }
LABEL_497:
      sub_2268A1664((const __CFString *)DeepCopy, @"days=mtwtfss;t=0-0",
        -2,
        (uint64_t)v276,
        (const __CFString *)v281,
        v13,
        v14,
        v15);
      uint64_t v16 = v242;
      if (v281)
      {
        CFRelease(v281);
        CFTypeRef v281 = 0;
      }
      if (v16) {
        goto LABEL_424;
      }
      char v232 = 0;
      uint64_t v231 = 1;
      if (v233) {
        goto LABEL_551;
      }
    }
    if (v281)
    {
      CFRelease(v281);
      CFTypeRef v281 = 0;
    }
LABEL_494:
    uint64_t v231 = 1;
  }
  while (!v233);
  if (v232)
  {
    if (DeepCopy)
    {
      CFRelease(DeepCopy);
      CFTypeRef DeepCopy = 0;
    }
    goto LABEL_174;
  }
LABEL_551:
  CFMutableDictionaryRef Mutable = *(__CFArray **)(a1 + 40);
  if (!Mutable)
  {
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable(v230, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    *(void *)(a1 + 40) = Mutable;
    if (!Mutable) {
      goto LABEL_558;
    }
  }
  uint64_t v16 = sub_226860774(v230, Mutable, (uint64_t)"%kC=%O", v11, v12, v13, v14, v15, 1950434124);
  if (v16) {
    goto LABEL_424;
  }
  uint64_t v16 = sub_226860774(v230, *(__CFArray **)(a1 + 32), (uint64_t)"%kC=%O", v258, v259, v260, v261, v262, 1950434124);
  if (DeepCopy)
  {
    CFRelease(DeepCopy);
    CFTypeRef DeepCopy = 0;
  }
  if (v16) {
    goto LABEL_424;
  }
LABEL_174:
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v12, v13, v14, v15, (uint64_t)"Verifying Timed Acces on Source");
  }
LABEL_237:
  unsigned int v26 = *(_DWORD *)(a1 + 72);
LABEL_238:
  if (v26 != 12)
  {
    uint64_t v16 = sub_2268B61AC(a1, *(const __CFString **)(a1 + 32), v10, v11, v12, v13, v14, v15);
    if (!v16)
    {
      if (*(_DWORD *)(a1 + 144) != 1634561902) {
        goto LABEL_239;
      }
      unsigned int v145 = *(_DWORD *)(a1 + 72);
      if (v145 > 0xB || ((1 << v145) & 0xC40) == 0 || !*(void *)(a1 + 40)) {
        goto LABEL_239;
      }
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v12, v13, v14, v15, (uint64_t)"Configurating source");
      }
      uint64_t v16 = sub_2268E065C(*(void *)(a1 + 128), *(const __CFString **)(a1 + 16), 0, 0, (const void *)1, 0, &DeepCopy, v15);
      if (!v16)
      {
        if (DeepCopy)
        {
          CFRelease(*(CFTypeRef *)(a1 + 16));
          *(void *)(a1 + 16) = DeepCopy;
          CFTypeRef DeepCopy = 0;
        }
        uint64_t v16 = sub_2268B697C(a1, *(CFDictionaryRef *)(a1 + 40), &v270, v146, v147, v148, v149, v150);
        if (!v16)
        {
          unint64_t v151 = *(const void **)(a1 + 40);
          if (v151)
          {
            CFRelease(v151);
            *(void *)(a1 + 40) = 0;
          }
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
          {
            uint64_t v77 = "Configurating source";
LABEL_147:
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v12, v13, v14, v15, (uint64_t)v77);
          }
          goto LABEL_239;
        }
      }
    }
    goto LABEL_424;
  }
LABEL_239:
  uint64_t v16 = sub_2268B6F04(a1, (uint64_t)v9, v10, v11, v12, v13, v14, v15);
  if (v16) {
    goto LABEL_424;
  }
LABEL_240:
  sub_2268DCB00(*(void *)(a1 + 128), 26, 0, 0, v12, v13, v14, v15);
  if (!sub_22685B9B4(*(const __CFString **)a1, v116, v117, v118, v119, v120, v121, v122))
  {
LABEL_243:
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v123, v124, v125, v126, (uint64_t)"Rejoining target network if necessary");
    }
    uint64_t v16 = sub_2268E065C(*(void *)(a1 + 128), *(const __CFString **)a1, 0, 0, 0, 0, &DeepCopy, v126);
    if (v16) {
      goto LABEL_424;
    }
    if (DeepCopy)
    {
      uint64_t v16 = sub_2268AE1F8(a1, (const __CFString *)DeepCopy);
      if (DeepCopy)
      {
        CFRelease(DeepCopy);
        CFTypeRef DeepCopy = 0;
      }
      if (v16) {
        goto LABEL_424;
      }
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v127, v128, v129, v130, (uint64_t)"Rejoining target network if necessary");
    }
    uint64_t v16 = sub_2268B4048(a1, &v275, &v274, &v273, &v272, &v271);
    if (v16) {
      goto LABEL_424;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"finalNetworkName: %@ goingAwayNetwork: %@ networkMaytransition: %d deviceMayLoseTouch: %d \n", v131, v132, v133, v134, (uint64_t)v275);
    }
    sub_2268DCB00(*(void *)(a1 + 128), 20, 0, (uint64_t)v276, v131, v132, v133, v134);
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v135, v136, v137, v138, (uint64_t)"Write target settings");
    }
    uint64_t v16 = sub_2268A3A40(*(void *)(a1 + 8), (BOOL *)&v270 + 1, &cf);
    if (HIBYTE(v270))
    {
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"Had minimal restart with interruptions: %@\n", v139, v140, v141, v142, (uint64_t)cf);
      }
      CFArrayRef v143 = (const __CFArray *)cf;
      v286.CFIndex length = CFArrayGetCount((CFArrayRef)cf);
      v286.locatiouint64_t n = 0;
      int v144 = CFArrayContainsValue(v143, v286, @"wifi");
      if (cf)
      {
        CFRelease(cf);
        CFTypeRef cf = 0;
      }
    }
    else
    {
      int v144 = 0;
    }
    if (v16) {
      goto LABEL_424;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v139, v140, v141, v142, (uint64_t)"Write target settings");
    }
    sub_2268DCB00(*(void *)(a1 + 128), 21, 0, (uint64_t)v276, v139, v140, v141, v142);
    uint64_t v16 = sub_2268A5080(*(void *)(a1 + 8));
    sub_2268DCB00(*(void *)(a1 + 128), 36, v16, (uint64_t)v276, v152, v153, v154, v155);
    if (*(_DWORD *)(a1 + 72) != 9)
    {
      if (*(_DWORD *)(a1 + 144) != 1634561902) {
        goto LABEL_423;
      }
      uint64_t v16 = sub_2268DCE10(*(void *)(a1 + 128), 1u, v156, v157, v158, v159, v160, v161);
      if (v16) {
        goto LABEL_424;
      }
    }
    if (v273 && (!HIBYTE(v270) || v144))
    {
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v158, v159, v160, v161, (uint64_t)"Disassociating");
      }
      uint64_t v16 = sub_2268DD7D0(*(void *)(a1 + 128));
      if (v16) {
        goto LABEL_424;
      }
      if (dword_268147638 <= 800)
      {
        if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v201, v202, v203, v204, (uint64_t)"Disassociating");
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v201, v202, v203, v204, (uint64_t)"Clearing Scan Cache");
        }
      }
      uint64_t v16 = sub_2268DDE9C(*(void *)(a1 + 128), v198, v199, v200, v201, v202, v203, v204);
      if (v16) {
        goto LABEL_424;
      }
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v158, v159, v160, v161, (uint64_t)"Clearing Scan Cache");
      }
      uint64_t v16 = 0;
    }
    if (*(_DWORD *)(a1 + 72) == 9)
    {
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v158, v159, v160, v161, (uint64_t)"Restoring source to defaults");
      }
      uint64_t v168 = sub_2268B7534(a1, *(void *)(a1 + 16), *(void *)(a1 + 24), v157, v158, v159, v160, v161);
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"restoreSourceErr: %#m \n", v164, v165, v166, v167, v168);
      }
      if (!v168)
      {
        uint64_t v16 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &v277, (uint64_t)"{%kO=%O}", v163, v164, v165, v166, v167, @"kBSConfigurationSetupComplete_RemovedBase");
        if (v16) {
          goto LABEL_424;
        }
        if (!v277) {
          goto LABEL_558;
        }
      }
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v164, v165, v166, v167, (uint64_t)"Restoring source to defaults");
      }
      if (*(_DWORD *)(a1 + 144) != 1634561902) {
        goto LABEL_423;
      }
      uint64_t v16 = sub_2268DCE10(*(void *)(a1 + 128), 1u, v162, v163, v164, v165, v166, v167);
      if (v16) {
        goto LABEL_424;
      }
    }
    if (v275)
    {
      if (v272 && (!HIBYTE(v270) || v144))
      {
        if (dword_268147638 <= 800)
        {
          if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v158, v159, v160, v161, (uint64_t)"Network transition pause");
          }
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"pausing for: %d secs\n", v158, v159, v160, v161, 40);
          }
        }
        uint64_t v16 = sub_2268DDC20(*(void *)(a1 + 128), 40);
        if (v16) {
          goto LABEL_424;
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v158, v159, v160, v161, (uint64_t)"Network transition pause");
        }
        uint64_t v16 = 0;
      }
      if (!sub_2268DD6CC(*(void *)(a1 + 128), (const __CFString *)v275, 0, v157, v158, v159, v160, v161))
      {
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v158, v159, v160, v161, (uint64_t)"Joining Network");
        }
        uint64_t v16 = sub_2268DFCF4(*(void *)(a1 + 128), (const __CFString *)v275, (const __CFString *)v274, 1, 0, v159, v160, v161);
        if (v16) {
          goto LABEL_424;
        }
        if (dword_268147638 > 800)
        {
          uint64_t v16 = 0;
          goto LABEL_340;
        }
        if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v158, v159, v160, v161, (uint64_t)"Joining Network");
        }
        uint64_t v16 = 0;
      }
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v158, v159, v160, v161, (uint64_t)"Determining if base station is remote");
    }
LABEL_340:
    sub_22685AFD0(*(const __CFString **)a1);
    int v177 = v176;
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
    {
      if (v177) {
        BOOL v178 = "base station is remote\n";
      }
      else {
        BOOL v178 = "base station is not remote\n";
      }
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)v178, v172, v173, v174, v175, v263);
    }
    if (v177 == 1) {
      goto LABEL_424;
    }
    if (dword_268147638 <= 800)
    {
      if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v172, v173, v174, v175, (uint64_t)"Determining if base station is remote");
      }
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v172, v173, v174, v175, (uint64_t)"Final waiting for target base");
      }
    }
    if (!sub_22685B950(*(const __CFString **)a1, v169, v170, v171, v172, v173, v174, v175))
    {
      if (dword_268147638 <= 800)
      {
        if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v179, v180, v181, v182, (uint64_t)"No bonjour seed pause");
        }
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"pausing for: %d secs\n", v179, v180, v181, v182, 8);
        }
      }
      uint64_t v16 = sub_2268DDC20(*(void *)(a1 + 128), 8);
      if (v16) {
        goto LABEL_424;
      }
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v248, v249, v181, v182, (uint64_t)"No bonjour seed pause");
      }
    }
    uint64_t v16 = sub_2268DF1D0(*(void *)(a1 + 128), (__CFString *)v276, *(const __CFString **)a1, 1, 120, &DeepCopy, v181, v182);
    if (v16) {
      goto LABEL_424;
    }
    if (!DeepCopy) {
      goto LABEL_558;
    }
    uint64_t v16 = sub_2268B431C(a1, (const __CFString *)DeepCopy);
    if (DeepCopy)
    {
      CFRelease(DeepCopy);
      CFTypeRef DeepCopy = 0;
    }
    if (v16) {
      goto LABEL_424;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v183, v184, v185, v186, (uint64_t)"Final waiting for target base");
    }
    if ((_BYTE)v270)
    {
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v183, v184, v185, v186, (uint64_t)"Final waiting for source base");
      }
      uint64_t v16 = sub_2268DF1D0(*(void *)(a1 + 128), 0, *(const __CFString **)(a1 + 16), 0, 120, &DeepCopy, v185, v186);
      if (v16) {
        goto LABEL_424;
      }
      if (!DeepCopy) {
        goto LABEL_558;
      }
      CFRelease(*(CFTypeRef *)(a1 + 16));
      *(void *)(a1 + 16) = DeepCopy;
      CFTypeRef DeepCopy = 0;
      if (dword_268147638 > 800)
      {
LABEL_381:
        uint64_t v16 = sub_2268AFE20(a1, 0, *(const __CFString **)a1, *(void *)(a1 + 8), 0, 0, 0, v186);
        if (!v16)
        {
          if (dword_268147638 <= 800)
          {
            if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v190, v191, v192, v193, (uint64_t)"Rereading settings after restart");
            }
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v190, v191, v192, v193, (uint64_t)"Checking if monitoring needs restored");
            }
          }
          uint64_t v16 = sub_2268B443C(a1, v187, v188, v189, v190, v191, v192, v193);
          if (!v16)
          {
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v194, v195, v196, v197, (uint64_t)"Checking if monitoring needs restored");
            }
            uint64_t v16 = 0;
          }
        }
        goto LABEL_424;
      }
      if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v183, v184, v185, v186, (uint64_t)"Final waiting for source base");
      }
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_WriteSettingsSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v183, v184, v185, v186, (uint64_t)"Rereading settings after restart");
    }
    goto LABEL_381;
  }
  uint64_t v16 = sub_22689FE7C(*(void *)(a1 + 8), 1);
  if (!v16)
  {
    sub_22689FDEC(*(void *)(a1 + 8));
    goto LABEL_243;
  }
LABEL_424:
  sub_2268DFCC0(*(void *)(a1 + 128));
LABEL_47:
  sub_2268DBBDC(*(void *)(a1 + 128), (uint64_t)v9, v10, v11, v12, v13, v14, v15);
LABEL_48:
  *(unsigned char *)(a1 + 90) = 0;
  sub_2268A8EB4(a1, 0, v10, v11, v12, v13, v14, v15);
  sub_2268DC568(*(void *)(a1 + 128), 15, v16, (uint64_t)v277, v28, v29, v30, v31);
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (DeepCopy)
  {
    CFRelease(DeepCopy);
    CFTypeRef DeepCopy = 0;
  }
  if (v278)
  {
    CFRelease(v278);
    CFTypeRef v278 = 0;
  }
  if (v277)
  {
    CFRelease(v277);
    CFTypeRef v277 = 0;
  }
LABEL_56:
  if (v281)
  {
    CFRelease(v281);
    CFTypeRef v281 = 0;
  }
  if (v276)
  {
    CFRelease(v276);
    CFTypeRef v276 = 0;
  }
  if (v275)
  {
    CFRelease(v275);
    CFTypeRef v275 = 0;
  }
  if (v274)
  {
    CFRelease(v274);
    CFTypeRef v274 = 0;
  }
  if (v273)
  {
    CFRelease(v273);
    CFTypeRef v273 = 0;
  }
  if (v269)
  {
    CFRelease(v269);
    CFTypeRef v269 = 0;
  }
  if (v268)
  {
    CFRelease(v268);
    CFTypeRef v268 = 0;
  }
  if (v267) {
    CFRelease(v267);
  }
}

uint64_t sub_2268B3AE4(dispatch_group_t *context, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus BSConfiguration_SetMonitorForChanges(BSConfigurationContextRef, Boolean, Boolean)", 800, (uint64_t)" \n", a5, a6, a7, a8, v12);
  }
  if (!context) {
    return 4294960591;
  }
  if (*((unsigned __int8 *)context + 88) != a2)
  {
    *((unsigned char *)context + 88) = a2;
    if (!a3)
    {
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_CheckMonitoringStateAsync(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v12);
      }
      dispatch_group_async_f(context[15], context[14], context, (dispatch_function_t)sub_2268B867C);
    }
  }
  return 0;
}

uint64_t sub_2268B3BE8(uint64_t a1, unsigned char *a2)
{
  uint64_t result = 4294960591;
  if (a1 && a2)
  {
    *a2 = 0;
    uint64_t result = *(void *)(a1 + 8);
    if (result)
    {
      BOOL v5 = sub_2268A7A14(result);
      uint64_t result = 0;
      *a2 = v5;
    }
  }
  return result;
}

void sub_2268B3C40(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus __AsyncContext_Release(__AsyncContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v10);
  }
  if (a1[4] == 1634561902)
  {
    a1[4] = 1095585614;
    *(void *)a1 = 0;
    CFTypeRef v9 = (const void *)*((void *)a1 + 1);
    if (v9) {
      CFRelease(v9);
    }
    free(a1);
  }
}

void sub_2268B3CFC(const __CFString **a1, CFTypeRef a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_HandleBSSettingChangedSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v13);
  }
  CFTypeRef cf = 0;
  CFTypeRef cf2 = 0;
  CFTypeRef cf1 = 0;
  if (a1)
  {
    unsigned int v18 = 0;
    char v17 = 0;
    if (*((_DWORD *)a1 + 4) != 1634561902) {
      goto LABEL_37;
    }
    CFStringRef v9 = *a1;
    if (!*a1) {
      goto LABEL_37;
    }
    if (LODWORD(v9[4].data) == 1634561902 && v9->info && (CFStringRef v10 = a1[1]) != 0)
    {
      sub_22686088C(v10, (uint64_t)&v18, (UInt8 *)"%kO:int", a4, a5, a6, a7, a8, @"kAsyncParam_Refresh_BSSetting");
      a3 = v11;
      if (!v11)
      {
        if (v18)
        {
          sub_22686088C(a1[1], (uint64_t)&v17, (UInt8 *)"%kO:BOOL", a4, a5, a6, a7, a8, @"kAsyncParam_Refresh_Notify");
          a3 = v12;
          if (!v12)
          {
            a3 = sub_2268A55B8(v9->info, v18, (CFMutableDictionaryRef *)&cf1);
            if (!a3)
            {
              a3 = sub_2268A6454(v9->info, v18);
              if (!a3)
              {
                CFTypeRef cf2 = 0;
                a3 = sub_2268A55B8(v9->info, v18, (CFMutableDictionaryRef *)&cf2);
                if (!a3)
                {
                  if (v17)
                  {
                    if (cf1)
                    {
                      a2 = cf2;
                      if (cf2)
                      {
                        if (CFEqual(cf1, cf2))
                        {
                          char v17 = 0;
                          if (dword_268147638 > 800) {
                            goto LABEL_37;
                          }
                          if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_HandleBSSettingChangedSync(void *)", 800, (uint64_t)"Changed notify to false because %C if equal \n", a5, a6, a7, a8, v18);
                          }
                        }
                      }
                    }
                  }
                  if (v17)
                  {
                    if (cf2)
                    {
                      a3 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%kO=%C%kO=%O}", a4, a5, a6, a7, a8, @"kBSConfigurationRefreshBSSettingKey_BSSetting");
                      if (!a3)
                      {
                        if (cf) {
                          a3 = 0;
                        }
                        else {
                          a3 = 4294960568;
                        }
                      }
                      goto LABEL_32;
                    }
                    char v17 = 0;
                  }
LABEL_37:
                  sub_2268B3C40(a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8);
                  if (cf1)
                  {
                    CFRelease(cf1);
                    CFTypeRef cf1 = 0;
                  }
                  if (cf2)
                  {
                    CFRelease(cf2);
                    CFTypeRef cf2 = 0;
                  }
                  if (cf) {
                    CFRelease(cf);
                  }
                  return;
                }
              }
            }
          }
        }
        else
        {
          a3 = 4294960568;
        }
      }
    }
    else
    {
      a3 = 4294960591;
    }
LABEL_32:
    if (v17)
    {
      sub_2268DC568((uint64_t)v9[4].isa, 34, a3, (uint64_t)cf, a5, a6, a7, a8);
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_HandleBSSettingChangedSync(void *)", 800, (uint64_t)"BSSetting: %C \n", a5, a6, a7, a8, v18);
      }
    }
    goto LABEL_37;
  }
}

uint64_t sub_2268B3FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    if (sub_2268A7A14(v9)) {
      sub_2268A2AA8(*(void *)(a1 + 8));
    }
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 4294960591;
  }
  sub_2268DCB00(*(void *)(a1 + 128), 33, v10, @"stopping", a5, a6, a7, a8);
  return v10;
}

uint64_t sub_2268B4048(uint64_t a1, CFTypeRef *a2, CFTypeRef *a3, void *a4, BOOL *a5, BOOL *a6)
{
  CFTypeRef cf = 0;
  CFStringRef theString2 = 0;
  CFTypeRef v59 = 0;
  CFTypeRef v60 = 0;
  CFTypeRef v58 = 0;
  if (*(_DWORD *)(a1 + 144) != 1634561902)
  {
    CFTypeRef v7 = 0;
    uint64_t v8 = 4294960578;
    goto LABEL_12;
  }
  CFTypeRef v7 = 0;
  uint64_t v8 = 4294960591;
  if (a2 && a3 && a4 && a5)
  {
    sub_22685AFD0(*(const __CFString **)a1);
    if (v21 || sub_22685AE3C(*(const __CFString **)a1, v14, v15, v16, v17, v18, v19, v20))
    {
      BOOL v27 = 0;
      BOOL v28 = 0;
      CFTypeRef v7 = 0;
LABEL_9:
      uint64_t v8 = 0;
      *a2 = cf;
      *a3 = v60;
      CFTypeRef v60 = 0;
      CFTypeRef cf = 0;
      *a4 = v7;
      *a5 = v28;
      *a6 = v27;
LABEL_10:
      CFTypeRef v7 = 0;
      goto LABEL_12;
    }
    uint64_t v30 = sub_2268DD4C4(*(void *)(a1 + 128), &v59, &v58, v22, v23, v24, v25, v26);
    CFTypeRef v7 = 0;
    if (v30 == -6727)
    {
      BOOL v27 = 0;
      BOOL v28 = 0;
      goto LABEL_9;
    }
    uint64_t v8 = v30;
    if (!v30)
    {
      CFTypeRef v7 = 0;
      uint64_t v8 = 4294960568;
      if (v59)
      {
        if (v58)
        {
          uint64_t v31 = sub_2268B45E0(a1, (CFMutableDictionaryRef *)&cf, (CFMutableDictionaryRef *)&v60, (CFMutableDictionaryRef *)&theString2);
          if (v31)
          {
            uint64_t v8 = v31;
            goto LABEL_10;
          }
          int v38 = sub_22685BD10(*(const __CFString **)a1, (const __CFString *)v58, v32, v33, v34, v35, v36, v37);
          if (v38)
          {
            CFTypeRef v7 = v59;
            CFRetain(v59);
          }
          else
          {
            CFTypeRef v7 = 0;
          }
          if (!cf)
          {
            BOOL v28 = 0;
            BOOL v27 = v38 != 0;
            goto LABEL_9;
          }
          CFComparisonResult v39 = CFStringCompare((CFStringRef)v59, (CFStringRef)cf, 0);
          BOOL v27 = 0;
          BOOL v28 = v39 == kCFCompareEqualTo;
          if (v38 || v39 == kCFCompareEqualTo) {
            goto LABEL_9;
          }
          CFComparisonResult v40 = CFStringCompare((CFStringRef)v59, theString2, 0);
          unsigned int v47 = sub_22685AC68(*(const __CFString **)a1, (const __CFString *)v59, v41, v42, v43, v44, v45, v46);
          BOOL v27 = 0;
          if (v40 == kCFCompareEqualTo || !v47)
          {
            BOOL v28 = 0;
            goto LABEL_9;
          }
          CFTypeRef v57 = 0;
          if (cf)
          {
            CFRelease(cf);
            CFTypeRef cf = 0;
          }
          if (v60)
          {
            CFRelease(v60);
            CFTypeRef v60 = 0;
          }
          CFStringRef v52 = (const __CFString *)v59;
          CFTypeRef cf = v59;
          CFTypeRef v59 = 0;
          uint64_t v8 = sub_2268DDFAC(*(void *)(a1 + 128), v52, 3, &v57, v48, v49, v50, v51);
          if (!v8)
          {
            if (!v57)
            {
LABEL_52:
              uint64_t v8 = 4294960568;
              goto LABEL_12;
            }
            uint64_t v8 = sub_2268DE568(*(void *)(a1 + 128), @"keychainNetworkType", (const __CFString *)v57, &v60, v53, v54, v55, v56);
            if (v57) {
              CFRelease(v57);
            }
            if (v8 == -6727) {
              goto LABEL_49;
            }
            if (!v8)
            {
              if (v60)
              {
LABEL_49:
                BOOL v27 = 0;
                BOOL v28 = 1;
                goto LABEL_9;
              }
              goto LABEL_52;
            }
          }
        }
      }
    }
  }
LABEL_12:
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (v60)
  {
    CFRelease(v60);
    CFTypeRef v60 = 0;
  }
  if (v59)
  {
    CFRelease(v59);
    CFTypeRef v59 = 0;
  }
  if (v58)
  {
    CFRelease(v58);
    CFTypeRef v58 = 0;
  }
  if (v7) {
    CFRelease(v7);
  }
  return v8;
}

uint64_t sub_2268B431C(uint64_t a1, const __CFString *a2)
{
  CFTypeRef cf = 0;
  CFStringRef theString = 0;
  if (!a2) {
    return 4294960591;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3)
  {
    uint64_t v5 = 4294960591;
LABEL_12:
    if (theString)
    {
      CFRelease(theString);
      CFStringRef theString = 0;
    }
    goto LABEL_14;
  }
  uint64_t v5 = sub_2268A55B8(v3, 1937330263, (CFMutableDictionaryRef *)&theString);
  if (v5) {
    goto LABEL_12;
  }
  if (theString)
  {
    uint64_t v5 = sub_2268A55B8(*(void *)(a1 + 8), 1651721296, (CFMutableDictionaryRef *)&cf);
    if (!v5)
    {
      if (cf)
      {
        if (CFStringGetLength(theString) && CFStringCompare((CFStringRef)cf, theString, 0)) {
          p_CFStringRef theString = &theString;
        }
        else {
          p_CFStringRef theString = (const __CFString **)&cf;
        }
        CFStringRef v8 = *p_theString;
        uint64_t v5 = sub_2268AE1F8(a1, a2);
        if (!v5) {
          uint64_t v5 = sub_2268A5444(*(void *)(a1 + 8), 1651721296, v8);
        }
      }
      else
      {
        uint64_t v5 = 4294960568;
      }
    }
    goto LABEL_12;
  }
  uint64_t v5 = 4294960568;
LABEL_14:
  if (cf) {
    CFRelease(cf);
  }
  return v5;
}

uint64_t sub_2268B443C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_CheckMonitoringStateSync(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v25);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (!v9) {
    return 4294960591;
  }
  char v26 = 0;
  uint64_t result = sub_2268A50EC(v9, &v26);
  if (!result)
  {
    if (!v26) {
      return 0;
    }
    uint64_t v18 = *(void *)(a1 + 8);
    int v19 = v18 && sub_2268A7A14(v18);
    if (*(unsigned __int8 *)(a1 + 88) == v19) {
      return 0;
    }
    if (*(unsigned char *)(a1 + 88))
    {
      uint64_t result = sub_2268B4718(a1, v11, v12, v13, v14, v15, v16, v17);
      if (!result)
      {
        uint64_t result = sub_2268B48B0(a1, 1937331060, 1, v20, v21, v22, v23, v24);
        if (!result) {
          return 0;
        }
      }
    }
    else
    {
      uint64_t result = sub_2268B3FE8(a1, v11, v12, v13, v14, v15, v16, v17);
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void sub_2268B4540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(_DWORD *)(a1 + 144) == 1634561902)
  {
    CFTypeRef v14 = 0;
    if (!sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &v14, (uint64_t)"{%kO=%i%kO=%O}", a4, a5, a6, a7, a8, @"kBSConfigurationTaskComplete_TaskState"))
    {
      if (v14)
      {
        sub_2268DC568(*(void *)(a1 + 128), 30, a4, (uint64_t)v14, v10, v11, v12, v13);
        if (v14) {
          CFRelease(v14);
        }
      }
    }
  }
}

uint64_t sub_2268B45E0(uint64_t a1, CFMutableDictionaryRef *a2, CFMutableDictionaryRef *a3, CFMutableDictionaryRef *a4)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if (*(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960578;
  }
  uint64_t result = 4294960591;
  if (a2 && a3)
  {
    uint64_t v8 = *(void *)(a1 + 8);
    if (v8)
    {
      sub_2268A7C78(*(void *)(a1 + 8));
      sub_2268A80C0(v10, 0x15uLL);
      uint64_t result = sub_2268A54A8(v8, v10, a2);
      if (!result)
      {
        sub_2268A7C78(v8);
        sub_2268A80C0(v10, 0x15uLL);
        uint64_t result = sub_2268A5530(v8, v10, a4);
        if (!result)
        {
          sub_2268A7C78(v8);
          sub_2268A80C0(v10, 0x15uLL);
          return sub_2268A54A8(v8, v10, a3);
        }
      }
    }
    else
    {
      return 4294960569;
    }
  }
  return result;
}

uint64_t sub_2268B4718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFTypeRef v13 = 0;
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    if (sub_2268A58D0(v9, 1095593838) && !sub_2268A7A14(*(void *)(a1 + 8)))
    {
      uint64_t v11 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &v13, (uint64_t)"{%ks={%kC={}%kC={}%kC={}%kC={}%kC={}%kC={}%kC={}%kC={}%kC={}%kC={}%kC={}%kC={}%kC={}%kC={}%kC={}%ks={}%kC={}%kC={}%kC={}%kC={}}}", v10, a5, a6, a7, a8, (uint64_t)"filters");
      if (!v11)
      {
        if (v13) {
          uint64_t v11 = sub_2268A78F0(*(void *)(a1 + 8), v13, (uint64_t)sub_2268B4A08, a1, a5, a6, a7, a8);
        }
        else {
          uint64_t v11 = 4294960568;
        }
      }
    }
    else
    {
      uint64_t v11 = 0;
    }
  }
  else
  {
    uint64_t v11 = 4294960591;
  }
  sub_2268DCB00(*(void *)(a1 + 128), 33, v11, @"starting", a5, a6, a7, a8);
  if (v13) {
    CFRelease(v13);
  }
  return v11;
}

uint64_t sub_2268B48B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_HandleBSSettingChangedAsync(BSConfigurationContextRef, BSSetting, Boolean)", 800, (uint64_t)"inSetting: %C notify: %d \n", a5, a6, a7, a8, a2);
  }
  uint64_t v10 = 4294960591;
  if (a2)
  {
    if (*(_DWORD *)(a1 + 144) == 1634561902)
    {
      if (*(void *)(a1 + 120))
      {
        if (*(void *)(a1 + 112))
        {
          CFTypeRef cf = 0;
          context = 0;
          uint64_t v10 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%kO=%i%kO=%b}", a4, a5, a6, a7, a8, @"kAsyncParam_Refresh_BSSetting");
          if (!v10)
          {
            if (!cf) {
              return 0;
            }
            uint64_t v10 = sub_2268A9354(a1, cf, &context, v11, v12, v13, v14, v15);
            if (cf)
            {
              CFRelease(cf);
              CFTypeRef cf = 0;
            }
            if (!v10)
            {
              if (!context) {
                return 4294960568;
              }
              dispatch_group_async_f(*(dispatch_group_t *)(a1 + 120), *(dispatch_queue_t *)(a1 + 112), context, (dispatch_function_t)sub_2268B3CFC);
              return 0;
            }
          }
        }
      }
    }
  }
  return v10;
}

void sub_2268B4A08(uint64_t a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFArrayRef theArray = 0;
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __ACPMonitoringForPropertiesCallback(OSStatus, CFDictionaryRef, void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v64);
  }
  unsigned int v70 = 0;
  uint64_t v68 = 0;
  if (a3)
  {
    sub_2268DC568(*(void *)(a3 + 128), 135, a1, (uint64_t)a2, a5, a6, a7, a8);
    CFStringRef v11 = (const __CFString *)sub_22685C610(a2, (unsigned int *)&v68);
    if (!sub_2268A0AD0((unsigned int *)"tSaMicswinrpmgoltSedtSadtSysPIawMSawARaw1Caw2CawDCawiFiWSnyDdlCitatsLCAtInrp", &theArray))
    {
      if (!theArray) {
        goto LABEL_42;
      }
      CFIndex Count = CFArrayGetCount(theArray);
      if (Count)
      {
        CFIndex v18 = Count;
        if (Count < 1)
        {
LABEL_21:
          if (v11)
          {
            CFTypeRef cf = 0;
            sub_22686088C(v11, 0, (UInt8 *)"%kC.%kO", v13, v14, v15, v16, v17, v68);
            if (v32 == -6727)
            {
              sub_2268B4F7C(a3, v11, v68, (unint64_t *)&cf, v28, v29, v30, v31);
              if (!v34)
              {
                uint64_t v66 = 0;
                sub_22686088C(v11, (uint64_t)&v66, (UInt8 *)"%kC", v33, v28, v29, v30, v31, v68);
                if (v36 != -6727)
                {
                  if (v66) {
                    sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], v66, (uint64_t)"%kO=%lli", v35, v28, v29, v30, v31, @"timeEstimate");
                  }
                }
              }
            }
            sub_2268DC568(*(void *)(a3 + 128), 32, a1, (uint64_t)v11, v28, v29, v30, v31);
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __ACPMonitoringForPropertiesCallback(OSStatus, CFDictionaryRef, void *)", 800, (uint64_t)"eBSConfigurationProgressSelector_DiskTaskProgress diskTaskDict: %@\n", v39, v40, v41, v42, (uint64_t)v11);
            }
            if (sub_22685C704(v11, (int *)&v68, v37, v38, v39, v40, v41, v42))
            {
              if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
                sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __ACPMonitoringForPropertiesCallback(OSStatus, CFDictionaryRef, void *)", 800, (uint64_t)"eBSConfigurationProgressSelector_DiskTaskProgress *** STARTING \n", v45, v46, v47, v48, v65);
              }
              if (*(_DWORD *)(a3 + 144) == 1634561902 && *(_DWORD *)(a3 + 80) != 6)
              {
                sub_2268AD6D8(a3, v68, v43, v44, v45, v46, v47, v48);
                sub_2268AB478(a3, 6, v68, 1, v49, v50, v51, v52);
              }
            }
            else if (sub_22685C850(v11, (uint64_t)&v70, v43, v44, v45, v46, v47, v48))
            {
              if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
                sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __ACPMonitoringForPropertiesCallback(OSStatus, CFDictionaryRef, void *)", 800, (uint64_t)"eBSConfigurationProgressSelector_DiskTaskProgress *** COMPLETE \n", v55, v56, v57, v58, v65);
              }
              CFTypeRef v59 = *(void **)(a3 + 136);
              if (v59) {
                sub_226901388(v59);
              }
              *(void *)(a3 + 136) = 0;
              sub_2268A8EB4(a3, 0, v53, v54, v55, v56, v57, v58);
              sub_2268B443C(a3);
              sub_2268B4540(a3, 6, (uint64_t)v11, v70, v60, v61, v62, v63);
            }
          }
        }
        else
        {
          uint64_t v19 = 0;
          while (1)
          {
            CFTypeRef cf = 0;
            sub_22686088C((const __CFString *)theArray, (uint64_t)&v68 + 4, (UInt8 *)"[*]:code", v13, v14, v15, v16, v17, v19);
            if (v25 || !HIDWORD(v68)) {
              break;
            }
            sub_22686088C(a2, (uint64_t)&cf, (UInt8 *)"%kC", v20, v21, v22, v23, v24, HIDWORD(v68));
            if (v26 != -6727)
            {
              if (v26 || !cf) {
                break;
              }
              if (HIDWORD(v68) == 1819240301)
              {
                if (sub_2268B4E0C(a3, (const __CFString *)cf, v27, v13, v14, v15, v16, v17)) {
                  break;
                }
              }
              else if (sub_2268B48B0(a3, HIDWORD(v68), v11 == 0, v13, v14, v15, v16, v17))
              {
                break;
              }
            }
            if (v18 == ++v19) {
              goto LABEL_21;
            }
          }
        }
      }
    }
  }
  else
  {
    CFStringRef v11 = 0;
  }
  if (theArray)
  {
    CFRelease(theArray);
    CFArrayRef theArray = 0;
  }
LABEL_42:
  if (v11) {
    CFRelease(v11);
  }
}

uint64_t sub_2268B4E0C(uint64_t a1, const __CFString *cf, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_HandleLogMessageAsync(BSConfigurationContextRef, CFTypeRef)", 800, (uint64_t)"inMessage: %@ \n", a5, a6, a7, a8, (uint64_t)cf);
  }
  if (*(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  if (!*(void *)(a1 + 8)) {
    return 4294960591;
  }
  CFTypeID v10 = CFGetTypeID(cf);
  if (v10 != CFStringGetTypeID()) {
    return 4294960591;
  }
  if (CFStringFind(cf, @": Associated", 0).location == -1
    && CFStringFind(cf, @": Rotated", 0).location == -1
    && CFStringFind(cf, @": DHCPACK", 0).location == -1)
  {
    return 0;
  }
  uint64_t result = sub_2268B48B0(a1, 1918980940, 1, v11, v12, v13, v14, v15);
  if (!result)
  {
    char v22 = 0;
    uint64_t result = sub_2268A56F8(*(void *)(a1 + 8), 1918977107, &v22);
    if (!result)
    {
      if (v22) {
        return sub_2268B48B0(a1, 1684558668, 1, v17, v18, v19, v20, v21);
      }
    }
  }
  return result;
}

void sub_2268B4F7C(uint64_t a1, const __CFString *a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a4)
  {
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    *a4 = 0;
    sub_22686088C(a2, (uint64_t)&v25, (UInt8 *)"%kC.%kO:int64", (uint64_t)a4, a5, a6, a7, a8, a3);
    if (!v17)
    {
      sub_22686088C(a2, (uint64_t)&v24, (UInt8 *)"%kC.%kO:int64", v12, v13, v14, v15, v16, a3);
      if (!v18)
      {
        uint64_t v19 = v25;
        if (v25)
        {
          uint64_t v22 = *(void *)(a1 + 136);
          uint64_t v21 = (uint64_t *)(a1 + 136);
          uint64_t v20 = v22;
          if (!v22)
          {
            if (sub_22690132C(v21)) {
              return;
            }
            uint64_t v20 = *v21;
            uint64_t v19 = v25;
          }
          unint64_t v23 = sub_2269013B4(v20, v24, v19);
          if (v23) {
            *a4 = v23;
          }
        }
      }
    }
  }
}

uint64_t sub_2268B5064(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = result;
  if (dword_268147638 <= 800)
  {
    if (dword_268147638 != -1 || (uint64_t result = sub_226865630((uint64_t)&dword_268147638, 0x320u), result)) {
      uint64_t result = sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_CancelDiskTaskSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v11);
    }
  }
  if (v8)
  {
    if (*(_DWORD *)(v8 + 144) == 1634561902)
    {
      uint64_t result = *(void *)(v8 + 8);
      if (result)
      {
        int v9 = *(_DWORD *)(v8 + 84);
        switch(v9)
        {
          case 1098015561:
            CFTypeID v10 = @"diskd.cancelArchiveDisk";
            break;
          case 1298753353:
            CFTypeID v10 = @"diskd.cancelMigrateDisk";
            break;
          case 1165123913:
            CFTypeID v10 = @"diskd.cancelEraseDisk";
            break;
          default:
            return result;
        }
        return sub_2268A74D8(result, (uint64_t)v10, a3, a4, a5, a6, a7, a8);
      }
    }
  }
  return result;
}

void sub_2268B5160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_CheckForProperTaskState(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v22);
  }
  if (*(_DWORD *)(a1 + 144) == 1634561902)
  {
    uint64_t v9 = *(void *)(a1 + 8);
    if (v9)
    {
      if (sub_2268A58D0(v9, 1400460148)
        && sub_2268A5904(*(void *)(a1 + 8), 1415661904, 0)
        && *(_DWORD *)(a1 + 144) == 1634561902
        && *(_DWORD *)(a1 + 80) != 6)
      {
        uint64_t v10 = sub_2268A5918(*(void *)(a1 + 8));
        if (v10)
        {
          uint64_t v17 = v10;
          if (!sub_2268AD6D8(a1, v10, v11, v12, v13, v14, v15, v16))
          {
            sub_2268AB478(a1, 6, v17, 0, v18, v19, v20, v21);
          }
        }
      }
    }
  }
}

void sub_2268B5274(uint64_t a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFTypeRef v23 = 0;
  CFTypeRef cf = 0;
  if (*(_DWORD *)(a1 + 144) == 1634561902)
  {
    CFStringRef v11 = sub_22685B6F8(a2, (uint64_t)a2, a3, a4, a5, a6, a7, a8);
    if (v11)
    {
      uint64_t v18 = (uint64_t)v11;
      if (!sub_22685B410(a2, (__CFArray **)&cf, v12, v13, v14, v15, v16, v17))
      {
        if (!cf)
        {
LABEL_6:
          if (v23) {
            CFRelease(v23);
          }
          return;
        }
        if (!sub_2268A55B8(a3, 1651721296, (CFMutableDictionaryRef *)&v23))
        {
          if (v23)
          {
            CFStringRef ValueAtIndex = CFArrayGetValueAtIndex((CFArrayRef)cf, 0);
            if (ValueAtIndex) {
              sub_2268DE768(*(void *)(a1 + 128), @"keychainBaseStationType", (uint64_t)ValueAtIndex, v18, (uint64_t)v23, v20, v21, v22);
            }
          }
        }
      }
    }
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    goto LABEL_6;
  }
}

uint64_t sub_2268B5358(uint64_t a1, uint64_t a2, const __CFString *a3, CFTypeRef *a4)
{
  uint64_t v4 = 4294960591;
  if (!a4) {
    return v4;
  }
  CFStringRef v5 = a3;
  if (!a3 || !a2 || *(_DWORD *)(a1 + 144) != 1634561902) {
    return v4;
  }
  if (!sub_2268A58D0(a2, 1400460148) || !sub_2268A58D0(a2, 1095593838)) {
    return 4294960561;
  }
  int v58 = 0;
  BOOL v57 = 0;
  CFArrayRef v55 = 0;
  CFTypeRef cf = 0;
  *a4 = 0;
  BOOL v9 = sub_2268A5904(a2, 2002865740, &v57) && !v57;
  BOOL v10 = v9;
  sub_2268A5904(a2, 2002865737, &v57);
  BOOL v12 = v57;
  if (!v10)
  {
    uint64_t v4 = 0;
    if (v57) {
      return v4;
    }
  }
  uint64_t v4 = sub_2268E065C(*(void *)(a1 + 128), v5, 0, 0, 0, 0, &cf, v11);
  if (v4) {
    return v4;
  }
  CFStringRef v20 = (const __CFString *)cf;
  if (cf)
  {
    *a4 = cf;
    CFTypeRef cf = 0;
    CFStringRef v5 = v20;
  }
  CFStringRef v21 = sub_22685B6F8(v5, v13, v14, v15, v16, v17, v18, v19);
  if (!v21) {
    return 4294960569;
  }
  uint64_t v26 = (uint64_t)v21;
  sub_2268DCB00(*(void *)(a1 + 128), 22, 0, (uint64_t)v21, v22, v23, v24, v25);
  if (!v10)
  {
    uint64_t v4 = sub_2268A6454(a2, 1937331060);
    if (v4) {
      return v4;
    }
    if (!sub_2268A5904(a2, 2002865740, &v57) || v57) {
      goto LABEL_93;
    }
  }
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyConnections(BSConfigurationContextRef, BSRef, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)"\n\t****Is WAN plugged in?\n", v28, v29, v30, v31, v54);
  }
  uint64_t v32 = sub_2268B7850(a1, a2, 512, v27, v28, v29, v30, v31);
  if (v32)
  {
    uint64_t v4 = v32;
    if (v32 != -6757) {
      return v4;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
    {
      uint64_t v33 = "User skipped WAN connection\n";
LABEL_46:
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyConnections(BSConfigurationContextRef, BSRef, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)v33, v28, v29, v30, v31, v54);
    }
  }
  else
  {
LABEL_93:
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyConnections(BSConfigurationContextRef, BSRef, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)"\n\t****Is DHCP or PPPoE?\n", v28, v29, v30, v31, v54);
    }
    uint64_t v35 = sub_2268B7850(a1, a2, 3072, v27, v28, v29, v30, v31);
    if (!v35)
    {
      uint64_t v4 = sub_2268A5604(a2, 1937327724, &v58);
      if (v4) {
        return v4;
      }
      if ((v58 & 0x400) != 0)
      {
        if (dword_268147638 <= 800)
        {
          if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyConnections(BSConfigurationContextRef, BSRef, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)"Got PPPoE offer\n", v48, v49, v50, v51, v54);
          }
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyConnections(BSConfigurationContextRef, BSRef, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)"\n\t****Setting up PPPoE\n", v48, v49, v50, v51, v54);
          }
        }
        uint64_t v53 = sub_2268B7B54(a1, a2, v26, v47, v48, v49, v50, v51);
        if (!v53) {
          goto LABEL_90;
        }
        uint64_t v4 = v53;
        if (v53 == -6757)
        {
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyConnections(BSConfigurationContextRef, BSRef, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)"User skipped PPPoE connection\n", v42, v43, v44, v45, v54);
          }
          goto LABEL_90;
        }
        return v4;
      }
      if (v12) {
        goto LABEL_47;
      }
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyConnections(BSConfigurationContextRef, BSRef, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)"\n\t****Is Internet connected?\n", v48, v49, v50, v51, v54);
      }
      uint64_t v52 = sub_2268B7D60(a1, a2, v46, v47, v48, v49, v50, v51);
      if (!v52) {
        goto LABEL_47;
      }
      uint64_t v4 = v52;
      if (v52 != -6757) {
        return v4;
      }
      if (dword_268147638 > 800 || dword_268147638 == -1 && !sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
        goto LABEL_47;
      }
      uint64_t v33 = "User skipped Internet connection\n";
      goto LABEL_46;
    }
    uint64_t v4 = v35;
    if (v35 != -6757) {
      return v4;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
    {
      uint64_t v33 = "User skipped DHCP/PPPoE connection\n";
      goto LABEL_46;
    }
  }
LABEL_47:
  uint64_t v4 = sub_2268A6454(a2, 1937331060);
  if (v4) {
    return v4;
  }
  CFTypeRef cf = 0;
  uint64_t v4 = sub_2268A55B8(a2, 1937331060, (CFMutableDictionaryRef *)&cf);
  if (v4) {
    return v4;
  }
  if (!cf) {
    return 4294960568;
  }
  sub_22686088C((const __CFString *)cf, (uint64_t)&v55, (UInt8 *)"%ks", v36, v37, v38, v39, v40, (uint64_t)"problems");
  uint64_t v4 = v41;
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (v4) {
    return v4;
  }
  if (!v55) {
    return 4294960568;
  }
  if (sub_2268A1B78(v55, 1148543566) == -1 && sub_2268A1B78(v55, 2002866794) == -1) {
    goto LABEL_61;
  }
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyConnections(BSConfigurationContextRef, BSRef, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)"Setting bridge mode. problems: %@\n", v42, v43, v44, v45, (uint64_t)v55);
  }
  uint64_t v4 = sub_2268A5490(a2, 1651724877, 3);
  if (!v4)
  {
LABEL_61:
    CFArrayRef v55 = 0;
LABEL_90:
    sub_2268DCB00(*(void *)(a1 + 128), 23, 0, v26, v42, v43, v44, v45);
    return 0;
  }
  return v4;
}

uint64_t sub_2268B5958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _PluginAudioCabling(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v63);
  }
  uint64_t v65 = 0;
  uint64_t v67 = 0;
  if (!*(void *)(a1 + 8)) {
    return 4294960591;
  }
  unsigned int v66 = 0;
  CFTypeRef cf = 0;
  if (!*(void *)a1)
  {
    uint64_t v16 = 4294960591;
    goto LABEL_31;
  }
  CFStringRef v9 = sub_22685B6F8(*(const __CFString **)a1, a2, a3, a4, a5, a6, a7, a8);
  if (!v9)
  {
    uint64_t v16 = 4294960569;
    goto LABEL_31;
  }
  uint64_t v14 = (uint64_t)v9;
  sub_2268DCB00(*(void *)(a1 + 128), 24, 0, (uint64_t)v9, v10, v11, v12, v13);
  uint64_t v16 = sub_2268E065C(*(void *)(a1 + 128), *(const __CFString **)a1, 0, 0, 0, 0, &cf, v15);
  if (v16) {
    goto LABEL_31;
  }
  if (cf)
  {
    CFRelease(*(CFTypeRef *)a1);
    *(void *)a1 = cf;
    CFTypeRef cf = 0;
  }
  uint64_t v16 = sub_2268DB87C(*(void *)(a1 + 128), &v67);
  if (v16) {
    goto LABEL_31;
  }
  if (!v67) {
    goto LABEL_36;
  }
  uint64_t v16 = sub_2268A6454(*(void *)(a1 + 8), 1937327724);
  if (v16) {
    goto LABEL_31;
  }
  uint64_t v16 = sub_2268A5604(*(void *)(a1 + 8), 1937327724, &v66);
  if (v16) {
    goto LABEL_31;
  }
  uint64_t v21 = v66;
  if ((v66 & 0x80) != 0)
  {
    if (dword_268147638 <= 800)
    {
      if (dword_268147638 != -1)
      {
LABEL_41:
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _PluginAudioCabling(BSConfigurationContextRef)", 800, (uint64_t)"First check was successful!... systemFlags: 0x%X  Skipping user interaction.\n", v17, v18, v19, v20, v21);
        goto LABEL_42;
      }
      if (sub_226865630((uint64_t)&dword_268147638, 0x320u))
      {
        uint64_t v21 = v66;
        goto LABEL_41;
      }
    }
LABEL_42:
    uint64_t v16 = 4294960539;
    goto LABEL_31;
  }
  uint64_t v16 = sub_2268E0A60(v67, *(void *)(a1 + 8), 128, (uint64_t *)&v65, v17, v18, v19, v20);
  if (v16) {
    goto LABEL_31;
  }
  if (!v65)
  {
    uint64_t v16 = 4294960568;
    goto LABEL_33;
  }
  uint64_t v16 = sub_2268A6454(*(void *)(a1 + 8), 1937327724);
  if (v16 || (uint64_t v16 = sub_2268A5604(*(void *)(a1 + 8), 1937327724, &v66), v16))
  {
LABEL_31:
    if (v65)
    {
      sub_2268A2AA8(*(void *)(a1 + 8));
      sub_2268E097C(v65, v48, v49, v50, v51, v52, v53, v54);
    }
    goto LABEL_33;
  }
  uint64_t v27 = v66;
  if ((v66 & 0x80) == 0)
  {
    uint64_t v16 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%kO=%O}", v22, v23, v24, v25, v26, @"kBSConfigurationSwapCabling_TargetBase");
    if (v16) {
      goto LABEL_31;
    }
    if (cf)
    {
      uint64_t v16 = sub_2268B7FC0((uint64_t)v67, 6, 4294960543, (uint64_t)cf, 0, v28, v29, v30);
      if (cf)
      {
        CFRelease(cf);
        CFTypeRef cf = 0;
      }
      sub_2268A2AA8(*(void *)(a1 + 8));
      sub_2268E097C(v65, v31, v32, v33, v34, v35, v36, v37);
      uint64_t v65 = 0;
      if (v16) {
        goto LABEL_33;
      }
      uint64_t v16 = sub_2268B819C((uint64_t)v67, 6, v38, v39, v40, v41, v42, v43);
      if (!v16) {
        sub_2268DCB00(*(void *)(a1 + 128), 25, 0, v14, v44, v45, v46, v47);
      }
      goto LABEL_31;
    }
LABEL_36:
    uint64_t v16 = 4294960568;
    goto LABEL_31;
  }
  if (dword_268147638 > 800) {
    goto LABEL_49;
  }
  if (dword_268147638 != -1) {
    goto LABEL_48;
  }
  if (sub_226865630((uint64_t)&dword_268147638, 0x320u))
  {
    uint64_t v27 = v66;
LABEL_48:
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _PluginAudioCabling(BSConfigurationContextRef)", 800, (uint64_t)"Second check was successful!... systemFlags: 0x%X Skipping user interaction.\n", v23, v24, v25, v26, v27);
  }
LABEL_49:
  sub_2268A2AA8(*(void *)(a1 + 8));
  sub_2268E097C(v65, v56, v57, v58, v59, v60, v61, v62);
  uint64_t v65 = 0;
  uint64_t v16 = 4294960539;
LABEL_33:
  if (v67) {
    sub_2268DB9AC(v67);
  }
  return v16;
}

uint64_t sub_2268B5CC8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _ReadSettingsForSourceDevice(BSConfigurationContextRef, Boolean, Boolean)", 800, (uint64_t)"\n", a5, a6, a7, a8, (uint64_t)cf);
  }
  if (*(_DWORD *)(a1 + 144) != 1634561902 || !*(void *)(a1 + 16)) {
    return 4294960591;
  }
  uint64_t v15 = 0;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10)
  {
    uint64_t v12 = sub_2268A243C((uint64_t)&v15);
    if (v12) {
      return v12;
    }
    uint64_t v10 = v15;
    if (!v15) {
      return 4294960568;
    }
    *(void *)(a1 + 24) = v15;
    uint64_t v15 = 0;
  }
  CFArrayRef v11 = 0;
  CFTypeRef cf = 0;
  if (a2) {
    goto LABEL_9;
  }
  uint64_t v12 = sub_2268A0AD0((unsigned int *)"tSaMAMarAMalAMawiFiWANarSDarPIalgBhdnEhdVStnnEcaLCAtRLysWPysdlCi", (__CFArray **)&cf);
  if (v12) {
    return v12;
  }
  CFArrayRef v11 = (const __CFArray *)cf;
  if (!cf) {
    return 4294960568;
  }
  uint64_t v10 = *(void *)(a1 + 24);
LABEL_9:
  uint64_t v12 = sub_2268AFE20(a1, v11, *(const __CFString **)(a1 + 16), v10, 1, 0, 1, a8);
  if (cf) {
    CFRelease(cf);
  }
  return v12;
}

uint64_t sub_2268B5E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _SwapConnections(BSConfigurationContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v63);
  }
  uint64_t v65 = 0;
  uint64_t v67 = 0;
  if (*(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  unsigned int v66 = 0;
  CFTypeRef cf = 0;
  if (!*(void *)(a1 + 8) || !*(void *)a1 || !*(void *)(a1 + 16))
  {
    uint64_t v16 = 4294960591;
    goto LABEL_34;
  }
  CFStringRef v9 = sub_22685B6F8(*(const __CFString **)a1, a2, a3, a4, a5, a6, a7, a8);
  if (!v9)
  {
    uint64_t v16 = 4294960569;
    goto LABEL_34;
  }
  uint64_t v14 = (uint64_t)v9;
  sub_2268DCB00(*(void *)(a1 + 128), 22, 0, (uint64_t)v9, v10, v11, v12, v13);
  uint64_t v16 = sub_2268E065C(*(void *)(a1 + 128), *(const __CFString **)a1, 0, 0, 0, 0, &cf, v15);
  if (v16) {
    goto LABEL_34;
  }
  if (cf)
  {
    uint64_t v16 = sub_2268AE1F8(a1, (const __CFString *)cf);
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    if (v16) {
      goto LABEL_34;
    }
  }
  uint64_t v16 = sub_2268DB87C(*(void *)(a1 + 128), &v67);
  if (v16) {
    goto LABEL_34;
  }
  if (!v67) {
    goto LABEL_40;
  }
  uint64_t v16 = sub_2268A6454(*(void *)(a1 + 8), 1937327724);
  if (v16) {
    goto LABEL_34;
  }
  uint64_t v16 = sub_2268A5604(*(void *)(a1 + 8), 1937327724, &v66);
  if (v16) {
    goto LABEL_34;
  }
  uint64_t v21 = v66;
  if ((v66 & 0x200) != 0)
  {
    if (dword_268147638 <= 800)
    {
      if (dword_268147638 != -1)
      {
LABEL_45:
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _SwapConnections(BSConfigurationContextRef)", 800, (uint64_t)"First check was successful!... systemFlags: 0x%X  Skipping user interaction.\n", v17, v18, v19, v20, v21);
        goto LABEL_46;
      }
      if (sub_226865630((uint64_t)&dword_268147638, 0x320u))
      {
        uint64_t v21 = v66;
        goto LABEL_45;
      }
    }
LABEL_46:
    uint64_t v16 = 4294960539;
    goto LABEL_34;
  }
  uint64_t v16 = sub_2268E0A60(v67, *(void *)(a1 + 8), 512, (uint64_t *)&v65, v17, v18, v19, v20);
  if (v16) {
    goto LABEL_34;
  }
  if (!v65)
  {
    uint64_t v16 = 4294960568;
    goto LABEL_36;
  }
  uint64_t v16 = sub_2268A6454(*(void *)(a1 + 8), 1937327724);
  if (v16 || (uint64_t v16 = sub_2268A5604(*(void *)(a1 + 8), 1937327724, &v66), v16))
  {
LABEL_34:
    if (v65)
    {
      sub_2268A2AA8(*(void *)(a1 + 8));
      sub_2268E097C(v65, v48, v49, v50, v51, v52, v53, v54);
    }
    goto LABEL_36;
  }
  uint64_t v27 = v66;
  if ((v66 & 0x200) == 0)
  {
    uint64_t v16 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &cf, (uint64_t)"{%kO=%O%kO=%O}", v22, v23, v24, v25, v26, @"kBSConfigurationSwapCabling_TargetBase");
    if (v16) {
      goto LABEL_34;
    }
    if (cf)
    {
      uint64_t v16 = sub_2268B7FC0((uint64_t)v67, 5, 4294960543, (uint64_t)cf, 0, v28, v29, v30);
      if (cf)
      {
        CFRelease(cf);
        CFTypeRef cf = 0;
      }
      sub_2268A2AA8(*(void *)(a1 + 8));
      sub_2268E097C(v65, v31, v32, v33, v34, v35, v36, v37);
      uint64_t v65 = 0;
      if (v16) {
        goto LABEL_36;
      }
      uint64_t v16 = sub_2268B819C((uint64_t)v67, 5, v38, v39, v40, v41, v42, v43);
      if (!v16) {
        sub_2268DCB00(*(void *)(a1 + 128), 23, 0, v14, v44, v45, v46, v47);
      }
      goto LABEL_34;
    }
LABEL_40:
    uint64_t v16 = 4294960568;
    goto LABEL_34;
  }
  if (dword_268147638 > 800) {
    goto LABEL_53;
  }
  if (dword_268147638 != -1) {
    goto LABEL_52;
  }
  if (sub_226865630((uint64_t)&dword_268147638, 0x320u))
  {
    uint64_t v27 = v66;
LABEL_52:
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _SwapConnections(BSConfigurationContextRef)", 800, (uint64_t)"Second check was successful!... systemFlags: 0x%X Skipping user interaction.\n", v23, v24, v25, v26, v27);
  }
LABEL_53:
  sub_2268A2AA8(*(void *)(a1 + 8));
  sub_2268E097C(v65, v56, v57, v58, v59, v60, v61, v62);
  uint64_t v65 = 0;
  uint64_t v16 = 4294960539;
LABEL_36:
  if (v67) {
    sub_2268DB9AC(v67);
  }
  return v16;
}

uint64_t sub_2268B61AC(uint64_t a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v118 = *MEMORY[0x263EF8340];
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _BSConfiguration_UpdateSettingsWithSourceSettings(BSConfigurationContextRef, CFDictionaryRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v112);
  }
  uint64_t v10 = 4294960591;
  if (*(_DWORD *)(a1 + 144) == 1634561902 && a2 && *(void *)(a1 + 8) && *(void *)(a1 + 16) && *(_DWORD *)(a1 + 72))
  {
    CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (Mutable)
    {
      uint64_t v18 = Mutable;
      CFTypeRef cf = 0;
      int v19 = *(_DWORD *)(a1 + 72);
      switch(v19)
      {
        case 6:
        case 8:
          if (v19 == 6) {
            int v45 = 20;
          }
          else {
            int v45 = 0;
          }
          uint64_t v10 = sub_2268AF1C0(a1, v19, a2, (const __CFString **)&cf, v14, v15, v16, v17);
          if (!v10)
          {
            if (!cf) {
              goto LABEL_76;
            }
            uint64_t v10 = sub_226860774(v11, v18, (uint64_t)"%kC=%O", v46, v47, v48, v49, v50, 1466517097);
            if (cf)
            {
              CFRelease(cf);
              CFTypeRef cf = 0;
            }
            if (!v10)
            {
              sub_22686088C(a2, (uint64_t)&cf, (UInt8 *)"%kC", v51, v52, v53, v54, v55, 1937330263);
              uint64_t v10 = v61;
              if (!v61)
              {
                if (!cf) {
                  goto LABEL_76;
                }
                uint64_t v10 = sub_226860774(v11, v18, (uint64_t)"%kC=%O", v56, v57, v58, v59, v60, 1937330263);
                if (!v10)
                {
                  sub_22686088C(a2, (uint64_t)&cf, (UInt8 *)"%kC", v62, v63, v64, v65, v66, 1950434124);
                  if (v67 == -6727) {
                    goto LABEL_46;
                  }
                  uint64_t v10 = v67;
                  if (!v67)
                  {
                    if (!cf) {
                      goto LABEL_76;
                    }
                    uint64_t v10 = sub_226860774(v11, v18, (uint64_t)"%kC=%O", v68, v69, v70, v71, v72, 1950434124);
                    if (!v10)
                    {
LABEL_46:
                      sub_22686088C(a2, (uint64_t)&cf, (UInt8 *)"%kC", v68, v69, v70, v71, v72, 1853117270);
                      if (v73 == -6727) {
                        goto LABEL_50;
                      }
                      uint64_t v10 = v73;
                      if (!v73)
                      {
                        if (!cf) {
                          goto LABEL_76;
                        }
                        uint64_t v10 = sub_226860774(v11, v18, (uint64_t)"%kC=%O", v74, v75, v76, v77, v78, 1853117270);
                        if (!v10)
                        {
LABEL_50:
                          sub_22686088C(a2, (uint64_t)&cf, (UInt8 *)"%kC", v74, v75, v76, v77, v78, 1766026340);
                          if (v84
                            || !cf
                            || (uint64_t v10 = sub_226860774(v11, v18, (uint64_t)"%kC=%O", v79, v80, v81, v82, v83, 1766026340),
                                !v10))
                          {
                            if (!sub_2268A58D0(*(void *)(a1 + 8), 1768961614)
                              || (uint64_t v10 = sub_226860774(v11, v18, (uint64_t)"%kC=%b", v85, v86, v87, v88, v89, 912356724),
                                  !v10)
                              && (uint64_t v10 = sub_226860774(v11, v18, (uint64_t)"%kC=%i", v90, v91, v92, v93, v94, 912483943),
                                  !v10))
                            {
                              uint64_t v10 = sub_2268A2960(*(void *)(a1 + 8), a2, v18, 0);
                              if (!v10)
                              {
                                sub_2268A80C0(v117, 0x15uLL);
                                uint64_t v10 = sub_2268A5294(*(void *)(a1 + 8), v117, v45);
                                if (!v10)
                                {
                                  uint64_t v10 = sub_2268A5490(*(void *)(a1 + 8), 1651724877, 3);
                                  if (!v10)
                                  {
                                    uint64_t v10 = sub_2268A53A4(*(void *)(a1 + 8), 1651721281, 1);
                                    if (!v10)
                                    {
                                      uint64_t v44 = sub_2268A5490(*(void *)(a1 + 8), 2002862934, 768);
                                      goto LABEL_75;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          goto LABEL_77;
        case 7:
          uint64_t v10 = sub_2268AF1C0(a1, 7, a2, (const __CFString **)&cf, v14, v15, v16, v17);
          if (!v10)
          {
            if (!cf) {
              goto LABEL_76;
            }
            uint64_t v10 = sub_226860774(v11, v18, (uint64_t)"%kC=%O", v95, v96, v97, v98, v99, 1466517097);
            if (cf)
            {
              CFRelease(cf);
              CFTypeRef cf = 0;
            }
            if (!v10)
            {
              sub_22686088C(a2, (uint64_t)&cf, (UInt8 *)"%kC", v100, v101, v102, v103, v104, 1937330263);
              uint64_t v10 = v110;
              if (!v110)
              {
                if (!cf) {
                  goto LABEL_76;
                }
                uint64_t v10 = sub_226860774(v11, v18, (uint64_t)"%kC=%O", v105, v106, v107, v108, v109, 1937330263);
                if (!v10)
                {
                  uint64_t v10 = sub_2268A2960(*(void *)(a1 + 8), a2, v18, 0);
                  if (!v10)
                  {
                    uint64_t v10 = sub_2268A5490(*(void *)(a1 + 8), 2002862934, 768);
                    if (!v10)
                    {
                      sub_2268A80C0(v117, 0x15uLL);
                      uint64_t v10 = sub_2268A5294(*(void *)(a1 + 8), v117, 1);
                      if (!v10)
                      {
                        uint64_t v10 = sub_2268A5490(*(void *)(a1 + 8), 1651724877, 3);
                        if (!v10)
                        {
                          if (!sub_2268A58D0(*(void *)(a1 + 8), 1884509249)) {
                            goto LABEL_79;
                          }
                          sub_2268A80C0(v117, 0x15uLL);
                          uint64_t v44 = sub_2268A520C(*(void *)(a1 + 8), v117, (const __CFString *)*MEMORY[0x263EFFB40]);
                          goto LABEL_75;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          goto LABEL_77;
        case 9:
        case 10:
        case 11:
        case 12:
          CFStringRef v114 = 0;
          uint64_t v10 = sub_226860774(v11, Mutable, (uint64_t)"%##O", v13, v14, v15, v16, v17, (uint64_t)a2);
          if (v10) {
            goto LABEL_77;
          }
          uint64_t v10 = sub_2268AF1C0(a1, *(_DWORD *)(a1 + 72), (const __CFString *)v18, (const __CFString **)&cf, v20, v21, v22, v23);
          if (v10) {
            goto LABEL_77;
          }
          if (!cf) {
            goto LABEL_76;
          }
          uint64_t v10 = sub_226860774(v11, v18, (uint64_t)"%kC=%O", v24, v25, v26, v27, v28, 1466517097);
          if (cf)
          {
            CFRelease(cf);
            CFTypeRef cf = 0;
          }
          if (v10) {
            goto LABEL_77;
          }
          sub_22683C448(1937329773, cStr);
          CFStringRef v29 = CFStringCreateWithCString(v11, cStr, 0x8000100u);
          if (!v29) {
            goto LABEL_76;
          }
          CFStringRef v30 = v29;
          CFDictionaryRemoveValue(v18, v29);
          CFRelease(v30);
          sub_22683C448(1937327182, cStr);
          CFStringRef v31 = CFStringCreateWithCString(v11, cStr, 0x8000100u);
          if (!v31) {
            goto LABEL_76;
          }
          CFStringRef v32 = v31;
          CFDictionaryRemoveValue(v18, v31);
          CFRelease(v32);
          sub_22686088C((const __CFString *)v18, (uint64_t)&v114, (UInt8 *)"%kC", v33, v34, v35, v36, v37, 1937330263);
          uint64_t v10 = v43;
          if (!v43)
          {
            if (v114)
            {
              CFStringRef theString = 0;
              sub_22686088C((const __CFString *)v18, (uint64_t)&theString, (UInt8 *)"%kC", v38, v39, v40, v41, v42, 1229213293);
              uint64_t v10 = sub_2268A2960(*(void *)(a1 + 8), a2, v18, 1);
              if (!v10)
              {
                uint64_t v10 = sub_2268A5444(*(void *)(a1 + 8), 1937330263, v114);
                if (!v10)
                {
                  if (*(_DWORD *)(a1 + 72) != 11
                    || (sub_2268A80C0(v117, 0x15uLL),
                        uint64_t v10 = sub_2268A520C(*(void *)(a1 + 8), v117, (const __CFString *)*MEMORY[0x263EFFB40]),
                        !v10))
                  {
                    uint64_t v10 = 0;
                    if (sub_2268A58D0(*(void *)(a1 + 8), 1231975492))
                    {
                      if (theString)
                      {
                        if (CFStringGetLength(theString))
                        {
                          uint64_t v44 = sub_2268A5444(*(void *)(a1 + 8), 1229213293, theString);
LABEL_75:
                          uint64_t v10 = v44;
                        }
                        else
                        {
LABEL_79:
                          uint64_t v10 = 0;
                        }
                      }
                    }
                  }
                }
              }
            }
            else
            {
LABEL_76:
              uint64_t v10 = 4294960568;
            }
          }
LABEL_77:
          CFRelease(v18);
          return v10;
        default:
          goto LABEL_77;
      }
    }
    return 4294960568;
  }
  return v10;
}

uint64_t sub_2268B697C(uint64_t a1, CFDictionaryRef theDict, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v62 = *MEMORY[0x263EF8340];
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _WriteSettingsToSourceDevice(BSConfigurationContextRef, CFDictionaryRef, Boolean *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v54);
  }
  uint64_t v56 = 0;
  if (*(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  CFTypeRef cf = 0;
  uint64_t v60 = 0;
  CFStringRef v57 = 0;
  CFStringRef theString = 0;
  uint64_t v11 = 4294960591;
  BOOL v55 = 0;
  if (theDict)
  {
    if (*(void *)(a1 + 16))
    {
      CFIndex Count = CFDictionaryGetCount(theDict);
      if (a3)
      {
        if (Count)
        {
          CFStringRef v20 = sub_22685B6F8(*(const __CFString **)(a1 + 16), v13, v14, v15, v16, v17, v18, v19);
          if (v20)
          {
            uint64_t v22 = (uint64_t)v20;
            uint64_t v11 = sub_2268E065C(*(void *)(a1 + 128), *(const __CFString **)(a1 + 16), 0, 0, (const void *)1, 0, &v60, v21);
            if (!v11)
            {
              if (v60)
              {
                CFRelease(*(CFTypeRef *)(a1 + 16));
                *(void *)(a1 + 16) = v60;
                uint64_t v60 = 0;
              }
              uint64_t v11 = sub_2268B5CC8(a1, 1, v23, v24, v25, v26, v27, v28);
              if (!v11)
              {
                if (!*(void *)(a1 + 24))
                {
                  uint64_t v11 = 4294960569;
                  goto LABEL_15;
                }
                uint64_t v11 = sub_2268623AC(theDict, &v56);
                if (v11) {
                  goto LABEL_15;
                }
                if (!v56) {
                  return 4294960568;
                }
                while (sub_22686244C((uint64_t *)v56, &theString, &v57))
                {
                  if (CFStringGetCString(theString, buffer, 256, 0x8000100u))
                  {
                    uint64_t v34 = sub_2268A520C(*(void *)(a1 + 24), buffer, v57);
                    if (v34)
                    {
                      uint64_t v11 = v34;
                      goto LABEL_15;
                    }
                  }
                }
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _WriteSettingsToSourceDevice(BSConfigurationContextRef, CFDictionaryRef, Boolean *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v30, v31, v32, v33, (uint64_t)"Write source settings");
                }
                sub_2268DCB00(*(void *)(a1 + 128), 20, 0, v22, v30, v31, v32, v33);
                uint64_t v11 = sub_2268A3A40(*(void *)(a1 + 24), &v55, &cf);
                if (v55)
                {
                  if (dword_268147638 <= 800
                    && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                  {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _WriteSettingsToSourceDevice(BSConfigurationContextRef, CFDictionaryRef, Boolean *)", 800, (uint64_t)"Had minimal restart with interruptions: %@\n", v35, v36, v37, v38, (uint64_t)cf);
                  }
                  if (cf)
                  {
                    CFRelease(cf);
                    CFTypeRef cf = 0;
                  }
                }
                if (v11) {
                  goto LABEL_15;
                }
                sub_2268DCB00(*(void *)(a1 + 128), 21, 0, v22, v35, v36, v37, v38);
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _WriteSettingsToSourceDevice(BSConfigurationContextRef, CFDictionaryRef, Boolean *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v42, v43, v44, v45, (uint64_t)"Write source settings");
                }
                if ((*(_DWORD *)(a1 + 72) & 0xFFFFFFFE) == 0xA)
                {
                  uint64_t v11 = 0;
                  *a3 = 1;
                  goto LABEL_15;
                }
                *a3 = 0;
                if (!sub_22685B950(*(const __CFString **)(a1 + 16), v39, v40, v41, v42, v43, v44, v45))
                {
                  if (dword_268147638 <= 800)
                  {
                    if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _WriteSettingsToSourceDevice(BSConfigurationContextRef, CFDictionaryRef, Boolean *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v46, v47, v48, v49, (uint64_t)"No bonjour seed pause");
                    }
                    if (dword_268147638 <= 800
                      && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                    {
                      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _WriteSettingsToSourceDevice(BSConfigurationContextRef, CFDictionaryRef, Boolean *)", 800, (uint64_t)"pausing for: %d secs\n", v46, v47, v48, v49, 8);
                    }
                  }
                  uint64_t v11 = sub_2268DDC20(*(void *)(a1 + 128), 8);
                  if (v11) {
                    goto LABEL_15;
                  }
                  if (dword_268147638 > 800) {
                    goto LABEL_51;
                  }
                  if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _WriteSettingsToSourceDevice(BSConfigurationContextRef, CFDictionaryRef, Boolean *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v46, v47, v48, v49, (uint64_t)"No bonjour seed pause");
                  }
                }
                if (dword_268147638 <= 800
                  && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _WriteSettingsToSourceDevice(BSConfigurationContextRef, CFDictionaryRef, Boolean *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v46, v47, v48, v49, (uint64_t)"Waiting for source base");
                }
LABEL_51:
                uint64_t v11 = sub_2268E065C(*(void *)(a1 + 128), *(const __CFString **)(a1 + 16), 1, 1, (const void *)1, 0, &v60, v49);
                if (!v11)
                {
                  if (v60)
                  {
                    CFRelease(*(CFTypeRef *)(a1 + 16));
                    *(void *)(a1 + 16) = v60;
                    uint64_t v60 = 0;
                  }
                  if (dword_268147638 <= 800
                    && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                  {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _WriteSettingsToSourceDevice(BSConfigurationContextRef, CFDictionaryRef, Boolean *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v50, v51, v52, v53, (uint64_t)"Waiting for source base");
                  }
                  uint64_t v11 = 0;
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_15:
  if (v56) {
    sub_226862440(v56);
  }
  return v11;
}

uint64_t sub_2268B6F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v34[3] = *(CFTypeRef *)MEMORY[0x263EF8340];
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _ShowAdditionalConfigurationUI(BSConfigurationContextRef)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"Show Additional Configuration UI As Needed");
  }
  if (!*(unsigned char *)(a1 + 76) && *(_DWORD *)(a1 + 72) == 1 && sub_2268A58D0(*(void *)(a1 + 8), 1198748750))
  {
    char v28 = 0;
    uint64_t v13 = sub_2268A56A4(*(void *)(a1 + 8), 1918979649, &v28);
    if (v13) {
      goto LABEL_84;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
    {
      if (v28) {
        uint64_t v14 = "On";
      }
      else {
        uint64_t v14 = "Off";
      }
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _ShowAdditionalConfigurationUI(BSConfigurationContextRef)", 800, (uint64_t)"NAT: %s \n", v9, v10, v11, v12, (uint64_t)v14);
    }
    if (v28)
    {
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _ShowAdditionalConfigurationUI(BSConfigurationContextRef)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v9, v10, v11, v12, (uint64_t)"Prompt for Guest Network config");
      }
      CFStringRef v33 = 0;
      CFStringRef v29 = 0;
      CFTypeRef v30 = 0;
      CFTypeRef v31 = 0;
      CFTypeRef cf = 0;
      if (*(_DWORD *)(a1 + 144) == 1634561902 && *(void *)(a1 + 8) && *(void *)a1)
      {
        uint64_t v13 = sub_2268DB87C(*(void *)(a1 + 128), &v29);
        if (!v13)
        {
          if (!v29)
          {
            uint64_t v13 = 4294960568;
LABEL_40:
            if (cf)
            {
              CFRelease(cf);
              CFTypeRef cf = 0;
            }
            if (v31)
            {
              CFRelease(v31);
              CFTypeRef v31 = 0;
            }
            if (v30) {
              CFRelease(v30);
            }
            if (v13) {
              goto LABEL_84;
            }
            if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _ShowAdditionalConfigurationUI(BSConfigurationContextRef)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v9, v10, v11, v12, (uint64_t)"Prompt for Guest Network config");
            }
            goto LABEL_51;
          }
          uint64_t v13 = sub_2268A55B8(*(void *)(a1 + 8), 1937329773, (CFMutableDictionaryRef *)&v31);
          if (!v13)
          {
            if (v31)
            {
              sub_2268A80C0(v34, 0x15uLL);
              uint64_t v13 = sub_2268A54A8(*(void *)(a1 + 8), (char *)v34, (CFMutableDictionaryRef *)&v30);
              if (v13) {
                goto LABEL_38;
              }
              if (v30)
              {
                uint64_t v13 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], (CFTypeRef *)&v33, (uint64_t)"{%ks=%O%ks=%O%ks=%O}", v15, v9, v10, v11, v12, (uint64_t)"kBSConfigurationUIConfig_TargetBaseKey");
                if (v13) {
                  goto LABEL_38;
                }
                if (v33)
                {
                  sub_2268B8500((uint64_t)v29, 8, (uint64_t)v33, &cf, v9, v10, v11, v12);
                  uint64_t v13 = v18;
                  if (v33)
                  {
                    CFRelease(v33);
                    CFStringRef v33 = 0;
                  }
                  if (!v13)
                  {
                    if (cf)
                    {
                      sub_2268B025C(a1, (const __CFString *)cf, v16, v17, v9, v10, v11, v12);
                      uint64_t v13 = v19;
                    }
                    else
                    {
                      uint64_t v13 = 0;
                    }
                  }
                  goto LABEL_38;
                }
              }
            }
            uint64_t v13 = 4294960568;
          }
        }
      }
      else
      {
        uint64_t v13 = 4294960591;
      }
LABEL_38:
      if (v29) {
        sub_2268DB9AC(v29);
      }
      goto LABEL_40;
    }
  }
LABEL_51:
  if (!sub_2268A58D0(*(void *)(a1 + 8), 1097749364))
  {
LABEL_83:
    uint64_t v13 = 0;
    goto LABEL_84;
  }
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _ShowAdditionalConfigurationUI(BSConfigurationContextRef)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ Config phase: \"%s\" ++++++++++\n\n", v9, v10, v11, v12, (uint64_t)"Prompt Send Diags & Usage");
  }
  CFTypeRef cf = 0;
  CFStringRef v33 = 0;
  if (*(_DWORD *)(a1 + 144) == 1634561902)
  {
    v34[0] = 0;
    if (*(void *)(a1 + 8) && *(void *)a1)
    {
      uint64_t v13 = sub_2268DB87C(*(void *)(a1 + 128), &cf);
      if (v13) {
        goto LABEL_74;
      }
      if (!cf)
      {
        uint64_t v13 = 4294960568;
LABEL_76:
        if (v33) {
          CFRelease(v33);
        }
        if (v13) {
          goto LABEL_84;
        }
        if (dword_268147638 > 800) {
          return 0;
        }
        if (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _ShowAdditionalConfigurationUI(BSConfigurationContextRef)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v9, v10, v11, v12, (uint64_t)"Prompt Send Diags & Usage");
        }
        goto LABEL_83;
      }
      if (sub_22685B6F8(*(const __CFString **)a1, v20, v21, v22, v9, v10, v11, v12))
      {
        uint64_t v13 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], v34, (uint64_t)"{%ks=%O}", v23, v9, v10, v11, v12, (uint64_t)"kBSConfigurationConnectionStatus_DeviceName");
        if (v13) {
          goto LABEL_74;
        }
        if (v34[0])
        {
          sub_2268B8500((uint64_t)cf, 7, (uint64_t)v34[0], (CFTypeRef *)&v33, v9, v10, v11, v12);
          uint64_t v13 = v25;
          if (v34[0])
          {
            CFRelease(v34[0]);
            v34[0] = 0;
          }
          if (v13) {
            goto LABEL_74;
          }
          if (v33)
          {
            CFTypeRef v31 = 0;
            sub_22686088C(v33, (uint64_t)&v31, (UInt8 *)"%kC", v24, v9, v10, v11, v12, 1937011781);
            if (v26)
            {
LABEL_71:
              uint64_t v13 = v26;
              goto LABEL_74;
            }
            if (v31)
            {
              uint64_t v26 = sub_2268A5444(*(void *)(a1 + 8), 1937011781, (const __CFString *)v31);
              goto LABEL_71;
            }
          }
        }
        uint64_t v13 = 4294960568;
      }
      else
      {
        uint64_t v13 = 4294960569;
      }
    }
    else
    {
      uint64_t v13 = 4294960591;
    }
LABEL_74:
    if (cf) {
      sub_2268DB9AC((char *)cf);
    }
    goto LABEL_76;
  }
  uint64_t v13 = 4294960591;
LABEL_84:
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _ShowAdditionalConfigurationUI(BSConfigurationContextRef)", 800, (uint64_t)"\n\n\t\t          \t\t---------- Config phase: \"%s\" ----------\n\n", v9, v10, v11, v12, (uint64_t)"Show Additional Configuration UI As Needed");
  }
  return v13;
}

uint64_t sub_2268B7534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFStringRef v9 = (const __CFString *)a2;
  uint64_t v59 = *MEMORY[0x263EF8340];
  uint64_t v57 = a3;
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _RestoreDefaultsAndOptionallyWaitForDevice(BSConfigurationContextRef, CFDictionaryRef, BSRef, Boolean, CFDictionaryRef *)", 800, (uint64_t)" \n", a5, a6, a7, a8, (uint64_t)v52);
  }
  CFTypeRef v54 = 0;
  CFTypeRef cf = 0;
  CFTypeRef v52 = 0;
  CFTypeRef v53 = 0;
  uint64_t v11 = 4294960591;
  CFTypeRef v56 = 0;
  if (v9)
  {
    if (*(_DWORD *)(a1 + 144) == 1634561902)
    {
      CFStringRef v12 = sub_22685B6F8(v9, a2, a3, a4, a5, a6, a7, a8);
      if (v12)
      {
        uint64_t v14 = (uint64_t)v12;
        uint64_t v11 = sub_2268E065C(*(void *)(a1 + 128), v9, 0, 0, (const void *)1, 0, &v54, v13);
        if (!v11)
        {
          if (v54) {
            CFStringRef v9 = (const __CFString *)v54;
          }
          if (!a3)
          {
            uint64_t v11 = sub_2268A243C((uint64_t)&v57);
            if (v11) {
              goto LABEL_23;
            }
            if (!v57) {
              goto LABEL_22;
            }
          }
          uint64_t v11 = sub_2268A0AD0((unsigned int *)"tSaMAMarAMalAMawiFiWANarSDarPIalgBhdnEhdVStnnEcaLCAtRLysWPysdlCi", (__CFArray **)&cf);
          if (v11) {
            goto LABEL_23;
          }
          if (!cf) {
            goto LABEL_22;
          }
          uint64_t v11 = sub_2268AFE20(a1, (const __CFArray *)cf, v9, v57, 1, 0, 0, v15);
          if (cf)
          {
            CFRelease(cf);
            CFTypeRef cf = 0;
          }
          if (!v11)
          {
            uint64_t v21 = sub_2268DD4C4(*(void *)(a1 + 128), &v53, &v52, v16, v17, v18, v19, v20);
            uint64_t v11 = v21;
            if (v21 == -6727)
            {
              int v28 = 0;
            }
            else
            {
              if (v21) {
                goto LABEL_23;
              }
              int v28 = sub_22685BD10(v9, (const __CFString *)v52, v22, v23, v24, v25, v26, v27);
            }
            sub_2268DCB00(*(void *)(a1 + 128), 20, v11, v14, v24, v25, v26, v27);
            uint64_t v11 = sub_2268A8320(v57, v30, v31, v32, v33, v34, v35, v36);
            if (!v11)
            {
              sub_2268DCB00(*(void *)(a1 + 128), 21, 0, v14, v37, v38, v39, v40);
              sub_2268A80C0(v58, 0x15uLL);
              uint64_t v11 = sub_2268A54A8(v57, v58, (CFMutableDictionaryRef *)&v56);
              if (!v11)
              {
                if (v56)
                {
                  if (!v28) {
                    goto LABEL_44;
                  }
                  if (dword_268147638 <= 800
                    && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u)))
                  {
                    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _RestoreDefaultsAndOptionallyWaitForDevice(BSConfigurationContextRef, CFDictionaryRef, BSRef, Boolean, CFDictionaryRef *)", 800, (uint64_t)"networkWillGoAway \n", v41, v42, v43, v44, (uint64_t)v52);
                  }
                  uint64_t v11 = sub_2268DD7D0(*(void *)(a1 + 128));
                  if (!v11)
                  {
                    uint64_t v11 = sub_2268DDE9C(*(void *)(a1 + 128), v45, v46, v47, v48, v49, v50, v51);
                    if (!v11)
                    {
                      uint64_t v11 = sub_2268DDA20(*(void *)(a1 + 128), (const __CFString *)v53, v9);
                      if (!v11)
                      {
LABEL_44:
                        uint64_t v11 = 0;
                        CFTypeRef v54 = 0;
                      }
                    }
                  }
                  goto LABEL_23;
                }
LABEL_22:
                uint64_t v11 = 4294960568;
              }
            }
          }
        }
      }
    }
  }
LABEL_23:
  if (v53)
  {
    CFRelease(v53);
    CFTypeRef v53 = 0;
  }
  if (v52)
  {
    CFRelease(v52);
    CFTypeRef v52 = 0;
  }
  if (v54)
  {
    CFRelease(v54);
    CFTypeRef v54 = 0;
  }
  if (v56) {
    CFRelease(v56);
  }
  return v11;
}

uint64_t sub_2268B7850(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyConnectionWithSystemFlags(BSConfigurationContextRef, BSRef, ACPSystemFlags)", 800, (uint64_t)" \n", a5, a6, a7, a8, v49);
  }
  uint64_t v51 = 0;
  CFTypeRef v53 = 0;
  if (*(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  unsigned int v52 = 0;
  if (a3 == 512) {
    int v11 = 1;
  }
  else {
    int v11 = 2;
  }
  uint64_t v12 = sub_2268DB87C(*(void *)(a1 + 128), &v53);
  if (v12) {
    goto LABEL_39;
  }
  if (!v53)
  {
    uint64_t v12 = 4294960568;
LABEL_39:
    if (v51)
    {
      sub_2268A2AA8(a2);
      sub_2268E097C(v51, v34, v35, v36, v37, v38, v39, v40);
    }
    goto LABEL_41;
  }
  unsigned int v50 = v11;
  int v13 = 0;
  if (a3 == 512) {
    int v14 = 1;
  }
  else {
    int v14 = 8;
  }
  do
  {
    if (v13)
    {
      uint64_t v15 = sub_2268DDC20(*(void *)(a1 + 128), 1);
      if (v15) {
        goto LABEL_36;
      }
    }
    uint64_t v15 = sub_2268A6454(a2, 1937327724);
    if (v15) {
      goto LABEL_36;
    }
    uint64_t v15 = sub_2268A5604(a2, 1937327724, &v52);
    if (v15) {
      goto LABEL_36;
    }
    if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyConnectionWithSystemFlags(BSConfigurationContextRef, BSRef, ACPSystemFlags)", 800, (uint64_t)"systemFlags: 0x%X retries: %ld of %ld \n", v18, v19, v20, v21, v52);
    }
    if ((v52 & a3) != 0) {
      goto LABEL_35;
    }
    ++v13;
  }
  while (v14 != v13);
  uint64_t v12 = sub_2268E0A60(v53, a2, a3, (uint64_t *)&v51, v18, v19, v20, v21);
  if (v12) {
    goto LABEL_39;
  }
  if (v51)
  {
    uint64_t v12 = sub_2268A6454(a2, 1937327724);
    if (!v12)
    {
      uint64_t v12 = sub_2268A5604(a2, 1937327724, &v52);
      if (!v12)
      {
        uint64_t v26 = v52;
        if ((v52 & a3) != 0)
        {
          if (dword_268147638 <= 800)
          {
            if (dword_268147638 != -1)
            {
LABEL_33:
              sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyConnectionWithSystemFlags(BSConfigurationContextRef, BSRef, ACPSystemFlags)", 800, (uint64_t)"Second check was successful!... systemFlags: 0x%X \n", v22, v23, v24, v25, v26);
              goto LABEL_34;
            }
            if (sub_226865630((uint64_t)&dword_268147638, 0x320u))
            {
              uint64_t v26 = v52;
              goto LABEL_33;
            }
          }
LABEL_34:
          sub_2268A2AA8(a2);
          sub_2268E097C(v51, v27, v28, v29, v30, v31, v32, v33);
          uint64_t v51 = 0;
LABEL_35:
          uint64_t v15 = sub_2268B819C((uint64_t)v53, v50, v16, v17, v18, v19, v20, v21);
LABEL_36:
          uint64_t v12 = v15;
          goto LABEL_39;
        }
        uint64_t v12 = sub_2268B7FC0((uint64_t)v53, v50, 4294960543, 0, 0, v23, v24, v25);
        sub_2268A2AA8(a2);
        sub_2268E097C(v51, v42, v43, v44, v45, v46, v47, v48);
        uint64_t v51 = 0;
        if (!v12) {
          goto LABEL_35;
        }
        goto LABEL_41;
      }
    }
    goto LABEL_39;
  }
  uint64_t v12 = 4294960568;
LABEL_41:
  if (v53) {
    sub_2268DB9AC(v53);
  }
  return v12;
}

uint64_t sub_2268B7B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyPPPoEConnection(BSConfigurationContextRef, BSRef, CFStringRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v43);
  }
  CFTypeRef cf = 0;
  uint64_t v45 = 0;
  if (*(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t v17 = sub_2268DB87C(*(void *)(a1 + 128), &v45);
  if (!v17)
  {
    if (!v45)
    {
LABEL_17:
      uint64_t v17 = 4294960568;
      goto LABEL_18;
    }
    uint64_t v17 = sub_2268B82C4(a1, v10, v11, v12, v13, v14, v15, v16);
    if (v17 == -6735)
    {
      if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyPPPoEConnection(BSConfigurationContextRef, BSRef, CFStringRef)", 800, (uint64_t)"Base station doesn't support verifying PPPoE Credentials\n", v18, v19, v20, v21, v43);
      }
      CFAllocatorRef v22 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 1, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (Mutable)
      {
        uint64_t v29 = Mutable;
        uint64_t v30 = sub_226860774(v22, Mutable, (uint64_t)"%ks=%O", v24, v25, v26, v27, v28, (uint64_t)"kBSConfigurationConnectionStatus_DeviceName");
        if (v30)
        {
          uint64_t v17 = v30;
          CFRelease(v29);
        }
        else
        {
          uint64_t v17 = sub_2268B7FC0((uint64_t)v45, 3, 4294960542, (uint64_t)v29, &cf, v31, v32, v33);
          CFRelease(v29);
          if (v17) {
            BOOL v41 = v17 == -6757;
          }
          else {
            BOOL v41 = 1;
          }
          if (v41 && cf != 0) {
            sub_2268B834C(a2, (CFDictionaryRef)cf);
          }
          if (!v17) {
            uint64_t v17 = sub_2268B819C((uint64_t)v45, 3, v35, v36, v37, v38, v39, v40);
          }
        }
        goto LABEL_18;
      }
      goto LABEL_17;
    }
  }
LABEL_18:
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (v45) {
    sub_2268DB9AC(v45);
  }
  return v17;
}

uint64_t sub_2268B7D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyInternetConnection(BSConfigurationContextRef, BSRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v32);
  }
  context = 0;
  if (*(_DWORD *)(a1 + 144) != 1634561902) {
    return 4294960591;
  }
  uint64_t v17 = sub_2268DB87C(*(void *)(a1 + 128), &context);
  if (!v17)
  {
    if (!context) {
      return 4294960568;
    }
    if (sub_2268A7620(a2, v10, v11, v12, v13, v14, v15, v16))
    {
      *((void *)context + 15) = a2;
      global_queue = dispatch_get_global_queue(0, 0);
      uint64_t v26 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, global_queue);
      dispatch_set_context(v26, context);
      dispatch_source_set_event_handler_f(v26, (dispatch_function_t)sub_2268B83E0);
      dispatch_time_t v27 = dispatch_time(0, 1000000000);
      dispatch_source_set_timer(v26, v27, 0x3B9ACA00uLL, 0x3B9ACA00uLL);
      dispatch_resume(v26);
      uint64_t v17 = sub_2268B7FC0((uint64_t)context, 4, 4294960543, 0, 0, v28, v29, v30);
      dispatch_source_cancel(v26);
      while (1)
      {
        uint64_t v31 = pthread_mutex_trylock((pthread_mutex_t *)((char *)context + 56));
        if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyInternetConnection(BSConfigurationContextRef, BSRef)", 800, (uint64_t)"Waiting for __InternetCheckTimerFiredCallback mutexlock: %d\n", v21, v22, v23, v24, v31);
        }
        if (v31 != 16) {
          break;
        }
        uint64_t v17 = sub_2268DDC20(*(void *)(a1 + 128), 1);
      }
      if (v31)
      {
        if (v17) {
          goto LABEL_23;
        }
      }
      else
      {
        pthread_mutex_unlock((pthread_mutex_t *)((char *)context + 56));
        if (v17)
        {
LABEL_23:
          if (!v26) {
            goto LABEL_7;
          }
LABEL_28:
          dispatch_release(v26);
          goto LABEL_7;
        }
      }
    }
    else
    {
      uint64_t v26 = 0;
    }
    uint64_t v17 = sub_2268B819C((uint64_t)context, 4, v19, v20, v21, v22, v23, v24);
    if (!v26) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_7:
  if (context) {
    sub_2268DB9AC((char *)context);
  }
  return v17;
}

uint64_t sub_2268B7FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, CFTypeRef *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _CopyAndWaitResultsDictFromConnectionStatusUpdate(AssistantCallbackContextRef, eBSConfigurationUIConfigSelector, OSStatus, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)" \n", (uint64_t)a5, a6, a7, a8, v43);
  }
  if (!a1 || *(_DWORD *)a1 != 1634561902)
  {
    uint64_t v18 = 4294960578;
    goto LABEL_19;
  }
  uint64_t v11 = *(__CFArray **)(a1 + 24);
  if (v11)
  {
    CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    uint64_t v18 = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], v11, (uint64_t)"%ks=%i", a4, (uint64_t)a5, a6, a7, a8, (uint64_t)"kBSAssistantCallback_Configuration_UIConfigSelector");
    if (!v18)
    {
      uint64_t v18 = sub_226860774(v12, *(__CFArray **)(a1 + 24), (uint64_t)"%ks=%i", v13, v14, v15, v16, v17, (uint64_t)"kBSAssistantCallback_Configuration_UIConfigConnectionStatusOSStatus");
      if (!v18)
      {
        if (!a4
          || (uint64_t v18 = sub_2268DD050(a1, @"kBSAssistantCallback_Configuration_UIConfigParamDict", a4, v20, v21, v22, v23, v24), !v18))
        {
          uint64_t v18 = sub_2268DBFEC((void *)a1, 1, v19, v20, v21, v22, v23, v24);
          if (!v18)
          {
            unsigned int v32 = sub_2268DC37C(a1, v25, v26, v27, v28, v29, v30, v31);
            unsigned int v33 = *(_DWORD *)(a1 + 32);
            if (v33) {
              uint64_t v18 = v33;
            }
            else {
              uint64_t v18 = v32;
            }
            if (!a5) {
              return v18;
            }
            goto LABEL_20;
          }
        }
      }
    }
LABEL_19:
    if (!a5) {
      return v18;
    }
    goto LABEL_20;
  }
  uint64_t v18 = 4294960591;
  if (!a5) {
    return v18;
  }
LABEL_20:
  CFTypeRef cf = 0;
  if (sub_2268DD020(a1, @"kBSAssistantCallback_Configuration_UIConfigResultsDict"))
  {
    while (1)
    {
      sub_2268DCEEC(a1, @"kBSAssistantCallback_Configuration_UIConfigResultsDict", &cf, v34, v35, v36, v37, v38);
      uint64_t v40 = v39;
      if (!v39)
      {
        CFTypeRef v41 = cf;
        if (cf)
        {
          *a5 = cf;
          CFRetain(v41);
          return v18;
        }
        uint64_t v40 = 4294960568;
      }
      uint64_t v18 = v40;
      if (!sub_2268DD020(a1, @"kBSAssistantCallback_Configuration_UIConfigResultsDict")) {
        return v40;
      }
    }
  }
  return v18;
}

uint64_t sub_2268B819C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _SendAndNoWaitResultsDictFromConnectionStatusUpdate(AssistantCallbackContextRef, eBSConfigurationUIConfigSelector, OSStatus, CFDictionaryRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v23);
  }
  if (!a1 || *(_DWORD *)a1 != 1634561902) {
    return 4294960578;
  }
  CFStringRef v9 = *(__CFArray **)(a1 + 24);
  if (!v9) {
    return 4294960591;
  }
  CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  uint64_t result = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], v9, (uint64_t)"%ks=%i", a4, a5, a6, a7, a8, (uint64_t)"kBSAssistantCallback_Configuration_UIConfigSelector");
  if (!result)
  {
    uint64_t result = sub_226860774(v10, *(__CFArray **)(a1 + 24), (uint64_t)"%ks=%i", v12, v13, v14, v15, v16, (uint64_t)"kBSAssistantCallback_Configuration_UIConfigConnectionStatusOSStatus");
    if (!result)
    {
      return sub_2268DC264((void *)a1, 1, v17, v18, v19, v20, v21, v22);
    }
  }
  return result;
}

uint64_t sub_2268B82C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _VerifyPPPoECredentials(BSConfigurationContextRef, BSRef, CFDictionaryRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v10);
  }
  if (*(_DWORD *)(a1 + 144) == 1634561902) {
    return 4294960561;
  }
  else {
    return 4294960591;
  }
}

void sub_2268B834C(uint64_t a1, CFDictionaryRef theDict)
{
  if (CFDictionaryGetCount(theDict))
  {
    CFTypeRef cf = 0;
    if (!sub_2268A5894(a1, &cf))
    {
      if (cf)
      {
        int v4 = sub_2268A2960(a1, (const __CFString *)cf, theDict, 0);
        if (cf)
        {
          CFRelease(cf);
          CFTypeRef cf = 0;
        }
        if (!v4) {
          sub_2268A5490(a1, 1651722563, 2);
        }
      }
    }
  }
}

uint64_t sub_2268B83E0(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(_DWORD *)result == 1634561902)
    {
      uint64_t v2 = *(void *)(result + 120);
      if (v2)
      {
        pthread_mutex_lock((pthread_mutex_t *)(result + 56));
        if (sub_2268A7620(v2, v3, v4, v5, v6, v7, v8, v9))
        {
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __InternetCheckTimerFiredCallback(void *)", 800, (uint64_t)"BAD internet result \n", v12, v13, v14, v15, v16);
          }
        }
        else
        {
          if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __InternetCheckTimerFiredCallback(void *)", 800, (uint64_t)"Good internet result \n", v12, v13, v14, v15, v16);
          }
          sub_2268DD134((void *)v1, 0, v10, v11, v12, v13, v14, v15);
        }
        return pthread_mutex_unlock((pthread_mutex_t *)(v1 + 56));
      }
    }
  }
  return result;
}

void sub_2268B8500(uint64_t a1, uint64_t a2, uint64_t a3, CFTypeRef *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147638 <= 800 && (dword_268147638 != -1 || sub_226865630((uint64_t)&dword_268147638, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"OSStatus _CopyAndWaitResultsDictFromUIConfigPrompt(AssistantCallbackContextRef, eBSConfigurationUIConfigSelector, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v38);
  }
  CFTypeRef cf = 0;
  if (a1)
  {
    if (*(_DWORD *)a1 == 1634561902)
    {
      if (a4)
      {
        if (*(void *)(a1 + 24))
        {
          if (!sub_2268DD0C4(a1, @"kBSAssistantCallback_Configuration_UIConfigSelector", a2, (uint64_t)a4, a5, a6, a7, a8)&& !sub_2268DD050(a1, @"kBSAssistantCallback_Configuration_UIConfigParamDict", a3, v12, v13, v14, v15, v16)&& !sub_2268DBFEC((void *)a1, 1, v17, v18, v19, v20, v21, v22))
          {
            int v30 = sub_2268DC37C(a1, v23, v24, v25, v26, v27, v28, v29);
            if (!*(_DWORD *)(a1 + 32) && !v30)
            {
              if (sub_2268DD020(a1, @"kBSAssistantCallback_Configuration_UIConfigResultsDict"))
              {
                sub_2268DCEEC(a1, @"kBSAssistantCallback_Configuration_UIConfigResultsDict", &cf, v31, v32, v33, v34, v35);
                if (!v36)
                {
                  CFTypeRef v37 = cf;
                  if (cf)
                  {
                    *a4 = cf;
                    CFRetain(v37);
                  }
                }
              }
              else
              {
                *a4 = 0;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2268B867C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = result;
  if (dword_268147638 <= 800)
  {
    if (dword_268147638 != -1 || (uint64_t result = sub_226865630((uint64_t)&dword_268147638, 0x320u), result)) {
      uint64_t result = sub_226865EB4((uint64_t)&dword_268147638, (uint64_t)"void __BSConfiguration_CheckMonitoringStateSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v9);
    }
  }
  if (v8)
  {
    return sub_2268B443C(v8, a2, a3, a4, a5, a6, a7, a8);
  }
  return result;
}

uint64_t sub_2268B870C(uint64_t a1, uint64_t a2, __CFArray **a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  if (!sub_22687CBC8(a1, 1130911088)) {
    return 0;
  }
  uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i%i%i", v7, v8, v9, v10, v11, 86400);
  if (v12 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v12;
}

uint64_t sub_2268B87E8(uint64_t a1, uint64_t a2, __CFArray **a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v11 = 1;
  for (uint64_t i = &dword_2647B80C8; ; i += 12)
  {
    uint64_t v13 = sub_226860774(v4, *a3, (uint64_t)"%i", v6, v7, v8, v9, v10, v11);
    if (v13) {
      break;
    }
    unsigned int v14 = *i;
    uint64_t v11 = v14;
    if (!v14) {
      return 0;
    }
  }
  uint64_t v15 = v13;
  if (*a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v15;
}

uint64_t sub_2268B88B8(uint64_t a1, uint64_t a2, CFMutableArrayRef *a3)
{
  CFTypeRef cf = 0;
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (Mutable)
  {
    uint64_t v12 = sub_22687CDBC(a1, 1937329234, &cf, 0);
    if (cf)
    {
      if (!v12 && CFDictionaryGetCount((CFDictionaryRef)cf) >= 1)
      {
        CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue((CFDictionaryRef)cf, @"regions");
        if (Value)
        {
          CFArrayRef v15 = Value;
          CFIndex Count = CFArrayGetCount(Value);
          if (Count >= 1)
          {
            CFIndex v17 = Count;
            CFIndex v18 = 0;
            while (1)
            {
              CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(v15, v18);
              uint64_t v20 = CFDictionaryGetValue(ValueAtIndex, @"region");
              if (!v20) {
                break;
              }
              CFArrayAppendValue(*a3, v20);
              uint64_t v12 = 0;
              if (v17 == ++v18) {
                goto LABEL_11;
              }
            }
          }
          uint64_t v12 = 0;
          goto LABEL_11;
        }
        uint64_t v12 = 4294967291;
        goto LABEL_7;
      }
      uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i", v7, v8, v9, v10, v11, 0);
    }
    if (v12)
    {
LABEL_7:
      if (*a3)
      {
        CFRelease(*a3);
        *a3 = 0;
      }
    }
  }
  else
  {
    uint64_t v12 = 4294967293;
  }
LABEL_11:
  if (cf) {
    CFRelease(cf);
  }
  return v12;
}

uint64_t sub_2268B8A24(uint64_t a1, uint64_t a2, __CFArray **a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  if (sub_22687CBC8(a1, 1400468300))
  {
    uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i%i%i%i%i%i%i%i", v7, v8, v9, v10, v11, 0);
    if (!v12) {
      return v12;
    }
  }
  else
  {
    uint64_t v12 = 4294967274;
  }
  if (*a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v12;
}

uint64_t sub_2268B8B0C(uint64_t a1, char *a2, __CFArray **a3)
{
  memset(&v23, 0, sizeof(v23));
  sub_22689F090(v21, a2);
  unsigned int v20 = 0;
  unsigned __int16 v19 = 0;
  uint64_t v5 = sub_22687AB24(a1, 1937326416, &v20, 0);
  if (v5) {
    goto LABEL_5;
  }
  sub_22689F090(__p, "raMd");
  sub_226881624((unsigned __int8 *)v21, (uint64_t)__p, &v23);
  if (v18 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v5 = sub_226888224(a1, (uint64_t)&v23, &v19, 0);
  if (v5) {
    goto LABEL_5;
  }
  if (!a3)
  {
    uint64_t v5 = 4294967292;
    goto LABEL_9;
  }
  CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (Mutable)
  {
    BOOL v9 = sub_22687CBC8(a1, 1296257652);
    int v15 = v20 < 3 || v9;
    if (v15 == 1)
    {
      if (v19 <= 0xAu)
      {
        if (((1 << v19) & 0x5B0) != 0)
        {
          uint64_t v16 = sub_226860774(v7, *a3, (uint64_t)"%i%i%i%i%i", v10, v11, v12, v13, v14, 6);
LABEL_31:
          uint64_t v5 = v16;
          goto LABEL_5;
        }
        if (((1 << v19) & 0x46) != 0)
        {
          uint64_t v16 = sub_226860774(v7, *a3, (uint64_t)"%i%i%i%i", v10, v11, v12, v13, v14, 1);
          goto LABEL_31;
        }
        if (v19 == 3)
        {
          uint64_t v16 = sub_226860774(v7, *a3, (uint64_t)"%i%i%i%i%i%i%i%i%i", v10, v11, v12, v13, v14, 1);
          goto LABEL_31;
        }
      }
      uint64_t v16 = sub_226860774(v7, *a3, (uint64_t)"%i%i", v10, v11, v12, v13, v14, 1);
      goto LABEL_31;
    }
    uint64_t v5 = 4294967274;
  }
  else
  {
    uint64_t v5 = 4294967293;
  }
LABEL_5:
  if (a3 && v5 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
LABEL_9:
  if (v22 < 0) {
    operator delete(v21[0]);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  return v5;
}

void sub_2268B8D7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v24 - 57) < 0) {
    operator delete(*(void **)(v24 - 80));
  }
  if (*(char *)(v24 - 33) < 0) {
    operator delete(*(void **)(v24 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268B8DCC(uint64_t a1, char *a2, CFTypeRef *a3)
{
  if (sub_22687CBC8(a1, 1935819842))
  {
    if (a3)
    {
      CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
      *a3 = Mutable;
      if (Mutable)
      {
        uint64_t v13 = sub_226860774(v6, Mutable, (uint64_t)"%i%i%i", v8, v9, v10, v11, v12, 1000);
        if (v13 && *a3)
        {
          CFRelease(*a3);
          *a3 = 0;
        }
      }
      else
      {
        return 4294967293;
      }
    }
    else
    {
      return 4294967292;
    }
  }
  else
  {
    sub_2268B8B0C(a1, a2, (__CFArray **)a3);
    return 0;
  }
  return v13;
}

uint64_t sub_2268B8EB0(uint64_t a1, char *a2, CFArrayRef *a3, int a4)
{
  uint64_t v105 = *MEMORY[0x263EF8340];
  memset(&v103, 0, sizeof(v103));
  sub_22689F090(&v101, a2);
  int v7 = sub_22687CBC8(a1, 2003390540);
  BOOL v95 = sub_22687CBC8(a1, 942682734);
  BOOL v96 = sub_22687CBC8(a1, 825319779);
  BOOL v94 = sub_22687CBC8(a1, 1852782669);
  BOOL v8 = sub_22687CBC8(a1, 1935819842);
  char v100 = 0;
  if (v7)
  {
    BOOL v9 = v8;
    BOOL v91 = sub_22688B734(a1, @"80211n_2_4GHz");
    LODWORD(v92) = sub_22688B734(a1, @"80211n_5GHz");
    CFArrayRef v10 = (const __CFArray *)sub_22688B77C(a1, @"5GHz_channels");
    CFArrayRef v11 = v10;
    if (v10) {
      HIDWORD(v92) = CFArrayGetCount(v10) > 0;
    }
    else {
      HIDWORD(v92) = 0;
    }
    BOOL v8 = v9;
  }
  else
  {
    uint64_t v92 = 0;
    CFArrayRef v11 = 0;
    BOOL v91 = 1;
  }
  BOOL v93 = v8;
  if (v8)
  {
    int v99 = 0;
    int v88 = v7;
    int v89 = a4;
    CFArrayRef v12 = v11;
    uint64_t v13 = a3;
    if (SHIBYTE(v102) < 0)
    {
      sub_22689EF14(__p, (void *)v101, *((unint64_t *)&v101 + 1));
    }
    else
    {
      *(_OWORD *)std::string __p = v101;
      uint64_t v98 = v102;
    }
    uint64_t v24 = HIBYTE(v98);
    int v25 = SHIBYTE(v98);
    uint64_t v26 = __p[0];
    if (v98 >= 0)
    {
      uint64_t v27 = __p;
    }
    else
    {
      uint64_t v24 = (uint64_t)__p[1];
      uint64_t v27 = (void **)__p[0];
    }
    uint64_t v28 = (void **)((char *)v27 + v24);
    if (v24 >= 16)
    {
      uint64_t v29 = v27;
      do
      {
        int v30 = memchr(v29, 87, v24 - 15);
        if (!v30) {
          break;
        }
        uint64_t v31 = (void **)v30;
        if (*v30 == 0x6461722E69466957 && v30[1] == 0x2E5D2A5B2E736F69) {
          goto LABEL_30;
        }
        uint64_t v29 = (void **)((char *)v30 + 1);
        uint64_t v24 = (char *)v28 - ((char *)v31 + 1);
      }
      while (v24 > 15);
    }
    uint64_t v31 = v28;
LABEL_30:
    if (v25 < 0) {
      operator delete(v26);
    }
    if (v31 != v28 && v31 == v27)
    {
      a3 = v13;
      CFArrayRef v11 = v12;
      if (sub_2268801D8(a1, 0) == 2)
      {
        uint64_t v86 = v13;
        BOOL v33 = 0;
        uint64_t v34 = 0;
        char v35 = 1;
        while (1)
        {
          char v36 = v35;
          MEMORY[0x22A65ABB0](&v103, "WiFi.radios.[*].");
          snprintf(__str, 0x10uLL, "%ld", v34);
          if ((v103.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int64_t size = HIBYTE(v103.__r_.__value_.__r.__words[2]);
          }
          else {
            int64_t size = v103.__r_.__value_.__l.__size_;
          }
          if ((v103.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v38 = &v103;
          }
          else {
            uint64_t v38 = (std::string *)v103.__r_.__value_.__r.__words[0];
          }
          uint64_t v39 = (char *)v38 + size;
          if (size >= 1)
          {
            uint64_t v40 = v38;
            do
            {
              CFTypeRef v41 = memchr(v40, 42, size);
              if (!v41) {
                break;
              }
              if (*v41 == 42) {
                goto LABEL_48;
              }
              uint64_t v40 = (std::string *)(v41 + 1);
              int64_t size = v39 - (unsigned char *)v40;
            }
            while (v39 - (unsigned char *)v40 > 0);
          }
          CFTypeRef v41 = v39;
LABEL_48:
          if (v41 == v39) {
            std::string::size_type v42 = -1;
          }
          else {
            std::string::size_type v42 = v41 - (unsigned char *)v38;
          }
          std::string::replace(&v103, v42, 1uLL, __str);
          sub_22689F090(__p, "phymodes");
          sub_226881624((unsigned __int8 *)&v103, (uint64_t)__p, &v103);
          if (SHIBYTE(v98) < 0) {
            operator delete(__p[0]);
          }
          uint64_t v14 = sub_226888134(a1, (uint64_t)&v103, &v99, 0);
          if (v14) {
            break;
          }
          if ((v99 & 0xE) != 0)
          {
            uint64_t v14 = sub_22688CDC0(a1, &v100, 0, 0);
            if (v14) {
              break;
            }
            int v43 = 1;
          }
          else
          {
            int v43 = 0;
            BOOL v33 = (v99 & 0x70) != 0;
          }
          char v35 = 0;
          uint64_t v34 = 1;
          if ((v36 & 1) == 0)
          {
            a3 = v86;
            CFArrayRef v11 = v12;
            a4 = v89;
            goto LABEL_108;
          }
        }
        a3 = v86;
        CFArrayRef v11 = v12;
      }
      else
      {
        uint64_t v14 = 4294967292;
      }
      goto LABEL_135;
    }
    sub_22689F090(__p, "phymodes");
    a4 = v89;
    a3 = v13;
    CFArrayRef v11 = v12;
    sub_226881624((unsigned __int8 *)&v101, (uint64_t)__p, &v103);
    if (SHIBYTE(v98) < 0) {
      operator delete(__p[0]);
    }
    uint64_t v14 = sub_226888134(a1, (uint64_t)&v103, &v99, 0);
    if (v14) {
      goto LABEL_135;
    }
    if ((v99 & 0xE) != 0)
    {
      uint64_t v14 = sub_22688CDC0(a1, &v100, 0, 0);
      if (v14) {
        goto LABEL_135;
      }
      BOOL v33 = 0;
      int v43 = 1;
    }
    else
    {
      int v43 = 0;
      BOOL v33 = (v99 & 0x70) != 0;
    }
LABEL_108:
    int v15 = v33;
    BOOL v16 = v43 != 0;
    int v7 = v88;
    if (!a3) {
      goto LABEL_109;
    }
  }
  else
  {
    uint64_t v14 = sub_22688CDC0(a1, &v100, 0, 0);
    if (v14) {
      goto LABEL_135;
    }
    int v15 = v95 || v96;
    BOOL v16 = 1;
    if (!a3)
    {
LABEL_109:
      uint64_t v14 = 4294967292;
      goto LABEL_139;
    }
  }
  CFAllocatorRef v17 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable)
  {
    uint64_t v14 = 4294967293;
    goto LABEL_135;
  }
  if (v94)
  {
    if (v96)
    {
      uint64_t v85 = a3;
      CFArrayRef v87 = v11;
      if (SHIBYTE(v102) < 0)
      {
        sub_22689EF14(__p, (void *)v101, *((unint64_t *)&v101 + 1));
      }
      else
      {
        *(_OWORD *)std::string __p = v101;
        uint64_t v98 = v102;
      }
      uint64_t v66 = HIBYTE(v98);
      int v67 = SHIBYTE(v98);
      uint64_t v68 = __p[0];
      if (v98 >= 0)
      {
        uint64_t v69 = __p;
      }
      else
      {
        uint64_t v66 = (uint64_t)__p[1];
        uint64_t v69 = (void **)__p[0];
      }
      uint64_t v70 = (void **)((char *)v69 + v66);
      if (v66 >= 16)
      {
        uint64_t v71 = v69;
        do
        {
          uint64_t v72 = memchr(v71, 87, v66 - 15);
          if (!v72) {
            break;
          }
          uint64_t v73 = (void **)v72;
          if (*v72 == 0x6461722E69466957 && v72[1] == 0x2E5D2A5B2E736F69) {
            goto LABEL_123;
          }
          uint64_t v71 = (void **)((char *)v72 + 1);
          uint64_t v66 = (char *)v70 - ((char *)v73 + 1);
        }
        while (v66 > 15);
      }
      uint64_t v73 = v70;
LABEL_123:
      if (v67 < 0) {
        operator delete(v68);
      }
      if (v15) {
        unsigned int v75 = 10;
      }
      else {
        unsigned int v75 = 6;
      }
      if (v73 != v70 && v73 == v69) {
        uint64_t v65 = 655366;
      }
      else {
        uint64_t v65 = v75;
      }
      if (!((v73 != v70 && v73 == v69) | (v15 | v16) & 1))
      {
        uint64_t v14 = 0;
        CFArrayRef v11 = v87;
        goto LABEL_139;
      }
      a3 = v85;
      CFArrayRef v11 = v87;
      goto LABEL_133;
    }
    goto LABEL_154;
  }
  if (v93 && sub_22688BA8C(a2) == 1651718221)
  {
    int v44 = v92 & HIDWORD(v92);
    if (v91)
    {
      uint64_t v45 = *a3;
      if (v44)
      {
        if (!v96)
        {
          uint64_t v46 = 327686;
          goto LABEL_157;
        }
        uint64_t v14 = sub_226860774(v17, v45, (uint64_t)"%i%i%i%i%i%i", v19, v20, v21, v22, v23, 655366);
        if (!v14)
        {
          if (!a4)
          {
LABEL_158:
            uint64_t v14 = 0;
            if (!CFArrayGetCount(*a3) || !a4) {
              goto LABEL_139;
            }
            int v84 = *a3;
            if (v100) {
              uint64_t v76 = sub_226860774(v17, v84, (uint64_t)"%i%i%i%i%i%i%i%i%i%i%i", v79, v80, v81, v82, v83, 8888);
            }
            else {
              uint64_t v76 = sub_226860774(v17, v84, (uint64_t)"%i%i%i%i%i%i%i%i%i%i%i%i%i%i", v79, v80, v81, v82, v83, 8888);
            }
            goto LABEL_134;
          }
          uint64_t v45 = *a3;
          uint64_t v46 = 8888;
LABEL_157:
          uint64_t v14 = sub_226860774(v17, v45, (uint64_t)"%i%i%i%i", v19, v20, v21, v22, v23, v46);
          if (v14) {
            goto LABEL_135;
          }
          goto LABEL_158;
        }
        goto LABEL_135;
      }
      uint64_t v14 = sub_226860774(v17, v45, (uint64_t)"%i", v19, v20, v21, v22, v23, 6);
      if (v14) {
        goto LABEL_135;
      }
      if (!v100)
      {
        uint64_t v14 = sub_226860774(v17, *a3, (uint64_t)"%i", v19, v20, v21, v22, v23, 7);
        if (v14) {
          goto LABEL_135;
        }
      }
      if ((a4 & 1) == 0) {
        goto LABEL_154;
      }
      uint64_t v78 = 1;
    }
    else
    {
      if (!v44)
      {
        uint64_t v14 = 4294967274;
        goto LABEL_135;
      }
      uint64_t v78 = 8;
    }
    uint64_t v76 = sub_226860774(v17, *a3, (uint64_t)"%i%i%i", v19, v20, v21, v22, v23, v78);
    goto LABEL_134;
  }
  if (v95)
  {
    uint64_t v47 = *a3;
    if (v91 && v16)
    {
      uint64_t v14 = sub_226860774(v17, v47, (uint64_t)"%i", v19, v20, v21, v22, v23, 6);
      if (v14) {
        goto LABEL_135;
      }
      uint64_t v47 = *a3;
      if (!v100)
      {
        uint64_t v14 = sub_226860774(v17, v47, (uint64_t)"%i", v48, v49, v50, v51, v52, 7);
        if (v14) {
          goto LABEL_135;
        }
        uint64_t v47 = *a3;
      }
    }
    if (((HIDWORD(v92) & v92 | ~v7) & v15) == 1 && !v100)
    {
      if (CFArrayGetCount(v47) >= 1)
      {
        uint64_t v14 = sub_226860774(v17, *a3, (uint64_t)"%i", v53, v54, v55, v56, v57, 8888);
        if (v14) {
          goto LABEL_135;
        }
      }
      uint64_t v14 = sub_226860774(v17, *a3, (uint64_t)"%i%i", v53, v54, v55, v56, v57, 5);
      if (v14) {
        goto LABEL_135;
      }
      uint64_t v47 = *a3;
    }
    if (CFArrayGetCount(v47))
    {
      if (a4)
      {
        uint64_t v14 = sub_226860774(v17, *a3, (uint64_t)"%i", v19, v20, v21, v22, v23, 8888);
        if (v14) {
          goto LABEL_135;
        }
      }
    }
  }
  if (!v96
    || ((HIDWORD(v92) & v92 | ~v7) & v15) != 1
    || v100
    || (uint64_t v14 = sub_226860774(v17, *a3, (uint64_t)"%i", v19, v20, v21, v22, v23, 10), !v14))
  {
    if (v95 && CFArrayGetCount(*a3) && !a4) {
      goto LABEL_154;
    }
    if (!v16
      || (uint64_t v14 = sub_226860774(v17, *a3, (uint64_t)"%i", v19, v20, v21, v22, v23, 1), !v14)
      && (!sub_22687CBC8(a1, 1382108499)
       || (uint64_t v14 = sub_226860774(v17, *a3, (uint64_t)"%i%i", v58, v59, v60, v61, v62, 2), !v14)))
    {
      if ((v15 & (HIDWORD(v92) | v7 ^ 1)) == 1)
      {
        BOOL v63 = sub_22687CBC8(a1, 942682721);
        if (!v100 && v63)
        {
          uint64_t v65 = 4;
LABEL_133:
          uint64_t v76 = sub_226860774(v17, *a3, (uint64_t)"%i", v19, v20, v21, v22, v23, v65);
LABEL_134:
          uint64_t v14 = v76;
          goto LABEL_135;
        }
      }
LABEL_154:
      uint64_t v14 = 0;
      goto LABEL_139;
    }
  }
LABEL_135:
  if (a3 && v14 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
LABEL_139:
  if (v11) {
    CFRelease(v11);
  }
  if (SHIBYTE(v102) < 0) {
    operator delete((void *)v101);
  }
  if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v103.__r_.__value_.__l.__data_);
  }
  return v14;
}

void sub_2268B99E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (*(char *)(v36 - 137) < 0) {
    operator delete(*(void **)(v36 - 160));
  }
  if (*(char *)(v36 - 113) < 0) {
    operator delete(*(void **)(v36 - 136));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268B9A68(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  BOOL v7 = sub_22687CBC8(a1, 1417171063);
  uint64_t v13 = (__CFArray *)*a3;
  if (v7) {
    uint64_t v14 = sub_226860774(v5, v13, (uint64_t)"%i%i%i%i", v8, v9, v10, v11, v12, 10);
  }
  else {
    uint64_t v14 = sub_226860774(v5, v13, (uint64_t)"%i", v8, v9, v10, v11, v12, 100);
  }
  uint64_t v15 = v14;
  if (v14 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v15;
}

uint64_t sub_2268B9B44(uint64_t a1, uint64_t a2, __CFArray **a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v12 = sub_226860774(v5, Mutable, (uint64_t)"%i", v7, v8, v9, v10, v11, 0);
  if (!v12)
  {
    if (!sub_22687CBC8(a1, 1112757313)
      || (uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i", v14, v15, v16, v17, v18, 1), !v12))
    {
      if (!sub_22687CBC8(a1, 1147761495)) {
        return 0;
      }
      uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i", v19, v20, v21, v22, v23, 3);
      if (!v12) {
        return v12;
      }
    }
  }
  if (*a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v12;
}

uint64_t sub_2268B9C64(uint64_t a1, uint64_t a2, __CFArray **a3, int a4)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v18 = sub_226860774(v6, Mutable, (uint64_t)"%i%i", v8, v9, v10, v11, v12, 768);
  if (v18) {
    BOOL v19 = 1;
  }
  else {
    BOOL v19 = a4 == 0;
  }
  if (!v19) {
    uint64_t v18 = sub_226860774(v6, *a3, (uint64_t)"%i", v13, v14, v15, v16, v17, 2304);
  }
  if (v18 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v18;
}

uint64_t sub_2268B9D3C(uint64_t a1, char *a2, __CFArray **a3)
{
  int v22 = 0;
  memset(&v21, 0, sizeof(v21));
  sub_22689F090(__p, a2);
  if (!a3)
  {
    uint64_t v12 = 4294967292;
    goto LABEL_9;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable)
  {
    uint64_t v12 = 4294967293;
    goto LABEL_9;
  }
  sub_226880920((unsigned __int8 *)__p, 1752641585, &v21);
  uint64_t v12 = sub_226888134(a1, (uint64_t)&v21, &v22, 0);
  if (v12) {
    goto LABEL_20;
  }
  uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i", v7, v8, v9, v10, v11, 16);
  if (v12) {
    goto LABEL_20;
  }
  if (v22)
  {
    uint64_t v12 = 0;
    goto LABEL_9;
  }
  uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i", v13, v14, v15, v16, v17, 4);
  if (v12)
  {
LABEL_20:
    if (*a3)
    {
      CFRelease(*a3);
      *a3 = 0;
    }
  }
LABEL_9:
  if (v20 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  return v12;
}

void sub_2268B9E80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268B9EB4(uint64_t a1, uint64_t a2, __CFArray **a3)
{
  if (!sub_22687CBC8(a1, 1396995415)) {
    return 0;
  }
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v12 = sub_226860774(v5, Mutable, (uint64_t)"%i%i%i%i%i", v7, v8, v9, v10, v11, 0);
  if (!v12)
  {
    if (!sub_22687CBC8(a1, 1734960965)
      || (uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i", v13, v14, v15, v16, v17, 9), !v12))
    {
      sub_22687CBC8(a1, 1953392453);
      if (sub_22687CBC8(a1, 1147761477))
      {
        uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i", v18, v19, v20, v21, v22, 15);
        if (!v12) {
          return v12;
        }
        goto LABEL_5;
      }
      return 0;
    }
  }
LABEL_5:
  if (*a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v12;
}

uint64_t sub_2268BA00C(uint64_t a1, uint64_t a2, __CFArray **a3)
{
  if (!sub_22687CBC8(a1, 1768961614)) {
    return 0;
  }
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v12 = sub_226860774(v5, Mutable, (uint64_t)"%i%i%i", v7, v8, v9, v10, v11, 0);
  if (!v12)
  {
    if (!sub_22687CBC8(a1, 1768961607)
      || (uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i", v13, v14, v15, v16, v17, 3), !v12))
    {
      if (sub_22687CBC8(a1, 1765166674))
      {
        uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i", v18, v19, v20, v21, v22, 5);
        if (!v12) {
          return v12;
        }
        goto LABEL_5;
      }
      return 0;
    }
  }
LABEL_5:
  if (*a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v12;
}

uint64_t sub_2268BA14C(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v11 = sub_226860774(v4, Mutable, (uint64_t)"%i%i%i%i%i%i%i%i%i%i", v6, v7, v8, v9, v10, 30);
  if (v11 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v11;
}

uint64_t sub_2268BA218(uint64_t a1, uint64_t a2, __CFArray **a3)
{
  if (!a3) {
    return 4294967292;
  }
  int v4 = *(_DWORD *)(a1 + 260);
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 37, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (Mutable) {
    BOOL v12 = v4 == 1;
  }
  else {
    BOOL v12 = 1;
  }
  if (v12 || v4 == 4)
  {
    if (Mutable) {
      return 0;
    }
    uint64_t v14 = 4294967293;
  }
  else
  {
    uint64_t v15 = sub_226860774(v5, Mutable, (uint64_t)"%i", v7, v8, v9, v10, v11, 37);
    uint64_t v14 = v15;
    if (!v15)
    {
      uint64_t v21 = 1;
      while (1)
      {
        uint64_t v22 = sub_226860774(v5, *a3, (uint64_t)"%i", v16, v17, v18, v19, v20, v21);
        if (v22) {
          break;
        }
        uint64_t v21 = (v21 + 1);
        if (v21 == 37) {
          return 0;
        }
      }
      uint64_t v14 = v22;
    }
  }
  if (*a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v14;
}

uint64_t sub_2268BA314(uint64_t a1, char *a2, __CFArray **a3)
{
  int v17 = 0;
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(__p, a2);
  if (!a3)
  {
    uint64_t v12 = 4294967292;
    goto LABEL_12;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable)
  {
    uint64_t v12 = 4294967293;
    goto LABEL_12;
  }
  sub_226880920((unsigned __int8 *)__p, 1752641585, &v16);
  uint64_t v12 = sub_226888134(a1, (uint64_t)&v16, &v17, 0);
  if (v12) {
    goto LABEL_19;
  }
  if (v17)
  {
    uint64_t v12 = 0;
    goto LABEL_12;
  }
  uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i%i", v7, v8, v9, v10, v11, 1);
  if (v12)
  {
LABEL_19:
    if (*a3)
    {
      CFRelease(*a3);
      *a3 = 0;
    }
  }
LABEL_12:
  if (v15 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v12;
}

void sub_2268BA438(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BA46C(uint64_t a1, char *a2, __CFArray **a3)
{
  int v17 = 0;
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(__p, a2);
  if (!a3)
  {
    uint64_t v12 = 4294967292;
    goto LABEL_12;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable)
  {
    uint64_t v12 = 4294967293;
    goto LABEL_12;
  }
  sub_226880920((unsigned __int8 *)__p, 1752641585, &v16);
  uint64_t v12 = sub_226888134(a1, (uint64_t)&v16, &v17, 0);
  if (v12) {
    goto LABEL_19;
  }
  if (v17)
  {
    uint64_t v12 = 0;
    goto LABEL_12;
  }
  uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i%i", v7, v8, v9, v10, v11, 1);
  if (v12)
  {
LABEL_19:
    if (*a3)
    {
      CFRelease(*a3);
      *a3 = 0;
    }
  }
LABEL_12:
  if (v15 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v12;
}

void sub_2268BA590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BA5C4(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v11 = sub_226860774(v4, Mutable, (uint64_t)"%i%i", v6, v7, v8, v9, v10, 1645);
  if (v11 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v11;
}

uint64_t sub_2268BA664(uint64_t a1, uint64_t a2, __CFArray **a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  if (!sub_22687CBC8(a1, 1279607875)) {
    return 0;
  }
  uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i%i", v7, v8, v9, v10, v11, 1);
  if (v12 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v12;
}

uint64_t sub_2268BA72C(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v11 = sub_226860774(v4, Mutable, (uint64_t)"%i%i%i%i%i%i%i%i%i", v6, v7, v8, v9, v10, 3600);
  if (v11 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v11;
}

uint64_t sub_2268BA808(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v11 = sub_226860774(v4, Mutable, (uint64_t)"%i%i", v6, v7, v8, v9, v10, 1);
  if (v11 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v11;
}

uint64_t sub_2268BA8A8(uint64_t a1, uint64_t a2, __CFArray **a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  if (!sub_22687CBC8(a1, 1314148397)) {
    return 0;
  }
  uint64_t v12 = sub_226860774(v5, *a3, (uint64_t)"%i%i%i", v7, v8, v9, v10, v11, 1);
  if (v12 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v12;
}

uint64_t sub_2268BA978(uint64_t a1, char *a2, __CFArray **a3, int a4)
{
  BOOL v8 = sub_22687CBC8(a1, 1164858228);
  BOOL v9 = sub_22687CBC8(a1, 1852787795);
  BOOL v10 = sub_22687CBC8(a1, 1852788045);
  uint64_t v97 = 0;
  int v96 = 0;
  memset(&v95, 0, sizeof(v95));
  sub_22689F090(v93, a2);
  unsigned int v92 = 0;
  uint64_t v11 = sub_22687AB24(a1, 1937326416, &v92, 0);
  if (v11) {
    goto LABEL_24;
  }
  unsigned int v12 = v92;
  sub_226880920((unsigned __int8 *)v93, 1651718221, &v95);
  uint64_t v11 = sub_226888134(a1, (uint64_t)&v95, (char *)&v97 + 4, 0);
  if (v11) {
    goto LABEL_24;
  }
  sub_22689F090(__p, "raSt");
  sub_226881624((unsigned __int8 *)v93, (uint64_t)__p, &v95);
  if (v91 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v11 = sub_226888134(a1, (uint64_t)&v95, &v97, 0);
  if (v11) {
    goto LABEL_24;
  }
  int v13 = v97;
  if (sub_22687CBC8(a1, 1146569811))
  {
    BOOL v89 = 0;
    sub_22689F090(__p, "dWDS");
    sub_226881624((unsigned __int8 *)v93, (uint64_t)__p, &v95);
    if (v91 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v14 = sub_226888348(a1, (uint64_t)&v95, &v89, 0);
    uint64_t v11 = v14;
    if (v14) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = !v89;
    }
    int v17 = !v15 && v13 == 1;
    if (v14) {
      goto LABEL_24;
    }
  }
  else
  {
    int v17 = 0;
  }
  sub_22689F090(__p, "wdFl");
  sub_226881624((unsigned __int8 *)v93, (uint64_t)__p, &v95);
  if (v91 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v11 = sub_226888134(a1, (uint64_t)&v95, &v96, 0);
  if (!v11)
  {
    if (!a3)
    {
      uint64_t v11 = 4294967292;
      goto LABEL_28;
    }
    int v87 = v96;
    CFAllocatorRef v88 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
    *a3 = Mutable;
    if (!Mutable)
    {
      uint64_t v11 = 4294967293;
      goto LABEL_24;
    }
    if (SHIDWORD(v97) > 0x80000)
    {
      if (SHIDWORD(v97) > 655360)
      {
        if ((HIDWORD(v97) - 655361) > 6 || ((1 << (BYTE4(v97) - 1)) & 0x67) == 0) {
          goto LABEL_95;
        }
      }
      else if ((HIDWORD(v97) - 524289) >= 3 && HIDWORD(v97) != 524294)
      {
        if (HIDWORD(v97) != 524295) {
          goto LABEL_95;
        }
        goto LABEL_50;
      }
    }
    else
    {
      if (HIDWORD(v97) <= 0xA)
      {
        if (((1 << SBYTE4(v97)) & 0x660) != 0) {
          goto LABEL_62;
        }
        if (((1 << SBYTE4(v97)) & 0x180) != 0)
        {
LABEL_50:
          uint64_t v11 = sub_226860774(v88, Mutable, (uint64_t)"%i%i", v20, v21, v22, v23, v24, 1);
          if (v11 | v87) {
            int v30 = 1;
          }
          else {
            int v30 = v17;
          }
          char v31 = v13 != 1 || v8;
          if (v30 == 1 || (v31 & 1) == 0) {
            goto LABEL_24;
          }
          goto LABEL_58;
        }
      }
      if (((HIDWORD(v97) - 327681) > 6 || ((1 << (BYTE4(v97) - 1)) & 0x67) == 0)
        && (HIDWORD(v97) - 262150) >= 2)
      {
LABEL_95:
        uint64_t v11 = sub_226860774(v88, Mutable, (uint64_t)"%i", v20, v21, v22, v23, v24, 1);
        if (v11) {
          goto LABEL_24;
        }
        int v57 = v12 < 0x6C ? 1 : a4;
        if ((v9 | v17) != 1)
        {
          if (v57)
          {
            uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i%i%i", v52, v53, v54, v55, v56, 8888);
            if (v11) {
              goto LABEL_24;
            }
            if (sub_22687CBC8(a1, 1414745645) && v13 != 1)
            {
              uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v58, v59, v60, v61, v62, 8);
              if (v11) {
                goto LABEL_24;
              }
            }
          }
        }
        if (!sub_22687CBC8(a1, 1095062317))
        {
          if (v9 || !sub_22687CBC8(a1, 1464877357))
          {
            uint64_t v11 = 0;
            goto LABEL_28;
          }
          uint64_t v85 = sub_226860774(v88, *a3, (uint64_t)"%i", v80, v81, v82, v83, v84, 4);
          uint64_t v11 = v85;
          int v86 = v13 != 1 || v8;
          if (v85 || !v86) {
            goto LABEL_24;
          }
          uint64_t v32 = 9;
LABEL_59:
          uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v25, v26, v27, v28, v29, v32);
          goto LABEL_24;
        }
        uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v63, v64, v65, v66, v67, 8888);
        if (v11) {
          goto LABEL_24;
        }
        if (((v9 | a4 ^ 1) & 1) == 0)
        {
          uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v68, v69, v70, v71, v72, 6);
          if (v11) {
            goto LABEL_24;
          }
        }
        if (!v10)
        {
          uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v68, v69, v70, v71, v72, 5);
          if (v11) {
            goto LABEL_24;
          }
        }
        uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v68, v69, v70, v71, v72, 7);
        int v78 = v11 | v87 ? 1 : v17;
        BOOL v79 = v13 != 1 || v8;
        if (v78 == 1) {
          goto LABEL_24;
        }
        if (!v79) {
          goto LABEL_24;
        }
        uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v73, v74, v75, v76, v77, 8888);
        if (v11) {
          goto LABEL_24;
        }
        if (((v9 | a4 ^ 1) & 1) == 0)
        {
          uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v25, v26, v27, v28, v29, 11);
          if (v11) {
            goto LABEL_24;
          }
        }
        if (v10)
        {
LABEL_58:
          uint64_t v32 = 12;
          goto LABEL_59;
        }
LABEL_87:
        uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v25, v26, v27, v28, v29, 10);
        if (v11) {
          goto LABEL_24;
        }
        goto LABEL_58;
      }
    }
LABEL_62:
    uint64_t v11 = sub_226860774(v88, Mutable, (uint64_t)"%i", v20, v21, v22, v23, v24, 1);
    if (v11) {
      goto LABEL_24;
    }
    int v38 = v12 < 0x6C ? 1 : a4;
    if (!v9 && v38)
    {
      int v39 = v13 == 1 ? v17 : 1;
      if ((v39 & 1) == 0)
      {
        uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i%i%i", v33, v34, v35, v36, v37, 8888);
        if (v11) {
          goto LABEL_24;
        }
      }
      if (((!sub_22687CBC8(a1, 1414745645) | v17) & 1) == 0 && (v13 != 1 || sub_22687CBC8(a1, 1735546692)))
      {
        if (v39)
        {
          uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v33, v34, v35, v36, v37, 8888);
          if (v11) {
            goto LABEL_24;
          }
        }
        uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v33, v34, v35, v36, v37, 8);
        if (v11) {
          goto LABEL_24;
        }
      }
    }
    uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v33, v34, v35, v36, v37, 8888);
    if (v11) {
      goto LABEL_24;
    }
    if (!v10)
    {
      uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v40, v41, v42, v43, v44, 5);
      if (v11) {
        goto LABEL_24;
      }
    }
    uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v40, v41, v42, v43, v44, 7);
    int v50 = v11 | v87 ? 1 : v17;
    BOOL v51 = v13 != 1 || v8;
    if (v50 == 1) {
      goto LABEL_24;
    }
    if (!v51) {
      goto LABEL_24;
    }
    uint64_t v11 = sub_226860774(v88, *a3, (uint64_t)"%i", v45, v46, v47, v48, v49, 8888);
    if (v11) {
      goto LABEL_24;
    }
    if (v10) {
      goto LABEL_58;
    }
    goto LABEL_87;
  }
LABEL_24:
  if (a3 && v11 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
LABEL_28:
  if (v94 < 0) {
    operator delete(v93[0]);
  }
  if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v95.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_2268BB164(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BB1CC(uint64_t a1, char *a2, __CFArray **a3, int a4)
{
  CFDictionaryRef v74 = 0;
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v63 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (Mutable)
  {
    if (!sub_22687CBC8(a1, 1935819842)) {
      goto LABEL_32;
    }
    sub_22689F090(&v73, a2);
    int64_t size = HIBYTE(v73.__r_.__value_.__r.__words[2]);
    int v10 = SHIBYTE(v73.__r_.__value_.__r.__words[2]);
    uint64_t v11 = (void *)v73.__r_.__value_.__r.__words[0];
    if ((v73.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    {
      unsigned int v12 = &v73;
    }
    else
    {
      int64_t size = v73.__r_.__value_.__l.__size_;
      unsigned int v12 = (std::string *)v73.__r_.__value_.__r.__words[0];
    }
    if (size >= 16)
    {
      BOOL v15 = (std::string *)((char *)v12 + size);
      std::string v16 = v12;
      do
      {
        int v17 = (std::string *)memchr(v16, 87, size - 15);
        if (!v17) {
          break;
        }
        if (v17->__r_.__value_.__r.__words[0] == 0x6461722E69466957
          && v17->__r_.__value_.__l.__size_ == 0x2E5D2A5B2E736F69)
        {
          goto LABEL_20;
        }
        std::string v16 = (std::string *)((char *)&v17->__r_.__value_.__l.__data_ + 1);
        int64_t size = (char *)v15 - (char *)v16;
      }
      while ((char *)v15 - (char *)v16 > 15);
      int v17 = v15;
LABEL_20:
      BOOL v13 = v17 != v15 && v17 == v12;
      if (v10 < 0)
      {
LABEL_31:
        operator delete(v11);
        if (!v13)
        {
LABEL_32:
          unsigned __int16 v72 = 0;
          int v70 = 0;
          unsigned int v71 = 0;
          memset(&v73, 0, sizeof(v73));
          sub_22689F090(v68, a2);
          sub_22689F090(__p, "raMd");
          sub_226881624((unsigned __int8 *)v68, (uint64_t)__p, &v73);
          if (v67 < 0) {
            operator delete(__p[0]);
          }
          uint64_t v14 = sub_226888134(a1, (uint64_t)&v73, &v71, 0);
          if (v14) {
            goto LABEL_39;
          }
          sub_22689F090(__p, "wdFl");
          sub_226881624((unsigned __int8 *)v68, (uint64_t)__p, &v73);
          if (v67 < 0) {
            operator delete(__p[0]);
          }
          uint64_t v14 = sub_226888134(a1, (uint64_t)&v73, &v70, 0);
          if (v14) {
            goto LABEL_39;
          }
          uint64_t v14 = sub_22688828C(a1, 1918979139, &v72, 0);
          if (v14) {
            goto LABEL_39;
          }
          int v27 = v70;
          if (!sub_22687CBC8(a1, 1935819842))
          {
            BOOL v28 = sub_22687CBC8(a1, 1094936659);
            if (!v27 && v28)
            {
              uint64_t v14 = sub_226860774(v63, *a3, (uint64_t)"%i", v29, v30, v31, v32, v33, 1000);
              if (v14) {
                goto LABEL_39;
              }
            }
          }
          if (sub_22687CDBC(a1, 1937329234, (CFTypeRef *)&v74, 0)
            || !v74
            || CFDictionaryGetCount(v74) < 1)
          {
            if ((sub_2268A822C(v71) & 1) == 0)
            {
              if (CFArrayGetCount(*a3) < 1
                || (uint64_t v14 = sub_226860774(v63, *a3, (uint64_t)"%i", v38, v39, v40, v41, v42, 8888), !v14))
              {
                uint64_t v43 = 0;
                while (1)
                {
                  if (((unint64_t)v72 >> v43))
                  {
                    if (v43 == 13 && v71 != 1) {
                      goto LABEL_64;
                    }
                    uint64_t v14 = sub_226860774(v63, *a3, (uint64_t)"%i", v38, v39, v40, v41, v42, v43 + 1);
                    if (v14) {
                      goto LABEL_39;
                    }
                  }
                  uint64_t v14 = 0;
                  if (++v43 == 14) {
                    goto LABEL_39;
                  }
                }
              }
              goto LABEL_39;
            }
          }
          else
          {
            uint64_t valuePtr = 0;
            uint64_t v14 = sub_22687AB24(a1, 1937330789, &valuePtr, 0);
            if (v14)
            {
LABEL_39:
              if (v69 < 0) {
                operator delete(v68[0]);
              }
              if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v73.__r_.__value_.__l.__data_);
              }
              goto LABEL_57;
            }
            uint64_t v35 = 0;
            char v36 = 1;
            switch(v71)
            {
              case 1u:
                char v36 = 0;
                uint64_t v35 = @"b_only_channels";
                break;
              case 2u:
                char v36 = 0;
                uint64_t v35 = @"bg_channels";
                break;
              case 3u:
                char v36 = 0;
                uint64_t v35 = @"g_only_channels";
                break;
              case 4u:
                char v36 = 0;
                uint64_t v35 = @"a_only_channels";
                break;
              case 5u:
              case 0xAu:
                char v36 = 0;
                uint64_t v35 = @"an_channels";
                break;
              case 6u:
                char v36 = 0;
                uint64_t v35 = @"bgn_channels";
                break;
              case 7u:
                char v36 = 0;
                uint64_t v35 = @"2_4GHz_n_only_channels";
                break;
              case 8u:
                char v36 = 0;
                uint64_t v35 = @"5GHz_n_only_channels";
                break;
              default:
                break;
            }
            if (sub_2268A822C(v71))
            {
              BOOL v64 = 0;
              sub_22689F090(__p, "raWC");
              sub_226881624((unsigned __int8 *)v68, (uint64_t)__p, &v73);
              if (v67 < 0) {
                operator delete(__p[0]);
              }
              uint64_t v44 = sub_226888348(a1, (uint64_t)&v73, &v64, 0);
              uint64_t v14 = v44;
              if (v64) {
                uint64_t v45 = @"5GHz_wide_channels";
              }
              else {
                uint64_t v45 = @"5GHz_channels";
              }
              if (v44) {
                goto LABEL_39;
              }
            }
            else
            {
              uint64_t v45 = @"2_4GHz_channels";
            }
            if ((sub_2268A8254(v71) | a4) == 1)
            {
              CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(v74, @"regions");
              CFArrayRef v47 = Value;
              if (!Value)
              {
LABEL_111:
                uint64_t v14 = 0;
                goto LABEL_39;
              }
              CFIndex Count = CFArrayGetCount(Value);
              if (Count >= 1)
              {
                CFIndex v49 = 0;
                do
                {
                  CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(v47, v49);
                  CFDictionaryRef v51 = ValueAtIndex;
                  if (!ValueAtIndex) {
                    goto LABEL_111;
                  }
                  CFNumberRef v52 = (const __CFNumber *)CFDictionaryGetValue(ValueAtIndex, @"region");
                  if (!v52) {
                    goto LABEL_111;
                  }
                  CFNumberGetValue(v52, kCFNumberIntType, (char *)&valuePtr + 4);
                  if (HIDWORD(valuePtr) == valuePtr)
                  {
                    if ((v36 & 1) != 0
                      || (CFArrayRef v53 = (const __CFArray *)CFDictionaryGetValue(v51, v35), (v54 = v53) == 0)
                      || !CFArrayGetCount(v53))
                    {
                      CFArrayRef v54 = (const __CFArray *)CFDictionaryGetValue(v51, v45);
                      if (!v54) {
                        goto LABEL_111;
                      }
                    }
                    CFIndex v55 = CFArrayGetCount(v54);
                    if (!v55) {
                      break;
                    }
                    if (CFArrayGetCount(*a3) < 1
                      || (uint64_t v14 = sub_226860774(v63, *a3, (uint64_t)"%i", v56, v57, v58, v59, v60, 8888), !v14))
                    {
                      if (v55 < 1) {
                        break;
                      }
                      CFIndex v61 = 0;
                      while (1)
                      {
                        uint64_t v62 = CFArrayGetValueAtIndex(v54, v61);
                        if (!v62) {
                          goto LABEL_111;
                        }
                        CFArrayAppendValue(*a3, v62);
                        if (v55 == ++v61) {
                          goto LABEL_64;
                        }
                      }
                    }
                    goto LABEL_39;
                  }
                }
                while (Count != ++v49);
              }
            }
          }
LABEL_64:
          uint64_t v14 = 0;
          goto LABEL_39;
        }
LABEL_28:
        v73.__r_.__value_.__s.__data_[0] = 0;
        uint64_t v20 = sub_22688CDC0(a1, &v73, 0, 0);
        if (!v20)
        {
          uint64_t v26 = *a3;
          if (v73.__r_.__value_.__s.__data_[0]) {
            uint64_t v20 = sub_226860774(v63, v26, (uint64_t)"%i", v21, v22, v23, v24, v25, 2000);
          }
          else {
            uint64_t v20 = sub_226860774(v63, v26, (uint64_t)"%i%i", v21, v22, v23, v24, v25, 1000);
          }
        }
        uint64_t v14 = v20;
        goto LABEL_57;
      }
    }
    else
    {
      BOOL v13 = 0;
      if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_31;
      }
    }
    if (!v13) {
      goto LABEL_32;
    }
    goto LABEL_28;
  }
  uint64_t v14 = 4294967293;
LABEL_57:
  if (v74)
  {
    CFRelease(v74);
    CFDictionaryRef v74 = 0;
  }
  if (v14 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v14;
}

void sub_2268BB8A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BB948(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v11 = sub_226860774(v4, Mutable, (uint64_t)"%i%i", v6, v7, v8, v9, v10, 0);
  if (v11 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v11;
}

uint64_t sub_2268BB9E4(uint64_t a1, char *a2, CFTypeRef *a3)
{
  sub_22689F090(&v19, "WiFi.radios.[*].");
  sub_22689F090(&__p, a2);
  int v16 = 0;
  if (a3)
  {
    CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
    *a3 = Mutable;
    if (Mutable)
    {
      sub_226880920((unsigned __int8 *)&v19, 1651723853, &v19);
      uint64_t v13 = sub_226888134(a1, (uint64_t)&v19, &v16, 0);
      if (v13
        || (v16 != 3 && v16
          ? (uint64_t v14 = sub_226860774(v6, (__CFArray *)*a3, (uint64_t)"%i%i", v8, v9, v10, v11, v12, 6))
          : (uint64_t v14 = sub_226860774(v6, (__CFArray *)*a3, (uint64_t)"%i%i%i", v8, v9, v10, v11, v12, 6)),
            uint64_t v13 = v14,
            v14))
      {
        if (*a3)
        {
          CFRelease(*a3);
          *a3 = 0;
        }
      }
    }
    else
    {
      uint64_t v13 = 4294967293;
    }
  }
  else
  {
    uint64_t v13 = 4294967292;
  }
  if (v18 < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return v13;
}

void sub_2268BBB40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BBB74(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v11 = sub_226860774(v4, Mutable, (uint64_t)"%i%i%i%i%i", v6, v7, v8, v9, v10, 0);
  if (v11 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v11;
}

uint64_t sub_2268BBC24(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v11 = sub_226860774(v4, Mutable, (uint64_t)"%i%i%i", v6, v7, v8, v9, v10, 0);
  if (v11 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v11;
}

uint64_t sub_2268BBCC8(uint64_t a1, uint64_t a2, CFTypeRef *a3, int a4)
{
  sub_22689F090(&__p, "WiFi.radios.[*].");
  int v22 = 0;
  if (a3)
  {
    CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
    *a3 = Mutable;
    if (Mutable)
    {
      sub_226880920((unsigned __int8 *)&__p, 1651723853, &__p);
      uint64_t v14 = sub_226888134(a1, (uint64_t)&__p, &v22, 0);
      if (v14
        || (!v22 ? (BOOL v15 = !sub_22688CFF0(a1)) : (BOOL v15 = 1),
            (uint64_t v14 = sub_226860774(v7, (__CFArray *)*a3, (uint64_t)"%i", v9, v10, v11, v12, v13, 0), v14)
         || v15 && (uint64_t v14 = sub_226860774(v7, (__CFArray *)*a3, (uint64_t)"%i", v16, v17, v18, v19, v20, 1), v14)
         || a4 && (uint64_t v14 = sub_226860774(v7, (__CFArray *)*a3, (uint64_t)"%i", v16, v17, v18, v19, v20, 2), v14)
         || (uint64_t v14 = sub_226860774(v7, (__CFArray *)*a3, (uint64_t)"%i", v16, v17, v18, v19, v20, 3), v14)))
      {
        if (*a3)
        {
          CFRelease(*a3);
          *a3 = 0;
        }
      }
    }
    else
    {
      uint64_t v14 = 4294967293;
    }
  }
  else
  {
    uint64_t v14 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v14;
}

void sub_2268BBE64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BBE80(uint64_t a1, char *a2, __CFArray **a3, int a4)
{
  sub_22689F090(&__p, a2);
  unsigned int v37 = 0;
  if (!a3)
  {
    uint64_t v14 = 4294967292;
    goto LABEL_9;
  }
  CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable)
  {
    uint64_t v14 = 4294967293;
    goto LABEL_9;
  }
  uint64_t v14 = sub_226860774(v7, Mutable, (uint64_t)"%i", v9, v10, v11, v12, v13, 0);
  if (v14) {
    goto LABEL_27;
  }
  uint64_t v14 = sub_22687AB24(a1, 1937326416, &v37, 0);
  if (v14) {
    goto LABEL_27;
  }
  if ((sub_22687CBC8(a1, 1464095533) & a4) == 1)
  {
    uint64_t v14 = sub_226860774(v7, *a3, (uint64_t)"%i", v16, v17, v18, v19, v20, 10);
    if (v14) {
      goto LABEL_27;
    }
  }
  if (sub_22687CBC8(a1, 1112757313))
  {
    int v21 = sub_22683C4F8(v37);
    if (v21 == 4 || v21 == 10 || a4)
    {
      uint64_t v14 = sub_226860774(v7, *a3, (uint64_t)"%i", v22, v23, v24, v25, v26, 1);
      if (v14) {
        goto LABEL_27;
      }
    }
  }
  if (sub_22687CBC8(a1, 1146569811))
  {
    uint64_t v14 = sub_226860774(v7, *a3, (uint64_t)"%i", v27, v28, v29, v30, v31, 20);
    if (v14) {
      goto LABEL_27;
    }
  }
  if (!sub_22687CBC8(a1, 1147761495))
  {
    uint64_t v14 = 0;
    goto LABEL_9;
  }
  uint64_t v14 = sub_226860774(v7, *a3, (uint64_t)"%i%i", v32, v33, v34, v35, v36, 8888);
  if (v14)
  {
LABEL_27:
    if (*a3)
    {
      CFRelease(*a3);
      *a3 = 0;
    }
  }
LABEL_9:
  if (v39 < 0) {
    operator delete(__p);
  }
  return v14;
}

void sub_2268BC080(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BC0A0(uint64_t a1, uint64_t a2, __CFArray **a3, int a4)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v14 = sub_226860774(v7, Mutable, (uint64_t)"%i", v9, v10, v11, v12, v13, 0);
  if (!v14)
  {
    uint64_t v20 = sub_22687CBC8(a1, 1950434124) ? 3 : 1;
    uint64_t v14 = sub_226860774(v7, *a3, (uint64_t)"%i", v15, v16, v17, v18, v19, v20);
    if (!v14)
    {
      if (!a4) {
        return 0;
      }
      uint64_t v14 = sub_226860774(v7, *a3, (uint64_t)"%i", v21, v22, v23, v24, v25, 2);
      if (!v14) {
        return v14;
      }
    }
  }
  if (*a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v14;
}

uint64_t sub_2268BC1C4(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v11 = sub_226860774(v4, Mutable, (uint64_t)"%i%i%i%i%i%i%i%i", v6, v7, v8, v9, v10, 900);
  if (v11 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v11;
}

uint64_t sub_2268BC284(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v11 = sub_226860774(v4, Mutable, (uint64_t)"%i%i%i", v6, v7, v8, v9, v10, 0);
  if (v11 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v11;
}

uint64_t sub_2268BC328(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v11 = sub_226860774(v4, Mutable, (uint64_t)"%i%i%i", v6, v7, v8, v9, v10, 0);
  if (v11 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v11;
}

uint64_t sub_2268BC3CC(uint64_t a1, uint64_t a2, CFMutableArrayRef *a3, char a4)
{
  if (!a3) {
    return 4294967292;
  }
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  if (a4)
  {
    uint64_t result = sub_2268C6EEC((uint64_t)Mutable, v7, v8);
    if (!result) {
      return result;
    }
    CFArrayRef v10 = (const __CFArray *)result;
    uint64_t v11 = *a3;
    v14.CFIndex length = CFArrayGetCount((CFArrayRef)result);
    v14.locatiouint64_t n = 0;
    CFArrayAppendArray(v11, v10, v14);
  }
  else
  {
    uint64_t v12 = *(unsigned int *)",";
    if (*(_DWORD *)",")
    {
      uint64_t v13 = (const void **)off_268147678;
      do
      {
        if (*v13) {
          CFArrayAppendValue(*a3, *v13);
        }
        v13 += 2;
        --v12;
      }
      while (v12);
    }
  }
  return 0;
}

uint64_t sub_2268BC49C(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  BOOL v5 = sub_22687CBC8(a1, 1852788045);
  sub_22689F090(&__p, "WiFi.radios.[*].");
  int v20 = 0;
  if (a3)
  {
    CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
    *a3 = Mutable;
    if (Mutable)
    {
      uint64_t v18 = sub_226860774(v6, Mutable, (uint64_t)"%i", v8, v9, v10, v11, v12, 1);
      if (v18
        || !v5
        && ((sub_226880920((unsigned __int8 *)&__p, 1651718221, &__p),
             uint64_t v18 = sub_226888134(a1, (uint64_t)&__p, &v20, 0),
             v18)
         || (v20 - 7) >= 2
         && v20 != 524295
         && (uint64_t v18 = sub_226860774(v6, (__CFArray *)*a3, (uint64_t)"%i", v13, v14, v15, v16, v17, 5), v18))
        || (uint64_t v18 = sub_226860774(v6, (__CFArray *)*a3, (uint64_t)"%i", v13, v14, v15, v16, v17, 7), v18))
      {
        if (*a3)
        {
          CFRelease(*a3);
          *a3 = 0;
        }
      }
    }
    else
    {
      uint64_t v18 = 4294967293;
    }
  }
  else
  {
    uint64_t v18 = 4294967292;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v18;
}

void sub_2268BC624(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BC640(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v4 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  uint64_t v11 = sub_226860774(v4, Mutable, (uint64_t)"%i%i%i", v6, v7, v8, v9, v10, 0);
  if (v11 && *a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v11;
}

uint64_t sub_2268BC6E4(uint64_t a1, uint64_t a2, __CFArray **a3, int a4)
{
  if (!a3) {
    return 4294967292;
  }
  CFAllocatorRef v7 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *a3 = Mutable;
  if (!Mutable) {
    return 4294967293;
  }
  if (sub_22688E4B8(a1))
  {
    uint64_t v14 = *a3;
    uint64_t v15 = 2;
    goto LABEL_5;
  }
  int v20 = 0;
  BOOL v17 = sub_22687CBC8(a1, 1347437878);
  uint64_t v16 = sub_22687AB24(a1, 1651722563, &v20, 0);
  if (!v16)
  {
    BOOL v19 = v20 != 2 || v17;
    if (!v19 && !a4 || (uint64_t v16 = sub_226860774(v7, *a3, (uint64_t)"%i", v9, v10, v11, v12, v13, 0), !v16))
    {
      uint64_t v14 = *a3;
      uint64_t v15 = 1;
LABEL_5:
      uint64_t v16 = sub_226860774(v7, v14, (uint64_t)"%i", v9, v10, v11, v12, v13, v15);
      if (!v16) {
        return v16;
      }
    }
  }
  if (*a3)
  {
    CFRelease(*a3);
    *a3 = 0;
  }
  return v16;
}

uint64_t sub_2268BC820(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  sub_22683C448(a2, v15);
  int v8 = sub_22688035C(a2) ^ 1;
  if (a2 == 1633899617) {
    LOBYTE(v8) = 0;
  }
  if (v8)
  {
    if ((sub_226882198(a1, a2) & 1) == 0) {
      return sub_2268BC9FC(a1, v15, a3, a4);
    }
    return 0;
  }
  memset(&__p, 0, sizeof(__p));
  CFIndex v9 = sub_2268801D8(a1, 0);
  if (v9 <= 0) {
    return 0;
  }
  LODWORD(v10) = 0;
  while (1)
  {
    if ((sub_2268A7C60(v16, 0x11uLL),
          MEMORY[0x22A65ABB0](&__p, v16),
          sub_226880920((unsigned __int8 *)&__p, a2, &__p),
          a2 != 2003061875)
      && a2 != 1651726157
      || v10 == sub_226880258(a1, 0))
    {
      uint64_t v11 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? &__p
          : (std::string *)__p.__r_.__value_.__r.__words[0];
      uint64_t v12 = sub_2268BC9FC(a1, (const char *)v11, a3, a4);
      if (v12) {
        break;
      }
    }
    CFIndex v10 = (v10 + 1);
    if (v9 <= v10)
    {
      uint64_t v12 = 0;
      break;
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v12;
}

void sub_2268BC9D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_2268BC9FC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  signed int v8 = sub_22688BA8C(a2);
  uint64_t v9 = *(void *)(qword_268148390 + 8);
  if (!v9) {
    return 4294967292;
  }
  uint64_t v10 = qword_268148390 + 8;
  do
  {
    signed int v11 = *(_DWORD *)(v9 + 32);
    BOOL v12 = v11 < v8;
    if (v11 >= v8) {
      uint64_t v13 = (uint64_t *)v9;
    }
    else {
      uint64_t v13 = (uint64_t *)(v9 + 8);
    }
    if (!v12) {
      uint64_t v10 = v9;
    }
    uint64_t v9 = *v13;
  }
  while (*v13);
  if (v10 == qword_268148390 + 8 || v8 < *(_DWORD *)(v10 + 32)) {
    return 4294967292;
  }
  uint64_t v15 = *(uint64_t (**)(uint64_t, const char *, uint64_t, uint64_t))(*(void *)(v10 + 40) + 40);
  if (!v15) {
    return 0;
  }

  return v15(a1, a2, a3, a4);
}

uint64_t sub_2268BCAC8(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(v14, a2);
  std::string __p = 0;
  unint64_t v12 = 0;
  uint64_t v13 = 0;
  sub_226880920((unsigned __int8 *)v14, 1937329773, &v16);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v16, (uint64_t)&__p, 0);
  if (!v7)
  {
    int v8 = 1732604483;
    if (SHIBYTE(v13) < 0)
    {
      unint64_t v9 = v12;
      if (v12 > 0x40)
      {
LABEL_8:
        sub_2268BCC08(1937329773, v8, a3, a4);
        goto LABEL_9;
      }
    }
    else
    {
      unint64_t v9 = HIBYTE(v13);
      if (HIBYTE(v13) > 0x40u) {
        goto LABEL_8;
      }
    }
    if (v9) {
      goto LABEL_9;
    }
    int v8 = 1732604481;
    goto LABEL_8;
  }
LABEL_9:
  if (SHIBYTE(v13) < 0) {
    operator delete(__p);
  }
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BCBC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2268BCC08(int a1, int a2, void **a3, uint64_t *a4)
{
  uint64_t result = (char *)*a3;
  if (!*a3)
  {
    uint64_t result = (char *)malloc_type_malloc(8uLL, 0x100004000313F17uLL);
    *a3 = result;
    if (!result) {
      return result;
    }
    goto LABEL_10;
  }
  uint64_t v9 = *a4;
  if (*a4 < 1)
  {
LABEL_7:
    uint64_t result = (char *)malloc_type_realloc(result, 8 * v9 + 8, 0x100004000313F17uLL);
    if (!result) {
      return result;
    }
    *a3 = result;
LABEL_10:
    uint64_t v11 = *a4;
    unint64_t v12 = &result[8 * *a4];
    *(_DWORD *)unint64_t v12 = a1;
    *((_DWORD *)v12 + 1) = a2;
    *a4 = v11 + 1;
    return result;
  }
  uint64_t v10 = (char *)*a3;
  while (*((_DWORD *)v10 + 1) != a2 || *(_DWORD *)v10 != a1)
  {
    v10 += 8;
    if (v10 >= &result[8 * v9]) {
      goto LABEL_7;
    }
  }
  return result;
}

uint64_t sub_2268BCCD8(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v14, 0, sizeof(v14));
  sub_22689F090(v12, a2);
  memset(&__p, 0, sizeof(__p));
  sub_226880920((unsigned __int8 *)v12, 1937330263, &v14);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v14, (uint64_t)&__p, 0);
  if (!v7)
  {
    int v8 = 1732604483;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      if (__p.__r_.__value_.__l.__size_ > 0x20)
      {
LABEL_9:
        sub_2268BCC08(1937330263, v8, a3, a4);
        goto LABEL_10;
      }
    }
    else
    {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      if (HIBYTE(__p.__r_.__value_.__r.__words[2]) > 0x20u) {
        goto LABEL_9;
      }
    }
    if (!size && !*(unsigned char *)(a1 + 193))
    {
      int v8 = 1732604481;
      goto LABEL_9;
    }
    if (!std::string::compare(&__p, "public")
      && sub_22687CBC8(a1, 1400460148)
      && !sub_2268BCE68(a1, 1886741072))
    {
      int v8 = 1886741072;
      goto LABEL_9;
    }
  }
LABEL_10:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BCE24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BCE68(uint64_t a1, int a2)
{
  CFDictionaryRef theDict = 0;
  int v16 = 0;
  sub_22687CDBC(a1, 1937328487, (CFTypeRef *)&theDict, 0);
  if (!theDict) {
    return 0;
  }
  CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(theDict, @"problems");
  if (Value)
  {
    CFStringRef v4 = (const __CFString *)Value;
    CFIndex Count = CFArrayGetCount(Value);
    if (Count >= 1)
    {
      CFIndex v11 = Count;
      for (uint64_t i = 0; v11 != i; ++i)
      {
        sub_22686088C(v4, (uint64_t)&v16, (UInt8 *)"[*].%kO:code", v6, v7, v8, v9, v10, i);
        if (v13) {
          break;
        }
        if (v16 == a2)
        {
          uint64_t v14 = 1;
          goto LABEL_9;
        }
      }
    }
  }
  uint64_t v14 = 0;
LABEL_9:
  if (theDict) {
    CFRelease(theDict);
  }
  return v14;
}

uint64_t sub_2268BCF50(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(v13, a2);
  std::string __p = 0;
  unint64_t v11 = 0;
  uint64_t v12 = 0;
  sub_226880920((unsigned __int8 *)v13, 1937326964, &v15);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v15, (uint64_t)&__p, 0);
  if (!v7)
  {
    unint64_t v8 = HIBYTE(v12);
    if (v12 < 0) {
      unint64_t v8 = v11;
    }
    if (v8 >= 0x41) {
      sub_2268BCC08(1937326964, 1732604483, a3, a4);
    }
  }
  if (SHIBYTE(v12) < 0) {
    operator delete(__p);
  }
  if (v14 < 0) {
    operator delete(v13[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BD03C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BD080(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(v13, a2);
  std::string __p = 0;
  unint64_t v11 = 0;
  uint64_t v12 = 0;
  sub_226880920((unsigned __int8 *)v13, 1937329263, &v15);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v15, (uint64_t)&__p, 0);
  char v8 = HIBYTE(v12);
  if (!v7 && SHIBYTE(v12) < 0 && v11 > 0x80)
  {
    sub_2268BCC08(1937329263, 1732604483, a3, a4);
    char v8 = HIBYTE(v12);
  }
  if (v8 < 0) {
    operator delete(__p);
  }
  if (v14 < 0) {
    operator delete(v13[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BD164(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BD1A8(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(v14, a2);
  if (sub_22687CBC8(a1, 2000834122))
  {
    BOOL v13 = 0;
    std::string __p = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    sub_226880920((unsigned __int8 *)v14, 2002929742, &v16);
    uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v16, (uint64_t)&__p, 0);
    if (!v7)
    {
      sub_226880920((unsigned __int8 *)v14, 2002929006, &v16);
      uint64_t v7 = sub_226888348(a1, (uint64_t)&v16, &v13, 0);
      if (!v7 && v13)
      {
        uint64_t v8 = HIBYTE(v12);
        if (v12 < 0) {
          uint64_t v8 = v11;
        }
        if (!v8) {
          sub_2268BCC08(2002929742, 1732604482, a3, a4);
        }
        uint64_t v7 = 0;
      }
    }
    if (SHIBYTE(v12) < 0) {
      operator delete(__p);
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BD2EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BD338(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v14, 0, sizeof(v14));
  sub_22689F090(__p, a2);
  __int16 v11 = 0;
  sub_226880920((unsigned __int8 *)__p, 2002927939, &v14);
  uint64_t v7 = sub_226888348(a1, (uint64_t)&v14, (BOOL *)&v11 + 1, 0);
  if (!v7)
  {
    sub_226880920((unsigned __int8 *)__p, 2002929006, &v14);
    uint64_t v7 = sub_226888348(a1, (uint64_t)&v14, (BOOL *)&v11, 0);
    if (!v7)
    {
      BOOL v8 = sub_22687CBC8(a1, 2000834122);
      uint64_t v7 = 0;
      BOOL v9 = HIBYTE(v11) && v8;
      if (v9 && !(_BYTE)v11)
      {
        sub_2268BCC08(2002927939, 1918320962, a3, a4);
        uint64_t v7 = 0;
      }
    }
  }
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BD458(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BD48C(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v17, 0, sizeof(v17));
  sub_22689F090(v15, a2);
  std::string __p = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  unsigned int v11 = 0;
  sub_226880920((unsigned __int8 *)v15, 1936474988, &v17);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v17, (uint64_t)&__p, 0);
  if (!v7)
  {
    if (SHIBYTE(v14) < 0)
    {
      if (!v13) {
        goto LABEL_15;
      }
      p_p = (char *)__p;
    }
    else
    {
      if (!HIBYTE(v14)) {
        goto LABEL_15;
      }
      p_p = (char *)&__p;
    }
    uint64_t v7 = sub_22686EA18(p_p, 0, &v11, 0, 0, 0, 0);
    if (v7) {
      goto LABEL_16;
    }
    if (sub_22687CBC8(a1, 1400468300))
    {
      if (!v11) {
        goto LABEL_15;
      }
      int v9 = 1936474953;
      if (v11 + 1 >= 2 && HIBYTE(v11) - 225 > 0xDu) {
        goto LABEL_15;
      }
    }
    else
    {
      int v9 = 1732604484;
    }
    sub_2268BCC08(1936474988, v9, a3, a4);
LABEL_15:
    uint64_t v7 = 0;
  }
LABEL_16:
  if (SHIBYTE(v14) < 0) {
    operator delete(__p);
  }
  if (v16 < 0) {
    operator delete(v15[0]);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BD5EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BD630(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v13, 0, sizeof(v13));
  sub_22689F090(__p, a2);
  unsigned int v10 = 0;
  sub_226880920((unsigned __int8 *)__p, 1936488044, &v13);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v13, &v10, 0);
  if (!v7 && v10)
  {
    if (sub_22687CBC8(a1, 1400468300))
    {
      if (v10 < 8) {
        goto LABEL_8;
      }
      int v8 = 1936477257;
    }
    else
    {
      int v8 = 1732604484;
    }
    sub_2268BCC08(1936488044, v8, a3, a4);
  }
LABEL_8:
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BD720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BD754(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v18, 0, sizeof(v18));
  sub_22689F090(v16, a2);
  std::string v13 = 0;
  unint64_t v14 = 0;
  uint64_t v15 = 0;
  sub_22689F090(__p, "raNm");
  sub_226881624((unsigned __int8 *)v16, (uint64_t)__p, &v18);
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v18, (uint64_t)&v13, 0);
  if (!v7)
  {
    int v8 = 1732604483;
    if (SHIBYTE(v15) < 0)
    {
      unint64_t v9 = v14;
      if (v14 > 0x20)
      {
LABEL_10:
        sub_2268BCC08(1918979693, v8, a3, a4);
        goto LABEL_11;
      }
    }
    else
    {
      unint64_t v9 = HIBYTE(v15);
      if (HIBYTE(v15) >= 0x21u) {
        goto LABEL_10;
      }
    }
    if (v9) {
      goto LABEL_11;
    }
    int v8 = 1732604481;
    goto LABEL_10;
  }
LABEL_11:
  if (SHIBYTE(v15) < 0) {
    operator delete(v13);
  }
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BD86C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v26 - 33) < 0) {
    operator delete(*(void **)(v26 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BD8CC(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v25, 0, sizeof(v25));
  sub_22689F090(v23, a2);
  uint64_t v21 = 0;
  CFDataRef theData = 0;
  BOOL v19 = 0;
  uint64_t v20 = 0;
  uint64_t v18 = 0;
  __int16 v17 = 0;
  sub_22689F090(__p, "raSt");
  sub_226881624((unsigned __int8 *)v23, (uint64_t)__p, &v25);
  if (v16 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v25, &v18, 0);
  if (!v7 && v18 != 3)
  {
    sub_22689F090(__p, "raWE");
    sub_226881624((unsigned __int8 *)v23, (uint64_t)__p, &v25);
    if (v16 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_2268820DC(a1, (uint64_t)&v25, &theData, 0);
    if (!v7)
    {
      sub_22689F090(__p, "raCr");
      sub_226881624((unsigned __int8 *)v23, (uint64_t)__p, &v25);
      if (v16 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v25, (uint64_t)&v19, 0);
      if (!v7)
      {
        sub_22689F090(__p, "raWM");
        sub_226881624((unsigned __int8 *)v23, (uint64_t)__p, &v25);
        if (v16 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v7 = sub_226888134(a1, (uint64_t)&v25, (char *)&v18 + 4, 0);
        if (!v7)
        {
          sub_22689F090(__p, "raEA");
          sub_226881624((unsigned __int8 *)v23, (uint64_t)__p, &v25);
          if (v16 < 0) {
            operator delete(__p[0]);
          }
          uint64_t v7 = sub_226888348(a1, (uint64_t)&v25, (BOOL *)&v17 + 1, 0);
          if (!v7)
          {
            sub_22689F090(__p, "rTSN");
            sub_226881624((unsigned __int8 *)v23, (uint64_t)__p, &v25);
            if (v16 < 0) {
              operator delete(__p[0]);
            }
            uint64_t v7 = sub_226888348(a1, (uint64_t)&v25, (BOOL *)&v17, 0);
            if (!v7)
            {
              if ((HIDWORD(v18) - 3) >= 3)
              {
                if (HIDWORD(v18) == 2)
                {
                  if (CFDataGetLength(theData) == 13)
                  {
LABEL_42:
                    uint64_t v7 = 0;
                    goto LABEL_43;
                  }
                  int v11 = 1769419083;
                }
                else
                {
                  if (HIDWORD(v18) != 1 || CFDataGetLength(theData) == 5) {
                    goto LABEL_42;
                  }
                  int v11 = 1769419851;
                }
              }
              else
              {
                BOOL v8 = sub_22687CBC8(a1, 1414745645);
                if ((_BYTE)v17) {
                  BOOL v9 = v8;
                }
                else {
                  BOOL v9 = 0;
                }
                if (v9)
                {
                  uint64_t v10 = HIBYTE(v21);
                  if (v21 < 0) {
                    uint64_t v10 = v20;
                  }
                  if (v10 == 13) {
                    goto LABEL_42;
                  }
                  int v11 = 1767134030;
                }
                else
                {
                  if (HIBYTE(v17)) {
                    goto LABEL_42;
                  }
                  CFIndex Length = CFDataGetLength(theData);
                  int v11 = 1767329857;
                  if (Length == 32)
                  {
                    uint64_t v13 = HIBYTE(v21);
                    if (v21 < 0) {
                      uint64_t v13 = v20;
                    }
                    if (v13) {
                      goto LABEL_42;
                    }
                  }
                }
              }
              sub_2268BCC08(1651725131, v11, a3, a4);
              goto LABEL_42;
            }
          }
        }
      }
    }
  }
LABEL_43:
  if (theData)
  {
    CFRelease(theData);
    CFDataRef theData = 0;
  }
  if (SHIBYTE(v21) < 0) {
    operator delete(v19);
  }
  if (v24 < 0) {
    operator delete(v23[0]);
  }
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v25.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BDC34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (*(char *)(v30 - 33) < 0) {
    operator delete(*(void **)(v30 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BDCBC(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v20, 0, sizeof(v20));
  sub_22689F090(v18, a2);
  BOOL v17 = 0;
  int v15 = 0;
  unsigned int v16 = 0;
  sub_22689F090(__p, "raSt");
  sub_226881624((unsigned __int8 *)v18, (uint64_t)__p, &v20);
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v20, &v15, 0);
  if (!v7)
  {
    sub_22689F090(__p, "raWM");
    sub_226881624((unsigned __int8 *)v18, (uint64_t)__p, &v20);
    if (v14 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v20, &v16, 0);
    if (!v7)
    {
      sub_22689F090(__p, "raEA");
      sub_226881624((unsigned __int8 *)v18, (uint64_t)__p, &v20);
      if (v14 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v7 = sub_226888348(a1, (uint64_t)&v20, &v17, 0);
      if (!(v7 | v15))
      {
        BOOL v8 = sub_22687CBC8(a1, 1400460148);
        unsigned int v9 = v16;
        if (v16) {
          BOOL v10 = 0;
        }
        else {
          BOOL v10 = v8;
        }
        if (v10)
        {
          if (sub_2268BCE68(a1, 1869631063))
          {
LABEL_29:
            uint64_t v7 = 0;
            goto LABEL_30;
          }
          int v11 = 1869631063;
LABEL_28:
          sub_2268BCC08(1651725133, v11, a3, a4);
          goto LABEL_29;
        }
        int v11 = 2004045141;
        if (v16 == 4)
        {
          if (!sub_22687CBC8(a1, 1095062317)) {
            goto LABEL_28;
          }
          unsigned int v9 = v16;
        }
        if (v9 == 3)
        {
          if (!sub_22687CBC8(a1, 1464877357)) {
            goto LABEL_28;
          }
          unsigned int v9 = v16;
        }
        if (v9 == 5)
        {
          if (!sub_22687CBC8(a1, 1095062317)) {
            goto LABEL_28;
          }
          unsigned int v9 = v16;
        }
        uint64_t v7 = 0;
        if (v17 && v9 <= 2)
        {
          int v11 = 1732604485;
          goto LABEL_28;
        }
      }
    }
  }
LABEL_30:
  if (v19 < 0) {
    operator delete(v18[0]);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BDF00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (*(char *)(v23 - 33) < 0) {
    operator delete(*(void **)(v23 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BDF60(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v17, 0, sizeof(v17));
  sub_22689F090(v15, a2);
  BOOL v14 = 0;
  sub_22689F090(__p, "raCA");
  sub_226881624((unsigned __int8 *)v15, (uint64_t)__p, &v17);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = sub_226888348(a1, (uint64_t)&v17, &v14, 0);
  if (!v7)
  {
    if (v14)
    {
      if (!sub_22687CBC8(a1, 1094936659)) {
        sub_2268BCC08(1651724867, 1633898067, a3, a4);
      }
      goto LABEL_7;
    }
    unsigned int v11 = 0;
    unsigned __int16 v10 = 0;
    int v9 = 0;
    sub_22689F090(__p, "raMd");
    sub_226881624((unsigned __int8 *)v15, (uint64_t)__p, &v17);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v17, &v11, 0);
    if (!v7)
    {
      if (v11 != 9)
      {
        uint64_t v7 = sub_22688828C(a1, 1918979139, &v10, 0);
        if (v7) {
          goto LABEL_11;
        }
        sub_22689F090(__p, "raCh");
        sub_226881624((unsigned __int8 *)v15, (uint64_t)__p, &v17);
        if (v13 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v7 = sub_226888134(a1, (uint64_t)&v17, &v9, 0);
        if (v7) {
          goto LABEL_11;
        }
        if (sub_2268A822C(v11))
        {
          if ((v9 - 166) < 0xFFFFFF7C) {
            goto LABEL_25;
          }
        }
        else if ((((unint64_t)v10 >> (v9 - 1)) & 1) == 0)
        {
LABEL_25:
          sub_2268BCC08(1651724867, 1732604485, a3, a4);
        }
      }
LABEL_7:
      uint64_t v7 = 0;
    }
  }
LABEL_11:
  if (v16 < 0) {
    operator delete(v15[0]);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BE180(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (*(char *)(v23 - 33) < 0) {
    operator delete(*(void **)(v23 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BE1E4()
{
  return 0;
}

uint64_t sub_2268BE1EC()
{
  return 0;
}

uint64_t sub_2268BE1F4(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(v14, a2);
  unsigned __int16 v13 = 0;
  sub_22689F090(__p, "raPo");
  sub_226881624((unsigned __int8 *)v14, (uint64_t)__p, &v16);
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = sub_226888224(a1, (uint64_t)&v16, &v13, 0);
  if (!v7 && v13 != 100)
  {
    BOOL v8 = sub_22687CBC8(a1, 1417171063);
    int v9 = 1732604484;
    if (v8)
    {
      if (v13 <= 0x64u)
      {
        if (v13 > 3u) {
          goto LABEL_11;
        }
        int v9 = 1732604487;
      }
      else
      {
        int v9 = 1732604486;
      }
    }
    sub_2268BCC08(1918980207, v9, a3, a4);
  }
LABEL_11:
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BE30C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BE35C(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(v14, a2);
  int v13 = 0;
  sub_22689F090(__p, "raSt");
  sub_226881624((unsigned __int8 *)v14, (uint64_t)__p, &v16);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v16, &v13, 0);
  if (!v7)
  {
    BOOL v12 = 0;
    if (sub_22687CBC8(a1, 1146569811))
    {
      sub_22689F090(__p, "dWDS");
      sub_226881624((unsigned __int8 *)v14, (uint64_t)__p, &v16);
      if (v11 < 0) {
        operator delete(__p[0]);
      }
      sub_226888348(a1, (uint64_t)&v16, &v12, 0);
    }
    if (v13 == 3)
    {
      if (sub_22687CBC8(a1, 1147761495)) {
        goto LABEL_4;
      }
      int v9 = 2003062355;
    }
    else
    {
      if (v13 != 1 || v12 || sub_22687CBC8(a1, 1112757313)) {
        goto LABEL_4;
      }
      int v9 = 1936543315;
    }
    sub_2268BCC08(1918980980, v9, a3, a4);
  }
LABEL_4:
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BE4E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BE53C(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(__p, a2);
  uint64_t v12 = 0;
  __int16 v11 = 0;
  BOOL v10 = 0;
  int v9 = 0;
  sub_226880920((unsigned __int8 *)__p, 2002862934, &v15);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v15, (char *)&v12 + 4, 0);
  if (!v7)
  {
    sub_226880920((unsigned __int8 *)__p, 2002864494, &v15);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v15, &v12, 0);
    if (!v7 && v12 == 16)
    {
      if ((v12 & 0x80000000000) != 0)
      {
LABEL_18:
        uint64_t v7 = 0;
        goto LABEL_2;
      }
      sub_226880920((unsigned __int8 *)__p, 1918979649, &v15);
      uint64_t v7 = sub_226888348(a1, (uint64_t)&v15, (BOOL *)&v11 + 1, 0);
      if (!v7)
      {
        sub_226880920((unsigned __int8 *)__p, 1918977107, &v15);
        uint64_t v7 = sub_226888348(a1, (uint64_t)&v15, (BOOL *)&v11, 0);
        if (!v7)
        {
          sub_226880920((unsigned __int8 *)__p, 912483943, &v15);
          uint64_t v7 = sub_226888134(a1, (uint64_t)&v15, &v9, 0);
          if (!v7)
          {
            sub_226880920((unsigned __int8 *)__p, 912356724, &v15);
            uint64_t v7 = sub_226888348(a1, (uint64_t)&v15, &v10, 0);
            if (!v7 && (~HIDWORD(v12) & 0x300) == 0 && !HIBYTE(v11) && (_BYTE)v11)
            {
              sub_2268BCC08(2002862934, 1145590644, a3, a4);
              goto LABEL_18;
            }
          }
        }
      }
    }
  }
LABEL_2:
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BE730(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BE764(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(v13, a2);
  uint64_t v12 = 0;
  sub_22689F090(__p, "raKT");
  sub_226881624((unsigned __int8 *)v13, (uint64_t)__p, &v15);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v15, (char *)&v12 + 4, 0);
  if (!v7)
  {
    sub_22689F090(__p, "raWM");
    sub_226881624((unsigned __int8 *)v13, (uint64_t)__p, &v15);
    if (v11 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v15, &v12, 0);
    if (!v7)
    {
      if ((v12 - 3) <= 5)
      {
        int v8 = 1802785868;
        if (HIDWORD(v12) < 0x258)
        {
          int v8 = 1802785875;
LABEL_11:
          sub_2268BCC08(1918978900, v8, a3, a4);
          goto LABEL_12;
        }
        if (HIDWORD(v12) >= 0x23C345C5) {
          goto LABEL_11;
        }
      }
LABEL_12:
      uint64_t v7 = 0;
    }
  }
  if (v14 < 0) {
    operator delete(v13[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BE8C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BE918(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v19, 0, sizeof(v19));
  sub_22689F090(v17, a2);
  std::string __p = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v13 = 0;
  int v12 = 0;
  sub_226880920((unsigned __int8 *)v17, 2002863153, &v19);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v19, (uint64_t)&__p, 0);
  if (!v7)
  {
    if (SHIBYTE(v16) < 0)
    {
      if (!v15) {
        goto LABEL_8;
      }
      p_p = (char *)__p;
    }
    else
    {
      if (!HIBYTE(v16)) {
        goto LABEL_8;
      }
      p_p = (char *)&__p;
    }
    uint64_t v7 = sub_22686EA18(p_p, 0, (unsigned int *)&v13 + 1, 0, 0, 0, 0);
    if (v7) {
      goto LABEL_24;
    }
LABEL_8:
    if (HIDWORD(v13))
    {
      int v9 = 1732604485;
      if ((HIDWORD(v13) + 1) >= 2 && (HIBYTE(HIDWORD(v13)) - 225) >= 0xE) {
        goto LABEL_23;
      }
      goto LABEL_11;
    }
    if (!sub_22687CBC8(a1, 1400460148)) {
      goto LABEL_23;
    }
    sub_226880920((unsigned __int8 *)v17, 2002863154, &v19);
    uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v19, (uint64_t)&__p, 0);
    if (v7) {
      goto LABEL_24;
    }
    if (SHIBYTE(v16) < 0)
    {
      if (v15)
      {
        BOOL v10 = (char *)__p;
LABEL_19:
        uint64_t v7 = sub_22686EA18(v10, 0, (unsigned int *)&v13, 0, 0, 0, 0);
        if (v7) {
          goto LABEL_24;
        }
      }
    }
    else if (HIBYTE(v16))
    {
      BOOL v10 = (char *)&__p;
      goto LABEL_19;
    }
    sub_226880920((unsigned __int8 *)v17, 2002862934, &v19);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v19, &v12, 0);
    if (v7 | v13) {
      goto LABEL_24;
    }
    if ((v12 & 0x400) == 0 || sub_2268BCE68(a1, 1849970259)) {
      goto LABEL_23;
    }
    int v9 = 1849970259;
LABEL_11:
    sub_2268BCC08(2002863153, v9, a3, a4);
LABEL_23:
    uint64_t v7 = 0;
  }
LABEL_24:
  if (SHIBYTE(v16) < 0) {
    operator delete(__p);
  }
  if (v18 < 0) {
    operator delete(v17[0]);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BEB48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (*(char *)(v23 - 33) < 0) {
    operator delete(*(void **)(v23 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BEB8C(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(v14, a2);
  std::string __p = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  unsigned int v10 = 0;
  sub_226880920((unsigned __int8 *)v14, 2002863154, &v16);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v16, (uint64_t)&__p, 0);
  if (!v7)
  {
    if (SHIBYTE(v13) < 0)
    {
      if (v12)
      {
        p_p = (char *)__p;
        goto LABEL_7;
      }
    }
    else if (HIBYTE(v13))
    {
      p_p = (char *)&__p;
LABEL_7:
      uint64_t v7 = sub_22686EA18(p_p, 0, &v10, 0, 0, 0, 0);
      if (v7) {
        goto LABEL_13;
      }
      if (v10 && (v10 + 1 < 2 || HIBYTE(v10) - 225 <= 0xDu)) {
        sub_2268BCC08(2002863154, 1732604485, a3, a4);
      }
    }
    uint64_t v7 = 0;
  }
LABEL_13:
  if (SHIBYTE(v13) < 0) {
    operator delete(__p);
  }
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BECCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BED10(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(v14, a2);
  int v13 = 0;
  sub_226880920((unsigned __int8 *)v14, 2002862934, &v16);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v16, &v13, 0);
  if (!v7)
  {
    if ((v13 & 0x400) != 0)
    {
      __p[0] = 0;
      __p[1] = 0;
      uint64_t v12 = 0;
      unsigned int v10 = 0;
      sub_226880920((unsigned __int8 *)v14, 2002864464, &v16);
      uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v16, (uint64_t)__p, 0);
      if (!v7)
      {
        int v8 = v12 >= 0 ? (char *)__p : (char *)__p[0];
        uint64_t v7 = sub_22686EA18(v8, 0, &v10, 0, 0, 0, 0);
        if (!v7)
        {
          if (v10 + 1 < 2 || HIBYTE(v10) - 225 <= 0xDu) {
            sub_2268BCC08(2002864464, 1732604485, a3, a4);
          }
          uint64_t v7 = 0;
        }
      }
      if (SHIBYTE(v12) < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BEE84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (*(char *)(v23 - 33) < 0) {
    operator delete(*(void **)(v23 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BEED0(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(v14, a2);
  int v13 = 0;
  sub_226880920((unsigned __int8 *)v14, 2002862934, &v16);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v16, &v13, 0);
  if (!v7)
  {
    if ((v13 & 0x400) != 0)
    {
      std::string __p = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      sub_226880920((unsigned __int8 *)v14, 2002867021, &v16);
      uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v16, (uint64_t)&__p, 0);
      if (!v7)
      {
        uint64_t v8 = HIBYTE(v12);
        if (v12 < 0) {
          uint64_t v8 = v11;
        }
        if (!v8) {
          sub_2268BCC08(2002867021, 1732604485, a3, a4);
        }
      }
      if (SHIBYTE(v12) < 0) {
        operator delete(__p);
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BEFFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BF048(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v23, 0, sizeof(v23));
  sub_22689F090(v21, a2);
  int v20 = 0;
  sub_226880920((unsigned __int8 *)v21, 2002862934, &v23);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v23, &v20, 0);
  if (v7) {
    goto LABEL_7;
  }
  if ((v20 & 0x400) == 0)
  {
    uint64_t v7 = 0;
    goto LABEL_7;
  }
  unsigned int v19 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  std::string __p = 0;
  uint64_t v16 = 0;
  sub_226880920((unsigned __int8 *)v21, 2002867021, &v23);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v23, (uint64_t)&__p, 0);
  if (!v7)
  {
    if (SHIBYTE(v17) < 0)
    {
      if (!v16) {
        goto LABEL_18;
      }
      p_p = (char *)__p;
    }
    else
    {
      if (!HIBYTE(v17)) {
        goto LABEL_18;
      }
      p_p = (char *)&__p;
    }
    uint64_t v7 = sub_22686EA18(p_p, 0, &v19, 0, 0, 0, 0);
    if (v7) {
      goto LABEL_5;
    }
LABEL_18:
    sub_226880920((unsigned __int8 *)v21, 2002866753, &v23);
    uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v23, (uint64_t)&__p, 0);
    if (v7) {
      goto LABEL_5;
    }
    if (SHIBYTE(v17) < 0)
    {
      if (!v16) {
        goto LABEL_25;
      }
      unsigned int v10 = (char *)__p;
    }
    else
    {
      if (!HIBYTE(v17)) {
        goto LABEL_25;
      }
      unsigned int v10 = (char *)&__p;
    }
    uint64_t v7 = sub_22686EA18(v10, 0, (unsigned int *)&v18 + 1, 0, 0, 0, 0);
    if (v7) {
      goto LABEL_5;
    }
LABEL_25:
    sub_226880920((unsigned __int8 *)v21, 2002864464, &v23);
    uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v23, (uint64_t)&__p, 0);
    if (v7) {
      goto LABEL_5;
    }
    int v11 = SHIBYTE(v17);
    if (SHIBYTE(v17) < 0)
    {
      int v11 = v16;
      if (!v16) {
        goto LABEL_33;
      }
      uint64_t v12 = (char *)__p;
    }
    else
    {
      if (!HIBYTE(v17)) {
        goto LABEL_33;
      }
      uint64_t v12 = (char *)&__p;
    }
    uint64_t v7 = sub_22686EA18(v12, 0, (unsigned int *)&v18, 0, 0, 0, 0);
    if (v7) {
      goto LABEL_5;
    }
    int v11 = v18;
LABEL_33:
    int v13 = 1732604485;
    if ((HIDWORD(v18) + 1) >= 2 && (HIBYTE(HIDWORD(v18)) - 225) >= 0xE)
    {
      uint64_t v7 = 0;
      unsigned int v14 = v19 & v11;
      if (v14 == -1442971648 || (HIDWORD(v18) & v19) == v14) {
        goto LABEL_5;
      }
      int v13 = 1920159053;
    }
    sub_2268BCC08(2002866753, v13, a3, a4);
    uint64_t v7 = 0;
  }
LABEL_5:
  if (SHIBYTE(v17) < 0) {
    operator delete(__p);
  }
LABEL_7:
  if (v22 < 0) {
    operator delete(v21[0]);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BF2E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (*(char *)(v23 - 33) < 0) {
    operator delete(*(void **)(v23 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BF330(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(v13, a2);
  std::string __p = 0;
  unint64_t v11 = 0;
  uint64_t v12 = 0;
  sub_226880920((unsigned __int8 *)v13, 2002863171, &v15);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v15, (uint64_t)&__p, 0);
  if (!v7)
  {
    unint64_t v8 = HIBYTE(v12);
    if (v12 < 0) {
      unint64_t v8 = v11;
    }
    if (v8 >= 0x40) {
      sub_2268BCC08(2002863171, 1732604483, a3, a4);
    }
  }
  if (SHIBYTE(v12) < 0) {
    operator delete(__p);
  }
  if (v14 < 0) {
    operator delete(v13[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BF41C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BF460(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(v13, a2);
  std::string __p = 0;
  unint64_t v11 = 0;
  uint64_t v12 = 0;
  sub_226880920((unsigned __int8 *)v13, 2002863182, &v15);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v15, (uint64_t)&__p, 0);
  char v8 = HIBYTE(v12);
  if (!v7 && SHIBYTE(v12) < 0 && v11 > 0x100)
  {
    sub_2268BCC08(2002863182, 1732604483, a3, a4);
    char v8 = HIBYTE(v12);
  }
  if (v8 < 0) {
    operator delete(__p);
  }
  if (v14 < 0) {
    operator delete(v13[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BF544(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BF588(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v18, 0, sizeof(v18));
  sub_22689F090(v16, a2);
  int v15 = 0;
  std::string __p = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  sub_226880920((unsigned __int8 *)v16, 2002864494, &v18);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v18, &v15, 0);
  if (v7) {
    goto LABEL_16;
  }
  sub_226880920((unsigned __int8 *)v16, 1836011598, &v18);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v18, (uint64_t)&__p, 0);
  if (v7) {
    goto LABEL_16;
  }
  if (v15 != 4)
  {
LABEL_15:
    uint64_t v7 = 0;
    goto LABEL_16;
  }
  if (v14 >= 0) {
    uint64_t v8 = HIBYTE(v14);
  }
  else {
    uint64_t v8 = v13;
  }
  if (!v8)
  {
    sub_2268BCC08(1836011598, 1732604481, a3, a4);
    goto LABEL_15;
  }
  if (v14 >= 0) {
    p_p = (const char *)&__p;
  }
  else {
    p_p = (const char *)__p;
  }
  uint64_t v10 = sub_2268BF76C(p_p);
  if (v10 == -15)
  {
    sub_2268BCC08(1836011598, 1732604483, a3, a4);
    uint64_t v7 = 4294967281;
  }
  else
  {
    uint64_t v7 = v10;
    if (v10 == -26)
    {
      sub_2268BCC08(1836011598, 1732604485, a3, a4);
      uint64_t v7 = 4294967270;
    }
  }
LABEL_16:
  if (SHIBYTE(v14) < 0) {
    operator delete(__p);
  }
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BF728(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BF76C(const char *a1)
{
  unsigned int v1 = *(unsigned __int8 *)a1;
  if (*a1)
  {
    uint64_t v2 = (unsigned __int8 *)(a1 + 1);
    while (v1 - 48 <= 9 || v1 <= 0x2E && ((1 << v1) & 0x770000000000) != 0)
    {
      unsigned int v3 = *v2++;
      unsigned int v1 = v3;
      if (!v3) {
        goto LABEL_7;
      }
    }
    return 4294967270;
  }
  else
  {
LABEL_7:
    if (strlen(a1) <= 0xFF) {
      return 0;
    }
    else {
      return 4294967281;
    }
  }
}

uint64_t sub_2268BF7D8(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(v14, a2);
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v13 = 0;
  int v11 = 0;
  sub_226880920((unsigned __int8 *)v14, 1836007760, &v16);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v16, (uint64_t)__p, 0);
  if (!v7)
  {
    sub_226880920((unsigned __int8 *)v14, 2002864494, &v16);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v16, &v11, 0);
    if (!v7 && v11 == 4)
    {
      if (v13 >= 0) {
        int v9 = __p;
      }
      else {
        int v9 = (void **)__p[0];
      }
      uint64_t v10 = sub_2268BF76C((const char *)v9);
      if (v10 == -15)
      {
        sub_2268BCC08(1836007760, 1732604483, a3, a4);
        uint64_t v7 = 4294967281;
      }
      else
      {
        uint64_t v7 = v10;
        if (v10 == -26)
        {
          sub_2268BCC08(1836007760, 1732604485, a3, a4);
          uint64_t v7 = 4294967270;
        }
      }
    }
  }
  if (SHIBYTE(v13) < 0) {
    operator delete(__p[0]);
  }
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BF940(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BF984(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(v13, a2);
  std::string __p = 0;
  unint64_t v11 = 0;
  uint64_t v12 = 0;
  int v9 = 0;
  sub_226880920((unsigned __int8 *)v13, 1836012878, &v15);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v15, (uint64_t)&__p, 0);
  if (!v7)
  {
    sub_226880920((unsigned __int8 *)v13, 2002864494, &v15);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v15, &v9, 0);
    if (!v7 && v9 == 4)
    {
      uint64_t v7 = 0;
      if (SHIBYTE(v12) < 0 && v11 >= 0x100)
      {
        sub_2268BCC08(1836012878, 1732604483, a3, a4);
        uint64_t v7 = 0;
      }
    }
  }
  if (SHIBYTE(v12) < 0) {
    operator delete(__p);
  }
  if (v14 < 0) {
    operator delete(v13[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BFAB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BFAF8(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(v13, a2);
  std::string __p = 0;
  unint64_t v11 = 0;
  uint64_t v12 = 0;
  int v9 = 0;
  sub_226880920((unsigned __int8 *)v13, 1836011607, &v15);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v15, (uint64_t)&__p, 0);
  if (!v7)
  {
    sub_226880920((unsigned __int8 *)v13, 2002864494, &v15);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v15, &v9, 0);
    if (!v7 && v9 == 4)
    {
      uint64_t v7 = 0;
      if (SHIBYTE(v12) < 0 && v11 >= 0x100)
      {
        sub_2268BCC08(1836011607, 1732604485, a3, a4);
        uint64_t v7 = 0;
      }
    }
  }
  if (SHIBYTE(v12) < 0) {
    operator delete(__p);
  }
  if (v14 < 0) {
    operator delete(v13[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BFC28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BFC6C(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v13, 0, sizeof(v13));
  sub_22689F090(__p, a2);
  int v10 = 0;
  sub_226880920((unsigned __int8 *)__p, 2002864494, &v13);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v13, &v10, 0);
  if (v7) {
    goto LABEL_4;
  }
  if (v10 != 4) {
    goto LABEL_4;
  }
  int v9 = 0;
  sub_226880920((unsigned __int8 *)__p, 1836009796, &v13);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v13, &v9, 0);
  if (v7) {
    goto LABEL_4;
  }
  if (v9 > 299)
  {
    if (v9 <= 899)
    {
      if (v9 == 300 || v9 == 600) {
        goto LABEL_4;
      }
    }
    else if (v9 == 900 || v9 == 1200 || v9 == 1800)
    {
      goto LABEL_4;
    }
LABEL_21:
    sub_2268BCC08(1836009796, 1732604485, a3, a4);
    goto LABEL_4;
  }
  if ((v9 > 0x3C || ((1 << v9) & 0x1000000040000001) == 0) && v9 != 120) {
    goto LABEL_21;
  }
LABEL_4:
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BFDDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BFE14(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v14, 0, sizeof(v14));
  sub_22689F090(__p, a2);
  int v11 = 0;
  sub_226880920((unsigned __int8 *)__p, 2002864494, &v14);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v14, &v11, 0);
  if (!v7 && v11 == 4)
  {
    unsigned int v9 = 0;
    unsigned int v10 = 0;
    sub_226880920((unsigned __int8 *)__p, 1836008259, &v14);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v14, &v10, 0);
    if (!v7)
    {
      sub_226880920((unsigned __int8 *)__p, 1836008265, &v14);
      uint64_t v7 = sub_226888134(a1, (uint64_t)&v14, &v9, 0);
      if (!v7)
      {
        if (v10 > 0x62 || v9 >= 0x26) {
          sub_2268BCC08(1651721027, 1732604485, a3, a4);
        }
        uint64_t v7 = 0;
      }
    }
  }
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268BFF5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268BFF94(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v13, 0, sizeof(v13));
  sub_22689F090(__p, a2);
  int v10 = 0;
  sub_226880920((unsigned __int8 *)__p, 2002864494, &v13);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v13, &v10, 0);
  if (!v7 && v10 == 4)
  {
    int v9 = 0;
    sub_226880920((unsigned __int8 *)__p, 1836010832, &v13);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v13, &v9, 0);
    if (!v7 && (v9 - 3) <= 0xFFFFFFFD) {
      sub_2268BCC08(1836010832, 1732604485, a3, a4);
    }
  }
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C00A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_2268C00D8(uint64_t a1, char *a2)
{
  memset(&v9, 0, sizeof(v9));
  sub_22689F090(__p, a2);
  int v6 = 0;
  sub_226880920((unsigned __int8 *)__p, 1752641585, &v9);
  int v3 = sub_226888134(a1, (uint64_t)&v9, &v6, 0);
  char v4 = v6;
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
  return (v3 | v4 & 1) == 0;
}

void sub_2268C0174(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C01A8(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v20, 0, sizeof(v20));
  sub_22689F090(v18, a2);
  std::string __p = 0;
  unint64_t v16 = 0;
  uint64_t v17 = 0;
  BOOL v8 = sub_2268C00D8(a1, a2);
  BOOL v9 = sub_22687CBC8(a1, 1382368329);
  sub_226880920((unsigned __int8 *)v18, 1885623630, &v20);
  uint64_t v10 = sub_2268884D0(a1, (uint64_t)&v20, (uint64_t)&__p, 0);
  if (!v10)
  {
    unint64_t v11 = HIBYTE(v17);
    if (v17 < 0) {
      unint64_t v11 = v16;
    }
    if (v11)
    {
      int v12 = 1732604483;
      if (v8 && v9)
      {
        if (v11 <= 0xFF) {
          goto LABEL_13;
        }
      }
      else
      {
        int v12 = 1732604484;
      }
      sub_2268BCC08(1885623630, v12, a3, a4);
    }
  }
LABEL_13:
  if (SHIBYTE(v17) < 0) {
    operator delete(__p);
  }
  if (v19 < 0) {
    operator delete(v18[0]);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_2268C02DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C0328(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v20, 0, sizeof(v20));
  sub_22689F090(v18, a2);
  std::string __p = 0;
  unint64_t v16 = 0;
  uint64_t v17 = 0;
  BOOL v8 = sub_2268C00D8(a1, a2);
  BOOL v9 = sub_22687CBC8(a1, 1382368329);
  sub_226880920((unsigned __int8 *)v18, 1885622359, &v20);
  uint64_t v10 = sub_2268884D0(a1, (uint64_t)&v20, (uint64_t)&__p, 0);
  if (!v10)
  {
    unint64_t v11 = HIBYTE(v17);
    if (v17 < 0) {
      unint64_t v11 = v16;
    }
    if (v11)
    {
      int v12 = 1732604483;
      if (v8 && v9)
      {
        if (v11 <= 0xFF) {
          goto LABEL_13;
        }
      }
      else
      {
        int v12 = 1732604484;
      }
      sub_2268BCC08(1885622359, v12, a3, a4);
    }
  }
LABEL_13:
  if (SHIBYTE(v17) < 0) {
    operator delete(__p);
  }
  if (v19 < 0) {
    operator delete(v18[0]);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_2268C045C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C04A8(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  int v6 = a2;
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(__p, a2);
  LODWORD(v6) = sub_2268C00D8(a1, v6);
  BOOL v8 = sub_22687CBC8(a1, 1382368329);
  if (v6) {
    BOOL v9 = v8;
  }
  else {
    BOOL v9 = 0;
  }
  if (v9)
  {
    int v12 = 0;
    sub_226880920((unsigned __int8 *)__p, 1885618514, &v15);
    uint64_t v10 = sub_226888134(a1, (uint64_t)&v15, &v12, 0);
    if (!v10 && (v12 - 8) <= 0xFFFFFFF8) {
      sub_2268BCC08(1885618514, 1732604485, a3, a4);
    }
  }
  else
  {
    uint64_t v10 = 0;
  }
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_2268C05B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C05EC(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  int v6 = a2;
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(__p, a2);
  LODWORD(v6) = sub_2268C00D8(a1, v6);
  BOOL v8 = sub_22687CBC8(a1, 1382368329);
  if (v6) {
    BOOL v9 = v8;
  }
  else {
    BOOL v9 = 0;
  }
  if (!v9)
  {
    uint64_t v10 = 0;
    goto LABEL_13;
  }
  int v12 = 0;
  sub_226880920((unsigned __int8 *)__p, 1885620548, &v15);
  uint64_t v10 = sub_226888134(a1, (uint64_t)&v15, &v12, 0);
  if (v10) {
    goto LABEL_13;
  }
  if (v12 <= 299)
  {
    if ((v12 > 0x3C || ((1 << v12) & 0x1000000040000001) == 0) && v12 != 120) {
      goto LABEL_24;
    }
  }
  else if (v12 <= 899)
  {
    if (v12 != 300 && v12 != 600) {
      goto LABEL_24;
    }
  }
  else if (v12 != 900 && v12 != 1200 && v12 != 1800)
  {
LABEL_24:
    sub_2268BCC08(1885620548, 1732604485, a3, a4);
  }
LABEL_13:
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_2268C0754(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C0790(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  int v6 = a2;
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(__p, a2);
  LODWORD(v6) = sub_2268C00D8(a1, v6);
  BOOL v8 = sub_22687CBC8(a1, 1382368329);
  if (v6) {
    BOOL v9 = v8;
  }
  else {
    BOOL v9 = 0;
  }
  if (!v9)
  {
    uint64_t v10 = 0;
    goto LABEL_11;
  }
  int v13 = 0;
  sub_226880920((unsigned __int8 *)__p, 1885621571, &v16);
  uint64_t v10 = sub_226888134(a1, (uint64_t)&v16, &v13, 0);
  if (v10) {
    goto LABEL_11;
  }
  if (v13 <= 3599)
  {
    if (v13 && v13 != 900 && v13 != 1800) {
LABEL_23:
    }
      sub_2268BCC08(1885621571, 1732604485, a3, a4);
  }
  else
  {
    if (v13 > 14399)
    {
      if (v13 == 14400) {
        goto LABEL_11;
      }
      int v11 = 28800;
    }
    else
    {
      if (v13 == 3600) {
        goto LABEL_11;
      }
      int v11 = 7200;
    }
    if (v13 != v11) {
      goto LABEL_23;
    }
  }
LABEL_11:
  if (v15 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_2268C08E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C091C(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(v13, a2);
  std::string __p = 0;
  unint64_t v11 = 0;
  uint64_t v12 = 0;
  sub_226880920((unsigned __int8 *)v13, 1885688654, &v15);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v15, (uint64_t)&__p, 0);
  char v8 = HIBYTE(v12);
  if (!v7 && SHIBYTE(v12) < 0 && v11 > 0xFF)
  {
    sub_2268BCC08(1885688654, 1732604483, a3, a4);
    char v8 = HIBYTE(v12);
  }
  if (v8 < 0) {
    operator delete(__p);
  }
  if (v14 < 0) {
    operator delete(v13[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C0A00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C0A44(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(v13, a2);
  if (sub_2268C0B88(a1))
  {
    std::string __p = 0;
    unint64_t v11 = 0;
    uint64_t v12 = 0;
    sub_226880920((unsigned __int8 *)v13, 1885689166, &v15);
    uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v15, (uint64_t)&__p, 0);
    char v8 = HIBYTE(v12);
    if (!v7 && SHIBYTE(v12) < 0 && v11 > 0xFF)
    {
      sub_2268BCC08(1885689166, 1732604483, a3, a4);
      char v8 = HIBYTE(v12);
    }
    if (v8 < 0) {
      operator delete(__p);
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  if (v14 < 0) {
    operator delete(v13[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C0B3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_2268C0B88(uint64_t a1)
{
  memset(&v8, 0, sizeof(v8));
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v7 = 0;
  uint64_t v5 = 0;
  sub_226880920((unsigned __int8 *)__p, 2002864494, &v8);
  BOOL v2 = !sub_226888134(a1, (uint64_t)&v8, (char *)&v5 + 4, 0)
    && (sub_226880920((unsigned __int8 *)__p, 2002862934, &v8), !sub_226888134(a1, (uint64_t)&v8, &v5, 0))
    && (~v5 & 0x900) == 0
    && HIDWORD(v5) == 16;
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_2268C0C5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C0C88(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(v13, a2);
  if (sub_2268C0B88(a1))
  {
    std::string __p = 0;
    unint64_t v11 = 0;
    uint64_t v12 = 0;
    sub_226880920((unsigned __int8 *)v13, 1885687895, &v15);
    uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v15, (uint64_t)&__p, 0);
    char v8 = HIBYTE(v12);
    if (!v7 && SHIBYTE(v12) < 0 && v11 > 0xFF)
    {
      sub_2268BCC08(1885687895, 1732604483, a3, a4);
      char v8 = HIBYTE(v12);
    }
    if (v8 < 0) {
      operator delete(__p);
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  if (v14 < 0) {
    operator delete(v13[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C0D80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C0DCC(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v13, 0, sizeof(v13));
  sub_22689F090(__p, a2);
  if (!sub_2268C0B88(a1)) {
    goto LABEL_22;
  }
  int v10 = 0;
  sub_226880920((unsigned __int8 *)__p, 1885686084, &v13);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v13, &v10, 0);
  if (v7) {
    goto LABEL_23;
  }
  uint64_t v7 = v10;
  if (v10 <= 299)
  {
    if (v10 > 59)
    {
      if (v10 != 60 && v10 != 120) {
        goto LABEL_21;
      }
    }
    else
    {
      if (!v10) {
        goto LABEL_23;
      }
      if (v10 != 30) {
        goto LABEL_21;
      }
    }
  }
  else if (v10 <= 899)
  {
    if (v10 != 300 && v10 != 600) {
      goto LABEL_21;
    }
  }
  else if (v10 != 900 && v10 != 1800 && v10 != 1200)
  {
LABEL_21:
    sub_2268BCC08(1885686084, 1732604485, a3, a4);
LABEL_22:
    uint64_t v7 = 0;
    goto LABEL_23;
  }
  BOOL v9 = 0;
  sub_226880920((unsigned __int8 *)__p, 2002929006, &v13);
  uint64_t v7 = sub_226888348(a1, (uint64_t)&v13, &v9, 0);
  if (!v7 && v9) {
    sub_2268BCC08(1885686084, 1464880708, a3, a4);
  }
LABEL_23:
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C0F60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C0F9C(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v30, 0, sizeof(v30));
  sub_22689F090(v28, a2);
  std::string __p = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  unint64_t v24 = 0;
  unsigned int v23 = 0;
  BOOL v22 = 0;
  sub_226880920((unsigned __int8 *)v28, 1918977107, &v30);
  uint64_t v7 = sub_226888348(a1, (uint64_t)&v30, &v22, 0);
  if (v7) {
    goto LABEL_29;
  }
  if (!v22) {
    goto LABEL_29;
  }
  sub_226880920((unsigned __int8 *)v28, 1684554343, &v30);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v30, (uint64_t)&__p, 0);
  if (v7) {
    goto LABEL_29;
  }
  if (v27 >= 0) {
    p_p = (char *)&__p;
  }
  else {
    p_p = (char *)__p;
  }
  uint64_t v7 = sub_22686EA18(p_p, 0, (unsigned int *)&v24 + 1, 0, 0, 0, 0);
  if (v7)
  {
    sub_2268BCC08(1684554343, 1732604485, a3, a4);
    goto LABEL_29;
  }
  sub_226880920((unsigned __int8 *)v28, 1684555118, &v30);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v30, (uint64_t)&__p, 0);
  if (v7) {
    goto LABEL_29;
  }
  BOOL v9 = v27 >= 0 ? (char *)&__p : (char *)__p;
  uint64_t v7 = sub_22686EA18(v9, 0, (unsigned int *)&v24, 0, 0, 0, 0);
  if (v7) {
    goto LABEL_29;
  }
  sub_226880920((unsigned __int8 *)v28, 2002864464, &v30);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v30, (uint64_t)&__p, 0);
  if (v7) {
    goto LABEL_29;
  }
  if ((SHIBYTE(v27) & 0x80000000) == 0)
  {
    if (HIBYTE(v27))
    {
      int v10 = (char *)&__p;
      goto LABEL_20;
    }
LABEL_22:
    unsigned int v23 = 0;
    goto LABEL_23;
  }
  if (!v26) {
    goto LABEL_22;
  }
  int v10 = (char *)__p;
LABEL_20:
  uint64_t v7 = sub_22686EA18(v10, 0, &v23, 0, 0, 0, 0);
  if (v7) {
    goto LABEL_29;
  }
LABEL_23:
  if ((HIDWORD(v24) + 1) < 2
    || (unsigned int v11 = bswap32(HIDWORD(v24)), v11 - 225 < 0xE)
    || (unsigned int v12 = v11 & 0xFF000000, v12 == -16777216)
    || !v12)
  {
    sub_2268BCC08(1684554343, 1732604485, a3, a4);
LABEL_28:
    uint64_t v7 = 0;
    goto LABEL_29;
  }
  if ((v24 + 1) < 2) {
    goto LABEL_28;
  }
  unsigned int v14 = bswap32(v24);
  if (v14 - 225 < 0xE) {
    goto LABEL_28;
  }
  uint64_t v7 = 0;
  unsigned int v15 = v14 & 0xFF000000;
  if (v15 != -16777216)
  {
    if (v15)
    {
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      sub_226880920((unsigned __int8 *)v28, 2002862934, &v30);
      uint64_t v7 = sub_226888134(a1, (uint64_t)&v30, (char *)&v21 + 4, 0);
      if (!v7)
      {
        uint64_t v7 = sub_226888134(a1, (uint64_t)&v30, &v21, 2);
        if (!v7)
        {
          MEMORY[0x22A65ABB0](&v30, "WiFi.radios.[*].");
          sub_226880920((unsigned __int8 *)&v30, 1651723853, &v30);
          uint64_t v7 = sub_226888134(a1, (uint64_t)&v30, (char *)&v20 + 4, 0);
          if (!v7)
          {
            uint64_t v7 = sub_226888134(a1, (uint64_t)&v30, &v20, 2);
            if (!v7)
            {
              unsigned int v16 = bswap32(HIDWORD(v24));
              unsigned int v17 = bswap32(v24);
              unint64_t v24 = __PAIR64__(v16, v17);
              unsigned int v23 = bswap32(v23);
              if (((v17 ^ v16) & 0xFFFFFF) != 0) {
                goto LABEL_28;
              }
              unsigned int v18 = HIBYTE(v16);
              if (v18 == 1 || v18 > HIBYTE(v17)) {
                goto LABEL_28;
              }
              if ((v21 & 0x400) != 0)
              {
                uint64_t v7 = 0;
                if ((v21 & 0x10000000000) != 0 || v20 != HIDWORD(v20)) {
                  goto LABEL_29;
                }
              }
              else if (v20 != HIDWORD(v20))
              {
                goto LABEL_28;
              }
              BOOL v19 = 0;
              sub_226880920((unsigned __int8 *)v28, 1918979649, &v30);
              uint64_t v7 = sub_226888348(a1, (uint64_t)&v30, &v19, 0);
              if (v7) {
                goto LABEL_29;
              }
              if (v19)
              {
                if (((v24 ^ v23) & 0xFFFFFF) != 0) {
                  goto LABEL_29;
                }
                goto LABEL_58;
              }
              if (HIBYTE(v23) <= BYTE3(v24) && HIBYTE(v23) >= HIBYTE(v24)) {
LABEL_58:
              }
                sub_2268BCC08(1684554343, 1684232023, a3, a4);
            }
          }
        }
      }
    }
  }
LABEL_29:
  if (SHIBYTE(v27) < 0) {
    operator delete(__p);
  }
  if (v29 < 0) {
    operator delete(v28[0]);
  }
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v30.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C1408(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (*(char *)(v25 - 33) < 0) {
    operator delete(*(void **)(v25 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C1454(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v30, 0, sizeof(v30));
  sub_22689F090(v28, a2);
  std::string __p = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  unint64_t v24 = 0;
  unsigned int v23 = 0;
  BOOL v22 = 0;
  sub_226880920((unsigned __int8 *)v28, 1918977107, &v30);
  uint64_t v7 = sub_226888348(a1, (uint64_t)&v30, &v22, 0);
  if (v7) {
    goto LABEL_29;
  }
  if (!v22) {
    goto LABEL_29;
  }
  sub_226880920((unsigned __int8 *)v28, 1684554343, &v30);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v30, (uint64_t)&__p, 0);
  if (v7) {
    goto LABEL_29;
  }
  char v8 = v27 >= 0 ? (char *)&__p : (char *)__p;
  uint64_t v7 = sub_22686EA18(v8, 0, (unsigned int *)&v24 + 1, 0, 0, 0, 0);
  if (v7) {
    goto LABEL_29;
  }
  sub_226880920((unsigned __int8 *)v28, 1684555118, &v30);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v30, (uint64_t)&__p, 0);
  if (v7) {
    goto LABEL_29;
  }
  if (v27 >= 0) {
    p_p = (char *)&__p;
  }
  else {
    p_p = (char *)__p;
  }
  uint64_t v7 = sub_22686EA18(p_p, 0, (unsigned int *)&v24, 0, 0, 0, 0);
  if (v7)
  {
    sub_2268BCC08(1684555118, 1732604485, a3, a4);
    goto LABEL_29;
  }
  sub_226880920((unsigned __int8 *)v28, 2002864464, &v30);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v30, (uint64_t)&__p, 0);
  if (v7) {
    goto LABEL_29;
  }
  if ((SHIBYTE(v27) & 0x80000000) == 0)
  {
    if (HIBYTE(v27))
    {
      int v10 = (char *)&__p;
      goto LABEL_20;
    }
LABEL_22:
    unsigned int v23 = 0;
    goto LABEL_23;
  }
  if (!v26) {
    goto LABEL_22;
  }
  int v10 = (char *)__p;
LABEL_20:
  uint64_t v7 = sub_22686EA18(v10, 0, &v23, 0, 0, 0, 0);
  if (v7) {
    goto LABEL_29;
  }
LABEL_23:
  if ((v24 + 1) < 2
    || (unsigned int v11 = bswap32(v24), v11 - 225 < 0xE)
    || (unsigned int v12 = v11 & 0xFF000000, v12 == -16777216)
    || !v12)
  {
    sub_2268BCC08(1684555118, 1732604485, a3, a4);
LABEL_28:
    uint64_t v7 = 0;
    goto LABEL_29;
  }
  if ((HIDWORD(v24) + 1) < 2) {
    goto LABEL_28;
  }
  unsigned int v14 = bswap32(HIDWORD(v24));
  if (v14 - 225 < 0xE) {
    goto LABEL_28;
  }
  uint64_t v7 = 0;
  unsigned int v15 = v14 & 0xFF000000;
  if (v15 != -16777216)
  {
    if (v15)
    {
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      sub_226880920((unsigned __int8 *)v28, 2002862934, &v30);
      uint64_t v7 = sub_226888134(a1, (uint64_t)&v30, (char *)&v21 + 4, 0);
      if (!v7)
      {
        uint64_t v7 = sub_226888134(a1, (uint64_t)&v30, &v21, 2);
        if (!v7)
        {
          MEMORY[0x22A65ABB0](&v30, "WiFi.radios.[*].");
          sub_226880920((unsigned __int8 *)&v30, 1651723853, &v30);
          uint64_t v7 = sub_226888134(a1, (uint64_t)&v30, (char *)&v20 + 4, 0);
          if (!v7)
          {
            uint64_t v7 = sub_226888134(a1, (uint64_t)&v30, &v20, 2);
            if (!v7)
            {
              unsigned int v16 = bswap32(HIDWORD(v24));
              unsigned int v17 = bswap32(v24);
              unint64_t v24 = __PAIR64__(v16, v17);
              unsigned int v23 = bswap32(v23);
              if (((v17 ^ v16) & 0xFFFFFF) != 0 || (unsigned int v18 = HIBYTE(v17), v18 == 1) || v18 < HIBYTE(v16))
              {
                sub_2268BCC08(1684555118, 1684558433, a3, a4);
                goto LABEL_28;
              }
              if ((v21 & 0x400) != 0)
              {
                uint64_t v7 = 0;
                if ((v21 & 0x10000000000) != 0 || v20 != HIDWORD(v20)) {
                  goto LABEL_29;
                }
              }
              else if (v20 != HIDWORD(v20))
              {
                goto LABEL_28;
              }
              BOOL v19 = 0;
              sub_226880920((unsigned __int8 *)v28, 1918979649, &v30);
              uint64_t v7 = sub_226888348(a1, (uint64_t)&v30, &v19, 0);
              if (v7) {
                goto LABEL_29;
              }
              if (v19)
              {
                if (((v24 ^ v23) & 0xFFFFFF) != 0) {
                  goto LABEL_29;
                }
                goto LABEL_59;
              }
              if (HIBYTE(v23) <= BYTE3(v24) && HIBYTE(v23) >= HIBYTE(v24)) {
LABEL_59:
              }
                sub_2268BCC08(1684555118, 1684232023, a3, a4);
            }
          }
        }
      }
    }
  }
LABEL_29:
  if (SHIBYTE(v27) < 0) {
    operator delete(__p);
  }
  if (v29 < 0) {
    operator delete(v28[0]);
  }
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v30.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C18E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (*(char *)(v25 - 33) < 0) {
    operator delete(*(void **)(v25 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C192C(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v13, 0, sizeof(v13));
  sub_22689F090(__p, a2);
  BOOL v10 = 0;
  sub_226880920((unsigned __int8 *)__p, 1918977107, &v13);
  uint64_t v7 = sub_226888348(a1, (uint64_t)&v13, &v10, 0);
  if (!v7 && v10)
  {
    unsigned int v9 = 0;
    sub_226880920((unsigned __int8 *)__p, 1684556901, &v13);
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v13, &v9, 0);
    if (!v7 && v9 < 0x258) {
      sub_2268BCC08(1684556901, 1732604482, a3, a4);
    }
  }
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C1A30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C1A68(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v17, 0, sizeof(v17));
  sub_22689F090(v15, a2);
  std::string __p = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  sub_226880920((unsigned __int8 *)v15, 1684557159, &v17);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v17, (uint64_t)&__p, 0);
  if (!v7)
  {
    unint64_t v8 = v14 >= 0 ? HIBYTE(v14) : v13;
    if (v8)
    {
      BOOL v9 = sub_22687CBC8(a1, 1145922931);
      int v10 = 1732604483;
      if (v9)
      {
        if (v8 < 0x100) {
          goto LABEL_11;
        }
      }
      else
      {
        int v10 = 1732604484;
      }
      sub_2268BCC08(1684557159, v10, a3, a4);
    }
  }
LABEL_11:
  if (SHIBYTE(v14) < 0) {
    operator delete(__p);
  }
  if (v16 < 0) {
    operator delete(v15[0]);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C1B7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C1BC0(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v17, 0, sizeof(v17));
  sub_22689F090(v15, a2);
  std::string __p = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  sub_226880920((unsigned __int8 *)v15, 1684551989, &v17);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v17, (uint64_t)&__p, 0);
  if (!v7)
  {
    unint64_t v8 = v14 >= 0 ? HIBYTE(v14) : v13;
    if (v8)
    {
      BOOL v9 = sub_22687CBC8(a1, 1684551989);
      int v10 = 1732604483;
      if (v9)
      {
        if (v8 < 0x100) {
          goto LABEL_11;
        }
      }
      else
      {
        int v10 = 1732604484;
      }
      sub_2268BCC08(1684551989, v10, a3, a4);
    }
  }
LABEL_11:
  if (SHIBYTE(v14) < 0) {
    operator delete(__p);
  }
  if (v16 < 0) {
    operator delete(v15[0]);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C1CD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C1D18(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v31, 0, sizeof(v31));
  sub_22689F090(v29, a2);
  BOOL v28 = 0;
  sub_226880920((unsigned __int8 *)v29, 1918979649, &v31);
  uint64_t v7 = sub_226888348(a1, (uint64_t)&v31, &v28, 0);
  if (!v7)
  {
    if (!sub_22687CBC8(a1, 1198748750))
    {
      uint64_t v7 = 0;
      goto LABEL_62;
    }
    uint64_t v7 = 0;
    if (sub_22688CFF0(a1) && v28)
    {
      std::string __p = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      unint64_t v23 = 0;
      unint64_t v24 = 0;
      sub_226880920((unsigned __int8 *)v29, 1735279207, &v31);
      if (sub_2268884D0(a1, (uint64_t)&v31, (uint64_t)&__p, 0))
      {
LABEL_6:
        uint64_t v8 = sub_22686EA18("172.16.42.2", 0, (unsigned int *)&v24 + 1, 0, 0, 0, 0);
        goto LABEL_14;
      }
      if (SHIBYTE(v27) < 0)
      {
        if (!v26) {
          goto LABEL_6;
        }
        p_p = (char *)__p;
      }
      else
      {
        if (!HIBYTE(v27)) {
          goto LABEL_6;
        }
        p_p = (char *)&__p;
      }
      uint64_t v8 = sub_22686EA18(p_p, 0, (unsigned int *)&v24 + 1, 0, 0, 0, 0);
LABEL_14:
      uint64_t v7 = v8;
      if (v8)
      {
        sub_2268BCC08(1651722052, 1732604485, a3, a4);
        goto LABEL_60;
      }
      sub_226880920((unsigned __int8 *)v29, 1735279982, &v31);
      if (sub_2268884D0(a1, (uint64_t)&v31, (uint64_t)&__p, 0)) {
        goto LABEL_17;
      }
      if (SHIBYTE(v27) < 0)
      {
        if (v26)
        {
          unsigned int v11 = (char *)__p;
          goto LABEL_23;
        }
      }
      else if (HIBYTE(v27))
      {
        unsigned int v11 = (char *)&__p;
LABEL_23:
        uint64_t v10 = sub_22686EA18(v11, 0, (unsigned int *)&v24, 0, 0, 0, 0);
LABEL_24:
        uint64_t v7 = v10;
        if (v10)
        {
          sub_2268BCC08(1651722052, 1732604485, a3, a4);
          goto LABEL_60;
        }
        sub_226880920((unsigned __int8 *)v29, 1684554343, &v31);
        uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v31, (uint64_t)&__p, 0);
        if (v7) {
          goto LABEL_60;
        }
        if (SHIBYTE(v27) < 0)
        {
          if (v26)
          {
            char v12 = (char *)__p;
            goto LABEL_32;
          }
        }
        else if (HIBYTE(v27))
        {
          char v12 = (char *)&__p;
LABEL_32:
          uint64_t v13 = sub_22686EA18(v12, 0, (unsigned int *)&v23 + 1, 0, 0, 0, 0);
LABEL_34:
          uint64_t v7 = v13;
          if (v13) {
            goto LABEL_60;
          }
          sub_226880920((unsigned __int8 *)v29, 2002864464, &v31);
          uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v31, (uint64_t)&__p, 0);
          if (v7) {
            goto LABEL_60;
          }
          LODWORD(v23) = 0;
          if (SHIBYTE(v27) < 0)
          {
            if (!v26) {
              goto LABEL_42;
            }
            uint64_t v14 = (char *)__p;
          }
          else
          {
            if (!HIBYTE(v27)) {
              goto LABEL_42;
            }
            uint64_t v14 = (char *)&__p;
          }
          uint64_t v7 = sub_22686EA18(v14, 0, (unsigned int *)&v23, 0, 0, 0, 0);
          if (v7) {
            goto LABEL_60;
          }
LABEL_42:
          int v15 = 1732604485;
          if (!v24)
          {
LABEL_58:
            sub_2268BCC08(1651722052, v15, a3, a4);
LABEL_59:
            uint64_t v7 = 0;
            goto LABEL_60;
          }
          if (!sub_22687CBC8(a1, 1198748750))
          {
            int v15 = 1732604484;
            goto LABEL_58;
          }
          if ((v24 + 1) < 2) {
            goto LABEL_58;
          }
          unsigned int v16 = bswap32(v24);
          if (v16 - 225 < 0xE
            || (v16 & 0xFF000000) == 0xFF000000
            || (v16 & 0xFF000000) == 0)
          {
            goto LABEL_58;
          }
          if ((HIDWORD(v24) + 1) < 2) {
            goto LABEL_59;
          }
          unsigned int v17 = bswap32(HIDWORD(v24));
          if (v17 - 225 < 0xE) {
            goto LABEL_59;
          }
          uint64_t v7 = 0;
          if ((v17 & 0xFF000000) != 0xFF000000 && (v17 & 0xFF000000) != 0)
          {
            int v15 = 1684558433;
            unsigned int v18 = bswap32(HIDWORD(v23));
            unint64_t v24 = __PAIR64__(v17, v16);
            unint64_t v23 = __PAIR64__(v18, bswap32(v23));
            int v19 = v16 & 0xFFFFFF;
            if ((v16 & 0xFFFFFF) != (v17 & 0xFFFFFF)) {
              goto LABEL_58;
            }
            unsigned int v20 = HIBYTE(v16);
            if (v20 == 1 || v20 < HIBYTE(v17)) {
              goto LABEL_58;
            }
            if (v19 == (v18 & 0xFFFFFF))
            {
              int v15 = 1735279720;
              goto LABEL_58;
            }
            BOOL v22 = 0;
            sub_226880920((unsigned __int8 *)v29, 1918979649, &v31);
            uint64_t v7 = sub_226888348(a1, (uint64_t)&v31, &v22, 0);
            if (!v7)
            {
              if (v22)
              {
                if (((v24 ^ v23) & 0xFFFFFF) != 0) {
                  goto LABEL_60;
                }
                goto LABEL_73;
              }
              if (BYTE3(v23) <= BYTE3(v24) && BYTE3(v23) >= HIBYTE(v24)) {
LABEL_73:
              }
                sub_2268BCC08(1651722052, 1684232023, a3, a4);
            }
          }
LABEL_60:
          if (SHIBYTE(v27) < 0) {
            operator delete(__p);
          }
          goto LABEL_62;
        }
        uint64_t v13 = sub_22686EA18("10.0.1.2", 0, (unsigned int *)&v23 + 1, 0, 0, 0, 0);
        goto LABEL_34;
      }
LABEL_17:
      uint64_t v10 = sub_22686EA18("172.16.42.200", 0, (unsigned int *)&v24, 0, 0, 0, 0);
      goto LABEL_24;
    }
  }
LABEL_62:
  if (v30 < 0) {
    operator delete(v29[0]);
  }
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v31.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C2234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (*(char *)(v25 - 33) < 0) {
    operator delete(*(void **)(v25 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C2284(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(__p, a2);
  BOOL v12 = 0;
  sub_226880920((unsigned __int8 *)__p, 1918979649, &v15);
  uint64_t v7 = sub_226888348(a1, (uint64_t)&v15, &v12, 0);
  if (!v7)
  {
    if (sub_22687CBC8(a1, 1198748750))
    {
      uint64_t v7 = 0;
      if (sub_22688CFF0(a1) && v12)
      {
        unsigned int v11 = 0;
        sub_226880920((unsigned __int8 *)__p, 1735281765, &v15);
        uint64_t v7 = sub_226888134(a1, (uint64_t)&v15, &v11, 0);
        if (!v7)
        {
          if (v11)
          {
            BOOL v8 = sub_22687CBC8(a1, 1198748750);
            int v9 = 1732604482;
            if (v8)
            {
              if (v11 > 0x257) {
                goto LABEL_11;
              }
            }
            else
            {
              int v9 = 1732604484;
            }
            sub_2268BCC08(1735281765, v9, a3, a4);
          }
        }
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
LABEL_11:
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C23D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C2410(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v18, 0, sizeof(v18));
  sub_22689F090(v16, a2);
  BOOL v15 = 0;
  sub_226880920((unsigned __int8 *)v16, 1918979649, &v18);
  uint64_t v7 = sub_226888348(a1, (uint64_t)&v18, &v15, 0);
  if (!v7)
  {
    if (!sub_22687CBC8(a1, 1198748750))
    {
      uint64_t v7 = 0;
      goto LABEL_18;
    }
    uint64_t v7 = 0;
    if (sub_22688CFF0(a1) && v15)
    {
      std::string __p = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      sub_226880920((unsigned __int8 *)v16, 1735282023, &v18);
      uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v18, (uint64_t)&__p, 0);
      if (!v7)
      {
        unint64_t v8 = v14 >= 0 ? HIBYTE(v14) : v13;
        if (v8)
        {
          BOOL v9 = sub_22687CBC8(a1, 1198748750);
          int v10 = 1732604483;
          if (v9)
          {
            if (v8 < 0x100) {
              goto LABEL_16;
            }
          }
          else
          {
            int v10 = 1732604484;
          }
          sub_2268BCC08(1735282023, v10, a3, a4);
        }
      }
LABEL_16:
      if (SHIBYTE(v14) < 0) {
        operator delete(__p);
      }
    }
  }
LABEL_18:
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C258C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C25D8(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v18, 0, sizeof(v18));
  sub_22689F090(v16, a2);
  BOOL v15 = 0;
  sub_226880920((unsigned __int8 *)v16, 1918979649, &v18);
  uint64_t v7 = sub_226888348(a1, (uint64_t)&v18, &v15, 0);
  if (!v7)
  {
    if (!sub_22687CBC8(a1, 1198748750))
    {
      uint64_t v7 = 0;
      goto LABEL_18;
    }
    uint64_t v7 = 0;
    if (sub_22688CFF0(a1) && v15)
    {
      std::string __p = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      sub_226880920((unsigned __int8 *)v16, 1735276853, &v18);
      uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v18, (uint64_t)&__p, 0);
      if (!v7)
      {
        unint64_t v8 = v14 >= 0 ? HIBYTE(v14) : v13;
        if (v8)
        {
          BOOL v9 = sub_22687CBC8(a1, 1198748750);
          int v10 = 1732604483;
          if (v9)
          {
            if (v8 < 0x100) {
              goto LABEL_16;
            }
          }
          else
          {
            int v10 = 1732604484;
          }
          sub_2268BCC08(1735276853, v10, a3, a4);
        }
      }
LABEL_16:
      if (SHIBYTE(v14) < 0) {
        operator delete(__p);
      }
    }
  }
LABEL_18:
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C2754(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C27A0(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v23, 0, sizeof(v23));
  sub_22689F090(v21, a2);
  std::string __p = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  unsigned int v17 = 0;
  sub_226880920((unsigned __int8 *)v21, 1849970010, &v23);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v23, (uint64_t)&__p, 0);
  if (v7) {
    goto LABEL_2;
  }
  if (SHIBYTE(v20) < 0)
  {
    if (!v19) {
      goto LABEL_32;
    }
    unsigned int v15 = 0;
    unsigned int v16 = 0;
    p_p = (char *)__p;
  }
  else
  {
    if (!HIBYTE(v20)) {
      goto LABEL_32;
    }
    unsigned int v15 = 0;
    unsigned int v16 = 0;
    p_p = (char *)&__p;
  }
  int v10 = sub_22686EA18(p_p, 0, &v17, 0, 0, 0, 0);
  sub_226880920((unsigned __int8 *)v21, 1684558670, &v23);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v23, (uint64_t)&__p, 0);
  if (!v7)
  {
    unsigned int v11 = v20 >= 0 ? (char *)&__p : (char *)__p;
    uint64_t v7 = sub_22686EA18(v11, 0, &v15, 0, 0, 0, 0);
    if (!v7)
    {
      sub_226880920((unsigned __int8 *)v21, 1684554343, &v23);
      uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v23, (uint64_t)&__p, 0);
      if (!v7)
      {
        BOOL v12 = v20 >= 0 ? (char *)&__p : (char *)__p;
        uint64_t v7 = sub_22686EA18(v12, 0, &v16, 0, 0, 0, 0);
        if (!v7)
        {
          BOOL v13 = sub_22687CBC8(a1, 1313105224);
          int v14 = 1732604485;
          if (v13)
          {
            if (!v10 && v17 + 1 >= 2 && HIBYTE(v17) - 225 >= 0xEu && ((v16 ^ v17) & v15) == 0) {
              goto LABEL_32;
            }
          }
          else
          {
            int v14 = 1732604484;
          }
          sub_2268BCC08(1849970010, v14, a3, a4);
LABEL_32:
          uint64_t v7 = 0;
        }
      }
    }
  }
LABEL_2:
  if (SHIBYTE(v20) < 0) {
    operator delete(__p);
  }
  if (v22 < 0) {
    operator delete(v21[0]);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C29EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C2A34(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v12, 0, sizeof(v12));
  sub_22689F090(__p, a2);
  CFArrayRef theArray = 0;
  sub_226880920((unsigned __int8 *)__p, 1886213217, &v12);
  uint64_t v7 = sub_2268820DC(a1, (uint64_t)&v12, &theArray, 0);
  if (!v7 && CFArrayGetCount(theArray) >= 21) {
    sub_2268BCC08(1886213217, 1732604488, a3, a4);
  }
  if (theArray) {
    CFRelease(theArray);
  }
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C2B0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C2B40(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(__p, a2);
  CFArrayRef theArray = 0;
  unsigned int v12 = 0;
  BOOL v11 = 0;
  uint64_t v7 = sub_22687CDBC(a1, 1633899617, (CFTypeRef *)&theArray, 0);
  if (!v7)
  {
    uint64_t v7 = sub_22687AB24(a1, 1835090284, &v12, 0);
    if (!v7)
    {
      sub_226880920((unsigned __int8 *)__p, 1633895790, &v16);
      uint64_t v7 = sub_226888348(a1, (uint64_t)&v16, &v11, 0);
      if (!v7)
      {
        CFIndex Count = CFArrayGetCount(theArray);
        if (Count > v12)
        {
          int v9 = 1732604488;
          goto LABEL_6;
        }
        uint64_t v7 = 0;
        if (!CFArrayGetCount(theArray) && v11)
        {
          if (sub_22687CBC8(a1, 1950434124)) {
            goto LABEL_7;
          }
          int v9 = 1633895789;
LABEL_6:
          sub_2268BCC08(1633899617, v9, a3, a4);
LABEL_7:
          uint64_t v7 = 0;
        }
      }
    }
  }
  if (theArray) {
    CFRelease(theArray);
  }
  if (v15 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C2CA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C2CD4(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v19, 0, sizeof(v19));
  sub_22689F090(v17, a2);
  uint64_t v16 = 0;
  int v15 = 0;
  sub_226880920((unsigned __int8 *)v17, 2003060332, &v19);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v19, (char *)&v16 + 4, 0);
  if (!v7)
  {
    sub_22689F090(__p, "raWM");
    sub_226881624((unsigned __int8 *)v17, (uint64_t)__p, &v19);
    if (v14 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_226888134(a1, (uint64_t)&v19, &v16, 0);
    if (!v7)
    {
      sub_226880920((unsigned __int8 *)v17, 1651718221, &v19);
      uint64_t v7 = sub_226888134(a1, (uint64_t)&v19, &v15, 0);
      if (!v7)
      {
        if (HIDWORD(v16) >= 8)
        {
          sub_2268BCC08(1651726157, 1732604485, a3, a4);
LABEL_21:
          uint64_t v7 = 0;
          goto LABEL_22;
        }
        if ((v16 & 0x300000000) == 0) {
          goto LABEL_21;
        }
        BOOL v12 = 0;
        sub_22689F090(__p, "raEA");
        sub_226881624((unsigned __int8 *)v17, (uint64_t)__p, &v19);
        if (v14 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v7 = sub_226888348(a1, (uint64_t)&v19, &v12, 0);
        if (!v7)
        {
          int v8 = 1651725133;
          if (!sub_22687CBC8(a1, 1464095533))
          {
            int v8 = 1651726157;
            int v10 = 1732604484;
            goto LABEL_29;
          }
          int v9 = v16;
          if ((v16 - 3) <= 5)
          {
            if (!sub_22687CBC8(a1, 1464877399))
            {
              int v10 = 2004307539;
              goto LABEL_29;
            }
            int v9 = v16;
          }
          int v10 = 2003060078;
          if ((v9 - 9) >= 0xFFFFFFFA && v12) {
            goto LABEL_29;
          }
          if (v15 - 4) <= 6 && ((0x53u >> (v15 - 4)))
          {
            int v10 = 2003060329;
            int v8 = 1651718221;
LABEL_29:
            sub_2268BCC08(v8, v10, a3, a4);
          }
        }
      }
    }
  }
LABEL_22:
  if (v18 < 0) {
    operator delete(v17[0]);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C2F3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C2F98(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v17, 0, sizeof(v17));
  sub_22689F090(v15, a2);
  int v14 = 0;
  CFTypeRef cf = 0;
  sub_226880920((unsigned __int8 *)v15, 2003060332, &v17);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v17, &v14, 0);
  if (!v7)
  {
    sub_22689F090(__p, "legacywds");
    sub_226881624((unsigned __int8 *)v15, (uint64_t)__p, &v17);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = sub_2268820DC(a1, (uint64_t)&v17, (CFMutableDictionaryRef *)&cf, 0);
    if (!v7)
    {
      CFTypeID v8 = CFGetTypeID(cf);
      if (v8 != CFArrayGetTypeID())
      {
        uint64_t v7 = 4294960540;
        goto LABEL_13;
      }
      if (CFArrayGetCount((CFArrayRef)cf) <= 5)
      {
        if ((v14 & 3) == 0 || CFArrayGetCount((CFArrayRef)cf)) {
          goto LABEL_12;
        }
        int v9 = 1999720036;
      }
      else
      {
        int v9 = 1732604488;
      }
      sub_2268BCC08(2003061875, v9, a3, a4);
LABEL_12:
      uint64_t v7 = 0;
    }
  }
LABEL_13:
  if (cf) {
    CFRelease(cf);
  }
  if (v16 < 0) {
    operator delete(v15[0]);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C310C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (*(char *)(v23 - 33) < 0) {
    operator delete(*(void **)(v23 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C315C(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v24, 0, sizeof(v24));
  sub_22689F090(&v22, a2);
  std::string v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  unsigned int v18 = 0;
  sub_22689F090(v16, a2);
  sub_22689F090(__p, "raI1");
  sub_226881624((unsigned __int8 *)v16, (uint64_t)__p, &v24);
  if (v15 < 0) {
    operator delete(__p[0]);
  }
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  uint64_t v8 = sub_2268884D0(a1, (uint64_t)&v24, (uint64_t)&v19, 0);
  uint64_t v9 = v8;
  if (v8 == -5 || !v8)
  {
    if (SHIBYTE(v21) < 0)
    {
      if (v20)
      {
        int v10 = (char *)v19;
        goto LABEL_12;
      }
    }
    else if (HIBYTE(v21))
    {
      int v10 = (char *)&v19;
LABEL_12:
      uint64_t v9 = sub_22686EA18(v10, 0, &v18, 0, 0, 0, 0);
      goto LABEL_14;
    }
    uint64_t v9 = 0;
LABEL_14:
    if (sub_2268C33AC(a1, a2))
    {
      int v11 = 1732604481;
      if (v9 || (unsigned int v12 = v18, v18 + 1 < 2) || HIBYTE(v18) - 225 < 0xEu)
      {
LABEL_24:
        sub_2268BCC08(1918978353, v11, a3, a4);
        goto LABEL_25;
      }
    }
    else
    {
      unsigned int v12 = v18;
      if (!v18) {
        goto LABEL_25;
      }
    }
    if (v12 + 1 >= 2)
    {
      if (HIBYTE(v12) - 225 > 0xDu) {
        goto LABEL_25;
      }
      int v11 = 1732604485;
    }
    else
    {
      int v11 = 1732604485;
    }
    goto LABEL_24;
  }
LABEL_25:
  if (SHIBYTE(v21) < 0) {
    operator delete(v19);
  }
  if (v23 < 0) {
    operator delete(v22);
  }
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_2268C3334(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (*(char *)(v33 - 49) < 0) {
    operator delete(*(void **)(v33 - 72));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C33AC(uint64_t a1, char *a2)
{
  memset(&v12, 0, sizeof(v12));
  sub_22689F090(v10, a2);
  int v9 = 0;
  BOOL v8 = 0;
  int v7 = 0;
  sub_22689F090(__p, "raWM");
  sub_226881624((unsigned __int8 *)v10, (uint64_t)__p, &v12);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  if (sub_226888134(a1, (uint64_t)&v12, &v9, 0)) {
    goto LABEL_10;
  }
  sub_22689F090(__p, "raEA");
  sub_226881624((unsigned __int8 *)v10, (uint64_t)__p, &v12);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  if (sub_226888348(a1, (uint64_t)&v12, &v8, 0)) {
    goto LABEL_10;
  }
  sub_22689F090(__p, "raFl");
  sub_226881624((unsigned __int8 *)v10, (uint64_t)__p, &v12);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  if (sub_226888134(a1, (uint64_t)&v12, &v7, 0))
  {
LABEL_10:
    uint64_t v3 = 0;
  }
  else if (v8 && (v9 - 3) < 6)
  {
    uint64_t v3 = 1;
  }
  else
  {
    uint64_t v3 = v7 & 1;
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_2268C351C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (*(char *)(v23 - 17) < 0) {
    operator delete(*(void **)(v23 - 40));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C357C(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v17, 0, sizeof(v17));
  sub_22689F090(v15, a2);
  unsigned int v14 = 0;
  sub_226880920((unsigned __int8 *)v15, 1651724337, &v17);
  if (!sub_22688D2FC(a1, (uint64_t)&v17)) {
    goto LABEL_10;
  }
  sub_22689F090(__p, "raAu");
  sub_226881624((unsigned __int8 *)v15, (uint64_t)__p, &v17);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v8 = sub_226888134(a1, (uint64_t)&v17, &v14, 0);
  if (!v8)
  {
    int v9 = sub_2268C33AC(a1, a2);
    int v10 = 1732604481;
    if (!v9 || v14)
    {
      if (v14 < 0x10000)
      {
LABEL_10:
        uint64_t v8 = 0;
        goto LABEL_11;
      }
      int v10 = 1732604486;
    }
    sub_2268BCC08(1651724337, v10, a3, a4);
    goto LABEL_10;
  }
LABEL_11:
  if (v16 < 0) {
    operator delete(v15[0]);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268C36AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C36FC(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v24, 0, sizeof(v24));
  sub_22689F090(v22, a2);
  BOOL v8 = sub_22687CBC8(a1, 909398611);
  std::string v19 = 0;
  unint64_t v20 = 0;
  uint64_t v21 = 0;
  sub_22689F090(__p, "raSe");
  sub_226881624((unsigned __int8 *)v22, (uint64_t)__p, &v24);
  if (v18 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v9 = sub_2268884D0(a1, (uint64_t)&v24, (uint64_t)&v19, 0);
  if (!v9)
  {
    int v10 = sub_2268C33AC(a1, a2);
    int v11 = 1732604481;
    unint64_t v12 = HIBYTE(v21);
    if (v10)
    {
      unint64_t v13 = v20;
      if (v21 >= 0) {
        unint64_t v14 = HIBYTE(v21);
      }
      else {
        unint64_t v14 = v20;
      }
      if (!v14) {
        goto LABEL_17;
      }
    }
    else
    {
      unint64_t v13 = v20;
    }
    if (v21 < 0) {
      unint64_t v12 = v13;
    }
    unint64_t v15 = 32;
    if (v8) {
      unint64_t v15 = 64;
    }
    if (v12 > v15)
    {
      int v11 = 1732604483;
LABEL_17:
      sub_2268BCC08(1918980965, v11, a3, a4);
    }
  }
  if (SHIBYTE(v21) < 0) {
    operator delete(v19);
  }
  if (v23 < 0) {
    operator delete(v22[0]);
  }
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_2268C3860(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C38C4(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v18, 0, sizeof(v18));
  sub_22689F090(v16, a2);
  unint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  unsigned int v12 = 0;
  sub_22689F090(__p, "raI2");
  sub_226881624((unsigned __int8 *)v16, (uint64_t)__p, &v18);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v18, (uint64_t)&v13, 0);
  if (!v7)
  {
    if (SHIBYTE(v15) < 0)
    {
      if (v14)
      {
        BOOL v8 = (char *)v13;
        goto LABEL_9;
      }
    }
    else if (HIBYTE(v15))
    {
      BOOL v8 = (char *)&v13;
LABEL_9:
      uint64_t v7 = sub_22686EA18(v8, 0, &v12, 0, 0, 0, 0);
      if (v7 || v12 + 1 < 2 || HIBYTE(v12) - 225 <= 0xDu)
      {
        sub_2268BCC08(1918978354, 1732604485, a3, a4);
        goto LABEL_14;
      }
    }
    uint64_t v7 = 0;
  }
LABEL_14:
  if (SHIBYTE(v15) < 0) {
    operator delete(v13);
  }
  if (v17 < 0) {
    operator delete(v16[0]);
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C3A20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (*(char *)(v28 - 33) < 0) {
    operator delete(*(void **)(v28 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C3A80(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v14, 0, sizeof(v14));
  sub_22689F090(v12, a2);
  unsigned int v11 = 0;
  sub_226880920((unsigned __int8 *)v12, 1651724338, &v14);
  if (!sub_22688D2FC(a1, (uint64_t)&v14)) {
    goto LABEL_7;
  }
  sub_22689F090(__p, "raU2");
  sub_226881624((unsigned __int8 *)v12, (uint64_t)__p, &v14);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v14, &v11, 0);
  if (!v7 && HIWORD(v11))
  {
    sub_2268BCC08(1651724338, 1732604486, a3, a4);
LABEL_7:
    uint64_t v7 = 0;
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C3B8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C3BDC(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v19, 0, sizeof(v19));
  sub_22689F090(v17, a2);
  BOOL v7 = sub_22687CBC8(a1, 909398611);
  std::string v14 = 0;
  unint64_t v15 = 0;
  uint64_t v16 = 0;
  sub_22689F090(__p, "raS2");
  sub_226881624((unsigned __int8 *)v17, (uint64_t)__p, &v19);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v8 = sub_2268884D0(a1, (uint64_t)&v19, (uint64_t)&v14, 0);
  if (!v8)
  {
    unint64_t v9 = HIBYTE(v16);
    if (v16 < 0) {
      unint64_t v9 = v15;
    }
    unint64_t v10 = 32;
    if (v7) {
      unint64_t v10 = 64;
    }
    if (v9 > v10) {
      sub_2268BCC08(1918980914, 1732604483, a3, a4);
    }
  }
  if (SHIBYTE(v16) < 0) {
    operator delete(v14);
  }
  if (v18 < 0) {
    operator delete(v17[0]);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268C3D08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v26 - 33) < 0) {
    operator delete(*(void **)(v26 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C3D6C(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v15, 0, sizeof(v15));
  sub_22689F090(v13, a2);
  std::string __p = 0;
  unint64_t v11 = 0;
  uint64_t v12 = 0;
  sub_226880920((unsigned __int8 *)v13, 1853117270, &v15);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v15, (uint64_t)&__p, 0);
  char v8 = HIBYTE(v12);
  if (!v7 && SHIBYTE(v12) < 0 && v11 > 0xFF)
  {
    sub_2268BCC08(1651723856, 1732604483, a3, a4);
    char v8 = HIBYTE(v12);
  }
  if (v8 < 0) {
    operator delete(__p);
  }
  if (v14 < 0) {
    operator delete(v13[0]);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C3E50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C3E94(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v17, 0, sizeof(v17));
  sub_22689F090(v15, a2);
  __int16 v14 = 0;
  int v12 = 0;
  int v13 = 0;
  uint64_t v7 = sub_2268883A8(a1, 1918977107, (BOOL *)&v14 + 1, 0);
  if (!v7)
  {
    uint64_t v7 = sub_2268883A8(a1, 1918979649, (BOOL *)&v14, 0);
    if (!v7)
    {
      uint64_t v7 = sub_22687AB24(a1, 2002864494, &v13, 0);
      if (!v7)
      {
        sub_22689F090(__p, "raSt");
        sub_226881624((unsigned __int8 *)v15, (uint64_t)__p, &v17);
        if (v11 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v7 = sub_226888134(a1, (uint64_t)&v17, &v12, 0);
        if (!v7)
        {
          if (sub_2268C0B88(a1) || v13 == 4)
          {
            int v8 = 1919763024;
            if (HIBYTE(v14) && (_BYTE)v14) {
              goto LABEL_15;
            }
          }
          else
          {
            if (v12 != 1 || !(HIBYTE(v14) | v14)) {
              goto LABEL_15;
            }
            int v8 = 1919767380;
          }
          sub_2268BCC08(1651724877, v8, a3, a4);
LABEL_15:
          uint64_t v7 = 0;
        }
      }
    }
  }
  if (v16 < 0) {
    operator delete(v15[0]);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C4024(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (*(char *)(v23 - 33) < 0) {
    operator delete(*(void **)(v23 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C4074(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(v14, a2);
  std::string __p = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  if (!sub_2268888D0(a1, 1718842224)) {
    goto LABEL_10;
  }
  sub_226880920((unsigned __int8 *)v14, 1718842224, &v16);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v16, (uint64_t)&__p, 0);
  if (v7) {
    goto LABEL_11;
  }
  if (sub_2268888D0(a1, 1651721805))
  {
    int v10 = 0;
    uint64_t v7 = sub_22687AB24(a1, 1651721805, &v10, 0);
    if (!v7 && v10 == 1)
    {
      uint64_t v8 = HIBYTE(v13);
      if (v13 < 0) {
        uint64_t v8 = v12;
      }
      if (!v8) {
        sub_2268BCC08(1718842224, 1732604481, a3, a4);
      }
    }
  }
  else
  {
LABEL_10:
    uint64_t v7 = 0;
  }
LABEL_11:
  if (SHIBYTE(v13) < 0) {
    operator delete(__p);
  }
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C41BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C4204(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v17, 0, sizeof(v17));
  sub_22689F090(v15, a2);
  std::string __p = 0;
  unint64_t v13 = 0;
  uint64_t v14 = 0;
  sub_226880920((unsigned __int8 *)v15, 1635077710, &v17);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v17, (uint64_t)&__p, 0);
  if (!v7)
  {
    if (v14 >= 0) {
      unint64_t v9 = HIBYTE(v14);
    }
    else {
      unint64_t v9 = v13;
    }
    if (v9)
    {
      BOOL v11 = 0;
      sub_226880920((unsigned __int8 *)v15, 1635078258, &v17);
      uint64_t v7 = sub_226888348(a1, (uint64_t)&v17, &v11, 0);
      if (v7) {
        goto LABEL_2;
      }
      int v10 = 1732604483;
      if (v11)
      {
        if (v9 < 0x33) {
          goto LABEL_2;
        }
      }
      else
      {
        int v10 = 1732604484;
      }
      sub_2268BCC08(1635077710, v10, a3, a4);
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
LABEL_2:
  if (SHIBYTE(v14) < 0) {
    operator delete(__p);
  }
  if (v16 < 0) {
    operator delete(v15[0]);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C434C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C4394(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v16, 0, sizeof(v16));
  sub_22689F090(v14, a2);
  std::string __p = 0;
  unint64_t v12 = 0;
  uint64_t v13 = 0;
  sub_226880920((unsigned __int8 *)v14, 1635077712, &v16);
  uint64_t v7 = sub_2268884D0(a1, (uint64_t)&v16, (uint64_t)&__p, 0);
  if (!v7)
  {
    if (v13 >= 0) {
      unint64_t v9 = HIBYTE(v13);
    }
    else {
      unint64_t v9 = v12;
    }
    if (v9)
    {
      BOOL v10 = 0;
      sub_226880920((unsigned __int8 *)v14, 1635078258, &v16);
      uint64_t v7 = sub_226888348(a1, (uint64_t)&v16, &v10, 0);
      if (!v7)
      {
        if (!v10) {
          sub_2268BCC08(1635077712, 1732604484, a3, a4);
        }
        if (v9 >= 0x21) {
          sub_2268BCC08(1635077712, 1732604483, a3, a4);
        }
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
  }
  if (SHIBYTE(v13) < 0) {
    operator delete(__p);
  }
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C44F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C4538(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v13, 0, sizeof(v13));
  sub_22689F090(__p, a2);
  if (!sub_22687CBC8(a1, 1400460148) || !sub_22687CBC8(a1, 1396928343))
  {
LABEL_11:
    uint64_t v7 = 0;
    goto LABEL_12;
  }
  int v10 = 0;
  __int16 v9 = 0;
  sub_226880920((unsigned __int8 *)__p, 1918979649, &v13);
  uint64_t v7 = sub_226888348(a1, (uint64_t)&v13, (BOOL *)&v9 + 1, 0);
  if (!v7)
  {
    sub_226880920((unsigned __int8 *)__p, 1918977107, &v13);
    uint64_t v7 = sub_226888348(a1, (uint64_t)&v13, (BOOL *)&v9, 0);
    if (!v7)
    {
      sub_226880920((unsigned __int8 *)__p, 1936605510, &v13);
      uint64_t v7 = sub_226888134(a1, (uint64_t)&v13, &v10, 0);
      if (!v7 && HIBYTE(v9) && (_BYTE)v9)
      {
        if ((v10 & 1) == 0 && !sub_2268BCE68(a1, 2002867022)) {
          sub_2268BCC08(1651725143, 2002867022, a3, a4);
        }
        goto LABEL_11;
      }
    }
  }
LABEL_12:
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C46B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C46E8(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v13, 0, sizeof(v13));
  sub_22689F090(__p, a2);
  if (!sub_22687CBC8(a1, 2000834122)) {
    goto LABEL_7;
  }
  int v10 = 0;
  BOOL v9 = 0;
  sub_226880920((unsigned __int8 *)__p, 1970496070, &v13);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v13, &v10, 0);
  if (!v7)
  {
    sub_226880920((unsigned __int8 *)__p, 2002929006, &v13);
    uint64_t v7 = sub_226888348(a1, (uint64_t)&v13, &v9, 0);
    if (!v7 && (v10 & 0x100) != 0 && !v9)
    {
      sub_2268BCC08(1651726160, 1918320962, a3, a4);
LABEL_7:
      uint64_t v7 = 0;
    }
  }
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C4800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C4838(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v13, 0, sizeof(v13));
  sub_22689F090(__p, a2);
  if (!sub_22687CBC8(a1, 1400460148) || !sub_22687CBC8(a1, 1396928343))
  {
LABEL_11:
    uint64_t v7 = 0;
    goto LABEL_12;
  }
  __int16 v10 = 0;
  BOOL v9 = 0;
  sub_226880920((unsigned __int8 *)__p, 1918979649, &v13);
  uint64_t v7 = sub_226888348(a1, (uint64_t)&v13, (BOOL *)&v10 + 1, 0);
  if (!v7)
  {
    sub_226880920((unsigned __int8 *)__p, 1918977107, &v13);
    uint64_t v7 = sub_226888348(a1, (uint64_t)&v13, (BOOL *)&v10, 0);
    if (!v7)
    {
      sub_226880920((unsigned __int8 *)__p, 2002865741, &v13);
      uint64_t v7 = sub_226888348(a1, (uint64_t)&v13, &v9, 0);
      if (!v7 && HIBYTE(v10) && (_BYTE)v10 && !v9)
      {
        if (!sub_2268BCE68(a1, 2002862918)) {
          sub_2268BCC08(1651726147, 2002862918, a3, a4);
        }
        goto LABEL_11;
      }
    }
  }
LABEL_12:
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C49B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C49E8()
{
  return 0;
}

uint64_t sub_2268C49F0(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v13, 0, sizeof(v13));
  sub_22689F090(__p, a2);
  if (!sub_22687CBC8(a1, 2000834122)) {
    goto LABEL_7;
  }
  int v10 = 0;
  BOOL v9 = 0;
  sub_226880920((unsigned __int8 *)__p, 1970496070, &v13);
  uint64_t v7 = sub_226888134(a1, (uint64_t)&v13, &v10, 0);
  if (!v7)
  {
    sub_226880920((unsigned __int8 *)__p, 2002929006, &v13);
    uint64_t v7 = sub_226888348(a1, (uint64_t)&v13, &v9, 0);
    if (!v7 && (v10 & 0x200) != 0 && !v9)
    {
      sub_2268BCC08(1651726150, 1918320962, a3, a4);
LABEL_7:
      uint64_t v7 = 0;
    }
  }
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_2268C4B08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C4B40(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  memset(&v27, 0, sizeof(v27));
  sub_22689F090(v25, a2);
  v23[0] = 0;
  v23[1] = 0;
  uint64_t v24 = 0;
  BOOL v22 = 0;
  uint64_t v8 = sub_2268A7C60(v28, 0x11uLL);
  MEMORY[0x22A65ABB0](v25, v8);
  sub_22689F090(&__p, "raNm");
  sub_226881624((unsigned __int8 *)v25, (uint64_t)&__p, &v27);
  if (SHIBYTE(v21) < 0) {
    operator delete(__p);
  }
  uint64_t v9 = sub_2268884D0(a1, (uint64_t)&v27, (uint64_t)v23, 0);
  if (!v9)
  {
    sub_226880920((unsigned __int8 *)v25, 1918979649, &v27);
    uint64_t v9 = sub_226888348(a1, (uint64_t)&v27, &v22, 0);
    if (!v9)
    {
      if (!sub_22687CBC8(a1, 1198748750))
      {
        uint64_t v9 = 0;
        goto LABEL_29;
      }
      uint64_t v9 = 0;
      if (sub_22688CFF0(a1) && v22)
      {
        uint64_t v18 = 0;
        std::string __p = 0;
        unint64_t v20 = 0;
        uint64_t v21 = 0;
        sub_22689F090(v16, a2);
        sub_22689F090(v14, "raNm");
        uint64_t v9 = (*(uint64_t (**)(uint64_t, void **, void **, std::string *))(*(void *)a1 + 16))(a1, v16, v14, &v27);
        if (v15 < 0) {
          operator delete(v14[0]);
        }
        if (v17 < 0) {
          operator delete(v16[0]);
        }
        if (v9) {
          goto LABEL_27;
        }
        uint64_t v9 = sub_2268884D0(a1, (uint64_t)&v27, (uint64_t)&__p, 0);
        if (v9) {
          goto LABEL_27;
        }
        int v10 = 1732604481;
        unint64_t v11 = HIBYTE(v21);
        if (v21 < 0) {
          unint64_t v11 = v20;
        }
        if (v11)
        {
          uint64_t v9 = sub_2268A5FD4(1651722062, &v18);
          if (v9) {
            goto LABEL_27;
          }
          unint64_t v12 = HIBYTE(v21);
          if (v21 < 0) {
            unint64_t v12 = v20;
          }
          if (v12 <= *(unsigned int *)(v18 + 20))
          {
            if (!sub_22688BFEC((unsigned __int8 *)&__p, (unsigned __int8 *)v23))
            {
LABEL_26:
              uint64_t v9 = 0;
LABEL_27:
              if (SHIBYTE(v21) < 0) {
                operator delete(__p);
              }
              goto LABEL_29;
            }
            int v10 = 1735283310;
          }
          else
          {
            int v10 = 1732604483;
          }
        }
        sub_2268BCC08(1651722062, v10, a3, a4);
        goto LABEL_26;
      }
    }
  }
LABEL_29:
  if (SHIBYTE(v24) < 0) {
    operator delete(v23[0]);
  }
  if (v26 < 0) {
    operator delete(v25[0]);
  }
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v27.__r_.__value_.__l.__data_);
  }
  return v9;
}

void sub_2268C4E10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (*(char *)(v40 - 81) < 0) {
    operator delete(*(void **)(v40 - 104));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C4EA4(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  memset(&v28, 0, sizeof(v28));
  sub_22689F090(v26, a2);
  BOOL v25 = 0;
  CFTypeRef cf = 0;
  sub_226880920((unsigned __int8 *)v26, 1918979649, &v28);
  uint64_t v8 = sub_226888348(a1, (uint64_t)&v28, &v25, 0);
  if (!v8)
  {
    if (!sub_22687CBC8(a1, 1198748750))
    {
      uint64_t v8 = 0;
      goto LABEL_15;
    }
    uint64_t v8 = 0;
    if (sub_22688CFF0(a1) && v25)
    {
      __int16 v23 = 0;
      int v22 = 0;
      std::string v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      sub_22689F090(v17, a2);
      sub_22689F090(__p, "raWM");
      uint64_t v8 = (*(uint64_t (**)(uint64_t, void **, void **, std::string *))(*(void *)a1 + 16))(a1, v17, __p, &v28);
      if (v16 < 0) {
        operator delete(__p[0]);
      }
      if (v18 < 0) {
        operator delete(v17[0]);
      }
      if (v8) {
        goto LABEL_11;
      }
      uint64_t v8 = sub_226888134(a1, (uint64_t)&v28, &v22, 0);
      if (v8) {
        goto LABEL_11;
      }
      if (!v22) {
        goto LABEL_56;
      }
      sub_22689F090(v17, "raWE");
      sub_226881624((unsigned __int8 *)&v28, (uint64_t)v17, &v28);
      if (v18 < 0) {
        operator delete(v17[0]);
      }
      sub_2268820DC(a1, (uint64_t)&v28, (CFMutableDictionaryRef *)&cf, 0);
      if ((v22 - 3) >= 3)
      {
        if (v22 == 2)
        {
          int v13 = 1769419083;
          if (cf && CFDataGetLength((CFDataRef)cf) == 13) {
            goto LABEL_56;
          }
        }
        else
        {
          if (v22 != 1 || cf && CFDataGetLength((CFDataRef)cf) == 5) {
            goto LABEL_56;
          }
          int v13 = 1769419851;
        }
      }
      else
      {
        sub_22689F090(v17, "raEA");
        sub_226881624((unsigned __int8 *)&v28, (uint64_t)v17, &v28);
        if (v18 < 0) {
          operator delete(v17[0]);
        }
        sub_226888348(a1, (uint64_t)&v28, (BOOL *)&v23 + 1, 0);
        sub_22689F090(v17, "raCr");
        sub_226881624((unsigned __int8 *)&v28, (uint64_t)v17, &v28);
        if (v18 < 0) {
          operator delete(v17[0]);
        }
        sub_2268884D0(a1, (uint64_t)&v28, (uint64_t)&v19, 0);
        sub_22689F090(v17, "rTSN");
        sub_226881624((unsigned __int8 *)&v28, (uint64_t)v17, &v28);
        if (v18 < 0) {
          operator delete(v17[0]);
        }
        uint64_t v8 = sub_226888348(a1, (uint64_t)&v28, (BOOL *)&v23, 0);
        if (v8) {
          goto LABEL_11;
        }
        BOOL v10 = sub_22687CBC8(a1, 1414745645);
        if ((_BYTE)v23) {
          BOOL v11 = v10;
        }
        else {
          BOOL v11 = 0;
        }
        if (v11)
        {
          uint64_t v12 = HIBYTE(v21);
          if (v21 < 0) {
            uint64_t v12 = v20;
          }
          if (v12 == 13) {
            goto LABEL_56;
          }
          int v13 = 1767134030;
        }
        else
        {
          if (HIBYTE(v23)) {
            goto LABEL_56;
          }
          int v13 = 1767329857;
          if (cf && CFDataGetLength((CFDataRef)cf) == 32)
          {
            uint64_t v14 = HIBYTE(v21);
            if (v21 < 0) {
              uint64_t v14 = v20;
            }
            if (v14) {
              goto LABEL_56;
            }
          }
        }
      }
      sub_2268BCC08(1651722064, v13, a3, a4);
LABEL_56:
      uint64_t v8 = 0;
LABEL_11:
      if (SHIBYTE(v21) < 0) {
        operator delete(v19);
      }
    }
  }
LABEL_15:
  if (cf) {
    CFRelease(cf);
  }
  if (v27 < 0) {
    operator delete(v26[0]);
  }
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v28.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268C5288(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (*(char *)(v35 - 49) < 0) {
    operator delete(*(void **)(v35 - 72));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C5328(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  if (!sub_22687CBC8(a1, 1768961614)) {
    return 0;
  }
  memset(&v24, 0, sizeof(v24));
  sub_22689F090(v22, a2);
  std::string __p = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  int v18 = 0;
  BOOL v17 = 0;
  size_t v8 = strlen(a2);
  if (v8 >= 4) {
    size_t v9 = 4;
  }
  else {
    size_t v9 = v8;
  }
  if (!strncmp(a2, "6Wad", v9)) {
    int v10 = 911696228;
  }
  else {
    int v10 = 1651717697;
  }
  sub_226880920((unsigned __int8 *)v22, 912483943, &v24);
  uint64_t v11 = sub_226888134(a1, (uint64_t)&v24, &v18, 0);
  if (!v11)
  {
    sub_226880920((unsigned __int8 *)v22, 912356724, &v24);
    uint64_t v11 = sub_226888348(a1, (uint64_t)&v24, &v17, 0);
    if (!v11)
    {
      sub_226880920((unsigned __int8 *)v22, 911696228, &v24);
      uint64_t v11 = sub_2268884D0(a1, (uint64_t)&v24, (uint64_t)&__p, 0);
      if (!v11)
      {
        BOOL v14 = (v18 == 5 || (v18 & 0xFFFFFFFD) == 1) && !v17;
        long long v25 = 0uLL;
        if (v17)
        {
LABEL_21:
          uint64_t v11 = 0;
          goto LABEL_22;
        }
        if (SHIBYTE(v21) < 0)
        {
          if (v20)
          {
            p_p = __p;
LABEL_35:
            uint64_t v11 = sub_22686E524(p_p, 0, &v25, 0, 0, 0, 0);
            if (v11)
            {
              sub_2268BCC08(v10, 1732604485, a3, a4);
              goto LABEL_22;
            }
          }
        }
        else if (HIBYTE(v21))
        {
          p_p = &__p;
          goto LABEL_35;
        }
        if (v14 && sub_22686E374((unsigned __int8 *)&v25, 0)) {
          sub_2268BCC08(v10, 1732604485, a3, a4);
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  if (SHIBYTE(v21) < 0) {
    operator delete(__p);
  }
  if (v23 < 0) {
    operator delete(v22[0]);
  }
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_2268C558C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C55D0(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  if (!sub_22687CBC8(a1, 1768961614)) {
    return 0;
  }
  memset(&v23, 0, sizeof(v23));
  sub_22689F090(v21, a2);
  std::string __p = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  int v17 = 0;
  BOOL v16 = 0;
  sub_226880920((unsigned __int8 *)v21, 912483943, &v23);
  uint64_t v8 = sub_226888134(a1, (uint64_t)&v23, &v17, 0);
  if (!v8)
  {
    sub_226880920((unsigned __int8 *)v21, 912356724, &v23);
    uint64_t v8 = sub_226888348(a1, (uint64_t)&v23, &v16, 0);
    if (!v8)
    {
      sub_226880920((unsigned __int8 *)v21, 911697783, &v23);
      uint64_t v8 = sub_2268884D0(a1, (uint64_t)&v23, (uint64_t)&__p, 0);
      if (!v8)
      {
        BOOL v11 = (v17 == 5 || (v17 & 0xFFFFFFFD) == 1) && !v16;
        long long v24 = 0uLL;
        if (v16)
        {
LABEL_15:
          uint64_t v8 = 0;
          goto LABEL_16;
        }
        if (SHIBYTE(v20) < 0)
        {
          if (v19)
          {
            p_p = __p;
LABEL_29:
            uint64_t v8 = sub_22686E524(p_p, 0, &v24, 0, 0, 0, 0);
            if (v8)
            {
              sub_2268BCC08(911697783, 1732604485, a3, a4);
              goto LABEL_16;
            }
          }
        }
        else if (HIBYTE(v20))
        {
          p_p = &__p;
          goto LABEL_29;
        }
        if (v11)
        {
          BOOL v14 = v17 == 3 && !v16;
          char v15 = v14 ? 0 : 3;
          if (sub_22686E374((unsigned __int8 *)&v24, v15)) {
            sub_2268BCC08(911697783, 1732604485, a3, a4);
          }
        }
        goto LABEL_15;
      }
    }
  }
LABEL_16:
  if (SHIBYTE(v20) < 0) {
    operator delete(__p);
  }
  if (v22 < 0) {
    operator delete(v21[0]);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268C580C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C5850(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  if (!sub_22687CBC8(a1, 1768961614)) {
    return 0;
  }
  memset(&v21, 0, sizeof(v21));
  sub_22689F090(v19, a2);
  std::string __p = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  int v15 = 0;
  BOOL v14 = 0;
  sub_226880920((unsigned __int8 *)v19, 912483943, &v21);
  uint64_t v8 = sub_226888134(a1, (uint64_t)&v21, &v15, 0);
  if (!v8)
  {
    sub_226880920((unsigned __int8 *)v19, 912356724, &v21);
    uint64_t v8 = sub_226888348(a1, (uint64_t)&v21, &v14, 0);
    if (!v8)
    {
      sub_226880920((unsigned __int8 *)v19, 910975332, &v21);
      uint64_t v8 = sub_2268884D0(a1, (uint64_t)&v21, (uint64_t)&__p, 0);
      if (!v8)
      {
        BOOL v11 = (v15 == 3 || v15 == 5) && !v14;
        long long v22 = 0uLL;
        if (v14)
        {
LABEL_15:
          uint64_t v8 = 0;
          goto LABEL_16;
        }
        if (SHIBYTE(v18) < 0)
        {
          if (v17)
          {
            p_p = __p;
LABEL_29:
            uint64_t v8 = sub_22686E524(p_p, 0, &v22, 0, 0, 0, 0);
            if (v8)
            {
              sub_2268BCC08(910975332, 1732604485, a3, a4);
              goto LABEL_16;
            }
          }
        }
        else if (HIBYTE(v18))
        {
          p_p = &__p;
          goto LABEL_29;
        }
        if (v11 && sub_22686E374((unsigned __int8 *)&v22, 0)) {
          sub_2268BCC08(910975332, 1732604485, a3, a4);
        }
        goto LABEL_15;
      }
    }
  }
LABEL_16:
  if (SHIBYTE(v18) < 0) {
    operator delete(__p);
  }
  if (v20 < 0) {
    operator delete(v19[0]);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268C5A74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C5AB8(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  if (!sub_22687CBC8(a1, 1768961614)) {
    return 0;
  }
  memset(&v24, 0, sizeof(v24));
  sub_22689F090(v22, a2);
  std::string __p = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  int v18 = 0;
  BOOL v17 = 0;
  size_t v8 = strlen(a2);
  if (v8 >= 4) {
    size_t v9 = 4;
  }
  else {
    size_t v9 = v8;
  }
  if (!strncmp(a2, "6PDa", v9)) {
    int v10 = 911230049;
  }
  else {
    int v10 = 1651717712;
  }
  sub_226880920((unsigned __int8 *)v22, 912483943, &v24);
  uint64_t v11 = sub_226888134(a1, (uint64_t)&v24, &v18, 0);
  if (!v11)
  {
    sub_226880920((unsigned __int8 *)v22, 912356724, &v24);
    uint64_t v11 = sub_226888348(a1, (uint64_t)&v24, &v17, 0);
    if (!v11)
    {
      sub_226880920((unsigned __int8 *)v22, 911230049, &v24);
      uint64_t v11 = sub_2268884D0(a1, (uint64_t)&v24, (uint64_t)&__p, 0);
      if (!v11)
      {
        BOOL v14 = (v18 == 3 || v18 == 5) && !v17;
        long long v25 = 0uLL;
        if (v17)
        {
LABEL_21:
          uint64_t v11 = 0;
          goto LABEL_22;
        }
        if (SHIBYTE(v21) < 0)
        {
          if (v20)
          {
            p_p = __p;
LABEL_35:
            uint64_t v11 = sub_22686E524(p_p, 0, &v25, 0, 0, 0, 0);
            if (v11)
            {
              sub_2268BCC08(v10, 1732604485, a3, a4);
              goto LABEL_22;
            }
          }
        }
        else if (HIBYTE(v21))
        {
          p_p = &__p;
          goto LABEL_35;
        }
        if (v14 && sub_22686E374((unsigned __int8 *)&v25, 0)) {
          sub_2268BCC08(v10, 1732604485, a3, a4);
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  if (SHIBYTE(v21) < 0) {
    operator delete(__p);
  }
  if (v23 < 0) {
    operator delete(v22[0]);
  }
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_2268C5D18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C5D5C(uint64_t a1, char *a2, void **a3, uint64_t *a4)
{
  if (!sub_22687CBC8(a1, 1768961614)) {
    return 0;
  }
  memset(&v21, 0, sizeof(v21));
  sub_22689F090(v19, a2);
  std::string __p = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  int v15 = 0;
  BOOL v14 = 0;
  sub_226880920((unsigned __int8 *)v19, 912483943, &v21);
  uint64_t v8 = sub_226888134(a1, (uint64_t)&v21, &v15, 0);
  if (!v8)
  {
    sub_226880920((unsigned __int8 *)v19, 912356724, &v21);
    uint64_t v8 = sub_226888348(a1, (uint64_t)&v21, &v14, 0);
    if (!v8)
    {
      sub_226880920((unsigned __int8 *)v19, 911701093, &v21);
      uint64_t v8 = sub_2268884D0(a1, (uint64_t)&v21, (uint64_t)&__p, 0);
      if (!v8)
      {
        BOOL v9 = v15 == 3 && !v14;
        BOOL v10 = v9;
        unsigned int v13 = 0;
        if (!v14)
        {
          if (SHIBYTE(v18) < 0)
          {
            if (!v17) {
              goto LABEL_20;
            }
            p_p = (char *)__p;
          }
          else
          {
            if (!HIBYTE(v18)) {
              goto LABEL_20;
            }
            p_p = (char *)&__p;
          }
          uint64_t v8 = sub_22686EA18(p_p, 0, &v13, 0, 0, 0, 0);
          if (v8)
          {
            sub_2268BCC08(911701093, 1732604485, a3, a4);
            goto LABEL_24;
          }
LABEL_20:
          if (v10 && sub_22686E294(bswap32(v13))) {
            sub_2268BCC08(911701093, 1732604485, a3, a4);
          }
          uint64_t v8 = 0;
        }
      }
    }
  }
LABEL_24:
  if (SHIBYTE(v18) < 0) {
    operator delete(__p);
  }
  if (v20 < 0) {
    operator delete(v19[0]);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  return v8;
}

void sub_2268C5F4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (*(char *)(v23 - 33) < 0) {
    operator delete(*(void **)(v23 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t **sub_2268C5F90()
{
  if (!qword_268148390) {
    operator new();
  }
  unint64_t v0 = &dword_26B622CE0;
  do
  {
    uint64_t result = sub_2268C6018((uint64_t **)qword_268148390, v0);
    *uint64_t result = (uint64_t *)v0;
    int v2 = *v0;
    v0 += 14;
  }
  while (v2 != 1651721040);
  return result;
}

uint64_t **sub_2268C6018(uint64_t **a1, int *a2)
{
  char v4 = a1 + 1;
  uint64_t v3 = a1[1];
  int v5 = *a2;
  if (v3)
  {
    while (1)
    {
      while (1)
      {
        char v6 = (uint64_t **)v3;
        int v7 = *((_DWORD *)v3 + 8);
        if (v5 >= v7) {
          break;
        }
        uint64_t v3 = *v6;
        char v4 = v6;
        if (!*v6) {
          goto LABEL_9;
        }
      }
      if (v7 >= v5) {
        break;
      }
      uint64_t v3 = v6[1];
      if (!v3)
      {
        char v4 = v6 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    char v6 = a1 + 1;
LABEL_9:
    uint64_t v8 = operator new(0x30uLL);
    v8[8] = v5;
    *((void *)v8 + 5) = 0;
    sub_2268C6CA8(a1, (uint64_t)v6, v4, (uint64_t *)v8);
    char v6 = (uint64_t **)v8;
  }
  return v6 + 5;
}

uint64_t sub_2268C60C4(uint64_t a1, const char *a2, void *a3, uint64_t a4)
{
  if (!a3) {
    return 4294967292;
  }
  signed int v8 = sub_22688BA8C(a2);
  uint64_t v9 = *(void *)(qword_268148390 + 8);
  if (!v9) {
    goto LABEL_12;
  }
  uint64_t v10 = qword_268148390 + 8;
  do
  {
    signed int v11 = *(_DWORD *)(v9 + 32);
    BOOL v12 = v11 < v8;
    if (v11 >= v8) {
      unsigned int v13 = (uint64_t *)v9;
    }
    else {
      unsigned int v13 = (uint64_t *)(v9 + 8);
    }
    if (!v12) {
      uint64_t v10 = v9;
    }
    uint64_t v9 = *v13;
  }
  while (*v13);
  if (v10 == qword_268148390 + 8 || v8 < *(_DWORD *)(v10 + 32)) {
LABEL_12:
  }
    uint64_t v10 = qword_268148390 + 8;
  *a3 = 0;
  if (v10 == qword_268148390 + 8) {
    return 0;
  }
  BOOL v14 = *(uint64_t (**)(uint64_t, const char *, void *, uint64_t))(*(void *)(v10 + 40) + 48);
  if (!v14) {
    return 0;
  }

  return v14(a1, a2, a3, a4);
}

uint64_t sub_2268C61A8(const __CFDictionary *a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  memset(&v28, 0, sizeof(v28));
  if (!a1) {
    return 4294967292;
  }
  CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(a1, @"legacywds");
  if (!Value) {
    return 0;
  }
  int v2 = (__CFString *)Value;
  CFIndex Count = CFArrayGetCount(Value);
  if (Count < 1) {
    return 0;
  }
  CFIndex v9 = Count;
  uint64_t v10 = 0;
  CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  while (1)
  {
    sub_22686088C(v2, (uint64_t)v29, (UInt8 *)"[*].%kO:mac", v4, v5, v6, v7, v8, v10);
    uint64_t v13 = v12;
    if (v12) {
      break;
    }
    *(_OWORD *)cStr = 0u;
    long long v31 = 0u;
    sub_22686F33C(v29, 6, cStr);
    CFStringRef v14 = CFStringCreateWithCString(v11, cStr, 0x8000100u);
    if (v14)
    {
      snprintf(cStr, 0x20uLL, "%ld", v10);
      MEMORY[0x22A65ABB0](&v28, "[*].");
      if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int64_t size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
      }
      else {
        int64_t size = v28.__r_.__value_.__l.__size_;
      }
      if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        BOOL v16 = &v28;
      }
      else {
        BOOL v16 = (std::string *)v28.__r_.__value_.__r.__words[0];
      }
      uint64_t v17 = (char *)v16 + size;
      if (size >= 1)
      {
        uint64_t v18 = v16;
        do
        {
          uint64_t v19 = memchr(v18, 42, size);
          if (!v19) {
            break;
          }
          if (*v19 == 42) {
            goto LABEL_19;
          }
          uint64_t v18 = (std::string *)(v19 + 1);
          int64_t size = v17 - (unsigned char *)v18;
        }
        while (v17 - (unsigned char *)v18 > 0);
      }
      uint64_t v19 = v17;
LABEL_19:
      if (v19 == v17) {
        std::string::size_type v20 = -1;
      }
      else {
        std::string::size_type v20 = v19 - (unsigned char *)v16;
      }
      std::string::replace(&v28, v20, 1uLL, cStr);
      std::string::append(&v28, "PeerMAC");
      if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v26 = &v28;
      }
      else {
        uint64_t v26 = (std::string *)v28.__r_.__value_.__r.__words[0];
      }
      uint64_t v13 = sub_226861F2C(v2, (uint64_t)v26, v14, v21, v22, v23, v24, v25);
      CFRelease(v14);
      if (v13) {
        break;
      }
      if (++v10 != v9) {
        continue;
      }
    }
    uint64_t v13 = 0;
    break;
  }
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v28.__r_.__value_.__l.__data_);
  }
  return v13;
}

void sub_2268C63C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C63E4(const __CFDictionary *a1)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  CFTypeRef v28 = 0;
  memset(&v26, 0, sizeof(v26));
  if (!a1) {
    return 4294967292;
  }
  CFTypeRef cf = 0;
  CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(a1, @"legacywds");
  if (!Value) {
    return 0;
  }
  int v2 = (__CFString *)Value;
  CFIndex Count = CFArrayGetCount(Value);
  if (Count < 1) {
    return 0;
  }
  CFIndex v9 = Count;
  uint64_t v10 = 0;
  while (1)
  {
    sub_22686088C(v2, (uint64_t)&v28, (UInt8 *)"[*].%kO", v4, v5, v6, v7, v8, v10);
    uint64_t v12 = v11;
    if (v11) {
      break;
    }
    uint64_t v12 = sub_22683F68C(1918979393, (const __CFString *)v28, 1, (CFDataRef *)&cf);
    if (v12) {
      break;
    }
    snprintf(__str, 0x20uLL, "%ld", v10);
    MEMORY[0x22A65ABB0](&v26, "[*].");
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int64_t size = HIBYTE(v26.__r_.__value_.__r.__words[2]);
    }
    else {
      int64_t size = v26.__r_.__value_.__l.__size_;
    }
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      CFStringRef v14 = &v26;
    }
    else {
      CFStringRef v14 = (std::string *)v26.__r_.__value_.__r.__words[0];
    }
    int v15 = (char *)v14 + size;
    if (size >= 1)
    {
      BOOL v16 = v14;
      do
      {
        uint64_t v17 = memchr(v16, 42, size);
        if (!v17) {
          break;
        }
        if (*v17 == 42) {
          goto LABEL_19;
        }
        BOOL v16 = (std::string *)(v17 + 1);
        int64_t size = v15 - (unsigned char *)v16;
      }
      while (v15 - (unsigned char *)v16 > 0);
    }
    uint64_t v17 = v15;
LABEL_19:
    std::string::size_type v18 = v17 == v15 ? -1 : v17 - (unsigned char *)v14;
    std::string::replace(&v26, v18, 1uLL, __str);
    std::string::append(&v26, "PeerMAC");
    uint64_t v24 = (v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v26
        : (std::string *)v26.__r_.__value_.__r.__words[0];
    uint64_t v12 = sub_226861F2C(v2, (uint64_t)v24, cf, v19, v20, v21, v22, v23);
    CFRelease(cf);
    if (v12) {
      break;
    }
    if (++v10 == v9)
    {
      uint64_t v12 = 0;
      break;
    }
  }
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v26.__r_.__value_.__l.__data_);
  }
  return v12;
}

void sub_2268C65F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C660C(const __CFDictionary *a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  CFTypeRef v29 = 0;
  CFTypeRef cf = 0;
  memset(&v28, 0, sizeof(v28));
  if (a1)
  {
    CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(a1, @"vaps");
    int v2 = (__CFString *)Value;
    if (Value)
    {
      CFIndex Count = CFArrayGetCount(Value);
      if (Count >= 1)
      {
        for (uint64_t i = 0; i != Count; ++i)
        {
          sub_22686088C(v2, (uint64_t)&cf, (UInt8 *)"[*].%kO", v3, v4, v5, v6, v7, i);
          uint64_t v11 = v10;
          if (v10 != -6727)
          {
            if (v10) {
              goto LABEL_32;
            }
            if (!cf) {
              break;
            }
            CFTypeID v12 = CFGetTypeID(cf);
            if (v12 == CFDataGetTypeID())
            {
              CFStringRef v13 = (const __CFString *)cf;
              CFTypeID TypeID = CFStringGetTypeID();
              uint64_t v11 = sub_2268C6854(TypeID, v13, TypeID, &v29);
              if (v11) {
                goto LABEL_32;
              }
              snprintf(__str, 0x20uLL, "%ld", i);
              MEMORY[0x22A65ABB0](&v28, "[*].");
              if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                int64_t size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
              }
              else {
                int64_t size = v28.__r_.__value_.__l.__size_;
              }
              if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                BOOL v16 = &v28;
              }
              else {
                BOOL v16 = (std::string *)v28.__r_.__value_.__r.__words[0];
              }
              uint64_t v17 = (char *)v16 + size;
              if (size >= 1)
              {
                std::string::size_type v18 = v16;
                do
                {
                  uint64_t v19 = memchr(v18, 42, size);
                  if (!v19) {
                    break;
                  }
                  if (*v19 == 42) {
                    goto LABEL_22;
                  }
                  std::string::size_type v18 = (std::string *)(v19 + 1);
                  int64_t size = v17 - (unsigned char *)v18;
                }
                while (v17 - (unsigned char *)v18 > 0);
              }
              uint64_t v19 = v17;
LABEL_22:
              std::string::size_type v20 = v19 == v17 ? -1 : v19 - (unsigned char *)v16;
              std::string::replace(&v28, v20, 1uLL, __str);
              std::string::append(&v28, "raCr");
              std::string v26 = (v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                  ? &v28
                  : (std::string *)v28.__r_.__value_.__r.__words[0];
              uint64_t v11 = sub_226861F2C(v2, (uint64_t)v26, v29, v21, v22, v23, v24, v25);
              CFRelease(v29);
              if (v11) {
                goto LABEL_32;
              }
            }
          }
        }
      }
    }
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = 4294967292;
  }
LABEL_32:
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v28.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_2268C6834(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2268C6854(int a1, const __CFString *cf, uint64_t a3, void *a4)
{
  uint64_t result = 4294967292;
  if (cf && a4)
  {
    CFTypeID v8 = CFGetTypeID(cf);
    if (v8 == a3)
    {
      *a4 = cf;
      CFRetain(cf);
      return 0;
    }
    CFTypeID v9 = v8;
    CFTypeID TypeID = CFStringGetTypeID();
    CFTypeID v11 = CFDataGetTypeID();
    if (v9 == TypeID)
    {
      if (v11 == a3)
      {
        uint64_t v21 = 0;
        std::string __s = 0;
        uint64_t result = sub_226861988(cf, (const char **)&__s, (UInt8 **)&v21);
        if (result) {
          return result;
        }
        size_t v12 = strlen(__s);
        *a4 = CFDataCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], (const UInt8 *)__s, v12);
        free(v21);
        BOOL v13 = *a4 == 0;
        goto LABEL_16;
      }
      return 4294967292;
    }
    if (v9 == v11)
    {
      if (CFStringGetTypeID() != a3) {
        return 4294967292;
      }
      CFAllocatorRef v14 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      BytePtr = CFDataGetBytePtr((CFDataRef)cf);
      CFIndex Length = CFDataGetLength((CFDataRef)cf);
      uint64_t v17 = (void *)CFStringCreateWithBytes(v14, BytePtr, Length, 0x8000100u, 0);
LABEL_15:
      *a4 = v17;
      BOOL v13 = v17 == 0;
LABEL_16:
      if (v13) {
        return 4294967293;
      }
      else {
        return 0;
      }
    }
    CFTypeID v18 = CFBooleanGetTypeID();
    CFTypeID v19 = CFNumberGetTypeID();
    if (v9 == v18)
    {
      if (v19 != a3) {
        return 4294967292;
      }
      LODWORD(__s) = *MEMORY[0x263EFFB38] != (void)cf;
      uint64_t v17 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &__s);
      goto LABEL_15;
    }
    if (v9 != v19 || CFBooleanGetTypeID() != a3) {
      return 4294967292;
    }
    LODWORD(__s) = 0;
    if (!CFNumberGetValue((CFNumberRef)cf, kCFNumberSInt32Type, &__s)) {
      return 4294967293;
    }
    if (__s > 1) {
      return 4294967292;
    }
    uint64_t result = 0;
    if (__s) {
      std::string::size_type v20 = (void *)MEMORY[0x263EFFB40];
    }
    else {
      std::string::size_type v20 = (void *)MEMORY[0x263EFFB38];
    }
    *a4 = *v20;
  }
  return result;
}

uint64_t sub_2268C6A60(const __CFDictionary *a1)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  CFTypeRef v29 = 0;
  CFTypeRef cf = 0;
  memset(&v28, 0, sizeof(v28));
  if (a1)
  {
    CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(a1, @"vaps");
    int v2 = (__CFString *)Value;
    if (Value)
    {
      CFIndex Count = CFArrayGetCount(Value);
      if (Count >= 1)
      {
        for (uint64_t i = 0; i != Count; ++i)
        {
          sub_22686088C(v2, (uint64_t)&cf, (UInt8 *)"[*].%kO", v3, v4, v5, v6, v7, i);
          uint64_t v11 = v10;
          if (v10 != -6727)
          {
            if (v10) {
              goto LABEL_32;
            }
            if (!cf) {
              break;
            }
            CFTypeID v12 = CFGetTypeID(cf);
            if (v12 == CFStringGetTypeID())
            {
              CFStringRef v13 = (const __CFString *)cf;
              CFTypeID TypeID = CFDataGetTypeID();
              uint64_t v11 = sub_2268C6854(TypeID, v13, TypeID, &v29);
              if (v11) {
                goto LABEL_32;
              }
              snprintf(__str, 0x20uLL, "%ld", i);
              MEMORY[0x22A65ABB0](&v28, "[*].");
              if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                int64_t size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
              }
              else {
                int64_t size = v28.__r_.__value_.__l.__size_;
              }
              if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                BOOL v16 = &v28;
              }
              else {
                BOOL v16 = (std::string *)v28.__r_.__value_.__r.__words[0];
              }
              uint64_t v17 = (char *)v16 + size;
              if (size >= 1)
              {
                CFTypeID v18 = v16;
                do
                {
                  CFTypeID v19 = memchr(v18, 42, size);
                  if (!v19) {
                    break;
                  }
                  if (*v19 == 42) {
                    goto LABEL_22;
                  }
                  CFTypeID v18 = (std::string *)(v19 + 1);
                  int64_t size = v17 - (unsigned char *)v18;
                }
                while (v17 - (unsigned char *)v18 > 0);
              }
              CFTypeID v19 = v17;
LABEL_22:
              std::string::size_type v20 = v19 == v17 ? -1 : v19 - (unsigned char *)v16;
              std::string::replace(&v28, v20, 1uLL, __str);
              std::string::append(&v28, "raCr");
              std::string v26 = (v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                  ? &v28
                  : (std::string *)v28.__r_.__value_.__r.__words[0];
              uint64_t v11 = sub_226861F2C(v2, (uint64_t)v26, v29, v21, v22, v23, v24, v25);
              CFRelease(v29);
              if (v11) {
                goto LABEL_32;
              }
            }
          }
        }
      }
    }
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = 4294967292;
  }
LABEL_32:
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v28.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_2268C6C88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_2268C6CA8(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  uint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  uint64_t result = sub_2268C6D00(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *sub_2268C6D00(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      int v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      uint64_t v3 = (uint64_t *)v2[2];
      uint64_t v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), uint64_t v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            CFTypeID v9 = (uint64_t **)a2[2];
          }
          else
          {
            CFTypeID v9 = (uint64_t **)v2[1];
            uint64_t v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              uint64_t v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *CFTypeID v9 = v2;
            v2[2] = (uint64_t)v9;
            uint64_t v3 = v9[2];
            int v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          *uint64_t v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), uint64_t v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          *int v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            uint64_t v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          uint64_t v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        int v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        *int v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      *uint64_t v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

__CFString *sub_2268C6E98(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t result = (__CFString *)objc_msgSend_systemTimeZone(MEMORY[0x263EFFA18], a2, a3);
  if (result)
  {
    int v6 = objc_msgSend_name(result, v4, v5);
    if (objc_msgSend_length(v6, v7, v8)) {
      return (__CFString *)v6;
    }
    else {
      return @"GMT";
    }
  }
  return result;
}

uint64_t sub_2268C6EE0(uint64_t a1, const char *a2, uint64_t a3)
{
  return objc_msgSend_timeZoneDataVersion(MEMORY[0x263EFFA18], a2, a3);
}

uint64_t sub_2268C6EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270F9A6D0](MEMORY[0x263EFFA18], sel_knownTimeZoneNames, a3);
}

uint64_t sub_2268C6EF8(CFStringRef theString, void *a2)
{
  uint64_t result = 4294960591;
  if (theString && a2)
  {
    if (CFStringGetLength(theString))
    {
      uint64_t v7 = objc_msgSend_timeZoneWithName_(MEMORY[0x263EFFA18], v5, (uint64_t)theString);
      if (v7
        || (uint64_t v7 = objc_msgSend_timeZoneWithAbbreviation_(MEMORY[0x263EFFA18], v6, (uint64_t)theString)) != 0)
      {
        uint64_t v8 = objc_msgSend_dictionaryWithCapacity_(MEMORY[0x263EFF9A0], v6, 3);
        if (v8)
        {
          uint64_t v11 = (void *)v8;
          uint64_t v12 = objc_msgSend_name(v7, v9, v10);
          objc_msgSend_setObject_forKey_(v11, v13, v12, @"zoneName");
          uint64_t v16 = objc_msgSend_data(v7, v14, v15);
          objc_msgSend_setObject_forKey_(v11, v17, v16, @"zoneFile");
          uint64_t v20 = objc_msgSend_timeZoneDataVersion(MEMORY[0x263EFFA18], v18, v19);
          objc_msgSend_setObject_forKey_(v11, v21, v20, @"zoneVersion");
          uint64_t result = 0;
          *a2 = v11;
        }
        else
        {
          return 4294960568;
        }
      }
      else
      {
        return 4294960569;
      }
    }
    else
    {
      return 4294960591;
    }
  }
  return result;
}

CFStringRef sub_2268C6FF4(const __CFString *result, const char *a2, uint64_t a3)
{
  if (result)
  {
    CFStringRef v3 = result;
    uint64_t result = (const __CFString *)sub_2268C6EE0((uint64_t)result, a2, a3);
    if (result)
    {
      CFStringRef v4 = result;
      uint64_t result = (const __CFString *)CFStringGetLength(result);
      if (result)
      {
        CFStringRef theString2 = 0;
        sub_22686088C(v3, (uint64_t)&theString2, (UInt8 *)"%kO", v5, v6, v7, v8, v9, @"zoneVersion");
        if (v10 || !theString2) {
          return 0;
        }
        else {
          return (const __CFString *)(CFStringCompare(v4, theString2, 1uLL) == kCFCompareGreaterThan);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2268C7080(const __CFString *a1, __CFString **a2)
{
  if (a1)
  {
    CFIndex Length = CFStringGetLength(a1);
    unsigned __int8 v5 = 0;
    if (a2 && Length)
    {
      uint64_t v6 = 0;
      unsigned __int8 v5 = 0;
      do
      {
        uint64_t v7 = off_268147938[v6 + 1];
        if (CFStringCompare(a1, off_268147938[v6], 1uLL) == kCFCompareEqualTo)
        {
          *a2 = v7;
          unsigned __int8 v5 = 1;
        }
        v6 += 2;
      }
      while (v6 != 36);
    }
  }
  else
  {
    return 0;
  }
  return v5;
}

__CFDictionary *sub_2268C7110(const __CFString *a1)
{
  unsigned int v24 = 0;
  CFMutableArrayRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (Mutable)
  {
    sub_22686088C(a1, (uint64_t)&v24, (UInt8 *)"%kO:int", v2, v3, v4, v5, v6, @"Version");
    BOOL v15 = v24 == 2 && v8 == 0 || v24 > 1;
    if (v15
      || (CFDictionaryRef v16 = (const __CFDictionary *)CFDictionaryGetValue((CFDictionaryRef)a1, @"Changed"),
          CFDictionaryRef v17 = (const __CFDictionary *)CFDictionaryGetValue((CFDictionaryRef)a1, @"Unchanged"),
          !v16)
      || (CFDictionaryRef v18 = v17) == 0)
    {
      CFDictionaryRef theDict = 0;
      sub_22686088C(a1, (uint64_t)&theDict, (UInt8 *)"%kO.[0]", v9, v10, v11, v12, v13, @"Configurations");
      if (v19) {
        return Mutable;
      }
      if (!theDict) {
        return Mutable;
      }
      CFDictionaryRef Value = (const __CFDictionary *)CFDictionaryGetValue(theDict, @"Changed");
      if (!Value) {
        return Mutable;
      }
      CFDictionaryRef v16 = Value;
      CFDictionaryRef v21 = (const __CFDictionary *)CFDictionaryGetValue(theDict, @"Unchanged");
      if (!v21) {
        return Mutable;
      }
      CFDictionaryRef v18 = v21;
    }
    if (!sub_22686084C((uint64_t)Mutable, v18))
    {
      CFDictionarySetValue(Mutable, @"APPLE-CONFIG", &stru_26DA6BE88);
      CFDictionaryApplyFunction(v16, (CFDictionaryApplierFunction)sub_2268C7274, Mutable);
    }
  }
  return Mutable;
}

void sub_2268C7274(const void *a1, CFDictionaryRef theDict, __CFDictionary *a3)
{
  if (a3)
  {
    CFDictionaryRef Value = CFDictionaryGetValue(theDict, @"Current");
    if (Value)
    {
      CFDictionarySetValue(a3, a1, Value);
    }
  }
}

uint64_t sub_2268C72DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"OSStatus SBSEngine_Create(StepByStepContextRef *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v23);
  }
  if (!a1) {
    return 4294960591;
  }
  uint64_t v9 = malloc_type_calloc(1uLL, 0x60uLL, 0x106004078599C16uLL);
  if (!v9) {
    return 4294960568;
  }
  uint64_t v10 = (uint64_t)v9;
  *uint64_t v9 = 0u;
  v9[1] = 0u;
  *((void *)v9 + 4) = dispatch_group_create();
  *(unsigned char *)(v10 + 40) = 1;
  CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  *(void *)(v10 + 48) = Mutable;
  if (!Mutable) {
    goto LABEL_13;
  }
  CFMutableDictionaryRef v20 = CFDictionaryCreateMutable(v11, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  *(void *)(v10 + 56) = v20;
  if (!v20) {
    goto LABEL_13;
  }
  *(void *)(v10 + 64) = 0;
  *(void *)(v10 + 80) = 0;
  uint64_t v21 = sub_2268DB560((void *)(v10 + 88), v13, v14, v15, v16, v17, v18, v19);
  if (v21)
  {
LABEL_14:
    sub_2268C742C(v10, v13, v14, v15, v16, v17, v18, v19);
    return v21;
  }
  if (!*(void *)(v10 + 88))
  {
LABEL_13:
    uint64_t v21 = 4294960568;
    goto LABEL_14;
  }
  uint64_t v21 = 0;
  *a1 = v10;
  return v21;
}

uint64_t sub_2268C742C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"OSStatus SBSEngine_Release(StepByStepContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v26);
  }
  if (!a1) {
    return 4294960591;
  }
  dispatch_group_wait(*(dispatch_group_t *)(a1 + 32), 0xFFFFFFFFFFFFFFFFLL);
  if (*(void *)a1)
  {
    CFRelease(*(CFTypeRef *)a1);
    *(void *)a1 = 0;
  }
  uint64_t v16 = *(int **)(a1 + 8);
  if (v16) {
    sub_2268A238C(v16);
  }
  uint64_t v17 = *(const void **)(a1 + 16);
  if (v17)
  {
    CFRelease(v17);
    *(void *)(a1 + 16) = 0;
  }
  uint64_t v18 = *(int **)(a1 + 24);
  if (v18) {
    sub_2268A238C(v18);
  }
  uint64_t v19 = *(NSObject **)(a1 + 32);
  if (v19) {
    dispatch_release(v19);
  }
  CFMutableDictionaryRef v20 = *(const void **)(a1 + 48);
  if (v20)
  {
    CFRelease(v20);
    *(void *)(a1 + 48) = 0;
  }
  uint64_t v21 = *(const void **)(a1 + 56);
  if (v21)
  {
    CFRelease(v21);
    *(void *)(a1 + 56) = 0;
  }
  uint64_t v22 = *(const void **)(a1 + 72);
  if (v22)
  {
    CFRelease(v22);
    *(void *)(a1 + 72) = 0;
  }
  uint64_t v23 = *(const void **)(a1 + 64);
  if (v23)
  {
    CFRelease(v23);
    *(void *)(a1 + 64) = 0;
  }
  unsigned int v24 = *(const void **)(a1 + 80);
  if (v24)
  {
    CFRelease(v24);
    *(void *)(a1 + 80) = 0;
  }
  sub_2268DB710(*(_DWORD **)(a1 + 88), v9, v10, v11, v12, v13, v14, v15);
  free((void *)a1);
  return 0;
}

uint64_t sub_2268C7558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"OSStatus SBSEngine_Cancel(StepByStepContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v11);
  }
  if (!a1) {
    return 4294960591;
  }
  uint64_t v9 = *(void *)(a1 + 88);

  return sub_2268DBA54(v9, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_2268C75EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"OSStatus SBSEngine_Resume(StepByStepContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v23);
  }
  if (!a1) {
    return 4294960591;
  }
  uint64_t v9 = a1[4];
  if (!v9 || !a1[6]) {
    return 4294960591;
  }
  global_queue = dispatch_get_global_queue(0, 0);
  dispatch_group_async_f(v9, global_queue, a1, (dispatch_function_t)sub_2268C76C4);
  uint64_t result = sub_2268DBB2C(a1[11], v11, v12, v13, v14, v15, v16, v17);
  if (!result)
  {
    sub_2268DCB00(a1[11], 14, 0, 0, v19, v20, v21, v22);
    return 0;
  }
  return result;
}

void sub_2268C76C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v249);
  }
  if (!a1) {
    return;
  }
  if (!*(void *)a1 || !*(void *)(a1 + 8))
  {
LABEL_661:
    uint64_t v9 = 4294960591;
    goto LABEL_662;
  }
  uint64_t v9 = 4294960573;
  if (sub_2268DBC88(*(void *)(a1 + 88))) {
    goto LABEL_662;
  }
  CFAllocatorRef allocator = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  while (2)
  {
    switch(sub_2268CC018(a1))
    {
      case 1u:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_CreateExtendOrReplace");
        }
        int v257 = 0;
        if (!*(void *)(a1 + 48)) {
          goto LABEL_661;
        }
        uint64_t v258 = 0;
        v259[0] = 0;
        LODWORD(ValueAtIndex) = 0;
        sub_2268CC78C(a1, v259);
        uint64_t v9 = v11;
        if (v11) {
          goto LABEL_17;
        }
        if (!v259[0])
        {
          uint64_t v9 = 4294960568;
          goto LABEL_17;
        }
        if (*(void *)(a1 + 80))
        {
          uint64_t v112 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%ks=%O", v10, a5, a6, a7, a8, (uint64_t)"kSBSKey_AutoGuessRecommendation");
        }
        else
        {
          if (CFDictionaryContainsKey((CFDictionaryRef)v259[0], @"kSBSKey_SelectorChoice")) {
            goto LABEL_384;
          }
          uint64_t v112 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%ks=%i", v158, a5, a6, a7, a8, (uint64_t)"kSBSKey_SelectorChoice");
        }
        uint64_t v9 = v112;
        if (v112) {
          goto LABEL_17;
        }
LABEL_384:
        if (*(void *)(a1 + 64))
        {
          if (!CFDictionaryContainsKey((CFDictionaryRef)v259[0], @"kSBSKey_RestoreRecommendation"))
          {
            uint64_t v9 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%ks=%O", v159, a5, a6, a7, a8, (uint64_t)"kSBSKey_RestoreRecommendation");
            if (v9) {
              goto LABEL_17;
            }
          }
        }
        uint64_t v258 = 0;
        uint64_t v9 = sub_2268CC818(a1, 1, (uint64_t)v259[0], (CFTypeRef *)&v258, a5, a6, a7, a8);
        if (v9) {
          goto LABEL_17;
        }
        if (!v258) {
          goto LABEL_503;
        }
        sub_22686088C(v258, (uint64_t)&ValueAtIndex, (UInt8 *)"%ks:int", v160, a5, a6, a7, a8, (uint64_t)"kSBSKey_SelectorChoice");
        uint64_t v9 = v162;
        if (v162) {
          goto LABEL_17;
        }
        uint64_t v163 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%ks=%i", v161, a5, a6, a7, a8, (uint64_t)"kSBSKey_SelectorChoice");
        uint64_t v9 = v163;
        if (v163) {
          goto LABEL_17;
        }
        uint64_t v9 = 4294960587;
        if ((int)ValueAtIndex > 299)
        {
          if (ValueAtIndex == 300)
          {
            uint64_t v167 = 0;
            int v168 = 10;
          }
          else
          {
            if (ValueAtIndex != 400
              || (uint64_t v256 = 0,
                  sub_22686088C((const __CFString *)v259[0], (uint64_t)&v256, (UInt8 *)"%ks", v166, a5, a6, a7, a8, (uint64_t)"kSBSKey_RestoreRecommendation"), uint64_t v9 = v208, v208))
            {
LABEL_17:
              if (v257) {
                CFRelease(v257);
              }
              if (!v9)
              {
                if (dword_268147A58 <= 800)
                {
                  uint64_t v12 = "eSBSStep_CreateExtendOrReplace";
                  if (dword_268147A58 != -1) {
                    goto LABEL_628;
                  }
                  BOOL v13 = sub_226865630((uint64_t)&dword_268147A58, 0x320u);
                  uint64_t v12 = "eSBSStep_CreateExtendOrReplace";
                  if (v13) {
                    goto LABEL_628;
                  }
                }
                goto LABEL_629;
              }
              goto LABEL_662;
            }
            if (!v256) {
              goto LABEL_503;
            }
            uint64_t v9 = sub_22685FC7C(allocator, (CFTypeRef *)&v257, (uint64_t)"{%ks=%O}", v207, a5, a6, a7, a8, (uint64_t)"kSBSKey_RestoreRecommendation");
            if (v9) {
              goto LABEL_17;
            }
            uint64_t v167 = v257;
            if (!v257)
            {
LABEL_503:
              uint64_t v9 = 4294960569;
              goto LABEL_17;
            }
            int v168 = 16;
          }
        }
        else if (ValueAtIndex == 100)
        {
          uint64_t v167 = 0;
          int v168 = 2;
        }
        else
        {
          if (ValueAtIndex != 200) {
            goto LABEL_17;
          }
          if (*(void *)a1 && !sub_226901504(v163, v164, v165))
          {
            uint64_t v167 = 0;
            int v168 = 5;
          }
          else
          {
            uint64_t v167 = 0;
            int v168 = 7;
          }
        }
        uint64_t v9 = sub_2268CA934(a1, v168, (uint64_t)v167);
        goto LABEL_17;
      case 2u:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_Create_Config");
        }
        uint64_t v33 = sub_2268CC080(a1);
        if (v33) {
          goto LABEL_665;
        }
        unsigned int v44 = sub_2268CC018(a1);
        LOBYTE(v24) = v44 == 2;
        if (dword_268147A58 > 800) {
          goto LABEL_609;
        }
        unsigned int v45 = v44;
        if (dword_268147A58 == -1 && !sub_226865630((uint64_t)&dword_268147A58, 0x320u)) {
          goto LABEL_609;
        }
        sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- SBS state: \"%s\" ----------\n\n", v20, v21, v22, v23, (uint64_t)"eSBSStep_Create_Config");
        if (v45 != 2) {
          goto LABEL_629;
        }
        goto LABEL_664;
      case 3u:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_Guest_Config");
        }
        uint64_t v258 = 0;
        if (!*(void *)(a1 + 48)) {
          goto LABEL_661;
        }
        v259[0] = 0;
        int v257 = 0;
        if (*(void *)a1 && *(void *)(a1 + 8) && *(void *)(a1 + 72))
        {
          sub_2268CC78C(a1, v259);
          uint64_t v9 = v27;
          if (v27) {
            goto LABEL_249;
          }
          if (v259[0])
          {
            sub_22686088C(*(const __CFString **)(a1 + 72), (uint64_t)&v257, (UInt8 *)"%ks", v26, a5, a6, a7, a8, (uint64_t)"kSBSKey_Result_ConfigurationOptions");
            uint64_t v9 = v29;
            if (v29) {
              goto LABEL_249;
            }
            if (v257)
            {
              uint64_t v9 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%##O", v28, a5, a6, a7, a8, (uint64_t)v257);
              if (v9) {
                goto LABEL_249;
              }
              uint64_t v30 = sub_2268CC818(a1, 3, (uint64_t)v259[0], (CFTypeRef *)&v258, a5, a6, a7, a8);
              if (v30 == -6769)
              {
                uint64_t v32 = sub_2268CA934(a1, 0, 0);
              }
              else
              {
                uint64_t v9 = v30;
                if (v30) {
                  goto LABEL_249;
                }
                if (!v258)
                {
                  uint64_t v9 = 4294960569;
                  goto LABEL_662;
                }
                uint64_t v32 = sub_226860774(allocator, (__CFArray *)v257, (uint64_t)"%##O", v31, a5, a6, a7, a8, (uint64_t)v258);
              }
              uint64_t v9 = v32;
            }
            else
            {
              uint64_t v9 = 4294960569;
            }
          }
          else
          {
            uint64_t v9 = 4294960568;
          }
        }
        else
        {
          uint64_t v9 = 4294960591;
        }
LABEL_249:
        if (v258) {
          CFRelease(v258);
        }
        if (v9) {
          goto LABEL_662;
        }
        unsigned int v101 = sub_2268CC018(a1);
        BOOL v24 = v101 == 3;
        if (dword_268147A58 <= 800)
        {
          unsigned int v102 = v101;
          if (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))
          {
            sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- SBS state: \"%s\" ----------\n\n", v20, v21, v22, v23, (uint64_t)"eSBSStep_Guest_Config");
            if (v102 == 3) {
              goto LABEL_664;
            }
            goto LABEL_629;
          }
        }
LABEL_609:
        if (!v24)
        {
LABEL_629:
          if (sub_2268DBC88(*(void *)(a1 + 88)))
          {
            uint64_t v9 = 4294960573;
            goto LABEL_662;
          }
          continue;
        }
LABEL_664:
        uint64_t v33 = sub_2268DBBDC(*(void *)(a1 + 88), v17, v18, v19, v20, v21, v22, v23);
LABEL_665:
        uint64_t v9 = v33;
LABEL_662:
        sub_2268DC568(*(void *)(a1 + 88), 15, v9, *(void *)(a1 + 72), a5, a6, a7, a8);
        return;
      case 4u:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_ExtendWiredOrWireless");
        }
        int v257 = 0;
        if (!*(void *)(a1 + 48)) {
          goto LABEL_661;
        }
        uint64_t v258 = 0;
        v259[0] = 0;
        LODWORD(cf) = 0;
        if (!*(void *)a1) {
          goto LABEL_534;
        }
        sub_2268CC78C(a1, v259);
        uint64_t v9 = v46;
        if (v46) {
          goto LABEL_535;
        }
        if (!v259[0]) {
          goto LABEL_542;
        }
        if (!CFDictionaryContainsKey((CFDictionaryRef)v259[0], @"kSBSKey_SelectorChoice"))
        {
          uint64_t v169 = (__CFArray *)v259[0];
          sub_22685BE8C(*(const __CFString **)a1, v47, v48, v49, a5, a6, a7, a8);
          uint64_t v9 = sub_226860774(allocator, v169, (uint64_t)"%ks=%i", v170, v171, v172, v173, v174, (uint64_t)"kSBSKey_SelectorChoice");
          if (v9) {
            goto LABEL_535;
          }
        }
        uint64_t v258 = 0;
        uint64_t v50 = sub_2268CC818(a1, 4, (uint64_t)v259[0], (CFTypeRef *)&v258, a5, a6, a7, a8);
        if (v50 == -6769)
        {
          CFIndex v55 = 0;
          int v56 = 0;
          goto LABEL_420;
        }
        uint64_t v9 = v50;
        if (v50) {
          goto LABEL_535;
        }
        if (!v258) {
          goto LABEL_543;
        }
        sub_22686088C(v258, (uint64_t)&cf, (UInt8 *)"%ks:int", v51, a5, a6, a7, a8, (uint64_t)"kSBSKey_SelectorChoice");
        uint64_t v9 = v53;
        if (v53) {
          goto LABEL_535;
        }
        uint64_t v9 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%ks=%i", v52, a5, a6, a7, a8, (uint64_t)"kSBSKey_SelectorChoice");
        if (v9) {
          goto LABEL_535;
        }
        if (cf == 220)
        {
          CFIndex v55 = 0;
          int v56 = 5;
          goto LABEL_420;
        }
        if (cf != 210)
        {
          uint64_t v9 = 4294960587;
          goto LABEL_535;
        }
        uint64_t v256 = 0;
        uint64_t v54 = sub_2268CCA84(a1, (CFTypeRef *)&v256);
        if (v54 == -6727) {
          goto LABEL_132;
        }
        uint64_t v9 = v54;
        CFTypeRef ValueAtIndex = 0;
        if (v54) {
          goto LABEL_535;
        }
        if (!v256) {
          goto LABEL_542;
        }
        if (sub_2268A58D0(*(void *)(a1 + 8), 1852787795)) {
          uint64_t v209 = 14;
        }
        else {
          uint64_t v209 = 6;
        }
        uint64_t v210 = sub_2268CCCA0(v256, (const char *)v209, *(const __CFString **)a1, (__CFArray **)&ValueAtIndex);
        if (v210 == -6727)
        {
LABEL_132:
          CFIndex v55 = 0;
          int v56 = 8;
LABEL_420:
          uint64_t v9 = sub_2268CA934(a1, v56, (uint64_t)v55);
          goto LABEL_535;
        }
        uint64_t v9 = v210;
        if (!v210)
        {
          if (ValueAtIndex)
          {
            if (CFArrayGetCount((CFArrayRef)ValueAtIndex))
            {
              uint64_t v9 = sub_22685FC7C(allocator, (CFTypeRef *)&v257, (uint64_t)"{%ks=%O}", v211, a5, a6, a7, a8, (uint64_t)"kSBSKey_NetworkScanRecordList");
              if (ValueAtIndex) {
                CFRelease(ValueAtIndex);
              }
              if (!v9)
              {
                CFIndex v55 = v257;
                if (v257)
                {
                  int v56 = 7;
                  goto LABEL_420;
                }
LABEL_543:
                uint64_t v9 = 4294960569;
              }
            }
            else
            {
LABEL_534:
              uint64_t v9 = 4294960591;
            }
          }
          else
          {
LABEL_542:
            uint64_t v9 = 4294960568;
          }
        }
LABEL_535:
        if (v257) {
          CFRelease(v257);
        }
        if (v9) {
          goto LABEL_662;
        }
        if (dword_268147A58 > 800) {
          goto LABEL_629;
        }
        uint64_t v12 = "eSBSStep_ExtendWiredOrWireless";
        if (dword_268147A58 == -1)
        {
          BOOL v212 = sub_226865630((uint64_t)&dword_268147A58, 0x320u);
          uint64_t v12 = "eSBSStep_ExtendWiredOrWireless";
          if (!v212) {
            goto LABEL_629;
          }
        }
        goto LABEL_628;
      case 5u:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_ExtendWired_Connections");
        }
        uint64_t v33 = sub_2268CC3AC(a1);
        if (v33) {
          goto LABEL_665;
        }
        if (dword_268147A58 > 800) {
          goto LABEL_629;
        }
        uint64_t v12 = "eSBSStep_ExtendWired_Connections";
        if (dword_268147A58 == -1)
        {
          BOOL v34 = sub_226865630((uint64_t)&dword_268147A58, 0x320u);
          uint64_t v12 = "eSBSStep_ExtendWired_Connections";
          if (!v34) {
            goto LABEL_629;
          }
        }
        goto LABEL_628;
      case 6u:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_ExtendWired_Config");
        }
        uint64_t v258 = 0;
        v259[0] = 0;
        CFTypeRef ValueAtIndex = 0;
        uint64_t v256 = 0;
        int v257 = 0;
        if (!*(void *)(a1 + 48)) {
          goto LABEL_661;
        }
        sub_2268CC78C(a1, v259);
        uint64_t v9 = v57;
        if (v57) {
          goto LABEL_139;
        }
        if (!v259[0]) {
          goto LABEL_339;
        }
        uint64_t v113 = sub_2268CC818(a1, 6, (uint64_t)v259[0], (CFTypeRef *)&v258, a5, a6, a7, a8);
        if (v113 == -6769)
        {
          uint64_t v9 = sub_2268CA934(a1, 0, 0);
        }
        else
        {
          uint64_t v9 = v113;
          if (v113) {
            goto LABEL_139;
          }
          if (v258)
          {
            sub_22686088C(v258, (uint64_t)&ValueAtIndex, (UInt8 *)"%ks", v114, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceBase");
            uint64_t v9 = v115;
            if (v115) {
              goto LABEL_139;
            }
            if (!ValueAtIndex) {
              goto LABEL_339;
            }
            uint64_t v9 = sub_2268A58BC(*(void *)(a1 + 8), &v256);
            if (!v9)
            {
              if (!v256)
              {
                uint64_t v9 = 4294960569;
                goto LABEL_141;
              }
              uint64_t v9 = sub_22685FC7C(allocator, (CFTypeRef *)&v257, (uint64_t)"{%ks=%i%ks=%O%ks=%O%ks=%O%ks=%O}", v116, a5, a6, a7, a8, (uint64_t)"kSBSKey_Result_ConfigurationChoice");
              if (!v9)
              {
                if (v257)
                {
                  uint64_t v9 = 0;
                  *(void *)(a1 + 72) = v257;
                  int v257 = 0;
                  goto LABEL_139;
                }
LABEL_339:
                uint64_t v9 = 4294960568;
              }
            }
          }
          else
          {
            uint64_t v9 = 4294960569;
          }
        }
LABEL_139:
        if (v256)
        {
          CFRelease(v256);
          uint64_t v256 = 0;
        }
LABEL_141:
        if (v258)
        {
          CFRelease(v258);
          uint64_t v258 = 0;
        }
        if (v257) {
          CFRelease(v257);
        }
        if (v9) {
          goto LABEL_662;
        }
        unsigned int v58 = sub_2268CC018(a1);
        BOOL v24 = v58 == 6;
        if (dword_268147A58 > 800) {
          goto LABEL_609;
        }
        unsigned int v59 = v58;
        if (dword_268147A58 == -1 && !sub_226865630((uint64_t)&dword_268147A58, 0x320u)) {
          goto LABEL_609;
        }
        sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- SBS state: \"%s\" ----------\n\n", v20, v21, v22, v23, (uint64_t)"eSBSStep_ExtendWired_Config");
        if (v59 == 6) {
          goto LABEL_664;
        }
        goto LABEL_629;
      case 7u:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_ExtendNetworkChoice");
        }
        int v257 = 0;
        uint64_t v258 = 0;
        uint64_t v256 = 0;
        CFTypeRef cf = 0;
        CFTypeRef ValueAtIndex = 0;
        CFTypeRef v253 = 0;
        if (!*(void *)(a1 + 48)) {
          goto LABEL_661;
        }
        if (!*(void *)a1)
        {
          uint64_t v83 = 0;
          uint64_t v9 = 4294960591;
          goto LABEL_475;
        }
        sub_2268CC78C(a1, &v258);
        if (v82) {
          goto LABEL_202;
        }
        if (!v258) {
          goto LABEL_474;
        }
        if (!CFDictionaryContainsKey((CFDictionaryRef)v258, @"kSBSKey_SelectorChoice"))
        {
          uint64_t v82 = sub_226860774(allocator, (__CFArray *)v258, (uint64_t)"%ks=%i", v143, v144, v145, v146, v147, (uint64_t)"kSBSKey_SelectorChoice");
          if (v82) {
            goto LABEL_202;
          }
        }
        uint64_t v148 = sub_2268CCA84(a1, &v253);
        if (v148 == -6727) {
          goto LABEL_446;
        }
        uint64_t v9 = v148;
        if (v148) {
          goto LABEL_203;
        }
        if (!v253) {
          goto LABEL_474;
        }
        if (sub_2268A58D0(*(void *)(a1 + 8), 1112757313))
        {
          LODWORD(v259[0]) = 0;
          uint64_t v82 = sub_2268A5604(*(void *)(a1 + 8), 1937326416, v259);
          if (v82) {
            goto LABEL_202;
          }
          BOOL v150 = LODWORD(v259[0]) >= 0x77 && !sub_2268A58D0(*(void *)(a1 + 8), 1632923251);
        }
        else
        {
          BOOL v150 = 1;
        }
        if (sub_2268A58D0(*(void *)(a1 + 8), 1852787795)) {
          int v182 = 14;
        }
        else {
          int v182 = 6;
        }
        if (sub_2268CCCA0((CFArrayRef)v253, (const char *)(v182 | v150), *(const __CFString **)a1, &v256) != -6727)
        {
          uint64_t v82 = sub_226860774(allocator, (__CFArray *)v258, (uint64_t)"%ks=%O", v149, a5, a6, a7, a8, (uint64_t)"kSBSKey_NetworkScanRecordList");
          if (v82)
          {
LABEL_202:
            uint64_t v9 = v82;
LABEL_203:
            uint64_t v83 = 0;
            goto LABEL_475;
          }
        }
LABEL_446:
        sub_22686088C(v258, (uint64_t)&v256, (UInt8 *)"%ks", v149, a5, a6, a7, a8, (uint64_t)"kSBSKey_NetworkScanRecordList");
        if (v82) {
          goto LABEL_202;
        }
        if (!v256) {
          goto LABEL_474;
        }
        if (CFDictionaryContainsKey((CFDictionaryRef)v258, @"kSBSKey_SourceNetwork")) {
          goto LABEL_456;
        }
        if (!v256) {
          goto LABEL_456;
        }
        uint64_t v188 = sub_2268DD4C4(*(void *)(a1 + 88), &cf, 0, v183, v184, v185, v186, v187);
        if (v188 == -6727) {
          goto LABEL_456;
        }
        uint64_t v9 = v188;
        uint64_t v83 = 0;
        if (v188) {
          goto LABEL_475;
        }
        if (!cf)
        {
          uint64_t v83 = 0;
          uint64_t v9 = 4294960568;
          goto LABEL_477;
        }
        CFIndex v189 = sub_22685BFE8((const __CFString *)cf, 0, v256);
        if (v189 == -1) {
          goto LABEL_456;
        }
        if (!CFArrayGetValueAtIndex(v256, v189))
        {
LABEL_474:
          uint64_t v83 = 0;
          uint64_t v9 = 4294960568;
          goto LABEL_475;
        }
        uint64_t v82 = sub_226860774(allocator, (__CFArray *)v258, (uint64_t)"%ks=%O", v190, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceNetwork");
        if (v82) {
          goto LABEL_202;
        }
LABEL_456:
        uint64_t v83 = sub_2268A58F4(*(__CFArray **)(a1 + 8));
        if (v83)
        {
          uint64_t v194 = sub_226860774(allocator, (__CFArray *)v258, (uint64_t)"%ks=%O", v193, a5, a6, a7, a8, (uint64_t)"kSBSKey_TargetBaseFeatures");
          if (v194) {
            goto LABEL_509;
          }
        }
        if (*(unsigned char *)(a1 + 41)) {
          goto LABEL_459;
        }
        if (!sub_22685BE8C(*(const __CFString **)a1, v191, v192, v193, a5, a6, a7, a8)) {
          goto LABEL_459;
        }
        v259[0] = 0;
        if (!sub_2268CCE20(a1, @"kSBSCacheKey_TargetRemoteBrowseRecords", v259))
        {
          if (v259[0]) {
            goto LABEL_459;
          }
        }
        v259[0] = 0;
        uint64_t v9 = sub_2268E065C(*(void *)(a1 + 88), *(const __CFString **)a1, 0, 0, 0, 0, v259, a8);
        if (v9) {
          goto LABEL_475;
        }
        if (v259[0])
        {
          uint64_t v9 = sub_2268CA730(a1, (const __CFString *)v259[0]);
          if (v259[0])
          {
            CFRelease(v259[0]);
            v259[0] = 0;
          }
          if (v9) {
            goto LABEL_475;
          }
        }
        sub_2268CD048((uint64_t *)a1, (CFArrayRef *)&v253);
        CFTypeRef v253 = 0;
        *(unsigned char *)(a1 + 41) = 1;
LABEL_459:
        int v257 = 0;
        uint64_t v195 = sub_2268CC818(a1, 7, (uint64_t)v258, (CFTypeRef *)&v257, a5, a6, a7, a8);
        if (v195 == -6769)
        {
          CFTypeRef v205 = 0;
          int v204 = 0;
LABEL_508:
          uint64_t v194 = sub_2268CA934(a1, v204, (uint64_t)v205);
LABEL_509:
          uint64_t v9 = v194;
          goto LABEL_475;
        }
        uint64_t v9 = v195;
        if (v195 != -6723)
        {
          v259[0] = 0;
          LODWORD(theArray) = 0;
          if (!v195)
          {
            if (!v257) {
              goto LABEL_569;
            }
            sub_22686088C(v257, (uint64_t)&theArray, (UInt8 *)"%ks:int", v196, a5, a6, a7, a8, (uint64_t)"kSBSKey_SelectorChoice");
            uint64_t v9 = v198;
            if (!v198)
            {
              uint64_t v9 = sub_226860774(allocator, (__CFArray *)v258, (uint64_t)"%ks=%i", v197, a5, a6, a7, a8, (uint64_t)"kSBSKey_SelectorChoice");
              if (!v9)
              {
                sub_22686088C(v257, (uint64_t)v259, (UInt8 *)"%ks", v199, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceNetwork");
                uint64_t v9 = v201;
                if (!v201)
                {
                  if (!v259[0]) {
                    goto LABEL_569;
                  }
                  uint64_t v9 = sub_226860774(allocator, (__CFArray *)v258, (uint64_t)"%ks=%O", v200, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceNetwork");
                  if (!v9)
                  {
                    uint64_t v9 = sub_22685FC7C(allocator, &ValueAtIndex, (uint64_t)"{%ks=%i%ks=%O}", v202, a5, a6, a7, a8, (uint64_t)"kSBSKey_SelectorChoice");
                    if (!v9)
                    {
                      if (!ValueAtIndex)
                      {
LABEL_569:
                        uint64_t v9 = 4294960569;
                        goto LABEL_475;
                      }
                      if (sub_2269017F8((uint64_t)v259[0], v203)) {
                        int v204 = 8;
                      }
                      else {
                        int v204 = 9;
                      }
                      CFTypeRef v205 = ValueAtIndex;
                      goto LABEL_508;
                    }
                  }
                }
              }
            }
          }
        }
LABEL_475:
        if (cf)
        {
          CFRelease(cf);
          CFTypeRef cf = 0;
        }
LABEL_477:
        if (ValueAtIndex)
        {
          CFRelease(ValueAtIndex);
          CFTypeRef ValueAtIndex = 0;
        }
        if (v83) {
          CFRelease(v83);
        }
        if (v9) {
          goto LABEL_662;
        }
        if (dword_268147A58 > 800) {
          goto LABEL_629;
        }
        uint64_t v12 = "eSBSStep_ExtendNetworkChoice";
        if (dword_268147A58 == -1)
        {
          BOOL v206 = sub_226865630((uint64_t)&dword_268147A58, 0x320u);
          uint64_t v12 = "eSBSStep_ExtendNetworkChoice";
          if (!v206) {
            goto LABEL_629;
          }
        }
        goto LABEL_628;
      case 8u:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_ExtendWireless_Config");
        }
        uint64_t v258 = 0;
        v259[0] = 0;
        CFTypeRef cf = 0;
        CFTypeRef ValueAtIndex = 0;
        CFArrayRef theArray = 0;
        CFTypeRef v253 = 0;
        int v251 = 0;
        uint64_t v256 = 0;
        int v257 = 0;
        if (!*(void *)a1)
        {
          uint64_t v9 = 4294960591;
          goto LABEL_601;
        }
        if (!*(void *)(a1 + 48)) {
          goto LABEL_314;
        }
        sub_2268CC78C(a1, v259);
        uint64_t v9 = v61;
        if (v61) {
          goto LABEL_597;
        }
        if (!v259[0]) {
          goto LABEL_596;
        }
        sub_22686088C((const __CFString *)v259[0], (uint64_t)&cf, (UInt8 *)"%ks", v60, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceNetwork");
        uint64_t v9 = v63;
        if (v63) {
          goto LABEL_597;
        }
        if (!cf) {
          goto LABEL_596;
        }
        CFStringRef v64 = (const __CFString *)sub_2269016D4((uint64_t)cf, v62);
        if (!v64) {
          goto LABEL_314;
        }
        CFStringRef v66 = v64;
        if (sub_2268DD6CC(*(void *)(a1 + 88), v64, 0, v65, a5, a6, a7, a8))
        {
          int v68 = 0;
        }
        else
        {
          int v68 = 1;
          uint64_t v181 = sub_2268DFEFC(*(void *)(a1 + 88), (const char *)cf, 0, 0, (const void *)1, a6, a7, a8);
          if (v181 == -6723) {
            goto LABEL_612;
          }
          uint64_t v9 = v181;
          if (v181) {
            goto LABEL_597;
          }
        }
        sub_22686088C((const __CFString *)v259[0], (uint64_t)&v251, (UInt8 *)"%ks:int", v67, a5, a6, a7, a8, (uint64_t)"kSBSKey_SelectorChoice");
        uint64_t v9 = v69;
        if (v69) {
          goto LABEL_597;
        }
        uint64_t v70 = sub_2268CD1C8(a1, v68, &v253);
        if (v70 == -6727) {
          goto LABEL_611;
        }
        uint64_t v9 = v70;
        if (v70) {
          goto LABEL_597;
        }
        if (!v253) {
          goto LABEL_596;
        }
        uint64_t v71 = sub_2268CD460(a1, (CFArrayRef)v253, *(const __CFString **)a1, 1, v251 == 211, 0, v66, &theArray);
        if (v71 == -6727) {
          goto LABEL_611;
        }
        uint64_t v9 = v71;
        if (v71) {
          goto LABEL_597;
        }
        if (!theArray) {
          goto LABEL_596;
        }
        CFIndex Count = CFArrayGetCount(theArray);
        if (!Count)
        {
LABEL_314:
          uint64_t v9 = 4294960591;
          goto LABEL_597;
        }
        uint64_t v74 = Count;
        uint64_t v9 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%ks=%O", v73, a5, a6, a7, a8, (uint64_t)"kSBSKey_BrowseRecordList");
        CFRelease(theArray);
        if (v9) {
          goto LABEL_597;
        }
        if (v74 < 2)
        {
          if (v74 != 1)
          {
LABEL_611:
            uint64_t v9 = sub_2268DF598(*(void *)(a1 + 88), @"kAskUserWarning_Prompt", 0, 0, @"kAskUserWarning_NoBaseStationsFound_OnNetwork", (uint64_t)v66, 0, 0, 0);
            if (v9) {
              goto LABEL_597;
            }
LABEL_612:
            uint64_t v9 = sub_2268CA934(a1, 0, 0);
            goto LABEL_597;
          }
          CFTypeRef ValueAtIndex = CFArrayGetValueAtIndex(theArray, 0);
          if (!ValueAtIndex) {
            goto LABEL_596;
          }
          uint64_t v76 = (__CFArray *)v259[0];
          uint64_t v77 = "kSBSKey_SourceBase";
        }
        else
        {
          uint64_t v76 = (__CFArray *)v259[0];
          uint64_t v77 = "kSBSKey_BrowseRecordList";
        }
        uint64_t v9 = sub_226860774(allocator, v76, (uint64_t)"%ks=%O", v75, a5, a6, a7, a8, (uint64_t)v77);
        if (v9) {
          goto LABEL_597;
        }
        uint64_t v218 = sub_2268CC818(a1, 8, (uint64_t)v259[0], (CFTypeRef *)&v258, a5, a6, a7, a8);
        if (v218 == -6769) {
          goto LABEL_612;
        }
        uint64_t v9 = v218;
        if (v218) {
          goto LABEL_597;
        }
        if (v258)
        {
          sub_22686088C(v258, (uint64_t)&ValueAtIndex, (UInt8 *)"%ks", v219, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceBase");
          uint64_t v9 = v220;
          if (v220) {
            goto LABEL_597;
          }
          if (!ValueAtIndex) {
            goto LABEL_596;
          }
          uint64_t v9 = sub_2268A58BC(*(void *)(a1 + 8), (CFMutableDictionaryRef *)&v257);
          if (!v9)
          {
            if (!v257)
            {
              uint64_t v9 = 4294960569;
              goto LABEL_599;
            }
            uint64_t v9 = sub_226860774(allocator, (__CFArray *)v258, (uint64_t)"%ks=%i", v221, a5, a6, a7, a8, (uint64_t)"kSBSKey_SelectorChoice");
            if (!v9)
            {
              sub_2268CD8C4((uint64_t *)a1, (const __CFString *)ValueAtIndex);
              uint64_t v9 = sub_22685FC7C(allocator, (CFTypeRef *)&v256, (uint64_t)"{%ks=%i%ks=%O%ks=%O%ks=%O%ks=%O}", v222, v223, v224, v225, v226, (uint64_t)"kSBSKey_Result_ConfigurationChoice");
              if (!v9)
              {
                if (v256)
                {
                  uint64_t v9 = 0;
                  *(void *)(a1 + 72) = v256;
                  uint64_t v256 = 0;
                  goto LABEL_597;
                }
LABEL_596:
                uint64_t v9 = 4294960568;
              }
            }
          }
        }
        else
        {
          uint64_t v9 = 4294960569;
        }
LABEL_597:
        if (v257)
        {
          CFRelease(v257);
          int v257 = 0;
        }
LABEL_599:
        if (v258)
        {
          CFRelease(v258);
          uint64_t v258 = 0;
        }
LABEL_601:
        if (v256) {
          CFRelease(v256);
        }
        if (v9) {
          goto LABEL_662;
        }
        unsigned int v227 = sub_2268CC018(a1);
        BOOL v24 = v227 == 8;
        if (dword_268147A58 > 800) {
          goto LABEL_609;
        }
        unsigned int v228 = v227;
        if (dword_268147A58 == -1 && !sub_226865630((uint64_t)&dword_268147A58, 0x320u)) {
          goto LABEL_609;
        }
        sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- SBS state: \"%s\" ----------\n\n", v20, v21, v22, v23, (uint64_t)"eSBSStep_ExtendWireless_Config");
        if (v228 == 8) {
          goto LABEL_664;
        }
        goto LABEL_629;
      case 9u:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_Join_Config");
        }
        uint64_t v256 = 0;
        int v257 = 0;
        uint64_t v258 = 0;
        if (!*(void *)a1) {
          goto LABEL_661;
        }
        v259[0] = 0;
        CFTypeRef cf = 0;
        CFTypeRef ValueAtIndex = 0;
        if (!*(void *)(a1 + 48))
        {
          uint64_t v9 = 4294960591;
          goto LABEL_353;
        }
        sub_2268CC78C(a1, v259);
        uint64_t v9 = v85;
        if (v85) {
          goto LABEL_353;
        }
        if (!v259[0]) {
          goto LABEL_352;
        }
        sub_22686088C((const __CFString *)v259[0], (uint64_t)&ValueAtIndex, (UInt8 *)"%ks", v84, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceNetwork");
        uint64_t v9 = v86;
        if (v86) {
          goto LABEL_353;
        }
        if (!ValueAtIndex) {
          goto LABEL_352;
        }
        uint64_t v87 = sub_2268DE568(*(void *)(a1 + 88), @"keychainNetworkType", (const __CFString *)ValueAtIndex, &cf, a5, a6, a7, a8);
        if (v87 == -6727) {
          goto LABEL_220;
        }
        uint64_t v9 = v87;
        if (v87) {
          goto LABEL_353;
        }
        if (!cf) {
          goto LABEL_352;
        }
        uint64_t v9 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%ks=%O", v88, a5, a6, a7, a8, (uint64_t)"kSBSKey_NetworkPassword");
        if (cf)
        {
          CFRelease(cf);
          CFTypeRef cf = 0;
        }
        if (v9) {
          goto LABEL_353;
        }
LABEL_220:
        uint64_t v89 = sub_2268CC818(a1, 9, (uint64_t)v259[0], (CFTypeRef *)&v258, a5, a6, a7, a8);
        if (v89 == -6769)
        {
          uint64_t v9 = sub_2268CA934(a1, 0, 0);
        }
        else
        {
          uint64_t v9 = v89;
          if (v89) {
            goto LABEL_353;
          }
          if (v258)
          {
            sub_22686088C(v258, (uint64_t)&ValueAtIndex, (UInt8 *)"%ks", v90, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceNetwork");
            uint64_t v9 = v91;
            if (v91) {
              goto LABEL_353;
            }
            if (!ValueAtIndex) {
              goto LABEL_352;
            }
            uint64_t v9 = sub_2268A58BC(*(void *)(a1 + 8), (CFMutableDictionaryRef *)&v257);
            if (!v9)
            {
              if (!v257)
              {
                uint64_t v9 = 4294960569;
                goto LABEL_355;
              }
              uint64_t v9 = sub_22685FC7C(allocator, (CFTypeRef *)&v256, (uint64_t)"{%ks=%i%ks=%O%ks=%O%ks=%O%ks=%O}", v92, a5, a6, a7, a8, (uint64_t)"kSBSKey_Result_ConfigurationChoice");
              if (!v9)
              {
                if (v256)
                {
                  uint64_t v9 = 0;
                  *(void *)(a1 + 72) = v256;
                  uint64_t v256 = 0;
                  goto LABEL_353;
                }
LABEL_352:
                uint64_t v9 = 4294960568;
              }
            }
          }
          else
          {
            uint64_t v9 = 4294960569;
          }
        }
LABEL_353:
        if (v257)
        {
          CFRelease(v257);
          int v257 = 0;
        }
LABEL_355:
        if (v258)
        {
          CFRelease(v258);
          uint64_t v258 = 0;
        }
        if (v256) {
          CFRelease(v256);
        }
        if (v9) {
          goto LABEL_662;
        }
        unsigned int v155 = sub_2268CC018(a1);
        BOOL v24 = v155 == 9;
        if (dword_268147A58 > 800) {
          goto LABEL_609;
        }
        unsigned int v156 = v155;
        if (dword_268147A58 == -1 && !sub_226865630((uint64_t)&dword_268147A58, 0x320u)) {
          goto LABEL_609;
        }
        sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- SBS state: \"%s\" ----------\n\n", v20, v21, v22, v23, (uint64_t)"eSBSStep_Join_Config");
        if (v156 == 9) {
          goto LABEL_664;
        }
        goto LABEL_629;
      case 0xAu:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_ReplaceChoice");
        }
        int v257 = 0;
        if (!*(void *)(a1 + 48)) {
          goto LABEL_661;
        }
        uint64_t v258 = 0;
        v259[0] = 0;
        LODWORD(cf) = 0;
        if (!*(void *)a1) {
          goto LABEL_555;
        }
        sub_2268CC78C(a1, v259);
        uint64_t v9 = v35;
        if (v35) {
          goto LABEL_556;
        }
        if (!v259[0]) {
          goto LABEL_563;
        }
        uint64_t v258 = 0;
        uint64_t v36 = sub_2268CC818(a1, 10, (uint64_t)v259[0], (CFTypeRef *)&v258, a5, a6, a7, a8);
        if (v36 == -6769)
        {
          uint64_t v41 = 0;
          int v42 = 0;
          goto LABEL_406;
        }
        uint64_t v9 = v36;
        if (v36) {
          goto LABEL_556;
        }
        if (!v258) {
          goto LABEL_564;
        }
        sub_22686088C(v258, (uint64_t)&cf, (UInt8 *)"%ks:int", v37, a5, a6, a7, a8, (uint64_t)"kSBSKey_SelectorChoice");
        uint64_t v9 = v39;
        if (v39) {
          goto LABEL_556;
        }
        uint64_t v9 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%ks=%i", v38, a5, a6, a7, a8, (uint64_t)"kSBSKey_SelectorChoice");
        if (v9) {
          goto LABEL_556;
        }
        if (cf == 330)
        {
          uint64_t v41 = 0;
          int v42 = 13;
          goto LABEL_406;
        }
        if (cf == 320)
        {
          uint64_t v41 = 0;
          int v42 = 12;
          goto LABEL_406;
        }
        if (cf != 310)
        {
          uint64_t v9 = 4294960587;
          goto LABEL_556;
        }
        uint64_t v256 = 0;
        uint64_t v40 = sub_2268CCA84(a1, (CFTypeRef *)&v256);
        if (v40 == -6727) {
          goto LABEL_95;
        }
        uint64_t v9 = v40;
        CFTypeRef ValueAtIndex = 0;
        if (v40) {
          goto LABEL_556;
        }
        if (!v256) {
          goto LABEL_563;
        }
        uint64_t v213 = sub_2268CCCA0(v256, (const char *)2, *(const __CFString **)a1, (__CFArray **)&ValueAtIndex);
        if (v213 == -6727)
        {
LABEL_95:
          uint64_t v41 = 0;
          int v42 = 15;
LABEL_406:
          uint64_t v9 = sub_2268CA934(a1, v42, (uint64_t)v41);
          goto LABEL_556;
        }
        uint64_t v9 = v213;
        if (!v213)
        {
          if (ValueAtIndex)
          {
            if (CFArrayGetCount((CFArrayRef)ValueAtIndex))
            {
              uint64_t v9 = sub_22685FC7C(allocator, (CFTypeRef *)&v257, (uint64_t)"{%ks=%O}", v214, a5, a6, a7, a8, (uint64_t)"kSBSKey_NetworkScanRecordList");
              if (ValueAtIndex) {
                CFRelease(ValueAtIndex);
              }
              if (!v9)
              {
                uint64_t v41 = v257;
                if (v257)
                {
                  int v42 = 11;
                  goto LABEL_406;
                }
LABEL_564:
                uint64_t v9 = 4294960569;
              }
            }
            else
            {
LABEL_555:
              uint64_t v9 = 4294960591;
            }
          }
          else
          {
LABEL_563:
            uint64_t v9 = 4294960568;
          }
        }
LABEL_556:
        if (v257) {
          CFRelease(v257);
        }
        if (v9) {
          goto LABEL_662;
        }
        if (dword_268147A58 <= 800)
        {
          uint64_t v12 = "eSBSStep_ReplaceChoice";
          if (dword_268147A58 != -1
            || (v215 = sub_226865630((uint64_t)&dword_268147A58, 0x320u), uint64_t v12 = "eSBSStep_ReplaceChoice", v215))
          {
LABEL_628:
            sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- SBS state: \"%s\" ----------\n\n", a5, a6, a7, a8, (uint64_t)v12);
          }
        }
        goto LABEL_629;
      case 0xBu:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_ReplaceNetworkChoice");
        }
        uint64_t v258 = 0;
        v259[0] = 0;
        uint64_t v256 = 0;
        int v257 = 0;
        CFTypeRef cf = 0;
        CFTypeRef ValueAtIndex = 0;
        CFArrayRef theArray = 0;
        CFTypeRef v253 = 0;
        if (!*(void *)(a1 + 48)) {
          goto LABEL_661;
        }
        if (!*(void *)a1) {
          goto LABEL_615;
        }
        sub_2268CC78C(a1, v259);
        uint64_t v9 = v94;
        if (v94) {
          goto LABEL_617;
        }
        if (!v259[0]) {
          goto LABEL_616;
        }
        sub_22686088C((const __CFString *)v259[0], (uint64_t)&v256, (UInt8 *)"%ks", v93, a5, a6, a7, a8, (uint64_t)"kSBSKey_NetworkScanRecordList");
        uint64_t v9 = v95;
        if (v95) {
          goto LABEL_617;
        }
        if (!v256) {
          goto LABEL_616;
        }
        if (CFDictionaryContainsKey((CFDictionaryRef)v259[0], @"kSBSKey_SourceNetwork")) {
          goto LABEL_632;
        }
        if (!v256) {
          goto LABEL_632;
        }
        uint64_t v97 = sub_2268DD4C4(*(void *)(a1 + 88), &ValueAtIndex, 0, v96, a5, a6, a7, a8);
        if (v97 == -6727) {
          goto LABEL_632;
        }
        uint64_t v9 = v97;
        if (v97) {
          goto LABEL_617;
        }
        if (!ValueAtIndex) {
          goto LABEL_616;
        }
        CFIndex v98 = sub_22685BFE8((const __CFString *)ValueAtIndex, 0, v256);
        if (v98 == -1) {
          goto LABEL_632;
        }
        if (!CFArrayGetValueAtIndex(v256, v98)) {
          goto LABEL_616;
        }
        uint64_t v100 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%ks=%O", v99, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceNetwork");
        while (2)
        {
          uint64_t v9 = v100;
          if (v100) {
            goto LABEL_617;
          }
LABEL_632:
          while (2)
          {
            uint64_t v258 = 0;
            uint64_t v231 = sub_2268CC818(a1, 11, (uint64_t)v259[0], (CFTypeRef *)&v258, a5, a6, a7, a8);
            if (v231)
            {
              uint64_t v9 = v231;
              if (v231 == -6769)
              {
                uint64_t v246 = 0;
                int v247 = 0;
LABEL_650:
                uint64_t v233 = sub_2268CA934(a1, v247, (uint64_t)v246);
LABEL_651:
                uint64_t v9 = v233;
              }
LABEL_617:
              CFTypeRef v229 = v253;
              goto LABEL_618;
            }
            if (!v258) {
              goto LABEL_660;
            }
            sub_22686088C(v258, (uint64_t)&theArray, (UInt8 *)"%ks", v232, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceNetwork");
            if (v233) {
              goto LABEL_651;
            }
            if (!theArray) {
              goto LABEL_660;
            }
            uint64_t v233 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%ks=%O", v234, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceNetwork");
            if (v233) {
              goto LABEL_651;
            }
            CFStringRef v236 = (const __CFString *)sub_2269016D4((uint64_t)theArray, v235);
            if (!v236) {
              goto LABEL_615;
            }
            CFStringRef v238 = v236;
            if (!sub_2268DD6CC(*(void *)(a1 + 88), v236, 0, v237, a5, a6, a7, a8))
            {
              int v242 = 1;
              uint64_t v243 = sub_2268DFEFC(*(void *)(a1 + 88), (const char *)theArray, 0, 0, (const void *)1, v239, v240, v241);
              if (v243 != -6723)
              {
                uint64_t v9 = v243;
                if (!v243) {
                  goto LABEL_643;
                }
                goto LABEL_617;
              }
              continue;
            }
            break;
          }
          int v242 = 0;
LABEL_643:
          uint64_t v244 = sub_2268CD1C8(a1, v242, &cf);
          if (v244 == -6727)
          {
LABEL_647:
            uint64_t v100 = sub_2268DF598(*(void *)(a1 + 88), @"kAskUserWarning_Prompt", 0, 0, @"kAskUserWarning_NoBaseStationsFound_OnNetwork", (uint64_t)v238, 0, 0, 0);
            continue;
          }
          break;
        }
        uint64_t v9 = v244;
        if (v244) {
          goto LABEL_617;
        }
        if (!cf) {
          goto LABEL_616;
        }
        uint64_t v245 = sub_2268CD460(a1, (CFArrayRef)cf, *(const __CFString **)a1, 0, 0, 1, v238, (CFMutableArrayRef *)&v253);
        if (v245 == -6727) {
          goto LABEL_647;
        }
        uint64_t v9 = v245;
        if (v245) {
          goto LABEL_617;
        }
        if (!v253)
        {
LABEL_616:
          uint64_t v9 = 4294960568;
          goto LABEL_617;
        }
        if (!CFArrayGetCount((CFArrayRef)v253))
        {
LABEL_615:
          uint64_t v9 = 4294960591;
          goto LABEL_617;
        }
        CFTypeRef v229 = v253;
        uint64_t v9 = 4294960569;
        if (theArray && v253)
        {
          uint64_t v9 = sub_22685FC7C(allocator, (CFTypeRef *)&v257, (uint64_t)"{%ks=%O%ks=%O}", v248, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceNetwork");
          if (!v9)
          {
            uint64_t v246 = v257;
            if (v257)
            {
              int v247 = 15;
              goto LABEL_650;
            }
LABEL_660:
            uint64_t v9 = 4294960569;
          }
          goto LABEL_617;
        }
LABEL_618:
        if (v229)
        {
          CFRelease(v229);
          CFTypeRef v253 = 0;
        }
        if (ValueAtIndex)
        {
          CFRelease(ValueAtIndex);
          CFTypeRef ValueAtIndex = 0;
        }
        if (v257) {
          CFRelease(v257);
        }
        if (v9) {
          goto LABEL_662;
        }
        if (dword_268147A58 <= 800)
        {
          uint64_t v12 = "eSBSStep_ReplaceNetworkChoice";
          if (dword_268147A58 != -1) {
            goto LABEL_628;
          }
          BOOL v230 = sub_226865630((uint64_t)&dword_268147A58, 0x320u);
          uint64_t v12 = "eSBSStep_ReplaceNetworkChoice";
          if (v230) {
            goto LABEL_628;
          }
        }
        goto LABEL_629;
      case 0xCu:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_ReplaceConfiguration_Config");
        }
        uint64_t v258 = 0;
        v259[0] = 0;
        uint64_t v256 = 0;
        int v257 = 0;
        CFTypeRef cf = 0;
        CFTypeRef ValueAtIndex = 0;
        if (!*(void *)(a1 + 48)) {
          goto LABEL_661;
        }
        sub_2268CC78C(a1, v259);
        uint64_t v9 = v15;
        if (v15) {
          goto LABEL_40;
        }
        if (!v259[0]) {
          goto LABEL_382;
        }
        if (CFDictionaryContainsKey((CFDictionaryRef)v259[0], @"kSBSKey_PreviousConfigurationList")) {
          goto LABEL_286;
        }
        uint64_t v9 = sub_22685FC7C(allocator, (CFTypeRef *)&v256, (uint64_t)"[%C%C%C%C%C%C%C%C%C]", v107, a5, a6, a7, a8, 1717920116);
        if (v9) {
          goto LABEL_40;
        }
        if (!v256) {
          goto LABEL_382;
        }
        uint64_t v9 = sub_2268DD2DC(*(void *)(a1 + 88), 0, (uint64_t)v256, &ValueAtIndex, a5, a6, a7, a8);
        if (v256)
        {
          CFRelease(v256);
          uint64_t v256 = 0;
        }
        if (v9 == -6727) {
          goto LABEL_286;
        }
        CFTypeRef v253 = 0;
        if (v9) {
          goto LABEL_40;
        }
        if (!ValueAtIndex) {
          goto LABEL_382;
        }
        uint64_t v9 = sub_2268CD970((const __CFArray *)ValueAtIndex, *(const __CFString **)a1, (__CFArray **)&v253);
        if (ValueAtIndex)
        {
          CFRelease(ValueAtIndex);
          CFTypeRef ValueAtIndex = 0;
        }
        if (v9 == -6727) {
          goto LABEL_286;
        }
        if (v9) {
          goto LABEL_40;
        }
        if (!v253) {
          goto LABEL_382;
        }
        if (CFArrayGetCount((CFArrayRef)v253))
        {
          uint64_t v9 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%ks=%O", v157, a5, a6, a7, a8, (uint64_t)"kSBSKey_PreviousConfigurationList");
          if (v253) {
            CFRelease(v253);
          }
          if (!v9)
          {
LABEL_286:
            uint64_t v108 = sub_2268CC818(a1, 12, (uint64_t)v259[0], (CFTypeRef *)&v258, a5, a6, a7, a8);
            if (v108 == -6769)
            {
              uint64_t v9 = sub_2268CA934(a1, 0, 0);
            }
            else
            {
              uint64_t v9 = v108;
              if (v108 != -6723)
              {
                CFTypeRef v253 = 0;
                if (!v108)
                {
                  if (!v258) {
                    goto LABEL_430;
                  }
                  uint64_t v9 = sub_2268A58BC(*(void *)(a1 + 8), (CFMutableDictionaryRef *)&cf);
                  if (v9) {
                    goto LABEL_40;
                  }
                  if (cf)
                  {
                    sub_22686088C(v258, (uint64_t)&v253, (UInt8 *)"%ks", v109, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceConfiguration");
                    uint64_t v9 = v111;
                    if (!v111)
                    {
                      if (v253)
                      {
                        uint64_t v9 = sub_22685FC7C(allocator, (CFTypeRef *)&v257, (uint64_t)"{%ks=%i%ks=%O%ks=%O%ks=%O%ks=%O}", v110, a5, a6, a7, a8, (uint64_t)"kSBSKey_Result_ConfigurationChoice");
                        if (!v9)
                        {
                          *(void *)(a1 + 72) = v257;
                          int v257 = 0;
                        }
                      }
                      else
                      {
LABEL_382:
                        uint64_t v9 = 4294960568;
                      }
                    }
                  }
                  else
                  {
LABEL_430:
                    uint64_t v9 = 4294960569;
                  }
                }
              }
            }
          }
        }
        else
        {
          uint64_t v9 = 4294960591;
        }
LABEL_40:
        if (cf)
        {
          CFRelease(cf);
          CFTypeRef cf = 0;
        }
        if (v258)
        {
          CFRelease(v258);
          uint64_t v258 = 0;
        }
        if (v257) {
          CFRelease(v257);
        }
        if (v9) {
          goto LABEL_662;
        }
        unsigned int v16 = sub_2268CC018(a1);
        BOOL v24 = v16 == 12;
        if (dword_268147A58 > 800) {
          goto LABEL_609;
        }
        unsigned int v25 = v16;
        if (dword_268147A58 == -1 && !sub_226865630((uint64_t)&dword_268147A58, 0x320u)) {
          goto LABEL_609;
        }
        sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- SBS state: \"%s\" ----------\n\n", v20, v21, v22, v23, (uint64_t)"eSBSStep_ReplaceConfiguration_Config");
        if (v25 == 12) {
          goto LABEL_664;
        }
        goto LABEL_629;
      case 0xDu:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_ReplaceOther_Connections");
        }
        uint64_t v33 = sub_2268CC3AC(a1);
        if (v33) {
          goto LABEL_665;
        }
        if (dword_268147A58 > 800) {
          goto LABEL_629;
        }
        uint64_t v12 = "eSBSStep_ReplaceOther_Connections";
        if (dword_268147A58 == -1)
        {
          BOOL v43 = sub_226865630((uint64_t)&dword_268147A58, 0x320u);
          uint64_t v12 = "eSBSStep_ReplaceOther_Connections";
          if (!v43) {
            goto LABEL_629;
          }
        }
        goto LABEL_628;
      case 0xEu:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_ReplaceOther_Config");
        }
        uint64_t v33 = sub_2268CC080(a1);
        if (v33) {
          goto LABEL_665;
        }
        unsigned int v78 = sub_2268CC018(a1);
        LOBYTE(v24) = v78 == 14;
        if (dword_268147A58 > 800) {
          goto LABEL_609;
        }
        unsigned int v79 = v78;
        if (dword_268147A58 == -1 && !sub_226865630((uint64_t)&dword_268147A58, 0x320u)) {
          goto LABEL_609;
        }
        sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- SBS state: \"%s\" ----------\n\n", v20, v21, v22, v23, (uint64_t)"eSBSStep_ReplaceOther_Config");
        if (v79 == 14) {
          goto LABEL_664;
        }
        goto LABEL_629;
      case 0xFu:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_ReplaceBaseStation_Config");
        }
        uint64_t v258 = 0;
        v259[0] = 0;
        CFTypeRef cf = 0;
        CFTypeRef ValueAtIndex = 0;
        uint64_t v256 = 0;
        int v257 = 0;
        CFTypeRef v253 = 0;
        if (!*(void *)(a1 + 48))
        {
          uint64_t v9 = 4294960591;
          goto LABEL_271;
        }
        sub_2268CC78C(a1, v259);
        uint64_t v9 = v14;
        if (v14) {
          goto LABEL_30;
        }
        if (!v259[0]) {
          goto LABEL_418;
        }
        if (!CFDictionaryContainsKey((CFDictionaryRef)v259[0], @"kSBSKey_SelectorChoice"))
        {
          uint64_t v9 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%ks=%i", v117, v118, v119, v120, v121, (uint64_t)"kSBSKey_SelectorChoice");
          if (v9) {
            goto LABEL_30;
          }
        }
        if (CFDictionaryContainsKey((CFDictionaryRef)v259[0], @"kSBSKey_BrowseRecordList")) {
          goto LABEL_318;
        }
        CFArrayRef theArray = 0;
        uint64_t v175 = sub_2268CD1C8(a1, 0, &theArray);
        if (v175 == -6727) {
          goto LABEL_427;
        }
        uint64_t v9 = v175;
        if (v175) {
          goto LABEL_30;
        }
        if (!theArray) {
          goto LABEL_418;
        }
        uint64_t v176 = sub_2268CD460(a1, theArray, *(const __CFString **)a1, 0, 0, 1, 0, (CFMutableArrayRef *)&v253);
        if (v176 == -6727)
        {
LABEL_427:
          uint64_t v9 = sub_2268DF598(*(void *)(a1 + 88), @"kAskUserWarning_Prompt", 0, 0, @"kAskUserWarning_NoBaseStationsFound_OnEthernet", 0, 0, 0, 0);
          if (v9) {
            goto LABEL_30;
          }
LABEL_428:
          uint64_t v178 = a1;
          int v179 = 0;
          uint64_t v180 = 0;
LABEL_429:
          uint64_t v9 = sub_2268CA934(v178, v179, (uint64_t)v180);
          goto LABEL_30;
        }
        uint64_t v9 = v176;
        if (v176) {
          goto LABEL_30;
        }
        if (!v253)
        {
LABEL_418:
          uint64_t v9 = 4294960568;
          goto LABEL_30;
        }
        if (!CFArrayGetCount((CFArrayRef)v253))
        {
          uint64_t v9 = 4294960591;
          goto LABEL_30;
        }
        uint64_t v9 = sub_226860774(allocator, (__CFArray *)v259[0], (uint64_t)"%ks=%O", v177, a5, a6, a7, a8, (uint64_t)"kSBSKey_BrowseRecordList");
        if (v253)
        {
          CFRelease(v253);
          CFTypeRef v253 = 0;
        }
        if (v9) {
          goto LABEL_30;
        }
LABEL_318:
        uint64_t v122 = sub_2268CC818(a1, 15, (uint64_t)v259[0], (CFTypeRef *)&v258, a5, a6, a7, a8);
        if (v122 == -6769) {
          goto LABEL_428;
        }
        uint64_t v9 = v122;
        if (v122) {
          goto LABEL_30;
        }
        if (!v258) {
          goto LABEL_568;
        }
        sub_22686088C(v258, (uint64_t)&ValueAtIndex, (UInt8 *)"%ks", v123, a5, a6, a7, a8, (uint64_t)"kSBSKey_SourceBase");
        uint64_t v9 = v127;
        if (v127) {
          goto LABEL_30;
        }
        if (!ValueAtIndex) {
          goto LABEL_418;
        }
        unsigned int v128 = sub_22685AB94((const __CFString *)ValueAtIndex, v124, v125, v126, a5, a6, a7, a8);
        BOOL v136 = sub_22685CA8C((const __CFString *)ValueAtIndex, v129, v130, v131, v132, v133, v134, v135);
        if (v128 == 3 || v128 == 102 || !v136)
        {
          uint64_t v9 = sub_22685FC7C(allocator, (CFTypeRef *)&v257, (uint64_t)"{%ks=%O%ks=%i}", v137, v138, v139, v140, v141, (uint64_t)"kSBSKey_SourceBase");
          if (!v9)
          {
            uint64_t v180 = v257;
            if (v257)
            {
              uint64_t v178 = a1;
              int v179 = 2;
              goto LABEL_429;
            }
LABEL_568:
            uint64_t v9 = 4294960569;
          }
        }
        else
        {
          uint64_t v9 = sub_2268A58BC(*(void *)(a1 + 8), (CFMutableDictionaryRef *)&cf);
          if (!v9)
          {
            if (!cf)
            {
              uint64_t v9 = 4294960569;
              goto LABEL_32;
            }
            uint64_t v9 = sub_22685FC7C(allocator, (CFTypeRef *)&v256, (uint64_t)"{%ks=%i%ks=%O%ks=%O%ks=%O%ks=%O}", v142, a5, a6, a7, a8, (uint64_t)"kSBSKey_Result_ConfigurationChoice");
            if (!v9)
            {
              *(void *)(a1 + 72) = v256;
              uint64_t v256 = 0;
            }
          }
        }
LABEL_30:
        if (cf)
        {
          CFRelease(cf);
          CFTypeRef cf = 0;
        }
LABEL_32:
        if (v258)
        {
          CFRelease(v258);
          uint64_t v258 = 0;
        }
LABEL_271:
        if (v256)
        {
          CFRelease(v256);
          uint64_t v256 = 0;
        }
        if (v257)
        {
          CFRelease(v257);
          int v257 = 0;
        }
        if (v253) {
          CFRelease(v253);
        }
        if (v9) {
          goto LABEL_662;
        }
        unsigned int v105 = sub_2268CC018(a1);
        BOOL v24 = v105 == 15;
        if (dword_268147A58 > 800) {
          goto LABEL_609;
        }
        unsigned int v106 = v105;
        if (dword_268147A58 == -1 && !sub_226865630((uint64_t)&dword_268147A58, 0x320u)) {
          goto LABEL_609;
        }
        sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- SBS state: \"%s\" ----------\n\n", v20, v21, v22, v23, (uint64_t)"eSBSStep_ReplaceBaseStation_Config");
        if (v106 == 15) {
          goto LABEL_664;
        }
        goto LABEL_629;
      case 0x10u:
        if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
          sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t++++++++++ SBS state: \"%s\" ++++++++++\n\n", a5, a6, a7, a8, (uint64_t)"eSBSStep_Restore_Config");
        }
        uint64_t v258 = 0;
        v259[0] = 0;
        uint64_t v256 = 0;
        int v257 = 0;
        if (!*(void *)(a1 + 48)) {
          goto LABEL_661;
        }
        if (!*(void *)a1 || !*(void *)(a1 + 8))
        {
          CFMutableArrayRef Mutable = 0;
          uint64_t v9 = 4294960591;
          goto LABEL_258;
        }
        sub_2268CC78C(a1, v259);
        if (v80) {
          goto LABEL_193;
        }
        if (!v259[0])
        {
          CFMutableArrayRef Mutable = 0;
          uint64_t v9 = 4294960568;
          goto LABEL_258;
        }
        uint64_t v151 = sub_2268CC818(a1, 16, (uint64_t)v259[0], (CFTypeRef *)&v258, a5, a6, a7, a8);
        if (v151 == -6769)
        {
          uint64_t v80 = sub_2268CA934(a1, 0, 0);
LABEL_193:
          uint64_t v9 = v80;
LABEL_194:
          CFMutableArrayRef Mutable = 0;
          goto LABEL_258;
        }
        uint64_t v9 = v151;
        if (v151 == -6723) {
          goto LABEL_194;
        }
        CFMutableArrayRef Mutable = 0;
        CFTypeRef ValueAtIndex = 0;
        if (v151) {
          goto LABEL_258;
        }
        if (!v258) {
          goto LABEL_433;
        }
        uint64_t v80 = sub_2268A58BC(*(void *)(a1 + 8), (CFMutableDictionaryRef *)&v257);
        if (v80) {
          goto LABEL_193;
        }
        if (!v257)
        {
LABEL_433:
          CFMutableArrayRef Mutable = 0;
          uint64_t v9 = 4294960569;
          goto LABEL_434;
        }
        CFMutableArrayRef Mutable = CFDictionaryCreateMutable(allocator, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
        if (!Mutable) {
          goto LABEL_580;
        }
        uint64_t v153 = sub_226860774(allocator, Mutable, (uint64_t)"%ks=%i%ks=%O%ks=%O%ks=%O", v152, a5, a6, a7, a8, (uint64_t)"kSBSKey_Result_ConfigurationChoice");
        if (v153
          || (sub_22686088C(*(const __CFString **)a1, (uint64_t)&ValueAtIndex, (UInt8 *)"%ks.%ks", v154, a5, a6, a7, a8, (uint64_t)"txt"), v153))
        {
          uint64_t v9 = v153;
          goto LABEL_258;
        }
        if (!ValueAtIndex) {
          goto LABEL_580;
        }
        if (sub_2268DD2DC(*(void *)(a1 + 88), (uint64_t)ValueAtIndex, 0, (CFTypeRef *)&v256, a5, a6, a7, a8) == -6727)goto LABEL_574; {
        if (CFArrayGetValueAtIndex(v256, 0))
        }
        {
          uint64_t v217 = sub_226860774(allocator, Mutable, (uint64_t)"%ks=%O", v216, a5, a6, a7, a8, (uint64_t)"kSBSKey_Result_ConfigChangeLogDict");
          if (v217)
          {
            uint64_t v9 = v217;
          }
          else
          {
LABEL_574:
            uint64_t v9 = 0;
            *(void *)(a1 + 72) = Mutable;
            CFMutableArrayRef Mutable = 0;
          }
        }
        else
        {
LABEL_580:
          uint64_t v9 = 4294960568;
        }
LABEL_434:
        if (v256)
        {
          CFRelease(v256);
          uint64_t v256 = 0;
        }
LABEL_258:
        if (v257)
        {
          CFRelease(v257);
          int v257 = 0;
        }
        if (v258)
        {
          CFRelease(v258);
          uint64_t v258 = 0;
        }
        if (Mutable) {
          CFRelease(Mutable);
        }
        if (v9) {
          goto LABEL_662;
        }
        unsigned int v103 = sub_2268CC018(a1);
        BOOL v24 = v103 == 16;
        if (dword_268147A58 > 800) {
          goto LABEL_609;
        }
        unsigned int v104 = v103;
        if (dword_268147A58 == -1 && !sub_226865630((uint64_t)&dword_268147A58, 0x320u)) {
          goto LABEL_609;
        }
        sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"void __SBSEngine_StepByStepSync(void *)", 800, (uint64_t)"\n\n\t\t          \t\t---------- SBS state: \"%s\" ----------\n\n", v20, v21, v22, v23, (uint64_t)"eSBSStep_Restore_Config");
        if (v104 == 16) {
          goto LABEL_664;
        }
        goto LABEL_629;
      default:
        uint64_t v9 = 4294960587;
        goto LABEL_662;
    }
  }
}

uint64_t sub_2268CA24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"OSStatus SBSEngine_SetProgressCallback(StepByStepContextRef, assistant_progress_t, void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v13);
  }
  if (!a1) {
    return 4294960591;
  }
  uint64_t v11 = *(void *)(a1 + 88);

  return sub_2268DC4C4(v11, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_2268CA2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"OSStatus SBSEngine_SetAssistantCallback(StepByStepContextRef, assistant_callback_t, void *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v13);
  }
  if (!a1) {
    return 4294960591;
  }
  uint64_t v11 = *(void *)(a1 + 88);

  return sub_2268DBF38(v11, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_2268CA3AC(uint64_t a1, CFTypeRef cf)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t v4 = *(const void **)(a1 + 80);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 80) = 0;
  }
  if (cf)
  {
    *(void *)(a1 + 80) = cf;
    CFRetain(cf);
  }
  return 0;
}

uint64_t sub_2268CA404(uint64_t a1, CFTypeRef cf)
{
  if (!a1) {
    return 4294960591;
  }
  uint64_t v4 = *(const void **)(a1 + 64);
  if (v4)
  {
    CFRelease(v4);
    *(void *)(a1 + 64) = 0;
  }
  if (cf)
  {
    *(void *)(a1 + 64) = cf;
    CFRetain(cf);
  }
  return 0;
}

uint64_t sub_2268CA45C(uint64_t a1, uint64_t a2, int a3)
{
  if (!a1 || !a2 || (a3 - 1) > 1) {
    return 4294960591;
  }
  if (a3 == 1) {
    CFStringRef v4 = @"kSBSCacheKey_ScanRecordsMerged";
  }
  else {
    CFStringRef v4 = @"kSBSCacheKey_ScanRecordsUnmerged";
  }
  return sub_2268CA49C(a1, v4, a2);
}

uint64_t sub_2268CA49C(uint64_t a1, CFStringRef theString1, uint64_t a3)
{
  CFTypeRef cf = 0;
  uint64_t v3 = 4294960591;
  if (!theString1 || !a3) {
    return v3;
  }
  if (*(void *)(a1 + 56))
  {
    if (CFStringCompare(theString1, @"kSBSCacheKey_BrowseRecords", 0))
    {
      if (CFEqual(theString1, @"kSBSCacheKey_BaseSettings")) {
        goto LABEL_20;
      }
      uint64_t v16 = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], *(__CFArray **)(a1 + 56), (uint64_t)"%kO=%O", v11, v12, v13, v14, v15, (uint64_t)theString1);
      goto LABEL_7;
    }
    uint64_t v17 = sub_2268DD4C4(*(void *)(a1 + 88), &cf, 0, v6, v7, v8, v9, v10);
    CFStringRef v18 = theString1;
    if (v17 != -6727)
    {
      uint64_t v3 = v17;
      if (v17) {
        goto LABEL_20;
      }
      CFStringRef v18 = (CFStringRef)cf;
      if (!cf) {
        return 4294960568;
      }
    }
    uint64_t v39 = 0;
    if (CFDictionaryContainsKey(*(CFDictionaryRef *)(a1 + 56), theString1))
    {
      sub_22686088C(*(const __CFString **)(a1 + 56), (uint64_t)&v39, (UInt8 *)"%kO", v19, v20, v21, v22, v23, (uint64_t)theString1);
      uint64_t v3 = v29;
      if (v29) {
        goto LABEL_20;
      }
      uint64_t v30 = v39;
      if (v39)
      {
        CFAllocatorRef v31 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
LABEL_17:
        uint64_t v16 = sub_226860774(v31, v30, (uint64_t)"%kO=%O", v24, v25, v26, v27, v28, (uint64_t)v18);
LABEL_7:
        uint64_t v3 = v16;
        goto LABEL_20;
      }
      goto LABEL_19;
    }
    CFAllocatorRef v31 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    uint64_t v39 = Mutable;
    if (!Mutable)
    {
LABEL_19:
      uint64_t v3 = 4294960568;
      goto LABEL_20;
    }
    uint64_t v30 = Mutable;
    uint64_t v3 = sub_226860774(v31, *(__CFArray **)(a1 + 56), (uint64_t)"%kO=%O", v33, v34, v35, v36, v37, (uint64_t)theString1);
    CFRelease(v30);
    if (!v3) {
      goto LABEL_17;
    }
  }
LABEL_20:
  if (cf) {
    CFRelease(cf);
  }
  return v3;
}

uint64_t sub_2268CA660(void *a1, const __CFString *a2, const void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"OSStatus SBSEngine_SetTargetBaseAndSettings(StepByStepContextRef, CFDictionaryRef, CFDictionaryRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v13);
  }
  uint64_t result = 4294960591;
  if (a1 && a2)
  {
    if (*a1)
    {
      return 4294960577;
    }
    else
    {
      uint64_t result = sub_2268CA730((uint64_t)a1, a2);
      if (a3 && !result)
      {
        uint64_t v12 = a1[1];
        return sub_2268A2988(v12, a3);
      }
    }
  }
  return result;
}

uint64_t sub_2268CA730(uint64_t a1, const __CFString *cf)
{
  CFStringRef v3 = *(const __CFString **)a1;
  if (*(const __CFString **)a1 == cf) {
    return 0;
  }
  if (!v3) {
    goto LABEL_11;
  }
  int v5 = CFEqual(cf, v3);
  if (!v5 || dword_268147A58 > 800)
  {
    if (v5) {
      return 0;
    }
    if (*(void *)a1) {
      CFRelease(*(CFTypeRef *)a1);
    }
LABEL_11:
    *(void *)a1 = cf;
    CFRetain(cf);
    CFStringRef v20 = *(const __CFString **)a1;
    uint64_t v19 = *(int **)(a1 + 8);
    if (v19)
    {
      if (v20)
      {
        uint64_t result = sub_2268A2704((uint64_t)v19, v20);
        if (result) {
          return result;
        }
      }
      else
      {
        sub_2268A238C(v19);
        *(void *)(a1 + 8) = 0;
      }
    }
    else if (v20)
    {
      uint64_t v21 = 0;
      uint64_t result = sub_2268A243C((uint64_t)&v21);
      if (result) {
        return result;
      }
      if (!v21) {
        return 4294960568;
      }
      *(void *)(a1 + 8) = v21;
    }
    return 0;
  }
  if (dword_268147A58 != -1 || (uint64_t result = sub_226865630((uint64_t)&dword_268147A58, 0x320u), result))
  {
    CFStringRef v14 = sub_22685B6F8(cf, v6, v7, v8, v9, v10, v11, v12);
    sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"OSStatus _SetTargetBase(StepByStepContextRef, CFDictionaryRef)", 800, (uint64_t)"equal SKIPPING update for: %@\n", v15, v16, v17, v18, (uint64_t)v14);
    return 0;
  }
  return result;
}

uint64_t sub_2268CA840(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"OSStatus SBSEngine_StepByStepAsync(StepByStepContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v24);
  }
  if (!a1) {
    return 4294960591;
  }
  if (!a1[4]) {
    return 4294960591;
  }
  uint64_t v9 = (__CFArray *)a1[6];
  if (!v9) {
    return 4294960591;
  }
  CFArrayRemoveAllValues(v9);
  uint64_t result = sub_2268CA934((uint64_t)a1, 1, 0);
  if (!result)
  {
    uint64_t v11 = a1[4];
    global_queue = dispatch_get_global_queue(0, 0);
    dispatch_group_async_f(v11, global_queue, a1, (dispatch_function_t)sub_2268C76C4);
    uint64_t result = sub_2268DBB2C(a1[11], v13, v14, v15, v16, v17, v18, v19);
    if (!result)
    {
      sub_2268DCB00(a1[11], 14, 0, 0, v20, v21, v22, v23);
      return 0;
    }
  }
  return result;
}

uint64_t sub_2268CA934(uint64_t a1, int a2, uint64_t a3)
{
  CFArrayRef v4 = *(const __CFArray **)(a1 + 48);
  if (!v4 || !*(void *)a1) {
    return 4294960591;
  }
  if (a2)
  {
    CFAllocatorRef v6 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (Mutable)
    {
      uint64_t v13 = Mutable;
      uint64_t v19 = sub_226860774(v6, Mutable, (uint64_t)"%ks=%i", v8, v9, v10, v11, v12, (uint64_t)"kSBSKey_Step");
      if (!v19)
      {
        uint64_t v19 = sub_226860774(v6, v13, (uint64_t)"%ks=%i", v14, v15, v16, v17, v18, (uint64_t)"kSBSKey_Mode");
        if (!v19)
        {
          uint64_t v19 = sub_226860774(v6, v13, (uint64_t)"%ks=%O", v20, v21, v22, v23, v24, (uint64_t)"kSBSKey_TargetBase");
          if (!v19)
          {
            if (!a3 || (uint64_t v19 = sub_226860774(v6, v13, (uint64_t)"%##O", v25, v26, v27, v28, v29, a3), !v19)) {
              uint64_t v19 = sub_226860774(v6, *(__CFArray **)(a1 + 48), (uint64_t)"%O", v25, v26, v27, v28, v29, (uint64_t)v13);
            }
          }
        }
      }
      CFRelease(v13);
    }
    else
    {
      return 4294960568;
    }
  }
  else
  {
    CFIndex Count = CFArrayGetCount(v4);
    if (Count)
    {
      CFArrayRemoveValueAtIndex(*(CFMutableArrayRef *)(a1 + 48), Count - 1);
      return 0;
    }
    else
    {
      return 4294960586;
    }
  }
  return v19;
}

uint64_t sub_2268CAABC(const __CFString *a1, __CFArray **a2)
{
  uint64_t v2 = 4294960591;
  if (a1 && a2)
  {
    CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (!Mutable) {
      return 4294960568;
    }
    uint64_t v12 = Mutable;
    uint64_t v50 = 0;
    int v49 = 0;
    sub_22686088C(a1, (uint64_t)&v50, (UInt8 *)"%ks", v7, v8, v9, v10, v11, (uint64_t)"kSBSKey_GuestNetwork_On");
    uint64_t v19 = v18;
    if (v18) {
      goto LABEL_24;
    }
    if (v50)
    {
      uint64_t v19 = sub_226860774(v5, v12, (uint64_t)"%ks=%O", v13, v14, v15, v16, v17, (uint64_t)"kBSAutoGuessSetupOptionKey_GuestNetwork_On");
      if (v19) {
        goto LABEL_24;
      }
      sub_22686088C(a1, (uint64_t)&v50, (UInt8 *)"%ks", v20, v21, v22, v23, v24, (uint64_t)"kSBSKey_GuestNetwork_Name");
      if (v25 != -6727)
      {
        uint64_t v19 = v25;
        if (v25) {
          goto LABEL_24;
        }
        if (!v50) {
          goto LABEL_23;
        }
        uint64_t v19 = sub_226860774(v5, v12, (uint64_t)"%ks=%O", v26, v27, v28, v29, v30, (uint64_t)"kBSAutoGuessSetupOptionKey_GuestNetwork_Name");
        if (v19) {
          goto LABEL_24;
        }
      }
      sub_22686088C(a1, (uint64_t)&v49, (UInt8 *)"%ks:int", v26, v27, v28, v29, v30, (uint64_t)"kSBSKey_GuestNetwork_Security");
      uint64_t v2 = v31;
      if (v31 == -6727)
      {
LABEL_16:
        *a2 = v12;
        return v2;
      }
      if (v31)
      {
        uint64_t v19 = v31;
        goto LABEL_24;
      }
      if (v50)
      {
        uint64_t v19 = sub_226860774(v5, v12, (uint64_t)"%ks=%i", v32, v33, v34, v35, v36, (uint64_t)"kBSAutoGuessSetupOptionKey_GuestNetwork_Security");
        if (v19) {
          goto LABEL_24;
        }
        if (v49 == 1) {
          goto LABEL_16;
        }
        sub_22686088C(a1, (uint64_t)&v50, (UInt8 *)"%ks", v37, v38, v39, v40, v41, (uint64_t)"kSBSKey_GuestNetwork_Password");
        uint64_t v19 = v47;
        if (v47)
        {
LABEL_24:
          CFRelease(v12);
          return v19;
        }
        if (v50)
        {
          uint64_t v19 = sub_226860774(v5, v12, (uint64_t)"%ks=%O", v42, v43, v44, v45, v46, (uint64_t)"kBSAutoGuessSetupOptionKey_GuestNetwork_Password");
          if (!v19) {
            goto LABEL_16;
          }
          goto LABEL_24;
        }
      }
    }
LABEL_23:
    uint64_t v19 = 4294960568;
    goto LABEL_24;
  }
  return v2;
}

uint64_t sub_2268CACF8(const __CFString *a1, __CFArray **a2, __CFArray **a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = 4294960591;
  if (a2)
  {
    if (a3)
    {
      int v261 = 0;
      CFStringRef v260 = 0;
      uint64_t v258 = 0;
      uint64_t v259 = 0;
      uint64_t v257 = 0;
      sub_22686088C(a1, (uint64_t)&v261, (UInt8 *)"%ks:int", a4, a5, a6, a7, a8, (uint64_t)"kSBSKey_Result_ConfigurationChoice");
      uint64_t v8 = v17;
      if (!v17)
      {
        sub_22686088C(a1, (uint64_t)&v260, (UInt8 *)"%ks", v12, v13, v14, v15, v16, (uint64_t)"kSBSKey_Result_ConfigurationOptions");
        uint64_t v8 = v23;
        if (!v23)
        {
          if (!v260) {
            return 4294960568;
          }
          sub_22686088C(a1, (uint64_t)&v259, (UInt8 *)"%ks", v18, v19, v20, v21, v22, (uint64_t)"kSBSKey_Result_TargetBase");
          uint64_t v8 = v29;
          if (v29) {
            return v8;
          }
          if (!v259) {
            return 4294960568;
          }
          sub_22686088C(a1, (uint64_t)&v258, (UInt8 *)"%ks", v24, v25, v26, v27, v28, (uint64_t)"kSBSKey_Result_TargetBaseSettings");
          uint64_t v8 = v30;
          if (v30) {
            return v8;
          }
          if (!v258) {
            return 4294960568;
          }
          CFAllocatorRef v31 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
          if (!Mutable) {
            return 4294960568;
          }
          uint64_t v38 = Mutable;
          uint64_t v8 = sub_226860774(v31, Mutable, (uint64_t)"%ks=%O", v33, v34, v35, v36, v37, (uint64_t)"BSAutoGuess_UnconfiguredBase");
          if (v8
            || (uint64_t v8 = sub_226860774(v31, v38, (uint64_t)"%ks=%O", v39, v40, v41, v42, v43, (uint64_t)"BSAutoGuess_UnconfiguredBaseSettings"), v8)|| (uint64_t v8 = sub_226860774(v31, v38, (uint64_t)"%ks=%b", v44, v45, v46, v47, v48,
                       (uint64_t)"kBSAutoGuessSetupOptionKey_RecommendationIsAutomatic"),
                v8))
          {
LABEL_14:
            uint64_t v54 = v38;
LABEL_15:
            CFRelease(v54);
            return v8;
          }
          CFStringRef v254 = a1;
          switch(v261)
          {
            case 1:
              CFTypeRef cf = 0;
              int v255 = 0;
              uint64_t v61 = CFDictionaryCreateMutable(v31, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
              if (!v61) {
                goto LABEL_110;
              }
              sub_22686088C(v260, (uint64_t)&v257, (UInt8 *)"%ks", v56, v57, v58, v59, v60, (uint64_t)"kSBSKey_BaseName");
              if (v62 == -6727) {
                goto LABEL_24;
              }
              uint64_t v8 = v62;
              if (v62) {
                goto LABEL_128;
              }
              if (!v257) {
                goto LABEL_110;
              }
              uint64_t v8 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v63, v64, v65, v66, v67, (uint64_t)"kBSAutoGuessSetupOptionKey_BaseName");
              if (v8) {
                goto LABEL_128;
              }
LABEL_24:
              sub_22686088C(v260, (uint64_t)&v257, (UInt8 *)"%ks", v63, v64, v65, v66, v67, (uint64_t)"kSBSKey_BasePassword");
              uint64_t v8 = v73;
              if (v73) {
                goto LABEL_128;
              }
              if (!v257) {
                goto LABEL_110;
              }
              uint64_t v8 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v68, v69, v70, v71, v72, (uint64_t)"kBSAutoGuessSetupOptionKey_BasePassword");
              if (v8) {
                goto LABEL_128;
              }
              sub_22686088C(v260, (uint64_t)&v257, (UInt8 *)"%ks", v74, v75, v76, v77, v78, (uint64_t)"kSBSKey_NetworkName");
              uint64_t v8 = v84;
              if (v84) {
                goto LABEL_128;
              }
              if (!v257) {
                goto LABEL_110;
              }
              uint64_t v8 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v79, v80, v81, v82, v83, (uint64_t)"kBSAutoGuessSetupOptionKey_NetworkName");
              if (v8) {
                goto LABEL_128;
              }
              sub_22686088C(v260, (uint64_t)&v257, (UInt8 *)"%ks", v85, v86, v87, v88, v89, (uint64_t)"kSBSKey_NetworkPassword");
              uint64_t v8 = v95;
              if (v95) {
                goto LABEL_128;
              }
              if (!v257) {
                goto LABEL_110;
              }
              uint64_t v8 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v90, v91, v92, v93, v94, (uint64_t)"kBSAutoGuessSetupOptionKey_NetworkPassword");
              if (v8) {
                goto LABEL_128;
              }
              uint64_t v96 = sub_2268CAABC(v260, (__CFArray **)&cf);
              if (v96 == -6727) {
                goto LABEL_39;
              }
              uint64_t v8 = v96;
              if (v96) {
                goto LABEL_128;
              }
              if (!cf) {
                goto LABEL_110;
              }
              uint64_t v8 = sub_226860774(v31, v61, (uint64_t)"%k##O", v97, v98, v99, v100, v101, (uint64_t)cf);
              if (cf)
              {
                CFRelease(cf);
                CFTypeRef cf = 0;
              }
              if (v8) {
                goto LABEL_128;
              }
LABEL_39:
              sub_22686088C(v260, (uint64_t)&v257, (UInt8 *)"%ks", v97, v98, v99, v100, v101, (uint64_t)"kSBSKey_DiskSharing_Password");
              if (v102 == -6727) {
                goto LABEL_43;
              }
              uint64_t v8 = v102;
              if (v102) {
                goto LABEL_128;
              }
              if (!v257) {
                goto LABEL_110;
              }
              uint64_t v8 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v103, v104, v105, v106, v107, (uint64_t)"kBSAutoGuessSetupOptionKey_DiskSharing_Password");
              if (v8) {
                goto LABEL_128;
              }
LABEL_43:
              sub_22686088C(v260, (uint64_t)&v255, (UInt8 *)"%ks:int", v103, v104, v105, v106, v107, (uint64_t)"kSBSKey_SelectorChoice");
              if (v108 == -6727) {
                goto LABEL_59;
              }
              uint64_t v8 = v108;
              if (v108) {
                goto LABEL_128;
              }
              if ((v255 - 101) > 1) {
                goto LABEL_97;
              }
              sub_22686088C(v254, (uint64_t)&v257, (UInt8 *)"%ks", v109, v110, v111, v112, v113, (uint64_t)"kSBSKey_Result_SourceBase");
              uint64_t v8 = v119;
              if (v119) {
                goto LABEL_128;
              }
              if (!v257) {
                goto LABEL_110;
              }
              uint64_t v8 = sub_226860774(v31, v38, (uint64_t)"%ks=%O", v114, v115, v116, v117, v118, (uint64_t)"BSAutoGuess_SourceBase");
              if (!v8) {
                goto LABEL_59;
              }
              goto LABEL_128;
            case 2:
              CFMutableDictionaryRef v120 = CFDictionaryCreateMutable(v31, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
              if (!v120) {
                goto LABEL_98;
              }
              uint64_t v61 = v120;
              sub_22686088C(v260, (uint64_t)&v257, (UInt8 *)"%ks", v121, v122, v123, v124, v125, (uint64_t)"kSBSKey_BaseName");
              if (v126 == -6727) {
                goto LABEL_56;
              }
              uint64_t v8 = v126;
              if (v126) {
                goto LABEL_128;
              }
              if (!v257) {
                goto LABEL_127;
              }
              uint64_t v132 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v127, v128, v129, v130, v131, (uint64_t)"kBSAutoGuessSetupOptionKey_BaseName");
              if (v132) {
                goto LABEL_82;
              }
LABEL_56:
              sub_22686088C(v254, (uint64_t)&v257, (UInt8 *)"%ks", v127, v128, v129, v130, v131, (uint64_t)"kSBSKey_Result_SourceBase");
              if (v132) {
                goto LABEL_82;
              }
              if (!v257) {
                goto LABEL_127;
              }
              uint64_t v132 = sub_226860774(v31, v38, (uint64_t)"%ks=%O", v133, v134, v135, v136, v137, (uint64_t)"BSAutoGuess_SourceBase");
              if (!v132) {
                goto LABEL_59;
              }
              goto LABEL_82;
            case 3:
              LODWORD(cf) = 0;
              uint64_t v61 = CFDictionaryCreateMutable(v31, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
              if (!v61) {
                goto LABEL_110;
              }
              sub_22686088C(v260, (uint64_t)&v257, (UInt8 *)"%ks", v138, v139, v140, v141, v142, (uint64_t)"kSBSKey_BaseName");
              if (v143 == -6727) {
                goto LABEL_66;
              }
              uint64_t v8 = v143;
              if (v143) {
                goto LABEL_128;
              }
              if (!v257) {
                goto LABEL_110;
              }
              uint64_t v8 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v144, v145, v146, v147, v148, (uint64_t)"kBSAutoGuessSetupOptionKey_BaseName");
              if (v8) {
                goto LABEL_128;
              }
LABEL_66:
              sub_22686088C(v260, (uint64_t)&cf, (UInt8 *)"%ks:int", v144, v145, v146, v147, v148, (uint64_t)"kSBSKey_SelectorChoice");
              if (v149 == -6727) {
                goto LABEL_71;
              }
              uint64_t v8 = v149;
              if (v149) {
                goto LABEL_128;
              }
              if (!v257) {
                goto LABEL_110;
              }
              if (cf == 212)
              {
                uint64_t v8 = sub_226860774(v31, v61, (uint64_t)"%ks=%b", v150, v151, v152, v153, v154, (uint64_t)"kBSAutoGuessSetupOptionKey_ExtendOption_JoinApple");
                if (v8) {
                  goto LABEL_128;
                }
              }
LABEL_71:
              sub_22686088C(v254, (uint64_t)&v257, (UInt8 *)"%ks", v150, v151, v152, v153, v154, (uint64_t)"kSBSKey_Result_SourceBase");
              uint64_t v8 = v160;
              if (v160) {
                goto LABEL_128;
              }
              if (!v257) {
                goto LABEL_110;
              }
              uint64_t v8 = sub_226860774(v31, v38, (uint64_t)"%ks=%O", v155, v156, v157, v158, v159, (uint64_t)"BSAutoGuess_SourceBase");
              if (v8) {
                goto LABEL_128;
              }
              uint64_t v8 = sub_226860774(v31, v38, (uint64_t)"%ks=%s", v161, v162, v163, v164, v165, (uint64_t)"BSAutoGuess_Recommendation");
              if (!v8) {
                goto LABEL_97;
              }
              goto LABEL_111;
            case 4:
              CFMutableDictionaryRef v166 = CFDictionaryCreateMutable(v31, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
              if (!v166)
              {
LABEL_98:
                uint64_t v8 = 4294960568;
                goto LABEL_14;
              }
              uint64_t v61 = v166;
              sub_22686088C(v260, (uint64_t)&v257, (UInt8 *)"%ks", v167, v168, v169, v170, v171, (uint64_t)"kSBSKey_BaseName");
              if (v172 == -6727) {
                goto LABEL_81;
              }
              uint64_t v8 = v172;
              if (v172) {
                goto LABEL_128;
              }
              if (!v257) {
                goto LABEL_127;
              }
              uint64_t v132 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v173, v174, v175, v176, v177, (uint64_t)"kBSAutoGuessSetupOptionKey_BaseName");
              if (v132) {
                goto LABEL_82;
              }
LABEL_81:
              sub_22686088C(v260, (uint64_t)&v257, (UInt8 *)"%ks", v173, v174, v175, v176, v177, (uint64_t)"kSBSKey_BasePassword");
              if (v132) {
                goto LABEL_82;
              }
              if (!v257) {
                goto LABEL_127;
              }
              uint64_t v132 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v178, v179, v180, v181, v182, (uint64_t)"kBSAutoGuessSetupOptionKey_BasePassword");
              if (v132) {
                goto LABEL_82;
              }
              sub_22686088C(v260, (uint64_t)&v257, (UInt8 *)"%ks", v232, v233, v234, v235, v236, (uint64_t)"kSBSKey_AirPlayPassword");
              if (v237 == -6727) {
                goto LABEL_119;
              }
              uint64_t v8 = v237;
              if (v237) {
                goto LABEL_128;
              }
              if (!v257) {
                goto LABEL_127;
              }
              uint64_t v132 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v238, v239, v240, v241, v242, (uint64_t)"kBSAutoGuessSetupOptionKey_AirPlayPassword");
              if (v132) {
                goto LABEL_82;
              }
LABEL_119:
              sub_22686088C(v254, (uint64_t)&v257, (UInt8 *)"%ks", v238, v239, v240, v241, v242, (uint64_t)"kSBSKey_Result_SourceNetwork");
              if (v132) {
                goto LABEL_82;
              }
              if (!v257) {
                goto LABEL_127;
              }
              uint64_t v132 = sub_226860774(v31, v38, (uint64_t)"%ks=%O", v243, v244, v245, v246, v247, (uint64_t)"BSAutoGuess_SourceNetwork");
              if (v132) {
                goto LABEL_82;
              }
              sub_22686088C(v260, (uint64_t)&v257, (UInt8 *)"%ks", v248, v249, v250, v251, v252, (uint64_t)"kSBSKey_NetworkPassword");
              if (v253 == -6727) {
                goto LABEL_59;
              }
              uint64_t v8 = v253;
              if (!v253)
              {
                if (v257)
                {
                  uint64_t v132 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v109, v110, v111, v112, v113, (uint64_t)"kBSAutoGuessSetupOptionKey_NetworkPassword");
                  if (v132)
                  {
LABEL_82:
                    uint64_t v8 = v132;
                  }
                  else
                  {
LABEL_59:
                    uint64_t v8 = sub_226860774(v31, v38, (uint64_t)"%ks=%s", v109, v110, v111, v112, v113, (uint64_t)"BSAutoGuess_Recommendation");
                    if (!v8) {
                      goto LABEL_97;
                    }
                  }
                }
                else
                {
LABEL_127:
                  uint64_t v8 = 4294960568;
                }
              }
LABEL_128:
              CFRelease(v38);
              goto LABEL_129;
            case 5:
              LODWORD(cf) = 0;
              sub_22686088C(v260, (uint64_t)&v257, (UInt8 *)"%ks", v49, v50, v51, v52, v53, (uint64_t)"kSBSKey_BaseName");
              uint64_t v61 = 0;
              if (v183 == -6727) {
                goto LABEL_88;
              }
              uint64_t v8 = v183;
              if (v183) {
                goto LABEL_111;
              }
              if (!v257) {
                goto LABEL_109;
              }
              uint64_t v61 = CFDictionaryCreateMutable(v31, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
              if (!v61) {
                goto LABEL_110;
              }
              uint64_t v8 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v189, v190, v191, v192, v193, (uint64_t)"kBSAutoGuessSetupOptionKey_BaseName");
              if (v8) {
                goto LABEL_111;
              }
LABEL_88:
              sub_22686088C(v254, (uint64_t)&v257, (UInt8 *)"%ks", v184, v185, v186, v187, v188, (uint64_t)"kSBSKey_Result_SourceBase");
              if (v194) {
                goto LABEL_108;
              }
              if (!v257) {
                goto LABEL_110;
              }
              uint64_t v194 = sub_226860774(v31, v38, (uint64_t)"%ks=%O", v195, v196, v197, v198, v199, (uint64_t)"BSAutoGuess_SourceBase");
              if (!v194)
              {
                sub_22686088C(v260, (uint64_t)&cf, (UInt8 *)"%ks:int", v200, v201, v202, v203, v204, (uint64_t)"kSBSKey_SelectorChoice");
                if (!v194) {
                  goto LABEL_96;
                }
              }
              goto LABEL_108;
            case 6:
              CFTypeRef cf = 0;
              sub_22686088C(a1, (uint64_t)&cf, (UInt8 *)"%ks", v49, v50, v51, v52, v53, (uint64_t)"kSBSKey_Result_ConfigChangeLogDict");
              if (v210)
              {
                uint64_t v8 = v210;
                uint64_t v61 = 0;
                goto LABEL_111;
              }
              if (cf)
              {
                uint64_t v61 = CFDictionaryCreateMutable(v31, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
                if (v61)
                {
                  uint64_t v194 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v217, v218, v219, v220, v221, (uint64_t)"kBSAutoGuessSetupOptionKey_ConfigChangeLogDict");
                  if (v194
                    || (sub_22686088C(v260, (uint64_t)&v257, (UInt8 *)"%ks", v222, v223, v224, v225, v226, (uint64_t)"kSBSKey_BasePassword"), v194))
                  {
LABEL_108:
                    uint64_t v8 = v194;
                    goto LABEL_111;
                  }
                  if (v257)
                  {
                    uint64_t v194 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v227, v228, v229, v230, v231, (uint64_t)"kBSAutoGuessSetupOptionKey_BasePassword");
                    if (!v194)
                    {
LABEL_96:
                      uint64_t v194 = sub_226860774(v31, v38, (uint64_t)"%ks=%s", v205, v206, v207, v208, v209, (uint64_t)"BSAutoGuess_Recommendation");
                      if (!v194)
                      {
LABEL_97:
                        uint64_t v8 = 0;
                        *a2 = v38;
                        *a3 = v61;
                        return v8;
                      }
                    }
                    goto LABEL_108;
                  }
                }
              }
              else
              {
LABEL_109:
                uint64_t v61 = 0;
              }
LABEL_110:
              uint64_t v8 = 4294960568;
LABEL_111:
              CFRelease(v38);
              if (v61)
              {
LABEL_129:
                uint64_t v54 = v61;
                goto LABEL_15;
              }
              break;
            case 7:
              CFTypeRef cf = 0;
              sub_22686088C(a1, (uint64_t)&cf, (UInt8 *)"%ks", v49, v50, v51, v52, v53, (uint64_t)"kSBSKey_Result_ConfigChangeLogDict");
              uint64_t v61 = 0;
              if (v211 == -6727) {
                goto LABEL_96;
              }
              uint64_t v8 = v211;
              uint64_t v61 = CFDictionaryCreateMutable(v31, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
              if (!v61) {
                goto LABEL_110;
              }
              if (v8) {
                goto LABEL_128;
              }
              if (!cf) {
                goto LABEL_110;
              }
              uint64_t v8 = sub_226860774(v31, v61, (uint64_t)"%ks=%O", v212, v213, v214, v215, v216, (uint64_t)"kBSAutoGuessSetupOptionKey_ConfigChangeLogDict");
              if (!v8) {
                goto LABEL_96;
              }
              goto LABEL_128;
            default:
              uint64_t v8 = 4294960591;
              goto LABEL_14;
          }
        }
      }
    }
  }
  return v8;
}

uint64_t sub_2268CB9C8(const __CFString *a1, const __CFArray *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  values[1] = *(void **)MEMORY[0x263EF8340];
  CFTypeRef v106 = 0;
  int valuePtr = 0;
  uint64_t v8 = 4294960591;
  if (a1)
  {
    if (a3)
    {
      uint64_t v104 = 0;
      CFStringRef v105 = 0;
      uint64_t v102 = 0;
      uint64_t v103 = 0;
      CFMutableDictionaryRef Mutable = 0;
      uint64_t v101 = 0;
      CFArrayRef v99 = 0;
      sub_22686088C(a1, (uint64_t)&v105, (UInt8 *)"%ks", a4, a5, a6, a7, a8, (uint64_t)"BSAutoGuess_Recommendation");
      uint64_t v8 = v17;
      if (!v17)
      {
        if (!v105) {
          return 4294960568;
        }
        uint64_t v103 = 0;
        uint64_t v104 = 0;
        sub_22686088C(a1, (uint64_t)&v104, (UInt8 *)"%ks", v12, v13, v14, v15, v16, (uint64_t)"BSAutoGuess_UnconfiguredBase");
        if (v18 == -6727)
        {
          sub_22686088C(a1, (uint64_t)&v103, (UInt8 *)"%ks", v19, v20, v21, v22, v23, (uint64_t)"BSAutoGuess_UnconfiguredNetwork");
          uint64_t v8 = v24;
          if (v24) {
            return v8;
          }
          if (!v103) {
            return 4294960568;
          }
        }
        else
        {
          uint64_t v8 = v18;
          if (v18) {
            return v8;
          }
          if (!v104) {
            return 4294960568;
          }
        }
        if (CFStringCompare(v105, @"BSSetupRecommend_OfferExtendWirelessly", 0))
        {
          if (CFStringCompare(v105, @"BSSetupRecommend_AskUserChooseBaseWireless", 0))
          {
            if (CFStringCompare(v105, @"BSSetupRecommend_OfferExtendOverEthernet", 0))
            {
              if (CFStringCompare(v105, @"BSSetupRecommend_AskUserChooseBaseWired", 0))
              {
                if (CFEqual(v105, @"BSSetupRecommend_OfferCreate"))
                {
                  CFNumberRef v73 = 0;
                  goto LABEL_41;
                }
                if (CFStringCompare(v105, @"BSSetupRecommend_OfferJoinNetwork", 0))
                {
                  if (CFStringCompare(v105, @"BSSetupRecommend_AskUserChooseNetworkToJoin", 0))
                  {
                    if (CFStringCompare(v105, @"BSSetupRecommend_OfferReplace", 0))
                    {
                      if (CFStringCompare(v105, @"BSSetupRecommend_OfferReplaceSourceIsUnconfigurable", 0))
                      {
                        CFStringCompare(v105, @"BSSetupRecommend_NoNetworkToJoin", 0);
                        return 4294960561;
                      }
                      LODWORD(values[0]) = 0;
                      sub_22686088C(a1, (uint64_t)&v102, (UInt8 *)"%ks", v65, v66, v67, v68, v69, (uint64_t)"BSAutoGuess_SourceBase");
                      uint64_t v8 = v93;
                      if (v93) {
                        return v8;
                      }
                      if (!v102) {
                        return 4294960568;
                      }
                      sub_22686088C(a1, (uint64_t)values, (UInt8 *)"%ks:int", v88, v89, v90, v91, v92, (uint64_t)"kBSAutoGuessSetupOptionKey_NoConfigureReason");
                      uint64_t v8 = v94;
                      if (v94) {
                        return v8;
                      }
                      if (LODWORD(values[0]) == 2)
                      {
                        int v95 = 102;
                      }
                      else
                      {
                        if (LODWORD(values[0]) != 1) {
                          goto LABEL_71;
                        }
                        int v95 = 101;
                      }
                      int valuePtr = v95;
LABEL_71:
                      CFNumberRef v96 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
                      if (v96)
                      {
                        CFNumberRef v73 = v96;
                        goto LABEL_41;
                      }
                      return 4294960568;
                    }
                    sub_22686088C(a1, (uint64_t)&v102, (UInt8 *)"%ks", v60, v61, v62, v63, v64, (uint64_t)"BSAutoGuess_SourceBase");
                    uint64_t v8 = v86;
                    if (v86) {
                      return v8;
                    }
                    if (!v102) {
                      return 4294960568;
                    }
                    int valuePtr = 313;
                    CFNumberRef v87 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
                    if (!v87) {
                      return 4294960568;
                    }
                    CFNumberRef v73 = v87;
LABEL_41:
                    uint64_t v8 = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], &v106, (uint64_t)"{%ks=%i%ks=%i%ks=%O%ks=%O%ks=%O%ks=%O%ks=%O%ks=%O}", v45, v46, v47, v48, v49, (uint64_t)"kSBSKey_Step");
                    if (v8)
                    {
                      if (!v106) {
                        goto LABEL_47;
                      }
                      CFRelease(v106);
                    }
                    else
                    {
                      if (!v106)
                      {
                        uint64_t v8 = 4294960568;
                        if (!v73) {
                          return v8;
                        }
                        goto LABEL_48;
                      }
                      uint64_t v8 = 0;
                      *a3 = v106;
                    }
                    CFTypeRef v106 = 0;
LABEL_47:
                    if (!v73) {
                      return v8;
                    }
LABEL_48:
                    CFRelease(v73);
                    return v8;
                  }
                  sub_22686088C(a1, (uint64_t)&v99, (UInt8 *)"%ks", v55, v56, v57, v58, v59, (uint64_t)"BSAutoGuess_AskUserList");
                }
                else
                {
                  sub_22686088C(a1, (uint64_t)&v101, (UInt8 *)"%ks", v50, v51, v52, v53, v54, (uint64_t)"BSAutoGuess_SourceNetwork");
                  uint64_t v8 = v84;
                  if (v84) {
                    return v8;
                  }
                  if (!v101) {
                    return 4294960568;
                  }
                  sub_22686088C(a1, (uint64_t)&v99, (UInt8 *)"%ks", v79, v80, v81, v82, v83, (uint64_t)"BSAutoGuess_AskUserList");
                  if (v85 == -6727)
                  {
LABEL_58:
                    CFNumberRef v73 = 0;
                    goto LABEL_41;
                  }
                }
                uint64_t v8 = v85;
                if (v85) {
                  return v8;
                }
                if (!v99) {
                  return 4294960568;
                }
                goto LABEL_58;
              }
              sub_22686088C(a1, (uint64_t)&v99, (UInt8 *)"%ks", v40, v41, v42, v43, v44, (uint64_t)"BSAutoGuess_AskUserList");
              uint64_t v8 = v78;
              if (v78) {
                return v8;
              }
              if (!v99) {
                return 4294960568;
              }
            }
            else
            {
              sub_22686088C(a1, (uint64_t)&v102, (UInt8 *)"%ks", v35, v36, v37, v38, v39, (uint64_t)"BSAutoGuess_SourceBase");
              uint64_t v8 = v74;
              if (v74) {
                return v8;
              }
              if (!v102) {
                return 4294960568;
              }
            }
            CFNumberRef v73 = 0;
            goto LABEL_41;
          }
          sub_22686088C(a1, (uint64_t)&v99, (UInt8 *)"%ks", v30, v31, v32, v33, v34, (uint64_t)"BSAutoGuess_AskUserList");
          uint64_t v8 = v71;
          if (v71) {
            return v8;
          }
          if (!v99) {
            return 4294960568;
          }
          uint64_t v72 = sub_2268A1E14(a2, v99, &Mutable);
          CFNumberRef v73 = 0;
          if (v72 == -6727) {
            goto LABEL_41;
          }
          uint64_t v8 = v72;
          if (!v72) {
            goto LABEL_41;
          }
        }
        else
        {
          sub_22686088C(a1, (uint64_t)&v102, (UInt8 *)"%ks", v25, v26, v27, v28, v29, (uint64_t)"BSAutoGuess_SourceBase");
          if (v70) {
            return v70;
          }
          if (!v102) {
            return 4294960568;
          }
          CFAllocatorRef v75 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          CFMutableDictionaryRef Mutable = (__CFString *)CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
          if (!Mutable) {
            return 4294960568;
          }
          values[0] = v102;
          CFArrayRef v76 = CFArrayCreate(v75, (const void **)values, 1, MEMORY[0x263EFFF70]);
          if (!v76) {
            return 4294960568;
          }
          CFArrayRef v77 = v76;
          uint64_t v8 = sub_2268A1E14(a2, v76, &Mutable);
          CFRelease(v77);
          if (!v8 || v8 == -6727)
          {
            CFNumberRef v73 = 0;
            goto LABEL_41;
          }
        }
      }
    }
  }
  return v8;
}

CFArrayRef sub_2268CC018(uint64_t a1)
{
  unsigned int v8 = 0;
  CFArrayRef result = *(const __CFArray **)(a1 + 48);
  if (result)
  {
    CFArrayRef result = (const __CFArray *)CFArrayGetCount(result);
    if (result)
    {
      sub_22686088C(*(const __CFString **)(a1 + 48), (uint64_t)&v8, (UInt8 *)"[*].%ks:int", v3, v4, v5, v6, v7, (uint64_t)result - 1);
      return (const __CFArray *)v8;
    }
  }
  return result;
}

uint64_t sub_2268CC080(uint64_t a1)
{
  uint64_t v46 = 0;
  CFTypeRef cf = 0;
  if (!*(void *)(a1 + 48)) {
    return 4294960591;
  }
  uint64_t v48 = 0;
  unsigned int v47 = 0;
  if (!*(void *)a1 || !*(void *)(a1 + 8)) {
    goto LABEL_26;
  }
  sub_2268CC78C(a1, &v48);
  if (!v2)
  {
    if (!v48)
    {
      uint64_t v9 = 0;
      CFMutableDictionaryRef Mutable = 0;
      goto LABEL_37;
    }
    sub_22686088C(v48, (uint64_t)&v47, (UInt8 *)"%kO:int", v3, v4, v5, v6, v7, @"kSBSKey_Step");
    if (v2) {
      goto LABEL_5;
    }
    if (v47 == 14 || v47 == 2)
    {
      uint64_t v9 = sub_2268A58F4(*(__CFArray **)(a1 + 8));
      if (!v9
        || (uint64_t v16 = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], (__CFArray *)v48, (uint64_t)"%ks=%O", v11, v12, v13, v14, v15, (uint64_t)"kSBSKey_TargetBaseFeatures"), !v16))
      {
        uint64_t v17 = sub_2268CC818(a1, v47, (uint64_t)v48, (CFTypeRef *)&v46, v12, v13, v14, v15);
        if (v17 == -6769)
        {
          uint64_t v16 = sub_2268CA934(a1, 0, 0);
        }
        else
        {
          uint64_t v8 = v17;
          if (v17 == -6723) {
            goto LABEL_6;
          }
          CFMutableDictionaryRef Mutable = 0;
          uint64_t v44 = 0;
          int v43 = 0;
          if (v17) {
            goto LABEL_27;
          }
          if (!v46) {
            goto LABEL_40;
          }
          uint64_t v16 = sub_2268A58BC(*(void *)(a1 + 8), (CFMutableDictionaryRef *)&cf);
          if (!v16)
          {
            if (cf)
            {
              CFAllocatorRef v18 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
              CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
              if (Mutable)
              {
                sub_22686088C(v48, (uint64_t)&v43, (UInt8 *)"%ks:int", v19, v20, v21, v22, v23, (uint64_t)"kSBSKey_SelectorChoice");
                if (v24 != -6727)
                {
                  uint64_t v8 = v24;
                  if (v24) {
                    goto LABEL_27;
                  }
                  uint64_t v30 = sub_226860774(v18, v46, (uint64_t)"%ks=%i", v25, v26, v27, v28, v29, (uint64_t)"kSBSKey_SelectorChoice");
                  if (v30) {
                    goto LABEL_25;
                  }
                }
                uint64_t v30 = sub_226860774(v18, Mutable, (uint64_t)"%ks=%i%ks=%O%ks=%O%ks=%O", v25, v26, v27, v28, v29, (uint64_t)"kSBSKey_Result_ConfigurationChoice");
                if (v30)
                {
LABEL_25:
                  uint64_t v8 = v30;
                  goto LABEL_27;
                }
                sub_22686088C(v48, (uint64_t)&v44, (UInt8 *)"%ks", v31, v32, v33, v34, v35, (uint64_t)"kSBSKey_SourceBase");
                if (v37 == -6727)
                {
LABEL_45:
                  uint64_t v8 = 0;
                  *(void *)(a1 + 72) = Mutable;
                  goto LABEL_6;
                }
                uint64_t v8 = v37;
                if (v37) {
                  goto LABEL_27;
                }
                if (v44)
                {
                  uint64_t v30 = sub_226860774(v18, Mutable, (uint64_t)"%ks=%O", v38, v39, v40, v41, v42, (uint64_t)"kSBSKey_Result_SourceBase");
                  if (v30) {
                    goto LABEL_25;
                  }
                  goto LABEL_45;
                }
              }
LABEL_37:
              uint64_t v8 = 4294960568;
              goto LABEL_27;
            }
LABEL_40:
            CFMutableDictionaryRef Mutable = 0;
            uint64_t v8 = 4294960569;
            goto LABEL_27;
          }
        }
      }
      uint64_t v8 = v16;
      goto LABEL_6;
    }
LABEL_26:
    uint64_t v9 = 0;
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v8 = 4294960591;
    goto LABEL_27;
  }
LABEL_5:
  uint64_t v8 = v2;
  uint64_t v9 = 0;
LABEL_6:
  CFMutableDictionaryRef Mutable = 0;
LABEL_27:
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (v46)
  {
    CFRelease(v46);
    uint64_t v46 = 0;
  }
  if (Mutable) {
    CFRelease(Mutable);
  }
  if (v9) {
    CFRelease(v9);
  }
  return v8;
}

uint64_t sub_2268CC3AC(uint64_t a1)
{
  uint64_t v62 = 0;
  unsigned int v61 = 0;
  CFStringRef ValueAtIndex = 0;
  int v59 = 0;
  CFArrayRef theArray = 0;
  uint64_t v58 = 0;
  CFTypeRef cf = 0;
  if (!*(void *)(a1 + 48))
  {
    uint64_t v8 = 4294960591;
    goto LABEL_50;
  }
  if (!*(void *)a1 || !*(void *)(a1 + 8)) {
    goto LABEL_45;
  }
  sub_2268CC78C(a1, &v62);
  uint64_t v8 = v7;
  if (v7) {
    goto LABEL_46;
  }
  if (!v62) {
    goto LABEL_53;
  }
  sub_22686088C(v62, (uint64_t)&v61, (UInt8 *)"%ks:int", v2, v3, v4, v5, v6, (uint64_t)"kSBSKey_Step");
  uint64_t v8 = v14;
  if (v14) {
    goto LABEL_46;
  }
  if ((v61 & 0xFFFFFFF7) != 5) {
    goto LABEL_45;
  }
  CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  uint64_t v8 = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], (__CFArray *)v62, (uint64_t)"%ks=%b", v9, v10, v11, v12, v13, (uint64_t)"kSBSKey_CannotBeBackedInto");
  if (v8) {
    goto LABEL_46;
  }
  uint64_t v8 = sub_2268E065C(*(void *)(a1 + 88), *(const __CFString **)a1, 0, 0, 0, 0, &ValueAtIndex, v16);
  if (v8) {
    goto LABEL_46;
  }
  if (ValueAtIndex)
  {
    uint64_t v8 = sub_2268CA730(a1, ValueAtIndex);
    if (ValueAtIndex)
    {
      CFRelease(ValueAtIndex);
      CFStringRef ValueAtIndex = 0;
    }
    if (v8) {
      goto LABEL_46;
    }
  }
  uint64_t v8 = sub_2268A6454(*(void *)(a1 + 8), 1937327724);
  if (v8) {
    goto LABEL_46;
  }
  uint64_t v8 = sub_2268A5604(*(void *)(a1 + 8), 1937327724, &v59);
  if (v8) {
    goto LABEL_46;
  }
  if ((v59 & 0x200) == 0)
  {
    uint64_t v55 = 0;
    uint64_t v8 = sub_2268DB87C(*(void *)(a1 + 88), &v58);
    if (v8) {
      goto LABEL_46;
    }
    if (!v58) {
      goto LABEL_53;
    }
    uint64_t v8 = sub_2268E0A60(v58, *(void *)(a1 + 8), 512, (uint64_t *)&v55, v17, v18, v19, v20);
    if (v8) {
      goto LABEL_46;
    }
    if (!v55) {
      goto LABEL_53;
    }
    sub_2268CC904((uint64_t)v58, v61, (uint64_t)v62, 0, v21, v22, v23, v24);
    uint64_t v8 = v25;
    sub_2268A2AA8(*(void *)(a1 + 8));
    sub_2268E097C(v55, v26, v27, v28, v29, v30, v31, v32);
    if (v8 == -6769)
    {
LABEL_28:
      CFTypeRef v42 = 0;
      int v43 = 0;
LABEL_33:
      uint64_t v8 = sub_2268CA934(a1, v43, (uint64_t)v42);
      goto LABEL_46;
    }
    if (v8) {
      goto LABEL_46;
    }
    uint64_t v8 = sub_2268CCF48(a1, v33, v34, v35, v36, v37, v38, v39);
    if (v8) {
      goto LABEL_46;
    }
  }
  if (v61 != 5)
  {
    int v43 = 14;
    goto LABEL_31;
  }
  uint64_t v55 = 0;
  uint64_t v40 = sub_2268CD048((uint64_t *)a1, (CFArrayRef *)&v55);
  if ((v40 & 0xFFFFFFF7) == 0xFFFFE5B1) {
    goto LABEL_26;
  }
  uint64_t v8 = v40;
  CFArrayRef v54 = 0;
  if (v40) {
    goto LABEL_46;
  }
  if (!v55)
  {
LABEL_53:
    uint64_t v8 = 4294960568;
    goto LABEL_46;
  }
  uint64_t v44 = sub_2268CD1C8(a1, 0, &v54);
  if (v44 != -6727)
  {
    uint64_t v8 = v44;
    if (v44) {
      goto LABEL_46;
    }
    if (!v54) {
      goto LABEL_53;
    }
    uint64_t v45 = sub_2268CD2D8((const __CFArray *)v55, v54, &theArray);
    if (v45 != -6727)
    {
      uint64_t v8 = v45;
      if (v45) {
        goto LABEL_46;
      }
      if (theArray)
      {
        CFIndex Count = CFArrayGetCount(theArray);
        if (Count)
        {
          if (Count < 2)
          {
            CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(theArray, 0);
            if (!ValueAtIndex) {
              goto LABEL_60;
            }
            uint64_t v52 = "kSBSKey_SourceBase";
          }
          else
          {
            uint64_t v52 = "kSBSKey_BrowseRecordList";
          }
          uint64_t v8 = sub_22685FC7C(v15, &cf, (uint64_t)"{%ks=%O}", v47, v48, v49, v50, v51, (uint64_t)v52);
          if (v8) {
            goto LABEL_46;
          }
          if (cf)
          {
            int v43 = 6;
LABEL_31:
            uint64_t v8 = sub_2268CA934(a1, 0, 0);
            if (!v8)
            {
              CFTypeRef v42 = cf;
              goto LABEL_33;
            }
            goto LABEL_46;
          }
LABEL_60:
          uint64_t v8 = 4294960569;
          goto LABEL_46;
        }
LABEL_45:
        uint64_t v8 = 4294960591;
        goto LABEL_46;
      }
      goto LABEL_53;
    }
  }
LABEL_26:
  uint64_t v41 = sub_2268DF598(*(void *)(a1 + 88), @"kAskUserWarning_Prompt", 0, 0, @"kAskUserWarning_NoBaseStationsFound_OnEthernet", 0, 0, 0, 0);
  if (v41 == -6723)
  {
    uint64_t v8 = 4294960573;
    goto LABEL_46;
  }
  uint64_t v8 = v41;
  if (!v41) {
    goto LABEL_28;
  }
LABEL_46:
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (theArray)
  {
    CFRelease(theArray);
    CFArrayRef theArray = 0;
  }
LABEL_50:
  if (v58) {
    sub_2268DB9AC(v58);
  }
  return v8;
}

void sub_2268CC78C(uint64_t a1, void *a2)
{
  if (a2)
  {
    if (*(void *)(a1 + 48))
    {
      CFIndex Count = CFArrayGetCount(*(CFArrayRef *)(a1 + 48));
      if (Count)
      {
        CFStringRef v10 = *(const __CFString **)(a1 + 48);
        uint64_t v12 = 0;
        sub_22686088C(v10, (uint64_t)&v12, (UInt8 *)"[*]", v5, v6, v7, v8, v9, Count - 1);
        if (!v11)
        {
          if (v12) {
            *a2 = v12;
          }
        }
      }
    }
  }
}

uint64_t sub_2268CC818(uint64_t a1, uint64_t a2, uint64_t a3, CFTypeRef *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"OSStatus _CopyAndWaitResultsDictFromStep(StepByStepContextRef, eSBSStep, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v20);
  }
  uint64_t v21 = 0;
  uint64_t v16 = sub_2268DB87C(*(void *)(a1 + 88), &v21);
  uint64_t v17 = (char *)v21;
  if (!v16)
  {
    if (!v21) {
      return 4294960568;
    }
    if (*(void *)(v21 + 24))
    {
      sub_2268CC904(v21, a2, a3, a4, v12, v13, v14, v15);
      uint64_t v16 = v19;
      uint64_t v17 = (char *)v21;
      if (!v21) {
        return v16;
      }
    }
    else
    {
      uint64_t v16 = 4294960591;
    }
    goto LABEL_7;
  }
  if (v21) {
LABEL_7:
  }
    sub_2268DB9AC(v17);
  return v16;
}

void sub_2268CC904(uint64_t a1, uint64_t a2, uint64_t a3, CFTypeRef *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"OSStatus _CopyAndWaitResultsDictFromStepWithCallbackContext(AssistantCallbackContextRef, eSBSStep, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)" \n", a5, a6, a7, a8, v32);
  }
  if (a1
    && *(_DWORD *)a1 == 1634561902
    && !sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], *(__CFArray **)(a1 + 24), (uint64_t)"%ks=%i", (uint64_t)a4, a5, a6, a7, a8, (uint64_t)"kBSAssistantCallbackKey_SBS_SBSStep")&& (!a3|| !sub_2268DD050(a1, @"kBSAssistantCallbackKey_SBS_SBSParamDict", a3, v12, v13, v14, v15, v16))
    && !sub_2268DBFEC((void *)a1, 1, v11, v12, v13, v14, v15, v16))
  {
    int v24 = sub_2268DC37C(a1, v17, v18, v19, v20, v21, v22, v23);
    if (!*(_DWORD *)(a1 + 32) && !v24)
    {
      if (a4)
      {
        if (sub_2268DD020(a1, @"kBSAssistantCallbackKey_SBS_SBSOptionsDict"))
        {
          CFTypeRef cf = 0;
          sub_2268DCEEC(a1, @"kBSAssistantCallbackKey_SBS_SBSOptionsDict", &cf, v25, v26, v27, v28, v29);
          if (!v30)
          {
            CFTypeRef v31 = cf;
            if (cf)
            {
              *a4 = cf;
              CFRetain(v31);
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2268CCA84(uint64_t a1, CFTypeRef *a2)
{
  CFTypeRef v30 = 0;
  CFTypeRef cf = 0;
  if (!a2) {
    return 4294960591;
  }
  uint64_t v4 = sub_2268CCE20(a1, @"kSBSCacheKey_ScanRecordsMerged", &cf);
  if (v4 == -6727)
  {
    if (!cf)
    {
      uint64_t v16 = sub_2268DE0C0(*(void *)(a1 + 88), 0, 3, 1, (uint64_t)&cf, v7, v8, v9);
      uint64_t v10 = v16;
      CFTypeRef v17 = cf;
      if (v16 || !cf)
      {
        if (v16) {
          goto LABEL_29;
        }
      }
      else
      {
        uint64_t v10 = sub_2268CA49C(a1, @"kSBSCacheKey_ScanRecordsMerged", (uint64_t)cf);
        CFRelease(cf);
        if (v10) {
          goto LABEL_29;
        }
        CFTypeRef v17 = cf;
      }
      if (!v17) {
        goto LABEL_28;
      }
    }
  }
  else
  {
    uint64_t v10 = v4;
    if (v4) {
      goto LABEL_29;
    }
    if (!cf) {
      goto LABEL_28;
    }
  }
  *(void *)uint64_t v29 = 0;
  uint64_t v11 = sub_2268DD4C4(*(void *)(a1 + 88), (CFTypeRef *)v29, 0, v5, v6, v7, v8, v9);
  if (v11 == -6727)
  {
LABEL_12:
    uint64_t v10 = 0;
    *a2 = cf;
    CFTypeRef cf = 0;
    goto LABEL_29;
  }
  uint64_t v10 = v11;
  if (!v11)
  {
    if (!*(void *)v29)
    {
LABEL_28:
      uint64_t v10 = 4294960568;
      goto LABEL_29;
    }
    if (sub_22685BFE8(*(const __CFString **)v29, 0, (CFArrayRef)cf) == -1)
    {
      uint64_t v10 = sub_2268DDFAC(*(void *)(a1 + 88), *(const __CFString **)v29, 3, &v30, v12, v13, v14, v15);
      if (v10) {
        goto LABEL_29;
      }
      if (!v30) {
        goto LABEL_28;
      }
      CFAllocatorRef v18 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      if (cf)
      {
        CFIndex Count = CFArrayGetCount((CFArrayRef)cf);
        CFStringRef MutableCopy = CFArrayCreateMutableCopy(v18, Count + 1, (CFArrayRef)cf);
      }
      else
      {
        CFStringRef MutableCopy = CFArrayCreateMutable(v18, 1, MEMORY[0x263EFFF70]);
      }
      uint64_t v26 = MutableCopy;
      if (!MutableCopy) {
        goto LABEL_28;
      }
      uint64_t v27 = sub_226860774(v18, MutableCopy, (uint64_t)"%O", v21, v22, v23, v24, v25, (uint64_t)v30);
      if (v27)
      {
        uint64_t v10 = v27;
        CFRelease(v26);
        goto LABEL_29;
      }
      uint64_t v10 = sub_2268CA49C(a1, @"kSBSCacheKey_ScanRecordsMerged", (uint64_t)v26);
      CFTypeRef cf = v26;
      CFRelease(v26);
      if (v10) {
        goto LABEL_29;
      }
    }
    goto LABEL_12;
  }
LABEL_29:
  if (v30)
  {
    CFRelease(v30);
    CFTypeRef v30 = 0;
  }
  if (cf) {
    CFRelease(cf);
  }
  return v10;
}

uint64_t sub_2268CCCA0(CFArrayRef theArray, const char *a2, const __CFString *a3, __CFArray **a4)
{
  uint64_t v4 = 4294960591;
  if (theArray)
  {
    if (a4)
    {
      CFStringRef v6 = a3;
      if (a2 || a3)
      {
        CFIndex Count = CFArrayGetCount(theArray);
        if (Count)
        {
          uint64_t v10 = Count;
          CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
          if (Mutable)
          {
            CFAllocatorRef v18 = Mutable;
            CFStringRef v29 = 0;
            if (v10 >= 1)
            {
              for (uint64_t i = 0; v10 != i; ++i)
              {
                sub_22686088C((const __CFString *)theArray, (uint64_t)&v29, (UInt8 *)"[*]", v13, v14, v15, v16, v17, i);
                if (v20)
                {
LABEL_24:
                  uint64_t v4 = v20;
                  goto LABEL_27;
                }
                CFStringRef v27 = v29;
                if (!v29)
                {
                  uint64_t v4 = 4294960568;
                  goto LABEL_27;
                }
                if (v6)
                {
                  if (sub_22685BEEC(v6, v29, v21, v22, v23, v24, v25, v26))
                  {
                    CFStringRef v6 = 0;
                    continue;
                  }
                  CFStringRef v27 = v29;
                }
                if (!sub_226901888((uint64_t)v27, a2))
                {
                  uint64_t v20 = sub_226860774(v11, v18, (uint64_t)"%O", v13, v14, v15, v16, v17, (uint64_t)v29);
                  if (v20) {
                    goto LABEL_24;
                  }
                }
              }
            }
            if (CFArrayGetCount(v18))
            {
              uint64_t v4 = 0;
              *a4 = v18;
            }
            else
            {
              uint64_t v4 = 4294960569;
LABEL_27:
              CFRelease(v18);
            }
          }
          else
          {
            return 4294960568;
          }
        }
        else
        {
          return 4294960569;
        }
      }
    }
  }
  return v4;
}

uint64_t sub_2268CCE20(uint64_t a1, CFStringRef theString1, CFTypeRef *a3)
{
  CFTypeRef cf = 0;
  CFTypeRef v26 = 0;
  uint64_t v3 = 4294960591;
  if (!theString1 || !a3) {
    return v3;
  }
  if (!*(void *)(a1 + 56)) {
    goto LABEL_15;
  }
  if (CFStringCompare(theString1, @"kSBSCacheKey_BrowseRecords", 0))
  {
    if (CFStringCompare(theString1, @"kSBSCacheKey_BaseSettings", 0))
    {
      sub_22686088C(*(const __CFString **)(a1 + 56), (uint64_t)&v26, (UInt8 *)"%kO", v12, v13, v14, v15, v16, (uint64_t)theString1);
      goto LABEL_11;
    }
LABEL_15:
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    goto LABEL_17;
  }
  uint64_t v18 = sub_2268DD4C4(*(void *)(a1 + 88), &cf, 0, v7, v8, v9, v10, v11);
  if (v18 == -6727) {
    goto LABEL_10;
  }
  uint64_t v3 = v18;
  if (v18) {
    goto LABEL_15;
  }
  if (cf)
  {
LABEL_10:
    sub_22686088C(*(const __CFString **)(a1 + 56), (uint64_t)&v26, (UInt8 *)"%kO.%kO", v19, v20, v21, v22, v23, (uint64_t)theString1);
LABEL_11:
    uint64_t v3 = v17;
    if (!v17)
    {
      if (v26)
      {
        uint64_t v3 = 0;
        *a3 = v26;
        CFTypeRef v26 = 0;
      }
      else
      {
        uint64_t v3 = 4294960568;
      }
    }
    goto LABEL_15;
  }
  uint64_t v3 = 4294960568;
LABEL_17:
  if (v26) {
    CFRelease(v26);
  }
  return v3;
}

uint64_t sub_2268CCF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"OSStatus _SendResetContextCommand(StepByStepContextRef)", 800, (uint64_t)" \n", a5, a6, a7, a8, v24);
  }
  context = 0;
  uint64_t v14 = sub_2268DB87C(*(void *)(a1 + 88), &context);
  uint64_t v15 = (char *)context;
  if (!v14)
  {
    if (!context) {
      return 4294960568;
    }
    uint64_t v17 = (__CFArray *)*((void *)context + 3);
    if (!v17)
    {
      uint64_t v14 = 4294960591;
      goto LABEL_7;
    }
    uint64_t v14 = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], v17, (uint64_t)"%ks=%i", v9, v10, v11, v12, v13, (uint64_t)"kBSAssistantCallbackKey_SBS_SBSStep");
    uint64_t v15 = (char *)context;
    if (!v14)
    {
      uint64_t v14 = sub_2268DC264(context, 1, v18, v19, v20, v21, v22, v23);
      uint64_t v15 = (char *)context;
    }
  }
  if (v15) {
LABEL_7:
  }
    sub_2268DB9AC(v15);
  return v14;
}

uint64_t sub_2268CD048(uint64_t *a1, CFArrayRef *a2)
{
  CFArrayRef theArray = 0;
  if (!a2) {
    return 4294960591;
  }
  uint64_t v4 = sub_2268CCE20((uint64_t)a1, @"kSBSCacheKey_TargetRemoteBrowseRecords", (CFTypeRef *)&theArray);
  if (v4 != -6727)
  {
    uint64_t v9 = v4;
    if (!v4)
    {
      CFArrayRef v10 = theArray;
      if (!theArray) {
        return 4294960568;
      }
      uint64_t v9 = 0;
      goto LABEL_9;
    }
    goto LABEL_21;
  }
  CFArrayRef v10 = theArray;
  if (theArray)
  {
    uint64_t v9 = 4294960569;
LABEL_9:
    *a2 = v10;
    return v9;
  }
  CFTypeRef cf = 0;
  sub_2268DC568(a1[11], 3, 0, 0, v5, v6, v7, v8);
  uint64_t v9 = sub_2268A89F4(*a1, @"local.", @"_airport._tcp", @"wan", 2u, 1, &cf);
  sub_2268DC568(a1[11], 4, 0, 0, v11, v12, v13, v14);
  if (!v9)
  {
    if (!cf) {
      goto LABEL_20;
    }
    uint64_t v9 = sub_22685BBB4(cf, &theArray);
    if (cf)
    {
      CFRelease(cf);
      CFTypeRef cf = 0;
    }
    if (v9) {
      goto LABEL_21;
    }
    if (theArray)
    {
      if (CFArrayGetCount(theArray))
      {
        uint64_t v9 = sub_2268CA49C((uint64_t)a1, @"kSBSCacheKey_TargetRemoteBrowseRecords", (uint64_t)theArray);
        CFRelease(theArray);
        if (!v9)
        {
          CFArrayRef v10 = theArray;
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v9 = 4294960569;
      }
    }
    else
    {
LABEL_20:
      uint64_t v9 = 4294960568;
    }
  }
LABEL_21:
  if (theArray) {
    CFRelease(theArray);
  }
  return v9;
}

uint64_t sub_2268CD1C8(uint64_t a1, int a2, void *a3)
{
  CFTypeRef cf = 0;
  if (!a3) {
    return 4294960591;
  }
  uint64_t v6 = sub_2268CCE20(a1, @"kSBSCacheKey_BrowseRecords", &cf);
  if (v6 == -6727)
  {
    CFTypeRef v13 = cf;
    if (cf)
    {
      uint64_t v12 = 4294960569;
      goto LABEL_9;
    }
    if (!a2 || (uint64_t v12 = sub_2268DDC20(*(void *)(a1 + 88), 8), !v12))
    {
      unsigned int v14 = sub_2268DF4A0(*(void *)(a1 + 88), 15, &cf, v7, v8, v9, v10, v11);
      if (v14)
      {
        if (v14 == -6727) {
          uint64_t v12 = 4294960569;
        }
        else {
          uint64_t v12 = v14;
        }
      }
      else
      {
        if (!cf) {
          return 4294960568;
        }
        uint64_t v12 = sub_2268CA49C(a1, @"kSBSCacheKey_BrowseRecords", (uint64_t)cf);
        CFRelease(cf);
        if (!v12)
        {
          CFTypeRef v13 = cf;
          goto LABEL_9;
        }
      }
    }
  }
  else
  {
    uint64_t v12 = v6;
    if (!v6)
    {
      CFTypeRef v13 = cf;
      if (cf)
      {
        uint64_t v12 = 0;
LABEL_9:
        *a3 = v13;
        return v12;
      }
      return 4294960568;
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  return v12;
}

uint64_t sub_2268CD2D8(const __CFArray *a1, const __CFArray *a2, __CFArray **a3)
{
  uint64_t v3 = 4294960591;
  if (a1 && a3)
  {
    CFIndex Count = CFArrayGetCount(a1);
    if (Count && (uint64_t v8 = Count, CFArrayGetCount(a2)))
    {
      CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
      if (Mutable)
      {
        uint64_t v16 = Mutable;
        CFStringRef v28 = 0;
        if (v8 >= 1)
        {
          uint64_t v17 = 0;
          while (1)
          {
            sub_22686088C((const __CFString *)a1, (uint64_t)&v28, (UInt8 *)"[*].%kO.%kO", v11, v12, v13, v14, v15, v17);
            if (v18 != -6727)
            {
              uint64_t v3 = v18;
              if (v18) {
                goto LABEL_23;
              }
              if (!v28)
              {
LABEL_21:
                uint64_t v3 = 4294960568;
                goto LABEL_23;
              }
              CFIndex v19 = sub_22685BC94(a2, v28);
              if (v19 != -1)
              {
                CFStringRef ValueAtIndex = CFArrayGetValueAtIndex(a2, v19);
                if (!ValueAtIndex) {
                  goto LABEL_21;
                }
                uint64_t v26 = sub_226860774(v9, v16, (uint64_t)"%O", v21, v22, v23, v24, v25, (uint64_t)ValueAtIndex);
                if (v26) {
                  break;
                }
              }
            }
            if (v8 == ++v17) {
              goto LABEL_15;
            }
          }
          uint64_t v3 = v26;
          goto LABEL_23;
        }
LABEL_15:
        if (!CFArrayGetCount(v16))
        {
          uint64_t v3 = 4294960569;
LABEL_23:
          CFRelease(v16);
          return v3;
        }
        uint64_t v3 = 0;
        *a3 = v16;
      }
      else
      {
        return 4294960568;
      }
    }
    else
    {
      return 4294960569;
    }
  }
  return v3;
}

uint64_t sub_2268CD460(uint64_t a1, CFArrayRef theArray, const __CFString *a3, int a4, int a5, int a6, const __CFString *a7, CFMutableArrayRef *a8)
{
  if (!a8) {
    return 4294960591;
  }
  CFIndex Count = CFArrayGetCount(theArray);
  if (!Count) {
    return 4294960569;
  }
  uint64_t v17 = Count;
  CFAllocatorRef v73 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  if (!Mutable) {
    return 4294960568;
  }
  CFMutableArrayRef v24 = Mutable;
  uint64_t v69 = a1;
  CFStringRef v70 = a7;
  int v71 = a6;
  CFStringRef v74 = 0;
  if (v17 >= 1)
  {
    unsigned int v25 = 0;
    uint64_t v26 = 0;
    CFMutableArrayRef v72 = Mutable;
    while (1)
    {
      sub_22686088C((const __CFString *)theArray, (uint64_t)&v74, (UInt8 *)"[*]", v19, v20, v21, v22, v23, v26);
      if (v27)
      {
LABEL_70:
        uint64_t v65 = v27;
        goto LABEL_73;
      }
      if (!v74)
      {
        uint64_t v65 = 4294960568;
LABEL_73:
        CFRelease(v24);
        return v65;
      }
      if (a5) {
        unsigned int v25 = sub_22685AB94(v74, v28, v29, v19, v20, v21, v22, v23);
      }
      if (a3 && sub_22685BF60(a3, v74, v29, v19, v20, v21, v22, v23))
      {
        a3 = 0;
        goto LABEL_56;
      }
      if (a4 && !sub_22685B858(v74, v28, v29, v19, v20, v21, v22, v23))
      {
        int v30 = dword_268147A58;
        if (dword_268147A58 <= 800)
        {
          CFTypeRef v31 = "Skipping non-wireless %@\n";
          goto LABEL_29;
        }
        goto LABEL_56;
      }
      if (a5 && (v25 == 3 || v25 == 102 || sub_22685CA24(v74, v28, v29, v19, v20, v21, v22, v23)))
      {
        int v30 = dword_268147A58;
        if (dword_268147A58 <= 800)
        {
          CFTypeRef v31 = "Skipping non-extendable %@\n";
          goto LABEL_29;
        }
        goto LABEL_56;
      }
      if (v71)
      {
        CFStringRef v32 = v74;
        if (v74)
        {
          if (*(void *)(v69 + 8)) {
            break;
          }
        }
      }
LABEL_51:
      CFStringRef v57 = v74;
      if (v70)
      {
        unsigned int v60 = sub_22685AC68(v74, v70, v29, v19, v20, v21, v22, v23);
        CFStringRef v57 = v74;
        if (!v60)
        {
          if (!sub_22685AE3C(v74, v58, v59, v19, v20, v21, v22, v23)) {
            goto LABEL_56;
          }
          CFStringRef v57 = v74;
        }
      }
      uint64_t v27 = sub_226860774(v73, v24, (uint64_t)"%O", v19, v20, v21, v22, v23, (uint64_t)v57);
      if (v27) {
        goto LABEL_70;
      }
LABEL_56:
      if (v17 == ++v26) {
        goto LABEL_68;
      }
    }
    CFStringRef v33 = sub_22685B858(v74, v28, v29, v19, v20, v21, v22, v23);
    if (v33 && (uint64_t v41 = (uint64_t)v33, CFStringGetLength(v33)))
    {
      uint64_t v42 = sub_2269016F4(v41, (const char *)3, v35);
    }
    else
    {
      CFStringRef v48 = sub_22685B6AC(v32, v34, v35, v36, v37, v38, v39, v40);
      uint64_t v49 = (uint64_t)v48;
      if (!v48) {
        goto LABEL_37;
      }
      if (!CFStringGetLength(v48))
      {
        uint64_t v49 = 0;
LABEL_37:
        if (sub_2268A58D0(*(void *)(v69 + 8), 1852787795))
        {
          unsigned int v75 = 0;
          if (v49)
          {
            if (sub_226901660(v49, (const char *)&v75, 0) && (v75 & 0xFFFFFFFE) == 2)
            {
              CFMutableArrayRef v24 = v72;
              if (dword_268147A58 <= 800 && (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u)))
              {
                CFStringRef v67 = sub_22685B6F8(v32, v28, v29, v19, v20, v21, v22, v23);
                sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"Boolean _IsSourceBaseReplaceable(StepByStepContextRef, CFDictionaryRef)", 800, (uint64_t)"This base is irreplaceable because it's WEP %@\n", v52, v53, v54, v55, (uint64_t)v67);
              }
LABEL_63:
              int v30 = dword_268147A58;
              if (dword_268147A58 <= 800)
              {
                CFTypeRef v31 = "Skipping irreplaceable %@\n";
LABEL_29:
                if (v30 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))
                {
                  CFStringRef v43 = sub_22685B6F8(v74, v28, v29, v19, v20, v21, v22, v23);
                  sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"OSStatus _CopyNarrowedDownBrowseRecords(StepByStepContextRef, CFArrayRef, CFDictionaryRef, Boolean, Boolean, Boolean, CFStringRef, CFArrayRef *)", 800, (uint64_t)v31, v44, v45, v46, v47, (uint64_t)v43);
                }
                CFMutableArrayRef v24 = v72;
                goto LABEL_56;
              }
              goto LABEL_56;
            }
          }
        }
        CFMutableArrayRef v24 = v72;
        if (!sub_22685CA24(v32, v28, v29, v19, v20, v21, v22, v23)
          && sub_22685B8A4(v32, v56, v29, v19, v20, v21, v22, v23) == 1)
        {
          if (!sub_2268A58D0(*(void *)(v69 + 8), 1112757313)
            || (unsigned int v75 = 0, !sub_2268A5604(*(void *)(v69 + 8), 1937326416, &v75))
            && v75 >= 0x77
            && !sub_2268A58D0(*(void *)(v69 + 8), 1632923251))
          {
            if (dword_268147A58 > 800) {
              goto LABEL_56;
            }
            if (dword_268147A58 != -1 || sub_226865630((uint64_t)&dword_268147A58, 0x320u))
            {
              CFStringRef v68 = sub_22685B6F8(v32, v28, v29, v19, v20, v21, v22, v23);
              sub_226865EB4((uint64_t)&dword_268147A58, (uint64_t)"Boolean _IsSourceBaseReplaceable(StepByStepContextRef, CFDictionaryRef)", 800, (uint64_t)"This base is irreplaceable because it's a STA %@\n", v61, v62, v63, v64, (uint64_t)v68);
            }
            goto LABEL_63;
          }
        }
        goto LABEL_51;
      }
      uint64_t v42 = sub_22690173C(v49, v50, v51);
    }
    uint64_t v49 = v42;
    goto LABEL_37;
  }
LABEL_68:
  if (!CFArrayGetCount(v24))
  {
    uint64_t v65 = 4294960569;
    goto LABEL_73;
  }
  uint64_t v65 = 0;
  *a8 = v24;
  return v65;
}

BOOL sub_2268CD8C4(uint64_t *a1, const __CFString *a2)
{
  if (!a2) {
    return 0;
  }
  CFArrayRef v11 = 0;
  CFStringRef v12 = 0;
  int v8 = sub_2268CD048(a1, &v11);
  BOOL result = 0;
  if (!v8)
  {
    sub_22686088C(a2, (uint64_t)&v12, (UInt8 *)"%kO.%kO", v3, v4, v5, v6, v7, @"txt");
    return !v10 && v12 && sub_22685BC94(v11, v12) != -1;
  }
  return result;
}

uint64_t sub_2268CD970(const __CFArray *a1, const __CFString *a2, __CFArray **a3)
{
  uint64_t v3 = 4294960591;
  if (a2 && a3)
  {
    CFStringRef v5 = a2;
    CFIndex Count = CFArrayGetCount(a1);
    if (Count)
    {
      uint64_t v8 = Count;
      CFAllocatorRef v9 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
      if (Mutable)
      {
        uint64_t v16 = Mutable;
        CFStringRef v26 = 0;
        CFStringRef v27 = 0;
        if (v8 >= 1)
        {
          uint64_t v17 = 0;
          while (1)
          {
            sub_22686088C((const __CFString *)a1, (uint64_t)&v27, (UInt8 *)"[*]", v11, v12, v13, v14, v15, v17);
            if (v18) {
              goto LABEL_21;
            }
            if (!v27) {
              break;
            }
            sub_22686088C(v27, (uint64_t)&v26, (UInt8 *)"%ks", v19, v20, v21, v22, v23, (uint64_t)"macAddress");
            if (v18)
            {
LABEL_21:
              uint64_t v3 = v18;
              goto LABEL_24;
            }
            if (!v26) {
              break;
            }
            if (v5 && sub_22685BD10(v5, v26, v24, v11, v12, v13, v14, v15))
            {
              CFStringRef v5 = 0;
            }
            else
            {
              uint64_t v18 = sub_226860774(v9, v16, (uint64_t)"%O", v11, v12, v13, v14, v15, (uint64_t)v27);
              if (v18) {
                goto LABEL_21;
              }
            }
            if (v8 == ++v17) {
              goto LABEL_17;
            }
          }
          uint64_t v3 = 4294960568;
          goto LABEL_24;
        }
LABEL_17:
        if (!CFArrayGetCount(v16))
        {
          uint64_t v3 = 4294960569;
LABEL_24:
          CFRelease(v16);
          return v3;
        }
        uint64_t v3 = 0;
        *a3 = v16;
      }
      else
      {
        return 4294960568;
      }
    }
    else
    {
      return 4294960569;
    }
  }
  return v3;
}

void *sub_2268CDAF0(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &unk_268148398;
}

__CFString *sub_2268CDB3C(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = &stru_26DA6BE88;
  int v10 = &stru_26DA6BE88;
  if (a1)
  {
    sub_22686088C(a1, (uint64_t)&v10, (UInt8 *)"%ks.%ks", a4, a5, a6, a7, a8, (uint64_t)"txt");
    return v10;
  }
  return v8;
}

void sub_2268CDB94(uint64_t a1, CFArrayRef theArray, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v64 = 0;
  if (theArray)
  {
    CFIndex Count = CFArrayGetCount(theArray);
    if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"void dlog_user__BaseStationArray(const char *, CFArrayRef)", 800, (uint64_t)"%s BaseStation list count: %d\n", a5, a6, a7, a8, a1);
    }
    if (Count)
    {
      CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 8, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (Mutable)
      {
        if (Count < 1)
        {
LABEL_62:
          CFRelease(Mutable);
          return;
        }
        uint64_t v14 = 0;
        while (1)
        {
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v64, (UInt8 *)"[*].%ks", v12, a5, a6, a7, a8, v14);
          if (v20) {
            BOOL v21 = 1;
          }
          else {
            BOOL v21 = v64 == 0;
          }
          if (v21) {
            uint64_t v64 = @"<Not found>";
          }
          uint64_t v22 = sub_226860774(v11, Mutable, (uint64_t)"%ks=%O", v15, v16, v17, v18, v19, (uint64_t)"name");
          if (v22) {
            break;
          }
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v64, (UInt8 *)"[*].%ks.%kC", v23, a5, a6, a7, a8, v14);
          if (v29 || !v64) {
            uint64_t v64 = @"<Not found>";
          }
          uint64_t v22 = sub_226860774(v11, Mutable, (uint64_t)"%kC=%O", v24, v25, v26, v27, v28, 1937327724);
          if (v22) {
            break;
          }
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v64, (UInt8 *)"[*].%ks.%kC", v30, a5, a6, a7, a8, v14);
          if (v36 || !v64) {
            uint64_t v64 = @"<Not found>";
          }
          uint64_t v22 = sub_226860774(v11, Mutable, (uint64_t)"%kC=%O", v31, v32, v33, v34, v35, 1937326416);
          if (v22) {
            break;
          }
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v64, (UInt8 *)"[*].%ks.%ks", v37, a5, a6, a7, a8, v14);
          if (v43 || !v64) {
            uint64_t v64 = @"<Not found>";
          }
          uint64_t v22 = sub_226860774(v11, Mutable, (uint64_t)"%ks=%O", v38, v39, v40, v41, v42, (uint64_t)"raMA");
          if (v22) {
            break;
          }
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v64, (UInt8 *)"[*].%ks.%ks", v44, a5, a6, a7, a8, v14);
          if (v45 != -6727)
          {
            if (v45 || !v64) {
              uint64_t v64 = @"<Not found>";
            }
            uint64_t v22 = sub_226860774(v11, Mutable, (uint64_t)"%ks=%O", v46, a5, a6, a7, a8, (uint64_t)"raM2");
            if (v22) {
              break;
            }
          }
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v64, (UInt8 *)"[*].%ks.%ks", v46, a5, a6, a7, a8, v14);
          if (v52 || !v64) {
            uint64_t v64 = @"<Not found>";
          }
          uint64_t v22 = sub_226860774(v11, Mutable, (uint64_t)"%ks=%O", v47, v48, v49, v50, v51, (uint64_t)"raNm");
          if (v22) {
            break;
          }
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v64, (UInt8 *)"[*].%ks.%ks", v53, a5, a6, a7, a8, v14);
          if (v59 || !v64) {
            uint64_t v64 = @"<Not found>";
          }
          uint64_t v22 = sub_226860774(v11, Mutable, (uint64_t)"%ks=%O", v54, v55, v56, v57, v58, (uint64_t)"syVs");
          if (v22) {
            break;
          }
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v64, (UInt8 *)"[*].%ks.%ks", v60, a5, a6, a7, a8, v14);
          if (v61 != -6727)
          {
            if (v61 || !v64) {
              uint64_t v64 = @"<Not found>";
            }
            uint64_t v22 = sub_226860774(v11, Mutable, (uint64_t)"%ks=%O", v62, a5, a6, a7, a8, (uint64_t)"prob");
            if (v22) {
              break;
            }
          }
          if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"void dlog_user__BaseStationArray(const char *, CFArrayRef)", 800, (uint64_t)"\t%@", a5, a6, a7, a8, (uint64_t)Mutable);
          }
          CFDictionaryRemoveAllValues(Mutable);
          if (Count == ++v14) {
            goto LABEL_61;
          }
        }
        uint64_t v63 = v22;
      }
      else
      {
        uint64_t v63 = 4294960568;
      }
    }
    else
    {
      CFMutableDictionaryRef Mutable = 0;
      uint64_t v63 = 4294960569;
    }
  }
  else
  {
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v63 = 4294960591;
  }
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"void dlog_user__BaseStationArray(const char *, CFArrayRef)", 800, (uint64_t)"err: %d index: %d", a5, a6, a7, a8, v63);
  }
LABEL_61:
  if (Mutable) {
    goto LABEL_62;
  }
}

void sub_2268CE084(uint64_t a1, CFArrayRef theArray, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v52 = 0;
  if (theArray)
  {
    CFIndex Count = CFArrayGetCount(theArray);
    if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"void dlog_user__NetworkArray(const char *, CFArrayRef)", 800, (uint64_t)"%sNetwork list count: %d\n", a5, a6, a7, a8, a1);
    }
    if (Count)
    {
      CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 3, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (Mutable)
      {
        if (Count < 1)
        {
LABEL_50:
          CFRelease(Mutable);
          return;
        }
        uint64_t v14 = 0;
        while (1)
        {
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v52, (UInt8 *)"[*].%kO", v12, a5, a6, a7, a8, v14);
          if (v20) {
            BOOL v21 = 1;
          }
          else {
            BOOL v21 = v52 == 0;
          }
          if (v21) {
            int v52 = @"<Not found>";
          }
          uint64_t v22 = sub_226860774(v11, Mutable, (uint64_t)"%kO=%O", v15, v16, v17, v18, v19, @"SSID_STR");
          if (v22) {
            break;
          }
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v52, (UInt8 *)"[*].%kO", v23, a5, a6, a7, a8, v14);
          if (v24 == -6727) {
            sub_22686088C((const __CFString *)theArray, (uint64_t)&v52, (UInt8 *)"[*].%kO", v25, v26, v27, v28, v29, v14);
          }
          if (v24 || !v52) {
            int v52 = @"<Not found>";
          }
          uint64_t v22 = sub_226860774(v11, Mutable, (uint64_t)"%kO=%O", v25, v26, v27, v28, v29, @"BSSID");
          if (v22) {
            break;
          }
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v52, (UInt8 *)"[*].%kO", v30, a5, a6, a7, a8, v14);
          if (v36 || !v52) {
            int v52 = @"<Not found>";
          }
          uint64_t v22 = sub_226860774(v11, Mutable, (uint64_t)"%kO=%O", v31, v32, v33, v34, v35, @"CHANNEL");
          if (v22) {
            break;
          }
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v52, (UInt8 *)"[*].%kO", v37, a5, a6, a7, a8, v14);
          if (v43 || !v52) {
            int v52 = @"<Not found>";
          }
          uint64_t v22 = sub_226860774(v11, Mutable, (uint64_t)"%kO=%O", v38, v39, v40, v41, v42, @"IE");
          if (v22) {
            break;
          }
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v52, (UInt8 *)"[*].%kO", v44, a5, a6, a7, a8, v14);
          if (v50 || !v52) {
            int v52 = @"<Not found>";
          }
          uint64_t v22 = sub_226860774(v11, Mutable, (uint64_t)"%kO=%O", v45, v46, v47, v48, v49, @"APPLE_IE");
          if (v22) {
            break;
          }
          if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"void dlog_user__NetworkArray(const char *, CFArrayRef)", 800, (uint64_t)"\t%@", a5, a6, a7, a8, (uint64_t)Mutable);
          }
          CFDictionaryRemoveAllValues(Mutable);
          if (Count == ++v14) {
            goto LABEL_49;
          }
        }
        uint64_t v51 = v22;
      }
      else
      {
        uint64_t v51 = 4294960568;
      }
    }
    else
    {
      CFMutableDictionaryRef Mutable = 0;
      uint64_t v51 = 4294960569;
    }
  }
  else
  {
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v51 = 4294960591;
  }
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"void dlog_user__NetworkArray(const char *, CFArrayRef)", 800, (uint64_t)"err: %d index: %d", a5, a6, a7, a8, v51);
  }
LABEL_49:
  if (Mutable) {
    goto LABEL_50;
  }
}

void sub_2268CE438(uint64_t a1, CFDictionaryRef theDict, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  if (!theDict)
  {
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v14 = 4294960591;
    goto LABEL_13;
  }
  CFIndex Count = CFDictionaryGetCount(theDict);
  if (!Count)
  {
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v14 = 4294960569;
    goto LABEL_13;
  }
  CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], Count, MEMORY[0x263EFFF70]);
  if (!Mutable)
  {
LABEL_12:
    uint64_t v14 = 4294960568;
    goto LABEL_13;
  }
  uint64_t v13 = sub_2268623AC(theDict, &v22);
  if (!v13)
  {
    if (v22)
    {
      while (sub_22686244C((uint64_t *)v22, 0, &v21))
      {
        uint64_t v13 = sub_226860774(v11, Mutable, (uint64_t)"%O", v16, v17, v18, v19, v20, v21);
        if (v13) {
          goto LABEL_5;
        }
      }
      sub_2268CDB94(a1, Mutable, v15, v16, v17, v18, v19, v20);
      goto LABEL_18;
    }
    goto LABEL_12;
  }
LABEL_5:
  uint64_t v14 = v13;
LABEL_13:
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"void dlog_user__BaseStationDictionaryList(const char *, CFDictionaryRef)", 800, (uint64_t)"err: %d", a5, a6, a7, a8, v14);
  }
  if (Mutable) {
LABEL_18:
  }
    CFRelease(Mutable);
  if (v22) {
    sub_226862440(v22);
  }
}

void sub_2268CE5A4(uint64_t a1, CFDictionaryRef theDict, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  if (!theDict)
  {
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v14 = 4294960591;
    goto LABEL_13;
  }
  CFIndex Count = CFDictionaryGetCount(theDict);
  if (!Count)
  {
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v14 = 4294960569;
    goto LABEL_13;
  }
  CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], Count, MEMORY[0x263EFFF70]);
  if (!Mutable)
  {
LABEL_12:
    uint64_t v14 = 4294960568;
    goto LABEL_13;
  }
  uint64_t v13 = sub_2268623AC(theDict, &v22);
  if (!v13)
  {
    if (v22)
    {
      while (sub_22686244C((uint64_t *)v22, 0, &v21))
      {
        uint64_t v13 = sub_226860774(v11, Mutable, (uint64_t)"%O", v16, v17, v18, v19, v20, v21);
        if (v13) {
          goto LABEL_5;
        }
      }
      sub_2268CE084(a1, Mutable, v15, v16, v17, v18, v19, v20);
      goto LABEL_18;
    }
    goto LABEL_12;
  }
LABEL_5:
  uint64_t v14 = v13;
LABEL_13:
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"void dlog_user__NetworkDictionaryList(const char *, CFDictionaryRef)", 800, (uint64_t)"err: %d ", a5, a6, a7, a8, v14);
  }
  if (Mutable) {
LABEL_18:
  }
    CFRelease(Mutable);
  if (v22) {
    sub_226862440(v22);
  }
}

void sub_2268CE710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableDictionaryRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 1, MEMORY[0x263EFFF70]);
    if (Mutable)
    {
      uint64_t v13 = sub_226860774(v10, Mutable, (uint64_t)"%O", v11, a5, a6, a7, a8, a2);
      if (!v13)
      {
        sub_2268CDB94(a1, Mutable, v14, v15, a5, a6, a7, a8);
LABEL_14:
        CFRelease(Mutable);
        return;
      }
      uint64_t v16 = v13;
    }
    else
    {
      uint64_t v16 = 4294960568;
    }
  }
  else
  {
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v16 = 4294960591;
  }
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"void dlog_user__BaseStationDictionary(const char *, CFDictionaryRef)", 800, (uint64_t)"err: %d", a5, a6, a7, a8, v16);
  }
  if (Mutable) {
    goto LABEL_14;
  }
}

void sub_2268CE82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    CFAllocatorRef v10 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableDictionaryRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 1, MEMORY[0x263EFFF70]);
    if (Mutable)
    {
      uint64_t v13 = sub_226860774(v10, Mutable, (uint64_t)"%O", v11, a5, a6, a7, a8, a2);
      if (!v13)
      {
        sub_2268CE084(a1, Mutable, v14, v15, a5, a6, a7, a8);
LABEL_14:
        CFRelease(Mutable);
        return;
      }
      uint64_t v16 = v13;
    }
    else
    {
      uint64_t v16 = 4294960568;
    }
  }
  else
  {
    CFMutableDictionaryRef Mutable = 0;
    uint64_t v16 = 4294960591;
  }
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"void dlog_user__NetworkDictionary(const char *, CFDictionaryRef)", 800, (uint64_t)"err: %d", a5, a6, a7, a8, v16);
  }
  if (Mutable) {
    goto LABEL_14;
  }
}

uint64_t sub_2268CE948(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _BaseStationHasPPPoEAvailable(CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v12);
  }
  if (!a1) {
    return 0;
  }
  unsigned int v13 = 0;
  sub_22686088C(a1, (uint64_t)&v13, (UInt8 *)"%ks.%kC:int", a4, a5, a6, a7, a8, (uint64_t)"txt");
  int v10 = v9;
  uint64_t result = 0;
  if (!v10) {
    return (v13 >> 10) & 1;
  }
  return result;
}

uint64_t sub_2268CEA08(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _BaseStationHasDHCPLease(CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v12);
  }
  if (!a1) {
    return 0;
  }
  unsigned int v13 = 0;
  sub_22686088C(a1, (uint64_t)&v13, (UInt8 *)"%ks.%kC:int", a4, a5, a6, a7, a8, (uint64_t)"txt");
  int v10 = v9;
  uint64_t result = 0;
  if (!v10) {
    return (v13 >> 11) & 1;
  }
  return result;
}

BOOL sub_2268CEAC8(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _BaseStationIs80211g(CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v12);
  }
  if (!a1) {
    return 0;
  }
  unsigned int v9 = sub_22685AB94(a1, a2, a3, a4, a5, a6, a7, a8);
  return v9 == 3 || v9 == 102;
}

BOOL sub_2268CEB58(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _BaseStationIsTooNewToSetUp(CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v11);
  }
  if (!a1) {
    return 0;
  }
  CFStringRef v9 = sub_22685AB94(a1, a2, a3, a4, a5, a6, a7, a8);
  return sub_22690548C((BOOL)v9) == 0;
}

uint64_t sub_2268CEBE4(CFArrayRef theArray, __CFArray **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyAllUnconfiguredBaseStations(CFArrayRef, CFDictionaryRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v38);
  }
  uint64_t v10 = 4294960591;
  if (theArray && a2)
  {
    CFIndex Count = CFArrayGetCount(theArray);
    if (Count)
    {
      uint64_t v12 = Count;
      CFAllocatorRef v13 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (Mutable)
      {
        uint64_t v15 = Mutable;
        uint64_t v39 = 0;
        if (v12 >= 1)
        {
          CFIndex v16 = 0;
          while (1)
          {
            CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(theArray, v16);
            if (!ValueAtIndex)
            {
LABEL_21:
              uint64_t v10 = 4294960568;
              goto LABEL_24;
            }
            CFStringRef v25 = ValueAtIndex;
            if (sub_22685B9B4(ValueAtIndex, v18, v19, v20, v21, v22, v23, v24))
            {
              sub_22686088C(v25, (uint64_t)&v39, (UInt8 *)"%ks", v26, v27, v28, v29, v30, (uint64_t)"name");
              if (v31) {
                break;
              }
              if (!v39) {
                goto LABEL_21;
              }
              uint64_t v31 = sub_226860774(v13, v15, (uint64_t)"%kO=%O", v32, v33, v34, v35, v36, v39);
              if (v31) {
                break;
              }
            }
            if (v12 == ++v16) {
              goto LABEL_17;
            }
          }
          uint64_t v10 = v31;
          goto LABEL_24;
        }
LABEL_17:
        if (!CFDictionaryGetCount(v15))
        {
          uint64_t v10 = 4294960569;
LABEL_24:
          CFRelease(v15);
          return v10;
        }
        uint64_t v10 = 0;
        *a2 = v15;
      }
      else
      {
        return 4294960568;
      }
    }
    else
    {
      return 4294960569;
    }
  }
  return v10;
}

uint64_t sub_2268CED94(CFArrayRef theArray, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"CFIndex _ConfiguredBaseStationCount(CFArrayRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v22);
  }
  if (!theArray) {
    return 0;
  }
  CFIndex Count = CFArrayGetCount(theArray);
  if (Count < 1) {
    return 0;
  }
  CFIndex v10 = Count;
  uint64_t v11 = 0;
  for (CFIndex i = 0; i != v10; ++i)
  {
    CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(theArray, i);
    if (!ValueAtIndex) {
      break;
    }
    if (!sub_22685B9B4(ValueAtIndex, v14, v15, v16, v17, v18, v19, v20)) {
      ++v11;
    }
  }
  return v11;
}

uint64_t sub_2268CEE5C(const __CFString *a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _BaseStationHasPreviousConfig(CFDictionaryRef, CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v26);
  }
  uint64_t v10 = 0;
  uint64_t v27 = 0;
  if (a1 && a2)
  {
    CFStringRef v29 = 0;
    CFStringRef v30 = 0;
    CFStringRef v28 = 0;
    int v16 = sub_2268623AC(a2, &v27);
    uint64_t v10 = 0;
    uint64_t v17 = v27;
    if (!v16 && v27)
    {
      CFStringRef v29 = 0;
      sub_22686088C(a1, (uint64_t)&v30, (UInt8 *)"%ks", v11, v12, v13, v14, v15, (uint64_t)"raMA");
      uint64_t v10 = 0;
      if (!v18)
      {
        if (v30)
        {
          if (!CFDictionaryContainsKey((CFDictionaryRef)a1, @"raM2")
            || (sub_22686088C(a1, (uint64_t)&v29, (UInt8 *)"%ks", v19, v20, v21, v22, v23, (uint64_t)"raM2"),
                uint64_t v10 = 0,
                !v24)
            && v29)
          {
            while (sub_22686244C((uint64_t *)v27, &v28, 0))
            {
              if ((sub_2268A1408(v30, v28) & 1) != 0
                || v29 && (sub_2268A1408(v29, v28) & 1) != 0)
              {
                uint64_t v10 = 1;
                goto LABEL_20;
              }
            }
            uint64_t v10 = 0;
          }
        }
      }
LABEL_20:
      uint64_t v17 = v27;
    }
    if (v17) {
      sub_226862440(v17);
    }
  }
  return v10;
}

uint64_t sub_2268CEFE0(const __CFString *a1, const void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _GetConfigFilePathForBaseStation(CFDictionaryRef, CFDictionaryRef, CFStringRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v31);
  }
  CFStringRef v37 = 0;
  CFStringRef v35 = 0;
  CFStringRef v36 = 0;
  uint64_t v33 = 0;
  CFStringRef v34 = 0;
  uint64_t v32 = 0;
  uint64_t v11 = 4294960591;
  if (a1)
  {
    if (a2)
    {
      if (a3)
      {
        uint64_t v11 = sub_2268623AC(a2, &v33);
        if (!v11)
        {
          if (!v33) {
            return 4294960568;
          }
          CFStringRef v36 = 0;
          uint64_t v32 = 0;
          sub_22686088C(a1, (uint64_t)&v37, (UInt8 *)"%ks", v12, v13, v14, v15, v16, (uint64_t)"raMA");
          uint64_t v11 = v18;
          if (!v18)
          {
            if (v37)
            {
              if (!CFDictionaryContainsKey((CFDictionaryRef)a1, @"raM2")
                || (sub_22686088C(a1, (uint64_t)&v36, (UInt8 *)"%ks", v19, v20, v21, v22, v23, (uint64_t)"raM2"),
                    uint64_t v11 = v24,
                    !v24)
                && v36)
              {
                uint64_t v11 = 4294960569;
                if (sub_22686244C((uint64_t *)v33, &v35, &v34))
                {
                  while ((sub_2268A1408(v37, v35) & 1) == 0
                       && (!v36 || !sub_2268A1408(v36, v35)))
                  {
                    if (!sub_22686244C((uint64_t *)v33, &v35, &v34)) {
                      goto LABEL_9;
                    }
                  }
                  sub_22686088C(v34, (uint64_t)&v32, (UInt8 *)"%ks", v25, v26, v27, v28, v29, (uint64_t)"path");
                  uint64_t v11 = v30;
                  if (!v30)
                  {
                    if (v32)
                    {
                      uint64_t v11 = 0;
                      *a3 = v32;
                    }
                    else
                    {
                      uint64_t v11 = 4294960568;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_9:
  if (v33) {
    sub_226862440(v33);
  }
  return v11;
}

BOOL sub_2268CF1CC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _NetworkIs80211g(CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v12);
  }
  if (!a1) {
    return 0;
  }
  int v9 = sub_2269017F8(a1, a2);
  return v9 == 3 || v9 == 102;
}

uint64_t sub_2268CF25C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _NetworkIsTooNewToSetUp(CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v10);
  }
  if (!a1) {
    return 0;
  }
  uint64_t result = sub_2269017F8(a1, a2);
  if (result) {
    return sub_22690548C(result) == 0;
  }
  return result;
}

uint64_t sub_2268CF2EC(CFArrayRef theArray, __CFArray **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyAllUnconfiguredNetworks(CFArrayRef, CFDictionaryRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v32);
  }
  if (!a2) {
    return 4294960591;
  }
  if (!theArray) {
    return 4294960569;
  }
  CFIndex Count = CFArrayGetCount(theArray);
  if (!Count) {
    return 4294960569;
  }
  uint64_t v11 = Count;
  CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
  if (!Mutable) {
    return 4294960568;
  }
  uint64_t v14 = Mutable;
  uint64_t v33 = 0;
  if (v11 >= 1)
  {
    CFIndex v15 = 0;
    while (1)
    {
      CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(theArray, v15);
      if (!ValueAtIndex)
      {
LABEL_22:
        uint64_t v30 = 4294960568;
        goto LABEL_25;
      }
      CFStringRef v18 = ValueAtIndex;
      if (sub_22690177C((uint64_t)ValueAtIndex, v17))
      {
        sub_22686088C(v18, (uint64_t)&v33, (UInt8 *)"%kO", v19, v20, v21, v22, v23, @"SSID_STR");
        if (v24) {
          break;
        }
        if (!v33) {
          goto LABEL_22;
        }
        uint64_t v24 = sub_226860774(v12, v14, (uint64_t)"%kO=%O", v25, v26, v27, v28, v29, v33);
        if (v24) {
          break;
        }
      }
      if (v11 == ++v15) {
        goto LABEL_17;
      }
    }
    uint64_t v30 = v24;
    goto LABEL_25;
  }
LABEL_17:
  if (!CFDictionaryGetCount(v14))
  {
    uint64_t v30 = 4294960569;
LABEL_25:
    CFRelease(v14);
    return v30;
  }
  uint64_t v30 = 0;
  *a2 = v14;
  return v30;
}

uint64_t sub_2268CF4A0(const void *a1, __CFDictionary **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyNetworksFilter80211g(CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v21);
  }
  uint64_t v24 = 0;
  uint64_t v10 = 4294960591;
  if (a1 && a2)
  {
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v10 = sub_2268623AC(a1, &v24);
    if (!v10)
    {
      if (!v24) {
        return 4294960568;
      }
      CFMutableDictionaryRef Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
      if (Mutable)
      {
        CFAllocatorRef v12 = Mutable;
        while (sub_22686244C((uint64_t *)v24, &v23, &v22))
        {
          if (!sub_2268CF1CC((uint64_t)v22, v13, v14, v15, v16, v17, v18, v19)) {
            CFDictionarySetValue(v12, v23, v22);
          }
        }
        if (CFDictionaryGetCount(v12))
        {
          uint64_t v10 = 0;
          *a2 = v12;
        }
        else
        {
          CFRelease(v12);
          uint64_t v10 = 4294960569;
        }
      }
      else
      {
        uint64_t v10 = 4294960568;
      }
    }
    if (v24) {
      sub_226862440(v24);
    }
  }
  return v10;
}

uint64_t sub_2268CF5F4(CFArrayRef theArray, __CFArray **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyNetworksFilterDuplicateNames(CFArrayRef, CFArrayRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v28);
  }
  if (!a2) {
    return 4294960591;
  }
  if (!theArray) {
    return 4294960569;
  }
  CFIndex Count = CFArrayGetCount(theArray);
  if (!Count) {
    return 4294960569;
  }
  uint64_t v11 = Count;
  CFAllocatorRef v12 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  if (!Mutable) {
    return 4294960568;
  }
  uint64_t v14 = Mutable;
  if (v11 >= 1)
  {
    CFIndex v15 = 0;
    while (1)
    {
      CFStringRef ValueAtIndex = CFArrayGetValueAtIndex(theArray, v15);
      if (!ValueAtIndex)
      {
        uint64_t v26 = 4294960568;
        goto LABEL_25;
      }
      uint64_t v18 = (uint64_t)ValueAtIndex;
      CFStringRef v19 = (const __CFString *)sub_2269016D4((uint64_t)ValueAtIndex, v17);
      if (v19)
      {
        if (sub_22685BFE8(v19, 0, v14) == -1)
        {
          uint64_t v25 = sub_226860774(v12, v14, (uint64_t)"%O", v20, v21, v22, v23, v24, v18);
          if (v25) {
            break;
          }
        }
      }
      if (v11 == ++v15) {
        goto LABEL_16;
      }
    }
    uint64_t v26 = v25;
    goto LABEL_25;
  }
LABEL_16:
  if (!CFArrayGetCount(v14))
  {
    uint64_t v26 = 4294960569;
LABEL_25:
    CFRelease(v14);
    return v26;
  }
  uint64_t v26 = 0;
  *a2 = v14;
  return v26;
}

uint64_t sub_2268CF77C(CFArrayRef theArray, const __CFDictionary *a2, CFTypeRef *a3)
{
  CFTypeRef cf = 0;
  if (!a2) {
    return 4294960591;
  }
  if (theArray)
  {
    if (CFArrayGetCount(theArray))
    {
      if (sub_22685AAD0((uint64_t)a2) - 3 <= 1 && !sub_22685AB38(a2))
      {
        sub_226901808((uint64_t)a2, v6);
        sub_22690182C((uint64_t)a2, v7);
      }
      CFArrayRef v9 = (const __CFArray *)sub_226901874((uint64_t)theArray);
      if (v9)
      {
        CFArrayRef v10 = v9;
        if (CFArrayGetCount(v9))
        {
          uint64_t v8 = sub_2268CF5F4(v10, (__CFArray **)&cf, v11, v12, v13, v14, v15, v16);
          CFRelease(v10);
          if (!v8)
          {
            CFTypeRef v17 = cf;
            if (!cf) {
              return 4294960568;
            }
            uint64_t v8 = 0;
            if (a3)
            {
              *a3 = cf;
              return v8;
            }
LABEL_18:
            CFRelease(v17);
            return v8;
          }
LABEL_17:
          CFTypeRef v17 = cf;
          if (!cf) {
            return v8;
          }
          goto LABEL_18;
        }
        CFRelease(v10);
      }
    }
    uint64_t v8 = 4294960569;
    goto LABEL_17;
  }
  return 4294960569;
}

BOOL sub_2268CF8A4(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _HostNotUsingWireless(CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v10);
  }
  char v11 = 0;
  sub_22686088C(a1, (uint64_t)&v11, (UInt8 *)"%ks:BOOL", a4, a5, a6, a7, a8, (uint64_t)"BSAutoGuessContext_HostNotUsingWireless");
  return v11 != 0;
}

BOOL sub_2268CF948(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _HostHasPreferredNetworkSupport(CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v10);
  }
  char v11 = 0;
  sub_22686088C(a1, (uint64_t)&v11, (UInt8 *)"%ks:BOOL", a4, a5, a6, a7, a8, (uint64_t)"BSAutoGuessContext_HostHasPreferredNetworkSupport");
  return v11 != 0;
}

uint64_t sub_2268CF9EC(CFDictionaryRef theDict, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _GetTheOnlyDictionaryKey(CFDictionaryRef, CFStringRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v12);
  }
  uint64_t v13 = 0;
  uint64_t v10 = 4294960591;
  if (theDict && a2)
  {
    uint64_t v12 = 0;
    if (CFDictionaryGetCount(theDict) == 1)
    {
      uint64_t v10 = sub_2268623AC(theDict, &v13);
      if (!v10)
      {
        if (!v13) {
          return 4294960568;
        }
        sub_22686244C((uint64_t *)v13, &v12, 0);
        if (v12)
        {
          uint64_t v10 = 0;
          *a2 = v12;
        }
        else
        {
          uint64_t v10 = 4294960569;
        }
      }
    }
    else
    {
      uint64_t v10 = 4294960586;
    }
    if (v13) {
      sub_226862440(v13);
    }
  }
  return v10;
}

uint64_t sub_2268CFAF0(CFDictionaryRef theDict, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _GetTheOnlyDictionaryValue(CFDictionaryRef, CFTypeRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v12);
  }
  uint64_t v13 = 0;
  uint64_t v10 = 4294960591;
  if (theDict && a2)
  {
    uint64_t v12 = 0;
    if (CFDictionaryGetCount(theDict) == 1)
    {
      uint64_t v10 = sub_2268623AC(theDict, &v13);
      if (!v10)
      {
        if (!v13) {
          return 4294960568;
        }
        sub_22686244C((uint64_t *)v13, 0, &v12);
        if (v12)
        {
          uint64_t v10 = 0;
          *a2 = v12;
        }
        else
        {
          uint64_t v10 = 4294960569;
        }
      }
    }
    else
    {
      uint64_t v10 = 4294960586;
    }
    if (v13) {
      sub_226862440(v13);
    }
  }
  return v10;
}

void sub_2268CFBF4(const __CFString *a1, const __CFArray *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _UpdateBrowsedBaseStationsWithBrowseInfo(CFDictionaryRef, CFMutableArrayRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v26);
  }
  if (a1)
  {
    if (a2)
    {
      CFStringRef v27 = 0;
      CFStringRef v28 = 0;
      sub_22686088C(a1, (uint64_t)&v28, (UInt8 *)"%ks", a4, a5, a6, a7, a8, (uint64_t)"raMA");
      if (!v10)
      {
        if (v28)
        {
          CFIndex Count = CFArrayGetCount(a2);
          if (Count < 1)
          {
LABEL_19:
            if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _UpdateBrowsedBaseStationsWithBrowseInfo(CFDictionaryRef, CFMutableArrayRef)", 800, (uint64_t)"tempMACAddress: %@ was not found -- appending", v13, v14, v15, v16, (uint64_t)v28);
            }
            CFArrayAppendValue(a2, a1);
          }
          else
          {
            CFIndex v17 = Count;
            uint64_t v18 = 0;
            while (1)
            {
              sub_22686088C((const __CFString *)a2, (uint64_t)&v27, (UInt8 *)"[*].%ks", v12, v13, v14, v15, v16, v18);
              if (v23) {
                break;
              }
              CFStringRef v24 = v27;
              if (!v27) {
                break;
              }
              if (dword_268147A98 <= 800)
              {
                if (dword_268147A98 != -1 || (v25 = sub_226865630((uint64_t)&dword_268147A98, 0x320u), CFStringRef v24 = v27, v25))
                {
                  sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _UpdateBrowsedBaseStationsWithBrowseInfo(CFDictionaryRef, CFMutableArrayRef)", 800, (uint64_t)"Comparing nextMACAddress: %@ and tempMACAddress: %@", v19, v20, v21, v22, (uint64_t)v24);
                  CFStringRef v24 = v27;
                }
              }
              if (sub_2268A1408(v24, v28))
              {
                if (dword_268147A98 <= 800
                  && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u)))
                {
                  sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _UpdateBrowsedBaseStationsWithBrowseInfo(CFDictionaryRef, CFMutableArrayRef)", 800, (uint64_t)"tempMACAddress: %@ was found", v13, v14, v15, v16, (uint64_t)v28);
                }
                return;
              }
              if (v17 == ++v18) {
                goto LABEL_19;
              }
            }
          }
        }
      }
    }
  }
}

void sub_2268CFE40(CFArrayRef theArray, const __CFArray *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _UpdateBrowsedBaseStationsWithRecords(CFArrayRef, CFMutableArrayRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v26);
  }
  if (theArray)
  {
    if (a2)
    {
      CFIndex Count = CFArrayGetCount(theArray);
      if (Count >= 1)
      {
        CFIndex v16 = Count;
        uint64_t v17 = 0;
        CFStringRef v27 = 0;
        do
        {
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v27, (UInt8 *)"[*]", v11, v12, v13, v14, v15, v17);
          if (v24) {
            break;
          }
          if (!v27) {
            break;
          }
          sub_2268CFBF4(v27, a2, v18, v19, v20, v21, v22, v23);
          if (v25) {
            break;
          }
          ++v17;
        }
        while (v16 != v17);
      }
    }
  }
}

void sub_2268CFF3C(__CFArray *a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    if (a2)
    {
      *(void *)CFIndex v16 = 0;
      sub_22686088C(a2, (uint64_t)v16, (UInt8 *)"%kO", a4, a5, a6, a7, a8, @"SSID_STR");
      if (!v10)
      {
        if (*(void *)v16)
        {
          if (sub_22685BFE8(*(const __CFString **)v16, 0, a1) == -1) {
            sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], a1, (uint64_t)"%O", v11, v12, v13, v14, v15, (uint64_t)a2);
          }
        }
      }
    }
  }
}

uint64_t sub_2268CFFE8(const __CFString *a1, const __CFArray *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _GetLocalBrowseInfoForRemoteBase(CFDictionaryRef, CFArrayRef, CFDictionaryRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v16);
  }
  uint64_t v11 = 4294960591;
  if (a1)
  {
    if (a2)
    {
      if (a3)
      {
        CFStringRef v17 = 0;
        sub_22686088C(a1, (uint64_t)&v17, (UInt8 *)"%ks.%ks", a4, a5, a6, a7, a8, (uint64_t)"txt");
        uint64_t v11 = v12;
        if (!v12)
        {
          if (v17)
          {
            CFIndex v14 = sub_22685BC94(a2, v17);
            uint64_t v11 = 4294960569;
            if (v14 != -1)
            {
              CFStringRef ValueAtIndex = CFArrayGetValueAtIndex(a2, v14);
              *a3 = ValueAtIndex;
              if (ValueAtIndex) {
                return 0;
              }
              else {
                return 4294960569;
              }
            }
          }
          else
          {
            return 4294960568;
          }
        }
      }
    }
  }
  return v11;
}

uint64_t sub_2268D00F4(CFDictionaryRef theDict, CFTypeRef *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CreateBrowseInfoForRemoteBase(CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v16);
  }
  uint64_t result = 4294960591;
  if (theDict && a2)
  {
    if (CFDictionaryGetValue(theDict, @"txt"))
    {
      uint64_t result = sub_22685FC7C((const __CFAllocator *)*MEMORY[0x263EFFB08], a2, (uint64_t)"{%##O%##O}", v11, v12, v13, v14, v15, (uint64_t)theDict);
      if (!result)
      {
        if (*a2) {
          return 0;
        }
        else {
          return 4294960568;
        }
      }
    }
    else
    {
      return 4294960591;
    }
  }
  return result;
}

uint64_t sub_2268D01CC(const void *a1, __CFArray **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _RemoteBrowseResultsToBaseStationArray(CFDictionaryRef, CFArrayRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v27);
  }
  uint64_t v30 = 0;
  uint64_t v10 = 4294960591;
  if (a1 && a2)
  {
    CFTypeRef cf = 0;
    CFDictionaryRef theDict = 0;
    CFAllocatorRef v11 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
    if (Mutable)
    {
      uint64_t v13 = Mutable;
      uint64_t v10 = sub_2268623AC(a1, &v30);
      if (!v10)
      {
        if (v30)
        {
          while (1)
          {
            if (!sub_22686244C((uint64_t *)v30, 0, &theDict))
            {
              uint64_t v10 = 0;
              *a2 = v13;
              goto LABEL_22;
            }
            uint64_t v20 = sub_2268D00F4(theDict, &cf, v14, v15, v16, v17, v18, v19);
            if (v20) {
              break;
            }
            if (!cf) {
              goto LABEL_18;
            }
            uint64_t v10 = sub_226860774(v11, v13, (uint64_t)"%O", v21, v22, v23, v24, v25, (uint64_t)cf);
            if (cf)
            {
              CFRelease(cf);
              CFTypeRef cf = 0;
            }
            if (v10) {
              goto LABEL_21;
            }
          }
          uint64_t v10 = v20;
        }
        else
        {
LABEL_18:
          uint64_t v10 = 4294960568;
        }
      }
LABEL_21:
      CFRelease(v13);
    }
    else
    {
      uint64_t v10 = 4294960568;
    }
LABEL_22:
    if (v30) {
      sub_226862440(v30);
    }
  }
  return v10;
}

uint64_t sub_2268D0348(uint64_t a1, const __CFDictionary *a2, uint64_t a3, unsigned char *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v10 = a3;
  int v52 = 0;
  CFTypeRef cf = 0;
  if (a4) {
    *a4 = 0;
  }
  CFMutableDictionaryRef v50 = 0;
  CFTypeRef v51 = 0;
  sub_2268CE710((uint64_t)"_CopyAllNeededSettingsFromBaseStation for base:\n", (uint64_t)a2, a3, (uint64_t)a4, (uint64_t)a5, a6, a7, a8);
  uint64_t v13 = 4294960591;
  if (!a1 || !a2 || !a5) {
    goto LABEL_8;
  }
  if (sub_22685AC18(a2)) {
    goto LABEL_7;
  }
  unsigned int v22 = sub_22685B9B4((const __CFString *)a2, v14, v15, v16, v17, v18, v19, v20);
  if (!(sub_2268CEAC8((const __CFString *)a2, v23, v24, v25, v26, v27, v28, v29) | v22))
  {
    uint64_t v13 = sub_2268A0AD0((unsigned int *)"AMarAMalAMawiFiWANarSDarVCawforPgBhdnEhdRLysPIawPIalVStnLCAtFAnslFesRSarFbsuSYHPWPyslFystSysgIys", (__CFArray **)&cf);
    if (v13) {
      goto LABEL_8;
    }
    if (!cf)
    {
      uint64_t v13 = 4294960568;
      goto LABEL_10;
    }
  }
  uint64_t v13 = sub_2268A243C((uint64_t)&v52);
  if (v13) {
    goto LABEL_8;
  }
  if (!v52) {
    goto LABEL_39;
  }
  CFStringRef v37 = sub_22685B6F8((const __CFString *)a2, v30, v31, v32, v33, v34, v35, v36);
  if (!v37)
  {
LABEL_7:
    uint64_t v13 = 4294960569;
    goto LABEL_8;
  }
  if (!v22)
  {
    uint64_t v43 = (uint64_t)v37;
    if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyAllNeededSettingsFromBaseStation(AutoGuessContextRef, CFDictionaryRef, Boolean, Boolean *, CFDictionaryRef *)", 800, (uint64_t)"Calling back for password promptflag: %d\n", v38, v39, v40, v41, v10);
    }
    uint64_t v44 = sub_2268DE568(*(void *)(a1 + 48), @"keychainBaseStationType", (const __CFString *)a2, &v51, v38, v39, v40, v41);
    uint64_t v13 = v44;
    if (v10 && v44 == -6727) {
      uint64_t v13 = sub_2268DE938(*(void *)(a1 + 48), @"keychainBaseStationType", v43, &v51, v45, v46, v47, v48);
    }
    if (v13) {
      goto LABEL_8;
    }
    if (v51)
    {
      sub_2268A5444((uint64_t)v52, 1651721296, (const __CFString *)v51);
      if (v51)
      {
        CFRelease(v51);
        CFTypeRef v51 = 0;
      }
      goto LABEL_18;
    }
LABEL_39:
    uint64_t v13 = 4294960568;
    goto LABEL_8;
  }
LABEL_18:
  int v42 = sub_2268A2AE0((uint64_t)v52, (const __CFArray *)cf, 1);
  if (a4 && v42 == -6768)
  {
    *a4 = 1;
    goto LABEL_7;
  }
  if (v42) {
    goto LABEL_7;
  }
  uint64_t v13 = sub_2268A58BC((uint64_t)v52, &v50);
  if (!v13)
  {
    if (v50)
    {
      uint64_t v13 = 0;
      *a5 = v50;
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_8:
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
LABEL_10:
  if (v52) {
    sub_2268A238C(v52);
  }
  return v13;
}

uint64_t sub_2268D05AC(uint64_t a1, const __CFDictionary *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFTypeRef cf = 0;
  unsigned __int8 v14 = 0;
  if (a1)
  {
    if (a2)
    {
      sub_2268CE710((uint64_t)"_IsSecurityErrorWithBase for base:\n", (uint64_t)a2, a3, a4, a5, a6, a7, a8);
      sub_2268D0348(a1, a2, 0, &v14, &cf, v10, v11, v12);
      if (cf) {
        CFRelease(cf);
      }
    }
  }
  return v14;
}

uint64_t sub_2268D0620(uint64_t a1, const __CFString *a2, uint64_t a3, CFTypeRef *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFTypeRef cf = 0;
  if (!a1) {
    return 4294960591;
  }
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  uint64_t v9 = 4294960591;
  if (!a4) {
    goto LABEL_32;
  }
  if (!a2) {
    goto LABEL_32;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_32;
  }
  sub_2268CE710((uint64_t)"Get cached settings for base station:\n", (uint64_t)a2, a3, (uint64_t)a4, a5, a6, a7, a8);
  sub_22686088C(a2, (uint64_t)&v61, (UInt8 *)"%ks", v13, v14, v15, v16, v17, (uint64_t)"raMA");
  uint64_t v9 = v18;
  if (v18) {
    goto LABEL_32;
  }
  if (!v61) {
    goto LABEL_31;
  }
  uint64_t v60 = 0;
  if (CFDictionaryContainsKey((CFDictionaryRef)a2, @"raM2"))
  {
    sub_22686088C(a2, (uint64_t)&v60, (UInt8 *)"%ks", v19, v20, v21, v22, v23, (uint64_t)"raM2");
    uint64_t v9 = v24;
    if (v24) {
      goto LABEL_32;
    }
    uint64_t v25 = v60;
    if (!v60) {
      goto LABEL_31;
    }
    if (dword_268147A98 <= 800)
    {
      if (dword_268147A98 != -1)
      {
LABEL_14:
        sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyCachedSettingsForBaseStation(AutoGuessContextRef, CFDictionaryRef, Boolean, CFDictionaryRef *)", 800, (uint64_t)"inBaseStation has Radio MAC Address 2: %@", v20, v21, v22, v23, v25);
        goto LABEL_15;
      }
      if (sub_226865630((uint64_t)&dword_268147A98, 0x320u))
      {
        uint64_t v25 = v60;
        goto LABEL_14;
      }
    }
  }
LABEL_15:
  sub_22686088C(*(const __CFString **)(a1 + 16), (uint64_t)&cf, (UInt8 *)"%kO:obj", v19, v20, v21, v22, v23, v61);
  uint64_t v9 = v31;
  if (v31 == -6727 && v60)
  {
    sub_22686088C(*(const __CFString **)(a1 + 16), (uint64_t)&cf, (UInt8 *)"%kO:obj", v26, v27, v28, v29, v30, v60);
    uint64_t v9 = v32;
  }
  if (!v9) {
    goto LABEL_41;
  }
  if (v9 != -6727) {
    goto LABEL_32;
  }
  uint64_t v33 = sub_2268D0348(a1, (const __CFDictionary *)a2, a3, 0, &cf, v28, v29, v30);
  if (v33 == -6727)
  {
    CFAllocatorRef v50 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
    CFTypeRef cf = CFDictionaryCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, 0, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (!cf) {
      return 4294960568;
    }
    uint64_t v9 = sub_226860774(v50, *(__CFArray **)(a1 + 16), (uint64_t)"%kO=%O", v51, v52, v53, v54, v55, v61);
    if (v9) {
      goto LABEL_32;
    }
    if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyCachedSettingsForBaseStation(AutoGuessContextRef, CFDictionaryRef, Boolean, CFDictionaryRef *)", 800, (uint64_t)"Added BLANK settings for %@ to cache.\n", v56, v57, v58, v59, v61);
    }
LABEL_41:
    if (cf)
    {
      if (CFDictionaryGetCount((CFDictionaryRef)cf))
      {
        uint64_t v9 = 0;
        *a4 = cf;
        return v9;
      }
      uint64_t v9 = 4294960569;
      goto LABEL_32;
    }
    return 4294960568;
  }
  uint64_t v9 = v33;
  if (v33) {
    goto LABEL_32;
  }
  if (!cf) {
    return 4294960568;
  }
  sub_22686088C((const __CFString *)cf, (uint64_t)&v61, (UInt8 *)"%kC", v34, v35, v36, v37, v38, 1918979393);
  uint64_t v9 = v44;
  if (v44) {
    goto LABEL_32;
  }
  if (!v61)
  {
LABEL_31:
    uint64_t v9 = 4294960568;
    goto LABEL_32;
  }
  uint64_t v9 = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], *(__CFArray **)(a1 + 16), (uint64_t)"%kO=%O", v39, v40, v41, v42, v43, v61);
  if (!v9)
  {
    if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyCachedSettingsForBaseStation(AutoGuessContextRef, CFDictionaryRef, Boolean, CFDictionaryRef *)", 800, (uint64_t)"Added settings for %@ to cache.\n", v45, v46, v47, v48, v61);
    }
    goto LABEL_41;
  }
LABEL_32:
  if (cf) {
    CFRelease(cf);
  }
  return v9;
}

void sub_2268D0994(const __CFString *a1, int *a2, CFTypeRef *a3, BOOL *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _NetworkInfoFromSettingsDictionary(CFDictionaryRef, BSNetworkMode *, CFStringRef *, Boolean *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v16);
  }
  if (a1)
  {
    if (a2)
    {
      CFStringRef v17 = 0;
      sub_22686088C(a1, (uint64_t)&v17, (UInt8 *)"%kC", (uint64_t)a4, a5, a6, a7, a8, 1466517097);
      if (!v15)
      {
        if (v17) {
          sub_2268E0DC0(v17, a2, a3, a4, 0, v12, v13, v14);
        }
      }
    }
  }
}

uint64_t sub_2268D0A70(uint64_t a1, int *a2, CFTypeRef *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFNumberRef number = 0;
  CFTypeRef cf = 0;
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _NetworkAndRouterInfoFromInstance(BSRef, BSNetworkMode *, CFStringRef *, BSRouterMode *)", 800, (uint64_t)"\n", a5, a6, a7, a8, (uint64_t)number);
  }
  uint64_t v12 = 4294960591;
  if (a1)
  {
    if (a2)
    {
      uint64_t v12 = sub_2268A55B8(a1, 1466517097, (CFMutableDictionaryRef *)&cf);
      if (!v12)
      {
        if (!a4)
        {
LABEL_12:
          sub_2268E0DC0((const __CFString *)cf, a2, a3, 0, 0, v13, v14, v15);
          uint64_t v12 = v16;
          goto LABEL_13;
        }
        uint64_t v12 = sub_2268A55B8(a1, 1651724877, &number);
        if (v12) {
          goto LABEL_13;
        }
        if (number)
        {
          if (CFNumberGetValue(number, kCFNumberSInt32Type, a4)) {
            goto LABEL_12;
          }
          uint64_t v12 = 4294960553;
        }
        else
        {
          uint64_t v12 = 4294960568;
        }
      }
    }
  }
LABEL_13:
  if (cf)
  {
    CFRelease(cf);
    CFTypeRef cf = 0;
  }
  if (number) {
    CFRelease(number);
  }
  return v12;
}

uint64_t sub_2268D0BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _ConflictingDHCPRange(BSRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v12);
  }
  CFTypeRef cf = 0;
  if (a1
    && !sub_2268A6454(a1, 2002864464)
    && sub_22689FD64(a1, 1684554343, (__CFString **)&cf))
  {
    uint64_t v9 = sub_22689FD64(a1, 1684555118, (__CFString **)&cf) ^ 1;
  }
  else
  {
    uint64_t v9 = 1;
  }
  CFTypeRef v10 = cf;
  if (cf && dword_268147A98 <= 800)
  {
    if (dword_268147A98 == -1)
    {
      if (!sub_226865630((uint64_t)&dword_268147A98, 0x320u))
      {
LABEL_16:
        CFTypeRef v10 = cf;
        goto LABEL_17;
      }
      CFTypeRef v10 = cf;
    }
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _ConflictingDHCPRange(BSRef)", 800, (uint64_t)"errorString: %@\n", a5, a6, a7, a8, (uint64_t)v10);
    goto LABEL_16;
  }
LABEL_17:
  if (v10) {
    CFRelease(v10);
  }
  return v9;
}

uint64_t sub_2268D0CEC(uint64_t a1, const __CFString *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFTypeRef cf = 0;
  CFDataRef theData = 0;
  uint64_t v8 = 4294960591;
  if (a1)
  {
    if (a2)
    {
      if (a4)
      {
        int v11 = a3;
        sub_2268CE710((uint64_t)"_BaseStationCountOfPortsInUse for base station:\n", (uint64_t)a2, a3, (uint64_t)a4, a5, a6, a7, a8);
        uint64_t v8 = sub_2268D0620(a1, a2, 0, &cf, v13, v14, v15, v16);
        if (!v8)
        {
          if (!cf) {
            return 4294960568;
          }
          sub_22686088C((const __CFString *)cf, (uint64_t)&theData, (UInt8 *)"%kC", v17, v18, v19, v20, v21, 1346918739);
          uint64_t v8 = v23;
          if (!v23)
          {
            if (theData && (BytePtr = CFDataGetBytePtr(theData)) != 0)
            {
              uint64_t v25 = BytePtr;
              unint64_t v26 = v11 != 0;
              unint64_t Length = CFDataGetLength(theData);
              uint64_t v32 = 0;
              uint64_t v33 = (Length >> 2) - v26;
              if (Length >> 2 > v26)
              {
                uint64_t v34 = &v25[4 * v26];
                do
                {
                  int v35 = *(_DWORD *)v34;
                  v34 += 4;
                  if (v35) {
                    ++v32;
                  }
                  --v33;
                }
                while (v33);
              }
              if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
                sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _BaseStationCountOfPortsInUse(AutoGuessContextRef, CFDictionaryRef, eWhichPorts, CFIndex *)", 800, (uint64_t)"portsInUseCountIs: %d", v28, v29, v30, v31, v32);
              }
              uint64_t v8 = 0;
              *a4 = v32;
            }
            else
            {
              uint64_t v8 = 4294960568;
            }
          }
        }
      }
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  return v8;
}

uint64_t sub_2268D0E64(uint64_t a1, const __CFString *a2, int a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _BaseStationHasFeature(AutoGuessContextRef, CFDictionaryRef, ACPFeatureCode, Boolean *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v20);
  }
  CFDataRef theData = 0;
  CFTypeRef cf = 0;
  uint64_t v12 = 4294960591;
  if (a1)
  {
    if (a2)
    {
      if (a4)
      {
        uint64_t v12 = sub_2268D0620(a1, a2, 0, &cf, a5, a6, a7, a8);
        if (!v12)
        {
          if (!cf) {
            return 4294960568;
          }
          sub_22686088C((const __CFString *)cf, (uint64_t)&theData, (UInt8 *)"%kC", v13, v14, v15, v16, v17, 1717920116);
          uint64_t v12 = v19;
          if (!v19)
          {
            if (theData)
            {
              uint64_t v12 = 0;
              *a4 = sub_2268E1098(theData, a3);
            }
            else
            {
              uint64_t v12 = 4294960568;
            }
          }
        }
      }
    }
  }
  if (cf) {
    CFRelease(cf);
  }
  return v12;
}

uint64_t sub_2268D0F8C(uint64_t a1, CFDictionaryRef theDict, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _BaseStationIsSimultaneousDualBand(AutoGuessContextRef, CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v11);
  }
  uint64_t result = 0;
  if (a1 && theDict)
  {
    uint64_t result = CFDictionaryContainsKey(theDict, @"raMA");
    if (result) {
      return CFDictionaryContainsKey(theDict, @"raM2") != 0;
    }
  }
  return result;
}

uint64_t sub_2268D1034(uint64_t a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _BaseStationIsAudioPortInUse(AutoGuessContextRef, CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v13);
  }
  uint64_t result = 0;
  if (a1 && a2)
  {
    int v14 = 0;
    sub_22686088C(a2, (uint64_t)&v14, (UInt8 *)"%ks.%kC:int", a4, a5, a6, a7, a8, (uint64_t)"txt");
    int v12 = v11;
    uint64_t result = 0;
    if (!v12) {
      return v14 >> 7;
    }
  }
  return result;
}

uint64_t sub_2268D10F8(uint64_t a1, const __CFString *a2, const __CFString *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFDataRef theData = 0;
  CFStringRef v61 = 0;
  int v59 = 0;
  CFStringRef v58 = 0;
  int v57 = 0;
  CFStringRef v62 = 0;
  CFStringRef v63 = 0;
  int v14 = sub_2268D0620(a1, a2, 0, (CFTypeRef *)&v63, a5, a6, a7, a8);
  CFStringRef v15 = v63;
  unsigned __int8 v16 = 1;
  if (!v14 && v63)
  {
    if (sub_2268D0620(a1, a3, 0, (CFTypeRef *)&v62, v10, v11, v12, v13)) {
      goto LABEL_8;
    }
    if (!v62) {
      goto LABEL_8;
    }
    sub_22686088C(v63, (uint64_t)&theData, (UInt8 *)"%kC", v17, v18, v19, v20, v21, 1717920116);
    if (v27) {
      goto LABEL_8;
    }
    if (!theData) {
      goto LABEL_8;
    }
    sub_22686088C(v62, (uint64_t)&v61, (UInt8 *)"%kC", v22, v23, v24, v25, v26, 1466517097);
    if (v33) {
      goto LABEL_8;
    }
    if (!v61) {
      goto LABEL_8;
    }
    sub_22686088C(v61, (uint64_t)&v58, (UInt8 *)"%ks", v28, v29, v30, v31, v32, (uint64_t)"radios");
    if (v40) {
      goto LABEL_8;
    }
    if (!v58) {
      goto LABEL_8;
    }
    sub_22686088C(v58, (uint64_t)&v59, (UInt8 *)"[*].%ks:int", v35, v36, v37, v38, v39, 0);
    if (v41) {
      goto LABEL_8;
    }
    if (v59 != 1 || sub_2268E1098(theData, 1112757313))
    {
      int v42 = sub_2268E1098(theData, 1852787795);
      int v43 = sub_2268E1098(theData, 1852788045);
      if (!(v42 | v43)) {
        goto LABEL_8;
      }
      int v49 = v43;
      sub_22686088C(v58, (uint64_t)&v57, (UInt8 *)"[*].%ks:int", v44, v45, v46, v47, v48, 0);
      if (v55) {
        goto LABEL_8;
      }
      if ((v57 - 1) < 3)
      {
        unsigned __int8 v16 = v42 == 0;
LABEL_8:
        CFStringRef v15 = v63;
        goto LABEL_9;
      }
      if (v57 != 4) {
        goto LABEL_8;
      }
      if (!v49)
      {
        if (v42)
        {
          char v56 = 0;
          sub_22686088C(v58, (uint64_t)&v56, (UInt8 *)"[*].%ks:BOOL", v50, v51, v52, v53, v54, 0);
          unsigned __int8 v16 = v56 ^ 1;
        }
        goto LABEL_8;
      }
    }
    unsigned __int8 v16 = 0;
    goto LABEL_8;
  }
LABEL_9:
  if (v15)
  {
    CFRelease(v15);
    CFStringRef v63 = 0;
  }
  if (v62) {
    CFRelease(v62);
  }
  return v16;
}

uint64_t sub_2268D131C(uint64_t a1, const __CFString *a2, const __CFArray *a3, const __CFString **a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _BaseStationIsInSTAMode(AutoGuessContextRef, CFDictionaryRef, CFArrayRef, CFStringRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v53);
  }
  uint64_t result = 0;
  CFStringRef v56 = 0;
  if (a1 && a2 && a4)
  {
    int v59 = 0;
    CFTypeRef cf = 0;
    int v57 = 0;
    int v13 = sub_2268D0620(a1, a2, 0, &cf, a5, a6, a7, a8);
    if (v13 == -6727)
    {
      *(void *)int v55 = 0;
      sub_22686088C(a2, (uint64_t)v55, (UInt8 *)"%ks.%ks", v14, v15, v16, v17, v18, (uint64_t)"txt");
      if (v29) {
        return 0;
      }
      if (!*(void *)v55) {
        return 0;
      }
      *(void *)uint64_t v54 = 0;
      sub_22686088C(a2, (uint64_t)v54, (UInt8 *)"%ks.%ks", v24, v25, v26, v27, v28, (uint64_t)"txt");
      if (v30 != -6727 && (v30 || !*(void *)v54)) {
        return 0;
      }
      if (sub_22685C1DC(*(const __CFString **)v55, 0, a3) != -1
        || *(void *)v54 && sub_22685C1DC(*(const __CFString **)v54, 0, a3) != -1)
      {
        return 0;
      }
      sub_22686088C(a2, (uint64_t)&v59, (UInt8 *)"%ks.%kC:int", v31, v32, v33, v34, v35, (uint64_t)"txt");
      if (v41) {
        return 0;
      }
      sub_22686088C(a2, (uint64_t)&v56, (UInt8 *)"%ks.%ks", v36, v37, v38, v39, v40, (uint64_t)"txt");
      if (v42 == -6727)
      {
        CFStringRef v50 = sub_22685B73C(a2, v43, v44, v45, v46, v47, v48, v49);
        CFStringRef v56 = v50;
        BOOL v51 = v50 == 0;
      }
      else
      {
        int v52 = v42;
        CFStringRef v50 = v56;
        BOOL v51 = v52 != 0;
      }
      if (v51 || !v50) {
        return 0;
      }
      BOOL v22 = (v59 & 0x18000) == 0;
LABEL_16:
      if (v22)
      {
        *a4 = v56;
        return 1;
      }
      return 0;
    }
    int v19 = v13;
    uint64_t result = 0;
    if (!v19)
    {
      uint64_t result = (uint64_t)cf;
      if (cf)
      {
        sub_2268D0994((const __CFString *)cf, &v57, (CFTypeRef *)&v56, 0, v15, v16, v17, v18);
        int v21 = v20;
        if (cf) {
          CFRelease(cf);
        }
        uint64_t result = 0;
        if (!v21)
        {
          if (v56)
          {
            BOOL v22 = v57 == 1;
            goto LABEL_16;
          }
        }
      }
    }
  }
  return result;
}

CFTypeRef sub_2268D158C(uint64_t a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _BaseStationIsNATEnabled(AutoGuessContextRef, CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v19);
  }
  CFTypeRef result = 0;
  if (a1)
  {
    if (a2)
    {
      char v21 = 0;
      CFTypeRef cf = 0;
      int v16 = sub_2268D0620(a1, a2, 0, &cf, a5, a6, a7, a8);
      CFTypeRef result = 0;
      if (!v16)
      {
        CFTypeRef result = cf;
        if (cf)
        {
          sub_22686088C((const __CFString *)cf, (uint64_t)&v21, (UInt8 *)"%kC:BOOL", v11, v12, v13, v14, v15, 1918979649);
          int v18 = v17;
          if (cf) {
            CFRelease(cf);
          }
          if (v18) {
            return 0;
          }
          else {
            return (CFTypeRef)(v21 != 0);
          }
        }
      }
    }
  }
  return result;
}

CFTypeRef sub_2268D1688(uint64_t a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _BaseStationIsCreatingGuestNetwork(AutoGuessContextRef, CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, (uint64_t)cf);
  }
  CFTypeRef result = 0;
  if (a1)
  {
    if (a2)
    {
      int v20 = 0;
      BOOL v19 = 0;
      CFTypeRef cf = 0;
      int v15 = sub_2268D0620(a1, a2, 0, &cf, a5, a6, a7, a8);
      CFTypeRef result = 0;
      if (!v15)
      {
        CFTypeRef result = cf;
        if (cf)
        {
          sub_2268D0994((const __CFString *)cf, &v20, 0, &v19, v11, v12, v13, v14);
          int v17 = v16;
          if (cf) {
            CFRelease(cf);
          }
          if (v17) {
            return 0;
          }
          else {
            return (CFTypeRef)v19;
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_2268D177C(uint64_t a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _BaseStationHasPublicRoutableIP(AutoGuessContextRef, CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v18);
  }
  BOOL v10 = 0;
  CFTypeRef cf = 0;
  if (a1 && a2)
  {
    CFStringRef theString = 0;
    unsigned int v19 = 0;
    BOOL v10 = 0;
    if (!sub_2268D0620(a1, a2, 0, &cf, a5, a6, a7, a8))
    {
      if (!cf) {
        return 0;
      }
      sub_22686088C((const __CFString *)cf, (uint64_t)&theString, (UInt8 *)"%kC", v11, v12, v13, v14, v15, 2002864464);
      if (!v16 && theString && CFStringGetCString(theString, buffer, 256, 0x8000100u))
      {
        BOOL v10 = 0;
        if (!sub_22686EA18(buffer, 0, &v19, 0, 0, 0, 0)) {
          BOOL v10 = sub_22686E400(bswap32(v19));
        }
      }
      else
      {
        BOOL v10 = 0;
      }
    }
    if (cf) {
      CFRelease(cf);
    }
  }
  return v10;
}

CFTypeRef sub_2268D1900(uint64_t a1, const __CFString *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"Boolean _BaseStationIsInCreateMode(AutoGuessContextRef, CFDictionaryRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v22);
  }
  CFTypeRef result = 0;
  if (a1 && a2)
  {
    int v25 = 0;
    CFTypeRef cf = 0;
    int v23 = 0;
    int v11 = sub_2268D0620(a1, a2, 0, &cf, a5, a6, a7, a8);
    if (v11 == -6727)
    {
      sub_22686088C(a2, (uint64_t)&v25, (UInt8 *)"%ks.%kC:int", v12, v13, v14, v15, v16, (uint64_t)"txt");
      if (!v21) {
        return (CFTypeRef)((v25 & 0x10000) == 0);
      }
      return 0;
    }
    int v17 = v11;
    CFTypeRef result = 0;
    if (!v17)
    {
      CFTypeRef result = cf;
      if (cf)
      {
        sub_2268D0994((const __CFString *)cf, &v23, 0, 0, v13, v14, v15, v16);
        int v19 = v18;
        if (cf) {
          CFRelease(cf);
        }
        if (!v19) {
          return (CFTypeRef)(v23 == 0);
        }
        return 0;
      }
    }
  }
  return result;
}

void sub_2268D1A34(uint64_t a1, const __CFString *a2, const void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CFTypeRef cf = a3;
  if (!a1 || !a2 || !*(void *)(a1 + 16)) {
    return;
  }
  key = 0;
  sub_2268CE710((uint64_t)"_SetCachedSettingsForBaseStation:\n", (uint64_t)a2, (uint64_t)a3, a4, a5, a6, a7, a8);
  if (a3)
  {
    sub_22686088C(a2, (uint64_t)&key, (UInt8 *)"%ks", v12, v13, v14, v15, v16, (uint64_t)"raMA");
    if (v17 || !key) {
      return;
    }
    uint64_t v38 = 0;
    if (!CFDictionaryContainsKey((CFDictionaryRef)a2, @"raM2")) {
      goto LABEL_15;
    }
    sub_22686088C(a2, (uint64_t)&v38, (UInt8 *)"%ks", v18, v19, v20, v21, v22, (uint64_t)"raM2");
    if (v27) {
      return;
    }
    uint64_t v28 = v38;
    if (!v38) {
      return;
    }
    if (dword_268147A98 > 800) {
      goto LABEL_15;
    }
    if (dword_268147A98 == -1)
    {
      if (!sub_226865630((uint64_t)&dword_268147A98, 0x320u))
      {
LABEL_15:
        if (CFDictionaryContainsKey(*(CFDictionaryRef *)(a1 + 16), key))
        {
          CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 16), key);
          if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _SetCachedSettingsForBaseStation(AutoGuessContextRef, CFDictionaryRef, CFDictionaryRef, Boolean)", 800, (uint64_t)"inContext->cachedBaseSttings contains tempMACAddress: %@ -- removing", v30, v31, v32, v33, (uint64_t)key);
          }
        }
        else if (v38)
        {
          if (CFDictionaryContainsKey(*(CFDictionaryRef *)(a1 + 16), v38))
          {
            CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 16), v38);
            if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _SetCachedSettingsForBaseStation(AutoGuessContextRef, CFDictionaryRef, CFDictionaryRef, Boolean)", 800, (uint64_t)"inContext->cachedBaseSttings contains tempMACAddress2: %@ -- removing", v30, v31, v32, v33, (uint64_t)v38);
            }
          }
        }
        if (!sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], *(__CFArray **)(a1 + 16), (uint64_t)"%kO=%O", v29, v30, v31, v32, v33, (uint64_t)key)&& dword_268147A98 <= 800&& (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u)))
        {
          sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _SetCachedSettingsForBaseStation(AutoGuessContextRef, CFDictionaryRef, CFDictionaryRef, Boolean)", 800, (uint64_t)"Added settings for %@ to cache.\n", v34, v35, v36, v37, (uint64_t)key);
        }
        return;
      }
      uint64_t v28 = v38;
    }
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _SetCachedSettingsForBaseStation(AutoGuessContextRef, CFDictionaryRef, CFDictionaryRef, Boolean)", 800, (uint64_t)"inBaseStation has Radio MAC Address 2: %@", v23, v24, v25, v26, (uint64_t)v28);
    goto LABEL_15;
  }
  if (!sub_2268D0620(a1, a2, a4, &cf, v13, v14, v15, v16) && cf) {
    CFRelease(cf);
  }
}

void sub_2268D1D00(uint64_t a1, CFArrayRef theArray, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CacheNeededSettingsForBaseStationList(AutoGuessContextRef, CFArrayRef)", 800, (uint64_t)"\n", a5, a6, a7, a8, v25);
  }
  if (a1)
  {
    if (theArray)
    {
      CFIndex Count = CFArrayGetCount(theArray);
      if (Count >= 1)
      {
        CFIndex v16 = Count;
        uint64_t v17 = 0;
        CFStringRef v26 = 0;
        do
        {
          sub_22686088C((const __CFString *)theArray, (uint64_t)&v26, (UInt8 *)"[*]", v11, v12, v13, v14, v15, v17);
          if (v22 || !v26) {
            break;
          }
          sub_2268D1A34(a1, v26, 0, 0, v18, v19, v20, v21);
          if (v23 && v23 != -6727) {
            break;
          }
          ++v17;
        }
        while (v16 != v17);
      }
    }
  }
}

uint64_t sub_2268D1E10(uint64_t a1, const char *a2, uint64_t a3, unsigned int a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _JoinNetworkAndBrowseForBaseStations(AutoGuessContextRef, CFDictionaryRef, Boolean, uint32_t, CFArrayRef *)", 800, (uint64_t)"\n", (uint64_t)a5, a6, a7, a8, v24);
  }
  uint64_t result = 4294960591;
  if (a1 && a2 && a5)
  {
    CFStringRef v13 = (const __CFString *)sub_2269016D4((uint64_t)a2, a2);
    if (v13)
    {
      if (sub_2268DD6CC(*(void *)(a1 + 48), v13, 0, v14, v15, v16, v17, v18)
        || (uint64_t result = sub_2268DFEFC(*(void *)(a1 + 48), a2, 0, 0, 0, v21, v22, v23), !result))
      {
        uint64_t v25 = 0;
        uint64_t result = sub_2268DF4A0(*(void *)(a1 + 48), a4, &v25, v19, v20, v21, v22, v23);
        if (!result)
        {
          if (v25)
          {
            uint64_t result = 0;
            *a5 = v25;
          }
          else
          {
            return 4294960568;
          }
        }
      }
    }
    else
    {
      return 4294960569;
    }
  }
  return result;
}

uint64_t sub_2268D1F20(uint64_t a1, CFArrayRef theArray, uint64_t a3, unsigned int a4, CFTypeRef *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _JoinANetworkAndBrowseForBaseStations(AutoGuessContextRef, CFArrayRef, Boolean, uint32_t, CFArrayRef *)", 800, (uint64_t)"\n", (uint64_t)a5, a6, a7, a8, v27);
  }
  CFTypeRef cf = 0;
  uint64_t v12 = 4294960591;
  if (a1 && theArray && a5)
  {
    CFIndex Count = CFArrayGetCount(theArray);
    if (Count < 1)
    {
      return 4294960569;
    }
    else
    {
      CFIndex v19 = Count;
      uint64_t v20 = 0;
      uint64_t v29 = 0;
      while (1)
      {
        sub_22686088C((const __CFString *)theArray, (uint64_t)&v29, (UInt8 *)"[*]", v14, v15, v16, v17, v18, v20);
        if (v21)
        {
          uint64_t v12 = v21;
          goto LABEL_25;
        }
        if (!v29) {
          break;
        }
        uint64_t v25 = sub_2268D1E10(a1, v29, 0, a4, &cf, v22, v23, v24);
        uint64_t v12 = v25;
        if (v25 != -6723)
        {
          if (!v25)
          {
            if (!cf) {
              return 4294960568;
            }
            uint64_t v12 = 0;
            *a5 = cf;
            return v12;
          }
          if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u)))
          {
            uint64_t v30 = &stru_26DA6BE88;
            if (v29) {
              sub_22686088C((const __CFString *)v29, (uint64_t)&v30, (UInt8 *)"%kO", v14, v15, v16, v17, v18, @"SSID_STR");
            }
            sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _JoinANetworkAndBrowseForBaseStations(AutoGuessContextRef, CFArrayRef, Boolean, uint32_t, CFArrayRef *)", 800, (uint64_t)"Err: %d, joining/browsing network: %@", v15, v16, v17, v18, v12);
          }
          if (v19 != ++v20) {
            continue;
          }
        }
        goto LABEL_25;
      }
      uint64_t v12 = 4294960568;
LABEL_25:
      if (cf) {
        CFRelease(cf);
      }
    }
  }
  return v12;
}

uint64_t sub_2268D2110(uint64_t a1, CFArrayRef theArray, const __CFString *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = a4;
  if (dword_268147A98 <= 800)
  {
    if (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u)) {
      sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyScanInfoForNetwork(AutoGuessContextRef, CFMutableArrayRef, CFStringRef, WiFiType, CFDictionaryRef *)", 800, (uint64_t)"\n", (uint64_t)a5, a6, a7, a8, v38);
    }
    if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyScanInfoForNetwork(AutoGuessContextRef, CFMutableArrayRef, CFStringRef, WiFiType, CFDictionaryRef *)", 800, (uint64_t)"_CopyScanInfoForNetwork %@\n", (uint64_t)a5, a6, a7, a8, (uint64_t)a3);
    }
  }
  sub_2268CE084((uint64_t)"Scanned networks", theArray, (uint64_t)a3, a4, (uint64_t)a5, a6, a7, a8);
  uint64_t result = 4294960591;
  if (a1 && a3 && a5)
  {
    CFIndex v14 = sub_22685C0BC(a3, v9, 0, theArray);
    if (v14 != -1)
    {
      CFStringRef ValueAtIndex = CFArrayGetValueAtIndex(theArray, v14);
      if (ValueAtIndex)
      {
        uint64_t v20 = (uint64_t)ValueAtIndex;
        CFRetain(ValueAtIndex);
        sub_2268CE82C((uint64_t)"foundScanInfo from BSAssistant_IndexOfNetworkNameInNetworkList", v20, v21, v22, v23, v24, v25, v26);
LABEL_15:
        uint64_t result = 0;
        *a5 = v20;
        return result;
      }
      return 4294960568;
    }
    if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
      sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyScanInfoForNetwork(AutoGuessContextRef, CFMutableArrayRef, CFStringRef, WiFiType, CFDictionaryRef *)", 800, (uint64_t)"Callback will direct scan to find it if not visible\n", v15, v16, v17, v18, v38);
    }
    uint64_t v39 = 0;
    uint64_t result = sub_2268DDFAC(*(void *)(a1 + 48), a3, v9, (CFTypeRef *)&v39, v15, v16, v17, v18);
    if (!result)
    {
      if (!v39) {
        return 4294960568;
      }
      uint64_t result = sub_226860774((const __CFAllocator *)*MEMORY[0x263EFFB08], theArray, (uint64_t)"%O", v27, v28, v29, v30, v31, v39);
      if (!result)
      {
        sub_2268CE82C((uint64_t)"foundScanInfo from callback\n", v39, v32, v33, v34, v35, v36, v37);
        uint64_t v20 = v39;
        if (v39) {
          goto LABEL_15;
        }
        return 4294960569;
      }
    }
  }
  return result;
}

uint64_t sub_2268D2324(uint64_t a1, const __CFArray *a2, CFArrayRef theArray, __CFArray **a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyScanInfoForNetworksNamed(AutoGuessContextRef, CFMutableArrayRef, CFArrayRef, CFArrayRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v34);
  }
  uint64_t v12 = 4294960591;
  if (a1 && theArray && a4)
  {
    CFIndex Count = CFArrayGetCount(theArray);
    if (Count)
    {
      uint64_t v14 = Count;
      CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
      CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
      if (Mutable)
      {
        uint64_t v22 = Mutable;
        CFStringRef v36 = 0;
        if (v14 >= 1)
        {
          uint64_t v23 = 0;
          while (1)
          {
            CFTypeRef cf = 0;
            sub_22686088C((const __CFString *)theArray, (uint64_t)&v36, (UInt8 *)"[*]", v17, v18, v19, v20, v21, v23);
            if (v24 || (uint64_t v24 = sub_2268D2110(a1, a2, v36, 3, (uint64_t *)&cf, v25, v26, v27), v24))
            {
              uint64_t v12 = v24;
              goto LABEL_26;
            }
            if (!cf) {
              break;
            }
            uint64_t v12 = sub_226860774(v15, v22, (uint64_t)"%O", v28, v29, v30, v31, v32, (uint64_t)cf);
            if (cf) {
              CFRelease(cf);
            }
            if (v12) {
              goto LABEL_26;
            }
            if (v14 == ++v23) {
              goto LABEL_19;
            }
          }
          uint64_t v12 = 4294960568;
          goto LABEL_26;
        }
LABEL_19:
        if (!CFArrayGetCount(v22))
        {
          uint64_t v12 = 4294960569;
LABEL_26:
          CFRelease(v22);
          return v12;
        }
        uint64_t v12 = 0;
        *a4 = v22;
      }
      else
      {
        return 4294960568;
      }
    }
    else
    {
      return 4294960569;
    }
  }
  return v12;
}

uint64_t sub_2268D24E4(uint64_t a1, uint64_t a2, CFDictionaryRef theDict, CFTypeRef *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _AskUserToChooseFromList(AutoGuessContextRef, eAssistantCallback, CFDictionaryRef, CFStringRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v38);
  }
  CFTypeRef cf = 0;
  context = 0;
  uint64_t v12 = 4294960591;
  if (theDict)
  {
    if (a1)
    {
      if ((a2 - 7) >= 0xFFFFFFFE && CFDictionaryGetCount(theDict) >= 2)
      {
        uint64_t v12 = sub_2268DB87C(*(void *)(a1 + 48), &context);
        if (!v12)
        {
          if (context)
          {
            uint64_t v12 = sub_2268DD050((uint64_t)context, @"BSAssistantCallback_AskUserDictionary", (uint64_t)theDict, v13, v14, v15, v16, v17);
            if (!v12)
            {
              uint64_t v12 = sub_2268DBFEC(context, a2, v19, v20, v21, v22, v23, v24);
              if (!v12)
              {
                uint64_t v12 = sub_2268DC37C((uint64_t)context, v25, v26, v27, v28, v29, v30, v31);
                if (!v12)
                {
                  uint64_t v12 = *((unsigned int *)context + 8);
                  if (!v12)
                  {
                    sub_22686088C(*((const __CFString **)context + 3), (uint64_t)&cf, (UInt8 *)"%ks:obj", v32, v33, v34, v35, v36, (uint64_t)"BSAssistantCallback_String");
                    uint64_t v12 = v37;
                    if (!v37)
                    {
                      *a4 = cf;
                      CFTypeRef cf = 0;
                    }
                  }
                }
              }
            }
          }
          else
          {
            uint64_t v12 = 4294960568;
          }
        }
      }
    }
  }
  sub_2268DB9AC((char *)context);
  if (cf) {
    CFRelease(cf);
  }
  return v12;
}

BOOL sub_2268D265C(const __CFString *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!((unint64_t)a1 | a2)) {
    return 0;
  }
  if (!a1)
  {
    if (!a2) {
      return 0;
    }
    return sub_2269017A0(a2, (const char *)a2) != 0;
  }
  unsigned int v9 = sub_22685C9CC(a1, a2, a3, a4, a5, a6, a7, a8);
  BOOL result = v9 != 0;
  if (!v9 && a2) {
    return sub_2269017A0(a2, (const char *)a2) != 0;
  }
  return result;
}

BOOL sub_2268D26CC(const __CFString *a1)
{
  if (!a1) {
    return 1;
  }
  return CFStringCompare(a1, @"BSSetupRecommend_DeviceIsTooNewToSetUp", 0)
      && CFStringCompare(a1, @"BSSetupRecommend_UseAUFor80211g", 0);
}

uint64_t sub_2268D2734(int a1, const void *a2, int a3, uint64_t a4, const void *a5, const __CFString *a6, const __CFString *a7, const void *a8, const __CFString *a9, const void *a10, void *a11, uint64_t a12)
{
  int valuePtr = a1;
  if (!a12 || !*(void *)(a12 + 8)) {
    return 4294960591;
  }
  CFTypeRef cf = 0;
  CFAllocatorRef v19 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFNumberRef value = CFNumberCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], kCFNumberSInt32Type, &valuePtr);
  if (value)
  {
    CFMutableArrayRef Mutable = CFDictionaryCreateMutable(v19, 0, MEMORY[0x263EFFF88], MEMORY[0x263EFFF90]);
    if (!Mutable)
    {
      uint64_t v27 = 4294960568;
LABEL_45:
      CFRelease(value);
      return v27;
    }
    uint64_t v21 = Mutable;
    CFDictionarySetValue(Mutable, @"BSAutoGuess_FinalState", value);
    CFDictionarySetValue(v21, @"BSAutoGuess_StateTrace", a2);
    if (a3 != -1)
    {
      uint64_t v27 = sub_226860774(v19, v21, (uint64_t)"%ks=%i", v22, v23, v24, v25, v26, (uint64_t)"BSAutoGuess_RestoreNetworkMode");
      if (v27) {
        goto LABEL_44;
      }
    }
    if (CFStringCompare(a6, @"BSSetupRecommend_OfferReplaceSourceIsUnconfigurable", 0))
    {
      if (a4 == -1)
      {
LABEL_15:
        if (a5) {
          CFDictionarySetValue(v21, @"BSAutoGuess_RestoreData", a5);
        }
        CFDictionarySetValue(v21, @"BSAutoGuess_Recommendation", a6);
        if (a8) {
          CFDictionarySetValue(v21, @"BSAutoGuess_UnconfiguredNetwork", a8);
        }
        if (a10) {
          CFDictionarySetValue(v21, @"BSAutoGuess_SourceNetwork", a10);
        }
        if (a11) {
          CFDictionarySetValue(v21, @"BSAutoGuess_AskUserList", a11);
        }
        if (a7)
        {
          CFDictionarySetValue(v21, @"BSAutoGuess_UnconfiguredBase", a7);
          if (sub_2268D26CC(a6))
          {
            uint64_t v38 = sub_2268D0620(a12, a7, 0, &cf, v34, v35, v36, v37);
            if (v38 == -6727)
            {
              if (!sub_2268D05AC(a12, (const __CFDictionary *)a7, v39, v40, v41, v42, v43, v44))
              {
                uint64_t v27 = 4294960569;
                goto LABEL_44;
              }
              CFDictionarySetValue(v21, @"BSAutoGuess_Recommendation", @"BSSetupRecommend_FirmwareUpdateRequired");
            }
            else
            {
              uint64_t v27 = v38;
              if (v38) {
                goto LABEL_44;
              }
              if (!cf)
              {
LABEL_47:
                uint64_t v27 = 4294960568;
                goto LABEL_44;
              }
              CFDictionarySetValue(v21, @"BSAutoGuess_UnconfiguredBaseSettings", cf);
              if (cf)
              {
                CFRelease(cf);
                CFTypeRef cf = 0;
              }
            }
          }
        }
        if (!a9) {
          goto LABEL_39;
        }
        uint64_t v45 = sub_2268D0620(a12, a9, 0, &cf, v34, v35, v36, v37);
        if (v45 == -6727)
        {
LABEL_38:
          CFDictionarySetValue(v21, @"BSAutoGuess_SourceBase", a9);
LABEL_39:
          CFArrayAppendValue(*(CFMutableArrayRef *)(a12 + 8), v21);
          if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus __SetupOfferToDoSomething(BaseStationAutoGuessStates, CFArrayRef, BSNetworkMode, int32_t, CFStringRef, CFStringRef, CFDictionaryRef, CFDictionaryRef, CFDictionaryRef, CFDictionaryRef, CFArrayRef, AutoGuessContextRef)", 800, (uint64_t)"Reason: %d Recommendation: %@\n", v46, v47, v48, v49, a4);
          }
          uint64_t v27 = 0;
          goto LABEL_44;
        }
        uint64_t v27 = v45;
        if (!v45)
        {
          if (cf)
          {
            CFDictionarySetValue(v21, @"BSAutoGuess_SourceBaseSettings", cf);
            if (cf)
            {
              CFRelease(cf);
              CFTypeRef cf = 0;
            }
            goto LABEL_38;
          }
          goto LABEL_47;
        }
LABEL_44:
        CFRelease(v21);
        goto LABEL_45;
      }
      uint64_t v33 = sub_226860774(v19, v21, (uint64_t)"%ks=%i", v28, v29, v30, v31, v32, (uint64_t)"BSAutoGuess_NoRestoreReason");
    }
    else
    {
      uint64_t v33 = sub_226860774(v19, v21, (uint64_t)"%ks=%i", v28, v29, v30, v31, v32, (uint64_t)"kBSAutoGuessSetupOptionKey_NoConfigureReason");
    }
    uint64_t v27 = v33;
    if (v33) {
      goto LABEL_44;
    }
    goto LABEL_15;
  }
  return 4294960568;
}

uint64_t sub_2268D2AC8(int a1, const void *a2, uint64_t a3)
{
  return sub_2268D2734(a1, a2, -1, 0xFFFFFFFFLL, 0, @"BSSetupRecommend_TellUserCannotFindDevices", 0, 0, 0, 0, 0, a3);
}

uint64_t sub_2268D2B0C(int a1, const void *a2, uint64_t a3)
{
  return sub_2268D2734(a1, a2, -1, 0xFFFFFFFFLL, 0, @"BSSetupRecommend_WaitForBaseStation", 0, 0, 0, 0, 0, a3);
}

uint64_t sub_2268D2B50(CFDictionaryRef theDict, const void *a2, const __CFString **a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _IntelligentlyChooseABaseToConfigure(CFDictionaryRef, CFDictionaryRef, CFDictionaryRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, (uint64_t)theDicta);
  }
  CFStringRef v38 = 0;
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  CFDictionaryRef theDicta = 0;
  if (theDict && CFDictionaryGetCount(theDict))
  {
    uint64_t v11 = sub_2268623AC(theDict, &v40);
    if (!v11)
    {
      if (v40)
      {
        if (sub_22686244C((uint64_t *)v40, &v39, &v38))
        {
          CFStringRef v19 = 0;
          uint64_t v11 = 0;
          while (1)
          {
            if (sub_22685BE8C(v38, v12, v13, v14, v15, v16, v17, v18))
            {
              sub_2268CE710((uint64_t)"Base station has WAN link", (uint64_t)v38, v21, v22, v23, v24, v25, v26);
              uint64_t v27 = sub_2268A89F4((uint64_t)v38, @"local.", @"_airport._tcp", @"wan", 2u, 1, (CFTypeRef *)&theDicta);
              uint64_t v11 = v27;
              if (v27 != -6735)
              {
                if (v27) {
                  goto LABEL_24;
                }
                if (!theDicta) {
                  goto LABEL_31;
                }
                uint64_t v11 = 0;
                if (CFDictionaryGetCount(theDicta)) {
                  break;
                }
              }
            }
            if (sub_22685BB54(v38, v20, v21, v22, v23, v24, v25, v26))
            {
              CFStringRef v35 = v38;
              uint64_t v36 = "Base station has restore profile";
LABEL_34:
              sub_2268CE710((uint64_t)v36, (uint64_t)v35, v28, v29, v30, v31, v32, v33);
              break;
            }
            if (a2 && sub_2268CEE5C(v38, a2, v28, v29, v30, v31, v32, v33))
            {
              CFStringRef v35 = v38;
              uint64_t v36 = "Base station has previous config files";
              goto LABEL_34;
            }
            if (!v19) {
              CFStringRef v19 = v38;
            }
            if (!sub_22686244C((uint64_t *)v40, &v39, &v38)) {
              goto LABEL_36;
            }
          }
          CFStringRef v19 = v38;
LABEL_36:
          if (v19)
          {
            *a3 = v19;
            goto LABEL_26;
          }
        }
        uint64_t v11 = 4294960569;
      }
      else
      {
LABEL_31:
        uint64_t v11 = 4294960568;
      }
    }
  }
  else
  {
    uint64_t v11 = 4294960591;
  }
LABEL_24:
  if (a3) {
    CFRelease(a3);
  }
LABEL_26:
  if (theDicta)
  {
    CFRelease(theDicta);
    CFDictionaryRef theDicta = 0;
  }
  if (v40) {
    sub_226862440(v40);
  }
  return v11;
}

void sub_2268D2D70(uint64_t a1, const __CFString *a2, const __CFString *a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _ShouldNewBaseStationReplaceExistingBaseStation(AutoGuessContextRef, CFDictionaryRef, CFDictionaryRef, eReplaceMode *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v71);
  }
  if (a3)
  {
    if (a2)
    {
      if (a1)
      {
        if (a4)
        {
          uint64_t v75 = 0;
          uint64_t v76 = 0;
          __int16 v74 = 0;
          *a4 = 0;
          sub_2268D10F8(a1, a2, a3, (uint64_t)a4, a5, a6, a7, a8);
          sub_22686088C(a3, (uint64_t)&v75, (UInt8 *)"%kO.%kO:int", v12, v13, v14, v15, v16, @"txt");
          if (!v24)
          {
            if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
              sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _ShouldNewBaseStationReplaceExistingBaseStation(AutoGuessContextRef, CFDictionaryRef, CFDictionaryRef, eReplaceMode *)", 800, (uint64_t)"-- existingProdID2 is: %d", v20, v21, v22, v23, v75);
            }
            int v25 = 2;
            if (v75 == 3 || v75 == 102) {
              goto LABEL_16;
            }
            unsigned int v26 = *a4;
            if (*a4) {
              goto LABEL_18;
            }
            if (!sub_22685CA8C(a3, v17, v18, v19, v20, v21, v22, v23))
            {
              int v25 = 3;
              goto LABEL_16;
            }
            unsigned int v26 = *a4;
            if (*a4) {
              goto LABEL_18;
            }
            uint64_t v76 = -1;
            if (v75 == 104)
            {
              if (sub_2268D0CEC(a1, a3, 1, &v76, v29, v30, v31, v32) || v76 == -1) {
                return;
              }
              if (v76 > 1) {
                goto LABEL_61;
              }
              unsigned int v26 = *a4;
              if (*a4) {
                goto LABEL_18;
              }
            }
            if (sub_2268D1034(a1, a3, v27, v28, v29, v30, v31, v32))
            {
              sub_2268CE710((uint64_t)"Existing base station has audio port in use:\n", (uint64_t)a3, v33, v34, v35, v36, v37, v38);
              if (sub_2268D0E64(a1, a2, 1632923251, (unsigned char *)&v74 + 1, v39, v40, v41, v42)) {
                return;
              }
              uint64_t v49 = HIBYTE(v74) ? "New base station has audio port:\n" : "New base station does not have audio port:\n";
              sub_2268CE710((uint64_t)v49, (uint64_t)a2, v43, v44, v45, v46, v47, v48);
              if (!HIBYTE(v74))
              {
LABEL_60:
                unsigned int v26 = *a4;
                goto LABEL_18;
              }
            }
            sub_22686088C(a2, (uint64_t)&v75 + 4, (UInt8 *)"%ks.%kC:int", v34, v35, v36, v37, v38, (uint64_t)"txt");
            if (v50) {
              return;
            }
            unsigned int v51 = sub_22683C4C8(v75);
            if (v51 <= sub_22683C4C8(HIDWORD(v75)))
            {
              if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
                sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _ShouldNewBaseStationReplaceExistingBaseStation(AutoGuessContextRef, CFDictionaryRef, CFDictionaryRef, eReplaceMode *)", 800, (uint64_t)"Existing base station has less ethernet ports than the new base station", v54, v55, v56, v57, v72);
              }
            }
            else
            {
              if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
                sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _ShouldNewBaseStationReplaceExistingBaseStation(AutoGuessContextRef, CFDictionaryRef, CFDictionaryRef, eReplaceMode *)", 800, (uint64_t)"Existing base station has more ethernet ports than the new base station", v54, v55, v56, v57, v72);
              }
              uint64_t v58 = v76;
              if (v76 == -1)
              {
                if (sub_2268D0CEC(a1, a3, 1, &v76, v54, v55, v56, v57)) {
                  return;
                }
                uint64_t v58 = v76;
                if (v76 == -1) {
                  return;
                }
              }
              if (v58 >= sub_22683C4C8(HIDWORD(v75))) {
                goto LABEL_60;
              }
            }
            if (!sub_2268D0F8C(a1, (CFDictionaryRef)a2, v52, v53, v54, v55, v56, v57)
              || sub_2268D0F8C(a1, (CFDictionaryRef)a3, v59, v60, v61, v62, v63, v64))
            {
              unsigned int v26 = *a4;
              if (!*a4)
              {
                int v70 = sub_2268D0E64(a1, a2, 825319779, &v74, v61, v62, v63, v64);
                if (!v70 && (_BYTE)v74)
                {
                  char v73 = 0;
                  int v70 = sub_2268D0E64(a1, a3, 825319779, &v73, v66, v67, v68, v69);
                  if (!v70)
                  {
                    if (v73) {
                      goto LABEL_56;
                    }
                    goto LABEL_55;
                  }
                  if ((v75 - 1) < 0x76) {
LABEL_55:
                  }
                    *a4 = 1;
                }
LABEL_56:
                if (*a4 && !sub_2268D10F8(a1, a2, a3, v65, v66, v67, v68, v69)) {
                  *a4 = 0;
                }
                if (v70) {
                  return;
                }
                goto LABEL_60;
              }
LABEL_18:
              int v25 = 1;
              if (v26 <= 3 && v26 != 1) {
                return;
              }
LABEL_16:
              *a4 = v25;
              return;
            }
LABEL_61:
            int v25 = 1;
            goto LABEL_16;
          }
        }
      }
    }
  }
}

uint64_t sub_2268D31AC(uint64_t a1, CFArrayRef theArray, const __CFArray *a3, const __CFArray **a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyAllNetworksForBaseStationsInSTAMode(AutoGuessContextRef, CFArrayRef, CFMutableArrayRef, CFArrayRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v50);
  }
  uint64_t v12 = 4294960591;
  if (!a1 || !theArray || !a4) {
    return v12;
  }
  CFIndex Count = CFArrayGetCount(theArray);
  if (!Count) {
    return 4294960569;
  }
  uint64_t v14 = Count;
  CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  if (!Mutable) {
    return 4294960568;
  }
  CFArrayRef v17 = Mutable;
  CFAllocatorRef v51 = v15;
  CFNumberRef value = 0;
  if (v14 >= 1)
  {
    for (CFIndex i = 0; v14 != i; ++i)
    {
      CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(theArray, i);
      if (!ValueAtIndex)
      {
LABEL_36:
        uint64_t v12 = 4294960568;
        goto LABEL_38;
      }
      CFStringRef v27 = ValueAtIndex;
      if (!sub_22685C9CC(ValueAtIndex, v20, v21, v22, v23, v24, v25, v26)
        && sub_2268D131C(a1, v27, a3, (const __CFString **)&value, v28, v29, v30, v31)
        && value)
      {
        v54.CFIndex length = CFArrayGetCount(v17);
        v54.locatiouint64_t n = 0;
        if (CFArrayContainsValue(v17, v54, value))
        {
          if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyAllNetworksForBaseStationsInSTAMode(AutoGuessContextRef, CFArrayRef, CFMutableArrayRef, CFArrayRef *)", 800, (uint64_t)"Already added STA network: %@\n", v32, v33, v34, v35, (uint64_t)value);
          }
        }
        else
        {
          CFTypeRef cf = 0;
          if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
            sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyAllNetworksForBaseStationsInSTAMode(AutoGuessContextRef, CFArrayRef, CFMutableArrayRef, CFArrayRef *)", 800, (uint64_t)"Adding STA network: %@ if it is scannable\n", v32, v33, v34, v35, (uint64_t)value);
          }
          uint64_t v36 = sub_2268D2110(a1, a3, (const __CFString *)value, 3, (uint64_t *)&cf, v33, v34, v35);
          if (v36 != -6727)
          {
            uint64_t v12 = v36;
            if (v36) {
              goto LABEL_38;
            }
            if (!cf) {
              goto LABEL_36;
            }
            CFRelease(cf);
            CFTypeRef cf = 0;
            sub_2268CE710((uint64_t)"Base station is in STA mode:\n", (uint64_t)v27, v37, v38, v39, v40, v41, v42);
            uint64_t v48 = sub_226860774(v51, v17, (uint64_t)"%O", v43, v44, v45, v46, v47, (uint64_t)value);
            if (v48)
            {
              uint64_t v12 = v48;
LABEL_38:
              CFRelease(v17);
              return v12;
            }
          }
        }
      }
    }
  }
  if (!CFArrayGetCount(v17))
  {
    uint64_t v12 = 4294960569;
    goto LABEL_38;
  }
  uint64_t v12 = 0;
  *a4 = v17;
  return v12;
}

uint64_t sub_2268D3474(uint64_t a1, char a2, CFArrayRef theArray, __CFArray **a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _NarrowBaseStationList(AutoGuessContextRef, eNarrowBaseStationList, CFArrayRef, CFArrayRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v30);
  }
  uint64_t v12 = 4294960591;
  if (a1)
  {
    if (theArray)
    {
      if (a4)
      {
        CFIndex Count = CFArrayGetCount(theArray);
        if (Count)
        {
          uint64_t v14 = Count;
          CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
          CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
          if (Mutable)
          {
            CFArrayRef v17 = Mutable;
            if (v14 >= 1)
            {
              CFIndex v18 = 0;
              while (1)
              {
                CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(theArray, v18);
                if (!ValueAtIndex)
                {
                  uint64_t v12 = 4294960568;
                  goto LABEL_23;
                }
                uint64_t v27 = (uint64_t)ValueAtIndex;
                if ((a2 & 1) == 0 || !sub_2268CEAC8(ValueAtIndex, v20, v21, v22, v23, v24, v25, v26))
                {
                  uint64_t v28 = sub_226860774(v15, v17, (uint64_t)"%O", v22, v23, v24, v25, v26, v27);
                  if (v28) {
                    break;
                  }
                }
                if (v14 == ++v18) {
                  goto LABEL_17;
                }
              }
              uint64_t v12 = v28;
              goto LABEL_23;
            }
LABEL_17:
            if (!CFArrayGetCount(v17))
            {
              uint64_t v12 = 4294960569;
LABEL_23:
              CFRelease(v17);
              return v12;
            }
            uint64_t v12 = 0;
            *a4 = v17;
          }
          else
          {
            return 4294960568;
          }
        }
      }
    }
  }
  return v12;
}

uint64_t sub_2268D35F8(uint64_t a1, CFArrayRef theArray, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _NarrowBaseStationListToBestOneToExtend(AutoGuessContextRef, CFArrayRef, CFDictionaryRef *)", 800, (uint64_t)"\n", a5, a6, a7, a8, v60);
  }
  uint64_t result = 4294960591;
  if (a1 && theArray && a3)
  {
    CFIndex Count = CFArrayGetCount(theArray);
    if (Count)
    {
      uint64_t v13 = Count;
      if (Count >= 1)
      {
        CFIndex v14 = 0;
        uint64_t v15 = 0;
        do
        {
          CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(theArray, v14);
          if (!ValueAtIndex) {
            return 4294960568;
          }
          uint64_t v23 = (uint64_t)ValueAtIndex;
          if (sub_2268D158C(a1, ValueAtIndex, v17, v18, v19, v20, v21, v22))
          {
            if (v15)
            {
              sub_2268CE710((uint64_t)"_BaseStationIsNATEnabled true again for base so clearing found base:\n", v23, v24, v25, v26, v27, v28, v29);
              goto LABEL_20;
            }
            sub_2268CE710((uint64_t)"_BaseStationIsNATEnabled true for base:\n", v23, v24, v25, v26, v27, v28, v29);
            uint64_t v15 = v23;
          }
          ++v14;
        }
        while (v13 != v14);
        if (v15)
        {
LABEL_17:
          uint64_t result = 0;
          *a3 = v15;
          return result;
        }
LABEL_20:
        if (v13 >= 1)
        {
          CFIndex v30 = 0;
          uint64_t v15 = 0;
          while (1)
          {
            CFStringRef v31 = (const __CFString *)CFArrayGetValueAtIndex(theArray, v30);
            if (!v31) {
              return 4294960568;
            }
            uint64_t v38 = (uint64_t)v31;
            if (sub_2268D1688(a1, v31, v32, v33, v34, v35, v36, v37))
            {
              if (v15)
              {
                sub_2268CE710((uint64_t)"_BaseStationIsCreatingGuestNetwork true again for base so clearing found base:\n", v38, v39, v40, v41, v42, v43, v44);
LABEL_30:
                CFIndex v45 = 0;
                uint64_t v15 = 0;
                while (1)
                {
                  CFDictionaryRef v46 = (const __CFDictionary *)CFArrayGetValueAtIndex(theArray, v45);
                  if (!v46) {
                    return 4294960568;
                  }
                  uint64_t v53 = (uint64_t)v46;
                  if (sub_2268D0F8C(a1, v46, v47, v48, v49, v50, v51, v52))
                  {
                    if (v15)
                    {
                      sub_2268CE710((uint64_t)"_BaseStationIsSimultaneousDualBand true again for base so clearing found base:\n", v53, v54, v55, v56, v57, v58, v59);
                      return 4294960569;
                    }
                    sub_2268CE710((uint64_t)"_BaseStationIsSimultaneousDualBand true for base:\n", v53, v54, v55, v56, v57, v58, v59);
                    uint64_t v15 = v53;
                  }
                  if (v13 == ++v45)
                  {
                    if (v15) {
                      goto LABEL_17;
                    }
                    return 4294960569;
                  }
                }
              }
              sub_2268CE710((uint64_t)"_BaseStationIsCreatingGuestNetwork true for base:\n", v38, v39, v40, v41, v42, v43, v44);
              uint64_t v15 = v38;
            }
            if (v13 == ++v30)
            {
              if (v15) {
                goto LABEL_17;
              }
              goto LABEL_30;
            }
          }
        }
      }
      return 4294960569;
    }
    else
    {
      return 4294960591;
    }
  }
  return result;
}

void sub_2268D381C(CFArrayRef theArray, uint64_t a2, const __CFDate *a3, const __CFString **a4)
{
  if (theArray && a4)
  {
    CFStringRef v15 = 0;
    sub_22685C348(theArray, a3, &v15);
    if (v12 == -6727)
    {
      sub_22686088C((const __CFString *)theArray, (uint64_t)&v15, (UInt8 *)"[*]", v7, v8, v9, v10, v11, a2);
      if (v13) {
        return;
      }
      CFStringRef v14 = v15;
      if (!v15) {
        return;
      }
    }
    else
    {
      CFStringRef v14 = v15;
      if (!v15) {
        return;
      }
    }
    *a4 = v14;
  }
}

uint64_t sub_2268D38C8(uint64_t a1, const __CFArray *a2, CFArrayRef theArray, const __CFString *a4, uint64_t a5, __CFArray **a6, uint64_t a7, uint64_t a8)
{
  char v9 = a5;
  if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
    sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyNetworksScannableInPreferredList(AutoGuessContextRef, CFMutableArrayRef, CFArrayRef, CFDictionaryRef, ScanOptions, CFArrayRef *)", 800, (uint64_t)"\n", a5, (uint64_t)a6, a7, a8, v79);
  }
  uint64_t v14 = 4294960591;
  if (!a1 || !a6 || (v9 & 3) == 0) {
    return v14;
  }
  if (!theArray || !CFArrayGetCount(theArray)) {
    return 4294960569;
  }
  *a6 = 0;
  CFAllocatorRef v15 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  if (!Mutable) {
    return 4294960568;
  }
  uint64_t v22 = Mutable;
  CFDateRef v23 = 0;
  CFArrayRef theArraya = 0;
  CFStringRef v87 = 0;
  CFTypeRef cf = 0;
  CFStringRef theString1 = 0;
  CFDateRef theDate = 0;
  CFStringRef theString2 = 0;
  unsigned int v83 = 0;
  if ((v9 & 2) != 0)
  {
    CFArrayRef theArraya = CFArrayCreateMutable(v15, 0, MEMORY[0x263EFFF70]);
    if (!theArraya)
    {
      CFArrayRef v26 = 0;
      CFDateRef otherDate = 0;
      goto LABEL_21;
    }
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    CFDateRef v23 = CFDateCreate(v15, Current + -1209600.0);
    if (!v23)
    {
      CFDateRef otherDate = 0;
      goto LABEL_78;
    }
  }
  CFDateRef otherDate = v23;
  if (!a4)
  {
    CFStringRef theString2 = 0;
    goto LABEL_23;
  }
  sub_22686088C(a4, (uint64_t)&theString2, (UInt8 *)"%kO", v17, v18, v19, v20, v21, @"SSID_STR");
  if (v25)
  {
    uint64_t v14 = v25;
LABEL_82:
    CFArrayRef v26 = theArraya;
    goto LABEL_83;
  }
  if (!theString2)
  {
LABEL_78:
    uint64_t v14 = 4294960568;
    goto LABEL_82;
  }
LABEL_23:
  CFIndex Count = CFArrayGetCount(theArray);
  if (!Count) {
    goto LABEL_81;
  }
  uint64_t v80 = v22;
  CFDateRef theDate = 0;
  if (Count < 1)
  {
LABEL_55:
    uint64_t v22 = v80;
    if (theArraya)
    {
      CFIndex v62 = CFArrayGetCount(theArraya);
      if (v62)
      {
        uint64_t v63 = v62 >= 6 ? 6 : v62;
        if (v62 >= 1)
        {
          CFArrayRef v26 = theArraya;
          CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(theArraya, 0);
          CFStringRef theString1 = ValueAtIndex;
          if (ValueAtIndex)
          {
            CFStringRef v68 = ValueAtIndex;
            CFIndex v69 = 0;
            do
            {
              uint64_t v70 = sub_2268D2110(a1, a2, v68, 3, (uint64_t *)&cf, v65, v66, v67);
              if (v70 != -6727)
              {
                uint64_t v14 = v70;
                if (v70) {
                  goto LABEL_82;
                }
                if (!cf) {
                  goto LABEL_78;
                }
                if (sub_2269016B0((uint64_t)cf, v71))
                {
                  if (cf)
                  {
                    CFRelease(cf);
                    CFTypeRef cf = 0;
                  }
                  sub_2268CE82C((uint64_t)"Skipping IBSS network", 0, v72, v73, v74, v75, v76, v77);
                }
                else
                {
                  uint64_t v14 = sub_226860774(v15, v80, (uint64_t)"%O", v73, v74, v75, v76, v77, (uint64_t)cf);
                  if (cf)
                  {
                    CFRelease(cf);
                    CFTypeRef cf = 0;
                  }
                  if (v14) {
                    goto LABEL_82;
                  }
                  if ((v9 & 8) != 0) {
                    goto LABEL_79;
                  }
                }
              }
              if (++v69 >= v63) {
                goto LABEL_79;
              }
              CFStringRef v68 = (const __CFString *)CFArrayGetValueAtIndex(theArraya, v69);
              CFStringRef theString1 = v68;
              uint64_t v14 = 4294960568;
            }
            while (v68);
            goto LABEL_82;
          }
LABEL_21:
          uint64_t v14 = 4294960568;
          goto LABEL_83;
        }
      }
    }
LABEL_79:
    if (CFArrayGetCount(v80))
    {
      uint64_t v14 = 0;
      *a6 = v80;
      CFArrayRef v26 = theArraya;
      goto LABEL_84;
    }
LABEL_81:
    uint64_t v14 = 4294960569;
    goto LABEL_82;
  }
  uint64_t v28 = 0;
  while (1)
  {
    CFIndex v29 = Count;
    sub_2268D381C(theArray, v28, theDate, &v87);
    if (v30) {
      goto LABEL_89;
    }
    if (!v87) {
      break;
    }
    sub_22686088C(v87, (uint64_t)&v83, (UInt8 *)"%ks:int", v31, v32, v33, v34, v35, (uint64_t)"WiFiShim_PreferredNetwork_SecMode");
    if (v30)
    {
LABEL_89:
      uint64_t v14 = v30;
      goto LABEL_91;
    }
    if (v83 - 9 <= 3)
    {
      if (dword_268147A98 <= 800 && (dword_268147A98 != -1 || sub_226865630((uint64_t)&dword_268147A98, 0x320u))) {
        sub_226865EB4((uint64_t)&dword_268147A98, (uint64_t)"OSStatus _CopyNetworksScannableInPreferredList(AutoGuessContextRef, CFMutableArrayRef, CFArrayRef, CFDictionaryRef, ScanOptions, CFArrayRef *)", 800, (uint64_t)"skipping Enterprise preferred network: %@\n", v37, v38, v39, v40, (uint64_t)v87);
      }
      goto LABEL_54;
    }
    sub_22686088C(v87, (uint64_t)&theString1, (UInt8 *)"%ks", v36, v37, v38, v39, v40, (uint64_t)"WiFiShim_PreferredNetwork_SSID");
    if (v30) {
      goto LABEL_89;
    }
    if (!theString1) {
      break;
    }
    sub_22686088C(v87, (uint64_t)&theDate, (UInt8 *)"%ks", v41, v42, v43, v44, v45, (uint64_t)"WiFiShim_PreferredNetwork_TimeAssociated");
    if (v46 != -6727)
    {
      uint64_t v14 = v46;
      if (v46) {
        goto LABEL_91;
      }
      if (!theDate) {
        break;
      }
    }
    if (theString2 && CFEqual(theString1, theString2)) {
      goto LABEL_54;
    }
    CFIndex v47 = sub_22685C0BC(theString1, 3, 0, a2);
    if (v47 == -1)
    {
      if ((v9 & 2) == 0
        || (v9 & 4) != 0 && v83 < 2
        || theDate && CFDateCompare(theDate, otherDate, 0) != kCFCompareGreaterThan)
      {
        goto LABEL_54;
      }
      uint64_t v30 = sub_226860774(v15, theArraya, (uint64_t)"%O", v48, v49, v50, v51, v52, (uint64_t)theString1);
    }
    else
    {
      if ((v9 & 1) == 0) {
        goto LABEL_54;
      }
      uint64_t v53 = CFArrayGetValueAtIndex(a2, v47);
      CFTypeRef cf = v53;
      if (!v53) {
        break;
      }
      uint64_t v55 = (uint64_t)v53;
      if (sub_22690177C((uint64_t)v53, v54) || sub_2269016B0(v55, v56)) {
        goto LABEL_54;
      }
      uint64_t v30 = sub_226860774(v15, v80, (uint64_t)"%O", v57, v58, v59, v60, v61, v55);
    }
    if (v30) {
      goto LABEL_89;
    }
LABEL_54:
    ++v28;
    CFIndex Count = v29;
    if (v29 == v28) {
      goto LABEL_55;
    }
  }
  uint64_t v14 = 4294960568;
LABEL_91:
  CFArrayRef v26 = theArraya;
  uint64_t v22 = v80;
LABEL_83:
  CFRelease(v22);
LABEL_84:
  if (v26) {
    CFRelease(v26);
  }
  if (otherDate) {
    CFRelease(otherDate);
  }
  return v14;
}

uint64_t sub_2268D3DF4(uint64_t a1, CFArrayRef theArray, const __CFArray *a3, const __CFArray *a4, CFMutableArrayRef *a5)
{
  uint64_t v5 = 4294960591;
  if (!a1 || !theArray || !a5) {
    return v5;
  }
  CFIndex Count = CFArrayGetCount(theArray);
  if (!Count) {
    return 4294960569;
  }
  uint64_t v12 = Count;
  CFAllocatorRef v13 = (const __CFAllocator *)*MEMORY[0x263EFFB08];
  CFMutableArrayRef Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, MEMORY[0x263EFFF70]);
  if (!Mutable) {
    return 4294960568;
  }
  CFMutableArrayRef v20 = Mutable;
  CFStringRef v41 = 0;
  CFTypeRef cf = 0;
  CFStringRef v39 = 0;
  CFStringRef v40 = 0;
  if (v12 >= 1)
  {
    for (uint64_t i = 0; v12 != i; ++i)
    {
      sub_22686088C((const __CFString *)theArray, (uint64_t)&v41, (UInt8 *)"[*]", v15, v16, v17, v18, v19, i);
      if (v22)
      {
LABEL_30:
        uint64_t v5 = v22;
        goto LABEL_34;
      }
      CFStringRef v28 = v41;
      if (!v41) {
        goto LABEL_32;
      }
      if (a3)
      {
        sub_22686088C(v41, (uint64_t)&v40, (UInt8 *)"%ks.%ks", v23, v24, v25, v26, v27, (uint64_t)"txt");
        if (v22) {
          goto LABEL_30;
        }
        if (!v40)
        {
          uint64_t v5 = 0;
LABEL_34:
          CFRelease(v20);
          return v5;
        }
        CFIndex v29 = sub_22685BC94(a3, v40);
        if (v29 != -1)
        {
          CFStringRef ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(a3, v29);
          CFStringRef v41 = ValueAtIndex;
          if (!ValueAtIndex)
          {
            uint64_t v5 = 4294960586;
            goto LABEL_34;
          }
LABEL_24:
          uint64_t v22 = sub_226860774(v13, v20, (uint64_t)"%O", v31, v32, v33, v34, v35, (uint64_t)ValueAtIndex);
          if (v22) {
            goto LABEL_30;
          }
          continue;
        }
        CFStringRef v28 = v41;
      }
      sub_22686088C(v28, (uint64_t)&v39, (UInt8 *)"%ks.%ks", v23, v24, v25, v26, v27, (uint64_t)"txt");
      if (v36 != -6727)
      {
        uint64_t v5 = v36;
        if (v36) {
          goto LABEL_34;
        }
        if (!v39) {
          goto LABEL_32;
        }
        uint64_t v37 = sub_2268D2110(a1, a4, v39, 3, (uint64_t *)&cf, v17, v18, v19);
        if (v37 != -6727)
        {
          uint64_t v5 = v37;
          if (v37) {
            goto LABEL_34;
          }
          if (!cf)
          {
LABEL_32:
            uint64_t v5 = 4294960568;
            goto LABEL_34;
          }
          CFRelease(cf);
          CFTypeRef cf = 0;
          CFStringRef ValueAtIndex = v41;
          goto LABEL_24;
        }
      }
    }
  }
  if (!CFArrayGetCount(v20))
  {
    uint64_t v5 = 4294960569;
    goto LABEL_34;
  }
  uint64_t v5 = 0;
  *a5 = v20;
  return v5;
}