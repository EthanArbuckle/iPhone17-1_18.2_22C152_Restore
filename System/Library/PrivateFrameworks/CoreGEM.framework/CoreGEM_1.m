void sub_24B448EA8(_DWORD *a1, void *lpsrc)
{
  uint64_t vars8;

  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE844F8, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B448768(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B448F4C()
{
  return 1;
}

void *sub_24B448F54@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.TowAssist");
}

void sub_24B448F64(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = a1[9];
      uint64_t v7 = (int)a1[8];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[10])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6));
          int v6 = a1[9];
        }
        a1[9] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 3);
      a1[8] = v7 + 1;
      sub_24B448768(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  int v9 = *(_DWORD *)(a2 + 68);
  if (!(_BYTE)v9) {
    goto LABEL_19;
  }
  if (v9)
  {
    int v11 = *(_DWORD *)(a2 + 8);
    a1[17] |= 1u;
    a1[2] = v11;
    int v9 = *(_DWORD *)(a2 + 68);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_24;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_14;
  }
  int v12 = *(_DWORD *)(a2 + 12);
  a1[17] |= 2u;
  a1[3] = v12;
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v13 = *(_DWORD *)(a2 + 16);
  a1[17] |= 4u;
  a1[4] = v13;
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v14 = *(_DWORD *)(a2 + 20);
  a1[17] |= 8u;
  a1[5] = v14;
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 0x20) == 0)
  {
LABEL_17:
    if ((v9 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v15 = *(_DWORD *)(a2 + 48);
  a1[17] |= 0x20u;
  a1[12] = v15;
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 0x40) != 0)
  {
LABEL_27:
    unsigned int v16 = *(_DWORD *)(a2 + 52);
    if (v16 >= 6) {
      __assert_rtn("set_session_protocol", "GnssEmergencyTypes.pb.h", 23343, "::CoreGem::proto::gnss::Emergency::SessionProtocol_IsValid(value)");
    }
    a1[17] |= 0x40u;
    a1[13] = v16;
    int v9 = *(_DWORD *)(a2 + 68);
    if ((v9 & 0x80) != 0) {
      goto LABEL_29;
    }
LABEL_19:
    if ((v9 & 0x100) == 0) {
      return;
    }
    goto LABEL_20;
  }
LABEL_18:
  if ((v9 & 0x80) == 0) {
    goto LABEL_19;
  }
LABEL_29:
  unsigned int v17 = *(_DWORD *)(a2 + 56);
  if (v17 >= 7) {
    __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 23366, "::CoreGem::proto::gnss::Emergency::PosProtocol_IsValid(value)");
  }
  a1[17] |= 0x80u;
  a1[14] = v17;
  if ((*(_DWORD *)(a2 + 68) & 0x100) != 0)
  {
LABEL_20:
    int v10 = *(_DWORD *)(a2 + 60);
    a1[17] |= 0x100u;
    a1[15] = v10;
  }
}

void sub_24B44921C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B449234(uint64_t a1)
{
  *(void *)a1 = &unk_26FE83518;
  sub_24B419CD4();
  int v2 = *(_DWORD *)(a1 + 36);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  uint64_t v5 = *(void *)(a1 + 24);
  if (v5) {
    MEMORY[0x24C5D26D0](v5, 0x80C80B8603338);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_24B4492FC(uint64_t a1)
{
  sub_24B449234(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B449334()
{
}

uint64_t sub_24B449394(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 68);
  if ((_BYTE)v2)
  {
    *(void *)(a1 + 48) = 0;
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
  }
  if ((v2 & 0xFF00) != 0) {
    *(_DWORD *)(a1 + 60) = 0;
  }
  uint64_t result = sub_24B416D94(a1 + 24);
  *(_DWORD *)(a1 + 68) = 0;
  return result;
}

uint64_t sub_24B4493E4(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = a1 + 2;
  uint64_t v5 = a1 + 3;
  int v6 = a1 + 4;
  uint64_t v7 = a1 + 5;
  v47 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6);
  uint64_t v8 = a1 + 12;
  int v9 = a1 + 15;
  while (1)
  {
    while (1)
    {
LABEL_2:
      int v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v10;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v10 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      switch(TagFallback >> 3)
      {
        case 1u:
          int v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          int v14 = (char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          if ((unint64_t)v14 >= v13 || *v14 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
            if (!result) {
              return result;
            }
            int v15 = (unsigned char *)*((void *)this + 1);
            unint64_t v13 = *((void *)this + 2);
          }
          else
          {
            *uint64_t v4 = *v14;
            int v15 = v14 + 1;
            *((void *)this + 1) = v15;
          }
          a1[17] |= 1u;
          if ((unint64_t)v15 < v13 && *v15 == 16)
          {
            unsigned int v16 = v15 + 1;
            *((void *)this + 1) = v16;
            goto LABEL_37;
          }
          continue;
        case 2u:
          int v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          unsigned int v16 = (char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
LABEL_37:
          if ((unint64_t)v16 >= v13 || *v16 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!result) {
              return result;
            }
            v27 = (unsigned char *)*((void *)this + 1);
            unint64_t v13 = *((void *)this + 2);
          }
          else
          {
            *uint64_t v5 = *v16;
            v27 = v16 + 1;
            *((void *)this + 1) = v27;
          }
          a1[17] |= 2u;
          if ((unint64_t)v27 >= v13 || *v27 != 24) {
            continue;
          }
          unsigned int v17 = v27 + 1;
          *((void *)this + 1) = v17;
LABEL_45:
          if ((unint64_t)v17 >= v13 || *v17 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
            if (!result) {
              return result;
            }
            v28 = (unsigned char *)*((void *)this + 1);
            unint64_t v13 = *((void *)this + 2);
          }
          else
          {
            *int v6 = *v17;
            v28 = v17 + 1;
            *((void *)this + 1) = v28;
          }
          a1[17] |= 4u;
          if ((unint64_t)v28 >= v13 || *v28 != 32) {
            continue;
          }
          v18 = v28 + 1;
          *((void *)this + 1) = v18;
LABEL_53:
          if ((unint64_t)v18 >= v13 || *v18 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
            if (!result) {
              return result;
            }
            v29 = (unsigned char *)*((void *)this + 1);
            unint64_t v13 = *((void *)this + 2);
          }
          else
          {
            *uint64_t v7 = *v18;
            v29 = v18 + 1;
            *((void *)this + 1) = v29;
          }
          a1[17] |= 8u;
          if ((unint64_t)v29 >= v13 || *v29 != 42) {
            continue;
          }
          break;
        case 3u:
          int v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          unsigned int v17 = (char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          goto LABEL_45;
        case 4u:
          int v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          v18 = (char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          goto LABEL_53;
        case 5u:
          int v12 = TagFallback & 7;
          if (v12 == 2) {
            goto LABEL_61;
          }
          goto LABEL_28;
        case 6u:
          int v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
          goto LABEL_79;
        case 7u:
          int v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          v21 = (char *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
          goto LABEL_87;
        case 8u:
          int v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          v23 = (char *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
          goto LABEL_97;
        case 9u:
          int v12 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          v25 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          goto LABEL_107;
        default:
          int v12 = TagFallback & 7;
LABEL_28:
          if (v12 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
      }
      do
      {
        *((void *)this + 1) = v29 + 1;
LABEL_61:
        int v30 = a1[9];
        uint64_t v31 = (int)a1[8];
        if ((int)v31 >= v30)
        {
          if (v30 == a1[10])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v47);
            int v30 = a1[9];
          }
          a1[9] = v30 + 1;
          operator new();
        }
        uint64_t v32 = *((void *)a1 + 3);
        a1[8] = v31 + 1;
        v33 = *(unsigned int **)(v32 + 8 * v31);
        unsigned int v50 = 0;
        v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50))return 0; {
        }
          }
        else
        {
          unsigned int v50 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B448990(v33, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v37 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v37, 1);
        int v39 = v37 - 1;
        if (v39 < 0 == v38) {
          *((_DWORD *)this + 14) = v39;
        }
        v29 = (unsigned char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        if ((unint64_t)v29 >= v19) {
          goto LABEL_2;
        }
        int v40 = *v29;
      }
      while (v40 == 42);
      if (v40 != 48) {
        continue;
      }
      v20 = v29 + 1;
      *((void *)this + 1) = v20;
LABEL_79:
      if ((unint64_t)v20 >= v19 || (char)*v20 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
        if (result)
        {
          v41 = (unsigned char *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
          goto LABEL_84;
        }
        return result;
      }
      *uint64_t v8 = *v20;
      v41 = v20 + 1;
      *((void *)this + 1) = v41;
LABEL_84:
      a1[17] |= 0x20u;
      if ((unint64_t)v41 < v19 && *v41 == 56)
      {
        v21 = v41 + 1;
        *((void *)this + 1) = v21;
LABEL_87:
        unsigned int v49 = 0;
        if ((unint64_t)v21 < v19 && (*v21 & 0x80000000) == 0)
        {
          unsigned int v42 = *v21;
          *((void *)this + 1) = v21 + 1;
          goto LABEL_92;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49);
        if (!result) {
          return result;
        }
        unsigned int v42 = v49;
LABEL_92:
        if (v42 <= 5)
        {
          a1[17] |= 0x40u;
          a1[13] = v42;
        }
        v43 = (unsigned char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        if ((unint64_t)v43 < v22 && *v43 == 64)
        {
          v23 = v43 + 1;
          *((void *)this + 1) = v23;
LABEL_97:
          unsigned int v48 = 0;
          if ((unint64_t)v23 < v22 && (*v23 & 0x80000000) == 0)
          {
            unsigned int v44 = *v23;
            *((void *)this + 1) = v23 + 1;
            goto LABEL_102;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48);
          if (!result) {
            return result;
          }
          unsigned int v44 = v48;
LABEL_102:
          if (v44 <= 6)
          {
            a1[17] |= 0x80u;
            a1[14] = v44;
          }
          v45 = (unsigned char *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          if ((unint64_t)v45 < v24 && *v45 == 72) {
            break;
          }
        }
      }
    }
    v25 = v45 + 1;
    *((void *)this + 1) = v25;
LABEL_107:
    if ((unint64_t)v25 >= v24 || (char)*v25 < 0) {
      break;
    }
    *int v9 = *v25;
    v46 = (char *)(v25 + 1);
    *((void *)this + 1) = v46;
LABEL_112:
    a1[17] |= 0x100u;
    if (v46 == (char *)v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
  if (result)
  {
    v46 = (char *)*((void *)this + 1);
    unint64_t v24 = *((void *)this + 2);
    goto LABEL_112;
  }
  return result;
}

uint64_t sub_24B449A28(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 68);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 8) != 0) {
LABEL_5:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v8 = *(_DWORD *)(v5 + 68);
  if ((v8 & 0x20) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
    int v8 = *(_DWORD *)(v5 + 68);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0) {
        goto LABEL_12;
      }
LABEL_20:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
      if ((*(_DWORD *)(v5 + 68) & 0x100) == 0) {
        return result;
      }
      goto LABEL_21;
    }
  }
  else if ((v8 & 0x40) == 0)
  {
    goto LABEL_11;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 68);
  if ((v8 & 0x80) != 0) {
    goto LABEL_20;
  }
LABEL_12:
  if ((v8 & 0x100) == 0) {
    return result;
  }
LABEL_21:
  uint64_t v9 = *(unsigned int *)(v5 + 60);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v9, (uint64_t)a2, a4);
}

uint64_t sub_24B449B80(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 68);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_50;
    }
    goto LABEL_46;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v5 = 1;
  }
  int v3 = v5 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_11:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      int v2 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      int v7 = 1;
    }
    v3 += v7 + 1;
  }
LABEL_15:
  if ((v2 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      int v2 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      int v9 = 2;
    }
    v3 += v9;
    if ((v2 & 8) == 0)
    {
LABEL_17:
      if ((v2 & 0x20) == 0) {
        goto LABEL_18;
      }
      goto LABEL_30;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_17;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v11 = 2;
  }
  v3 += v11;
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_30:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_34:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x80) == 0)
  {
LABEL_20:
    if ((v2 & 0x100) == 0) {
      goto LABEL_50;
    }
    goto LABEL_46;
  }
LABEL_40:
  unsigned int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v16 & 0x80000000) != 0)
  {
    int v17 = 11;
  }
  else if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    int v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v17 = 2;
  }
  v3 += v17;
  if ((v2 & 0x100) != 0)
  {
LABEL_46:
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v18 >= 0x80) {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    }
    else {
      int v19 = 2;
    }
    v3 += v19;
  }
LABEL_50:
  int v20 = *(_DWORD *)(a1 + 32);
  uint64_t v21 = (v20 + v3);
  if (v20 >= 1)
  {
    uint64_t v22 = 0;
    do
    {
      v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B448D94(*(void *)(*(void *)(a1 + 24) + 8 * v22));
      int v24 = (int)v23;
      if (v23 >= 0x80) {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
      }
      else {
        int v25 = 1;
      }
      uint64_t v21 = (v24 + v21 + v25);
      ++v22;
    }
    while (v22 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 64) = v21;
  return v21;
}

void sub_24B449D90(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE84510, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B448F64(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B449E34()
{
  return 1;
}

void *sub_24B449E3C@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.GpsReferenceTime");
}

void sub_24B449E4C(_DWORD *a1, _DWORD *a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  int v4 = a2[17];
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v7 = a2[2];
    a1[17] |= 1u;
    a1[2] = v7;
    int v4 = a2[17];
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = a2[3];
  a1[17] |= 2u;
  a1[3] = v8;
  int v4 = a2[17];
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v9 = a2[4];
  a1[17] |= 4u;
  a1[4] = v9;
  int v4 = a2[17];
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v10 = a2[5];
  a1[17] |= 8u;
  a1[5] = v10;
  int v4 = a2[17];
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_27:
    int v12 = a2[7];
    a1[17] |= 0x20u;
    a1[7] = v12;
    int v4 = a2[17];
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_26:
  int v11 = a2[6];
  a1[17] |= 0x10u;
  a1[6] = v11;
  int v4 = a2[17];
  if ((v4 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_28:
  int v13 = a2[8];
  a1[17] |= 0x40u;
  a1[8] = v13;
  int v4 = a2[17];
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = a2[9];
    a1[17] |= 0x80u;
    a1[9] = v5;
    int v4 = a2[17];
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v14 = a2[10];
    a1[17] |= 0x100u;
    a1[10] = v14;
    int v4 = a2[17];
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_32;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v15 = a2[11];
  a1[17] |= 0x200u;
  a1[11] = v15;
  int v4 = a2[17];
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v16 = a2[12];
  a1[17] |= 0x400u;
  a1[12] = v16;
  int v4 = a2[17];
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }
LABEL_33:
  unsigned int v17 = a2[13];
  if (v17 >= 6) {
    __assert_rtn("set_session_protocol", "GnssEmergencyTypes.pb.h", 23657, "::CoreGem::proto::gnss::Emergency::SessionProtocol_IsValid(value)");
  }
  a1[17] |= 0x800u;
  a1[13] = v17;
  int v4 = a2[17];
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      return;
    }
    goto LABEL_20;
  }
LABEL_35:
  unsigned int v18 = a2[14];
  if (v18 >= 7) {
    __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 23680, "::CoreGem::proto::gnss::Emergency::PosProtocol_IsValid(value)");
  }
  a1[17] |= 0x1000u;
  a1[14] = v18;
  if ((a2[17] & 0x2000) != 0)
  {
LABEL_20:
    int v6 = a2[15];
    a1[17] |= 0x2000u;
    a1[15] = v6;
  }
}

void sub_24B44A0DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B44A0F4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE83590;
  sub_24B419CD4();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B44A150(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B44A0F4(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B44A188()
{
}

uint64_t sub_24B44A1E4(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 68);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0;
    *(void *)(result + 56) = 0;
  }
  *(_DWORD *)(result + 68) = 0;
  return result;
}

uint64_t sub_24B44A214(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int v50 = a1 + 2;
  v51 = a1 + 3;
  v52 = a1 + 4;
  int v4 = a1 + 5;
  int v5 = a1 + 7;
  int v6 = a1 + 8;
  int v7 = a1 + 9;
  int v8 = a1 + 10;
  int v9 = a1 + 11;
  int v10 = a1 + 12;
  int v11 = a1 + 15;
  while (2)
  {
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          *unsigned int v50 = *v16;
          unsigned int v17 = v16 + 1;
          *((void *)this + 1) = v17;
LABEL_44:
          a1[17] |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            unsigned int v18 = v17 + 1;
            *((void *)this + 1) = v18;
            goto LABEL_47;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v50);
        if (result)
        {
          unsigned int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          goto LABEL_44;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_47:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v51);
          if (!result) {
            return result;
          }
          v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v51 = *v18;
          v33 = v18 + 1;
          *((void *)this + 1) = v33;
        }
        a1[17] |= 2u;
        if ((unint64_t)v33 >= v15 || *v33 != 24) {
          continue;
        }
        int v19 = v33 + 1;
        *((void *)this + 1) = v19;
LABEL_55:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v52);
          if (!result) {
            return result;
          }
          v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v52 = *v19;
          v34 = v19 + 1;
          *((void *)this + 1) = v34;
        }
        a1[17] |= 4u;
        if ((unint64_t)v34 >= v15 || *v34 != 32) {
          continue;
        }
        int v20 = v34 + 1;
        *((void *)this + 1) = v20;
LABEL_63:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v4 = *v20;
          int v35 = v20 + 1;
          *((void *)this + 1) = v35;
        }
        a1[17] |= 8u;
        if ((unint64_t)v35 >= v15 || *v35 != 40) {
          continue;
        }
        uint64_t v21 = v35 + 1;
        *((void *)this + 1) = v21;
LABEL_71:
        unsigned int v53 = 0;
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53);
          if (!result) {
            return result;
          }
          unsigned int v36 = v53;
          int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v36 = *v21;
          int v37 = v21 + 1;
          *((void *)this + 1) = v37;
        }
        a1[6] = v36;
        a1[17] |= 0x10u;
        if ((unint64_t)v37 >= v15 || *v37 != 48) {
          continue;
        }
        uint64_t v22 = v37 + 1;
        *((void *)this + 1) = v22;
LABEL_79:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          BOOL v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v22;
          BOOL v38 = v22 + 1;
          *((void *)this + 1) = v38;
        }
        a1[17] |= 0x20u;
        if ((unint64_t)v38 >= v15 || *v38 != 56) {
          continue;
        }
        v23 = v38 + 1;
        *((void *)this + 1) = v23;
LABEL_87:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v23;
          int v39 = v23 + 1;
          *((void *)this + 1) = v39;
        }
        a1[17] |= 0x40u;
        if ((unint64_t)v39 >= v15 || *v39 != 64) {
          continue;
        }
        int v24 = v39 + 1;
        *((void *)this + 1) = v24;
LABEL_95:
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v24;
          int v40 = v24 + 1;
          *((void *)this + 1) = v40;
        }
        a1[17] |= 0x80u;
        if ((unint64_t)v40 >= v15 || *v40 != 72) {
          continue;
        }
        int v25 = v40 + 1;
        *((void *)this + 1) = v25;
LABEL_103:
        if ((unint64_t)v25 >= v15 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          v41 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v25;
          v41 = v25 + 1;
          *((void *)this + 1) = v41;
        }
        a1[17] |= 0x100u;
        if ((unint64_t)v41 >= v15 || *v41 != 80) {
          continue;
        }
        v26 = v41 + 1;
        *((void *)this + 1) = v26;
LABEL_111:
        if ((unint64_t)v26 >= v15 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v42 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v26;
          unsigned int v42 = v26 + 1;
          *((void *)this + 1) = v42;
        }
        a1[17] |= 0x200u;
        if ((unint64_t)v42 >= v15 || *v42 != 88) {
          continue;
        }
        v27 = v42 + 1;
        *((void *)this + 1) = v27;
LABEL_119:
        if ((unint64_t)v27 >= v15 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v27;
          v43 = v27 + 1;
          *((void *)this + 1) = v43;
        }
        a1[17] |= 0x400u;
        if ((unint64_t)v43 >= v15 || *v43 != 96) {
          continue;
        }
        v28 = v43 + 1;
        *((void *)this + 1) = v28;
LABEL_127:
        unsigned int v55 = 0;
        if ((unint64_t)v28 >= v15 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55);
          if (!result) {
            return result;
          }
          unsigned int v44 = v55;
        }
        else
        {
          unsigned int v44 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        if (v44 <= 5)
        {
          a1[17] |= 0x800u;
          a1[13] = v44;
        }
        v45 = (unsigned char *)*((void *)this + 1);
        unint64_t v29 = *((void *)this + 2);
        if ((unint64_t)v45 >= v29 || *v45 != 104) {
          continue;
        }
        int v30 = v45 + 1;
        *((void *)this + 1) = v30;
LABEL_137:
        unsigned int v54 = 0;
        if ((unint64_t)v30 >= v29 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54);
          if (!result) {
            return result;
          }
          unsigned int v46 = v54;
        }
        else
        {
          unsigned int v46 = *v30;
          *((void *)this + 1) = v30 + 1;
        }
        if (v46 <= 6)
        {
          a1[17] |= 0x1000u;
          a1[14] = v46;
        }
        v47 = (unsigned char *)*((void *)this + 1);
        unint64_t v31 = *((void *)this + 2);
        if ((unint64_t)v47 >= v31 || *v47 != 112) {
          continue;
        }
        uint64_t v32 = v47 + 1;
        *((void *)this + 1) = v32;
LABEL_147:
        if ((unint64_t)v32 >= v31 || *v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          unsigned int v48 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v31 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v32;
          unsigned int v48 = (unsigned __int8 *)(v32 + 1);
          *((void *)this + 1) = v48;
        }
        a1[17] |= 0x2000u;
        if (v48 != (unsigned __int8 *)v31 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_55;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_63;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_71;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_79;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        v23 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_87;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_95;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v25 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_103;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        v26 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_111;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        v27 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_119;
      case 0xCu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        v28 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_127;
      case 0xDu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v30 = (char *)*((void *)this + 1);
        unint64_t v29 = *((void *)this + 2);
        goto LABEL_137;
      case 0xEu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v32 = (char *)*((void *)this + 1);
        unint64_t v31 = *((void *)this + 2);
        goto LABEL_147;
      default:
        int v14 = TagFallback & 7;
LABEL_38:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

unsigned int *sub_24B44A9CC(unsigned int *result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  unsigned int v6 = result[17];
  if (v6)
  {
    uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    unsigned int v6 = v5[17];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
    if ((v5[17] & 0x2000) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  unsigned int v6 = v5[17];
  if ((v6 & 0x1000) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v6 & 0x2000) == 0) {
    return result;
  }
LABEL_29:
  uint64_t v7 = v5[15];
  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v7, a2, a4);
}

uint64_t sub_24B44AB8C(unsigned int *a1)
{
  unsigned int v2 = a1[17];
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_47;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    unsigned int v2 = a1[17];
  }
  else
  {
    int v5 = 1;
  }
  uint64_t v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_10:
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      unsigned int v2 = a1[17];
    }
    else
    {
      int v7 = 1;
    }
    uint64_t v3 = (v3 + v7 + 1);
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      unsigned int v2 = a1[17];
    }
    else
    {
      int v9 = 1;
    }
    uint64_t v3 = (v3 + v9 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    unsigned int v2 = a1[17];
  }
  else
  {
    int v11 = 1;
  }
  uint64_t v3 = (v3 + v11 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_29:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 10;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    unsigned int v2 = a1[17];
  }
  else
  {
    int v13 = 1;
  }
  uint64_t v3 = (v3 + v13 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_35:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    unsigned int v2 = a1[17];
  }
  else
  {
    int v15 = 1;
  }
  uint64_t v3 = (v3 + v15 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_39:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    unsigned int v2 = a1[17];
  }
  else
  {
    int v17 = 1;
  }
  uint64_t v3 = (v3 + v17 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_43:
    unsigned int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      unsigned int v2 = a1[17];
    }
    else
    {
      int v19 = 2;
    }
    uint64_t v3 = (v19 + v3);
  }
LABEL_47:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_83;
  }
  if ((v2 & 0x100) != 0)
  {
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      unsigned int v2 = a1[17];
    }
    else
    {
      int v21 = 2;
    }
    uint64_t v3 = (v21 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_50:
      if ((v2 & 0x400) == 0) {
        goto LABEL_51;
      }
      goto LABEL_63;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_50;
  }
  uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    unsigned int v2 = a1[17];
  }
  else
  {
    int v23 = 2;
  }
  uint64_t v3 = (v23 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_51:
    if ((v2 & 0x800) == 0) {
      goto LABEL_52;
    }
    goto LABEL_67;
  }
LABEL_63:
  int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
  if (v24 >= 0x80)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    unsigned int v2 = a1[17];
  }
  else
  {
    int v25 = 2;
  }
  uint64_t v3 = (v25 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_52:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_73;
  }
LABEL_67:
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[13];
  if ((v26 & 0x80000000) != 0)
  {
    int v27 = 11;
  }
  else if (v26 >= 0x80)
  {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    unsigned int v2 = a1[17];
  }
  else
  {
    int v27 = 2;
  }
  uint64_t v3 = (v27 + v3);
  if ((v2 & 0x1000) == 0)
  {
LABEL_53:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_79;
  }
LABEL_73:
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[14];
  if ((v28 & 0x80000000) != 0)
  {
    int v29 = 11;
  }
  else if (v28 >= 0x80)
  {
    int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    unsigned int v2 = a1[17];
  }
  else
  {
    int v29 = 2;
  }
  uint64_t v3 = (v29 + v3);
  if ((v2 & 0x2000) != 0)
  {
LABEL_79:
    int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[15];
    if (v30 >= 0x80) {
      int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 1;
    }
    else {
      int v31 = 2;
    }
    uint64_t v3 = (v31 + v3);
  }
LABEL_83:
  a1[16] = v3;
  return v3;
}

void sub_24B44AE58(_DWORD *a1, _DWORD *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE84528, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B449E4C(a1, lpsrc);
}

uint64_t sub_24B44AEFC()
{
  return 1;
}

void *sub_24B44AF04@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.ReferenceLocation");
}

void sub_24B44AF14(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v40);
  }
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v11 = *(_DWORD *)(a2 + 8);
    a1[37] |= 1u;
    a1[2] = v11;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_50;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v12 = *(_DWORD *)(a2 + 12);
  a1[37] |= 2u;
  a1[3] = v12;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v13 = *(_DWORD *)(a2 + 16);
  a1[37] |= 4u;
  a1[4] = v13;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v14 = *(_DWORD *)(a2 + 20);
  a1[37] |= 8u;
  a1[5] = v14;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_53:
    int v16 = *(_DWORD *)(a2 + 28);
    a1[37] |= 0x20u;
    a1[7] = v16;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_54;
  }
LABEL_52:
  int v15 = *(_DWORD *)(a2 + 24);
  a1[37] |= 0x10u;
  a1[6] = v15;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x20) != 0) {
    goto LABEL_53;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_54:
  int v17 = *(_DWORD *)(a2 + 32);
  a1[37] |= 0x40u;
  a1[8] = v17;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 36);
    a1[37] |= 0x80u;
    a1[9] = v5;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v4 & 0x100) != 0)
  {
    int v18 = *(_DWORD *)(a2 + 40);
    a1[37] |= 0x100u;
    a1[10] = v18;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_58;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v19 = *(_DWORD *)(a2 + 44);
  a1[37] |= 0x200u;
  a1[11] = v19;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v20 = *(_DWORD *)(a2 + 48);
  a1[37] |= 0x400u;
  a1[12] = v20;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v21 = *(_DWORD *)(a2 + 52);
  a1[37] |= 0x800u;
  a1[13] = v21;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v22 = *(_DWORD *)(a2 + 56);
  a1[37] |= 0x1000u;
  a1[14] = v22;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v23 = *(_DWORD *)(a2 + 60);
  a1[37] |= 0x2000u;
  a1[15] = v23;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_62:
  int v24 = *(_DWORD *)(a2 + 64);
  a1[37] |= 0x4000u;
  a1[16] = v24;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x8000) != 0)
  {
LABEL_22:
    int v6 = *(_DWORD *)(a2 + 68);
    a1[37] |= 0x8000u;
    a1[17] = v6;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
  }
LABEL_23:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_33;
  }
  if ((v4 & 0x10000) != 0)
  {
    int v25 = *(_DWORD *)(a2 + 72);
    a1[37] |= 0x10000u;
    a1[18] = v25;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x20000) == 0)
    {
LABEL_26:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_66;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  int v26 = *(_DWORD *)(a2 + 76);
  a1[37] |= 0x20000u;
  a1[19] = v26;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x40000) == 0)
  {
LABEL_27:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v27 = *(_DWORD *)(a2 + 80);
  a1[37] |= 0x40000u;
  a1[20] = v27;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x80000) == 0)
  {
LABEL_28:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v28 = *(_DWORD *)(a2 + 84);
  a1[37] |= 0x80000u;
  a1[21] = v28;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x100000) == 0)
  {
LABEL_29:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_69;
  }
LABEL_68:
  int v29 = *(_DWORD *)(a2 + 88);
  a1[37] |= 0x100000u;
  a1[22] = v29;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x200000) == 0)
  {
LABEL_30:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v30 = *(_DWORD *)(a2 + 92);
  a1[37] |= 0x200000u;
  a1[23] = v30;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x400000) == 0)
  {
LABEL_31:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
LABEL_70:
  int v31 = *(_DWORD *)(a2 + 96);
  a1[37] |= 0x400000u;
  a1[24] = v31;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x800000) != 0)
  {
LABEL_32:
    int v7 = *(_DWORD *)(a2 + 100);
    a1[37] |= 0x800000u;
    a1[25] = v7;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
  }
LABEL_33:
  if (!HIBYTE(v4)) {
    goto LABEL_42;
  }
  if ((v4 & 0x1000000) != 0)
  {
    int v32 = *(_DWORD *)(a2 + 104);
    a1[37] |= 0x1000000u;
    a1[26] = v32;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_36:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_37;
      }
      goto LABEL_74;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_36;
  }
  int v33 = *(_DWORD *)(a2 + 108);
  a1[37] |= 0x2000000u;
  a1[27] = v33;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_37:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v34 = *(_DWORD *)(a2 + 112);
  a1[37] |= 0x4000000u;
  a1[28] = v34;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_38:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_76;
  }
LABEL_75:
  int v35 = *(_DWORD *)(a2 + 116);
  a1[37] |= 0x8000000u;
  a1[29] = v35;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_77;
  }
LABEL_76:
  int v36 = *(_DWORD *)(a2 + 120);
  a1[37] |= 0x10000000u;
  a1[30] = v36;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_41;
    }
LABEL_78:
    int v38 = *(_DWORD *)(a2 + 128);
    a1[37] |= 0x40000000u;
    a1[32] = v38;
    if ((*(_DWORD *)(a2 + 148) & 0x80000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_79;
  }
LABEL_77:
  int v37 = *(_DWORD *)(a2 + 124);
  a1[37] |= 0x20000000u;
  a1[31] = v37;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x40000000) != 0) {
    goto LABEL_78;
  }
LABEL_41:
  if ((v4 & 0x80000000) == 0) {
    goto LABEL_42;
  }
LABEL_79:
  int v39 = *(_DWORD *)(a2 + 132);
  a1[37] |= 0x80000000;
  a1[33] = v39;
LABEL_42:
  LOBYTE(v8) = *(unsigned char *)(a2 + 152);
  if ((_BYTE)v8)
  {
    if (*(unsigned char *)(a2 + 152))
    {
      int v9 = *(_DWORD *)(a2 + 136);
      a1[38] |= 1u;
      a1[34] = v9;
      int v8 = *(_DWORD *)(a2 + 152);
    }
    if ((v8 & 2) != 0)
    {
      int v10 = *(_DWORD *)(a2 + 140);
      a1[38] |= 2u;
      a1[35] = v10;
    }
  }
}

void sub_24B44B3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B44B3F8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE83608;
  sub_24B419CD4();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B44B454(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B44B3F8(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B44B48C()
{
}

uint64_t sub_24B44B500(uint64_t result)
{
  unsigned int v1 = *(_DWORD *)(result + 148);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
  }
  if (HIBYTE(v1))
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
  }
  if (*(unsigned char *)(result + 152)) {
    *(void *)(result + 136) = 0;
  }
  *(void *)(result + 148) = 0;
  return result;
}

uint64_t sub_24B44B568(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  unsigned int v4 = a1 + 4;
  int v5 = a1 + 5;
  int v6 = a1 + 10;
  int v7 = a1 + 11;
  int v8 = a1 + 17;
  v110 = a1 + 23;
  v111 = a1 + 22;
  v108 = a1 + 26;
  v109 = a1 + 24;
  v106 = a1 + 28;
  v107 = a1 + 27;
  v104 = a1 + 31;
  v105 = a1 + 30;
  v103 = a1 + 32;
  int v9 = a1 + 33;
  int v10 = a1 + 34;
  int v11 = a1 + 35;
  while (2)
  {
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v112 = 0;
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unsigned int v17 = *v16;
          int v18 = v16 + 1;
          *((void *)this + 1) = v18;
LABEL_84:
          a1[2] = v17;
          a1[37] |= 1u;
          if ((unint64_t)v18 < v15 && *v18 == 16)
          {
            int v19 = v18 + 1;
            *((void *)this + 1) = v19;
            goto LABEL_87;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
        if (result)
        {
          unsigned int v17 = v112;
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          goto LABEL_84;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_87:
        unsigned int v112 = 0;
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v53 = v112;
          unsigned int v54 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v53 = *v19;
          unsigned int v54 = v19 + 1;
          *((void *)this + 1) = v54;
        }
        a1[3] = v53;
        a1[37] |= 2u;
        if ((unint64_t)v54 >= v15 || *v54 != 24) {
          continue;
        }
        int v20 = v54 + 1;
        *((void *)this + 1) = v20;
LABEL_95:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!result) {
            return result;
          }
          unsigned int v55 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v4 = *v20;
          unsigned int v55 = v20 + 1;
          *((void *)this + 1) = v55;
        }
        a1[37] |= 4u;
        if ((unint64_t)v55 >= v15 || *v55 != 32) {
          continue;
        }
        int v21 = v55 + 1;
        *((void *)this + 1) = v21;
LABEL_103:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          v56 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v21;
          v56 = v21 + 1;
          *((void *)this + 1) = v56;
        }
        a1[37] |= 8u;
        if ((unint64_t)v56 >= v15 || *v56 != 40) {
          continue;
        }
        int v22 = v56 + 1;
        *((void *)this + 1) = v22;
LABEL_111:
        unsigned int v112 = 0;
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v57 = v112;
          v58 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v57 = *v22;
          v58 = v22 + 1;
          *((void *)this + 1) = v58;
        }
        a1[6] = v57;
        a1[37] |= 0x10u;
        if ((unint64_t)v58 >= v15 || *v58 != 48) {
          continue;
        }
        int v23 = v58 + 1;
        *((void *)this + 1) = v23;
LABEL_119:
        unsigned int v112 = 0;
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v59 = v112;
          v60 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v59 = *v23;
          v60 = v23 + 1;
          *((void *)this + 1) = v60;
        }
        a1[7] = v59;
        a1[37] |= 0x20u;
        if ((unint64_t)v60 >= v15 || *v60 != 56) {
          continue;
        }
        int v24 = v60 + 1;
        *((void *)this + 1) = v24;
LABEL_127:
        unsigned int v112 = 0;
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v61 = v112;
          v62 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v61 = *v24;
          v62 = v24 + 1;
          *((void *)this + 1) = v62;
        }
        a1[8] = v61;
        a1[37] |= 0x40u;
        if ((unint64_t)v62 >= v15 || *v62 != 64) {
          continue;
        }
        int v25 = v62 + 1;
        *((void *)this + 1) = v25;
LABEL_135:
        unsigned int v112 = 0;
        if ((unint64_t)v25 >= v15 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v63 = v112;
          v64 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v63 = *v25;
          v64 = v25 + 1;
          *((void *)this + 1) = v64;
        }
        a1[9] = v63;
        a1[37] |= 0x80u;
        if ((unint64_t)v64 >= v15 || *v64 != 72) {
          continue;
        }
        int v26 = v64 + 1;
        *((void *)this + 1) = v26;
LABEL_143:
        if ((unint64_t)v26 >= v15 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          v65 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v26;
          v65 = v26 + 1;
          *((void *)this + 1) = v65;
        }
        a1[37] |= 0x100u;
        if ((unint64_t)v65 >= v15 || *v65 != 80) {
          continue;
        }
        int v27 = v65 + 1;
        *((void *)this + 1) = v27;
LABEL_151:
        if ((unint64_t)v27 >= v15 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          v66 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v27;
          v66 = v27 + 1;
          *((void *)this + 1) = v66;
        }
        a1[37] |= 0x200u;
        if ((unint64_t)v66 >= v15 || *v66 != 88) {
          continue;
        }
        int v28 = v66 + 1;
        *((void *)this + 1) = v28;
LABEL_159:
        unsigned int v112 = 0;
        if ((unint64_t)v28 >= v15 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v67 = v112;
          v68 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v67 = *v28;
          v68 = v28 + 1;
          *((void *)this + 1) = v68;
        }
        a1[12] = v67;
        a1[37] |= 0x400u;
        if ((unint64_t)v68 >= v15 || *v68 != 96) {
          continue;
        }
        int v29 = v68 + 1;
        *((void *)this + 1) = v29;
LABEL_167:
        unsigned int v112 = 0;
        if ((unint64_t)v29 >= v15 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v69 = v112;
          v70 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v69 = *v29;
          v70 = v29 + 1;
          *((void *)this + 1) = v70;
        }
        a1[13] = v69;
        a1[37] |= 0x800u;
        if ((unint64_t)v70 >= v15 || *v70 != 104) {
          continue;
        }
        int v30 = v70 + 1;
        *((void *)this + 1) = v30;
LABEL_175:
        unsigned int v112 = 0;
        if ((unint64_t)v30 >= v15 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v71 = v112;
          v72 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v71 = *v30;
          v72 = v30 + 1;
          *((void *)this + 1) = v72;
        }
        a1[14] = v71;
        a1[37] |= 0x1000u;
        if ((unint64_t)v72 >= v15 || *v72 != 112) {
          continue;
        }
        int v31 = v72 + 1;
        *((void *)this + 1) = v31;
LABEL_183:
        unsigned int v112 = 0;
        if ((unint64_t)v31 >= v15 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v73 = v112;
          v74 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v73 = *v31;
          v74 = v31 + 1;
          *((void *)this + 1) = v74;
        }
        a1[15] = v73;
        a1[37] |= 0x2000u;
        if ((unint64_t)v74 >= v15 || *v74 != 120) {
          continue;
        }
        int v32 = v74 + 1;
        *((void *)this + 1) = v32;
LABEL_191:
        unsigned int v112 = 0;
        if ((unint64_t)v32 >= v15 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v75 = v112;
          v76 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v75 = *v32;
          v76 = v32 + 1;
          *((void *)this + 1) = v76;
        }
        a1[16] = v75;
        a1[37] |= 0x4000u;
        if ((int)v15 - (int)v76 < 2 || *v76 != 128 || v76[1] != 1) {
          continue;
        }
        int v33 = v76 + 2;
        *((void *)this + 1) = v33;
LABEL_200:
        if ((unint64_t)v33 >= v15 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          v77 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v33;
          v77 = v33 + 1;
          *((void *)this + 1) = v77;
        }
        a1[37] |= 0x8000u;
        if ((int)v15 - (int)v77 < 2 || *v77 != 136 || v77[1] != 1) {
          continue;
        }
        int v34 = v77 + 2;
        *((void *)this + 1) = v34;
LABEL_209:
        unsigned int v112 = 0;
        if ((unint64_t)v34 >= v15 || (char)*v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v78 = v112;
          v79 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v78 = *v34;
          v79 = v34 + 1;
          *((void *)this + 1) = v79;
        }
        a1[18] = v78;
        a1[37] |= 0x10000u;
        if ((int)v15 - (int)v79 < 2 || *v79 != 144 || v79[1] != 1) {
          continue;
        }
        int v35 = v79 + 2;
        *((void *)this + 1) = v35;
LABEL_218:
        unsigned int v112 = 0;
        if ((unint64_t)v35 >= v15 || (char)*v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v80 = v112;
          v81 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v80 = *v35;
          v81 = v35 + 1;
          *((void *)this + 1) = v81;
        }
        a1[19] = v80;
        a1[37] |= 0x20000u;
        if ((int)v15 - (int)v81 < 2 || *v81 != 152 || v81[1] != 1) {
          continue;
        }
        int v36 = v81 + 2;
        *((void *)this + 1) = v36;
LABEL_227:
        unsigned int v112 = 0;
        if ((unint64_t)v36 >= v15 || (char)*v36 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v82 = v112;
          v83 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v82 = *v36;
          v83 = v36 + 1;
          *((void *)this + 1) = v83;
        }
        a1[20] = v82;
        a1[37] |= 0x40000u;
        if ((int)v15 - (int)v83 < 2 || *v83 != 160 || v83[1] != 1) {
          continue;
        }
        int v37 = v83 + 2;
        *((void *)this + 1) = v37;
LABEL_236:
        unsigned int v112 = 0;
        if ((unint64_t)v37 >= v15 || (char)*v37 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v84 = v112;
          v85 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v84 = *v37;
          v85 = v37 + 1;
          *((void *)this + 1) = v85;
        }
        a1[21] = v84;
        a1[37] |= 0x80000u;
        if ((int)v15 - (int)v85 < 2 || *v85 != 168 || v85[1] != 1) {
          continue;
        }
        int v38 = v85 + 2;
        *((void *)this + 1) = v38;
LABEL_245:
        if ((unint64_t)v38 >= v15 || (char)*v38 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v111);
          if (!result) {
            return result;
          }
          v86 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v111 = *v38;
          v86 = v38 + 1;
          *((void *)this + 1) = v86;
        }
        a1[37] |= 0x100000u;
        if ((int)v15 - (int)v86 < 2 || *v86 != 176 || v86[1] != 1) {
          continue;
        }
        int v39 = v86 + 2;
        *((void *)this + 1) = v39;
LABEL_254:
        if ((unint64_t)v39 >= v15 || (char)*v39 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v110);
          if (!result) {
            return result;
          }
          v87 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v110 = *v39;
          v87 = v39 + 1;
          *((void *)this + 1) = v87;
        }
        a1[37] |= 0x200000u;
        if ((int)v15 - (int)v87 < 2 || *v87 != 184 || v87[1] != 1) {
          continue;
        }
        int v40 = v87 + 2;
        *((void *)this + 1) = v40;
LABEL_263:
        if ((unint64_t)v40 >= v15 || (char)*v40 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v109);
          if (!result) {
            return result;
          }
          v88 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v109 = *v40;
          v88 = v40 + 1;
          *((void *)this + 1) = v88;
        }
        a1[37] |= 0x400000u;
        if ((int)v15 - (int)v88 < 2 || *v88 != 192 || v88[1] != 1) {
          continue;
        }
        v41 = v88 + 2;
        *((void *)this + 1) = v41;
LABEL_272:
        unsigned int v112 = 0;
        if ((unint64_t)v41 >= v15 || (char)*v41 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v89 = v112;
          v90 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v89 = *v41;
          v90 = v41 + 1;
          *((void *)this + 1) = v90;
        }
        a1[25] = v89;
        a1[37] |= 0x800000u;
        if ((int)v15 - (int)v90 < 2 || *v90 != 200 || v90[1] != 1) {
          continue;
        }
        unsigned int v42 = v90 + 2;
        *((void *)this + 1) = v42;
LABEL_281:
        unint64_t v43 = *((void *)this + 2);
        if ((unint64_t)v42 >= v43 || (char)*v42 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          v91 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v108 = *v42;
          v91 = v42 + 1;
          *((void *)this + 1) = v91;
        }
        a1[37] |= 0x1000000u;
        if ((int)v43 - (int)v91 < 2 || *v91 != 208 || v91[1] != 1) {
          continue;
        }
        unsigned int v44 = v91 + 2;
        *((void *)this + 1) = v44;
LABEL_290:
        if ((unint64_t)v44 >= v43 || (char)*v44 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v107);
          if (!result) {
            return result;
          }
          v92 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v107 = *v44;
          v92 = v44 + 1;
          *((void *)this + 1) = v92;
        }
        a1[37] |= 0x2000000u;
        if ((int)v43 - (int)v92 < 2 || *v92 != 216 || v92[1] != 1) {
          continue;
        }
        v45 = v92 + 2;
        *((void *)this + 1) = v45;
LABEL_299:
        if ((unint64_t)v45 >= v43 || (char)*v45 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106);
          if (!result) {
            return result;
          }
          v93 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v106 = *v45;
          v93 = v45 + 1;
          *((void *)this + 1) = v93;
        }
        a1[37] |= 0x4000000u;
        if ((int)v43 - (int)v93 < 2 || *v93 != 224 || v93[1] != 1) {
          continue;
        }
        unsigned int v46 = v93 + 2;
        *((void *)this + 1) = v46;
LABEL_308:
        unsigned int v112 = 0;
        if ((unint64_t)v46 >= v43 || (char)*v46 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v112);
          if (!result) {
            return result;
          }
          unsigned int v94 = v112;
          v95 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
        }
        else
        {
          unsigned int v94 = *v46;
          v95 = v46 + 1;
          *((void *)this + 1) = v95;
        }
        a1[29] = v94;
        a1[37] |= 0x8000000u;
        if ((int)v43 - (int)v95 < 2 || *v95 != 232 || v95[1] != 1) {
          continue;
        }
        v47 = v95 + 2;
        *((void *)this + 1) = v47;
LABEL_317:
        if ((unint64_t)v47 >= v43 || (char)*v47 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v105);
          if (!result) {
            return result;
          }
          v96 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v105 = *v47;
          v96 = v47 + 1;
          *((void *)this + 1) = v96;
        }
        a1[37] |= 0x10000000u;
        if ((int)v43 - (int)v96 < 2 || *v96 != 240 || v96[1] != 1) {
          continue;
        }
        unsigned int v48 = v96 + 2;
        *((void *)this + 1) = v48;
LABEL_326:
        if ((unint64_t)v48 >= v43 || (char)*v48 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v104);
          if (!result) {
            return result;
          }
          v97 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v104 = *v48;
          v97 = v48 + 1;
          *((void *)this + 1) = v97;
        }
        a1[37] |= 0x20000000u;
        if ((int)v43 - (int)v97 < 2 || *v97 != 248 || v97[1] != 1) {
          continue;
        }
        unsigned int v49 = v97 + 2;
        *((void *)this + 1) = v49;
LABEL_335:
        if ((unint64_t)v49 >= v43 || (char)*v49 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v103);
          if (!result) {
            return result;
          }
          v98 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v103 = *v49;
          v98 = v49 + 1;
          *((void *)this + 1) = v98;
        }
        a1[37] |= 0x40000000u;
        if ((int)v43 - (int)v98 < 2 || *v98 != 128 || v98[1] != 2) {
          continue;
        }
        unsigned int v50 = v98 + 2;
        *((void *)this + 1) = v50;
LABEL_344:
        if ((unint64_t)v50 >= v43 || (char)*v50 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          v99 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v50;
          v99 = v50 + 1;
          *((void *)this + 1) = v99;
        }
        a1[37] |= 0x80000000;
        if ((int)v43 - (int)v99 < 2 || *v99 != 136 || v99[1] != 2) {
          continue;
        }
        v51 = v99 + 2;
        *((void *)this + 1) = v51;
LABEL_353:
        if ((unint64_t)v51 >= v43 || (char)*v51 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          v100 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v51;
          v100 = v51 + 1;
          *((void *)this + 1) = v100;
        }
        a1[38] |= 1u;
        if ((int)v43 - (int)v100 < 2 || *v100 != 144 || v100[1] != 2) {
          continue;
        }
        v52 = (char *)(v100 + 2);
        *((void *)this + 1) = v52;
LABEL_362:
        if ((unint64_t)v52 >= v43 || *v52 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          v101 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v52;
          v101 = (unsigned __int8 *)(v52 + 1);
          *((void *)this + 1) = v101;
        }
        a1[38] |= 2u;
        if (v101 != (unsigned __int8 *)v43
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_95;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_103;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_111;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_119;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_127;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v25 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_135;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_143;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_151;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_159;
      case 0xCu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v29 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_167;
      case 0xDu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v30 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_175;
      case 0xEu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v31 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_183;
      case 0xFu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v32 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_191;
      case 0x10u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v33 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_200;
      case 0x11u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v34 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_209;
      case 0x12u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v35 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_218;
      case 0x13u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v36 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_227;
      case 0x14u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v37 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_236;
      case 0x15u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v38 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_245;
      case 0x16u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v39 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_254;
      case 0x17u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v40 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_263;
      case 0x18u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v41 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_272;
      case 0x19u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v42 = (unsigned __int8 *)*((void *)this + 1);
        goto LABEL_281;
      case 0x1Au:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v44 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v43 = *((void *)this + 2);
        goto LABEL_290;
      case 0x1Bu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v45 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v43 = *((void *)this + 2);
        goto LABEL_299;
      case 0x1Cu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v46 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v43 = *((void *)this + 2);
        goto LABEL_308;
      case 0x1Du:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v47 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v43 = *((void *)this + 2);
        goto LABEL_317;
      case 0x1Eu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v48 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v43 = *((void *)this + 2);
        goto LABEL_326;
      case 0x1Fu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v49 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v43 = *((void *)this + 2);
        goto LABEL_335;
      case 0x20u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v50 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v43 = *((void *)this + 2);
        goto LABEL_344;
      case 0x21u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v51 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v43 = *((void *)this + 2);
        goto LABEL_353;
      case 0x22u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        v52 = (char *)*((void *)this + 1);
        unint64_t v43 = *((void *)this + 2);
        goto LABEL_362;
      default:
        int v14 = TagFallback & 7;
LABEL_78:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

unsigned int *sub_24B44C800(unsigned int *result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  unsigned int v6 = result[37];
  if (v6)
  {
    uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    unsigned int v6 = v5[37];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_39;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v5[16], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[17], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v5[18], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v5[19], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v5[20], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v5[21], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v5[22], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v5[23], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v5[24], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v5[25], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v5[26], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v5[27], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v5[28], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v5[29], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v5[30], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
LABEL_67:
    uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, v5[32], a2, a4);
    if ((v5[37] & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_68;
  }
LABEL_66:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v5[31], a2, a4);
  unsigned int v6 = v5[37];
  if ((v6 & 0x40000000) != 0) {
    goto LABEL_67;
  }
LABEL_32:
  if ((v6 & 0x80000000) == 0) {
    goto LABEL_33;
  }
LABEL_68:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, v5[33], a2, a4);
LABEL_33:
  unsigned int v7 = v5[38];
  if (v7)
  {
    uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, v5[34], a2, a4);
    unsigned int v7 = v5[38];
  }
  if ((v7 & 2) != 0)
  {
    uint64_t v8 = v5[35];
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, v8, a2, a4);
  }
  return result;
}

uint64_t sub_24B44CBEC(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 148);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_57;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  unsigned int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v5 = 1;
  }
  uint64_t v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 10;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      unsigned int v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v7 = 1;
    }
    uint64_t v3 = (v3 + v7 + 1);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      unsigned int v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v9 = 1;
    }
    uint64_t v3 = (v3 + v9 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v11 = 1;
  }
  uint64_t v3 = (v3 + v11 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_33:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 10;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v13 = 1;
  }
  uint64_t v3 = (v3 + v13 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_45;
  }
LABEL_39:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 10;
  }
  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v15 = 1;
  }
  uint64_t v3 = (v3 + v15 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0) {
      goto LABEL_57;
    }
    goto LABEL_51;
  }
LABEL_45:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if ((v16 & 0x80000000) != 0)
  {
    int v17 = 10;
  }
  else if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v17 = 1;
  }
  uint64_t v3 = (v3 + v17 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_51:
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if ((v18 & 0x80000000) != 0)
    {
      int v19 = 10;
    }
    else if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      unsigned int v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v19 = 1;
    }
    uint64_t v3 = (v3 + v19 + 1);
  }
LABEL_57:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_109;
  }
  if ((v2 & 0x100) != 0)
  {
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      unsigned int v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v21 = 1;
    }
    uint64_t v3 = (v3 + v21 + 1);
    if ((v2 & 0x200) == 0)
    {
LABEL_60:
      if ((v2 & 0x400) == 0) {
        goto LABEL_61;
      }
      goto LABEL_75;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_60;
  }
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v23 = 1;
  }
  uint64_t v3 = (v3 + v23 + 1);
  if ((v2 & 0x400) == 0)
  {
LABEL_61:
    if ((v2 & 0x800) == 0) {
      goto LABEL_62;
    }
    goto LABEL_81;
  }
LABEL_75:
  int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if ((v24 & 0x80000000) != 0)
  {
    int v25 = 10;
  }
  else if (v24 >= 0x80)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v25 = 1;
  }
  uint64_t v3 = (v3 + v25 + 1);
  if ((v2 & 0x800) == 0)
  {
LABEL_62:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_87;
  }
LABEL_81:
  int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if ((v26 & 0x80000000) != 0)
  {
    int v27 = 10;
  }
  else if (v26 >= 0x80)
  {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v27 = 1;
  }
  uint64_t v3 = (v3 + v27 + 1);
  if ((v2 & 0x1000) == 0)
  {
LABEL_63:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_93;
  }
LABEL_87:
  int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v28 & 0x80000000) != 0)
  {
    int v29 = 10;
  }
  else if (v28 >= 0x80)
  {
    int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v29 = 1;
  }
  uint64_t v3 = (v3 + v29 + 1);
  if ((v2 & 0x2000) == 0)
  {
LABEL_64:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_99;
  }
LABEL_93:
  int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
  if ((v30 & 0x80000000) != 0)
  {
    int v31 = 10;
  }
  else if (v30 >= 0x80)
  {
    int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v31 = 1;
  }
  uint64_t v3 = (v3 + v31 + 1);
  if ((v2 & 0x4000) == 0)
  {
LABEL_65:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_105;
  }
LABEL_99:
  int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
  if ((v32 & 0x80000000) != 0)
  {
    int v33 = 10;
  }
  else if (v32 >= 0x80)
  {
    int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v33 = 1;
  }
  uint64_t v3 = (v3 + v33 + 1);
  if ((v2 & 0x8000) != 0)
  {
LABEL_105:
    int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
    if (v34 >= 0x80)
    {
      int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34);
      unsigned int v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v35 = 1;
    }
    uint64_t v3 = (v3 + v35 + 2);
  }
LABEL_109:
  if ((v2 & 0xFF0000) == 0) {
    goto LABEL_161;
  }
  if ((v2 & 0x10000) != 0)
  {
    int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if ((v36 & 0x80000000) != 0)
    {
      int v37 = 10;
    }
    else if (v36 >= 0x80)
    {
      int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36);
      unsigned int v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v37 = 1;
    }
    uint64_t v3 = (v3 + v37 + 2);
    if ((v2 & 0x20000) == 0)
    {
LABEL_112:
      if ((v2 & 0x40000) == 0) {
        goto LABEL_113;
      }
      goto LABEL_131;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_112;
  }
  int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
  if ((v38 & 0x80000000) != 0)
  {
    int v39 = 10;
  }
  else if (v38 >= 0x80)
  {
    int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v39 = 1;
  }
  uint64_t v3 = (v3 + v39 + 2);
  if ((v2 & 0x40000) == 0)
  {
LABEL_113:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_137;
  }
LABEL_131:
  int v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
  if ((v40 & 0x80000000) != 0)
  {
    int v41 = 10;
  }
  else if (v40 >= 0x80)
  {
    int v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v41 = 1;
  }
  uint64_t v3 = (v3 + v41 + 2);
  if ((v2 & 0x80000) == 0)
  {
LABEL_114:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_143;
  }
LABEL_137:
  unsigned int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
  if ((v42 & 0x80000000) != 0)
  {
    int v43 = 10;
  }
  else if (v42 >= 0x80)
  {
    int v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v43 = 1;
  }
  uint64_t v3 = (v3 + v43 + 2);
  if ((v2 & 0x100000) == 0)
  {
LABEL_115:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_147;
  }
LABEL_143:
  unsigned int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
  if (v44 >= 0x80)
  {
    int v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v45 = 1;
  }
  uint64_t v3 = (v3 + v45 + 2);
  if ((v2 & 0x200000) == 0)
  {
LABEL_116:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_117;
    }
    goto LABEL_151;
  }
LABEL_147:
  unsigned int v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 92);
  if (v46 >= 0x80)
  {
    int v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v47 = 1;
  }
  uint64_t v3 = (v3 + v47 + 2);
  if ((v2 & 0x400000) == 0)
  {
LABEL_117:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_161;
    }
    goto LABEL_155;
  }
LABEL_151:
  unsigned int v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
  if (v48 >= 0x80)
  {
    int v49 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v49 = 1;
  }
  uint64_t v3 = (v3 + v49 + 2);
  if ((v2 & 0x800000) != 0)
  {
LABEL_155:
    unsigned int v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
    if ((v50 & 0x80000000) != 0)
    {
      int v51 = 10;
    }
    else if (v50 >= 0x80)
    {
      int v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50);
      unsigned int v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v51 = 1;
    }
    uint64_t v3 = (v3 + v51 + 2);
  }
LABEL_161:
  if (!HIBYTE(v2)) {
    goto LABEL_205;
  }
  if ((v2 & 0x1000000) != 0)
  {
    v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 104);
    if (v52 >= 0x80)
    {
      int v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52);
      unsigned int v2 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v53 = 1;
    }
    uint64_t v3 = (v3 + v53 + 2);
    if ((v2 & 0x2000000) == 0)
    {
LABEL_164:
      if ((v2 & 0x4000000) == 0) {
        goto LABEL_165;
      }
      goto LABEL_179;
    }
  }
  else if ((v2 & 0x2000000) == 0)
  {
    goto LABEL_164;
  }
  unsigned int v54 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 108);
  if (v54 >= 0x80)
  {
    int v55 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v54);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v55 = 1;
  }
  uint64_t v3 = (v3 + v55 + 2);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_165:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_166;
    }
    goto LABEL_183;
  }
LABEL_179:
  v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 112);
  if (v56 >= 0x80)
  {
    int v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56);
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v57 = 1;
  }
  uint64_t v3 = (v3 + v57 + 2);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_166:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_167;
    }
    goto LABEL_189;
  }
LABEL_183:
  v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 116);
  if ((v58 & 0x80000000) != 0)
  {
    int v59 = 12;
  }
  else if (v58 >= 0x80)
  {
    int v59 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58) + 2;
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v59 = 3;
  }
  uint64_t v3 = (v59 + v3);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_167:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_168;
    }
    goto LABEL_193;
  }
LABEL_189:
  v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
  if (v60 >= 0x80)
  {
    int v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v60) + 2;
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v61 = 3;
  }
  uint64_t v3 = (v61 + v3);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_168:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_169;
    }
    goto LABEL_197;
  }
LABEL_193:
  v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 124);
  if (v62 >= 0x80)
  {
    int v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v62) + 2;
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v63 = 3;
  }
  uint64_t v3 = (v63 + v3);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_169:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_205;
    }
    goto LABEL_201;
  }
LABEL_197:
  v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 128);
  if (v64 >= 0x80)
  {
    int v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64) + 2;
    unsigned int v2 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v65 = 3;
  }
  uint64_t v3 = (v65 + v3);
  if ((v2 & 0x80000000) != 0)
  {
LABEL_201:
    v66 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 132);
    if (v66 >= 0x80) {
      int v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v66) + 2;
    }
    else {
      int v67 = 3;
    }
    uint64_t v3 = (v67 + v3);
  }
LABEL_205:
  LOBYTE(v68) = *(unsigned char *)(a1 + 152);
  if ((_BYTE)v68)
  {
    if (*(unsigned char *)(a1 + 152))
    {
      unsigned int v69 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 136);
      if (v69 >= 0x80)
      {
        int v70 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v69) + 2;
        int v68 = *(_DWORD *)(a1 + 152);
      }
      else
      {
        int v70 = 3;
      }
      uint64_t v3 = (v70 + v3);
    }
    if ((v68 & 2) != 0)
    {
      unsigned int v71 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 140);
      if (v71 >= 0x80) {
        int v72 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v71) + 2;
      }
      else {
        int v72 = 3;
      }
      uint64_t v3 = (v72 + v3);
    }
  }
  *(_DWORD *)(a1 + 144) = v3;
  return v3;
}

void sub_24B44D2DC(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE84540, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B44AF14(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B44D380()
{
  return 1;
}

void *sub_24B44D388@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.GpsEphemeris");
}

void sub_24B44D398(int *a1, uint64_t a2)
{
  if ((int *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      sub_24B44AF14(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      int v10 = *(_DWORD *)(a2 + 32);
      a1[13] |= 1u;
      a1[8] = v10;
      int v9 = *(_DWORD *)(a2 + 52);
    }
    if ((v9 & 4) != 0)
    {
      unsigned int v11 = *(_DWORD *)(a2 + 36);
      if (v11 >= 6) {
        __assert_rtn("set_session_protocol", "GnssEmergencyTypes.pb.h", 24528, "::CoreGem::proto::gnss::Emergency::SessionProtocol_IsValid(value)");
      }
      a1[13] |= 4u;
      a1[9] = v11;
      int v9 = *(_DWORD *)(a2 + 52);
    }
    if ((v9 & 8) != 0)
    {
      unsigned int v12 = *(_DWORD *)(a2 + 40);
      if (v12 >= 7) {
        __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 24551, "::CoreGem::proto::gnss::Emergency::PosProtocol_IsValid(value)");
      }
      a1[13] |= 8u;
      a1[10] = v12;
      int v9 = *(_DWORD *)(a2 + 52);
    }
    if ((v9 & 0x10) != 0)
    {
      int v13 = *(_DWORD *)(a2 + 44);
      a1[13] |= 0x10u;
      a1[11] = v13;
    }
  }
}

void sub_24B44D5E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B44D5F8(uint64_t a1)
{
  *(void *)a1 = &unk_26FE83680;
  sub_24B419CD4();
  int v2 = *(_DWORD *)(a1 + 20);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 8) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 20);
      }
    }
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    MEMORY[0x24C5D26D0](v5, 0x80C80B8603338);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_24B44D6C0(uint64_t a1)
{
  sub_24B44D5F8(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B44D6F8()
{
}

uint64_t sub_24B44D750(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  uint64_t result = sub_24B416D94(a1 + 8);
  *(_DWORD *)(a1 + 52) = 0;
  return result;
}

uint64_t sub_24B44D788(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = a1 + 8;
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  int v6 = a1 + 11;
LABEL_2:
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v10 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v10 >= v11 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!result) {
            return result;
          }
          unsigned int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v4 = *v10;
          unsigned int v12 = v10 + 1;
          *((void *)this + 1) = v12;
        }
        a1[13] |= 1u;
        if ((unint64_t)v12 >= v11 || *v12 != 18) {
          continue;
        }
        goto LABEL_28;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_20;
        }
        while (2)
        {
          int v20 = a1[5];
          uint64_t v21 = (int)a1[4];
          if ((int)v21 >= v20)
          {
            if (v20 == a1[6])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
              int v20 = a1[5];
            }
            a1[5] = v20 + 1;
            operator new();
          }
          uint64_t v22 = *((void *)a1 + 1);
          a1[4] = v21 + 1;
          int v23 = *(unsigned int **)(v22 + 8 * v21);
          unsigned int v38 = 0;
          int v24 = (char *)*((void *)this + 1);
          if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0; {
          }
            }
          else
          {
            unsigned int v38 = *v24;
            *((void *)this + 1) = v24 + 1;
          }
          int v25 = *((_DWORD *)this + 14);
          int v26 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v25 + 1;
          if (v25 < v26)
          {
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
            if (sub_24B44B568(v23, this))
            {
              if (*((unsigned char *)this + 36))
              {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
                int v27 = *((_DWORD *)this + 14);
                BOOL v28 = __OFSUB__(v27, 1);
                int v29 = v27 - 1;
                if (v29 < 0 == v28) {
                  *((_DWORD *)this + 14) = v29;
                }
                unsigned int v12 = (unsigned char *)*((void *)this + 1);
                unint64_t v14 = *((void *)this + 2);
                if ((unint64_t)v12 < v14)
                {
                  int v30 = *v12;
                  if (v30 == 18)
                  {
LABEL_28:
                    *((void *)this + 1) = v12 + 1;
                    continue;
                  }
                  if (v30 == 24)
                  {
                    int v13 = v12 + 1;
                    *((void *)this + 1) = v13;
LABEL_47:
                    unsigned int v37 = 0;
                    if ((unint64_t)v13 >= v14 || *v13 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37);
                      if (!result) {
                        return result;
                      }
                      unsigned int v31 = v37;
                    }
                    else
                    {
                      unsigned int v31 = *v13;
                      *((void *)this + 1) = v13 + 1;
                    }
                    if (v31 <= 5)
                    {
                      a1[13] |= 4u;
                      a1[9] = v31;
                    }
                    int v32 = (unsigned char *)*((void *)this + 1);
                    unint64_t v15 = *((void *)this + 2);
                    if ((unint64_t)v32 < v15 && *v32 == 32)
                    {
                      int v16 = v32 + 1;
                      *((void *)this + 1) = v16;
LABEL_57:
                      unsigned int v36 = 0;
                      if ((unint64_t)v16 >= v15 || *v16 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36);
                        if (!result) {
                          return result;
                        }
                        unsigned int v33 = v36;
                      }
                      else
                      {
                        unsigned int v33 = *v16;
                        *((void *)this + 1) = v16 + 1;
                      }
                      if (v33 <= 6)
                      {
                        a1[13] |= 8u;
                        a1[10] = v33;
                      }
                      int v34 = (unsigned char *)*((void *)this + 1);
                      unint64_t v17 = *((void *)this + 2);
                      if ((unint64_t)v34 < v17 && *v34 == 40)
                      {
                        int v18 = v34 + 1;
                        *((void *)this + 1) = v18;
LABEL_67:
                        if ((unint64_t)v18 >= v17 || *v18 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
                          if (!result) {
                            return result;
                          }
                          int v35 = (unsigned __int8 *)*((void *)this + 1);
                          unint64_t v17 = *((void *)this + 2);
                        }
                        else
                        {
                          *int v6 = *v18;
                          int v35 = (unsigned __int8 *)(v18 + 1);
                          *((void *)this + 1) = v35;
                        }
                        a1[13] |= 0x10u;
                        if (v35 == (unsigned __int8 *)v17
                          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                        {
                          *((_DWORD *)this + 8) = 0;
                          uint64_t result = 1;
                          *((unsigned char *)this + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
                goto LABEL_2;
              }
            }
          }
          return 0;
        }
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_47;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_57;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_67;
      default:
        int v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_24B44DC04(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 52)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 32), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 4) == 0)
  {
    if ((v7 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_11:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x10) == 0) {
      return result;
    }
    goto LABEL_12;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 8) != 0) {
    goto LABEL_11;
  }
LABEL_8:
  if ((v7 & 0x10) == 0) {
    return result;
  }
LABEL_12:
  uint64_t v8 = *(unsigned int *)(v5 + 44);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, (uint64_t)a2, a4);
}

uint64_t sub_24B44DCE8(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_29;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *(_DWORD *)(a1 + 52);
      if ((v2 & 4) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 4) == 0) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*(unsigned char *)(a1 + 52) & 4) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v6 = 2;
  }
  v3 += v6;
LABEL_16:
  if ((v2 & 8) == 0)
  {
    if ((v2 & 0x10) == 0) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    int v2 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v8 = 2;
  }
  v3 += v8;
  if ((v2 & 0x10) != 0)
  {
LABEL_25:
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if (v9 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    }
    else {
      int v10 = 2;
    }
    v3 += v10;
  }
LABEL_29:
  int v11 = *(_DWORD *)(a1 + 16);
  uint64_t v12 = (v11 + v3);
  if (v11 >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B44CBEC(*(void *)(*(void *)(a1 + 8) + 8 * v13));
      int v15 = (int)v14;
      if (v14 >= 0x80) {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
      }
      else {
        int v16 = 1;
      }
      uint64_t v12 = (v15 + v12 + v16);
      ++v13;
    }
    while (v13 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 48) = v12;
  return v12;
}

void sub_24B44DE44(int *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE84558, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B44D398(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B44DEE8()
{
  return 1;
}

void *sub_24B44DEF0@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.GpsNavigationModel");
}

void sub_24B44DF00(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    char v4 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(unsigned char *)(a1 + 8) = v4;
  }
}

void sub_24B44DF8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B44DFA4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE836F8;
  sub_24B419CD4();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B44E000(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B44DFA4(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B44E038()
{
}

uint64_t sub_24B44E088(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(unsigned char *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_24B44E09C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    while (1)
    {
      char v4 = (char *)*((void *)this + 1);
      if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v4 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v11 = 0;
      int v7 = (char *)*((void *)this + 1);
      unint64_t v6 = *((void *)this + 2);
      if ((unint64_t)v7 >= v6 || *v7 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!result) {
          return result;
        }
        unsigned int v8 = v11;
        int v9 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v6 = *((void *)this + 2);
      }
      else
      {
        unsigned int v8 = *v7;
        int v9 = (unsigned __int8 *)(v7 + 1);
        *((void *)this + 1) = v9;
      }
      *(unsigned char *)(a1 + 8) = v8 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v9 == (unsigned __int8 *)v6 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_24B44E1BC(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_24B44E1D8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1u);
  }
  else {
    uint64_t v1 = 0;
  }
  *(_DWORD *)(a1 + 12) = v1;
  return v1;
}

void sub_24B44E1F4(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE84570, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B44DF00(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B44E298()
{
  return 1;
}

void *sub_24B44E2A0@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.CplaneConfig");
}

void *sub_24B44E2B0(void *a1, uint64_t a2)
{
  *a1 = &unk_26FE83770;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  sub_24B44E30C((uint64_t)a1, a2);
  return a1;
}

void sub_24B44E2F8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void sub_24B44E30C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6)
      {
        sub_24B419CD4();
        uint64_t v6 = *(void *)(qword_26B17C500 + 8);
      }
      sub_24B419D78(v5, v6);
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      uint64_t v7 = *(void *)(a1 + 16);
      if (!v7) {
        operator new();
      }
      unsigned int v8 = *(unsigned char **)(a2 + 16);
      if (!v8)
      {
        sub_24B419CD4();
        unsigned int v8 = *(unsigned char **)(qword_26B17C500 + 16);
      }
      sub_24B44EB74(v7, v8);
    }
  }
}

void sub_24B44E484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B44E49C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE83770;
  sub_24B44E4F4((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B44E4F4(uint64_t a1)
{
  sub_24B419CD4();
  if (qword_26B17C500 != a1)
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *(void *)(a1 + 16);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

void sub_24B44E59C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B44E49C(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B44E5D4()
{
}

uint64_t sub_24B44E620(uint64_t result)
{
  LOBYTE(v1) = *(unsigned char *)(result + 28);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(result + 28))
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(_WORD *)(v2 + 16) = 0;
          *(void *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        int v1 = *(_DWORD *)(result + 28);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 16)) {
          *(_DWORD *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 16) = 0;
      }
    }
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_24B44E670(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_24B44E684(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v4 = (char *)*((void *)this + 1);
        if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_17;
        }
        *(_DWORD *)(a1 + 28) |= 1u;
        uint64_t v7 = *(void *)(a1 + 8);
        if (!v7) {
          operator new();
        }
        unsigned int v22 = 0;
        unsigned int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22))return 0; {
        }
          }
        else
        {
          unsigned int v22 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)this + 14);
        int v10 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B419F60(v7, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v11 = *((_DWORD *)this + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)this + 14) = v13;
        }
        unint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 < *((void *)this + 2) && *v14 == 18)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v6 = TagFallback & 7;
      if (v6 != 2) {
        goto LABEL_17;
      }
LABEL_29:
      *(_DWORD *)(a1 + 28) |= 2u;
      uint64_t v15 = *(void *)(a1 + 16);
      if (!v15) {
        operator new();
      }
      unsigned int v23 = 0;
      int v16 = (char *)*((void *)this + 1);
      if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23))return 0; {
      }
        }
      else
      {
        unsigned int v23 = *v16;
        *((void *)this + 1) = v16 + 1;
      }
      int v17 = *((_DWORD *)this + 14);
      int v18 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v17 + 1;
      if (v17 >= v18) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
      if (!sub_24B456278(v15, this) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
      int v19 = *((_DWORD *)this + 14);
      BOOL v12 = __OFSUB__(v19, 1);
      int v20 = v19 - 1;
      if (v20 < 0 == v12) {
        *((_DWORD *)this + 14) = v20;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v6 = TagFallback & 7;
LABEL_17:
    if (v6 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B44E978(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7)
  {
    sub_24B419CD4();
    uint64_t v7 = *(void *)(qword_26B17C500 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8)
    {
      sub_24B419CD4();
      uint64_t v8 = *(void *)(qword_26B17C500 + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_24B44EA10(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 28))
  {
    uint64_t v2 = 0;
    goto LABEL_19;
  }
  if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3)
  {
    sub_24B419CD4();
    uint64_t v3 = *(void *)(qword_26B17C500 + 8);
  }
  int v4 = *(_DWORD *)(v3 + 24);
  int v5 = 2 * (v4 & 1);
  if ((v4 & 2) != 0) {
    v5 += 2;
  }
  if ((v4 & 4) != 0) {
    v5 |= 9u;
  }
  if (*(_DWORD *)(v3 + 24)) {
    int v6 = v5;
  }
  else {
    int v6 = 0;
  }
  *(_DWORD *)(v3 + 20) = v6;
  uint64_t v2 = (v6 + 2);
  if ((*(_DWORD *)(a1 + 28) & 2) != 0)
  {
LABEL_16:
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7)
    {
      sub_24B419CD4();
      uint64_t v7 = *(void *)(qword_26B17C500 + 16);
    }
    uint64_t v2 = v2 + sub_24B456608(v7) + 2;
  }
LABEL_19:
  *(_DWORD *)(a1 + 24) = v2;
  return v2;
}

void sub_24B44EAD0(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE84588, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B44E30C(a1, (uint64_t)lpsrc);
}

void sub_24B44EB74(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(unsigned char *)(a1 + 11) = v5;
  }
}

void sub_24B44EC68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_24B44EC80()
{
  return 1;
}

void *sub_24B44EC88@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.CplaneContext");
}

void sub_24B44EC98(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return;
  }
  if ((*(unsigned char *)(a2 + 40) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    char v6 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 40) |= 2u;
    char v7 = *(std::string **)(a1 + 8);
    if (v7 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v7, v6);
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  char v5 = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(unsigned char *)(a1 + 32) = v5;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_13:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9)
  {
    sub_24B419CD4();
    uint64_t v9 = *(void *)(qword_26B17C4E8 + 16);
  }
  sub_24B44DF00(v8, v9);
  if ((*(_DWORD *)(a2 + 40) & 8) != 0)
  {
LABEL_18:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 24);
    if (!v11)
    {
      sub_24B419CD4();
      uint64_t v11 = *(void *)(qword_26B17C4E8 + 24);
    }
    sub_24B41B6C0(v10, v11);
  }
}

void sub_24B44EE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B44EEB4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE837E8;
  uint64_t v2 = *((void *)a1 + 1);
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x24C5D2700](v2, 0x1012C40EC159624);
  }
  sub_24B419CD4();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_26B17C4E8 != a1)
  {
    uint64_t v4 = *((void *)a1 + 2);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)a1 + 3);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B44EFB8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B44EEB4(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B44EFF0()
{
}

uint64_t sub_24B44F04C(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 40);
  if (v2)
  {
    *(unsigned char *)(result + 32) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    int v4 = *(_DWORD *)(result + 40);
    if ((v4 & 4) != 0)
    {
      uint64_t v5 = *(void *)(result + 16);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 16)) {
          *(unsigned char *)(v5 + 8) = 0;
        }
        *(_DWORD *)(v5 + 16) = 0;
        int v4 = *(_DWORD *)(result + 40);
      }
    }
    if ((v4 & 8) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result) {
        uint64_t result = sub_24B41B978(result);
      }
    }
  }
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_24B44F0E8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = MEMORY[0x263F8C740];
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v29 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!result) {
            return result;
          }
          unsigned int v10 = v29;
          uint64_t v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v10 = *v9;
          uint64_t v11 = v9 + 1;
          *((void *)this + 1) = v11;
        }
        *(unsigned char *)(a1 + 32) = v10 != 0;
        int v12 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 40) = v12;
        if ((unint64_t)v11 < v8 && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_18;
        }
        int v12 = *(_DWORD *)(a1 + 40);
LABEL_26:
        *(_DWORD *)(a1 + 40) = v12 | 2;
        if (*(void *)(a1 + 8) == v4) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 26) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_32:
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v15 = *(void *)(a1 + 16);
        if (!v15) {
          operator new();
        }
        unsigned int v30 = 0;
        int v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30))return 0; {
        }
          }
        else
        {
          unsigned int v30 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)this + 14);
        int v18 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B44E09C(v15, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        unsigned int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 34) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_46:
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v23 = *(void *)(a1 + 24);
        if (!v23) {
          operator new();
        }
        unsigned int v31 = 0;
        int v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))return 0; {
        }
          }
        else
        {
          unsigned int v31 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B41B9C8(v23, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v27 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v27, 1);
        int v28 = v27 - 1;
        if (v28 < 0 == v20) {
          *((_DWORD *)this + 14) = v28;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_32;
        }
        goto LABEL_18;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_18;
        }
        goto LABEL_46;
      default:
        int v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_24B44F514(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 32), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7)
  {
    sub_24B419CD4();
    uint64_t v7 = *(void *)(qword_26B17C4E8 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
  {
LABEL_11:
    uint64_t v8 = *(void *)(v5 + 24);
    if (!v8)
    {
      sub_24B419CD4();
      uint64_t v8 = *(void *)(qword_26B17C4E8 + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  }
  return result;
}

uint64_t sub_24B44F5E4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_28;
  }
  uint64_t v3 = 2 * (v2 & 1u);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v2 = *(_DWORD *)(a1 + 40);
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 1;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    uint64_t v3 = (v3 | 1) + v9 + v5;
    if ((v2 & 4) == 0)
    {
LABEL_4:
      if ((v2 & 8) == 0) {
        goto LABEL_28;
      }
      goto LABEL_22;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10)
  {
    sub_24B419CD4();
    uint64_t v10 = *(void *)(qword_26B17C4E8 + 16);
  }
  if (*(_DWORD *)(v10 + 16)) {
    int v11 = 2 * (*(_DWORD *)(v10 + 16) & 1);
  }
  else {
    int v11 = 0;
  }
  *(_DWORD *)(v10 + 12) = v11;
  uint64_t v3 = (v3 + v11 + 2);
  if ((*(_DWORD *)(a1 + 40) & 8) != 0)
  {
LABEL_22:
    uint64_t v12 = *(void *)(a1 + 24);
    if (!v12)
    {
      sub_24B419CD4();
      uint64_t v12 = *(void *)(qword_26B17C4E8 + 24);
    }
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B41BE98(v12);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    }
    else {
      int v15 = 1;
    }
    uint64_t v3 = (v3 + v14 + v15 + 1);
  }
LABEL_28:
  *(_DWORD *)(a1 + 36) = v3;
  return v3;
}

void sub_24B44F714(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE845A0, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B44EC98(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B44F7B8()
{
  return 1;
}

void *sub_24B44F7C0@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.EmergConfig");
}

void sub_24B44F7D0(_DWORD *a1, _DWORD *a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = a2[16];
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v6 = a2[2];
    a1[16] |= 1u;
    a1[2] = v6;
    int v4 = a2[16];
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v7 = a2[3];
  a1[16] |= 2u;
  a1[3] = v7;
  int v4 = a2[16];
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v8 = a2[4];
  a1[16] |= 4u;
  a1[4] = v8;
  int v4 = a2[16];
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v9 = a2[5];
  a1[16] |= 8u;
  a1[5] = v9;
  int v4 = a2[16];
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    int v11 = a2[7];
    a1[16] |= 0x20u;
    a1[7] = v11;
    int v4 = a2[16];
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  int v10 = a2[6];
  a1[16] |= 0x10u;
  a1[6] = v10;
  int v4 = a2[16];
  if ((v4 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_26:
  int v12 = a2[8];
  a1[16] |= 0x40u;
  a1[8] = v12;
  int v4 = a2[16];
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = a2[9];
    a1[16] |= 0x80u;
    a1[9] = v5;
    int v4 = a2[16];
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v13 = a2[10];
    a1[16] |= 0x100u;
    a1[10] = v13;
    int v4 = a2[16];
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v14 = a2[11];
  a1[16] |= 0x200u;
  a1[11] = v14;
  int v4 = a2[16];
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
LABEL_31:
    int v16 = a2[13];
    a1[16] |= 0x800u;
    a1[13] = v16;
    if ((a2[16] & 0x1000) == 0) {
      return;
    }
    goto LABEL_32;
  }
LABEL_30:
  int v15 = a2[12];
  a1[16] |= 0x400u;
  a1[12] = v15;
  int v4 = a2[16];
  if ((v4 & 0x800) != 0) {
    goto LABEL_31;
  }
LABEL_18:
  if ((v4 & 0x1000) == 0) {
    return;
  }
LABEL_32:
  unsigned int v17 = a2[14];
  if (v17 >= 7) {
    __assert_rtn("set_doppler_uncer_ext", "GnssEmergencyTypes.pb.h", 25158, "::CoreGem::proto::gnss::Emergency::GpsDopplerUncMpsExt_IsValid(value)");
  }
  a1[16] |= 0x1000u;
  a1[14] = v17;
}

void sub_24B44FA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B44FA30(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE83860;
  sub_24B419CD4();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B44FA8C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B44FA30(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B44FAC4()
{
}

uint64_t sub_24B44FB20(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 64);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0;
    *(_DWORD *)(result + 56) = 0;
  }
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_24B44FB50(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v43 = a1 + 2;
  unsigned int v44 = a1 + 3;
  int v45 = a1 + 4;
  unsigned int v46 = a1 + 5;
  int v4 = a1 + 6;
  int v5 = a1 + 7;
  int v6 = a1 + 8;
  int v7 = a1 + 9;
  int v8 = a1 + 10;
  int v9 = a1 + 11;
  int v10 = a1 + 12;
  int v11 = a1 + 13;
  while (2)
  {
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unsigned int *v43 = *v16;
          unsigned int v17 = v16 + 1;
          *((void *)this + 1) = v17;
LABEL_42:
          a1[16] |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            int v18 = v17 + 1;
            *((void *)this + 1) = v18;
            goto LABEL_45;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
        if (result)
        {
          unsigned int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          goto LABEL_42;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_45:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
          if (!result) {
            return result;
          }
          unsigned int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v44 = *v18;
          unsigned int v30 = v18 + 1;
          *((void *)this + 1) = v30;
        }
        a1[16] |= 2u;
        if ((unint64_t)v30 >= v15 || *v30 != 24) {
          continue;
        }
        int v19 = v30 + 1;
        *((void *)this + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v45);
          if (!result) {
            return result;
          }
          unsigned int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v45 = *v19;
          unsigned int v31 = v19 + 1;
          *((void *)this + 1) = v31;
        }
        a1[16] |= 4u;
        if ((unint64_t)v31 >= v15 || *v31 != 32) {
          continue;
        }
        BOOL v20 = v31 + 1;
        *((void *)this + 1) = v20;
LABEL_61:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!result) {
            return result;
          }
          int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v46 = *v20;
          int v32 = v20 + 1;
          *((void *)this + 1) = v32;
        }
        a1[16] |= 8u;
        if ((unint64_t)v32 >= v15 || *v32 != 40) {
          continue;
        }
        int v21 = v32 + 1;
        *((void *)this + 1) = v21;
LABEL_69:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!result) {
            return result;
          }
          unsigned int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v4 = *v21;
          unsigned int v33 = v21 + 1;
          *((void *)this + 1) = v33;
        }
        a1[16] |= 0x10u;
        if ((unint64_t)v33 >= v15 || *v33 != 48) {
          continue;
        }
        unsigned int v22 = v33 + 1;
        *((void *)this + 1) = v22;
LABEL_77:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v22;
          int v34 = v22 + 1;
          *((void *)this + 1) = v34;
        }
        a1[16] |= 0x20u;
        if ((unint64_t)v34 >= v15 || *v34 != 56) {
          continue;
        }
        uint64_t v23 = v34 + 1;
        *((void *)this + 1) = v23;
LABEL_85:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v23;
          int v35 = v23 + 1;
          *((void *)this + 1) = v35;
        }
        a1[16] |= 0x40u;
        if ((unint64_t)v35 >= v15 || *v35 != 64) {
          continue;
        }
        int v24 = v35 + 1;
        *((void *)this + 1) = v24;
LABEL_93:
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v24;
          unsigned int v36 = v24 + 1;
          *((void *)this + 1) = v36;
        }
        a1[16] |= 0x80u;
        if ((unint64_t)v36 >= v15 || *v36 != 72) {
          continue;
        }
        int v25 = v36 + 1;
        *((void *)this + 1) = v25;
LABEL_101:
        if ((unint64_t)v25 >= v15 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unsigned int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v25;
          unsigned int v37 = v25 + 1;
          *((void *)this + 1) = v37;
        }
        a1[16] |= 0x100u;
        if ((unint64_t)v37 >= v15 || *v37 != 80) {
          continue;
        }
        int v26 = v37 + 1;
        *((void *)this + 1) = v26;
LABEL_109:
        if ((unint64_t)v26 >= v15 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v26;
          unsigned int v38 = v26 + 1;
          *((void *)this + 1) = v38;
        }
        a1[16] |= 0x200u;
        if ((unint64_t)v38 >= v15 || *v38 != 88) {
          continue;
        }
        int v27 = v38 + 1;
        *((void *)this + 1) = v27;
LABEL_117:
        if ((unint64_t)v27 >= v15 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v27;
          int v39 = v27 + 1;
          *((void *)this + 1) = v39;
        }
        a1[16] |= 0x400u;
        if ((unint64_t)v39 >= v15 || *v39 != 96) {
          continue;
        }
        int v28 = v39 + 1;
        *((void *)this + 1) = v28;
LABEL_125:
        if ((unint64_t)v28 >= v15 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v28;
          int v40 = v28 + 1;
          *((void *)this + 1) = v40;
        }
        a1[16] |= 0x800u;
        if ((unint64_t)v40 >= v15 || *v40 != 104) {
          continue;
        }
        unsigned int v29 = v40 + 1;
        *((void *)this + 1) = v29;
LABEL_133:
        unsigned int v47 = 0;
        if ((unint64_t)v29 >= v15 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v47);
          if (!result) {
            return result;
          }
          unsigned int v41 = v47;
        }
        else
        {
          unsigned int v41 = *v29;
          *((void *)this + 1) = v29 + 1;
        }
        if (v41 <= 6)
        {
          a1[16] |= 0x1000u;
          a1[14] = v41;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_53;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        BOOL v20 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_61;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_69;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_77;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        uint64_t v23 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_85;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_93;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v25 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_101;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_109;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_117;
      case 0xCu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_125;
      case 0xDu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v29 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_133;
      default:
        int v14 = TagFallback & 7;
LABEL_36:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

unsigned int *sub_24B450284(unsigned int *result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  unsigned int v6 = result[16];
  if (v6)
  {
    uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    unsigned int v6 = v5[16];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
    if ((v5[16] & 0x1000) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x800) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v6 & 0x1000) == 0) {
    return result;
  }
LABEL_27:
  uint64_t v7 = v5[14];
  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v7, a2, a4);
}

uint64_t sub_24B450428(unsigned int *a1)
{
  unsigned int v2 = a1[16];
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_45;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    unsigned int v2 = a1[16];
  }
  else
  {
    int v5 = 1;
  }
  uint64_t v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_10:
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      unsigned int v2 = a1[16];
    }
    else
    {
      int v7 = 1;
    }
    uint64_t v3 = (v3 + v7 + 1);
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      unsigned int v2 = a1[16];
    }
    else
    {
      int v9 = 1;
    }
    uint64_t v3 = (v3 + v9 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    unsigned int v2 = a1[16];
  }
  else
  {
    int v11 = 1;
  }
  uint64_t v3 = (v3 + v11 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_29:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    unsigned int v2 = a1[16];
  }
  else
  {
    int v13 = 1;
  }
  uint64_t v3 = (v3 + v13 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_33:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    unsigned int v2 = a1[16];
  }
  else
  {
    int v15 = 1;
  }
  uint64_t v3 = (v3 + v15 + 1);
  if ((v2 & 0x40) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_41;
  }
LABEL_37:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    unsigned int v2 = a1[16];
  }
  else
  {
    int v17 = 2;
  }
  uint64_t v3 = (v17 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_41:
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      unsigned int v2 = a1[16];
    }
    else
    {
      int v19 = 2;
    }
    uint64_t v3 = (v19 + v3);
  }
LABEL_45:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_74;
  }
  if ((v2 & 0x100) != 0)
  {
    BOOL v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      unsigned int v2 = a1[16];
    }
    else
    {
      int v21 = 2;
    }
    uint64_t v3 = (v21 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_48:
      if ((v2 & 0x400) == 0) {
        goto LABEL_49;
      }
      goto LABEL_60;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  unsigned int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    unsigned int v2 = a1[16];
  }
  else
  {
    int v23 = 2;
  }
  uint64_t v3 = (v23 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_49:
    if ((v2 & 0x800) == 0) {
      goto LABEL_50;
    }
    goto LABEL_64;
  }
LABEL_60:
  int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
  if (v24 >= 0x80)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    unsigned int v2 = a1[16];
  }
  else
  {
    int v25 = 2;
  }
  uint64_t v3 = (v25 + v3);
  if ((v2 & 0x800) == 0)
  {
LABEL_50:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_68;
  }
LABEL_64:
  int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[13];
  if (v26 >= 0x80)
  {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
    unsigned int v2 = a1[16];
  }
  else
  {
    int v27 = 2;
  }
  uint64_t v3 = (v27 + v3);
  if ((v2 & 0x1000) != 0)
  {
LABEL_68:
    int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[14];
    if ((v28 & 0x80000000) != 0)
    {
      int v29 = 11;
    }
    else if (v28 >= 0x80)
    {
      int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    }
    else
    {
      int v29 = 2;
    }
    uint64_t v3 = (v29 + v3);
  }
LABEL_74:
  a1[15] = v3;
  return v3;
}

void sub_24B4506B0(_DWORD *a1, _DWORD *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE845B8, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B44F7D0(a1, lpsrc);
}

uint64_t sub_24B450754()
{
  return 1;
}

void *sub_24B45075C@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.GpsAcqElement");
}

void sub_24B45076C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD **)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = *(int *)(a1 + 32);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24));
          int v6 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v7 + 1;
      sub_24B44F7D0(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 68);
  if (!(_BYTE)v9) {
    return;
  }
  if (*(unsigned char *)(a2 + 68))
  {
    int v11 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 68) |= 1u;
    *(_DWORD *)(a1 + 8) = v11;
    int v9 = *(_DWORD *)(a2 + 68);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_23;
    }
  }
  else if ((*(unsigned char *)(a2 + 68) & 2) == 0)
  {
    goto LABEL_14;
  }
  int v12 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 68) |= 2u;
  *(_DWORD *)(a1 + 12) = v12;
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_23:
  *(_DWORD *)(a1 + 68) |= 4u;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = *(void *)(a2 + 16);
  if (!v14)
  {
    sub_24B419CD4();
    uint64_t v14 = *(void *)(qword_26B17C530 + 16);
  }
  sub_24B448050(v13, v14);
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 0x10) == 0)
  {
LABEL_16:
    if ((v9 & 0x20) == 0) {
      goto LABEL_17;
    }
LABEL_29:
    unsigned int v16 = *(_DWORD *)(a2 + 52);
    if (v16 >= 6) {
      __assert_rtn("set_session_protocol", "GnssEmergencyTypes.pb.h", 25318, "::CoreGem::proto::gnss::Emergency::SessionProtocol_IsValid(value)");
    }
    *(_DWORD *)(a1 + 68) |= 0x20u;
    *(_DWORD *)(a1 + 52) = v16;
    int v9 = *(_DWORD *)(a2 + 68);
    if ((v9 & 0x40) == 0)
    {
LABEL_18:
      if ((v9 & 0x80) == 0) {
        return;
      }
      goto LABEL_19;
    }
    goto LABEL_31;
  }
LABEL_28:
  int v15 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 68) |= 0x10u;
  *(_DWORD *)(a1 + 48) = v15;
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_17:
  if ((v9 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_31:
  unsigned int v17 = *(_DWORD *)(a2 + 56);
  if (v17 >= 7) {
    __assert_rtn("set_pos_protocol", "GnssEmergencyTypes.pb.h", 25341, "::CoreGem::proto::gnss::Emergency::PosProtocol_IsValid(value)");
  }
  *(_DWORD *)(a1 + 68) |= 0x40u;
  *(_DWORD *)(a1 + 56) = v17;
  if ((*(_DWORD *)(a2 + 68) & 0x80) != 0)
  {
LABEL_19:
    int v10 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 68) |= 0x80u;
    *(_DWORD *)(a1 + 60) = v10;
  }
}

void sub_24B450A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B450A88(uint64_t a1)
{
  *(void *)a1 = &unk_26FE838D8;
  sub_24B419CD4();
  if (qword_26B17C530 != a1)
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  int v3 = *(_DWORD *)(a1 + 36);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      uint64_t v5 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        int v3 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  uint64_t v6 = *(void *)(a1 + 24);
  if (v6) {
    MEMORY[0x24C5D26D0](v6, 0x80C80B8603338);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_24B450B8C(uint64_t a1)
{
  sub_24B450A88(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B450BC4()
{
}

uint64_t sub_24B450C24(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 68);
  if (v2)
  {
    *(void *)(a1 + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      if (v3) {
        sub_24B4482C4(v3);
      }
    }
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  uint64_t result = sub_24B416D94(a1 + 24);
  *(_DWORD *)(a1 + 68) = 0;
  return result;
}

uint64_t sub_24B450C70(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (unsigned int *)(a1 + 8);
  uint64_t v5 = (unsigned int *)(a1 + 12);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  uint64_t v7 = (unsigned int *)(a1 + 48);
  uint64_t v8 = (unsigned int *)(a1 + 60);
LABEL_2:
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!result) {
            return result;
          }
          uint64_t v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v4 = *v13;
          uint64_t v14 = v13 + 1;
          *((void *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
          goto LABEL_35;
        }
        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v15;
          int v25 = v15 + 1;
          *((void *)this + 1) = v25;
        }
        int v16 = *(_DWORD *)(a1 + 68) | 2;
        *(_DWORD *)(a1 + 68) = v16;
        if ((unint64_t)v25 >= v12 || *v25 != 26) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 68) = v16 | 4;
        uint64_t v26 = *(void *)(a1 + 16);
        if (!v26) {
          operator new();
        }
        unsigned int v50 = 0;
        int v27 = (char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50))return 0; {
        }
          }
        else
        {
          unsigned int v50 = *v27;
          *((void *)this + 1) = v27 + 1;
        }
        int v28 = *((_DWORD *)this + 14);
        int v29 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v28 + 1;
        if (v28 < v29)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
          if (sub_24B448304(v26, this))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
              int v30 = *((_DWORD *)this + 14);
              BOOL v31 = __OFSUB__(v30, 1);
              int v32 = v30 - 1;
              if (v32 < 0 == v31) {
                *((_DWORD *)this + 14) = v32;
              }
              unsigned int v33 = (unsigned char *)*((void *)this + 1);
              if ((unint64_t)v33 < *((void *)this + 2) && *v33 == 34)
              {
                do
                {
                  *((void *)this + 1) = v33 + 1;
LABEL_57:
                  int v34 = *(_DWORD *)(a1 + 36);
                  uint64_t v35 = *(int *)(a1 + 32);
                  if ((int)v35 >= v34)
                  {
                    if (v34 == *(_DWORD *)(a1 + 40))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
                      int v34 = *(_DWORD *)(a1 + 36);
                    }
                    *(_DWORD *)(a1 + 36) = v34 + 1;
                    operator new();
                  }
                  uint64_t v36 = *(void *)(a1 + 24);
                  *(_DWORD *)(a1 + 32) = v35 + 1;
                  unsigned int v37 = *(unsigned int **)(v36 + 8 * v35);
                  unsigned int v50 = 0;
                  unsigned int v38 = (char *)*((void *)this + 1);
                  if ((unint64_t)v38 >= *((void *)this + 2) || *v38 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v50 = *v38;
                    *((void *)this + 1) = v38 + 1;
                  }
                  int v39 = *((_DWORD *)this + 14);
                  int v40 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v39 + 1;
                  if (v39 >= v40) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
                  if (!sub_24B44FB50(v37, this) || !*((unsigned char *)this + 36)) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
                  int v41 = *((_DWORD *)this + 14);
                  BOOL v31 = __OFSUB__(v41, 1);
                  int v42 = v41 - 1;
                  if (v42 < 0 == v31) {
                    *((_DWORD *)this + 14) = v42;
                  }
                  unsigned int v33 = (unsigned char *)*((void *)this + 1);
                  unint64_t v17 = *((void *)this + 2);
                  if ((unint64_t)v33 >= v17) {
                    goto LABEL_2;
                  }
                  int v43 = *v33;
                }
                while (v43 == 34);
                if (v43 == 40)
                {
                  int v18 = v33 + 1;
                  *((void *)this + 1) = v18;
LABEL_75:
                  if ((unint64_t)v18 >= v17 || *v18 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
                    if (!result) {
                      return result;
                    }
                    unsigned int v44 = (unsigned char *)*((void *)this + 1);
                    unint64_t v17 = *((void *)this + 2);
                  }
                  else
                  {
                    *uint64_t v7 = *v18;
                    unsigned int v44 = v18 + 1;
                    *((void *)this + 1) = v44;
                  }
                  *(_DWORD *)(a1 + 68) |= 0x10u;
                  if ((unint64_t)v44 < v17 && *v44 == 48)
                  {
                    int v19 = v44 + 1;
                    *((void *)this + 1) = v19;
LABEL_83:
                    unsigned int v50 = 0;
                    if ((unint64_t)v19 >= v17 || *v19 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
                      if (!result) {
                        return result;
                      }
                      unsigned int v45 = v50;
                    }
                    else
                    {
                      unsigned int v45 = *v19;
                      *((void *)this + 1) = v19 + 1;
                    }
                    if (v45 <= 5)
                    {
                      *(_DWORD *)(a1 + 68) |= 0x20u;
                      *(_DWORD *)(a1 + 52) = v45;
                    }
                    unsigned int v46 = (unsigned char *)*((void *)this + 1);
                    unint64_t v20 = *((void *)this + 2);
                    if ((unint64_t)v46 < v20 && *v46 == 56)
                    {
                      int v21 = v46 + 1;
                      *((void *)this + 1) = v21;
LABEL_93:
                      unsigned int v50 = 0;
                      if ((unint64_t)v21 >= v20 || *v21 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
                        if (!result) {
                          return result;
                        }
                        unsigned int v47 = v50;
                      }
                      else
                      {
                        unsigned int v47 = *v21;
                        *((void *)this + 1) = v21 + 1;
                      }
                      if (v47 <= 6)
                      {
                        *(_DWORD *)(a1 + 68) |= 0x40u;
                        *(_DWORD *)(a1 + 56) = v47;
                      }
                      unsigned int v48 = (unsigned char *)*((void *)this + 1);
                      unint64_t v22 = *((void *)this + 2);
                      if ((unint64_t)v48 < v22 && *v48 == 64)
                      {
                        int v23 = v48 + 1;
                        *((void *)this + 1) = v23;
LABEL_103:
                        if ((unint64_t)v23 >= v22 || *v23 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                          if (!result) {
                            return result;
                          }
                          int v49 = (unsigned __int8 *)*((void *)this + 1);
                          unint64_t v22 = *((void *)this + 2);
                        }
                        else
                        {
                          *uint64_t v8 = *v23;
                          int v49 = (unsigned __int8 *)(v23 + 1);
                          *((void *)this + 1) = v49;
                        }
                        *(_DWORD *)(a1 + 68) |= 0x80u;
                        if (v49 == (unsigned __int8 *)v22
                          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                        {
                          *((_DWORD *)this + 8) = 0;
                          uint64_t result = 1;
                          *((unsigned char *)this + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_26;
        }
        int v16 = *(_DWORD *)(a1 + 68);
        goto LABEL_43;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_57;
        }
        goto LABEL_26;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_75;
      case 6u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_83;
      case 7u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_93;
      case 8u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_103;
      default:
        int v11 = TagFallback & 7;
LABEL_26:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_24B4512EC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 68);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_10;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 4) == 0) {
    goto LABEL_10;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7)
  {
    sub_24B419CD4();
    uint64_t v7 = *(void *)(qword_26B17C530 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
LABEL_10:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 24) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 32));
  }
  int v9 = *(_DWORD *)(v5 + 68);
  if ((v9 & 0x10) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
    int v9 = *(_DWORD *)(v5 + 68);
    if ((v9 & 0x20) == 0)
    {
LABEL_15:
      if ((v9 & 0x40) == 0) {
        goto LABEL_16;
      }
LABEL_20:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
      if ((*(_DWORD *)(v5 + 68) & 0x80) == 0) {
        return result;
      }
      goto LABEL_21;
    }
  }
  else if ((v9 & 0x20) == 0)
  {
    goto LABEL_15;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 68);
  if ((v9 & 0x40) != 0) {
    goto LABEL_20;
  }
LABEL_16:
  if ((v9 & 0x80) == 0) {
    return result;
  }
LABEL_21:
  uint64_t v10 = *(unsigned int *)(v5 + 60);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v10, (uint64_t)a2, a4);
}

uint64_t sub_24B45143C(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 68);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_46;
  }
  if ((*(unsigned char *)(a1 + 68) & 1) == 0)
  {
    int v3 = 0;
    if ((*(unsigned char *)(a1 + 68) & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v5 = 1;
  }
  int v3 = v5 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_10:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      int v2 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      int v7 = 2;
    }
    v3 += v7;
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8)
    {
      sub_24B419CD4();
      uint64_t v8 = *(void *)(qword_26B17C530 + 16);
    }
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B4485E0(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      int v11 = 1;
    }
    v3 += v10 + v11 + 1;
    int v2 = *(_DWORD *)(a1 + 68);
    if ((v2 & 0x10) == 0)
    {
LABEL_16:
      if ((v2 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_30;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_16;
  }
  unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x20) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_36;
  }
LABEL_30:
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x40) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0) {
      goto LABEL_46;
    }
    goto LABEL_42;
  }
LABEL_36:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v16 & 0x80000000) != 0)
  {
    int v17 = 11;
  }
  else if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    int v2 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v17 = 2;
  }
  v3 += v17;
  if ((v2 & 0x80) != 0)
  {
LABEL_42:
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v18 >= 0x80) {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    }
    else {
      int v19 = 2;
    }
    v3 += v19;
  }
LABEL_46:
  int v20 = *(_DWORD *)(a1 + 32);
  uint64_t v21 = (v20 + v3);
  if (v20 >= 1)
  {
    uint64_t v22 = 0;
    do
    {
      int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B450428(*(unsigned int **)(*(void *)(a1 + 24) + 8 * v22));
      int v24 = (int)v23;
      if (v23 >= 0x80) {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
      }
      else {
        int v25 = 1;
      }
      uint64_t v21 = (v24 + v21 + v25);
      ++v22;
    }
    while (v22 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 64) = v21;
  return v21;
}

void sub_24B45163C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE845D0, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B45076C(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B4516E0()
{
  return 1;
}

void *sub_24B4516E8@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.GpsAcqAssistance");
}

void sub_24B4516F8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unsigned int v4 = *(_DWORD *)(a2 + 8);
    if (v4 >= 6) {
      __assert_rtn("set_network_type", "GnssEmergencyTypes.pb.h", 25390, "::CoreGem::proto::gnss::Emergency::ClsNetworkType_IsValid(value)");
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v4;
  }
}

void sub_24B4517AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B4517C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE83950;
  sub_24B419CD4();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B451820(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B4517C4(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B451858()
{
}

uint64_t sub_24B4518A4(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_24B4518B8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    while (1)
    {
      unsigned int v4 = (char *)*((void *)this + 1);
      if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v4 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v9 = 0;
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v9);
        if (!result) {
          return result;
        }
        unsigned int v7 = v9;
      }
      else
      {
        unsigned int v7 = *v6;
        *((void *)this + 1) = v6 + 1;
      }
      if (v7 <= 5)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 8) = v7;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_24B4519D8(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_24B4519F4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v3 & 0x80000000) != 0)
    {
      uint64_t result = 11;
    }
    else if (v3 >= 0x80)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      uint64_t result = 2;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_24B451A50(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE845E8, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B4516F8(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B451AF4()
{
  return 1;
}

void *sub_24B451AFC@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.CellFTAssistanceRequest");
}

void sub_24B451B0C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 8);
      if (v5 >= 0xA) {
        __assert_rtn("set_result", "GnssEmergencyTypes.pb.h", 25417, "::CoreGem::proto::gnss::Result_IsValid(value)");
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 12);
      if (v6 >= 6) {
        __assert_rtn("set_network_type", "GnssEmergencyTypes.pb.h", 25440, "::CoreGem::proto::gnss::Emergency::ClsNetworkType_IsValid(value)");
      }
      *(_DWORD *)(a1 + 28) |= 2u;
      *(_DWORD *)(a1 + 12) = v6;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 4u;
      uint64_t v7 = *(void *)(a1 + 16);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 16);
      if (!v8)
      {
        sub_24B419CD4();
        uint64_t v8 = *(void *)(qword_26B17C528 + 16);
      }
      sub_24B4477F4(v7, v8);
    }
  }
}

void sub_24B451C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B451CA4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE839C8;
  sub_24B419CD4();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_26B17C528 != a1)
  {
    uint64_t v2 = *((void *)a1 + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B451D3C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B451CA4(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B451D74()
{
}

uint64_t sub_24B451DC0(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 28);
  if (v2)
  {
    *(void *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_24B447ACC(result);
      }
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return result;
}

uint64_t sub_24B451E00(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v4 = (char *)*((void *)this + 1);
          if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v4;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v4 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v7 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_18;
          }
          unsigned int v24 = 0;
          uint64_t v8 = (char *)*((void *)this + 1);
          if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
            if (!result) {
              return result;
            }
            unsigned int v9 = v24;
          }
          else
          {
            unsigned int v9 = *v8;
            *((void *)this + 1) = v8 + 1;
          }
          if (v9 <= 9)
          {
            *(_DWORD *)(a1 + 28) |= 1u;
            *(_DWORD *)(a1 + 8) = v9;
          }
          int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v13 < v10 && *v13 == 16)
          {
            int v11 = v13 + 1;
            *((void *)this + 1) = v11;
            goto LABEL_28;
          }
        }
        if (v6 != 2) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_28:
        unsigned int v23 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!result) {
            return result;
          }
          unsigned int v14 = v23;
        }
        else
        {
          unsigned int v14 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v14 <= 5)
        {
          *(_DWORD *)(a1 + 28) |= 2u;
          *(_DWORD *)(a1 + 12) = v14;
        }
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 < *((void *)this + 2) && *v15 == 26)
        {
          *((void *)this + 1) = v15 + 1;
          goto LABEL_38;
        }
      }
      if (v6 != 3)
      {
        int v7 = TagFallback & 7;
        goto LABEL_18;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2) {
        break;
      }
LABEL_18:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_38:
    *(_DWORD *)(a1 + 28) |= 4u;
    uint64_t v16 = *(void *)(a1 + 16);
    if (!v16) {
      operator new();
    }
    unsigned int v25 = 0;
    int v17 = (char *)*((void *)this + 1);
    if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25)) {
        return 0;
      }
    }
    else
    {
      unsigned int v25 = *v17;
      *((void *)this + 1) = v17 + 1;
    }
    int v18 = *((_DWORD *)this + 14);
    int v19 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v18 + 1;
    if (v18 >= v19) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
    if (!sub_24B447B2C(v16, this) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
    int v20 = *((_DWORD *)this + 14);
    BOOL v21 = __OFSUB__(v20, 1);
    int v22 = v20 - 1;
    if (v22 < 0 == v21) {
      *((_DWORD *)this + 14) = v22;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_24B4520E0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7)
  {
    sub_24B419CD4();
    uint64_t v7 = *(void *)(qword_26B17C528 + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_24B452180(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_26;
  }
  if (*(unsigned char *)(a1 + 28))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v4 >= 0x80)
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *(_DWORD *)(a1 + 28);
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v6 = 2;
  }
  uint64_t v3 = (v6 + v3);
LABEL_19:
  if ((v2 & 4) != 0)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7)
    {
      sub_24B419CD4();
      uint64_t v7 = *(void *)(qword_26B17C528 + 16);
    }
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B447EB8(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v3 = (v3 + v9 + v10 + 1);
  }
LABEL_26:
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

void sub_24B452280(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE84600, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B451B0C(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B452324()
{
  return 1;
}

void *sub_24B45232C@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.CellFTAssistance");
}

void sub_24B45233C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE83A40;
  sub_24B419CD4();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B452398(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B45233C(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B4523D0()
{
}

uint64_t sub_24B45242C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v4 = (unsigned int *)(a1 + 48);
  uint64_t v5 = (unsigned int *)(a1 + 52);
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_40;
        }
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v20;
        *(_DWORD *)(a1 + 60) |= 1u;
        int v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 17) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
        goto LABEL_15;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_40;
        }
LABEL_15:
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v20;
        *(_DWORD *)(a1 + 60) |= 2u;
        int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 25) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_20:
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v20;
        *(_DWORD *)(a1 + 60) |= 4u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 33) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_25:
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v20;
        *(_DWORD *)(a1 + 60) |= 8u;
        unint64_t v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 41) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_30:
        unint64_t v20 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20))
        {
          *(void *)(a1 + 40) = v20;
          *(_DWORD *)(a1 + 60) |= 0x10u;
          unsigned int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          if ((unint64_t)v14 < v13 && *v14 == 48)
          {
            int v15 = v14 + 1;
            *((void *)this + 1) = v15;
LABEL_36:
            if ((unint64_t)v15 >= v13 || *v15 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
              if (!result) {
                return result;
              }
              uint64_t v16 = (unsigned char *)*((void *)this + 1);
              unint64_t v13 = *((void *)this + 2);
            }
            else
            {
              *int v4 = *v15;
              uint64_t v16 = v15 + 1;
              *((void *)this + 1) = v16;
            }
            *(_DWORD *)(a1 + 60) |= 0x20u;
            if ((unint64_t)v16 < v13 && *v16 == 56)
            {
              int v17 = v16 + 1;
              *((void *)this + 1) = v17;
LABEL_49:
              if ((unint64_t)v17 >= v13 || *v17 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
                if (!result) {
                  return result;
                }
                int v19 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v13 = *((void *)this + 2);
              }
              else
              {
                *uint64_t v5 = *v17;
                int v19 = (unsigned __int8 *)(v17 + 1);
                *((void *)this + 1) = v19;
              }
              *(_DWORD *)(a1 + 60) |= 0x40u;
              if (v19 == (unsigned __int8 *)v13
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_20;
        }
        goto LABEL_40;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_25;
        }
        goto LABEL_40;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_30;
        }
        goto LABEL_40;
      case 6u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_36;
      case 7u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_49;
      default:
        int v8 = TagFallback & 7;
LABEL_40:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_24B4527C8(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 48), a2, a4);
    if ((*(_DWORD *)(v5 + 60) & 0x40) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_15:
  uint64_t v7 = *(unsigned int *)(v5 + 52);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v7, a2, a4);
}

uint64_t sub_24B4528C4(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 60);
  if (*(unsigned char *)(a1 + 60))
  {
    unsigned int v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      uint64_t v4 = v3 + 9;
    }
    else {
      uint64_t v4 = v3;
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
      if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        int v2 = *(_DWORD *)(a1 + 60);
      }
      else
      {
        int v6 = 2;
      }
      uint64_t v4 = (v6 + v4);
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if (v7 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      }
      else {
        int v8 = 2;
      }
      uint64_t v4 = (v8 + v4);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 56) = v4;
  return v4;
}

void sub_24B452984(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE84618, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B42563C(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B452A28()
{
  return 1;
}

void *sub_24B452A30@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.NetworkReferenceLocation");
}

void sub_24B452A40(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE83AB8;
  sub_24B419CD4();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B452A9C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B452A40(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B452AD4()
{
}

uint64_t sub_24B452B20(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (unsigned int *)(a1 + 8);
  uint64_t v5 = (unsigned int *)(a1 + 12);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v6 = (char *)*((void *)this + 1);
          if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v6;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v6 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v9 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          int v11 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
            if (!result) {
              return result;
            }
            unint64_t v12 = (unsigned char *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
          }
          else
          {
            *uint64_t v4 = *v11;
            unint64_t v12 = v11 + 1;
            *((void *)this + 1) = v12;
          }
          *(_DWORD *)(a1 + 28) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            unint64_t v13 = v12 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_27;
          }
        }
        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v13;
          int v15 = v13 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 28) |= 2u;
        if ((unint64_t)v15 < v10 && *v15 == 25)
        {
          *((void *)this + 1) = v15 + 1;
          goto LABEL_35;
        }
      }
      if (v8 != 3) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 1) {
        goto LABEL_19;
      }
LABEL_35:
      unint64_t v16 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 16) = v16;
      *(_DWORD *)(a1 + 28) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_19:
    if (v9 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t sub_24B452D28(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v7 = *(double *)(v5 + 16);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v7, a3);
}

uint64_t sub_24B452DB4(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    unsigned int v3 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_14;
    }
LABEL_10:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      int v2 = *(_DWORD *)(a1 + 28);
    }
    else
    {
      int v7 = 2;
    }
    v3 += v7;
    goto LABEL_14;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v5 >= 0x80)
  {
    unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *(_DWORD *)(a1 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  unsigned int v3 = 2;
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_14:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 9;
  }
  else {
    uint64_t result = v3;
  }
LABEL_17:
  *(_DWORD *)(a1 + 24) = result;
  return result;
}

void sub_24B452E50(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE84630, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B4257A8(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B452EF4()
{
  return 1;
}

void *sub_24B452EFC@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.NetworkReferenceTime");
}

void sub_24B452F0C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_24B452FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B452FF8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE83B30;
  sub_24B419CD4();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B453054(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B452FF8(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B45308C()
{
}

uint64_t sub_24B4530DC(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_24B4530F4(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v4 = a1 + 2;
  int v5 = a1 + 3;
  int v6 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!result) {
            return result;
          }
          unsigned int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v4 = *v13;
          unsigned int v14 = v13 + 1;
          *((void *)this + 1) = v14;
        }
        a1[6] |= 1u;
        if ((unint64_t)v14 < v11 && *v14 == 16)
        {
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
          goto LABEL_27;
        }
      }
      if (v9 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v15 = (char *)*((void *)this + 1);
      unint64_t v11 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v15 >= v11 || *v15 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unint64_t v16 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
      }
      else
      {
        *int v5 = *v15;
        unint64_t v16 = v15 + 1;
        *((void *)this + 1) = v16;
      }
      a1[6] |= 2u;
      if ((unint64_t)v16 < v11 && *v16 == 24)
      {
        unint64_t v12 = v16 + 1;
        *((void *)this + 1) = v12;
LABEL_35:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v17 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v12;
          int v17 = (unsigned __int8 *)(v12 + 1);
          *((void *)this + 1) = v17;
        }
        a1[6] |= 4u;
        if (v17 == (unsigned __int8 *)v11
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_19:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

unsigned int *sub_24B453318(unsigned int *result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  unsigned int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  unsigned int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = v5[4];
  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_24B4533A4(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v4 >= 0x80)
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *(_DWORD *)(a1 + 24);
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v6 = 2;
  }
  uint64_t v3 = (v6 + v3);
LABEL_14:
  if ((v2 & 4) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v7 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    }
    else {
      int v8 = 2;
    }
    uint64_t v3 = (v8 + v3);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_24B45345C(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE84648, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B452F0C(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B453500()
{
  return 1;
}

void *sub_24B453508@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.Is801VelocityInfo");
}

void sub_24B453518(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_24B4535C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B4535DC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE83BA8;
  sub_24B419CD4();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B453638(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B4535DC(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B453670()
{
}

uint64_t sub_24B4536BC(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_24B4536D0(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v4 = a1 + 2;
  int v5 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unint64_t v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
        if (!result) {
          return result;
        }
        unint64_t v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        *int v4 = *v11;
        unint64_t v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }
      a1[5] |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unint64_t v13 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v10;
          unint64_t v13 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v13;
        }
        a1[5] |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B453870(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_24B4538DC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 20);
  if (v2)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_24B45396C(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE84660, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B453518(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B453A10()
{
  return 1;
}

void *sub_24B453A18@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.Is801ClockInfo");
}

void sub_24B453A28(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_24B453AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B453AEC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE83C20;
  sub_24B419CD4();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B453B48(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B453AEC(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B453B80()
{
}

uint64_t sub_24B453BCC(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_24B453BE0(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v4 = a1 + 2;
  int v5 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unint64_t v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
        if (!result) {
          return result;
        }
        unint64_t v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        *int v4 = *v11;
        unint64_t v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }
      a1[5] |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unint64_t v13 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v10;
          unint64_t v13 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v13;
        }
        a1[5] |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B453D80(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_24B453DEC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 20);
  if (v2)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_24B453E7C(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE84678, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B453A28(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B453F20()
{
  return 1;
}

void *sub_24B453F28@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.Is801HeightInfo");
}

void sub_24B453F38(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  int v4 = *(_DWORD *)(a2 + 64);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      int v8 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 64) |= 1u;
      *(_DWORD *)(a1 + 8) = v8;
      int v4 = *(_DWORD *)(a2 + 64);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_26;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    int v9 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 64) |= 2u;
    *(_DWORD *)(a1 + 12) = v9;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
LABEL_26:
    int v10 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 64) |= 4u;
    *(_DWORD *)(a1 + 16) = v10;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
LABEL_27:
    int v11 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 64) |= 8u;
    *(_DWORD *)(a1 + 20) = v11;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_29;
    }
LABEL_28:
    int v12 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 64) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v12;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
LABEL_29:
    unsigned int v13 = *(_DWORD *)(a2 + 28);
    if (v13 >= 4) {
      __assert_rtn("set_fix_type", "GnssEmergencyTypes.pb.h", 26013, "::CoreGem::proto::gnss::Emergency::FixType_IsValid(value)");
    }
    *(_DWORD *)(a1 + 64) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v13;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0) {
      goto LABEL_12;
    }
LABEL_11:
    char v5 = *(unsigned char *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 0x40u;
    *(unsigned char *)(a1 + 56) = v5;
    int v4 = *(_DWORD *)(a2 + 64);
LABEL_12:
    if ((v4 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 0x80u;
      int v6 = *(_DWORD **)(a1 + 32);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 32);
      if (!v7)
      {
        sub_24B419CD4();
        uint64_t v7 = *(void *)(qword_26B17C278 + 32);
      }
      sub_24B452F0C(v6, v7);
      int v4 = *(_DWORD *)(a2 + 64);
    }
  }
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    char v14 = *(unsigned char *)(a2 + 57);
    *(_DWORD *)(a1 + 64) |= 0x100u;
    *(unsigned char *)(a1 + 57) = v14;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x200) == 0)
    {
LABEL_21:
      if ((v4 & 0x400) == 0) {
        goto LABEL_22;
      }
LABEL_38:
      char v17 = *(unsigned char *)(a2 + 58);
      *(_DWORD *)(a1 + 64) |= 0x400u;
      *(unsigned char *)(a1 + 58) = v17;
      if ((*(_DWORD *)(a2 + 64) & 0x800) == 0) {
        return;
      }
      goto LABEL_39;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  *(_DWORD *)(a1 + 64) |= 0x200u;
  int v15 = *(_DWORD **)(a1 + 40);
  if (!v15) {
    operator new();
  }
  uint64_t v16 = *(void *)(a2 + 40);
  if (!v16)
  {
    sub_24B419CD4();
    uint64_t v16 = *(void *)(qword_26B17C278 + 40);
  }
  sub_24B453518(v15, v16);
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x400) != 0) {
    goto LABEL_38;
  }
LABEL_22:
  if ((v4 & 0x800) == 0) {
    return;
  }
LABEL_39:
  *(_DWORD *)(a1 + 64) |= 0x800u;
  int v18 = *(_DWORD **)(a1 + 48);
  if (!v18) {
    operator new();
  }
  uint64_t v19 = *(void *)(a2 + 48);
  if (!v19)
  {
    sub_24B419CD4();
    uint64_t v19 = *(void *)(qword_26B17C278 + 48);
  }
  sub_24B453A28(v18, v19);
}

void sub_24B454288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B4542A0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE83C98;
  sub_24B419CD4();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_26B17C278 != a1)
  {
    uint64_t v2 = *((void *)a1 + 4);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)a1 + 5);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)a1 + 6);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B454390(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B4542A0(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B4543C8()
{
}

uint64_t sub_24B454428(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 64);
  if ((_BYTE)v1)
  {
    *(unsigned char *)(result + 56) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)(result + 8) = 0;
    if ((v1 & 0x80) != 0)
    {
      uint64_t v2 = *(void *)(result + 32);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        int v1 = *(_DWORD *)(result + 64);
      }
    }
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(unsigned char *)(result + 57) = 0;
    if ((v1 & 0x200) != 0)
    {
      uint64_t v3 = *(void *)(result + 40);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 20)) {
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
        int v1 = *(_DWORD *)(result + 64);
      }
    }
    *(unsigned char *)(result + 58) = 0;
    if ((v1 & 0x800) != 0)
    {
      uint64_t v4 = *(void *)(result + 48);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 20)) {
          *(void *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_24B4544B8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (unsigned int *)(a1 + 8);
  char v5 = (unsigned int *)(a1 + 12);
  int v6 = (unsigned int *)(a1 + 16);
  uint64_t v7 = (unsigned int *)(a1 + 20);
  int v8 = (unsigned int *)(a1 + 24);
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!result) {
            return result;
          }
          char v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v4 = *v13;
          char v14 = v13 + 1;
          *((void *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 64) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
          goto LABEL_43;
        }
        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_43:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *char v5 = *v15;
          int v30 = v15 + 1;
          *((void *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 64) |= 2u;
        if ((unint64_t)v30 >= v12 || *v30 != 24) {
          continue;
        }
        uint64_t v16 = v30 + 1;
        *((void *)this + 1) = v16;
LABEL_51:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          BOOL v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          BOOL v31 = v16 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 64) |= 4u;
        if ((unint64_t)v31 >= v12 || *v31 != 32) {
          continue;
        }
        char v17 = v31 + 1;
        *((void *)this + 1) = v17;
LABEL_59:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v17;
          int v32 = v17 + 1;
          *((void *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 64) |= 8u;
        if ((unint64_t)v32 >= v12 || *v32 != 40) {
          continue;
        }
        int v18 = v32 + 1;
        *((void *)this + 1) = v18;
LABEL_67:
        if ((unint64_t)v18 >= v12 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unsigned int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v18;
          unsigned int v33 = v18 + 1;
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 64) |= 0x10u;
        if ((unint64_t)v33 >= v12 || *v33 != 48) {
          continue;
        }
        uint64_t v19 = v33 + 1;
        *((void *)this + 1) = v19;
LABEL_75:
        unsigned int v63 = 0;
        if ((unint64_t)v19 >= v12 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63);
          if (!result) {
            return result;
          }
          unsigned int v34 = v63;
        }
        else
        {
          unsigned int v34 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        if (v34 <= 3)
        {
          *(_DWORD *)(a1 + 64) |= 0x20u;
          *(_DWORD *)(a1 + 28) = v34;
        }
        uint64_t v35 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v35 >= v20 || *v35 != 56) {
          continue;
        }
        BOOL v21 = v35 + 1;
        *((void *)this + 1) = v21;
LABEL_85:
        unsigned int v63 = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63);
          if (!result) {
            return result;
          }
          unsigned int v36 = v63;
          unsigned int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unsigned int v36 = *v21;
          unsigned int v37 = v21 + 1;
          *((void *)this + 1) = v37;
        }
        *(unsigned char *)(a1 + 56) = v36 != 0;
        int v22 = *(_DWORD *)(a1 + 64) | 0x40;
        *(_DWORD *)(a1 + 64) = v22;
        if ((unint64_t)v37 >= v20 || *v37 != 66) {
          continue;
        }
        *((void *)this + 1) = v37 + 1;
LABEL_93:
        *(_DWORD *)(a1 + 64) = v22 | 0x80;
        unsigned int v38 = *(unsigned int **)(a1 + 32);
        if (!v38) {
          operator new();
        }
        unsigned int v63 = 0;
        int v39 = (char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v39;
          *((void *)this + 1) = v39 + 1;
        }
        int v40 = *((_DWORD *)this + 14);
        int v41 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v40 + 1;
        if (v40 >= v41) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B4530F4(v38, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v42 = *((_DWORD *)this + 14);
        BOOL v43 = __OFSUB__(v42, 1);
        int v44 = v42 - 1;
        if (v44 < 0 == v43) {
          *((_DWORD *)this + 14) = v44;
        }
        unsigned int v45 = (unsigned char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        if ((unint64_t)v45 >= v23 || *v45 != 72) {
          continue;
        }
        unsigned int v24 = v45 + 1;
        *((void *)this + 1) = v24;
LABEL_107:
        unsigned int v63 = 0;
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63);
          if (!result) {
            return result;
          }
          unsigned int v46 = v63;
          unsigned int v47 = (unsigned char *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }
        else
        {
          unsigned int v46 = *v24;
          unsigned int v47 = v24 + 1;
          *((void *)this + 1) = v47;
        }
        *(unsigned char *)(a1 + 57) = v46 != 0;
        int v25 = *(_DWORD *)(a1 + 64) | 0x100;
        *(_DWORD *)(a1 + 64) = v25;
        if ((unint64_t)v47 >= v23 || *v47 != 82) {
          continue;
        }
        *((void *)this + 1) = v47 + 1;
LABEL_115:
        *(_DWORD *)(a1 + 64) = v25 | 0x200;
        unsigned int v48 = *(unsigned int **)(a1 + 40);
        if (!v48) {
          operator new();
        }
        unsigned int v63 = 0;
        int v49 = (char *)*((void *)this + 1);
        if ((unint64_t)v49 >= *((void *)this + 2) || *v49 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v49;
          *((void *)this + 1) = v49 + 1;
        }
        int v50 = *((_DWORD *)this + 14);
        int v51 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v50 + 1;
        if (v50 >= v51) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B4536D0(v48, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v52 = *((_DWORD *)this + 14);
        BOOL v43 = __OFSUB__(v52, 1);
        int v53 = v52 - 1;
        if (v53 < 0 == v43) {
          *((_DWORD *)this + 14) = v53;
        }
        unsigned int v54 = (unsigned char *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        if ((unint64_t)v54 >= v26 || *v54 != 88) {
          continue;
        }
        int v27 = v54 + 1;
        *((void *)this + 1) = v27;
LABEL_129:
        unsigned int v63 = 0;
        if ((unint64_t)v27 >= v26 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63);
          if (!result) {
            return result;
          }
          unsigned int v55 = v63;
          v56 = (unsigned char *)*((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
        }
        else
        {
          unsigned int v55 = *v27;
          v56 = v27 + 1;
          *((void *)this + 1) = v56;
        }
        *(unsigned char *)(a1 + 58) = v55 != 0;
        int v28 = *(_DWORD *)(a1 + 64) | 0x400;
        *(_DWORD *)(a1 + 64) = v28;
        if ((unint64_t)v56 >= v26 || *v56 != 98) {
          continue;
        }
        *((void *)this + 1) = v56 + 1;
LABEL_137:
        *(_DWORD *)(a1 + 64) = v28 | 0x800;
        int v57 = *(unsigned int **)(a1 + 48);
        if (!v57) {
          operator new();
        }
        unsigned int v63 = 0;
        v58 = (char *)*((void *)this + 1);
        if ((unint64_t)v58 >= *((void *)this + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v58;
          *((void *)this + 1) = v58 + 1;
        }
        int v59 = *((_DWORD *)this + 14);
        int v60 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v59 + 1;
        if (v59 < v60)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
          if (sub_24B453BE0(v57, this))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
              int v61 = *((_DWORD *)this + 14);
              BOOL v43 = __OFSUB__(v61, 1);
              int v62 = v61 - 1;
              if (v62 < 0 == v43) {
                *((_DWORD *)this + 14) = v62;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_51;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        char v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_59;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_67;
      case 6u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_75;
      case 7u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        BOOL v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_85;
      case 8u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_35;
        }
        int v22 = *(_DWORD *)(a1 + 64);
        goto LABEL_93;
      case 9u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        unsigned int v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_107;
      case 0xAu:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_35;
        }
        int v25 = *(_DWORD *)(a1 + 64);
        goto LABEL_115;
      case 0xBu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        goto LABEL_129;
      case 0xCu:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_35;
        }
        int v28 = *(_DWORD *)(a1 + 64);
        goto LABEL_137;
      default:
        int v11 = TagFallback & 7;
LABEL_35:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_24B454D70(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 64);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v7 = *(void *)(v5 + 32);
  if (!v7)
  {
    sub_24B419CD4();
    uint64_t v7 = *(void *)(qword_26B17C278 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 57), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_28:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 58), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 64) & 0x800) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_25:
  uint64_t v8 = *(void *)(v5 + 40);
  if (!v8)
  {
    sub_24B419CD4();
    uint64_t v8 = *(void *)(qword_26B17C278 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x400) != 0) {
    goto LABEL_28;
  }
LABEL_12:
  if ((v6 & 0x800) == 0) {
    return result;
  }
LABEL_29:
  uint64_t v9 = *(void *)(v5 + 48);
  if (!v9)
  {
    sub_24B419CD4();
    uint64_t v9 = *(void *)(qword_26B17C278 + 48);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v9, a2, a4);
}

uint64_t sub_24B454F34(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 64);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_47;
  }
  if ((v2 & 1) == 0)
  {
    LODWORD(v3) = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v5 = 1;
  }
  LODWORD(v3) = v5 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_10:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      int v2 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v7 = 1;
    }
    LODWORD(v3) = v3 + v7 + 1;
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      int v2 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v9 = 1;
    }
    LODWORD(v3) = v3 + v9 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_27;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v11 = 2;
  }
  LODWORD(v3) = v11 + v3;
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0) {
      goto LABEL_37;
    }
    goto LABEL_31;
  }
LABEL_27:
  unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v13 = 2;
  }
  LODWORD(v3) = v13 + v3;
  if ((v2 & 0x20) != 0)
  {
LABEL_31:
    char v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v14 & 0x80000000) != 0)
    {
      int v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
      int v2 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v15 = 2;
    }
    LODWORD(v3) = v15 + v3;
  }
LABEL_37:
  if ((v2 & 0x40) != 0) {
    uint64_t v3 = (v3 + 2);
  }
  else {
    uint64_t v3 = v3;
  }
  if ((v2 & 0x80) != 0)
  {
    uint64_t v16 = *(void *)(a1 + 32);
    if (!v16)
    {
      sub_24B419CD4();
      uint64_t v16 = *(void *)(qword_26B17C278 + 32);
    }
    char v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B4533A4(v16);
    int v18 = (int)v17;
    if (v17 >= 0x80) {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
    }
    else {
      int v19 = 1;
    }
    uint64_t v3 = (v3 + v18 + v19 + 1);
    int v2 = *(_DWORD *)(a1 + 64);
  }
LABEL_47:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0) {
      unsigned int v20 = v3 + 2;
    }
    else {
      unsigned int v20 = v3;
    }
    if ((v2 & 0x200) != 0)
    {
      uint64_t v21 = *(void *)(a1 + 40);
      if (!v21)
      {
        sub_24B419CD4();
        uint64_t v21 = *(void *)(qword_26B17C278 + 40);
      }
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B4538DC(v21);
      int v23 = (int)v22;
      if (v22 >= 0x80) {
        int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
      }
      else {
        int v24 = 1;
      }
      v20 += v23 + v24 + 1;
      int v2 = *(_DWORD *)(a1 + 64);
    }
    if ((v2 & 0x400) != 0) {
      uint64_t v3 = v20 + 2;
    }
    else {
      uint64_t v3 = v20;
    }
    if ((v2 & 0x800) != 0)
    {
      uint64_t v25 = *(void *)(a1 + 48);
      if (!v25)
      {
        sub_24B419CD4();
        uint64_t v25 = *(void *)(qword_26B17C278 + 48);
      }
      unint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B453DEC(v25);
      int v27 = (int)v26;
      if (v26 >= 0x80) {
        int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
      }
      else {
        int v28 = 1;
      }
      uint64_t v3 = (v3 + v27 + v28 + 1);
    }
  }
  *(_DWORD *)(a1 + 60) = v3;
  return v3;
}

void sub_24B455198(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE84690, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B453F38(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B45523C()
{
  return 1;
}

void *sub_24B455244@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.Is801LocationInd");
}

void sub_24B455254(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 52))
  {
    unsigned int v5 = *(_DWORD *)(a2 + 8);
    if (v5 >= 9) {
      __assert_rtn("set_result", "GnssEmergencyTypes.pb.h", 26232, "::CoreGem::proto::gnss::Emergency::ErrorCodes_IsValid(value)");
    }
    *(_DWORD *)(a1 + 52) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
    int v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  *(_DWORD *)(a1 + 52) |= 4u;
  uint64_t v8 = *(_DWORD **)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9)
  {
    sub_24B419CD4();
    uint64_t v9 = *(void *)(qword_26B17C578 + 16);
  }
  sub_24B426DA4(v8, v9);
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_26:
    *(_DWORD *)(a1 + 52) |= 0x10u;
    uint64_t v12 = *(void *)(a1 + 32);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *(void *)(a2 + 32);
    if (!v13)
    {
      sub_24B419CD4();
      uint64_t v13 = *(void *)(qword_26B17C578 + 32);
    }
    sub_24B453F38(v12, v13);
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_12:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_21:
  *(_DWORD *)(a1 + 52) |= 8u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *(void *)(a2 + 24);
  if (!v11)
  {
    sub_24B419CD4();
    uint64_t v11 = *(void *)(qword_26B17C578 + 24);
  }
  sub_24B43D264(v10, v11);
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x10) != 0) {
    goto LABEL_26;
  }
LABEL_11:
  if ((v4 & 0x20) == 0) {
    goto LABEL_12;
  }
LABEL_31:
  unsigned int v14 = *(_DWORD *)(a2 + 40);
  if (v14 >= 4) {
    __assert_rtn("set_aflt_action", "GnssEmergencyTypes.pb.h", 26403, "::CoreGem::proto::gnss::Emergency::AfltAction_IsValid(value)");
  }
  *(_DWORD *)(a1 + 52) |= 0x20u;
  *(_DWORD *)(a1 + 40) = v14;
  if ((*(_DWORD *)(a2 + 52) & 0x40) != 0)
  {
LABEL_13:
    char v6 = *(unsigned char *)(a2 + 44);
    *(_DWORD *)(a1 + 52) |= 0x40u;
    *(unsigned char *)(a1 + 44) = v6;
  }
}

void sub_24B455544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B45555C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE83D10;
  sub_24B419CD4();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_26B17C578 != a1)
  {
    uint64_t v2 = *((void *)a1 + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)a1 + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)a1 + 4);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B45564C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B45555C(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B455684()
{
}

uint64_t sub_24B4556E0(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 52);
  if ((_BYTE)v2)
  {
    *(void *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v2 = *(_DWORD *)(result + 52);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result)
      {
        uint64_t result = sub_24B43D774(result);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t result = *(void *)(v1 + 32);
      if (result) {
        uint64_t result = sub_24B454428(result);
      }
    }
    *(_DWORD *)(v1 + 40) = 0;
    *(unsigned char *)(v1 + 44) = 0;
  }
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_24B455760(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (unsigned int *)(a1 + 12);
  while (2)
  {
    unsigned int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v46 = 0;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
          if (!result) {
            return result;
          }
          unsigned int v9 = v46;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 8)
        {
          *(_DWORD *)(a1 + 52) |= 1u;
          *(_DWORD *)(a1 + 8) = v9;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v18 < v10 && *v18 == 16)
        {
          uint64_t v11 = v18 + 1;
          *((void *)this + 1) = v11;
          goto LABEL_35;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!result) {
            return result;
          }
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v4 = *v11;
          int v19 = v11 + 1;
          *((void *)this + 1) = v19;
        }
        int v12 = *(_DWORD *)(a1 + 52) | 2;
        *(_DWORD *)(a1 + 52) = v12;
        if ((unint64_t)v19 >= v10 || *v19 != 26) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 52) = v12 | 4;
        unsigned int v20 = *(_DWORD **)(a1 + 16);
        if (!v20) {
          operator new();
        }
        unsigned int v46 = 0;
        uint64_t v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0; {
        }
          }
        else
        {
          unsigned int v46 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B426FD0(v20, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v24 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)this + 14) = v26;
        }
        int v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 != 34) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 52) |= 8u;
        uint64_t v28 = *(void *)(a1 + 24);
        if (!v28) {
          operator new();
        }
        unsigned int v46 = 0;
        int v29 = (char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0; {
        }
          }
        else
        {
          unsigned int v46 = *v29;
          *((void *)this + 1) = v29 + 1;
        }
        int v30 = *((_DWORD *)this + 14);
        int v31 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v30 + 1;
        if (v30 >= v31) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B43D7E8(v28, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v32 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v32, 1);
        int v33 = v32 - 1;
        if (v33 < 0 == v25) {
          *((_DWORD *)this + 14) = v33;
        }
        unsigned int v34 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 != 42) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 52) |= 0x10u;
        uint64_t v35 = *(void *)(a1 + 32);
        if (!v35) {
          operator new();
        }
        unsigned int v46 = 0;
        unsigned int v36 = (char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0; {
        }
          }
        else
        {
          unsigned int v46 = *v36;
          *((void *)this + 1) = v36 + 1;
        }
        int v37 = *((_DWORD *)this + 14);
        int v38 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v37 + 1;
        if (v37 < v38)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
          if (sub_24B4544B8(v35, this))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
              int v39 = *((_DWORD *)this + 14);
              BOOL v25 = __OFSUB__(v39, 1);
              int v40 = v39 - 1;
              if (v40 < 0 == v25) {
                *((_DWORD *)this + 14) = v40;
              }
              int v41 = (unsigned char *)*((void *)this + 1);
              unint64_t v13 = *((void *)this + 2);
              if ((unint64_t)v41 < v13 && *v41 == 48)
              {
                unsigned int v14 = v41 + 1;
                *((void *)this + 1) = v14;
LABEL_85:
                unsigned int v46 = 0;
                if ((unint64_t)v14 >= v13 || *v14 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
                  if (!result) {
                    return result;
                  }
                  unsigned int v42 = v46;
                }
                else
                {
                  unsigned int v42 = *v14;
                  *((void *)this + 1) = v14 + 1;
                }
                if (v42 <= 3)
                {
                  *(_DWORD *)(a1 + 52) |= 0x20u;
                  *(_DWORD *)(a1 + 40) = v42;
                }
                BOOL v43 = (unsigned char *)*((void *)this + 1);
                unint64_t v15 = *((void *)this + 2);
                if ((unint64_t)v43 < v15 && *v43 == 56)
                {
                  uint64_t v16 = v43 + 1;
                  *((void *)this + 1) = v16;
LABEL_95:
                  unsigned int v46 = 0;
                  if ((unint64_t)v16 >= v15 || *v16 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
                    if (!result) {
                      return result;
                    }
                    unsigned int v44 = v46;
                    unsigned int v45 = (unsigned __int8 *)*((void *)this + 1);
                    unint64_t v15 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v44 = *v16;
                    unsigned int v45 = (unsigned __int8 *)(v16 + 1);
                    *((void *)this + 1) = v45;
                  }
                  *(unsigned char *)(a1 + 44) = v44 != 0;
                  *(_DWORD *)(a1 + 52) |= 0x40u;
                  if (v45 == (unsigned __int8 *)v15
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)this + 36) = 1;
                    return result;
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_24;
        }
        int v12 = *(_DWORD *)(a1 + 52);
        goto LABEL_43;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_57;
        }
        goto LABEL_24;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_71;
        }
        goto LABEL_24;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_85;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_95;
      default:
        int v7 = TagFallback & 7;
LABEL_24:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_24B455DC8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7)
  {
    sub_24B419CD4();
    uint64_t v7 = *(void *)(qword_26B17C578 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8)
  {
    sub_24B419CD4();
    uint64_t v8 = *(void *)(qword_26B17C578 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_20:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x40) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_17:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9)
  {
    sub_24B419CD4();
    uint64_t v9 = *(void *)(qword_26B17C578 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_21:
  uint64_t v10 = *(unsigned __int8 *)(v5 + 44);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, (uint64_t)a2, a4);
}

uint64_t sub_24B455F00(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_49;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      unsigned int v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else if (v5 >= 0x80)
    {
      unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      int v2 = *(_DWORD *)(a1 + 52);
      if ((v2 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      unsigned int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    unsigned int v3 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_17;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
    int v2 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v7 = 2;
  }
  v3 += v7;
LABEL_17:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8)
    {
      sub_24B419CD4();
      uint64_t v8 = *(void *)(qword_26B17C578 + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B427298(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      int v11 = 1;
    }
    v3 += v10 + v11 + 1;
    int v2 = *(_DWORD *)(a1 + 52);
    if ((v2 & 8) == 0)
    {
LABEL_19:
      if ((v2 & 0x10) == 0) {
        goto LABEL_20;
      }
LABEL_34:
      uint64_t v16 = *(void *)(a1 + 32);
      if (!v16)
      {
        sub_24B419CD4();
        uint64_t v16 = *(void *)(qword_26B17C578 + 32);
      }
      char v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B454F34(v16);
      int v18 = (int)v17;
      if (v17 >= 0x80) {
        int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
      }
      else {
        int v19 = 1;
      }
      v3 += v18 + v19 + 1;
      int v2 = *(_DWORD *)(a1 + 52);
      if ((v2 & 0x20) == 0) {
        goto LABEL_46;
      }
      goto LABEL_40;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)(a1 + 24);
  if (!v12)
  {
    sub_24B419CD4();
    uint64_t v12 = *(void *)(qword_26B17C578 + 24);
  }
  unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B43E0EC(v12);
  int v14 = (int)v13;
  if (v13 >= 0x80) {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  }
  else {
    int v15 = 1;
  }
  v3 += v14 + v15 + 1;
  int v2 = *(_DWORD *)(a1 + 52);
  if ((v2 & 0x10) != 0) {
    goto LABEL_34;
  }
LABEL_20:
  if ((v2 & 0x20) != 0)
  {
LABEL_40:
    unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 11;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      int v2 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      int v21 = 2;
    }
    v3 += v21;
  }
LABEL_46:
  if ((v2 & 0x40) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_49:
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

void sub_24B4560DC(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE846A8, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B455254(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B456180()
{
  return 1;
}

void *sub_24B456188@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.MeasurementReportWithEstimate");
}

void sub_24B456198(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE83D88;
  sub_24B419CD4();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B4561F4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B456198(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B45622C()
{
}

uint64_t sub_24B456278(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)this + 1);
    if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v21 = 0;
        uint64_t v8 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          unsigned int v9 = *v8;
          int v10 = v8 + 1;
          *((void *)this + 1) = v10;
LABEL_23:
          *(unsigned char *)(a1 + 8) = v9 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            int v11 = v10 + 1;
            *((void *)this + 1) = v11;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
        if (result)
        {
          unsigned int v9 = v21;
          int v10 = (unsigned char *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
LABEL_26:
        unsigned int v21 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v14 = v21;
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v14 = *v11;
          int v15 = v11 + 1;
          *((void *)this + 1) = v15;
        }
        *(unsigned char *)(a1 + 9) = v14 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v15 >= v7 || *v15 != 24) {
          continue;
        }
        uint64_t v12 = v15 + 1;
        *((void *)this + 1) = v12;
LABEL_34:
        unsigned int v21 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
          char v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v12;
          char v17 = v12 + 1;
          *((void *)this + 1) = v17;
        }
        *(unsigned char *)(a1 + 10) = v16 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v17 >= v7 || *v17 != 32) {
          continue;
        }
        unint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_42:
        unsigned int v21 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v18 = v21;
          int v19 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v13;
          int v19 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 11) = v18 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v19 != (unsigned __int8 *)v7 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_24B456560(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
      if ((*(_DWORD *)(v5 + 16) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 11);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_24B456608(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_24B456648(uint64_t a1, unsigned char *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE846C0, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B44EB74(a1, lpsrc);
}

uint64_t sub_24B4566EC()
{
  return 1;
}

void *sub_24B4566F4@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gnss.Emergency.Cdma1xContext");
}

uint64_t sub_24B456704(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B45670C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 120);
}

uint64_t sub_24B456714(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_24B45671C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_24B456724(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_24B45672C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_24B456734(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_24B45673C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B456744(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_24B45674C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_24B456754(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_24B45675C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_24B456764(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_24B45676C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B456774(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_24B45677C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_24B456784(uint64_t a1)
{
  return *(unsigned int *)(a1 + 100);
}

uint64_t sub_24B45678C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B456794(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B45679C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B4567A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B4567AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

uint64_t sub_24B4567B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_24B4567BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B4567C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B4567CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B4567D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B4567DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B4567E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_24B4567EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_24B4567F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B4567FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_24B456804(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_24B45680C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B456814(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B45681C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B456824(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B45682C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B456834(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B45683C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_24B456844(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_24B45684C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B456854(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_24B45685C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_24B456864(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B45686C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B456874(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_24B45687C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B456884(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B45688C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_24B456894(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B45689C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_24B4568A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_24B4568AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_24B4568B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B4568BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_24B4568C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_24B4568CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_24B4568D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_24B4568DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_24B4568E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B4568EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_24B4568F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B4568FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_24B456904(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_24B45690C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_24B456914(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_24B45691C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_24B456924(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_24B45692C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_24B456934(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B45693C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B456944(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_24B45694C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_24B456954(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B45695C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_24B456964(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_24B45696C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_24B456974(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

uint64_t sub_24B45697C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_24B456984(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_24B45698C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_24B456994(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_24B45699C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_24B4569A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_24B4569AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_24B4569B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_24B4569BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_24B4569C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_24B4569CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B4569D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B4569DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B4569E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_24B4569EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_24B4569F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

void sub_24B4569FC(int *a1, uint64_t a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)a1);
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)a2 + 8 * v4);
      int v6 = a1[3];
      uint64_t v7 = a1[2];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[4])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)a1);
          int v6 = a1[3];
        }
        a1[3] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)a1;
      a1[2] = v7 + 1;
      sub_24B41F3C0(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 8));
  }
}

uint64_t sub_24B456B18()
{
  if (qword_26B17C598) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C598 + 8))(qword_26B17C598);
  }
  if (qword_26B17C288) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C288 + 8))(qword_26B17C288);
  }
  if (qword_26B17C588) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C588 + 8))(qword_26B17C588);
  }
  if (qword_26B17C290) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C290 + 8))(qword_26B17C290);
  }
  if (qword_26B17C298) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C298 + 8))(qword_26B17C298);
  }
  if (qword_26B17C2A0) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C2A0 + 8))(qword_26B17C2A0);
  }
  if (qword_26B17C2A8) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C2A8 + 8))(qword_26B17C2A8);
  }
  if (qword_26B17C2B0) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C2B0 + 8))(qword_26B17C2B0);
  }
  if (qword_26B17C590) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C590 + 8))(qword_26B17C590);
  }
  if (qword_26B17C2B8) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C2B8 + 8))(qword_26B17C2B8);
  }
  if (qword_26B17C2C0) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C2C0 + 8))(qword_26B17C2C0);
  }
  if (qword_26B17C2C8) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C2C8 + 8))(qword_26B17C2C8);
  }
  if (qword_26B17C2D0) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C2D0 + 8))(qword_26B17C2D0);
  }
  if (qword_26B17C2D8) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C2D8 + 8))(qword_26B17C2D8);
  }
  if (qword_26B17C2E0) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C2E0 + 8))(qword_26B17C2E0);
  }
  if (qword_26B17C2E8) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C2E8 + 8))(qword_26B17C2E8);
  }
  if (qword_26B17C2F0) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C2F0 + 8))(qword_26B17C2F0);
  }
  if (qword_26B17C2F8) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C2F8 + 8))(qword_26B17C2F8);
  }
  if (qword_26B17C300) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C300 + 8))(qword_26B17C300);
  }
  if (qword_26B17C308) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C308 + 8))(qword_26B17C308);
  }
  if (qword_26B17C310) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C310 + 8))(qword_26B17C310);
  }
  if (qword_26B17C318) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C318 + 8))(qword_26B17C318);
  }
  if (qword_26B17C320) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C320 + 8))(qword_26B17C320);
  }
  if (qword_26B17C328) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C328 + 8))(qword_26B17C328);
  }
  if (qword_26B17C330) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C330 + 8))(qword_26B17C330);
  }
  if (qword_26B17C338) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C338 + 8))(qword_26B17C338);
  }
  if (qword_26B17C340) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C340 + 8))(qword_26B17C340);
  }
  if (qword_26B17C348) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C348 + 8))(qword_26B17C348);
  }
  if (qword_26B17C350) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C350 + 8))(qword_26B17C350);
  }
  if (qword_26B17C358) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C358 + 8))(qword_26B17C358);
  }
  if (qword_26B17C360) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C360 + 8))(qword_26B17C360);
  }
  if (qword_26B17C368) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C368 + 8))(qword_26B17C368);
  }
  if (qword_26B17C370) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C370 + 8))(qword_26B17C370);
  }
  if (qword_26B17C378) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C378 + 8))(qword_26B17C378);
  }
  if (qword_26B17C380) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C380 + 8))(qword_26B17C380);
  }
  if (qword_26B17C388) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C388 + 8))(qword_26B17C388);
  }
  if (qword_26B17C390) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C390 + 8))(qword_26B17C390);
  }
  if (qword_26B17C398) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C398 + 8))(qword_26B17C398);
  }
  if (qword_26B17C3A0) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C3A0 + 8))(qword_26B17C3A0);
  }
  if (qword_26B17C3A8) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C3A8 + 8))(qword_26B17C3A8);
  }
  if (qword_26B17C3B0) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C3B0 + 8))(qword_26B17C3B0);
  }
  if (qword_26B17C3B8) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C3B8 + 8))(qword_26B17C3B8);
  }
  if (qword_26B17C3C0) {
    (*(void (**)(uint64_t))(*(void *)qword_26B17C3C0 + 8))(qword_26B17C3C0);
  }
  uint64_t result = qword_26B17C3C8;
  if (qword_26B17C3C8)
  {
    int v1 = *(uint64_t (**)(void))(*(void *)qword_26B17C3C8 + 8);
    return v1();
  }
  return result;
}

void sub_24B457380(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
}

void sub_24B45829C()
{
  uint64_t v0 = qword_26B17C468;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v1[0] = MEMORY[0x263F8C768] + 16;
    v1[1] = sub_24B457380;
    char v2 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v1);
  }
}

void sub_24B458320(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_24B458334()
{
  return 1;
}

uint64_t sub_24B4584A8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26FE846E8;
  *(_OWORD *)(a1 + 364) = 0u;
  *(_OWORD *)(a1 + 380) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(unsigned char *)(a1 + 360) = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  sub_24B458598(a1, a2);
  return a1;
}

void sub_24B45854C(_Unwind_Exception *a1)
{
  uint64_t v3 = *((void *)v1 + 43);
  if (v3) {
    MEMORY[0x24C5D26D0](v3, 0x1000C8052888210);
  }
  uint64_t v4 = *((void *)v1 + 40);
  if (v4) {
    MEMORY[0x24C5D26D0](v4, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void sub_24B458598(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v93);
  }
  int v4 = *(_DWORD *)(a2 + 328);
  if (v4)
  {
    sub_24B3EB460(a1 + 320, *(_DWORD *)(a1 + 328) + v4);
    memcpy((void *)(*(void *)(a1 + 320) + 4 * *(int *)(a1 + 328)), *(const void **)(a2 + 320), 4 * *(int *)(a2 + 328));
    *(_DWORD *)(a1 + 328) += *(_DWORD *)(a2 + 328);
  }
  int v5 = *(_DWORD *)(a2 + 352);
  if (v5)
  {
    sub_24B3EB460(a1 + 344, *(_DWORD *)(a1 + 352) + v5);
    memcpy((void *)(*(void *)(a1 + 344) + 4 * *(int *)(a1 + 352)), *(const void **)(a2 + 344), 4 * *(int *)(a2 + 352));
    *(_DWORD *)(a1 + 352) += *(_DWORD *)(a2 + 352);
  }
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if (!(_BYTE)v6) {
    goto LABEL_46;
  }
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 388) |= 1u;
    *(void *)(a1 + 8) = v7;
    unsigned int v6 = *(_DWORD *)(a2 + 388);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  int v8 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 388) |= 2u;
  *(_DWORD *)(a1 + 16) = v8;
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_19:
  int v9 = *(_DWORD *)(a2 + 20);
  if ((sub_24B458334() & 1) == 0) {
    __assert_rtn("set_type", "GpsdProtocol.pb.h", 5845, "::CoreGem::proto::gpsd::Request_Type_IsValid(value)");
  }
  *(_DWORD *)(a1 + 388) |= 4u;
  *(_DWORD *)(a1 + 20) = v9;
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_21:
  *(_DWORD *)(a1 + 388) |= 8u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *(void *)(a2 + 24);
  if (!v11)
  {
    sub_24B45829C();
    uint64_t v11 = *(void *)(qword_26B17C598 + 24);
  }
  sub_24B45FF9C(v10, v11);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_31:
    *(_DWORD *)(a1 + 388) |= 0x20u;
    unsigned int v14 = *(int **)(a1 + 40);
    if (!v14) {
      operator new();
    }
    uint64_t v15 = *(void *)(a2 + 40);
    if (!v15)
    {
      sub_24B45829C();
      uint64_t v15 = *(void *)(qword_26B17C598 + 40);
    }
    sub_24B46022C(v14, v15);
    unsigned int v6 = *(_DWORD *)(a2 + 388);
    if ((v6 & 0x40) == 0)
    {
LABEL_15:
      if ((v6 & 0x80) == 0) {
        goto LABEL_46;
      }
      goto LABEL_41;
    }
    goto LABEL_36;
  }
LABEL_26:
  *(_DWORD *)(a1 + 388) |= 0x10u;
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = *(void *)(a2 + 32);
  if (!v13)
  {
    sub_24B45829C();
    uint64_t v13 = *(void *)(qword_26B17C598 + 32);
  }
  sub_24B460140(v12, v13);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_14:
  if ((v6 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_36:
  *(_DWORD *)(a1 + 388) |= 0x40u;
  unsigned int v16 = *(int **)(a1 + 48);
  if (!v16) {
    operator new();
  }
  uint64_t v17 = *(void *)(a2 + 48);
  if (!v17)
  {
    sub_24B45829C();
    uint64_t v17 = *(void *)(qword_26B17C598 + 48);
  }
  sub_24B4603A4(v16, v17);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x80) != 0)
  {
LABEL_41:
    *(_DWORD *)(a1 + 388) |= 0x80u;
    unsigned int v18 = *(int **)(a1 + 56);
    if (!v18) {
      operator new();
    }
    uint64_t v19 = *(void *)(a2 + 56);
    if (!v19)
    {
      sub_24B45829C();
      uint64_t v19 = *(void *)(qword_26B17C598 + 56);
    }
    sub_24B46051C(v18, v19);
    unsigned int v6 = *(_DWORD *)(a2 + 388);
  }
LABEL_46:
  if ((v6 & 0xFF00) == 0) {
    goto LABEL_96;
  }
  if ((v6 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 388) |= 0x100u;
    uint64_t v20 = *(void *)(a1 + 64);
    if (!v20) {
      operator new();
    }
    uint64_t v21 = *(void *)(a2 + 64);
    if (!v21)
    {
      sub_24B45829C();
      uint64_t v21 = *(void *)(qword_26B17C598 + 64);
    }
    sub_24B460694(v20, v21);
    unsigned int v6 = *(_DWORD *)(a2 + 388);
    if ((v6 & 0x200) == 0)
    {
LABEL_49:
      if ((v6 & 0x400) == 0) {
        goto LABEL_50;
      }
      goto LABEL_66;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_49;
  }
  *(_DWORD *)(a1 + 388) |= 0x200u;
  uint64_t v22 = *(void *)(a1 + 72);
  if (!v22) {
    operator new();
  }
  uint64_t v23 = *(void *)(a2 + 72);
  if (!v23)
  {
    sub_24B45829C();
    uint64_t v23 = *(void *)(qword_26B17C598 + 72);
  }
  sub_24B460780(v22, v23);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x400) == 0)
  {
LABEL_50:
    if ((v6 & 0x800) == 0) {
      goto LABEL_51;
    }
    goto LABEL_71;
  }
LABEL_66:
  *(_DWORD *)(a1 + 388) |= 0x400u;
  uint64_t v24 = *(void *)(a1 + 80);
  if (!v24) {
    operator new();
  }
  uint64_t v25 = *(void *)(a2 + 80);
  if (!v25)
  {
    sub_24B45829C();
    uint64_t v25 = *(void *)(qword_26B17C598 + 80);
  }
  sub_24B4609B8(v24, v25);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x800) == 0)
  {
LABEL_51:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_76;
  }
LABEL_71:
  *(_DWORD *)(a1 + 388) |= 0x800u;
  uint64_t v26 = *(void *)(a1 + 88);
  if (!v26) {
    operator new();
  }
  uint64_t v27 = *(void *)(a2 + 88);
  if (!v27)
  {
    sub_24B45829C();
    uint64_t v27 = *(void *)(qword_26B17C598 + 88);
  }
  sub_24B460B30(v26, v27);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x1000) == 0)
  {
LABEL_52:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_81;
  }
LABEL_76:
  *(_DWORD *)(a1 + 388) |= 0x1000u;
  uint64_t v28 = *(void *)(a1 + 96);
  if (!v28) {
    operator new();
  }
  uint64_t v29 = *(void *)(a2 + 96);
  if (!v29)
  {
    sub_24B45829C();
    uint64_t v29 = *(void *)(qword_26B17C598 + 96);
  }
  sub_24B460C20(v28, v29);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x2000) == 0)
  {
LABEL_53:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_86;
  }
LABEL_81:
  *(_DWORD *)(a1 + 388) |= 0x2000u;
  uint64_t v30 = *(void *)(a1 + 104);
  if (!v30) {
    operator new();
  }
  uint64_t v31 = *(void *)(a2 + 104);
  if (!v31)
  {
    sub_24B45829C();
    uint64_t v31 = *(void *)(qword_26B17C598 + 104);
  }
  sub_24B460CF4(v30, v31);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x4000) == 0)
  {
LABEL_54:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_91;
  }
LABEL_86:
  *(_DWORD *)(a1 + 388) |= 0x4000u;
  uint64_t v32 = *(void *)(a1 + 112);
  if (!v32) {
    operator new();
  }
  uint64_t v33 = *(void *)(a2 + 112);
  if (!v33)
  {
    sub_24B45829C();
    uint64_t v33 = *(void *)(qword_26B17C598 + 112);
  }
  sub_24B460E00(v32, v33);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x8000) != 0)
  {
LABEL_91:
    *(_DWORD *)(a1 + 388) |= 0x8000u;
    uint64_t v34 = *(void *)(a1 + 120);
    if (!v34) {
      operator new();
    }
    uint64_t v35 = *(void *)(a2 + 120);
    if (!v35)
    {
      sub_24B45829C();
      uint64_t v35 = *(void *)(qword_26B17C598 + 120);
    }
    sub_24B460EEC(v34, v35);
    unsigned int v6 = *(_DWORD *)(a2 + 388);
  }
LABEL_96:
  if ((v6 & 0xFF0000) == 0) {
    goto LABEL_146;
  }
  if ((v6 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 388) |= 0x10000u;
    uint64_t v36 = *(void *)(a1 + 128);
    if (!v36) {
      operator new();
    }
    uint64_t v37 = *(void *)(a2 + 128);
    if (!v37)
    {
      sub_24B45829C();
      uint64_t v37 = *(void *)(qword_26B17C598 + 128);
    }
    sub_24B46101C(v36, v37);
    unsigned int v6 = *(_DWORD *)(a2 + 388);
    if ((v6 & 0x20000) == 0)
    {
LABEL_99:
      if ((v6 & 0x40000) == 0) {
        goto LABEL_100;
      }
      goto LABEL_116;
    }
  }
  else if ((v6 & 0x20000) == 0)
  {
    goto LABEL_99;
  }
  *(_DWORD *)(a1 + 388) |= 0x20000u;
  int v38 = *(int **)(a1 + 136);
  if (!v38) {
    operator new();
  }
  uint64_t v39 = *(void *)(a2 + 136);
  if (!v39)
  {
    sub_24B45829C();
    uint64_t v39 = *(void *)(qword_26B17C598 + 136);
  }
  sub_24B4610FC(v38, v39);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x40000) == 0)
  {
LABEL_100:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_121;
  }
LABEL_116:
  *(_DWORD *)(a1 + 388) |= 0x40000u;
  uint64_t v40 = *(void *)(a1 + 144);
  if (!v40) {
    operator new();
  }
  uint64_t v41 = *(void *)(a2 + 144);
  if (!v41)
  {
    sub_24B45829C();
    uint64_t v41 = *(void *)(qword_26B17C598 + 144);
  }
  sub_24B461274(v40, v41);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x80000) == 0)
  {
LABEL_101:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_102;
    }
    goto LABEL_126;
  }
LABEL_121:
  *(_DWORD *)(a1 + 388) |= 0x80000u;
  uint64_t v42 = *(void *)(a1 + 152);
  if (!v42) {
    operator new();
  }
  BOOL v43 = *(unsigned char **)(a2 + 152);
  if (!v43)
  {
    sub_24B45829C();
    BOOL v43 = *(unsigned char **)(qword_26B17C598 + 152);
  }
  sub_24B461318(v42, v43);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x100000) == 0)
  {
LABEL_102:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_131;
  }
LABEL_126:
  *(_DWORD *)(a1 + 388) |= 0x100000u;
  uint64_t v44 = *(void *)(a1 + 160);
  if (!v44) {
    operator new();
  }
  uint64_t v45 = *(void *)(a2 + 160);
  if (!v45)
  {
    sub_24B45829C();
    uint64_t v45 = *(void *)(qword_26B17C598 + 160);
  }
  sub_24B461464(v44, v45);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x200000) == 0)
  {
LABEL_103:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_104;
    }
    goto LABEL_136;
  }
LABEL_131:
  *(_DWORD *)(a1 + 388) |= 0x200000u;
  uint64_t v46 = *(void *)(a1 + 168);
  if (!v46) {
    operator new();
  }
  uint64_t v47 = *(void *)(a2 + 168);
  if (!v47)
  {
    sub_24B45829C();
    uint64_t v47 = *(void *)(qword_26B17C598 + 168);
  }
  sub_24B461508(v46, v47);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x400000) == 0)
  {
LABEL_104:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_146;
    }
    goto LABEL_141;
  }
LABEL_136:
  *(_DWORD *)(a1 + 388) |= 0x400000u;
  unsigned int v48 = *(_DWORD **)(a1 + 176);
  if (!v48) {
    operator new();
  }
  uint64_t v49 = *(void *)(a2 + 176);
  if (!v49)
  {
    sub_24B45829C();
    uint64_t v49 = *(void *)(qword_26B17C598 + 176);
  }
  sub_24B4615CC(v48, v49);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x800000) != 0)
  {
LABEL_141:
    *(_DWORD *)(a1 + 388) |= 0x800000u;
    uint64_t v50 = *(void *)(a1 + 184);
    if (!v50) {
      operator new();
    }
    uint64_t v51 = *(void *)(a2 + 184);
    if (!v51)
    {
      sub_24B45829C();
      uint64_t v51 = *(void *)(qword_26B17C598 + 184);
    }
    sub_24B461690(v50, v51);
    unsigned int v6 = *(_DWORD *)(a2 + 388);
  }
LABEL_146:
  if (!HIBYTE(v6)) {
    goto LABEL_196;
  }
  if ((v6 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 388) |= 0x1000000u;
    uint64_t v52 = *(void *)(a1 + 192);
    if (!v52) {
      operator new();
    }
    uint64_t v53 = *(void *)(a2 + 192);
    if (!v53)
    {
      sub_24B45829C();
      uint64_t v53 = *(void *)(qword_26B17C598 + 192);
    }
    sub_24B461734(v52, v53);
    unsigned int v6 = *(_DWORD *)(a2 + 388);
    if ((v6 & 0x2000000) == 0)
    {
LABEL_149:
      if ((v6 & 0x4000000) == 0) {
        goto LABEL_150;
      }
      goto LABEL_166;
    }
  }
  else if ((v6 & 0x2000000) == 0)
  {
    goto LABEL_149;
  }
  *(_DWORD *)(a1 + 388) |= 0x2000000u;
  uint64_t v54 = *(void *)(a1 + 200);
  if (!v54) {
    operator new();
  }
  uint64_t v55 = *(void *)(a2 + 200);
  if (!v55)
  {
    sub_24B45829C();
    uint64_t v55 = *(void *)(qword_26B17C598 + 200);
  }
  sub_24B461814(v54, v55);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_150:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_151;
    }
    goto LABEL_171;
  }
LABEL_166:
  *(_DWORD *)(a1 + 388) |= 0x4000000u;
  uint64_t v56 = *(void *)(a1 + 208);
  if (!v56) {
    operator new();
  }
  uint64_t v57 = *(void *)(a2 + 208);
  if (!v57)
  {
    sub_24B45829C();
    uint64_t v57 = *(void *)(qword_26B17C598 + 208);
  }
  sub_24B4618F4(v56, v57);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_151:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_152;
    }
    goto LABEL_176;
  }
LABEL_171:
  *(_DWORD *)(a1 + 388) |= 0x8000000u;
  uint64_t v58 = *(void *)(a1 + 216);
  if (!v58) {
    operator new();
  }
  int v59 = *(unsigned char **)(a2 + 216);
  if (!v59)
  {
    sub_24B45829C();
    int v59 = *(unsigned char **)(qword_26B17C598 + 216);
  }
  sub_24B461C34(v58, v59);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_152:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_153;
    }
    goto LABEL_181;
  }
LABEL_176:
  *(_DWORD *)(a1 + 388) |= 0x10000000u;
  uint64_t v60 = *(void *)(a1 + 224);
  if (!v60) {
    operator new();
  }
  uint64_t v61 = *(void *)(a2 + 224);
  if (!v61)
  {
    sub_24B45829C();
    uint64_t v61 = *(void *)(qword_26B17C598 + 224);
  }
  sub_24B461D20(v60, v61);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_153:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_154;
    }
    goto LABEL_186;
  }
LABEL_181:
  *(_DWORD *)(a1 + 388) |= 0x20000000u;
  uint64_t v62 = *(void *)(a1 + 232);
  if (!v62) {
    operator new();
  }
  uint64_t v63 = *(void *)(a2 + 232);
  if (!v63)
  {
    sub_24B45829C();
    uint64_t v63 = *(void *)(qword_26B17C598 + 232);
  }
  sub_24B461DEC(v62, v63);
  unsigned int v6 = *(_DWORD *)(a2 + 388);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_154:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_196;
    }
    goto LABEL_191;
  }
LABEL_186:
  *(_DWORD *)(a1 + 388) |= 0x40000000u;
  uint64_t v64 = *(void *)(a1 + 240);
  if (!v64) {
    operator new();
  }
  int v65 = *(unsigned char **)(a2 + 240);
  if (!v65)
  {
    sub_24B45829C();
    int v65 = *(unsigned char **)(qword_26B17C598 + 240);
  }
  sub_24B461EB0(v64, v65);
  if ((*(_DWORD *)(a2 + 388) & 0x80000000) != 0)
  {
LABEL_191:
    *(_DWORD *)(a1 + 388) |= 0x80000000;
    uint64_t v66 = *(void *)(a1 + 248);
    if (!v66) {
      operator new();
    }
    uint64_t v67 = *(void *)(a2 + 248);
    if (!v67)
    {
      sub_24B45829C();
      uint64_t v67 = *(void *)(qword_26B17C598 + 248);
    }
    sub_24B44EC98(v66, v67);
  }
LABEL_196:
  int v68 = *(_DWORD *)(a2 + 392);
  if (!(_BYTE)v68) {
    goto LABEL_242;
  }
  if (v68)
  {
    *(_DWORD *)(a1 + 392) |= 1u;
    unsigned int v69 = *(_DWORD **)(a1 + 256);
    if (!v69) {
      operator new();
    }
    int v70 = *(_DWORD **)(a2 + 256);
    if (!v70)
    {
      sub_24B45829C();
      int v70 = *(_DWORD **)(qword_26B17C598 + 256);
    }
    sub_24B427428(v69, v70);
    int v68 = *(_DWORD *)(a2 + 392);
    if ((v68 & 2) == 0)
    {
LABEL_199:
      if ((v68 & 4) == 0) {
        goto LABEL_200;
      }
      goto LABEL_212;
    }
  }
  else if ((v68 & 2) == 0)
  {
    goto LABEL_199;
  }
  int v71 = *(_DWORD *)(a2 + 296);
  *(_DWORD *)(a1 + 392) |= 2u;
  *(_DWORD *)(a1 + 296) = v71;
  int v68 = *(_DWORD *)(a2 + 392);
  if ((v68 & 4) == 0)
  {
LABEL_200:
    if ((v68 & 8) == 0) {
      goto LABEL_201;
    }
    goto LABEL_217;
  }
LABEL_212:
  *(_DWORD *)(a1 + 392) |= 4u;
  int v72 = *(_DWORD **)(a1 + 264);
  if (!v72) {
    operator new();
  }
  uint64_t v73 = *(void *)(a2 + 264);
  if (!v73)
  {
    sub_24B45829C();
    uint64_t v73 = *(void *)(qword_26B17C598 + 264);
  }
  sub_24B448F64(v72, v73);
  int v68 = *(_DWORD *)(a2 + 392);
  if ((v68 & 8) == 0)
  {
LABEL_201:
    if ((v68 & 0x10) == 0) {
      goto LABEL_202;
    }
    goto LABEL_222;
  }
LABEL_217:
  *(_DWORD *)(a1 + 392) |= 8u;
  v74 = *(_DWORD **)(a1 + 272);
  if (!v74) {
    operator new();
  }
  unsigned int v75 = *(_DWORD **)(a2 + 272);
  if (!v75)
  {
    sub_24B45829C();
    unsigned int v75 = *(_DWORD **)(qword_26B17C598 + 272);
  }
  sub_24B449E4C(v74, v75);
  int v68 = *(_DWORD *)(a2 + 392);
  if ((v68 & 0x10) == 0)
  {
LABEL_202:
    if ((v68 & 0x20) == 0) {
      goto LABEL_203;
    }
    goto LABEL_227;
  }
LABEL_222:
  *(_DWORD *)(a1 + 392) |= 0x10u;
  v76 = *(int **)(a1 + 280);
  if (!v76) {
    operator new();
  }
  uint64_t v77 = *(void *)(a2 + 280);
  if (!v77)
  {
    sub_24B45829C();
    uint64_t v77 = *(void *)(qword_26B17C598 + 280);
  }
  sub_24B44D398(v76, v77);
  int v68 = *(_DWORD *)(a2 + 392);
  if ((v68 & 0x20) == 0)
  {
LABEL_203:
    if ((v68 & 0x40) == 0) {
      goto LABEL_204;
    }
    goto LABEL_232;
  }
LABEL_227:
  *(_DWORD *)(a1 + 392) |= 0x20u;
  uint64_t v78 = *(void *)(a1 + 288);
  if (!v78) {
    operator new();
  }
  uint64_t v79 = *(void *)(a2 + 288);
  if (!v79)
  {
    sub_24B45829C();
    uint64_t v79 = *(void *)(qword_26B17C598 + 288);
  }
  sub_24B45076C(v78, v79);
  int v68 = *(_DWORD *)(a2 + 392);
  if ((v68 & 0x40) == 0)
  {
LABEL_204:
    if ((v68 & 0x80) == 0) {
      goto LABEL_242;
    }
    goto LABEL_237;
  }
LABEL_232:
  *(_DWORD *)(a1 + 392) |= 0x40u;
  uint64_t v80 = *(void *)(a1 + 304);
  if (!v80) {
    operator new();
  }
  uint64_t v81 = *(void *)(a2 + 304);
  if (!v81)
  {
    sub_24B45829C();
    uint64_t v81 = *(void *)(qword_26B17C598 + 304);
  }
  sub_24B451B0C(v80, v81);
  int v68 = *(_DWORD *)(a2 + 392);
  if ((v68 & 0x80) != 0)
  {
LABEL_237:
    *(_DWORD *)(a1 + 392) |= 0x80u;
    uint64_t v82 = *(void *)(a1 + 312);
    if (!v82) {
      operator new();
    }
    uint64_t v83 = *(void *)(a2 + 312);
    if (!v83)
    {
      sub_24B45829C();
      uint64_t v83 = *(void *)(qword_26B17C598 + 312);
    }
    sub_24B44E30C(v82, v83);
    int v68 = *(_DWORD *)(a2 + 392);
  }
LABEL_242:
  if ((v68 & 0x1FE00) == 0) {
    return;
  }
  if ((v68 & 0x200) != 0)
  {
    *(_DWORD *)(a1 + 392) |= 0x200u;
    unsigned int v84 = *(int **)(a1 + 336);
    if (!v84) {
      operator new();
    }
    uint64_t v85 = *(void *)(a2 + 336);
    if (!v85)
    {
      sub_24B45829C();
      uint64_t v85 = *(void *)(qword_26B17C598 + 336);
    }
    sub_24B41DFA4(v84, v85);
    int v68 = *(_DWORD *)(a2 + 392);
    if ((v68 & 0x400) == 0)
    {
LABEL_245:
      if ((v68 & 0x1000) == 0) {
        goto LABEL_246;
      }
      goto LABEL_256;
    }
  }
  else if ((v68 & 0x400) == 0)
  {
    goto LABEL_245;
  }
  int v86 = *(_DWORD *)(a2 + 300);
  *(_DWORD *)(a1 + 392) |= 0x400u;
  *(_DWORD *)(a1 + 300) = v86;
  int v68 = *(_DWORD *)(a2 + 392);
  if ((v68 & 0x1000) == 0)
  {
LABEL_246:
    if ((v68 & 0x2000) == 0) {
      goto LABEL_247;
    }
    goto LABEL_257;
  }
LABEL_256:
  char v87 = *(unsigned char *)(a2 + 360);
  *(_DWORD *)(a1 + 392) |= 0x1000u;
  *(unsigned char *)(a1 + 360) = v87;
  int v68 = *(_DWORD *)(a2 + 392);
  if ((v68 & 0x2000) == 0)
  {
LABEL_247:
    if ((v68 & 0x4000) == 0) {
      goto LABEL_248;
    }
    goto LABEL_258;
  }
LABEL_257:
  int v88 = *(_DWORD *)(a2 + 364);
  *(_DWORD *)(a1 + 392) |= 0x2000u;
  *(_DWORD *)(a1 + 364) = v88;
  int v68 = *(_DWORD *)(a2 + 392);
  if ((v68 & 0x4000) == 0)
  {
LABEL_248:
    if ((v68 & 0x8000) == 0) {
      return;
    }
    goto LABEL_263;
  }
LABEL_258:
  *(_DWORD *)(a1 + 392) |= 0x4000u;
  uint64_t v89 = *(void *)(a1 + 368);
  if (!v89) {
    operator new();
  }
  uint64_t v90 = *(void *)(a2 + 368);
  if (!v90)
  {
    sub_24B45829C();
    uint64_t v90 = *(void *)(qword_26B17C598 + 368);
  }
  sub_24B423204(v89, v90);
  if ((*(_DWORD *)(a2 + 392) & 0x8000) != 0)
  {
LABEL_263:
    *(_DWORD *)(a1 + 392) |= 0x8000u;
    v91 = *(int **)(a1 + 376);
    if (!v91) {
      operator new();
    }
    uint64_t v92 = *(void *)(a2 + 376);
    if (!v92)
    {
      sub_24B45829C();
      uint64_t v92 = *(void *)(qword_26B17C598 + 376);
    }
    sub_24B41FC9C(v91, v92);
  }
}

void sub_24B459CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B459CF0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE846E8;
  sub_24B459D80(a1);
  uint64_t v2 = *((void *)a1 + 43);
  if (v2) {
    MEMORY[0x24C5D26D0](v2, 0x1000C8052888210);
  }
  uint64_t v3 = *((void *)a1 + 40);
  if (v3) {
    MEMORY[0x24C5D26D0](v3, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B459D80(void *a1)
{
  sub_24B45829C();
  if ((void *)qword_26B17C598 != a1)
  {
    uint64_t v2 = a1[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[4];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = a1[5];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = a1[6];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = a1[7];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = a1[8];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = a1[9];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = a1[10];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = a1[11];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = a1[12];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = a1[13];
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = a1[14];
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    uint64_t v14 = a1[15];
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    uint64_t v15 = a1[16];
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    }
    uint64_t v16 = a1[17];
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
    uint64_t v17 = a1[18];
    if (v17) {
      (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    }
    uint64_t v18 = a1[19];
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    }
    uint64_t v19 = a1[20];
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
    uint64_t v20 = a1[21];
    if (v20) {
      (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
    }
    uint64_t v21 = a1[22];
    if (v21) {
      (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
    }
    uint64_t v22 = a1[23];
    if (v22) {
      (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
    }
    uint64_t v23 = a1[24];
    if (v23) {
      (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
    }
    uint64_t v24 = a1[25];
    if (v24) {
      (*(void (**)(uint64_t))(*(void *)v24 + 8))(v24);
    }
    uint64_t v25 = a1[26];
    if (v25) {
      (*(void (**)(uint64_t))(*(void *)v25 + 8))(v25);
    }
    uint64_t v26 = a1[27];
    if (v26) {
      (*(void (**)(uint64_t))(*(void *)v26 + 8))(v26);
    }
    uint64_t v27 = a1[28];
    if (v27) {
      (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
    }
    uint64_t v28 = a1[29];
    if (v28) {
      (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
    }
    uint64_t v29 = a1[30];
    if (v29) {
      (*(void (**)(uint64_t))(*(void *)v29 + 8))(v29);
    }
    uint64_t v30 = a1[31];
    if (v30) {
      (*(void (**)(uint64_t))(*(void *)v30 + 8))(v30);
    }
    uint64_t v31 = a1[32];
    if (v31) {
      (*(void (**)(uint64_t))(*(void *)v31 + 8))(v31);
    }
    uint64_t v32 = a1[33];
    if (v32) {
      (*(void (**)(uint64_t))(*(void *)v32 + 8))(v32);
    }
    uint64_t v33 = a1[34];
    if (v33) {
      (*(void (**)(uint64_t))(*(void *)v33 + 8))(v33);
    }
    uint64_t v34 = a1[35];
    if (v34) {
      (*(void (**)(uint64_t))(*(void *)v34 + 8))(v34);
    }
    uint64_t v35 = a1[36];
    if (v35) {
      (*(void (**)(uint64_t))(*(void *)v35 + 8))(v35);
    }
    uint64_t v36 = a1[38];
    if (v36) {
      (*(void (**)(uint64_t))(*(void *)v36 + 8))(v36);
    }
    uint64_t v37 = a1[39];
    if (v37) {
      (*(void (**)(uint64_t))(*(void *)v37 + 8))(v37);
    }
    uint64_t v38 = a1[42];
    if (v38) {
      (*(void (**)(uint64_t))(*(void *)v38 + 8))(v38);
    }
    uint64_t v39 = a1[46];
    if (v39) {
      (*(void (**)(uint64_t))(*(void *)v39 + 8))(v39);
    }
    uint64_t v40 = a1[47];
    if (v40)
    {
      uint64_t v41 = *(void (**)(void))(*(void *)v40 + 8);
      v41();
    }
  }
}

void sub_24B45A484(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B459CF0(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B45A4BC()
{
}

uint64_t sub_24B45A564(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = (unsigned int *)(result + 388);
  unsigned int v3 = *(_DWORD *)(result + 388);
  if ((_BYTE)v3)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    if ((v3 & 8) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result)
      {
        uint64_t result = sub_24B45AB8C(result);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 32);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x20) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 40);
      if (v5)
      {
        uint64_t result = sub_24B416D94(v5 + 8);
        *(_DWORD *)(v5 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x40) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 48);
      if (v6)
      {
        uint64_t result = sub_24B416D94(v6 + 8);
        *(_DWORD *)(v6 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 56);
      if (v7)
      {
        uint64_t result = sub_24B416D94(v7 + 8);
        *(_DWORD *)(v7 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v8 = *(void *)(v1 + 64);
      if (v8)
      {
        if (*(unsigned char *)(v8 + 36))
        {
          *(void *)(v8 + 8) = 0;
          *(void *)(v8 + 16) = 0;
          *(void *)(v8 + 24) = 0;
        }
        *(_DWORD *)(v8 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t v9 = *(void *)(v1 + 72);
      if (v9)
      {
        int v10 = *(_DWORD *)(v9 + 76);
        if ((_BYTE)v10)
        {
          *(_OWORD *)(v9 + 49) = 0u;
          *(_OWORD *)(v9 + 40) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(_OWORD *)(v9 + 8) = 0u;
        }
        if ((v10 & 0xFF00) != 0)
        {
          *(unsigned char *)(v9 + 69) = 0;
          *(_DWORD *)(v9 + 65) = 0;
        }
        *(_DWORD *)(v9 + 76) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x400) != 0)
    {
      uint64_t v11 = *(void *)(v1 + 80);
      if (v11)
      {
        if (*(unsigned char *)(v11 + 32))
        {
          *(void *)(v11 + 8) = 0;
          *(void *)(v11 + 16) = 0x400000000;
          *(_DWORD *)(v11 + 24) = 0;
        }
        *(_DWORD *)(v11 + 32) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x800) != 0)
    {
      uint64_t v12 = *(void *)(v1 + 88);
      if (v12)
      {
        if (*(unsigned char *)(v12 + 24))
        {
          *(void *)(v12 + 8) = 0;
          *(_DWORD *)(v12 + 16) = 4;
        }
        *(_DWORD *)(v12 + 24) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x1000) != 0)
    {
      uint64_t v13 = *(void *)(v1 + 96);
      if (v13)
      {
        if (*(unsigned char *)(v13 + 16)) {
          *(_DWORD *)(v13 + 8) = 15;
        }
        *(_DWORD *)(v13 + 16) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x2000) != 0)
    {
      uint64_t v14 = *(void *)(v1 + 104);
      if (v14)
      {
        if (*(unsigned char *)(v14 + 44))
        {
          *(_OWORD *)(v14 + 24) = 0u;
          *(_OWORD *)(v14 + 8) = 0u;
        }
        *(_DWORD *)(v14 + 44) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x4000) != 0)
    {
      uint64_t v15 = *(void *)(v1 + 112);
      if (v15)
      {
        if (*(unsigned char *)(v15 + 36))
        {
          *(void *)(v15 + 8) = 0;
          *(void *)(v15 + 16) = 0;
          *(void *)(v15 + 24) = 0;
        }
        *(_DWORD *)(v15 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x8000) != 0)
    {
      uint64_t result = *(void *)(v1 + 120);
      if (result)
      {
        uint64_t result = sub_24B45AD60(result);
        unsigned int v3 = *v2;
      }
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      uint64_t v16 = *(void *)(v1 + 128);
      if (v16)
      {
        if (*(unsigned char *)(v16 + 20))
        {
          uint64_t v17 = *(void *)(v16 + 8);
          if (v17 != MEMORY[0x263F8C740])
          {
            if (*(char *)(v17 + 23) < 0)
            {
              **(unsigned char **)uint64_t v17 = 0;
              *(void *)(v17 + 8) = 0;
            }
            else
            {
              *(unsigned char *)uint64_t v17 = 0;
              *(unsigned char *)(v17 + 23) = 0;
            }
          }
        }
        *(_DWORD *)(v16 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x20000) != 0)
    {
      uint64_t v18 = *(void *)(v1 + 136);
      if (v18)
      {
        uint64_t result = sub_24B416D94(v18 + 8);
        *(_DWORD *)(v18 + 36) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x40000) != 0)
    {
      uint64_t v19 = *(void *)(v1 + 144);
      if (v19)
      {
        if (*(unsigned char *)(v19 + 20)) {
          *(void *)(v19 + 8) = 0;
        }
        *(_DWORD *)(v19 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x80000) != 0)
    {
      uint64_t v20 = *(void *)(v1 + 152);
      if (v20)
      {
        if (*(unsigned char *)(v20 + 20))
        {
          *(unsigned char *)(v20 + 8) = 1;
          *(_DWORD *)(v20 + 9) = 0;
          *(unsigned char *)(v20 + 13) = 0;
        }
        *(_DWORD *)(v20 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x100000) != 0)
    {
      uint64_t v21 = *(void *)(v1 + 160);
      if (v21)
      {
        if (*(unsigned char *)(v21 + 20)) {
          *(void *)(v21 + 8) = 0;
        }
        *(_DWORD *)(v21 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x200000) != 0)
    {
      uint64_t v22 = *(void *)(v1 + 168);
      if (v22)
      {
        if (*(unsigned char *)(v22 + 20))
        {
          *(unsigned char *)(v22 + 8) = 0;
          *(_DWORD *)(v22 + 12) = 0;
        }
        *(_DWORD *)(v22 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x400000) != 0)
    {
      uint64_t v23 = *(void *)(v1 + 176);
      if (v23)
      {
        if (*(unsigned char *)(v23 + 20)) {
          *(void *)(v23 + 8) = 0;
        }
        *(_DWORD *)(v23 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x800000) != 0)
    {
      uint64_t v24 = *(void *)(v1 + 184);
      if (v24)
      {
        if (*(unsigned char *)(v24 + 16)) {
          *(unsigned char *)(v24 + 8) = 0;
        }
        *(_DWORD *)(v24 + 16) = 0;
        unsigned int v3 = *v2;
      }
    }
  }
  if (HIBYTE(v3))
  {
    if ((v3 & 0x1000000) != 0)
    {
      uint64_t v25 = *(void *)(v1 + 192);
      if (v25)
      {
        if (*(unsigned char *)(v25 + 20))
        {
          uint64_t v26 = *(void *)(v25 + 8);
          if (v26 != MEMORY[0x263F8C740])
          {
            if (*(char *)(v26 + 23) < 0)
            {
              **(unsigned char **)uint64_t v26 = 0;
              *(void *)(v26 + 8) = 0;
            }
            else
            {
              *(unsigned char *)uint64_t v26 = 0;
              *(unsigned char *)(v26 + 23) = 0;
            }
          }
        }
        *(_DWORD *)(v25 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x2000000) != 0)
    {
      uint64_t v27 = *(void *)(v1 + 200);
      if (v27)
      {
        if (*(unsigned char *)(v27 + 20))
        {
          uint64_t v28 = *(void *)(v27 + 8);
          if (v28 != MEMORY[0x263F8C740])
          {
            if (*(char *)(v28 + 23) < 0)
            {
              **(unsigned char **)uint64_t v28 = 0;
              *(void *)(v28 + 8) = 0;
            }
            else
            {
              *(unsigned char *)uint64_t v28 = 0;
              *(unsigned char *)(v28 + 23) = 0;
            }
          }
        }
        *(_DWORD *)(v27 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x4000000) != 0)
    {
      uint64_t result = *(void *)(v1 + 208);
      if (result)
      {
        uint64_t result = sub_24B45AF2C(result);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x8000000) != 0)
    {
      uint64_t v29 = *(void *)(v1 + 216);
      if (v29)
      {
        if (*(unsigned char *)(v29 + 16))
        {
          *(_WORD *)(v29 + 8) = 0;
          *(unsigned char *)(v29 + 10) = 0;
        }
        *(_DWORD *)(v29 + 16) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x10000000) != 0)
    {
      uint64_t v30 = *(void *)(v1 + 224);
      if (v30)
      {
        if (*(unsigned char *)(v30 + 16)) {
          *(_DWORD *)(v30 + 8) = 0;
        }
        *(_DWORD *)(v30 + 16) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x20000000) != 0)
    {
      uint64_t v31 = *(void *)(v1 + 232);
      if (v31)
      {
        if (*(unsigned char *)(v31 + 24))
        {
          *(void *)(v31 + 8) = 0;
          *(_DWORD *)(v31 + 16) = 0;
        }
        *(_DWORD *)(v31 + 24) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x40000000) != 0)
    {
      uint64_t v32 = *(void *)(v1 + 240);
      if (v32)
      {
        if (*(unsigned char *)(v32 + 16)) {
          *(_WORD *)(v32 + 8) = 0;
        }
        *(_DWORD *)(v32 + 16) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x80000000) != 0)
    {
      uint64_t result = *(void *)(v1 + 248);
      if (result) {
        uint64_t result = sub_24B44F04C(result);
      }
    }
  }
  int v33 = *(_DWORD *)(v1 + 392);
  if ((_BYTE)v33)
  {
    if (v33)
    {
      uint64_t v34 = *(void *)(v1 + 256);
      if (v34)
      {
        int v35 = *(_DWORD *)(v34 + 80);
        if ((_BYTE)v35)
        {
          *(_OWORD *)(v34 + 24) = 0u;
          *(_OWORD *)(v34 + 8) = 0u;
        }
        if ((v35 & 0xFF00) != 0)
        {
          *(_OWORD *)(v34 + 56) = 0u;
          *(_OWORD *)(v34 + 40) = 0u;
        }
        if ((v35 & 0xFF0000) != 0) {
          *(_DWORD *)(v34 + 72) = 0;
        }
        *(_DWORD *)(v34 + 80) = 0;
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    *(_DWORD *)(v1 + 296) = 0;
    if ((v33 & 4) != 0)
    {
      uint64_t result = *(void *)(v1 + 264);
      if (result)
      {
        uint64_t result = sub_24B449394(result);
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v33 & 8) != 0)
    {
      uint64_t v36 = *(void *)(v1 + 272);
      if (v36)
      {
        int v37 = *(_DWORD *)(v36 + 68);
        if ((_BYTE)v37)
        {
          *(_OWORD *)(v36 + 24) = 0u;
          *(_OWORD *)(v36 + 8) = 0u;
        }
        if ((v37 & 0xFF00) != 0)
        {
          *(void *)(v36 + 40) = 0;
          *(void *)(v36 + 48) = 0;
          *(void *)(v36 + 56) = 0;
        }
        *(_DWORD *)(v36 + 68) = 0;
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v33 & 0x10) != 0)
    {
      uint64_t v38 = *(void *)(v1 + 280);
      if (v38)
      {
        if (*(unsigned char *)(v38 + 52))
        {
          *(void *)(v38 + 32) = 0;
          *(void *)(v38 + 40) = 0;
        }
        uint64_t result = sub_24B416D94(v38 + 8);
        *(_DWORD *)(v38 + 52) = 0;
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v33 & 0x20) != 0)
    {
      uint64_t result = *(void *)(v1 + 288);
      if (result)
      {
        uint64_t result = sub_24B450C24(result);
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v33 & 0x40) != 0)
    {
      uint64_t result = *(void *)(v1 + 304);
      if (result)
      {
        uint64_t result = sub_24B451DC0(result);
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v33 & 0x80) != 0)
    {
      uint64_t result = *(void *)(v1 + 312);
      if (result)
      {
        uint64_t result = sub_24B44E620(result);
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
  }
  if ((v33 & 0x1FE00) != 0)
  {
    if ((v33 & 0x200) != 0)
    {
      uint64_t result = *(void *)(v1 + 336);
      if (result)
      {
        uint64_t result = sub_24B41E580(result);
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    *(_DWORD *)(v1 + 300) = 0;
    *(unsigned char *)(v1 + 360) = 0;
    *(_DWORD *)(v1 + 364) = 0;
    if ((v33 & 0x4000) != 0)
    {
      uint64_t result = *(void *)(v1 + 368);
      if (result)
      {
        uint64_t result = sub_24B4236E0(result);
        int v33 = *(_DWORD *)(v1 + 392);
      }
    }
    if ((v33 & 0x8000) != 0)
    {
      uint64_t v39 = *(void *)(v1 + 376);
      if (v39)
      {
        if (*(unsigned char *)(v39 + 40)) {
          *(_DWORD *)(v39 + 32) = 0;
        }
        uint64_t result = sub_24B416D94(v39 + 8);
        *(_DWORD *)(v39 + 40) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 328) = 0;
  *(_DWORD *)(v1 + 352) = 0;
  *(void *)uint64_t v2 = 0;
  return result;
}

uint64_t sub_24B45AB8C(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    if (*(unsigned char *)(result + 36))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        int v2 = *(_DWORD *)(v1 + 96);
        if ((_BYTE)v2)
        {
          *(_OWORD *)(v1 + 56) = 0u;
          *(_OWORD *)(v1 + 40) = 0u;
          *(_OWORD *)(v1 + 24) = 0u;
          *(_OWORD *)(v1 + 8) = 0u;
        }
        if ((v2 & 0xFF00) != 0)
        {
          *(void *)(v1 + 72) = 0;
          *(void *)(v1 + 80) = 0;
          *(_DWORD *)(v1 + 88) = 0;
        }
        *(_DWORD *)(v1 + 96) = 0;
      }
    }
    *(_DWORD *)(result + 16) = 0;
    *(unsigned char *)(result + 20) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_24B45ABE8(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_24B45AC00(uint64_t a1)
{
  uint64_t result = sub_24B416D94(a1 + 8);
  *(_DWORD *)(a1 + 36) = 0;
  return result;
}

uint64_t sub_24B45AC2C(uint64_t a1)
{
  uint64_t result = sub_24B416D94(a1 + 8);
  *(_DWORD *)(a1 + 36) = 0;
  return result;
}

uint64_t sub_24B45AC58(uint64_t a1)
{
  uint64_t result = sub_24B416D94(a1 + 8);
  *(_DWORD *)(a1 + 36) = 0;
  return result;
}

uint64_t sub_24B45AC84(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_24B45AC9C(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 76);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 49) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(unsigned char *)(result + 69) = 0;
    *(_DWORD *)(result + 65) = 0;
  }
  *(_DWORD *)(result + 76) = 0;
  return result;
}

uint64_t sub_24B45ACD4(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0x400000000;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_24B45ACF8(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 4;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_24B45AD14(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 15;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_24B45AD2C(uint64_t result)
{
  if (*(unsigned char *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_24B45AD48(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_24B45AD60(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    if (*(unsigned char *)(result + 24))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_24B45ADAC(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    uint64_t v1 = *(void *)(result + 8);
    if (v1 != MEMORY[0x263F8C740])
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_24B45ADF0(uint64_t a1)
{
  uint64_t result = sub_24B416D94(a1 + 8);
  *(_DWORD *)(a1 + 36) = 0;
  return result;
}

uint64_t sub_24B45AE1C(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_24B45AE30(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    *(unsigned char *)(result + 8) = 1;
    *(_DWORD *)(result + 9) = 0;
    *(unsigned char *)(result + 13) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_24B45AE50(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_24B45AE64(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)(result + 12) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_24B45AE7C(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_24B45AE90(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(unsigned char *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_24B45AEA4(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    uint64_t v1 = *(void *)(result + 8);
    if (v1 != MEMORY[0x263F8C740])
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_24B45AEE8(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    uint64_t v1 = *(void *)(result + 8);
    if (v1 != MEMORY[0x263F8C740])
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_24B45AF2C(uint64_t result)
{
  LOBYTE(v1) = *(unsigned char *)(result + 56);
  if ((_BYTE)v1)
  {
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)(result + 12) = 0;
    *(_DWORD *)(result + 48) = 0;
    if ((v1 & 8) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        int v3 = *(_DWORD *)(v2 + 56);
        if ((_BYTE)v3)
        {
          *(_DWORD *)(v2 + 36) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
          *(void *)(v2 + 8) = 0;
          *(unsigned char *)(v2 + 32) = 0;
        }
        if ((v3 & 0xFF00) != 0)
        {
          *(void *)(v2 + 40) = 0;
          *(_DWORD *)(v2 + 48) = 0;
        }
        *(_DWORD *)(v2 + 56) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 52)) {
          *(void *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 24) = 0;
        *(_DWORD *)(v4 + 40) = 0;
        *(_DWORD *)(v4 + 52) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }
    if ((v1 & 0x20) != 0)
    {
      uint64_t v5 = *(void *)(result + 32);
      if (v5)
      {
        if ((*(_WORD *)(v5 + 36) & 0x1FE) != 0) {
          *(void *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 16) = 0;
        *(_DWORD *)(v5 + 36) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }
    if ((v1 & 0x40) != 0)
    {
      uint64_t v6 = *(void *)(result + 40);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 20)) {
          *(void *)(v6 + 8) = 0;
        }
        *(_DWORD *)(v6 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_24B45AFF4(uint64_t result)
{
  if (*(unsigned char *)(result + 16))
  {
    *(_WORD *)(result + 8) = 0;
    *(unsigned char *)(result + 10) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_24B45B00C(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_24B45B020(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_24B45B038(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_WORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_24B45B04C(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  uint64_t v4 = (char **)((char *)this + 8);
  uint64_t v5 = a1 + 344;
  uint64_t v6 = a1 + 320;
  uint64_t v7 = (unsigned int *)(a1 + 16);
  uint64_t v8 = (unsigned int *)(a1 + 296);
  uint64_t v9 = (unsigned int *)(a1 + 300);
  v333 = (unint64_t *)(a1 + 8);
  v334 = (unsigned int *)(a1 + 364);
LABEL_2:
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v333);
          if (!result) {
            return result;
          }
          uint64_t v15 = (char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v333 = *v14;
          uint64_t v15 = v14 + 1;
          *uint64_t v4 = v15;
        }
        *(_DWORD *)(a1 + 388) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          uint64_t v16 = v15 + 1;
          *uint64_t v4 = v16;
          goto LABEL_120;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_120:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          uint64_t v30 = (char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v16;
          uint64_t v30 = v16 + 1;
          *uint64_t v4 = v30;
        }
        *(_DWORD *)(a1 + 388) |= 2u;
        if ((unint64_t)v30 >= v13 || *v30 != 24) {
          continue;
        }
        uint64_t v17 = v30 + 1;
        *uint64_t v4 = v17;
LABEL_128:
        v336[0] = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336);
          if (!result) {
            return result;
          }
          unsigned int v31 = v336[0];
        }
        else
        {
          unsigned int v31 = *v17;
          *uint64_t v4 = v17 + 1;
        }
        if (sub_24B458334())
        {
          *(_DWORD *)(a1 + 388) |= 4u;
          *(_DWORD *)(a1 + 20) = v31;
        }
        uint64_t v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 34) {
          continue;
        }
        *uint64_t v4 = v32 + 1;
LABEL_138:
        *(_DWORD *)(a1 + 388) |= 8u;
        uint64_t v33 = *(void *)(a1 + 24);
        if (!v33) {
          operator new();
        }
        v336[0] = 0;
        uint64_t v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v34;
          *uint64_t v4 = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B468E08(v33, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v37 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v37, 1);
        int v39 = v37 - 1;
        if (v39 < 0 == v38) {
          *((_DWORD *)this + 14) = v39;
        }
        uint64_t v40 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 != 42) {
          continue;
        }
        *uint64_t v4 = v40 + 1;
LABEL_152:
        *(_DWORD *)(a1 + 388) |= 0x10u;
        uint64_t v41 = *(void *)(a1 + 32);
        if (!v41) {
          operator new();
        }
        v336[0] = 0;
        uint64_t v42 = (char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v42;
          *uint64_t v4 = v42 + 1;
        }
        int v43 = *((_DWORD *)this + 14);
        int v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 >= v44) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B4694FC(v41, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v45 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v45, 1);
        int v46 = v45 - 1;
        if (v46 < 0 == v38) {
          *((_DWORD *)this + 14) = v46;
        }
        uint64_t v47 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v47 >= *((void *)this + 2) || *v47 != 50) {
          continue;
        }
        *uint64_t v4 = v47 + 1;
LABEL_166:
        *(_DWORD *)(a1 + 388) |= 0x20u;
        unsigned int v48 = *(int **)(a1 + 40);
        if (!v48) {
          operator new();
        }
        v336[0] = 0;
        uint64_t v49 = (char *)*((void *)this + 1);
        if ((unint64_t)v49 >= *((void *)this + 2) || *v49 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v49;
          *uint64_t v4 = v49 + 1;
        }
        int v50 = *((_DWORD *)this + 14);
        int v51 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v50 + 1;
        if (v50 >= v51) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46A058(v48, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v52 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v52, 1);
        int v53 = v52 - 1;
        if (v53 < 0 == v38) {
          *((_DWORD *)this + 14) = v53;
        }
        uint64_t v54 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 != 58) {
          continue;
        }
        *uint64_t v4 = v54 + 1;
LABEL_180:
        *(_DWORD *)(a1 + 388) |= 0x40u;
        uint64_t v55 = *(int **)(a1 + 48);
        if (!v55) {
          operator new();
        }
        v336[0] = 0;
        uint64_t v56 = (char *)*((void *)this + 1);
        if ((unint64_t)v56 >= *((void *)this + 2) || *v56 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v56;
          *uint64_t v4 = v56 + 1;
        }
        int v57 = *((_DWORD *)this + 14);
        int v58 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v57 + 1;
        if (v57 >= v58) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46A514(v55, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v59 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v59, 1);
        int v60 = v59 - 1;
        if (v60 < 0 == v38) {
          *((_DWORD *)this + 14) = v60;
        }
        uint64_t v61 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v61 >= *((void *)this + 2) || *v61 != 66) {
          continue;
        }
        *uint64_t v4 = v61 + 1;
LABEL_194:
        *(_DWORD *)(a1 + 388) |= 0x80u;
        uint64_t v62 = *(int **)(a1 + 56);
        if (!v62) {
          operator new();
        }
        v336[0] = 0;
        uint64_t v63 = (char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v63;
          *uint64_t v4 = v63 + 1;
        }
        int v64 = *((_DWORD *)this + 14);
        int v65 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v64 + 1;
        if (v64 >= v65) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46A9D0(v62, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v66 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v66, 1);
        int v67 = v66 - 1;
        if (v67 < 0 == v38) {
          *((_DWORD *)this + 14) = v67;
        }
        int v68 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 != 74) {
          continue;
        }
        *uint64_t v4 = v68 + 1;
LABEL_208:
        *(_DWORD *)(a1 + 388) |= 0x100u;
        uint64_t v69 = *(void *)(a1 + 64);
        if (!v69) {
          operator new();
        }
        v336[0] = 0;
        int v70 = (char *)*((void *)this + 1);
        if ((unint64_t)v70 >= *((void *)this + 2) || *v70 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v70;
          *uint64_t v4 = v70 + 1;
        }
        int v71 = *((_DWORD *)this + 14);
        int v72 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v71 + 1;
        if (v71 >= v72) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46AE80(v69, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v73 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v73, 1);
        int v74 = v73 - 1;
        if (v74 < 0 == v38) {
          *((_DWORD *)this + 14) = v74;
        }
        unsigned int v75 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v75 >= *((void *)this + 2) || *v75 != 82) {
          continue;
        }
        *uint64_t v4 = v75 + 1;
LABEL_222:
        *(_DWORD *)(a1 + 388) |= 0x200u;
        uint64_t v76 = *(void *)(a1 + 72);
        if (!v76) {
          operator new();
        }
        v336[0] = 0;
        uint64_t v77 = (char *)*((void *)this + 1);
        if ((unint64_t)v77 >= *((void *)this + 2) || *v77 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v77;
          *uint64_t v4 = v77 + 1;
        }
        int v78 = *((_DWORD *)this + 14);
        int v79 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v78 + 1;
        if (v78 >= v79) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46B310(v76, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v80 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v80, 1);
        int v81 = v80 - 1;
        if (v81 < 0 == v38) {
          *((_DWORD *)this + 14) = v81;
        }
        uint64_t v82 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v82 >= *((void *)this + 2) || *v82 != 90) {
          continue;
        }
        *uint64_t v4 = v82 + 1;
LABEL_236:
        *(_DWORD *)(a1 + 388) |= 0x400u;
        uint64_t v83 = *(_DWORD **)(a1 + 80);
        if (!v83) {
          operator new();
        }
        v336[0] = 0;
        unsigned int v84 = (char *)*((void *)this + 1);
        if ((unint64_t)v84 >= *((void *)this + 2) || *v84 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v84;
          *uint64_t v4 = v84 + 1;
        }
        int v85 = *((_DWORD *)this + 14);
        int v86 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v85 + 1;
        if (v85 >= v86) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46BDE0(v83, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v87 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v87, 1);
        int v88 = v87 - 1;
        if (v88 < 0 == v38) {
          *((_DWORD *)this + 14) = v88;
        }
        uint64_t v89 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v89 >= *((void *)this + 2) || *v89 != 98) {
          continue;
        }
        *uint64_t v4 = v89 + 1;
LABEL_250:
        *(_DWORD *)(a1 + 388) |= 0x800u;
        uint64_t v90 = *(void *)(a1 + 88);
        if (!v90) {
          operator new();
        }
        v336[0] = 0;
        v91 = (char *)*((void *)this + 1);
        if ((unint64_t)v91 >= *((void *)this + 2) || *v91 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v91;
          *uint64_t v4 = v91 + 1;
        }
        int v92 = *((_DWORD *)this + 14);
        int v93 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v92 + 1;
        if (v92 >= v93) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46C410(v90, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v94 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v94, 1);
        int v95 = v94 - 1;
        if (v95 < 0 == v38) {
          *((_DWORD *)this + 14) = v95;
        }
        v96 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v96 >= *((void *)this + 2) || *v96 != 106) {
          continue;
        }
        *uint64_t v4 = v96 + 1;
LABEL_264:
        *(_DWORD *)(a1 + 388) |= 0x1000u;
        uint64_t v97 = *(void *)(a1 + 96);
        if (!v97) {
          operator new();
        }
        v336[0] = 0;
        v98 = (char *)*((void *)this + 1);
        if ((unint64_t)v98 >= *((void *)this + 2) || *v98 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v98;
          *uint64_t v4 = v98 + 1;
        }
        int v99 = *((_DWORD *)this + 14);
        int v100 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v99 + 1;
        if (v99 >= v100) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46C864(v97, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v101 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v101, 1);
        int v102 = v101 - 1;
        if (v102 < 0 == v38) {
          *((_DWORD *)this + 14) = v102;
        }
        v103 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v103 >= *((void *)this + 2) || *v103 != 114) {
          continue;
        }
        *uint64_t v4 = v103 + 1;
LABEL_278:
        *(_DWORD *)(a1 + 388) |= 0x2000u;
        uint64_t v104 = *(void *)(a1 + 104);
        if (!v104) {
          operator new();
        }
        v336[0] = 0;
        v105 = (char *)*((void *)this + 1);
        if ((unint64_t)v105 >= *((void *)this + 2) || *v105 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v105;
          *uint64_t v4 = v105 + 1;
        }
        int v106 = *((_DWORD *)this + 14);
        int v107 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v106 + 1;
        if (v106 >= v107) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46CBA8(v104, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v108 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v108, 1);
        int v109 = v108 - 1;
        if (v109 < 0 == v38) {
          *((_DWORD *)this + 14) = v109;
        }
        v110 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v110 >= *((void *)this + 2) || *v110 != 122) {
          continue;
        }
        *uint64_t v4 = v110 + 1;
LABEL_292:
        *(_DWORD *)(a1 + 388) |= 0x4000u;
        uint64_t v111 = *(void *)(a1 + 112);
        if (!v111) {
          operator new();
        }
        v336[0] = 0;
        unsigned int v112 = (char *)*((void *)this + 1);
        if ((unint64_t)v112 >= *((void *)this + 2) || *v112 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v112;
          *uint64_t v4 = v112 + 1;
        }
        int v113 = *((_DWORD *)this + 14);
        int v114 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v113 + 1;
        if (v113 >= v114) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46D0D0(v111, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v115 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v115, 1);
        int v116 = v115 - 1;
        if (v116 < 0 == v38) {
          *((_DWORD *)this + 14) = v116;
        }
        v117 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v117 <= 1 || *v117 != 130 || v117[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v117 + 2);
LABEL_307:
        *(_DWORD *)(a1 + 388) |= 0x8000u;
        uint64_t v118 = *(void *)(a1 + 120);
        if (!v118) {
          operator new();
        }
        v336[0] = 0;
        v119 = (char *)*((void *)this + 1);
        if ((unint64_t)v119 >= *((void *)this + 2) || *v119 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v119;
          *uint64_t v4 = v119 + 1;
        }
        int v120 = *((_DWORD *)this + 14);
        int v121 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v120 + 1;
        if (v120 >= v121) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B468074(v118, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v122 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v122, 1);
        int v123 = v122 - 1;
        if (v123 < 0 == v38) {
          *((_DWORD *)this + 14) = v123;
        }
        v124 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v124 <= 1 || *v124 != 138 || v124[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v124 + 2);
LABEL_322:
        *(_DWORD *)(a1 + 388) |= 0x10000u;
        uint64_t v125 = *(void *)(a1 + 128);
        if (!v125) {
          operator new();
        }
        v336[0] = 0;
        v126 = (char *)*((void *)this + 1);
        if ((unint64_t)v126 >= *((void *)this + 2) || *v126 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v126;
          *uint64_t v4 = v126 + 1;
        }
        int v127 = *((_DWORD *)this + 14);
        int v128 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v127 + 1;
        if (v127 >= v128) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B468550(v125, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v129 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v129, 1);
        int v130 = v129 - 1;
        if (v130 < 0 == v38) {
          *((_DWORD *)this + 14) = v130;
        }
        v131 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v131 <= 1 || *v131 != 146 || v131[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v131 + 2);
LABEL_337:
        *(_DWORD *)(a1 + 388) |= 0x20000u;
        v132 = *(int **)(a1 + 136);
        if (!v132) {
          operator new();
        }
        v336[0] = 0;
        v133 = (char *)*((void *)this + 1);
        if ((unint64_t)v133 >= *((void *)this + 2) || *v133 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v133;
          *uint64_t v4 = v133 + 1;
        }
        int v134 = *((_DWORD *)this + 14);
        int v135 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v134 + 1;
        if (v134 >= v135) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46891C(v132, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v136 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v136, 1);
        int v137 = v136 - 1;
        if (v137 < 0 == v38) {
          *((_DWORD *)this + 14) = v137;
        }
        v138 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v138 <= 1 || *v138 != 154 || v138[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v138 + 2);
LABEL_352:
        *(_DWORD *)(a1 + 388) |= 0x40000u;
        uint64_t v139 = *(void *)(a1 + 144);
        if (!v139) {
          operator new();
        }
        v336[0] = 0;
        v140 = (char *)*((void *)this + 1);
        if ((unint64_t)v140 >= *((void *)this + 2) || *v140 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v140;
          *uint64_t v4 = v140 + 1;
        }
        int v141 = *((_DWORD *)this + 14);
        int v142 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v141 + 1;
        if (v141 >= v142) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B4699CC(v139, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v143 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v143, 1);
        int v144 = v143 - 1;
        if (v144 < 0 == v38) {
          *((_DWORD *)this + 14) = v144;
        }
        v145 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v145 <= 1 || *v145 != 162 || v145[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v145 + 2);
LABEL_367:
        *(_DWORD *)(a1 + 388) |= 0x80000u;
        uint64_t v146 = *(void *)(a1 + 152);
        if (!v146) {
          operator new();
        }
        v336[0] = 0;
        v147 = (char *)*((void *)this + 1);
        if ((unint64_t)v147 >= *((void *)this + 2) || *v147 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v147;
          *uint64_t v4 = v147 + 1;
        }
        int v148 = *((_DWORD *)this + 14);
        int v149 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v148 + 1;
        if (v148 >= v149) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46795C(v146, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v150 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v150, 1);
        int v151 = v150 - 1;
        if (v151 < 0 == v38) {
          *((_DWORD *)this + 14) = v151;
        }
        v152 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v152 <= 1 || *v152 != 170 || v152[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v152 + 2);
LABEL_382:
        *(_DWORD *)(a1 + 388) |= 0x100000u;
        uint64_t v153 = *(void *)(a1 + 160);
        if (!v153) {
          operator new();
        }
        v336[0] = 0;
        v154 = (char *)*((void *)this + 1);
        if ((unint64_t)v154 >= *((void *)this + 2) || *v154 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v154;
          *uint64_t v4 = v154 + 1;
        }
        int v155 = *((_DWORD *)this + 14);
        int v156 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v155 + 1;
        if (v155 >= v156) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B469CD8(v153, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v157 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v157, 1);
        int v158 = v157 - 1;
        if (v158 < 0 == v38) {
          *((_DWORD *)this + 14) = v158;
        }
        v159 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v159 <= 1 || *v159 != 178 || v159[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v159 + 2);
LABEL_397:
        *(_DWORD *)(a1 + 388) |= 0x200000u;
        uint64_t v160 = *(void *)(a1 + 168);
        if (!v160) {
          operator new();
        }
        v336[0] = 0;
        v161 = (char *)*((void *)this + 1);
        if ((unint64_t)v161 >= *((void *)this + 2) || *v161 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v161;
          *uint64_t v4 = v161 + 1;
        }
        int v162 = *((_DWORD *)this + 14);
        int v163 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v162 + 1;
        if (v162 >= v163) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46D97C(v160, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v164 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v164, 1);
        int v165 = v164 - 1;
        if (v165 < 0 == v38) {
          *((_DWORD *)this + 14) = v165;
        }
        v166 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v166 <= 1 || *v166 != 186 || v166[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v166 + 2);
LABEL_412:
        *(_DWORD *)(a1 + 388) |= 0x400000u;
        v167 = *(unsigned int **)(a1 + 176);
        if (!v167) {
          operator new();
        }
        v336[0] = 0;
        v168 = (char *)*((void *)this + 1);
        if ((unint64_t)v168 >= *((void *)this + 2) || *v168 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v168;
          *uint64_t v4 = v168 + 1;
        }
        int v169 = *((_DWORD *)this + 14);
        int v170 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v169 + 1;
        if (v169 >= v170) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46DDA4(v167, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v171 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v171, 1);
        int v172 = v171 - 1;
        if (v172 < 0 == v38) {
          *((_DWORD *)this + 14) = v172;
        }
        v173 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v173 <= 1 || *v173 != 194 || v173[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v173 + 2);
LABEL_427:
        *(_DWORD *)(a1 + 388) |= 0x800000u;
        uint64_t v174 = *(void *)(a1 + 184);
        if (!v174) {
          operator new();
        }
        v336[0] = 0;
        v175 = (char *)*((void *)this + 1);
        if ((unint64_t)v175 >= *((void *)this + 2) || *v175 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v175;
          *uint64_t v4 = v175 + 1;
        }
        int v176 = *((_DWORD *)this + 14);
        int v177 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v176 + 1;
        if (v176 >= v177) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46E5CC(v174, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v178 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v178, 1);
        int v179 = v178 - 1;
        if (v179 < 0 == v38) {
          *((_DWORD *)this + 14) = v179;
        }
        v180 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v180 <= 1 || *v180 != 202 || v180[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v180 + 2);
LABEL_442:
        *(_DWORD *)(a1 + 388) |= 0x1000000u;
        uint64_t v181 = *(void *)(a1 + 192);
        if (!v181) {
          operator new();
        }
        v336[0] = 0;
        v182 = (char *)*((void *)this + 1);
        if ((unint64_t)v182 >= *((void *)this + 2) || *v182 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v182;
          *uint64_t v4 = v182 + 1;
        }
        int v183 = *((_DWORD *)this + 14);
        int v184 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v183 + 1;
        if (v183 >= v184) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46E908(v181, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v185 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v185, 1);
        int v186 = v185 - 1;
        if (v186 < 0 == v38) {
          *((_DWORD *)this + 14) = v186;
        }
        v187 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v187 <= 1 || *v187 != 210 || v187[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v187 + 2);
LABEL_457:
        *(_DWORD *)(a1 + 388) |= 0x2000000u;
        uint64_t v188 = *(void *)(a1 + 200);
        if (!v188) {
          operator new();
        }
        v336[0] = 0;
        v189 = (char *)*((void *)this + 1);
        if ((unint64_t)v189 >= *((void *)this + 2) || *v189 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v189;
          *uint64_t v4 = v189 + 1;
        }
        int v190 = *((_DWORD *)this + 14);
        int v191 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v190 + 1;
        if (v190 >= v191) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46ECA8(v188, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v192 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v192, 1);
        int v193 = v192 - 1;
        if (v193 < 0 == v38) {
          *((_DWORD *)this + 14) = v193;
        }
        v194 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v194 <= 1 || *v194 != 218 || v194[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v194 + 2);
LABEL_472:
        *(_DWORD *)(a1 + 388) |= 0x4000000u;
        uint64_t v195 = *(void *)(a1 + 208);
        if (!v195) {
          operator new();
        }
        v336[0] = 0;
        v196 = (char *)*((void *)this + 1);
        if ((unint64_t)v196 >= *((void *)this + 2) || *v196 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v196;
          *uint64_t v4 = v196 + 1;
        }
        int v197 = *((_DWORD *)this + 14);
        int v198 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v197 + 1;
        if (v197 >= v198) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B4730D8(v195, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v199 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v199, 1);
        int v200 = v199 - 1;
        if (v200 < 0 == v38) {
          *((_DWORD *)this + 14) = v200;
        }
        v201 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v201 <= 1 || *v201 != 226 || v201[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v201 + 2);
LABEL_487:
        *(_DWORD *)(a1 + 388) |= 0x8000000u;
        uint64_t v202 = *(void *)(a1 + 216);
        if (!v202) {
          operator new();
        }
        v336[0] = 0;
        v203 = (char *)*((void *)this + 1);
        if ((unint64_t)v203 >= *((void *)this + 2) || *v203 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v203;
          *uint64_t v4 = v203 + 1;
        }
        int v204 = *((_DWORD *)this + 14);
        int v205 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v204 + 1;
        if (v204 >= v205) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B475BE8(v202, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v206 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v206, 1);
        int v207 = v206 - 1;
        if (v207 < 0 == v38) {
          *((_DWORD *)this + 14) = v207;
        }
        v208 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v208 <= 1 || *v208 != 234 || v208[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v208 + 2);
LABEL_502:
        *(_DWORD *)(a1 + 388) |= 0x10000000u;
        uint64_t v209 = *(void *)(a1 + 224);
        if (!v209) {
          operator new();
        }
        v336[0] = 0;
        v210 = (char *)*((void *)this + 1);
        if ((unint64_t)v210 >= *((void *)this + 2) || *v210 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v210;
          *uint64_t v4 = v210 + 1;
        }
        int v211 = *((_DWORD *)this + 14);
        int v212 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v211 + 1;
        if (v211 >= v212) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B473CA8(v209, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v213 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v213, 1);
        int v214 = v213 - 1;
        if (v214 < 0 == v38) {
          *((_DWORD *)this + 14) = v214;
        }
        v215 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v215 <= 1 || *v215 != 242 || v215[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v215 + 2);
LABEL_517:
        *(_DWORD *)(a1 + 388) |= 0x20000000u;
        uint64_t v216 = *(void *)(a1 + 232);
        if (!v216) {
          operator new();
        }
        v336[0] = 0;
        v217 = (char *)*((void *)this + 1);
        if ((unint64_t)v217 >= *((void *)this + 2) || *v217 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v217;
          *uint64_t v4 = v217 + 1;
        }
        int v218 = *((_DWORD *)this + 14);
        int v219 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v218 + 1;
        if (v218 >= v219) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46D550(v216, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v220 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v220, 1);
        int v221 = v220 - 1;
        if (v221 < 0 == v38) {
          *((_DWORD *)this + 14) = v221;
        }
        v222 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v222 <= 1 || *v222 != 250 || v222[1] != 1) {
          continue;
        }
        *uint64_t v4 = (char *)(v222 + 2);
LABEL_532:
        *(_DWORD *)(a1 + 388) |= 0x40000000u;
        uint64_t v223 = *(void *)(a1 + 240);
        if (!v223) {
          operator new();
        }
        v336[0] = 0;
        v224 = (char *)*((void *)this + 1);
        if ((unint64_t)v224 >= *((void *)this + 2) || *v224 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v224;
          *uint64_t v4 = v224 + 1;
        }
        int v225 = *((_DWORD *)this + 14);
        int v226 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v225 + 1;
        if (v225 >= v226) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46E1E0(v223, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v227 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v227, 1);
        int v228 = v227 - 1;
        if (v228 < 0 == v38) {
          *((_DWORD *)this + 14) = v228;
        }
        v229 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v229 <= 1 || *v229 != 146 || v229[1] != 3) {
          continue;
        }
        *uint64_t v4 = (char *)(v229 + 2);
LABEL_547:
        *(_DWORD *)(a1 + 388) |= 0x80000000;
        uint64_t v230 = *(void *)(a1 + 248);
        if (!v230) {
          operator new();
        }
        v336[0] = 0;
        v231 = (char *)*((void *)this + 1);
        if ((unint64_t)v231 >= *((void *)this + 2) || *v231 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v231;
          *uint64_t v4 = v231 + 1;
        }
        int v232 = *((_DWORD *)this + 14);
        int v233 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v232 + 1;
        if (v232 >= v233) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B44F0E8(v230, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v234 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v234, 1);
        int v235 = v234 - 1;
        if (v235 < 0 == v38) {
          *((_DWORD *)this + 14) = v235;
        }
        v236 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v236 <= 1 || *v236 != 226 || v236[1] != 3) {
          continue;
        }
        *uint64_t v4 = (char *)(v236 + 2);
LABEL_562:
        *(_DWORD *)(a1 + 392) |= 1u;
        v237 = *(unsigned int **)(a1 + 256);
        if (!v237) {
          operator new();
        }
        v336[0] = 0;
        v238 = (char *)*((void *)this + 1);
        if ((unint64_t)v238 >= *((void *)this + 2) || *v238 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v238;
          *uint64_t v4 = v238 + 1;
        }
        int v239 = *((_DWORD *)this + 14);
        int v240 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v239 + 1;
        if (v239 >= v240) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B427858(v237, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v241 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v241, 1);
        int v242 = v241 - 1;
        if (v242 < 0 == v38) {
          *((_DWORD *)this + 14) = v242;
        }
        v243 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((int)v18 - (int)v243 <= 1 || *v243 != 232 || v243[1] != 3) {
          continue;
        }
        uint64_t v19 = (char *)(v243 + 2);
        *uint64_t v4 = v19;
LABEL_577:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          v244 = (char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v8 = *v19;
          v244 = v19 + 1;
          *uint64_t v4 = v244;
        }
        int v20 = *(_DWORD *)(a1 + 392) | 2;
        *(_DWORD *)(a1 + 392) = v20;
        if ((int)v18 - (int)v244 < 2 || *v244 != 242 || v244[1] != 3) {
          continue;
        }
        *uint64_t v4 = v244 + 2;
LABEL_586:
        *(_DWORD *)(a1 + 392) = v20 | 4;
        v245 = *(_DWORD **)(a1 + 264);
        if (!v245) {
          operator new();
        }
        v336[0] = 0;
        v246 = (char *)*((void *)this + 1);
        if ((unint64_t)v246 >= *((void *)this + 2) || *v246 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v246;
          *uint64_t v4 = v246 + 1;
        }
        int v247 = *((_DWORD *)this + 14);
        int v248 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v247 + 1;
        if (v247 >= v248) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B4493E4(v245, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v249 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v249, 1);
        int v250 = v249 - 1;
        if (v250 < 0 == v38) {
          *((_DWORD *)this + 14) = v250;
        }
        v251 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v251 <= 1 || *v251 != 250 || v251[1] != 3) {
          continue;
        }
        *uint64_t v4 = (char *)(v251 + 2);
LABEL_601:
        *(_DWORD *)(a1 + 392) |= 8u;
        v252 = *(unsigned int **)(a1 + 272);
        if (!v252) {
          operator new();
        }
        v336[0] = 0;
        v253 = (char *)*((void *)this + 1);
        if ((unint64_t)v253 >= *((void *)this + 2) || *v253 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v253;
          *uint64_t v4 = v253 + 1;
        }
        int v254 = *((_DWORD *)this + 14);
        int v255 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v254 + 1;
        if (v254 >= v255) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B44A214(v252, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v256 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v256, 1);
        int v257 = v256 - 1;
        if (v257 < 0 == v38) {
          *((_DWORD *)this + 14) = v257;
        }
        v258 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v258 <= 1 || *v258 != 130 || v258[1] != 4) {
          continue;
        }
        *uint64_t v4 = (char *)(v258 + 2);
LABEL_616:
        *(_DWORD *)(a1 + 392) |= 0x10u;
        v259 = *(_DWORD **)(a1 + 280);
        if (!v259) {
          operator new();
        }
        v336[0] = 0;
        v260 = (char *)*((void *)this + 1);
        if ((unint64_t)v260 >= *((void *)this + 2) || *v260 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v260;
          *uint64_t v4 = v260 + 1;
        }
        int v261 = *((_DWORD *)this + 14);
        int v262 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v261 + 1;
        if (v261 >= v262) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B44D788(v259, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v263 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v263, 1);
        int v264 = v263 - 1;
        if (v264 < 0 == v38) {
          *((_DWORD *)this + 14) = v264;
        }
        v265 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v265 <= 1 || *v265 != 138 || v265[1] != 4) {
          continue;
        }
        *uint64_t v4 = (char *)(v265 + 2);
LABEL_631:
        *(_DWORD *)(a1 + 392) |= 0x20u;
        uint64_t v266 = *(void *)(a1 + 288);
        if (!v266) {
          operator new();
        }
        v336[0] = 0;
        v267 = (char *)*((void *)this + 1);
        if ((unint64_t)v267 >= *((void *)this + 2) || *v267 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v267;
          *uint64_t v4 = v267 + 1;
        }
        int v268 = *((_DWORD *)this + 14);
        int v269 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v268 + 1;
        if (v268 >= v269) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B450C70(v266, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v270 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v270, 1);
        int v271 = v270 - 1;
        if (v271 < 0 == v38) {
          *((_DWORD *)this + 14) = v271;
        }
        v272 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v272 <= 1 || *v272 != 146 || v272[1] != 4) {
          continue;
        }
        *uint64_t v4 = (char *)(v272 + 2);
LABEL_646:
        *(_DWORD *)(a1 + 392) |= 0x40u;
        uint64_t v273 = *(void *)(a1 + 304);
        if (!v273) {
          operator new();
        }
        v336[0] = 0;
        v274 = (char *)*((void *)this + 1);
        if ((unint64_t)v274 >= *((void *)this + 2) || *v274 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v274;
          *uint64_t v4 = v274 + 1;
        }
        int v275 = *((_DWORD *)this + 14);
        int v276 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v275 + 1;
        if (v275 >= v276) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B451E00(v273, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v277 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v277, 1);
        int v278 = v277 - 1;
        if (v278 < 0 == v38) {
          *((_DWORD *)this + 14) = v278;
        }
        v279 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v279 <= 1 || *v279 != 154 || v279[1] != 4) {
          continue;
        }
        *uint64_t v4 = (char *)(v279 + 2);
LABEL_661:
        *(_DWORD *)(a1 + 392) |= 0x80u;
        uint64_t v280 = *(void *)(a1 + 312);
        if (!v280) {
          operator new();
        }
        v336[0] = 0;
        v281 = (char *)*((void *)this + 1);
        if ((unint64_t)v281 >= *((void *)this + 2) || *v281 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
        }
          }
        else
        {
          v336[0] = *v281;
          *uint64_t v4 = v281 + 1;
        }
        int v282 = *((_DWORD *)this + 14);
        int v283 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v282 + 1;
        if (v282 >= v283) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B44E684(v280, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v284 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v284, 1);
        int v285 = v284 - 1;
        if (v285 < 0 == v38) {
          *((_DWORD *)this + 14) = v285;
        }
        v286 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((int)v21 - (int)v286 > 1)
        {
          int v287 = *v286;
          goto LABEL_696;
        }
        continue;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_128;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_138;
        }
        goto LABEL_108;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_152;
        }
        goto LABEL_108;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_166;
        }
        goto LABEL_108;
      case 7u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_180;
        }
        goto LABEL_108;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_194;
        }
        goto LABEL_108;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_208;
        }
        goto LABEL_108;
      case 0xAu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_222;
        }
        goto LABEL_108;
      case 0xBu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_236;
        }
        goto LABEL_108;
      case 0xCu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_250;
        }
        goto LABEL_108;
      case 0xDu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_264;
        }
        goto LABEL_108;
      case 0xEu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_278;
        }
        goto LABEL_108;
      case 0xFu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_292;
        }
        goto LABEL_108;
      case 0x10u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_307;
        }
        goto LABEL_108;
      case 0x11u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_322;
        }
        goto LABEL_108;
      case 0x12u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_337;
        }
        goto LABEL_108;
      case 0x13u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_352;
        }
        goto LABEL_108;
      case 0x14u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_367;
        }
        goto LABEL_108;
      case 0x15u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_382;
        }
        goto LABEL_108;
      case 0x16u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_397;
        }
        goto LABEL_108;
      case 0x17u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_412;
        }
        goto LABEL_108;
      case 0x18u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_427;
        }
        goto LABEL_108;
      case 0x19u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_442;
        }
        goto LABEL_108;
      case 0x1Au:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_457;
        }
        goto LABEL_108;
      case 0x1Bu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_472;
        }
        goto LABEL_108;
      case 0x1Cu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_487;
        }
        goto LABEL_108;
      case 0x1Du:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_502;
        }
        goto LABEL_108;
      case 0x1Eu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_517;
        }
        goto LABEL_108;
      case 0x1Fu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_532;
        }
        goto LABEL_108;
      case 0x32u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_547;
        }
        goto LABEL_108;
      case 0x3Cu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_562;
        }
        goto LABEL_108;
      case 0x3Du:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_577;
      case 0x3Eu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_108;
        }
        int v20 = *(_DWORD *)(a1 + 392);
        goto LABEL_586;
      case 0x3Fu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_601;
        }
        goto LABEL_108;
      case 0x40u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_616;
        }
        goto LABEL_108;
      case 0x41u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_631;
        }
        goto LABEL_108;
      case 0x42u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_646;
        }
        goto LABEL_108;
      case 0x43u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_661;
        }
        goto LABEL_108;
      case 0x46u:
        int v12 = TagFallback & 7;
        if (v12 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            uint64_t v22 = (char *)*((void *)this + 1);
            unint64_t v21 = *((void *)this + 2);
            goto LABEL_676;
          }
          goto LABEL_108;
        }
        uint64_t result = sub_24B421320(this, v6);
        if (!result) {
          return result;
        }
        while (1)
        {
          v286 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          if ((int)v21 - (int)v286 < 2) {
            goto LABEL_2;
          }
          int v287 = *v286;
          if (v287 == 186) {
            break;
          }
LABEL_696:
          if (v287 != 176 || v286[1] != 4) {
            goto LABEL_2;
          }
          uint64_t v22 = (char *)(v286 + 2);
          *uint64_t v4 = v22;
LABEL_676:
          unsigned int v335 = 0;
          if ((unint64_t)v22 >= v21 || *v22 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v335))return 0; {
          }
            }
          else
          {
            unsigned int v335 = *v22;
            *uint64_t v4 = v22 + 1;
          }
          int v288 = *(_DWORD *)(a1 + 328);
          if (v288 == *(_DWORD *)(a1 + 332))
          {
            sub_24B3EB460(v6, v288 + 1);
            int v288 = *(_DWORD *)(a1 + 328);
          }
          unsigned int v289 = v335;
          uint64_t v290 = *(void *)(a1 + 320);
          *(_DWORD *)(a1 + 328) = v288 + 1;
          *(_DWORD *)(v290 + 4 * v288) = v289;
          int v291 = *(_DWORD *)(a1 + 332) - *(_DWORD *)(a1 + 328);
          if (v291 >= 1)
          {
            int v292 = v291 + 1;
            do
            {
              v293 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v294 = *((void *)this + 2);
              if ((int)v294 - (int)v293 < 2 || *v293 != 176 || v293[1] != 4) {
                break;
              }
              *uint64_t v4 = (char *)(v293 + 2);
              if ((unint64_t)(v293 + 2) >= v294 || (char)v293[2] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v335))return 0; {
              }
                }
              else
              {
                unsigned int v335 = v293[2];
                *uint64_t v4 = (char *)(v293 + 3);
              }
              int v295 = *(_DWORD *)(a1 + 328);
              if (v295 >= *(_DWORD *)(a1 + 332))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v336);
                int v295 = *(_DWORD *)(a1 + 328);
              }
              unsigned int v296 = v335;
              uint64_t v297 = *(void *)(a1 + 320);
              *(_DWORD *)(a1 + 328) = v295 + 1;
              *(_DWORD *)(v297 + 4 * v295) = v296;
              --v292;
            }
            while (v292 > 1);
          }
        }
        if (v286[1] == 4)
        {
          *uint64_t v4 = (char *)(v286 + 2);
LABEL_700:
          *(_DWORD *)(a1 + 392) |= 0x200u;
          v298 = *(int **)(a1 + 336);
          if (!v298) {
            operator new();
          }
          v336[0] = 0;
          v299 = (char *)*((void *)this + 1);
          if ((unint64_t)v299 >= *((void *)this + 2) || *v299 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
          }
            }
          else
          {
            v336[0] = *v299;
            *uint64_t v4 = v299 + 1;
          }
          int v300 = *((_DWORD *)this + 14);
          int v301 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v300 + 1;
          if (v300 >= v301) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
          if (!sub_24B41E5C8(v298, this) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
          int v302 = *((_DWORD *)this + 14);
          BOOL v38 = __OFSUB__(v302, 1);
          int v303 = v302 - 1;
          if (v303 < 0 == v38) {
            *((_DWORD *)this + 14) = v303;
          }
          v304 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
          if ((int)v23 - (int)v304 > 1 && *v304 == 192 && v304[1] == 4)
          {
            uint64_t v24 = (char *)(v304 + 2);
            *uint64_t v4 = v24;
LABEL_715:
            if ((unint64_t)v24 >= v23 || *v24 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
              if (!result) {
                return result;
              }
              v305 = (char *)*((void *)this + 1);
              unint64_t v23 = *((void *)this + 2);
            }
            else
            {
              *uint64_t v9 = *v24;
              v305 = v24 + 1;
              *uint64_t v4 = v305;
            }
            *(_DWORD *)(a1 + 392) |= 0x400u;
            if ((int)v23 - (int)v305 >= 2)
            {
              int v306 = *v305;
              goto LABEL_744;
            }
          }
        }
        continue;
      case 0x47u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_700;
        }
        goto LABEL_108;
      case 0x48u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_715;
      case 0x49u:
        int v12 = TagFallback & 7;
        if (v12 == 2)
        {
          uint64_t result = sub_24B421320(this, v5);
          if (!result) {
            return result;
          }
          while (1)
          {
            v305 = (char *)*((void *)this + 1);
            unint64_t v23 = *((void *)this + 2);
            if ((int)v23 - (int)v305 < 2) {
              goto LABEL_2;
            }
            int v306 = *v305;
            if (v306 == 208) {
              break;
            }
LABEL_744:
            if (v306 != 200 || v305[1] != 4) {
              goto LABEL_2;
            }
            uint64_t v25 = v305 + 2;
            *uint64_t v4 = v25;
LABEL_724:
            unsigned int v335 = 0;
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v335))return 0; {
            }
              }
            else
            {
              unsigned int v335 = *v25;
              *uint64_t v4 = v25 + 1;
            }
            int v307 = *(_DWORD *)(a1 + 352);
            if (v307 == *(_DWORD *)(a1 + 356))
            {
              sub_24B3EB460(v5, v307 + 1);
              int v307 = *(_DWORD *)(a1 + 352);
            }
            unsigned int v308 = v335;
            uint64_t v309 = *(void *)(a1 + 344);
            *(_DWORD *)(a1 + 352) = v307 + 1;
            *(_DWORD *)(v309 + 4 * v307) = v308;
            int v310 = *(_DWORD *)(a1 + 356) - *(_DWORD *)(a1 + 352);
            if (v310 >= 1)
            {
              int v311 = v310 + 1;
              do
              {
                v312 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v313 = *((void *)this + 2);
                if ((int)v313 - (int)v312 < 2 || *v312 != 200 || v312[1] != 4) {
                  break;
                }
                *uint64_t v4 = (char *)(v312 + 2);
                if ((unint64_t)(v312 + 2) >= v313 || (char)v312[2] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v335))return 0; {
                }
                  }
                else
                {
                  unsigned int v335 = v312[2];
                  *uint64_t v4 = (char *)(v312 + 3);
                }
                int v314 = *(_DWORD *)(a1 + 352);
                if (v314 >= *(_DWORD *)(a1 + 356))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v336);
                  int v314 = *(_DWORD *)(a1 + 352);
                }
                unsigned int v315 = v335;
                uint64_t v316 = *(void *)(a1 + 344);
                *(_DWORD *)(a1 + 352) = v314 + 1;
                *(_DWORD *)(v316 + 4 * v314) = v315;
                --v311;
              }
              while (v311 > 1);
            }
          }
          if (v305[1] == 4)
          {
            uint64_t v26 = v305 + 2;
            *uint64_t v4 = v26;
LABEL_748:
            v336[0] = 0;
            if ((unint64_t)v26 >= v23 || *v26 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336);
              if (!result) {
                return result;
              }
              unsigned int v317 = v336[0];
              v318 = (char *)*((void *)this + 1);
              unint64_t v23 = *((void *)this + 2);
            }
            else
            {
              unsigned int v317 = *v26;
              v318 = v26 + 1;
              *uint64_t v4 = v318;
            }
            *(unsigned char *)(a1 + 360) = v317 != 0;
            *(_DWORD *)(a1 + 392) |= 0x1000u;
            if ((int)v23 - (int)v318 >= 2 && *v318 == 216 && v318[1] == 4)
            {
              uint64_t v27 = v318 + 2;
              *uint64_t v4 = v27;
LABEL_757:
              if ((unint64_t)v27 >= v23 || *v27 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v334);
                if (!result) {
                  return result;
                }
                v319 = (char *)*((void *)this + 1);
                unint64_t v23 = *((void *)this + 2);
              }
              else
              {
                unsigned int *v334 = *v27;
                v319 = v27 + 1;
                *uint64_t v4 = v319;
              }
              int v28 = *(_DWORD *)(a1 + 392) | 0x2000;
              *(_DWORD *)(a1 + 392) = v28;
              if ((int)v23 - (int)v319 >= 2 && *v319 == 226 && v319[1] == 4)
              {
                *uint64_t v4 = v319 + 2;
LABEL_766:
                *(_DWORD *)(a1 + 392) = v28 | 0x4000;
                uint64_t v320 = *(void *)(a1 + 368);
                if (!v320) {
                  operator new();
                }
                v336[0] = 0;
                v321 = (char *)*((void *)this + 1);
                if ((unint64_t)v321 >= *((void *)this + 2) || *v321 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
                }
                  }
                else
                {
                  v336[0] = *v321;
                  *uint64_t v4 = v321 + 1;
                }
                int v322 = *((_DWORD *)this + 14);
                int v323 = *((_DWORD *)this + 15);
                *((_DWORD *)this + 14) = v322 + 1;
                if (v322 >= v323) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
                if (!sub_24B4237D4(v320, this) || !*((unsigned char *)this + 36)) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
                int v324 = *((_DWORD *)this + 14);
                BOOL v38 = __OFSUB__(v324, 1);
                int v325 = v324 - 1;
                if (v325 < 0 == v38) {
                  *((_DWORD *)this + 14) = v325;
                }
                v326 = (unsigned __int8 *)*((void *)this + 1);
                if (*((_DWORD *)this + 4) - (int)v326 > 1 && *v326 == 234 && v326[1] == 4)
                {
                  *uint64_t v4 = (char *)(v326 + 2);
LABEL_781:
                  *(_DWORD *)(a1 + 392) |= 0x8000u;
                  v327 = *(int **)(a1 + 376);
                  if (!v327) {
                    operator new();
                  }
                  v336[0] = 0;
                  v328 = (char *)*((void *)this + 1);
                  if ((unint64_t)v328 >= *((void *)this + 2) || *v328 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v336))return 0; {
                  }
                    }
                  else
                  {
                    v336[0] = *v328;
                    *uint64_t v4 = v328 + 1;
                  }
                  int v329 = *((_DWORD *)this + 14);
                  int v330 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v329 + 1;
                  if (v329 >= v330) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
                  if (!sub_24B41FF04(v327, this) || !*((unsigned char *)this + 36)) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
                  int v331 = *((_DWORD *)this + 14);
                  BOOL v38 = __OFSUB__(v331, 1);
                  int v332 = v331 - 1;
                  if (v332 < 0 == v38) {
                    *((_DWORD *)this + 14) = v332;
                  }
                  if (*((void *)this + 1) == *((void *)this + 2)
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          uint64_t v25 = (char *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
          goto LABEL_724;
        }
LABEL_108:
        if (v12 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 0x4Au:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v26 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_748;
      case 0x4Bu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_108;
        }
        uint64_t v27 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_757;
      case 0x4Cu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_108;
        }
        int v28 = *(_DWORD *)(a1 + 392);
        goto LABEL_766;
      case 0x4Du:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_108;
        }
        goto LABEL_781;
      default:
        int v12 = TagFallback & 7;
        goto LABEL_108;
    }
  }
}

void sub_24B45E694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_24B45E7E8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 388);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 388);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_36;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_40;
  }
LABEL_37:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7)
  {
    sub_24B45829C();
    uint64_t v7 = *(void *)(qword_26B17C598 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }
LABEL_40:
  uint64_t v8 = *(void *)(v5 + 32);
  if (!v8)
  {
    sub_24B45829C();
    uint64_t v8 = *(void *)(qword_26B17C598 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_46;
  }
LABEL_43:
  uint64_t v9 = *(void *)(v5 + 40);
  if (!v9)
  {
    sub_24B45829C();
    uint64_t v9 = *(void *)(qword_26B17C598 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_49;
  }
LABEL_46:
  uint64_t v10 = *(void *)(v5 + 48);
  if (!v10)
  {
    sub_24B45829C();
    uint64_t v10 = *(void *)(qword_26B17C598 + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_52;
  }
LABEL_49:
  uint64_t v11 = *(void *)(v5 + 56);
  if (!v11)
  {
    sub_24B45829C();
    uint64_t v11 = *(void *)(qword_26B17C598 + 56);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_55;
  }
LABEL_52:
  uint64_t v12 = *(void *)(v5 + 64);
  if (!v12)
  {
    sub_24B45829C();
    uint64_t v12 = *(void *)(qword_26B17C598 + 64);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_58;
  }
LABEL_55:
  uint64_t v13 = *(void *)(v5 + 72);
  if (!v13)
  {
    sub_24B45829C();
    uint64_t v13 = *(void *)(qword_26B17C598 + 72);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_61;
  }
LABEL_58:
  uint64_t v14 = *(void *)(v5 + 80);
  if (!v14)
  {
    sub_24B45829C();
    uint64_t v14 = *(void *)(qword_26B17C598 + 80);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v14, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_64;
  }
LABEL_61:
  uint64_t v15 = *(void *)(v5 + 88);
  if (!v15)
  {
    sub_24B45829C();
    uint64_t v15 = *(void *)(qword_26B17C598 + 88);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v15, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_67;
  }
LABEL_64:
  uint64_t v16 = *(void *)(v5 + 96);
  if (!v16)
  {
    sub_24B45829C();
    uint64_t v16 = *(void *)(qword_26B17C598 + 96);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v16, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_70;
  }
LABEL_67:
  uint64_t v17 = *(void *)(v5 + 104);
  if (!v17)
  {
    sub_24B45829C();
    uint64_t v17 = *(void *)(qword_26B17C598 + 104);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v17, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_73;
  }
LABEL_70:
  uint64_t v18 = *(void *)(v5 + 112);
  if (!v18)
  {
    sub_24B45829C();
    uint64_t v18 = *(void *)(qword_26B17C598 + 112);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v18, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_76;
  }
LABEL_73:
  uint64_t v19 = *(void *)(v5 + 120);
  if (!v19)
  {
    sub_24B45829C();
    uint64_t v19 = *(void *)(qword_26B17C598 + 120);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v19, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_79;
  }
LABEL_76:
  uint64_t v20 = *(void *)(v5 + 128);
  if (!v20)
  {
    sub_24B45829C();
    uint64_t v20 = *(void *)(qword_26B17C598 + 128);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v20, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_82;
  }
LABEL_79:
  uint64_t v21 = *(void *)(v5 + 136);
  if (!v21)
  {
    sub_24B45829C();
    uint64_t v21 = *(void *)(qword_26B17C598 + 136);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v21, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_85;
  }
LABEL_82:
  uint64_t v22 = *(void *)(v5 + 144);
  if (!v22)
  {
    sub_24B45829C();
    uint64_t v22 = *(void *)(qword_26B17C598 + 144);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v22, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_88;
  }
LABEL_85:
  uint64_t v23 = *(void *)(v5 + 152);
  if (!v23)
  {
    sub_24B45829C();
    uint64_t v23 = *(void *)(qword_26B17C598 + 152);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v23, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_91;
  }
LABEL_88:
  uint64_t v24 = *(void *)(v5 + 160);
  if (!v24)
  {
    sub_24B45829C();
    uint64_t v24 = *(void *)(qword_26B17C598 + 160);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v24, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_94;
  }
LABEL_91:
  uint64_t v25 = *(void *)(v5 + 168);
  if (!v25)
  {
    sub_24B45829C();
    uint64_t v25 = *(void *)(qword_26B17C598 + 168);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v25, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_97;
  }
LABEL_94:
  uint64_t v26 = *(void *)(v5 + 176);
  if (!v26)
  {
    sub_24B45829C();
    uint64_t v26 = *(void *)(qword_26B17C598 + 176);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v26, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_100;
  }
LABEL_97:
  uint64_t v27 = *(void *)(v5 + 184);
  if (!v27)
  {
    sub_24B45829C();
    uint64_t v27 = *(void *)(qword_26B17C598 + 184);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v27, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_103;
  }
LABEL_100:
  uint64_t v28 = *(void *)(v5 + 192);
  if (!v28)
  {
    sub_24B45829C();
    uint64_t v28 = *(void *)(qword_26B17C598 + 192);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v28, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_106;
  }
LABEL_103:
  uint64_t v29 = *(void *)(v5 + 200);
  if (!v29)
  {
    sub_24B45829C();
    uint64_t v29 = *(void *)(qword_26B17C598 + 200);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v29, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_109;
  }
LABEL_106:
  uint64_t v30 = *(void *)(v5 + 208);
  if (!v30)
  {
    sub_24B45829C();
    uint64_t v30 = *(void *)(qword_26B17C598 + 208);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v30, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_112;
  }
LABEL_109:
  uint64_t v31 = *(void *)(v5 + 216);
  if (!v31)
  {
    sub_24B45829C();
    uint64_t v31 = *(void *)(qword_26B17C598 + 216);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v31, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_115;
  }
LABEL_112:
  uint64_t v32 = *(void *)(v5 + 224);
  if (!v32)
  {
    sub_24B45829C();
    uint64_t v32 = *(void *)(qword_26B17C598 + 224);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v32, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_118;
  }
LABEL_115:
  uint64_t v33 = *(void *)(v5 + 232);
  if (!v33)
  {
    sub_24B45829C();
    uint64_t v33 = *(void *)(qword_26B17C598 + 232);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v33, a2, a4);
  int v6 = *(_DWORD *)(v5 + 388);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_124;
    }
    goto LABEL_121;
  }
LABEL_118:
  uint64_t v34 = *(void *)(v5 + 240);
  if (!v34)
  {
    sub_24B45829C();
    uint64_t v34 = *(void *)(qword_26B17C598 + 240);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, v34, a2, a4);
  if ((*(_DWORD *)(v5 + 388) & 0x80000000) != 0)
  {
LABEL_121:
    uint64_t v35 = *(void *)(v5 + 248);
    if (!v35)
    {
      sub_24B45829C();
      uint64_t v35 = *(void *)(qword_26B17C598 + 248);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, v35, a2, a4);
  }
LABEL_124:
  int v36 = *(_DWORD *)(v5 + 392);
  if (v36)
  {
    uint64_t v37 = *(void *)(v5 + 256);
    if (!v37)
    {
      sub_24B45829C();
      uint64_t v37 = *(void *)(qword_26B17C598 + 256);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, v37, a2, a4);
    int v36 = *(_DWORD *)(v5 + 392);
    if ((v36 & 2) == 0)
    {
LABEL_126:
      if ((v36 & 4) == 0) {
        goto LABEL_127;
      }
      goto LABEL_137;
    }
  }
  else if ((v36 & 2) == 0)
  {
    goto LABEL_126;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, *(unsigned int *)(v5 + 296), (uint64_t)a2, a4);
  int v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 4) == 0)
  {
LABEL_127:
    if ((v36 & 8) == 0) {
      goto LABEL_128;
    }
    goto LABEL_140;
  }
LABEL_137:
  uint64_t v38 = *(void *)(v5 + 264);
  if (!v38)
  {
    sub_24B45829C();
    uint64_t v38 = *(void *)(qword_26B17C598 + 264);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, v38, a2, a4);
  int v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 8) == 0)
  {
LABEL_128:
    if ((v36 & 0x10) == 0) {
      goto LABEL_129;
    }
    goto LABEL_143;
  }
LABEL_140:
  uint64_t v39 = *(void *)(v5 + 272);
  if (!v39)
  {
    sub_24B45829C();
    uint64_t v39 = *(void *)(qword_26B17C598 + 272);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, v39, a2, a4);
  int v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 0x10) == 0)
  {
LABEL_129:
    if ((v36 & 0x20) == 0) {
      goto LABEL_130;
    }
    goto LABEL_146;
  }
LABEL_143:
  uint64_t v40 = *(void *)(v5 + 280);
  if (!v40)
  {
    sub_24B45829C();
    uint64_t v40 = *(void *)(qword_26B17C598 + 280);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x40, v40, a2, a4);
  int v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 0x20) == 0)
  {
LABEL_130:
    if ((v36 & 0x40) == 0) {
      goto LABEL_131;
    }
    goto LABEL_149;
  }
LABEL_146:
  uint64_t v41 = *(void *)(v5 + 288);
  if (!v41)
  {
    sub_24B45829C();
    uint64_t v41 = *(void *)(qword_26B17C598 + 288);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x41, v41, a2, a4);
  int v36 = *(_DWORD *)(v5 + 392);
  if ((v36 & 0x40) == 0)
  {
LABEL_131:
    if ((v36 & 0x80) == 0) {
      goto LABEL_155;
    }
    goto LABEL_152;
  }
LABEL_149:
  uint64_t v42 = *(void *)(v5 + 304);
  if (!v42)
  {
    sub_24B45829C();
    uint64_t v42 = *(void *)(qword_26B17C598 + 304);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x42, v42, a2, a4);
  if ((*(_DWORD *)(v5 + 392) & 0x80) != 0)
  {
LABEL_152:
    uint64_t v43 = *(void *)(v5 + 312);
    if (!v43)
    {
      sub_24B45829C();
      uint64_t v43 = *(void *)(qword_26B17C598 + 312);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x43, v43, a2, a4);
  }
LABEL_155:
  if (*(int *)(v5 + 328) >= 1)
  {
    uint64_t v44 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, *(unsigned int *)(*(void *)(v5 + 320) + 4 * v44++), (uint64_t)a2, a4);
    while (v44 < *(int *)(v5 + 328));
  }
  int v45 = *(_DWORD *)(v5 + 392);
  if ((v45 & 0x200) != 0)
  {
    uint64_t v46 = *(void *)(v5 + 336);
    if (!v46)
    {
      sub_24B45829C();
      uint64_t v46 = *(void *)(qword_26B17C598 + 336);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, v46, a2, a4);
    int v45 = *(_DWORD *)(v5 + 392);
  }
  if ((v45 & 0x400) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x48, *(unsigned int *)(v5 + 300), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 352) >= 1)
  {
    uint64_t v47 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x49, *(unsigned int *)(*(void *)(v5 + 344) + 4 * v47++), (uint64_t)a2, a4);
    while (v47 < *(int *)(v5 + 352));
  }
  int v48 = *(_DWORD *)(v5 + 392);
  if ((v48 & 0x1000) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4A, *(unsigned __int8 *)(v5 + 360), (uint64_t)a2, a4);
    int v48 = *(_DWORD *)(v5 + 392);
    if ((v48 & 0x2000) == 0)
    {
LABEL_169:
      if ((v48 & 0x4000) == 0) {
        goto LABEL_170;
      }
      goto LABEL_174;
    }
  }
  else if ((v48 & 0x2000) == 0)
  {
    goto LABEL_169;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4B, *(unsigned int *)(v5 + 364), (uint64_t)a2, a4);
  int v48 = *(_DWORD *)(v5 + 392);
  if ((v48 & 0x4000) == 0)
  {
LABEL_170:
    if ((v48 & 0x8000) == 0) {
      return result;
    }
    goto LABEL_177;
  }
LABEL_174:
  uint64_t v49 = *(void *)(v5 + 368);
  if (!v49)
  {
    sub_24B45829C();
    uint64_t v49 = *(void *)(qword_26B17C598 + 368);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4C, v49, a2, a4);
  if ((*(_DWORD *)(v5 + 392) & 0x8000) != 0)
  {
LABEL_177:
    uint64_t v50 = *(void *)(v5 + 376);
    if (!v50)
    {
      sub_24B45829C();
      uint64_t v50 = *(void *)(qword_26B17C598 + 376);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x4D, v50, a2, a4);
  }
  return result;
}

uint64_t sub_24B45F0A0(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_54;
  }
  if (v2)
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
       + 1;
    unsigned int v2 = *(_DWORD *)(a1 + 388);
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    unsigned int v2 = *(_DWORD *)(a1 + 388);
  }
  else
  {
    int v5 = 1;
  }
  v3 += v5 + 1;
LABEL_11:
  if ((v2 & 4) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 10;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      unsigned int v2 = *(_DWORD *)(a1 + 388);
    }
    else
    {
      int v7 = 1;
    }
    v3 += v7 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_30;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(a1 + 24);
  if (!v8)
  {
    sub_24B45829C();
    uint64_t v8 = *(void *)(qword_26B17C598 + 24);
  }
  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B469278(v8);
  int v10 = (int)v9;
  if (v9 >= 0x80) {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
  }
  else {
    int v11 = 1;
  }
  v3 += v10 + v11 + 1;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_30:
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12)
  {
    sub_24B45829C();
    uint64_t v12 = *(void *)(qword_26B17C598 + 32);
  }
  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B4697AC(v12);
  int v14 = (int)v13;
  if (v13 >= 0x80) {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  }
  else {
    int v15 = 1;
  }
  v3 += v14 + v15 + 1;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_36:
  uint64_t v16 = *(void *)(a1 + 40);
  if (!v16)
  {
    sub_24B45829C();
    uint64_t v16 = *(void *)(qword_26B17C598 + 40);
  }
  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46A2E4(v16);
  int v18 = (int)v17;
  if (v17 >= 0x80) {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
  }
  else {
    int v19 = 1;
  }
  v3 += v18 + v19 + 1;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0) {
      goto LABEL_54;
    }
    goto LABEL_48;
  }
LABEL_42:
  uint64_t v20 = *(void *)(a1 + 48);
  if (!v20)
  {
    sub_24B45829C();
    uint64_t v20 = *(void *)(qword_26B17C598 + 48);
  }
  uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46A7A0(v20);
  int v22 = (int)v21;
  if (v21 >= 0x80) {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
  }
  else {
    int v23 = 1;
  }
  v3 += v22 + v23 + 1;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x80) != 0)
  {
LABEL_48:
    uint64_t v24 = *(void *)(a1 + 56);
    if (!v24)
    {
      sub_24B45829C();
      uint64_t v24 = *(void *)(qword_26B17C598 + 56);
    }
    uint64_t v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46AC5C(v24);
    int v26 = (int)v25;
    if (v25 >= 0x80) {
      int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
    }
    else {
      int v27 = 1;
    }
    v3 += v26 + v27 + 1;
    unsigned int v2 = *(_DWORD *)(a1 + 388);
  }
LABEL_54:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_112;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v28 = *(void *)(a1 + 64);
    if (!v28)
    {
      sub_24B45829C();
      uint64_t v28 = *(void *)(qword_26B17C598 + 64);
    }
    uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46B0F8(v28);
    int v30 = (int)v29;
    if (v29 >= 0x80) {
      int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
    }
    else {
      int v31 = 1;
    }
    v3 += v30 + v31 + 1;
    unsigned int v2 = *(_DWORD *)(a1 + 388);
    if ((v2 & 0x200) == 0)
    {
LABEL_57:
      if ((v2 & 0x400) == 0) {
        goto LABEL_58;
      }
      goto LABEL_76;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_57;
  }
  uint64_t v32 = *(void *)(a1 + 72);
  if (!v32)
  {
    sub_24B45829C();
    uint64_t v32 = *(void *)(qword_26B17C598 + 72);
  }
  uint64_t v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46BB4C(v32);
  int v34 = (int)v33;
  if (v33 >= 0x80) {
    int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
  }
  else {
    int v35 = 1;
  }
  v3 += v34 + v35 + 1;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x400) == 0)
  {
LABEL_58:
    if ((v2 & 0x800) == 0) {
      goto LABEL_59;
    }
    goto LABEL_82;
  }
LABEL_76:
  uint64_t v36 = *(void *)(a1 + 80);
  if (!v36)
  {
    sub_24B45829C();
    uint64_t v36 = *(void *)(qword_26B17C598 + 80);
  }
  uint64_t v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46C170(v36);
  int v38 = (int)v37;
  if (v37 >= 0x80) {
    int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
  }
  else {
    int v39 = 1;
  }
  v3 += v38 + v39 + 1;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x800) == 0)
  {
LABEL_59:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_88;
  }
LABEL_82:
  uint64_t v40 = *(void *)(a1 + 88);
  if (!v40)
  {
    sub_24B45829C();
    uint64_t v40 = *(void *)(qword_26B17C598 + 88);
  }
  uint64_t v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46C634(v40);
  int v42 = (int)v41;
  if (v41 >= 0x80) {
    int v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
  }
  else {
    int v43 = 1;
  }
  v3 += v42 + v43 + 1;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x1000) == 0)
  {
LABEL_60:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_94;
  }
LABEL_88:
  uint64_t v44 = *(void *)(a1 + 96);
  if (!v44)
  {
    sub_24B45829C();
    uint64_t v44 = *(void *)(qword_26B17C598 + 96);
  }
  int v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46C9A4(v44);
  int v46 = (int)v45;
  if (v45 >= 0x80) {
    int v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
  }
  else {
    int v47 = 1;
  }
  v3 += v46 + v47 + 1;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x2000) == 0)
  {
LABEL_61:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_100;
  }
LABEL_94:
  uint64_t v48 = *(void *)(a1 + 104);
  if (!v48)
  {
    sub_24B45829C();
    uint64_t v48 = *(void *)(qword_26B17C598 + 104);
  }
  uint64_t v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46CEB8(v48);
  int v50 = (int)v49;
  if (v49 >= 0x80) {
    int v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
  }
  else {
    int v51 = 1;
  }
  v3 += v50 + v51 + 1;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x4000) == 0)
  {
LABEL_62:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_106;
  }
LABEL_100:
  uint64_t v52 = *(void *)(a1 + 112);
  if (!v52)
  {
    sub_24B45829C();
    uint64_t v52 = *(void *)(qword_26B17C598 + 112);
  }
  int v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46D348(v52);
  int v54 = (int)v53;
  if (v53 >= 0x80) {
    int v55 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53);
  }
  else {
    int v55 = 1;
  }
  v3 += v54 + v55 + 1;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x8000) != 0)
  {
LABEL_106:
    uint64_t v56 = *(void *)(a1 + 120);
    if (!v56)
    {
      sub_24B45829C();
      uint64_t v56 = *(void *)(qword_26B17C598 + 120);
    }
    int v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B4682A4(v56);
    int v58 = (int)v57;
    if (v57 >= 0x80) {
      int v59 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v57);
    }
    else {
      int v59 = 1;
    }
    v3 += v58 + v59 + 2;
    unsigned int v2 = *(_DWORD *)(a1 + 388);
  }
LABEL_112:
  if ((v2 & 0xFF0000) == 0) {
    goto LABEL_171;
  }
  if ((v2 & 0x10000) != 0)
  {
    uint64_t v60 = *(void *)(a1 + 128);
    if (!v60)
    {
      sub_24B45829C();
      uint64_t v60 = *(void *)(qword_26B17C598 + 128);
    }
    uint64_t v61 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46868C(v60);
    int v62 = (int)v61;
    if (v61 >= 0x80) {
      int v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v61);
    }
    else {
      int v63 = 1;
    }
    v3 += v62 + v63 + 2;
    unsigned int v2 = *(_DWORD *)(a1 + 388);
    if ((v2 & 0x20000) == 0)
    {
LABEL_115:
      if ((v2 & 0x40000) == 0) {
        goto LABEL_116;
      }
      goto LABEL_134;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_115;
  }
  uint64_t v64 = *(void *)(a1 + 136);
  if (!v64)
  {
    sub_24B45829C();
    uint64_t v64 = *(void *)(qword_26B17C598 + 136);
  }
  int v65 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B468BA8(v64);
  int v66 = (int)v65;
  if (v65 >= 0x80) {
    int v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v65);
  }
  else {
    int v67 = 1;
  }
  v3 += v66 + v67 + 2;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x40000) == 0)
  {
LABEL_116:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_117;
    }
    goto LABEL_142;
  }
LABEL_134:
  uint64_t v68 = *(void *)(a1 + 144);
  if (!v68)
  {
    sub_24B45829C();
    uint64_t v68 = *(void *)(qword_26B17C598 + 144);
  }
  if ((*(unsigned char *)(v68 + 20) & 1) == 0)
  {
    int v69 = 0;
    *(_DWORD *)(v68 + 16) = 0;
LABEL_139:
    int v71 = 1;
    goto LABEL_141;
  }
  int v70 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v68 + 8));
  int v69 = v70 + 1;
  *(_DWORD *)(v68 + 16) = v70 + 1;
  if ((v70 + 1) < 0x80) {
    goto LABEL_139;
  }
  int v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v70 + 1));
LABEL_141:
  v3 += v69 + v71 + 2;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x80000) == 0)
  {
LABEL_117:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_145;
  }
LABEL_142:
  uint64_t v72 = *(void *)(a1 + 152);
  if (!v72)
  {
    sub_24B45829C();
    uint64_t v72 = *(void *)(qword_26B17C598 + 152);
  }
  v3 += sub_24B467E2C(v72) + 3;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x100000) == 0)
  {
LABEL_118:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_153;
  }
LABEL_145:
  uint64_t v73 = *(void *)(a1 + 160);
  if (!v73)
  {
    sub_24B45829C();
    uint64_t v73 = *(void *)(qword_26B17C598 + 160);
  }
  if ((*(unsigned char *)(v73 + 20) & 1) == 0)
  {
    int v74 = 0;
    *(_DWORD *)(v73 + 16) = 0;
LABEL_150:
    int v76 = 1;
    goto LABEL_152;
  }
  int v75 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v73 + 8));
  int v74 = v75 + 1;
  *(_DWORD *)(v73 + 16) = v75 + 1;
  if ((v75 + 1) < 0x80) {
    goto LABEL_150;
  }
  int v76 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v75 + 1));
LABEL_152:
  v3 += v74 + v76 + 2;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x200000) == 0)
  {
LABEL_119:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_159;
  }
LABEL_153:
  uint64_t v77 = *(unsigned int **)(a1 + 168);
  if (!v77)
  {
    sub_24B45829C();
    uint64_t v77 = *(unsigned int **)(qword_26B17C598 + 168);
  }
  int v78 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46DB98(v77);
  int v79 = (int)v78;
  if (v78 >= 0x80) {
    int v80 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v78);
  }
  else {
    int v80 = 1;
  }
  v3 += v79 + v80 + 2;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x400000) == 0)
  {
LABEL_120:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_171;
    }
    goto LABEL_165;
  }
LABEL_159:
  uint64_t v81 = *(void *)(a1 + 176);
  if (!v81)
  {
    sub_24B45829C();
    uint64_t v81 = *(void *)(qword_26B17C598 + 176);
  }
  uint64_t v82 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46DFB0(v81);
  int v83 = (int)v82;
  if (v82 >= 0x80) {
    int v84 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v82);
  }
  else {
    int v84 = 1;
  }
  v3 += v83 + v84 + 2;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x800000) != 0)
  {
LABEL_165:
    uint64_t v85 = *(void *)(a1 + 184);
    if (!v85)
    {
      sub_24B45829C();
      uint64_t v85 = *(void *)(qword_26B17C598 + 184);
    }
    if (*(_DWORD *)(v85 + 16)) {
      int v86 = 2 * (*(_DWORD *)(v85 + 16) & 1);
    }
    else {
      int v86 = 0;
    }
    *(_DWORD *)(v85 + 12) = v86;
    v3 += v86 + 3;
    unsigned int v2 = *(_DWORD *)(a1 + 388);
  }
LABEL_171:
  if (!HIBYTE(v2)) {
    goto LABEL_235;
  }
  if ((v2 & 0x1000000) != 0)
  {
    uint64_t v87 = *(void *)(a1 + 192);
    if (!v87)
    {
      sub_24B45829C();
      uint64_t v87 = *(void *)(qword_26B17C598 + 192);
    }
    int v88 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46EA44(v87);
    int v89 = (int)v88;
    if (v88 >= 0x80) {
      int v90 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v88);
    }
    else {
      int v90 = 1;
    }
    v3 += v89 + v90 + 2;
    unsigned int v2 = *(_DWORD *)(a1 + 388);
    if ((v2 & 0x2000000) == 0)
    {
LABEL_174:
      if ((v2 & 0x4000000) == 0) {
        goto LABEL_175;
      }
      goto LABEL_193;
    }
  }
  else if ((v2 & 0x2000000) == 0)
  {
    goto LABEL_174;
  }
  uint64_t v91 = *(void *)(a1 + 200);
  if (!v91)
  {
    sub_24B45829C();
    uint64_t v91 = *(void *)(qword_26B17C598 + 200);
  }
  int v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46EDE4(v91);
  int v93 = (int)v92;
  if (v92 >= 0x80) {
    int v94 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v92);
  }
  else {
    int v94 = 1;
  }
  v3 += v93 + v94 + 2;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_175:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_176;
    }
    goto LABEL_199;
  }
LABEL_193:
  uint64_t v95 = *(void *)(a1 + 208);
  if (!v95)
  {
    sub_24B45829C();
    uint64_t v95 = *(void *)(qword_26B17C598 + 208);
  }
  v96 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B473918(v95);
  int v97 = (int)v96;
  if (v96 >= 0x80) {
    int v98 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v96);
  }
  else {
    int v98 = 1;
  }
  v3 += v97 + v98 + 2;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_176:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_177;
    }
    goto LABEL_209;
  }
LABEL_199:
  uint64_t v99 = *(void *)(a1 + 216);
  if (!v99)
  {
    sub_24B45829C();
    uint64_t v99 = *(void *)(qword_26B17C598 + 216);
  }
  int v100 = *(_DWORD *)(v99 + 16);
  int v101 = 2 * (v100 & 1);
  if ((v100 & 2) != 0) {
    v101 += 2;
  }
  if ((v100 & 4) != 0) {
    v101 += 2;
  }
  if (*(_DWORD *)(v99 + 16)) {
    int v102 = v101;
  }
  else {
    int v102 = 0;
  }
  *(_DWORD *)(v99 + 12) = v102;
  v3 += v102 + 3;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_177:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_178;
    }
    goto LABEL_215;
  }
LABEL_209:
  uint64_t v103 = *(void *)(a1 + 224);
  if (!v103)
  {
    sub_24B45829C();
    uint64_t v103 = *(void *)(qword_26B17C598 + 224);
  }
  uint64_t v104 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B473DE4(v103);
  int v105 = (int)v104;
  if (v104 >= 0x80) {
    int v106 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v104);
  }
  else {
    int v106 = 1;
  }
  v3 += v105 + v106 + 2;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_178:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_179;
    }
    goto LABEL_221;
  }
LABEL_215:
  uint64_t v107 = *(void *)(a1 + 232);
  if (!v107)
  {
    sub_24B45829C();
    uint64_t v107 = *(void *)(qword_26B17C598 + 232);
  }
  int v108 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46D75C(v107);
  int v109 = (int)v108;
  if (v108 >= 0x80) {
    int v110 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v108);
  }
  else {
    int v110 = 1;
  }
  v3 += v109 + v110 + 2;
  unsigned int v2 = *(_DWORD *)(a1 + 388);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_179:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_235;
    }
    goto LABEL_229;
  }
LABEL_221:
  uint64_t v111 = *(void *)(a1 + 240);
  if (!v111)
  {
    sub_24B45829C();
    uint64_t v111 = *(void *)(qword_26B17C598 + 240);
  }
  int v112 = 2 * (*(_DWORD *)(v111 + 16) & 1);
  if ((*(_DWORD *)(v111 + 16) & 2) != 0) {
    v112 += 2;
  }
  if (*(_DWORD *)(v111 + 16)) {
    int v113 = v112;
  }
  else {
    int v113 = 0;
  }
  *(_DWORD *)(v111 + 12) = v113;
  v3 += v113 + 3;
  if ((*(_DWORD *)(a1 + 388) & 0x80000000) != 0)
  {
LABEL_229:
    uint64_t v114 = *(void *)(a1 + 248);
    if (!v114)
    {
      sub_24B45829C();
      uint64_t v114 = *(void *)(qword_26B17C598 + 248);
    }
    int v115 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B44F5E4(v114);
    int v116 = (int)v115;
    if (v115 >= 0x80) {
      int v117 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v115);
    }
    else {
      int v117 = 1;
    }
    v3 += v116 + v117 + 2;
  }
LABEL_235:
  int v118 = *(_DWORD *)(a1 + 392);
  if (!(_BYTE)v118) {
    goto LABEL_291;
  }
  if (v118)
  {
    v119 = *(unsigned int **)(a1 + 256);
    if (!v119)
    {
      sub_24B45829C();
      v119 = *(unsigned int **)(qword_26B17C598 + 256);
    }
    int v120 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B4283C0(v119);
    int v121 = (int)v120;
    if (v120 >= 0x80) {
      int v122 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v120);
    }
    else {
      int v122 = 1;
    }
    v3 += v121 + v122 + 2;
    int v118 = *(_DWORD *)(a1 + 392);
    if ((v118 & 2) == 0)
    {
LABEL_238:
      if ((v118 & 4) == 0) {
        goto LABEL_239;
      }
      goto LABEL_255;
    }
  }
  else if ((v118 & 2) == 0)
  {
    goto LABEL_238;
  }
  int v123 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 296);
  if (v123 >= 0x80)
  {
    int v124 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v123);
    int v118 = *(_DWORD *)(a1 + 392);
  }
  else
  {
    int v124 = 1;
  }
  v3 += v124 + 2;
  if ((v118 & 4) == 0)
  {
LABEL_239:
    if ((v118 & 8) == 0) {
      goto LABEL_240;
    }
    goto LABEL_261;
  }
LABEL_255:
  uint64_t v125 = *(void *)(a1 + 264);
  if (!v125)
  {
    sub_24B45829C();
    uint64_t v125 = *(void *)(qword_26B17C598 + 264);
  }
  v126 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B449B80(v125);
  int v127 = (int)v126;
  if (v126 >= 0x80) {
    int v128 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v126);
  }
  else {
    int v128 = 1;
  }
  v3 += v127 + v128 + 2;
  int v118 = *(_DWORD *)(a1 + 392);
  if ((v118 & 8) == 0)
  {
LABEL_240:
    if ((v118 & 0x10) == 0) {
      goto LABEL_241;
    }
    goto LABEL_267;
  }
LABEL_261:
  int v129 = *(unsigned int **)(a1 + 272);
  if (!v129)
  {
    sub_24B45829C();
    int v129 = *(unsigned int **)(qword_26B17C598 + 272);
  }
  int v130 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B44AB8C(v129);
  int v131 = (int)v130;
  if (v130 >= 0x80) {
    int v132 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v130);
  }
  else {
    int v132 = 1;
  }
  v3 += v131 + v132 + 2;
  int v118 = *(_DWORD *)(a1 + 392);
  if ((v118 & 0x10) == 0)
  {
LABEL_241:
    if ((v118 & 0x20) == 0) {
      goto LABEL_242;
    }
    goto LABEL_273;
  }
LABEL_267:
  uint64_t v133 = *(void *)(a1 + 280);
  if (!v133)
  {
    sub_24B45829C();
    uint64_t v133 = *(void *)(qword_26B17C598 + 280);
  }
  int v134 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B44DCE8(v133);
  int v135 = (int)v134;
  if (v134 >= 0x80) {
    int v136 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v134);
  }
  else {
    int v136 = 1;
  }
  v3 += v135 + v136 + 2;
  int v118 = *(_DWORD *)(a1 + 392);
  if ((v118 & 0x20) == 0)
  {
LABEL_242:
    if ((v118 & 0x40) == 0) {
      goto LABEL_243;
    }
    goto LABEL_279;
  }
LABEL_273:
  uint64_t v137 = *(void *)(a1 + 288);
  if (!v137)
  {
    sub_24B45829C();
    uint64_t v137 = *(void *)(qword_26B17C598 + 288);
  }
  v138 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B45143C(v137);
  int v139 = (int)v138;
  if (v138 >= 0x80) {
    int v140 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v138);
  }
  else {
    int v140 = 1;
  }
  v3 += v139 + v140 + 2;
  int v118 = *(_DWORD *)(a1 + 392);
  if ((v118 & 0x40) == 0)
  {
LABEL_243:
    if ((v118 & 0x80) == 0) {
      goto LABEL_291;
    }
    goto LABEL_285;
  }
LABEL_279:
  uint64_t v141 = *(void *)(a1 + 304);
  if (!v141)
  {
    sub_24B45829C();
    uint64_t v141 = *(void *)(qword_26B17C598 + 304);
  }
  int v142 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B452180(v141);
  int v143 = (int)v142;
  if (v142 >= 0x80) {
    int v144 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v142);
  }
  else {
    int v144 = 1;
  }
  v3 += v143 + v144 + 2;
  int v118 = *(_DWORD *)(a1 + 392);
  if ((v118 & 0x80) != 0)
  {
LABEL_285:
    uint64_t v145 = *(void *)(a1 + 312);
    if (!v145)
    {
      sub_24B45829C();
      uint64_t v145 = *(void *)(qword_26B17C598 + 312);
    }
    uint64_t v146 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B44EA10(v145);
    int v147 = (int)v146;
    if (v146 >= 0x80) {
      int v148 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v146);
    }
    else {
      int v148 = 1;
    }
    v3 += v147 + v148 + 2;
    int v118 = *(_DWORD *)(a1 + 392);
  }
LABEL_291:
  if ((v118 & 0x1FE00) == 0) {
    goto LABEL_326;
  }
  if ((v118 & 0x200) != 0)
  {
    uint64_t v149 = *(void *)(a1 + 336);
    if (!v149)
    {
      sub_24B45829C();
      uint64_t v149 = *(void *)(qword_26B17C598 + 336);
    }
    int v150 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B41EC94(v149);
    int v151 = (int)v150;
    if (v150 >= 0x80) {
      int v152 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v150);
    }
    else {
      int v152 = 1;
    }
    v3 += v151 + v152 + 2;
    int v118 = *(_DWORD *)(a1 + 392);
  }
  if ((v118 & 0x400) != 0)
  {
    uint64_t v153 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 300);
    if (v153 >= 0x80)
    {
      int v154 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v153) + 2;
      int v118 = *(_DWORD *)(a1 + 392);
    }
    else
    {
      int v154 = 3;
    }
    v3 += v154;
  }
  if ((v118 & 0x1000) != 0) {
    v3 += 3;
  }
  if ((v118 & 0x2000) != 0)
  {
    int v155 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 364);
    if (v155 >= 0x80)
    {
      int v156 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v155) + 2;
      int v118 = *(_DWORD *)(a1 + 392);
    }
    else
    {
      int v156 = 3;
    }
    v3 += v156;
    if ((v118 & 0x4000) == 0)
    {
LABEL_308:
      if ((v118 & 0x8000) == 0) {
        goto LABEL_326;
      }
      goto LABEL_320;
    }
  }
  else if ((v118 & 0x4000) == 0)
  {
    goto LABEL_308;
  }
  uint64_t v157 = *(void *)(a1 + 368);
  if (!v157)
  {
    sub_24B45829C();
    uint64_t v157 = *(void *)(qword_26B17C598 + 368);
  }
  int v158 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B423F34(v157);
  int v159 = (int)v158;
  if (v158 >= 0x80) {
    int v160 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v158);
  }
  else {
    int v160 = 1;
  }
  v3 += v159 + v160 + 2;
  if ((*(_DWORD *)(a1 + 392) & 0x8000) != 0)
  {
LABEL_320:
    uint64_t v161 = *(void *)(a1 + 376);
    if (!v161)
    {
      sub_24B45829C();
      uint64_t v161 = *(void *)(qword_26B17C598 + 376);
    }
    int v162 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B42024C(v161);
    int v163 = (int)v162;
    if (v162 >= 0x80) {
      int v164 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v162);
    }
    else {
      int v164 = 1;
    }
    v3 += v163 + v164 + 2;
  }
LABEL_326:
  int v165 = *(_DWORD *)(a1 + 328);
  if (v165 < 1)
  {
    int v167 = 0;
  }
  else
  {
    uint64_t v166 = 0;
    int v167 = 0;
    do
    {
      v168 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 320)
                                                                                              + 4 * v166);
      if (v168 >= 0x80)
      {
        int v169 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v168);
        int v165 = *(_DWORD *)(a1 + 328);
      }
      else
      {
        int v169 = 1;
      }
      v167 += v169;
      ++v166;
    }
    while (v166 < v165);
  }
  int v170 = *(_DWORD *)(a1 + 352);
  if (v170 < 1)
  {
    int v172 = 0;
  }
  else
  {
    uint64_t v171 = 0;
    int v172 = 0;
    do
    {
      v173 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 344)
                                                                                              + 4 * v171);
      if (v173 >= 0x80)
      {
        int v174 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v173);
        int v170 = *(_DWORD *)(a1 + 352);
      }
      else
      {
        int v174 = 1;
      }
      v172 += v174;
      ++v171;
    }
    while (v171 < v170);
  }
  uint64_t result = (v167 + v3 + v172 + 2 * (v170 + v165));
  *(_DWORD *)(a1 + 384) = result;
  return result;
}

void sub_24B45FEF8(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85B78, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B458598(a1, (uint64_t)lpsrc);
}

void sub_24B45FF9C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6)
      {
        sub_24B45829C();
        uint64_t v6 = *(void *)(qword_26B17C590 + 8);
      }
      sub_24B3EF704(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 16);
      if (v7 >= 4) {
        __assert_rtn("set_position_assist_type", "GpsdProtocol.pb.h", 9279, "::CoreGem::proto::gnss::PositionAssistType_IsValid(value)");
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 4) != 0)
    {
      char v8 = *(unsigned char *)(a2 + 20);
      *(_DWORD *)(a1 + 36) |= 4u;
      *(unsigned char *)(a1 + 20) = v8;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 8) != 0)
    {
      uint64_t v9 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 8u;
      *(void *)(a1 + 24) = v9;
    }
  }
}

void sub_24B460128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B460140(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(void *)(a1 + 16) = v7;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return;
    }
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(void *)(a1 + 24) = v5;
  }
}

void sub_24B460214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B46022C(int *a1, uint64_t a2)
{
  if ((int *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      sub_24B3F3814(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
}

void sub_24B46038C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B4603A4(int *a1, uint64_t a2)
{
  if ((int *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      sub_24B3F3CE4(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
}

void sub_24B460504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B46051C(int *a1, uint64_t a2)
{
  if ((int *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      sub_24B3F3CE4(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
}

void sub_24B46067C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_24B460694(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_24B460768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B460780(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = *(_DWORD *)(a2 + 76);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 76) |= 1u;
    *(void *)(a1 + 8) = v7;
    int v4 = *(_DWORD *)(a2 + 76);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 76) |= 2u;
  *(void *)(a1 + 16) = v8;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 76) |= 4u;
  *(void *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v10 = *(unsigned char *)(a2 + 64);
  *(_DWORD *)(a1 + 76) |= 8u;
  *(unsigned char *)(a1 + 64) = v10;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_26:
    uint64_t v12 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 76) |= 0x20u;
    *(void *)(a1 + 40) = v12;
    int v4 = *(_DWORD *)(a2 + 76);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t v11 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 76) |= 0x10u;
  *(void *)(a1 + 32) = v11;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_27:
  uint64_t v13 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 76) |= 0x40u;
  *(void *)(a1 + 48) = v13;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v5 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 76) |= 0x80u;
    *(void *)(a1 + 56) = v5;
    int v4 = *(_DWORD *)(a2 + 76);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    char v14 = *(unsigned char *)(a2 + 65);
    *(_DWORD *)(a1 + 76) |= 0x100u;
    *(unsigned char *)(a1 + 65) = v14;
    int v4 = *(_DWORD *)(a2 + 76);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_31;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  char v15 = *(unsigned char *)(a2 + 66);
  *(_DWORD *)(a1 + 76) |= 0x200u;
  *(unsigned char *)(a1 + 66) = v15;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v16 = *(unsigned char *)(a2 + 67);
  *(_DWORD *)(a1 + 76) |= 0x400u;
  *(unsigned char *)(a1 + 67) = v16;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      return;
    }
    goto LABEL_19;
  }
LABEL_32:
  char v17 = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 76) |= 0x800u;
  *(unsigned char *)(a1 + 68) = v17;
  if ((*(_DWORD *)(a2 + 76) & 0x1000) == 0) {
    return;
  }
LABEL_19:
  char v6 = *(unsigned char *)(a2 + 69);
  *(_DWORD *)(a1 + 76) |= 0x1000u;
  *(unsigned char *)(a1 + 69) = v6;
}

void sub_24B4609A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B4609B8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 16);
      if (v6 >= 0xA) {
        __assert_rtn("set_context", "GpsdProtocol.pb.h", 9941, "::CoreGem::proto::gnss::MotionActivityContext_IsValid(value)");
      }
      *(_DWORD *)(a1 + 32) |= 2u;
      *(_DWORD *)(a1 + 16) = v6;
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 4) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 20);
      if (v7 >= 5) {
        __assert_rtn("set_moving_state", "GpsdProtocol.pb.h", 9964, "::CoreGem::proto::gnss::MovingState_IsValid(value)");
      }
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 20) = v7;
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 8) != 0)
    {
      unsigned int v8 = *(_DWORD *)(a2 + 24);
      if (!sub_24B3EF6C4(v8)) {
        __assert_rtn("set_motion_reliability", "GpsdProtocol.pb.h", 9987, "::CoreGem::proto::gnss::Reliability_IsValid(value)");
      }
      *(_DWORD *)(a1 + 32) |= 8u;
      *(_DWORD *)(a1 + 24) = v8;
    }
  }
}

void sub_24B460B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B460B30(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 16);
      if ((v6 - 1) >= 4) {
        __assert_rtn("set_mount_state", "GpsdProtocol.pb.h", 10036, "::CoreGem::proto::gnss::DeviceMountState_IsValid(value)");
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v6;
    }
  }
}

void sub_24B460C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B460C20(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unsigned int v4 = *(_DWORD *)(a2 + 8);
    if (v4 >= 7 && v4 != 15) {
      __assert_rtn("set_signal_environment_type", "GpsdProtocol.pb.h", 10063, "::CoreGem::proto::gnss::SignalEnvironmentType_IsValid(value)");
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v4;
  }
}

void sub_24B460CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_24B460CF4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 44);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(double *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }
LABEL_12:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(double *)(a1 + 24) = result;
    if ((*(_DWORD *)(a2 + 44) & 8) == 0) {
      return result;
    }
LABEL_8:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(double *)(a1 + 32) = result;
  }
  return result;
}

void sub_24B460DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_24B460E00(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_24B460ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B460EEC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v5 = *(const std::string **)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      uint64_t v6 = *(std::string **)(a1 + 8);
      if (v6 == (std::string *)MEMORY[0x263F8C740]) {
        operator new();
      }
      std::string::operator=(v6, v5);
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 16);
      if (v7 >= 3) {
        __assert_rtn("set_compression_type", "GpsdProtocol.pb.h", 9107, "::CoreGem::proto::gpsd::CompressionType_IsValid(value)");
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
    }
  }
}

void sub_24B461004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B46101C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    int v4 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    int v5 = *(std::string **)(a1 + 8);
    if (v5 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v5, v4);
  }
}

void sub_24B4610E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B4610FC(int *a1, uint64_t a2)
{
  if ((int *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2));
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      sub_24B3F432C(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
}

void sub_24B46125C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B461274(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    *(void *)(a1 + 8) = v4;
  }
}

void sub_24B461300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B461318(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = a2[20];
  if ((_BYTE)v4)
  {
    if (a2[20])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 20) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_14;
      }
    }
    else if ((a2[20] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 20) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_15;
    }
LABEL_14:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 20) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
LABEL_15:
    char v9 = a2[11];
    *(_DWORD *)(a1 + 20) |= 8u;
    *(unsigned char *)(a1 + 11) = v9;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_10;
    }
LABEL_16:
    char v10 = a2[12];
    *(_DWORD *)(a1 + 20) |= 0x10u;
    *(unsigned char *)(a1 + 12) = v10;
    if ((*((_DWORD *)a2 + 5) & 0x20) == 0) {
      return;
    }
LABEL_10:
    char v5 = a2[13];
    *(_DWORD *)(a1 + 20) |= 0x20u;
    *(unsigned char *)(a1 + 13) = v5;
  }
}

void sub_24B46144C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B461464(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    *(void *)(a1 + 8) = v4;
  }
}

void sub_24B4614F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B461508(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      char v5 = *(unsigned char *)(a2 + 8);
      *(_DWORD *)(a1 + 20) |= 1u;
      *(unsigned char *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      *(_DWORD *)(a1 + 20) |= 2u;
      *(_DWORD *)(a1 + 12) = v6;
    }
  }
}

void sub_24B4615B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B4615CC(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_24B461678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B461690(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    char v4 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(unsigned char *)(a1 + 8) = v4;
  }
}

void sub_24B46171C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B461734(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    char v4 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    int v5 = *(std::string **)(a1 + 8);
    if (v5 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v5, v4);
  }
}

void sub_24B4617FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B461814(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    char v4 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 1u;
    int v5 = *(std::string **)(a1 + 8);
    if (v5 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v5, v4);
  }
}

void sub_24B4618DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B4618F4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 56);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 56))
  {
    char v5 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(unsigned char *)(a1 + 8) = v5;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v6 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(_DWORD *)(a1 + 12) = v6;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_14:
  unsigned int v7 = *(_DWORD *)(a2 + 48);
  if (v7 >= 5) {
    __assert_rtn("set_info_type", "GpsdProtocol.pb.h", 11483, "::CoreGem::proto::gpsd::LtlInfoType_IsValid(value)");
  }
  *(_DWORD *)(a1 + 56) |= 4u;
  *(_DWORD *)(a1 + 48) = v7;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_21:
    *(_DWORD *)(a1 + 56) |= 0x10u;
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 24);
    if (!v11)
    {
      sub_24B45829C();
      uint64_t v11 = *(void *)(qword_26B17C378 + 24);
    }
    sub_24B470860(v10, v11);
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_31;
    }
    goto LABEL_26;
  }
LABEL_16:
  *(_DWORD *)(a1 + 56) |= 8u;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9)
  {
    sub_24B45829C();
    uint64_t v9 = *(void *)(qword_26B17C378 + 16);
  }
  sub_24B472158(v8, v9);
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x10) != 0) {
    goto LABEL_21;
  }
LABEL_9:
  if ((v4 & 0x20) == 0) {
    goto LABEL_10;
  }
LABEL_26:
  *(_DWORD *)(a1 + 56) |= 0x20u;
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = *(void *)(a2 + 32);
  if (!v13)
  {
    sub_24B45829C();
    uint64_t v13 = *(void *)(qword_26B17C378 + 32);
  }
  sub_24B471418(v12, v13);
  if ((*(_DWORD *)(a2 + 56) & 0x40) != 0)
  {
LABEL_31:
    *(_DWORD *)(a1 + 56) |= 0x40u;
    char v14 = *(_DWORD **)(a1 + 40);
    if (!v14) {
      operator new();
    }
    uint64_t v15 = *(void *)(a2 + 40);
    if (!v15)
    {
      sub_24B45829C();
      uint64_t v15 = *(void *)(qword_26B17C378 + 40);
    }
    sub_24B471C2C(v14, v15);
  }
}

void sub_24B461C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B461C34(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    if ((*((_DWORD *)a2 + 4) & 4) == 0) {
      return;
    }
LABEL_7:
    char v5 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v5;
  }
}

void sub_24B461D08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B461D20(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unsigned int v4 = *(_DWORD *)(a2 + 8);
    if (v4 >= 7) {
      __assert_rtn("set_status", "GpsdProtocol.pb.h", 11678, "::CoreGem::proto::gpsd::CntinStatus_IsValid(value)");
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v4;
  }
}

void sub_24B461DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B461DEC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v6;
    }
  }
}

void sub_24B461E98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B461EB0(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v5 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v5;
      int v4 = *((_DWORD *)a2 + 4);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = a2[9];
      *(_DWORD *)(a1 + 16) |= 2u;
      *(unsigned char *)(a1 + 9) = v6;
    }
  }
}

void sub_24B461F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_24B461F74()
{
  return 1;
}

void *sub_24B461F7C@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.Request");
}

void sub_24B461F8C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v5 = *(_DWORD *)(a2 + 16);
      if ((sub_24B458334() & 1) == 0) {
        __assert_rtn("set_request_type", "GpsdProtocol.pb.h", 7648, "::CoreGem::proto::gpsd::Request_Type_IsValid(value)");
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 4) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 20);
      if (v7 >= 0xA) {
        __assert_rtn("set_result_code", "GpsdProtocol.pb.h", 7693, "::CoreGem::proto::gnss::Result_IsValid(value)");
      }
      *(_DWORD *)(a1 + 28) |= 4u;
      *(_DWORD *)(a1 + 20) = v7;
    }
  }
}

void sub_24B4620B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B4620C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE84760;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B462124(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B4620C8(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46215C()
{
}

uint64_t sub_24B4621A8(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_24B4621BC(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v4 = (unint64_t *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v19 = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v19);
          if (!result) {
            return result;
          }
          unsigned int v12 = v19;
        }
        else
        {
          unsigned int v12 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (sub_24B458334())
        {
          a1[7] |= 1u;
          a1[4] = v12;
        }
        char v14 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v14 < v9 && *v14 == 16)
        {
          uint64_t v13 = v14 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_29;
        }
      }
      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      uint64_t v13 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
LABEL_29:
      if ((unint64_t)v13 >= v9 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if (!result) {
          return result;
        }
        uint64_t v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        *int v4 = *v13;
        uint64_t v15 = v13 + 1;
        *((void *)this + 1) = v15;
      }
      a1[7] |= 2u;
      if ((unint64_t)v15 < v9 && *v15 == 24)
      {
        uint64_t v10 = v15 + 1;
        *((void *)this + 1) = v10;
LABEL_37:
        unsigned int v18 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
          if (!result) {
            return result;
          }
          unsigned int v16 = v18;
        }
        else
        {
          unsigned int v16 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        if (v16 <= 9)
        {
          a1[7] |= 4u;
          a1[5] = v16;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_37;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_19:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B4623FC(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 8), a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = *(unsigned int *)(v5 + 20);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_24B462488(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_21;
  }
  if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if ((v4 & 0x80000000) != 0)
  {
    uint64_t v3 = 11;
    if ((v2 & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    if (v4 >= 0x80)
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *(_DWORD *)(a1 + 28);
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    uint64_t v3 = 2;
    if ((v2 & 2) != 0)
    {
LABEL_13:
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      int v2 = *(_DWORD *)(a1 + 28);
    }
  }
LABEL_14:
  if ((v2 & 4) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
LABEL_21:
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

void sub_24B46254C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85B90, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B461F8C(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B4625F0()
{
  return 1;
}

void *sub_24B4625F8@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.Response");
}

uint64_t sub_24B462608(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_26FE847D8;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_DWORD *)(a1 + 216) = 0;
  sub_24B46269C(a1, a2);
  return a1;
}

void sub_24B462688(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void sub_24B46269C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v56);
  }
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if (!(_BYTE)v4) {
    goto LABEL_46;
  }
  if (v4)
  {
    unsigned int v5 = *(_DWORD *)(a2 + 8);
    if (v5 - 9 >= 0x12 && v5 >= 6) {
      __assert_rtn("set_type", "GpsdProtocol.pb.h", 7720, "::CoreGem::proto::gpsd::Indication_Type_IsValid(value)");
    }
    *(_DWORD *)(a1 + 216) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
    unsigned int v4 = *(_DWORD *)(a2 + 216);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 12);
    if ((sub_24B458334() & 1) == 0) {
      __assert_rtn("set_request_type", "GpsdProtocol.pb.h", 7743, "::CoreGem::proto::gpsd::Request_Type_IsValid(value)");
    }
    *(_DWORD *)(a1 + 216) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    unsigned int v4 = *(_DWORD *)(a2 + 216);
  }
  if ((v4 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 216) |= 4u;
    *(void *)(a1 + 16) = v8;
    unsigned int v4 = *(_DWORD *)(a2 + 216);
    if ((v4 & 8) == 0)
    {
LABEL_15:
      if ((v4 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_26;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_15;
  }
  *(_DWORD *)(a1 + 216) |= 8u;
  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 24);
  if (!v10)
  {
    sub_24B45829C();
    uint64_t v10 = *(void *)(qword_26B17C588 + 24);
  }
  sub_24B3F15F8(v9, v10);
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x10) == 0)
  {
LABEL_16:
    if ((v4 & 0x20) == 0) {
      goto LABEL_17;
    }
LABEL_31:
    *(_DWORD *)(a1 + 216) |= 0x20u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13) {
      operator new();
    }
    uint64_t v14 = *(void *)(a2 + 40);
    if (!v14)
    {
      sub_24B45829C();
      uint64_t v14 = *(void *)(qword_26B17C588 + 40);
    }
    sub_24B3F4B50(v13, v14);
    unsigned int v4 = *(_DWORD *)(a2 + 216);
    if ((v4 & 0x40) == 0)
    {
LABEL_18:
      if ((v4 & 0x80) == 0) {
        goto LABEL_46;
      }
      goto LABEL_41;
    }
    goto LABEL_36;
  }
LABEL_26:
  *(_DWORD *)(a1 + 216) |= 0x10u;
  uint64_t v11 = *(void *)(a1 + 32);
  if (!v11) {
    operator new();
  }
  uint64_t v12 = *(void *)(a2 + 32);
  if (!v12)
  {
    sub_24B45829C();
    uint64_t v12 = *(void *)(qword_26B17C588 + 32);
  }
  sub_24B4151FC(v11, v12);
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_17:
  if ((v4 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_36:
  *(_DWORD *)(a1 + 216) |= 0x40u;
  uint64_t v15 = *(void *)(a1 + 48);
  if (!v15) {
    operator new();
  }
  uint64_t v16 = *(void *)(a2 + 48);
  if (!v16)
  {
    sub_24B45829C();
    uint64_t v16 = *(void *)(qword_26B17C588 + 48);
  }
  sub_24B466B4C(v15, v16);
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x80) != 0)
  {
LABEL_41:
    *(_DWORD *)(a1 + 216) |= 0x80u;
    uint64_t v17 = *(void *)(a1 + 56);
    if (!v17) {
      operator new();
    }
    uint64_t v18 = *(void *)(a2 + 56);
    if (!v18)
    {
      sub_24B45829C();
      uint64_t v18 = *(void *)(qword_26B17C588 + 56);
    }
    sub_24B3F2E88(v17, v18);
    unsigned int v4 = *(_DWORD *)(a2 + 216);
  }
LABEL_46:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_90;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 216) |= 0x100u;
    uint64_t v19 = *(void *)(a1 + 64);
    if (!v19) {
      operator new();
    }
    uint64_t v20 = *(void *)(a2 + 64);
    if (!v20)
    {
      sub_24B45829C();
      uint64_t v20 = *(void *)(qword_26B17C588 + 64);
    }
    sub_24B466C78(v19, v20);
    unsigned int v4 = *(_DWORD *)(a2 + 216);
    if ((v4 & 0x200) == 0)
    {
LABEL_49:
      if ((v4 & 0x400) == 0) {
        goto LABEL_50;
      }
      goto LABEL_66;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_49;
  }
  *(_DWORD *)(a1 + 216) |= 0x200u;
  uint64_t v21 = *(void *)(a1 + 72);
  if (!v21) {
    operator new();
  }
  uint64_t v22 = *(void *)(a2 + 72);
  if (!v22)
  {
    sub_24B45829C();
    uint64_t v22 = *(void *)(qword_26B17C588 + 72);
  }
  sub_24B466E7C(v21, v22);
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x400) == 0)
  {
LABEL_50:
    if ((v4 & 0x800) == 0) {
      goto LABEL_51;
    }
    goto LABEL_71;
  }
LABEL_66:
  *(_DWORD *)(a1 + 216) |= 0x400u;
  uint64_t v23 = *(void *)(a1 + 80);
  if (!v23) {
    operator new();
  }
  uint64_t v24 = *(void *)(a2 + 80);
  if (!v24)
  {
    sub_24B45829C();
    uint64_t v24 = *(void *)(qword_26B17C588 + 80);
  }
  sub_24B3F578C(v23, v24);
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x800) == 0)
  {
LABEL_51:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_76;
  }
LABEL_71:
  *(_DWORD *)(a1 + 216) |= 0x800u;
  uint64_t v25 = *(void *)(a1 + 88);
  if (!v25) {
    operator new();
  }
  uint64_t v26 = *(void *)(a2 + 88);
  if (!v26)
  {
    sub_24B45829C();
    uint64_t v26 = *(void *)(qword_26B17C588 + 88);
  }
  sub_24B3F5294(v25, v26);
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x1000) == 0)
  {
LABEL_52:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_78;
  }
LABEL_76:
  unsigned int v27 = *(_DWORD *)(a2 + 96);
  if (v27 >= 0xA) {
    __assert_rtn("set_start_status", "GpsdProtocol.pb.h", 8166, "::CoreGem::proto::gnss::Result_IsValid(value)");
  }
  *(_DWORD *)(a1 + 216) |= 0x1000u;
  *(_DWORD *)(a1 + 96) = v27;
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x2000) == 0)
  {
LABEL_53:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_80;
  }
LABEL_78:
  unsigned int v28 = *(_DWORD *)(a2 + 100);
  if (v28 >= 0xA) {
    __assert_rtn("set_stop_status", "GpsdProtocol.pb.h", 8189, "::CoreGem::proto::gnss::Result_IsValid(value)");
  }
  *(_DWORD *)(a1 + 216) |= 0x2000u;
  *(_DWORD *)(a1 + 100) = v28;
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x4000) == 0)
  {
LABEL_54:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_85;
  }
LABEL_80:
  *(_DWORD *)(a1 + 216) |= 0x4000u;
  uint64_t v29 = *(void *)(a1 + 104);
  if (!v29) {
    operator new();
  }
  uint64_t v30 = *(void *)(a2 + 104);
  if (!v30)
  {
    sub_24B45829C();
    uint64_t v30 = *(void *)(qword_26B17C588 + 104);
  }
  sub_24B466F48(v29, v30);
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x8000) != 0)
  {
LABEL_85:
    *(_DWORD *)(a1 + 216) |= 0x8000u;
    int v31 = *(_DWORD **)(a1 + 112);
    if (!v31) {
      operator new();
    }
    uint64_t v32 = *(void *)(a2 + 112);
    if (!v32)
    {
      sub_24B45829C();
      uint64_t v32 = *(void *)(qword_26B17C588 + 112);
    }
    sub_24B466FEC(v31, v32);
    unsigned int v4 = *(_DWORD *)(a2 + 216);
  }
LABEL_90:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_140;
  }
  if ((v4 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 216) |= 0x10000u;
    uint64_t v33 = *(void *)(a1 + 120);
    if (!v33) {
      operator new();
    }
    uint64_t v34 = *(void *)(a2 + 120);
    if (!v34)
    {
      sub_24B45829C();
      uint64_t v34 = *(void *)(qword_26B17C588 + 120);
    }
    sub_24B4670D8(v33, v34);
    unsigned int v4 = *(_DWORD *)(a2 + 216);
    if ((v4 & 0x20000) == 0)
    {
LABEL_93:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_94;
      }
      goto LABEL_110;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_93;
  }
  *(_DWORD *)(a1 + 216) |= 0x20000u;
  uint64_t v35 = *(void *)(a1 + 128);
  if (!v35) {
    operator new();
  }
  uint64_t v36 = *(void *)(a2 + 128);
  if (!v36)
  {
    sub_24B45829C();
    uint64_t v36 = *(void *)(qword_26B17C588 + 128);
  }
  sub_24B41A2F8(v35, v36);
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x40000) == 0)
  {
LABEL_94:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_115;
  }
LABEL_110:
  *(_DWORD *)(a1 + 216) |= 0x40000u;
  uint64_t v37 = *(void *)(a1 + 136);
  if (!v37) {
    operator new();
  }
  uint64_t v38 = *(void *)(a2 + 136);
  if (!v38)
  {
    sub_24B45829C();
    uint64_t v38 = *(void *)(qword_26B17C588 + 136);
  }
  sub_24B438824(v37, v38);
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x80000) == 0)
  {
LABEL_95:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_120;
  }
LABEL_115:
  *(_DWORD *)(a1 + 216) |= 0x80000u;
  uint64_t v39 = *(void *)(a1 + 144);
  if (!v39) {
    operator new();
  }
  uint64_t v40 = *(void *)(a2 + 144);
  if (!v40)
  {
    sub_24B45829C();
    uint64_t v40 = *(void *)(qword_26B17C588 + 144);
  }
  sub_24B43E3E8(v39, v40);
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x100000) == 0)
  {
LABEL_96:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_125;
  }
LABEL_120:
  *(_DWORD *)(a1 + 216) |= 0x100000u;
  uint64_t v41 = *(void *)(a1 + 152);
  if (!v41) {
    operator new();
  }
  uint64_t v42 = *(void *)(a2 + 152);
  if (!v42)
  {
    sub_24B45829C();
    uint64_t v42 = *(void *)(qword_26B17C588 + 152);
  }
  sub_24B444658(v41, v42);
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x200000) == 0)
  {
LABEL_97:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_130;
  }
LABEL_125:
  *(_DWORD *)(a1 + 216) |= 0x200000u;
  uint64_t v43 = *(void *)(a1 + 160);
  if (!v43) {
    operator new();
  }
  uint64_t v44 = *(void *)(a2 + 160);
  if (!v44)
  {
    sub_24B45829C();
    uint64_t v44 = *(void *)(qword_26B17C588 + 160);
  }
  sub_24B4516F8(v43, v44);
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x400000) == 0)
  {
LABEL_98:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_140;
    }
    goto LABEL_135;
  }
LABEL_130:
  *(_DWORD *)(a1 + 216) |= 0x400000u;
  uint64_t v45 = *(void *)(a1 + 168);
  if (!v45) {
    operator new();
  }
  uint64_t v46 = *(void *)(a2 + 168);
  if (!v46)
  {
    sub_24B45829C();
    uint64_t v46 = *(void *)(qword_26B17C588 + 168);
  }
  sub_24B455254(v45, v46);
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x800000) != 0)
  {
LABEL_135:
    *(_DWORD *)(a1 + 216) |= 0x800000u;
    uint64_t v47 = *(void *)(a1 + 176);
    if (!v47) {
      operator new();
    }
    uint64_t v48 = *(void *)(a2 + 176);
    if (!v48)
    {
      sub_24B45829C();
      uint64_t v48 = *(void *)(qword_26B17C588 + 176);
    }
    sub_24B424200(v47, v48);
    unsigned int v4 = *(_DWORD *)(a2 + 216);
  }
LABEL_140:
  if (!HIBYTE(v4)) {
    return;
  }
  if ((v4 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 216) |= 0x1000000u;
    uint64_t v52 = *(void *)(a1 + 184);
    if (!v52) {
      operator new();
    }
    uint64_t v53 = *(void *)(a2 + 184);
    if (!v53)
    {
      sub_24B45829C();
      uint64_t v53 = *(void *)(qword_26B17C588 + 184);
    }
    sub_24B4222C8(v52, v53);
    unsigned int v4 = *(_DWORD *)(a2 + 216);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_143:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_144;
      }
      goto LABEL_159;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_143;
  }
  int v54 = *(_DWORD *)(a2 + 192);
  *(_DWORD *)(a1 + 216) |= 0x2000000u;
  *(_DWORD *)(a1 + 192) = v54;
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_144:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_146;
    }
    goto LABEL_145;
  }
LABEL_159:
  unsigned int v55 = *(_DWORD *)(a2 + 196);
  if (v55 >= 3 && v55 != 4) {
    __assert_rtn("set_supl_init_decode_result", "GpsdProtocol.pb.h", 8696, "::CoreGem::proto::gpsd::SuplInitDecodeResult_IsValid(value)");
  }
  *(_DWORD *)(a1 + 216) |= 0x4000000u;
  *(_DWORD *)(a1 + 196) = v55;
  unsigned int v4 = *(_DWORD *)(a2 + 216);
  if ((v4 & 0x8000000) == 0) {
    goto LABEL_146;
  }
LABEL_145:
  int v49 = *(_DWORD *)(a2 + 208);
  *(_DWORD *)(a1 + 216) |= 0x8000000u;
  *(_DWORD *)(a1 + 208) = v49;
  unsigned int v4 = *(_DWORD *)(a2 + 216);
LABEL_146:
  if ((v4 & 0x10000000) != 0)
  {
    *(_DWORD *)(a1 + 216) |= 0x10000000u;
    uint64_t v50 = *(void *)(a1 + 200);
    if (!v50) {
      operator new();
    }
    uint64_t v51 = *(void *)(a2 + 200);
    if (!v51)
    {
      sub_24B45829C();
      uint64_t v51 = *(void *)(qword_26B17C588 + 200);
    }
    sub_24B41EEB4(v50, v51);
  }
}

void sub_24B463498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B4634B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE847D8;
  sub_24B463508(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B463508(void *a1)
{
  sub_24B45829C();
  if ((void *)qword_26B17C588 != a1)
  {
    uint64_t v2 = a1[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[4];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = a1[5];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = a1[6];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = a1[7];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = a1[8];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = a1[9];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = a1[10];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = a1[11];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = a1[13];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = a1[14];
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = a1[15];
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    uint64_t v14 = a1[16];
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    uint64_t v15 = a1[17];
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    }
    uint64_t v16 = a1[18];
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
    uint64_t v17 = a1[19];
    if (v17) {
      (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    }
    uint64_t v18 = a1[20];
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    }
    uint64_t v19 = a1[21];
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
    uint64_t v20 = a1[22];
    if (v20) {
      (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
    }
    uint64_t v21 = a1[23];
    if (v21) {
      (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
    }
    uint64_t v22 = a1[25];
    if (v22)
    {
      uint64_t v23 = *(void (**)(void))(*(void *)v22 + 8);
      v23();
    }
  }
}

void sub_24B4638F4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B4634B0(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46392C()
{
}

uint64_t sub_24B4639B0(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(_DWORD *)(result + 216);
  if ((_BYTE)v2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    if ((v2 & 8) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result)
      {
        uint64_t result = sub_24B3F1A34(result);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t result = *(void *)(v1 + 32);
      if (result)
      {
        uint64_t result = sub_24B415ACC(result);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 40);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 48))
        {
          *(_DWORD *)(v3 + 40) = 0;
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        *(_DWORD *)(v3 + 48) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 48);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 32))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(_DWORD *)(v4 + 23) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      uint64_t result = *(void *)(v1 + 56);
      if (result)
      {
        uint64_t result = sub_24B3F3150(result);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t result = *(void *)(v1 + 64);
      if (result)
      {
        uint64_t result = sub_24B463C98(result);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 72);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 16)) {
          *(_DWORD *)(v5 + 8) = 0;
        }
        *(_DWORD *)(v5 + 16) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x400) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 80);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 36))
        {
          *(_DWORD *)(v6 + 28) = 0;
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
          *(unsigned char *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x800) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 88);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 24))
        {
          *(void *)(v7 + 8) = 0;
          *(unsigned char *)(v7 + 16) = 0;
        }
        *(_DWORD *)(v7 + 24) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    *(void *)(v1 + 96) = 0;
    if ((v2 & 0x4000) != 0)
    {
      uint64_t v8 = *(void *)(v1 + 104);
      if (v8)
      {
        if (*(unsigned char *)(v8 + 16)) {
          *(unsigned char *)(v8 + 8) = 0;
        }
        *(_DWORD *)(v8 + 16) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x8000) != 0)
    {
      uint64_t v9 = *(void *)(v1 + 112);
      if (v9)
      {
        if (*(unsigned char *)(v9 + 24))
        {
          *(void *)(v9 + 8) = 0;
          *(_DWORD *)(v9 + 16) = 0;
        }
        *(_DWORD *)(v9 + 24) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      uint64_t result = *(void *)(v1 + 120);
      if (result)
      {
        uint64_t result = sub_24B463D70(result);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x20000) != 0)
    {
      uint64_t v10 = *(void *)(v1 + 128);
      if (v10)
      {
        int v11 = *(_DWORD *)(v10 + 124);
        if ((_BYTE)v11)
        {
          *(void *)(v10 + 56) = 0;
          *(_OWORD *)(v10 + 40) = 0u;
          *(_OWORD *)(v10 + 24) = 0u;
          *(_OWORD *)(v10 + 8) = 0u;
        }
        if ((v11 & 0xFF00) != 0)
        {
          *(_OWORD *)(v10 + 89) = 0u;
          *(_OWORD *)(v10 + 64) = 0u;
          *(_OWORD *)(v10 + 80) = 0u;
        }
        if ((v11 & 0xFF0000) != 0)
        {
          *(unsigned char *)(v10 + 105) = 0;
          *(void *)(v10 + 112) = 0;
          *(_DWORD *)(v10 + 108) = 0;
        }
        *(_DWORD *)(v10 + 124) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x40000) != 0)
    {
      uint64_t result = *(void *)(v1 + 136);
      if (result)
      {
        uint64_t result = sub_24B438DB8(result);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x80000) != 0)
    {
      uint64_t result = *(void *)(v1 + 144);
      if (result)
      {
        uint64_t result = sub_24B43E844(result);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x100000) != 0)
    {
      uint64_t result = *(void *)(v1 + 152);
      if (result)
      {
        uint64_t result = sub_24B444A7C(result);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x200000) != 0)
    {
      uint64_t v12 = *(void *)(v1 + 160);
      if (v12)
      {
        if (*(unsigned char *)(v12 + 16)) {
          *(_DWORD *)(v12 + 8) = 0;
        }
        *(_DWORD *)(v12 + 16) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x400000) != 0)
    {
      uint64_t result = *(void *)(v1 + 168);
      if (result)
      {
        uint64_t result = sub_24B4556E0(result);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    if ((v2 & 0x800000) != 0)
    {
      uint64_t result = *(void *)(v1 + 176);
      if (result)
      {
        uint64_t result = sub_24B42473C(result);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
  }
  if (HIBYTE(v2))
  {
    if ((v2 & 0x1000000) != 0)
    {
      uint64_t result = *(void *)(v1 + 184);
      if (result)
      {
        uint64_t result = sub_24B422774(result);
        unsigned int v2 = *(_DWORD *)(v1 + 216);
      }
    }
    *(void *)(v1 + 192) = 0;
    *(_DWORD *)(v1 + 208) = 0;
    if ((v2 & 0x10000000) != 0)
    {
      uint64_t v13 = *(void *)(v1 + 200);
      if (v13)
      {
        if (*(unsigned char *)(v13 + 20))
        {
          *(_DWORD *)(v13 + 8) = 0;
          *(unsigned char *)(v13 + 12) = 0;
        }
        *(_DWORD *)(v13 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 216) = 0;
  return result;
}

uint64_t sub_24B463C80(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 23) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_24B463C98(uint64_t result)
{
  uint64_t v1 = result;
  if ((*(unsigned char *)(result + 44) & 2) != 0)
  {
    uint64_t v2 = *(void *)(result + 32);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 20))
      {
        *(_DWORD *)(v2 + 11) = 0;
        *(_DWORD *)(v2 + 8) = 0;
      }
      *(_DWORD *)(v2 + 20) = 0;
    }
  }
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 8) + 8 * v3);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_24B463D30(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_24B463D44(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(unsigned char *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_24B463D58(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_24B463D70(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 36);
  if (v1)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(result + 24);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_24B463DBC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (unint64_t *)(a1 + 16);
  uint64_t v5 = (unsigned int *)(a1 + 192);
  uint64_t v6 = (unsigned int *)(a1 + 208);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        unsigned int v190 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && (*v10 & 0x80000000) == 0)
        {
          unsigned int v11 = *v10;
          *((void *)this + 1) = v10 + 1;
          goto LABEL_89;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190);
        if (result)
        {
          unsigned int v11 = v190;
LABEL_89:
          if (v11 - 9 < 0x12 || v11 <= 5)
          {
            if (v11 - 9 >= 0x12 && v11 >= 6) {
              __assert_rtn("set_type", "GpsdProtocol.pb.h", 7720, "::CoreGem::proto::gpsd::Indication_Type_IsValid(value)");
            }
            *(_DWORD *)(a1 + 216) |= 1u;
            *(_DWORD *)(a1 + 8) = v11;
          }
          uint64_t v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
          if ((unint64_t)v37 < v19 && *v37 == 16)
          {
            uint64_t v20 = v37 + 1;
            *((void *)this + 1) = v20;
            goto LABEL_101;
          }
          continue;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
LABEL_101:
        unsigned int v190 = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190);
          if (!result) {
            return result;
          }
          unsigned int v38 = v190;
        }
        else
        {
          unsigned int v38 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        if (sub_24B458334())
        {
          *(_DWORD *)(a1 + 216) |= 2u;
          *(_DWORD *)(a1 + 12) = v38;
        }
        uint64_t v39 = (unsigned char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v39 >= v21 || *v39 != 24) {
          continue;
        }
        uint64_t v22 = v39 + 1;
        *((void *)this + 1) = v22;
LABEL_111:
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
          if (!result) {
            return result;
          }
          uint64_t v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v4 = *v22;
          uint64_t v40 = v22 + 1;
          *((void *)this + 1) = v40;
        }
        int v23 = *(_DWORD *)(a1 + 216) | 4;
        *(_DWORD *)(a1 + 216) = v23;
        if ((unint64_t)v40 >= v21 || *v40 != 34) {
          continue;
        }
        *((void *)this + 1) = v40 + 1;
LABEL_119:
        *(_DWORD *)(a1 + 216) = v23 | 8;
        uint64_t v41 = *(void *)(a1 + 24);
        if (!v41) {
          operator new();
        }
        unsigned int v190 = 0;
        uint64_t v42 = (char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v42;
          *((void *)this + 1) = v42 + 1;
        }
        int v43 = *((_DWORD *)this + 14);
        int v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 >= v44) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B3F1B00(v41, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v45 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v45, 1);
        int v46 = v45 - 1;
        if (v46 < 0 == v32) {
          *((_DWORD *)this + 14) = v46;
        }
        uint64_t v47 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v47 >= *((void *)this + 2) || *v47 != 42) {
          continue;
        }
        *((void *)this + 1) = v47 + 1;
LABEL_133:
        *(_DWORD *)(a1 + 216) |= 0x10u;
        uint64_t v48 = *(void *)(a1 + 32);
        if (!v48) {
          operator new();
        }
        unsigned int v190 = 0;
        int v49 = (char *)*((void *)this + 1);
        if ((unint64_t)v49 >= *((void *)this + 2) || *v49 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v49;
          *((void *)this + 1) = v49 + 1;
        }
        int v50 = *((_DWORD *)this + 14);
        int v51 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v50 + 1;
        if (v50 >= v51) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B415B98(v48, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v52 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v52, 1);
        int v53 = v52 - 1;
        if (v53 < 0 == v32) {
          *((_DWORD *)this + 14) = v53;
        }
        int v54 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 != 50) {
          continue;
        }
        *((void *)this + 1) = v54 + 1;
LABEL_147:
        *(_DWORD *)(a1 + 216) |= 0x20u;
        uint64_t v55 = *(void *)(a1 + 40);
        if (!v55) {
          operator new();
        }
        unsigned int v190 = 0;
        uint64_t v56 = (char *)*((void *)this + 1);
        if ((unint64_t)v56 >= *((void *)this + 2) || *v56 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v56;
          *((void *)this + 1) = v56 + 1;
        }
        int v57 = *((_DWORD *)this + 14);
        int v58 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v57 + 1;
        if (v57 >= v58) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B3F4DB0(v55, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v59 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v59, 1);
        int v60 = v59 - 1;
        if (v60 < 0 == v32) {
          *((_DWORD *)this + 14) = v60;
        }
        uint64_t v61 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v61 >= *((void *)this + 2) || *v61 != 74) {
          continue;
        }
        *((void *)this + 1) = v61 + 1;
LABEL_161:
        *(_DWORD *)(a1 + 216) |= 0x40u;
        uint64_t v62 = *(void *)(a1 + 48);
        if (!v62) {
          operator new();
        }
        unsigned int v190 = 0;
        int v63 = (char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v63;
          *((void *)this + 1) = v63 + 1;
        }
        int v64 = *((_DWORD *)this + 14);
        int v65 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v64 + 1;
        if (v64 >= v65) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B467300(v62, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v66 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v66, 1);
        int v67 = v66 - 1;
        if (v67 < 0 == v32) {
          *((_DWORD *)this + 14) = v67;
        }
        uint64_t v68 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 != 82) {
          continue;
        }
        *((void *)this + 1) = v68 + 1;
LABEL_175:
        *(_DWORD *)(a1 + 216) |= 0x80u;
        uint64_t v69 = *(void *)(a1 + 56);
        if (!v69) {
          operator new();
        }
        unsigned int v190 = 0;
        int v70 = (char *)*((void *)this + 1);
        if ((unint64_t)v70 >= *((void *)this + 2) || *v70 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v70;
          *((void *)this + 1) = v70 + 1;
        }
        int v71 = *((_DWORD *)this + 14);
        int v72 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v71 + 1;
        if (v71 >= v72) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B3F3194(v69, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v73 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v73, 1);
        int v74 = v73 - 1;
        if (v74 < 0 == v32) {
          *((_DWORD *)this + 14) = v74;
        }
        int v75 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v75 <= 1 || *v75 != 130 || v75[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v75 + 2;
LABEL_190:
        *(_DWORD *)(a1 + 216) |= 0x100u;
        uint64_t v76 = *(void *)(a1 + 64);
        if (!v76) {
          operator new();
        }
        unsigned int v190 = 0;
        uint64_t v77 = (char *)*((void *)this + 1);
        if ((unint64_t)v77 >= *((void *)this + 2) || *v77 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v77;
          *((void *)this + 1) = v77 + 1;
        }
        int v78 = *((_DWORD *)this + 14);
        int v79 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v78 + 1;
        if (v78 >= v79) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B46FF88(v76, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v80 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v80, 1);
        int v81 = v80 - 1;
        if (v81 < 0 == v32) {
          *((_DWORD *)this + 14) = v81;
        }
        uint64_t v82 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v82 <= 1 || *v82 != 138 || v82[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v82 + 2;
LABEL_205:
        *(_DWORD *)(a1 + 216) |= 0x200u;
        uint64_t v83 = *(void *)(a1 + 72);
        if (!v83) {
          operator new();
        }
        unsigned int v190 = 0;
        int v84 = (char *)*((void *)this + 1);
        if ((unint64_t)v84 >= *((void *)this + 2) || *v84 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v84;
          *((void *)this + 1) = v84 + 1;
        }
        int v85 = *((_DWORD *)this + 14);
        int v86 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v85 + 1;
        if (v85 >= v86) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B47060C(v83, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v87 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v87, 1);
        int v88 = v87 - 1;
        if (v88 < 0 == v32) {
          *((_DWORD *)this + 14) = v88;
        }
        int v89 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v89 <= 1 || *v89 != 146 || v89[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v89 + 2;
LABEL_220:
        *(_DWORD *)(a1 + 216) |= 0x400u;
        uint64_t v90 = *(void *)(a1 + 80);
        if (!v90) {
          operator new();
        }
        unsigned int v190 = 0;
        uint64_t v91 = (char *)*((void *)this + 1);
        if ((unint64_t)v91 >= *((void *)this + 2) || *v91 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v91;
          *((void *)this + 1) = v91 + 1;
        }
        int v92 = *((_DWORD *)this + 14);
        int v93 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v92 + 1;
        if (v92 >= v93) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B3F59C8(v90, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v94 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v94, 1);
        int v95 = v94 - 1;
        if (v95 < 0 == v32) {
          *((_DWORD *)this + 14) = v95;
        }
        v96 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v96 <= 1 || *v96 != 154 || v96[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v96 + 2;
LABEL_235:
        *(_DWORD *)(a1 + 216) |= 0x800u;
        uint64_t v97 = *(void *)(a1 + 88);
        if (!v97) {
          operator new();
        }
        unsigned int v190 = 0;
        int v98 = (char *)*((void *)this + 1);
        if ((unint64_t)v98 >= *((void *)this + 2) || *v98 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v98;
          *((void *)this + 1) = v98 + 1;
        }
        int v99 = *((_DWORD *)this + 14);
        int v100 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v99 + 1;
        if (v99 >= v100) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B3F5454(v97, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v101 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v101, 1);
        int v102 = v101 - 1;
        if (v102 < 0 == v32) {
          *((_DWORD *)this + 14) = v102;
        }
        uint64_t v103 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((int)v14 - (int)v103 <= 1 || *v103 != 160 || v103[1] != 1) {
          continue;
        }
        uint64_t v15 = (char *)(v103 + 2);
        *((void *)this + 1) = v15;
LABEL_250:
        unsigned int v190 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190);
          if (!result) {
            return result;
          }
          unsigned int v104 = v190;
        }
        else
        {
          unsigned int v104 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        if (v104 <= 9)
        {
          *(_DWORD *)(a1 + 216) |= 0x2000u;
          *(_DWORD *)(a1 + 100) = v104;
        }
        int v105 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v105 < 2 || *v105 != 170 || v105[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v105 + 2;
LABEL_261:
        *(_DWORD *)(a1 + 216) |= 0x4000u;
        uint64_t v106 = *(void *)(a1 + 104);
        if (!v106) {
          operator new();
        }
        unsigned int v190 = 0;
        uint64_t v107 = (char *)*((void *)this + 1);
        if ((unint64_t)v107 >= *((void *)this + 2) || *v107 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v107;
          *((void *)this + 1) = v107 + 1;
        }
        int v108 = *((_DWORD *)this + 14);
        int v109 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v108 + 1;
        if (v108 >= v109) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B473FE0(v106, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v110 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v110, 1);
        int v111 = v110 - 1;
        if (v111 < 0 == v32) {
          *((_DWORD *)this + 14) = v111;
        }
        int v112 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        if ((int)v24 - (int)v112 <= 1 || *v112 != 176 || v112[1] != 1) {
          continue;
        }
        uint64_t v25 = (char *)(v112 + 2);
        *((void *)this + 1) = v25;
LABEL_276:
        unsigned int v190 = 0;
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190);
          if (!result) {
            return result;
          }
          unsigned int v113 = v190;
        }
        else
        {
          unsigned int v113 = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        if (v113 <= 9)
        {
          *(_DWORD *)(a1 + 216) |= 0x1000u;
          *(_DWORD *)(a1 + 96) = v113;
        }
        uint64_t v114 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v114 < 2 || *v114 != 186 || v114[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v114 + 2;
LABEL_287:
        *(_DWORD *)(a1 + 216) |= 0x8000u;
        int v115 = *(_DWORD **)(a1 + 112);
        if (!v115) {
          operator new();
        }
        unsigned int v190 = 0;
        int v116 = (char *)*((void *)this + 1);
        if ((unint64_t)v116 >= *((void *)this + 2) || *v116 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v116;
          *((void *)this + 1) = v116 + 1;
        }
        int v117 = *((_DWORD *)this + 14);
        int v118 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v117 + 1;
        if (v117 >= v118) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B4742D8(v115, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v119 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v119, 1);
        int v120 = v119 - 1;
        if (v120 < 0 == v32) {
          *((_DWORD *)this + 14) = v120;
        }
        int v121 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v121 <= 1 || *v121 != 202 || v121[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v121 + 2;
LABEL_302:
        *(_DWORD *)(a1 + 216) |= 0x10000u;
        uint64_t v122 = *(void *)(a1 + 120);
        if (!v122) {
          operator new();
        }
        unsigned int v190 = 0;
        int v123 = (char *)*((void *)this + 1);
        if ((unint64_t)v123 >= *((void *)this + 2) || *v123 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v123;
          *((void *)this + 1) = v123 + 1;
        }
        int v124 = *((_DWORD *)this + 14);
        int v125 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v124 + 1;
        if (v124 >= v125) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B474854(v122, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v126 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v126, 1);
        int v127 = v126 - 1;
        if (v127 < 0 == v32) {
          *((_DWORD *)this + 14) = v127;
        }
        int v128 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v128 <= 1 || *v128 != 242 || v128[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v128 + 2;
LABEL_317:
        *(_DWORD *)(a1 + 216) |= 0x20000u;
        uint64_t v129 = *(void *)(a1 + 128);
        if (!v129) {
          operator new();
        }
        unsigned int v190 = 0;
        int v130 = (char *)*((void *)this + 1);
        if ((unint64_t)v130 >= *((void *)this + 2) || *v130 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v130;
          *((void *)this + 1) = v130 + 1;
        }
        int v131 = *((_DWORD *)this + 14);
        int v132 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v131 + 1;
        if (v131 >= v132) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B41A810(v129, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v133 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v133, 1);
        int v134 = v133 - 1;
        if (v134 < 0 == v32) {
          *((_DWORD *)this + 14) = v134;
        }
        int v135 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v135 <= 1 || *v135 != 194 || v135[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v135 + 2;
LABEL_332:
        *(_DWORD *)(a1 + 216) |= 0x40000u;
        uint64_t v136 = *(void *)(a1 + 136);
        if (!v136) {
          operator new();
        }
        unsigned int v190 = 0;
        uint64_t v137 = (char *)*((void *)this + 1);
        if ((unint64_t)v137 >= *((void *)this + 2) || *v137 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v137;
          *((void *)this + 1) = v137 + 1;
        }
        int v138 = *((_DWORD *)this + 14);
        int v139 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v138 + 1;
        if (v138 >= v139) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B438E6C(v136, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v140 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v140, 1);
        int v141 = v140 - 1;
        if (v141 < 0 == v32) {
          *((_DWORD *)this + 14) = v141;
        }
        int v142 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v142 <= 1 || *v142 != 202 || v142[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v142 + 2;
LABEL_347:
        *(_DWORD *)(a1 + 216) |= 0x80000u;
        uint64_t v143 = *(void *)(a1 + 144);
        if (!v143) {
          operator new();
        }
        unsigned int v190 = 0;
        int v144 = (char *)*((void *)this + 1);
        if ((unint64_t)v144 >= *((void *)this + 2) || *v144 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v144;
          *((void *)this + 1) = v144 + 1;
        }
        int v145 = *((_DWORD *)this + 14);
        int v146 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v145 + 1;
        if (v145 >= v146) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B43E8C4(v143, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v147 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v147, 1);
        int v148 = v147 - 1;
        if (v148 < 0 == v32) {
          *((_DWORD *)this + 14) = v148;
        }
        uint64_t v149 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v149 <= 1 || *v149 != 210 || v149[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v149 + 2;
LABEL_362:
        *(_DWORD *)(a1 + 216) |= 0x100000u;
        uint64_t v150 = *(void *)(a1 + 152);
        if (!v150) {
          operator new();
        }
        unsigned int v190 = 0;
        int v151 = (char *)*((void *)this + 1);
        if ((unint64_t)v151 >= *((void *)this + 2) || *v151 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v151;
          *((void *)this + 1) = v151 + 1;
        }
        int v152 = *((_DWORD *)this + 14);
        int v153 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v152 + 1;
        if (v152 >= v153) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B444B0C(v150, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v154 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v154, 1);
        int v155 = v154 - 1;
        if (v155 < 0 == v32) {
          *((_DWORD *)this + 14) = v155;
        }
        int v156 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v156 <= 1 || *v156 != 218 || v156[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v156 + 2;
LABEL_377:
        *(_DWORD *)(a1 + 216) |= 0x200000u;
        uint64_t v157 = *(void *)(a1 + 160);
        if (!v157) {
          operator new();
        }
        unsigned int v190 = 0;
        int v158 = (char *)*((void *)this + 1);
        if ((unint64_t)v158 >= *((void *)this + 2) || *v158 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v158;
          *((void *)this + 1) = v158 + 1;
        }
        int v159 = *((_DWORD *)this + 14);
        int v160 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v159 + 1;
        if (v159 >= v160) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B4518B8(v157, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v161 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v161, 1);
        int v162 = v161 - 1;
        if (v162 < 0 == v32) {
          *((_DWORD *)this + 14) = v162;
        }
        int v163 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v163 <= 1 || *v163 != 226 || v163[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v163 + 2;
LABEL_392:
        *(_DWORD *)(a1 + 216) |= 0x400000u;
        uint64_t v164 = *(void *)(a1 + 168);
        if (!v164) {
          operator new();
        }
        unsigned int v190 = 0;
        int v165 = (char *)*((void *)this + 1);
        if ((unint64_t)v165 >= *((void *)this + 2) || *v165 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v165;
          *((void *)this + 1) = v165 + 1;
        }
        int v166 = *((_DWORD *)this + 14);
        int v167 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v166 + 1;
        if (v166 >= v167) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B455760(v164, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v168 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v168, 1);
        int v169 = v168 - 1;
        if (v169 < 0 == v32) {
          *((_DWORD *)this + 14) = v169;
        }
        int v170 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v170 <= 1 || *v170 != 146 || v170[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v170 + 2;
LABEL_407:
        *(_DWORD *)(a1 + 216) |= 0x800000u;
        uint64_t v171 = *(void *)(a1 + 176);
        if (!v171) {
          operator new();
        }
        unsigned int v190 = 0;
        int v172 = (char *)*((void *)this + 1);
        if ((unint64_t)v172 >= *((void *)this + 2) || *v172 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v172;
          *((void *)this + 1) = v172 + 1;
        }
        int v173 = *((_DWORD *)this + 14);
        int v174 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v173 + 1;
        if (v173 >= v174) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B4247F4(v171, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v175 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v175, 1);
        int v176 = v175 - 1;
        if (v176 < 0 == v32) {
          *((_DWORD *)this + 14) = v176;
        }
        int v177 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v177 <= 1 || *v177 != 154 || v177[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v177 + 2;
LABEL_422:
        *(_DWORD *)(a1 + 216) |= 0x1000000u;
        uint64_t v178 = *(void *)(a1 + 184);
        if (!v178) {
          operator new();
        }
        unsigned int v190 = 0;
        int v179 = (char *)*((void *)this + 1);
        if ((unint64_t)v179 >= *((void *)this + 2) || *v179 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v179;
          *((void *)this + 1) = v179 + 1;
        }
        int v180 = *((_DWORD *)this + 14);
        int v181 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v180 + 1;
        if (v180 >= v181) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B422810(v178, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v182 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v182, 1);
        int v183 = v182 - 1;
        if (v183 < 0 == v32) {
          *((_DWORD *)this + 14) = v183;
        }
        int v184 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((int)v12 - (int)v184 <= 1 || *v184 != 160 || v184[1] != 3) {
          continue;
        }
        uint64_t v13 = v184 + 2;
        *((void *)this + 1) = v13;
LABEL_437:
        if ((unint64_t)v13 >= v12 || (char)*v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v185 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v13;
          int v185 = v13 + 1;
          *((void *)this + 1) = v185;
        }
        *(_DWORD *)(a1 + 216) |= 0x2000000u;
        if ((int)v12 - (int)v185 < 2 || *v185 != 168 || v185[1] != 3) {
          continue;
        }
        uint64_t v26 = (char *)(v185 + 2);
        *((void *)this + 1) = v26;
LABEL_446:
        unsigned int v190 = 0;
        if ((unint64_t)v26 >= v12 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190);
          if (!result) {
            return result;
          }
          unsigned int v186 = v190;
        }
        else
        {
          unsigned int v186 = *v26;
          *((void *)this + 1) = v26 + 1;
        }
        if (v186 <= 4 && v186 != 3)
        {
          *(_DWORD *)(a1 + 216) |= 0x4000000u;
          *(_DWORD *)(a1 + 196) = v186;
        }
        uint64_t v188 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        if ((int)v27 - (int)v188 < 2 || *v188 != 176 || v188[1] != 3) {
          continue;
        }
        unsigned int v28 = v188 + 2;
        *((void *)this + 1) = v28;
LABEL_460:
        if ((unint64_t)v28 >= v27 || (char)*v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          v189 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v28;
          v189 = v28 + 1;
          *((void *)this + 1) = v189;
        }
        int v16 = *(_DWORD *)(a1 + 216) | 0x8000000;
        *(_DWORD *)(a1 + 216) = v16;
        if ((int)v27 - (int)v189 < 2 || *v189 != 186 || v189[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v189 + 2;
LABEL_30:
        *(_DWORD *)(a1 + 216) = v16 | 0x10000000;
        uint64_t v17 = *(void *)(a1 + 200);
        if (!v17) {
          operator new();
        }
        unsigned int v190 = 0;
        uint64_t v18 = (char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v190))return 0; {
        }
          }
        else
        {
          unsigned int v190 = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B41F078(v17, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v31 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v31, 1);
        int v33 = v31 - 1;
        if (v33 < 0 == v32) {
          *((_DWORD *)this + 14) = v33;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        uint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_111;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_73;
        }
        int v23 = *(_DWORD *)(a1 + 216);
        goto LABEL_119;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_133;
        }
        goto LABEL_73;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_147;
        }
        goto LABEL_73;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_161;
        }
        goto LABEL_73;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_175;
        }
        goto LABEL_73;
      case 0x10u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_190;
        }
        goto LABEL_73;
      case 0x11u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_205;
        }
        goto LABEL_73;
      case 0x12u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_220;
        }
        goto LABEL_73;
      case 0x13u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_235;
        }
        goto LABEL_73;
      case 0x14u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_250;
      case 0x15u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_261;
        }
        goto LABEL_73;
      case 0x16u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        uint64_t v25 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_276;
      case 0x17u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_287;
        }
        goto LABEL_73;
      case 0x19u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_302;
        }
        goto LABEL_73;
      case 0x1Eu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_317;
        }
        goto LABEL_73;
      case 0x28u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_332;
        }
        goto LABEL_73;
      case 0x29u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_347;
        }
        goto LABEL_73;
      case 0x2Au:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_362;
        }
        goto LABEL_73;
      case 0x2Bu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_377;
        }
        goto LABEL_73;
      case 0x2Cu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_392;
        }
        goto LABEL_73;
      case 0x32u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_407;
        }
        goto LABEL_73;
      case 0x33u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_422;
        }
        goto LABEL_73;
      case 0x34u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        uint64_t v13 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_437;
      case 0x35u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        uint64_t v26 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_446;
      case 0x36u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_73;
        }
        unsigned int v28 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_460;
      case 0x37u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_73;
        }
        int v16 = *(_DWORD *)(a1 + 216);
        goto LABEL_30;
      default:
        int v9 = TagFallback & 7;
LABEL_73:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_24B465D3C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 216);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 216);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_37;
  }
LABEL_34:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7)
  {
    sub_24B45829C();
    uint64_t v7 = *(void *)(qword_26B17C588 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_37:
  uint64_t v8 = *(void *)(v5 + 32);
  if (!v8)
  {
    sub_24B45829C();
    uint64_t v8 = *(void *)(qword_26B17C588 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_43;
  }
LABEL_40:
  uint64_t v9 = *(void *)(v5 + 40);
  if (!v9)
  {
    sub_24B45829C();
    uint64_t v9 = *(void *)(qword_26B17C588 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_46;
  }
LABEL_43:
  uint64_t v10 = *(void *)(v5 + 48);
  if (!v10)
  {
    sub_24B45829C();
    uint64_t v10 = *(void *)(qword_26B17C588 + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_49;
  }
LABEL_46:
  uint64_t v11 = *(void *)(v5 + 56);
  if (!v11)
  {
    sub_24B45829C();
    uint64_t v11 = *(void *)(qword_26B17C588 + 56);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_52;
  }
LABEL_49:
  uint64_t v12 = *(void *)(v5 + 64);
  if (!v12)
  {
    sub_24B45829C();
    uint64_t v12 = *(void *)(qword_26B17C588 + 64);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_55;
  }
LABEL_52:
  uint64_t v13 = *(void *)(v5 + 72);
  if (!v13)
  {
    sub_24B45829C();
    uint64_t v13 = *(void *)(qword_26B17C588 + 72);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_58;
  }
LABEL_55:
  uint64_t v14 = *(void *)(v5 + 80);
  if (!v14)
  {
    sub_24B45829C();
    uint64_t v14 = *(void *)(qword_26B17C588 + 80);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v14, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_61;
  }
LABEL_58:
  uint64_t v15 = *(void *)(v5 + 88);
  if (!v15)
  {
    sub_24B45829C();
    uint64_t v15 = *(void *)(qword_26B17C588 + 88);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v15, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x2000) == 0)
  {
LABEL_14:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(unsigned int *)(v5 + 100), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x4000) == 0)
  {
LABEL_15:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_65;
  }
LABEL_62:
  uint64_t v16 = *(void *)(v5 + 104);
  if (!v16)
  {
    sub_24B45829C();
    uint64_t v16 = *(void *)(qword_26B17C588 + 104);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v16, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x1000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 96), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_69;
  }
LABEL_66:
  uint64_t v17 = *(void *)(v5 + 112);
  if (!v17)
  {
    sub_24B45829C();
    uint64_t v17 = *(void *)(qword_26B17C588 + 112);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v17, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_72;
  }
LABEL_69:
  uint64_t v18 = *(void *)(v5 + 120);
  if (!v18)
  {
    sub_24B45829C();
    uint64_t v18 = *(void *)(qword_26B17C588 + 120);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v18, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_75;
  }
LABEL_72:
  uint64_t v19 = *(void *)(v5 + 128);
  if (!v19)
  {
    sub_24B45829C();
    uint64_t v19 = *(void *)(qword_26B17C588 + 128);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v19, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_78;
  }
LABEL_75:
  uint64_t v20 = *(void *)(v5 + 136);
  if (!v20)
  {
    sub_24B45829C();
    uint64_t v20 = *(void *)(qword_26B17C588 + 136);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, v20, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_81;
  }
LABEL_78:
  uint64_t v21 = *(void *)(v5 + 144);
  if (!v21)
  {
    sub_24B45829C();
    uint64_t v21 = *(void *)(qword_26B17C588 + 144);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, v21, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_84;
  }
LABEL_81:
  uint64_t v22 = *(void *)(v5 + 152);
  if (!v22)
  {
    sub_24B45829C();
    uint64_t v22 = *(void *)(qword_26B17C588 + 152);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, v22, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_87;
  }
LABEL_84:
  uint64_t v23 = *(void *)(v5 + 160);
  if (!v23)
  {
    sub_24B45829C();
    uint64_t v23 = *(void *)(qword_26B17C588 + 160);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, v23, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_90;
  }
LABEL_87:
  uint64_t v24 = *(void *)(v5 + 168);
  if (!v24)
  {
    sub_24B45829C();
    uint64_t v24 = *(void *)(qword_26B17C588 + 168);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, v24, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_93;
  }
LABEL_90:
  uint64_t v25 = *(void *)(v5 + 176);
  if (!v25)
  {
    sub_24B45829C();
    uint64_t v25 = *(void *)(qword_26B17C588 + 176);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, v25, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_96;
  }
LABEL_93:
  uint64_t v26 = *(void *)(v5 + 184);
  if (!v26)
  {
    sub_24B45829C();
    uint64_t v26 = *(void *)(qword_26B17C588 + 184);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, v26, a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_97;
  }
LABEL_96:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, *(unsigned int *)(v5 + 192), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
LABEL_98:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36, *(unsigned int *)(v5 + 208), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 216) & 0x10000000) == 0) {
      return result;
    }
    goto LABEL_99;
  }
LABEL_97:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, *(unsigned int *)(v5 + 196), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 216);
  if ((v6 & 0x8000000) != 0) {
    goto LABEL_98;
  }
LABEL_29:
  if ((v6 & 0x10000000) == 0) {
    return result;
  }
LABEL_99:
  uint64_t v27 = *(void *)(v5 + 200);
  if (!v27)
  {
    sub_24B45829C();
    uint64_t v27 = *(void *)(qword_26B17C588 + 200);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x37, v27, a2, a4);
}

uint64_t sub_24B466244(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_56;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    unsigned int v2 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    int v5 = 1;
  }
  uint64_t v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 10;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      unsigned int v2 = *(_DWORD *)(a1 + 216);
    }
    else
    {
      int v7 = 1;
    }
    uint64_t v3 = (v3 + v7 + 1);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16))
       + 1;
    unsigned int v2 = *(_DWORD *)(a1 + 216);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_32;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v8 = *(void *)(a1 + 24);
  if (!v8)
  {
    sub_24B45829C();
    uint64_t v8 = *(void *)(qword_26B17C588 + 24);
  }
  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B3F2178(v8);
  int v10 = (int)v9;
  if (v9 >= 0x80) {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
  }
  else {
    int v11 = 1;
  }
  uint64_t v3 = (v3 + v10 + v11 + 1);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_38;
  }
LABEL_32:
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12)
  {
    sub_24B45829C();
    uint64_t v12 = *(void *)(qword_26B17C588 + 32);
  }
  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B416808(v12);
  int v14 = (int)v13;
  if (v13 >= 0x80) {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  }
  else {
    int v15 = 1;
  }
  uint64_t v3 = (v3 + v14 + v15 + 1);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_44;
  }
LABEL_38:
  uint64_t v16 = *(void *)(a1 + 40);
  if (!v16)
  {
    sub_24B45829C();
    uint64_t v16 = *(void *)(qword_26B17C588 + 40);
  }
  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B3F5140(v16);
  int v18 = (int)v17;
  if (v17 >= 0x80) {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
  }
  else {
    int v19 = 1;
  }
  uint64_t v3 = (v3 + v18 + v19 + 1);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0) {
      goto LABEL_56;
    }
    goto LABEL_50;
  }
LABEL_44:
  uint64_t v20 = *(void *)(a1 + 48);
  if (!v20)
  {
    sub_24B45829C();
    uint64_t v20 = *(void *)(qword_26B17C588 + 48);
  }
  uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B467720(v20);
  int v22 = (int)v21;
  if (v21 >= 0x80) {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
  }
  else {
    int v23 = 1;
  }
  uint64_t v3 = (v3 + v22 + v23 + 1);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x80) != 0)
  {
LABEL_50:
    uint64_t v24 = *(void *)(a1 + 56);
    if (!v24)
    {
      sub_24B45829C();
      uint64_t v24 = *(void *)(qword_26B17C588 + 56);
    }
    uint64_t v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B3F3664(v24);
    int v26 = (int)v25;
    if (v25 >= 0x80) {
      int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
    }
    else {
      int v27 = 1;
    }
    uint64_t v3 = (v3 + v26 + v27 + 1);
    unsigned int v2 = *(_DWORD *)(a1 + 216);
  }
LABEL_56:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_114;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v28 = *(void *)(a1 + 64);
    if (!v28)
    {
      sub_24B45829C();
      uint64_t v28 = *(void *)(qword_26B17C588 + 64);
    }
    int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B47039C(v28);
    int v30 = (int)v29;
    if (v29 >= 0x80) {
      int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
    }
    else {
      int v31 = 1;
    }
    uint64_t v3 = (v3 + v30 + v31 + 2);
    unsigned int v2 = *(_DWORD *)(a1 + 216);
    if ((v2 & 0x200) == 0)
    {
LABEL_59:
      if ((v2 & 0x400) == 0) {
        goto LABEL_60;
      }
      goto LABEL_78;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_59;
  }
  uint64_t v32 = *(void *)(a1 + 72);
  if (!v32)
  {
    sub_24B45829C();
    uint64_t v32 = *(void *)(qword_26B17C588 + 72);
  }
  int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B470748(v32);
  int v34 = (int)v33;
  if (v33 >= 0x80) {
    int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
  }
  else {
    int v35 = 1;
  }
  uint64_t v3 = (v3 + v34 + v35 + 2);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x400) == 0)
  {
LABEL_60:
    if ((v2 & 0x800) == 0) {
      goto LABEL_61;
    }
    goto LABEL_84;
  }
LABEL_78:
  uint64_t v36 = *(void *)(a1 + 80);
  if (!v36)
  {
    sub_24B45829C();
    uint64_t v36 = *(void *)(qword_26B17C588 + 80);
  }
  uint64_t v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B3F5D48(v36);
  int v38 = (int)v37;
  if (v37 >= 0x80) {
    int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
  }
  else {
    int v39 = 1;
  }
  uint64_t v3 = (v3 + v38 + v39 + 2);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x800) == 0)
  {
LABEL_61:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_90;
  }
LABEL_84:
  uint64_t v40 = *(void *)(a1 + 88);
  if (!v40)
  {
    sub_24B45829C();
    uint64_t v40 = *(void *)(qword_26B17C588 + 88);
  }
  uint64_t v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B3F5674(v40);
  int v42 = (int)v41;
  if (v41 >= 0x80) {
    int v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
  }
  else {
    int v43 = 1;
  }
  uint64_t v3 = (v3 + v42 + v43 + 2);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x1000) == 0)
  {
LABEL_62:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_96;
  }
LABEL_90:
  int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
  if ((v44 & 0x80000000) != 0)
  {
    int v45 = 10;
  }
  else if (v44 >= 0x80)
  {
    int v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44);
    unsigned int v2 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    int v45 = 1;
  }
  uint64_t v3 = (v3 + v45 + 2);
  if ((v2 & 0x2000) == 0)
  {
LABEL_63:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_102;
  }
LABEL_96:
  int v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
  if ((v46 & 0x80000000) != 0)
  {
    int v47 = 10;
  }
  else if (v46 >= 0x80)
  {
    int v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46);
    unsigned int v2 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    int v47 = 1;
  }
  uint64_t v3 = (v3 + v47 + 2);
  if ((v2 & 0x4000) == 0)
  {
LABEL_64:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_108;
  }
LABEL_102:
  uint64_t v48 = *(void *)(a1 + 104);
  if (!v48)
  {
    sub_24B45829C();
    uint64_t v48 = *(void *)(qword_26B17C588 + 104);
  }
  if (*(_DWORD *)(v48 + 16)) {
    int v49 = 2 * (*(_DWORD *)(v48 + 16) & 1);
  }
  else {
    int v49 = 0;
  }
  *(_DWORD *)(v48 + 12) = v49;
  uint64_t v3 = (v3 + v49 + 3);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x8000) != 0)
  {
LABEL_108:
    uint64_t v50 = *(void *)(a1 + 112);
    if (!v50)
    {
      sub_24B45829C();
      uint64_t v50 = *(void *)(qword_26B17C588 + 112);
    }
    int v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B47458C(v50);
    int v52 = (int)v51;
    if (v51 >= 0x80) {
      int v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51);
    }
    else {
      int v53 = 1;
    }
    uint64_t v3 = (v3 + v52 + v53 + 2);
    unsigned int v2 = *(_DWORD *)(a1 + 216);
  }
LABEL_114:
  if ((v2 & 0xFF0000) == 0) {
    goto LABEL_172;
  }
  if ((v2 & 0x10000) != 0)
  {
    uint64_t v54 = *(void *)(a1 + 120);
    if (!v54)
    {
      sub_24B45829C();
      uint64_t v54 = *(void *)(qword_26B17C588 + 120);
    }
    uint64_t v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B474AFC(v54);
    int v56 = (int)v55;
    if (v55 >= 0x80) {
      int v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55);
    }
    else {
      int v57 = 1;
    }
    uint64_t v3 = (v3 + v56 + v57 + 2);
    unsigned int v2 = *(_DWORD *)(a1 + 216);
    if ((v2 & 0x20000) == 0)
    {
LABEL_117:
      if ((v2 & 0x40000) == 0) {
        goto LABEL_118;
      }
      goto LABEL_136;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_117;
  }
  uint64_t v58 = *(void *)(a1 + 128);
  if (!v58)
  {
    sub_24B45829C();
    uint64_t v58 = *(void *)(qword_26B17C588 + 128);
  }
  int v59 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B41B3C0(v58);
  int v60 = (int)v59;
  if (v59 >= 0x80) {
    int v61 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v59);
  }
  else {
    int v61 = 1;
  }
  uint64_t v3 = (v3 + v60 + v61 + 2);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x40000) == 0)
  {
LABEL_118:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_142;
  }
LABEL_136:
  uint64_t v62 = *(void *)(a1 + 136);
  if (!v62)
  {
    sub_24B45829C();
    uint64_t v62 = *(void *)(qword_26B17C588 + 136);
  }
  int v63 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B4397F0(v62);
  int v64 = (int)v63;
  if (v63 >= 0x80) {
    int v65 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v63);
  }
  else {
    int v65 = 1;
  }
  uint64_t v3 = (v3 + v64 + v65 + 2);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x80000) == 0)
  {
LABEL_119:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_148;
  }
LABEL_142:
  uint64_t v66 = *(void *)(a1 + 144);
  if (!v66)
  {
    sub_24B45829C();
    uint64_t v66 = *(void *)(qword_26B17C588 + 144);
  }
  int v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B43F050(v66);
  int v68 = (int)v67;
  if (v67 >= 0x80) {
    int v69 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v67);
  }
  else {
    int v69 = 1;
  }
  uint64_t v3 = (v3 + v68 + v69 + 2);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x100000) == 0)
  {
LABEL_120:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_121;
    }
    goto LABEL_154;
  }
LABEL_148:
  uint64_t v70 = *(void *)(a1 + 152);
  if (!v70)
  {
    sub_24B45829C();
    uint64_t v70 = *(void *)(qword_26B17C588 + 152);
  }
  int v71 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B44516C(v70);
  int v72 = (int)v71;
  if (v71 >= 0x80) {
    int v73 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v71);
  }
  else {
    int v73 = 1;
  }
  uint64_t v3 = (v3 + v72 + v73 + 2);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x200000) == 0)
  {
LABEL_121:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_122;
    }
    goto LABEL_160;
  }
LABEL_154:
  uint64_t v74 = *(void *)(a1 + 160);
  if (!v74)
  {
    sub_24B45829C();
    uint64_t v74 = *(void *)(qword_26B17C588 + 160);
  }
  int v75 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B4519F4(v74);
  int v76 = (int)v75;
  if (v75 >= 0x80) {
    int v77 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v75);
  }
  else {
    int v77 = 1;
  }
  uint64_t v3 = (v3 + v76 + v77 + 2);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x400000) == 0)
  {
LABEL_122:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_172;
    }
    goto LABEL_166;
  }
LABEL_160:
  uint64_t v78 = *(void *)(a1 + 168);
  if (!v78)
  {
    sub_24B45829C();
    uint64_t v78 = *(void *)(qword_26B17C588 + 168);
  }
  int v79 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B455F00(v78);
  int v80 = (int)v79;
  if (v79 >= 0x80) {
    int v81 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v79);
  }
  else {
    int v81 = 1;
  }
  uint64_t v3 = (v3 + v80 + v81 + 2);
  unsigned int v2 = *(_DWORD *)(a1 + 216);
  if ((v2 & 0x800000) != 0)
  {
LABEL_166:
    uint64_t v82 = *(void *)(a1 + 176);
    if (!v82)
    {
      sub_24B45829C();
      uint64_t v82 = *(void *)(qword_26B17C588 + 176);
    }
    uint64_t v83 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B425368(v82);
    int v84 = (int)v83;
    if (v83 >= 0x80) {
      int v85 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v83);
    }
    else {
      int v85 = 1;
    }
    uint64_t v3 = (v3 + v84 + v85 + 2);
    unsigned int v2 = *(_DWORD *)(a1 + 216);
  }
LABEL_172:
  if (!HIBYTE(v2)) {
    goto LABEL_205;
  }
  if ((v2 & 0x1000000) != 0)
  {
    uint64_t v86 = *(void *)(a1 + 184);
    if (!v86)
    {
      sub_24B45829C();
      uint64_t v86 = *(void *)(qword_26B17C588 + 184);
    }
    int v87 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B422F24(v86);
    int v88 = (int)v87;
    if (v87 >= 0x80) {
      int v89 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v87);
    }
    else {
      int v89 = 1;
    }
    uint64_t v3 = (v3 + v88 + v89 + 2);
    unsigned int v2 = *(_DWORD *)(a1 + 216);
    if ((v2 & 0x2000000) == 0)
    {
LABEL_175:
      if ((v2 & 0x4000000) == 0) {
        goto LABEL_176;
      }
      goto LABEL_189;
    }
  }
  else if ((v2 & 0x2000000) == 0)
  {
    goto LABEL_175;
  }
  uint64_t v90 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 192);
  if (v90 >= 0x80)
  {
    int v91 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v90) + 2;
    unsigned int v2 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    int v91 = 3;
  }
  uint64_t v3 = (v91 + v3);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_176:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_177;
    }
LABEL_195:
    int v94 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 208);
    if (v94 >= 0x80)
    {
      int v95 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v94) + 2;
      unsigned int v2 = *(_DWORD *)(a1 + 216);
    }
    else
    {
      int v95 = 3;
    }
    uint64_t v3 = (v95 + v3);
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_205;
    }
    goto LABEL_199;
  }
LABEL_189:
  int v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 196);
  if ((v92 & 0x80000000) != 0)
  {
    int v93 = 12;
  }
  else if (v92 >= 0x80)
  {
    int v93 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v92) + 2;
    unsigned int v2 = *(_DWORD *)(a1 + 216);
  }
  else
  {
    int v93 = 3;
  }
  uint64_t v3 = (v93 + v3);
  if ((v2 & 0x8000000) != 0) {
    goto LABEL_195;
  }
LABEL_177:
  if ((v2 & 0x10000000) == 0) {
    goto LABEL_205;
  }
LABEL_199:
  uint64_t v96 = *(void *)(a1 + 200);
  if (!v96)
  {
    sub_24B45829C();
    uint64_t v96 = *(void *)(qword_26B17C588 + 200);
  }
  uint64_t v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B41F298(v96);
  int v98 = (int)v97;
  if (v97 >= 0x80) {
    int v99 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v97);
  }
  else {
    int v99 = 1;
  }
  uint64_t v3 = (v3 + v98 + v99 + 2);
LABEL_205:
  *(_DWORD *)(a1 + 212) = v3;
  return v3;
}

void sub_24B466AA8(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85BA8, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B46269C(a1, (uint64_t)lpsrc);
}

void sub_24B466B4C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    char v8 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(unsigned char *)(a1 + 24) = v8;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    char v9 = *(unsigned char *)(a2 + 25);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(unsigned char *)(a1 + 25) = v9;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0) {
      return;
    }
LABEL_9:
    char v5 = *(unsigned char *)(a2 + 26);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(unsigned char *)(a1 + 26) = v5;
  }
}

void sub_24B466C60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B466C78(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8));
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 20);
      uint64_t v7 = *(int *)(a1 + 16);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 24))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8));
          int v6 = *(_DWORD *)(a1 + 20);
        }
        *(_DWORD *)(a1 + 20) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v7 + 1;
      sub_24B46F5F8(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
  if ((*(unsigned char *)(a2 + 44) & 2) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 2u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 32);
    if (!v10)
    {
      sub_24B45829C();
      uint64_t v10 = *(void *)(qword_26B17C358 + 32);
    }
    sub_24B46EF20(v9, v10);
  }
}

void sub_24B466E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B466E7C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unsigned int v4 = *(_DWORD *)(a2 + 8);
    if (v4 >= 5) {
      __assert_rtn("set_info_type", "GpsdProtocol.pb.h", 10947, "::CoreGem::proto::gpsd::LtlInfoType_IsValid(value)");
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v4;
  }
}

void sub_24B466F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B466F48(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    char v4 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(unsigned char *)(a1 + 8) = v4;
  }
}

void sub_24B466FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B466FEC(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_24B4670C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B4670D8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_10;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(void *)(a1 + 16) = v6;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return;
    }
LABEL_10:
    int v7 = *(const std::string **)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    uint64_t v8 = *(std::string **)(a1 + 24);
    if (v8 == (std::string *)MEMORY[0x263F8C740]) {
      operator new();
    }
    std::string::operator=(v8, v7);
  }
}

void sub_24B4671E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_24B467200()
{
  return 1;
}

void *sub_24B467208@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.Indication");
}

void sub_24B467218(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE84850;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B467274(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B467218(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B4672AC()
{
}

uint64_t sub_24B467300(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v4 = (unint64_t *)(a1 + 8);
  uint64_t v5 = (unint64_t *)(a1 + 16);
  while (2)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *int v4 = *v10;
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
LABEL_26:
          *(_DWORD *)(a1 + 32) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 16)
          {
            uint64_t v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if (result)
        {
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v12;
          uint64_t v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if ((unint64_t)v16 >= v9 || *v16 != 24) {
          continue;
        }
        uint64_t v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_37:
        unsigned int v26 = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!result) {
            return result;
          }
          unsigned int v17 = v26;
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 24) = v17 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v18 >= v9 || *v18 != 32) {
          continue;
        }
        int v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_45:
        unsigned int v25 = 0;
        if ((unint64_t)v14 >= v9 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v19 = v25;
          uint64_t v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          uint64_t v20 = v14 + 1;
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 25) = v19 != 0;
        *(_DWORD *)(a1 + 32) |= 8u;
        if ((unint64_t)v20 >= v9 || *v20 != 40) {
          continue;
        }
        int v15 = v20 + 1;
        *((void *)this + 1) = v15;
LABEL_53:
        unsigned int v24 = 0;
        if ((unint64_t)v15 >= v9 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!result) {
            return result;
          }
          unsigned int v21 = v24;
          int v22 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v15;
          int v22 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v22;
        }
        *(unsigned char *)(a1 + 26) = v21 != 0;
        *(_DWORD *)(a1 + 32) |= 0x10u;
        if (v22 != (unsigned __int8 *)v9 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_37;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_45;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_53;
      default:
        int v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_24B46765C(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 25), a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 26);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_24B467720(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_15;
  }
  if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    unsigned int v3 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
     + 1;
  int v2 = *(_DWORD *)(a1 + 32);
  if ((v2 & 2) != 0)
  {
LABEL_7:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16))
        + 1;
    int v2 = *(_DWORD *)(a1 + 32);
  }
LABEL_8:
  unsigned int v5 = v3 + 2;
  if ((v2 & 4) == 0) {
    unsigned int v5 = v3;
  }
  if ((v2 & 8) != 0) {
    v5 += 2;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = v5 + 2;
  }
  else {
    uint64_t result = v5;
  }
LABEL_15:
  *(_DWORD *)(a1 + 28) = result;
  return result;
}

void sub_24B4677B0(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85BC0, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B466B4C(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B467854()
{
  return 1;
}

void *sub_24B46785C@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.Status");
}

void sub_24B46786C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE848C8;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B4678C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46786C(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B467900()
{
}

uint64_t sub_24B46795C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (2)
  {
    int v4 = (char *)*((void *)this + 1);
    if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        unsigned int v27 = 0;
        int v8 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          unsigned int v9 = *v8;
          uint64_t v10 = v8 + 1;
          *((void *)this + 1) = v10;
LABEL_27:
          *(unsigned char *)(a1 + 8) = v9 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            int v11 = v10 + 1;
            *((void *)this + 1) = v11;
            goto LABEL_30;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
        if (result)
        {
          unsigned int v9 = v27;
          uint64_t v10 = (unsigned char *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
          goto LABEL_27;
        }
        break;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
LABEL_30:
        unsigned int v27 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!result) {
            return result;
          }
          unsigned int v16 = v27;
          unsigned int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v11;
          unsigned int v17 = v11 + 1;
          *((void *)this + 1) = v17;
        }
        *(unsigned char *)(a1 + 9) = v16 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        if ((unint64_t)v17 >= v7 || *v17 != 24) {
          continue;
        }
        uint64_t v12 = v17 + 1;
        *((void *)this + 1) = v12;
LABEL_38:
        unsigned int v27 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!result) {
            return result;
          }
          unsigned int v18 = v27;
          unsigned int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v12;
          unsigned int v19 = v12 + 1;
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 10) = v18 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        if ((unint64_t)v19 >= v7 || *v19 != 32) {
          continue;
        }
        uint64_t v13 = v19 + 1;
        *((void *)this + 1) = v13;
LABEL_46:
        unsigned int v27 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!result) {
            return result;
          }
          unsigned int v20 = v27;
          unsigned int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v20 = *v13;
          unsigned int v21 = v13 + 1;
          *((void *)this + 1) = v21;
        }
        *(unsigned char *)(a1 + 11) = v20 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        if ((unint64_t)v21 >= v7 || *v21 != 40) {
          continue;
        }
        int v14 = v21 + 1;
        *((void *)this + 1) = v14;
LABEL_54:
        unsigned int v27 = 0;
        if ((unint64_t)v14 >= v7 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!result) {
            return result;
          }
          unsigned int v22 = v27;
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v22 = *v14;
          int v23 = v14 + 1;
          *((void *)this + 1) = v23;
        }
        *(unsigned char *)(a1 + 12) = v22 != 0;
        *(_DWORD *)(a1 + 20) |= 0x10u;
        if ((unint64_t)v23 >= v7 || *v23 != 48) {
          continue;
        }
        int v15 = v23 + 1;
        *((void *)this + 1) = v15;
LABEL_62:
        unsigned int v27 = 0;
        if ((unint64_t)v15 >= v7 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!result) {
            return result;
          }
          unsigned int v24 = v27;
          unsigned int v25 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v24 = *v15;
          unsigned int v25 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v25;
        }
        *(unsigned char *)(a1 + 13) = v24 != 0;
        *(_DWORD *)(a1 + 20) |= 0x20u;
        if (v25 != (unsigned __int8 *)v7 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        goto LABEL_38;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        goto LABEL_46;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        goto LABEL_54;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        goto LABEL_62;
      default:
        int v6 = TagFallback & 7;
LABEL_21:
        if (v6 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_24B467D4C(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 12), a2, a4);
    if ((*(_DWORD *)(v5 + 20) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 13);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
}

uint64_t sub_24B467E2C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x20) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_24B467E8C(uint64_t a1, unsigned char *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85BD8, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B461318(a1, lpsrc);
}

uint64_t sub_24B467F30()
{
  return 1;
}

void *sub_24B467F38@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetPvtmReport");
}

void sub_24B467F48(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE84940;
  uint64_t v2 = *((void *)a1 + 1);
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x24C5D2700](v2, 0x1012C40EC159624);
  }
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B467FE4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B467F48(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46801C()
{
}

uint64_t sub_24B468074(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_22;
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      if (*(void *)(a1 + 8) == v4) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      int v11 = (unsigned char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v11 < v8 && *v11 == 16)
      {
        unsigned int v9 = v11 + 1;
        *((void *)this + 1) = v9;
LABEL_18:
        unsigned int v13 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
          if (!result) {
            return result;
          }
          unsigned int v12 = v13;
        }
        else
        {
          unsigned int v12 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        if (v12 <= 2)
        {
          *(_DWORD *)(a1 + 24) |= 2u;
          *(_DWORD *)(a1 + 16) = v12;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_18;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_22:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B468238(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_24B4682A4(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_21;
  }
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *(_DWORD *)(a1 + 24);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v9 + v5);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v3 = (v12 + v3);
  }
LABEL_21:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_24B46836C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85BF0, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B460EEC(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B468410()
{
  return 1;
}

void *sub_24B468418@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.InjectAssistanceFile");
}

void sub_24B468428(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE849B8;
  uint64_t v2 = *((void *)a1 + 1);
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x24C5D2700](v2, 0x1012C40EC159624);
  }
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B4684C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B468428(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B4684FC()
{
}

uint64_t sub_24B468550(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if (*(void *)(a1 + 8) == v4) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_24B468670(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  }
  return result;
}

uint64_t sub_24B46868C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 20))
  {
    uint64_t v3 = *(void *)(a1 + 8);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    char v5 = v4;
    uint64_t v6 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      unint64_t v7 = v6;
    }
    if (v7 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7);
      int v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v6 = *(void *)(v3 + 8);
      int v8 = v9 + 1;
      char v5 = *(unsigned char *)(v3 + 23);
    }
    else
    {
      int v8 = 2;
    }
    if (v5 < 0) {
      int v4 = v6;
    }
    uint64_t result = (v8 + v4);
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_24B46870C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85C08, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B46101C(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B4687B0()
{
  return 1;
}

void *sub_24B4687B8@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.InjectRtiFile");
}

void sub_24B4687C8(uint64_t a1)
{
  *(void *)a1 = &unk_26FE84A30;
  sub_24B45829C();
  int v2 = *(_DWORD *)(a1 + 20);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 8) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 20);
      }
    }
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    MEMORY[0x24C5D26D0](v5, 0x80C80B8603338);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_24B468890(uint64_t a1)
{
  sub_24B4687C8(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B4688C8()
{
}

uint64_t sub_24B46891C(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
LABEL_2:
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v7 = a1[5];
        uint64_t v8 = a1[4];
        if ((int)v8 >= v7)
        {
          if (v7 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v7 = a1[5];
          }
          a1[5] = v7 + 1;
          operator new();
        }
        uint64_t v9 = *((void *)a1 + 1);
        a1[4] = v8 + 1;
        int v10 = *(unsigned int **)(v9 + 8 * v8);
        unsigned int v20 = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20))return 0; {
        }
          }
        else
        {
          unsigned int v20 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B3F4554(v10, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        unsigned int v17 = (unsigned char *)*((void *)this + 1);
        unsigned int v18 = (unsigned char *)*((void *)this + 2);
        if (v17 >= v18 || *v17 != 10)
        {
          if (v17 == v18 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)this + 1) = v17 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B468B48(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v5 = result;
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_24B468BA8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 16);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B3F496C(*(void *)(*(void *)(a1 + 8) + 8 * v3));
      int v5 = (int)v4;
      if (v4 >= 0x80) {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      }
      else {
        int v6 = 1;
      }
      uint64_t v2 = (v5 + v2 + v6);
      ++v3;
    }
    while (v3 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 32) = v2;
  return v2;
}

void sub_24B468C28(int *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85C20, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B4610FC(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B468CCC()
{
  return 1;
}

void *sub_24B468CD4@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.InjectSvidBlocklist");
}

void sub_24B468CE4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE84AA8;
  sub_24B45829C();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_26B17C590 != a1)
  {
    uint64_t v2 = *((void *)a1 + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B468D7C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B468CE4(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B468DB4()
{
}

uint64_t sub_24B468E08(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (unint64_t *)(a1 + 24);
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_20;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v29 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29))return 0; {
        }
          }
        else
        {
          unsigned int v29 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B3EFA98(v8, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        unsigned int v20 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v20 >= v10 || *v20 != 16) {
          continue;
        }
        int v11 = v20 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_33;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_33:
        unsigned int v27 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!result) {
            return result;
          }
          unsigned int v21 = v27;
        }
        else
        {
          unsigned int v21 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v21 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 2u;
          *(_DWORD *)(a1 + 16) = v21;
        }
        int v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v23 >= v12 || *v23 != 24) {
          continue;
        }
        int v13 = v23 + 1;
        *((void *)this + 1) = v13;
LABEL_43:
        unsigned int v28 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v24 = v28;
          unsigned int v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v24 = *v13;
          unsigned int v25 = v13 + 1;
          *((void *)this + 1) = v25;
        }
        *(unsigned char *)(a1 + 20) = v24 != 0;
        *(_DWORD *)(a1 + 36) |= 4u;
        if ((unint64_t)v25 >= v12 || *v25 != 80) {
          continue;
        }
        int v14 = v25 + 1;
        *((void *)this + 1) = v14;
LABEL_51:
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
          if (!result) {
            return result;
          }
          unsigned int v26 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v4 = *v14;
          unsigned int v26 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 36) |= 8u;
        if (v26 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_43;
      case 0xAu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_51;
      default:
        int v7 = TagFallback & 7;
LABEL_20:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_24B4691BC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7)
    {
      sub_24B45829C();
      uint64_t v7 = *(void *)(qword_26B17C590 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 20), (uint64_t)a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_11:
  uint64_t v8 = *(void *)(v5 + 24);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v8, (uint64_t)a2, a4);
}

uint64_t sub_24B469278(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_23;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4)
    {
      sub_24B45829C();
      uint64_t v4 = *(void *)(qword_26B17C590 + 8);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B3F01E4(v4);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
    }
    else {
      int v7 = 1;
    }
    LODWORD(v3) = v6 + v7 + 1;
    int v2 = *(_DWORD *)(a1 + 36);
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  LODWORD(v3) = 0;
  if ((*(unsigned char *)(a1 + 36) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      int v2 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v9 = 2;
    }
    LODWORD(v3) = v9 + v3;
  }
LABEL_18:
  if ((v2 & 4) != 0) {
    uint64_t v3 = (v3 + 2);
  }
  else {
    uint64_t v3 = v3;
  }
  if ((v2 & 8) != 0) {
    uint64_t v3 = v3
  }
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24))
       + 1;
LABEL_23:
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

void sub_24B469358(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85C38, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B45FF9C(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B4693FC()
{
  return 1;
}

void *sub_24B469404@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.InjectAssistancePosition");
}

void sub_24B469414(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE84B20;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B469470(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B469414(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B4694A8()
{
}

uint64_t sub_24B4694FC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (unint64_t *)(a1 + 8);
  uint64_t v5 = (unint64_t *)(a1 + 16);
  int v6 = (unint64_t *)(a1 + 24);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
          if (!result) {
            return result;
          }
          int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v4 = *v13;
          int v14 = v13 + 1;
          *((void *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        if ((unint64_t)v14 < v11 && *v14 == 16)
        {
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
          goto LABEL_27;
        }
      }
      if (v9 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v15 = (char *)*((void *)this + 1);
      unint64_t v11 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v15 >= v11 || *v15 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v16 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
      }
      else
      {
        *uint64_t v5 = *v15;
        int v16 = v15 + 1;
        *((void *)this + 1) = v16;
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      if ((unint64_t)v16 < v11 && *v16 == 24)
      {
        unint64_t v12 = v16 + 1;
        *((void *)this + 1) = v12;
LABEL_35:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v17 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v12;
          int v17 = (unsigned __int8 *)(v12 + 1);
          *((void *)this + 1) = v17;
        }
        *(_DWORD *)(a1 + 36) |= 4u;
        if (v17 == (unsigned __int8 *)v11
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_19:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B469720(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), a2, a4);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 24);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_24B4697AC(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
       + 1;
    int v2 = *(_DWORD *)(a1 + 36);
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((*(unsigned char *)(a1 + 36) & 2) != 0)
  {
LABEL_7:
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16))
       + 1;
    int v2 = *(_DWORD *)(a1 + 36);
  }
LABEL_8:
  if ((v2 & 4) != 0) {
    uint64_t v3 = v3
  }
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24))
       + 1;
LABEL_10:
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

void sub_24B469830(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85C50, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B460140(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B4698D4()
{
  return 1;
}

void *sub_24B4698DC@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.InjectAssistanceTime");
}

void sub_24B4698EC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE84B98;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B469948(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B4698EC(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B469980()
{
}

uint64_t sub_24B4699CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (unint64_t *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      uint64_t v8 = (char *)*((void *)this + 1);
      unint64_t v7 = *((void *)this + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if (!result) {
          return result;
        }
        unsigned int v9 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
      }
      else
      {
        *uint64_t v4 = *v8;
        unsigned int v9 = (unsigned __int8 *)(v8 + 1);
        *((void *)this + 1) = v9;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if (v9 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_24B469AE0(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_24B469AFC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 20)) {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
  }
           + 1;
  else {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_24B469B3C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85C68, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B461274(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B469BE0()
{
  return 1;
}

void *sub_24B469BE8@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.DeleteGnssData");
}

void sub_24B469BF8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE84C10;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B469C54(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B469BF8(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B469C8C()
{
}

uint64_t sub_24B469CD8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (unint64_t *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      uint64_t v8 = (char *)*((void *)this + 1);
      unint64_t v7 = *((void *)this + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if (!result) {
          return result;
        }
        unsigned int v9 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
      }
      else
      {
        *uint64_t v4 = *v8;
        unsigned int v9 = (unsigned __int8 *)(v8 + 1);
        *((void *)this + 1) = v9;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if (v9 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_24B469DEC(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_24B469E08(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 20)) {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
  }
           + 1;
  else {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_24B469E48(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85C80, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B461464(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B469EEC()
{
  return 1;
}

void *sub_24B469EF4@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetNmeaHandler");
}

void sub_24B469F04(uint64_t a1)
{
  *(void *)a1 = &unk_26FE84C88;
  sub_24B45829C();
  int v2 = *(_DWORD *)(a1 + 20);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 8) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 20);
      }
    }
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    MEMORY[0x24C5D26D0](v5, 0x80C80B8603338);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_24B469FCC(uint64_t a1)
{
  sub_24B469F04(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46A004()
{
}

uint64_t sub_24B46A058(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
LABEL_2:
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v7 = a1[5];
        uint64_t v8 = a1[4];
        if ((int)v8 >= v7)
        {
          if (v7 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v7 = a1[5];
          }
          a1[5] = v7 + 1;
          operator new();
        }
        uint64_t v9 = *((void *)a1 + 1);
        a1[4] = v8 + 1;
        uint64_t v10 = *(void *)(v9 + 8 * v8);
        unsigned int v20 = 0;
        unint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20))return 0; {
        }
          }
        else
        {
          unsigned int v20 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B3F39D4(v10, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        BOOL v18 = (unsigned char *)*((void *)this + 2);
        if (v17 >= v18 || *v17 != 10)
        {
          if (v17 == v18 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)this + 1) = v17 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B46A284(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v5 = result;
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_24B46A2E4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 16);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B3F3BCC(*(void *)(*(void *)(a1 + 8) + 8 * v3));
      int v5 = (int)v4;
      if (v4 >= 0x80) {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      }
      else {
        int v6 = 1;
      }
      uint64_t v2 = (v5 + v2 + v6);
      ++v3;
    }
    while (v3 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 32) = v2;
  return v2;
}

void sub_24B46A364(int *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85C98, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B46022C(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46A408()
{
  return 1;
}

void *sub_24B46A410@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetAssistancePressure");
}

void sub_24B46A420(uint64_t *a1)
{
  *a1 = (uint64_t)&unk_26FE84D00;
  sub_24B45829C();
  sub_24B476104(a1 + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_24B46A488(uint64_t *a1)
{
  sub_24B46A420(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46A4C0()
{
}

uint64_t sub_24B46A514(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
LABEL_2:
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v7 = a1[5];
        uint64_t v8 = a1[4];
        if ((int)v8 >= v7)
        {
          if (v7 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v7 = a1[5];
          }
          a1[5] = v7 + 1;
          operator new();
        }
        uint64_t v9 = *((void *)a1 + 1);
        a1[4] = v8 + 1;
        uint64_t v10 = *(_DWORD **)(v9 + 8 * v8);
        unsigned int v20 = 0;
        unint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20))return 0; {
        }
          }
        else
        {
          unsigned int v20 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B3F3EEC(v10, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        BOOL v18 = (unsigned char *)*((void *)this + 2);
        if (v17 >= v18 || *v17 != 10)
        {
          if (v17 == v18 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)this + 1) = v17 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B46A740(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v5 = result;
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_24B46A7A0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 16);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B3F41FC(*(void *)(*(void *)(a1 + 8) + 8 * v3));
      int v5 = (int)v4;
      if (v4 >= 0x80) {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      }
      else {
        int v6 = 1;
      }
      uint64_t v2 = (v5 + v2 + v6);
      ++v3;
    }
    while (v3 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 32) = v2;
  return v2;
}

void sub_24B46A820(int *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85CB0, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B4603A4(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46A8C4()
{
  return 1;
}

void *sub_24B46A8CC@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetAssistanceAccel");
}

void sub_24B46A8DC(uint64_t *a1)
{
  *a1 = (uint64_t)&unk_26FE84D78;
  sub_24B45829C();
  sub_24B476104(a1 + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_24B46A944(uint64_t *a1)
{
  sub_24B46A8DC(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46A97C()
{
}

uint64_t sub_24B46A9D0(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
LABEL_2:
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v7 = a1[5];
        uint64_t v8 = a1[4];
        if ((int)v8 >= v7)
        {
          if (v7 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v7 = a1[5];
          }
          a1[5] = v7 + 1;
          operator new();
        }
        uint64_t v9 = *((void *)a1 + 1);
        a1[4] = v8 + 1;
        uint64_t v10 = *(_DWORD **)(v9 + 8 * v8);
        unsigned int v20 = 0;
        unint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20))return 0; {
        }
          }
        else
        {
          unsigned int v20 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B3F3EEC(v10, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        BOOL v18 = (unsigned char *)*((void *)this + 2);
        if (v17 >= v18 || *v17 != 10)
        {
          if (v17 == v18 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)this + 1) = v17 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B46ABFC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v5 = result;
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_24B46AC5C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 16);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B3F41FC(*(void *)(*(void *)(a1 + 8) + 8 * v3));
      int v5 = (int)v4;
      if (v4 >= 0x80) {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      }
      else {
        int v6 = 1;
      }
      uint64_t v2 = (v5 + v2 + v6);
      ++v3;
    }
    while (v3 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 32) = v2;
  return v2;
}

void sub_24B46ACDC(int *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85CC8, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B46051C(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46AD80()
{
  return 1;
}

void *sub_24B46AD88@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetAssistanceGyro");
}

void sub_24B46AD98(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE84DF0;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46ADF4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46AD98(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46AE2C()
{
}

uint64_t sub_24B46AE80(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (unint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          uint64_t v10 = (char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          if ((unint64_t)v10 >= v9 || *v10 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
            if (!result) {
              return result;
            }
            unint64_t v11 = (unsigned char *)*((void *)this + 1);
            unint64_t v9 = *((void *)this + 2);
          }
          else
          {
            *uint64_t v4 = *v10;
            unint64_t v11 = v10 + 1;
            *((void *)this + 1) = v11;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 17)
          {
            *((void *)this + 1) = v11 + 1;
            goto LABEL_27;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_19;
        }
LABEL_27:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 36) |= 2u;
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 25)
        {
          *((void *)this + 1) = v13 + 1;
          goto LABEL_31;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_19;
      }
LABEL_31:
      unint64_t v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 24) = v14;
      *(_DWORD *)(a1 + 36) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_19:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t sub_24B46B06C(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v7 = *(double *)(v5 + 24);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v7, a3);
}

uint64_t sub_24B46B0F8(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(a1 + 36))
    {
      unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      int v2 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

double sub_24B46B160(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85CE0, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  return sub_24B460694(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46B204()
{
  return 1;
}

void *sub_24B46B20C@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetAssistanceDem");
}

void sub_24B46B21C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE84E68;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46B278(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46B21C(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46B2B0()
{
}

uint64_t sub_24B46B310(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (unint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
          if (!result) {
            return result;
          }
          uint64_t v10 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v4 = *v9;
          uint64_t v10 = v9 + 1;
          *((void *)this + 1) = v10;
        }
        *(_DWORD *)(a1 + 76) |= 1u;
        if ((unint64_t)v10 < v8 && *v10 == 17)
        {
          *((void *)this + 1) = v10 + 1;
          goto LABEL_45;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_36;
        }
LABEL_45:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 76) |= 2u;
        unsigned int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 25) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_49:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 76) |= 4u;
        unsigned int v21 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v21 >= v11 || *v21 != 32) {
          continue;
        }
        int v12 = v21 + 1;
        *((void *)this + 1) = v12;
LABEL_53:
        v38[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
          if (!result) {
            return result;
          }
          unsigned int v22 = v38[0];
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v22 = *v12;
          int v23 = v12 + 1;
          *((void *)this + 1) = v23;
        }
        *(unsigned char *)(a1 + 64) = v22 != 0;
        *(_DWORD *)(a1 + 76) |= 8u;
        if ((unint64_t)v23 >= v11 || *v23 != 41) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_61:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 76) |= 0x10u;
        unsigned int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 49) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_65:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 76) |= 0x20u;
        unsigned int v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 57) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_69:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 76) |= 0x40u;
        unsigned int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 65) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_73:
        *(void *)int v38 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38))
        {
          *(void *)(a1 + 56) = *(void *)v38;
          *(_DWORD *)(a1 + 76) |= 0x80u;
          unsigned int v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          if ((unint64_t)v27 < v13 && *v27 == 72)
          {
            unint64_t v14 = v27 + 1;
            *((void *)this + 1) = v14;
LABEL_77:
            v38[0] = 0;
            if ((unint64_t)v14 >= v13 || *v14 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
              if (!result) {
                return result;
              }
              unsigned int v28 = v38[0];
              unsigned int v29 = (unsigned char *)*((void *)this + 1);
              unint64_t v13 = *((void *)this + 2);
            }
            else
            {
              unsigned int v28 = *v14;
              unsigned int v29 = v14 + 1;
              *((void *)this + 1) = v29;
            }
            *(unsigned char *)(a1 + 65) = v28 != 0;
            *(_DWORD *)(a1 + 76) |= 0x100u;
            if ((unint64_t)v29 < v13 && *v29 == 80)
            {
              BOOL v15 = v29 + 1;
              *((void *)this + 1) = v15;
LABEL_85:
              v38[0] = 0;
              if ((unint64_t)v15 >= v13 || *v15 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                if (!result) {
                  return result;
                }
                unsigned int v30 = v38[0];
                int v31 = (unsigned char *)*((void *)this + 1);
                unint64_t v13 = *((void *)this + 2);
              }
              else
              {
                unsigned int v30 = *v15;
                int v31 = v15 + 1;
                *((void *)this + 1) = v31;
              }
              *(unsigned char *)(a1 + 66) = v30 != 0;
              *(_DWORD *)(a1 + 76) |= 0x200u;
              if ((unint64_t)v31 < v13 && *v31 == 88)
              {
                int v16 = v31 + 1;
                *((void *)this + 1) = v16;
LABEL_93:
                v38[0] = 0;
                if ((unint64_t)v16 >= v13 || *v16 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                  if (!result) {
                    return result;
                  }
                  unsigned int v32 = v38[0];
                  int v33 = (unsigned char *)*((void *)this + 1);
                  unint64_t v13 = *((void *)this + 2);
                }
                else
                {
                  unsigned int v32 = *v16;
                  int v33 = v16 + 1;
                  *((void *)this + 1) = v33;
                }
                *(unsigned char *)(a1 + 67) = v32 != 0;
                *(_DWORD *)(a1 + 76) |= 0x400u;
                if ((unint64_t)v33 < v13 && *v33 == 96)
                {
                  int v17 = v33 + 1;
                  *((void *)this + 1) = v17;
LABEL_101:
                  v38[0] = 0;
                  if ((unint64_t)v17 >= v13 || *v17 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                    if (!result) {
                      return result;
                    }
                    unsigned int v34 = v38[0];
                    int v35 = (unsigned char *)*((void *)this + 1);
                    unint64_t v13 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v34 = *v17;
                    int v35 = v17 + 1;
                    *((void *)this + 1) = v35;
                  }
                  *(unsigned char *)(a1 + 68) = v34 != 0;
                  *(_DWORD *)(a1 + 76) |= 0x800u;
                  if ((unint64_t)v35 < v13 && *v35 == 104)
                  {
                    BOOL v18 = v35 + 1;
                    *((void *)this + 1) = v18;
LABEL_109:
                    v38[0] = 0;
                    if ((unint64_t)v18 >= v13 || *v18 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                      if (!result) {
                        return result;
                      }
                      unsigned int v36 = v38[0];
                      uint64_t v37 = (unsigned __int8 *)*((void *)this + 1);
                      unint64_t v13 = *((void *)this + 2);
                    }
                    else
                    {
                      unsigned int v36 = *v18;
                      uint64_t v37 = (unsigned __int8 *)(v18 + 1);
                      *((void *)this + 1) = v37;
                    }
                    *(unsigned char *)(a1 + 69) = v36 != 0;
                    *(_DWORD *)(a1 + 76) |= 0x1000u;
                    if (v37 == (unsigned __int8 *)v13
                      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                    {
                      *((_DWORD *)this + 8) = 0;
                      uint64_t result = 1;
                      *((unsigned char *)this + 36) = 1;
                      return result;
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_49;
        }
        goto LABEL_36;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_53;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_61;
        }
        goto LABEL_36;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_65;
        }
        goto LABEL_36;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_69;
        }
        goto LABEL_36;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_73;
        }
        goto LABEL_36;
      case 9u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_77;
      case 0xAu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        BOOL v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_85;
      case 0xBu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_93;
      case 0xCu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_101;
      case 0xDu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        BOOL v18 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_109;
      default:
        int v7 = TagFallback & 7;
LABEL_36:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_24B46B9A8(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 76);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 64), a2, a4);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 65), a2, a4);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 66), a2, a4);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned __int8 *)(v5 + 68), a2, a4);
    if ((*(_DWORD *)(v5 + 76) & 0x1000) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 67), a2, a4);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x800) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v6 & 0x1000) == 0) {
    return result;
  }
LABEL_27:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 69);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v7, a2, a4);
}

uint64_t sub_24B46BB4C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 76);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      int v2 = *(_DWORD *)(a1 + 76);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 2;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x80) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    unsigned int v5 = result + 2;
    if ((v2 & 0x100) == 0) {
      unsigned int v5 = result;
    }
    if ((v2 & 0x200) != 0) {
      v5 += 2;
    }
    if ((v2 & 0x400) != 0) {
      v5 += 2;
    }
    if ((v2 & 0x800) != 0) {
      v5 += 2;
    }
    if ((v2 & 0x1000) != 0) {
      uint64_t result = v5 + 2;
    }
    else {
      uint64_t result = v5;
    }
  }
  *(_DWORD *)(a1 + 72) = result;
  return result;
}

void sub_24B46BC38(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85CF8, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B460780(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46BCDC()
{
  return 1;
}

void *sub_24B46BCE4@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetAssistanceMapVector");
}

void sub_24B46BCF4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE84EE0;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46BD50(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46BCF4(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46BD88()
{
}

uint64_t sub_24B46BDE0(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (unint64_t *)(a1 + 2);
  while (2)
  {
    unsigned int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          *uint64_t v4 = *v9;
          uint64_t v10 = v9 + 1;
          *((void *)this + 1) = v10;
LABEL_24:
          a1[8] |= 1u;
          if ((unint64_t)v10 < v8 && *v10 == 16)
          {
            unint64_t v11 = v10 + 1;
            *((void *)this + 1) = v11;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if (result)
        {
          uint64_t v10 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_27:
        unsigned int v24 = 0;
        if ((unint64_t)v11 >= v8 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!result) {
            return result;
          }
          unsigned int v16 = v24;
        }
        else
        {
          unsigned int v16 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v16 <= 9)
        {
          a1[8] |= 2u;
          a1[4] = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v17 >= v12 || *v17 != 24) {
          continue;
        }
        unint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_37:
        unsigned int v23 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!result) {
            return result;
          }
          unsigned int v18 = v23;
        }
        else
        {
          unsigned int v18 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v18 <= 4)
        {
          a1[8] |= 4u;
          a1[5] = v18;
        }
        int v19 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v19 >= v14 || *v19 != 32) {
          continue;
        }
        BOOL v15 = v19 + 1;
        *((void *)this + 1) = v15;
LABEL_47:
        unsigned int v22 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v20 = v22;
        }
        else
        {
          unsigned int v20 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        if (sub_24B3EF6C4(v20))
        {
          a1[8] |= 8u;
          a1[6] = v20;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_37;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        BOOL v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_47;
      default:
        int v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_24B46C0C8(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v5 = (unsigned int *)result;
  unsigned int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    unsigned int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
      if ((v5[8] & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  unsigned int v6 = v5[8];
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v7 = v5[6];
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_24B46C170(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
       + 1;
    int v2 = *(_DWORD *)(a1 + 32);
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_13;
    }
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 11;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    int v2 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v5 = 2;
  }
  uint64_t v3 = (v5 + v3);
LABEL_13:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_22;
  }
  unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
    int v2 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v3 = (v7 + v3);
  if ((v2 & 8) != 0)
  {
LABEL_22:
    unint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
  }
LABEL_28:
  *(_DWORD *)(a1 + 28) = v3;
  return v3;
}

void sub_24B46C268(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85D10, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B4609B8(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46C30C()
{
  return 1;
}

void *sub_24B46C314@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetAssistanceMotionActivityContext");
}

void sub_24B46C324(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE84F58;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46C380(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46C324(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46C3B8()
{
}

uint64_t sub_24B46C410(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (unint64_t *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      uint64_t v10 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if (!result) {
          return result;
        }
        unint64_t v11 = (unsigned char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        *uint64_t v4 = *v10;
        unint64_t v11 = v10 + 1;
        *((void *)this + 1) = v11;
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      if ((unint64_t)v11 < v8 && *v11 == 16)
      {
        int v9 = v11 + 1;
        *((void *)this + 1) = v9;
LABEL_24:
        unsigned int v14 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v14);
          if (!result) {
            return result;
          }
          unsigned int v12 = v14;
        }
        else
        {
          unsigned int v12 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        if (v12 - 1 <= 3)
        {
          *(_DWORD *)(a1 + 24) |= 2u;
          *(_DWORD *)(a1 + 16) = v12;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B46C5C8(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_24B46C634(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24))
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v2 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_13;
      }
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v3 & 0x80000000) != 0)
    {
      int v4 = 11;
    }
    else if (v3 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      int v4 = 2;
    }
    uint64_t v2 = (v4 + v2);
  }
  else
  {
    uint64_t v2 = 0;
  }
LABEL_13:
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_24B46C6BC(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85D28, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B460B30(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46C760()
{
  return 1;
}

void *sub_24B46C768@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetAssistanceMountState");
}

void sub_24B46C778(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE84FD0;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46C7D4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46C778(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46C80C()
{
}

uint64_t sub_24B46C864(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    while (1)
    {
      int v4 = (char *)*((void *)this + 1);
      if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v4 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v10 = 0;
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
        if (!result) {
          return result;
        }
        unsigned int v7 = v10;
      }
      else
      {
        unsigned int v7 = *v6;
        *((void *)this + 1) = v6 + 1;
      }
      if (v7 < 7 || v7 == 15)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 8) = v7;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_24B46C988(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_24B46C9A4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v3 & 0x80000000) != 0)
    {
      uint64_t result = 11;
    }
    else if (v3 >= 0x80)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      uint64_t result = 2;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_24B46CA00(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85D40, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B460C20(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46CAA4()
{
  return 1;
}

void *sub_24B46CAAC@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetAssistanceSignalEnvironment");
}

void sub_24B46CABC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85048;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46CB18(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46CABC(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46CB50()
{
}

uint64_t sub_24B46CBA8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v4 = (unint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
          if (!result) {
            return result;
          }
          unsigned int v10 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          *int v4 = *v9;
          unsigned int v10 = v9 + 1;
          *((void *)this + 1) = v10;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        if ((unint64_t)v10 < v8 && *v10 == 17)
        {
          *((void *)this + 1) = v10 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_18;
        }
LABEL_26:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 2u;
        unsigned int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 25) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_30:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v14;
        *(_DWORD *)(a1 + 44) |= 4u;
        unint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 33) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_34:
        unint64_t v14 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14))
        {
          *(void *)(a1 + 32) = v14;
          *(_DWORD *)(a1 + 44) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_30;
        }
        goto LABEL_18;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_18;
        }
        goto LABEL_34;
      default:
        int v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_24B46CE10(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
      if ((*(_DWORD *)(v5 + 44) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  double v7 = *(double *)(v5 + 32);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, v7, a3);
}

uint64_t sub_24B46CEB8(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 44);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(a1 + 44))
    {
      unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      int v2 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

double sub_24B46CF2C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85D58, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  return sub_24B460CF4(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46CFD0()
{
  return 1;
}

void *sub_24B46CFD8@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetAssistanceSpeedConstraint");
}

void sub_24B46CFE8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE850C0;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46D044(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46CFE8(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46D07C()
{
}

uint64_t sub_24B46D0D0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v4 = (unint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          unsigned int v10 = (char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          if ((unint64_t)v10 >= v9 || *v10 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
            if (!result) {
              return result;
            }
            unint64_t v11 = (unsigned char *)*((void *)this + 1);
            unint64_t v9 = *((void *)this + 2);
          }
          else
          {
            *int v4 = *v10;
            unint64_t v11 = v10 + 1;
            *((void *)this + 1) = v11;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 17)
          {
            *((void *)this + 1) = v11 + 1;
            goto LABEL_27;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_19;
        }
LABEL_27:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 36) |= 2u;
        unint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 25)
        {
          *((void *)this + 1) = v13 + 1;
          goto LABEL_31;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_19;
      }
LABEL_31:
      unint64_t v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 24) = v14;
      *(_DWORD *)(a1 + 36) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_19:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t sub_24B46D2BC(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v7 = *(double *)(v5 + 24);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v7, a3);
}

uint64_t sub_24B46D348(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(a1 + 36))
    {
      unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      int v2 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

double sub_24B46D3B0(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85D70, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  return sub_24B460E00(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46D454()
{
  return 1;
}

void *sub_24B46D45C@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetAssistanceAlongTrackVelocity");
}

void sub_24B46D46C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85138;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46D4C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46D46C(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46D500()
{
}

uint64_t sub_24B46D550(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v4 = (unint64_t *)(a1 + 8);
  uint64_t v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unint64_t v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
        if (!result) {
          return result;
        }
        unsigned int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        *int v4 = *v11;
        unsigned int v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        unsigned int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unint64_t v13 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v10;
          unint64_t v13 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v13;
        }
        *(_DWORD *)(a1 + 24) |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B46D6F0(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_24B46D75C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24))
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
         + 1;
      if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v2 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_11;
      }
    }
    unsigned int v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v3 >= 0x80) {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else {
      int v4 = 2;
    }
    uint64_t v2 = (v4 + v2);
  }
  else
  {
    uint64_t v2 = 0;
  }
LABEL_11:
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_24B46D7D8(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85D88, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B461DEC(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46D87C()
{
  return 1;
}

void *sub_24B46D884@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetThermalRiskState");
}

void sub_24B46D894(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE851B0;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46D8F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46D894(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46D928()
{
}

uint64_t sub_24B46D97C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    while (1)
    {
      int v4 = (char *)*((void *)this + 1);
      if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v4 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v15 = 0;
      unint64_t v9 = (char *)*((void *)this + 1);
      unint64_t v7 = *((void *)this + 2);
      if ((unint64_t)v9 >= v7 || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
        if (!result) {
          return result;
        }
        unsigned int v10 = v15;
        unint64_t v11 = (unsigned char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
      }
      else
      {
        unsigned int v10 = *v9;
        unint64_t v11 = v9 + 1;
        *((void *)this + 1) = v11;
      }
      *(unsigned char *)(a1 + 8) = v10 != 0;
      *(_DWORD *)(a1 + 20) |= 1u;
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        int v8 = v11 + 1;
        *((void *)this + 1) = v8;
LABEL_23:
        unsigned int v16 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unsigned int v12 = v16;
          unint64_t v13 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v12 = *v8;
          unint64_t v13 = (unsigned __int8 *)(v8 + 1);
          *((void *)this + 1) = v13;
        }
        *(_DWORD *)(a1 + 12) = v12;
        *(_DWORD *)(a1 + 20) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v8 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      int v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B46DB2C(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_24B46DB98(unsigned int *a1)
{
  unsigned int v2 = a1[5];
  if ((_BYTE)v2)
  {
    uint64_t v3 = 2 * (v2 & 1);
    if ((v2 & 2) != 0)
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
      if ((v4 & 0x80000000) != 0)
      {
        int v5 = 11;
      }
      else if (v4 >= 0x80)
      {
        int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      }
      else
      {
        int v5 = 2;
      }
      uint64_t v3 = (v5 + v3);
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  a1[4] = v3;
  return v3;
}

void sub_24B46DC08(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85DA0, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B461508(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46DCAC()
{
  return 1;
}

void *sub_24B46DCB4@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetConfigSimulatorMode");
}

void sub_24B46DCC4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85228;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46DD20(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46DCC4(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46DD58()
{
}

uint64_t sub_24B46DDA4(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v4 = a1 + 2;
  int v5 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unint64_t v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
        if (!result) {
          return result;
        }
        unsigned int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        *int v4 = *v11;
        unsigned int v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }
      a1[5] |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        unsigned int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unint64_t v13 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v10;
          unint64_t v13 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v13;
        }
        a1[5] |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B46DF44(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_24B46DFB0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 20);
  if (v2)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_24B46E040(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85DB8, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B4615CC(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46E0E4()
{
  return 1;
}

void *sub_24B46E0EC@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetConfigEnableGnssConstellations");
}

void sub_24B46E0FC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE852A0;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46E158(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46E0FC(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46E190()
{
}

uint64_t sub_24B46E1E0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    while (1)
    {
      int v4 = (char *)*((void *)this + 1);
      if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v4 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v16 = 0;
      unint64_t v9 = (char *)*((void *)this + 1);
      unint64_t v7 = *((void *)this + 2);
      if ((unint64_t)v9 >= v7 || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
        if (!result) {
          return result;
        }
        unsigned int v10 = v16;
        unint64_t v11 = (unsigned char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
      }
      else
      {
        unsigned int v10 = *v9;
        unint64_t v11 = v9 + 1;
        *((void *)this + 1) = v11;
      }
      *(unsigned char *)(a1 + 8) = v10 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        int v8 = v11 + 1;
        *((void *)this + 1) = v8;
LABEL_23:
        unsigned int v15 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
          if (!result) {
            return result;
          }
          unsigned int v12 = v15;
          unint64_t v13 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v12 = *v8;
          unint64_t v13 = (unsigned __int8 *)(v8 + 1);
          *((void *)this + 1) = v13;
        }
        *(unsigned char *)(a1 + 9) = v12 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v8 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      int v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B46E398(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned __int8 *)(v5 + 9);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_24B46E404(uint64_t a1)
{
  unsigned int v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  if ((*(_DWORD *)(a1 + 16) & 2) != 0) {
    v1 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 12) = v2;
  return v2;
}

void sub_24B46E42C(uint64_t a1, unsigned char *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85DD0, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B461EB0(a1, lpsrc);
}

uint64_t sub_24B46E4D0()
{
  return 1;
}

void *sub_24B46E4D8@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetConfigRfBandEnable");
}

void sub_24B46E4E8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85318;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46E544(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46E4E8(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46E57C()
{
}

uint64_t sub_24B46E5CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    while (1)
    {
      int v4 = (char *)*((void *)this + 1);
      if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v4 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v11 = 0;
      uint64_t v7 = (char *)*((void *)this + 1);
      unint64_t v6 = *((void *)this + 2);
      if ((unint64_t)v7 >= v6 || *v7 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!result) {
          return result;
        }
        unsigned int v8 = v11;
        unint64_t v9 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v6 = *((void *)this + 2);
      }
      else
      {
        unsigned int v8 = *v7;
        unint64_t v9 = (unsigned __int8 *)(v7 + 1);
        *((void *)this + 1) = v9;
      }
      *(unsigned char *)(a1 + 8) = v8 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v9 == (unsigned __int8 *)v6 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_24B46E6EC(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_24B46E708(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1u);
  }
  else {
    uint64_t v1 = 0;
  }
  *(_DWORD *)(a1 + 12) = v1;
  return v1;
}

void sub_24B46E724(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85DE8, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B461690(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46E7C8()
{
  return 1;
}

void *sub_24B46E7D0@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.SetConfigDutyCycling");
}

void sub_24B46E7E0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85390;
  uint64_t v2 = *((void *)a1 + 1);
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x24C5D2700](v2, 0x1012C40EC159624);
  }
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46E87C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46E7E0(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46E8B4()
{
}

uint64_t sub_24B46E908(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if (*(void *)(a1 + 8) == v4) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_24B46EA28(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  return result;
}

uint64_t sub_24B46EA44(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 20))
  {
    uint64_t v3 = *(void *)(a1 + 8);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    char v5 = v4;
    uint64_t v6 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      unint64_t v7 = v6;
    }
    if (v7 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7);
      int v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v6 = *(void *)(v3 + 8);
      int v8 = v9 + 1;
      char v5 = *(unsigned char *)(v3 + 23);
    }
    else
    {
      int v8 = 2;
    }
    if (v5 < 0) {
      int v4 = v6;
    }
    uint64_t result = (v8 + v4);
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_24B46EAC4(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85E00, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B461734(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46EB68()
{
  return 1;
}

void *sub_24B46EB70@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.TerminationImminent");
}

void sub_24B46EB80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85408;
  uint64_t v2 = *((void *)a1 + 1);
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x24C5D2700](v2, 0x1012C40EC159624);
  }
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46EC1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46EB80(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46EC54()
{
}

uint64_t sub_24B46ECA8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if (*(void *)(a1 + 8) == v4) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_24B46EDC8(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  return result;
}

uint64_t sub_24B46EDE4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 20))
  {
    uint64_t v3 = *(void *)(a1 + 8);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    char v5 = v4;
    uint64_t v6 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      unint64_t v7 = v6;
    }
    if (v7 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7);
      int v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v6 = *(void *)(v3 + 8);
      int v8 = v9 + 1;
      char v5 = *(unsigned char *)(v3 + 23);
    }
    else
    {
      int v8 = 2;
    }
    if (v5 < 0) {
      int v4 = v6;
    }
    uint64_t result = (v8 + v4);
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_24B46EE64(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85E18, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B461814(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46EF08()
{
  return 1;
}

void *sub_24B46EF10@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.ExitMessage");
}

void sub_24B46EF20(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      char v6 = *(unsigned char *)(a2 + 12);
      *(_DWORD *)(a1 + 20) |= 1u;
      *(unsigned char *)(a1 + 12) = v6;
      int v4 = *(_DWORD *)(a2 + 20);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 20) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 20) |= 2u;
    *(_DWORD *)(a1 + 8) = v7;
    int v4 = *(_DWORD *)(a2 + 20);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = *(unsigned char *)(a2 + 13);
    *(_DWORD *)(a1 + 20) |= 4u;
    *(unsigned char *)(a1 + 13) = v8;
    if ((*(_DWORD *)(a2 + 20) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = *(unsigned char *)(a2 + 14);
    *(_DWORD *)(a1 + 20) |= 8u;
    *(unsigned char *)(a1 + 14) = v5;
  }
}

void sub_24B46F014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B46F02C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85480;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46F088(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46F02C(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46F0C0()
{
}

uint64_t sub_24B46F114(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    *(_DWORD *)(result + 11) = 0;
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_24B46F12C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (2)
  {
    int v4 = (char *)*((void *)this + 1);
    if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v21 = 0;
        char v8 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          unsigned int v9 = *v8;
          unsigned int v10 = v8 + 1;
          *((void *)this + 1) = v10;
LABEL_23:
          *(unsigned char *)(a1 + 12) = v9 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            unsigned int v11 = v10 + 1;
            *((void *)this + 1) = v11;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
        if (result)
        {
          unsigned int v9 = v21;
          unsigned int v10 = (unsigned char *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v11 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
LABEL_26:
        unsigned int v21 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v14 = v21;
          unsigned int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v14 = *v11;
          unsigned int v15 = v11 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 8) = v14;
        *(_DWORD *)(a1 + 20) |= 2u;
        if ((unint64_t)v15 >= v7 || *v15 != 24) {
          continue;
        }
        unsigned int v12 = v15 + 1;
        *((void *)this + 1) = v12;
LABEL_34:
        unsigned int v21 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
          int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v12;
          int v17 = v12 + 1;
          *((void *)this + 1) = v17;
        }
        *(unsigned char *)(a1 + 13) = v16 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        if ((unint64_t)v17 >= v7 || *v17 != 32) {
          continue;
        }
        unint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_42:
        unsigned int v21 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v18 = v21;
          int v19 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v13;
          int v19 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 14) = v18 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        if (v19 != (unsigned __int8 *)v7 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_24B46F40C(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 12), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 13), a2, a4);
      if ((*(_DWORD *)(v5 + 20) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 14);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_24B46F4B4(unsigned int *a1)
{
  unsigned int v2 = a1[5];
  if ((_BYTE)v2)
  {
    int v3 = 2 * (v2 & 1);
    if ((v2 & 2) != 0)
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
      if ((v4 & 0x80000000) != 0)
      {
        int v5 = 11;
      }
      else if (v4 >= 0x80)
      {
        int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        unsigned int v2 = a1[5];
      }
      else
      {
        int v5 = 2;
      }
      v3 += v5;
    }
    unsigned int v7 = v3 + 2;
    if ((v2 & 4) == 0) {
      unsigned int v7 = v3;
    }
    if ((v2 & 8) != 0) {
      uint64_t result = v7 + 2;
    }
    else {
      uint64_t result = v7;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  a1[4] = result;
  return result;
}

void sub_24B46F53C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85E30, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B46EF20(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46F5E0()
{
  return 1;
}

void *sub_24B46F5E8@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.RecoveryStatistics.RecoveryStatus");
}

void sub_24B46F5F8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    int v5 = (std::string *)MEMORY[0x263F8C740];
    if (*(unsigned char *)(a2 + 32))
    {
      int v6 = *(const std::string **)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      unsigned int v7 = *(std::string **)(a1 + 8);
      if (v7 == v5) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_12:
    unsigned int v9 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 4u;
    unsigned int v10 = *(std::string **)(a1 + 16);
    if (v10 == v5) {
      operator new();
    }
    std::string::operator=(v10, v9);
  }
}

void sub_24B46F744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B46F75C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE854F8;
  uint64_t v2 = *((void *)a1 + 1);
  uint64_t v3 = MEMORY[0x263F8C740];
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x24C5D2700](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = *((void *)a1 + 2);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    MEMORY[0x24C5D2700](v5, 0x1012C40EC159624);
  }
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B46F838(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B46F75C(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46F870()
{
}

uint64_t sub_24B46F8C8(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    uint64_t v1 = MEMORY[0x263F8C740];
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(result + 24) = 0;
    if ((*(unsigned char *)(result + 32) & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3 != v1)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_24B46F948(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = MEMORY[0x263F8C740];
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_25;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          if (*(void *)(a1 + 8) == v4) {
            operator new();
          }
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!result) {
            return result;
          }
          unsigned int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          if ((unint64_t)v12 < v11 && *v12 == 16)
          {
            unint64_t v13 = v12 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_21;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_21:
        unsigned int v16 = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unsigned int v14 = v16;
          unsigned int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v14 = *v13;
          unsigned int v15 = v13 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 24) = v14;
        int v9 = *(_DWORD *)(a1 + 32) | 2;
        *(_DWORD *)(a1 + 32) = v9;
        if ((unint64_t)v15 < v11 && *v15 == 26)
        {
          *((void *)this + 1) = v15 + 1;
          goto LABEL_33;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_25;
      }
      int v9 = *(_DWORD *)(a1 + 32);
LABEL_33:
      *(_DWORD *)(a1 + 32) = v9 | 4;
      if (*(void *)(a1 + 16) == v4) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_25:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B46FB88(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
}

uint64_t sub_24B46FC14(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_31;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v4 = *(void *)(a1 + 8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    char v6 = v5;
    uint64_t v7 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      unint64_t v8 = v7;
    }
    if (v8 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v7 = *(void *)(v4 + 8);
      int v9 = v10 + 1;
      int v2 = *(_DWORD *)(a1 + 32);
      char v6 = *(unsigned char *)(v4 + 23);
    }
    else
    {
      int v9 = 2;
    }
    if (v6 < 0) {
      int v5 = v7;
    }
    uint64_t v3 = (v9 + v5);
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v11 & 0x80000000) != 0)
  {
    int v12 = 11;
  }
  else if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    int v2 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v3 = (v12 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 16);
    int v14 = *(unsigned __int8 *)(v13 + 23);
    char v15 = v14;
    uint64_t v16 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      unint64_t v17 = *(unsigned __int8 *)(v13 + 23);
    }
    else {
      unint64_t v17 = v16;
    }
    if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17);
      int v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v16 = *(void *)(v13 + 8);
      char v15 = *(unsigned char *)(v13 + 23);
    }
    else
    {
      int v18 = 1;
    }
    if (v15 < 0) {
      int v14 = v16;
    }
    uint64_t v3 = (v3 + v18 + v14 + 1);
  }
LABEL_31:
  *(_DWORD *)(a1 + 28) = v3;
  return v3;
}

void sub_24B46FD3C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85E48, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B46F5F8(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B46FDE0()
{
  return 1;
}

void *sub_24B46FDE8@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.RecoveryStatistics.RecoveryPoint");
}

void sub_24B46FDF8(uint64_t a1)
{
  *(void *)a1 = &unk_26FE85570;
  sub_24B45829C();
  if (qword_26B17C358 != a1)
  {
    uint64_t v2 = *(void *)(a1 + 32);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  int v3 = *(_DWORD *)(a1 + 20);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      uint64_t v5 = *(void *)(*(void *)(a1 + 8) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        int v3 = *(_DWORD *)(a1 + 20);
      }
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6) {
    MEMORY[0x24C5D26D0](v6, 0x80C80B8603338);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_24B46FEFC(uint64_t a1)
{
  sub_24B46FDF8(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B46FF34()
{
}

uint64_t sub_24B46FF88(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
  do
  {
    while (1)
    {
LABEL_2:
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2)
      {
        while (1)
        {
          int v10 = *(_DWORD *)(a1 + 20);
          uint64_t v11 = *(int *)(a1 + 16);
          if ((int)v11 >= v10)
          {
            if (v10 == *(_DWORD *)(a1 + 24))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v10 = *(_DWORD *)(a1 + 20);
            }
            *(_DWORD *)(a1 + 20) = v10 + 1;
            operator new();
          }
          uint64_t v12 = *(void *)(a1 + 8);
          *(_DWORD *)(a1 + 16) = v11 + 1;
          uint64_t v13 = *(void *)(v12 + 8 * v11);
          unsigned int v27 = 0;
          int v14 = (char *)*((void *)this + 1);
          if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
          }
            }
          else
          {
            unsigned int v27 = *v14;
            *((void *)this + 1) = v14 + 1;
          }
          int v15 = *((_DWORD *)this + 14);
          int v16 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v15 + 1;
          if (v15 >= v16) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
          if (!sub_24B46F948(v13, this) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
          int v17 = *((_DWORD *)this + 14);
          BOOL v18 = __OFSUB__(v17, 1);
          int v19 = v17 - 1;
          if (v19 < 0 == v18) {
            *((_DWORD *)this + 14) = v19;
          }
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          if ((unint64_t)v20 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v21 = *v20;
          if (v21 != 10)
          {
            if (v21 != 18) {
              goto LABEL_2;
            }
            *((void *)this + 1) = v20 + 1;
            goto LABEL_10;
          }
          *((void *)this + 1) = v20 + 1;
        }
      }
LABEL_34:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
    if (TagFallback >> 3 != 2)
    {
      int v7 = TagFallback & 7;
      goto LABEL_34;
    }
    int v7 = TagFallback & 7;
    if (v7 != 2) {
      goto LABEL_34;
    }
LABEL_10:
    *(_DWORD *)(a1 + 44) |= 2u;
    uint64_t v8 = *(void *)(a1 + 32);
    if (!v8) {
      operator new();
    }
    unsigned int v28 = 0;
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28)) {
        return 0;
      }
    }
    else
    {
      unsigned int v28 = *v9;
      *((void *)this + 1) = v9 + 1;
    }
    int v22 = *((_DWORD *)this + 14);
    int v23 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v22 + 1;
    if (v22 >= v23) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
    if (!sub_24B46F12C(v8, this) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
    int v24 = *((_DWORD *)this + 14);
    BOOL v18 = __OFSUB__(v24, 1);
    int v25 = v24 - 1;
    if (v25 < 0 == v18) {
      *((_DWORD *)this + 14) = v25;
    }
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_24B4702F4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if ((*(unsigned char *)(v5 + 44) & 2) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 32);
    if (!v7)
    {
      sub_24B45829C();
      uint64_t v7 = *(void *)(qword_26B17C358 + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_24B47039C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 44) & 2) != 0)
  {
    int v3 = *(unsigned int **)(a1 + 32);
    if (!v3)
    {
      sub_24B45829C();
      int v3 = *(unsigned int **)(qword_26B17C358 + 32);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46F4B4(v3);
    int v5 = (int)v4;
    if (v4 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    }
    else {
      int v6 = 1;
    }
    int v2 = v5 + v6 + 1;
  }
  else
  {
    int v2 = 0;
  }
  int v7 = *(_DWORD *)(a1 + 16);
  uint64_t v8 = (v7 + v2);
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B46FC14(*(void *)(*(void *)(a1 + 8) + 8 * v9));
      int v11 = (int)v10;
      if (v10 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      }
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 40) = v8;
  return v8;
}

void sub_24B470470(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85E60, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B466C78(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B470514()
{
  return 1;
}

void *sub_24B47051C@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.RecoveryStatistics");
}

void sub_24B47052C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE855E8;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B470588(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B47052C(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B4705C0()
{
}

uint64_t sub_24B47060C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    while (1)
    {
      uint64_t v4 = (char *)*((void *)this + 1);
      if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v4 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v9 = 0;
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v9);
        if (!result) {
          return result;
        }
        unsigned int v7 = v9;
      }
      else
      {
        unsigned int v7 = *v6;
        *((void *)this + 1) = v6 + 1;
      }
      if (v7 <= 4)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 8) = v7;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_24B47072C(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_24B470748(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v3 & 0x80000000) != 0)
    {
      uint64_t result = 11;
    }
    else if (v3 >= 0x80)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      uint64_t result = 2;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_24B4707A4(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85E78, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B466E7C(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B470848()
{
  return 1;
}

void *sub_24B470850@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.LtlInfoRequest");
}

void sub_24B470860(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    sub_24B3EB460(a1 + 16, *(_DWORD *)(a1 + 24) + v4);
    memcpy((void *)(*(void *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  int v5 = *(_DWORD *)(a2 + 40);
  if (v5)
  {
    sub_24B3EB460(a1 + 32, *(_DWORD *)(a1 + 40) + v5);
    memcpy((void *)(*(void *)(a1 + 32) + 4 * *(int *)(a1 + 40)), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 40));
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
  }
  LOBYTE(v6) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v6)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      int v7 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 52) |= 1u;
      *(_DWORD *)(a1 + 8) = v7;
      int v6 = *(_DWORD *)(a2 + 52);
    }
    if ((v6 & 2) != 0)
    {
      int v8 = *(_DWORD *)(a2 + 12);
      *(_DWORD *)(a1 + 52) |= 2u;
      *(_DWORD *)(a1 + 12) = v8;
    }
  }
}

void sub_24B470994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B4709AC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85660;
  sub_24B45829C();
  uint64_t v2 = *((void *)a1 + 4);
  if (v2) {
    MEMORY[0x24C5D26D0](v2, 0x1000C8052888210);
  }
  uint64_t v3 = *((void *)a1 + 2);
  if (v3) {
    MEMORY[0x24C5D26D0](v3, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B470A40(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B4709AC(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B470A78()
{
}

uint64_t sub_24B470AD0(uint64_t result)
{
  if (*(unsigned char *)(result + 52)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_24B470AEC(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a1 + 16;
  int v6 = (unsigned int *)(a1 + 8);
  int v7 = (unsigned int *)(a1 + 12);
LABEL_2:
  while (2)
  {
    int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v12 = (char *)*((void *)this + 1);
        int v11 = (char *)*((void *)this + 2);
        if (v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v13 = (char *)*((void *)this + 1);
          int v11 = (char *)*((void *)this + 2);
        }
        else
        {
          *int v6 = *v12;
          uint64_t v13 = v12 + 1;
          *((void *)this + 1) = v13;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        if (v13 < v11 && *v13 == 16)
        {
          int v14 = v13 + 1;
          *((void *)this + 1) = v14;
          goto LABEL_33;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v14 = (char *)*((void *)this + 1);
        int v11 = (char *)*((void *)this + 2);
LABEL_33:
        if (v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          BOOL v18 = (char *)*((void *)this + 1);
          int v11 = (char *)*((void *)this + 2);
        }
        else
        {
          *int v7 = *v14;
          BOOL v18 = v14 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 52) |= 2u;
        if (v18 >= v11) {
          continue;
        }
        int v19 = *v18;
        goto LABEL_61;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            int v15 = (char *)*((void *)this + 1);
            int v11 = (char *)*((void *)this + 2);
            goto LABEL_40;
          }
          goto LABEL_21;
        }
        uint64_t result = sub_24B471030(this, v5);
        if (!result) {
          return result;
        }
        while (1)
        {
          BOOL v18 = (char *)*((void *)this + 1);
          int v11 = (char *)*((void *)this + 2);
          if (v18 >= v11) {
            goto LABEL_2;
          }
          int v19 = *v18;
          if (v19 == 32) {
            goto LABEL_82;
          }
LABEL_61:
          if (v19 != 24) {
            goto LABEL_2;
          }
          int v15 = v18 + 1;
          *((void *)this + 1) = v15;
LABEL_40:
          v41[0] = 0;
          if (v15 >= v11 || *v15 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v41);
            if (!result) {
              return result;
            }
            unsigned int v20 = v41[0];
          }
          else
          {
            unsigned int v20 = *v15;
            *((void *)this + 1) = v15 + 1;
          }
          int v21 = *(_DWORD *)(a1 + 24);
          if (v21 == *(_DWORD *)(a1 + 28))
          {
            sub_24B3EB460(v5, v21 + 1);
            int v21 = *(_DWORD *)(a1 + 24);
          }
          uint64_t v22 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v21 + 1;
          *(_DWORD *)(v22 + 4 * v21) = v20;
          int v23 = *(_DWORD *)(a1 + 28) - *(_DWORD *)(a1 + 24);
          if (v23 >= 1)
          {
            int v24 = v23 + 1;
            do
            {
              int v25 = (unsigned char *)*((void *)this + 1);
              unint64_t v26 = *((void *)this + 2);
              if ((unint64_t)v25 >= v26 || *v25 != 24) {
                break;
              }
              *((void *)this + 1) = v25 + 1;
              v41[0] = 0;
              if ((unint64_t)(v25 + 1) >= v26 || (char)v25[1] < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v41);
                if (!result) {
                  return result;
                }
                unsigned int v27 = v41[0];
              }
              else
              {
                unsigned int v27 = v25[1];
                *((void *)this + 1) = v25 + 2;
              }
              int v28 = *(_DWORD *)(a1 + 24);
              if (v28 >= *(_DWORD *)(a1 + 28))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v41);
                int v28 = *(_DWORD *)(a1 + 24);
              }
              uint64_t v29 = *(void *)(a1 + 16);
              *(_DWORD *)(a1 + 24) = v28 + 1;
              *(_DWORD *)(v29 + 4 * v28) = v27;
              --v24;
            }
            while (v24 > 1);
          }
        }
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 == 2)
        {
          uint64_t result = sub_24B421320(this, v4);
          if (!result) {
            return result;
          }
          while (1)
          {
            BOOL v18 = (char *)*((void *)this + 1);
            int v11 = (char *)*((void *)this + 2);
            if (v18 >= v11 || *v18 != 32) {
              break;
            }
LABEL_82:
            int v16 = v18 + 1;
            *((void *)this + 1) = v16;
LABEL_63:
            unsigned int v40 = 0;
            if (v16 >= v11 || *v16 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40))return 0; {
            }
              }
            else
            {
              unsigned int v40 = *v16;
              *((void *)this + 1) = v16 + 1;
            }
            int v30 = *(_DWORD *)(a1 + 40);
            if (v30 == *(_DWORD *)(a1 + 44))
            {
              sub_24B3EB460(v4, v30 + 1);
              int v30 = *(_DWORD *)(a1 + 40);
            }
            unsigned int v31 = v40;
            uint64_t v32 = *(void *)(a1 + 32);
            *(_DWORD *)(a1 + 40) = v30 + 1;
            *(_DWORD *)(v32 + 4 * v30) = v31;
            int v33 = *(_DWORD *)(a1 + 44) - *(_DWORD *)(a1 + 40);
            if (v33 >= 1)
            {
              int v34 = v33 + 1;
              do
              {
                int v35 = (unsigned char *)*((void *)this + 1);
                unint64_t v36 = *((void *)this + 2);
                if ((unint64_t)v35 >= v36 || *v35 != 32) {
                  break;
                }
                *((void *)this + 1) = v35 + 1;
                if ((unint64_t)(v35 + 1) >= v36 || (char)v35[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40))return 0; {
                }
                  }
                else
                {
                  unsigned int v40 = v35[1];
                  *((void *)this + 1) = v35 + 2;
                }
                int v37 = *(_DWORD *)(a1 + 40);
                if (v37 >= *(_DWORD *)(a1 + 44))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v41);
                  int v37 = *(_DWORD *)(a1 + 40);
                }
                unsigned int v38 = v40;
                uint64_t v39 = *(void *)(a1 + 32);
                *(_DWORD *)(a1 + 40) = v37 + 1;
                *(_DWORD *)(v39 + 4 * v37) = v38;
                --v34;
              }
              while (v34 > 1);
            }
          }
          if (v18 == v11 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          int v16 = (char *)*((void *)this + 1);
          int v11 = (char *)*((void *)this + 2);
          goto LABEL_63;
        }
LABEL_21:
        if (v10 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      default:
        int v10 = TagFallback & 7;
        goto LABEL_21;
    }
  }
}

void sub_24B471000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_24B471030(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v10 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v10 = *v4;
    *((void *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v11 = 0;
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!result) {
          return result;
        }
        unsigned int v7 = v11;
      }
      else
      {
        unsigned int v7 = *v6;
        *((void *)this + 1) = v6 + 1;
      }
      int v8 = *(_DWORD *)(a2 + 8);
      if (v8 == *(_DWORD *)(a2 + 12))
      {
        sub_24B3EB460(a2, v8 + 1);
        int v8 = *(_DWORD *)(a2 + 8);
      }
      uint64_t v9 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v8 + 1;
      *(_DWORD *)(v9 + 4 * v8) = v7;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  return 1;
}

uint64_t sub_24B471148(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
  }
  if ((v6 & 2) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(*(void *)(v5 + 16) + 4 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(*(void *)(v5 + 32) + 4 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 40));
  }
  return result;
}

uint64_t sub_24B47120C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 52);
  if (!v2)
  {
    int v3 = 0;
    goto LABEL_14;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*(_DWORD *)(a1 + 52) & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v5 >= 0x80) {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  int v7 = *(_DWORD *)(a1 + 24);
  if (v7 < 1)
  {
    int v9 = 0;
  }
  else
  {
    uint64_t v8 = 0;
    int v9 = 0;
    do
    {
      unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 16)
                                                                                             + 4 * v8);
      if ((v10 & 0x80000000) != 0)
      {
        int v11 = 10;
      }
      else if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
        int v7 = *(_DWORD *)(a1 + 24);
      }
      else
      {
        int v11 = 1;
      }
      v9 += v11;
      ++v8;
    }
    while (v8 < v7);
  }
  int v12 = *(_DWORD *)(a1 + 40);
  if (v12 < 1)
  {
    int v14 = 0;
  }
  else
  {
    uint64_t v13 = 0;
    int v14 = 0;
    do
    {
      int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 32)
                                                                                             + 4 * v13);
      if (v15 >= 0x80)
      {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
        int v12 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        int v16 = 1;
      }
      v14 += v16;
      ++v13;
    }
    while (v13 < v12);
  }
  uint64_t result = (v9 + v3 + v12 + v7 + v14);
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

void sub_24B47135C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85E90, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B470860(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B471400()
{
  return 1;
}

void *sub_24B471408@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.LtlInfo.LtlLutParams");
}

void sub_24B471418(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    sub_24B3EB460(a1 + 8, *(_DWORD *)(a1 + 16) + v4);
    memcpy((void *)(*(void *)(a1 + 8) + 4 * *(int *)(a1 + 16)), *(const void **)(a2 + 8), 4 * *(int *)(a2 + 16));
    *(_DWORD *)(a1 + 16) += *(_DWORD *)(a2 + 16);
  }
  int v5 = *(_DWORD *)(a2 + 36);
  if ((v5 & 0x1FE) != 0)
  {
    if ((v5 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 24) = v6;
      int v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 4) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 28);
      *(_DWORD *)(a1 + 36) |= 4u;
      *(_DWORD *)(a1 + 28) = v7;
    }
  }
}

void sub_24B47150C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B471524(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE856D8;
  sub_24B45829C();
  uint64_t v2 = *((void *)a1 + 1);
  if (v2) {
    MEMORY[0x24C5D26D0](v2, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B47159C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B471524(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B4715D4()
{
}

uint64_t sub_24B471628(uint64_t result)
{
  if ((*(_WORD *)(result + 36) & 0x1FE) != 0) {
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_24B471644(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  uint64_t v4 = a1 + 8;
  int v5 = (unsigned int *)(a1 + 24);
  int v6 = (unsigned int *)(a1 + 28);
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_2:
        int v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            uint64_t v13 = (char *)*((void *)this + 1);
            unint64_t v11 = *((void *)this + 2);
            goto LABEL_23;
          }
          goto LABEL_18;
        }
        uint64_t result = sub_24B471030(this, v4);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v25 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          if ((unint64_t)v25 >= v11) {
            break;
          }
          int v26 = *v25;
          if (v26 == 16)
          {
            int v14 = (char *)(v25 + 1);
            *((void *)this + 1) = v14;
            goto LABEL_47;
          }
          if (v26 != 8) {
            goto LABEL_2;
          }
          uint64_t v13 = (char *)(v25 + 1);
          *((void *)this + 1) = v13;
LABEL_23:
          v30[0] = 0;
          if ((unint64_t)v13 >= v11 || *v13 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v30);
            if (!result) {
              return result;
            }
            unsigned int v15 = v30[0];
          }
          else
          {
            unsigned int v15 = *v13;
            *((void *)this + 1) = v13 + 1;
          }
          int v16 = *(_DWORD *)(a1 + 16);
          if (v16 == *(_DWORD *)(a1 + 20))
          {
            sub_24B3EB460(v4, v16 + 1);
            int v16 = *(_DWORD *)(a1 + 16);
          }
          uint64_t v17 = *(void *)(a1 + 8);
          *(_DWORD *)(a1 + 16) = v16 + 1;
          *(_DWORD *)(v17 + 4 * v16) = v15;
          int v18 = *(_DWORD *)(a1 + 20) - *(_DWORD *)(a1 + 16);
          if (v18 >= 1)
          {
            int v19 = v18 + 1;
            do
            {
              unsigned int v20 = (unsigned char *)*((void *)this + 1);
              unint64_t v21 = *((void *)this + 2);
              if ((unint64_t)v20 >= v21 || *v20 != 8) {
                break;
              }
              *((void *)this + 1) = v20 + 1;
              v30[0] = 0;
              if ((unint64_t)(v20 + 1) >= v21 || (char)v20[1] < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v30);
                if (!result) {
                  return result;
                }
                unsigned int v22 = v30[0];
              }
              else
              {
                unsigned int v22 = v20[1];
                *((void *)this + 1) = v20 + 2;
              }
              int v23 = *(_DWORD *)(a1 + 16);
              if (v23 >= *(_DWORD *)(a1 + 20))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v30);
                int v23 = *(_DWORD *)(a1 + 16);
              }
              uint64_t v24 = *(void *)(a1 + 8);
              *(_DWORD *)(a1 + 16) = v23 + 1;
              *(_DWORD *)(v24 + 4 * v23) = v22;
              --v19;
            }
            while (v19 > 1);
          }
        }
      }
      if (v9 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_18;
      }
      int v14 = (char *)*((void *)this + 1);
      unint64_t v11 = *((void *)this + 2);
LABEL_47:
      if ((unint64_t)v14 >= v11 || *v14 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unsigned int v27 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
      }
      else
      {
        *int v5 = *v14;
        unsigned int v27 = v14 + 1;
        *((void *)this + 1) = v27;
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      if ((unint64_t)v27 < v11 && *v27 == 24)
      {
        int v12 = v27 + 1;
        *((void *)this + 1) = v12;
LABEL_55:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v28 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v12;
          int v28 = (unsigned __int8 *)(v12 + 1);
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 36) |= 4u;
        if (v28 == (unsigned __int8 *)v11
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_55;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_18:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

void sub_24B4719B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_24B4719CC(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(*(void *)(v5 + 8) + 4 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  int v7 = *(_DWORD *)(v5 + 36);
  if ((v7 & 2) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), a2, a4);
    int v7 = *(_DWORD *)(v5 + 36);
  }
  if ((v7 & 4) != 0)
  {
    uint64_t v8 = *(unsigned int *)(v5 + 28);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  }
  return result;
}

uint64_t sub_24B471A78(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 36);
  if ((v2 & 0x1FE) == 0)
  {
    int v3 = 0;
    goto LABEL_14;
  }
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*(_DWORD *)(a1 + 36) & 4) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 4) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v5 >= 0x80) {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  int v7 = *(_DWORD *)(a1 + 16);
  if (v7 < 1)
  {
    int v9 = 0;
  }
  else
  {
    uint64_t v8 = 0;
    int v9 = 0;
    do
    {
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 8)
                                                                                             + 4 * v8);
      if ((v10 & 0x80000000) != 0)
      {
        int v11 = 10;
      }
      else if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
        int v7 = *(_DWORD *)(a1 + 16);
      }
      else
      {
        int v11 = 1;
      }
      v9 += v11;
      ++v8;
    }
    while (v8 < v7);
  }
  uint64_t result = (v9 + v3 + v7);
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

void sub_24B471B70(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85EA8, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B471418(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B471C14()
{
  return 1;
}

void *sub_24B471C1C@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.LtlInfo.LtlCurrentSrcCalibData");
}

void sub_24B471C2C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_24B471CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B471CF0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85750;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B471D4C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B471CF0(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B471D84()
{
}

uint64_t sub_24B471DD0(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_24B471DE4(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v4 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v15 = 0;
      int v10 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
        if (!result) {
          return result;
        }
        unsigned int v11 = v15;
        int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        int v12 = v10 + 1;
        *((void *)this + 1) = v12;
      }
      a1[2] = v11;
      a1[5] |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_24:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!result) {
            return result;
          }
          uint64_t v13 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          *int v4 = *v9;
          uint64_t v13 = (unsigned __int8 *)(v9 + 1);
          *((void *)this + 1) = v13;
        }
        a1[5] |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B471F90(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_24B471FFC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 20);
  if (v2)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v3 = 11;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
      else if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_17;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_17:
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_24B47209C(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85EC0, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B471C2C(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B472140()
{
  return 1;
}

void *sub_24B472148@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.LtlInfo.LtlRacPmicAdcPreCalData");
}

void sub_24B472158(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *(_DWORD *)(a2 + 56);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v7 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(_DWORD *)(a1 + 8) = v7;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(_DWORD *)(a1 + 12) = v8;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v9 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(_DWORD *)(a1 + 16) = v9;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 56) |= 8u;
  *(_DWORD *)(a1 + 20) = v10;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    int v12 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v12;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  int v11 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 56) |= 0x10u;
  *(_DWORD *)(a1 + 24) = v11;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  char v13 = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 56) |= 0x40u;
  *(unsigned char *)(a1 + 32) = v13;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 56) |= 0x80u;
    *(_DWORD *)(a1 + 36) = v5;
    int v4 = *(_DWORD *)(a2 + 56);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v14 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 56) |= 0x100u;
    *(_DWORD *)(a1 + 40) = v14;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        return;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v15 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 56) |= 0x200u;
  *(_DWORD *)(a1 + 44) = v15;
  if ((*(_DWORD *)(a2 + 56) & 0x400) == 0) {
    return;
  }
LABEL_17:
  int v6 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) |= 0x400u;
  *(_DWORD *)(a1 + 48) = v6;
}

void sub_24B472338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_24B472350(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE857C8;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B4723AC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B472350(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B4723E4()
{
}

uint64_t sub_24B472440(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 56);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(result + 36) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 32) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 40) = 0;
    *(_DWORD *)(result + 48) = 0;
  }
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_24B472474(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v4 = (unsigned int *)(a1 + 40);
  int v5 = (unsigned int *)(a1 + 44);
  int v6 = (unsigned int *)(a1 + 48);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v42 = 0;
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          unsigned int v12 = *v11;
          char v13 = v11 + 1;
          *((void *)this + 1) = v13;
LABEL_38:
          *(_DWORD *)(a1 + 8) = v12;
          *(_DWORD *)(a1 + 56) |= 1u;
          if ((unint64_t)v13 < v10 && *v13 == 16)
          {
            int v14 = v13 + 1;
            *((void *)this + 1) = v14;
            goto LABEL_41;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
        if (result)
        {
          unsigned int v12 = v42;
          char v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          goto LABEL_38;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_41:
        unsigned int v42 = 0;
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!result) {
            return result;
          }
          unsigned int v24 = v42;
          int v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v24 = *v14;
          int v25 = v14 + 1;
          *((void *)this + 1) = v25;
        }
        *(_DWORD *)(a1 + 12) = v24;
        *(_DWORD *)(a1 + 56) |= 2u;
        if ((unint64_t)v25 >= v10 || *v25 != 24) {
          continue;
        }
        int v15 = v25 + 1;
        *((void *)this + 1) = v15;
LABEL_49:
        unsigned int v42 = 0;
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!result) {
            return result;
          }
          unsigned int v26 = v42;
          unsigned int v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v26 = *v15;
          unsigned int v27 = v15 + 1;
          *((void *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 16) = v26;
        *(_DWORD *)(a1 + 56) |= 4u;
        if ((unint64_t)v27 >= v10 || *v27 != 32) {
          continue;
        }
        int v16 = v27 + 1;
        *((void *)this + 1) = v16;
LABEL_57:
        unsigned int v42 = 0;
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!result) {
            return result;
          }
          unsigned int v28 = v42;
          uint64_t v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v28 = *v16;
          uint64_t v29 = v16 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 20) = v28;
        *(_DWORD *)(a1 + 56) |= 8u;
        if ((unint64_t)v29 >= v10 || *v29 != 40) {
          continue;
        }
        uint64_t v17 = v29 + 1;
        *((void *)this + 1) = v17;
LABEL_65:
        unsigned int v42 = 0;
        if ((unint64_t)v17 >= v10 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!result) {
            return result;
          }
          unsigned int v30 = v42;
          unsigned int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v30 = *v17;
          unsigned int v31 = v17 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 24) = v30;
        *(_DWORD *)(a1 + 56) |= 0x10u;
        if ((unint64_t)v31 >= v10 || *v31 != 48) {
          continue;
        }
        int v18 = v31 + 1;
        *((void *)this + 1) = v18;
LABEL_73:
        unsigned int v42 = 0;
        if ((unint64_t)v18 >= v10 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!result) {
            return result;
          }
          unsigned int v32 = v42;
          int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v32 = *v18;
          int v33 = v18 + 1;
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 28) = v32;
        *(_DWORD *)(a1 + 56) |= 0x20u;
        if ((unint64_t)v33 >= v10 || *v33 != 56) {
          continue;
        }
        int v19 = v33 + 1;
        *((void *)this + 1) = v19;
LABEL_81:
        unsigned int v42 = 0;
        if ((unint64_t)v19 >= v10 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!result) {
            return result;
          }
          unsigned int v34 = v42;
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v34 = *v19;
          int v35 = v19 + 1;
          *((void *)this + 1) = v35;
        }
        *(unsigned char *)(a1 + 32) = v34 != 0;
        *(_DWORD *)(a1 + 56) |= 0x40u;
        if ((unint64_t)v35 >= v10 || *v35 != 64) {
          continue;
        }
        unsigned int v20 = v35 + 1;
        *((void *)this + 1) = v20;
LABEL_89:
        unsigned int v42 = 0;
        if ((unint64_t)v20 >= v10 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!result) {
            return result;
          }
          unsigned int v36 = v42;
          int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v36 = *v20;
          int v37 = v20 + 1;
          *((void *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 36) = v36;
        *(_DWORD *)(a1 + 56) |= 0x80u;
        if ((unint64_t)v37 >= v10 || *v37 != 72) {
          continue;
        }
        unint64_t v21 = v37 + 1;
        *((void *)this + 1) = v21;
LABEL_97:
        if ((unint64_t)v21 >= v10 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v4);
          if (!result) {
            return result;
          }
          unsigned int v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v4 = *v21;
          unsigned int v38 = v21 + 1;
          *((void *)this + 1) = v38;
        }
        *(_DWORD *)(a1 + 56) |= 0x100u;
        if ((unint64_t)v38 >= v10 || *v38 != 80) {
          continue;
        }
        unsigned int v22 = v38 + 1;
        *((void *)this + 1) = v22;
LABEL_105:
        if ((unint64_t)v22 >= v10 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v22;
          uint64_t v39 = v22 + 1;
          *((void *)this + 1) = v39;
        }
        *(_DWORD *)(a1 + 56) |= 0x200u;
        if ((unint64_t)v39 >= v10 || *v39 != 88) {
          continue;
        }
        int v23 = v39 + 1;
        *((void *)this + 1) = v23;
LABEL_113:
        if ((unint64_t)v23 >= v10 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v40 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v23;
          unsigned int v40 = (unsigned __int8 *)(v23 + 1);
          *((void *)this + 1) = v40;
        }
        *(_DWORD *)(a1 + 56) |= 0x400u;
        if (v40 != (unsigned __int8 *)v10 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_49;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_57;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_65;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_73;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_81;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v20 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_89;
      case 9u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_97;
      case 0xAu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_105;
      case 0xBu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_113;
      default:
        int v9 = TagFallback & 7;
LABEL_32:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_24B472AAC(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 36), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 44), a2, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x400) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x200) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return result;
  }
LABEL_23:
  uint64_t v7 = *(unsigned int *)(v5 + 48);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v7, a2, a4);
}

uint64_t sub_24B472C18(unsigned int *a1)
{
  unsigned int v2 = a1[14];
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_57;
  }
  if ((v2 & 1) == 0)
  {
    LODWORD(v3) = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    unsigned int v2 = a1[14];
  }
  else
  {
    int v5 = 1;
  }
  LODWORD(v3) = v5 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_12:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 10;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      unsigned int v2 = a1[14];
    }
    else
    {
      int v7 = 1;
    }
    LODWORD(v3) = v3 + v7 + 1;
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 10;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      unsigned int v2 = a1[14];
    }
    else
    {
      int v9 = 1;
    }
    LODWORD(v3) = v3 + v9 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_35;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if ((v10 & 0x80000000) != 0)
  {
    int v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    unsigned int v2 = a1[14];
  }
  else
  {
    int v11 = 2;
  }
  LODWORD(v3) = v11 + v3;
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0) {
      goto LABEL_47;
    }
    goto LABEL_41;
  }
LABEL_35:
  unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    unsigned int v2 = a1[14];
  }
  else
  {
    int v13 = 2;
  }
  LODWORD(v3) = v13 + v3;
  if ((v2 & 0x20) != 0)
  {
LABEL_41:
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
    if ((v14 & 0x80000000) != 0)
    {
      int v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
      unsigned int v2 = a1[14];
    }
    else
    {
      int v15 = 2;
    }
    LODWORD(v3) = v15 + v3;
  }
LABEL_47:
  if ((v2 & 0x40) != 0) {
    uint64_t v3 = (v3 + 2);
  }
  else {
    uint64_t v3 = v3;
  }
  if ((v2 & 0x80) != 0)
  {
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      unsigned int v2 = a1[14];
    }
    else
    {
      int v17 = 2;
    }
    uint64_t v3 = (v17 + v3);
  }
LABEL_57:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_74;
  }
  if ((v2 & 0x100) != 0)
  {
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      unsigned int v2 = a1[14];
    }
    else
    {
      int v19 = 2;
    }
    uint64_t v3 = (v19 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_60:
      if ((v2 & 0x400) == 0) {
        goto LABEL_74;
      }
      goto LABEL_70;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_60;
  }
  unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v20 >= 0x80)
  {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    unsigned int v2 = a1[14];
  }
  else
  {
    int v21 = 2;
  }
  uint64_t v3 = (v21 + v3);
  if ((v2 & 0x400) != 0)
  {
LABEL_70:
    unsigned int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
    if (v22 >= 0x80) {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    }
    else {
      int v23 = 2;
    }
    uint64_t v3 = (v23 + v3);
  }
LABEL_74:
  a1[13] = v3;
  return v3;
}

void sub_24B472E6C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85ED8, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B472158(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B472F10()
{
  return 1;
}

void *sub_24B472F18@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.LtlInfo.LtlInitialParams");
}

void sub_24B472F28(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85840;
  sub_24B45829C();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_26B17C378 != a1)
  {
    uint64_t v2 = *((void *)a1 + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)a1 + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)a1 + 4);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)a1 + 5);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B473044(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B472F28(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B47307C()
{
}

uint64_t sub_24B4730D8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)this + 1);
    if ((unint64_t)v4 < *((void *)this + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        unsigned int v46 = 0;
        int v8 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
          if (!result) {
            return result;
          }
          unsigned int v9 = v46;
          unint64_t v10 = (unsigned char *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v9 = *v8;
          unint64_t v10 = v8 + 1;
          *((void *)this + 1) = v10;
        }
        *(unsigned char *)(a1 + 8) = v9 != 0;
        *(_DWORD *)(a1 + 56) |= 1u;
        if ((unint64_t)v10 < v7 && *v10 == 16)
        {
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
          goto LABEL_31;
        }
        continue;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
LABEL_31:
        unsigned int v46 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
          if (!result) {
            return result;
          }
          unsigned int v14 = v46;
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v7 = *((void *)this + 2);
        }
        else
        {
          unsigned int v14 = *v11;
          int v15 = v11 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 12) = v14;
        *(_DWORD *)(a1 + 56) |= 2u;
        if ((unint64_t)v15 >= v7 || *v15 != 24) {
          continue;
        }
        unsigned int v12 = v15 + 1;
        *((void *)this + 1) = v12;
LABEL_39:
        unsigned int v46 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46);
          if (!result) {
            return result;
          }
          unsigned int v16 = v46;
        }
        else
        {
          unsigned int v16 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        if (v16 <= 4)
        {
          *(_DWORD *)(a1 + 56) |= 4u;
          *(_DWORD *)(a1 + 48) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 34) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_49:
        *(_DWORD *)(a1 + 56) |= 8u;
        uint64_t v18 = *(void *)(a1 + 16);
        if (!v18) {
          operator new();
        }
        unsigned int v46 = 0;
        int v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0; {
        }
          }
        else
        {
          unsigned int v46 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B472474(v18, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v22 = *((_DWORD *)this + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)this + 14) = v24;
        }
        int v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 42) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_63:
        *(_DWORD *)(a1 + 56) |= 0x10u;
        uint64_t v26 = *(void *)(a1 + 24);
        if (!v26) {
          operator new();
        }
        unsigned int v46 = 0;
        unsigned int v27 = (char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0; {
        }
          }
        else
        {
          unsigned int v46 = *v27;
          *((void *)this + 1) = v27 + 1;
        }
        int v28 = *((_DWORD *)this + 14);
        int v29 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v28 + 1;
        if (v28 >= v29) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B470AEC(v26, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v30 = *((_DWORD *)this + 14);
        BOOL v23 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v23) {
          *((_DWORD *)this + 14) = v31;
        }
        unsigned int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 50) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_77:
        *(_DWORD *)(a1 + 56) |= 0x20u;
        uint64_t v33 = *(void *)(a1 + 32);
        if (!v33) {
          operator new();
        }
        unsigned int v46 = 0;
        unsigned int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0; {
        }
          }
        else
        {
          unsigned int v46 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B471644(v33, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v37 = *((_DWORD *)this + 14);
        BOOL v23 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v23) {
          *((_DWORD *)this + 14) = v38;
        }
        uint64_t v39 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 != 58) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 56) |= 0x40u;
        unsigned int v40 = *(_DWORD **)(a1 + 40);
        if (!v40) {
          operator new();
        }
        unsigned int v46 = 0;
        uint64_t v41 = (char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0; {
        }
          }
        else
        {
          unsigned int v46 = *v41;
          *((void *)this + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)this + 14);
        int v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 >= v43) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B471DE4(v40, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v44 = *((_DWORD *)this + 14);
        BOOL v23 = __OFSUB__(v44, 1);
        int v45 = v44 - 1;
        if (v45 < 0 == v23) {
          *((_DWORD *)this + 14) = v45;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
        goto LABEL_39;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_49;
        }
        goto LABEL_23;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_63;
        }
        goto LABEL_23;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_77;
        }
        goto LABEL_23;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_23;
        }
        goto LABEL_91;
      default:
        int v6 = TagFallback & 7;
LABEL_23:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_24B4737CC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7)
  {
    sub_24B45829C();
    uint64_t v7 = *(void *)(qword_26B17C378 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8)
  {
    sub_24B45829C();
    uint64_t v8 = *(void *)(qword_26B17C378 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9)
  {
    sub_24B45829C();
    uint64_t v9 = *(void *)(qword_26B17C378 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x40) != 0)
  {
LABEL_21:
    uint64_t v10 = *(void *)(v5 + 40);
    if (!v10)
    {
      sub_24B45829C();
      uint64_t v10 = *(void *)(qword_26B17C378 + 40);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
  }
  return result;
}

uint64_t sub_24B473918(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 56);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_46;
  }
  uint64_t v3 = 2 * (v2 & 1u);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v4 & 0x80000000) != 0)
    {
      int v5 = 11;
    }
    else if (v4 >= 0x80)
    {
      int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      int v5 = 2;
    }
    uint64_t v3 = (v5 + v3);
    if ((v2 & 4) == 0)
    {
LABEL_4:
      if ((v2 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_22;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_4;
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
    int v2 = *(_DWORD *)(a1 + 56);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v3 = (v7 + v3);
  if ((v2 & 8) == 0)
  {
LABEL_5:
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_22:
  uint64_t v8 = *(unsigned int **)(a1 + 16);
  if (!v8)
  {
    sub_24B45829C();
    uint64_t v8 = *(unsigned int **)(qword_26B17C378 + 16);
  }
  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B472C18(v8);
  int v10 = (int)v9;
  if (v9 >= 0x80) {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
  }
  else {
    int v11 = 1;
  }
  uint64_t v3 = (v3 + v10 + v11 + 1);
  int v2 = *(_DWORD *)(a1 + 56);
  if ((v2 & 0x10) == 0)
  {
LABEL_6:
    if ((v2 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_34;
  }
LABEL_28:
  uint64_t v12 = *(void *)(a1 + 24);
  if (!v12)
  {
    sub_24B45829C();
    uint64_t v12 = *(void *)(qword_26B17C378 + 24);
  }
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B47120C(v12);
  int v14 = (int)v13;
  if (v13 >= 0x80) {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  }
  else {
    int v15 = 1;
  }
  uint64_t v3 = (v3 + v14 + v15 + 1);
  int v2 = *(_DWORD *)(a1 + 56);
  if ((v2 & 0x20) == 0)
  {
LABEL_7:
    if ((v2 & 0x40) == 0) {
      goto LABEL_46;
    }
    goto LABEL_40;
  }
LABEL_34:
  uint64_t v16 = *(void *)(a1 + 32);
  if (!v16)
  {
    sub_24B45829C();
    uint64_t v16 = *(void *)(qword_26B17C378 + 32);
  }
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B471A78(v16);
  int v18 = (int)v17;
  if (v17 >= 0x80) {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
  }
  else {
    int v19 = 1;
  }
  uint64_t v3 = (v3 + v18 + v19 + 1);
  if ((*(_DWORD *)(a1 + 56) & 0x40) != 0)
  {
LABEL_40:
    uint64_t v20 = *(void *)(a1 + 40);
    if (!v20)
    {
      sub_24B45829C();
      uint64_t v20 = *(void *)(qword_26B17C378 + 40);
    }
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B471FFC(v20);
    int v22 = (int)v21;
    if (v21 >= 0x80) {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
    }
    else {
      int v23 = 1;
    }
    uint64_t v3 = (v3 + v22 + v23 + 1);
  }
LABEL_46:
  *(_DWORD *)(a1 + 52) = v3;
  return v3;
}

void sub_24B473B0C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85EF0, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B4618F4(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B473BB0()
{
  return 1;
}

void *sub_24B473BB8@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.LtlInfo");
}

void sub_24B473BC8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE858B8;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B473C24(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B473BC8(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B473C5C()
{
}

uint64_t sub_24B473CA8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    while (1)
    {
      uint64_t v4 = (char *)*((void *)this + 1);
      if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v4 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v9 = 0;
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v9);
        if (!result) {
          return result;
        }
        unsigned int v7 = v9;
      }
      else
      {
        unsigned int v7 = *v6;
        *((void *)this + 1) = v6 + 1;
      }
      if (v7 <= 6)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 8) = v7;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_24B473DC8(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_24B473DE4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v3 & 0x80000000) != 0)
    {
      uint64_t result = 11;
    }
    else if (v3 >= 0x80)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      uint64_t result = 2;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_24B473E40(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85F08, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B461D20(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B473EE4()
{
  return 1;
}

void *sub_24B473EEC@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.CntinStatusMessage");
}

void sub_24B473EFC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85930;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B473F58(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B473EFC(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B473F90()
{
}

uint64_t sub_24B473FE0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    while (1)
    {
      uint64_t v4 = (char *)*((void *)this + 1);
      if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v4 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v11 = 0;
      unsigned int v7 = (char *)*((void *)this + 1);
      unint64_t v6 = *((void *)this + 2);
      if ((unint64_t)v7 >= v6 || *v7 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!result) {
          return result;
        }
        unsigned int v8 = v11;
        unsigned int v9 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v6 = *((void *)this + 2);
      }
      else
      {
        unsigned int v8 = *v7;
        unsigned int v9 = (unsigned __int8 *)(v7 + 1);
        *((void *)this + 1) = v9;
      }
      *(unsigned char *)(a1 + 8) = v8 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v9 == (unsigned __int8 *)v6 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_24B474100(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_24B47411C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1u);
  }
  else {
    uint64_t v1 = 0;
  }
  *(_DWORD *)(a1 + 12) = v1;
  return v1;
}

void sub_24B474138(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85F20, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B466F48(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B4741DC()
{
  return 1;
}

void *sub_24B4741E4@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.CntinClockControl");
}

void sub_24B4741F4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE859A8;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B474250(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B4741F4(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B474288()
{
}

uint64_t sub_24B4742D8(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)this + 1);
        if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v21 = 0;
        int v10 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v10 >= v8 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v11 = v21;
          uint64_t v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v11 = *v10;
          uint64_t v12 = v10 + 1;
          *((void *)this + 1) = v12;
        }
        a1[2] = v11;
        a1[6] |= 1u;
        if ((unint64_t)v12 < v8 && *v12 == 16)
        {
          int v13 = v12 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_26;
        }
      }
      if (v6 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_18;
      }
      int v13 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
LABEL_26:
      unsigned int v20 = 0;
      if ((unint64_t)v13 >= v8 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
        if (!result) {
          return result;
        }
        unsigned int v14 = v20;
        int v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        unsigned int v14 = *v13;
        int v15 = v13 + 1;
        *((void *)this + 1) = v15;
      }
      a1[3] = v14;
      a1[6] |= 2u;
      if ((unint64_t)v15 < v8 && *v15 == 24)
      {
        unsigned int v9 = v15 + 1;
        *((void *)this + 1) = v9;
LABEL_34:
        unsigned int v19 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v19);
          if (!result) {
            return result;
          }
          unsigned int v16 = v19;
          int v17 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v9;
          int v17 = (unsigned __int8 *)(v9 + 1);
          *((void *)this + 1) = v17;
        }
        a1[4] = v16;
        a1[6] |= 4u;
        if (v17 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v6 == 3)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_18:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

unsigned int *sub_24B474500(unsigned int *result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  unsigned int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  unsigned int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = v5[4];
  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_24B47458C(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_26;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v4 >= 0x80)
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *(_DWORD *)(a1 + 24);
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v6 = 2;
  }
  uint64_t v3 = (v6 + v3);
LABEL_19:
  if ((v2 & 4) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v3 = (v8 + v3);
  }
LABEL_26:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_24B47466C(_DWORD *a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85F38, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B466FEC(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B474710()
{
  return 1;
}

void *sub_24B474718@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.Exception");
}

void sub_24B474728(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85A20;
  uint64_t v2 = *((void *)a1 + 3);
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x24C5D2700](v2, 0x1012C40EC159624);
  }
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B4747C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B474728(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B4747FC()
{
}

uint64_t sub_24B474854(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  uint64_t v4 = MEMORY[0x263F8C740];
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 1) {
            goto LABEL_23;
          }
          unint64_t v16 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 8) = v16;
          *(_DWORD *)(a1 + 36) |= 1u;
          unsigned int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 < v10 && *v11 == 16)
          {
            uint64_t v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_19;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_19:
        unint64_t v16 = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unint64_t v13 = v16;
          unsigned int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unint64_t v13 = *v12;
          unsigned int v14 = v12 + 1;
          *((void *)this + 1) = v14;
        }
        *(void *)(a1 + 16) = v13;
        int v9 = *(_DWORD *)(a1 + 36) | 2;
        *(_DWORD *)(a1 + 36) = v9;
        if ((unint64_t)v14 < v10 && *v14 == 26)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_31;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_23;
      }
      int v9 = *(_DWORD *)(a1 + 36);
LABEL_31:
      *(_DWORD *)(a1 + 36) = v9 | 4;
      if (*(void *)(a1 + 24) == v4) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_23:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t sub_24B474A70(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), a2, a4);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
}

uint64_t sub_24B474AFC(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 36);
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16))
         + 1;
      int v2 = *(_DWORD *)(a1 + 36);
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 24);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      char v6 = v5;
      uint64_t v7 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
      }
      else {
        unint64_t v8 = v7;
      }
      if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
        int v5 = *(unsigned __int8 *)(v4 + 23);
        uint64_t v7 = *(void *)(v4 + 8);
        char v6 = *(unsigned char *)(v4 + 23);
      }
      else
      {
        int v9 = 1;
      }
      if (v6 < 0) {
        int v5 = v7;
      }
      uint64_t v3 = (v3 + v9 + v5 + 1);
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

void sub_24B474BB4(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85F50, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B4670D8(a1, (uint64_t)lpsrc);
}

uint64_t sub_24B474C58()
{
  return 1;
}

void *sub_24B474C60@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.AskBasebandReset");
}

void sub_24B474C70(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85A98;
  uint64_t v2 = *((void *)a1 + 2);
  if (v2 != MEMORY[0x263F8C740] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x24C5D2700](v2, 0x1012C40EC159624);
  }
  sub_24B45829C();
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_26B17C3C0 != a1)
  {
    uint64_t v4 = *((void *)a1 + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)a1 + 4);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)a1 + 5);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B474DA0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B474C70(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B474DD8()
{
}

uint64_t sub_24B474E34(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 52);
  if (v2)
  {
    *(void *)(result + 8) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3 != MEMORY[0x263F8C740])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    int v4 = *(_DWORD *)(result + 52);
    if ((v4 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result)
      {
        uint64_t result = sub_24B45A564(result);
        int v4 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v4 & 8) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 28))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
        int v4 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v4 & 0x10) != 0)
    {
      uint64_t result = *(void *)(v1 + 40);
      if (result) {
        uint64_t result = sub_24B4639B0(result);
      }
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_24B474EE4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  int v4 = (unint64_t *)(a1 + 8);
  uint64_t v5 = MEMORY[0x263F8C740];
  while (1)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v4);
          if (!result) {
            return result;
          }
          unsigned int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          *int v4 = *v10;
          unsigned int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        int v12 = *(_DWORD *)(a1 + 52) | 1;
        *(_DWORD *)(a1 + 52) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_28;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
        int v12 = *(_DWORD *)(a1 + 52);
LABEL_28:
        *(_DWORD *)(a1 + 52) = v12 | 2;
        if (*(void *)(a1 + 16) == v5) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 42) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_34:
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v15 = *(void *)(a1 + 24);
        if (!v15) {
          operator new();
        }
        unsigned int v36 = 0;
        unint64_t v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0; {
        }
          }
        else
        {
          unsigned int v36 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)this + 14);
        int v18 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B45B04C(v15, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 50) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_48:
        *(_DWORD *)(a1 + 52) |= 8u;
        int v23 = *(_DWORD **)(a1 + 32);
        if (!v23) {
          operator new();
        }
        unsigned int v37 = 0;
        int v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
        }
          }
        else
        {
          unsigned int v37 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B4621BC(v23, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v27 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v27, 1);
        int v28 = v27 - 1;
        if (v28 < 0 == v20) {
          *((_DWORD *)this + 14) = v28;
        }
        int v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 58) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_62:
        *(_DWORD *)(a1 + 52) |= 0x10u;
        uint64_t v30 = *(void *)(a1 + 40);
        if (!v30) {
          operator new();
        }
        unsigned int v38 = 0;
        int v31 = (char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0; {
        }
          }
        else
        {
          unsigned int v38 = *v31;
          *((void *)this + 1) = v31 + 1;
        }
        int v32 = *((_DWORD *)this + 14);
        int v33 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v32 + 1;
        if (v32 >= v33) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
        if (!sub_24B463DBC(v30, this) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
        int v34 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v34, 1);
        int v35 = v34 - 1;
        if (v35 < 0 == v20) {
          *((_DWORD *)this + 14) = v35;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_34;
        }
        goto LABEL_20;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_48;
        }
        goto LABEL_20;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
        goto LABEL_62;
      default:
        int v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_24B4754B8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7)
  {
    sub_24B45829C();
    uint64_t v7 = *(void *)(qword_26B17C3C0 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v8 = *(void *)(v5 + 32);
  if (!v8)
  {
    sub_24B45829C();
    uint64_t v8 = *(void *)(qword_26B17C3C0 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x10) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(v5 + 40);
    if (!v9)
    {
      sub_24B45829C();
      uint64_t v9 = *(void *)(qword_26B17C3C0 + 40);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v9, a2, a4);
  }
  return result;
}

uint64_t sub_24B4755B8(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_38;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8))
       + 1;
    int v2 = *(_DWORD *)(a1 + 52);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *(_DWORD *)(a1 + 52);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v3 + v9 + v5 + 1);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10)
    {
      sub_24B45829C();
      uint64_t v10 = *(void *)(qword_26B17C3C0 + 24);
    }
    unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B45F0A0(v10);
    int v12 = (int)v11;
    if (v11 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    }
    else {
      int v13 = 1;
    }
    uint64_t v3 = (v3 + v12 + v13 + 1);
    int v2 = *(_DWORD *)(a1 + 52);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_38;
      }
      goto LABEL_32;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v14 = *(void *)(a1 + 32);
  if (!v14)
  {
    sub_24B45829C();
    uint64_t v14 = *(void *)(qword_26B17C3C0 + 32);
  }
  uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B462488(v14);
  int v16 = (int)v15;
  if (v15 >= 0x80) {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
  }
  else {
    int v17 = 1;
  }
  uint64_t v3 = (v3 + v16 + v17 + 1);
  if ((*(_DWORD *)(a1 + 52) & 0x10) != 0)
  {
LABEL_32:
    uint64_t v18 = *(void *)(a1 + 40);
    if (!v18)
    {
      sub_24B45829C();
      uint64_t v18 = *(void *)(qword_26B17C3C0 + 40);
    }
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_24B466244(v18);
    int v20 = (int)v19;
    if (v19 >= 0x80) {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
    }
    else {
      int v21 = 1;
    }
    uint64_t v3 = (v3 + v20 + v21 + 1);
  }
LABEL_38:
  *(_DWORD *)(a1 + 48) = v3;
  return v3;
}

void sub_24B47575C(uint64_t a1, void *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85F68, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  if (lpsrc == (void *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *((unsigned char *)lpsrc + 52);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)lpsrc + 52))
  {
    uint64_t v5 = *((void *)lpsrc + 1);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(void *)(a1 + 8) = v5;
    int v4 = *((_DWORD *)lpsrc + 13);
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0) {
        goto LABEL_8;
      }
LABEL_15:
      *(_DWORD *)(a1 + 52) |= 4u;
      uint64_t v8 = *(void *)(a1 + 24);
      if (!v8) {
        operator new();
      }
      uint64_t v9 = *((void *)lpsrc + 3);
      if (!v9)
      {
        sub_24B45829C();
        uint64_t v9 = *(void *)(qword_26B17C3C0 + 24);
      }
      sub_24B458598(v8, v9);
      int v4 = *((_DWORD *)lpsrc + 13);
      if ((v4 & 8) == 0)
      {
LABEL_9:
        if ((v4 & 0x10) == 0) {
          return;
        }
        goto LABEL_25;
      }
      goto LABEL_20;
    }
  }
  else if ((*((unsigned char *)lpsrc + 52) & 2) == 0)
  {
    goto LABEL_7;
  }
  char v6 = (const std::string *)*((void *)lpsrc + 2);
  *(_DWORD *)(a1 + 52) |= 2u;
  uint64_t v7 = *(std::string **)(a1 + 16);
  if (v7 == (std::string *)MEMORY[0x263F8C740]) {
    operator new();
  }
  std::string::operator=(v7, v6);
  int v4 = *((_DWORD *)lpsrc + 13);
  if ((v4 & 4) != 0) {
    goto LABEL_15;
  }
LABEL_8:
  if ((v4 & 8) == 0) {
    goto LABEL_9;
  }
LABEL_20:
  *(_DWORD *)(a1 + 52) |= 8u;
  uint64_t v10 = *(void *)(a1 + 32);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *((void *)lpsrc + 4);
  if (!v11)
  {
    sub_24B45829C();
    uint64_t v11 = *(void *)(qword_26B17C3C0 + 32);
  }
  sub_24B461F8C(v10, v11);
  if ((*((_DWORD *)lpsrc + 13) & 0x10) != 0)
  {
LABEL_25:
    *(_DWORD *)(a1 + 52) |= 0x10u;
    uint64_t v12 = *(void *)(a1 + 40);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *((void *)lpsrc + 5);
    if (!v13)
    {
      sub_24B45829C();
      uint64_t v13 = *(void *)(qword_26B17C3C0 + 40);
    }
    sub_24B46269C(v12, v13);
  }
}

void sub_24B475AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_24B475AE8()
{
  return 1;
}

void *sub_24B475AF0@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.LogEntry");
}

void sub_24B475B00(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = &unk_26FE85B10;
  sub_24B45829C();
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_24B475B5C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_24B475B00(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B475B94()
{
}

uint64_t sub_24B475BE8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v4 = (char *)*((void *)this + 1);
        if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v21 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v10 >= v8 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v11 = v21;
          uint64_t v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v11 = *v10;
          uint64_t v12 = v10 + 1;
          *((void *)this + 1) = v12;
        }
        *(unsigned char *)(a1 + 8) = v11 != 0;
        *(_DWORD *)(a1 + 16) |= 1u;
        if ((unint64_t)v12 < v8 && *v12 == 16)
        {
          uint64_t v13 = v12 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_26;
        }
      }
      if (v6 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_18;
      }
      uint64_t v13 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
LABEL_26:
      unsigned int v20 = 0;
      if ((unint64_t)v13 >= v8 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
        if (!result) {
          return result;
        }
        unsigned int v14 = v20;
        uint64_t v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        unsigned int v14 = *v13;
        uint64_t v15 = v13 + 1;
        *((void *)this + 1) = v15;
      }
      *(unsigned char *)(a1 + 9) = v14 != 0;
      *(_DWORD *)(a1 + 16) |= 2u;
      if ((unint64_t)v15 < v8 && *v15 == 24)
      {
        uint64_t v9 = v15 + 1;
        *((void *)this + 1) = v9;
LABEL_34:
        unsigned int v19 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v19);
          if (!result) {
            return result;
          }
          unsigned int v16 = v19;
          int v17 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v9;
          int v17 = (unsigned __int8 *)(v9 + 1);
          *((void *)this + 1) = v17;
        }
        *(unsigned char *)(a1 + 10) = v16 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if (v17 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v6 == 3)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_18:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_24B475E28(uint64_t result, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
    if ((*(_DWORD *)(v5 + 16) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 10);
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_24B475EB4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_24B475EE8(uint64_t a1, unsigned char *lpsrc)
{
  if (!__dynamic_cast(lpsrc, MEMORY[0x263F8C758], (const struct __class_type_info *)&unk_26FE85F80, 0)) {
    __assert_rtn("down_cast", "common.h", 348, "f == NULL || dynamic_cast<To>(f) != NULL");
  }
  sub_24B461C34(a1, lpsrc);
}

uint64_t sub_24B475F8C()
{
  return 1;
}

void *sub_24B475F94@<X0>(void *a1@<X8>)
{
  return sub_24B3E3128(a1, "CoreGem.proto.gpsd.StartContext");
}

uint64_t sub_24B475FA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 384);
}

uint64_t sub_24B475FAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_24B475FB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 212);
}

uint64_t sub_24B475FBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_24B475FC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B475FCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B475FD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B475FDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B475FE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B475FEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B475FF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B475FFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B476004(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B47600C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B476014(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B47601C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B476024(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_24B47602C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_24B476034(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B47603C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_24B476044(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_24B47604C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B476054(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B47605C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B476064(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B47606C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_24B476074(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_24B47607C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B476084(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B47608C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B476094(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_24B47609C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_24B4760A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_24B4760AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_24B4760B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B4760BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_24B4760C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_24B4760CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_24B4760D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_24B4760DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_24B4760E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_24B4760EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_24B4760F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_24B4760FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_24B476104(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x24C5D26D0);
  }
  return result;
}

unint64_t sub_24B4761A8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26B17C4A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26B17C4A0))
  {
    sub_24B476248();
    __cxa_guard_release(&qword_26B17C4A0);
  }
  uint64_t v0 = mach_continuous_time();
  char v1 = 8;
  if (!byte_2697C5538) {
    char v1 = 0;
  }
  return ((v0 >> v1) * qword_26B17C5A0 / qword_26B17C5A8) << v1;
}

void sub_24B476230(_Unwind_Exception *a1)
{
}

void sub_24B476248()
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  if (!qword_26B17C5A0)
  {
    mach_timebase_info(&info);
    if (info.denom)
    {
      uint32_t denom = info.denom;
      uint32_t numer = info.numer;
      do
      {
        uint32_t v2 = denom;
        uint32_t denom = numer % denom;
        uint32_t numer = v2;
      }
      while (denom);
    }
    else
    {
      uint32_t v2 = info.numer;
      if (!info.numer)
      {
        unint64_t v8 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "gcd result is zero", buf, 2u);
          unint64_t v8 = qword_26B17C488;
        }
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 136446722;
          uint64_t v12 = "/Library/Caches/com.apple.xbs/Sources/CoreGEM/Sources/Util/GpsdUtil.mm";
          __int16 v13 = 1026;
          *(_DWORD *)unsigned int v14 = 68;
          *(_WORD *)&v14[4] = 2082;
          *(void *)&v14[6] = "getTickToNsInfo";
          _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
        }
        __assert_rtn("getTickToNsInfo", "GpsdUtil.mm", 68, "false && \"gcd result is zero\"");
      }
    }
    qword_26B17C5A8 = info.denom / v2;
    qword_26B17C5A0 = info.numer / v2;
    if (v2 > info.denom)
    {
      uint64_t v7 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "info.denominator is zero", buf, 2u);
        uint64_t v7 = qword_26B17C488;
      }
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446722;
        uint64_t v12 = "/Library/Caches/com.apple.xbs/Sources/CoreGEM/Sources/Util/GpsdUtil.mm";
        __int16 v13 = 1026;
        *(_DWORD *)unsigned int v14 = 71;
        *(_WORD *)&v14[4] = 2082;
        *(void *)&v14[6] = "getTickToNsInfo";
        _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
      }
      __assert_rtn("getTickToNsInfo", "GpsdUtil.mm", 71, "false && \"info.denominator is zero\"");
    }
    if (v2 > info.numer)
    {
      uint64_t v9 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_ERROR, "info.numerator is zero", buf, 2u);
        uint64_t v9 = qword_26B17C488;
      }
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446722;
        uint64_t v12 = "/Library/Caches/com.apple.xbs/Sources/CoreGEM/Sources/Util/GpsdUtil.mm";
        __int16 v13 = 1026;
        *(_DWORD *)unsigned int v14 = 72;
        *(_WORD *)&v14[4] = 2082;
        *(void *)&v14[6] = "getTickToNsInfo";
        _os_log_error_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", buf, 0x1Cu);
      }
      __assert_rtn("getTickToNsInfo", "GpsdUtil.mm", 72, "false && \"info.numerator is zero\"");
    }
    unint64_t v3 = info.numer / v2 * (unint64_t)(info.denom / v2);
    if (v3 >= 0x17D)
    {
      byte_2697C5538 = 1;
      uint64_t v4 = qword_26B17C488;
      if (v3 >> 10 > 0x5E)
      {
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "#gpsdUtil,Cannot protect against overflow in tick to ns", buf, 2u);
        }
      }
      else if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_INFO, "#gpsdUtil,Reducing tick to ns precision to avoid overflow risk", buf, 2u);
      }
    }
    uint64_t v5 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      if (byte_2697C5538) {
        int v6 = 8;
      }
      else {
        int v6 = 0;
      }
      *(_DWORD *)buf = 134218496;
      uint64_t v12 = (const char *)qword_26B17C5A0;
      __int16 v13 = 2048;
      *(void *)unsigned int v14 = qword_26B17C5A8;
      *(_WORD *)&v14[8] = 1024;
      *(_DWORD *)&v14[10] = v6;
      _os_log_debug_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_DEBUG, "#gpsdUtil,Tick to ns info,Numerator,%llu,Denominator,%llu,PrecisionReductionBits,%d", buf, 0x1Cu);
    }
  }
}

double sub_24B4766A4()
{
  if (!qword_26B17C5B0) {
    qword_26B17C5B0 = sub_24B4761A8();
  }
  return (double)(sub_24B4761A8() - qword_26B17C5B0) * 0.000000001;
}

void sub_24B4766F0(unsigned int __val@<W0>, uint64_t a2@<X8>)
{
  v9[2] = *MEMORY[0x263EF8340];
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  if (__val >= 0x1B || ((0x7FFFE3Fu >> __val) & 1) == 0) {
    goto LABEL_6;
  }
  MEMORY[0x24C5D2510](a2, off_265293B98[__val]);
  uint64_t v4 = *(unsigned __int8 *)(a2 + 23);
  if (*(char *)(a2 + 23) < 0) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if (!v4)
  {
LABEL_6:
    std::to_string(&__p, __val);
    uint64_t v5 = std::string::insert(&__p, 0, "unknown_");
    std::string::size_type v6 = v5->__r_.__value_.__r.__words[0];
    v9[0] = v5->__r_.__value_.__l.__size_;
    *(void *)((char *)v9 + 7) = *(std::string::size_type *)((char *)&v5->__r_.__value_.__r.__words[1] + 7);
    char v7 = HIBYTE(v5->__r_.__value_.__r.__words[2]);
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    *(void *)a2 = v6;
    *(void *)(a2 + 8) = v9[0];
    *(void *)(a2 + 15) = *(void *)((char *)v9 + 7);
    *(unsigned char *)(a2 + 23) = v7;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_24B476818(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (*(char *)(v14 + 23) < 0) {
    operator delete(*(void **)v14);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B476850(int __val@<W0>, uint64_t a2@<X8>)
{
  v10[2] = *MEMORY[0x263EF8340];
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  uint64_t v4 = "START";
  switch(__val)
  {
    case 0:
      uint64_t v4 = "PROTO_DEFAULT";
      goto LABEL_62;
    case 1:
      goto LABEL_62;
    case 2:
      uint64_t v4 = "STOP";
      goto LABEL_62;
    case 3:
      uint64_t v4 = "RESET";
      goto LABEL_62;
    case 4:
      uint64_t v4 = "CLEAR";
      goto LABEL_62;
    case 5:
      uint64_t v4 = "DELETE_GNSS_DATA";
      goto LABEL_62;
    case 6:
      uint64_t v4 = "SET_PVTM_REPORT";
      goto LABEL_62;
    case 7:
      uint64_t v4 = "SET_NMEA_HANDLER";
      goto LABEL_62;
    case 8:
      uint64_t v4 = "INJECT_ASSISTANCE_POSITION";
      goto LABEL_62;
    case 9:
      uint64_t v4 = "INJECT_ASSISTANCE_TIME";
      goto LABEL_62;
    case 10:
      uint64_t v4 = "INJECT_ASSISTANCE_FILE";
      goto LABEL_62;
    case 11:
      uint64_t v4 = "INJECT_RTI_FILE";
      goto LABEL_62;
    case 12:
      uint64_t v4 = "INJECT_SVID_BLOCKLIST";
      goto LABEL_62;
    case 13:
      uint64_t v4 = "SET_ASSISTANCE_PRESSURE";
      goto LABEL_62;
    case 14:
      uint64_t v4 = "SET_ASSISTANCE_ACCEL";
      goto LABEL_62;
    case 15:
      uint64_t v4 = "SET_ASSISTANCE_GYRO";
      goto LABEL_62;
    case 16:
      uint64_t v4 = "SET_ASSISTANCE_DEM";
      goto LABEL_62;
    case 17:
      uint64_t v4 = "SET_ASSISTANCE_MAP_VECTOR";
      goto LABEL_62;
    case 18:
      uint64_t v4 = "SET_ASSISTANCE_MOTION_ACTIVITY_CONTEXT";
      goto LABEL_62;
    case 19:
      uint64_t v4 = "SET_ASSISTANCE_MOUNT_STATE";
      goto LABEL_62;
    case 20:
      uint64_t v4 = "SET_ASSISTANCE_SIGNAL_ENVIRONMENT";
      goto LABEL_62;
    case 21:
      uint64_t v4 = "SET_ASSISTANCE_SPEED_CONSTRAINT";
      goto LABEL_62;
    case 22:
      uint64_t v4 = "SET_ASSISTANCE_ALONG_TRACK_VELOCITY";
      goto LABEL_62;
    case 23:
      uint64_t v4 = "SET_POWER_REPORT";
      goto LABEL_62;
    case 24:
      uint64_t v4 = "SET_CONFIG_SIMULATOR_MODE";
      goto LABEL_62;
    case 25:
      uint64_t v4 = "SET_CONFIG_ENABLE_GNSS_CONSTELLATIONS";
      goto LABEL_62;
    case 26:
      uint64_t v4 = "SET_CONFIG_DUTY_CYCLING";
      goto LABEL_62;
    case 27:
      uint64_t v4 = "SET_TIME_TRANSFER_PULSE";
      goto LABEL_62;
    case 28:
      uint64_t v4 = "CLEAN_TIME_TRANSFER_PULSE";
      goto LABEL_62;
    case 29:
      uint64_t v4 = "INJECT_LTL_INFO";
      goto LABEL_62;
    case 30:
      uint64_t v4 = "CNTIN_STATUS_UPDATE";
      goto LABEL_62;
    case 31:
      uint64_t v4 = "SET_THERMAL_RISK_STATE";
      goto LABEL_62;
    case 32:
      uint64_t v4 = "PING";
      goto LABEL_62;
    case 34:
      uint64_t v4 = "BUILD_DEVICE";
      goto LABEL_62;
    case 35:
      uint64_t v4 = "TERMINATION_IMMINENT";
      goto LABEL_62;
    case 36:
      uint64_t v4 = "EXIT";
      goto LABEL_62;
    case 37:
      uint64_t v4 = "FORCE_CLEAR_ALL_NV";
      goto LABEL_62;
    case 38:
      uint64_t v4 = "SET_CONFIG_RF_BAND_ENABLE";
      goto LABEL_62;
    case 51:
      uint64_t v4 = "START_EMERGENCY_PREEMPTIVE_SESSION";
      goto LABEL_62;
    case 52:
      uint64_t v4 = "STOP_EMERGENCY_PREEMPTIVE_SESSION";
      goto LABEL_62;
    case 53:
      uint64_t v4 = "SET_EMERGENCY_CONFIG";
      goto LABEL_62;
    case 54:
      uint64_t v4 = "SET_EMERGENCY_SESSION_SUMMARY_REPORT";
      goto LABEL_62;
    case 55:
      uint64_t v4 = "ENTER_EMERGENCY_MODE";
      goto LABEL_62;
    case 56:
      uint64_t v4 = "EXIT_EMERGENCY_MODE";
      goto LABEL_62;
    case 60:
      uint64_t v4 = "START_EMERGENCY_POSITION";
      goto LABEL_62;
    case 61:
      uint64_t v4 = "STOP_EMERGENCY_POSITION";
      goto LABEL_62;
    case 62:
      uint64_t v4 = "SET_EMERGENCY_POSITION_REPORT";
      goto LABEL_62;
    case 63:
      uint64_t v4 = "SET_EMERGENCY_MEASUREMENT_REPORT";
      goto LABEL_62;
    case 64:
      uint64_t v4 = "SET_NW_ASSISTANCE_NEEDED_REPORT";
      goto LABEL_62;
    case 65:
      uint64_t v4 = "SET_NW_ASSISTANCE_GPS_REF_TIME";
      goto LABEL_62;
    case 66:
      uint64_t v4 = "SET_NW_ASSISTANCE_REF_POSITION";
      goto LABEL_62;
    case 67:
      uint64_t v4 = "SET_NW_ASSISTANCE_GPS_EPHEMERIS";
      goto LABEL_62;
    case 68:
      uint64_t v4 = "SET_NW_ASSISTANCE_GPS_ACQUISITION";
      goto LABEL_62;
    case 69:
      uint64_t v4 = "INJECT_FT_ASSISTANCE";
      goto LABEL_62;
    case 70:
      uint64_t v4 = "DECODE_SUPL_INIT";
      goto LABEL_62;
    case 71:
      uint64_t v4 = "SET_SUPL_INIT";
      goto LABEL_62;
    case 72:
      uint64_t v4 = "SET_SUPL_LOCATIONID_NEEDED_REPORT";
      goto LABEL_62;
    case 73:
      uint64_t v4 = "SET_SUPL_LOCATIONID";
      goto LABEL_62;
    case 74:
      uint64_t v4 = "ABORT_SUPL_SESSION";
      goto LABEL_62;
    case 75:
      uint64_t v4 = "SET_SUPL_SESSION_STATUS_REPORT";
      goto LABEL_62;
    case 76:
      uint64_t v4 = "SET_SUPL_WLAN_MEAS";
LABEL_62:
      MEMORY[0x24C5D2510](a2, v4);
      uint64_t v5 = *(unsigned __int8 *)(a2 + 23);
      if (*(char *)(a2 + 23) < 0) {
        uint64_t v5 = *(void *)(a2 + 8);
      }
      if (!v5) {
        goto LABEL_65;
      }
      return;
    default:
LABEL_65:
      std::to_string(&__p, __val);
      std::string::size_type v6 = std::string::insert(&__p, 0, "unknown_");
      std::string::size_type v7 = v6->__r_.__value_.__r.__words[0];
      v10[0] = v6->__r_.__value_.__l.__size_;
      *(void *)((char *)v10 + 7) = *(std::string::size_type *)((char *)&v6->__r_.__value_.__r.__words[1] + 7);
      char v8 = HIBYTE(v6->__r_.__value_.__r.__words[2]);
      v6->__r_.__value_.__l.__size_ = 0;
      v6->__r_.__value_.__r.__words[2] = 0;
      v6->__r_.__value_.__r.__words[0] = 0;
      if (*(char *)(a2 + 23) < 0) {
        operator delete(*(void **)a2);
      }
      *(void *)a2 = v7;
      *(void *)(a2 + 8) = v10[0];
      *(void *)(a2 + 15) = *(void *)((char *)v10 + 7);
      *(unsigned char *)(a2 + 23) = v8;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      return;
  }
}

void sub_24B476C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v14 + 23) < 0) {
    operator delete(*(void **)v14);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B476DC0(dispatch_queue_t *a1, dispatch_qos_class_t a2, const std::string::value_type *a3)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  sub_24B3E3128(v17, "com.apple.gpsd.");
  std::string::size_type v6 = std::string::append((std::string *)v17, a3);
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  int64_t v16 = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if ((v17[23] & 0x80000000) != 0) {
    operator delete(*(void **)v17);
  }
  char v8 = dispatch_queue_attr_make_with_qos_class(0, a2, 0);
  if (!v8)
  {
    uint64_t v9 = qword_26B17C498;
    if (os_log_type_enabled((os_log_t)qword_26B17C498, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = __p;
      if (v16 < 0) {
        uint64_t v10 = (void **)__p[0];
      }
      *(_DWORD *)int v17 = 136446210;
      *(void *)&v17[4] = v10;
      _os_log_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEFAULT, "dispatchQueueInit,nullattr,%{public}s", v17, 0xCu);
    }
  }
  if (v16 >= 0) {
    unsigned int v11 = __p;
  }
  else {
    unsigned int v11 = (void **)__p[0];
  }
  dispatch_queue_t v12 = dispatch_queue_create((const char *)v11, v8);
  *a1 = v12;
  if (!v12)
  {
    __int16 v13 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      uint64_t v14 = __p;
      if (v16 < 0) {
        uint64_t v14 = (void **)__p[0];
      }
      *(_DWORD *)int v17 = 136446210;
      *(void *)&v17[4] = v14;
      _os_log_error_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_ERROR, "dispatchQueueInit,queue,null,%{public}s", v17, 0xCu);
      __int16 v13 = qword_26B17C488;
    }
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int v17 = 136446722;
      *(void *)&v17[4] = "/Library/Caches/com.apple.xbs/Sources/CoreGEM/Sources/Util/GpsdUtil.mm";
      *(_WORD *)&v17[12] = 1026;
      *(_DWORD *)&v17[14] = 539;
      *(_WORD *)&v17[18] = 2082;
      *(void *)&v17[20] = "dispatchQueueInit";
      _os_log_error_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: assertion failure in %{public}s", v17, 0x1Cu);
    }
    __assert_rtn("dispatchQueueInit", "GpsdUtil.mm", 539, "false && \"dispatchQueueInit,queue,null,%{public}s\"");
  }
  if (SHIBYTE(v16) < 0) {
    operator delete(__p[0]);
  }
}

void sub_24B47700C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_24B477044(uint64_t a1)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(__n128 *)(a1 + 24) = result;
  *(__n128 *)(a1 + 40) = result;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(_DWORD *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(_DWORD *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(__n128 *)(a1 + 160) = result;
  *(__n128 *)(a1 + 176) = result;
  *(void *)(a1 + 192) = 0;
  *(_DWORD *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(_DWORD *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(_DWORD *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0xBFF0000000000000;
  *(__n128 *)(a1 + 304) = result;
  *(void *)(a1 + 320) = 0xBFF0000000000000;
  *(void *)(a1 + 328) = 0;
  *(_DWORD *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = 0;
  *(_DWORD *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(unsigned char *)(a1 + 408) = 0;
  *(unsigned char *)(a1 + 448) = 0;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  return result;
}

double sub_24B4770F0(uint64_t a1, int *a2)
{
  long long v4 = *((_OWORD *)a2 + 7);
  v30[6] = *((_OWORD *)a2 + 6);
  v30[7] = v4;
  uint64_t v31 = *((void *)a2 + 16);
  long long v5 = *((_OWORD *)a2 + 3);
  v30[2] = *((_OWORD *)a2 + 2);
  v30[3] = v5;
  long long v6 = *((_OWORD *)a2 + 5);
  v30[4] = *((_OWORD *)a2 + 4);
  v30[5] = v6;
  long long v7 = *((_OWORD *)a2 + 1);
  v30[0] = *(_OWORD *)a2;
  v30[1] = v7;
  sub_24B3EE5D0((int *)v30, "GemHeloEstimator::injectFix");
  int v9 = *a2;
  if (*a2 == 3)
  {
    sub_24B3EEB20((_DWORD *)(a1 + 272), (double *)a2, (uint64_t)&v21);
    long long v13 = v28;
    *(_OWORD *)(a1 + 368) = v27;
    *(_OWORD *)(a1 + 384) = v13;
    *(void *)(a1 + 400) = v29;
    long long v14 = v24;
    *(_OWORD *)(a1 + 304) = v23;
    *(_OWORD *)(a1 + 320) = v14;
    long long v15 = v26;
    *(_OWORD *)(a1 + 336) = v25;
    *(_OWORD *)(a1 + 352) = v15;
    long long v8 = v22;
    *(_OWORD *)(a1 + 272) = v21;
    *(_OWORD *)(a1 + 288) = v8;
  }
  else if (v9 == 2)
  {
    sub_24B3EEB20((_DWORD *)(a1 + 136), (double *)a2, (uint64_t)&v21);
    long long v16 = v25;
    *(_OWORD *)(a1 + 216) = v26;
    long long v17 = v28;
    *(_OWORD *)(a1 + 232) = v27;
    *(_OWORD *)(a1 + 248) = v17;
    long long v18 = v21;
    *(_OWORD *)(a1 + 152) = v22;
    *(void *)&long long v8 = v23;
    long long v19 = v24;
    *(_OWORD *)(a1 + 168) = v23;
    *(_OWORD *)(a1 + 184) = v19;
    *(_OWORD *)(a1 + 200) = v16;
    *(void *)(a1 + 264) = v29;
    *(_OWORD *)(a1 + 136) = v18;
  }
  else if (v9 == 1)
  {
    sub_24B3EEB20((_DWORD *)a1, (double *)a2, (uint64_t)&v21);
    long long v10 = v28;
    *(_OWORD *)(a1 + 96) = v27;
    *(_OWORD *)(a1 + 112) = v10;
    *(void *)(a1 + 128) = v29;
    long long v11 = v24;
    *(_OWORD *)(a1 + 32) = v23;
    *(_OWORD *)(a1 + 48) = v11;
    long long v12 = v26;
    *(_OWORD *)(a1 + 64) = v25;
    *(_OWORD *)(a1 + 80) = v12;
    long long v8 = v22;
    *(_OWORD *)a1 = v21;
    *(_OWORD *)(a1 + 16) = v8;
  }
  return *(double *)&v8;
}

double sub_24B47726C(uint64_t a1, uint64_t a2, unint64_t a3, double a4, double a5, double a6)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  unint64_t v10 = a2 - a1;
  long long v11 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    int v13 = 134217984;
    double v14 = *(double *)&v10;
    _os_log_debug_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_DEBUG, "HeloEstimator,getScaledUncertainty,age,%llu", (uint8_t *)&v13, 0xCu);
    long long v11 = qword_26B17C480;
  }
  if (v10 < a3) {
    a6 = a5;
  }
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    int v13 = 134217984;
    double v14 = a6;
    _os_log_debug_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_DEBUG, "HeloEstimator,getScaledUncertainty,scaleFactor,%f", (uint8_t *)&v13, 0xCu);
  }
  return a4 + (double)v10 * a6;
}

double sub_24B477394@<D0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_DWORD *)a3 = 0;
  *(_DWORD *)(a3 + 120) = 0;
  *(void *)(a3 + 128) = 0;
  sub_24B477428((uint64_t)a1, a2, (uint64_t)&v11);
  long long v6 = v11;
  *(_OWORD *)(a3 + 24) = v12;
  long long v7 = v14;
  *(_OWORD *)(a3 + 40) = v13;
  *(_OWORD *)(a3 + 56) = v7;
  long long v8 = v16;
  *(_OWORD *)(a3 + 72) = v15;
  *(_OWORD *)(a3 + 8) = v6;
  *(_OWORD *)(a3 + 136) = v8;
  sub_24B477BBC(a1, a2, (uint64_t)&v11);
  long long v9 = v12;
  *(_OWORD *)(a3 + 88) = v11;
  *(_OWORD *)(a3 + 104) = v9;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 152) = v13;
  return result;
}

void sub_24B477428(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v76 = *MEMORY[0x263EF8340];
  int v6 = *(_DWORD *)a1;
  long long v74 = *(_OWORD *)(a1 + 4);
  unsigned int v75 = *(_DWORD *)(a1 + 20);
  double v7 = *(double *)(a1 + 24);
  double v61 = *(double *)(a1 + 40);
  double v62 = *(double *)(a1 + 32);
  double v8 = *(double *)(a1 + 48);
  int v10 = *(_DWORD *)(a1 + 64);
  int v9 = *(_DWORD *)(a1 + 68);
  uint64_t v12 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 80);
  double v13 = *(double *)(a1 + 96);
  int v14 = *(_DWORD *)(a1 + 136);
  long long v72 = *(_OWORD *)(a1 + 140);
  unsigned int v73 = *(_DWORD *)(a1 + 156);
  double v15 = *(double *)(a1 + 160);
  double v63 = *(double *)(a1 + 176);
  double v64 = *(double *)(a1 + 168);
  double v57 = v8;
  double v58 = *(double *)(a1 + 184);
  LODWORD(v60) = *(_DWORD *)(a1 + 200);
  HIDWORD(v60) = v14;
  int v53 = v9;
  int v54 = *(_DWORD *)(a1 + 204);
  uint64_t v16 = *(void *)(a1 + 216);
  uint64_t v59 = *(void *)(a1 + 208);
  double v17 = *(double *)(a1 + 232);
  int v18 = *(_DWORD *)(a1 + 272);
  long long v70 = *(_OWORD *)(a1 + 276);
  unsigned int v71 = *(_DWORD *)(a1 + 292);
  double v19 = *(double *)(a1 + 296);
  double v55 = *(double *)(a1 + 304);
  double v20 = *(double *)(a1 + 312);
  double v52 = *(double *)(a1 + 320);
  int8x8_t v56 = *(int8x8_t *)(a1 + 56);
  int8x8_t v67 = *(int8x8_t *)(a1 + 192);
  int8x8_t v65 = *(int8x8_t *)(a1 + 328);
  int v50 = *(_DWORD *)(a1 + 340);
  int v51 = *(_DWORD *)(a1 + 336);
  uint64_t v22 = *(void *)(a1 + 344);
  uint64_t v21 = *(void *)(a1 + 352);
  double v23 = *(double *)(a1 + 368);
  if (v7 != -1.0 && v13 != -1.0)
  {
    int v24 = v10;
    int v25 = v6;
    unsigned __int16 v26 = a2 - v11;
    if ((unsigned __int16)(a2 - v11) < 0x12Du)
    {
      double v7 = fmax(sub_24B47726C(v11, a2, 0x78uLL, v7, 3.0, 15.0), 25.0);
      double v61 = v7;
      double v62 = v7;
      int v6 = v25;
      int v10 = v24;
    }
    else
    {
      long long v27 = qword_26B17C480;
      if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
      {
        buf[0] = 67109120;
        buf[1] = v26;
        _os_log_debug_impl(&dword_24B3DE000, v27, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, GNSS fix age exceeds max fix age, %d", (uint8_t *)buf, 8u);
      }
      uint64_t v12 = 0;
      int v6 = 0;
      int v10 = 0;
      *(void *)&buf[3] = 0;
      unsigned int v75 = 0;
      *(void *)&buf[1] = 0;
      long long v74 = buf[0];
      int8x8_t v56 = 0;
      double v57 = -1.0;
      double v13 = -1.0;
      double v7 = -1.0;
      double v61 = -1.0;
      double v62 = -1.0;
    }
  }
  if (v15 != -1.0 && v17 != -1.0)
  {
    int v28 = v10;
    int v29 = v6;
    unsigned __int16 v30 = a2 - v16;
    if ((unsigned __int16)(a2 - v16) < 0x12Du)
    {
      double v32 = sub_24B47726C(v16, a2, 0x78uLL, v15, 3.0, 15.0);
      double v15 = v32;
    }
    else
    {
      uint64_t v31 = qword_26B17C480;
      if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
      {
        buf[0] = 67109120;
        buf[1] = v30;
        _os_log_debug_impl(&dword_24B3DE000, v31, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, WiF fix age exceeds max fix age, %d", (uint8_t *)buf, 8u);
      }
      uint64_t v59 = 0;
      uint64_t v60 = 0;
      *(void *)&buf[3] = 0;
      unsigned int v73 = 0;
      *(void *)&buf[1] = 0;
      long long v72 = buf[0];
      int8x8_t v67 = 0;
      double v32 = -1.0;
      double v58 = -1.0;
      double v17 = -1.0;
      double v15 = -1.0;
    }
    double v63 = v32;
    double v64 = v32;
    int v6 = v29;
    int v10 = v28;
  }
  if (v19 != -1.0 && v23 != -1.0)
  {
    unsigned __int16 v33 = a2 - v21;
    if ((unsigned __int16)(a2 - v21) < 0x12Du)
    {
      double v19 = sub_24B47726C(v21, a2, 0x78uLL, v19, 3.0, 15.0);
      double v55 = v19;
      double v20 = v19;
    }
    else
    {
      int v34 = qword_26B17C480;
      if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
      {
        buf[0] = 67109120;
        buf[1] = v33;
        _os_log_debug_impl(&dword_24B3DE000, v34, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, Cell fix age exceeds max fix age, %d", (uint8_t *)buf, 8u);
      }
      uint64_t v22 = 0;
      int v18 = 0;
      int v51 = 0;
      *(void *)&buf[3] = 0;
      *(void *)&buf[1] = 0;
      long long v70 = buf[0];
      unsigned int v71 = 0;
      int8x8_t v65 = 0;
      double v52 = -1.0;
      double v19 = -1.0;
      double v55 = -1.0;
      double v20 = -1.0;
    }
  }
  if (v7 == -1.0 || (double v35 = -1.0, v13 == -1.0))
  {
    int v43 = qword_26B17C480;
    if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf[0]) = 0;
      _os_log_debug_impl(&dword_24B3DE000, v43, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, GNSS fix not available", (uint8_t *)buf, 2u);
    }
    if (v15 != -1.0 && v17 != -1.0 && v67.i32[0] > 0x19u) {
      goto LABEL_61;
    }
    if (v19 != -1.0 && v65.i32[0] >= 0x1Au)
    {
      *(_OWORD *)buf = v70;
      uint8_t buf[4] = v71;
      int v47 = qword_26B17C480;
      if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)int v68 = 0;
        _os_log_debug_impl(&dword_24B3DE000, v47, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, returning high reliability Cell xy", v68, 2u);
      }
      double v40 = v52;
      int8x8_t v45 = v65;
      double v41 = v55;
      int v38 = v50;
      int v10 = v51;
      goto LABEL_74;
    }
    double v35 = -1.0;
    if (v15 != -1.0 && v67.i32[0] >= 0x1Au)
    {
LABEL_61:
      *(_OWORD *)buf = v72;
      uint8_t buf[4] = v73;
      int v44 = qword_26B17C480;
      if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)int v68 = 0;
        _os_log_debug_impl(&dword_24B3DE000, v44, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, returning med/high reliability WiFi xy", v68, 2u);
      }
      double v19 = v15;
      double v20 = v63;
      double v41 = v64;
      double v40 = v58;
      int v10 = v60;
      int v18 = HIDWORD(v60);
      int v38 = v54;
      uint64_t v22 = v59;
      int8x8_t v45 = v67;
      goto LABEL_74;
    }
  }
  if (v15 != v35 && v17 != v35 && v67.i32[0] >= 0x1Au)
  {
    unsigned int v36 = qword_26B17C480;
    if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf[0]) = 0;
      _os_log_debug_impl(&dword_24B3DE000, v36, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, both GNSS and WiFi xy available", (uint8_t *)buf, 2u);
      unsigned int v36 = qword_26B17C480;
    }
    unsigned int v37 = &v72;
    if (v7 >= v15)
    {
      uint64_t v22 = v59;
    }
    else
    {
      unsigned int v37 = &v74;
      uint64_t v22 = v12;
    }
    if (v7 >= v15) {
      int v38 = v54;
    }
    else {
      int v38 = v53;
    }
    if (v7 >= v15) {
      int v18 = HIDWORD(v60);
    }
    else {
      int v18 = v6;
    }
    int32x2_t v39 = vdup_n_s32(v7 < v15);
    if (v7 >= v15) {
      int v10 = v60;
    }
    int8x8_t v66 = vbsl_s8((int8x8_t)vcltz_s32(vshl_n_s32(v39, 0x1FuLL)), v56, v67);
    if (v7 >= v15) {
      double v40 = v58;
    }
    else {
      double v40 = v57;
    }
    if (v7 >= v15) {
      double v20 = v63;
    }
    else {
      double v20 = v61;
    }
    if (v7 >= v15) {
      double v41 = v64;
    }
    else {
      double v41 = v62;
    }
    if (v7 >= v15) {
      double v19 = v15;
    }
    else {
      double v19 = v7;
    }
    *(_OWORD *)buf = *v37;
    uint8_t buf[4] = *((_DWORD *)v37 + 4);
    BOOL v42 = os_log_type_enabled(v36, OS_LOG_TYPE_DEBUG);
    if (v18 == 2)
    {
      if (!v42)
      {
        int v18 = 2;
LABEL_73:
        int8x8_t v45 = v66;
        goto LABEL_74;
      }
      *(_WORD *)int v68 = 0;
      int v49 = "HeloEstimator,GemHeloEstimator::getBestHorizontal, returing WiFi xy fix, WiFi unc < gnss unc";
      int v18 = 2;
    }
    else
    {
      if (!v42) {
        goto LABEL_73;
      }
      *(_WORD *)int v68 = 0;
      int v49 = "HeloEstimator,GemHeloEstimator::getBestHorizontal, returing GNSS xy fix, gnss unc < WiFi unc";
    }
    _os_log_debug_impl(&dword_24B3DE000, v36, OS_LOG_TYPE_DEBUG, v49, v68, 2u);
    goto LABEL_73;
  }
  *(_OWORD *)buf = v74;
  uint8_t buf[4] = v75;
  unsigned int v46 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int v68 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v46, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestHorizontal, returing GNSS xy fix", v68, 2u);
  }
  double v19 = v7;
  double v20 = v61;
  double v41 = v62;
  double v40 = v57;
  int v38 = v53;
  uint64_t v22 = v12;
  int v18 = v6;
  int8x8_t v45 = v56;
LABEL_74:
  unint64_t v48 = (unint64_t)(double)(unint64_t)a2;
  *(_OWORD *)a3 = *(_OWORD *)&buf[1];
  *(double *)(a3 + 16) = v19;
  *(double *)(a3 + 24) = v41;
  *(double *)(a3 + 32) = v20;
  *(double *)(a3 + 40) = v40;
  *(int8x8_t *)(a3 + 48) = v45;
  *(_DWORD *)(a3 + 56) = v10;
  *(_DWORD *)(a3 + 60) = v38;
  *(void *)(a3 + 64) = v22;
  *(void *)(a3 + 72) = v48;
  *(_DWORD *)(a3 + 80) = v18;
  *(void *)(a3 + 88) = v48;
}

void sub_24B477BBC(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v53 = *MEMORY[0x263EF8340];
  double v6 = *((double *)a1 + 3);
  uint64_t v8 = *((void *)a1 + 11);
  double v7 = *((double *)a1 + 12);
  unsigned int v9 = a1[26];
  int v10 = a1[27];
  int v48 = *a1;
  int v49 = a1[34];
  double v11 = *((double *)a1 + 20);
  uint64_t v12 = *((void *)a1 + 27);
  uint64_t v14 = *((void *)a1 + 28);
  double v13 = *((double *)a1 + 29);
  unsigned int v15 = a1[60];
  int v16 = a1[61];
  uint64_t v17 = *((void *)a1 + 31);
  int v46 = a1[68];
  double v18 = *((double *)a1 + 37);
  uint64_t v19 = *((void *)a1 + 44);
  double v20 = *((double *)a1 + 46);
  uint64_t v47 = *((void *)a1 + 45);
  unsigned int v50 = a1[94];
  int v21 = a1[95];
  uint64_t v45 = *((void *)a1 + 48);
  if (v6 != -1.0 && v7 != -1.0)
  {
    uint64_t v43 = v17;
    unsigned int v44 = v15;
    uint64_t v22 = *((void *)a1 + 44);
    int v23 = v16;
    int v24 = v10;
    int v25 = a1[95];
    uint64_t v26 = a2 - *((void *)a1 + 10);
    if ((unsigned __int16)(a2 - *((_WORD *)a1 + 40)) < 0x12Du)
    {
      double v7 = sub_24B47726C(*((void *)a1 + 14), a2, 0x12CuLL, v7, 0.5, 0.5);
      int v21 = v25;
      int v10 = v24;
      int v16 = v23;
    }
    else
    {
      long long v27 = qword_26B17C480;
      double v7 = -1.0;
      uint64_t v8 = 0;
      if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 67109120;
        int v52 = (unsigned __int16)v26;
        _os_log_debug_impl(&dword_24B3DE000, v27, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestVertical, GNSS fix age exceeds max fix age, %d", buf, 8u);
      }
      int v48 = 0;
      unsigned int v9 = 0;
      int v21 = v25;
      int v10 = v24;
      int v16 = v23;
      uint64_t v3 = a2;
    }
    LOWORD(v19) = v22;
    unsigned int v15 = v44;
    uint64_t v17 = v43;
  }
  if (v11 != -1.0 && v13 != -1.0)
  {
    unsigned __int16 v28 = v3 - v12;
    if (v28 < 0x12Du)
    {
      double v13 = sub_24B47726C(v17, v3, 0x12CuLL, v13, 0.5, 0.5);
    }
    else
    {
      __int16 v29 = v19;
      unsigned __int16 v30 = qword_26B17C480;
      double v13 = -1.0;
      uint64_t v14 = 0;
      if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 67109120;
        int v52 = v28;
        _os_log_debug_impl(&dword_24B3DE000, v30, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestVertical, WiFi fix age exceeds max fix age, %d", buf, 8u);
      }
      int v49 = 0;
      LOWORD(v19) = v29;
      unsigned int v15 = 0;
    }
  }
  if (v18 != -1.0 && v20 != -1.0)
  {
    unsigned __int16 v31 = v3 - v19;
    if (v31 < 0x12Du)
    {
      double v20 = sub_24B47726C(v45, v3, 0x12CuLL, v20, 0.5, 0.5);
    }
    else
    {
      double v32 = qword_26B17C480;
      double v20 = -1.0;
      uint64_t v47 = 0;
      if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 67109120;
        int v52 = v31;
        _os_log_debug_impl(&dword_24B3DE000, v32, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestVertical, Cell fix age exceeds max fix age, %d", buf, 8u);
      }
      unsigned int v50 = 0;
      int v46 = 0;
    }
  }
  if (v13 != -1.0 && v15 >= 0x1A)
  {
    unsigned __int16 v33 = qword_26B17C480;
    if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v33, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestVertical,WiFi fix available", buf, 2u);
    }
    if (v13 < 20.0 || v7 == -1.0)
    {
      int v34 = qword_26B17C480;
      if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        double v35 = "HeloEstimator, getBestVertical returning wifi Z,wifi z unc <20 meters,no gnss cross check";
        goto LABEL_52;
      }
LABEL_46:
      unint64_t v39 = (unint64_t)(double)(unint64_t)v3;
      int v41 = v49;
      goto LABEL_50;
    }
    if (v13 < v7)
    {
      int v34 = qword_26B17C480;
      if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        double v35 = "HeloEstimator, getBestVertical returning wifi Z,wifi Z unc >20 meters";
LABEL_52:
        _os_log_debug_impl(&dword_24B3DE000, v34, OS_LOG_TYPE_DEBUG, v35, buf, 2u);
        goto LABEL_46;
      }
      goto LABEL_46;
    }
  }
  double v13 = -1.0;
  unsigned int v15 = v50;
  if (v20 != -1.0 && v50 >= 0x1A)
  {
    unsigned int v36 = qword_26B17C480;
    if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v36, OS_LOG_TYPE_DEBUG, "HeloEstimator,GemHeloEstimator::getBestVertical,Cell fix available", buf, 2u);
    }
    if (v20 < 20.0 || v7 == -1.0)
    {
      unsigned int v37 = qword_26B17C480;
      if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        int v38 = "HeloEstimator, getBestVertical returning cell Z,z unc < altitude threshold and no gnss";
        goto LABEL_54;
      }
LABEL_48:
      uint64_t v14 = v47;
      unint64_t v39 = (unint64_t)(double)(unint64_t)v3;
      double v13 = v20;
      int v16 = v21;
      int v41 = v46;
      goto LABEL_50;
    }
    if (v20 < v7)
    {
      unsigned int v37 = qword_26B17C480;
      if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        int v38 = "HeloEstimator, getBestVertical returning cell Z,z unc < gnss unc";
LABEL_54:
        _os_log_debug_impl(&dword_24B3DE000, v37, OS_LOG_TYPE_DEBUG, v38, buf, 2u);
        goto LABEL_48;
      }
      goto LABEL_48;
    }
  }
  if (*((double *)a1 + 12) == -1.0)
  {
    unsigned int v15 = 0;
    unint64_t v39 = 0;
    int v41 = 0;
    uint64_t v14 = 0;
    int v16 = v10;
  }
  else
  {
    unint64_t v39 = (unint64_t)(double)(unint64_t)v3;
    double v40 = qword_26B17C480;
    if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v40, OS_LOG_TYPE_DEBUG, "HeloEstimator, getBestVertical returning gnss Z", buf, 2u);
    }
    uint64_t v14 = v8;
    double v13 = v7;
    unsigned int v15 = v9;
    int v16 = v10;
    int v41 = v48;
  }
LABEL_50:
  *(void *)a3 = v14;
  *(double *)(a3 + 8) = v13;
  *(_DWORD *)(a3 + 16) = v15;
  *(_DWORD *)(a3 + 20) = v16;
  *(void *)(a3 + 24) = v39;
  *(_DWORD *)(a3 + 32) = v41;
  *(void *)(a3 + 40) = v39;
}

BOOL sub_24B478190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)a2)
  {
    double v6 = qword_26B17C480;
    BOOL result = os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG);
    if (!result) {
      return result;
    }
    LOWORD(v31) = 0;
    uint64_t v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn early return not enabled, returning";
LABEL_14:
    uint64_t v14 = v6;
    uint32_t v15 = 2;
LABEL_15:
    _os_log_debug_impl(&dword_24B3DE000, v14, OS_LOG_TYPE_DEBUG, v8, (uint8_t *)&v31, v15);
    return 0;
  }
  double v3 = *(double *)(a1 + 24);
  double v4 = *(double *)(a1 + 96);
  if (v3 == -1.0 || v4 == -1.0)
  {
    double v6 = qword_26B17C480;
    BOOL result = os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG);
    if (!result) {
      return result;
    }
    LOWORD(v31) = 0;
    uint64_t v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn no GNSS fix available, returning";
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)(a1 + 112);
  double v12 = sub_24B47726C(*(void *)(a1 + 80), a3, 0x78uLL, v3, 3.0, 15.0);
  double v13 = sub_24B47726C(v11, a3, 0x12CuLL, v4, 0.5, 0.5);
  if ((unint64_t)(a3 - *(void *)(a2 + 32)) > 6)
  {
    unsigned int v16 = *(unsigned __int8 *)(a2 + 40);
    if (v16 > 3)
    {
      double v18 = v13;
      double v19 = fmax(v12, 5.0);
      if (3 * (int)v19 >= (int)v19)
      {
        double v21 = *(double *)(a2 + 8);
        if (v21 <= 0.0)
        {
          double v23 = 33.0;
        }
        else
        {
          double v22 = (v21 + 0.5) * 0.671591672;
          double v23 = 33.0;
          if (v22 <= 33.0)
          {
            double v23 = (v21 + 0.5) * 0.671591672;
            if (v22 < 4.0) {
              double v23 = 4.0;
            }
          }
          int v24 = qword_26B17C480;
          if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
          {
            int v31 = 134218240;
            *(double *)double v32 = v21;
            *(_WORD *)&v32[8] = 2048;
            double v33 = v23;
            _os_log_debug_impl(&dword_24B3DE000, v24, OS_LOG_TYPE_DEBUG, "HeloEstimator, isGnssFixReadyForEarlyReturn,requested,%f,hUnc1Sigma,%f", (uint8_t *)&v31, 0x16u);
          }
        }
        double v25 = *(double *)(a2 + 16);
        if (v25 == 0.0)
        {
          double v27 = 100.0;
        }
        else
        {
          double v26 = (v25 + 0.5) * 1.02669405;
          double v27 = 100.0;
          if (v26 <= 100.0)
          {
            double v27 = (v25 + 0.5) * 1.02669405;
            if (v26 < *(double *)(a2 + 24)) {
              double v27 = *(double *)(a2 + 24);
            }
          }
          unsigned __int16 v28 = qword_26B17C480;
          if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
          {
            int v31 = 134218240;
            *(double *)double v32 = v25;
            *(_WORD *)&v32[8] = 2048;
            double v33 = v27;
            _os_log_debug_impl(&dword_24B3DE000, v28, OS_LOG_TYPE_DEBUG, "HeloEstimator, isGnssFixReadyForEarlyReturn,requested,%f,vUnc1Sigma,%f", (uint8_t *)&v31, 0x16u);
          }
        }
        double v29 = v23 * 3.0;
        if (v27 <= v23 * 3.0) {
          double v29 = v27;
        }
        if (v18 >= v29)
        {
          double v30 = sqrt(v19 * v19 + v19 * v19) / 1.41421356;
          double v6 = qword_26B17C480;
          if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
          {
            int v31 = 134284033;
            *(double *)double v32 = v30;
            *(_WORD *)&v32[8] = 2049;
            double v33 = v19;
            __int16 v34 = 2049;
            double v35 = v19;
            _os_log_debug_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEBUG, "HeloEstimator, isGnssFixReadyForEarlyReturn,drms,%{private}f,smj,%{private}f,smn,%{private}f", (uint8_t *)&v31, 0x20u);
            double v6 = qword_26B17C480;
          }
          BOOL result = os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG);
          if (v30 > v23)
          {
            if (result)
            {
              LOWORD(v31) = 0;
              uint64_t v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn, horizontal criteria not met";
              goto LABEL_14;
            }
          }
          else
          {
            if (result)
            {
              LOWORD(v31) = 0;
              _os_log_debug_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEBUG, "HeloEstimator, isGnssFixReadyForEarlyReturn, returning true", (uint8_t *)&v31, 2u);
            }
            return 1;
          }
        }
        else
        {
          double v6 = qword_26B17C480;
          BOOL result = os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG);
          if (result)
          {
            LOWORD(v31) = 0;
            uint64_t v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn, vertical criteria not met";
            goto LABEL_14;
          }
        }
      }
      else
      {
        uint64_t v20 = qword_26B17C480;
        BOOL result = os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG);
        if (result)
        {
          int v31 = 67109376;
          *(_DWORD *)double v32 = (int)v19;
          *(_WORD *)&v32[4] = 1024;
          *(_DWORD *)&v32[6] = (int)v19;
          uint64_t v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn,semiMajor,%hhu,semiMinor,%hhu,POS Error ellipse is too elongated";
          uint64_t v14 = v20;
          uint32_t v15 = 14;
          goto LABEL_15;
        }
      }
    }
    else
    {
      uint64_t v17 = qword_26B17C488;
      BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG);
      if (result)
      {
        int v31 = 67109120;
        *(_DWORD *)double v32 = v16;
        uint64_t v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn number of GNSS fixes received < 2, returning %d";
        uint64_t v14 = v17;
        uint32_t v15 = 8;
        goto LABEL_15;
      }
    }
  }
  else
  {
    double v6 = qword_26B17C488;
    BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG);
    if (result)
    {
      LOWORD(v31) = 0;
      uint64_t v8 = "HeloEstimator, isGnssFixReadyForEarlyReturn too early to return in session, returning";
      goto LABEL_14;
    }
  }
  return result;
}

void sub_24B47865C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  *(_DWORD *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  double v4 = (_OWORD *)(a3 + 8);
  *(void *)(a3 + 16) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a3 + 24) = _Q0;
  *(_OWORD *)(a3 + 40) = _Q0;
  *(void *)(a3 + 56) = 0;
  *(_DWORD *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  *(void *)(a3 + 80) = 0;
  *(void *)(a3 + 88) = 0;
  *(void *)(a3 + 96) = 0xBFF0000000000000;
  *(_DWORD *)(a3 + 104) = 0;
  *(void *)(a3 + 112) = 0;
  *(_DWORD *)(a3 + 120) = 0;
  *(void *)(a3 + 128) = 0;
  *(_DWORD *)(a3 + 136) = 0;
  *(void *)(a3 + 144) = 0;
  *(_DWORD *)(a3 + 152) = 0;
  *(void *)(a3 + 160) = 0;
  long long v26 = *(_OWORD *)(a1 + 4);
  double v10 = *(double *)(a1 + 24);
  int v27 = *(_DWORD *)(a1 + 20);
  if (v10 == -1.0 || (double v11 = *(double *)(a1 + 96), v11 == -1.0))
  {
    double v23 = qword_26B17C480;
    if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v23, OS_LOG_TYPE_DEBUG, "HeloEstimator, isGnssFixReadyForEarlyReturn no GNSS fix available, returning", buf, 2u);
    }
  }
  else
  {
    uint64_t v13 = *(void *)(a1 + 48);
    uint64_t v14 = *(void *)(a1 + 128);
    int v15 = *(_DWORD *)(a1 + 124);
    uint64_t v16 = *(void *)(a1 + 112);
    uint64_t v17 = *(void *)(a1 + 88);
    uint64_t v19 = *(void *)(a1 + 72);
    uint64_t v18 = *(void *)(a1 + 80);
    long long v24 = *(_OWORD *)(a1 + 56);
    uint64_t v20 = *(void *)(a1 + 104);
    double v21 = fmax(sub_24B47726C(v18, a2, 0x78uLL, v10, 3.0, 15.0), 25.0);
    double v22 = sub_24B47726C(v16, a2, 0x12CuLL, v11, 0.5, 0.5);
    *(_OWORD *)buf = v26;
    *(_DWORD *)&buf[16] = v27;
    *double v4 = *(_OWORD *)&buf[4];
    *(double *)(a3 + 24) = v21;
    *(double *)(a3 + 32) = v21;
    *(double *)(a3 + 40) = v21;
    *(void *)(a3 + 48) = v13;
    *(_OWORD *)(a3 + 56) = v24;
    *(void *)(a3 + 72) = v19;
    *(void *)(a3 + 80) = v18;
    *(void *)(a3 + 144) = v14;
    *(void *)(a3 + 88) = v17;
    *(double *)(a3 + 96) = v22;
    *(void *)(a3 + 104) = v20;
    *(void *)(a3 + 112) = v16;
    *(void *)(a3 + 160) = v14;
    *(_DWORD *)(a3 + 136) = 1;
    *(_DWORD *)(a3 + 140) = v15;
    *(_DWORD *)(a3 + 152) = 1;
    *(_DWORD *)(a3 + 156) = v15;
  }
}

uint64_t sub_24B478850(uint64_t a1, _DWORD *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_5:
    sub_24B47D810(v8, v6, v7, "asn1PD_SupportedWcdmaInfo");
    return v5;
  }
  int v9 = v4;
  *a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_5;
  }
  if (!v9) {
    return 0;
  }
  uint64_t v8 = sub_24B47ED0C(a1);
  uint64_t v5 = v8;
  if (v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_5;
  }
  return v5;
}

uint64_t sub_24B478908(uint64_t a1, _DWORD *a2)
{
  *a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
LABEL_33:
    sub_24B47D810(v7, v5, v6, "asn1PD_SupportedWLANApsChannel11a");
    return v4;
  }
  a2[1] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[2] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[3] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[4] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[5] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[6] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[7] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[8] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[9] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[10] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[11] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[12] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[13] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[14] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  a2[15] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_33;
  }
  return v4;
}

uint64_t sub_24B478BF4(uint64_t a1, _DWORD *a2)
{
  *a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
LABEL_29:
    sub_24B47D810(v7, v5, v6, "asn1PD_SupportedWLANApsChannel11bg");
    return v4;
  }
  a2[1] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[2] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[3] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[4] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[5] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[6] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[7] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[8] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[9] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[10] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[11] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[12] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  a2[13] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_29;
  }
  return v4;
}

uint64_t sub_24B478E88(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 16);
  unsigned __int8 v41 = 0;
  if (v5)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    unsigned int v8 = v5;
LABEL_7:
    sub_24B47D810(v8, v6, v7, "asn1PD_SupportedWLANApsList");
    return v5;
  }
  int v9 = v4;
  *(_DWORD *)a2 = sub_24B47DA28((uint64_t **)a1);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    unsigned int v8 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_7;
  }
  *(_DWORD *)(a2 + 4) = sub_24B47DA28((uint64_t **)a1);
  LOBYTE(v5) = *(unsigned char *)(a1 + 16);
  if ((_BYTE)v5)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    unsigned int v8 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_7;
  }
  unsigned int v5 = sub_24B47DB4C(a1, 1, 0x80u, &v41);
  double v35 = (int64x2_t *)(a2 + 8);
  sub_24B47A6D0((uint64_t *)(a2 + 8));
  if (!v5 && v41)
  {
    uint64_t v11 = 0;
    while (1)
    {
      int v36 = 0;
      int v38 = 0;
      uint64_t v39 = 0;
      std::string __p = 0;
      char v40 = -1;
      int v12 = sub_24B47DA28((uint64_t **)a1);
      unsigned int v13 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16)
        || (int v14 = v12,
            int v36 = 48,
            sub_24B47E048(a1, 0x30u, (unint64_t *)&__p, 0),
            unsigned int v13 = *(unsigned __int8 *)(a1 + 16),
            *(unsigned char *)(a1 + 16)))
      {
        sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SupportedWLANApData");
        goto LABEL_28;
      }
      LOBYTE(v42) = 0;
      int v15 = sub_24B47DA28((uint64_t **)a1);
      unsigned int v13 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16)) {
        break;
      }
      if (v15) {
        unsigned int v16 = sub_24B47F19C(a1, &v42);
      }
      else {
        unsigned int v16 = sub_24B47DB4C(a1, 0, 2u, &v42);
      }
      unsigned int v13 = v16;
      if (v16)
      {
        sub_24B47D810(v16, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_apDevType");
        goto LABEL_27;
      }
      if (v42 >= 3u)
      {
        unsigned int v13 = 4;
        *(unsigned char *)(a1 + 16) = 4;
        sub_24B47D810(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_apDevType");
        goto LABEL_27;
      }
      char v40 = (char)v42;
      if (v14)
      {
        unsigned int v17 = sub_24B47ED0C(a1);
        unsigned int v13 = v17;
        if (v17) {
          sub_24B47D810(v17, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SupportedWLANApData");
        }
      }
      else
      {
        unsigned int v13 = 0;
      }
LABEL_28:
      unint64_t v19 = *(void *)(a2 + 16);
      unint64_t v18 = *(void *)(a2 + 24);
      if (v19 >= v18)
      {
        unint64_t v21 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v19 - v35->i64[0]) >> 3);
        unint64_t v22 = v21 + 1;
        if (v21 + 1 > 0x666666666666666) {
          sub_24B3E3AAC();
        }
        unint64_t v23 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v18 - v35->i64[0]) >> 3);
        if (2 * v23 > v22) {
          unint64_t v22 = 2 * v23;
        }
        if (v23 >= 0x333333333333333) {
          unint64_t v24 = 0x666666666666666;
        }
        else {
          unint64_t v24 = v22;
        }
        uint64_t v45 = a2 + 24;
        if (v24)
        {
          if (v24 > 0x666666666666666) {
            sub_24B3E8068();
          }
          double v25 = operator new(40 * v24);
        }
        else
        {
          double v25 = 0;
        }
        long long v26 = &v25[40 * v21];
        BOOL v42 = v25;
        v43.i64[0] = (uint64_t)v26;
        v43.i64[1] = (uint64_t)v26;
        unsigned int v44 = &v25[40 * v24];
        *(_DWORD *)long long v26 = v36;
        *((void *)v26 + 2) = 0;
        *((void *)v26 + 3) = 0;
        *((void *)v26 + 1) = 0;
        sub_24B47A720((void *)v26 + 1, __p, (uint64_t)v38, v38 - (unsigned char *)__p);
        v25[40 * v21 + 32] = v40;
        uint64_t v27 = v43.i64[0];
        uint64_t v20 = v43.i64[1] + 40;
        v43.i64[1] += 40;
        uint64_t v29 = *(void *)(a2 + 8);
        unint64_t v28 = *(void *)(a2 + 16);
        if (v28 == v29)
        {
          int64x2_t v33 = vdupq_n_s64(v28);
        }
        else
        {
          uint64_t v30 = 0;
          do
          {
            uint64_t v31 = v27 + v30;
            uint64_t v32 = v28 + v30;
            *(_DWORD *)(v31 - 40) = *(_DWORD *)(v28 + v30 - 40);
            *(void *)(v31 - 24) = 0;
            *(void *)(v31 - 16) = 0;
            *(void *)(v31 - 32) = 0;
            *(_OWORD *)(v31 - 32) = *(_OWORD *)(v28 + v30 - 32);
            *(void *)(v31 - 16) = *(void *)(v28 + v30 - 16);
            *(void *)(v32 - 32) = 0;
            *(void *)(v32 - 24) = 0;
            *(void *)(v32 - 16) = 0;
            *(unsigned char *)(v31 - 8) = *(unsigned char *)(v28 + v30 - 8);
            v30 -= 40;
          }
          while (v28 + v30 != v29);
          int64x2_t v33 = *v35;
          uint64_t v20 = v43.i64[1];
          v27 += v30;
        }
        *(void *)(a2 + 8) = v27;
        *(void *)(a2 + 16) = v20;
        int64x2_t v43 = v33;
        __int16 v34 = *(char **)(a2 + 24);
        *(void *)(a2 + 24) = v44;
        unsigned int v44 = v34;
        BOOL v42 = (unsigned char *)v33.i64[0];
        sub_24B47A79C((uint64_t)&v42);
      }
      else
      {
        *(_DWORD *)unint64_t v19 = v36;
        *(void *)(v19 + 16) = 0;
        *(void *)(v19 + 24) = 0;
        *(void *)(v19 + 8) = 0;
        sub_24B47A720((void *)(v19 + 8), __p, (uint64_t)v38, v38 - (unsigned char *)__p);
        *(unsigned char *)(v19 + 32) = v40;
        uint64_t v20 = v19 + 40;
        *(void *)(a2 + 16) = v20;
      }
      *(void *)(a2 + 16) = v20;
      if (v13)
      {
        sub_24B47D810(v13, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SupportedWLANApsList");
        LOBYTE(v5) = v13;
      }
      if (__p)
      {
        int v38 = __p;
        operator delete(__p);
      }
      if (v13) {
        return v5;
      }
      if (++v11 >= (unint64_t)v41) {
        goto LABEL_56;
      }
    }
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_apDevType");
LABEL_27:
    sub_24B47D810(v13, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SupportedWLANApData");
    goto LABEL_28;
  }
  if (v5)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    unsigned int v8 = v5;
    goto LABEL_7;
  }
LABEL_56:
  if (*(_DWORD *)a2)
  {
    unsigned int v8 = sub_24B478908(a1, (_DWORD *)(a2 + 32));
    if (v8)
    {
      LOBYTE(v5) = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_7;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    unsigned int v8 = sub_24B478BF4(a1, (_DWORD *)(a2 + 96));
    if (v8)
    {
      LOBYTE(v5) = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_7;
    }
  }
  if (!v9)
  {
    LOBYTE(v5) = 0;
    return v5;
  }
  unsigned int v8 = sub_24B47ED0C(a1);
  LOBYTE(v5) = v8;
  if (v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  return v5;
}

void sub_24B4793D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  *(void *)(v18 + 16) = v19;
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B479414(uint64_t a1, _DWORD *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_27:
    sub_24B47D810(v8, v6, v7, "asn1PD_SupportedWLANInfo");
    return v5;
  }
  int v9 = v4;
  *a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[1] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[2] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[3] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[4] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[5] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[6] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[7] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[8] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[9] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[10] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  a2[11] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_27;
  }
  if (!v9) {
    return 0;
  }
  uint64_t v8 = sub_24B47ED0C(a1);
  uint64_t v5 = v8;
  if (!v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_27;
  }
  return v5;
}

uint64_t sub_24B4796AC(uint64_t a1, _DWORD *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_11:
    sub_24B47D810(v8, v6, v7, "asn1PD_SupportedNetworkInformation");
    return v5;
  }
  int v9 = v4;
  *a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[1] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[2] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[3] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  if (*a2)
  {
    uint64_t v8 = sub_24B479414(a1, a2 + 4);
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_11;
    }
  }
  if (a2[1])
  {
    uint64_t v8 = sub_24B478E88(a1, (uint64_t)(a2 + 16));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_11;
    }
  }
  a2[54] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[55] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  if (a2[2])
  {
    uint64_t v8 = sub_24B478850(a1, a2 + 56);
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_11;
    }
  }
  a2[57] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[58] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[59] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[60] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[61] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[62] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[63] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[64] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  a2[65] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  if (v9) {
    sub_24B47ED0C(a1);
  }
  return 0;
}

uint64_t sub_24B479A3C(uint64_t a1, _DWORD *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_15:
    sub_24B47D810(v8, v6, v7, "asn1PD_GNSSPosTechnology");
    return v5;
  }
  int v9 = v4;
  *a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  a2[1] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  a2[2] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  a2[3] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  a2[4] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_GNSSPosTechnology");
LABEL_14:
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_15;
  }
  a2[5] = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    goto LABEL_14;
  }
  if (!v9) {
    return 0;
  }
  uint64_t v8 = sub_24B47ED0C(a1);
  uint64_t v5 = v8;
  if (v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  return v5;
}

uint64_t sub_24B479BD4(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = sub_24B47DAA4(a1, 0, 9, a2);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MCC_MNC_Digit");
  }
  return v4;
}

uint64_t sub_24B479C28(uint64_t a1, uint64_t a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
LABEL_25:
    sub_24B47D810(v7, v5, v6, "asn1PE_CellGlobalIdEUTRA");
    return v4;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)a2);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 8);
    int v9 = *(_DWORD *)(a1 + 12);
    unsigned int v10 = *(unsigned __int8 *)(a1 + 16);
LABEL_24:
    sub_24B47D810(v10, v8, v9, "asn1PE_PLMN_Identity");
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = v4;
    goto LABEL_25;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v11 = *(void *)(a2 + 8);
    uint64_t v12 = *(void *)(a2 + 16);
    if (v12 - v11 != 3)
    {
      *(unsigned char *)(a1 + 16) = 4;
      sub_24B47D810(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeInteger");
      uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        int v13 = *(_DWORD *)(a1 + 8);
        int v14 = *(_DWORD *)(a1 + 12);
        int v15 = "asn1PE_MCC";
        LODWORD(v16) = *(unsigned __int8 *)(a1 + 16);
LABEL_23:
        sub_24B47D810(v16, v13, v14, v15);
        int v8 = *(_DWORD *)(a1 + 8);
        int v9 = *(_DWORD *)(a1 + 12);
        unsigned int v10 = v4;
        goto LABEL_24;
      }
      uint64_t v11 = *(void *)(a2 + 8);
      uint64_t v12 = *(void *)(a2 + 16);
    }
    if (v12 != v11)
    {
      unint64_t v17 = 0;
      while (1)
      {
        uint64_t v16 = sub_24B479BD4(a1, *(unsigned char *)(v11 + v17));
        if (v16) {
          break;
        }
        ++v17;
        uint64_t v11 = *(void *)(a2 + 8);
        if (v17 >= *(void *)(a2 + 16) - v11) {
          goto LABEL_14;
        }
      }
      uint64_t v4 = v16;
      int v13 = *(_DWORD *)(a1 + 8);
      int v14 = *(_DWORD *)(a1 + 12);
      int v15 = "asn1PE_MCC";
      goto LABEL_23;
    }
  }
LABEL_14:
  uint64_t v16 = sub_24B47DAA4(a1, 2, 3, *(_DWORD *)(a2 + 40) - *(_DWORD *)(a2 + 32));
  if (v16)
  {
    uint64_t v4 = v16;
    int v13 = *(_DWORD *)(a1 + 8);
    int v14 = *(_DWORD *)(a1 + 12);
    int v15 = "asn1PE_MNC";
    goto LABEL_23;
  }
  uint64_t v18 = *(void *)(a2 + 32);
  if (*(void *)(a2 + 40) != v18)
  {
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v16 = sub_24B479BD4(a1, *(unsigned char *)(v18 + v19));
      if (v16) {
        break;
      }
      ++v19;
      uint64_t v18 = *(void *)(a2 + 32);
      if (v19 >= *(void *)(a2 + 40) - v18) {
        goto LABEL_20;
      }
    }
    uint64_t v4 = v16;
    int v13 = *(_DWORD *)(a1 + 8);
    int v14 = *(_DWORD *)(a1 + 12);
    int v15 = "asn1PE_MNC";
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v20 = sub_24B47DEA0(a1, 0, 0, 0x1Cu, (void *)(a2 + 56), 1);
  uint64_t v4 = v20;
  if (v20)
  {
    sub_24B47D810(v20, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellIdentity");
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = v4;
    goto LABEL_25;
  }
  return v4;
}

uint64_t sub_24B479E6C(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_24B47DEA0(a1, 0, 0, 0x10u, a2, 1);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_TrackingAreaCode");
  }
  return v4;
}

uint64_t sub_24B479EC8(uint64_t a1, unsigned __int16 a2)
{
  uint64_t v3 = sub_24B47DAA4(a1, 0, 503, a2);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PhysCellId");
  }
  return v4;
}

uint64_t sub_24B479F1C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = sub_24B47DAA4(a1, 0, 97, a2);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_RSRP_Range");
  }
  return v4;
}

uint64_t sub_24B479F70(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = sub_24B47DAA4(a1, 0, 34, a2);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_RSRQ_Range");
  }
  return v4;
}

uint64_t sub_24B479FC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_24B47DAA4(a1, 1, 8, (unint64_t)(a2[1] - *a2) >> 7);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_31;
  }
  uint64_t v8 = *a2;
  if (a2[1] == *a2) {
    return 0;
  }
  uint64_t v9 = 0;
  unint64_t v10 = 0;
  while (1)
  {
    sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(v8 + v9));
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      int v18 = *(_DWORD *)(a1 + 8);
      int v19 = *(_DWORD *)(a1 + 12);
      LODWORD(v11) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_30;
    }
    uint64_t v11 = sub_24B479EC8(a1, *(_WORD *)(v8 + v9 + 4));
    if (v11)
    {
      uint64_t v5 = v11;
      int v18 = *(_DWORD *)(a1 + 8);
      int v19 = *(_DWORD *)(a1 + 12);
      goto LABEL_30;
    }
    if (*(_DWORD *)(v8 + v9))
    {
      uint64_t v12 = sub_24B479C28(a1, v8 + v9 + 8);
      if (v12)
      {
        uint64_t v5 = v12;
        int v22 = *(_DWORD *)(a1 + 8);
        int v23 = *(_DWORD *)(a1 + 12);
      }
      else
      {
        uint64_t v12 = sub_24B479E6C(a1, (void *)(v8 + v9 + 88));
        if (!v12) {
          goto LABEL_10;
        }
        uint64_t v5 = v12;
        int v22 = *(_DWORD *)(a1 + 8);
        int v23 = *(_DWORD *)(a1 + 12);
      }
      sub_24B47D810(v12, v22, v23, "asn1PE_cgi_Info");
      int v18 = *(_DWORD *)(a1 + 8);
      int v19 = *(_DWORD *)(a1 + 12);
      LODWORD(v11) = v5;
      goto LABEL_30;
    }
LABEL_10:
    sub_24B47D9A0((uint64_t **)a1, 0);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      int v20 = *(_DWORD *)(a1 + 8);
      int v21 = *(_DWORD *)(a1 + 12);
      LODWORD(v15) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_28;
    }
    uint64_t v13 = v8 + v9;
    sub_24B47D9A0((uint64_t **)a1, *(unsigned __int8 *)(v13 + 120) < 0x62u);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      int v20 = *(_DWORD *)(a1 + 8);
      int v21 = *(_DWORD *)(a1 + 12);
      LODWORD(v15) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_28;
    }
    sub_24B47D9A0((uint64_t **)a1, *(unsigned __int8 *)(v13 + 121) < 0x23u);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      int v20 = *(_DWORD *)(a1 + 8);
      int v21 = *(_DWORD *)(a1 + 12);
      LODWORD(v15) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_28;
    }
    unsigned int v14 = *(unsigned __int8 *)(v13 + 120);
    if (v14 <= 0x61)
    {
      uint64_t v15 = sub_24B479F1C(a1, v14);
      if (v15) {
        break;
      }
    }
    unsigned int v16 = *(unsigned __int8 *)(v13 + 121);
    if (v16 < 0x23)
    {
      uint64_t v17 = sub_24B479F70(a1, v16);
      if (v17)
      {
        uint64_t v5 = v17;
        goto LABEL_29;
      }
    }
    ++v10;
    uint64_t v8 = *a2;
    v9 += 128;
    if (v10 >= (a2[1] - *a2) >> 7) {
      return 0;
    }
  }
  uint64_t v5 = v15;
  int v20 = *(_DWORD *)(a1 + 8);
  int v21 = *(_DWORD *)(a1 + 12);
LABEL_28:
  sub_24B47D810(v15, v20, v21, "asn1PE_measResult");
LABEL_29:
  int v18 = *(_DWORD *)(a1 + 8);
  int v19 = *(_DWORD *)(a1 + 12);
  LODWORD(v11) = v5;
LABEL_30:
  sub_24B47D810(v11, v18, v19, "asn1PE_MeasResultEUTRA");
  int v6 = *(_DWORD *)(a1 + 8);
  int v7 = *(_DWORD *)(a1 + 12);
  LODWORD(v4) = v5;
LABEL_31:
  sub_24B47D810(v4, v6, v7, "asn1PE_MeasResultListEUTRA");
  return v5;
}

uint64_t sub_24B47A250(uint64_t a1, uint64_t a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_17:
    sub_24B47D810(v7, v5, v6, "asn1PE_LteCellInformation");
    return v4;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)a2);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_17;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 4));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_17;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 8));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_17;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 12));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_17;
  }
  uint64_t v7 = sub_24B479C28(a1, a2 + 16);
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_17;
  }
  uint64_t v7 = sub_24B479EC8(a1, *(_WORD *)(a2 + 96));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_17;
  }
  uint64_t v7 = sub_24B479E6C(a1, (void *)(a2 + 104));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_17;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v7 = sub_24B479F1C(a1, *(unsigned char *)(a2 + 128));
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_17;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    uint64_t v7 = sub_24B479F70(a1, *(unsigned char *)(a2 + 129));
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_17;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    uint64_t v7 = sub_24B47DAA4(a1, 0, 1282, *(unsigned __int16 *)(a2 + 130));
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_17;
    }
  }
  if (!*(_DWORD *)(a2 + 12)) {
    return 0;
  }
  uint64_t v7 = sub_24B479FC4(a1, (uint64_t *)(a2 + 136));
  uint64_t v4 = v7;
  if (v7)
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_17;
  }
  return v4;
}

uint64_t sub_24B47A4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B47F13C(a1, 0);
  int32x2_t v13 = 0;
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    uint64_t v4 = sub_24B47EE94(a1, &v13);
    if (v4)
    {
      uint64_t v5 = v4;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      sub_24B47D9A0((uint64_t **)a1, 0);
      uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        int v6 = *(_DWORD *)(a1 + 8);
        int v7 = *(_DWORD *)(a1 + 12);
        LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
      }
      else
      {
        uint64_t v4 = sub_24B47DAA4(a1, 0, 5, **(unsigned __int16 **)(a2 + 144) - 1);
        if (v4)
        {
          uint64_t v5 = v4;
          int v6 = *(_DWORD *)(a1 + 8);
          int v7 = *(_DWORD *)(a1 + 12);
        }
        else
        {
          uint64_t v8 = *(_WORD **)(a2 + 144);
          switch(*v8)
          {
            case 1:
            case 2:
            case 4:
            case 5:
              uint64_t v5 = 1;
              *(unsigned char *)(a1 + 16) = 1;
              int v9 = *(_DWORD *)(a1 + 8);
              int v10 = *(_DWORD *)(a1 + 12);
              unsigned int v11 = 1;
              goto LABEL_15;
            case 3:
              uint64_t v5 = sub_24B47A250(a1, (uint64_t)(v8 + 4));
              if (v5) {
                goto LABEL_16;
              }
              uint64_t v4 = sub_24B47EEF4(a1, &v13);
              uint64_t v5 = v4;
              if (!v4) {
                return v5;
              }
              int v6 = *(_DWORD *)(a1 + 8);
              int v7 = *(_DWORD *)(a1 + 12);
              break;
            default:
              uint64_t v5 = 4;
              *(unsigned char *)(a1 + 16) = 4;
              int v9 = *(_DWORD *)(a1 + 8);
              int v10 = *(_DWORD *)(a1 + 12);
              unsigned int v11 = 4;
LABEL_15:
              sub_24B47D810(v11, v9, v10, "asn1PE_CellInfo_VER2");
LABEL_16:
              int v6 = *(_DWORD *)(a1 + 8);
              int v7 = *(_DWORD *)(a1 + 12);
              LODWORD(v4) = v5;
              break;
          }
        }
      }
    }
  }
  sub_24B47D810(v4, v6, v7, "asn1PE_CellInfo_VER2");
  return v5;
}

void sub_24B47A6D0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 40)
  {
    uint64_t v4 = *(void **)(i - 32);
    if (v4)
    {
      *(void *)(i - 24) = v4;
      operator delete(v4);
    }
  }
  a1[1] = v2;
}

void *sub_24B47A720(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    int v6 = result;
    BOOL result = sub_24B3E3A68(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      BOOL result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_24B47A780(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B47A79C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != v3)
  {
    *(void *)(a1 + 16) = v2 - 40;
    uint64_t v4 = *(void **)(v2 - 32);
    if (v4)
    {
      *(void *)(v2 - 24) = v4;
      operator delete(v4);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 40;
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_24B47A800(uint64_t a1, unsigned __int8 *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  unsigned __int8 v11 = 0;
  if (v5)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
  }
  else
  {
    if (v4)
    {
      uint64_t v8 = sub_24B47F19C(a1, &v11);
      if (v8)
      {
        uint64_t v5 = v8;
        int v6 = *(_DWORD *)(a1 + 8);
        int v7 = *(_DWORD *)(a1 + 12);
        goto LABEL_3;
      }
      unsigned __int8 v10 = v11;
    }
    else
    {
      uint64_t v8 = sub_24B47DB4C(a1, 0, 1u, &v11);
      if (v8)
      {
        uint64_t v5 = v8;
        int v6 = *(_DWORD *)(a1 + 8);
        int v7 = *(_DWORD *)(a1 + 12);
        goto LABEL_3;
      }
      unsigned __int8 v10 = v11 + 1;
    }
    if (v10 <= 1u)
    {
      uint64_t v5 = 0;
      *a2 = v10;
      return v5;
    }
    uint64_t v5 = 4;
    *(unsigned char *)(a1 + 16) = 4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = 4;
  }
LABEL_3:
  sub_24B47D810(v8, v6, v7, "asn1PD_NotificationMode");
  return v5;
}

uint64_t sub_24B47A904(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_18:
    sub_24B47D810(v8, v6, v7, "asn1PD_HistoricReporting");
    return v5;
  }
  int v9 = v4;
  *(_DWORD *)(a2 + 32) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_18;
  }
  int v10 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  unsigned __int8 v18 = 0;
  if (v5)
  {
LABEL_17:
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_18;
  }
  if (v10)
  {
    uint64_t v11 = sub_24B47F19C(a1, &v18);
    if (v11)
    {
      uint64_t v5 = v11;
      int v12 = *(_DWORD *)(a1 + 8);
      int v13 = *(_DWORD *)(a1 + 12);
      unsigned int v14 = "asn1PD_AllowedReportingType";
LABEL_16:
      sub_24B47D810(v11, v12, v13, v14);
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v11 = sub_24B47DB4C(a1, 0, 2u, &v18);
    if (v11)
    {
      uint64_t v5 = v11;
      int v12 = *(_DWORD *)(a1 + 8);
      int v13 = *(_DWORD *)(a1 + 12);
      unsigned int v14 = "asn1PD_AllowedReportingType";
      goto LABEL_16;
    }
  }
  if (v18 >= 3u)
  {
    uint64_t v5 = 4;
    *(unsigned char *)(a1 + 16) = 4;
    int v12 = *(_DWORD *)(a1 + 8);
    int v13 = *(_DWORD *)(a1 + 12);
    unsigned int v14 = "asn1PD_AllowedReportingType";
    LODWORD(v11) = 4;
    goto LABEL_16;
  }
  *(unsigned char *)a2 = v18;
  if (*(_DWORD *)(a2 + 32))
  {
    int v15 = sub_24B47DA28((uint64_t **)a1);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      int v12 = *(_DWORD *)(a1 + 8);
      int v13 = *(_DWORD *)(a1 + 12);
      unsigned int v14 = "asn1PD_ReportingCriteria";
      LODWORD(v11) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_16;
    }
    int v17 = v15;
    *(_DWORD *)(a2 + 20) = sub_24B47DA28((uint64_t **)a1);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      int v12 = *(_DWORD *)(a1 + 8);
      int v13 = *(_DWORD *)(a1 + 12);
      unsigned int v14 = "asn1PD_ReportingCriteria";
      LODWORD(v11) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_16;
    }
    *(_DWORD *)(a2 + 24) = sub_24B47DA28((uint64_t **)a1);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      int v12 = *(_DWORD *)(a1 + 8);
      int v13 = *(_DWORD *)(a1 + 12);
      unsigned int v14 = "asn1PD_ReportingCriteria";
      LODWORD(v11) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_16;
    }
    *(_DWORD *)(a2 + 28) = sub_24B47DA28((uint64_t **)a1);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16) || *(_DWORD *)(a2 + 20) && (uint64_t v5 = sub_24B47ABF4(a1, (_DWORD *)(a2 + 4)), v5))
    {
      int v12 = *(_DWORD *)(a1 + 8);
      int v13 = *(_DWORD *)(a1 + 12);
      unsigned int v14 = "asn1PD_ReportingCriteria";
      LODWORD(v11) = v5;
      goto LABEL_16;
    }
    if (*(_DWORD *)(a2 + 24))
    {
      uint64_t v11 = sub_24B47DDC8(a1, 1, 0x10000u, (_DWORD *)(a2 + 12));
      if (v11)
      {
        uint64_t v5 = v11;
        int v12 = *(_DWORD *)(a1 + 8);
        int v13 = *(_DWORD *)(a1 + 12);
        unsigned int v14 = "asn1PD_ReportingCriteria";
        goto LABEL_16;
      }
    }
    if (*(_DWORD *)(a2 + 28))
    {
      uint64_t v11 = sub_24B47DDC8(a1, 0, 0x15180u, (_DWORD *)(a2 + 16));
      if (v11)
      {
        uint64_t v5 = v11;
        int v12 = *(_DWORD *)(a1 + 8);
        int v13 = *(_DWORD *)(a1 + 12);
        unsigned int v14 = "asn1PD_ReportingCriteria";
        goto LABEL_16;
      }
    }
    if (v17)
    {
      uint64_t v11 = sub_24B47ED0C(a1);
      if (v11)
      {
        uint64_t v5 = v11;
        int v12 = *(_DWORD *)(a1 + 8);
        int v13 = *(_DWORD *)(a1 + 12);
        unsigned int v14 = "asn1PD_ReportingCriteria";
        goto LABEL_16;
      }
    }
  }
  if (!v9) {
    return 0;
  }
  uint64_t v8 = sub_24B47ED0C(a1);
  uint64_t v5 = v8;
  if (v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_18;
  }
  return v5;
}

uint64_t sub_24B47ABF4(uint64_t a1, _DWORD *a2)
{
  uint64_t v4 = sub_24B47DCF4(a1, -525600, -1, a2);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
LABEL_5:
    sub_24B47D810(v4, v6, v7, "asn1PD_TimeWindow");
    return v5;
  }
  uint64_t v4 = sub_24B47DCF4(a1, -525599, 0, a2 + 1);
  uint64_t v5 = v4;
  if (v4)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_5;
  }
  return v5;
}

uint64_t sub_24B47AC90(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_18:
    sub_24B47D810(v8, v6, v7, "asn1PD_ProtectionLevel");
    return v5;
  }
  int v9 = v4;
  *(_DWORD *)(a2 + 64) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_18;
  }
  int v10 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  unsigned __int8 v18 = 0;
  if (v5)
  {
LABEL_17:
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_18;
  }
  if (v10)
  {
    uint64_t v11 = sub_24B47F19C(a1, &v18);
    if (v11)
    {
      uint64_t v5 = v11;
      int v12 = *(_DWORD *)(a1 + 8);
      int v13 = *(_DWORD *)(a1 + 12);
      unsigned int v14 = "asn1PD_ProtLevel";
LABEL_16:
      sub_24B47D810(v11, v12, v13, v14);
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v11 = sub_24B47DB4C(a1, 0, 1u, &v18);
    if (v11)
    {
      uint64_t v5 = v11;
      int v12 = *(_DWORD *)(a1 + 8);
      int v13 = *(_DWORD *)(a1 + 12);
      unsigned int v14 = "asn1PD_ProtLevel";
      goto LABEL_16;
    }
  }
  if (v18 >= 2u)
  {
    uint64_t v5 = 4;
    *(unsigned char *)(a1 + 16) = 4;
    int v12 = *(_DWORD *)(a1 + 8);
    int v13 = *(_DWORD *)(a1 + 12);
    unsigned int v14 = "asn1PD_ProtLevel";
    LODWORD(v11) = 4;
    goto LABEL_16;
  }
  *(unsigned char *)a2 = v18;
  if (*(_DWORD *)(a2 + 64))
  {
    int v15 = sub_24B47DA28((uint64_t **)a1);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      int v12 = *(_DWORD *)(a1 + 8);
      int v13 = *(_DWORD *)(a1 + 12);
      unsigned int v14 = "asn1PD_BasicProtectionParams";
      LODWORD(v11) = *(unsigned __int8 *)(a1 + 16);
      goto LABEL_16;
    }
    int v17 = v15;
    sub_24B47E048(a1, 0x40u, (unint64_t *)(a2 + 8), 0);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_BasicProtectionParams_KeyIdentifier");
      int v12 = *(_DWORD *)(a1 + 8);
      int v13 = *(_DWORD *)(a1 + 12);
      unsigned int v14 = "asn1PD_BasicProtectionParams";
      LODWORD(v11) = v5;
      goto LABEL_16;
    }
    uint64_t v11 = sub_24B47DDC8(a1, 0, 0xFFFFu, (_DWORD *)(a2 + 32));
    if (v11)
    {
      uint64_t v5 = v11;
      int v12 = *(_DWORD *)(a1 + 8);
      int v13 = *(_DWORD *)(a1 + 12);
      unsigned int v14 = "asn1PD_BasicProtectionParams";
      goto LABEL_16;
    }
    sub_24B47E048(a1, 0x20u, (unint64_t *)(a2 + 40), 0);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_BasicProtectionParams_BasicMAC");
      int v12 = *(_DWORD *)(a1 + 8);
      int v13 = *(_DWORD *)(a1 + 12);
      unsigned int v14 = "asn1PD_BasicProtectionParams";
      LODWORD(v11) = v5;
      goto LABEL_16;
    }
    if (v17)
    {
      uint64_t v11 = sub_24B47ED0C(a1);
      if (v11)
      {
        uint64_t v5 = v11;
        int v12 = *(_DWORD *)(a1 + 8);
        int v13 = *(_DWORD *)(a1 + 12);
        unsigned int v14 = "asn1PD_BasicProtectionParams";
        goto LABEL_16;
      }
    }
  }
  if (!v9) {
    return 0;
  }
  uint64_t v8 = sub_24B47ED0C(a1);
  uint64_t v5 = v8;
  if (v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_18;
  }
  return v5;
}

uint64_t sub_24B47AF34(uint64_t a1, uint64_t a2)
{
  v14[0] = 0;
  int v15 = 0;
  uint64_t v4 = sub_24B47ED58(a1, (uint64_t)v14);
  int32x2_t v12 = 0;
  int v13 = 0;
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    sub_24B47EBE8(a1, &v12);
    if (v4)
    {
      uint64_t v5 = v4;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      int v8 = sub_24B47DA28((uint64_t **)a1);
      uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        int v6 = *(_DWORD *)(a1 + 8);
        int v7 = *(_DWORD *)(a1 + 12);
        LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
      }
      else
      {
        int v9 = v8;
        *(_DWORD *)(a2 + 280) = sub_24B47DA28((uint64_t **)a1);
        uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
        if (*(unsigned char *)(a1 + 16))
        {
          int v6 = *(_DWORD *)(a1 + 8);
          int v7 = *(_DWORD *)(a1 + 12);
          LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
        }
        else
        {
          *(_DWORD *)(a2 + 284) = sub_24B47DA28((uint64_t **)a1);
          uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
          if (*(unsigned char *)(a1 + 16))
          {
            int v6 = *(_DWORD *)(a1 + 8);
            int v7 = *(_DWORD *)(a1 + 12);
            LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
          }
          else
          {
            *(_DWORD *)(a2 + 288) = sub_24B47DA28((uint64_t **)a1);
            uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
            if (*(unsigned char *)(a1 + 16))
            {
              int v6 = *(_DWORD *)(a1 + 8);
              int v7 = *(_DWORD *)(a1 + 12);
              LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
            }
            else
            {
              *(_DWORD *)(a2 + 292) = sub_24B47DA28((uint64_t **)a1);
              uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
              if (*(unsigned char *)(a1 + 16))
              {
                int v6 = *(_DWORD *)(a1 + 8);
                int v7 = *(_DWORD *)(a1 + 12);
                LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
              }
              else
              {
                *(_DWORD *)(a2 + 296) = sub_24B47DA28((uint64_t **)a1);
                uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
                if (*(unsigned char *)(a1 + 16))
                {
                  int v6 = *(_DWORD *)(a1 + 8);
                  int v7 = *(_DWORD *)(a1 + 12);
                  LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
                }
                else
                {
                  *(_DWORD *)(a2 + 300) = sub_24B47DA28((uint64_t **)a1);
                  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
                  if (*(unsigned char *)(a1 + 16))
                  {
                    int v6 = *(_DWORD *)(a1 + 8);
                    int v7 = *(_DWORD *)(a1 + 12);
                    LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
                  }
                  else
                  {
                    *(_DWORD *)(a2 + 304) = sub_24B47DA28((uint64_t **)a1);
                    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
                    if (*(unsigned char *)(a1 + 16))
                    {
                      int v6 = *(_DWORD *)(a1 + 8);
                      int v7 = *(_DWORD *)(a1 + 12);
                      LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
                    }
                    else
                    {
                      *(_DWORD *)(a2 + 308) = sub_24B47DA28((uint64_t **)a1);
                      uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
                      if (*(unsigned char *)(a1 + 16)
                        || *(_DWORD *)(a2 + 280) && (uint64_t v5 = sub_24B47A800(a1, (unsigned __int8 *)(a2 + 312)), v5))
                      {
                        int v6 = *(_DWORD *)(a1 + 8);
                        int v7 = *(_DWORD *)(a1 + 12);
                        LODWORD(v4) = v5;
                      }
                      else if (*(_DWORD *)(a2 + 284) && (uint64_t v4 = sub_24B4796AC(a1, (_DWORD *)(a2 + 320)), v4))
                      {
                        uint64_t v5 = v4;
                        int v6 = *(_DWORD *)(a1 + 8);
                        int v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (*(_DWORD *)(a2 + 288) && (uint64_t v4 = sub_24B47D450(a1, (unsigned char *)(a2 + 584)), v4))
                      {
                        uint64_t v5 = v4;
                        int v6 = *(_DWORD *)(a1 + 8);
                        int v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (*(_DWORD *)(a2 + 292) && (uint64_t v4 = sub_24B4A9474(a1, a2 + 592), v4))
                      {
                        uint64_t v5 = v4;
                        int v6 = *(_DWORD *)(a1 + 8);
                        int v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (*(_DWORD *)(a2 + 296) && (uint64_t v4 = sub_24B47A904(a1, a2 + 680), v4))
                      {
                        uint64_t v5 = v4;
                        int v6 = *(_DWORD *)(a1 + 8);
                        int v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (*(_DWORD *)(a2 + 300) && (uint64_t v4 = sub_24B47AC90(a1, a2 + 720), v4))
                      {
                        uint64_t v5 = v4;
                        int v6 = *(_DWORD *)(a1 + 8);
                        int v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (*(_DWORD *)(a2 + 304) && (uint64_t v4 = sub_24B479A3C(a1, (_DWORD *)(a2 + 792)), v4))
                      {
                        uint64_t v5 = v4;
                        int v6 = *(_DWORD *)(a1 + 8);
                        int v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (*(_DWORD *)(a2 + 308) {
                             && (uint64_t v4 = sub_24B47DCF4(a1, 0, 255, (_DWORD *)(a2 + 816)), v4))
                      }
                      {
                        uint64_t v5 = v4;
                        int v6 = *(_DWORD *)(a1 + 8);
                        int v7 = *(_DWORD *)(a1 + 12);
                      }
                      else if (v9)
                      {
                        uint64_t v5 = 1;
                        *(unsigned char *)(a1 + 16) = 1;
                        sub_24B47D810(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SUPLINIT_VER2");
                        int v6 = *(_DWORD *)(a1 + 8);
                        int v7 = *(_DWORD *)(a1 + 12);
                        LODWORD(v4) = 1;
                      }
                      else
                      {
                        __int32 v11 = v12.i32[0];
                        *(_DWORD *)(a1 + 8) = v13 + v12.i32[1];
                        *(_DWORD *)(a1 + 12) = v11;
                        uint64_t v4 = sub_24B47EC74(a1, v14, 1u);
                        uint64_t v5 = v4;
                        if (!v4) {
                          return v5;
                        }
                        int v6 = *(_DWORD *)(a1 + 8);
                        int v7 = *(_DWORD *)(a1 + 12);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  sub_24B47D810(v4, v6, v7, "asn1PD_SUPLINIT_VER2");
  return v5;
}

uint64_t sub_24B47B344()
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  if (qword_26B17C3D8 != -1) {
    dispatch_once(&qword_26B17C3D8, &unk_26FE85F98);
  }
  uint64_t result = qword_26B17C3D0;
  if (!qword_26B17C3D0)
  {
    uint64_t v1 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v2 = 136315138;
      uint64_t v3 = "GetInstance";
      _os_log_error_impl(&dword_24B3DE000, v1, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v2, 0xCu);
    }
    __assert_rtn("GetInstance", "SuplLppProvider.cpp", 43, "false && \"Memory allocation failure\"");
  }
  return result;
}

void *sub_24B47B43C()
{
  uint64_t result = operator new(0x18uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    *uint64_t result = 0;
    result[1] = 0;
    result[2] = 0;
  }
  qword_26B17C3D0 = (uint64_t)result;
  return result;
}

void sub_24B47B474(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (!a2)
  {
    uint64_t v4 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    int v7 = 67109120;
    int v8 = 513;
    goto LABEL_9;
  }
  uint64_t v3 = *(void *)(sub_24B4A4C30() + 24);
  if (!v3)
  {
LABEL_5:
    uint64_t v4 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    int v7 = 67109120;
    int v8 = 513;
LABEL_9:
    _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v7, 8u);
    return;
  }
  while (*(_DWORD *)v3 != *(_DWORD *)a2)
  {
    uint64_t v3 = *(void *)(v3 + 8);
    if (!v3) {
      goto LABEL_5;
    }
  }
  if (*(unsigned char *)(a2 + 32) || *(void *)(a2 + 8) == *(void *)(a2 + 16))
  {
    uint64_t v5 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v7 = 67109120;
      int v8 = 515;
      _os_log_error_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v7, 8u);
    }
  }
  sub_24B47D29C(v3 + 16, a2);
  unsigned int v6 = *(_DWORD *)(v3 + 584);
  if (v6) {
    sub_24B4A8434(v3 - 8, v6);
  }
}

void sub_24B47B610(void *a1, uint64_t a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  if (!a2)
  {
    uint64_t v3 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    int v6 = 67109120;
    int v7 = 515;
LABEL_14:
    _os_log_error_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v6, 8u);
    return;
  }
  if (*(unsigned char *)(a2 + 4) || (v5 = *(void *)(a2 + 8), uint64_t v4 = *(char **)(a2 + 16), (char *)v5 == v4))
  {
    uint64_t v3 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    int v6 = 67109120;
    int v7 = 515;
    goto LABEL_14;
  }
  if ((void *)(a2 + 8) != a1)
  {
    sub_24B3EAC0C(a1, *(char **)(a2 + 8), v4, (unint64_t)&v4[-v5]);
    uint64_t v5 = *(void *)(a2 + 8);
    uint64_t v4 = *(char **)(a2 + 16);
  }
  sub_24B47CB4C(v5, (uint64_t)&v4[-v5]);
}

uint64_t sub_24B47B76C(uint64_t a1, unsigned __int8 *a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_9:
    sub_24B47D810(v7, v5, v6, "asn1PE_PosProtocolVersion3GPP");
    return v4;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 255, *a2);
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 255, a2[1]);
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 255, a2[2]);
  uint64_t v4 = v7;
  if (v7)
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  return v4;
}

uint64_t sub_24B47B858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B47F068(a1, 1, 1);
  if (*(_DWORD *)(a2 + 4)) {
    BOOL v5 = *(_DWORD *)(a2 + 12) == 0;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5
    || (*(_DWORD *)(a2 + 8) ? (BOOL v6 = *(_DWORD *)(a2 + 16) == 0) : (BOOL v6 = 0),
        v6 || (uint64_t v7 = v4, *(_DWORD *)a2) && !*(_DWORD *)(a2 + 20) || *(_DWORD *)(a2 + 28) && !*(_DWORD *)(a2 + 24)))
  {
    int v8 = *(_DWORD *)(a1 + 8);
    int v9 = *(_DWORD *)(a1 + 12);
    uint64_t v7 = 1;
    LODWORD(v4) = 1;
  }
  else
  {
    int32x2_t v11 = 0;
    if (v4)
    {
      int v8 = *(_DWORD *)(a1 + 8);
      int v9 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      uint64_t v4 = sub_24B47EE94(a1, &v11);
      if (v4)
      {
        uint64_t v7 = v4;
        int v8 = *(_DWORD *)(a1 + 8);
        int v9 = *(_DWORD *)(a1 + 12);
      }
      else
      {
        sub_24B47D9A0((uint64_t **)a1, 0);
        uint64_t v7 = *(unsigned __int8 *)(a1 + 16);
        if (*(unsigned char *)(a1 + 16))
        {
          int v8 = *(_DWORD *)(a1 + 8);
          int v9 = *(_DWORD *)(a1 + 12);
          LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
        }
        else
        {
          sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 12));
          uint64_t v7 = *(unsigned __int8 *)(a1 + 16);
          if (*(unsigned char *)(a1 + 16))
          {
            int v8 = *(_DWORD *)(a1 + 8);
            int v9 = *(_DWORD *)(a1 + 12);
            LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
          }
          else
          {
            sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 16));
            uint64_t v7 = *(unsigned __int8 *)(a1 + 16);
            if (*(unsigned char *)(a1 + 16))
            {
              int v8 = *(_DWORD *)(a1 + 8);
              int v9 = *(_DWORD *)(a1 + 12);
              LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
            }
            else
            {
              sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 20));
              uint64_t v7 = *(unsigned __int8 *)(a1 + 16);
              if (*(unsigned char *)(a1 + 16))
              {
                int v8 = *(_DWORD *)(a1 + 8);
                int v9 = *(_DWORD *)(a1 + 12);
                LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
              }
              else
              {
                sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 24));
                uint64_t v7 = *(unsigned __int8 *)(a1 + 16);
                if (*(unsigned char *)(a1 + 16))
                {
                  int v8 = *(_DWORD *)(a1 + 8);
                  int v9 = *(_DWORD *)(a1 + 12);
                  LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
                }
                else
                {
                  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 28));
                  uint64_t v7 = *(unsigned __int8 *)(a1 + 16);
                  if (*(unsigned char *)(a1 + 16))
                  {
                    int v8 = *(_DWORD *)(a1 + 8);
                    int v9 = *(_DWORD *)(a1 + 12);
                    LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
                  }
                  else if (*(_DWORD *)(a2 + 12) && (uint64_t v4 = sub_24B47B76C(a1, (unsigned __int8 *)(a2 + 32)), v4))
                  {
                    uint64_t v7 = v4;
                    int v8 = *(_DWORD *)(a1 + 8);
                    int v9 = *(_DWORD *)(a1 + 12);
                  }
                  else if (*(_DWORD *)(a2 + 16) || *(_DWORD *)(a2 + 20))
                  {
                    uint64_t v7 = 1;
                    *(unsigned char *)(a1 + 16) = 1;
                    sub_24B47D810(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PosProtocol_VER2");
                    int v8 = *(_DWORD *)(a1 + 8);
                    int v9 = *(_DWORD *)(a1 + 12);
                    LODWORD(v4) = 1;
                  }
                  else if (*(_DWORD *)(a2 + 24) && (uint64_t v4 = sub_24B47B76C(a1, (unsigned __int8 *)(a2 + 35)), v4))
                  {
                    uint64_t v7 = v4;
                    int v8 = *(_DWORD *)(a1 + 8);
                    int v9 = *(_DWORD *)(a1 + 12);
                  }
                  else
                  {
                    uint64_t v4 = sub_24B47EEF4(a1, &v11);
                    uint64_t v7 = v4;
                    if (!v4) {
                      return v7;
                    }
                    int v8 = *(_DWORD *)(a1 + 8);
                    int v9 = *(_DWORD *)(a1 + 12);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  sub_24B47D810(v4, v8, v9, "asn1PE_PosProtocol_VER2");
  return v7;
}

uint64_t sub_24B47BB60(uint64_t a1, uint64_t a2)
{
  v14[0] = 0;
  int v15 = 0;
  uint64_t v4 = sub_24B47ED58(a1, (uint64_t)v14);
  int32x2_t v12 = 0;
  int v13 = 0;
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    sub_24B47EBE8(a1, &v12);
    if (v4)
    {
      uint64_t v5 = v4;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      int v8 = sub_24B47DA28((uint64_t **)a1);
      uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        int v6 = *(_DWORD *)(a1 + 8);
        int v7 = *(_DWORD *)(a1 + 12);
        LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
      }
      else
      {
        int v9 = v8;
        *(_DWORD *)(a2 + 84) = sub_24B47DA28((uint64_t **)a1);
        uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
        if (*(unsigned char *)(a1 + 16))
        {
          int v6 = *(_DWORD *)(a1 + 8);
          int v7 = *(_DWORD *)(a1 + 12);
          LODWORD(v4) = *(unsigned __int8 *)(a1 + 16);
        }
        else if (v9 && (uint64_t v4 = sub_24B47ED0C(a1), v4))
        {
          uint64_t v5 = v4;
          int v6 = *(_DWORD *)(a1 + 8);
          int v7 = *(_DWORD *)(a1 + 12);
        }
        else
        {
          __int32 v11 = v12.i32[0];
          *(_DWORD *)(a1 + 8) = v13 + v12.i32[1];
          *(_DWORD *)(a1 + 12) = v11;
          uint64_t v4 = sub_24B47EC74(a1, v14, 1u);
          uint64_t v5 = v4;
          if (!v4) {
            return v5;
          }
          int v6 = *(_DWORD *)(a1 + 8);
          int v7 = *(_DWORD *)(a1 + 12);
        }
      }
    }
  }
  sub_24B47D810(v4, v6, v7, "asn1PD_Notification_VER2");
  return v5;
}

uint64_t sub_24B47BCB4(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v12 = 0;
  uint64_t v4 = sub_24B47EE38(a1, &v12);
  int32x2_t v10 = 0;
  int v11 = 0;
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
LABEL_7:
    sub_24B47D810(v4, v6, v7, "asn1PD_PosPayLoadVer2");
    return v5;
  }
  *(_WORD *)a2 = v12 + 4;
  sub_24B47EBE8(a1, &v10);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  uint64_t v4 = sub_24B47BDB4(a1, a2 + 80);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  if (*(_DWORD *)(a2 + 80)) {
    *(_WORD *)a2 = 4;
  }
  if (*(_DWORD *)(a2 + 84)) {
    *(_WORD *)a2 = 5;
  }
  uint64_t v5 = 0;
  __int32 v9 = v10.i32[0];
  *(_DWORD *)(a1 + 8) = v11 + v10.i32[1];
  *(_DWORD *)(a1 + 12) = v9;
  return v5;
}

uint64_t sub_24B47BDB4(uint64_t a1, uint64_t a2)
{
  sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_7;
  }
  *(_DWORD *)a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_7;
  }
  int v8 = sub_24B47DA28((uint64_t **)a1);
  *(_DWORD *)(a2 + 4) = v8;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_6:
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = v4;
    goto LABEL_7;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v4 = sub_24B47BEC4(a1, (uint64_t *)(a2 + 8));
    if (v4) {
      goto LABEL_6;
    }
    int v8 = *(_DWORD *)(a2 + 4);
  }
  if (!v8) {
    return 0;
  }
  uint64_t v4 = 1;
  *(unsigned char *)(a1 + 16) = 1;
  sub_24B47D810(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosPayLoadVer2Extension");
  int v5 = *(_DWORD *)(a1 + 8);
  int v6 = *(_DWORD *)(a1 + 12);
  unsigned int v7 = 1;
LABEL_7:
  sub_24B47D810(v7, v5, v6, "asn1PD_PosPayLoadVer2Extension");
  return v4;
}

uint64_t sub_24B47BEC4(uint64_t a1, uint64_t *a2)
{
  int v16 = 3;
  unsigned int v4 = sub_24B47DCF4(a1, 1, 3, &v16);
  sub_24B47C38C(a2);
  if (v4)
  {
    sub_24B47D810(v4, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosPayLoad_lppPayload");
  }
  else
  {
    int v5 = v16;
    if (v16 < 1)
    {
LABEL_15:
      LOBYTE(v4) = 0;
    }
    else
    {
      while (1)
      {
        int v15 = 0;
        unsigned int v6 = sub_24B47DDC8(a1, 1, 0xEA60u, &v15);
        if (v6) {
          break;
        }
        std::string __p = 0;
        int v13 = 0;
        uint64_t v14 = 0;
        sub_24B47E048(a1, 8 * v15, (unint64_t *)&__p, 0);
        int v7 = *(unsigned __int8 *)(a1 + 16);
        if (*(unsigned char *)(a1 + 16))
        {
          sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosPayLoad_lppPayload");
          LOBYTE(v4) = v7;
        }
        else
        {
          int v8 = (void *)a2[1];
          if ((unint64_t)v8 >= a2[2])
          {
            uint64_t v9 = sub_24B47C3E4(a2, (uint64_t)&__p);
          }
          else
          {
            *int v8 = 0;
            v8[1] = 0;
            v8[2] = 0;
            sub_24B47A720(v8, __p, (uint64_t)v13, v13 - (unsigned char *)__p);
            uint64_t v9 = (uint64_t)(v8 + 3);
            a2[1] = (uint64_t)(v8 + 3);
          }
          a2[1] = v9;
        }
        if (__p)
        {
          int v13 = __p;
          operator delete(__p);
        }
        if (v7) {
          return v4;
        }
        if (!--v5) {
          goto LABEL_15;
        }
      }
      char v10 = v6;
      sub_24B47D810(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosPayLoad_lppPayload");
      LOBYTE(v4) = v10;
    }
  }
  return v4;
}

void sub_24B47C044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  *(void *)(v10 + 8) = v11;
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B47C06C(uint64_t a1, unsigned char *a2)
{
  unsigned __int8 v10 = *a2 - 4;
  uint64_t v4 = sub_24B47F0DC(a1, &v10);
  int32x2_t v9 = 0;
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    uint64_t v4 = sub_24B47EE94(a1, &v9);
    if (v4)
    {
      uint64_t v5 = v4;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      uint64_t v4 = sub_24B47C13C(a1, (uint64_t)(a2 + 80));
      if (!v4) {
        return sub_24B47EEF4(a1, &v9);
      }
      uint64_t v5 = v4;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
    }
  }
  sub_24B47D810(v4, v6, v7, "asn1PE_PosPayLoadVer2");
  return v5;
}

uint64_t sub_24B47C13C(uint64_t a1, uint64_t a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
  }
  else
  {
    sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)a2);
    uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    }
    else
    {
      sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 4));
      uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16) || *(_DWORD *)a2 && (uint64_t v4 = sub_24B47C250(a1, (void *)(a2 + 8)), v4))
      {
        int v5 = *(_DWORD *)(a1 + 8);
        int v6 = *(_DWORD *)(a1 + 12);
        unsigned int v7 = v4;
      }
      else
      {
        if (!*(_DWORD *)(a2 + 4)) {
          return 0;
        }
        uint64_t v4 = 1;
        *(unsigned char *)(a1 + 16) = 1;
        sub_24B47D810(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PosPayLoadVer2Extension");
        int v5 = *(_DWORD *)(a1 + 8);
        int v6 = *(_DWORD *)(a1 + 12);
        unsigned int v7 = 1;
      }
    }
  }
  sub_24B47D810(v7, v5, v6, "asn1PE_PosPayLoadVer2Extension");
  return v4;
}

uint64_t sub_24B47C250(uint64_t a1, void *a2)
{
  int v4 = 0;
  uint64_t v5 = a2[1] - *a2;
  if (v5)
  {
    unint64_t v6 = v5 / 24;
    if (v6 <= 1) {
      unint64_t v6 = 1;
    }
    unsigned int v7 = (void *)(*a2 + 8);
    do
    {
      if (*(v7 - 1) != *v7) {
        ++v4;
      }
      v7 += 3;
      --v6;
    }
    while (v6);
  }
  uint64_t v8 = sub_24B47DAA4(a1, 1, 3, v4);
  if (v8)
  {
    uint64_t v9 = v8;
    int v10 = *(_DWORD *)(a1 + 8);
    int v11 = *(_DWORD *)(a1 + 12);
    goto LABEL_10;
  }
  uint64_t v13 = *a2;
  uint64_t v12 = a2[1];
  if (v12 == *a2) {
    return 0;
  }
  uint64_t v14 = 0;
  unint64_t v15 = 0;
  while (1)
  {
    uint64_t v16 = *(void *)(v13 + v14);
    uint64_t v17 = *(void *)(v13 + v14 + 8);
    if (v16 != v17) {
      break;
    }
LABEL_16:
    ++v15;
    v14 += 24;
    if (v15 >= 0xAAAAAAAAAAAAAAABLL * ((v12 - v13) >> 3)) {
      return 0;
    }
  }
  uint64_t v8 = sub_24B47E324(a1, 1, 60000, (int)v17 - (int)v16, (void *)(v13 + v14), 0, 0);
  if (!v8)
  {
    uint64_t v13 = *a2;
    uint64_t v12 = a2[1];
    goto LABEL_16;
  }
  uint64_t v9 = v8;
  int v10 = *(_DWORD *)(a1 + 8);
  int v11 = *(_DWORD *)(a1 + 12);
LABEL_10:
  sub_24B47D810(v8, v10, v11, "asn1PE_PosPayLoad_lppPayload");
  return v9;
}

void sub_24B47C38C(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (v2 != *a1)
  {
    uint64_t v4 = a1[1];
    do
    {
      unint64_t v6 = *(void **)(v4 - 24);
      v4 -= 24;
      uint64_t v5 = v6;
      if (v6)
      {
        *(void *)(v2 - 16) = v5;
        operator delete(v5);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

uint64_t sub_24B47C3E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_24B3E3AAC();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    int v10 = (char *)sub_24B47C570(v7, v9);
  }
  else {
    int v10 = 0;
  }
  int v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  unint64_t v15 = v11;
  uint64_t v16 = &v10[24 * v9];
  *(void *)int v11 = 0;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0;
  sub_24B47A720(v11, *(const void **)a2, *(void *)(a2 + 8), *(void *)(a2 + 8) - *(void *)a2);
  v15 += 24;
  sub_24B47C4F8(a1, v14);
  uint64_t v12 = a1[1];
  sub_24B47C6DC((uint64_t)v14);
  return v12;
}

void sub_24B47C4E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_24B47C6DC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_24B47C4F8(uint64_t *a1, void *a2)
{
  uint64_t result = sub_24B47C5B8((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_24B47C570(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_24B3E8068();
  }
  return operator new(24 * a2);
}

uint64_t sub_24B47C5B8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_24B47C65C((uint64_t)v11);
  return v9;
}

uint64_t sub_24B47C65C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_24B47C694(a1);
  }
  return a1;
}

void sub_24B47C694(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)v1;
    if (*(void *)v1)
    {
      *(void *)(v1 + 8) = v3;
      operator delete(v3);
    }
    v1 += 24;
  }
}

uint64_t sub_24B47C6DC(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_24B47C714(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    uint64_t v5 = *(void **)(v2 - 24);
    *(void *)(a1 + 16) = v2 - 24;
    if (v5)
    {
      *(void *)(v2 - 16) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
}

void sub_24B47C770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  sub_24B4AB040();
  std::string __p = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  if (a3)
  {
    uint64_t v7 = *(char **)(a3 + 32);
    uint64_t v6 = a3 + 32;
    uint64_t v5 = v7;
    if ((void **)v6 != &__p)
    {
      long long v8 = *(char **)(v6 + 8);
      if (v5 != v8)
      {
        sub_24B3EAC0C(&__p, v5, v8, v8 - v5);
        uint64_t v9 = (char *)__p;
        int v10 = v17;
        if (__p != v17)
        {
          uint64_t v11 = *(void *)(a2 + 8);
          *(void *)buf = 0;
          int v20 = 0;
          uint64_t v21 = 0;
          *(_WORD *)(v11 + 776) = 4;
          sub_24B3EAC0C(buf, v9, v10, v10 - v9);
          char v12 = *(void **)(v11 + 872);
          if ((unint64_t)v12 >= *(void *)(v11 + 880))
          {
            uint64_t v13 = sub_24B47C3E4((uint64_t *)(v11 + 864), (uint64_t)buf);
          }
          else
          {
            *char v12 = 0;
            v12[1] = 0;
            v12[2] = 0;
            sub_24B47A720(v12, *(const void **)buf, (uint64_t)v20, (size_t)v20 - *(void *)buf);
            uint64_t v13 = (uint64_t)(v12 + 3);
            *(void *)(v11 + 872) = v12 + 3;
          }
          *(void *)(v11 + 872) = v13;
          *(_DWORD *)(v11 + 856) = 1;
          *(_DWORD *)(v11 + 8) = 1;
          if (*(void *)buf)
          {
            int v20 = *(const void **)buf;
            operator delete(*(void **)buf);
          }
          goto LABEL_11;
        }
      }
    }
  }
  else
  {
    long long v14 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = 513;
      _os_log_error_impl(&dword_24B3DE000, v14, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    }
  }
  unint64_t v15 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = 513;
    _os_log_error_impl(&dword_24B3DE000, v15, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
LABEL_11:
  if (__p)
  {
    uint64_t v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_24B47C94C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  uint64_t v16 = v14;
  *(void *)(v15 + 872) = v16;
  if (__p) {
    operator delete(__p);
  }
  if (a10) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B47C990(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  sub_24B4AB040();
  std::string __p = 0;
  char v12 = 0;
  uint64_t v13 = 0;
  uint64_t v3 = sub_24B47B344();
  if (&__p == (void **)v3
    || (unint64_t v4 = *(char **)(v3 + 8), *(char **)v3 == v4)
    || (sub_24B3EAC0C(&__p, *(char **)v3, v4, (unint64_t)&v4[-*(void *)v3]),
        uint64_t v5 = (char *)__p,
        uint64_t v6 = v12,
        __p == v12))
  {
    int v10 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = 513;
      _os_log_error_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    }
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 8);
    *(void *)buf = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    *(_WORD *)(v7 + 776) = 4;
    sub_24B3EAC0C(buf, v5, v6, v6 - v5);
    long long v8 = *(void **)(v7 + 872);
    if ((unint64_t)v8 >= *(void *)(v7 + 880))
    {
      uint64_t v9 = sub_24B47C3E4((uint64_t *)(v7 + 864), (uint64_t)buf);
    }
    else
    {
      *long long v8 = 0;
      v8[1] = 0;
      v8[2] = 0;
      sub_24B47A720(v8, *(const void **)buf, (uint64_t)v15, (size_t)v15 - *(void *)buf);
      uint64_t v9 = (uint64_t)(v8 + 3);
      *(void *)(v7 + 872) = v8 + 3;
    }
    *(void *)(v7 + 872) = v9;
    *(_DWORD *)(v7 + 856) = 1;
    *(_DWORD *)(v7 + 8) = 1;
    if (*(void *)buf)
    {
      uint64_t v15 = *(const void **)buf;
      operator delete(*(void **)buf);
    }
  }
  if (__p)
  {
    char v12 = (char *)__p;
    operator delete(__p);
  }
}

void sub_24B47CB08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  uint64_t v16 = v14;
  *(void *)(v15 + 872) = v16;
  if (__p) {
    operator delete(__p);
  }
  if (a10) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B47CB4C(uint64_t a1, uint64_t a2)
{
  v26[20] = *MEMORY[0x263EF8340];
  if (a1 && (uint64_t v2 = a2) != 0)
  {
    uint64_t v3 = a1;
    memset(&__str, 0, sizeof(__str));
    uint64_t v4 = *MEMORY[0x263F8C2B8];
    uint64_t v5 = *(void *)(MEMORY[0x263F8C2B8] + 64);
    uint64_t v6 = *(void *)(MEMORY[0x263F8C2B8] + 72);
    do
    {
      sub_24B3E0718((uint64_t)buf);
      uint64_t v7 = *(void *)&v23[2];
      *(_DWORD *)((char *)v24 + *(void *)(*(void *)&v23[2] - 24)) = *(_DWORD *)((unsigned char *)v24
                                                                                    + *(void *)(*(void *)&v23[2]
                                                                                                - 24)) & 0xFFFFFFB5 | 8;
      *(void *)((char *)&v24[2] + *(void *)(v7 - 24)) = 2;
      __p.__r_.__value_.__s.__data_[0] = 48;
      sub_24B3E09F0(&v23[2], (char *)&__p);
      std::ostream::operator<<();
      std::stringbuf::str();
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      std::string::append(&__str, (const std::string::value_type *)p_p, size);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      *(void *)buf = v4;
      *(void *)&buf[*(void *)(v4 - 24)] = v5;
      *(void *)&v23[2] = v6;
      v24[0] = MEMORY[0x263F8C318] + 16;
      if (v25 < 0) {
        operator delete((void *)v24[8]);
      }
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x24C5D2690](v26);
      ++v3;
      --v2;
    }
    while (v2);
    std::string::size_type v10 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::size_type v11 = __str.__r_.__value_.__l.__size_ / 0x1F4;
      std::string::size_type v12 = __str.__r_.__value_.__l.__size_ % 0x1F4;
    }
    else
    {
      std::string::size_type v11 = 0;
      std::string::size_type v12 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    }
    std::string::size_type v14 = 0;
    if (v12) {
      std::string::size_type v15 = v11 + 1;
    }
    else {
      std::string::size_type v15 = v11;
    }
    uint64_t v16 = 1;
    if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_26;
    }
    while (v14 < v10)
    {
      while (1)
      {
        std::string::basic_string(&__p, &__str, v14, 0x1F4uLL, (std::allocator<char> *)buf);
        uint64_t v17 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
        {
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v18 = &__p;
          }
          else {
            uint64_t v18 = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)buf = 134284035;
          *(void *)&uint8_t buf[4] = v16;
          __int16 v22 = 2049;
          *(void *)int v23 = v15;
          *(_WORD *)&v23[8] = 2081;
          v24[0] = v18;
          _os_log_impl(&dword_24B3DE000, v17, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp,#pdu,%{private}zu,of,%{private}zu,%{private}s", buf, 0x20u);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        std::string::size_type v10 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
        v14 += 500;
        ++v16;
        if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) == 0) {
          break;
        }
LABEL_26:
        if (v14 >= __str.__r_.__value_.__l.__size_)
        {
          operator delete(__str.__r_.__value_.__l.__data_);
          return;
        }
      }
    }
  }
  else
  {
    uint64_t v13 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp,PDU is empty", buf, 2u);
    }
  }
}

void sub_24B47CF58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B47CFA4(uint64_t *a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_24B4AB040();
  if (!v7)
  {
    uint64_t v13 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    int v14 = 67109120;
    int v15 = 513;
LABEL_19:
    _os_log_error_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v14, 8u);
    return;
  }
  if (!*a1)
  {
    uint64_t v13 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    int v14 = 67109120;
    int v15 = 513;
    goto LABEL_19;
  }
  if (*a2 != 2)
  {
    uint64_t v13 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    int v14 = 67109120;
    int v15 = 514;
    goto LABEL_19;
  }
  long long v8 = (_DWORD *)v7;
  uint64_t v9 = sub_24B4ABD9C(v7, *(_DWORD *)(*a1 + 376));
  if (v9 && !*(_DWORD *)(v9 + 20)) {
    sub_24B4AC888(v8, a4, *(unsigned __int8 *)(*(void *)(v9 + 48) + 20), *(_DWORD *)(*a1 + 596));
  }
  std::string::size_type v10 = operator new(0x168uLL, MEMORY[0x263F8C180]);
  if (!v10)
  {
    uint64_t v13 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    int v14 = 67109120;
    int v15 = 513;
    goto LABEL_19;
  }
  std::string::size_type v11 = v10;
  sub_24B4AA55C((uint64_t)v10);
  *std::string::size_type v11 = &unk_26FE86070;
  sub_24B4A8A08(*a1, (uint64_t)v11);
  uint64_t v12 = *a1;
  sub_24B4AA6E4((uint64_t)v11, 0, v12);
}

void sub_24B47D1F4(_Unwind_Exception *a1)
{
  MEMORY[0x24C5D26F0](v1, MEMORY[0x263F8C180]);
  _Unwind_Resume(a1);
}

uint64_t sub_24B47D210(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t result = sub_24B47D534();
  int v6 = atomic_load((unsigned __int8 *)(result + 1));
  BOOL v7 = v6 == 255;
  uint64_t v8 = 1;
  if (v7) {
    uint64_t v8 = 2;
  }
  int v9 = atomic_load((unsigned __int8 *)(result + v8));
  if (v9 == 2)
  {
    *(_DWORD *)(a2 + 44) = 0;
    sub_24B4AB040();
    uint64_t v10 = sub_24B4AF924();
    uint64_t result = sub_24B4AFE44(v10, a3);
    *(_DWORD *)(a2 + 60) = result != 0;
    if (result)
    {
      *(_DWORD *)(a2 + 56) = 1;
      *(_WORD *)(a2 + 67) = 2832;
      *(unsigned char *)(a2 + 69) = 0;
    }
    else
    {
      *(_DWORD *)(a2 + 56) = 0;
    }
  }
  return result;
}

void sub_24B47D29C(uint64_t a1, uint64_t a2)
{
  if (a2 && !*(unsigned char *)(a2 + 32))
  {
    if (a1 != a2) {
      sub_24B3EAC0C((void *)(a1 + 8), *(char **)(a2 + 8), *(char **)(a2 + 16), *(void *)(a2 + 16) - *(void *)(a2 + 8));
    }
    sub_24B47CB4C(*(void *)(a2 + 8), *(void *)(a2 + 16) - *(void *)(a2 + 8));
  }
  *(_DWORD *)(a1 + 32) = 0;
}

uint64_t sub_24B47D2F4(_DWORD *a1)
{
  sub_24B4AB040();
  uint64_t result = sub_24B47D534();
  int v3 = atomic_load((unsigned __int8 *)(result + 1));
  BOOL v4 = v3 == 255;
  uint64_t v5 = 1;
  if (v4) {
    uint64_t v5 = 2;
  }
  unsigned int v6 = atomic_load((unsigned __int8 *)(result + v5));
  if (v6 >= 2)
  {
    uint64_t v7 = sub_24B4AF924();
    uint64_t result = sub_24B4AFE44(v7, *(_DWORD *)(*(void *)a1 + 596));
    if (result)
    {
      int v8 = *(unsigned __int8 *)(*(void *)a1 + 380);
      uint64_t v9 = sub_24B4AB040();
      sub_24B4ABD9C(v9, *(_DWORD *)(*(void *)a1 + 376));
      uint64_t v10 = sub_24B4A113C();
      uint64_t result = sub_24B4A1E10(v10, *(_DWORD *)(*(void *)a1 + 376), v8 == 2);
      a1[8] = result == 0;
    }
  }
  return result;
}

void sub_24B47D3B4(uint64_t a1, int a2)
{
  sub_24B4AB040();
  uint64_t v4 = sub_24B47D534();
  int v5 = atomic_load((unsigned __int8 *)(v4 + 1));
  BOOL v6 = v5 == 255;
  uint64_t v7 = 1;
  if (v6) {
    uint64_t v7 = 2;
  }
  unsigned int v8 = atomic_load((unsigned __int8 *)(v4 + v7));
  if (v8 >= 2)
  {
    uint64_t v9 = sub_24B4AF924();
    if (sub_24B4AFE44(v9, a2))
    {
      char v10 = *(unsigned char *)(*(void *)a1 + 380) == 2;
      sub_24B4A113C();
      int v11 = *(_DWORD *)(*(void *)a1 + 8);
      sub_24B4B0A44(v11, v10);
    }
  }
}

uint64_t sub_24B47D450(uint64_t a1, unsigned char *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  int v5 = *(unsigned __int8 *)(a1 + 16);
  char v12 = 0;
  if (v5) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = v4 == 0;
  }
  if (v6)
  {
    uint64_t v10 = sub_24B47DB4C(a1, 0, 1u, &v12);
    if (v10)
    {
      uint64_t v7 = v10;
      int v8 = *(_DWORD *)(a1 + 8);
      int v9 = *(_DWORD *)(a1 + 12);
LABEL_13:
      sub_24B47D810(v10, v8, v9, "asn1PD_TriggerType");
      return v7;
    }
  }
  else
  {
    uint64_t v10 = sub_24B47F19C(a1, &v12);
    if (v10)
    {
      uint64_t v7 = v10;
      int v8 = *(_DWORD *)(a1 + 8);
      int v9 = *(_DWORD *)(a1 + 12);
      goto LABEL_13;
    }
  }
  if (*a2 > 1u)
  {
    uint64_t v7 = 4;
    *(unsigned char *)(a1 + 16) = 4;
    int v8 = *(_DWORD *)(a1 + 8);
    int v9 = *(_DWORD *)(a1 + 12);
    LODWORD(v10) = 4;
    goto LABEL_13;
  }
  uint64_t v7 = 0;
  *a2 = v12;
  return v7;
}

uint64_t sub_24B47D534()
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  if (qword_26B17C3E8 != -1) {
    dispatch_once(&qword_26B17C3E8, &unk_26FE85FB8);
  }
  uint64_t result = qword_26B17C3E0;
  if (!qword_26B17C3E0)
  {
    uint64_t v1 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v2 = 136315138;
      int v3 = "GetInstance";
      _os_log_error_impl(&dword_24B3DE000, v1, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v2, 0xCu);
    }
    __assert_rtn("GetInstance", "SuplVersionNegotiation.cpp", 44, "false && \"Memory allocation failure\"");
  }
  return result;
}

_DWORD *sub_24B47D62C()
{
  uint64_t result = operator new(4uLL, MEMORY[0x263F8C180]);
  if (result) {
    *uint64_t result = 196352;
  }
  qword_26B17C3E0 = (uint64_t)result;
  return result;
}

BOOL sub_24B47D668(unsigned int a1, unsigned int a2)
{
  uint64_t v4 = sub_24B47D534();
  uint64_t v5 = 0;
  int v6 = atomic_load((unsigned __int8 *)(v4 + 1));
  BOOL v7 = v6 == 255;
  uint64_t v8 = 1;
  if (v7) {
    uint64_t v8 = 2;
  }
  unsigned int v9 = atomic_load((unsigned __int8 *)(v4 + v8));
  if (a2 <= 2 && v9 <= 2)
  {
    if (a1 <= 1 && a1 < a2) {
      return 0;
    }
    unsigned __int8 v10 = atomic_load((unsigned __int8 *)(v4 + 3));
    if ((v10 & 1) == 0) {
      return v9 == a1;
    }
    if (a1 > 2)
    {
      if (v9 < a2) {
        return 0;
      }
      atomic_store(v9, (unsigned __int8 *)(v4 + 1));
    }
    else
    {
      atomic_store(a1, (unsigned __int8 *)(v4 + 1));
    }
    return 1;
  }
  return v5;
}

void sub_24B47D71C()
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v0 = (unsigned __int8 *)sub_24B47D534();
  int v1 = atomic_load(v0 + 1);
  BOOL v2 = v1 == 255;
  uint64_t v3 = 1;
  if (v2) {
    uint64_t v3 = 2;
  }
  unsigned int v4 = atomic_load(&v0[v3]);
  if (v4 > 2)
  {
    int v6 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v7[0] = 67109120;
      v7[1] = 770;
      _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v7, 8u);
    }
  }
  else
  {
    unsigned __int8 v5 = atomic_load(v0 + 3);
    if (v5) {
      atomic_store(2u, v0 + 2);
    }
    atomic_store(0xFFu, v0 + 1);
  }
}

void sub_24B47D810(unsigned int a1, int a2, int a3, char *__s)
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  v13[0] = 0;
  v13[1] = 0;
  uint64_t v14 = 0;
  sub_24B3E3128(__p, __s);
  if (a1 >= 7) {
    BOOL v7 = "UNDEFINED_STATUS";
  }
  else {
    BOOL v7 = off_265293CB0[(char)a1];
  }
  MEMORY[0x24C5D2510](v13, v7);
  uint64_t v8 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    unsigned int v9 = __p;
    if (v12 < 0) {
      unsigned int v9 = (void **)__p[0];
    }
    unsigned __int8 v10 = v13;
    if (v14 < 0) {
      unsigned __int8 v10 = (void **)v13[0];
    }
    *(_DWORD *)buf = 136315906;
    uint64_t v16 = v9;
    __int16 v17 = 2080;
    uint64_t v18 = v10;
    __int16 v19 = 1024;
    int v20 = a2;
    __int16 v21 = 1024;
    int v22 = a3;
    _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "Func,%s,Status,%s,CurByte,%u,NextBit,%u", buf, 0x22u);
  }
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(v13[0]);
  }
}

void sub_24B47D96C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B47D9A0(uint64_t **a1, int a2)
{
  unint64_t v3 = *((unsigned int *)a1 + 2);
  uint64_t v4 = **a1;
  if ((*a1)[1] - v4 <= v3)
  {
    *((unsigned char *)a1 + 16) = 2;
    sub_24B47D810(2u, v3, *((_DWORD *)a1 + 3), "AddBitToBuffer");
  }
  else
  {
    char v5 = *((_DWORD *)a1 + 3);
    int v6 = *(unsigned __int8 *)(v4 + v3);
    int v7 = v6 & (-129 >> v5);
    unsigned int v8 = v6 | (0x80u >> v5);
    if (a2) {
      char v9 = v8;
    }
    else {
      char v9 = v7;
    }
    *(unsigned char *)(v4 + v3) = v9;
    unsigned int v10 = *((_DWORD *)a1 + 3) + 1;
    *((_DWORD *)a1 + 3) = v10;
    if (v10 >= 8) {
      a1[1] = (uint64_t *)(*((_DWORD *)a1 + 2) + 1);
    }
  }
}

uint64_t sub_24B47DA28(uint64_t **a1)
{
  unint64_t v1 = *((unsigned int *)a1 + 2);
  uint64_t v2 = **a1;
  if ((*a1)[1] - v2 <= v1)
  {
    *((unsigned char *)a1 + 16) = 2;
    sub_24B47D810(2u, v1, *((_DWORD *)a1 + 3), "GetBitFromBuffer");
    return 0;
  }
  else
  {
    unsigned int v3 = *((_DWORD *)a1 + 3);
    uint64_t v4 = ((*(unsigned __int8 *)(v2 + v1) << v3++) >> 7) & 1;
    *((_DWORD *)a1 + 3) = v3;
    if (v3 >= 8) {
      a1[1] = (uint64_t *)(v1 + 1);
    }
  }
  return v4;
}

uint64_t sub_24B47DAA4(uint64_t a1, int a2, int a3, int a4)
{
  if (a3 < a2)
  {
    unsigned int v5 = 1;
LABEL_3:
    *(unsigned char *)(a1 + 16) = v5;
    sub_24B47D810(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeInteger");
    return *(unsigned __int8 *)(a1 + 16);
  }
  unsigned int v5 = 4;
  int v7 = a4 - a2;
  if (a4 < a2 || a4 > a3) {
    goto LABEL_3;
  }
  unsigned int v8 = a3 - a2;
  if (a3 != a2)
  {
    char v9 = -1;
    do
    {
      ++v9;
      BOOL v10 = v8 > 1;
      v8 >>= 1;
    }
    while (v10);
    unsigned int v11 = 1 << v9;
    do
    {
      sub_24B47D9A0((uint64_t **)a1, v11 & v7);
      BOOL v12 = v11 >= 2;
      v11 >>= 1;
    }
    while (v12);
  }
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_24B47DB4C(uint64_t a1, int a2, unsigned int a3, unsigned char *a4)
{
  unsigned int v5 = a3 - a2;
  if ((int)(a3 - a2) < 1)
  {
    uint64_t v14 = 5;
LABEL_14:
    sub_24B47D810(v14, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "DecodeInteger");
    return v14;
  }
  __int16 v8 = a2;
  char v9 = -1;
  do
  {
    ++v9;
    BOOL v10 = v5 > 1;
    v5 >>= 1;
  }
  while (v10);
  unsigned __int8 v11 = 0;
  unsigned int v12 = 1 << v9;
  do
  {
    if (sub_24B47DA28((uint64_t **)a1)) {
      char v13 = v12;
    }
    else {
      char v13 = 0;
    }
    v11 |= v13;
    BOOL v10 = v12 > 1;
    v12 >>= 1;
  }
  while (v10);
  uint64_t v14 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    goto LABEL_14;
  }
  *a4 = v8 + v11;
  uint64_t v14 = 4;
  if (((v8 + v11) & 0x100) != 0 || a3 < (v8 + v11)) {
    goto LABEL_14;
  }
  return 0;
}

uint64_t sub_24B47DC20(uint64_t a1, int a2, unsigned int a3, _WORD *a4)
{
  unsigned int v5 = a3 - a2;
  if ((int)(a3 - a2) < 1)
  {
    LODWORD(result) = 5;
    uint64_t v15 = 5;
LABEL_14:
    sub_24B47D810(result, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "DecodeInteger");
    return v15;
  }
  char v9 = -1;
  do
  {
    ++v9;
    BOOL v10 = v5 > 1;
    v5 >>= 1;
  }
  while (v10);
  unsigned __int16 v11 = 0;
  unsigned int v12 = 1 << v9;
  do
  {
    if (sub_24B47DA28((uint64_t **)a1)) {
      __int16 v13 = v12;
    }
    else {
      __int16 v13 = 0;
    }
    v11 |= v13;
    BOOL v10 = v12 > 1;
    v12 >>= 1;
  }
  while (v10);
  uint64_t result = *(unsigned __int8 *)(a1 + 16);
  uint64_t v15 = result;
  if (*(unsigned char *)(a1 + 16)) {
    goto LABEL_14;
  }
  int v16 = a2 + v11;
  *a4 = a2 + v11;
  uint64_t v15 = 4;
  if ((v16 & 0x10000) != 0 || a3 < (unsigned __int16)v16) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_24B47DCF4(uint64_t a1, int a2, int a3, _DWORD *a4)
{
  unsigned int v5 = a3 - a2;
  if (a3 - a2 < 1)
  {
    uint64_t v14 = 5;
LABEL_14:
    sub_24B47D810(v14, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "DecodeInteger");
    return v14;
  }
  char v9 = -1;
  do
  {
    ++v9;
    BOOL v10 = v5 > 1;
    v5 >>= 1;
  }
  while (v10);
  int v11 = 0;
  unsigned int v12 = 1 << v9;
  do
  {
    if (sub_24B47DA28((uint64_t **)a1)) {
      unsigned int v13 = v12;
    }
    else {
      unsigned int v13 = 0;
    }
    v11 |= v13;
    BOOL v10 = v12 > 1;
    v12 >>= 1;
  }
  while (v10);
  uint64_t v14 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    goto LABEL_14;
  }
  *a4 = v11 + a2;
  uint64_t v14 = 4;
  if (v11 < 0 || v11 + a2 > a3) {
    goto LABEL_14;
  }
  return 0;
}

uint64_t sub_24B47DDC8(uint64_t a1, int a2, unsigned int a3, _DWORD *a4)
{
  unsigned int v8 = a3 - a2;
  if ((int)(a3 - a2) < 1)
  {
    int v11 = 0;
  }
  else
  {
    char v9 = -1;
    do
    {
      ++v9;
      BOOL v10 = v8 > 1;
      v8 >>= 1;
    }
    while (v10);
    int v11 = 0;
    unsigned int v12 = 1 << v9;
    do
    {
      if (sub_24B47DA28((uint64_t **)a1)) {
        unsigned int v13 = v12;
      }
      else {
        unsigned int v13 = 0;
      }
      v11 |= v13;
      BOOL v10 = v12 > 1;
      v12 >>= 1;
    }
    while (v10);
    uint64_t v14 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16)) {
      goto LABEL_15;
    }
  }
  uint64_t v14 = 4;
  *a4 = v11 + a2;
  if (__CFADD__(v11, a2) || v11 + a2 > a3)
  {
LABEL_15:
    sub_24B47D810(v14, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "DecodeInteger");
    return v14;
  }
  return 0;
}

uint64_t sub_24B47DEA0(uint64_t a1, int a2, int a3, unsigned int a4, void *a5, int a6)
{
  if (*a5 == a5[1])
  {
    *(unsigned char *)(a1 + 16) = 1;
    BOOL v10 = (unsigned __int8 *)(a1 + 16);
    sub_24B47D810(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeBitString");
    char v9 = v10;
  }
  else
  {
    if (!a6) {
      sub_24B47DAA4(a1, a2, a3, a4);
    }
    char v9 = (unsigned __int8 *)(a1 + 16);
    if (!*(unsigned char *)(a1 + 16)) {
      sub_24B47DF34((uint64_t **)a1, a4, a5, 0);
    }
  }
  return *v9;
}

void sub_24B47DF34(uint64_t **a1, unsigned int a2, void *a3, int a4)
{
  unint64_t v7 = (unint64_t)a2 >> 3;
  uint64_t v8 = a2 & 7;
  if (a2 >= 8)
  {
    unint64_t v9 = 0;
    if (v7 <= 1) {
      unint64_t v10 = 1;
    }
    else {
      unint64_t v10 = (unint64_t)a2 >> 3;
    }
    do
    {
      if (v9 >= a3[1] - *a3) {
        break;
      }
      uint64_t v11 = 0;
      unsigned __int8 v12 = *(unsigned char *)(*a3 + v9);
      if (a4) {
        unsigned __int8 v12 = (*(unsigned char *)(*a3 + v9) >> 4) | (16 * *(unsigned char *)(*a3 + v9));
      }
      int v13 = v12;
      do
        sub_24B47D9A0(a1, (0x80u >> v11++) & v13);
      while (v11 != 8);
      ++v9;
    }
    while (v9 != v10);
  }
  if (v8 && a3[1] - *a3 > v7)
  {
    unsigned __int8 v14 = *(unsigned char *)(*a3 + v7);
    if (a4) {
      unsigned __int8 v14 = (*(unsigned char *)(*a3 + v7) >> 4) | (16 * *(unsigned char *)(*a3 + v7));
    }
    int v15 = v14;
    int v16 = 8 - v8;
    do
    {
      sub_24B47D9A0(a1, (0x80u >> v16++) & v15);
      --v8;
    }
    while (v8);
  }
}

uint64_t sub_24B47E048(uint64_t result, unsigned int a2, unint64_t *a3, uint64_t a4)
{
  int v6 = (uint64_t **)result;
  unint64_t v48 = (unint64_t)a2 >> 3;
  a3[1] = *a3;
  char v47 = a2;
  if (a2 >= 8)
  {
    uint64_t v7 = 0;
    if (v48 <= 1) {
      unint64_t v8 = 1;
    }
    else {
      unint64_t v8 = (unint64_t)a2 >> 3;
    }
    unint64_t v49 = v8;
    do
    {
      unint64_t v10 = (unsigned char *)a3[1];
      unint64_t v9 = a3[2];
      if ((unint64_t)v10 >= v9)
      {
        uint64_t v12 = a4;
        unint64_t v13 = *a3;
        unsigned __int8 v14 = &v10[-*a3];
        unint64_t v15 = (unint64_t)(v14 + 1);
        if ((uint64_t)(v14 + 1) < 0) {
          goto LABEL_60;
        }
        unint64_t v16 = v9 - v13;
        if (2 * v16 > v15) {
          unint64_t v15 = 2 * v16;
        }
        if (v16 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v17 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v17 = v15;
        }
        if (v17) {
          uint64_t v18 = (char *)operator new(v17);
        }
        else {
          uint64_t v18 = 0;
        }
        __int16 v19 = &v14[(void)v18];
        int v20 = &v14[(void)v18];
        unsigned char *v20 = 0;
        uint64_t v11 = v20 + 1;
        if (v10 != (unsigned char *)v13)
        {
          __int16 v21 = &v10[~v13];
          do
          {
            char v22 = *--v10;
            (v21--)[(void)v18] = v22;
          }
          while (v10 != (unsigned char *)v13);
          unint64_t v10 = (unsigned char *)*a3;
          __int16 v19 = v18;
        }
        *a3 = (unint64_t)v19;
        a3[1] = (unint64_t)v11;
        a3[2] = (unint64_t)&v18[v17];
        a4 = v12;
        if (v10) {
          operator delete(v10);
        }
        unint64_t v8 = v49;
      }
      else
      {
        *unint64_t v10 = 0;
        uint64_t v11 = v10 + 1;
      }
      uint64_t v23 = 0;
      a3[1] = (unint64_t)v11;
      do
      {
        uint64_t result = sub_24B47DA28(v6);
        int v24 = *(unsigned __int8 *)(*a3 + v7);
        unsigned int v25 = v24 | (0x80u >> v23);
        int v26 = v24 & (-129 >> v23);
        if (result) {
          LOBYTE(v26) = v25;
        }
        *(unsigned char *)(*a3 + v7) = v26;
        ++v23;
      }
      while (v23 != 8);
      if (a4) {
        *(unsigned char *)(*a3 + v7) = (*(unsigned char *)(*a3 + v7) >> 4) | (16 * *(unsigned char *)(*a3 + v7));
      }
      ++v7;
    }
    while (v7 != v8);
  }
  unsigned int v27 = v47 & 7;
  if ((v47 & 7) != 0)
  {
    uint64_t v29 = (unsigned char *)a3[1];
    unint64_t v28 = a3[2];
    if ((unint64_t)v29 >= v28)
    {
      unint64_t v31 = *a3;
      uint64_t v32 = &v29[-*a3];
      unint64_t v33 = (unint64_t)(v32 + 1);
      if ((uint64_t)(v32 + 1) < 0) {
LABEL_60:
      }
        sub_24B3E3AAC();
      unint64_t v34 = v28 - v31;
      if (2 * v34 > v33) {
        unint64_t v33 = 2 * v34;
      }
      if (v34 >= 0x3FFFFFFFFFFFFFFFLL) {
        size_t v35 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v35 = v33;
      }
      if (v35) {
        unint64_t v36 = (unint64_t)operator new(v35);
      }
      else {
        unint64_t v36 = 0;
      }
      unsigned int v37 = &v32[v36];
      int v38 = (char *)(v36 + v35);
      uint64_t v39 = &v32[v36];
      *uint64_t v39 = 0;
      uint64_t v30 = v39 + 1;
      if (v29 == (unsigned char *)v31)
      {
        unint64_t v36 = (unint64_t)v37;
      }
      else
      {
        char v40 = &v29[~v31];
        do
        {
          char v41 = *--v29;
          (v40--)[v36] = v41;
        }
        while (v29 != (unsigned char *)v31);
        uint64_t v29 = (unsigned char *)*a3;
      }
      *a3 = v36;
      a3[1] = (unint64_t)v30;
      a3[2] = (unint64_t)v38;
      if (v29) {
        operator delete(v29);
      }
    }
    else
    {
      unsigned char *v29 = 0;
      uint64_t v30 = v29 + 1;
    }
    a3[1] = (unint64_t)v30;
    if (v27 <= 1) {
      uint64_t v42 = 1;
    }
    else {
      uint64_t v42 = v47 & 7;
    }
    char v43 = 8 - v27;
    do
    {
      uint64_t result = sub_24B47DA28(v6);
      int v44 = *(unsigned __int8 *)(*a3 + v48);
      unsigned int v45 = v44 | (0x80u >> v43);
      int v46 = v44 & (-129 >> v43);
      if (result) {
        LOBYTE(v46) = v45;
      }
      *(unsigned char *)(*a3 + v48) = v46;
      ++v43;
      --v42;
    }
    while (v42);
    if (a4) {
      *(unsigned char *)(*a3 + v48) = (*(unsigned char *)(*a3 + v48) >> 4) | (16 * *(unsigned char *)(*a3 + v48));
    }
  }
  return result;
}

uint64_t sub_24B47E324(uint64_t a1, int a2, int a3, int a4, void *a5, int a6, int a7)
{
  if (*a5 == a5[1])
  {
    *(unsigned char *)(a1 + 16) = 1;
    uint64_t v11 = (unsigned __int8 *)(a1 + 16);
    sub_24B47D810(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeOctetString");
  }
  else
  {
    if (!a6) {
      sub_24B47DAA4(a1, a2, a3, a4);
    }
    sub_24B47DF34((uint64_t **)a1, 8 * a4, a5, a7);
    uint64_t v11 = (unsigned __int8 *)(a1 + 16);
  }
  return *v11;
}

uint64_t sub_24B47E3B0(uint64_t a1, int a2, unsigned int a3, unsigned int a4, void *a5, int a6, uint64_t a7, int a8)
{
  if (a3 > 0xFF || !a7 || !a6 || *a5 == a5[1])
  {
    uint64_t v12 = 1;
    *(unsigned char *)(a1 + 16) = 1;
    sub_24B47D810(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeVisibleStringSubType");
    return v12;
  }
  if (a8) {
    return 5;
  }
  uint64_t v15 = sub_24B47DAA4(a1, a2, a3, a4);
  uint64_t v12 = v15;
  std::string __p = 0;
  unint64_t v36 = 0;
  unsigned int v37 = 0;
  if (a4 && !v15)
  {
    unint64_t v16 = 0;
    unint64_t v17 = 0;
    uint64_t v18 = a4;
    do
    {
      if (v17 >= a5[1] - *a5) {
        break;
      }
      uint64_t v19 = 0;
      while (*(char *)(*a5 + v17) != *(unsigned __int8 *)(a7 + v19))
      {
        if (a6 == ++v19)
        {
          uint64_t v12 = 4;
          sub_24B47D810(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeVisibleStringSubType");
          goto LABEL_41;
        }
      }
      if (v16 >= v37)
      {
        unint64_t v20 = (unint64_t)__p;
        int64_t v33 = v16 - (unsigned char *)__p;
        uint64_t v34 = v18;
        uint64_t v21 = v16 - (unsigned char *)__p + 1;
        if (v21 < 0) {
          sub_24B3E3AAC();
        }
        unint64_t v22 = v37 - (unsigned char *)__p;
        if (2 * (v37 - (unsigned char *)__p) > (unint64_t)v21) {
          uint64_t v21 = 2 * v22;
        }
        if (v22 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v23 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v23 = v21;
        }
        if (v23)
        {
          size_t v32 = v23;
          int v24 = (char *)operator new(v23);
          size_t v23 = v32;
        }
        else
        {
          int v24 = 0;
        }
        unsigned int v25 = &v24[v33];
        v24[v33] = v19;
        int v26 = &v24[v33];
        if (v16 != (char *)v20)
        {
          unsigned int v27 = &v16[~v20];
          do
          {
            char v28 = *--v16;
            (v27--)[(void)v24] = v28;
          }
          while (v16 != (char *)v20);
          unint64_t v16 = (char *)__p;
          unsigned int v25 = v24;
        }
        std::string __p = v25;
        unsigned int v37 = &v24[v23];
        if (v16) {
          operator delete(v16);
        }
        unint64_t v16 = v26;
        uint64_t v18 = v34;
      }
      else
      {
        *unint64_t v16 = v19;
      }
      unint64_t v36 = ++v16;
      ++v17;
    }
    while (v17 != v18);
    goto LABEL_38;
  }
  if (!v15)
  {
LABEL_38:
    unsigned __int8 v29 = 0;
    unsigned int v30 = a6 - 1;
    if (a6 != 1)
    {
      do
      {
        ++v29;
        BOOL v31 = v30 > 1;
        v30 >>= 1;
      }
      while (v31);
    }
    sub_24B47E62C((uint64_t **)a1, v29 * a4, v29, &__p);
    uint64_t v12 = *(unsigned __int8 *)(a1 + 16);
  }
LABEL_41:
  if (__p) {
    operator delete(__p);
  }
  return v12;
}

void sub_24B47E604(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B47E62C(uint64_t **a1, unsigned int a2, char a3, void *a4)
{
  if (a2)
  {
    unsigned int v6 = 0;
    int v7 = 1 << (a3 - 1);
    uint64_t v8 = a2;
    unsigned __int8 v9 = v7;
    do
    {
      if (a4[1] - *a4 <= (unint64_t)v6) {
        break;
      }
      unsigned int v10 = v6;
      sub_24B47D9A0(a1, v9 & *(unsigned char *)(*a4 + v6));
      BOOL v11 = v9 >> 1 == 0;
      if (v9 >> 1) {
        v9 >>= 1;
      }
      else {
        unsigned __int8 v9 = v7;
      }
      unsigned int v6 = v11 ? v10 + 1 : v10;
      --v8;
    }
    while (v8);
  }
}

uint64_t sub_24B47E6C4(uint64_t a1, int a2, unsigned int a3, _DWORD *a4, unint64_t *a5, unsigned int a6, uint64_t a7, int a8)
{
  uint64_t v8 = a1;
  if (a3 <= 0xFF && a6 && a7)
  {
    if (!a8) {
      sub_24B47DDC8(a1, a2, a3, a4);
    }
    unsigned int v13 = a6 - 1;
    if (a6 != 1)
    {
      unsigned __int8 v14 = 0;
      do
      {
        ++v14;
        BOOL v15 = v13 > 1;
        v13 >>= 1;
      }
      while (v15);
      std::string __p = 0;
      unint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v34 = v8;
      sub_24B47E904(v8, *a4 * v14, v14, (unint64_t *)&__p);
      unint64_t v16 = (unsigned char *)*a5;
      a5[1] = *a5;
      if (*a4)
      {
        unint64_t v17 = 0;
        while (1)
        {
          uint64_t v18 = __p;
          if (v17 >= v36 - (unsigned char *)__p) {
            break;
          }
          uint64_t v19 = *((unsigned __int8 *)__p + v17);
          if (v19 > a6)
          {
            *(unsigned char *)(v34 + 16) = 4;
            sub_24B47D810(4u, *(_DWORD *)(v34 + 8), *(_DWORD *)(v34 + 12), "DecodeVisibleStringSubType");
            goto LABEL_34;
          }
          char v20 = *(unsigned char *)(a7 + v19);
          unint64_t v21 = a5[2];
          if ((unint64_t)v16 >= v21)
          {
            unint64_t v23 = *a5;
            int v24 = &v16[-*a5];
            unint64_t v25 = (unint64_t)(v24 + 1);
            if ((uint64_t)(v24 + 1) < 0) {
              sub_24B3E3AAC();
            }
            unint64_t v26 = v21 - v23;
            if (2 * v26 > v25) {
              unint64_t v25 = 2 * v26;
            }
            if (v26 >= 0x3FFFFFFFFFFFFFFFLL) {
              size_t v27 = 0x7FFFFFFFFFFFFFFFLL;
            }
            else {
              size_t v27 = v25;
            }
            if (v27) {
              char v28 = (char *)operator new(v27);
            }
            else {
              char v28 = 0;
            }
            unsigned __int8 v29 = &v24[(void)v28];
            unsigned int v30 = &v24[(void)v28];
            *unsigned int v30 = v20;
            unint64_t v22 = v30 + 1;
            if (v16 != (unsigned char *)v23)
            {
              BOOL v31 = &v16[~v23];
              do
              {
                char v32 = *--v16;
                (v31--)[(void)v28] = v32;
              }
              while (v16 != (unsigned char *)v23);
              unint64_t v16 = (unsigned char *)*a5;
              unsigned __int8 v29 = v28;
            }
            *a5 = (unint64_t)v29;
            a5[1] = (unint64_t)v22;
            a5[2] = (unint64_t)&v28[v27];
            if (v16) {
              operator delete(v16);
            }
          }
          else
          {
            *unint64_t v16 = v20;
            unint64_t v22 = v16 + 1;
          }
          a5[1] = (unint64_t)v22;
          ++v17;
          unint64_t v16 = v22;
          if (v17 >= *a4) {
            goto LABEL_34;
          }
        }
      }
      else
      {
LABEL_34:
        uint64_t v18 = __p;
      }
      if (v18)
      {
        unint64_t v36 = v18;
        operator delete(v18);
      }
      uint64_t v8 = v34;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 16) = 1;
    sub_24B47D810(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "DecodeVisibleStringSubType");
  }
  return *(unsigned __int8 *)(v8 + 16);
}

void sub_24B47E8E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B47E904(uint64_t result, unsigned int a2, int a3, unint64_t *a4)
{
  if (a3)
  {
    a4[1] = *a4;
    if (a2)
    {
      unsigned int v5 = (uint64_t **)result;
      uint64_t v6 = 0;
      unsigned int v7 = 0;
      unsigned int v8 = (1 << (a3 - 1));
      uint64_t v9 = a2;
      unsigned int v10 = v8;
      unsigned int v26 = v8;
      do
      {
        uint64_t v12 = (unsigned char *)a4[1];
        unint64_t v11 = a4[2];
        if ((unint64_t)v12 >= v11)
        {
          unint64_t v14 = *a4;
          BOOL v15 = &v12[-*a4];
          unint64_t v16 = (unint64_t)(v15 + 1);
          if ((uint64_t)(v15 + 1) < 0) {
            sub_24B3E3AAC();
          }
          unint64_t v17 = v11 - v14;
          if (2 * v17 > v16) {
            unint64_t v16 = 2 * v17;
          }
          if (v17 >= 0x3FFFFFFFFFFFFFFFLL) {
            size_t v18 = 0x7FFFFFFFFFFFFFFFLL;
          }
          else {
            size_t v18 = v16;
          }
          if (v18) {
            uint64_t v19 = (char *)operator new(v18);
          }
          else {
            uint64_t v19 = 0;
          }
          char v20 = &v15[(void)v19];
          unint64_t v21 = &v15[(void)v19];
          unsigned char *v21 = 0;
          unsigned int v13 = v21 + 1;
          if (v12 != (unsigned char *)v14)
          {
            unint64_t v22 = &v12[~v14];
            do
            {
              char v23 = *--v12;
              (v22--)[(void)v19] = v23;
            }
            while (v12 != (unsigned char *)v14);
            uint64_t v12 = (unsigned char *)*a4;
            char v20 = v19;
          }
          *a4 = (unint64_t)v20;
          a4[1] = (unint64_t)v13;
          a4[2] = (unint64_t)&v19[v18];
          if (v12) {
            operator delete(v12);
          }
          unsigned int v8 = v26;
        }
        else
        {
          *uint64_t v12 = 0;
          unsigned int v13 = v12 + 1;
        }
        a4[1] = (unint64_t)v13;
        uint64_t result = sub_24B47DA28(v5);
        if (result) {
          char v24 = *(unsigned char *)(*a4 + v7) | v10;
        }
        else {
          char v24 = *(unsigned char *)(*a4 + v7) & ~(_BYTE)v10;
        }
        *(unsigned char *)(*a4 + v7) = v24;
        BOOL v25 = v10 >= 2;
        if (v10 >= 2) {
          v10 >>= 1;
        }
        else {
          unsigned int v10 = v8;
        }
        if (!v25) {
          ++v7;
        }
        ++v6;
      }
      while (v6 != v9);
    }
  }
  return result;
}

uint64_t sub_24B47EA88(uint64_t a1, int a2, int a3, int a4, void *a5, int a6)
{
  if (*a5 == a5[1])
  {
    *(unsigned char *)(a1 + 16) = 1;
    uint64_t v9 = (unsigned __int8 *)(a1 + 16);
    sub_24B47D810(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "EncodeVisibleString7");
  }
  else
  {
    if (!a6) {
      sub_24B47DAA4(a1, a2, a3, a4);
    }
    sub_24B47E62C((uint64_t **)a1, 7 * a4, 7, a5);
    uint64_t v9 = (unsigned __int8 *)(a1 + 16);
  }
  return *v9;
}

uint64_t sub_24B47EB14(uint64_t a1, int a2, unsigned int a3, _DWORD *a4, unint64_t *a5, int a6)
{
  if (!a6) {
    sub_24B47DDC8(a1, a2, a3, a4);
  }
  sub_24B47E904(a1, 7 * *a4, 7, a5);
  return *(unsigned __int8 *)(a1 + 16);
}

void sub_24B47EB74(uint64_t a1)
{
  unsigned int v8 = 0;
  sub_24B47EBE8(a1, &v7);
  if (!v2)
  {
    unint64_t v3 = v8;
    if (v8)
    {
      unint64_t v4 = 1;
      do
      {
        if (sub_24B47DB4C(a1, 0, 0xFFu, &v6)) {
          break;
        }
      }
      while (v4++ < v3);
    }
  }
}

int32x2_t sub_24B47EBE8(uint64_t a1, int32x2_t *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  int v6 = *(unsigned __int8 *)(a1 + 16);
  __int32 v8 = 0;
  if (!v6)
  {
    if (v4)
    {
      sub_24B47DA28((uint64_t **)a1);
      if (*(unsigned char *)(a1 + 16)) {
        return result;
      }
      unsigned int v7 = 0x3FFF;
    }
    else
    {
      unsigned int v7 = 127;
    }
    if (!sub_24B47DDC8(a1, 0, v7, &v8))
    {
      a2[1].i32[0] = v8;
      int32x2_t result = vrev64_s32(*(int32x2_t *)(a1 + 8));
      *a2 = result;
    }
  }
  return result;
}

uint64_t sub_24B47EC74(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  unint64_t v3 = a3;
  unint64_t v4 = *a2;
  if (a3 < v4)
  {
    char v7 = ~(_BYTE)a3;
    do
    {
      if ((*((_DWORD *)a2 + 1) >> (v7 + v4)))
      {
        sub_24B47EB74(a1);
        if (v8)
        {
          uint64_t v9 = v8;
          sub_24B47D810(v8, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "SkipSequenceExtensionAddition");
          return v9;
        }
        unint64_t v4 = *a2;
      }
      ++v3;
      --v7;
    }
    while (v3 < v4);
  }
  return 0;
}

uint64_t sub_24B47ED0C(uint64_t a1)
{
  v3[0] = 0;
  int v4 = 0;
  uint64_t result = sub_24B47ED58(a1, (uint64_t)v3);
  if (!result) {
    return sub_24B47EC74(a1, v3, 0);
  }
  return result;
}

uint64_t sub_24B47ED58(uint64_t a1, uint64_t a2)
{
  sub_24B47DA28((uint64_t **)a1);
  uint64_t result = *(unsigned __int8 *)(a1 + 16);
  char v7 = 0;
  if (!result)
  {
    uint64_t result = sub_24B47DB4C(a1, 1, 0x40u, &v7);
    int v6 = 0;
    if (!result)
    {
      char v5 = v7;
      *(unsigned char *)a2 = v7;
      uint64_t result = sub_24B47DDC8(a1, 0, ~(-1 << v5), &v6);
      if (!result) {
        *(_DWORD *)(a2 + 4) = v6;
      }
    }
  }
  return result;
}

void sub_24B47EDE0(uint64_t a1)
{
  if (!sub_24B47EE38(a1, &v2))
  {
    sub_24B47EB74(a1);
  }
}

uint64_t sub_24B47EE38(uint64_t a1, unsigned char *a2)
{
  sub_24B47DA28((uint64_t **)a1);
  uint64_t result = *(unsigned __int8 *)(a1 + 16);
  char v5 = 0;
  if (!result)
  {
    uint64_t result = sub_24B47DB4C(a1, 0, 0x3Fu, &v5);
    if (!result) {
      *a2 = v5;
    }
  }
  return result;
}

uint64_t sub_24B47EE94(uint64_t a1, int32x2_t *a2)
{
  *a2 = vrev64_s32(*(int32x2_t *)(a1 + 8));
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t result = *(unsigned __int8 *)(a1 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    unsigned int v4 = 64;
    do
    {
      sub_24B47D9A0((uint64_t **)a1, 0);
      BOOL v5 = v4 > 1;
      v4 >>= 1;
    }
    while (v5);
    return *(unsigned __int8 *)(a1 + 16);
  }
  return result;
}

uint64_t sub_24B47EEF4(uint64_t a1, int32x2_t *a2)
{
  unsigned int v4 = *(_DWORD *)(a1 + 12);
  unsigned __int32 v5 = a2->i32[0] - v4;
  if (a2->i32[0] <= v4) {
    int v6 = 7;
  }
  else {
    int v6 = 255;
  }
  int v7 = v6 & v5;
  if (!v7 || (uint64_t result = sub_24B47DAA4(a1, 0, ~(-1 << v7), 0), !result))
  {
    int v9 = *(_DWORD *)(a1 + 8) - a2->i32[1];
    if ((v9 - 1) >= 0x80)
    {
      int v10 = *(_DWORD *)(a1 + 12);
      unsigned int v11 = 128;
      do
      {
        sub_24B47D9A0((uint64_t **)a1, 0);
        BOOL v12 = v11 > 1;
        v11 >>= 1;
      }
      while (v12);
      uint64_t result = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16)) {
        return result;
      }
      if (v10) {
        int v13 = v9 - 1;
      }
      else {
        int v13 = v9;
      }
      uint64_t v14 = (v13 + 1);
      if (v13 != -1)
      {
        uint64_t v15 = 0;
        uint64_t v16 = -v14;
        do
        {
          unint64_t v17 = (unsigned char *)(**(void **)a1 + *(unsigned int *)(a1 + 8) + v15);
          *unint64_t v17 = *(v17 - 1);
          --v15;
        }
        while (v16 != v15);
      }
    }
    uint64_t v18 = *(void *)(a1 + 8);
    *(int32x2_t *)(a1 + 8) = vrev64_s32(*a2);
    if ((v9 - 1) <= 0x7F)
    {
      sub_24B47D9A0((uint64_t **)a1, 0);
      uint64_t result = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16)) {
        return result;
      }
      int v19 = 127;
      goto LABEL_22;
    }
    sub_24B47D9A0((uint64_t **)a1, 1);
    uint64_t result = *(unsigned __int8 *)(a1 + 16);
    if (!*(unsigned char *)(a1 + 16))
    {
      sub_24B47D9A0((uint64_t **)a1, 0);
      uint64_t result = *(unsigned __int8 *)(a1 + 16);
      if (!*(unsigned char *)(a1 + 16))
      {
        int v19 = 0x3FFF;
LABEL_22:
        sub_24B47DAA4(a1, 0, v19, v9 - 1);
        uint64_t result = 0;
        *(void *)(a1 + 8) = v18;
      }
    }
  }
  return result;
}

uint64_t sub_24B47F068(uint64_t a1, int a2, int a3)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t result = *(unsigned __int8 *)(a1 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    uint64_t result = sub_24B47DAA4(a1, 1, 64, a2);
    if (!result) {
      return sub_24B47DAA4(a1, 0, ~(-1 << a2), a3);
    }
  }
  return result;
}

uint64_t sub_24B47F0DC(uint64_t a1, unsigned __int8 *a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t result = *(unsigned __int8 *)(a1 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    int v5 = *a2;
    return sub_24B47DAA4(a1, 0, 63, v5);
  }
  return result;
}

uint64_t sub_24B47F13C(uint64_t a1, int a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t result = *(unsigned __int8 *)(a1 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    return sub_24B47DAA4(a1, 0, 63, a2);
  }
  return result;
}

uint64_t sub_24B47F19C(uint64_t a1, unsigned char *a2)
{
  sub_24B47DA28((uint64_t **)a1);
  uint64_t result = *(unsigned __int8 *)(a1 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    return sub_24B47DB4C(a1, 0, 0x3Fu, a2);
  }
  return result;
}

uint64_t sub_24B47F1F8(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_24B47DEA0(a1, 0, 0, 0x40u, a2, 1);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_Ver");
  }
  return v4;
}

uint64_t sub_24B47F254(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 0x40u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Ver");
  }
  return v3;
}

uint64_t sub_24B47F2A8(uint64_t a1, unsigned __int8 *a2)
{
  unsigned int v4 = *a2 - 20;
  sub_24B47D9A0((uint64_t **)a1, v4 < 5);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_8:
    sub_24B47D810(v8, v6, v7, "asn1PE_StatusCode");
    return v5;
  }
  int v9 = *a2;
  if (v4 > 4) {
    uint64_t v8 = sub_24B47DAA4(a1, 0, 19, v9);
  }
  else {
    uint64_t v8 = sub_24B47F13C(a1, (v9 - 20));
  }
  uint64_t v5 = v8;
  if (v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_8;
  }
  return v5;
}

uint64_t sub_24B47F35C(uint64_t a1, unsigned char *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    unsigned int v8 = *(unsigned __int8 *)(a1 + 16);
LABEL_8:
    sub_24B47D810(v8, v6, v7, "asn1PD_StatusCode");
    return v5;
  }
  char v11 = 0;
  if (v4)
  {
    uint64_t v5 = sub_24B47F19C(a1, &v11);
    char v9 = v11 + 20;
  }
  else
  {
    uint64_t v5 = sub_24B47DB4C(a1, 0, 0x13u, &v11);
    char v9 = v11;
  }
  *a2 = v9;
  if (v5)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    unsigned int v8 = v5;
    goto LABEL_8;
  }
  return v5;
}

uint64_t sub_24B47F418(uint64_t a1, uint64_t a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_9:
    sub_24B47D810(v7, v5, v6, "asn1PE_SUPLEND");
    return v4;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)a2);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 4));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 8));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v7 = sub_24B4A08B8(a1, (int *)(a2 + 16));
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    uint64_t v7 = sub_24B47F2A8(a1, (unsigned __int8 *)(a2 + 456));
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (!*(_DWORD *)(a2 + 8)) {
    return 0;
  }
  uint64_t v7 = sub_24B47F1F8(a1, (void *)(a2 + 464));
  uint64_t v4 = v7;
  if (v7)
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  return v4;
}

uint64_t sub_24B47F590(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_9:
    sub_24B47D810(v8, v6, v7, "asn1PD_SUPLEND");
    return v5;
  }
  int v9 = v4;
  *(_DWORD *)a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  *(_DWORD *)(a2 + 4) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  *(_DWORD *)(a2 + 8) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v8 = sub_24B4A098C(a1, a2 + 16);
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    uint64_t v8 = sub_24B47F35C(a1, (unsigned char *)(a2 + 456));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    uint64_t v8 = sub_24B47F254(a1, (unint64_t *)(a2 + 464));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (!v9) {
    return 0;
  }
  uint64_t v8 = sub_24B47ED0C(a1);
  uint64_t v5 = v8;
  if (v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  return v5;
}

void sub_24B47F730(uint64_t a1, int a2)
{
  if (a2 == 3 && *(_DWORD *)(a1 + 124) == 2)
  {
    if (*(unsigned char *)(a1 + 216) == 1)
    {
      if (!*(_DWORD *)(a1 + 220) && *(_DWORD *)(a1 + 128) == 2) {
        sub_24B47F730(a1, 1);
      }
      *(unsigned char *)(a1 + 216) = 0;
    }
    sub_24B47FD88(a1, 0);
    if (*(_DWORD *)(a1 + 128) == 2 && *(unsigned char *)(a1 + 141) == 1)
    {
      *(unsigned char *)(a1 + 176) = 0;
      sub_24B47F730(a1, 1);
    }
  }
  else if ((a2 | 2) != 3)
  {
    goto LABEL_14;
  }
  if (*(_DWORD *)(a1 + 128) == 2)
  {
    *(void *)(a1 + 128) = 1;
    *(_DWORD *)(a1 + 136) = -1;
    *(_WORD *)(a1 + 140) = 0;
    *(unsigned char *)(a1 + 142) = 0;
    *(_DWORD *)(a1 + 144) = 0;
    *(_WORD *)(a1 + 148) = 0;
  }
LABEL_14:
  if ((a2 & 0xFFFFFFFE) == 2 && *(_DWORD *)(a1 + 152) == 2)
  {
    *(void *)(a1 + 152) = 1;
    *(_DWORD *)(a1 + 160) = -1;
    *(_WORD *)(a1 + 164) = 0;
    *(unsigned char *)(a1 + 166) = 0;
    *(_DWORD *)(a1 + 168) = 0;
    *(_WORD *)(a1 + 172) = 0;
  }
  if (*(_DWORD *)(a1 + 128) != 2) {
    *(_DWORD *)(a1 + 124) = 1;
  }
}

void sub_24B47F85C(uint64_t a1, int *a2, int a3, _DWORD *a4, _DWORD *a5, unsigned char *a6, unsigned char *a7, char a8)
{
  if (!a5)
  {
    uint64_t v18 = (_DWORD *)(a1 + 124);
    int v16 = 1;
    if (*(_DWORD *)(a1 + 124))
    {
      char v38 = a8;
      int v19 = 0;
      int v20 = 0;
      a3 = 0;
LABEL_23:
      int v22 = 1;
      goto LABEL_24;
    }
LABEL_11:
    LOBYTE(v22) = 1;
    goto LABEL_48;
  }
  LOBYTE(v16) = 1;
  unint64_t v17 = malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
  free(v17);
  uint64_t v18 = (_DWORD *)(a1 + 124);
  if (!*(_DWORD *)(a1 + 124)) {
    goto LABEL_11;
  }
  char v38 = a8;
  int v19 = *a2;
  int v20 = a2[1];
  if (*a5 == 3)
  {
    int v25 = *(_DWORD *)(a1 + 152);
    switch(v25)
    {
      case 0:
LABEL_22:
        int v16 = 1;
        goto LABEL_23;
      case 1:
        int v22 = 0;
        break;
      case 2:
        int v26 = a2[1];
        int v27 = *a2;
        sub_24B47FAD4(a1, 2, v27, v26);
        int v19 = v27;
        int v22 = v28;
        break;
      default:
        uint64_t v29 = 362;
        goto LABEL_21;
    }
    int v16 = 1;
    goto LABEL_24;
  }
  if (*a5) {
    goto LABEL_22;
  }
  int v21 = *(_DWORD *)(a1 + 128);
  if (!v21) {
    goto LABEL_22;
  }
  if (v21 == 1)
  {
    int v16 = 0;
    goto LABEL_23;
  }
  if (v21 != 2)
  {
    uint64_t v29 = 339;
LABEL_21:
    int v30 = *a2;
    sub_24B4B00A4(v29, "lpc.c");
    int v19 = v30;
    goto LABEL_22;
  }
  int v22 = 1;
  int v23 = v19;
  sub_24B47FAD4(a1, 1, v19, v20);
  int v19 = v23;
  int v16 = v24;
LABEL_24:
  BOOL v31 = 0;
  if (v16) {
    BOOL v32 = v22 == 0;
  }
  else {
    BOOL v32 = 1;
  }
  int v33 = v32;
  if (a4 && v33) {
    BOOL v31 = *a4 != 0;
  }
  uint64_t v34 = 0;
  int v35 = 0;
  if (a5 && !v16)
  {
    *(_DWORD *)(a1 + 132) = v19;
    *(_DWORD *)(a1 + 136) = v20;
    uint64_t v34 = (uint64_t *)(a1 + 132);
    *(_DWORD *)(a1 + 140) = a3;
    int v36 = a5[1];
    *(_DWORD *)(a1 + 144) = v36;
    if (v36 == 2)
    {
      int v37 = a5[3];
      *(unsigned char *)(a1 + 149) = v37;
      *(unsigned char *)(a1 + 148) = 0;
      if (v31) {
        *(unsigned char *)(a1 + 149) = v37 - 1;
      }
    }
    *(_DWORD *)(a1 + 128) = 2;
    int v35 = 1;
  }
  if (a5 && !v22)
  {
    *(_DWORD *)(a1 + 156) = v19;
    *(_DWORD *)(a1 + 160) = v20;
    uint64_t v34 = (uint64_t *)(a1 + 156);
    *(_DWORD *)(a1 + 164) = a3;
    *(_DWORD *)(a1 + 168) = a5[1];
    *(_DWORD *)(a1 + 152) = 2;
    int v35 = 1;
  }
  if (a5 && v35)
  {
    if (*a5 != 3) {
      sub_24B48088C(a1, (uint64_t)a5, v34, v38);
    }
    if (*v18 == 1) {
      _DWORD *v18 = 2;
    }
  }
LABEL_48:
  *a6 = v16;
  *a7 = v22;
}

double sub_24B47FAD4(uint64_t a1, int a2, int a3, int a4)
{
  if (a2 == 2)
  {
    uint64_t v5 = (uint64_t *)(a1 + 156);
  }
  else
  {
    if (a2 != 1)
    {
      sub_24B4B00A4(1659, "lpc.c");
      return result;
    }
    uint64_t v5 = (uint64_t *)(a1 + 132);
  }
  if ((*(_DWORD *)v5 != a3 || *((_DWORD *)v5 + 1) != a4) && (a3 != 1 || *(_DWORD *)v5 == 1))
  {
    if (a2 == 2)
    {
      bzero(v8, 0x230uLL);
      v8[552] = 1;
      uint64_t v7 = *v5;
      char v11 = v8;
      uint64_t v9 = v7;
      int v10 = &v9;
    }
    else
    {
      if (!*(unsigned char *)(a1 + 176)) {
        *(unsigned char *)(a1 + 176) = 1;
      }
      bzero(v8, 0x230uLL);
      v8[416] = 1;
      uint64_t v9 = *v5;
      if (*((unsigned char *)v5 + 10) || *((unsigned char *)v5 + 9)) {
        goto LABEL_20;
      }
      int v10 = &v9;
      char v11 = v8;
    }
    sub_24B480FA8(a1, &v10);
LABEL_20:
    double result = NAN;
    *uint64_t v5 = 0xFFFFFFFF00000000;
    *((_WORD *)v5 + 4) = 0;
    *((unsigned char *)v5 + 10) = 0;
  }
  return result;
}

void sub_24B47FC14(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v10 = a2;
  if (!*(_DWORD *)(a1 + 124))
  {
    uint64_t v9 = 568;
LABEL_16:
    sub_24B4B00A4(v9, "lpc.c");
    return;
  }
  if ((a3 - 1) > 1)
  {
    uint64_t v9 = 562;
    goto LABEL_16;
  }
  uint64_t v5 = a1 + 128;
  uint64_t v6 = 152;
  if (a3 == 1) {
    uint64_t v6 = 128;
  }
  else {
    uint64_t v5 = a1 + 152;
  }
  if (*(_DWORD *)(a1 + v6) != 2)
  {
    uint64_t v9 = 556;
    goto LABEL_16;
  }
  if (*(void *)(v5 + 4) != a2)
  {
    uint64_t v9 = 551;
    goto LABEL_16;
  }
  if (a3 == 2) {
    goto LABEL_25;
  }
  if (a4 == 1 && !*(unsigned char *)(a1 + 176))
  {
    char v8 = 1;
LABEL_24:
    *(unsigned char *)(a1 + 176) = v8;
LABEL_25:
    sub_24B47F730(a1, a3);
    if (!a4) {
      sub_24B47FD88(a1, &v10);
    }
    return;
  }
  if (!a4)
  {
    char v8 = 0;
    goto LABEL_24;
  }
  sub_24B47F730(a1, a3);
}

void sub_24B47FD88(uint64_t a1, _DWORD *a2)
{
  char v2 = *(_DWORD **)(a1 + 200);
  if (!v2) {
    return;
  }
  uint64_t v4 = a1 + 184;
  if (a2)
  {
    if (*(_DWORD *)v4 != *a2 || *(_DWORD *)(a1 + 188) != a2[1]) {
      return;
    }
    goto LABEL_14;
  }
  if (*(unsigned char *)(a1 + 193) != 1)
  {
    uint64_t v6 = 2469;
LABEL_13:
    sub_24B4B00A4(v6, "lpc.c");
    goto LABEL_14;
  }
  int v5 = *(_DWORD *)(a1 + 196);
  if (v5 != 1)
  {
    if (v5 == 2)
    {
      if (!*v2) {
        sub_24B47F730(a1, 1);
      }
      goto LABEL_14;
    }
    uint64_t v6 = 2463;
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v7 = *(void **)(a1 + 200);
  if (v7) {
    free(v7);
  }
  *(void *)uint64_t v4 = 0;
  *(void *)(v4 + 8) = 0;
  *(void *)(v4 + 16) = 0;
}

double sub_24B47FE50(uint64_t a1)
{
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(void *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_DWORD *)(a1 + 108) = 3;
  *(unsigned char *)(a1 + 116) = -1;
  char v2 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
  *char v2 = 0;
  v2[1] = 0;
  *(void *)(a1 + 72) = v2;
  uint64_t v3 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
  *uint64_t v3 = 0;
  v3[1] = 0;
  *(void *)(a1 + 96) = v3;
  *(_DWORD *)(a1 + 232) = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(unsigned char *)(a1 + 120) = 1;
  *(unsigned char *)a1 = 1;
  return result;
}

void sub_24B47FF00(uint64_t a1, int a2, char a3, int a4, const void *a5)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  v15[0] = 1;
  uint64_t v10 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v13) = 0;
    _os_log_debug_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_DEBUG, "#posp,lpp,lpp_t_supl_pos_trigger", (uint8_t *)&v13, 2u);
  }
  sub_24B480918((uint64_t)a5, a4);
  if (!*(_DWORD *)(a1 + 4)) {
    goto LABEL_11;
  }
  if (!a5 || a4 < 1)
  {
    sub_24B4B00A4(608, "lpp_if.c");
    sub_24B4B00A4(609, "lpp_if.c");
LABEL_11:
    sub_24B481400(a1, a2, 1, 0, 0);
    return;
  }
  v15[1] = a2;
  char v11 = malloc_type_calloc(1uLL, a4, 0x86CB5109uLL);
  bzero(v11, a4);
  uint64_t v14 = v11;
  int v13 = a4;
  memcpy(v11, a5, a4);
  BOOL v12 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67109120;
    int v17 = a4;
    _os_log_debug_impl(&dword_24B3DE000, v12, OS_LOG_TYPE_DEBUG, "#posp,lpp,lpp_t_supl_pos_trigger,calling lpp_process_downlink_message,airMsgLen,%d", buf, 8u);
  }
  sub_24B480918((uint64_t)v11, a4);
  sub_24B480D2C(a1, v15, a3, (uint64_t)&v13);
  if (v14) {
    free(v14);
  }
}

void sub_24B4800F4(uint64_t a1, int a2, char a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  bzero(v30, 0x368uLL);
  long long v28 = 0u;
  long long v29 = 0u;
  *(_OWORD *)__src = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  *(_OWORD *)std::string::size_type size = 0u;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  unint64_t v21 = 0xFFFFFFFF00000000;
  if (!(a5 | a7)) {
    goto LABEL_21;
  }
  if (a5) {
    sub_24B4897C4(a5);
  }
  uint64_t v22 = a5;
  uint64_t v23 = a7;
  if (a4 == 1)
  {
    LODWORD(v21) = 1;
    HIDWORD(v21) = a2;
    int v13 = **(char ***)(a1 + 72);
    if (v13)
    {
      while (*((_DWORD *)v13 + 4) != 1 || *((_DWORD *)v13 + 5) != a2)
      {
        int v13 = *(char **)v13;
        if (!v13) {
          goto LABEL_9;
        }
      }
    }
    else
    {
LABEL_9:
      int v13 = sub_24B4898E0(a1, &v21, a3, 255, 0);
      if (!v13) {
        goto LABEL_24;
      }
    }
    __int16 v20 = 1;
    int v14 = v13[24];
    HIBYTE(v20) = v13[24];
    uint64_t v15 = (char *)**((void **)v13 + 5);
    if (v15)
    {
      while (v15[16] != 1 || v15[17] != v14)
      {
        uint64_t v15 = *(char **)v15;
        if (!v15) {
          goto LABEL_14;
        }
      }
      goto LABEL_15;
    }
LABEL_14:
    uint64_t v15 = sub_24B4816DC((uint64_t)v13, &v20, 6);
    if (v15)
    {
LABEL_15:
      *((_DWORD *)v15 + 6) = 1;
      goto LABEL_17;
    }
LABEL_24:
    sub_24B4B00A4(882, "lpp_if.c");
    goto LABEL_25;
  }
  __int16 v31 = 1;
  char v32 = 0;
  int v33 = 2;
  char v34 = 0;
  uint64_t v15 = v30;
LABEL_17:
  if (sub_24B483104(a1, (uint64_t)v15, &v22, (uint64_t)&v27) == 1)
  {
    uint64_t v16 = v28;
    size[0] = v28;
    *(unsigned char *)(v28 + 5) = 0;
    *(unsigned char *)(v16 + 9) = 0;
    uint64_t v17 = sub_24B4AF72C(4, 7u, (uint64_t *)__src, 0, &size[1], v16, 0, 0);
    if (!a4) {
      goto LABEL_19;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v17 = 1;
  if (a4)
  {
LABEL_22:
    if (!v17)
    {
      sub_24B48153C(a1, SHIDWORD(v21), 0, (unsigned int *)&size[1]);
      goto LABEL_26;
    }
LABEL_25:
    HIDWORD(v21) = a2;
    sub_24B48153C(a1, a2, 1, 0);
    sub_24B4B00A4(924, "lpp_if.c");
    goto LABEL_26;
  }
LABEL_19:
  size_t v18 = LODWORD(size[1]);
  if (LODWORD(size[1]))
  {
    int v19 = malloc_type_calloc(1uLL, LODWORD(size[1]), 0x86CB5109uLL);
    bzero(v19, v18);
    memcpy(v19, __src[0], SLODWORD(size[1]));
  }
LABEL_26:
  sub_24B48B264((void **)size);
}

void sub_24B480368(uint64_t a1, int a2, char a3)
{
  long long v13 = 0u;
  memset(v14, 0, sizeof(v14));
  *(_OWORD *)std::string::size_type size = 0u;
  *(_OWORD *)__src = 0u;
  int v16 = 1;
  int v17 = a2;
  uint64_t v4 = **(char ***)(a1 + 72);
  if (v4)
  {
    while (*((_DWORD *)v4 + 4) != 1 || *((_DWORD *)v4 + 5) != a2)
    {
      uint64_t v4 = *(char **)v4;
      if (!v4) {
        goto LABEL_5;
      }
    }
    LOBYTE(v15) = 1;
  }
  else
  {
LABEL_5:
    uint64_t v4 = sub_24B4898E0(a1, &v16, a3, 255, 0);
    LOBYTE(v15) = 1;
    if (!v4) {
      goto LABEL_19;
    }
  }
  int v5 = v4[24];
  HIBYTE(v15) = v4[24];
  uint64_t v6 = (char *)**((void **)v4 + 5);
  if (v6)
  {
    while (v6[16] != 1 || v6[17] != v5)
    {
      uint64_t v6 = *(char **)v6;
      if (!v6) {
        goto LABEL_12;
      }
    }
  }
  else
  {
LABEL_12:
    uint64_t v6 = sub_24B4816DC((uint64_t)v4, &v15, 5);
    if (!v6) {
      goto LABEL_19;
    }
  }
  *((_DWORD *)v6 + 6) = 1;
  if (sub_24B482F80(a1, (uint64_t)v6, 0, (uint64_t)&v13) == 1)
  {
    uint64_t v7 = *(void *)&v14[0];
    *(unsigned char *)(*(void *)&v14[0] + 5) = 0;
    *(unsigned char *)(v7 + 9) = 0;
    LODWORD(size[1]) = 0;
    if (sub_24B4AF72C(4, 7u, (uint64_t *)__src, 0, &size[1], v7, 0, 0))
    {
      sub_24B4B00A4(1016, "lpp_if.c");
      int v8 = 1;
      uint64_t v9 = __src[0];
    }
    else
    {
      v4[113] = 1;
      size_t v10 = LODWORD(size[1]);
      uint64_t v9 = malloc_type_calloc(1uLL, LODWORD(size[1]), 0x86CB5109uLL);
      bzero(v9, v10);
      memcpy(v9, __src[0], SLODWORD(size[1]));
      int v8 = 0;
      __src[0] = v9;
    }
  }
  else
  {
    uint64_t v9 = 0;
    LODWORD(size[1]) = 0;
    __src[0] = 0;
    int v8 = 1;
  }
  sub_24B481358(a1, v17, v8, size[1], (char *)v9);
LABEL_19:
  sub_24B48B264((void **)v14);
}

void sub_24B480554(uint64_t a1, int a2)
{
  uint64_t v3 = **(void **)(a1 + 72);
  if (v3)
  {
    while (*(_DWORD *)(v3 + 16) != 1 || *(_DWORD *)(v3 + 20) != a2)
    {
      uint64_t v3 = *(void *)v3;
      if (!v3) {
        return;
      }
    }
    sub_24B489AEC(a1, v3, 1u);
  }
}

void sub_24B480590(uint64_t a1, long long *a2, long long *a3, char a4, uint64_t a5, int a6, uint64_t a7)
{
  unsigned __int8 v8 = BYTE4(a5);
  uint64_t v21 = *MEMORY[0x263EF8340];
  *(void *)&long long v18 = 0x8000000080000000;
  *((void *)&v18 + 1) = 0xFFFF00007FFFFFFFLL;
  LOWORD(v19[0]) = 255;
  WORD4(v19[0]) = -1;
  BYTE10(v19[0]) = -1;
  *(_DWORD *)((char *)v19 + 2) = -1;
  BYTE6(v19[0]) = -1;
  memset((char *)v19 + 11, 0, 32);
  char v20 = 0;
  int v16 = 0;
  uint64_t v17 = 0;
  if ((a4 & 3) != 0)
  {
    long long v10 = a2[1];
    long long v18 = *a2;
    v19[0] = v10;
    long long v11 = *(long long *)((char *)a2 + 43);
    long long v12 = *a3;
    long long v13 = a3[1];
    v19[1] = a2[2];
    *(_OWORD *)((char *)&v19[1] + 11) = v11;
    v19[3] = v12;
    v19[4] = v13;
    int v14 = &v18;
    int v16 = &v18;
    char v20 = a4;
    if ((a4 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  int v14 = 0;
  if ((a4 & 4) != 0) {
LABEL_3:
  }
    uint64_t v17 = a7;
LABEL_4:
  if ((a5 & 0xFFFFFFFE) == 2)
  {
    if (v14) {
      sub_24B4897C4((uint64_t)v14);
    }
    v15[0] = v8;
    v15[1] = a6;
    sub_24B488C68(a1, (uint64_t)&v16, v15);
  }
  else
  {
    sub_24B4B00A4(1145, "lpp_if.c");
  }
}

void sub_24B4806CC(uint64_t a1, int *a2, uint64_t a3, int a4)
{
  *(void *)((char *)&v15 + 4) = 0xFFFFFFFFLL;
  BYTE12(v15) = -1;
  *(void *)&long long v16 = 0xFF00000000;
  BYTE8(v16) = -1;
  if ((a3 & 0xFFFFFFFE) == 2 && BYTE4(a3) <= 1u)
  {
    v10[0] = BYTE4(a3);
    v10[1] = a4;
  }
  else
  {
    sub_24B4B00A4(1268, "lpp_if.c");
  }
  bzero(v11, 0x230uLL);
  v11[0] = 1;
  int v12 = *a2;
  char v21 = *((unsigned char *)a2 + 264);
  int v22 = a2[67];
  long long v24 = *(_OWORD *)(a2 + 70);
  uint64_t v25 = *((void *)a2 + 37);
  char v23 = *((unsigned char *)a2 + 272);
  if ((v12 - 1) < 2)
  {
    long long v17 = *(_OWORD *)(a2 + 17);
    long long v18 = *(_OWORD *)(a2 + 21);
    *(_OWORD *)int v19 = *(_OWORD *)(a2 + 25);
    *(void *)((char *)&v19[3] + 2) = *(void *)((char *)a2 + 114);
    long long v13 = *(_OWORD *)(a2 + 1);
    long long v14 = *(_OWORD *)(a2 + 5);
    long long v15 = *(_OWORD *)(a2 + 9);
    long long v16 = *(_OWORD *)(a2 + 13);
LABEL_9:
    v26[0] = v10;
    v26[1] = v11;
    sub_24B480FA8(a1, v26);
    return;
  }
  if (!v12)
  {
    long long v6 = *((_OWORD *)a2 + 12);
    *(_OWORD *)&v19[27] = *((_OWORD *)a2 + 13);
    long long v7 = *((_OWORD *)a2 + 15);
    *(_OWORD *)&v19[31] = *((_OWORD *)a2 + 14);
    *(_OWORD *)&v19[35] = v7;
    long long v8 = *((_OWORD *)a2 + 8);
    *(_OWORD *)&v19[11] = *((_OWORD *)a2 + 9);
    long long v9 = *((_OWORD *)a2 + 11);
    *(_OWORD *)&v19[15] = *((_OWORD *)a2 + 10);
    *(_OWORD *)&v19[19] = v9;
    *(_OWORD *)&v19[23] = v6;
    uint64_t v20 = *((void *)a2 + 32);
    *(_OWORD *)&v19[7] = v8;
    goto LABEL_9;
  }
  sub_24B4B00A4(1293, "lpp_if.c");
}

__n128 sub_24B48088C(uint64_t a1, uint64_t a2, uint64_t *a3, char a4)
{
  if (a3)
  {
    if (*(unsigned char *)(a1 + 176))
    {
      uint64_t v7 = *a3;
      *(_DWORD *)(a1 + 192) = *((_DWORD *)a3 + 2);
      *(void *)(a1 + 184) = v7;
      long long v8 = (char *)malloc_type_calloc(1uLL, 0x1CuLL, 0x86CB5109uLL);
      *((void *)v8 + 1) = 0;
      *((void *)v8 + 2) = 0;
      *(void *)long long v8 = 0;
      *((_DWORD *)v8 + 6) = 0;
      *(void *)(a1 + 200) = v8;
      *(unsigned char *)(a1 + 208) = a4;
      *(_DWORD *)(a1 + 196) = 2;
      __n128 result = *(__n128 *)(a2 + 12);
      *(_OWORD *)long long v8 = *(_OWORD *)a2;
      *(__n128 *)(v8 + 12) = result;
    }
  }
  return result;
}

void sub_24B480918(uint64_t a1, uint64_t a2)
{
  v25[20] = *MEMORY[0x263EF8340];
  if (a1)
  {
    uint64_t v2 = a2;
    if (a2)
    {
      uint64_t v3 = a1;
      memset(&__str, 0, sizeof(__str));
      uint64_t v4 = *MEMORY[0x263F8C2B8];
      uint64_t v5 = *(void *)(MEMORY[0x263F8C2B8] + 64);
      uint64_t v6 = *(void *)(MEMORY[0x263F8C2B8] + 72);
      do
      {
        sub_24B3E0718((uint64_t)buf);
        uint64_t v7 = *(void *)&v22[2];
        *(_DWORD *)((char *)v23 + *(void *)(*(void *)&v22[2] - 24)) = *(_DWORD *)((unsigned char *)v23
                                                                                      + *(void *)(*(void *)&v22[2]
                                                                                                  - 24)) & 0xFFFFFFB5 | 8;
        *(void *)((char *)&v23[2] + *(void *)(v7 - 24)) = 2;
        __p.__r_.__value_.__s.__data_[0] = 48;
        sub_24B3E09F0(&v22[2], (char *)&__p);
        std::ostream::operator<<();
        std::stringbuf::str();
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = __p.__r_.__value_.__l.__size_;
        }
        std::string::append(&__str, (const std::string::value_type *)p_p, size);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        *(void *)buf = v4;
        *(void *)&buf[*(void *)(v4 - 24)] = v5;
        *(void *)&v22[2] = v6;
        v23[0] = MEMORY[0x263F8C318] + 16;
        if (v24 < 0) {
          operator delete((void *)v23[8]);
        }
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x24C5D2690](v25);
        ++v3;
        --v2;
      }
      while (v2);
      std::string::size_type v10 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      {
        std::string::size_type v11 = __str.__r_.__value_.__l.__size_ / 0x1F4;
        std::string::size_type v12 = __str.__r_.__value_.__l.__size_ % 0x1F4;
      }
      else
      {
        std::string::size_type v11 = 0;
        std::string::size_type v12 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      }
      std::string::size_type v13 = 0;
      if (v12) {
        std::string::size_type v14 = v11 + 1;
      }
      else {
        std::string::size_type v14 = v11;
      }
      uint64_t v15 = 1;
      if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) != 0) {
        goto LABEL_24;
      }
      while (v13 < v10)
      {
        while (1)
        {
          std::string::basic_string(&__p, &__str, v13, 0x1F4uLL, (std::allocator<char> *)buf);
          long long v16 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
          {
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              long long v17 = &__p;
            }
            else {
              long long v17 = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)buf = 134284035;
            *(void *)&uint8_t buf[4] = v15;
            __int16 v21 = 2049;
            *(void *)int v22 = v14;
            *(_WORD *)&v22[8] = 2081;
            v23[0] = v17;
            _os_log_impl(&dword_24B3DE000, v16, OS_LOG_TYPE_DEFAULT, "#lpp,#pdu,%{private}zu,of,%{private}zu,%{private}s", buf, 0x20u);
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          std::string::size_type v10 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          v13 += 500;
          ++v15;
          if ((*((unsigned char *)&__str.__r_.__value_.__s + 23) & 0x80) == 0) {
            break;
          }
LABEL_24:
          if (v13 >= __str.__r_.__value_.__l.__size_)
          {
            operator delete(__str.__r_.__value_.__l.__data_);
            return;
          }
        }
      }
    }
  }
}

void sub_24B480CE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B480D2C(uint64_t a1, _DWORD *a2, char a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 8);
  if (v4 && (unsigned int v6 = *(_DWORD *)a4) != 0)
  {
    long long v15 = 0u;
    long long v16 = 0u;
    long long v14 = 0u;
    *(void *)&long long v16 = v4;
    DWORD2(v15) = v6;
    std::string::size_type v10 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
    bzero(v10, 0xA28uLL);
    *(void *)&long long v15 = v10;
    int v13 = sub_24B4AF57C(4u, 7u, v4, v6, (uint64_t)v10, 0, (uint64_t)v12, 0, 0);
    std::string::size_type v11 = sub_24B4898A0(a1, a2, a3, v13, (uint64_t)v10);
    if (v11)
    {
      (*((void (**)(uint64_t, char *, uint64_t, int *, long long *))v11 + 6))(a1, v11, a4, &v13, &v14);
      std::string::size_type v10 = (void *)v15;
    }
    else
    {
      sub_24B4B00A4(174, "lpp_control.c");
    }
    sub_24B48C3C8((unsigned __int8 *)v10, (uint64_t)&unk_2652B0120);
    free((void *)v15);
  }
  else
  {
    sub_24B4B00A4(124, "lpp_control.c");
  }
}

void sub_24B480E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 && a3)
  {
    if (*(unsigned char *)(a1 + 45) == 1)
    {
      size_t v4 = (*(_DWORD *)a3 + 2);
      uint64_t v5 = malloc_type_calloc(1uLL, v4, 0x86CB5109uLL);
      bzero(v5, v4);
      signed int v6 = *(_DWORD *)a3;
      *uint64_t v5 = bswap32(*(_DWORD *)a3) >> 16;
      if (v5) {
        signed int v6 = *(_DWORD *)a3;
      }
      memcpy(v5 + 1, *(const void **)(a3 + 8), v6);
      uint64_t v7 = malloc_type_calloc(1uLL, 5uLL, 0x86CB5109uLL);
      free(v7);
      free(v5);
    }
    else
    {
      sub_24B4B00A4(353, "lpp_control.c");
    }
  }
}

void sub_24B480FA8(uint64_t a1, void *a2)
{
  uint64_t v2 = **(uint64_t ***)(a1 + 72);
  if (!v2)
  {
LABEL_5:
    sub_24B4B00A4(695, "lpp_control.c");
    return;
  }
  while (*((_DWORD *)v2 + 4) != *(_DWORD *)*a2 || *((_DWORD *)v2 + 5) != *(_DWORD *)(*a2 + 4))
  {
    uint64_t v2 = (uint64_t *)*v2;
    if (!v2) {
      goto LABEL_5;
    }
  }
  uint64_t v3 = a2[1];
  if (*(unsigned char *)v3 == 1)
  {
    if (*((unsigned char *)v2 + 110))
    {
      uint64_t v4 = *(void *)v2[5];
      if (v4)
      {
        while (*(unsigned __int8 *)(v4 + 16) != *((unsigned __int8 *)v2 + 104)
             || *(unsigned __int8 *)(v4 + 17) != *((unsigned __int8 *)v2 + 105))
        {
          uint64_t v4 = *(void *)v4;
          if (!v4) {
            goto LABEL_38;
          }
        }
        goto LABEL_37;
      }
    }
  }
  else
  {
    if ((*(unsigned char *)(v3 + 416) == 1 || *(unsigned char *)(v3 + 320) == 1 && !*(_DWORD *)(v3 + 328)) && *((unsigned char *)v2 + 111))
    {
      for (uint64_t i = *(void *)v2[5]; i; uint64_t i = *(void *)i)
      {
        if (*(unsigned __int8 *)(i + 16) == *((unsigned __int8 *)v2 + 106)
          && *(unsigned __int8 *)(i + 17) == *((unsigned __int8 *)v2 + 107))
        {
          break;
        }
      }
    }
    else
    {
      uint64_t i = 0;
    }
    if ((*(unsigned char *)(v3 + 552) == 1 || *(unsigned char *)(v3 + 417) == 1 && *(_DWORD *)(v3 + 424) == 3) && *((unsigned char *)v2 + 112))
    {
      for (uint64_t j = *(void *)v2[5]; j; uint64_t j = *(void *)j)
      {
        if (*(unsigned __int8 *)(j + 16) == *((unsigned __int8 *)v2 + 108)
          && *(unsigned __int8 *)(j + 17) == *((unsigned __int8 *)v2 + 109))
        {
          break;
        }
      }
    }
    else
    {
      uint64_t j = 0;
    }
    if (j) {
      uint64_t v4 = j;
    }
    else {
      uint64_t v4 = i;
    }
    if (v4)
    {
LABEL_37:
      sub_24B48208C(a1, v4, 7u, (uint64_t *)v3);
      return;
    }
  }
LABEL_38:
  sub_24B4B00A4(690, "lpp_control.c");
}

void sub_24B481140(uint64_t a1, int a2)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  uint64_t v4 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    int v7 = *(_DWORD *)(a1 + 4);
    v8[0] = 67109376;
    v8[1] = v7;
    __int16 v9 = 1024;
    int v10 = a2;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#posp,#lpp,entered lpp_state_control,state,%d,event,%d", (uint8_t *)v8, 0xEu);
  }
  int v5 = *(_DWORD *)(a1 + 4);
  if (v5 == 2)
  {
    if (a2 == 1 && !**(void **)(a1 + 72))
    {
      *(_DWORD *)(a1 + 4) = 1;
      int v6 = 2;
      goto LABEL_13;
    }
  }
  else
  {
    if (v5 == 1)
    {
      if (a2) {
        return;
      }
      *(_DWORD *)(a1 + 4) = 2;
      int v6 = 1;
      goto LABEL_13;
    }
    if (!v5 && a2 == 2)
    {
      *(_DWORD *)(a1 + 4) = 1;
      int v6 = 0;
LABEL_13:
      sub_24B4890B0(v6);
    }
  }
}

void sub_24B481274(uint64_t a1, _DWORD *a2)
{
  uint64_t v4 = **(void ***)(a1 + 96);
  while (v4)
  {
    while (1)
    {
      int v5 = v4;
      uint64_t v4 = (void *)*v4;
      if (a2) {
        break;
      }
      int v6 = *((_DWORD *)v5 + 5);
LABEL_8:
      sub_24B489708(*(unsigned __int8 *)(v5[3] + 32), v6);
      int v7 = (void *)v5[3];
      long long v8 = (void *)v7[1];
      if (v8)
      {
        free(v8);
        v7[1] = 0;
        int v7 = (void *)v5[3];
      }
      __int16 v9 = (void *)v7[3];
      if (!v9 || (free(v9), v7[3] = 0, (int v7 = (void *)v5[3]) != 0))
      {
        free(v7);
        v5[3] = 0;
      }
      sub_24B48ADC0(*(void **)(a1 + 96), v5);
      free(v5);
      if (!v4) {
        goto LABEL_14;
      }
    }
    if (*a2 == *((_DWORD *)v5 + 4))
    {
      int v6 = a2[1];
      if (v6 == *((_DWORD *)v5 + 5)) {
        goto LABEL_8;
      }
    }
  }
LABEL_14:
  if (!a2) {
    *(unsigned char *)(a1 + 104) = 0;
  }
}

void sub_24B481358(int a1, int a2, int a3, int a4, char *__src)
{
  std::string __p = 0;
  int v10 = 0;
  int v12 = 0;
  uint64_t v11 = 0;
  BOOL v8 = a3 != 0;
  int v7 = a2;
  sub_24B3EAC0C(&__p, __src, &__src[a4], a4);
  int v12 = 0;
  int v6 = (void *)sub_24B47B344();
  sub_24B47B610(v6, (uint64_t)&v7);
  if (__src) {
    free(__src);
  }
  if (__p)
  {
    int v10 = __p;
    operator delete(__p);
  }
}

void sub_24B4813E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B481400(uint64_t a1, int a2, int a3, int a4, char *a5)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  std::string __p = 0;
  int v12 = 0;
  uint64_t v13 = 0;
  __int16 v9 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109376;
    int v18 = a2;
    __int16 v19 = 1024;
    int v20 = a3;
    _os_log_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp SessionID,%u,result,%u", buf, 0xEu);
  }
  BOOL v14 = a3 != 0;
  int v15 = a2;
  int v16 = 0;
  sub_24B3EAC0C(&__p, a5, &a5[a4], a4);
  sub_24B47B344();
  uint64_t v10 = sub_24B4A113C();
  sub_24B4A20E4(v10, (uint64_t)&__p);
  if (a5) {
    free(a5);
  }
  if (__p)
  {
    int v12 = __p;
    operator delete(__p);
  }
}

void sub_24B481520(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B48153C(uint64_t a1, int a2, int a3, unsigned int *a4)
{
  int v6 = 0;
  uint64_t v18 = *MEMORY[0x263EF8340];
  if (a3)
  {
    unint64_t v8 = 0;
  }
  else
  {
    unint64_t v8 = 0;
    if (a4)
    {
      __int16 v9 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
      {
        v12[0] = 67109376;
        v12[1] = a2;
        LOWORD(__p) = 1024;
        *(_DWORD *)((char *)&__p + 2) = 0;
        _os_log_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp SessionID,%u,result,%u", (uint8_t *)v12, 0xEu);
      }
      size_t v10 = *a4;
      int v6 = malloc_type_calloc(1uLL, v10, 0x86CB5109uLL);
      bzero(v6, v10);
      sub_24B49EEAC((uint64_t)"send_lpm_supl_ad_rsp", 143, v6, *a4, *((void **)a4 + 1), *a4);
      unint64_t v8 = (int)*a4;
    }
  }
  std::string __p = 0;
  BOOL v14 = 0;
  uint64_t v15 = 0;
  v12[0] = a2;
  BOOL v16 = a3 != 0;
  int v17 = 0;
  sub_24B3EAC0C(&__p, (char *)v6, (char *)v6 + v8, v8);
  uint64_t v11 = sub_24B47B344();
  sub_24B47B474(v11, (uint64_t)v12);
  if (v6) {
    free(v6);
  }
  if (__p)
  {
    BOOL v14 = __p;
    operator delete(__p);
  }
}

void sub_24B4816B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
}

char *sub_24B4816DC(uint64_t a1, __int16 *a2, signed int a3)
{
  if (!a1)
  {
    uint64_t v7 = 1242;
LABEL_9:
    sub_24B4B00A4(v7, "lpp_transaction.c");
    return 0;
  }
  if (!a2)
  {
    uint64_t v7 = 1247;
    goto LABEL_9;
  }
  if (*(unsigned char *)a2 != 1)
  {
    if (!*(unsigned char *)a2 && a3 < 3)
    {
      int v5 = dword_24B4BFAEC[a3];
      int v6 = (void (*)(uint64_t, _DWORD *))qword_26FE85FD8[a3];
LABEL_16:
      __int16 v9 = (char *)malloc_type_calloc(1uLL, 0x368uLL, 0x86CB5109uLL);
      bzero(v9, 0x368uLL);
      __int16 v10 = *a2;
      *((_WORD *)v9 + 8) = *a2;
      if (v10 == 1)
      {
        char v11 = *(unsigned char *)(a1 + 24);
        v9[17] = v11;
        v9[18] = 1;
        *(unsigned char *)(a1 + 24) = v11 + 1;
      }
      *((_DWORD *)v9 + 5) = v5;
      *(void *)(v9 + 28) = *(void *)(a1 + 16);
      *((_DWORD *)v9 + 6) = 0;
      *((void *)v9 + 108) = v6;
      sub_24B48AD74(*(void **)(a1 + 40), v9);
      sub_24B4891F4((uint64_t)v9, 0, 0);
      return v9;
    }
    return 0;
  }
  int v6 = 0;
  int v5 = 1;
  switch(a3)
  {
    case 1:
      ++*(unsigned char *)(a1 + 24);
      int v6 = sub_24B4818AC;
      int v5 = 3;
      goto LABEL_16;
    case 5:
      goto LABEL_16;
    case 6:
      int v6 = sub_24B4818AC;
      int v5 = 2;
      goto LABEL_16;
    case 7:
      int v6 = 0;
      int v5 = 5;
      goto LABEL_16;
    default:
      return (char *)v6;
  }
  return (char *)v6;
}

void sub_24B4818AC(uint64_t a1, _DWORD *a2)
{
  if ((a2[5] & 0xFFFFFFFE) == 2)
  {
    uint64_t v2 = **(uint64_t ***)(a1 + 72);
    if (v2)
    {
      while (*((_DWORD *)v2 + 4) != a2[7] || *((_DWORD *)v2 + 5) != a2[8])
      {
        uint64_t v2 = (uint64_t *)*v2;
        if (!v2) {
          goto LABEL_6;
        }
      }
    }
    else
    {
LABEL_6:
      sub_24B4B00A4(4147, "lpp_transaction.c");
    }
  }
  else
  {
    sub_24B4B00A4(4154, "lpp_transaction.c");
  }
}

void sub_24B481924(uint64_t a1, _DWORD *a2, int a3)
{
  if (a2[5] != 4)
  {
    uint64_t v7 = 4012;
    goto LABEL_8;
  }
  uint64_t v4 = **(uint64_t ***)(a1 + 72);
  if (!v4)
  {
LABEL_6:
    uint64_t v7 = 4003;
LABEL_8:
    sub_24B4B00A4(v7, "lpp_transaction.c");
    return;
  }
  while (*((_DWORD *)v4 + 4) != a2[7] || *((_DWORD *)v4 + 5) != a2[8])
  {
    uint64_t v4 = (uint64_t *)*v4;
    if (!v4) {
      goto LABEL_6;
    }
  }
  uint64_t v8 = 0;
  char v9 = 0;
  char v16 = 0;
  __int16 v10 = a2 + 12;
  __int16 v15 = 0;
LABEL_12:
  uint64_t v11 = (uint64_t)v4 + 2 * v8 + 105;
  do
  {
    if (v10[v8] == 1)
    {
      v10[v8] = 4;
      *(_WORD *)(v11 - 1) = 0;
      *((unsigned char *)v4 + v8 + 110) = 0;
      char v9 = 1;
      *((unsigned char *)&v15 + v8) = 1;
      if (v8++ != 2) {
        goto LABEL_12;
      }
      goto LABEL_20;
    }
    ++v8;
    v11 += 2;
  }
  while (v8 != 3);
  if ((v9 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_20:
  uint64_t v13 = 0;
  uint64_t v14 = v4[2];
  do
  {
    if (*((unsigned char *)&v15 + v13) == 1) {
      sub_24B47FC14(a1, v14, v13, a3);
    }
    ++v13;
  }
  while (v13 != 3);
LABEL_24:
  a2[6] = 2;
  sub_24B485A98((uint64_t)a2);
}

void sub_24B481AC0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6 != 2)
  {
    if (v6 != 1)
    {
      *(_DWORD *)(a2 + 24) = 2;
      sub_24B4891F4(a2, v6, 2);
      return;
    }
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(a2 + 864);
    if (v7)
    {
      v7(a1, a2, a3, a4);
      *(void *)(a2 + 864) = 0;
    }
  }
  *(_DWORD *)(a2 + 24) = 2;
  sub_24B4891F4(a2, v6, 2);
  uint64_t v8 = **(void **)(a1 + 72);
  if (v8)
  {
    while (*(_DWORD *)(v8 + 16) != *(_DWORD *)(a2 + 28) || *(_DWORD *)(v8 + 20) != *(_DWORD *)(a2 + 32))
    {
      uint64_t v8 = *(void *)v8;
      if (!v8) {
        goto LABEL_9;
      }
    }
    sub_24B48A9E4(a1, v8, (unsigned __int8 *)(a2 + 16));
  }
  else
  {
LABEL_9:
    sub_24B4B00A4(1515, "lpp_transaction.c");
  }
}

uint64_t sub_24B481BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    uint64_t v11 = 1573;
    goto LABEL_8;
  }
  if (!a3 || (uint64_t v4 = *(unsigned __int8 **)(a3 + 16)) == 0)
  {
    uint64_t v11 = 1579;
LABEL_8:
    sub_24B4B00A4(v11, "lpp_transaction.c");
    return 0;
  }
  int v7 = 0;
  uint64_t v8 = (uint64_t *)(v4 + 24);
  unsigned int v9 = 8;
  int v10 = 0;
  switch(*((_DWORD *)v4 + 6))
  {
    case 0:
      int v7 = 0;
      unsigned int v9 = 0;
      goto LABEL_11;
    case 3:
      int v7 = 0;
      int v10 = 1;
      unsigned int v9 = 1;
      break;
    case 4:
      unsigned int v9 = 2;
      int v7 = 1;
LABEL_11:
      int v10 = 1;
      break;
    case 6:
      int v7 = 0;
      int v10 = 0;
      unsigned int v9 = 4;
      break;
    case 7:
      int v7 = 0;
      int v10 = 0;
      unsigned int v9 = 3;
      break;
    default:
      break;
  }
  uint64_t v13 = **(uint64_t ***)(a2 + 40);
  if (v13)
  {
    uint64_t v14 = **(char ***)(a2 + 40);
    while (v14[16] != *v4 || v14[17] != v4[1])
    {
      uint64_t v14 = *(char **)v14;
      if (!v14)
      {
        int v15 = *v4;
        while (1)
        {
          if (*((unsigned __int8 *)v13 + 16) == v15)
          {
            int v16 = v10 ? dword_24B4BFAEC[v9] : 6;
            if (*((_DWORD *)v13 + 5) == v16 && *((_DWORD *)v13 + 6) == 2) {
              break;
            }
          }
          uint64_t v13 = (uint64_t *)*v13;
          if (!v13) {
            goto LABEL_27;
          }
        }
        uint64_t v14 = (char *)v13;
        goto LABEL_55;
      }
    }
    if (*((_DWORD *)v14 + 6) != 2) {
      goto LABEL_57;
    }
LABEL_55:
    sub_24B481FEC(a1, (uint64_t)v14);
    if (!v7) {
      goto LABEL_56;
    }
    goto LABEL_28;
  }
LABEL_27:
  if (v7)
  {
LABEL_28:
    if (*(_DWORD *)(a2 + 16) != 1)
    {
      int v17 = *(uint64_t **)(a2 + 40);
      uint64_t v18 = *v17;
      if (*v17)
      {
        char v19 = 0;
        uint64_t v20 = *v17;
        do
        {
          if (*(_DWORD *)(v20 + 20) == 4 && *(_DWORD *)(v20 + 24) == 1) {
            ++v19;
          }
          uint64_t v20 = *(void *)v20;
        }
        while (v20);
        if (v19)
        {
          do
          {
            if (*(_DWORD *)(v18 + 20) == 4 && *(_DWORD *)(v18 + 24) == 1)
            {
              uint64_t v21 = *(void *)v18;
              int v22 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
              bzero(v22, 0xA28uLL);
              v22[1] = 257;
              *int v22 = *(_WORD *)(v18 + 16);
              *((unsigned char *)v22 + 2592) = 1;
              *((_DWORD *)v22 + 6) = 5;
              *((unsigned char *)v22 + 9) = 1;
              *((unsigned char *)v22 + 6) = 1;
              *((_DWORD *)v22 + 8) = 0;
              *((_DWORD *)v22 + 10) = 0;
              *((unsigned char *)v22 + 144) = 1;
              *(_WORD *)((char *)v22 + 97) = 256;
              v27[0] = 0u;
              v27[2] = 0u;
              v27[1] = (unint64_t)v22;
              char v23 = **(uint64_t ***)(a1 + 72);
              if (v23)
              {
                while (*((_DWORD *)v23 + 4) != *(_DWORD *)(v18 + 28) || *((_DWORD *)v23 + 5) != *(_DWORD *)(v18 + 32))
                {
                  char v23 = (uint64_t *)*v23;
                  if (!v23) {
                    goto LABEL_45;
                  }
                }
                ((void (*)(uint64_t))v23[7])(a1);
              }
LABEL_45:
              sub_24B481FEC(a1, v18);
              --v19;
            }
            else
            {
              uint64_t v21 = *(void *)v18;
            }
            if (v21) {
              BOOL v24 = v19 == 0;
            }
            else {
              BOOL v24 = 1;
            }
            uint64_t v18 = v21;
          }
          while (!v24);
        }
      }
    }
  }
LABEL_56:
  uint64_t v14 = sub_24B4816DC(a2, *(__int16 **)(a3 + 16), v9);
  if (v14)
  {
LABEL_57:
    int v25 = *((_DWORD *)v14 + 5);
    if (v25)
    {
      if (!*(unsigned char *)(a2 + 113) && *(_DWORD *)(a2 + 16) != 1)
      {
        LOWORD(v27[0]) = 1;
        int v26 = sub_24B4816DC(a2, (__int16 *)v27, 5);
        if (v26)
        {
          sub_24B48208C(a1, (uint64_t)v26, 5u, 0);
          *(unsigned char *)(a2 + 113) = 1;
        }
        int v25 = *((_DWORD *)v14 + 5);
      }
      if (v25 == 3)
      {
        v14[40] = *(unsigned char *)(*(void *)(a3 + 16) + 3);
      }
      else if (v25 == 2)
      {
        v14[41] = *(unsigned char *)(*(void *)(a3 + 16) + 3);
      }
    }
    else
    {
      *(unsigned char *)(a2 + 113) = 1;
    }
    sub_24B48208C(a1, (uint64_t)v14, v9, v8);
  }
  return 5;
}

void sub_24B481FEC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = **(uint64_t ***)(a1 + 72);
    if (v3)
    {
      while (*((_DWORD *)v3 + 4) != *(_DWORD *)(a2 + 28) || *((_DWORD *)v3 + 5) != *(_DWORD *)(a2 + 32))
      {
        uint64_t v3 = (uint64_t *)*v3;
        if (!v3) {
          goto LABEL_6;
        }
      }
      sub_24B481AC0();
      sub_24B48ADC0((void *)v3[5], (void *)a2);
    }
    else
    {
LABEL_6:
      sub_24B481AC0();
    }
    free((void *)a2);
  }
}

void sub_24B48208C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t *a4)
{
  uint64_t v8 = qword_26B17C480;
  if (!os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    if (a2) {
      goto LABEL_3;
    }
LABEL_37:
    uint64_t v11 = 1729;
    goto LABEL_38;
  }
  *(_WORD *)buf = 0;
  _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, "#posp,#lpp,entered lpp_transaction_act", buf, 2u);
  if (!a2) {
    goto LABEL_37;
  }
LABEL_3:
  uint64_t v26 = 0;
  *(_OWORD *)buf = 0u;
  memset(v25, 0, sizeof(v25));
  uint64_t v10 = *(unsigned int *)(a2 + 20);
  if (v10 == 6)
  {
    uint64_t v11 = 1740;
LABEL_38:
    sub_24B4B00A4(v11, "lpp_transaction.c");
    return;
  }
  uint64_t v12 = *(unsigned int *)(a2 + 24);
  int v13 = *((_DWORD *)*(&off_265293CE8 + v10) + 8 * v12 + a3);
  if (v13 == 2)
  {
    sub_24B4B00A4(1770, "lpp_transaction.c");
    goto LABEL_14;
  }
  if (v13 == 1)
  {
    int v14 = 1;
    sub_24B481AC0(a1, a2, 1, 1u);
    int v15 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
    bzero(v15, 0xA28uLL);
    *((void *)&v25[0] + 1) = v15;
    *((unsigned char *)v15 + 2) = 1;
    *int v15 = *(_WORD *)(a2 + 16);
    *((unsigned char *)v15 + 9) = 0;
    *((unsigned char *)v15 + 3) = 0;
    *((unsigned char *)v15 + 2592) = 1;
    *((_DWORD *)v15 + 4) = 0;
    *((_DWORD *)v15 + 6) = 7;
    *((_DWORD *)v15 + 8) = 0;
    v15[20] = 256;
    buf[0] = 1;
    goto LABEL_16;
  }
  if (v13) {
    goto LABEL_14;
  }
  if (!v12) {
    *(_DWORD *)(a2 + 24) = 1;
  }
  if ((a3 & 0xF8) != 0)
  {
LABEL_14:
    int v14 = 0;
    goto LABEL_16;
  }
  switch(a3)
  {
    case 0u:
      int v14 = 1;
      buf[0] = 1;
      sub_24B4824A0((unsigned char *)a1, a2, (uint64_t)a4, (uint64_t)&buf[8]);
      break;
    case 1u:
      buf[0] = 1;
      sub_24B483E04(a1, a2, (uint64_t)a4);
      goto LABEL_14;
    case 2u:
      buf[0] = 1;
      int v22 = sub_24B4849A4(a1, a2, (uint64_t)a4, (uint64_t)&buf[8]);
      goto LABEL_46;
    case 3u:
    case 4u:
      sub_24B481AC0(a1, a2, 1, 2u);
      goto LABEL_14;
    case 5u:
      int v14 = 1;
      buf[0] = 1;
      sub_24B482F80(a1, a2, v9, (uint64_t)&buf[8]);
      break;
    case 6u:
      int v14 = 1;
      buf[0] = 1;
      sub_24B483104(a1, a2, a4, (uint64_t)&buf[8]);
      break;
    case 7u:
      int v22 = sub_24B485BF0(a1, a2, (uint64_t)a4, buf);
LABEL_46:
      int v14 = v22;
      break;
    default:
      goto LABEL_14;
  }
LABEL_16:
  int v16 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)char v23 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v16, OS_LOG_TYPE_DEBUG, "#posp,#lpp,calling lpp_mon_transaction", v23, 2u);
  }
  sub_24B4891F4(a2, v12, *(_DWORD *)(a2 + 24));
  unint64_t v17 = buf[0];
  if (v14 == 1)
  {
    if (buf[0])
    {
      unint64_t v18 = 0;
      do
      {
        char v19 = **(uint64_t ***)(a1 + 72);
        if (v19)
        {
          while (*((_DWORD *)v19 + 4) != *(_DWORD *)(a2 + 28) || *((_DWORD *)v19 + 5) != *(_DWORD *)(a2 + 32))
          {
            char v19 = (uint64_t *)*v19;
            if (!v19) {
              goto LABEL_27;
            }
          }
          ((void (*)(uint64_t))v19[7])(a1);
          LODWORD(v17) = buf[0];
        }
LABEL_27:
        ++v18;
      }
      while (v18 < v17);
    }
  }
  else
  {
    if (buf[0])
    {
      unint64_t v20 = 0;
      uint64_t v21 = (void **)v25 + 1;
      do
      {
        if (*v21)
        {
          free(*v21);
          unsigned char *v21 = 0;
        }
        ++v20;
        v21 += 6;
      }
      while (v20 < v17);
    }
    if (*(_DWORD *)(a2 + 24) == 2) {
      sub_24B481FEC(a1, a2);
    }
  }
}

void sub_24B4824A0(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
  bzero(v8, 0xA28uLL);
  *(void *)(a4 + 16) = v8;
  *((unsigned char *)v8 + 2592) = 1;
  *((_DWORD *)v8 + 6) = 1;
  uint64_t v9 = *(void *)(a4 + 16);
  *(unsigned char *)(v9 + 2) = 1;
  *(_WORD *)uint64_t v9 = *(_WORD *)(a2 + 16);
  uint64_t v10 = *(void *)(a4 + 16);
  *(unsigned char *)(v10 + 3) = 1;
  *(unsigned char *)(v10 + 6) = 1;
  *(_WORD *)(v10 + 8) = 256;
  if (*(_DWORD *)(a3 + 8))
  {
    *(_DWORD *)(v10 + 32) = 1;
  }
  else
  {
    *(_DWORD *)(v10 + 32) = 0;
    if (*(_DWORD *)(a3 + 16))
    {
      *(_DWORD *)(v10 + 40) = 1;
    }
    else
    {
      *(_DWORD *)(v10 + 40) = 0;
      *(unsigned char *)(v10 + 80) = 0;
      if ((a1[8] || a1[10] || a1[46]) && *(unsigned char *)(a3 + 52) == 1)
      {
        *(unsigned char *)(v10 + 320) = 1;
        *(unsigned char *)(v10 + 248) = *(unsigned char *)(a3 + 50);
        *(unsigned char *)(v10 + 112) = *(unsigned char *)(a3 + 49);
        if ((((a1[11] | a1[9]) | a1[47]) & 6) != 0 && *(unsigned char *)(a3 + 51) == 1)
        {
          *(unsigned char *)(v10 + 260) = 1;
          *(unsigned char *)(v10 + 265) = 1;
        }
        else
        {
          *(unsigned char *)(v10 + 260) = 0;
          *(unsigned char *)(v10 + 265) = 0;
        }
      }
      else
      {
        *(unsigned char *)(v10 + 320) = 0;
      }
      if (a1[44] != 1 || (int v11 = *(unsigned __int8 *)(a3 + 68), v11 != 1)) {
        LOBYTE(v11) = 0;
      }
      *(unsigned char *)(v10 + 472) = v11;
      if (a1[61] != 1 || (int v12 = *(unsigned __int8 *)(a3 + 136), v12 != 1)) {
        LOBYTE(v12) = 0;
      }
      *(unsigned char *)(v10 + 832) = v12;
      *(unsigned char *)(v10 + 504) = 0;
      *(unsigned char *)(v10 + 1032) = 0;
      *(unsigned char *)(v10 + 1224) = 0;
      *(unsigned char *)(v10 + 1400) = 0;
      *(unsigned char *)(v10 + 1464) = 0;
      sub_24B482658((uint64_t)a1, v10 + 48);
    }
  }
  sub_24B4891F4(a2, *(_DWORD *)(a2 + 24), 2);
  *(_DWORD *)(a2 + 24) = 2;
}

void sub_24B482658(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 272) == 1)
  {
    BOOL v4 = *(unsigned __int8 *)(a1 + 8) == 1;
    if (*(unsigned char *)(a1 + 8) == 1) {
      int v5 = 2;
    }
    else {
      int v5 = 1;
    }
    if (*(unsigned char *)(a1 + 10) == 1) {
      BOOL v4 = v5;
    }
    if (*(unsigned char *)(a1 + 46) == 1) {
      uint64_t v6 = (v4 + 1);
    }
    else {
      uint64_t v6 = v4;
    }
    if (*(unsigned char *)(a2 + 64) == 1 && v6 != 0)
    {
      *(_DWORD *)(a2 + 56) = v6;
      *(_DWORD *)(a2 + 60) = 1;
      uint64_t v8 = (char *)malloc_type_calloc(1uLL, 0xA0uLL, 0x86CB5109uLL);
      *(_OWORD *)(v8 + 8) = 0u;
      *(_OWORD *)(v8 + 24) = 0u;
      *(_OWORD *)(v8 + 40) = 0u;
      *(_OWORD *)(v8 + 56) = 0u;
      *(_OWORD *)(v8 + 72) = 0u;
      *(_OWORD *)(v8 + 88) = 0u;
      *(_OWORD *)(v8 + 104) = 0u;
      *(_OWORD *)(v8 + 120) = 0u;
      *(_OWORD *)(v8 + 136) = 0u;
      *((void *)v8 + 19) = 0;
      *(void *)uint64_t v8 = 0;
      *(void *)(a2 + 40) = v8;
      *(void *)(a2 + 48) = v8;
      if (v6 >= 2u)
      {
        uint64_t v9 = v6 - 1;
        do
        {
          uint64_t v10 = malloc_type_calloc(1uLL, 0xA0uLL, 0x86CB5109uLL);
          *uint64_t v10 = 0u;
          v10[1] = 0u;
          _DWORD v10[2] = 0u;
          void v10[3] = 0u;
          v10[4] = 0u;
          v10[5] = 0u;
          v10[6] = 0u;
          v10[7] = 0u;
          v10[8] = 0u;
          v10[9] = 0u;
          **(void **)(a2 + 48) = v10;
          *(void *)(a2 + 48) = v10;
          --v9;
        }
        while (v9);
        uint64_t v8 = *(char **)(a2 + 40);
      }
      if (*(unsigned char *)(a1 + 8) == 1)
      {
        v8[8] = 0;
        v8[32] = 0;
        sub_24B48AE24((uint64_t)(v8 + 40), 3uLL, *(unsigned __int8 *)(a1 + 9));
        sub_24B48AE24((uint64_t)(v8 + 56), 8uLL, 0x80u);
        *(_WORD *)(v8 + 129) = 0;
        uint64_t v8 = *(char **)v8;
      }
      if (*(unsigned char *)(a1 + 10) == 1)
      {
        v8[8] = 4;
        v8[32] = 0;
        sub_24B48AE24((uint64_t)(v8 + 40), 3uLL, *(unsigned __int8 *)(a1 + 11));
        sub_24B48AE24((uint64_t)(v8 + 56), 8uLL, 0x80u);
        *(_WORD *)(v8 + 129) = 0;
        uint64_t v8 = *(char **)v8;
      }
      if (*(unsigned char *)(a1 + 46) == 1)
      {
        v8[8] = 5;
        v8[32] = 0;
        sub_24B48AE24((uint64_t)(v8 + 40), 3uLL, *(unsigned __int8 *)(a1 + 47));
        sub_24B48AE24((uint64_t)(v8 + 56), 8uLL, 0x80u);
        *(_WORD *)(v8 + 129) = 0;
      }
    }
    if (*(unsigned char *)(a2 + 200) == 1)
    {
      int v11 = *(unsigned char *)(a1 + 50) & 1;
      *(unsigned char *)(a2 + 112) = v11;
      unsigned int v12 = *(unsigned __int8 *)(a1 + 8) == 1;
      if (*(unsigned char *)(a1 + 10) == 1) {
        unsigned int v12 = 5;
      }
      if (*(unsigned char *)(a1 + 46) == 1) {
        size_t v13 = 6;
      }
      else {
        size_t v13 = v12;
      }
      if (v13 && (_BYTE)v6)
      {
        if (v11)
        {
          *(_DWORD *)(a2 + 72) = v13;
          *(_DWORD *)(a2 + 76) = 1;
          int v14 = malloc_type_calloc(1uLL, v13, 0x86CB5109uLL);
          bzero(v14, v13);
          *(void *)(a2 + 80) = v14;
          if (*(unsigned char *)(a1 + 8) == 1) {
            *int v14 = 1;
          }
          if (*(unsigned char *)(a1 + 10) == 1) {
            *(unsigned char *)(*(void *)(a2 + 80) + 4) = 1;
          }
          if (*(unsigned char *)(a1 + 46) == 1) {
            *(unsigned char *)(*(void *)(a2 + 80) + 5) = 1;
          }
          *(unsigned char *)(a2 + 104) = 0;
        }
        else
        {
          *(void *)(a2 + 104) = 0;
          *(_OWORD *)(a2 + 72) = 0u;
          *(_OWORD *)(a2 + 88) = 0u;
        }
        char v15 = *(unsigned char *)(a1 + 50);
        *(unsigned char *)(a2 + 120) = (v15 & 2) != 0;
        if ((v15 & 4) != 0)
        {
          *(unsigned char *)(a2 + 144) = 1;
          sub_24B48AE24(a2 + 128, 1uLL, 1u);
        }
        else
        {
          *(void *)(a2 + 128) = 0;
          *(void *)(a2 + 136) = 0;
          *(unsigned char *)(a2 + 144) = 0;
        }
        *(unsigned char *)(a2 + 152) = 0;
        *(_DWORD *)(a2 + 192) = v6;
        *(_DWORD *)(a2 + 196) = 1;
        int v16 = (char *)malloc_type_calloc(1uLL, 0x270uLL, 0x86CB5109uLL);
        bzero(v16 + 8, 0x268uLL);
        *(void *)int v16 = 0;
        *(void *)(a2 + 176) = v16;
        *(void *)(a2 + 184) = v16;
        if (v6 >= 2u)
        {
          uint64_t v17 = v6 - 1;
          do
          {
            unint64_t v18 = malloc_type_calloc(1uLL, 0x270uLL, 0x86CB5109uLL);
            bzero(v18, 0x270uLL);
            **(void **)(a2 + 184) = v18;
            *(void *)(a2 + 184) = v18;
            --v17;
          }
          while (v17);
          int v16 = *(char **)(a2 + 176);
        }
        if (*(unsigned char *)(a1 + 8) == 1)
        {
          v16[8] = 0;
          v16[10] = 0;
          v16[16] = 0;
          v16[72] = 0;
          if (*(unsigned char *)(a1 + 52))
          {
            v16[128] = 1;
            v16[96] = 1;
            char v19 = malloc_type_calloc(1uLL, 2uLL, 0x86CB5109uLL);
            *(_WORD *)char v19 = 0;
            *((void *)v16 + 11) = v19;
            *((void *)v16 + 10) = 0x100000002;
            v19[1] |= 1u;
            v16[120] = 1;
            unint64_t v20 = malloc_type_calloc(1uLL, 2uLL, 0x86CB5109uLL);
            *(_WORD *)unint64_t v20 = 0;
            *((void *)v16 + 14) = v20;
            *((void *)v16 + 13) = 0x100000002;
            v20[1] |= 1u;
          }
          else
          {
            v16[128] = 0;
            *((_OWORD *)v16 + 6) = 0u;
            *((_OWORD *)v16 + 7) = 0u;
            *((_OWORD *)v16 + 5) = 0u;
          }
          char v21 = 0;
          v16[144] = 0;
          __int16 v22 = *(_WORD *)(a1 + 52);
          if ((*(unsigned char *)(a1 + 9) & 1) != 0 && (v22 & 4) != 0)
          {
            char v21 = 1;
            v16[146] = 1;
            v16[148] = 1;
          }
          v16[149] = v21;
          if ((v22 & 8) != 0)
          {
            v16[176] = 1;
            v16[168] = 1;
            char v23 = malloc_type_calloc(1uLL, 2uLL, 0x86CB5109uLL);
            *(_WORD *)char v23 = 0;
            *((void *)v16 + 20) = v23;
            *((void *)v16 + 19) = 0x100000002;
            v23[1] |= 1u;
          }
          else
          {
            *((void *)v16 + 19) = 0;
            *((void *)v16 + 20) = 0;
            v16[176] = 0;
            *((void *)v16 + 21) = 0;
          }
          if ((*(_WORD *)(a1 + 52) & 0x10) != 0)
          {
            v16[208] = 1;
            v16[200] = 1;
            BOOL v24 = malloc_type_calloc(1uLL, 1uLL, 0x86CB5109uLL);
            *BOOL v24 = 0;
            *((void *)v16 + 24) = v24;
            *((void *)v16 + 23) = 0x100000001;
            *v24 |= 1u;
          }
          else
          {
            *((void *)v16 + 23) = 0;
            *((void *)v16 + 24) = 0;
            v16[208] = 0;
            *((void *)v16 + 25) = 0;
          }
          v16[136] = (*(unsigned char *)(a1 + 52) & 2) != 0;
          v16[216] = 0;
          int v16 = *(char **)v16;
        }
        if (*(unsigned char *)(a1 + 10) == 1)
        {
          v16[8] = 4;
          v16[10] = 0;
          __int16 v25 = *(_WORD *)(a1 + 54);
          v16[16] = (v25 & 0x20) != 0;
          v16[72] = 0;
          if (v25)
          {
            v16[128] = 1;
            v16[96] = 1;
            uint64_t v26 = malloc_type_calloc(1uLL, 4uLL, 0x86CB5109uLL);
            *(_DWORD *)uint64_t v26 = 0;
            *((void *)v16 + 11) = v26;
            *((void *)v16 + 10) = 0x100000004;
            v26[3] |= 1u;
            v16[120] = 1;
            long long v27 = malloc_type_calloc(1uLL, 4uLL, 0x86CB5109uLL);
            *(_DWORD *)long long v27 = 0;
            *((void *)v16 + 14) = v27;
            *((void *)v16 + 13) = 0x100000004;
            v27[3] |= 1u;
          }
          else
          {
            v16[128] = 0;
            *((_OWORD *)v16 + 6) = 0u;
            *((_OWORD *)v16 + 7) = 0u;
            *((_OWORD *)v16 + 5) = 0u;
          }
          __int16 v28 = *(_WORD *)(a1 + 54);
          v16[136] = (v28 & 2) != 0;
          v16[144] = (v28 & 0x40) != 0;
          int v29 = *(unsigned __int8 *)(a1 + 11) & ((v28 & 4) >> 2);
          v16[149] = *(unsigned char *)(a1 + 11) & ((v28 & 4) >> 2);
          v16[148] = v29;
          v16[146] = v29;
          if ((v28 & 8) != 0)
          {
            v16[176] = 1;
            v16[168] = 1;
            int v30 = malloc_type_calloc(1uLL, 5uLL, 0x86CB5109uLL);
            *(_DWORD *)int v30 = 0;
            v30[4] = 0;
            *((void *)v16 + 20) = v30;
            *((void *)v16 + 19) = 0x100000005;
            v30[4] |= 1u;
          }
          else
          {
            *((void *)v16 + 19) = 0;
            *((void *)v16 + 20) = 0;
            v16[176] = 0;
            *((void *)v16 + 21) = 0;
          }
          if ((*(_WORD *)(a1 + 54) & 0x10) != 0)
          {
            v16[208] = 1;
            v16[200] = 1;
            __int16 v31 = malloc_type_calloc(1uLL, 3uLL, 0x86CB5109uLL);
            *(_WORD *)__int16 v31 = 0;
            v31[2] = 0;
            *((void *)v16 + 24) = v31;
            *((void *)v16 + 23) = 0x100000003;
            v31[2] |= 1u;
          }
          else
          {
            *((void *)v16 + 23) = 0;
            *((void *)v16 + 24) = 0;
            v16[208] = 0;
            *((void *)v16 + 25) = 0;
          }
          v16[216] = (*(_WORD *)(a1 + 54) & 0x80) != 0;
          int v16 = *(char **)v16;
        }
        if (*(unsigned char *)(a1 + 46) == 1)
        {
          v16[8] = 5;
          v16[10] = 0;
          __int16 v32 = *(_WORD *)(a1 + 56);
          v16[16] = (v32 & 0x20) != 0;
          v16[72] = 0;
          if (v32)
          {
            v16[128] = 1;
            v16[96] = 1;
            int v33 = malloc_type_calloc(1uLL, 6uLL, 0x86CB5109uLL);
            *(_DWORD *)int v33 = 0;
            v33[2] = 0;
            *((void *)v16 + 11) = v33;
            *((void *)v16 + 10) = 0x100000006;
            *((unsigned char *)v33 + 5) |= 1u;
            v16[120] = 1;
            char v34 = malloc_type_calloc(1uLL, 6uLL, 0x86CB5109uLL);
            *(_DWORD *)char v34 = 0;
            v34[2] = 0;
            *((void *)v16 + 14) = v34;
            *((void *)v16 + 13) = 0x100000006;
            *((unsigned char *)v34 + 5) |= 1u;
          }
          else
          {
            v16[128] = 0;
            *((_OWORD *)v16 + 6) = 0u;
            *((_OWORD *)v16 + 7) = 0u;
            *((_OWORD *)v16 + 5) = 0u;
          }
          char v35 = 0;
          __int16 v36 = *(_WORD *)(a1 + 56);
          v16[136] = (v36 & 2) != 0;
          v16[144] = (v36 & 0x40) != 0;
          if (v36 & 4) != 0 && (*(unsigned char *)(a1 + 47))
          {
            char v35 = 1;
            v16[146] = 1;
            v16[148] = 1;
          }
          v16[149] = v35;
          if ((v36 & 8) != 0)
          {
            v16[176] = 1;
            v16[168] = 1;
            int v37 = (char *)malloc_type_calloc(1uLL, 7uLL, 0x86CB5109uLL);
            *(_DWORD *)int v37 = 0;
            *(_DWORD *)(v37 + 3) = 0;
            *((void *)v16 + 20) = v37;
            *((void *)v16 + 19) = 0x100000007;
            v37[6] |= 1u;
          }
          else
          {
            *((void *)v16 + 19) = 0;
            *((void *)v16 + 20) = 0;
            v16[176] = 0;
            *((void *)v16 + 21) = 0;
          }
          if ((*(_WORD *)(a1 + 56) & 0x10) != 0)
          {
            v16[208] = 1;
            v16[200] = 1;
            char v38 = malloc_type_calloc(1uLL, 5uLL, 0x86CB5109uLL);
            *(_DWORD *)char v38 = 0;
            v38[4] = 0;
            *((void *)v16 + 24) = v38;
            *((void *)v16 + 23) = 0x100000005;
            v38[4] |= 1u;
          }
          else
          {
            *((void *)v16 + 23) = 0;
            *((void *)v16 + 24) = 0;
            v16[208] = 0;
            *((void *)v16 + 25) = 0;
          }
          v16[216] = 0;
          v16[272] = (*(_WORD *)(a1 + 56) & 0x80) != 0;
        }
        if (*(unsigned char *)(a2 + 212) == 1)
        {
          char v39 = *(unsigned char *)(a1 + 59);
          *(unsigned char *)(a2 + 201) = v39 & 1;
          *(unsigned char *)(a2 + 202) = (v39 & 2) != 0;
          *(unsigned char *)(a2 + 203) = (v39 & 4) != 0;
          *(unsigned char *)(a2 + 204) = 0;
          *(unsigned char *)(a2 + 205) = (v39 & 0x10) != 0;
          *(_WORD *)(a2 + 206) = (v39 & 0x20) != 0;
        }
        if (*(unsigned char *)(a2 + 217) == 1)
        {
          char v40 = *(unsigned char *)(a1 + 58);
          *(unsigned char *)(a2 + 213) = v40 & 1;
          *(unsigned char *)(a2 + 214) = (v40 & 2) != 0;
          *(unsigned char *)(a2 + 215) = (v40 & 4) != 0;
          *(unsigned char *)(a2 + 216) = (v40 & 8) != 0;
        }
      }
    }
  }
  if (*(unsigned char *)(a2 + 424) == 1)
  {
    sub_24B48AE24(a2 + 400, 3uLL, 7u);
    *(_WORD *)(a2 + 416) = 256;
  }
  if (*(unsigned char *)(a2 + 784) == 1)
  {
    if (*(unsigned char *)(a1 + 64)) {
      int v41 = 3;
    }
    else {
      int v41 = 0;
    }
    if (*(unsigned char *)(a1 + 65)) {
      unsigned int v42 = v41 | 0xC;
    }
    else {
      unsigned int v42 = v41;
    }
    if (*(unsigned char *)(a1 + 65)) {
      size_t v43 = 4;
    }
    else {
      size_t v43 = 2 * (*(unsigned char *)(a1 + 64) != 0);
    }
    sub_24B48AE24(a2 + 760, v43, v42);
    *(unsigned char *)(a2 + 777) = 0;
    *(unsigned char *)(a2 + 779) = 0;
  }
}

uint64_t sub_24B482F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
  bzero(v7, 0xA28uLL);
  *(void *)(a4 + 16) = v7;
  *((unsigned char *)v7 + 2592) = 1;
  *((_DWORD *)v7 + 6) = 1;
  uint64_t v8 = *(void *)(a4 + 16);
  *(unsigned char *)(v8 + 2) = 1;
  *(_WORD *)uint64_t v8 = *(_WORD *)(a2 + 16);
  uint64_t v9 = *(void *)(a4 + 16);
  *(unsigned char *)(v9 + 3) = 1;
  *(unsigned char *)(v9 + 6) = 1;
  *(_WORD *)(v9 + 8) = 256;
  *(_DWORD *)(v9 + 16) = 0;
  *(_DWORD *)(v9 + 24) = 1;
  *(_DWORD *)(v9 + 32) = 0;
  *(_DWORD *)(v9 + 40) = 0;
  *(unsigned char *)(v9 + 80) = 0;
  if (*(unsigned char *)(a1 + 8) || *(unsigned char *)(a1 + 10) || *(unsigned char *)(a1 + 46))
  {
    *(unsigned char *)(v9 + 320) = 1;
    *(unsigned char *)(v9 + 248) = 1;
    *(unsigned char *)(v9 + 112) = 1;
    if ((((*(unsigned char *)(a1 + 11) | *(unsigned char *)(a1 + 9)) | *(unsigned char *)(a1 + 47)) & 6) != 0)
    {
      *(unsigned char *)(v9 + 260) = 1;
      *(unsigned char *)(v9 + 265) = 1;
    }
    else
    {
      *(unsigned char *)(v9 + 260) = 0;
      *(unsigned char *)(v9 + 265) = 0;
    }
  }
  else
  {
    *(unsigned char *)(v9 + 320) = 0;
  }
  BOOL v11 = 0;
  if (*(unsigned char *)(a1 + 44) == 1)
  {
    uint64_t v10 = **(void **)(a1 + 72);
    if (v10)
    {
      if (*(_DWORD *)(v10 + 16) != 1) {
        BOOL v11 = 1;
      }
    }
  }
  *(unsigned char *)(v9 + 472) = v11;
  *(unsigned char *)(v9 + 504) = 0;
  *(unsigned char *)(v9 + 832) = *(unsigned char *)(a1 + 61) == 1;
  *(unsigned char *)(v9 + 1032) = 0;
  *(unsigned char *)(v9 + 1224) = 0;
  *(unsigned char *)(v9 + 1400) = 0;
  *(unsigned char *)(v9 + 1464) = 0;
  sub_24B482658(a1, v9 + 48);
  sub_24B4891F4(a2, *(_DWORD *)(a2 + 24), 2);
  *(_DWORD *)(a2 + 24) = 2;
  return 1;
}

uint64_t sub_24B483104(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = (char *)malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
  bzero(v8, 0xA28uLL);
  *(void *)(a4 + 16) = v8;
  if (!*(unsigned char *)(a2 + 18)) {
    goto LABEL_8;
  }
  uint64_t v9 = **(uint64_t ***)(a1 + 72);
  if (v9)
  {
    while (*((_DWORD *)v9 + 4) != *(_DWORD *)(a2 + 28) || *((_DWORD *)v9 + 5) != *(_DWORD *)(a2 + 32))
    {
      uint64_t v9 = (uint64_t *)*v9;
      if (!v9)
      {
        sub_24B4B00A4(2233, "lpp_transaction.c");
        if (v8) {
          goto LABEL_55;
        }
        return 1;
      }
    }
LABEL_8:
    v8[2592] = 1;
    *((_DWORD *)v8 + 4) = 0;
    *((_DWORD *)v8 + 6) = 2;
    uint64_t v10 = *(void *)(a4 + 16);
    *(unsigned char *)(v10 + 2) = 1;
    *(_WORD *)uint64_t v10 = *(_WORD *)(a2 + 16);
    uint64_t v11 = *(void *)(a4 + 16);
    if (!*(unsigned char *)(a2 + 18)) {
      *(unsigned char *)(v11 + 1) = 0;
    }
    *(unsigned char *)(v11 + 3) = 0;
    *((_DWORD *)v8 + 4) = 0;
    *((_DWORD *)v8 + 6) = 2;
    *((_DWORD *)v8 + 8) = 0;
    *((_DWORD *)v8 + 10) = 0;
    v8[232] = 1;
    if (*(_DWORD *)(a1 + 108) == 4)
    {
      v8[224] = 1;
      *((void *)v8 + 22) = 0x100000003;
      unsigned int v12 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *unsigned int v12 = 0;
      v12[1] = 0;
      *((void *)v8 + 20) = v12;
      *((void *)v8 + 21) = v12;
      uint64_t v13 = 2;
      do
      {
        int v14 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
        *int v14 = 0;
        v14[1] = 0;
        **((void **)v8 + 21) = v14;
        *((void *)v8 + 21) = v14;
        --v13;
      }
      while (v13);
      BOOL v15 = *(_DWORD *)(a1 + 84) == 1;
      if (*(_DWORD *)(a1 + 84) == 1) {
        int v16 = 3;
      }
      else {
        int v16 = 2;
      }
      *((_DWORD *)v8 + 50) = v16;
      *((_DWORD *)v8 + 51) = 1;
      if (v15) {
        uint64_t v17 = 3;
      }
      else {
        uint64_t v17 = 2;
      }
      unint64_t v18 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      void *v18 = 0;
      v18[1] = 0;
      *((void *)v8 + 23) = v18;
      *((void *)v8 + 24) = v18;
      uint64_t v19 = v17 - 1;
      do
      {
        unint64_t v20 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
        void *v20 = 0;
        v20[1] = 0;
        **((void **)v8 + 24) = v20;
        *((void *)v8 + 24) = v20;
        --v19;
      }
      while (v19);
      sub_24B483D74(*(void *)(a1 + 80), *((void *)v8 + 20), *((unsigned char **)v8 + 23));
      sub_24B48B030(*(unsigned int *)(a1 + 88), 0x24uLL, (uint64_t)(v8 + 208));
    }
    else
    {
      v8[112] = 1;
      sub_24B48AF8C(*(_DWORD *)(a1 + 88), 0x1CuLL, (uint64_t)(v8 + 96));
      *((void *)v8 + 8) = 0x100000003;
      char v21 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      void *v21 = 0;
      v21[1] = 0;
      *((void *)v8 + 6) = v21;
      *((void *)v8 + 7) = v21;
      uint64_t v22 = 2;
      do
      {
        char v23 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
        void *v23 = 0;
        v23[1] = 0;
        **((void **)v8 + 7) = v23;
        *((void *)v8 + 7) = v23;
        --v22;
      }
      while (v22);
      BOOL v24 = *(_DWORD *)(a1 + 84) == 1;
      if (*(_DWORD *)(a1 + 84) == 1) {
        int v25 = 3;
      }
      else {
        int v25 = 2;
      }
      *((_DWORD *)v8 + 22) = v25;
      *((_DWORD *)v8 + 23) = 1;
      if (v24) {
        uint64_t v26 = 3;
      }
      else {
        uint64_t v26 = 2;
      }
      long long v27 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      void *v27 = 0;
      v27[1] = 0;
      *((void *)v8 + 9) = v27;
      *((void *)v8 + 10) = v27;
      uint64_t v28 = v26 - 1;
      do
      {
        int v29 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
        void *v29 = 0;
        v29[1] = 0;
        **((void **)v8 + 10) = v29;
        *((void *)v8 + 10) = v29;
        --v28;
      }
      while (v28);
      unint64_t v30 = *(void *)(a1 + 80);
      uint64_t v31 = *((void *)v8 + 6);
      __int16 v32 = (unsigned char *)*((void *)v8 + 9);
      unint64_t v33 = v30 >> 16;
      *(unsigned char *)(v31 + 8) = (unsigned __int16)v30 / 0x64u;
      char v34 = *(unsigned char **)v31;
      v34[8] = (unsigned __int16)v30 % 0x64u / 0xA;
      *(unsigned char *)(*(void *)v34 + 8) = (unsigned __int16)v30 % 0x64u % 0xA;
      if (HIDWORD(v30) == 1)
      {
        v32[8] = WORD1(v30) / 0x64u;
        LOWORD(v33) = WORD1(v30) % 0x64u;
        __int16 v32 = *(unsigned char **)v32;
      }
      v32[8] = (unsigned __int16)v33 / 0xAu;
      *(unsigned char *)(*(void *)v32 + 8) = (unsigned __int16)v33 % 0xAu;
    }
    if (*a3)
    {
      char v35 = *(unsigned char *)(*a3 + 96);
      int v36 = *(unsigned __int8 *)(a1 + 10);
      BOOL v37 = (v35 & 1) == 0 || *(unsigned char *)(a1 + 8) == 0;
      char v38 = v37;
      int v39 = *(unsigned __int8 *)(a2 + 40);
      if (!v37)
      {
        v39 |= 1u;
        *(unsigned char *)(a2 + 40) = v39;
      }
      BOOL v40 = (v35 & 2) == 0 || v36 == 0;
      char v41 = v40;
      if (!v40)
      {
        *(unsigned char *)(a2 + 40) = v39 | 2;
LABEL_56:
        v8[504] = 1;
        if ((v38 & 1) != 0 || (v43 = *a3, __int16 v44 = *(_WORD *)(*a3 + 12), (v44 & 0x64) == 0))
        {
          if ((v41 & 1) != 0 || (uint64_t v43 = *a3, (*(unsigned char *)(*a3 + 64) & 7) == 0))
          {
            uint64_t v53 = v8 + 432;
LABEL_81:
            *uint64_t v53 = 0;
            if ((v38 & 1) == 0)
            {
              uint64_t v60 = *a3;
              int v61 = *(unsigned __int16 *)(*a3 + 12);
              if ((v61 & 0x19A) != 0)
              {
                unsigned __int8 v62 = *(unsigned char *)(v60 + 84);
                goto LABEL_87;
              }
            }
            if ((v41 & 1) == 0)
            {
              uint64_t v60 = *a3;
              unsigned __int8 v62 = *(unsigned char *)(*a3 + 84);
              if (v62)
              {
                int v61 = *(unsigned __int16 *)(v60 + 12);
LABEL_87:
                v8[464] = 1;
                if (v61) {
                  unsigned __int8 v63 = v62 + 1;
                }
                else {
                  unsigned __int8 v63 = v62;
                }
                if (v63)
                {
                  *((_DWORD *)v8 + 115) = 1;
                  *((_DWORD *)v8 + 114) = v63;
                  double v64 = malloc_type_calloc(1uLL, 0x428uLL, 0x86CB5109uLL);
                  bzero(v64 + 1, 0x420uLL);
                  void *v64 = 0;
                  *((void *)v8 + 55) = v64;
                  *((void *)v8 + 56) = v64;
                  if (v63 != 1)
                  {
                    uint64_t v65 = v63 - 1;
                    do
                    {
                      int8x8_t v66 = malloc_type_calloc(1uLL, 0x428uLL, 0x86CB5109uLL);
                      bzero(v66, 0x428uLL);
                      **((void **)v8 + 56) = v66;
                      *((void *)v8 + 56) = v66;
                      --v65;
                    }
                    while (v65);
                  }
                }
                int8x8_t v67 = (uint64_t *)*((void *)v8 + 55);
                if (!v61) {
                  goto LABEL_120;
                }
                *((unsigned char *)v67 + 8) = 0;
                *((unsigned char *)v67 + 10) = 0;
                *((unsigned char *)v67 + 40) = 0;
                *((unsigned char *)v67 + 96) = 0;
                if ((*(unsigned char *)(v60 + 12) & 8) != 0)
                {
                  *((unsigned char *)v67 + 192) = 1;
                  *((_DWORD *)v67 + 26) = 0;
                  *((_WORD *)v67 + 56) = *(_WORD *)(v60 + 14);
                  *((unsigned char *)v67 + 114) = *(unsigned char *)(v60 + 16);
                  *((unsigned char *)v67 + 115) = *(unsigned char *)(v60 + 18);
                  int v68 = v67 + 18;
                  if (*(unsigned char *)(v60 + 17))
                  {
                    unsigned char *v68 = 1;
                    if (*(unsigned char *)(v60 + 17))
                    {
                      *((_DWORD *)v67 + 35) = 1;
                      *((_DWORD *)v67 + 34) = *(unsigned __int8 *)(v60 + 17);
                      long long v70 = (char *)malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
                      *(_OWORD *)(v70 + 8) = 0u;
                      *(_OWORD *)(v70 + 24) = 0u;
                      v67[15] = (uint64_t)v70;
                      unsigned int v71 = v67 + 15;
                      *(void *)long long v70 = 0;
                      v67[16] = v67[15];
                      LODWORD(v72) = *(unsigned __int8 *)(v60 + 17);
                      if (v72 >= 2)
                      {
                        unint64_t v73 = 1;
                        do
                        {
                          long long v74 = malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
                          _OWORD *v74 = 0u;
                          v74[1] = 0u;
                          *((void *)v74 + 4) = 0;
                          *(void *)v67[16] = v74;
                          v67[16] = *(void *)v67[16];
                          ++v73;
                          unint64_t v72 = *(unsigned __int8 *)(v60 + 17);
                        }
                        while (v73 < v72);
                      }
                      if (v72)
                      {
                        unint64_t v75 = 0;
                        do
                        {
                          unsigned int v71 = (uint64_t *)*v71;
                          *((unsigned char *)v71 + 8) = *(unsigned char *)(v60 + v75 + 27);
                          sub_24B48B0D0((uint64_t)(v71 + 2), 0xBuLL, *(unsigned __int8 *)(v60 + v75 + 43));
                          *((_DWORD *)v71 + 8) = 16908546;
                          ++v75;
                        }
                        while (v75 < *(unsigned __int8 *)(v60 + 17));
                      }
                    }
                    goto LABEL_111;
                  }
                }
                else
                {
                  int v68 = v67 + 24;
                }
                unsigned char *v68 = 0;
LABEL_111:
                char v76 = 0;
                __int16 v77 = *(_WORD *)(v60 + 12);
                *((unsigned char *)v67 + 200) = HIBYTE(v77) & 1;
                *((unsigned char *)v67 + 288) = 0;
                if ((v77 & 0x80) != 0)
                {
                  *((unsigned char *)v67 + 289) = 0;
                  char v76 = 1;
                }
                *((unsigned char *)v67 + 292) = v76;
                if (v77)
                {
                  *(_WORD *)((char *)v67 + 293) = 258;
                  char v78 = 1;
                }
                else
                {
                  char v78 = 0;
                }
                *((unsigned char *)v67 + 295) = v78;
                if ((v77 & 2) != 0)
                {
                  *((_WORD *)v67 + 148) = 257;
                  char v79 = 1;
                }
                else
                {
                  char v79 = 0;
                }
                *((unsigned char *)v67 + 298) = v79;
                *((unsigned char *)v67 + 304) = 0;
                int8x8_t v67 = (uint64_t *)*v67;
LABEL_120:
                if (*(unsigned char *)(v60 + 84))
                {
                  unint64_t v80 = 0;
                  uint64_t v81 = 37;
                  uint64_t v125 = v60;
                  do
                  {
                    uint64_t v82 = *(void *)(v60 + 88);
                    uint64_t v83 = (unsigned int *)(v82 + 136 * v80);
                    *((unsigned char *)v67 + 8) = byte_24B4BF880[*v83];
                    *((unsigned char *)v67 + 10) = 0;
                    int v84 = *((unsigned __int8 *)v83 + 8);
                    if (v84)
                    {
                      *((unsigned char *)v67 + 40) = 1;
                      *((_DWORD *)v67 + 8) = v84;
                      *((_DWORD *)v67 + 9) = 1;
                      int v85 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
                      void *v85 = 0;
                      v85[1] = 0;
                      v67[2] = (uint64_t)v85;
                      v67[3] = (uint64_t)v85;
                      LODWORD(v86) = *((_DWORD *)v67 + 8);
                      if (v86 >= 2)
                      {
                        unint64_t v87 = 1;
                        do
                        {
                          int v88 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
                          void *v88 = 0;
                          v88[1] = 0;
                          *(void *)v67[3] = v88;
                          v67[3] = (uint64_t)v88;
                          ++v87;
                          unint64_t v86 = *((int *)v67 + 8);
                        }
                        while (v87 < v86);
                      }
                      if ((int)v86 >= 1)
                      {
                        int v89 = 0;
                        uint64_t v90 = (uint64_t *)v67[2];
                        uint64_t v91 = *(void *)(v82 + 136 * v80 + 16);
                        do
                        {
                          *((_WORD *)v90 + 4) = *(_WORD *)(v91 + 2 * v89);
                          uint64_t v90 = (uint64_t *)*v90;
                          ++v89;
                        }
                        while ((int)v86 > v89);
                      }
                      uint64_t v82 = *(void *)(v60 + 88);
                    }
                    if (*(unsigned char *)(v82 + 136 * v80 + 105) == 1)
                    {
                      *((unsigned char *)v67 + 192) = 1;
                      *((_DWORD *)v67 + 26) = 0;
                      uint64_t v92 = v82 + 136 * v80;
                      *((_WORD *)v67 + 56) = *(_WORD *)(v92 + 112);
                      *((unsigned char *)v67 + 114) = *(unsigned char *)(v92 + 114);
                      *((unsigned char *)v67 + 115) = *(unsigned char *)(v92 + 115);
                      int v94 = *(unsigned __int8 *)(v92 + 116);
                      int v93 = (unsigned char *)(v92 + 116);
                      if (v94)
                      {
                        *((unsigned char *)v67 + 144) = 1;
                        LODWORD(v95) = *v93;
                        if (*v93)
                        {
                          *((_DWORD *)v67 + 35) = 1;
                          *((_DWORD *)v67 + 34) = *v93;
                          uint64_t v96 = (char *)malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
                          *(_OWORD *)(v96 + 8) = 0u;
                          *(_OWORD *)(v96 + 24) = 0u;
                          v67[15] = (uint64_t)v96;
                          *(void *)uint64_t v96 = 0;
                          v67[16] = v67[15];
                          LODWORD(v95) = *v93;
                          if (v95 >= 2)
                          {
                            unint64_t v97 = 1;
                            do
                            {
                              int v98 = malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
                              _OWORD *v98 = 0u;
                              v98[1] = 0u;
                              *((void *)v98 + 4) = 0;
                              *(void *)v67[16] = v98;
                              v67[16] = *(void *)v67[16];
                              ++v97;
                              unint64_t v95 = *v93;
                            }
                            while (v97 < v95);
                          }
                          if (v95)
                          {
                            uint64_t v99 = 0;
                            unint64_t v100 = 0;
                            int v101 = (unsigned char *)v67[15];
                            do
                            {
                              uint64_t v102 = *(void *)(v82 + 136 * v80 + 120) + v99;
                              v101[8] = *(unsigned char *)v102;
                              sub_24B48B0D0((uint64_t)(v101 + 16), 0xBuLL, *(unsigned __int16 *)(v102 + 2));
                              v101[33] = 1;
                              char v103 = *((unsigned char *)v67 + 8);
                              if ((v103 & 0xFE) == 4)
                              {
                                v101[32] = v103;
                                v101[34] = v103;
                              }
                              v101[35] = 1;
                              ++v100;
                              unint64_t v95 = *v93;
                              v99 += 4;
                            }
                            while (v100 < v95);
                            uint64_t v60 = v125;
                          }
                          else
                          {
                            uint64_t v60 = v125;
                          }
                        }
                        *((_DWORD *)v67 + 34) = v95;
                        *((_DWORD *)v67 + 35) = 1;
                      }
                      else
                      {
                        *((unsigned char *)v67 + 144) = 0;
                      }
                      uint64_t v82 = *(void *)(v60 + 88);
                    }
                    __int16 v104 = *(_WORD *)(v82 + 136 * v80 + 4);
                    if (v104) {
                      *((unsigned char *)v67 + 200) = 1;
                    }
                    if (*(unsigned char *)(v82 + 136 * v80 + 24) == 1)
                    {
                      *((unsigned char *)v67 + 288) = 1;
                      uint64_t v105 = v82 + 136 * v80;
                      *((_WORD *)v67 + 104) = *(_DWORD *)(v105 + 28);
                      int v106 = *(unsigned __int16 *)(v105 + 32);
                      if (v106)
                      {
                        *((unsigned char *)v67 + 212) = 1;
                        *((_WORD *)v67 + 105) = v106;
                      }
                      uint64_t v107 = (unsigned __int8 *)(v82 + 136 * v80);
                      *((unsigned char *)v67 + 213) = v107[35];
                      sub_24B48AE24((uint64_t)(v67 + 27), 8uLL, v107[34]);
                      int v110 = v107[36];
                      int v109 = v107 + 36;
                      int v108 = v110;
                      if (v110)
                      {
                        *((unsigned char *)v67 + 280) = 1;
                        *((_DWORD *)v67 + 69) = 1;
                        *((_DWORD *)v67 + 68) = v108;
                        int v111 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
                        void *v111 = 0;
                        v111[1] = 0;
                        v67[32] = (uint64_t)v111;
                        v67[33] = (uint64_t)v111;
                        LODWORD(v112) = *v109;
                        if (v112 >= 2)
                        {
                          unint64_t v113 = 1;
                          do
                          {
                            uint64_t v114 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
                            *uint64_t v114 = 0;
                            v114[1] = 0;
                            *(void *)v67[33] = v114;
                            v67[33] = (uint64_t)v114;
                            ++v113;
                            unint64_t v112 = *v109;
                          }
                          while (v113 < v112);
                        }
                        if (v112)
                        {
                          int v115 = (uint64_t *)v67[32];
                          uint64_t v116 = v112;
                          int v117 = (char *)(v82 + v81);
                          do
                          {
                            char v118 = *v117++;
                            *((unsigned char *)v115 + 8) = v118;
                            int v115 = (uint64_t *)*v115;
                            --v116;
                          }
                          while (v116);
                        }
                        *((_DWORD *)v67 + 68) = v112;
                        *((_DWORD *)v67 + 69) = 1;
                      }
                      else
                      {
                        *((unsigned char *)v67 + 280) = 0;
                      }
                      uint64_t v82 = *(void *)(v60 + 88);
                      __int16 v104 = *(_WORD *)(v82 + 136 * v80 + 4);
                    }
                    if ((v104 & 8) != 0)
                    {
                      *((unsigned char *)v67 + 292) = 1;
                      *((unsigned char *)v67 + 289) = 0;
                    }
                    if (*(unsigned char *)(v82 + 136 * v80 + 104) == 1)
                    {
                      *((_DWORD *)v67 + 75) = 1;
                      *((unsigned char *)v67 + 304) = 1;
                      uint64_t v82 = *(void *)(v60 + 88);
                    }
                    uint64_t v119 = v82 + 136 * v80;
                    __int16 v120 = *(_WORD *)(v119 + 4);
                    if (*(unsigned char *)(v119 + 128) == 1)
                    {
                      char v121 = *(_WORD *)(v119 + 4);
                      if ((v120 & 0x12) != 0)
                      {
                        int v122 = *(unsigned __int8 *)(v82 + 136 * v80 + 132);
                        if ((v122 | 2) == 7)
                        {
                          *((unsigned char *)v67 + 293) = v122;
                          *((_WORD *)v67 + 147) = 257;
                        }
                        int v123 = *(unsigned __int8 *)(v82 + 136 * v80 + 131);
                        if (v123 == 5 || v123 == 3)
                        {
                          *((unsigned char *)v67 + 296) = v123;
                          *(_WORD *)((char *)v67 + 297) = 257;
                        }
                      }
                    }
                    else
                    {
                      char v121 = *(_WORD *)(v119 + 4);
                    }
                    *((unsigned char *)v67 + 96) = 0;
                    *((unsigned char *)v67 + 360) = (v121 & 0x20) != 0;
                    int8x8_t v67 = (uint64_t *)*v67;
                    ++v80;
                    v81 += 136;
                  }
                  while (v80 < *(unsigned __int8 *)(v60 + 84));
                }
                goto LABEL_99;
              }
            }
            unsigned int v42 = v8 + 464;
LABEL_98:
            *unsigned int v42 = 0;
LABEL_99:
            v8[544] = 0;
            v8[576] = 0;
            v8[584] = 0;
            v8[672] = 0;
            return 1;
          }
          LOBYTE(v44) = *(unsigned char *)(v43 + 12);
        }
        v8[432] = 1;
        v8[272] = 0;
        unsigned __int8 v45 = ((v44 & 0x40) != 0) + *(unsigned char *)(v43 + 65);
        if (v45)
        {
          *((_DWORD *)v8 + 65) = 1;
          *((_DWORD *)v8 + 64) = v45;
          int v46 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
          void *v46 = 0;
          v46[1] = 0;
          *((void *)v8 + 30) = v46;
          *((void *)v8 + 31) = v46;
          if (v45 != 1)
          {
            uint64_t v47 = 1 - v45;
            do
            {
              unint64_t v48 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
              *unint64_t v48 = 0;
              v48[1] = 0;
              **((void **)v8 + 31) = v48;
              *((void *)v8 + 31) = v48;
            }
            while (!__CFADD__(v47++, 1));
          }
        }
        unsigned int v50 = (uint64_t *)*((void *)v8 + 30);
        int v51 = *(unsigned __int16 *)(v43 + 12);
        if ((v51 & 0x40) != 0)
        {
          v8[272] = 1;
          *((unsigned char *)v50 + 8) = 0;
          *((_WORD *)v8 + 132) = 257;
          v8[267] = 0;
          int v52 = *(unsigned __int8 *)(v43 + 64);
          if (v52)
          {
            unsigned int v50 = (uint64_t *)*v50;
            goto LABEL_72;
          }
        }
        else
        {
          int v52 = *(unsigned __int8 *)(v43 + 64);
          if (v52)
          {
            v8[272] = 1;
            v8[265] = 0;
LABEL_72:
            char v54 = *(unsigned char *)(v43 + 80);
            v8[267] = v54;
            v8[266] = v54;
            BOOL v55 = *((_DWORD *)v8 + 64) != 0;
            uint64_t v56 = *(unsigned __int8 *)(v43 + 65);
            if (*(unsigned char *)(v43 + 65))
            {
              double v57 = *(unsigned int **)(v43 + 72);
              do
              {
                unsigned int v58 = *v57++;
                *((unsigned char *)v50 + 8) = byte_24B4BF880[v58];
                unsigned int v50 = (uint64_t *)*v50;
                --v56;
              }
              while (v56);
            }
            *((_DWORD *)v8 + 64) = v55;
          }
        }
        v8[280] = (v51 & 0x20 | v52 & 2) != 0;
        if (((v51 | v52) & 4) != 0)
        {
          v8[328] = 1;
          v8[312] = 0;
          int v59 = *(unsigned __int8 *)(v43 + 81);
          v8[304] = v59;
          if (v59 == 1) {
            sub_24B48AE24((uint64_t)(v8 + 288), 2uLL, *(unsigned __int8 *)(v43 + 82));
          }
        }
        else
        {
          v8[328] = 0;
        }
        uint64_t v53 = v8 + 336;
        goto LABEL_81;
      }
      if (v39) {
        goto LABEL_56;
      }
    }
    unsigned int v42 = v8 + 504;
    goto LABEL_98;
  }
  sub_24B4B00A4(2233, "lpp_transaction.c");
LABEL_55:
  free(v8);
  return 1;
}

unint64_t sub_24B483D74(unint64_t result, uint64_t a2, unsigned char *a3)
{
  unint64_t v3 = result >> 16;
  *(unsigned char *)(a2 + 8) = (unsigned __int16)result / 0x64u;
  BOOL v4 = *(unsigned char **)a2;
  v4[8] = (unsigned __int16)result % 0x64u / 0xA;
  *(unsigned char *)(*(void *)v4 + 8) = (unsigned __int16)result % 0x64u % 0xA;
  if (HIDWORD(result) == 1)
  {
    a3[8] = WORD1(result) / 0x64u;
    LOWORD(v3) = WORD1(result) % 0x64u;
    a3 = *(unsigned char **)a3;
  }
  a3[8] = (unsigned __int16)v3 / 0xAu;
  *(unsigned char *)(*(void *)a3 + 8) = (unsigned __int16)v3 % 0xAu;
  return result;
}

void sub_24B483E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 116) = -1;
  int v6 = *(_DWORD *)(a2 + 20);
  if (v6 == 3)
  {
    int v7 = *(unsigned __int8 *)(a2 + 40);
  }
  else
  {
    int v7 = 0;
    if (v6 == 2) {
      int v7 = *(unsigned __int8 *)(a2 + 41);
    }
  }
  if (*(_DWORD *)a3 == 3 && !*(_DWORD *)(a3 + 8) && !*(_DWORD *)(a3 + 16))
  {
    if ((*(unsigned char *)(a1 + 8) || *(unsigned char *)(a1 + 10) || *(unsigned char *)(a1 + 46)) && *(unsigned char *)(a3 + 832) == 1)
    {
      if (*(unsigned char *)(a3 + 720) == 1) {
        sub_24B483F44(a1, (unsigned __int8 *)(a3 + 80), a2);
      }
      if (*(unsigned char *)(a3 + 752) == 1) {
        sub_24B484254(a1, (uint64_t *)(a3 + 728), a2);
      }
      int v8 = *(_DWORD *)(a2 + 20);
      if (v8 == 3)
      {
        int v7 = *(unsigned __int8 *)(a2 + 40);
      }
      else if (v8 == 2)
      {
        int v7 = *(unsigned __int8 *)(a2 + 41);
      }
      if (v7 == 1 && *(unsigned char *)(a3 + 788) == 1) {
        int v7 = 1;
      }
    }
    *(_DWORD *)(a1 + 112) = 0;
    *(unsigned char *)(a1 + 116) = -1;
  }
  if (*(_DWORD *)(a2 + 24) == 1 && v7 == 1)
  {
    sub_24B4891F4(a2, 1, 2);
    *(_DWORD *)(a2 + 24) = 2;
  }
}

void sub_24B483F44(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = 0;
  LOWORD(v29[0]) = -1;
  BYTE2(v29[0]) = -1;
  DWORD1(v29[0]) = -1;
  BYTE4(v29[3]) = 127;
  BYTE8(v29[0]) = -1;
  HIDWORD(v29[0]) = 0;
  DWORD2(v29[1]) = -1;
  *(void *)&v29[1] = 0;
  *(void *)((char *)&v29[2] + 4) = 0;
  *(void *)((char *)&v29[1] + 12) = 0;
  *(void *)((char *)&v29[2] + 12) = 2;
  DWORD2(v29[3]) = 0;
  WORD6(v29[3]) = -1;
  BYTE14(v29[3]) = -1;
  LODWORD(v30) = -1;
  WORD2(v30) = -1;
  BYTE8(v30) = 0;
  do
  {
    int v7 = (char *)v29 + v6;
    v7[74] = -1;
    *((_DWORD *)v7 + 19) = -1;
    v7[80] = -1;
    v6 += 8;
  }
  while (v6 != 128);
  BYTE10(v38) = -1;
  *(void *)&long long v39 = 0;
  uint64_t v8 = 2;
  if (*(_DWORD *)(a1 + 108) == 4) {
    uint64_t v8 = 3;
  }
  unint64_t v9 = v8 | ((unint64_t)*(unsigned __int8 *)(a3 + 28) << 32);
  int v10 = *(_DWORD *)(a3 + 32);
  if (a2[112] == 1 && (*(unsigned char *)(a1 + 50) & 1) != 0)
  {
    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    memset(v29, 0, sizeof(v29));
    int v11 = *a2;
    if (v11 == 5)
    {
      int v14 = *(unsigned __int8 *)(a1 + 46);
    }
    else
    {
      if (v11 != 4)
      {
        if (!*a2 && *(unsigned char *)(a1 + 8) == 1)
        {
          sub_24B487E38(a1, a2, (uint64_t)v29, 1);
          int v12 = *(unsigned __int8 *)(a3 + 16);
          char v13 = *(unsigned char *)(a3 + 17);
          uint64_t v25 = 1;
          int v26 = v12;
          char v27 = v13;
          v28[0] = 0;
          *(_DWORD *)((char *)v28 + 7) = 0;
          uint64_t v51 = v9;
          int v52 = v10;
          long long v45 = v36;
          long long v46 = v37;
          long long v47 = v38;
          long long v48 = v39;
          *(_OWORD *)&v42[64] = v32;
          *(_OWORD *)&v42[80] = v33;
          long long v43 = v34;
          long long v44 = v35;
          *(_OWORD *)unsigned int v42 = v29[2];
          *(_OWORD *)&v42[16] = v29[3];
          *(_OWORD *)&v42[32] = v30;
          *(_OWORD *)&v42[48] = v31;
          long long v40 = v29[0];
          long long v41 = v29[1];
          sub_24B4A253C((unsigned __int16 *)&v40, &v51);
        }
        goto LABEL_16;
      }
      int v14 = *(unsigned __int8 *)(a1 + 10);
    }
    if (v14 == 1) {
      sub_24B487E38(a1, a2, (uint64_t)&v25, 0);
    }
  }
LABEL_16:
  if (a2[140] == 1 && (*(unsigned char *)(a1 + 50) & 2) != 0)
  {
    uint64_t v15 = sub_24B488428((unsigned __int8 *)a1, a3);
    unsigned __int8 v16 = a2[116];
    __int16 v17 = *((_WORD *)a2 + 66);
    unsigned __int8 v18 = a2[134];
    unsigned __int8 v19 = a2[128];
    int v20 = *((unsigned __int16 *)a2 + 65);
    __int16 v21 = *(_WORD *)(a2 + 135);
    HIBYTE(v40) = 0;
    *(_WORD *)((char *)&v40 + 13) = 0;
    memset(&v42[2], 0, 86);
    int v22 = *(unsigned __int8 *)(a3 + 16);
    char v23 = *(unsigned char *)(a3 + 17);
    uint64_t v51 = 1;
    int v52 = v22;
    char v53 = v23;
    memset(v54, 0, sizeof(v54));
    unint64_t v49 = v9;
    int v50 = v10;
    *(void *)&long long v40 = 0;
    DWORD2(v40) = 590335;
    BYTE12(v40) = v16;
    *(void *)&long long v41 = *((void *)a2 + 15);
    WORD4(v41) = v17;
    BYTE10(v41) = v18;
    BYTE11(v41) = v19;
    HIDWORD(v41) = v20;
    *(_WORD *)unsigned int v42 = v21;
    sub_24B4A3230((uint64_t)&v40, v15, &v49);
  }
  if (a2[200] == 1 && (*(unsigned char *)(a1 + 50) & 4) != 0 && a2[168] == 1)
  {
    sub_24B488428((unsigned __int8 *)a1, a3);
    sub_24B48AEB4((uint64_t)(a2 + 144), *((_DWORD *)a2 + 36), v24);
  }
}

void sub_24B484254(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v69 = *MEMORY[0x263EF8340];
  int v3 = *((_DWORD *)a2 + 4);
  if ((v3 - 1) > 0xF) {
    return;
  }
  uint64_t v4 = a3;
  int v7 = 0;
  uint64_t v8 = 2;
  if (*(_DWORD *)(a1 + 108) == 4) {
    uint64_t v8 = 3;
  }
  int v58 = *(_DWORD *)(a3 + 32);
  unint64_t v56 = v8 | ((unint64_t)*(unsigned __int8 *)(a3 + 28) << 32);
  unint64_t v9 = a2;
  do
  {
    unint64_t v9 = (uint64_t *)*v9;
    if (*((unsigned char *)v9 + 120) == 1 && !*((unsigned char *)v9 + 8) && *(unsigned char *)(a1 + 8) == 1 && (*(_WORD *)(a1 + 52) & 1) != 0)
    {
      int v10 = *((_DWORD *)v9 + 28);
      if (v10 < 1)
      {
        sub_24B4B00A4(8568, "lpp_transaction.c");
      }
      else
      {
        if (v10 <= 0x10) {
          int v11 = *((_DWORD *)v9 + 28);
        }
        else {
          int v11 = 16;
        }
        int v12 = (char *)malloc_type_calloc(1uLL, (100 * v11), 0x86CB5109uLL);
        bzero(v12, (100 * v11));
        uint64_t v53 = v4;
        char v13 = 0;
        int v14 = v9 + 12;
        uint64_t v15 = v12;
        do
        {
          int v14 = (uint64_t *)*v14;
          *uint64_t v15 = *((unsigned char *)v14 + 8);
          *((_WORD *)v15 + 1) = 0;
          v15[1] = 0;
          sub_24B48AEB4((uint64_t)(v14 + 2), *((_DWORD *)v14 + 4), v15 + 6);
          v15[6] = v15[6] >> 2;
          sub_24B48AF20((int *)v14 + 8, *((_DWORD *)v14 + 8), (_WORD *)v15 + 4);
          if (*((_DWORD *)v14 + 12) == 1 && *((_DWORD *)v14 + 26) == 1)
          {
            *((_WORD *)v15 + 15) = *((_WORD *)v14 + 28);
            *((_WORD *)v15 + 16) = *((char *)v14 + 58);
            *((_WORD *)v15 + 17) = *((_WORD *)v14 + 30);
            *((_DWORD *)v15 + 9) = *((_DWORD *)v14 + 16);
            *((_WORD *)v15 + 14) = *((char *)v14 + 68);
            v15[5] = *((unsigned char *)v14 + 112);
            v15[66] = *((unsigned char *)v14 + 113);
            *((_WORD *)v15 + 32) = *((_WORD *)v14 + 57);
            *((_DWORD *)v15 + 22) = *((_DWORD *)v14 + 29);
            *((_WORD *)v15 + 21) = *((_WORD *)v14 + 60);
            *((_DWORD *)v15 + 11) = *((_DWORD *)v14 + 31);
            *((_DWORD *)v15 + 23) = *((_DWORD *)v14 + 32);
            *((_DWORD *)v15 + 13) = *((_DWORD *)v14 + 33);
            *((_WORD *)v15 + 48) = *((_WORD *)v14 + 68);
            *((_DWORD *)v15 + 15) = *((_DWORD *)v14 + 35);
            *((_DWORD *)v15 + 20) = *((_DWORD *)v14 + 36);
            *((_DWORD *)v15 + 18) = *((_DWORD *)v14 + 37);
            *((_WORD *)v15 + 20) = *((_WORD *)v14 + 76);
            *((_WORD *)v15 + 38) = *((_WORD *)v14 + 77);
            *((_WORD *)v15 + 28) = *((_WORD *)v14 + 78);
            *((_WORD *)v15 + 42) = *((_WORD *)v14 + 79);
            *((_WORD *)v15 + 34) = *((_WORD *)v14 + 80);
            *((_WORD *)v15 + 24) = *((_WORD *)v14 + 81);
            if (*((unsigned char *)v14 + 188) == 1)
            {
              v15[4] = *((unsigned char *)v14 + 164);
              v15[10] = *((unsigned char *)v14 + 165);
              v15[67] = *((unsigned char *)v14 + 184);
              *(void *)(v15 + 12) = v14[21];
              *((_DWORD *)v15 + 5) = *((_DWORD *)v14 + 44);
              *((_DWORD *)v15 + 6) = *((unsigned __int16 *)v14 + 90);
            }
            ++v13;
            v15 += 100;
          }
          else
          {
            sub_24B4B00A4(8549, "lpp_transaction.c");
          }
          --v11;
        }
        while (v11);
        uint64_t v4 = v53;
        if (v13)
        {
          LOBYTE(__src) = v13;
          *(_DWORD *)((char *)&__src + 1) = 0;
          DWORD1(__src) = 0;
          *((void *)&__src + 1) = v12;
          *(void *)&long long v62 = 0;
          sub_24B48ACC0(a1, &__src, v56, v58, v53);
        }
        else if (v12)
        {
          free(v12);
        }
      }
      int v3 = *((_DWORD *)a2 + 4);
    }
    ++v7;
  }
  while (v3 > v7);
  bzero(&__src, 0x2A8uLL);
  if (v3 <= 0) {
    return;
  }
  unsigned int v16 = 0;
  int v17 = 0;
  unsigned int v18 = 0;
  unsigned int v57 = 0;
  int v59 = 0;
  int v55 = 0;
  int v19 = 0;
  int v20 = a2;
  do
  {
    int v20 = (uint64_t *)*v20;
    if (*((unsigned char *)v20 + 152) == 1)
    {
      uint64_t v21 = *((unsigned __int8 *)v20 + 8);
      if (*((unsigned char *)v20 + 8))
      {
        if (v21 == 5)
        {
          if (*(unsigned char *)(a1 + 46) != 1 || (*(_WORD *)(a1 + 56) & 2) == 0 || v59 || v18 > 4) {
            goto LABEL_61;
          }
        }
        else
        {
          if (v21 != 4 || *(unsigned char *)(a1 + 10) != 1 || (*(_WORD *)(a1 + 54) & 2) == 0 || v55 || v18 >= 5) {
            goto LABEL_61;
          }
          int v55 = 1;
        }
        uint64_t v25 = (char *)&__src + 136 * v18;
        ++v17;
        *(_DWORD *)uint64_t v25 = dword_24B4BF894[v21];
        BOOL v26 = v21 == 5;
        int v27 = v59;
        if (v26) {
          int v27 = 1;
        }
        int v59 = v27;
        int v28 = *((_DWORD *)v20 + 36);
        v25[4] = v28;
        int v29 = v25 + 4;
        if ((_BYTE)v28)
        {
          unsigned int v52 = v18 + 1;
          int v54 = v17;
          unint64_t v30 = 0;
          unsigned int v31 = v18;
          long long v32 = v20 + 16;
          long long v33 = (char *)&__src + 136 * v31;
          do
          {
            long long v32 = (uint64_t *)*v32;
            char v34 = *((unsigned char *)v32 + 8);
            v33[v30 + 69] = -1;
            v33[v30 + 5] = v34;
            if (*((unsigned char *)v32 + 56) == 1)
            {
              sub_24B48AEB4((uint64_t)(v32 + 2), *((_DWORD *)v32 + 4), &v33[v30 + 69]);
              LOBYTE(v28) = *v29;
            }
            ++v30;
          }
          while (v30 < v28);
          unsigned int v18 = v52;
          int v17 = v54;
        }
        else
        {
          ++v18;
        }
      }
      else
      {
        if (*(unsigned char *)(a1 + 8) != 1 || (*(_WORD *)(a1 + 52) & 2) == 0 || v19 || v57 > 4)
        {
LABEL_61:
          sub_24B4B00A4(8992, "lpp_transaction.c");
          goto LABEL_62;
        }
        ++v57;
        size_t v22 = *((unsigned __int8 *)v20 + 144);
        int v19 = 1;
        char v23 = malloc_type_calloc(1uLL, v22, 0x86CB5109uLL);
        bzero(v23, v22);
        if (v22)
        {
          BOOL v24 = v20 + 16;
          do
          {
            BOOL v24 = (uint64_t *)*v24;
            *v23++ = *((unsigned char *)v24 + 8);
            int v19 = 1;
            --v22;
          }
          while (v22);
        }
      }
    }
LABEL_62:
    int v35 = *((_DWORD *)a2 + 4);
    if (v16 > 4) {
      break;
    }
    ++v16;
  }
  while (v35 > (int)v16);
  if ((v17 - 1) <= 4u)
  {
    long long v36 = malloc_type_calloc(1uLL, 136 * v17, 0x86CB5109uLL);
    memcpy(v36, &__src, 136 * v17);
    int v35 = *((_DWORD *)a2 + 4);
  }
  uint64_t v68 = 0;
  long long v66 = 0u;
  long long v67 = 0u;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v62 = 0u;
  long long v63 = 0u;
  long long __src = 0u;
  if (v35 >= 1)
  {
    unsigned int v37 = 0;
    int v38 = 0;
    p_src = &__src;
    long long v40 = a2;
    while (1)
    {
      long long v40 = (uint64_t *)*v40;
      if (*((unsigned char *)v40 + 392) == 1)
      {
        if (*((unsigned char *)v40 + 8) == 4 && *(unsigned char *)(a1 + 10) == 1 && (*(_WORD *)(a1 + 54) & 0x80) != 0)
        {
          if (*((_DWORD *)v40 + 90) == 1)
          {
            int v60 = v38;
            unsigned int v42 = (uint64_t *)v40[46];
            *(_DWORD *)p_src = 3;
            int v43 = *((_DWORD *)v40 + 96);
            *((unsigned char *)p_src + 8) = v43;
            size_t v44 = 4 * v43;
            long long v45 = malloc_type_calloc(1uLL, v44, 0x86CB5109uLL);
            bzero(v45, v44);
            *((void *)p_src + 2) = v45;
            if (*((unsigned char *)p_src + 8))
            {
              uint64_t v46 = 0;
              unint64_t v47 = 0;
              do
              {
                int v48 = *((_DWORD *)v42 + 4);
                *((unsigned char *)v45 + v46) = *((unsigned char *)v42 + 8);
                sub_24B48AEB4((uint64_t)(v42 + 2), v48, (unsigned char *)v45 + v46 + 1);
                int v49 = *((unsigned __int8 *)v42 + 57);
                long long v45 = (void *)*((void *)p_src + 2);
                *((unsigned char *)v45 + v46 + 2) = v49;
                if (v49 == 1) {
                  *((unsigned char *)v45 + v46 + 3) = *((unsigned char *)v42 + 56);
                }
                unsigned int v42 = (uint64_t *)*v42;
                ++v47;
                v46 += 4;
              }
              while (v47 < *((unsigned __int8 *)p_src + 8));
            }
            int v38 = v60 + 1;
            p_src = (long long *)((char *)p_src + 24);
            goto LABEL_76;
          }
          uint64_t v41 = 9453;
        }
        else
        {
          uint64_t v41 = 9458;
        }
        sub_24B4B00A4(v41, "lpp_transaction.c");
      }
LABEL_76:
      if (v37 <= 4 && *((_DWORD *)a2 + 4) > (signed int)++v37) {
        continue;
      }
      if ((v38 - 1) <= 4u)
      {
        size_t v50 = 24 * v38;
        uint64_t v51 = malloc_type_calloc(1uLL, v50, 0x86CB5109uLL);
        memcpy(v51, &__src, v50);
      }
      return;
    }
  }
}

uint64_t sub_24B4849A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(_DWORD *)(a2 + 20) != 4)
  {
    uint64_t v16 = 2650;
LABEL_16:
    sub_24B4B00A4(v16, "lpp_transaction.c");
    return 0;
  }
  if (*(_DWORD *)a3 != 4)
  {
    uint64_t v16 = 2655;
    goto LABEL_16;
  }
  uint64_t v8 = (_DWORD *)(a2 + 48);
  v56[0] = 0;
  __int16 v55 = 0;
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  int v54 = 0;
  memset(v49, 0, 28);
  *(void *)(a2 + 152) = 0;
  unint64_t v9 = **(uint64_t ***)(a1 + 72);
  if (!v9)
  {
LABEL_8:
    sub_24B4B00A4(2693, "lpp_transaction.c");
    LOBYTE(v12) = 0;
    int v13 = 0;
    unint64_t v14 = 0xFF000000FFLL;
    int v11 = -1;
    char v15 = 1;
    goto LABEL_9;
  }
  int v10 = *(_DWORD *)(a2 + 28);
  while (1)
  {
    if (*((_DWORD *)v9 + 4) == v10)
    {
      int v11 = *((_DWORD *)v9 + 5);
      if (v11 == *(_DWORD *)(a2 + 32)) {
        break;
      }
    }
    unint64_t v9 = (uint64_t *)*v9;
    if (!v9) {
      goto LABEL_8;
    }
  }
  if (v10 == 1) {
    int v19 = *((unsigned __int8 *)v9 + 64);
  }
  else {
    int v19 = 0;
  }
  if (*(_DWORD *)(a3 + 8) || *(_DWORD *)(a3 + 16) || *(unsigned char *)(a3 + 92) != 1) {
    goto LABEL_31;
  }
  int v20 = *(unsigned __int8 *)(a3 + 120);
  if (v20 == 1)
  {
    *uint64_t v8 = 1;
    if (!*(unsigned char *)(a1 + 8) && !*(unsigned char *)(a1 + 10) && !*(unsigned char *)(a1 + 46)) {
      *uint64_t v8 = 2;
    }
  }
  else if (!*(unsigned char *)(a3 + 120) && !*(unsigned char *)(a3 + 152) && !*(unsigned char *)(a3 + 312))
  {
LABEL_31:
    char v15 = 0;
    LOBYTE(v12) = 0;
    int v13 = 0;
    unint64_t v14 = 0xFF000000FFLL;
    int v11 = -1;
    goto LABEL_9;
  }
  if (*(unsigned char *)(a3 + 152) == 1)
  {
    *(_DWORD *)(a2 + 52) = 1;
    if (!*(unsigned char *)(a1 + 44) || *(_DWORD *)(a1 + 108) != 3) {
      *(_DWORD *)(a2 + 52) = 2;
    }
  }
  if (*(unsigned char *)(a3 + 312) == 1)
  {
    *(_DWORD *)(a2 + 56) = 1;
    if (!*(unsigned char *)(a1 + 61) || *(_DWORD *)(a1 + 108) != 4) {
      *(_DWORD *)(a2 + 56) = 2;
    }
  }
  size_t v22 = (unsigned char *)(a3 + 24);
  if (*v8 == 1)
  {
    int v23 = sub_24B485088((unsigned char *)a1, a3 + 24, (uint64_t)v8, (uint64_t)&v50);
    BOOL v24 = (int *)(a2 + 52);
    if (*(_DWORD *)(a2 + 52) != 1 && *(_DWORD *)(a2 + 56) != 1)
    {
      int v25 = 0;
      goto LABEL_56;
    }
  }
  else
  {
    BOOL v24 = (int *)(a2 + 52);
    if (*(_DWORD *)(a2 + 52) != 1 && *(_DWORD *)(a2 + 56) != 1)
    {
      if (v10)
      {
        char v15 = 0;
        int v13 = 0;
        unint64_t v14 = 0xFF000000FFLL;
        int v11 = -1;
      }
      else
      {
        if (*(_DWORD *)(a1 + 108) == 4) {
          unint64_t v14 = 3;
        }
        else {
          unint64_t v14 = 2;
        }
        int v47 = 0;
        switch(*v22)
        {
          case 0:
          case 2:
            if (v20 != 1) {
              goto LABEL_111;
            }
            if (*(unsigned char *)(a3 + 115) == 1) {
              int v47 = 1;
            }
            else {
              int v47 = 2;
            }
            break;
          case 1:
          case 3:
            break;
          default:
LABEL_111:
            int v47 = 2;
            break;
        }
        char v15 = 0;
        int v13 = 0;
        *(_DWORD *)(a2 + 60) = v47;
      }
      LOBYTE(v12) = 1;
      goto LABEL_9;
    }
    int v23 = 0;
  }
  int v25 = sub_24B48560C((unsigned char *)a1, (uint64_t)v22, (uint64_t)v8, (uint64_t)v49);
LABEL_56:
  uint64_t v26 = 0;
  int v12 = 0;
  int v27 = (unsigned __int8 *)v9 + 105;
  do
  {
    if (v8[v26] == 1 && *((unsigned char *)v9 + v26 + 110) && *v27 != *(unsigned __int8 *)(a2 + 17))
    {
      int v12 = 2;
      v8[v26] = 2;
    }
    ++v26;
    v27 += 2;
  }
  while (v26 != 3);
  if (*v8 == 1)
  {
    int v28 = *(_DWORD *)(a2 + 76);
    int v29 = *(_DWORD *)(a2 + 52);
    if (v28 == 2 && (v29 == 1 || *(_DWORD *)(a2 + 56) == 1))
    {
      *(unsigned char *)(a2 + 144) = 1;
      unint64_t v30 = malloc_type_calloc(1uLL, 0x44uLL, 0x86CB5109uLL);
      unsigned char v30[16] = 0;
      *((_OWORD *)v30 + 2) = 0u;
      *((_OWORD *)v30 + 3) = 0u;
      *(_OWORD *)unint64_t v30 = 0u;
      *((_OWORD *)v30 + 1) = 0u;
      *(void *)(a2 + 128) = v30;
      long long v31 = v51;
      long long v32 = v52;
      long long v33 = v53;
      unsigned char v30[16] = v54;
      *((_OWORD *)v30 + 2) = v32;
      *((_OWORD *)v30 + 3) = v33;
      *((_OWORD *)v30 + 1) = v31;
      *(_OWORD *)unint64_t v30 = v50;
      BYTE4(v50) = v50;
      LODWORD(v50) = 0;
      char v34 = malloc_type_calloc(1uLL, 0x1CuLL, 0x86CB5109uLL);
      BOOL v35 = 0;
      char v36 = 0;
      unsigned int v37 = 0;
      *(void *)(a2 + 136) = v34;
      long long v38 = v49[0];
      *(_OWORD *)((char *)v34 + 12) = *(_OWORD *)((char *)v49 + 12);
      _OWORD *v34 = v38;
      DWORD1(v49[0]) = 0;
      char v39 = v49[1];
      *((void *)&v49[0] + 1) = 0xFF0000000002;
      LODWORD(v49[1]) = 0;
      BYTE12(v49[0]) = v39;
      int v40 = *(_DWORD *)(a2 + 48);
      int v29 = *(_DWORD *)(a2 + 52);
      unint64_t v48 = v9[2];
      if (v40 != 1)
      {
LABEL_74:
        unsigned int v42 = v49;
        if (v29 != 1 && *(_DWORD *)(a2 + 56) != 1) {
          unsigned int v42 = 0;
        }
        sub_24B47F85C(a1, (int *)&v48, v19, v37, v42, (unsigned char *)&v55 + 1, v56, v36);
        if (*v8 == 1)
        {
          uint64_t v43 = 2;
          if (*(_DWORD *)(a1 + 108) == 4) {
            uint64_t v43 = 3;
          }
          int v11 = HIDWORD(v48);
          unint64_t v14 = v43 | ((unint64_t)v48 << 32);
          LODWORD(v50) = 1000 * v50;
          int v13 = 1;
        }
        else
        {
          int v13 = 0;
          unint64_t v14 = 0xFF000000FFLL;
          int v11 = -1;
        }
        uint64_t v44 = 0;
        for (uint64_t i = 104; i != 110; i += 2)
        {
          if (v8[v44] == 1)
          {
            if (v56[v44 - 2] == 1)
            {
              LOBYTE(v12) = 0;
              v8[v44] = 2;
            }
            else
            {
              *(_WORD *)((char *)v9 + i) = *(_WORD *)(a2 + 16);
              *((unsigned char *)v9 + v44 + 110) = 1;
            }
          }
          ++v44;
        }
        char v15 = 0;
        goto LABEL_9;
      }
    }
    else
    {
      BOOL v35 = v28 == 2;
      unint64_t v48 = v9[2];
    }
    unsigned int v37 = &v50;
    char v36 = v35;
    goto LABEL_74;
  }
  int v29 = *v24;
  if (*v24 == 1)
  {
    unsigned int v41 = *((_DWORD *)v9 + 4);
LABEL_73:
    unsigned int v37 = 0;
    char v36 = *(_DWORD *)(a2 + 76) == 2;
    unint64_t v48 = __PAIR64__(*((_DWORD *)v9 + 5), v41);
    goto LABEL_74;
  }
  unsigned int v41 = *((_DWORD *)v9 + 4);
  if (*(_DWORD *)(a2 + 56) == 1) {
    goto LABEL_73;
  }
  char v15 = 0;
  if (v25) {
    int v46 = v25;
  }
  else {
    int v46 = v12;
  }
  if (v23) {
    int v12 = v23;
  }
  else {
    int v12 = v46;
  }
  unint64_t v14 = 0xFF000000FFLL;
  int v11 = -1;
  int v13 = 0;
  if (!v41 && v12 == 1)
  {
    char v15 = 0;
    int v13 = 0;
    if (*(_DWORD *)(a1 + 108) == 4) {
      unint64_t v14 = 3;
    }
    else {
      unint64_t v14 = 2;
    }
    int v11 = *((_DWORD *)v9 + 5);
  }
LABEL_9:
  if (*v8 == 1 || *(_DWORD *)(a2 + 52) == 1 || *(_DWORD *)(a2 + 56) == 1)
  {
    if (v13) {
      sub_24B48AB50(a1, (unsigned int *)&v50, v14, v11, a2);
    }
    return 0;
  }
  if (v15)
  {
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v17 = 1;
    uint64_t v21 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
    bzero(v21, 0xA28uLL);
    *(void *)(a4 + 16) = v21;
    v21[1] = 257;
    _WORD *v21 = *(_WORD *)(a2 + 16);
    *((unsigned char *)v21 + 2592) = 1;
    *((_DWORD *)v21 + 6) = 5;
    *((unsigned char *)v21 + 9) = 1;
    *((unsigned char *)v21 + 6) = 1;
    *((_DWORD *)v21 + 8) = 0;
    *((_DWORD *)v21 + 10) = 0;
    *((unsigned char *)v21 + 144) = 1;
    *((unsigned char *)v21 + 98) = 1;
    *((unsigned char *)v21 + 97) = v12;
  }
  if (*(_DWORD *)(a2 + 24) == 1) {
    sub_24B4891F4(a2, 1, 2);
  }
  *(_DWORD *)(a2 + 24) = 2;
  sub_24B485A98(a2);
  return v17;
}

uint64_t sub_24B485088(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  switch(*(unsigned char *)a2)
  {
    case 0:
    case 2:
      if (*(unsigned char *)(a2 + 96) != 1 || *(unsigned char *)(a2 + 91) != 1)
      {
        int v4 = 0;
        goto LABEL_8;
      }
      int v4 = 0;
      *(_DWORD *)(a4 + 64) = 1;
      int v5 = (_DWORD *)(a4 + 64);
      int v6 = 2;
      break;
    case 1:
    case 3:
      int v4 = 0;
      *(_DWORD *)(a4 + 64) = 0;
      int v5 = (_DWORD *)(a4 + 64);
      int v6 = 1;
      break;
    default:
      int v4 = 1;
LABEL_8:
      int v6 = 0;
      *(_DWORD *)(a4 + 64) = 2;
      int v5 = (_DWORD *)(a4 + 64);
      break;
  }
  *(_DWORD *)(a4 + 44) = v6;
  *(_WORD *)(a4 + 52) = 0;
  *(unsigned char *)(a4 + 43) = -1;
  if (*(unsigned char *)(a2 + 96) == 1 && *(int *)(a2 + 72) >= 1)
  {
    if (**(unsigned char **)(a2 + 80))
    {
      *(unsigned char *)(a3 + 16) = 1;
      if (a1[8] == 1 && ((a1[9] >> *v5) & 1) != 0)
      {
        *(unsigned char *)(a3 + 22) = 1;
        *(_WORD *)(a4 + 54) |= 1u;
        *(_WORD *)(a4 + 52) |= 1u;
      }
    }
    if (*(int *)(a2 + 72) >= 5)
    {
      if (*(unsigned char *)(*(void *)(a2 + 80) + 4))
      {
        *(unsigned char *)(a3 + 17) = 1;
        if (a1[10] == 1 && ((a1[11] >> *v5) & 1) != 0)
        {
          *(unsigned char *)(a3 + 23) = 1;
          *(_WORD *)(a4 + 54) |= 0x20u;
          *(_WORD *)(a4 + 52) |= 1u;
        }
      }
      if (*(int *)(a2 + 72) >= 6)
      {
        if (*(unsigned char *)(*(void *)(a2 + 80) + 5))
        {
          *(unsigned char *)(a3 + 18) = 1;
          if (a1[46] == 1 && ((a1[47] >> *v5) & 1) != 0)
          {
            *(unsigned char *)(a3 + 24) = 1;
            *(_WORD *)(a4 + 54) |= 0x40u;
            *(_WORD *)(a4 + 52) |= 1u;
          }
        }
      }
    }
  }
  if (!*(unsigned char *)(a3 + 22) && !*(unsigned char *)(a3 + 23) && !*(unsigned char *)(a3 + 24))
  {
    if (*(unsigned char *)(a3 + 16) || *(unsigned char *)(a3 + 17) || *(unsigned char *)(a3 + 18)) {
      *(_DWORD *)a3 = 2;
    }
    goto LABEL_29;
  }
  if (v4)
  {
LABEL_29:
    *(_DWORD *)a3 = 2;
    return 1;
  }
  *(_DWORD *)(a3 + 12) = *(_DWORD *)(a4 + 64);
  *(unsigned char *)(a4 + 59) = *(unsigned char *)(a2 + 91);
  *(_WORD *)(a4 + 56) = 0;
  *(unsigned char *)(a4 + 58) = 0;
  if (*(unsigned char *)(a2 + 40) == 1 && *(unsigned char *)(a2 + 22) == 1)
  {
    int v8 = *(unsigned __int8 *)(a2 + 7);
    *(_DWORD *)a4 = 0;
    *(unsigned char *)(a4 + 42) = 0;
    if (v8 != 1)
    {
      *(_DWORD *)(a3 + 28) = 0;
      unsigned int v9 = *(unsigned __int8 *)(a2 + 17);
      *(unsigned char *)(a4 + 4) = v9;
      if (a1[49] == 1 && *(unsigned char *)(a2 + 19) == 1 && (unsigned int v10 = *(unsigned __int8 *)(a2 + 18), v9 > v10))
      {
        *(unsigned char *)(a4 + 43) = v10;
        if (*(unsigned char *)(a3 + 22) == 1 || *(unsigned char *)(a3 + 23) == 1 || *(unsigned char *)(a3 + 24) == 1)
        {
          *(_DWORD *)(a3 + 104) = 1;
          *(_DWORD *)(a3 + 116) = 4;
        }
      }
      else
      {
        *(unsigned char *)(a4 + 43) = -1;
        *(_DWORD *)(a3 + 104) = 0;
      }
      goto LABEL_61;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 7) != 1)
    {
      uint64_t result = 0;
      *(_DWORD *)a3 = 2;
      return result;
    }
    *(_DWORD *)a4 = 0;
    *(unsigned char *)(a4 + 42) = 0;
  }
  unsigned int v11 = *(unsigned __int8 *)(a2 + 6);
  if (*(unsigned char *)(a2 + 6))
  {
    int v12 = *(unsigned __int8 *)(a2 + 4);
    if (*(unsigned char *)(a2 + 4))
    {
      if (v11 >= 0xA)
      {
        *(_DWORD *)a4 = 0;
      }
      else
      {
        *(_DWORD *)a4 = dword_24B4BFAF8[(char)(v11 - 1)];
        *(_DWORD *)(a3 + 28) = 2;
        if (v12 == 7) {
          LOBYTE(v13) = -1;
        }
        else {
          int v13 = 1 << v12;
        }
        if (*(unsigned char *)(a2 + 5) != 1) {
          LOBYTE(v13) = -1;
        }
        *(unsigned char *)(a3 + 97) = v13;
        *(unsigned char *)(a3 + 98) = 0;
        *(unsigned char *)(a4 + 42) = v13;
      }
LABEL_61:
      *(_DWORD *)(a4 + 36) = 2;
      if (*(unsigned char *)(a2 + 9) == 1)
      {
        unsigned int v14 = *(unsigned __int8 *)(a2 + 8);
        if (v14 <= 1)
        {
          if (v14 == 1) {
            int v15 = 1;
          }
          else {
            int v15 = 2;
          }
          if (*(unsigned char *)(a2 + 8)) {
            int v16 = v15;
          }
          else {
            int v16 = 0;
          }
          *(_DWORD *)(a4 + 36) = v16;
        }
      }
      if (*(unsigned char *)(a2 + 12) == 1)
      {
        *(_DWORD *)(a4 + 8) = *(unsigned __int8 *)(a2 + 10);
        *(unsigned char *)(a4 + 16) = *(unsigned char *)(a2 + 11);
      }
      int v17 = *(unsigned __int8 *)(a2 + 13);
      *(_DWORD *)(a4 + 20) = v17;
      if (v17 == 1 && *(unsigned char *)(a2 + 16) == 1)
      {
        *(_DWORD *)(a4 + 24) = *(unsigned __int8 *)(a2 + 14);
        *(unsigned char *)(a4 + 28) = *(unsigned char *)(a2 + 15);
      }
      *(_DWORD *)(a4 + 12) = *(unsigned __int8 *)(a2 + 23);
      *(_DWORD *)(a4 + 32) = 2;
      if (*(unsigned char *)(a2 + 42) == 1)
      {
        unsigned int v18 = *(unsigned __int8 *)(a2 + 41);
        if (v18 <= 2) {
          *(_DWORD *)(a4 + 32) = v18;
        }
      }
      *(unsigned char *)(a4 + 40) = -1;
      if (*(unsigned char *)(a2 + 54) != 1) {
        goto LABEL_98;
      }
      int v19 = 0;
      *(unsigned char *)(a4 + 40) = 0;
      if (*(unsigned char *)(a2 + 43) == 1)
      {
        if (a1[59])
        {
          int v19 = 1;
          *(unsigned char *)(a4 + 40) = 1;
        }
        else
        {
          int v19 = 0;
        }
      }
      if (*(unsigned char *)(a2 + 44) == 1 && (a1[59] & 2) != 0)
      {
        v19 |= 2u;
        *(unsigned char *)(a4 + 40) = v19;
      }
      if (*(unsigned char *)(a2 + 45) == 1 && (a1[59] & 4) != 0)
      {
        v19 |= 4u;
        *(unsigned char *)(a4 + 40) = v19;
      }
      if (*(unsigned char *)(a2 + 47) == 1 && (a1[59] & 0x10) != 0)
      {
        v19 |= 0x10u;
        *(unsigned char *)(a4 + 40) = v19;
      }
      if (*(unsigned char *)(a2 + 48) == 1 && (a1[59] & 0x20) != 0)
      {
        char v20 = v19 | 0x20;
      }
      else
      {
        if (v19)
        {
LABEL_98:
          *(unsigned char *)(a4 + 41) = -1;
          if (*(unsigned char *)(a2 + 59) != 1) {
            return 0;
          }
          char v21 = 0;
          *(unsigned char *)(a4 + 41) = 0;
          if (*(unsigned char *)(a2 + 55) == 1)
          {
            if (a1[58])
            {
              char v21 = 1;
              *(unsigned char *)(a4 + 41) = 1;
            }
            else
            {
              char v21 = 0;
            }
          }
          if (*(unsigned char *)(a2 + 56) == 1 && (a1[58] & 2) != 0)
          {
            v21 |= 2u;
            *(unsigned char *)(a4 + 41) = v21;
          }
          if (*(unsigned char *)(a2 + 57) == 1 && (a1[58] & 4) != 0)
          {
            v21 |= 4u;
            *(unsigned char *)(a4 + 41) = v21;
          }
          if (*(unsigned char *)(a2 + 58) != 1 || (a1[58] & 8) == 0) {
            return 0;
          }
          uint64_t result = 0;
          *(unsigned char *)(a4 + 41) = v21 | 8;
          return result;
        }
        char v20 = a1[59];
      }
      *(unsigned char *)(a4 + 40) = v20;
      goto LABEL_98;
    }
  }
  uint64_t result = 2;
  if (*(_DWORD *)a3 == 1) {
    *(_DWORD *)a3 = 2;
  }
  return result;
}

uint64_t sub_24B48560C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  switch(*(unsigned char *)a2)
  {
    case 0:
    case 2:
      if (*(_DWORD *)(a3 + 4) == 1) {
        *(_DWORD *)(a3 + 4) = 2;
      }
      if (*(_DWORD *)(a3 + 8) == 1) {
        *(_DWORD *)(a3 + 8) = 2;
      }
      return 1;
    case 1:
    case 3:
      *(_DWORD *)(a3 + 12) = 0;
      int v4 = *(unsigned __int8 *)(a2 + 40);
      if ((v4 != 1 || *(unsigned char *)(a2 + 22) != 1) && *(unsigned char *)(a2 + 7) != 1 && *(unsigned char *)(a2 + 3) != 1)
      {
        uint64_t result = 0;
        *(void *)(a3 + 4) = 0x200000002;
        return result;
      }
      if (*(unsigned char *)(a2 + 3) == 1)
      {
        *(void *)(a4 + 8) = 0;
        *(_DWORD *)(a4 + 16) = 0;
        *(unsigned char *)(a4 + 8) = 1;
        *(unsigned char *)(a4 + 16) = 1;
        *(_DWORD *)(a4 + 4) = 1;
        *(_DWORD *)(a4 + 12) = *(unsigned __int8 *)(a2 + 1);
        *(unsigned char *)(a4 + 16) = *(unsigned char *)(a2 + 2);
        int v4 = *(unsigned __int8 *)(a2 + 40);
      }
      if (v4 != 1 || *(unsigned char *)(a2 + 22) != 1) {
        goto LABEL_26;
      }
      *(void *)(a4 + 8) = 0;
      *(_DWORD *)(a4 + 16) = 0;
      *(unsigned char *)(a4 + 8) = 2;
      *(_WORD *)(a4 + 12) = -255;
      *(_DWORD *)(a4 + 4) = 0;
      *(unsigned char *)(a4 + 12) = *(unsigned char *)(a2 + 17);
      if (a1[49] != 1
        || *(unsigned char *)(a2 + 19) != 1
        || (unsigned int v5 = *(unsigned __int8 *)(a2 + 18), *(unsigned __int8 *)(a2 + 17) <= v5))
      {
        *(unsigned char *)(a4 + 13) = -1;
        *(_DWORD *)(a3 + 108) = 0;
LABEL_25:
        *(_DWORD *)(a3 + 112) = 0;
        goto LABEL_26;
      }
      *(unsigned char *)(a4 + 13) = v5;
      if (*(_DWORD *)(a3 + 4) == 1)
      {
        *(_DWORD *)(a3 + 108) = 1;
        *(_DWORD *)(a3 + 120) = 4;
      }
      if (*(_DWORD *)(a3 + 8) == 1) {
        goto LABEL_25;
      }
LABEL_26:
      if (*(unsigned char *)(a2 + 7) != 1)
      {
        int v7 = *(_DWORD *)(a4 + 4);
        if (v7 == 1)
        {
          int v8 = *(_DWORD *)(a3 + 4);
          if (v8 == 1)
          {
            if (*(_DWORD *)(a4 + 12))
            {
              int v8 = 1;
            }
            else
            {
              int v8 = 2;
              *(_DWORD *)(a3 + 4) = 2;
            }
          }
          if (*(_DWORD *)(a3 + 8) == 1) {
            *(_DWORD *)(a3 + 8) = 2;
          }
          int v7 = 1;
LABEL_54:
          if (v8 == 1)
          {
            int v13 = *(_DWORD *)(a2 + 112);
            if (v13 >= 1)
            {
              unsigned int v14 = *(unsigned char **)(a2 + 120);
              if (*v14) {
                *(unsigned char *)(a4 + 21) = 1;
              }
              if (v13 >= 2)
              {
                if (v14[1]) {
                  *(unsigned char *)(a4 + 22) = 1;
                }
                if (v13 >= 3 && v14[2]) {
                  *(unsigned char *)(a4 + 23) = 1;
                }
              }
            }
            if (*(unsigned char *)(a4 + 21) || *(unsigned char *)(a4 + 22) || *(unsigned char *)(a4 + 23))
            {
              int v15 = (_DWORD *)(a3 + 8);
              int v16 = *(_DWORD *)(a3 + 8);
              if (v16 != 1)
              {
                int v8 = 1;
                goto LABEL_92;
              }
LABEL_71:
              unsigned int v18 = *(_DWORD *)(a2 + 272);
              if ((int)v18 >= 1)
              {
                int v19 = *(unsigned char **)(a2 + 280);
                if (*v19 && a1[64]) {
                  *(unsigned char *)(a4 + 24) = 1;
                }
                if (v18 >= 2)
                {
                  if (v19[1] && a1[64]) {
                    *(unsigned char *)(a4 + 25) = 1;
                  }
                  if (v18 >= 3)
                  {
                    if (v19[2] && a1[65]) {
                      *(unsigned char *)(a4 + 26) = 1;
                    }
                    if (v18 >= 4 && v19[3] && a1[65]) {
                      *(unsigned char *)(a4 + 27) = 1;
                    }
                  }
                }
              }
              if (*(unsigned char *)(a4 + 24) || *(unsigned char *)(a4 + 25) || *(unsigned char *)(a4 + 26) || *(unsigned char *)(a4 + 27))
              {
                int v8 = v8 == 1;
                int v16 = 1;
                goto LABEL_92;
              }
              int v16 = 2;
              *int v15 = 2;
              if (v8 == 1)
              {
LABEL_92:
                if (*(_DWORD *)a3 != 1)
                {
                  if (v7 != 1)
                  {
                    if (v7)
                    {
                      *(_DWORD *)(a3 + 28) = 2;
                      *(_WORD *)(a3 + 97) = *(_DWORD *)(a4 + 12);
                      if (!v8) {
                        goto LABEL_101;
                      }
                    }
                    else
                    {
                      *(_DWORD *)(a3 + 28) = 0;
                      *(_WORD *)(a3 + 97) = 0;
                      if (!v8)
                      {
LABEL_101:
                        if (v16 == 1)
                        {
                          uint64_t result = 0;
                          *(_DWORD *)a4 = 3;
                          return result;
                        }
                        return 0;
                      }
                    }
LABEL_99:
                    uint64_t result = 0;
                    *(_DWORD *)a4 = 0;
                    return result;
                  }
                  *(_DWORD *)(a3 + 28) = 1;
                }
                if (!v8) {
                  goto LABEL_101;
                }
                goto LABEL_99;
              }
              return 0;
            }
            int v15 = (_DWORD *)(a3 + 8);
            int v17 = *(_DWORD *)(a3 + 8);
            int v8 = 2;
            *(_DWORD *)(a3 + 4) = 2;
          }
          else
          {
            int v15 = (_DWORD *)(a3 + 8);
            int v17 = *(_DWORD *)(a3 + 8);
          }
          if (v17 != 1) {
            return 0;
          }
          goto LABEL_71;
        }
LABEL_49:
        int v8 = *(_DWORD *)(a3 + 4);
        goto LABEL_54;
      }
      if (*(unsigned char *)(a2 + 6) && *(unsigned char *)(a2 + 4) && *(_DWORD *)(a3 + 8) != 1)
      {
        *(_OWORD *)(a4 + 4) = xmmword_24B4BF870;
        if (*(unsigned char *)(a2 + 5) == 1)
        {
          int v9 = *(unsigned __int8 *)(a2 + 4);
          if (v9 == 7) {
            int v10 = 255;
          }
          else {
            int v10 = 1 << v9;
          }
          *(_DWORD *)(a4 + 12) = v10;
        }
        else
        {
          *(_DWORD *)(a4 + 16) = 255;
        }
        unsigned int v11 = *(unsigned __int8 *)(a2 + 6) - 1;
        if (v11 > 8) {
          int v12 = 0;
        }
        else {
          int v12 = dword_24B4BFAF8[(char)v11];
        }
        *(_DWORD *)(a4 + 16) = v12;
        int v7 = 2;
        goto LABEL_49;
      }
      if (*(_DWORD *)(a3 + 4) == 1) {
        *(_DWORD *)(a3 + 4) = 2;
      }
      uint64_t result = 2;
      if (*(_DWORD *)(a3 + 8) == 1) {
        *(_DWORD *)(a3 + 8) = 2;
      }
      return result;
    default:
      *(void *)(a3 + 4) = 0x200000002;
      return 1;
  }
}

void sub_24B485A98(uint64_t a1)
{
  if (!a1) {
    return;
  }
  if (*(_DWORD *)(a1 + 20) == 4)
  {
    if (*(_DWORD *)(a1 + 24) == 2)
    {
      uint64_t v2 = *(void **)(a1 + 128);
      if (v2)
      {
        free(v2);
        *(void *)(a1 + 128) = 0;
      }
      int v3 = *(void **)(a1 + 136);
      if (v3)
      {
        free(v3);
        *(void *)(a1 + 136) = 0;
      }
      int v4 = *(void **)(a1 + 80);
      if (v4)
      {
        free(v4);
        *(void *)(a1 + 80) = 0;
      }
      sub_24B48B180((void **)(a1 + 88));
      sub_24B48B180((void **)(a1 + 112));
      *(unsigned char *)(a1 + 40) = 0;
      sub_24B48B1CC((void **)(a1 + 96));
      sub_24B48B1CC((void **)(a1 + 120));
      sub_24B48B218((void **)(a1 + 104));
      return;
    }
    uint64_t v5 = 4076;
  }
  else
  {
    uint64_t v5 = 4085;
  }
  sub_24B4B00A4(v5, "lpp_transaction.c");
}

BOOL sub_24B485B90(void *a1)
{
  BOOL result = 1;
  if (!a1[4])
  {
    uint64_t v2 = a1[5];
    if (!v2 || *(unsigned char *)(v2 + 352) != 1 && *(unsigned char *)(v2 + 176) != 1)
    {
      uint64_t v3 = a1[6];
      if (!v3 || *(unsigned char *)(v3 + 184) != 1)
      {
        uint64_t v4 = a1[7];
        if (!v4 || *(unsigned char *)(v4 + 216) != 1) {
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_24B485BF0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  *a4 = 0;
  if (*(_DWORD *)(a2 + 20) != 4)
  {
    uint64_t v11 = 3446;
    goto LABEL_9;
  }
  uint64_t v5 = **(uint64_t ***)(a1 + 72);
  if (!v5)
  {
LABEL_7:
    uint64_t v11 = 3466;
LABEL_9:
    sub_24B4B00A4(v11, "lpp_transaction.c");
    return 0;
  }
  int v9 = (void *)(a2 + 48);
  int v10 = *(_DWORD *)(a2 + 28);
  while (*((_DWORD *)v5 + 4) != v10 || *((_DWORD *)v5 + 5) != *(_DWORD *)(a2 + 32))
  {
    uint64_t v5 = (uint64_t *)*v5;
    if (!v5) {
      goto LABEL_7;
    }
  }
  if (v10 == 1) {
    int v14 = *((unsigned __int8 *)v5 + 64);
  }
  else {
    int v14 = 0;
  }
  if (*(unsigned char *)a3 == 1)
  {
    if (*(_DWORD *)v9 == 1)
    {
      int v15 = *(_DWORD *)(a3 + 8);
      int v16 = *(_DWORD *)(a2 + 60);
      if (v15 == v16 || v15 == 1 && (v16 - 1) <= 1)
      {
        if (*(_DWORD *)(a2 + 152) == 1)
        {
          if (*(unsigned char *)(a3 + 272) == 1)
          {
            *(_DWORD *)(a2 + 164) = 2;
LABEL_25:
            if (*(_DWORD *)(a2 + 168) != 3) {
              goto LABEL_31;
            }
            goto LABEL_30;
          }
          *(_DWORD *)(a2 + 164) = 3;
        }
        else
        {
          if (*(_DWORD *)(a2 + 156) != 1)
          {
LABEL_31:
            if (!*(unsigned char *)(a2 + 40)) {
              *(unsigned char *)(a2 + 40) = 1;
            }
            sub_24B486B38(a1, (uint64_t)v9, a3, 0);
            goto LABEL_34;
          }
          if (*(_DWORD *)(a2 + 164) != 3) {
            goto LABEL_25;
          }
        }
LABEL_30:
        sub_24B486B38(a1, a2 + 48, a3, 1);
        goto LABEL_31;
      }
      uint64_t v17 = 3568;
    }
    else
    {
      uint64_t v17 = 3574;
    }
    sub_24B4B00A4(v17, "lpp_transaction.c");
  }
LABEL_34:
  if (*(unsigned char *)(a3 + 416) || *(unsigned char *)(a3 + 320) || *(unsigned char *)(a3 + 552) || *(unsigned char *)(a3 + 417))
  {
    if (*(_DWORD *)(a2 + 52) == 1)
    {
      if (*(unsigned char *)(a3 + 416) == 1)
      {
        *(_DWORD *)(a2 + 52) = 3;
        *(_DWORD *)(a2 + 156) = 0;
      }
      else if (*(unsigned char *)(a3 + 320) == 1 && !*(_DWORD *)(a3 + 328))
      {
        if (*(_DWORD *)(a2 + 156) == 1)
        {
          if (*(unsigned char *)(a3 + 409))
          {
            *(_DWORD *)(a2 + 168) = 2;
          }
          else
          {
            *(_DWORD *)(a2 + 168) = 3;
            sub_24B4877D4(a1, (uint64_t)v9, a3 + 328, 1);
          }
        }
        if (!*(unsigned char *)(a2 + 40)) {
          *(unsigned char *)(a2 + 40) = 1;
        }
        sub_24B4877D4(a1, (uint64_t)v9, a3 + 328, 0);
      }
    }
    if (*(_DWORD *)(a2 + 56) == 1)
    {
      if (*(unsigned char *)(a3 + 552) == 1)
      {
        *(_DWORD *)(a2 + 56) = 3;
        *(_DWORD *)(a2 + 160) = 0;
      }
      else if (*(unsigned char *)(a3 + 417) == 1 && *(_DWORD *)(a3 + 424) == 3)
      {
        if (!*(unsigned char *)(a2 + 40)) {
          *(unsigned char *)(a2 + 40) = 1;
        }
        sub_24B487BF4(a1, (uint64_t)v9, a3 + 424);
      }
    }
  }
  __int16 v118 = 0;
  v119[0] = 0;
  int v18 = *(_DWORD *)(a2 + 76);
  if (v18 != 1)
  {
    if (!v18)
    {
      int v19 = *(_DWORD *)(a2 + 60);
      if (v19) {
        BOOL v20 = 1;
      }
      else {
        BOOL v20 = *(void *)(a2 + 88) == 0;
      }
      if (!v20 || (v19 - 1) <= 1)
      {
        int v21 = *(_DWORD *)(a2 + 152);
        if ((!v21 || v21 == 1 && *(_DWORD *)(a2 + 164) == 3) && *(_DWORD *)v9 == 1) {
          *(_DWORD *)int v9 = 5;
        }
      }
      if (*(void *)(a2 + 96))
      {
        int v22 = *(_DWORD *)(a2 + 156);
        if ((!v22 || v22 == 1 && *(_DWORD *)(a2 + 168) == 3) && *(_DWORD *)(a2 + 52) == 1) {
          *(_DWORD *)(a2 + 52) = 5;
        }
      }
      if (*(void *)(a2 + 104) && *(_DWORD *)(a2 + 56) == 1) {
        *(_DWORD *)(a2 + 56) = 5;
      }
      if (*(_DWORD *)v9 == 1 || *(_DWORD *)(a2 + 52) == 1 || *(_DWORD *)(a2 + 56) == 1)
      {
        int v23 = *(_DWORD *)(a2 + 152);
        if (v23 != 1 && *(_DWORD *)(a2 + 156) != 1 && *(_DWORD *)(a2 + 160) != 1
          || *(_DWORD *)(a2 + 164) == 4
          || *(_DWORD *)(a2 + 168) == 4)
        {
          goto LABEL_269;
        }
      }
      else
      {
        int v23 = *(_DWORD *)(a2 + 152);
      }
      if (v23 == 1 || *(_DWORD *)(a2 + 156) == 1 || *(_DWORD *)(a2 + 160) == 1)
      {
        int v40 = *(char **)(a2 + 80);
        if (!v40)
        {
          int v40 = (char *)malloc_type_calloc(1uLL, 0x60uLL, 0x86CB5109uLL);
          *(_OWORD *)int v40 = 0u;
          *((_OWORD *)v40 + 1) = 0u;
          *((_OWORD *)v40 + 2) = 0u;
          *((_OWORD *)v40 + 3) = 0u;
          *((_OWORD *)v40 + 4) = 0u;
          *((_OWORD *)v40 + 5) = 0u;
          *(void *)(a2 + 80) = v40;
        }
        int v41 = *(_DWORD *)(a2 + 164);
        if (v41 == 2)
        {
          *(_WORD *)(v40 + 51) = 257;
          if (*(_DWORD *)(a2 + 152) == 1) {
            *(_DWORD *)(a2 + 164) = 4;
          }
          goto LABEL_139;
        }
        int v42 = *(_DWORD *)(a2 + 168);
        if (v42 == 2 || (int v43 = *(_DWORD *)(a2 + 172), v43 == 2))
        {
          *(_WORD *)(v40 + 51) = 257;
LABEL_139:
          if (*(_DWORD *)(a2 + 156) == 1 && *(_DWORD *)(a2 + 168) == 2) {
            *(_DWORD *)(a2 + 168) = 4;
          }
          goto LABEL_172;
        }
        v40[52] = 1;
        if (v41 == 3 || v42 == 3 || v43 == 3) {
          v40[51] = 0;
        }
      }
LABEL_172:
      if (sub_24B485B90(v9) || *(void *)(a2 + 80)) {
        goto LABEL_174;
      }
      if (*(void *)(a2 + 88) || *(void *)(a2 + 96) || *(void *)(a2 + 104))
      {
        int v94 = (char *)malloc_type_calloc(1uLL, 0x60uLL, 0x86CB5109uLL);
        *(_OWORD *)int v94 = 0u;
        *((_OWORD *)v94 + 1) = 0u;
        *((_OWORD *)v94 + 4) = 0u;
        *((_OWORD *)v94 + 5) = 0u;
        *((_OWORD *)v94 + 2) = 0u;
        *((_OWORD *)v94 + 3) = 0u;
        *(void *)(a2 + 80) = v94;
        int v32 = 5;
        *(_WORD *)(v94 + 49) = 258;
        goto LABEL_175;
      }
LABEL_103:
      int v32 = 6;
      goto LABEL_175;
    }
    int v27 = *(_DWORD *)v9;
    if (*(_DWORD *)v9 == 1)
    {
      int v28 = (unsigned char *)(a2 + 144);
      if (*(unsigned char *)(a2 + 144) == 1)
      {
        uint64_t v114 = (int *)(v5 + 2);
        int v113 = v14;
        memset(v120, 0, 3);
        uint64_t v29 = *(void *)(a2 + 88);
        if (v29)
        {
          BOOL v30 = 0;
          int v27 = 5;
          long long v31 = v9;
          *(_DWORD *)int v9 = 5;
        }
        else
        {
          long long v31 = v9;
          int v27 = 1;
          BOOL v30 = 1;
        }
LABEL_143:
        uint64_t v44 = *(void *)(a2 + 96);
        if (v44 && *(_DWORD *)(a2 + 52) == 1) {
          *(_DWORD *)(a2 + 52) = 5;
        }
        if (sub_24B485B90(v31))
        {
          if (!v30 && (*(unsigned char *)(v29 + 352) == 1 || *(unsigned char *)(v29 + 176) == 1) && *(_DWORD *)(a2 + 52) == 1)
          {
            uint64_t v45 = 0;
            HIBYTE(v120[0]) = 1;
            *(_DWORD *)(a2 + 52) = 5;
            uint64_t v46 = *(void *)v114;
            do
            {
              if (*((unsigned char *)v120 + v45) == 1) {
                sub_24B47FC14(a1, v46, v45, 1);
              }
              ++v45;
            }
            while (v45 != 3);
            uint64_t v44 = *(void *)(a2 + 96);
          }
          if (v44 && *(unsigned char *)(v44 + 184) == 1 && *(_DWORD *)v31 == 1)
          {
            uint64_t v47 = 0;
            *(_WORD *)((char *)v120 + 1) = 0;
            *(_DWORD *)long long v31 = 5;
            LOBYTE(v120[0]) = 1;
            uint64_t v48 = *(void *)v114;
            do
            {
              if (*((unsigned char *)v120 + v47) == 1) {
                sub_24B47FC14(a1, v48, v47, 0);
              }
              ++v47;
            }
            while (v47 != 3);
          }
        }
        else
        {
          if (v27 == 1 || *(_DWORD *)(a2 + 52) == 1 || *(_DWORD *)(a2 + 56) == 1)
          {
            char v49 = 1;
            int v32 = 6;
            goto LABEL_228;
          }
          unint64_t v95 = *(_OWORD **)(a2 + 80);
          if (!v95)
          {
            unint64_t v95 = malloc_type_calloc(1uLL, 0x60uLL, 0x86CB5109uLL);
            _OWORD *v95 = 0u;
            v95[1] = 0u;
            v95[2] = 0u;
            v95[3] = 0u;
            v95[4] = 0u;
            v95[5] = 0u;
            *(void *)(a2 + 80) = v95;
          }
          *((unsigned char *)v95 + 32) = 0;
          *((_WORD *)v95 + 24) = 768;
          *((unsigned char *)v95 + 50) = 1;
        }
        char v49 = 0;
        *(unsigned char *)(a2 + 144) = 0;
        int v32 = 5;
LABEL_228:
        int v9 = v31;
        if (*v28) {
          goto LABEL_268;
        }
        uint64_t v96 = *(_DWORD **)(a2 + 128);
        if (v96 && *(_DWORD *)v31 == 5) {
          *(_DWORD *)long long v31 = 1;
        }
        int v97 = *(_DWORD *)(a2 + 52);
        if (v97 == 5)
        {
          int v98 = *(_DWORD **)(a2 + 136);
          if (v98)
          {
            int v97 = 1;
            *(_DWORD *)(a2 + 52) = 1;
            _DWORD *v98 = 0;
            int v99 = *(_DWORD *)(a2 + 48) == 1;
            goto LABEL_242;
          }
          int v99 = *(_DWORD *)v31;
          if (*(_DWORD *)v31 == 1)
          {
            int v97 = 5;
            goto LABEL_242;
          }
        }
        else
        {
          int v99 = *(_DWORD *)v31;
          if (*(_DWORD *)v31 == 1) {
            goto LABEL_242;
          }
          if (v97 == 1) {
            goto LABEL_241;
          }
        }
        if (*(_DWORD *)(a2 + 56) != 1) {
          goto LABEL_268;
        }
LABEL_241:
        int v99 = 0;
LABEL_242:
        int v100 = *(unsigned __int8 *)(a2 + 145);
        if (v100 != 255) {
          *(unsigned char *)(a2 + 145) = v100 - 1;
        }
        int v101 = 0;
        if (v99) {
          uint64_t v102 = v96;
        }
        else {
          uint64_t v102 = 0;
        }
        if (v97 == 1) {
          int v101 = *(_DWORD **)(a2 + 136);
        }
        sub_24B47F85C(a1, v114, v113, v102, v101, (unsigned char *)&v118 + 1, v119, 0);
        if (*(_DWORD *)v31 == 1)
        {
          char v103 = *(unsigned int **)(a2 + 128);
          if (v103)
          {
            uint64_t v104 = 2;
            if (*(_DWORD *)(a1 + 108) == 4) {
              uint64_t v104 = 3;
            }
            unint64_t v105 = v104 | ((unint64_t)*((unsigned __int8 *)v5 + 16) << 32);
            int v106 = *((_DWORD *)v5 + 5);
            *v103 *= 1000;
            sub_24B48AB50(a1, v103, v105, v106, a2);
          }
        }
        for (uint64_t i = 0; i != 3; ++i)
        {
          if (*((_DWORD *)v31 + i) == 1 && v119[i - 2] == 1) {
            *((_DWORD *)v31 + i) = 3;
          }
        }
        if (*(_DWORD *)v31 == 1 && (*(_DWORD *)(a2 + 52) == 1 || *(_DWORD *)(a2 + 56) == 1))
        {
          int v108 = *(_DWORD **)(a2 + 128);
          if (!v108)
          {
LABEL_266:
            int v110 = *(void **)(a2 + 136);
            if (v110)
            {
              free(v110);
              *(void *)(a2 + 136) = 0;
            }
LABEL_268:
            if ((v49 & 1) == 0)
            {
LABEL_175:
              if (v32 == 6)
              {
                int v89 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
                bzero(v89, 0xA28uLL);
                *((void *)a4 + 3) = v89;
                *((_DWORD *)v89 + 6) = 6;
                *((_DWORD *)v89 + 8) = 0;
                *((_DWORD *)v89 + 10) = 0;
                *((_WORD *)v89 + 24) = 258;
                LOBYTE(v88) = 1;
                *a4 = 1;
              }
              else
              {
                if (*(unsigned char *)(a2 + 40))
                {
                  int v115 = v9;
                  unint64_t v50 = 0;
                  uint64_t v51 = a2 + 88;
                  uint64_t v52 = 24;
                  do
                  {
                    long long v53 = (char *)malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
                    bzero(v53, 0xA28uLL);
                    *(void *)&a4[v52] = v53;
                    bzero(v53 + 24, 0xA08uLL);
                    *((_DWORD *)v53 + 6) = 5;
                    if (*(void *)(v51 - 8))
                    {
                      v53[144] = 1;
                      int v54 = *(_OWORD **)(v51 - 8);
                      long long v55 = v54[1];
                      *((_OWORD *)v53 + 3) = *v54;
                      *((_OWORD *)v53 + 4) = v55;
                      long long v56 = v54[2];
                      long long v57 = v54[3];
                      long long v58 = v54[5];
                      *((_OWORD *)v53 + 7) = v54[4];
                      *((_OWORD *)v53 + 8) = v58;
                      *((_OWORD *)v53 + 5) = v56;
                      *((_OWORD *)v53 + 6) = v57;
                      int v59 = *(void **)(v51 - 8);
                      if (v59)
                      {
                        free(v59);
                        *(void *)(v51 - 8) = 0;
                      }
                    }
                    if (*(void *)v51)
                    {
                      v53[544] = 1;
                      memcpy(v53 + 152, *(const void **)v51, 0x188uLL);
                      if (*(void *)v51)
                      {
                        free(*(void **)v51);
                        *(void *)uint64_t v51 = 0;
                      }
                    }
                    else if (*(void *)(v51 + 24) {
                           && (*(_DWORD *)(v51 + 76) == 3 || *(_DWORD *)(v51 + 80) == 3 || *(_DWORD *)(v51 + 84) == 3))
                    }
                    {
                      v53[544] = 1;
                      memcpy(v53 + 152, *(const void **)(v51 + 24), 0x188uLL);
                      int v60 = *(void **)(v51 + 24);
                      if (v60)
                      {
                        free(v60);
                        *(void *)(v51 + 24) = 0;
                      }
                    }
                    else if (*(_DWORD *)(v51 - 40) == 2)
                    {
                      v53[544] = 1;
                      v53[540] = 1;
                      *((_DWORD *)v53 + 127) = 1;
                      v53[512] = 0;
                    }
                    if (*(void *)(v51 + 8))
                    {
                      v53[1336] = 1;
                      int v61 = *(long long **)(v51 + 8);
                      long long v62 = *v61;
                      long long v63 = v61[1];
                      *(_OWORD *)(v53 + 1128) = v61[2];
                      *(_OWORD *)(v53 + 1112) = v63;
                      *(_OWORD *)(v53 + 1096) = v62;
                      long long v64 = v61[3];
                      long long v65 = v61[4];
                      long long v66 = v61[6];
                      *(_OWORD *)(v53 + 1176) = v61[5];
                      *(_OWORD *)(v53 + 1192) = v66;
                      *(_OWORD *)(v53 + 1144) = v64;
                      *(_OWORD *)(v53 + 1160) = v65;
                      long long v67 = v61[7];
                      long long v68 = v61[8];
                      long long v69 = v61[10];
                      *(_OWORD *)(v53 + 1240) = v61[9];
                      *(_OWORD *)(v53 + 1256) = v69;
                      *(_OWORD *)(v53 + 1208) = v67;
                      *(_OWORD *)(v53 + 1224) = v68;
                      long long v70 = v61[11];
                      long long v71 = v61[12];
                      long long v72 = v61[14];
                      *(_OWORD *)(v53 + 1304) = v61[13];
                      *(_OWORD *)(v53 + 1320) = v72;
                      *(_OWORD *)(v53 + 1272) = v70;
                      *(_OWORD *)(v53 + 1288) = v71;
                      unint64_t v73 = *(void **)(v51 + 8);
                      if (v73)
                      {
                        free(v73);
                        *(void *)(v51 + 8) = 0;
                      }
                    }
                    else if (*(void *)(v51 + 32))
                    {
                      v53[1336] = 1;
                      long long v74 = *(long long **)(v51 + 32);
                      long long v75 = *v74;
                      long long v76 = v74[1];
                      *(_OWORD *)(v53 + 1128) = v74[2];
                      *(_OWORD *)(v53 + 1112) = v76;
                      *(_OWORD *)(v53 + 1096) = v75;
                      long long v77 = v74[3];
                      long long v78 = v74[4];
                      long long v79 = v74[6];
                      *(_OWORD *)(v53 + 1176) = v74[5];
                      *(_OWORD *)(v53 + 1192) = v79;
                      *(_OWORD *)(v53 + 1144) = v77;
                      *(_OWORD *)(v53 + 1160) = v78;
                      long long v80 = v74[7];
                      long long v81 = v74[8];
                      long long v82 = v74[10];
                      *(_OWORD *)(v53 + 1240) = v74[9];
                      *(_OWORD *)(v53 + 1256) = v82;
                      *(_OWORD *)(v53 + 1208) = v80;
                      *(_OWORD *)(v53 + 1224) = v81;
                      long long v83 = v74[11];
                      long long v84 = v74[12];
                      long long v85 = v74[14];
                      *(_OWORD *)(v53 + 1304) = v74[13];
                      *(_OWORD *)(v53 + 1320) = v85;
                      *(_OWORD *)(v53 + 1272) = v83;
                      *(_OWORD *)(v53 + 1288) = v84;
                      unint64_t v86 = *(void **)(v51 + 32);
                      if (v86)
                      {
                        free(v86);
                        *(void *)(v51 + 32) = 0;
                      }
                    }
                    else if (*(_DWORD *)(v51 - 36) == 2)
                    {
                      v53[1336] = 1;
                      v53[1332] = 1;
                      *((_DWORD *)v53 + 321) = 1;
                      v53[1288] = 0;
                    }
                    if (*(void *)(v51 + 16))
                    {
                      v53[2128] = 1;
                      memcpy(v53 + 1864, *(const void **)(v51 + 16), 0x108uLL);
                      unint64_t v87 = *(void **)(v51 + 16);
                      if (v87)
                      {
                        free(v87);
                        *(void *)(v51 + 16) = 0;
                      }
                    }
                    else if (*(_DWORD *)(v51 - 32) == 2)
                    {
                      v53[2128] = 1;
                      v53[2124] = 1;
                      *((_DWORD *)v53 + 521) = 1;
                      v53[2088] = 0;
                    }
                    LOBYTE(v88) = *a4 + 1;
                    *a4 = v88;
                    ++v50;
                    v51 += 136;
                    v52 += 48;
                  }
                  while (v50 < *(unsigned __int8 *)(a2 + 40));
                  int v9 = v115;
                }
                else
                {
                  LOBYTE(v88) = *a4;
                }
                if (!(_BYTE)v88) {
                  goto LABEL_219;
                }
              }
              unint64_t v90 = 0;
              uint64_t v91 = 24;
              do
              {
                uint64_t v92 = *(void *)&a4[v91];
                *(_WORD *)(v92 + 2) = 1;
                *(_WORD *)uint64_t v92 = *(_WORD *)(a2 + 16);
                if (*(_DWORD *)(a2 + 48) != 1 && *(_DWORD *)(a2 + 52) != 1 && *(_DWORD *)(a2 + 56) != 1) {
                  *(unsigned char *)(v92 + 3) = v90 == v88 - 1;
                }
                *(unsigned char *)(v92 + 2592) = 1;
                *(_DWORD *)(v92 + 16) = 0;
                *(_DWORD *)(v92 + 24) = v32;
                uint64_t v93 = *(void *)&a4[v91];
                if ((*(_DWORD *)(v93 + 24) - 5) <= 1)
                {
                  *(_WORD *)(v93 + 8) = 256;
                  *(unsigned char *)(v93 + 6) = 1;
                }
                ++v90;
                unint64_t v88 = *a4;
                v91 += 48;
              }
              while (v90 < v88);
LABEL_219:
              uint64_t v12 = 1;
              goto LABEL_270;
            }
            goto LABEL_269;
          }
          *(_DWORD *)(a2 + 148) = *v108;
        }
        int v109 = *(void **)(a2 + 128);
        if (v109)
        {
          free(v109);
          *(void *)(a2 + 128) = 0;
        }
        goto LABEL_266;
      }
      if (*(_DWORD *)(a2 + 52) == 1 || *(_DWORD *)(a2 + 56) == 1) {
        goto LABEL_269;
      }
    }
    else
    {
      if (*(_DWORD *)(a2 + 52) != 1 && *(_DWORD *)(a2 + 56) != 1) {
        goto LABEL_103;
      }
      int v28 = (unsigned char *)(a2 + 144);
      if (*(unsigned char *)(a2 + 144) == 1)
      {
        uint64_t v114 = (int *)(v5 + 2);
        int v113 = v14;
        long long v31 = v9;
        memset(v120, 0, 3);
        uint64_t v29 = *(void *)(a2 + 88);
        BOOL v30 = v29 == 0;
        goto LABEL_143;
      }
    }
    if (!*(void *)(a2 + 88) && !*(void *)(a2 + 96) && !*(void *)(a2 + 104)) {
      goto LABEL_269;
    }
    unsigned __int8 v33 = *(unsigned char *)(a2 + 146) + 1;
    *(unsigned char *)(a2 + 146) = v33;
    unsigned int v34 = *(unsigned __int8 *)(a2 + 145);
    if (v34 != 255 && v34 <= v33)
    {
      uint64_t v35 = 0;
      char v36 = 0;
      char v37 = 0;
      __int16 v117 = 0;
      do
      {
        if (*(_DWORD *)((char *)v9 + v35) == 1)
        {
          if (!v35)
          {
            char v36 = 1;
            char v37 = 1;
          }
          *(_DWORD *)((char *)v9 + v35) = 5;
        }
        v35 += 4;
      }
      while (v35 != 12);
      char v116 = v36;
      if (v37 == 1)
      {
        uint64_t v38 = 0;
        uint64_t v39 = v5[2];
        do
        {
          if (*(&v116 + v38) == 1) {
            sub_24B47FC14(a1, v39, v38, 0);
          }
          ++v38;
        }
        while (v38 != 3);
      }
    }
    if (sub_24B485B90(v9)) {
      goto LABEL_174;
    }
    int v25 = *(_OWORD **)(a2 + 80);
    if (!v25)
    {
      int v25 = malloc_type_calloc(1uLL, 0x60uLL, 0x86CB5109uLL);
      _OWORD *v25 = 0u;
      v25[1] = 0u;
      v25[2] = 0u;
      v25[3] = 0u;
      v25[4] = 0u;
      v25[5] = 0u;
      *(void *)(a2 + 80) = v25;
    }
    *((unsigned char *)v25 + 32) = 0;
    __int16 v26 = 768;
    goto LABEL_126;
  }
  uint64_t v24 = *(void *)(a2 + 96);
  if (v24)
  {
    if (*(unsigned char *)(v24 + 184) == 1)
    {
LABEL_174:
      int v32 = 5;
      goto LABEL_175;
    }
    int v25 = *(_OWORD **)(a2 + 80);
    if (!v25)
    {
      int v25 = malloc_type_calloc(1uLL, 0x60uLL, 0x86CB5109uLL);
      _OWORD *v25 = 0u;
      v25[1] = 0u;
      v25[2] = 0u;
      v25[3] = 0u;
      v25[4] = 0u;
      v25[5] = 0u;
      *(void *)(a2 + 80) = v25;
    }
    *((unsigned char *)v25 + 32) = 0;
    __int16 v26 = 512;
LABEL_126:
    *((_WORD *)v25 + 24) = v26;
    *((unsigned char *)v25 + 50) = 1;
    *((unsigned char *)v25 + 52) = 0;
    goto LABEL_174;
  }
  if (*(_DWORD *)(a2 + 52) != 5) {
    goto LABEL_103;
  }
LABEL_269:
  sub_24B4B00A4(3819, "lpp_transaction.c");
  uint64_t v12 = 0;
LABEL_270:
  uint64_t v111 = 0;
  for (uint64_t j = 104; j != 110; j += 2)
  {
    if (*(_DWORD *)(a2 + 4 * v111 + 48) != 1
      && *((unsigned __int8 *)v5 + j) == *(unsigned __int8 *)(a2 + 16)
      && *((unsigned __int8 *)v5 + j + 1) == *(unsigned __int8 *)(a2 + 17))
    {
      *((unsigned char *)v5 + j) = 0;
      *((unsigned char *)v5 + j + 1) = 0;
      *((unsigned char *)v5 + v111 + 110) = 0;
    }
    ++v111;
  }
  if (*(_DWORD *)v9 != 1 && *(_DWORD *)(a2 + 52) != 1 && *(_DWORD *)(a2 + 56) != 1)
  {
    sub_24B4891F4(a2, *(_DWORD *)(a2 + 24), 2);
    *(_DWORD *)(a2 + 24) = 2;
    sub_24B485A98(a2);
  }
  return v12;
}

void sub_24B486B38(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if (!a2 || !a3) {
    return;
  }
  int v8 = *(void **)(a2 + 32);
  if (v8)
  {
    free(v8);
    *(void *)(a2 + 32) = 0;
  }
  if (a4 == 1) {
    uint64_t v9 = 64;
  }
  else {
    uint64_t v9 = 40;
  }
  if (a4 == 1) {
    int v10 = (void **)(a2 + 64);
  }
  else {
    int v10 = (void **)(a2 + 40);
  }
  sub_24B48B180(v10);
  int v11 = *(_DWORD *)(a2 + 12);
  if ((v11 - 1) < 2)
  {
    int v12 = *(_DWORD *)(a3 + 276);
    if (v12 != 1)
    {
      if (v12)
      {
        int v23 = malloc_type_calloc(1uLL, 0x188uLL, 0x86CB5109uLL);
        _OWORD *v23 = 0u;
        v23[1] = 0u;
        v23[2] = 0u;
        v23[3] = 0u;
        v23[4] = 0u;
        v23[5] = 0u;
        v23[6] = 0u;
        v23[7] = 0u;
        v23[8] = 0u;
        v23[9] = 0u;
        void v23[10] = 0u;
        v23[11] = 0u;
        v23[12] = 0u;
        v23[13] = 0u;
        v23[14] = 0u;
        v23[15] = 0u;
        uint8_t v23[16] = 0u;
        v23[17] = 0u;
        v23[18] = 0u;
        v23[19] = 0u;
        v23[20] = 0u;
        v23[21] = 0u;
        v23[22] = 0u;
        v23[23] = 0u;
        *((void *)v23 + 48) = 0;
        *(void *)(a2 + v9) = v23;
        *((unsigned char *)v23 + 388) = 1;
        *((unsigned char *)v23 + 360) = 1;
        *((_DWORD *)v23 + 89) = 1;
        return;
      }
      if ((*(unsigned char *)(a2 + 22) != 1 || (*(unsigned char *)(a3 + 128) & 1) == 0)
        && (*(unsigned char *)(a2 + 23) != 1 || (*(unsigned char *)(a3 + 128) & 0x10) == 0)
        && (*(unsigned char *)(a2 + 24) != 1 || (*(unsigned char *)(a3 + 128) & 0x20) == 0))
      {
LABEL_71:
        uint64_t v35 = malloc_type_calloc(1uLL, 0x60uLL, 0x86CB5109uLL);
        *uint64_t v35 = 0u;
        v35[1] = 0u;
        v35[2] = 0u;
        v35[3] = 0u;
        v35[4] = 0u;
        v35[5] = 0u;
        *(void *)(a2 + 32) = v35;
        int v36 = *(unsigned __int8 *)(a3 + 46);
        *((unsigned char *)v35 + 48) = v36;
        if (v36 == 1)
        {
          if (*(_DWORD *)(a3 + 60) == 1)
          {
            if (*(_DWORD *)(a3 + 72) == 1)
            {
              *((_DWORD *)v35 + 9) = 3;
              *((_WORD *)v35 + 20) = *(_WORD *)(a3 + 48);
              *(_WORD *)(*(void *)(a2 + 32) + 42) = *(_WORD *)(a3 + 50);
              *(unsigned char *)(*(void *)(a2 + 32) + 45) = *(unsigned char *)(a3 + 68);
              *(unsigned char *)(*(void *)(a2 + 32) + 44) = *(_DWORD *)(a3 + 64);
              *(unsigned char *)(*(void *)(a2 + 32) + 46) = *(unsigned char *)(a3 + 56);
              *(unsigned char *)(*(void *)(a2 + 32) + 47) = *(unsigned char *)(a3 + 76);
              goto LABEL_80;
            }
            *((_DWORD *)v35 + 9) = 1;
            *((_WORD *)v35 + 20) = *(_WORD *)(a3 + 48);
            *(_WORD *)(*(void *)(a2 + 32) + 42) = *(_WORD *)(a3 + 50);
            *(unsigned char *)(*(void *)(a2 + 32) + 45) = *(unsigned char *)(a3 + 68);
            int v37 = *(_DWORD *)(a3 + 64);
          }
          else
          {
            if (*(_DWORD *)(a3 + 52) != 1)
            {
              *((_WORD *)v35 + 20) = *(_WORD *)(a3 + 48);
              *(_WORD *)(*(void *)(a2 + 32) + 42) = *(_WORD *)(a3 + 50);
              goto LABEL_80;
            }
            *((_DWORD *)v35 + 9) = 2;
            *((_WORD *)v35 + 20) = *(_WORD *)(a3 + 48);
            *(_WORD *)(*(void *)(a2 + 32) + 42) = *(_WORD *)(a3 + 50);
            LOBYTE(v37) = *(unsigned char *)(a3 + 56);
          }
          *(unsigned char *)(*(void *)(a2 + 32) + 44) = v37;
        }
LABEL_80:
        uint64_t v38 = *(void *)(a2 + 32);
        if (v38)
        {
          *(unsigned char *)(v38 + 50) = 0;
          *(unsigned char *)(v38 + 32) = 1;
          switch(*(_WORD *)(a3 + 22))
          {
            case 0:
              *(_DWORD *)uint64_t v38 = 0;
              *(unsigned char *)(v38 + 8) = *(unsigned char *)(a3 + 24);
              *(_DWORD *)(*(void *)(a2 + 32) + 12) = *(_DWORD *)(a3 + 28);
              *(_DWORD *)(*(void *)(a2 + 32) + 16) = *(_DWORD *)(a3 + 32);
              break;
            case 1:
              *(_DWORD *)uint64_t v38 = 1;
              *(unsigned char *)(v38 + 8) = *(unsigned char *)(a3 + 24);
              *(_DWORD *)(*(void *)(a2 + 32) + 12) = *(_DWORD *)(a3 + 28);
              *(_DWORD *)(*(void *)(a2 + 32) + 16) = *(_DWORD *)(a3 + 32);
              *(unsigned char *)(*(void *)(a2 + 32) + 20) = *(unsigned char *)(a3 + 44);
              break;
            case 3:
              *(_DWORD *)uint64_t v38 = 2;
              *(unsigned char *)(v38 + 8) = *(unsigned char *)(a3 + 24);
              *(_DWORD *)(*(void *)(a2 + 32) + 12) = *(_DWORD *)(a3 + 28);
              *(_DWORD *)(*(void *)(a2 + 32) + 16) = *(_DWORD *)(a3 + 32);
              *(unsigned char *)(*(void *)(a2 + 32) + 20) = *(unsigned char *)(a3 + 36);
              *(unsigned char *)(*(void *)(a2 + 32) + 21) = *(unsigned char *)(a3 + 37);
              *(unsigned char *)(*(void *)(a2 + 32) + 22) = *(unsigned char *)(a3 + 38);
              *(unsigned char *)(*(void *)(a2 + 32) + 23) = *(unsigned char *)(a3 + 45);
              break;
            case 5:
              int v39 = 3;
              goto LABEL_91;
            case 8:
              *(_DWORD *)uint64_t v38 = 4;
              *(unsigned char *)(v38 + 8) = *(unsigned char *)(a3 + 24);
              *(_DWORD *)(*(void *)(a2 + 32) + 12) = *(_DWORD *)(a3 + 28);
              *(_DWORD *)(*(void *)(a2 + 32) + 16) = *(_DWORD *)(a3 + 32);
              *(unsigned char *)(*(void *)(a2 + 32) + 20) = *(unsigned char *)(a3 + 39);
              *(_WORD *)(*(void *)(a2 + 32) + 22) = *(_DWORD *)(a3 + 40);
              break;
            case 9:
              *(_DWORD *)uint64_t v38 = 5;
              *(unsigned char *)(v38 + 8) = *(unsigned char *)(a3 + 24);
              *(_DWORD *)(*(void *)(a2 + 32) + 12) = *(_DWORD *)(a3 + 28);
              *(_DWORD *)(*(void *)(a2 + 32) + 16) = *(_DWORD *)(a3 + 32);
              *(unsigned char *)(*(void *)(a2 + 32) + 20) = *(unsigned char *)(a3 + 39);
              *(_WORD *)(*(void *)(a2 + 32) + 22) = *(_DWORD *)(a3 + 40);
              *(unsigned char *)(*(void *)(a2 + 32) + 24) = *(unsigned char *)(a3 + 36);
              *(unsigned char *)(*(void *)(a2 + 32) + 25) = *(unsigned char *)(a3 + 37);
              *(unsigned char *)(*(void *)(a2 + 32) + 26) = *(unsigned char *)(a3 + 38);
              *(unsigned char *)(*(void *)(a2 + 32) + 27) = *(unsigned char *)(a3 + 44);
              *(unsigned char *)(*(void *)(a2 + 32) + 28) = *(unsigned char *)(a3 + 45);
              break;
            case 0xA:
              int v39 = 6;
LABEL_91:
              *(_DWORD *)uint64_t v38 = v39;
              break;
            default:
              break;
          }
        }
        uint64_t v40 = *(void *)(a2 + 32);
        if (*(unsigned char *)(a1 + 60) == 1)
        {
          *(unsigned char *)(v40 + 72) = 1;
          if (*(_WORD *)(a3 + 288))
          {
            *(unsigned char *)(v40 + 88) = 1;
            int v41 = (char *)malloc_type_calloc(1uLL, 0xEuLL, 0x86CB5109uLL);
            *(void *)int v41 = 0;
            *(void *)(v41 + 6) = 0;
            unsigned __int16 v42 = *(_WORD *)(a3 + 290);
            unsigned __int16 v43 = *(_WORD *)(a3 + 292);
            unsigned __int16 v44 = *(_WORD *)(a3 + 294);
            unsigned __int16 v58 = *(_WORD *)(a3 + 296);
            unsigned __int16 v59 = *(_WORD *)(a3 + 298);
            unsigned int v45 = *(unsigned __int16 *)(a3 + 288) / 0xAu;
            snprintf(__str, 2uLL, "%.1d", *(_WORD *)(a3 + 288) % 0xAu);
            snprintf(v61, 2uLL, "%.1d", (unsigned __int16)(v45 - 10 * ((6554 * v45) >> 16)));
            char *v41 = v61[0];
            v41[1] = __str[0];
            snprintf(__str, 2uLL, "%.1d", v42 % 0xAu);
            snprintf(v61, 2uLL, "%.1d", (unsigned __int16)(v42 / 0xAu - 10 * ((6554 * (v42 / 0xAu)) >> 16)));
            v41[2] = v61[0];
            v41[3] = __str[0];
            snprintf(__str, 2uLL, "%.1d", v43 % 0xAu);
            snprintf(v61, 2uLL, "%.1d", (unsigned __int16)(v43 / 0xAu - 10 * ((6554 * (v43 / 0xAu)) >> 16)));
            v41[4] = v61[0];
            v41[5] = __str[0];
            snprintf(__str, 2uLL, "%.1d", v44 % 0xAu);
            snprintf(v61, 2uLL, "%.1d", (unsigned __int16)(v44 / 0xAu - 10 * ((6554 * (v44 / 0xAu)) >> 16)));
            v41[6] = v61[0];
            v41[7] = __str[0];
            snprintf(__str, 2uLL, "%.1d", v58 % 0xAu);
            snprintf(v61, 2uLL, "%.1d", (unsigned __int16)(v58 / 0xAu - 10 * ((6554 * (v58 / 0xAu)) >> 16)));
            v41[8] = v61[0];
            v41[9] = __str[0];
            snprintf(__str, 2uLL, "%.1d", v59 % 0xAu);
            snprintf(v61, 2uLL, "%.1d", (unsigned __int16)(v59 / 0xAu - 10 * ((6554 * (v59 / 0xAu)) >> 16)));
            v41[10] = v61[0];
            v41[11] = __str[0];
            *((_WORD *)v41 + 6) = 90;
            *(void *)(*(void *)(a2 + 32) + 80) = v41;
          }
          else
          {
            *(unsigned char *)(v40 + 88) = 0;
          }
        }
        else
        {
          *(unsigned char *)(v40 + 72) = 0;
        }
        return;
      }
      int v13 = malloc_type_calloc(1uLL, 0x188uLL, 0x86CB5109uLL);
      int v14 = v13;
      *int v13 = 0u;
      v13[1] = 0u;
      v13[2] = 0u;
      v13[3] = 0u;
      v13[4] = 0u;
      v13[5] = 0u;
      v13[6] = 0u;
      v13[7] = 0u;
      v13[8] = 0u;
      v13[9] = 0u;
      v13[10] = 0u;
      v13[11] = 0u;
      v13[12] = 0u;
      v13[13] = 0u;
      v13[14] = 0u;
      v13[15] = 0u;
      v13[16] = 0u;
      v13[17] = 0u;
      v13[18] = 0u;
      v13[19] = 0u;
      v13[20] = 0u;
      v13[21] = 0u;
      v13[22] = 0u;
      v13[23] = 0u;
      *((void *)v13 + 48) = 0;
      *(void *)(a2 + v9) = v13;
      *((unsigned char *)v13 + 352) = 1;
      if ((*(unsigned char *)(a2 + 22) != 1 || (char v15 = *(unsigned char *)(a3 + 128)) == 0)
        && (*(unsigned char *)(a2 + 23) != 1 || (char v15 = *(unsigned char *)(a3 + 128)) == 0))
      {
        if (*(unsigned char *)(a2 + 24) != 1) {
          goto LABEL_36;
        }
        char v15 = *(unsigned char *)(a3 + 128);
        if (!v15) {
          goto LABEL_36;
        }
      }
      unsigned int v16 = v15 & 1;
      if ((v15 & 0x10) != 0) {
        unsigned int v16 = 5;
      }
      size_t v17 = (v15 & 0x20) != 0 ? 6 : v16;
      if (!v17) {
        goto LABEL_36;
      }
      *((_DWORD *)v13 + 85) = 1;
      *((_DWORD *)v13 + 84) = v17;
      int v18 = malloc_type_calloc(1uLL, v17, 0x86CB5109uLL);
      bzero(v18, v17);
      *((void *)v14 + 43) = v18;
      char v19 = *(unsigned char *)(a3 + 128);
      if (v19)
      {
        unsigned char *v18 = 1;
        char v19 = *(unsigned char *)(a3 + 128);
        if ((v19 & 0x10) == 0)
        {
LABEL_34:
          if ((v19 & 0x20) != 0) {
LABEL_35:
          }
            *(unsigned char *)(*((void *)v14 + 43) + 5) = 1;
LABEL_36:
          uint64_t v20 = *(unsigned int *)(a3 + 124);
          if (v20 == 5)
          {
            *((_DWORD *)v14 + 46) = *(_DWORD *)(a3 + 16) % 0x36EE80u;
            *((unsigned char *)v14 + 190) = 0;
            int v21 = *(unsigned __int8 *)(a3 + 20);
            if (v21 == 255)
            {
              char v22 = 0;
            }
            else
            {
              *((unsigned char *)v14 + 191) = v21;
              char v22 = 1;
            }
            char v32 = 0;
            *((unsigned char *)v14 + 192) = v22;
          }
          else
          {
            *((_DWORD *)v14 + 46) = *(_DWORD *)(a3 + 116);
            int v25 = *(unsigned __int16 *)(a3 + 120);
            if (v25 == 0xFFFF)
            {
              char v26 = 0;
            }
            else
            {
              *((_WORD *)v14 + 94) = v25;
              char v26 = 1;
            }
            *((unsigned char *)v14 + 190) = v26;
            int v33 = *(unsigned __int8 *)(a3 + 122);
            if (v33 == 255)
            {
              char v34 = 0;
            }
            else
            {
              *((unsigned char *)v14 + 191) = v33;
              char v34 = 1;
            }
            *((unsigned char *)v14 + 192) = v34;
            char v32 = byte_24B4BF887[v20];
          }
          *((unsigned char *)v14 + 193) = v32;
          *((unsigned char *)v14 + 328) = 0;
          goto LABEL_71;
        }
      }
      else if ((*(unsigned char *)(a3 + 128) & 0x10) == 0)
      {
        goto LABEL_34;
      }
      *(unsigned char *)(*((void *)v14 + 43) + 4) = 1;
      if ((*(unsigned char *)(a3 + 128) & 0x20) == 0) {
        goto LABEL_36;
      }
      goto LABEL_35;
    }
    goto LABEL_41;
  }
  if (v11)
  {
    sub_24B4B00A4(6680, "lpp_transaction.c");
  }
  else
  {
    if (*(_DWORD *)(a3 + 276))
    {
LABEL_41:
      if (*(_DWORD *)a2 == 1) {
        *(_DWORD *)a2 = 4;
      }
      return;
    }
    if ((*(unsigned char *)(a3 + 136) & 1) != 0 && !*(_WORD *)(a3 + 144)
      || (*(unsigned char *)(a3 + 136) & 2) != 0 && !*(_WORD *)(a3 + 240))
    {
      int v27 = 1;
      int v28 = malloc_type_calloc(1uLL, 0x188uLL, 0x86CB5109uLL);
      uint64_t v29 = v28;
      _OWORD *v28 = 0u;
      v28[1] = 0u;
      v28[2] = 0u;
      v28[3] = 0u;
      void v28[4] = 0u;
      v28[5] = 0u;
      v28[6] = 0u;
      v28[7] = 0u;
      v28[8] = 0u;
      v28[9] = 0u;
      v28[10] = 0u;
      v28[11] = 0u;
      v28[12] = 0u;
      v28[13] = 0u;
      v28[14] = 0u;
      v28[15] = 0u;
      v28[16] = 0u;
      v28[17] = 0u;
      v28[18] = 0u;
      v28[19] = 0u;
      v28[20] = 0u;
      v28[21] = 0u;
      v28[22] = 0u;
      v28[23] = 0u;
      *((void *)v28 + 48) = 0;
      *(void *)(a2 + v9) = v28;
      *((unsigned char *)v28 + 176) = 1;
      char v30 = *(unsigned char *)(a3 + 136);
      if (v30)
      {
        if (*(_WORD *)(a3 + 144))
        {
          unsigned __int8 v31 = 0;
          int v27 = 1;
        }
        else
        {
          if (*(_DWORD *)(a3 + 156) == 1)
          {
            *(_DWORD *)int v28 = *(_DWORD *)(a3 + 160);
            int v46 = *(unsigned __int8 *)(a3 + 167);
          }
          else
          {
            *(_DWORD *)int v28 = *(_DWORD *)(a3 + 148) % 0x36EE80u;
            int v46 = *(unsigned __int8 *)(a3 + 152);
          }
          if (v46 != 255)
          {
            *((unsigned char *)v28 + 8) = 1;
            *((unsigned char *)v28 + 7) = v46;
          }
          int v47 = *(unsigned __int16 *)(a3 + 164);
          int v27 = 0;
          if (v47 == 0xFFFF)
          {
            *((unsigned char *)v28 + 6) = 0;
            unsigned __int8 v31 = 1;
          }
          else
          {
            unsigned __int8 v31 = 1;
            *((unsigned char *)v28 + 6) = 1;
            *((_WORD *)v28 + 2) = v47;
          }
        }
      }
      else
      {
        unsigned __int8 v31 = 0;
      }
      if ((v30 & 2) != 0)
      {
        char v48 = *(unsigned char *)(a3 + 256);
        if (v48)
        {
          if (!*(_WORD *)(a3 + 240))
          {
            if (v27)
            {
              if (*(unsigned char *)(a3 + 242) == 1) {
                char v49 = byte_24B4BF887[*(unsigned int *)(a3 + 244)];
              }
              else {
                char v49 = 3;
              }
              *((unsigned char *)v28 + 9) = v49;
              *(_DWORD *)int v28 = *(_DWORD *)(a3 + 248);
              int v50 = *(unsigned __int8 *)(a3 + 255);
              if (v50 == 255)
              {
                char v51 = 0;
              }
              else
              {
                *((unsigned char *)v28 + 7) = v50;
                char v51 = 1;
              }
              *((unsigned char *)v28 + 8) = v51;
              int v52 = *(unsigned __int16 *)(a3 + 252);
              if (v52 == 0xFFFF)
              {
                *((unsigned char *)v28 + 6) = 0;
              }
              else
              {
                *((unsigned char *)v28 + 6) = 1;
                *((_WORD *)v28 + 2) = v52;
              }
            }
            v31 += v48;
          }
        }
      }
      if (v31)
      {
        uint64_t v53 = v31;
        *((_DWORD *)v28 + 42) = v31;
        *((_DWORD *)v28 + 43) = 1;
        int v54 = (char *)malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
        *(_OWORD *)(v54 + 8) = 0u;
        *(_OWORD *)(v54 + 24) = 0u;
        *((void *)v29 + 19) = v54;
        *(void *)int v54 = 0;
        *((void *)v29 + 20) = v54;
        if (v53 != 1)
        {
          uint64_t v55 = v53 - 1;
          do
          {
            long long v56 = malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
            _OWORD *v56 = 0u;
            v56[1] = 0u;
            *((void *)v56 + 4) = 0;
            **((void **)v29 + 20) = v56;
            *((void *)v29 + 20) = v56;
            --v55;
          }
          while (v55);
        }
        if ((*(unsigned char *)(a3 + 136) & 1) != 0 && !*(_WORD *)(a3 + 144))
        {
          sub_24B48803C(*((void *)v29 + 19), a3 + 8);
          int v57 = 1;
          if ((*(unsigned char *)(a3 + 136) & 2) == 0) {
            return;
          }
        }
        else
        {
          int v57 = 0;
          if ((*(unsigned char *)(a3 + 136) & 2) == 0) {
            return;
          }
        }
        if (!*(_WORD *)(a3 + 240))
        {
          sub_24B488180((void *)v29 + 19, a3 + 8, v57);
        }
      }
    }
    else if ((*(unsigned char *)(a3 + 136) & 1) != 0 && *(_WORD *)(a3 + 144) {
           || (*(unsigned char *)(a3 + 136) & 2) != 0 && *(_WORD *)(a3 + 240))
    }
    {
      uint64_t v24 = malloc_type_calloc(1uLL, 0x188uLL, 0x86CB5109uLL);
      *uint64_t v24 = 0u;
      v24[1] = 0u;
      v24[2] = 0u;
      v24[3] = 0u;
      v24[4] = 0u;
      v24[5] = 0u;
      v24[6] = 0u;
      v24[7] = 0u;
      v24[8] = 0u;
      v24[9] = 0u;
      void v24[10] = 0u;
      v24[11] = 0u;
      unsigned char v24[12] = 0u;
      v24[13] = 0u;
      v24[14] = 0u;
      v24[15] = 0u;
      v24[16] = 0u;
      v24[17] = 0u;
      v24[18] = 0u;
      v24[19] = 0u;
      v24[20] = 0u;
      v24[21] = 0u;
      v24[22] = 0u;
      v24[23] = 0u;
      *((void *)v24 + 48) = 0;
      *(void *)(a2 + v9) = v24;
      *((unsigned char *)v24 + 388) = 1;
      *((_DWORD *)v24 + 89) = 1;
      *((unsigned char *)v24 + 360) = 1;
    }
  }
}

void sub_24B4877D4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v8 = (void *)(a2 + 48);
  uint64_t v9 = (void *)(a2 + 72);
  if (a4 == 1) {
    int v10 = (void **)(a2 + 72);
  }
  else {
    int v10 = (void **)(a2 + 48);
  }
  sub_24B48B1CC(v10);
  int v11 = *(_DWORD *)(a3 + 4);
  if (v11 == 7)
  {
    int v13 = 5;
    goto LABEL_17;
  }
  if (v11)
  {
    if (a4 == 1)
    {
      if (!*v9)
      {
        int v12 = malloc_type_calloc(1uLL, 0xF0uLL, 0x86CB5109uLL);
        *int v12 = 0u;
        v12[1] = 0u;
        _DWORD v12[2] = 0u;
        v12[3] = 0u;
        v12[4] = 0u;
        v12[5] = 0u;
        v12[6] = 0u;
        v12[7] = 0u;
        v12[8] = 0u;
        v12[9] = 0u;
        v12[10] = 0u;
        v12[11] = 0u;
        v12[12] = 0u;
        v12[13] = 0u;
        v12[14] = 0u;
        *uint64_t v9 = v12;
LABEL_22:
        *(_DWORD *)(a2 + 4) = 4;
LABEL_23:
        *((unsigned char *)v12 + 184) = 0;
        *((unsigned char *)v12 + 236) = 1;
        *((_DWORD *)v12 + 47) = 1;
        *((unsigned char *)v12 + 192) = 0;
        return;
      }
    }
    else if (!*v8)
    {
      int v12 = malloc_type_calloc(1uLL, 0xF0uLL, 0x86CB5109uLL);
      *int v12 = 0u;
      v12[1] = 0u;
      _DWORD v12[2] = 0u;
      v12[3] = 0u;
      v12[4] = 0u;
      v12[5] = 0u;
      v12[6] = 0u;
      v12[7] = 0u;
      v12[8] = 0u;
      v12[9] = 0u;
      v12[10] = 0u;
      v12[11] = 0u;
      v12[12] = 0u;
      v12[13] = 0u;
      v12[14] = 0u;
      *int v8 = v12;
      goto LABEL_22;
    }
    int v13 = 4;
LABEL_17:
    *(_DWORD *)(a2 + 4) = v13;
    return;
  }
  if (*(unsigned char *)(a3 + 8))
  {
    if (*(unsigned char *)(a3 + 81)) {
      return;
    }
    if (a4 == 1)
    {
      if (*v9) {
        return;
      }
      int v12 = malloc_type_calloc(1uLL, 0xF0uLL, 0x86CB5109uLL);
      *int v12 = 0u;
      v12[1] = 0u;
      _DWORD v12[2] = 0u;
      v12[3] = 0u;
      v12[4] = 0u;
      v12[5] = 0u;
      v12[6] = 0u;
      v12[7] = 0u;
      v12[8] = 0u;
      v12[9] = 0u;
      v12[10] = 0u;
      v12[11] = 0u;
      v12[12] = 0u;
      v12[13] = 0u;
      v12[14] = 0u;
      *uint64_t v9 = v12;
      goto LABEL_23;
    }
    if (!*v8)
    {
      int v12 = malloc_type_calloc(1uLL, 0xF0uLL, 0x86CB5109uLL);
      *int v12 = 0u;
      v12[1] = 0u;
      _DWORD v12[2] = 0u;
      v12[3] = 0u;
      v12[4] = 0u;
      v12[5] = 0u;
      v12[6] = 0u;
      v12[7] = 0u;
      v12[8] = 0u;
      v12[9] = 0u;
      v12[10] = 0u;
      v12[11] = 0u;
      v12[12] = 0u;
      v12[13] = 0u;
      v12[14] = 0u;
      *int v8 = v12;
      goto LABEL_23;
    }
  }
  else
  {
    if (a4 == 1)
    {
      if (*v9) {
        return;
      }
      int v14 = (int *)malloc_type_calloc(1uLL, 0xF0uLL, 0x86CB5109uLL);
      *(_OWORD *)int v14 = 0u;
      *((_OWORD *)v14 + 1) = 0u;
      *((_OWORD *)v14 + 2) = 0u;
      *((_OWORD *)v14 + 3) = 0u;
      *((_OWORD *)v14 + 4) = 0u;
      *((_OWORD *)v14 + 5) = 0u;
      *((_OWORD *)v14 + 6) = 0u;
      *((_OWORD *)v14 + 7) = 0u;
      *((_OWORD *)v14 + 8) = 0u;
      *((_OWORD *)v14 + 9) = 0u;
      *((_OWORD *)v14 + 10) = 0u;
      *((_OWORD *)v14 + 11) = 0u;
      *((_OWORD *)v14 + 12) = 0u;
      *((_OWORD *)v14 + 13) = 0u;
      *((_OWORD *)v14 + 14) = 0u;
      *uint64_t v9 = v14;
    }
    else
    {
      if (*v8) {
        return;
      }
      int v14 = (int *)malloc_type_calloc(1uLL, 0xF0uLL, 0x86CB5109uLL);
      *(_OWORD *)int v14 = 0u;
      *((_OWORD *)v14 + 1) = 0u;
      *((_OWORD *)v14 + 2) = 0u;
      *((_OWORD *)v14 + 3) = 0u;
      *((_OWORD *)v14 + 4) = 0u;
      *((_OWORD *)v14 + 5) = 0u;
      *((_OWORD *)v14 + 6) = 0u;
      *((_OWORD *)v14 + 7) = 0u;
      *((_OWORD *)v14 + 8) = 0u;
      *((_OWORD *)v14 + 9) = 0u;
      *((_OWORD *)v14 + 10) = 0u;
      *((_OWORD *)v14 + 11) = 0u;
      *((_OWORD *)v14 + 12) = 0u;
      *((_OWORD *)v14 + 13) = 0u;
      *((_OWORD *)v14 + 14) = 0u;
      *int v8 = v14;
    }
    *((unsigned char *)v14 + 184) = 1;
    *((unsigned char *)v14 + 236) = 0;
    *((unsigned char *)v14 + 152) = 0;
    if (*(unsigned char *)(a3 + 16) == 1)
    {
      if (*(void *)(a3 + 64))
      {
        *((unsigned char *)v14 + 152) = 1;
        uint64_t v15 = (uint64_t)v14;
      }
      else
      {
        *((void *)v14 + 22) = 0x100000001;
        unsigned int v16 = (char *)malloc_type_calloc(1uLL, 0xA0uLL, 0x86CB5109uLL);
        *(_OWORD *)(v16 + 24) = 0u;
        *(_OWORD *)(v16 + 40) = 0u;
        *(_OWORD *)(v16 + 56) = 0u;
        *(_OWORD *)(v16 + 72) = 0u;
        *(_OWORD *)(v16 + 88) = 0u;
        *(_OWORD *)(v16 + 104) = 0u;
        *(_OWORD *)(v16 + 120) = 0u;
        *(_OWORD *)(v16 + 136) = 0u;
        *((void *)v16 + 19) = 0;
        *(_OWORD *)(v16 + 8) = 0u;
        uint64_t v15 = (uint64_t)(v16 + 8);
        *(void *)unsigned int v16 = 0;
        *((void *)v14 + 20) = v16;
        *((void *)v14 + 21) = v16;
      }
      sub_24B4884A4(v15, a3 + 20);
    }
    if (*(void *)(a3 + 64))
    {
      *((unsigned char *)v14 + 184) = 1;
      unsigned int v17 = *(unsigned __int8 *)(a3 + 60);
      if (v17 >= 0x20) {
        unsigned int v17 = 32;
      }
      v14[44] = v17;
      if (*(unsigned char *)(a1 + 62))
      {
        unsigned int v18 = *(unsigned __int8 *)(a1 + 63);
        if (v17 > v18)
        {
          v14[44] = v18;
          unsigned int v17 = v18;
        }
      }
      if (v17)
      {
        v14[45] = 1;
        char v19 = (char *)malloc_type_calloc(1uLL, 0xA0uLL, 0x86CB5109uLL);
        *(_OWORD *)(v19 + 8) = 0u;
        *(_OWORD *)(v19 + 24) = 0u;
        *(_OWORD *)(v19 + 40) = 0u;
        *(_OWORD *)(v19 + 56) = 0u;
        *(_OWORD *)(v19 + 72) = 0u;
        *(_OWORD *)(v19 + 88) = 0u;
        *(_OWORD *)(v19 + 104) = 0u;
        *(_OWORD *)(v19 + 120) = 0u;
        *(_OWORD *)(v19 + 136) = 0u;
        *((void *)v19 + 19) = 0;
        *(void *)char v19 = 0;
        *((void *)v14 + 20) = v19;
        *((void *)v14 + 21) = v19;
        LODWORD(v20) = v14[44];
        if (v20 >= 2)
        {
          unint64_t v21 = 1;
          do
          {
            char v22 = malloc_type_calloc(1uLL, 0xA0uLL, 0x86CB5109uLL);
            *char v22 = 0u;
            v22[1] = 0u;
            v22[2] = 0u;
            v22[3] = 0u;
            v22[4] = 0u;
            v22[5] = 0u;
            v22[6] = 0u;
            v22[7] = 0u;
            v22[8] = 0u;
            v22[9] = 0u;
            **((void **)v14 + 21) = v22;
            *((void *)v14 + 21) = v22;
            ++v21;
            unint64_t v20 = v14[44];
          }
          while (v21 < v20);
        }
        if ((int)v20 >= 1)
        {
          int v23 = 0;
          uint64_t v24 = v14 + 40;
          uint64_t v25 = *(void *)(a3 + 64);
          do
          {
            uint64_t v24 = (void *)*v24;
            sub_24B4884A4((uint64_t)(v24 + 1), v25);
            ++v23;
            v25 += 40;
          }
          while (v14[44] > v23);
        }
      }
    }
  }
}

void sub_24B487BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = (int **)(a2 + 56);
  sub_24B48B218((void **)(a2 + 56));
  if (*(_DWORD *)(a3 + 4))
  {
    int v7 = (int *)malloc_type_calloc(1uLL, 0x108uLL, 0x86CB5109uLL);
    *(_OWORD *)int v7 = 0u;
    *((_OWORD *)v7 + 1) = 0u;
    *((_OWORD *)v7 + 2) = 0u;
    *((_OWORD *)v7 + 3) = 0u;
    *((_OWORD *)v7 + 4) = 0u;
    *((_OWORD *)v7 + 5) = 0u;
    *((_OWORD *)v7 + 6) = 0u;
    *((_OWORD *)v7 + 7) = 0u;
    *((_OWORD *)v7 + 8) = 0u;
    *((_OWORD *)v7 + 9) = 0u;
    *((_OWORD *)v7 + 10) = 0u;
    *((_OWORD *)v7 + 11) = 0u;
    *((_OWORD *)v7 + 12) = 0u;
    *((_OWORD *)v7 + 13) = 0u;
    *((_OWORD *)v7 + 14) = 0u;
    *((_OWORD *)v7 + 15) = 0u;
    *((void *)v7 + 32) = 0;
    *(void *)(a2 + 56) = v7;
    *(_DWORD *)(a2 + 8) = 4;
LABEL_4:
    *((unsigned char *)v7 + 216) = 0;
    *((unsigned char *)v7 + 260) = 1;
    v7[55] = 1;
    *((unsigned char *)v7 + 224) = 0;
    return;
  }
  int v8 = *(unsigned __int8 *)(a3 + 8);
  uint64_t v9 = (int *)malloc_type_calloc(1uLL, 0x108uLL, 0x86CB5109uLL);
  int v7 = v9;
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  *((_OWORD *)v9 + 4) = 0u;
  *((_OWORD *)v9 + 5) = 0u;
  *((_OWORD *)v9 + 6) = 0u;
  *((_OWORD *)v9 + 7) = 0u;
  *((_OWORD *)v9 + 8) = 0u;
  *((_OWORD *)v9 + 9) = 0u;
  *((_OWORD *)v9 + 10) = 0u;
  *((_OWORD *)v9 + 11) = 0u;
  *((_OWORD *)v9 + 12) = 0u;
  *((_OWORD *)v9 + 13) = 0u;
  *((_OWORD *)v9 + 14) = 0u;
  *((_OWORD *)v9 + 15) = 0u;
  *((void *)v9 + 32) = 0;
  *int v6 = v9;
  if (v8) {
    goto LABEL_4;
  }
  *((unsigned char *)v9 + 216) = 1;
  *((unsigned char *)v9 + 208) = 0;
  sub_24B488778((uint64_t)v9, a3 + 16);
  if (*(void *)(a3 + 104))
  {
    unsigned int v10 = *(unsigned __int8 *)(a3 + 96);
    if (*(unsigned char *)(a3 + 96))
    {
      *((unsigned char *)v7 + 208) = 1;
      unsigned int v11 = v10 >= 0x20 ? 32 : v10;
      v7[50] = v11;
      if (!*(unsigned char *)(a1 + 66) || (unsigned int v12 = *(unsigned __int8 *)(a1 + 67), v11 <= v12) || (v7[50] = v12) != 0)
      {
        v7[51] = 1;
        int v13 = (char *)malloc_type_calloc(1uLL, 0xC0uLL, 0x86CB5109uLL);
        *(_OWORD *)(v13 + 8) = 0u;
        *(_OWORD *)(v13 + 24) = 0u;
        *(_OWORD *)(v13 + 40) = 0u;
        *(_OWORD *)(v13 + 56) = 0u;
        *(_OWORD *)(v13 + 72) = 0u;
        *(_OWORD *)(v13 + 88) = 0u;
        *(_OWORD *)(v13 + 104) = 0u;
        *(_OWORD *)(v13 + 120) = 0u;
        *(_OWORD *)(v13 + 136) = 0u;
        *(_OWORD *)(v13 + 152) = 0u;
        *(_OWORD *)(v13 + 168) = 0u;
        *((void *)v13 + 23) = 0;
        *(void *)int v13 = 0;
        *((void *)v7 + 23) = v13;
        *((void *)v7 + 24) = v13;
        LODWORD(v14) = v7[50];
        if (v14 >= 2)
        {
          unint64_t v15 = 1;
          do
          {
            unsigned int v16 = malloc_type_calloc(1uLL, 0xC0uLL, 0x86CB5109uLL);
            *unsigned int v16 = 0u;
            v16[1] = 0u;
            v16[2] = 0u;
            v16[3] = 0u;
            v16[4] = 0u;
            v16[5] = 0u;
            v16[6] = 0u;
            v16[7] = 0u;
            v16[8] = 0u;
            v16[9] = 0u;
            v16[10] = 0u;
            v16[11] = 0u;
            **((void **)v7 + 24) = v16;
            *((void *)v7 + 24) = v16;
            ++v15;
            unint64_t v14 = v7[50];
          }
          while (v15 < v14);
        }
        if ((int)v14 >= 1)
        {
          int v17 = 0;
          unsigned int v18 = v7 + 46;
          uint64_t v19 = *(void *)(a3 + 104);
          do
          {
            unsigned int v18 = (void *)*v18;
            sub_24B488778((uint64_t)(v18 + 1), v19);
            ++v17;
            v19 += 80;
          }
          while (v7[50] > v17);
        }
      }
    }
  }
}

uint64_t sub_24B487E38(uint64_t result, unsigned __int8 *a2, uint64_t a3, int a4)
{
  if (a4 == 1)
  {
    unsigned __int16 v6 = *((_WORD *)a2 + 1);
    unsigned int v7 = ((unsigned __int16)(v6 - ((9363 * v6) >> 16)) >> 1) + ((9363 * v6) >> 16);
    *(_WORD *)a3 = (v7 >> 2) & 0x3FF;
    int v8 = 1000 * *((_DWORD *)a2 + 1) + 86400000 * (unsigned __int16)(v6 - 7 * (v7 >> 2));
    *(_DWORD *)(a3 + 4) = v8;
    if (a2[10] == 1)
    {
      v8 += *((unsigned __int16 *)a2 + 4);
      *(_DWORD *)(a3 + 4) = v8;
    }
    *(_OWORD *)(a3 + 186) = 0u;
    *(_OWORD *)(a3 + 170) = 0u;
    *(_OWORD *)(a3 + 154) = 0u;
    *(_OWORD *)(a3 + 138) = 0u;
    *(_OWORD *)(a3 + 122) = 0u;
    *(_OWORD *)(a3 + 106) = 0u;
    *(_OWORD *)(a3 + 90) = 0u;
    *(_OWORD *)(a3 + 74) = 0u;
    if (a2[64] == 1 && (unint64_t v9 = *((unsigned int *)a2 + 14), (v9 - 1) <= 0x3F))
    {
      unint64_t v10 = 0;
      unsigned int v11 = a2 + 40;
      uint64_t v12 = a3 + 80;
      do
      {
        unint64_t v13 = v10;
        unsigned int v11 = *(unsigned __int8 **)v11;
        *(unsigned char *)(v12 - 6) = v11[8] - 1;
        *(_WORD *)(v12 - 4) = *((_WORD *)v11 + 5);
        *(unsigned char *)(v12 - 2) = v11[12];
        *(_WORD *)(v12 - 1) = *(_WORD *)(v11 + 13);
        ++v10;
        if (v13 > 0xE) {
          break;
        }
        v12 += 8;
      }
      while (v10 < v9);
    }
    else
    {
      LOBYTE(v10) = 0;
    }
    *(unsigned char *)(a3 + 72) = v10;
    char v16 = -1;
    if (a2[73] == 1) {
      char v16 = a2[72];
    }
    *(unsigned char *)(a3 + 8) = v16;
    *(_DWORD *)(result + 112) = v8;
    *(unsigned char *)(result + 116) = v16;
    *(unsigned char *)(a3 + 2) = -1;
  }
  else
  {
    uint64_t v14 = *a2;
    *(_DWORD *)(a3 + 16) = byte_24B4BF88D[v14];
    *(unsigned char *)a3 = 1;
    *(_WORD *)(a3 + 2) = *((_WORD *)a2 + 1) & 0x1FFF;
    *(_DWORD *)(a3 + 8) = *((_DWORD *)a2 + 1);
    if (a2[10] == 1) {
      __int16 v15 = *((_WORD *)a2 + 4);
    }
    else {
      __int16 v15 = 0;
    }
    *(_WORD *)(a3 + 12) = v15;
    if (v14 == 4 && a2[32] == 1) {
      BOOL result = sub_24B48AEB4((uint64_t)(a2 + 16), *((_DWORD *)a2 + 4), (unsigned char *)(a3 + 20));
    }
    else {
      *(unsigned char *)(a3 + 20) = 0;
    }
    char v17 = -1;
    if (a2[73] == 1)
    {
      if (a2[104]) {
        char v17 = -1;
      }
      else {
        char v17 = a2[72];
      }
    }
    *(unsigned char *)(a3 + 14) = v17;
    *(unsigned char *)(a3 + 4) = -1;
  }
  return result;
}

uint64_t sub_24B48803C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 32) = 0x100000001;
  uint64_t result = (uint64_t)malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
  *(void *)(result + 9) = 0;
  *(void *)(result + 25) = 0;
  *(void *)(result + 17) = 0;
  *(void *)(result + 32) = 0;
  *(void *)uint64_t result = 0;
  *(void *)(a1 + 16) = result;
  *(void *)(a1 + 24) = result;
  *(unsigned char *)(result + 8) = 0;
  int v5 = *(unsigned __int8 *)(a2 + 216);
  if (v5 == 255)
  {
    char v6 = 0;
  }
  else
  {
    *(unsigned char *)(result + 11) = v5;
    char v6 = 1;
  }
  *(unsigned char *)(result + 12) = v6;
  if (*(unsigned char *)(a2 + 217))
  {
    *(_DWORD *)(result + 32) = *(unsigned __int8 *)(a2 + 217);
    *(_DWORD *)(result + 36) = 1;
    uint64_t result = (uint64_t)malloc_type_calloc(1uLL, 0x30uLL, 0x86CB5109uLL);
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    uint64_t v7 = *(void *)(a1 + 16);
    *(void *)(v7 + 16) = result;
    *(void *)(v7 + 24) = result;
    LODWORD(v8) = *(unsigned __int8 *)(a2 + 217);
    if (v8 >= 2)
    {
      unint64_t v9 = 1;
      do
      {
        uint64_t result = (uint64_t)malloc_type_calloc(1uLL, 0x30uLL, 0x86CB5109uLL);
        *(_OWORD *)uint64_t result = 0u;
        *(_OWORD *)(result + 16) = 0u;
        *(_OWORD *)(result + 32) = 0u;
        uint64_t v7 = *(void *)(a1 + 16);
        **(void **)(v7 + 24) = result;
        *(void *)(v7 + 24) = result;
        ++v9;
        unint64_t v8 = *(unsigned __int8 *)(a2 + 217);
      }
      while (v9 < v8);
    }
    if (v8)
    {
      unsigned int v10 = 0;
      uint64_t v11 = *(void *)(a2 + 224);
      uint64_t v12 = (void *)(v7 + 16);
      do
      {
        uint64_t v12 = (void *)*v12;
        uint64_t result = sub_24B488BD8((uint64_t)(v12 + 1), v11);
        ++v10;
        v11 += 36;
      }
      while (v10 < *(unsigned __int8 *)(a2 + 217));
    }
  }
  return result;
}

void sub_24B488180(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a1;
  if (a3 == 1) {
    uint64_t v4 = (void *)*a1;
  }
  if (*(unsigned char *)(a2 + 248))
  {
    uint64_t v5 = 0;
    uint64_t v6 = *(void *)(a2 + 256);
    while (1)
    {
      uint64_t v7 = *(unsigned int *)(v6 + 16 * v5);
      uint64_t v4 = (void *)*v4;
      *((unsigned char *)v4 + 8) = byte_24B4BF880[v7];
      if (v7 != 3 && v7 != 5)
      {
        sub_24B4B00A4(1166, "lpp_transaction.c");
        uint64_t v6 = *(void *)(a2 + 256);
      }
      if (*(unsigned char *)(v6 + 16 * v5 + 4))
      {
        *((_DWORD *)v4 + 8) = *(unsigned __int8 *)(v6 + 16 * v5 + 4);
        *((_DWORD *)v4 + 9) = 1;
        unint64_t v9 = (char *)malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        v4[2] = v9;
        unsigned int v10 = v4 + 2;
        *(void *)unint64_t v9 = 0;
        v4[3] = v9;
        uint64_t v6 = *(void *)(a2 + 256);
        LODWORD(v11) = *(unsigned __int8 *)(v6 + 16 * v5 + 4);
        if (v11 >= 2)
        {
          unint64_t v12 = 1;
          do
          {
            unint64_t v13 = malloc_type_calloc(1uLL, 0x28uLL, 0x86CB5109uLL);
            *unint64_t v13 = 0u;
            v13[1] = 0u;
            *((void *)v13 + 4) = 0;
            *(void *)v4[3] = v13;
            v4[3] = v13;
            ++v12;
            uint64_t v6 = *(void *)(a2 + 256);
            unint64_t v11 = *(unsigned __int8 *)(v6 + 16 * v5 + 4);
          }
          while (v12 < v11);
        }
        if (v11) {
          break;
        }
      }
LABEL_28:
      if (++v5 >= (unint64_t)*(unsigned __int8 *)(a2 + 248)) {
        return;
      }
    }
    uint64_t v14 = 0;
    while (1)
    {
      unsigned __int8 v15 = 0;
      unsigned int v10 = (void *)*v10;
      *((unsigned char *)v10 + 8) = 0;
      char v16 = (unsigned __int8 *)(*(void *)(v6 + 16 * v5 + 8) + 16 * v14);
      int v17 = v16[4];
      *((unsigned char *)v10 + 12) = v17;
      if (v17 == 1) {
        unsigned __int8 v15 = v16[5];
      }
      *((unsigned char *)v10 + 11) = v15;
      int v18 = v16[6];
      if (v18) {
        break;
      }
      uint64_t v6 = *(void *)(a2 + 256);
      uint64_t v20 = *(void *)(v6 + 16 * v5 + 8);
      if (*(unsigned char *)(v20 + 16 * v14 + 6)) {
        goto LABEL_25;
      }
LABEL_27:
      if (++v14 >= (unint64_t)*(unsigned __int8 *)(v6 + 16 * v5 + 4)) {
        goto LABEL_28;
      }
    }
    *((_DWORD *)v10 + 8) = v18;
    *((_DWORD *)v10 + 9) = 1;
    uint64_t v19 = (char *)malloc_type_calloc(1uLL, 0x30uLL, 0x86CB5109uLL);
    *(_OWORD *)(v19 + 8) = 0u;
    *(_OWORD *)(v19 + 24) = 0u;
    *((void *)v19 + 5) = 0;
    *(void *)uint64_t v19 = 0;
    _DWORD v10[2] = v19;
    void v10[3] = v19;
    uint64_t v6 = *(void *)(a2 + 256);
    uint64_t v20 = *(void *)(v6 + 16 * v5 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v20 + 16 * v14 + 6);
    if (v21 >= 2)
    {
      unint64_t v22 = 1;
      do
      {
        int v23 = malloc_type_calloc(1uLL, 0x30uLL, 0x86CB5109uLL);
        _OWORD *v23 = 0u;
        v23[1] = 0u;
        v23[2] = 0u;
        *(void *)void v10[3] = v23;
        void v10[3] = v23;
        ++v22;
        uint64_t v6 = *(void *)(a2 + 256);
        uint64_t v20 = *(void *)(v6 + 16 * v5 + 8);
        unint64_t v21 = *(unsigned __int8 *)(v20 + 16 * v14 + 6);
      }
      while (v22 < v21);
    }
    if (!v21) {
      goto LABEL_27;
    }
LABEL_25:
    unsigned int v24 = 0;
    uint64_t v25 = *(void *)(v20 + 16 * v14 + 8);
    char v26 = v10 + 2;
    do
    {
      char v26 = (void *)*v26;
      sub_24B488BD8((uint64_t)(v26 + 1), v25);
      ++v24;
      v25 += 36;
      uint64_t v6 = *(void *)(a2 + 256);
    }
    while (v24 < *(unsigned __int8 *)(*(void *)(v6 + 16 * v5 + 8) + 16 * v14 + 6));
    goto LABEL_27;
  }
}

uint64_t sub_24B488428(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 20);
  if (v2 == 2) {
    return *(unsigned __int8 *)(a2 + 40);
  }
  if (v2 == 3)
  {
    unsigned int v3 = a1[8] == 1;
    if (a1[10] == 1) {
      v3 |= 2u;
    }
    if (a1[46] == 1) {
      return v3 | 4;
    }
    else {
      return v3;
    }
  }
  else
  {
    sub_24B4B00A4(7623, "lpp_transaction.c");
    return 0;
  }
}

uint64_t sub_24B4884A4(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  *(_WORD *)uint64_t result = *(_WORD *)a2;
  int v4 = *(_DWORD *)(a2 + 12);
  *(unsigned char *)(result + 80) = v4;
  if (v4 == 1)
  {
    *(_DWORD *)(result + 56) = 0;
    *(void *)(result + 24) = 0x100000003;
    uint64_t v5 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
    *uint64_t v5 = 0;
    v5[1] = 0;
    *(void *)(v3 + 8) = v5;
    *(void *)(v3 + 16) = v5;
    uint64_t v6 = 2;
    do
    {
      uint64_t v7 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *uint64_t v7 = 0;
      v7[1] = 0;
      **(void **)(v3 + 16) = v7;
      *(void *)(v3 + 16) = v7;
      --v6;
    }
    while (v6);
    uint64_t v8 = *(void *)(v3 + 8);
    unsigned __int16 v9 = *(_WORD *)(a2 + 16);
    *(unsigned char *)(v8 + 8) = v9 / 0x64u;
    unsigned int v10 = *(unsigned char **)v8;
    v9 %= 0x64u;
    v10[8] = v9 / 0xAu;
    *(unsigned char *)(*(void *)v10 + 8) = v9 % 0xAu;
    unsigned int v11 = *(unsigned __int16 *)(a2 + 18);
    BOOL v12 = *(_DWORD *)(a2 + 20) == 1;
    if (*(_DWORD *)(a2 + 20) == 1) {
      int v13 = 3;
    }
    else {
      int v13 = 2;
    }
    *(_DWORD *)(v3 + 48) = v13;
    *(_DWORD *)(v3 + 52) = 1;
    if (v12) {
      uint64_t v14 = 3;
    }
    else {
      uint64_t v14 = 2;
    }
    unsigned __int8 v15 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
    *unsigned __int8 v15 = 0;
    v15[1] = 0;
    *(void *)(v3 + 32) = v15;
    *(void *)(v3 + 40) = v15;
    uint64_t v16 = v14 - 1;
    do
    {
      int v17 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *int v17 = 0;
      v17[1] = 0;
      **(void **)(v3 + 40) = v17;
      *(void *)(v3 + 40) = v17;
      --v16;
    }
    while (v16);
    int v18 = *(unsigned char **)(v3 + 32);
    if (*(_DWORD *)(a2 + 20) == 1)
    {
      v18[8] = (5243 * (v11 >> 2)) >> 17;
      unsigned int v11 = *(unsigned __int16 *)(a2 + 18) - 100 * ((5243 * (*(unsigned __int16 *)(a2 + 18) >> 2)) >> 17);
      int v18 = *(unsigned char **)v18;
    }
    v18[8] = (unsigned __int16)v11 / 0xAu;
    *(unsigned char *)(*(void *)v18 + 8) = (unsigned __int16)v11 % 0xAu;
    uint64_t result = sub_24B48AF8C(*(_DWORD *)(a2 + 24), 0x1CuLL, v3 + 64);
  }
  unsigned int v19 = *(_DWORD *)(a2 + 8);
  if (v19 >= 0x10000)
  {
    *(unsigned char *)(v3 + 120) = 1;
    *(_DWORD *)(v3 + 116) = v19;
    LOWORD(v19) = -1;
  }
  *(_WORD *)(v3 + 82) = v19;
  int v20 = *(unsigned __int8 *)(a2 + 28);
  *(unsigned char *)(v3 + 104) = v20;
  if (v20 == 1) {
    uint64_t result = sub_24B48B0D0(v3 + 88, 0xAuLL, *(unsigned __int16 *)(a2 + 30));
  }
  *(unsigned char *)(v3 + 106) = 0;
  *(unsigned char *)(v3 + 108) = 0;
  *(unsigned char *)(v3 + 146) = 0;
  *(unsigned char *)(v3 + 148) = 0;
  *(unsigned char *)(v3 + 112) = 0;
  unsigned int v21 = *(unsigned __int16 *)(a2 + 32);
  if (v21 != 255)
  {
    if (v21 > 0x61)
    {
      if (v21 < 0xFFEF) {
        goto LABEL_25;
      }
      char v22 = 0;
      *(unsigned char *)(v3 + 146) = 1;
      *(unsigned char *)(v3 + 145) = v21;
    }
    else
    {
      *(unsigned char *)(v3 + 106) = 1;
      char v22 = v21;
    }
    *(unsigned char *)(v3 + 105) = v22;
  }
LABEL_25:
  unsigned int v23 = *(unsigned __int16 *)(a2 + 34);
  if (v23 != 255)
  {
    if (v23 > 0x22)
    {
      if (v23 <= 0xFFE1 && v23 - 35 > 0xB) {
        goto LABEL_32;
      }
      char v24 = 0;
      *(unsigned char *)(v3 + 148) = 1;
      *(unsigned char *)(v3 + 147) = v23;
      *(unsigned char *)(v3 + 108) = 0;
    }
    else
    {
      *(unsigned char *)(v3 + 108) = 1;
      char v24 = v23;
    }
    *(unsigned char *)(v3 + 107) = v24;
  }
LABEL_32:
  int v25 = *(unsigned __int16 *)(a2 + 36);
  if (v25 != 0xFFFF)
  {
    *(unsigned char *)(v3 + 112) = 1;
    *(_WORD *)(v3 + 110) = v25;
  }
  return result;
}

void sub_24B488778(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  if (*(unsigned char *)(a2 + 2))
  {
    if (*(_DWORD *)(a2 + 4)) {
      *(_DWORD *)(a1 + 4) = 1;
    }
    else {
      *(_DWORD *)(a1 + 4) = 0;
    }
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  }
  else
  {
    sub_24B4B00A4(10783, "lpp_transaction.c");
    *(_DWORD *)(a1 + 4) = 0;
    *(_DWORD *)(a1 + 8) = 0;
  }
  if (*(unsigned char *)(a2 + 12) == 1)
  {
    *(void *)(a1 + 32) = 0x100000003;
    int v4 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
    *int v4 = 0;
    v4[1] = 0;
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v4;
    uint64_t v5 = 2;
    do
    {
      uint64_t v6 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *uint64_t v6 = 0;
      v6[1] = 0;
      **(void **)(a1 + 24) = v6;
      *(void *)(a1 + 24) = v6;
      --v5;
    }
    while (v5);
    BOOL v7 = *(_DWORD *)(a2 + 20) == 1;
    if (*(_DWORD *)(a2 + 20) == 1) {
      int v8 = 3;
    }
    else {
      int v8 = 2;
    }
    *(_DWORD *)(a1 + 56) = v8;
    *(_DWORD *)(a1 + 60) = 1;
    if (v7) {
      uint64_t v9 = 3;
    }
    else {
      uint64_t v9 = 2;
    }
    unsigned int v10 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
    *unsigned int v10 = 0;
    v10[1] = 0;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v10;
    uint64_t v11 = v9 - 1;
    do
    {
      BOOL v12 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *BOOL v12 = 0;
      v12[1] = 0;
      **(void **)(a1 + 48) = v12;
      *(void *)(a1 + 48) = v12;
      --v11;
    }
    while (v11);
    sub_24B483D74(*(void *)(a2 + 16), *(void *)(a1 + 16), *(unsigned char **)(a1 + 40));
    sub_24B48B030(*(unsigned int *)(a2 + 24), 0x24uLL, a1 + 64);
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
  }
  *(unsigned char *)(a1 + 80) = v13;
  int v14 = *(unsigned __int8 *)(a2 + 28);
  *(unsigned char *)(a1 + 104) = v14;
  if (v14 == 1) {
    sub_24B48B0D0(a1 + 88, 0xAuLL, *(unsigned __int16 *)(a2 + 30));
  }
  *(unsigned char *)(a1 + 106) = 0;
  *(_WORD *)(a1 + 108) = 0;
  *(unsigned char *)(a1 + 111) = 0;
  *(_WORD *)(a1 + 113) = 0;
  *(unsigned char *)(a1 + 144) = 0;
  *(unsigned char *)(a1 + 176) = 0;
  if (*(unsigned char *)(a2 + 32) == 1)
  {
    *(unsigned char *)(a1 + 109) = 1;
    char v15 = *(unsigned char *)(a2 + 34);
    if (v15)
    {
      int v16 = *(unsigned __int16 *)(a2 + 36);
      if (v16 != 255)
      {
        *(unsigned char *)(a1 + 105) = v16;
        *(unsigned char *)(a1 + 106) = v15;
      }
    }
    char v17 = *(unsigned char *)(a2 + 38);
    if (v17)
    {
      int v18 = *(unsigned __int16 *)(a2 + 40);
      if (v18 != 255)
      {
        *(unsigned char *)(a1 + 107) = v18;
        *(unsigned char *)(a1 + 108) = v17;
      }
    }
  }
  if (*(unsigned char *)(a2 + 42) == 1)
  {
    *(unsigned char *)(a1 + 114) = 1;
    char v19 = *(unsigned char *)(a2 + 44);
    if (v19)
    {
      int v20 = *(unsigned __int16 *)(a2 + 46);
      if (v20 != 255)
      {
        *(unsigned char *)(a1 + 110) = v20;
        *(unsigned char *)(a1 + 111) = v19;
      }
    }
    char v21 = *(unsigned char *)(a2 + 48);
    if (v21)
    {
      int v22 = *(unsigned __int16 *)(a2 + 50);
      if (v22 != 255)
      {
        *(unsigned char *)(a1 + 112) = v22;
        *(unsigned char *)(a1 + 113) = v21;
      }
    }
  }
  if (*(unsigned char *)(a2 + 52) == 1)
  {
    unsigned int v23 = *(unsigned __int8 *)(a2 + 53);
    *(_DWORD *)(a1 + 136) = v23;
    *(unsigned char *)(a1 + 144) = 1;
    if (v23 < 0x41)
    {
      if (!v23) {
        goto LABEL_52;
      }
    }
    else
    {
      *(_DWORD *)(a1 + 136) = 64;
    }
    *(_DWORD *)(a1 + 140) = 1;
    char v24 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
    *char v24 = 0;
    v24[1] = 0;
    *(void *)(a1 + 120) = v24;
    *(void *)(a1 + 128) = v24;
    LODWORD(v25) = *(_DWORD *)(a1 + 136);
    if (v25 >= 2)
    {
      unint64_t v26 = 1;
      do
      {
        int v27 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
        void *v27 = 0;
        v27[1] = 0;
        **(void **)(a1 + 128) = v27;
        *(void *)(a1 + 128) = v27;
        ++v26;
        unint64_t v25 = *(int *)(a1 + 136);
      }
      while (v26 < v25);
    }
    if ((int)v25 >= 1)
    {
      int v28 = 0;
      uint64_t v29 = (uint64_t *)(a1 + 120);
      char v30 = (unsigned __int16 *)(*(void *)(a2 + 56) + 8);
      do
      {
        uint64_t v29 = (uint64_t *)*v29;
        *((unsigned char *)v29 + 10) = 0;
        *((unsigned char *)v29 + 12) = 0;
        *((unsigned char *)v29 + 8) = *((unsigned char *)v30 - 8);
        char v31 = *((unsigned char *)v30 - 6);
        if (v31)
        {
          int v32 = *(v30 - 2);
          if (v32 != 255)
          {
            *((unsigned char *)v29 + 9) = v32;
            *((unsigned char *)v29 + 10) = v31;
          }
        }
        char v33 = *((unsigned char *)v30 - 2);
        if (v33)
        {
          int v34 = *v30;
          if (v34 != 255)
          {
            *((unsigned char *)v29 + 11) = v34;
            *((unsigned char *)v29 + 12) = v33;
          }
        }
        ++v28;
        v30 += 5;
      }
      while ((int)v25 > v28);
    }
  }
LABEL_52:
  if (*(unsigned char *)(a2 + 64) != 1) {
    return;
  }
  unsigned int v35 = *(unsigned __int8 *)(a2 + 65);
  *(_DWORD *)(a1 + 168) = v35;
  *(unsigned char *)(a1 + 176) = 1;
  if (v35 < 0x41)
  {
    if (!v35) {
      return;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 168) = 64;
  }
  *(_DWORD *)(a1 + 172) = 1;
  int v36 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
  *int v36 = 0;
  v36[1] = 0;
  *(void *)(a1 + 152) = v36;
  *(void *)(a1 + 160) = v36;
  LODWORD(v37) = *(_DWORD *)(a1 + 168);
  if (v37 >= 2)
  {
    unint64_t v38 = 1;
    do
    {
      int v39 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
      *int v39 = 0;
      v39[1] = 0;
      **(void **)(a1 + 160) = v39;
      *(void *)(a1 + 160) = v39;
      ++v38;
      unint64_t v37 = *(int *)(a1 + 168);
    }
    while (v38 < v37);
  }
  if ((int)v37 >= 1)
  {
    int v40 = 0;
    int v41 = (uint64_t *)(a1 + 152);
    unsigned __int16 v42 = (unsigned __int16 *)(*(void *)(a2 + 72) + 8);
    do
    {
      int v41 = (uint64_t *)*v41;
      *((unsigned char *)v41 + 10) = 0;
      *((unsigned char *)v41 + 12) = 0;
      *((unsigned char *)v41 + 8) = *((unsigned char *)v42 - 8);
      char v43 = *((unsigned char *)v42 - 6);
      if (v43)
      {
        int v44 = *(v42 - 2);
        if (v44 != 255)
        {
          *((unsigned char *)v41 + 9) = v44;
          *((unsigned char *)v41 + 10) = v43;
        }
      }
      char v45 = *((unsigned char *)v42 - 2);
      if (v45)
      {
        int v46 = *v42;
        if (v46 != 255)
        {
          *((unsigned char *)v41 + 11) = v46;
          *((unsigned char *)v41 + 12) = v45;
        }
      }
      ++v40;
      v42 += 5;
    }
    while ((int)v37 > v40);
  }
}

uint64_t sub_24B488BD8(uint64_t result, uint64_t a2)
{
  *(_WORD *)uint64_t result = *(_WORD *)a2;
  *(unsigned char *)(result + 2) = *(unsigned char *)(a2 + 8);
  int v2 = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(result + 4) = *(_DWORD *)(a2 + 20);
  if (v2 == 1) {
    *(unsigned char *)(result + 3) = *(unsigned char *)(a2 + 24);
  }
  int v3 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(result + 8) = *(_DWORD *)(a2 + 12);
  if (v3 == 255)
  {
    char v4 = 0;
  }
  else
  {
    *(unsigned char *)(result + 12) = v3;
    char v4 = 1;
  }
  *(unsigned char *)(result + 13) = v4;
  *(unsigned char *)(result + 14) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(result + 18) = 1;
  *(_WORD *)(result + 16) = *(_WORD *)(a2 + 2);
  int v5 = *(_DWORD *)(a2 + 28);
  *(unsigned char *)(result + 24) = *(_DWORD *)(a2 + 28);
  if (v5 == 1) {
    int v6 = *(_DWORD *)(a2 + 32);
  }
  else {
    int v6 = 0;
  }
  *(_DWORD *)(result + 20) = v6;
  return result;
}

void sub_24B488C68(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v4 = **(void **)(a1 + 72);
  if (v4)
  {
    while (*(_DWORD *)(v4 + 16) != *a3 || *(_DWORD *)(v4 + 20) != a3[1])
    {
      uint64_t v4 = *(void *)v4;
      if (!v4) {
        goto LABEL_5;
      }
    }
    __int16 v7 = 1;
    int v6 = sub_24B4816DC(v4, &v7, 6);
    if (v6) {
      sub_24B48208C(a1, v6, 6, a2);
    }
    else {
      sub_24B4B00A4(12657, "lpp_transaction.c");
    }
  }
  else
  {
LABEL_5:
    sub_24B4B00A4(12663, "lpp_transaction.c");
  }
}

void sub_24B488D48(void *a1, int __val)
{
  switch(__val)
  {
    case 0:
      int v3 = "LPP_INACTIVE";
      goto LABEL_7;
    case 1:
      int v3 = "LPP_IDLE";
      goto LABEL_7;
    case 2:
      int v3 = "LPP_ACTIVE";
LABEL_7:
      sub_24B3E3128(a1, v3);
      return;
  }
  std::to_string(&v6, __val);
  uint64_t v4 = std::string::insert(&v6, 0, "unknown ");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  a1[2] = *((void *)&v4->__r_.__value_.__l + 2);
  *(_OWORD *)a1 = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
}

void sub_24B488E10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B488E2C(void *a1, int __val)
{
  switch(__val)
  {
    case 2:
      int v3 = "TRANSACTION_TERMINATED";
      goto LABEL_7;
    case 1:
      int v3 = "TRANSACTION_ACTIVE";
      goto LABEL_7;
    case 0:
      int v3 = "TRANSACTION_INITIAL";
LABEL_7:
      sub_24B3E3128(a1, v3);
      return;
  }
  std::to_string(&v6, __val);
  uint64_t v4 = std::string::insert(&v6, 0, "unknown ");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  a1[2] = *((void *)&v4->__r_.__value_.__l + 2);
  *(_OWORD *)a1 = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
}

void sub_24B488EF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B488F10(void *a1, int __val)
{
  if (__val == 1)
  {
    int v3 = "LASN_Initiator_targetDevice";
    goto LABEL_5;
  }
  if (!__val)
  {
    int v3 = "LASN_Initiator_locationServer";
LABEL_5:
    sub_24B3E3128(a1, v3);
    return;
  }
  std::to_string(&v6, __val);
  uint64_t v4 = std::string::insert(&v6, 0, "unknown ");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  a1[2] = *((void *)&v4->__r_.__value_.__l + 2);
  *(_OWORD *)a1 = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
}

void sub_24B488FC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B488FE0(void *a1, int __val)
{
  if (__val == 1)
  {
    int v3 = "USER_PLANE";
    goto LABEL_5;
  }
  if (!__val)
  {
    int v3 = "CONTROL_PLANE";
LABEL_5:
    sub_24B3E3128(a1, v3);
    return;
  }
  std::to_string(&v6, __val);
  uint64_t v4 = std::string::insert(&v6, 0, "unknown ");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  a1[2] = *((void *)&v4->__r_.__value_.__l + 2);
  *(_OWORD *)a1 = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
}

void sub_24B489094(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4890B0(int a1)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  int v2 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    sub_24B488D48(v9, a1);
    int v3 = v10;
    uint64_t v4 = (void **)v9[0];
    sub_24B488D48(__p, a1);
    long long v5 = v9;
    if (v3 < 0) {
      long long v5 = v4;
    }
    if (v8 >= 0) {
      std::string v6 = __p;
    }
    else {
      std::string v6 = (void **)__p[0];
    }
    *(_DWORD *)buf = 136315394;
    BOOL v12 = v5;
    __int16 v13 = 2080;
    int v14 = v6;
    _os_log_debug_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEBUG, "#posp,#lpp,#lpp_state,current_state,%s,next_state,%s", buf, 0x16u);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
    if (v10 < 0) {
      operator delete(v9[0]);
    }
  }
}

void sub_24B4891D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4891F4(uint64_t a1, int a2, int a3)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  std::string v6 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    sub_24B488F10(v27, *(unsigned __int8 *)(a1 + 16));
    if (v28 >= 0) {
      __int16 v7 = v27;
    }
    else {
      __int16 v7 = (void **)v27[0];
    }
    int v8 = *(unsigned __int8 *)(a1 + 17);
    sub_24B488FE0(v25, *(_DWORD *)(a1 + 28));
    if (v26 >= 0) {
      uint64_t v9 = v25;
    }
    else {
      uint64_t v9 = (void **)v25[0];
    }
    int v10 = *(_DWORD *)(a1 + 32);
    sub_24B488E2C(v23, a2);
    if (v24 >= 0) {
      uint64_t v11 = v23;
    }
    else {
      uint64_t v11 = (void **)v23[0];
    }
    sub_24B488E2C(v21, a3);
    int v12 = v22;
    __int16 v13 = (void **)v21[0];
    uint64_t v14 = *(int *)(a1 + 20);
    if (v14 > 5)
    {
      std::to_string(&v29, v14);
      uint64_t v15 = std::string::insert(&v29, 0, "unknown ");
      long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
      int64_t v20 = v15->__r_.__value_.__r.__words[2];
      *(_OWORD *)std::string __p = v16;
      v15->__r_.__value_.__l.__size_ = 0;
      v15->__r_.__value_.__r.__words[2] = 0;
      v15->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v29.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      sub_24B3E3128(__p, off_265293D18[v14]);
    }
    char v17 = v21;
    if (v12 < 0) {
      char v17 = v13;
    }
    int v18 = __p;
    *(_DWORD *)buf = 136316674;
    if (v20 < 0) {
      int v18 = (void **)__p[0];
    }
    char v31 = v7;
    __int16 v32 = 1024;
    int v33 = v8;
    __int16 v34 = 2080;
    unsigned int v35 = v9;
    __int16 v36 = 1024;
    int v37 = v10;
    __int16 v38 = 2080;
    int v39 = v11;
    __int16 v40 = 2080;
    int v41 = v17;
    __int16 v42 = 2080;
    char v43 = v18;
    _os_log_debug_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEBUG, " #posp,#lpp,#lpp_transaction,trasaction_initiator,%s,transaction_id,%d,session_type,%s,session_id,%d,current_transaction_state,%s,next_transaction_state,%s,transaction_type,%s", buf, 0x40u);
    if (SHIBYTE(v20) < 0) {
      operator delete(__p[0]);
    }
    if (v22 < 0) {
      operator delete(v21[0]);
    }
    if (v24 < 0) {
      operator delete(v23[0]);
    }
    if (v26 < 0) {
      operator delete(v25[0]);
    }
    if (v28 < 0) {
      operator delete(v27[0]);
    }
  }
}

void sub_24B489450(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  if (a41 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4894D4(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  std::string v6 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    sub_24B488F10(v20, a2);
    if (v21 >= 0) {
      __int16 v7 = v20;
    }
    else {
      __int16 v7 = (void **)v20[0];
    }
    sub_24B488FE0(v18, *(_DWORD *)(a1 + 16));
    int v8 = v19;
    uint64_t v9 = (void **)v18[0];
    int v10 = *(_DWORD *)(a1 + 20);
    int v11 = *(unsigned __int8 *)(a1 + 24);
    if (a3 > 3)
    {
      std::to_string(&v22, a3);
      int v12 = std::string::insert(&v22, 0, "unknown ");
      long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
      int64_t v17 = v12->__r_.__value_.__r.__words[2];
      *(_OWORD *)std::string __p = v13;
      v12->__r_.__value_.__l.__size_ = 0;
      v12->__r_.__value_.__r.__words[2] = 0;
      v12->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v22.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      sub_24B3E3128(__p, off_265293D48[a3]);
    }
    uint64_t v14 = v18;
    if (v8 < 0) {
      uint64_t v14 = v9;
    }
    uint64_t v15 = __p;
    if (v17 < 0) {
      uint64_t v15 = (void **)__p[0];
    }
    *(_DWORD *)buf = 136316162;
    char v24 = v7;
    __int16 v25 = 2080;
    char v26 = v14;
    __int16 v27 = 1024;
    int v28 = v10;
    __int16 v29 = 1024;
    int v30 = v11;
    __int16 v31 = 2080;
    __int16 v32 = v15;
    _os_log_debug_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEBUG, " #posp,#lpp,#lpp_session,initiator,%s,session_type,%s,session_id,%d,ue_initiated_transaction_number,%d,session_action,%s", buf, 0x2Cu);
    if (SHIBYTE(v17) < 0) {
      operator delete(__p[0]);
    }
    if (v19 < 0) {
      operator delete(v18[0]);
    }
    if (v21 < 0) {
      operator delete(v20[0]);
    }
  }
}

void sub_24B4896B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B489708(int a1, int a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v4 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    v5[0] = 67109376;
    v5[1] = a1;
    __int16 v6 = 1024;
    int v7 = a2;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#posp,#lpp,#lpp_cp_ul_data_clear,index,%d,session_number,%d", (uint8_t *)v5, 0xEu);
  }
}

void sub_24B4897C4(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  int v2 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    int v3 = *(unsigned __int16 *)(a1 + 12);
    int v4 = *(unsigned __int16 *)(a1 + 14);
    int v5 = *(unsigned __int8 *)(a1 + 16);
    int v6 = *(unsigned __int8 *)(a1 + 17);
    int v7 = *(unsigned __int8 *)(a1 + 18);
    v8[0] = 67110144;
    v8[1] = v3;
    __int16 v9 = 1024;
    int v10 = v4;
    __int16 v11 = 1024;
    int v12 = v5;
    __int16 v13 = 1024;
    int v14 = v6;
    __int16 v15 = 1024;
    int v16 = v7;
    _os_log_debug_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEBUG, "#posp,#lpp,#gps_aid_request,aidMask,%d,gpsWeek,%d,gpsTow,%d,numOfSats,%d,toeLimit,%d", (uint8_t *)v8, 0x20u);
  }
}

char *sub_24B4898A0(uint64_t a1, _DWORD *a2, char a3, int a4, uint64_t a5)
{
  int v5 = **(uint64_t ***)(a1 + 72);
  if (!v5) {
    return sub_24B4898E0(a1, a2, a3, a4, a5);
  }
  while (*((_DWORD *)v5 + 4) != *a2 || *((_DWORD *)v5 + 5) != a2[1])
  {
    int v5 = (uint64_t *)*v5;
    if (!v5) {
      return sub_24B4898E0(a1, a2, a3, a4, a5);
    }
  }
  return (char *)v5;
}

char *sub_24B4898E0(uint64_t a1, _DWORD *a2, char a3, int a4, uint64_t a5)
{
  if (!*a2)
  {
    uint64_t v13 = *(void *)(a1 + 72);
    if (*(void *)v13)
    {
      if (!a4 && a5 && *(unsigned char *)(a5 + 2592) == 1 && !*(_DWORD *)(a5 + 16) && *(_DWORD *)(a5 + 24) == 6) {
        return 0;
      }
      while (1)
      {
        uint64_t v13 = *(void *)v13;
        if (!v13) {
          break;
        }
        if (!*(_DWORD *)(v13 + 16))
        {
          sub_24B489AEC(a1, v13, 5u);
          break;
        }
      }
    }
  }
  uint64_t v8 = (char *)malloc_type_calloc(1uLL, 0x78uLL, 0x86CB5109uLL);
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_OWORD *)v8 + 2) = 0u;
  *((_OWORD *)v8 + 3) = 0u;
  *((_OWORD *)v8 + 4) = 0u;
  *((_OWORD *)v8 + 5) = 0u;
  *((_OWORD *)v8 + 6) = 0u;
  *((void *)v8 + 14) = 0;
  *((void *)v8 + 2) = *(void *)a2;
  v8[24] = 0;
  *(_DWORD *)(v8 + 111) = 0;
  *((void *)v8 + 13) = 0;
  v8[115] = 1;
  __int16 v9 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
  *__int16 v9 = 0;
  v9[1] = 0;
  *((void *)v8 + 5) = v9;
  int v10 = *((_DWORD *)v8 + 4);
  if (v10 == 1)
  {
    v8[64] = a3;
    *((void *)v8 + 6) = sub_24B48A0A0;
    *((void *)v8 + 7) = sub_24B48A214;
  }
  else
  {
    if (v10)
    {
      sub_24B4B00A4(283, "lpp_session.c");
      return v8;
    }
    *((_DWORD *)v8 + 16) = 0x1000000;
    v8[80] = 0;
    *((void *)v8 + 9) = 0;
    *((_WORD *)v8 + 48) = 256;
    __int16 v11 = malloc_type_calloc(1uLL, 0x10uLL, 0x86CB5109uLL);
    *__int16 v11 = 0;
    v11[1] = 0;
    *((void *)v8 + 11) = v11;
    *((void *)v8 + 6) = sub_24B489BC4;
    *((void *)v8 + 7) = sub_24B489DCC;
    int v12 = *(unsigned __int8 *)(a1 + 48);
    v8[115] = v12;
    if (!v12 && !*(unsigned char *)(a1 + 105)) {
      v8[114] = 1;
    }
  }
  sub_24B48AD34(*(uint64_t **)(a1 + 72), v8);
  *((void *)v8 + 4) = 1000000 * sub_24B4761A8();
  sub_24B481140(a1, 0);
  sub_24B4894D4((uint64_t)v8, 0, 0);
  return v8;
}

void sub_24B489AEC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (a2)
  {
    sub_24B4894D4(a2, 0, 2u);
    if (!*(_DWORD *)(a2 + 16))
    {
      *(unsigned char *)(a2 + 96) = 1;
      sub_24B481274(a1, (_DWORD *)(a2 + 16));
    }
    int v7 = **(void ***)(a2 + 40);
    if (v7)
    {
      do
      {
        uint64_t v8 = (void *)*v7;
        sub_24B481AC0(a1, (uint64_t)v7, 0, a3);
        int v7 = v8;
      }
      while (v8);
    }
    sub_24B48A3D4(a1, a2);
    sub_24B481140(a1, 1);
  }
  else
  {
    sub_24B4B00A4(374, "lpp_session.c");
  }
}

void sub_24B489BC4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5)
{
  if (!a5) {
    return;
  }
  int v8 = *a4;
  if (*a4 >= 1) {
    int v9 = 2;
  }
  else {
    int v9 = 5;
  }
  int v10 = *(unsigned __int8 **)(a5 + 16);
  unsigned int v11 = *v10;
  BOOL v12 = v11 < 2;
  if (*(unsigned char *)(a2 + 97) == 1)
  {
    int v13 = v10[2];
    if (v8 > 0 || v11 > 1 || v13 == 0)
    {
      BOOL v16 = 1;
    }
    else
    {
      BOOL v12 = v11 == 0;
      BOOL v16 = v11 != 1;
    }
  }
  else
  {
    BOOL v16 = 1;
  }
  *(unsigned char *)(a2 + 97) = 0;
  if (v8 > 0 || !v12) {
    goto LABEL_21;
  }
  uint64_t v19 = *(void *)(a5 + 16);
  if (!*(unsigned char *)(v19 + 2592))
  {
    if (!*(unsigned char *)(a2 + 114))
    {
      *(unsigned char *)(v19 + 2) = 0;
      *(unsigned char *)(v19 + 5) = 0;
LABEL_44:
      *(unsigned char *)(v19 + 6) = 0;
      goto LABEL_45;
    }
LABEL_32:
    if (*(unsigned char *)(v19 + 9) && *(unsigned char *)(v19 + 8)
      || *(unsigned char *)(v19 + 2592)
      && !*(_DWORD *)(v19 + 16)
      && (unsigned int v20 = *(_DWORD *)(v19 + 24), v20 <= 4)
      && ((1 << v20) & 0x19) != 0)
    {
      if (!sub_24B48A51C(a1, a2, (unsigned __int8 *)v19))
      {
        uint64_t v21 = *(void *)(a5 + 16);
        if (*(unsigned char *)(v21 + 2592))
        {
          unsigned int v22 = *(_DWORD *)(v21 + 24);
          if (v22 <= 4 && ((1 << v22) & 0x19) != 0) {
            sub_24B48A6FC(a1, a2, v21);
          }
        }
      }
    }
    goto LABEL_48;
  }
  if (*(unsigned char *)(v19 + 2592) != 1 || *(_DWORD *)(v19 + 16)) {
    goto LABEL_48;
  }
  if (*(unsigned char *)(a2 + 114)) {
    goto LABEL_32;
  }
  if (!*(unsigned char *)(v19 + 5)) {
    goto LABEL_44;
  }
LABEL_45:
  if (!sub_24B48A51C(a1, a2, (unsigned __int8 *)v19) && *(unsigned char *)(*(void *)(a5 + 16) + 2) == 1)
  {
    int v9 = sub_24B481BF0(a1, a2, a5);
LABEL_21:
    char v18 = !v12;
    if (v9 == 5) {
      char v18 = 1;
    }
    if ((v18 & 1) == 0) {
      sub_24B48A80C(a1, a2, *(void *)(a5 + 16), v9);
    }
  }
LABEL_48:
  if (!v16)
  {
    sub_24B489AEC(a1, a2, 1u);
  }
}

void sub_24B489DCC(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  if (a2)
  {
    if (a3)
    {
      uint64_t v6 = *(void *)(a2 + 72);
      if (v6 && (sub_24B480918(*(void *)(v6 + 32), *(int *)(v6 + 24)), *(void *)(a2 + 72)) || *(unsigned char *)(a2 + 96))
      {
        int v7 = malloc_type_calloc(1uLL, 0x30uLL, 0x86CB5109uLL);
        v7[1] = 0u;
        _DWORD v7[2] = 0u;
        *int v7 = 0u;
        long long v8 = *a3;
        long long v9 = a3[2];
        v7[1] = a3[1];
        _DWORD v7[2] = v9;
        *int v7 = v8;
        int v10 = *(void **)(a2 + 88);
        sub_24B48AD74(v10, v7);
        return;
      }
      BOOL v12 = (int *)malloc_type_calloc(1uLL, 0x30uLL, 0x86CB5109uLL);
      *(_OWORD *)BOOL v12 = 0u;
      *((_OWORD *)v12 + 1) = 0u;
      *((_OWORD *)v12 + 2) = 0u;
      uint64_t v13 = *((void *)a3 + 2);
      *((void *)v12 + 2) = v13;
      *(unsigned char *)(v13 + 5) = 1;
      *(unsigned char *)(v13 + 4) = *(unsigned char *)(a2 + 64);
      if (sub_24B4AF72C(4, 7u, (uint64_t *)v12 + 4, 0, v12 + 6, v13, 0, 0))
      {
        sub_24B4B00A4(880, "lpp_session.c");
      }
      else
      {
        sub_24B480918(*((void *)v12 + 4), v12[6]);
        sub_24B480E9C(a1, a2 + 16, (uint64_t)(v12 + 6));
        *(void *)(a2 + 32) = 1000000 * sub_24B4761A8();
        uint64_t v16 = *((void *)v12 + 2);
        if (*(unsigned char *)(v16 + 9) == 1 && *(unsigned char *)(v16 + 6) == 1)
        {
          size_t v17 = v12[6];
          char v18 = malloc_type_calloc(1uLL, v17, 0x86CB5109uLL);
          bzero(v18, v17);
          memcpy(v18, *((const void **)v12 + 4), v12[6]);
          *(void *)(a2 + 72) = v12;
          *((void *)v12 + 4) = v18;
          *(unsigned char *)(a2 + 80) = 0;
          return;
        }
        int v19 = *(unsigned __int16 *)(a2 + 64);
        if (v19 == 255) {
          __int16 v20 = 0;
        }
        else {
          __int16 v20 = v19 + 1;
        }
        *(_WORD *)(a2 + 64) = v20;
        int v14 = (unsigned __int8 *)*((void *)v12 + 2);
        if (v14[3] != 1) {
          goto LABEL_17;
        }
        uint64_t v21 = **(void **)(a2 + 40);
        if (!v21) {
          goto LABEL_17;
        }
        while (*(unsigned __int8 *)(v21 + 16) != *v14 || *(unsigned __int8 *)(v21 + 17) != v14[1])
        {
          uint64_t v21 = *(void *)v21;
          if (!v21) {
            goto LABEL_17;
          }
        }
        if (*(_DWORD *)(v21 + 24) != 2) {
          goto LABEL_17;
        }
        sub_24B481FEC(a1, v21);
      }
      int v14 = (unsigned __int8 *)*((void *)v12 + 2);
LABEL_17:
      sub_24B48C3C8(v14, (uint64_t)&unk_2652B0120);
      __int16 v15 = (void *)*((void *)v12 + 2);
      if (v15) {
        free(v15);
      }
      free(v12);
      return;
    }
    uint64_t v11 = 837;
  }
  else
  {
    uint64_t v11 = 832;
  }
  sub_24B4B00A4(v11, "lpp_session.c");
}

void sub_24B48A0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(a2 + 16) == 1)
  {
    uint64_t v3 = *(void *)(a3 + 8);
    if (v3)
    {
      unsigned int v4 = *(_DWORD *)a3;
      if (*(_DWORD *)a3)
      {
        long long v13 = 0u;
        long long v14 = 0u;
        long long v12 = 0u;
        *(void *)&long long v14 = v3;
        DWORD2(v13) = v4;
        int v7 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
        bzero(v7, 0xA28uLL);
        *(void *)&long long v13 = v7;
        int v8 = sub_24B4AF57C(4u, 7u, v3, v4, (uint64_t)v7, 0, (uint64_t)v11, 0, 0);
        v7[5] = 0;
        v7[9] = 0;
        if (!v7[2592]) {
          _DWORD v7[2] = 0;
        }
        if (v8 <= 0)
        {
          if (v7[2] != 1) {
            goto LABEL_9;
          }
          int v10 = sub_24B481BF0(a1, a2, (uint64_t)&v12);
          if (v10 == 5) {
            goto LABEL_9;
          }
          char v9 = v10;
          int v7 = (unsigned char *)v13;
        }
        else
        {
          char v9 = 2;
        }
        sub_24B48A80C(a1, a2, (uint64_t)v7, v9);
LABEL_9:
        sub_24B48B264((void **)&v13);
      }
    }
  }
  else
  {
    sub_24B4B00A4(725, "lpp_session.c");
  }
}

void sub_24B48A214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    uint64_t v7 = 1032;
    goto LABEL_6;
  }
  if (!a3)
  {
    uint64_t v7 = 1038;
LABEL_6:
    sub_24B4B00A4(v7, "lpp_session.c");
    return;
  }
  *(_OWORD *)std::string::size_type size = 0u;
  *(_OWORD *)long long __src = 0u;
  uint64_t v6 = *(void *)(a3 + 16);
  size[0] = v6;
  *(unsigned char *)(v6 + 5) = 0;
  *(unsigned char *)(v6 + 9) = 0;
  if (!sub_24B4AF72C(4, 7u, (uint64_t *)__src, 0, &size[1], v6, 0, 0))
  {
    size_t v9 = LODWORD(size[1]);
    int v10 = malloc_type_calloc(1uLL, LODWORD(size[1]), 0x86CB5109uLL);
    bzero(v10, v9);
    LODWORD(v9) = size[1];
    memcpy(v10, __src[0], SLODWORD(size[1]));
    sub_24B481400(a1, *(_DWORD *)(a2 + 20), 0, v9, (char *)v10);
  }
  uint64_t v11 = **(void **)(a2 + 40);
  if (v11)
  {
    while (*(unsigned __int8 *)(v11 + 16) != *(unsigned __int8 *)size[0]
         || *(unsigned __int8 *)(v11 + 17) != *(unsigned __int8 *)(size[0] + 1))
    {
      uint64_t v11 = *(void *)v11;
      if (!v11) {
        goto LABEL_19;
      }
    }
    if (*(_DWORD *)(v11 + 24) == 2) {
      sub_24B481FEC(a1, v11);
    }
  }
LABEL_19:
  sub_24B48B264((void **)size);
}

void sub_24B48A3D4(uint64_t a1, uint64_t a2)
{
  if (!*(_DWORD *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a2 + 72);
    if (v4)
    {
      sub_24B48C3C8(*(unsigned __int8 **)(v4 + 16), (uint64_t)&unk_2652B0120);
      int v5 = *(void **)(a2 + 72);
      uint64_t v6 = (void *)v5[2];
      if (v6)
      {
        free(v6);
        _DWORD v5[2] = 0;
        int v5 = *(void **)(a2 + 72);
      }
      uint64_t v7 = (void *)v5[4];
      if (!v7 || (free(v7), v5[4] = 0, (int v5 = *(void **)(a2 + 72)) != 0))
      {
        free(v5);
        *(void *)(a2 + 72) = 0;
      }
    }
    int v8 = *(uint64_t ****)(a2 + 88);
    size_t v9 = *v8;
    if (*v8)
    {
      do
      {
        int v10 = *v9;
        sub_24B48ADC0(*(void **)(a2 + 88), v9);
        sub_24B48C3C8((unsigned __int8 *)v9[2], (uint64_t)&unk_2652B0120);
        uint64_t v11 = v9[2];
        if (v11)
        {
          free(v11);
          v9[2] = 0;
        }
        long long v12 = v9[4];
        if (v12) {
          free(v12);
        }
        free(v9);
        size_t v9 = (uint64_t **)v10;
      }
      while (v10);
      int v8 = *(uint64_t ****)(a2 + 88);
    }
    sub_24B48AE04(v8);
  }
  long long v13 = *(void **)(a2 + 40);
  long long v14 = (void *)*v13;
  if (*v13)
  {
    do
    {
      __int16 v15 = (void *)*v14;
      sub_24B48ADC0(*(void **)(a2 + 40), v14);
      free(v14);
      long long v14 = v15;
    }
    while (v15);
    long long v13 = *(void **)(a2 + 40);
  }
  sub_24B48AE04(v13);
  sub_24B48ADC0(*(void **)(a1 + 72), (void *)a2);
  free((void *)a2);
}

uint64_t sub_24B48A51C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (!a2)
  {
    uint64_t v8 = 1477;
LABEL_8:
    sub_24B4B00A4(v8, "lpp_session.c");
    return 3;
  }
  if (!a3)
  {
    uint64_t v8 = 1482;
    goto LABEL_8;
  }
  if (a3[5] == 1)
  {
    int v6 = a3[4];
    if (*(unsigned __int16 *)(a2 + 66) == v6)
    {
      uint64_t v7 = 2;
      sub_24B4B00A4(1242, "lpp_session.c");
    }
    else
    {
      uint64_t v7 = 0;
      *(_WORD *)(a2 + 66) = v6;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  if (a3[9] == 1 && a3[8] == 1)
  {
    uint64_t v9 = *(void *)(a2 + 72);
    if (v9)
    {
      if (*(unsigned __int8 *)(*(void *)(v9 + 16) + 4) == a3[7])
      {
        *(unsigned char *)(a2 + 80) = 0;
        int v10 = *(unsigned __int8 **)(v9 + 16);
        if (v10[2] == 1 && v10[3] == 1)
        {
          for (uint64_t i = **(void **)(a2 + 40); i; uint64_t i = *(void *)i)
          {
            if (*(unsigned __int8 *)(i + 16) == *v10 && *(unsigned __int8 *)(i + 17) == v10[1]) {
              break;
            }
          }
        }
        else
        {
          uint64_t i = 0;
        }
        sub_24B48C3C8(v10, (uint64_t)&unk_2652B0120);
        long long v12 = *(void **)(a2 + 72);
        long long v13 = (void *)v12[2];
        if (v13)
        {
          free(v13);
          _DWORD v12[2] = 0;
          long long v12 = *(void **)(a2 + 72);
        }
        long long v14 = (void *)v12[4];
        if (!v14 || (free(v14), v12[4] = 0, (long long v12 = *(void **)(a2 + 72)) != 0))
        {
          free(v12);
          *(void *)(a2 + 72) = 0;
        }
        int v15 = *(unsigned __int16 *)(a2 + 64);
        if (v15 == 255) {
          __int16 v16 = 0;
        }
        else {
          __int16 v16 = v15 + 1;
        }
        *(_WORD *)(a2 + 64) = v16;
        if (i && *(_DWORD *)(i + 24) == 2) {
          sub_24B481FEC(a1, i);
        }
        sub_24B48A938(a1, a2);
      }
    }
  }
  return v7;
}

void sub_24B48A6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v7 = 0u;
  if (a2 && a3)
  {
    int v6 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
    bzero(v6, 0xA28uLL);
    *(void *)&long long v8 = v6;
    *((_DWORD *)v6 + 6) = 6;
    *((_DWORD *)v6 + 10) = 0;
    *((unsigned char *)v6 + 49) = 1;
    *((unsigned char *)v6 + 2) = *(unsigned char *)(a3 + 2);
    if (*(unsigned char *)(a3 + 2) == 1) {
      *int v6 = *(_WORD *)a3;
    }
    *((unsigned char *)v6 + 6) = 1;
    v6[4] = 256;
    *((unsigned char *)v6 + 3) = 1;
    *((unsigned char *)v6 + 2592) = 1;
    *((_DWORD *)v6 + 4) = 0;
    (*(void (**)(uint64_t, uint64_t, long long *))(a2 + 56))(a1, a2, &v7);
  }
  else
  {
    sub_24B4B00A4(1131, "lpp_session.c");
  }
}

void sub_24B48A80C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a2 && a3)
  {
    if (*(unsigned char *)(a3 + 2592) != 1 || (*(_DWORD *)(a3 + 24) & 0xFFFFFFFE) != 6)
    {
      long long v10 = 0u;
      long long v11 = 0u;
      long long v9 = 0u;
      long long v8 = malloc_type_calloc(1uLL, 0xA28uLL, 0x86CB5109uLL);
      bzero(v8, 0xA28uLL);
      *(void *)&long long v10 = v8;
      *((unsigned char *)v8 + 2) = *(unsigned char *)(a3 + 2);
      if (*(unsigned char *)(a3 + 2) == 1) {
        *long long v8 = *(_WORD *)a3;
      }
      *((unsigned char *)v8 + 9) = 0;
      *((unsigned char *)v8 + 3) = 0;
      *((unsigned char *)v8 + 2592) = 1;
      *((_DWORD *)v8 + 4) = 0;
      *((_DWORD *)v8 + 6) = 7;
      *((_DWORD *)v8 + 8) = 0;
      *((unsigned char *)v8 + 41) = 1;
      *((unsigned char *)v8 + 40) = a4;
      (*(void (**)(uint64_t, uint64_t, long long *))(a2 + 56))(a1, a2, &v9);
    }
  }
  else
  {
    sub_24B4B00A4(1169, "lpp_session.c");
  }
}

void sub_24B48A938(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v4 = **(void ***)(a2 + 88);
    if (v4)
    {
      do
      {
        if (*(void *)(a2 + 72) || *(unsigned char *)(a2 + 96)) {
          break;
        }
        int v6 = (void *)*v4;
        sub_24B48ADC0(*(void **)(a2 + 88), v4);
        sub_24B489DCC(a1, a2, v4);
        long long v7 = (void *)v4[4];
        if (v7) {
          free(v7);
        }
        free(v4);
        uint64_t v4 = v6;
      }
      while (v6);
    }
  }
  else
  {
    sub_24B4B00A4(1408, "lpp_session.c");
  }
}

void sub_24B48A9E4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (!*(_DWORD *)(a2 + 16))
  {
    uint64_t v6 = *(void *)(a2 + 72);
    if (v6)
    {
      long long v7 = *(unsigned __int8 **)(v6 + 16);
      if (*v7 == *a3 && v7[1] == a3[1])
      {
        *(unsigned char *)(a2 + 80) = 0;
        sub_24B48C3C8(*(unsigned __int8 **)(v6 + 16), (uint64_t)&unk_2652B0120);
        long long v8 = *(void **)(a2 + 72);
        long long v9 = (void *)v8[2];
        if (v9)
        {
          free(v9);
          _DWORD v8[2] = 0;
          long long v8 = *(void **)(a2 + 72);
        }
        long long v10 = (void *)v8[4];
        if (!v10 || (free(v10), v8[4] = 0, (long long v8 = *(void **)(a2 + 72)) != 0))
        {
          free(v8);
          *(void *)(a2 + 72) = 0;
        }
        int v11 = *(unsigned __int16 *)(a2 + 64);
        if (v11 == 255) {
          __int16 v12 = 0;
        }
        else {
          __int16 v12 = v11 + 1;
        }
        *(_WORD *)(a2 + 64) = v12;
      }
    }
    long long v13 = **(void ***)(a2 + 88);
    while (v13)
    {
      long long v14 = v13;
      long long v13 = (void *)*v13;
      int v15 = (unsigned __int8 *)v14[2];
      if (*v15 == *a3 && v15[1] == a3[1])
      {
        sub_24B48ADC0(*(void **)(a2 + 88), v14);
        sub_24B48C3C8((unsigned __int8 *)v14[2], (uint64_t)&unk_2652B0120);
        __int16 v16 = (void *)v14[2];
        if (v16) {
          free(v16);
        }
        free(v14);
      }
    }
    sub_24B48A938(a1, a2);
  }
}

void sub_24B48AB50(uint64_t a1, unsigned int *a2, uint64_t a3, int a4, uint64_t a5)
{
  if (a5)
  {
    int v5 = *(unsigned __int8 *)(a5 + 16);
    char v6 = *(unsigned char *)(a5 + 17);
    int v7 = 1;
  }
  else
  {
    int v7 = 0;
    int v5 = 0;
    char v6 = 0;
  }
  int v26 = v7;
  int v27 = 0;
  int v28 = v5;
  char v29 = v6;
  memset(v30, 0, sizeof(v30));
  if (a2[13])
  {
    LOBYTE(__p[1]) = -1;
    unsigned int v9 = a2[3];
    HIDWORD(__p[0]) = a2[2];
    HIDWORD(v18) = *((unsigned __int8 *)a2 + 59);
    int v10 = *((unsigned __int8 *)a2 + 56);
    BYTE4(v17) = *((unsigned char *)a2 + 16);
    LOBYTE(v18) = *((unsigned char *)a2 + 28);
    __int16 v22 = *((_WORD *)a2 + 27);
    char v20 = *((unsigned char *)a2 + 40);
    int v11 = *((unsigned __int8 *)a2 + 57);
    int v23 = v10;
    int v24 = v11;
    char v25 = *((unsigned char *)a2 + 43);
    LOWORD(__p[0]) = *((unsigned __int8 *)a2 + 4);
    int v12 = *((unsigned __int8 *)a2 + 58);
    uint64_t v19 = *((void *)a2 + 4);
    HIDWORD(__p[1]) = v9;
    LODWORD(v17) = v12;
    __int16 v21 = *(_WORD *)((char *)a2 + 41);
    *((void *)&v17 + 1) = *(void *)(a2 + 5);
    uint64_t v14 = a3;
    int v15 = a4;
    unsigned int v13 = a2[16];
    if (v13 == 1)
    {
      sub_24B4A3740(*a2, (unsigned __int16 *)__p, &v14);
    }
    else if (v13 == 2)
    {
      sub_24B4A38BC((unsigned __int16 *)__p, &v14, 1);
    }
  }
  else
  {
    uint64_t v18 = 0;
    *(_OWORD *)std::string __p = 0u;
    long long v17 = 0u;
    BYTE8(v17) = 1;
    HIDWORD(v17) = a4;
    sub_24B47B344();
    uint64_t v8 = sub_24B4A113C();
    sub_24B4A20E4(v8, (uint64_t)__p);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }
}

void sub_24B48ACA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B48ACC0(uint64_t a1, long long *a2, uint64_t a3, int a4, uint64_t a5)
{
  if (a5)
  {
    int v5 = *(unsigned __int8 *)(a5 + 16);
    char v6 = *(unsigned char *)(a5 + 17);
    int v7 = 1;
  }
  else
  {
    int v7 = 0;
    int v5 = 0;
    char v6 = 0;
  }
  int v12 = v7;
  int v13 = 0;
  int v14 = v5;
  char v15 = v6;
  memset(v16, 0, sizeof(v16));
  int v11 = a4;
  long long v8 = *a2;
  uint64_t v9 = *((void *)a2 + 2);
  uint64_t v10 = a3;
  sub_24B4A29B4((unsigned __int8 *)&v8, &v10);
}

void sub_24B48AD34(uint64_t *a1, void *a2)
{
  if (a1 && a2)
  {
    uint64_t v2 = *a1;
    *a1 = (uint64_t)a2;
    *a2 = v2;
    a2[1] = 0;
    if (v2) {
      *(void *)(v2 + 8) = a2;
    }
    else {
      a1[1] = (uint64_t)a2;
    }
  }
  else
  {
    sub_24B4B00A4(44, "lpm_utils.c");
  }
}

void sub_24B48AD74(void *a1, void *a2)
{
  if (a1 && a2)
  {
    uint64_t v2 = (void *)*a1;
    if (*a1)
    {
      uint64_t v3 = (void *)a1[1];
      uint64_t v2 = v3;
    }
    else
    {
      uint64_t v3 = a1;
    }
    *uint64_t v3 = a2;
    a2[1] = v2;
    a1[1] = a2;
    *a2 = 0;
  }
  else
  {
    sub_24B4B00A4(69, "lpm_utils.c");
  }
}

void sub_24B48ADC0(void *a1, void *a2)
{
  if (a1 && a2)
  {
    uint64_t v3 = (void *)*a2;
    uint64_t v2 = a2[1];
    if (v2) {
      uint64_t v4 = (void *)a2[1];
    }
    else {
      uint64_t v4 = a1;
    }
    *uint64_t v4 = v3;
    if (!v3) {
      uint64_t v3 = a1;
    }
    v3[1] = v2;
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    sub_24B4B00A4(97, "lpm_utils.c");
  }
}

void sub_24B48AE04(void *a1)
{
  if (a1) {
    free(a1);
  }
  else {
    sub_24B4B00A4(141, "lpm_utils.c");
  }
}

uint64_t sub_24B48AE24(uint64_t a1, size_t size, unsigned int a3)
{
  if (!size) {
    return 0;
  }
  *(_DWORD *)a1 = size;
  *(_DWORD *)(a1 + 4) = 1;
  size_t v5 = size;
  char v6 = malloc_type_calloc(1uLL, size, 0x86CB5109uLL);
  bzero(v6, v5);
  uint64_t v7 = 0;
  *(void *)(a1 + 8) = v6;
  do
    *(unsigned char *)(*(void *)(a1 + 8) + v7++) = (a3 >> --v5) & 1;
  while (v5);
  return 1;
}

uint64_t sub_24B48AEB4(uint64_t a1, int a2, unsigned char *a3)
{
  if (a2 < 1 || !*(_DWORD *)(a1 + 4)) {
    return 0;
  }
  int v3 = 0;
  int v4 = 0;
  int v5 = 0;
  *a3 = 0;
  do
  {
    if (*(_DWORD *)a1 <= v4) {
      break;
    }
    v3 |= *(unsigned __int8 *)(*(void *)(a1 + 8) + (__int16)v5) << (~(_BYTE)v4 + a2);
    *a3 = v3;
    int v4 = (__int16)++v5;
  }
  while ((__int16)v5 < a2);
  return 1;
}

uint64_t sub_24B48AF20(int *a1, int a2, _WORD *a3)
{
  if (a2 < 1 || !a1[1]) {
    return 0;
  }
  int v3 = 0;
  int v4 = 0;
  int v5 = 0;
  *a3 = 0;
  int v6 = *a1;
  do
  {
    if (v6 <= v4) {
      break;
    }
    v3 |= *(unsigned __int8 *)(*((void *)a1 + 1) + (unsigned __int16)v5) << (~(_BYTE)v4 + a2);
    *a3 = v3;
    int v4 = (unsigned __int16)++v5;
  }
  while ((unsigned __int16)v5 < a2);
  return 1;
}

uint64_t sub_24B48AF8C(unsigned int a1, size_t size, uint64_t a3)
{
  int v4 = size;
  size_t v6 = size;
  uint64_t v7 = 1;
  long long v8 = malloc_type_calloc(1uLL, size, 0x86CB5109uLL);
  bzero(v8, v6);
  *(void *)(a3 + 8) = v8;
  if (!v8) {
    return 0;
  }
  *(_DWORD *)a3 = v4;
  *(_DWORD *)(a3 + 4) = 1;
  if (v4 >= 1)
  {
    size_t v9 = v6 - 1;
    do
    {
      *(unsigned char *)(*(void *)(a3 + 8) + v9) = a1 & 1;
      a1 >>= 1;
      --v9;
      --v4;
    }
    while (v4);
    return 1;
  }
  return v7;
}

uint64_t sub_24B48B030(unint64_t a1, size_t size, uint64_t a3)
{
  int v4 = size;
  size_t v6 = size;
  uint64_t v7 = 1;
  long long v8 = malloc_type_calloc(1uLL, size, 0x86CB5109uLL);
  bzero(v8, v6);
  *(void *)(a3 + 8) = v8;
  if (!v8) {
    return 0;
  }
  *(_DWORD *)a3 = v4;
  *(_DWORD *)(a3 + 4) = 1;
  if (v4)
  {
    uint64_t v9 = (v4 - 1);
    do
    {
      *(unsigned char *)(*(void *)(a3 + 8) + v9) = a1 & 1;
      a1 >>= 1;
      --v9;
      --v6;
    }
    while (v6);
    return 1;
  }
  return v7;
}

uint64_t sub_24B48B0D0(uint64_t a1, size_t size, unsigned int a3)
{
  if (!size) {
    return 0;
  }
  int v4 = size;
  *(_DWORD *)a1 = size;
  *(_DWORD *)(a1 + 4) = 1;
  size_t v6 = size;
  uint64_t v7 = malloc_type_calloc(1uLL, size, 0x86CB5109uLL);
  bzero(v7, v6);
  char v8 = 0;
  int v9 = 0;
  *(void *)(a1 + 8) = v7;
  do
  {
    *(unsigned char *)(*(void *)(a1 + 8) + (__int16)v9++) = (a3 >> (~v8 + v4)) & 1;
    char v8 = v9;
  }
  while ((__int16)v9 < v4);
  return 1;
}

void sub_24B48B180(void **a1)
{
  if (a1)
  {
    uint64_t v2 = (unsigned __int8 *)*a1;
    if (v2)
    {
      sub_24B48C3C8(v2, (uint64_t)&unk_2652AC490);
      if (*a1)
      {
        free(*a1);
        *a1 = 0;
      }
    }
  }
}

void sub_24B48B1CC(void **a1)
{
  if (a1)
  {
    uint64_t v2 = (unsigned __int8 *)*a1;
    if (v2)
    {
      sub_24B48C3C8(v2, (uint64_t)&unk_2652AD460);
      if (*a1)
      {
        free(*a1);
        *a1 = 0;
      }
    }
  }
}

void sub_24B48B218(void **a1)
{
  if (a1)
  {
    uint64_t v2 = (unsigned __int8 *)*a1;
    if (v2)
    {
      sub_24B48C3C8(v2, (uint64_t)&unk_2652AE728);
      if (*a1)
      {
        free(*a1);
        *a1 = 0;
      }
    }
  }
}

void sub_24B48B264(void **a1)
{
  if (a1)
  {
    uint64_t v2 = (unsigned __int8 *)*a1;
    if (v2)
    {
      sub_24B48C3C8(v2, (uint64_t)&unk_2652B0120);
      if (*a1)
      {
        free(*a1);
        *a1 = 0;
      }
    }
  }
}

uint64_t sub_24B48B2B0(uint64_t a1)
{
  uint64_t v2 = sub_24B4AA55C(a1);
  *(void *)uint64_t v2 = &unk_26FE86000;
  *(void *)(v2 + 376) = 0;
  *(void *)(v2 + 384) = 0;
  *(void *)(v2 + 392) = 0;
  *(_DWORD *)(v2 + 360) = -1;
  *(void *)(v2 + 364) = 0;
  *(void *)(v2 + 370) = 0;
  *(_DWORD *)(v2 + 378) = -1;
  *(_DWORD *)(v2 + 387) = 0;
  *(_DWORD *)(v2 + 384) = 0;
  *(unsigned char *)(v2 + 16) = 7;
  *(_WORD *)(v2 + 32) = 6;
  int v3 = (char *)operator new(0x1E8uLL, MEMORY[0x263F8C180]);
  if (v3)
  {
    *(void *)int v3 = 0;
    *((_DWORD *)v3 + 2) = 0;
    *((void *)v3 + 4) = 0;
    *((void *)v3 + 5) = 0;
    *((void *)v3 + 3) = 0;
    v3[60] = -1;
    *((void *)v3 + 8) = 0;
    *((_DWORD *)v3 + 18) = 0;
    v3[76] = -1;
    *((_WORD *)v3 + 39) = 0;
    v3[80] = 0;
    *((_DWORD *)v3 + 14) = 0;
    *((void *)v3 + 6) = 0;
    *((void *)v3 + 11) = 255;
    *((_DWORD *)v3 + 4) = 0;
    *((void *)v3 + 59) = 0;
    *((void *)v3 + 60) = 0;
    *((void *)v3 + 58) = 0;
    *(_OWORD *)(v3 + 441) = 0u;
    *((_OWORD *)v3 + 26) = 0u;
    *((_OWORD *)v3 + 27) = 0u;
    *((_OWORD *)v3 + 24) = 0u;
    *((_OWORD *)v3 + 25) = 0u;
    *((_OWORD *)v3 + 22) = 0u;
    *((_OWORD *)v3 + 23) = 0u;
    *((_OWORD *)v3 + 20) = 0u;
    *((_OWORD *)v3 + 21) = 0u;
    *((_OWORD *)v3 + 18) = 0u;
    *((_OWORD *)v3 + 19) = 0u;
    *((_OWORD *)v3 + 16) = 0u;
    *((_OWORD *)v3 + 17) = 0u;
    *((_OWORD *)v3 + 14) = 0u;
    *((_OWORD *)v3 + 15) = 0u;
    *((_OWORD *)v3 + 12) = 0u;
    *((_OWORD *)v3 + 13) = 0u;
    *((_OWORD *)v3 + 10) = 0u;
    *((_OWORD *)v3 + 11) = 0u;
    *((_OWORD *)v3 + 8) = 0u;
    *((_OWORD *)v3 + 9) = 0u;
    *((_OWORD *)v3 + 6) = 0u;
    *((_OWORD *)v3 + 7) = 0u;
  }
  *(void *)(a1 + 40) = v3;
  return a1;
}

uint64_t sub_24B48B3C0(uint64_t a1)
{
  *(void *)a1 = &unk_26FE86000;
  if (*(_WORD *)(a1 + 32) == 6)
  {
    uint64_t v2 = *(void **)(a1 + 40);
    if (v2)
    {
      int v3 = (void *)v2[58];
      if (v3)
      {
        v2[59] = v3;
        operator delete(v3);
      }
      sub_24B48BC40((uint64_t)(v2 + 12));
      int v4 = (void *)v2[3];
      if (v4)
      {
        v2[4] = v4;
        operator delete(v4);
      }
      MEMORY[0x24C5D2700](v2, 0x1010C40F88FA712);
    }
    *(void *)(a1 + 40) = 0;
  }
  return sub_24B4AA64C(a1);
}

void sub_24B48B46C(uint64_t a1)
{
  sub_24B48B3C0(a1);
  JUMPOUT(0x24C5D2700);
}

uint64_t sub_24B48B4A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_24B48B4AC(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2
    && (v3 = sub_24B4AB040(), (uint64_t v4 = sub_24B4ABD9C(v3, *(_DWORD *)(v2 + 376))) != 0)
    && sub_24B498250(v4, *(void *)(a1 + 40) + 464, *(unsigned int *)(*(void *)(a1 + 8) + 376), *(_DWORD *)(*(void *)(a1 + 8) + 596)))
  {
    int v5 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v6[0] = 67109120;
      v6[1] = 515;
      _os_log_error_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v6, 8u);
    }
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 40) + 8) = 1;
  }
}

uint64_t sub_24B48B594(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  if (*(void *)(a1 + 8))
  {
    sub_24B4AAEA4(a1, a2);
    int v24 = 0;
    uint64_t v3 = *(void *)(a1 + 40);
    if (*(_DWORD *)(v3 + 4))
    {
      uint64_t v4 = sub_24B4AB040();
      uint64_t v3 = *(void *)(a1 + 40);
      sub_24B4AD824(v4, *(unsigned __int8 *)(v3 + 456), &v24);
    }
    if (!*(_DWORD *)v3)
    {
      uint64_t v16 = sub_24B4B1200();
      int v17 = *(_DWORD *)(*(void *)(a1 + 8) + 376);
      *((void *)&buf + 1) = 0;
      int v26 = 0;
      LODWORD(buf) = v17;
      char v29 = -1;
      unint64_t v27 = 6;
      int v28 = v24;
      sub_24B4B21B4(v16, (unsigned int *)&buf);
      *(unsigned char *)(a1 + 361) = -1;
LABEL_31:
      sub_24B48B960(a1);
      return 0;
    }
    int v5 = *(_DWORD *)(v3 + 56);
    if (*(_DWORD *)(v3 + 52))
    {
      if (v5)
      {
        *(_WORD *)(a1 + 360) = 1;
        unsigned int v6 = *(_DWORD *)(v3 + 64);
        *(_DWORD *)(a1 + 368) = v6;
        BOOL v7 = *(unsigned __int8 *)(v3 + 60) == 1;
        *(unsigned char *)(a1 + 362) = v7;
        unsigned int v8 = *(_DWORD *)(v3 + 68);
        *(_DWORD *)(a1 + 372) = v8;
        __int16 v9 = *(_WORD *)(v3 + 78);
        *(_WORD *)(a1 + 376) = v9;
        BOOL v10 = *(unsigned __int8 *)(v3 + 76) == 1;
        *(unsigned char *)(a1 + 363) = v10;
        char v11 = *(unsigned char *)(v3 + 80);
        *(unsigned char *)(a1 + 381) = v11;
        *(unsigned char *)(a1 + 382) = *(unsigned char *)(v3 + 75);
        if (!*(_DWORD *)(v3 + 48))
        {
          char v12 = *(unsigned char *)(a1 + 378);
          char v13 = *(unsigned char *)(a1 + 379);
LABEL_23:
          char v29 = 0;
          uint64_t v31 = -1;
          int v32 = 0;
          long long buf = 0x100000000uLL;
          if (v7) {
            int v19 = 2;
          }
          else {
            int v19 = 1;
          }
          int v26 = v19;
          unint64_t v27 = __PAIR64__(v8, v6);
          LOWORD(v28) = v9;
          if (v10) {
            int v20 = 2;
          }
          else {
            int v20 = 1;
          }
          int v30 = v20;
          BYTE2(v28) = v12;
          HIBYTE(v28) = v13;
          LOBYTE(v31) = v11;
          uint64_t v21 = sub_24B4B1200();
          sub_24B4B2BA8(v21, *(_DWORD *)(*(void *)(a1 + 8) + 376), 6, 0, v24, &buf);
          __int16 v22 = *(unsigned __int8 **)(*(void *)(a1 + 40) + 24);
          if (*(void *)(*(void *)(a1 + 40) + 32) - (void)v22 == 13)
          {
            *(_WORD *)(a1 + 384) = v22[1] + 10 * *v22 + 1472;
            *(unsigned char *)(a1 + 386) = v22[3] + 10 * v22[2] - 16;
            *(unsigned char *)(a1 + 387) = v22[5] + 10 * v22[4] - 16;
            *(unsigned char *)(a1 + 388) = v22[7] + 10 * v22[6] - 16;
            *(unsigned char *)(a1 + 389) = v22[9] + 10 * v22[8] - 16;
            *(unsigned char *)(a1 + 390) = v22[11] + 10 * v22[10] - 16;
          }
          goto LABEL_31;
        }
LABEL_21:
        char v12 = *(unsigned char *)(v3 + 72);
        *(unsigned char *)(a1 + 378) = v12;
        char v13 = *(unsigned char *)(v3 + 73);
        *(unsigned char *)(a1 + 379) = v13;
        *(unsigned char *)(a1 + 380) = *(unsigned char *)(v3 + 74);
        goto LABEL_23;
      }
      if (*(_DWORD *)(v3 + 48))
      {
        char v11 = 0;
        BOOL v10 = 0;
        __int16 v9 = 0;
        *(_WORD *)(a1 + 360) = 1;
        unsigned int v6 = *(_DWORD *)(v3 + 64);
        *(_DWORD *)(a1 + 368) = v6;
        BOOL v7 = *(unsigned __int8 *)(v3 + 60) == 1;
        *(unsigned char *)(a1 + 362) = v7;
        unsigned int v8 = *(_DWORD *)(v3 + 68);
        *(_DWORD *)(a1 + 372) = v8;
        *(_WORD *)(a1 + 376) = 0;
        *(unsigned char *)(a1 + 363) = 0;
        *(unsigned char *)(a1 + 381) = 0;
        *(unsigned char *)(a1 + 382) = *(unsigned char *)(v3 + 75);
        goto LABEL_21;
      }
    }
    else if (v5 && !*(_DWORD *)(v3 + 48))
    {
      char v13 = 0;
      char v12 = 0;
      char v11 = 0;
      *(_WORD *)(a1 + 360) = 1;
      unsigned int v6 = *(_DWORD *)(v3 + 64);
      *(_DWORD *)(a1 + 368) = v6;
      BOOL v7 = *(unsigned __int8 *)(v3 + 60) == 1;
      *(unsigned char *)(a1 + 362) = v7;
      unsigned int v8 = *(_DWORD *)(v3 + 68);
      *(_DWORD *)(a1 + 372) = v8;
      __int16 v9 = *(_WORD *)(v3 + 78);
      *(_WORD *)(a1 + 376) = v9;
      BOOL v18 = *(unsigned char *)(v3 + 76) == 1;
      *(_DWORD *)(a1 + 378) = 0;
      BOOL v10 = v18;
      *(unsigned char *)(a1 + 363) = v10;
      *(unsigned char *)(a1 + 382) = 0;
      goto LABEL_23;
    }
    char v13 = 0;
    char v12 = 0;
    char v11 = 0;
    BOOL v10 = 0;
    __int16 v9 = 0;
    *(_WORD *)(a1 + 360) = 1;
    unsigned int v6 = *(_DWORD *)(v3 + 64);
    *(_DWORD *)(a1 + 368) = v6;
    BOOL v7 = *(unsigned __int8 *)(v3 + 60) == 1;
    *(unsigned char *)(a1 + 362) = v7;
    unsigned int v8 = *(_DWORD *)(v3 + 68);
    *(_DWORD *)(a1 + 376) = 0;
    *(_DWORD *)(a1 + 379) = 0;
    *(_DWORD *)(a1 + 372) = v8;
    *(unsigned char *)(a1 + 363) = 0;
    goto LABEL_23;
  }
  int v14 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    *(void *)&long long buf = 0x20104000100;
    _os_log_error_impl(&dword_24B3DE000, v14, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&buf, 8u);
  }
  return -1;
}

void sub_24B48B960(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (**(_DWORD **)(a1 + 40))
  {
    if (!v2) {
      return;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 361) = -1;
    if (!v2) {
      return;
    }
  }
  uint64_t v3 = sub_24B4A4C30();
  *(void *)(v3 + 40) = *(void *)(v3 + 32);
  uint64_t v4 = (void *)sub_24B4A113C();
  sub_24B480554((uint64_t)off_2697C5530, *(_DWORD *)(*(void *)(a1 + 8) + 376));
  sub_24B4A1BBC(v4);
  uint64_t v5 = sub_24B4A4C30();
  int v6 = *(_DWORD *)(*(void *)(a1 + 8) + 376);
  sub_24B4A5E5C(v5, v6);
}

BOOL sub_24B48B9F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    *(void *)(a1 + 48) = *(void *)(v4 + 64);
    uint64_t v5 = a1 + 48;
    *(_WORD *)(a1 + 56) = *(_WORD *)(v4 + 72);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(v4 + 80);
    sub_24B48BD54(a1 + 72, v4 + 88);
    if (v5 != v4 + 64)
    {
      sub_24B3EAC0C((void *)(a1 + 248), *(char **)(v4 + 264), *(char **)(v4 + 272), *(void *)(v4 + 272) - *(void *)(v4 + 264));
      *(unsigned char *)(a1 + 272) = *(unsigned char *)(v4 + 288);
      *(unsigned char *)(a1 + 280) = *(unsigned char *)(v4 + 296);
      sub_24B3EAC0C((void *)(a1 + 288), *(char **)(v4 + 304), *(char **)(v4 + 312), *(void *)(v4 + 312) - *(void *)(v4 + 304));
      sub_24B3EAC0C((void *)(a1 + 312), *(char **)(v4 + 328), *(char **)(v4 + 336), *(void *)(v4 + 336) - *(void *)(v4 + 328));
      sub_24B3EAC0C((void *)(a1 + 336), *(char **)(v4 + 352), *(char **)(v4 + 360), *(void *)(v4 + 360) - *(void *)(v4 + 352));
    }
  }
  v13[0] = (uint64_t)a2;
  v13[1] = a1 + 24;
  if (sub_24B49CC6C(v13))
  {
    int v6 = qword_26B17C488;
    BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
    if (result)
    {
      *(_DWORD *)long long buf = 67109120;
      int v15 = 770;
      _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      return 0;
    }
  }
  else
  {
    int v12 = 0;
    if (*(_DWORD *)(*(void *)(a1 + 40) + 4))
    {
      uint64_t v8 = sub_24B4AB040();
      sub_24B4AD824(v8, *(unsigned __int8 *)(*(void *)(a1 + 40) + 456), &v12);
      int v9 = v12;
    }
    else
    {
      int v9 = 0;
    }
    uint64_t v10 = sub_24B4B1200();
    int v11 = *(_DWORD *)(*(void *)(a1 + 8) + 376);
    uint64_t v16 = 0;
    v17[0] = 0;
    *(_DWORD *)long long buf = v11;
    char v18 = -1;
    *(void *)&v17[1] = 7;
    v17[3] = v9;
    sub_24B4B21B4(v10, (unsigned int *)buf);
    sub_24B4AAF40(a1, a2);
    return 1;
  }
  return result;
}

void sub_24B48BBCC(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 48) != 1)
  {
    *(_DWORD *)(a1 + 48) = 1;
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      *(_WORD *)(a1 + 56) = *(_DWORD *)(v2 + 376);
      int v3 = *(_DWORD *)(v2 + 596);
      uint64_t v4 = sub_24B4AB040();
      sub_24B4AB4A8(v4, a1 + 64, v3);
    }
  }
}

uint64_t sub_24B48BC40(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 336);
  if (v2)
  {
    *(void *)(a1 + 344) = v2;
    operator delete(v2);
  }
  int v3 = *(void **)(a1 + 312);
  if (v3)
  {
    *(void *)(a1 + 320) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void **)(a1 + 288);
  if (v4)
  {
    *(void *)(a1 + 296) = v4;
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(a1 + 264);
  if (v5)
  {
    *(void *)(a1 + 272) = v5;
    operator delete(v5);
  }
  int v6 = *(void **)(a1 + 240);
  if (v6)
  {
    *(void *)(a1 + 248) = v6;
    operator delete(v6);
  }
  BOOL v7 = *(void **)(a1 + 216);
  if (v7)
  {
    *(void *)(a1 + 224) = v7;
    operator delete(v7);
  }
  uint64_t v8 = *(void **)(a1 + 192);
  if (v8)
  {
    *(void *)(a1 + 200) = v8;
    operator delete(v8);
  }
  int v9 = *(void **)(a1 + 168);
  if (v9)
  {
    *(void *)(a1 + 176) = v9;
    operator delete(v9);
  }
  uint64_t v10 = *(void **)(a1 + 144);
  if (v10)
  {
    *(void *)(a1 + 152) = v10;
    operator delete(v10);
  }
  int v11 = *(void **)(a1 + 120);
  if (v11)
  {
    *(void *)(a1 + 128) = v11;
    operator delete(v11);
  }
  int v12 = *(void **)(a1 + 96);
  if (v12)
  {
    *(void *)(a1 + 104) = v12;
    operator delete(v12);
  }
  char v13 = *(void **)(a1 + 72);
  if (v13)
  {
    *(void *)(a1 + 80) = v13;
    operator delete(v13);
  }
  int v14 = *(void **)(a1 + 48);
  if (v14)
  {
    *(void *)(a1 + 56) = v14;
    operator delete(v14);
  }
  int v15 = *(void **)(a1 + 24);
  if (v15)
  {
    *(void *)(a1 + 32) = v15;
    operator delete(v15);
  }
  uint64_t v16 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + 8) = v16;
    operator delete(v16);
  }
  return a1;
}

uint64_t sub_24B48BD54(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_24B3EAC0C((void *)a1, *(char **)a2, *(char **)(a2 + 8), *(void *)(a2 + 8) - *(void *)a2);
    sub_24B3EAC0C((void *)(a1 + 24), *(char **)(a2 + 24), *(char **)(a2 + 32), *(void *)(a2 + 32) - *(void *)(a2 + 24));
    sub_24B3EAC0C((void *)(a1 + 48), *(char **)(a2 + 48), *(char **)(a2 + 56), *(void *)(a2 + 56) - *(void *)(a2 + 48));
    sub_24B3EAC0C((void *)(a1 + 72), *(char **)(a2 + 72), *(char **)(a2 + 80), *(void *)(a2 + 80) - *(void *)(a2 + 72));
    sub_24B3EAC0C((void *)(a1 + 96), *(char **)(a2 + 96), *(char **)(a2 + 104), *(void *)(a2 + 104) - *(void *)(a2 + 96));
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    sub_24B3EAC0C((void *)(a1 + 128), *(char **)(a2 + 128), *(char **)(a2 + 136), *(void *)(a2 + 136) - *(void *)(a2 + 128));
    sub_24B3EAC0C((void *)(a1 + 152), *(char **)(a2 + 152), *(char **)(a2 + 160), *(void *)(a2 + 160) - *(void *)(a2 + 152));
  }
  return a1;
}

uint64_t sub_24B48BE00(uint64_t result, unsigned char *a2, int a3)
{
  switch((int)result)
  {
    case 1:
      *a2 = a3;
      break;
    case 2:
      *(_WORD *)a2 = a3;
      break;
    case 8:
      *(void *)a2 = a3;
      break;
    default:
      *(_DWORD *)a2 = a3;
      break;
  }
  return result;
}

uint64_t sub_24B48BE70(unsigned int *a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3;
  for (uint64_t i = a4; ; uint64_t i = *(void *)(i + 24))
  {
    uint64_t v8 = *(uint64_t (***)(void))(i + 16);
    if (v8)
    {
      int v9 = *v8;
      if (*v8) {
        break;
      }
    }
    if ((*(_DWORD *)i & 0xFFFFFFFE) != 0xAA)
    {
      if ((*(unsigned char *)(i + 4) & 4) == 0)
      {
        if (a1 != a2)
        {
          if (*(_DWORD *)i == 128) {
            size_t v10 = *(void *)(a4 + 8);
          }
          else {
            size_t v10 = *(void *)(i + 8);
          }
          memcpy(a1, a2, v10);
        }
        return (uint64_t)a1;
      }
      if (a1 != a2 && (a3 & 0x10) != 0) {
        sub_24B48C3C8((unsigned __int8 *)a1, i);
      }
      if ((v4 & 0x10) != 0 && a1 == a2)
      {
LABEL_18:
        if ((*(_DWORD *)i - 136) <= 0x2D)
        {
          if (((1 << (*(unsigned char *)i + 120)) & 0x1E1) != 0)
          {
            if (*(void *)a1)
            {
              if ((v4 & 8) != 0) {
                char v15 = 86;
              }
              else {
                char v15 = 84;
              }
              **(unsigned char **)a1 = v15;
            }
          }
          else if (((1 << (*(unsigned char *)i + 120)) & 0x280000000400) != 0)
          {
            a1[5] = v4 & 8;
          }
          else if (((1 << (*(unsigned char *)i + 120)) & 0x14) != 0)
          {
            a1[1] = v4 & 8;
          }
        }
        return (uint64_t)a1;
      }
      int v12 = *(_DWORD *)i;
      if (*(int *)i > 145)
      {
        switch(v12)
        {
          case 172:
            if (!*(void *)(i + 24)) {
              goto LABEL_73;
            }
            unint64_t v27 = a1;
            int v28 = a2;
            uint64_t v29 = v4;
            goto LABEL_85;
          case 173:
            if ((v4 & 0x20) == 0) {
              memcpy(a1, a2, *(void *)(i + 8));
            }
            int v30 = *(_DWORD *)(i + 32);
            if (v30)
            {
              uint64_t v31 = 0;
              for (unint64_t j = 0; j < v30; ++j)
              {
                uint64_t v33 = *(void *)(i + 24);
                if ((*(unsigned char *)(*(void *)(v33 + v31) + 4) & 4) != 0)
                {
                  sub_24B48BE70((char *)a1 + *(void *)(v33 + v31 + 8), (char *)a2 + *(void *)(v33 + v31 + 8), v4 & 0xF | 0x20);
                  int v30 = *(_DWORD *)(i + 32);
                }
                v31 += 24;
              }
            }
            goto LABEL_18;
          case 174:
          case 176:
            bzero(a1, *(void *)(i + 8));
            uint64_t v13 = *(unsigned int *)(i + 48);
            switch((int)v13)
            {
              case 1:
                unsigned int v14 = *(unsigned __int8 *)a2;
                break;
              case 2:
                unsigned int v14 = *(__int16 *)a2;
                break;
              default:
                unsigned int v14 = *a2;
                break;
            }
            sub_24B48BE00(v13, a1, v14);
            if (v14 < *(_DWORD *)(i + 32)) {
              sub_24B48BE70((char *)a1 + *(void *)(i + 40), (char *)a2 + *(void *)(i + 40), v4 & 0xF);
            }
            LOBYTE(v4) = v4 & 0x1F;
            goto LABEL_18;
          case 175:
          case 177:
          case 178:
          case 182:
          case 185:
            goto LABEL_73;
          case 179:
          case 180:
          case 181:
            goto LABEL_59;
          case 183:
          case 184:
            if (*(_DWORD *)(i + 32))
            {
              unint64_t v21 = 0;
              do
              {
                unint64_t v22 = *(void *)(*(void *)(i + 24) + 8) * v21;
                sub_24B48BE70((char *)a1 + v22, (char *)a2 + v22, v4 & 0xF);
                ++v21;
              }
              while (v21 < *(int *)(i + 32));
            }
            goto LABEL_18;
          case 186:
            __int16 v34 = *(const char **)a2;
            if ((v4 & 1) != 0 && v34)
            {
              unint64_t v27 = malloc_type_calloc(1uLL, *(void *)(*(void *)(i + 24) + 8), 0xE275099CuLL);
              *(void *)a1 = v27;
              int v28 = *(unsigned int **)a2;
              uint64_t v29 = 9;
LABEL_85:
              sub_24B48BE70(v27, v28, v29);
            }
            else
            {
              *(void *)a1 = v34;
              *(void *)a2 = 0;
            }
            break;
          default:
            if (v12 != 146) {
              goto LABEL_73;
            }
LABEL_59:
            int v23 = a2[4];
            if (v23 >= 1 && ((v4 & 1) != 0 || (v4 & 2) != 0 && a2[5]))
            {
              int v24 = *(const char **)a2;
              char v25 = malloc_type_calloc(1uLL, *(void *)(i + 32), 0xABB6DAB2uLL);
              *(void *)a1 = v25;
              while (1)
              {
                sub_24B48BE70(&v25[*(void *)(i + 40)], &v24[*(void *)(i + 40)], v4 & 7 | 8);
                if (*(_DWORD *)i == 180) {
                  *((_DWORD *)v25 + 2) = *((_DWORD *)v24 + 2);
                }
                int v24 = *(const char **)v24;
                if (!v24) {
                  break;
                }
                int v26 = malloc_type_calloc(1uLL, *(void *)(i + 32), 0xAFB415BFuLL);
                *(void *)char v25 = v26;
                char v25 = v26;
              }
              *(void *)char v25 = 0;
              *((void *)a1 + 1) = v25;
              int v23 = a2[4];
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
            }
            a1[4] = v23;
            LOBYTE(v4) = v4 & 0x1F;
            break;
        }
        goto LABEL_18;
      }
      if (v12 <= 140)
      {
        if (v12 == 136) {
          goto LABEL_38;
        }
        if (v12 == 138 || v12 == 140)
        {
          size_t v17 = *a2;
          if ((int)v17 >= 1 && ((v4 & 1) != 0 || (v4 & 2) != 0 && a2[1]))
          {
            char v18 = malloc_type_calloc(1uLL, v17, 0xE945716AuLL);
            *((void *)a1 + 1) = v18;
            memcpy(v18, *((const void **)a2 + 1), (int)*a2);
          }
          else
          {
            *((void *)a1 + 1) = *((void *)a2 + 1);
          }
          *a1 = *a2;
          goto LABEL_18;
        }
      }
      else if ((v12 - 141) < 4)
      {
LABEL_38:
        uint64_t v16 = *(const char **)a2;
        if (*(void *)a2 && ((v4 & 1) != 0 || (v4 & 2) != 0 && *v16 != 84))
        {
          size_t v19 = strlen(v16);
          int v20 = (char *)malloc_type_calloc(1uLL, v19 + 1, 0xB7754DC3uLL);
          *(void *)a1 = v20;
          strcpy(v20, *(const char **)a2);
        }
        else
        {
          *(void *)a1 = v16;
        }
        goto LABEL_18;
      }
LABEL_73:
      memcpy(a1, a2, *(void *)(i + 8));
      goto LABEL_18;
    }
  }
  return v9();
}

void sub_24B48C3C8(unsigned __int8 *a1, uint64_t a2)
{
  while (1)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4)
    {
      uint64_t v5 = *(void (**)(void))(v4 + 16);
      if (v5) {
        break;
      }
    }
    int v6 = *(_DWORD *)a2;
    if ((*(_DWORD *)a2 - 170) >= 2)
    {
      if (v6 <= 145)
      {
        if (v6 <= 140)
        {
          if (v6 != 136)
          {
            if (v6 != 138 && v6 != 140) {
              return;
            }
            uint64_t v8 = (void *)*((void *)a1 + 1);
            if (!v8) {
              return;
            }
            goto LABEL_17;
          }
        }
        else if ((v6 - 141) >= 4)
        {
          return;
        }
        uint64_t v8 = *(void **)a1;
        if (!*(void *)a1) {
          return;
        }
      }
      else
      {
        switch(v6)
        {
          case 173:
            int v11 = *(_DWORD *)(a2 + 32);
            if (v11)
            {
              uint64_t v12 = 0;
              for (unint64_t i = 0; i < v11; ++i)
              {
                uint64_t v14 = *(void *)(a2 + 24);
                if (*(unsigned char *)(*(void *)(v14 + v12) + 4))
                {
                  sub_24B48C3C8(&a1[*(void *)(v14 + v12 + 8)]);
                  int v11 = *(_DWORD *)(a2 + 32);
                }
                v12 += 24;
              }
            }
            return;
          case 174:
          case 176:
            switch(*(_DWORD *)(a2 + 48))
            {
              case 1:
                int v7 = *a1;
                break;
              case 2:
                int v7 = *(__int16 *)a1;
                break;
              default:
                int v7 = *(_DWORD *)a1;
                break;
            }
            if (v7 < (unint64_t)*(unsigned int *)(a2 + 32)
              && (*(unsigned char *)(*(void *)(*(void *)(a2 + 24) + 8 * v7) + 4) & 1) != 0)
            {
              sub_24B48C3C8(&a1[*(void *)(a2 + 40)]);
            }
            size_t v15 = *(void *)(a2 + 8);
            bzero(a1, v15);
            return;
          case 175:
          case 177:
          case 178:
          case 182:
          case 185:
            return;
          case 179:
          case 180:
          case 181:
            goto LABEL_33;
          case 183:
          case 184:
            if ((*(unsigned char *)(*(void *)(a2 + 24) + 4) & 1) != 0 && *(_DWORD *)(a2 + 32))
            {
              unint64_t v9 = 0;
              do
                sub_24B48C3C8(&a1[*(void *)(*(void *)(a2 + 24) + 8) * v9++]);
              while (v9 < *(int *)(a2 + 32));
            }
            return;
          case 186:
            uint64_t v8 = *(void **)a1;
            if (!*(void *)a1) {
              return;
            }
            if (*(unsigned char *)(*(void *)(a2 + 24) + 4))
            {
              ((void (*)(void))sub_24B48C3C8)();
              uint64_t v8 = *(void **)a1;
            }
            break;
          default:
            if (v6 == 146)
            {
LABEL_33:
              while (1)
              {
                size_t v10 = *(void **)a1;
                if (!*(void *)a1) {
                  break;
                }
                if (*(unsigned char *)(*(void *)(a2 + 24) + 4)) {
                  sub_24B48C3C8((char *)v10 + *(void *)(a2 + 40));
                }
                *(void *)a1 = *v10;
                free(v10);
              }
            }
            return;
        }
      }
LABEL_17:
      free(v8);
      return;
    }
    a2 = *(void *)(a2 + 24);
  }
  v5();
}

uint64_t sub_24B48C6A4(unsigned int *a1, unsigned __int8 *a2, __int16 *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    if (!setjmp((int *)a1 + 1))
    {
      *((unsigned char *)a1 + 196) = 1;
      *a1 = 0;
      *((void *)a1 + 25) = a2;
      *((void *)a1 + 89) = 1;
      *((void *)a1 + 101) = a2;
      *((void *)a1 + 102) = a3;
      uint64_t v7 = *((void *)a1 + 96);
      *((void *)a1 + 105) = *((void *)a1 + 95);
      *((void *)a1 + 106) = v7;
      LOBYTE(v7) = *((unsigned char *)a1 + 801);
      *((unsigned char *)a1 + 872) = v7;
      uint64_t v8 = *((void *)a1 + 98);
      *((void *)a1 + 107) = v8;
      *((void *)a1 + 108) = v8;
      *((unsigned char *)a1 + 873) = v7;
      if ((*((unsigned char *)a1 + 825) & 8) == 0) {
        *((void *)a1 + 103) = 2080;
      }
      sub_24B48E9B0((uint64_t)a1, a2, a3);
      if (*((void *)a1 + 108) == *((void *)a1 + 107)
        && *((unsigned __int8 *)a1 + 873) == *((unsigned __int8 *)a1 + 872))
      {
        sub_24B48CD70((char *)a1, 0);
      }
      if ((a1[206] & 0x10) != 0)
      {
        size_t v10 = (unsigned char *)*((void *)a1 + 108);
        unsigned int v11 = *((unsigned __int8 *)a1 + 873);
      }
      else
      {
        int v9 = *((unsigned __int8 *)a1 + 873);
        size_t v10 = (unsigned char *)*((void *)a1 + 108);
        unsigned int v11 = 7;
        if (v9 != 7)
        {
          *v10 &= -2 << v9;
          size_t v10 = (unsigned char *)(*((void *)a1 + 108) + 1);
          *((void *)a1 + 108) = v10;
          *((unsigned char *)a1 + 873) = 7;
        }
      }
      uint64_t v12 = &v10[-*((void *)a1 + 107)];
      *((void *)a1 + 98) += v12;
      *((unsigned char *)a1 + 801) = v11;
      *((void *)a1 + 104) = *((unsigned __int8 *)a1 + 872) - (unint64_t)v11 + 8 * (void)v12;
    }
    *((unsigned char *)a1 + 196) = 0;
    return *a1;
  }
  return result;
}

uint64_t sub_24B48C80C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 856);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(result + 736);
  if (v5)
  {
    uint64_t result = v5(result, a2);
    *(unsigned char *)(v3 + 872) = *(unsigned char *)(v3 + 801);
    uint64_t v6 = *(void *)(v3 + 784);
    *(void *)(v3 + 856) = v6;
  }
  else
  {
    uint64_t v6 = *(void *)(result + 856);
  }
  if (v6 - v4 < a2)
  {
    return sub_24B4A103C(v3, 22);
  }
  return result;
}

char *sub_24B48C8A0(char *result, char a2)
{
  uint64_t v3 = result;
  uint64_t v4 = (char *)*((void *)result + 108);
  if (v4 == *((char **)result + 106))
  {
    uint64_t v5 = *((void *)result + 105);
    uint64_t v6 = *((void *)result + 107) - v5;
    uint64_t v7 = &v4[-v5];
    uint64_t result = sub_24B4AF2B0((uint64_t)result, 1);
    *((void *)v3 + 105) = result;
    uint64_t v4 = &v7[(void)result];
    *((void *)v3 + 106) = &v7[(void)result + 1];
    *((void *)v3 + 107) = &result[v6];
    *((void *)v3 + 108) = &v7[(void)result];
  }
  int v8 = v3[873];
  if (v8 == 7)
  {
    *uint64_t v4 = a2 << 7;
    char v9 = v3[873];
  }
  else
  {
    *v4 |= a2 << v8;
    char v9 = v3[873];
    if (!v9)
    {
      ++*((void *)v3 + 108);
      char v10 = 7;
      goto LABEL_8;
    }
  }
  char v10 = v9 - 1;
LABEL_8:
  v3[873] = v10;
  return result;
}

uint64_t sub_24B48C964(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 **)(a1 + 864);
  if (v2 == *(unsigned __int8 **)(a1 + 856))
  {
    sub_24B48C80C(a1, 1);
    uint64_t v2 = *(unsigned __int8 **)(a1 + 864);
  }
  unsigned int v3 = *v2;
  char v4 = *(unsigned char *)(a1 + 873);
  if (v4)
  {
    char v5 = v4 - 1;
  }
  else
  {
    *(void *)(a1 + 864) = v2 + 1;
    char v5 = 7;
  }
  *(unsigned char *)(a1 + 873) = v5;
  return (v3 >> v4) & 1;
}

char *sub_24B48C9D0(char *result, unint64_t a2, unsigned int a3)
{
  if (a3)
  {
    unsigned int v3 = result;
    if (a3 >= 0x21) {
      sub_24B4A10C0((uint64_t)result, 15);
    }
    int v5 = result[873];
    unsigned __int8 v6 = a3 - v5 + 7;
    char v7 = v6 & 7;
    uint64_t v8 = v6 >> 3;
    char v9 = (char *)*((void *)result + 108);
    if ((v6 & 7) != 0) {
      unint64_t v10 = (unint64_t)&v9[v8 + 1];
    }
    else {
      unint64_t v10 = (unint64_t)&v9[v8];
    }
    unint64_t v11 = *((void *)result + 106);
    if (v10 > v11)
    {
      uint64_t v12 = (uint64_t)&v9[((v6 & 7) != 0) + v8 - v11];
      uint64_t v13 = *((void *)result + 105);
      uint64_t v14 = *((void *)result + 107) - v13;
      size_t v15 = &v9[-v13];
      uint64_t v16 = v11 - v13;
      uint64_t result = sub_24B4AF2B0((uint64_t)result, v12);
      *((void *)v3 + 105) = result;
      *((void *)v3 + 106) = &result[v16 + v12];
      *((void *)v3 + 107) = &result[v14];
      char v9 = &v15[(void)result];
      *((void *)v3 + 108) = &v15[(void)result];
      int v5 = v3[873];
    }
    if (v5 == 7) {
      *char v9 = 0;
    }
    if (v6 >= 8u)
    {
      size_t v19 = (unsigned char *)(*((void *)v3 + 108) + v8);
      *((void *)v3 + 108) = v19;
      if ((v6 & 7) != 0)
      {
        *size_t v19 = a2 << (8 - v7);
        a2 >>= v7;
        size_t v19 = (unsigned char *)*((void *)v3 + 108);
      }
      char v18 = v19 - 1;
      if (v6 >= 0x10u)
      {
        do
        {
          *v18-- = a2;
          LODWORD(v8) = v8 - 1;
          a2 >>= 8;
        }
        while (v8 > 1u);
      }
      unsigned int v17 = (0xFFu >> (7 - v3[873])) & a2;
    }
    else
    {
      unsigned int v17 = (0xFFu >> (7 - v3[873])) & (a2 << (8 - v7));
      char v18 = (unsigned char *)*((void *)v3 + 108);
    }
    *v18 |= v17;
    v3[873] = v7 ^ 7;
  }
  return result;
}

unint64_t sub_24B48CB84(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = *(unint64_t **)(a1 + 864);
  uint64_t v3 = *(void *)(a1 + 856) - (void)v2;
  if (v3 <= 0
    || a2 > 0x20
    || (uint64_t v4 = *(unsigned __int8 *)(a1 + 873), v5 = v4 - *(unsigned __int8 *)(a1 + 872) + 8 * v3, v5 < a2))
  {
    sub_24B48CC38(a1, a2);
    return 0;
  }
  if (v5 < 64)
  {
    return sub_24B48CC80(a1, a2);
  }
  else
  {
    unint64_t v6 = *v2;
    *(void *)(a1 + 864) = (char *)v2 + ((int)(7 - v4 + a2) >> 3);
    *(unsigned char *)(a1 + 873) = (v4 - a2) & 7;
    return bswap64(v6) << (7 - v4) >> -(char)a2;
  }
}

uint64_t sub_24B48CC38(uint64_t a1, unsigned int a2)
{
  if (a2 >= 0x21) {
    sub_24B4A10C0(a1, 15);
  }
  return sub_24B4A103C(a1, 22);
}

uint64_t sub_24B48CC80(uint64_t a1, unsigned int a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 873);
  if (v2 == 7)
  {
    unint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *(unsigned __int8 **)(a1 + 864);
    unint64_t v5 = (*v4 << (7 - v2));
    if (v2 + 1 >= a2)
    {
      unint64_t v3 = v5 >> (8 - a2);
      if (v2 + 1 == a2)
      {
        *(unsigned char *)(a1 + 873) = 7;
        *(void *)(a1 + 864) = v4 + 1;
        return v3;
      }
      char v7 = v2 - a2;
LABEL_14:
      *(unsigned char *)(a1 + 873) = v7;
      return v3;
    }
    unint64_t v3 = v5 >> (7 - v2);
    LOBYTE(a2) = ~(_BYTE)v2 + a2;
    *(void *)(a1 + 864) = v4 + 1;
  }
  if (a2 >= 8u)
  {
    uint64_t v6 = *(void *)(a1 + 864) + 1;
    do
    {
      unint64_t v3 = *(unsigned __int8 *)(v6 - 1) | (v3 << 8);
      LOBYTE(a2) = a2 - 8;
      *(void *)(a1 + 864) = v6++;
    }
    while (a2 > 7u);
  }
  if (!(_BYTE)a2)
  {
    char v7 = 7;
    goto LABEL_14;
  }
  *(unsigned char *)(a1 + 873) = a2 ^ 7;
  return (v3 << a2) | (**(unsigned __int8 **)(a1 + 864) >> (8 - a2));
}

char *sub_24B48CD70(char *result, unsigned int a2)
{
  unint64_t v3 = result;
  int v4 = result[873];
  unint64_t v5 = (char *)*((void *)result + 108);
  if (v4 == 7)
  {
    if (v5 == *((char **)result + 106))
    {
      uint64_t v6 = *((void *)result + 105);
      uint64_t v7 = *((void *)result + 107) - v6;
      uint64_t v8 = &v5[-v6];
      uint64_t result = sub_24B4AF2B0((uint64_t)result, 1);
      *((void *)v3 + 105) = result;
      unint64_t v5 = &v8[(void)result];
      *((void *)v3 + 106) = &v8[(void)result + 1];
      *((void *)v3 + 107) = &result[v7];
      *((void *)v3 + 108) = &v8[(void)result];
    }
    *unint64_t v5 = a2;
    ++*((void *)v3 + 108);
  }
  else
  {
    if (v5 + 1 == *((char **)result + 106))
    {
      uint64_t v9 = *((void *)result + 105);
      uint64_t v10 = *((void *)result + 107) - v9;
      unint64_t v11 = &v5[-v9];
      uint64_t v12 = &v5[-v9 + 1];
      uint64_t result = sub_24B4AF2B0((uint64_t)result, 1);
      *((void *)v3 + 105) = result;
      *((void *)v3 + 106) = &v12[(void)result + 1];
      *((void *)v3 + 107) = &result[v10];
      unint64_t v5 = &v11[(void)result];
      *((void *)v3 + 108) = &v11[(void)result];
      LOBYTE(v4) = v3[873];
    }
    *v5 |= a2 >> (7 - v4);
    uint64_t v13 = *((void *)v3 + 108);
    *((void *)v3 + 108) = v13 + 1;
    *(unsigned char *)(v13 + 1) = a2 << (v3[873] + 1);
  }
  return result;
}

uint64_t sub_24B48CE94(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 873);
  if (v2 == 7)
  {
    unint64_t v3 = *(unsigned char **)(a1 + 864);
    if (v3 == *(unsigned char **)(a1 + 856))
    {
      sub_24B48C80C(a1, 1);
      unint64_t v3 = *(unsigned char **)(a1 + 864);
    }
    LOBYTE(v4) = *v3;
    *(void *)(a1 + 864) = v3 + 1;
  }
  else
  {
    unint64_t v5 = *(unsigned __int8 **)(a1 + 864);
    uint64_t v6 = *(void *)(a1 + 856) - (void)v5;
    if (v6 <= 1)
    {
      sub_24B48C80C(a1, 2 - v6);
      unint64_t v5 = *(unsigned __int8 **)(a1 + 864);
      LOBYTE(v2) = *(unsigned char *)(a1 + 873);
    }
    int v7 = *v5 << (7 - v2);
    *(void *)(a1 + 864) = v5 + 1;
    return ((v5[1] >> (v2 + 1)) | v7);
  }
  return v4;
}

void sub_24B48CF44(uint64_t a1, size_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 873);
  unint64_t v5 = *(char **)(a1 + 864);
  uint64_t v6 = &v5[a2];
  unint64_t v7 = *(void *)(a1 + 848);
  if (v4 == 7)
  {
    if ((unint64_t)v6 > v7)
    {
      uint64_t v8 = (uint64_t)&v5[a2 - v7];
      uint64_t v9 = *(void *)(a1 + 840);
      uint64_t v10 = *(void *)(a1 + 856) - v9;
      unint64_t v11 = &v5[-v9];
      uint64_t v12 = v7 - v9;
      uint64_t v13 = sub_24B4AF2B0(a1, v8);
      *(void *)(a1 + 840) = v13;
      *(void *)(a1 + 848) = &v13[v12 + v8];
      *(void *)(a1 + 856) = &v13[v10];
      unint64_t v5 = &v11[(void)v13];
      *(void *)(a1 + 864) = v5;
    }
  }
  else
  {
    if ((unint64_t)v6 >= v7)
    {
      uint64_t v14 = (uint64_t)&v5[a2 - v7 + 1];
      uint64_t v15 = *(void *)(a1 + 840);
      uint64_t v16 = *(void *)(a1 + 856) - v15;
      unsigned int v17 = &v5[-v15];
      uint64_t v18 = v7 - v15;
      size_t v19 = sub_24B4AF2B0(a1, v14);
      *(void *)(a1 + 840) = v19;
      *(void *)(a1 + 848) = &v19[v18 + v14];
      *(void *)(a1 + 856) = &v19[v16];
      unint64_t v5 = &v17[(void)v19];
      *(void *)(a1 + 864) = v5;
      LOBYTE(v4) = *(unsigned char *)(a1 + 873);
    }
    *v5 &= 510 << v4;
    unint64_t v5 = (char *)(*(void *)(a1 + 864) + 1);
  }
  bzero(v5, a2);
  *(void *)(a1 + 864) += a2;
}

uint64_t sub_24B48D06C(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(void *)(result + 864);
    unint64_t v5 = v4 + a2;
    if (*(unsigned char *)(result + 873) == 7)
    {
      unint64_t v6 = *(void *)(result + 856);
      if (v5 > v6)
      {
        uint64_t v7 = v4 + a2 - v6;
LABEL_7:
        uint64_t result = sub_24B48C80C(result, v7);
        uint64_t v4 = *(void *)(v3 + 864);
      }
    }
    else
    {
      unint64_t v8 = v5 + 1;
      unint64_t v9 = *(void *)(result + 856);
      if (v8 > v9)
      {
        uint64_t v7 = a2 + v4 - v9 + 1;
        goto LABEL_7;
      }
    }
    *(void *)(v3 + 864) = v4 + a2;
  }
  return result;
}

char *sub_24B48D0F4(char *result, unsigned __int8 *__src, size_t __n)
{
  if (__n)
  {
    size_t v3 = __n;
    uint64_t v5 = (uint64_t)result;
    int v6 = result[873];
    uint64_t result = (char *)*((void *)result + 108);
    uint64_t v7 = &result[__n];
    if (v6 == 7)
    {
      unint64_t v8 = *(char **)(v5 + 848);
      if (v7 > v8)
      {
        uint64_t v9 = result - v8 + __n;
        uint64_t v10 = *(void *)(v5 + 840);
        uint64_t v11 = *(void *)(v5 + 856) - v10;
        uint64_t v12 = &result[-v10];
        uint64_t v13 = &v8[-v10];
        uint64_t v14 = sub_24B4AF2B0(v5, v9);
        *(void *)(v5 + 840) = v14;
        *(void *)(v5 + 848) = &v13[v9 + (void)v14];
        *(void *)(v5 + 856) = &v14[v11];
        uint64_t result = &v12[(void)v14];
        *(void *)(v5 + 864) = result;
      }
      uint64_t result = (char *)memcpy(result, __src, v3);
      *(void *)(v5 + 864) += v3;
    }
    else
    {
      unint64_t v15 = *(void *)(v5 + 848);
      if ((unint64_t)(v7 + 1) > v15)
      {
        uint64_t v16 = (uint64_t)&result[__n - v15 + 1];
        uint64_t v17 = *(void *)(v5 + 840);
        uint64_t v18 = *(void *)(v5 + 856) - v17;
        size_t v19 = &result[-v17];
        uint64_t v20 = v15 - v17;
        uint64_t result = sub_24B4AF2B0(v5, v16);
        *(void *)(v5 + 840) = result;
        *(void *)(v5 + 848) = &result[v20 + v16];
        *(void *)(v5 + 856) = &result[v18];
        *(void *)(v5 + 864) = &v19[(void)result];
      }
      do
      {
        **(unsigned char **)(v5 + 864) |= *__src >> (7 - *(unsigned char *)(v5 + 873));
        uint64_t v21 = *(void *)(v5 + 864);
        *(void *)(v5 + 864) = v21 + 1;
        int v22 = *__src++;
        *(unsigned char *)(v21 + 1) = v22 << (*(unsigned char *)(v5 + 873) + 1);
        --v3;
      }
      while (v3);
    }
  }
  return result;
}

uint64_t sub_24B48D268(void *a1, unint64_t a2)
{
  size_t v2 = a2;
  if (a2 >= 0x4000)
  {
    unsigned int v6 = (a2 - 0x10000) >> 16;
    unsigned int v7 = v6 + 1;
    if (a2 >> 16) {
      unsigned __int16 v8 = v6 + 1;
    }
    else {
      unsigned __int16 v8 = 0;
    }
    unint64_t v9 = (unsigned __int16)a2 >> 14;
    if ((unsigned __int16)a2 < 0x4000uLL) {
      unsigned __int16 v10 = v8;
    }
    else {
      unsigned __int16 v10 = v8 + 1;
    }
    BOOL v11 = (unsigned __int16)a2 < 0x4000uLL;
    if ((unsigned __int16)a2 >= 0x4000uLL) {
      unsigned int v12 = 0x4000;
    }
    else {
      unsigned int v12 = 0;
    }
    if ((unsigned __int16)a2 >= 0x8000uLL)
    {
      unsigned __int16 v10 = v8 + 1;
      BOOL v11 = 0;
      unsigned int v12 = 0x8000;
    }
    BOOL v13 = v9 > 2;
    if (v9 > 2) {
      unsigned __int16 v14 = v8 + 1;
    }
    else {
      unsigned __int16 v14 = v10;
    }
    BOOL v15 = v9 <= 2 && v11;
    if (v13) {
      int64_t v16 = 49152;
    }
    else {
      int64_t v16 = v12;
    }
    size_t v17 = (unsigned __int16)a2 - (unint64_t)v16;
    BOOL v24 = v15;
    if (v17 < 0x80)
    {
      sub_24B48CF44((uint64_t)a1, v14);
      uint64_t v18 = (char *)(a1[108] - v17 - v14);
      if ((unint64_t)v18 < a1[105]) {
        sub_24B4A103C((uint64_t)a1, 43);
      }
      if (v17 > a1[106] - (void)&v18[v14]) {
        sub_24B4A103C((uint64_t)a1, 43);
      }
      uint64_t result = (uint64_t)memmove(&v18[v14], v18, v17);
    }
    else
    {
      sub_24B48CF44((uint64_t)a1, v14 + 1);
      uint64_t v18 = (char *)(a1[108] + ~(v17 + v14));
      if ((unint64_t)v18 < a1[105]) {
        sub_24B4A103C((uint64_t)a1, 43);
      }
      if (v17 > a1[106] - (void)&v18[v14 + 1]) {
        sub_24B4A103C((uint64_t)a1, 43);
      }
      uint64_t result = (uint64_t)memmove(&v18[v14 + 1], v18, v17);
      v18[v14] = v2;
      LODWORD(v2) = (v17 >> 8) | 0xFFFFFF80;
    }
    v18[v14 - 1] = v2;
    if (!v24)
    {
      --v14;
      v18 -= v16;
      if ((unint64_t)v18 < a1[105]) {
        uint64_t result = sub_24B4A103C((uint64_t)a1, 43);
      }
      if (v14)
      {
        uint64_t v19 = v14;
        if (a1[106] - (void)&v18[v14] < v16) {
          sub_24B4A103C((uint64_t)a1, 43);
        }
        uint64_t result = (uint64_t)memmove(&v18[v14], v18, v16);
      }
      else
      {
        uint64_t v19 = 0;
      }
      v18[v19 - 1] = (v16 >> 14) | 0xC0;
    }
    if (v8)
    {
      if (v8 == 1)
      {
        uint64_t v20 = v18;
      }
      else
      {
        unsigned __int16 v21 = v14 - 1;
        uint64_t v22 = 0x10000 - (void)v18;
        do
        {
          uint64_t v20 = v18 - 0x10000;
          if ((unint64_t)(v18 - 0x10000) < a1[105]) {
            sub_24B4A103C((uint64_t)a1, 43);
          }
          if (a1[106] + v22 - v21 < 0x10000) {
            sub_24B4A103C((uint64_t)a1, 43);
          }
          int v23 = &v18[v21];
          uint64_t result = (uint64_t)memmove(v23 - 0x10000, v20, 0x10000uLL);
          *(v23 - 65537) = -60;
          --v7;
          --v21;
          v22 += 0x10000;
          uint64_t v18 = v20;
        }
        while ((unsigned __int16)v7 > 1u);
      }
      if ((unint64_t)(v20 - 65537) < a1[105]) {
        uint64_t result = sub_24B4A103C((uint64_t)a1, 43);
      }
      *(v20 - 65537) = -60;
    }
  }
  else
  {
    sub_24B48CF44((uint64_t)a1, 1uLL);
    uint64_t v4 = (unsigned char *)(a1[108] + ~v2);
    if ((unint64_t)v4 < a1[105]) {
      sub_24B4A103C((uint64_t)a1, 43);
    }
    if (a1[106] - (void)(v4 + 1) < v2) {
      sub_24B4A103C((uint64_t)a1, 43);
    }
    uint64_t result = (uint64_t)memmove(v4 + 1, v4, v2);
    *uint64_t v4 = v2;
    *(v4 - 1) = BYTE1(v2) | 0x80;
  }
  return result;
}

unint64_t sub_24B48D5FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 864);
  switch(sub_24B48CE94(a1))
  {
    case 0xC1u:
      unint64_t v3 = *(void *)(a1 + 864) + 0x4000;
      *(void *)(a1 + 864) = v3;
      unint64_t v4 = 0x4000;
      break;
    case 0xC2u:
      unint64_t v3 = *(void *)(a1 + 864) + 0x8000;
      *(void *)(a1 + 864) = v3;
      unint64_t v4 = 0x8000;
      break;
    case 0xC3u:
      unint64_t v3 = *(void *)(a1 + 864) + 49152;
      *(void *)(a1 + 864) = v3;
      unint64_t v4 = 49152;
      break;
    case 0xC4u:
      unint64_t v3 = *(void *)(a1 + 864) + 0x10000;
      *(void *)(a1 + 864) = v3;
      unint64_t v4 = 0x10000;
      break;
    default:
      sub_24B4A103C(a1, 26);
      unint64_t v4 = 0;
      unint64_t v3 = *(void *)(a1 + 864);
      break;
  }
  unint64_t v5 = *(void *)(a1 + 856);
  if (v3 >= v5)
  {
    sub_24B48C80C(a1, v3 - v5);
    unint64_t v3 = *(void *)(a1 + 864);
  }
  unsigned int v6 = sub_24B48CE94(a1);
  if (v6 == 196)
  {
    uint64_t v7 = -(uint64_t)v3;
    do
    {
      uint64_t v8 = *(void *)(a1 + 856) - *(void *)(a1 + 864);
      if (v8 < 0x10000) {
        sub_24B48C80C(a1, 0x10000 - v8);
      }
      v4 += 0x10000;
      if (v4 > v7 + *(void *)(a1 + 848)) {
        sub_24B4A103C(a1, 43);
      }
      memmove((void *)v3, *(const void **)(a1 + 864), 0x10000uLL);
      v3 += 0x10000;
      *(void *)(a1 + 864) += 0x10000;
      unsigned int v6 = sub_24B48CE94(a1);
      v7 -= 0x10000;
    }
    while (v6 == 196);
  }
  char v9 = v6;
  if (v6 >= 0xC1)
  {
    int64_t v10 = (unint64_t)(v6 & 3) << 14;
    uint64_t v11 = *(void *)(a1 + 856) - *(void *)(a1 + 864);
    if (v10 > v11) {
      sub_24B48C80C(a1, v10 - v11);
    }
    v4 += v10;
    if ((uint64_t)(*(void *)(a1 + 848) - v3) < v10) {
      sub_24B4A103C(a1, 43);
    }
    memmove((void *)v3, *(const void **)(a1 + 864), v10);
    v3 += v10;
    *(void *)(a1 + 864) += v10;
    char v9 = sub_24B48CE94(a1);
  }
  if ((v9 & 0xC0) == 0x80)
  {
    uint64_t v12 = sub_24B48CE94(a1) & 0xFFFF80FF | ((v9 & 0x7F) << 8);
    uint64_t v13 = *(void *)(a1 + 856) - *(void *)(a1 + 864);
    if (v12 > v13) {
      sub_24B48C80C(a1, v12 - v13);
    }
    v4 += v12;
    if (*(void *)(a1 + 848) - v3 < v12) {
      sub_24B4A103C(a1, 43);
    }
    unsigned __int16 v14 = *(const void **)(a1 + 864);
    BOOL v15 = (void *)v3;
    size_t v16 = v12;
  }
  else
  {
    if (v9 < 0)
    {
      sub_24B4A103C(a1, 26);
      goto LABEL_35;
    }
    int64_t v17 = v9 & 0x7F;
    uint64_t v18 = *(void *)(a1 + 856) - *(void *)(a1 + 864);
    if (v17 > v18) {
      sub_24B48C80C(a1, v17 - v18);
    }
    v4 += v17;
    if ((uint64_t)(*(void *)(a1 + 848) - v3) < v17) {
      sub_24B4A103C(a1, 43);
    }
    unsigned __int16 v14 = *(const void **)(a1 + 864);
    BOOL v15 = (void *)v3;
    size_t v16 = v17;
  }
  memmove(v15, v14, v16);
LABEL_35:
  *(void *)(a1 + 864) = v2 + 1;
  return v4;
}

uint64_t sub_24B48D8E8(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if (a2 < 0x4000)
  {
    sub_24B48CF44(a1, 1uLL);
    unint64_t v4 = (unsigned char *)(*(void *)(a1 + 864) + ~v2);
    if ((unint64_t)v4 < *(void *)(a1 + 840)) {
      sub_24B4A103C(a1, 43);
    }
    unint64_t v5 = v4 + 1;
    if (*(void *)(a1 + 848) - (void)(v4 + 1) <= v2) {
      sub_24B4A103C(a1, 43);
    }
    uint64_t result = (uint64_t)memmove(v4 + 1, v4, v2 + 1);
    uint64_t v7 = (unsigned char *)(a1 + 873);
    char v8 = *(v4 - 1) & (510 << *(unsigned char *)(a1 + 873));
    *(v4 - 1) = v8;
    *(v4 - 1) = v8 | ((v2 | 0x8000) >> (15 - *(unsigned char *)(a1 + 873)));
    *unint64_t v4 = (v2 | 0x8000) >> (7 - *(unsigned char *)(a1 + 873));
    int v9 = v4[1];
    unsigned int v10 = v9 & (0xFFu >> (7 - *(unsigned char *)(a1 + 873)));
    v4[1] = v9 & (0xFFu >> (7 - *(unsigned char *)(a1 + 873)));
    goto LABEL_69;
  }
  if (a2 >> 16) {
    unsigned int v11 = ((a2 - 0x10000) >> 16) + 1;
  }
  else {
    LOWORD(v11) = 0;
  }
  unsigned int v40 = (a2 - 0x10000) >> 16;
  if ((unsigned __int16)((unsigned __int16)a2 >> 14) <= 2uLL)
  {
    if ((unsigned __int16)a2 < 0x8000uLL)
    {
      if ((unsigned __int16)a2 < 0x4000uLL)
      {
        unsigned int v14 = 0;
        char v12 = 1;
        unsigned __int16 v13 = v11;
      }
      else
      {
        char v12 = 0;
        unsigned __int16 v13 = v11 + 1;
        unsigned int v14 = 0x4000;
      }
    }
    else
    {
      char v12 = 0;
      unsigned __int16 v13 = v11 + 1;
      unsigned int v14 = 0x8000;
    }
  }
  else
  {
    char v12 = 0;
    unsigned __int16 v13 = v11 + 1;
    unsigned int v14 = 49152;
  }
  unint64_t v15 = (unsigned __int16)a2 - (unint64_t)v14;
  if (v15 >= 0x80)
  {
    sub_24B48CF44(a1, v13 + 1);
    size_t v16 = (unsigned char *)(*(void *)(a1 + 864) + ~(v15 + v13));
    if ((unint64_t)v16 < *(void *)(a1 + 840)) {
      sub_24B4A103C(a1, 43);
    }
    size_t v17 = v15 + 1;
    uint64_t v18 = &v16[v13 + 1];
    if (v15 + 1 <= *(void *)(a1 + 848) - (void)v18) {
      goto LABEL_26;
    }
LABEL_25:
    sub_24B4A103C(a1, 43);
    goto LABEL_26;
  }
  sub_24B48CF44(a1, v13);
  size_t v16 = (unsigned char *)(*(void *)(a1 + 864) - v15 - v13);
  if ((unint64_t)v16 < *(void *)(a1 + 840)) {
    sub_24B4A103C(a1, 43);
  }
  size_t v17 = v15 + 1;
  uint64_t v18 = &v16[v13];
  if (v15 >= *(void *)(a1 + 848) - (void)v18) {
    goto LABEL_25;
  }
LABEL_26:
  uint64_t result = (uint64_t)memmove(v18, v16, v17);
  if ((v12 & 1) == 0)
  {
    --v13;
    v16 -= v14;
    if ((unint64_t)v16 < *(void *)(a1 + 840)) {
      uint64_t result = sub_24B4A103C(a1, 43);
    }
    if (v13)
    {
      int64_t v19 = v14 | 1;
      if (*(void *)(a1 + 848) - (void)&v16[v13] < v19) {
        sub_24B4A103C(a1, 43);
      }
      uint64_t result = (uint64_t)memmove(&v16[v13], v16, v19);
    }
    else
    {
      unsigned __int16 v13 = 0;
      --v16;
    }
  }
  if ((_WORD)v11)
  {
    if ((unsigned __int16)v11 != 1)
    {
      unsigned int v20 = v40 + 1;
      unsigned __int16 v21 = v16 - 0x10000;
      unsigned __int16 v22 = v13 - 1;
      uint64_t v23 = 0x10000 - (void)v16;
      do
      {
        if ((unint64_t)v21 < *(void *)(a1 + 840)) {
          sub_24B4A103C(a1, 43);
        }
        if (*(void *)(a1 + 848) + v23 - v22 <= 0x10000) {
          sub_24B4A103C(a1, 43);
        }
        uint64_t result = (uint64_t)memmove(&v21[v22], v21, 0x10001uLL);
        --v20;
        v21 -= 0x10000;
        --v22;
        v23 += 0x10000;
      }
      while ((unsigned __int16)v20 > 1u);
      size_t v16 = v21 + 0x10000;
    }
    v16 -= 65537;
  }
  if (v2 >= 0x10000)
  {
    do
    {
      if ((unint64_t)v16 < *(void *)(a1 + 840)) {
        uint64_t result = sub_24B4A103C(a1, 43);
      }
      char v24 = *v16 & (510 << *(unsigned char *)(a1 + 873));
      *size_t v16 = v24;
      *size_t v16 = v24 | (0xC4u >> (7 - *(unsigned char *)(a1 + 873)));
      char v25 = v16[1] & (0xFFu >> (7 - *(unsigned char *)(a1 + 873)));
      v16[1] = v25;
      v16[1] = v25 | (392 << *(unsigned char *)(a1 + 873));
      v2 -= 0x10000;
      v16 += 65537;
    }
    while (v2 >> 16);
  }
  if (v2 >= 0xC000)
  {
    if ((unint64_t)v16 < *(void *)(a1 + 840)) {
      uint64_t result = sub_24B4A103C(a1, 43);
    }
    int v26 = (unsigned char *)(a1 + 873);
    char v27 = *v16 & (510 << *(unsigned char *)(a1 + 873));
    *size_t v16 = v27;
    *size_t v16 = v27 | (0xC3u >> (7 - *(unsigned char *)(a1 + 873)));
    unsigned int v28 = v16[1] & (0xFFu >> (7 - *(unsigned char *)(a1 + 873)));
    v16[1] &= 0xFFu >> (7 - *(unsigned char *)(a1 + 873));
    uint64_t v29 = -49152;
    char v30 = -122;
    uint64_t v31 = 49153;
LABEL_60:
    v16[1] = v28 | (v30 << *v26);
    v2 += v29;
    v16 += v31;
    goto LABEL_61;
  }
  if (v2 >= 0x8000)
  {
    if ((unint64_t)v16 < *(void *)(a1 + 840)) {
      uint64_t result = sub_24B4A103C(a1, 43);
    }
    int v26 = (unsigned char *)(a1 + 873);
    char v32 = *v16 & (510 << *(unsigned char *)(a1 + 873));
    *size_t v16 = v32;
    *size_t v16 = v32 | (0xC2u >> (7 - *(unsigned char *)(a1 + 873)));
    unsigned int v28 = v16[1] & (0xFFu >> (7 - *(unsigned char *)(a1 + 873)));
    v16[1] &= 0xFFu >> (7 - *(unsigned char *)(a1 + 873));
    uint64_t v29 = -32768;
    char v30 = -124;
    uint64_t v31 = 32769;
    goto LABEL_60;
  }
  if (v2 >= 0x4000)
  {
    if ((unint64_t)v16 < *(void *)(a1 + 840)) {
      uint64_t result = sub_24B4A103C(a1, 43);
    }
    int v26 = (unsigned char *)(a1 + 873);
    char v33 = *v16 & (510 << *(unsigned char *)(a1 + 873));
    *size_t v16 = v33;
    *size_t v16 = v33 | (0xC1u >> (7 - *(unsigned char *)(a1 + 873)));
    unsigned int v28 = v16[1] & (0xFFu >> (7 - *(unsigned char *)(a1 + 873)));
    v16[1] &= 0xFFu >> (7 - *(unsigned char *)(a1 + 873));
    uint64_t v29 = -16384;
    char v30 = -126;
    uint64_t v31 = 16385;
    goto LABEL_60;
  }
LABEL_61:
  unint64_t v34 = *(void *)(a1 + 840);
  if (v2 < 0x80)
  {
    if ((unint64_t)v16 < v34) {
      uint64_t result = sub_24B4A103C(a1, 43);
    }
    uint64_t v7 = (unsigned char *)(a1 + 873);
    char v38 = *v16 & (510 << *(unsigned char *)(a1 + 873));
    *size_t v16 = v38;
    *size_t v16 = v38 | (v2 >> (7 - *(unsigned char *)(a1 + 873)));
    unsigned int v10 = 0xFFu >> (7 - *(unsigned char *)(a1 + 873));
    char v39 = v16[1];
    unint64_t v5 = v16 + 1;
    char v36 = v39;
  }
  else
  {
    if ((unint64_t)v16 < v34) {
      uint64_t result = sub_24B4A103C(a1, 43);
    }
    uint64_t v7 = (unsigned char *)(a1 + 873);
    char v35 = *v16 & (510 << *(unsigned char *)(a1 + 873));
    *size_t v16 = v35;
    *size_t v16 = v35 | ((v2 | 0x8000) >> (15 - *(unsigned char *)(a1 + 873)));
    v16[1] = (v2 | 0x8000) >> (7 - *(unsigned char *)(a1 + 873));
    unsigned int v10 = 0xFFu >> (7 - *(unsigned char *)(a1 + 873));
    char v37 = v16[2];
    unint64_t v5 = v16 + 2;
    char v36 = v37;
  }
  LOBYTE(v10) = v36 & v10;
  *unint64_t v5 = v10;
LABEL_69:
  *unint64_t v5 = v10 | (v2 << (*v7 + 1));
  return result;
}

uint64_t sub_24B48DFC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 864);
  switch(sub_24B48CE94(a1))
  {
    case 0xC1u:
      unint64_t v3 = *(void *)(a1 + 864) + 0x4000;
      *(void *)(a1 + 864) = v3;
      uint64_t v4 = 0x4000;
      break;
    case 0xC2u:
      unint64_t v3 = *(void *)(a1 + 864) + 0x8000;
      *(void *)(a1 + 864) = v3;
      uint64_t v4 = 0x8000;
      break;
    case 0xC3u:
      unint64_t v3 = *(void *)(a1 + 864) + 49152;
      *(void *)(a1 + 864) = v3;
      uint64_t v4 = 49152;
      break;
    case 0xC4u:
      unint64_t v3 = *(void *)(a1 + 864) + 0x10000;
      *(void *)(a1 + 864) = v3;
      uint64_t v4 = 0x10000;
      break;
    default:
      sub_24B4A103C(a1, 26);
      uint64_t v4 = 0;
      unint64_t v3 = *(void *)(a1 + 864);
      break;
  }
  unint64_t v5 = *(void *)(a1 + 856);
  if (v3 >= v5)
  {
    sub_24B48C80C(a1, v3 - v5);
    unint64_t v3 = *(void *)(a1 + 864);
  }
  unsigned int v6 = sub_24B48CE94(a1);
  if (v6 == 196)
  {
    unint64_t v7 = ~v3;
    do
    {
      uint64_t v8 = *(void *)(a1 + 856) - *(void *)(a1 + 864);
      if (v8 < 65537) {
        sub_24B48C80C(a1, 65537 - v8);
      }
      *(unsigned char *)v3 &= 510 << *(unsigned char *)(a1 + 873);
      **(unsigned char **)(a1 + 864) &= 0xFFu >> (7 - *(unsigned char *)(a1 + 873));
      *(unsigned char *)v3 |= **(unsigned char **)(a1 + 864);
      unint64_t v9 = *(void *)(a1 + 848);
      if (*(void *)(a1 + 864) + 65537 > v9)
      {
        sub_24B4A103C(a1, 43);
        unint64_t v9 = *(void *)(a1 + 848);
      }
      if ((uint64_t)(v7 + v9) < 0x10000) {
        sub_24B4A103C(a1, 43);
      }
      memmove((void *)(v3 + 1), (const void *)(*(void *)(a1 + 864) + 1), 0x10000uLL);
      v3 += 0x10000;
      *(void *)(a1 + 864) += 0x10000;
      unsigned int v6 = sub_24B48CE94(a1);
      v7 -= 0x10000;
      v4 += 0x10000;
    }
    while (v6 == 196);
  }
  char v10 = v6;
  if (v6 >= 0xC1)
  {
    int64_t v11 = (unint64_t)(v6 & 3) << 14;
    uint64_t v12 = *(void *)(a1 + 856) - *(void *)(a1 + 864);
    uint64_t v13 = (unsigned __int16)((_WORD)v6 << 14) | 1u;
    if (v13 > v12) {
      sub_24B48C80C(a1, v13 - v12);
    }
    *(unsigned char *)v3 &= 510 << *(unsigned char *)(a1 + 873);
    **(unsigned char **)(a1 + 864) &= 0xFFu >> (7 - *(unsigned char *)(a1 + 873));
    *(unsigned char *)v3 |= **(unsigned char **)(a1 + 864);
    unint64_t v14 = *(void *)(a1 + 848);
    if (*(void *)(a1 + 864) + v11 + 1 > v14)
    {
      sub_24B4A103C(a1, 43);
      unint64_t v14 = *(void *)(a1 + 848);
    }
    v4 += v11;
    if ((uint64_t)(v14 - (v3 + 1)) < v11) {
      sub_24B4A103C(a1, 43);
    }
    memmove((void *)(v3 + 1), (const void *)(*(void *)(a1 + 864) + 1), (unint64_t)(v10 & 3) << 14);
    v3 += v11;
    *(void *)(a1 + 864) += v11;
    char v10 = sub_24B48CE94(a1);
  }
  if ((v10 & 0xC0) == 0x80)
  {
    int64_t v15 = sub_24B48CE94(a1) & 0xFFFF80FF | ((v10 & 0x7F) << 8);
    uint64_t v16 = *(void *)(a1 + 856) - *(void *)(a1 + 864);
    if (v15 > v16) {
      sub_24B48C80C(a1, v15 - v16);
    }
    *(unsigned char *)v3 &= 510 << *(unsigned char *)(a1 + 873);
    **(unsigned char **)(a1 + 864) &= 0xFFu >> (7 - *(unsigned char *)(a1 + 873));
    *(unsigned char *)v3 |= **(unsigned char **)(a1 + 864);
    unint64_t v17 = *(void *)(a1 + 848);
    if (*(void *)(a1 + 864) + v15 + 1 > v17)
    {
      sub_24B4A103C(a1, 43);
      unint64_t v17 = *(void *)(a1 + 848);
    }
    v4 += v15;
    uint64_t v18 = (void *)(v3 + 1);
    if (v17 - (v3 + 1) >= v15) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v10 < 0)
  {
    sub_24B4A103C(a1, 26);
    goto LABEL_34;
  }
  int64_t v15 = v10 & 0x7F;
  uint64_t v20 = *(void *)(a1 + 856) - *(void *)(a1 + 864);
  if (v15 > v20) {
    sub_24B48C80C(a1, v15 - v20);
  }
  *(unsigned char *)v3 &= 510 << *(unsigned char *)(a1 + 873);
  **(unsigned char **)(a1 + 864) &= 0xFFu >> (7 - *(unsigned char *)(a1 + 873));
  *(unsigned char *)v3 |= **(unsigned char **)(a1 + 864);
  unint64_t v21 = *(void *)(a1 + 848);
  if (*(void *)(a1 + 864) + v15 + 1 > v21)
  {
    sub_24B4A103C(a1, 43);
    unint64_t v21 = *(void *)(a1 + 848);
  }
  v4 += v15;
  uint64_t v18 = (void *)(v3 + 1);
  if ((uint64_t)(v21 - (v3 + 1)) < v15) {
LABEL_32:
  }
    sub_24B4A103C(a1, 43);
LABEL_33:
  memmove(v18, (const void *)(*(void *)(a1 + 864) + 1), v15);
LABEL_34:
  *(void *)(a1 + 864) = v2 + 1;
  return v4;
}

uint64_t sub_24B48E498(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 >= 0x4000)
  {
    if (v4 >= 0x10000)
    {
      do
      {
        if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
        {
          int v5 = *(unsigned __int8 *)(a1 + 873);
          if (v5 != 7)
          {
            *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v5;
            *(unsigned char *)(a1 + 873) = 7;
          }
        }
        sub_24B48CD70((char *)a1, 0xC4u);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(a1, 0x10000, a2);
        unint64_t v4 = *(void *)(a2 + 8);
      }
      while (v4 >> 16);
    }
    if (v4 >= 0xC000)
    {
      if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
      {
        int v6 = *(unsigned __int8 *)(a1 + 873);
        if (v6 != 7)
        {
          *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v6;
          *(unsigned char *)(a1 + 873) = 7;
        }
      }
      sub_24B48CD70((char *)a1, 0xC3u);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(a1, 49152, a2);
      unint64_t v4 = *(void *)(a2 + 8);
    }
    if (v4 >= 0x8000)
    {
      if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
      {
        int v7 = *(unsigned __int8 *)(a1 + 873);
        if (v7 != 7)
        {
          *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v7;
          *(unsigned char *)(a1 + 873) = 7;
        }
      }
      sub_24B48CD70((char *)a1, 0xC2u);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(a1, 0x8000, a2);
      unint64_t v4 = *(void *)(a2 + 8);
    }
    if (v4 >= 0x4000)
    {
      if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
      {
        int v8 = *(unsigned __int8 *)(a1 + 873);
        if (v8 != 7)
        {
          *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v8;
          *(unsigned char *)(a1 + 873) = 7;
        }
      }
      sub_24B48CD70((char *)a1, 0xC1u);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(a1, 0x4000, a2);
    }
  }
  if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
  {
    int v9 = *(unsigned __int8 *)(a1 + 873);
    if (v9 != 7)
    {
      *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v9;
      *(unsigned char *)(a1 + 873) = 7;
    }
  }
  unint64_t v10 = *(void *)(a2 + 8);
  if (v10 > 0x7F) {
    sub_24B48C9D0((char *)a1, v10 | 0x8000, 0x10u);
  }
  else {
    sub_24B48CD70((char *)a1, *(void *)(a2 + 8));
  }
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16);
  return v12(a1, v11, a2);
}

uint64_t sub_24B48E70C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0;
  while (1)
  {
    if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
    {
      int v5 = *(unsigned __int8 *)(a1 + 873);
      if (v5 != 7)
      {
        *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v5;
        *(unsigned char *)(a1 + 873) = 7;
      }
    }
    char v6 = sub_24B48CE94(a1);
    if ((v6 + 63) >= 4u) {
      break;
    }
    unint64_t v4 = ((unint64_t)(v6 + 63) << 14) + 0x4000;
LABEL_11:
    uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(a2 + 16))(a1, v4, a2);
    if (!(v4 >> 14)) {
      return result;
    }
  }
  if ((v6 & 0xC0) == 0x80)
  {
    unint64_t v4 = sub_24B48CE94(a1) & 0xFFFF80FF | ((v6 & 0x7F) << 8);
    goto LABEL_11;
  }
  if (v6 < 0)
  {
    sub_24B4A103C(a1, 26);
    goto LABEL_11;
  }
  int v8 = *(uint64_t (**)(uint64_t, void, uint64_t))(a2 + 16);
  return v8(a1, v6 & 0x7F, a2);
}

uint64_t sub_24B48E834(unsigned int *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    if (!setjmp((int *)a1 + 1))
    {
      *((unsigned char *)a1 + 196) = 1;
      *a1 = 0;
      *((void *)a1 + 25) = a2;
      *((void *)a1 + 89) = 1;
      *((void *)a1 + 101) = a2;
      *((void *)a1 + 102) = a3;
      uint64_t v7 = *((void *)a1 + 96);
      *((void *)a1 + 105) = *((void *)a1 + 95);
      *((void *)a1 + 106) = v7;
      LODWORD(v7) = *((unsigned __int8 *)a1 + 801);
      *((unsigned char *)a1 + 872) = v7;
      if (v7 == 7) {
        uint64_t v8 = *((void *)a1 + 98);
      }
      else {
        uint64_t v8 = *((void *)a1 + 98) + 1;
      }
      *((void *)a1 + 107) = v8;
      uint64_t v9 = *((unsigned __int8 *)a1 + 802);
      *((unsigned char *)a1 + 873) = v9;
      uint64_t v10 = *((void *)a1 + 99);
      *((void *)a1 + 108) = v10;
      if ((*((unsigned char *)a1 + 825) & 8) == 0) {
        *((void *)a1 + 103) = 2080;
      }
      *((void *)a1 + 110) = 0;
      sub_24B4901AC((unint64_t)a1, a2, a3, 0);
      if (*((void *)a1 + 108) == v10 && *((unsigned __int8 *)a1 + 873) == v9) {
        sub_24B48CE94((uint64_t)a1);
      }
      if ((a1[206] & 0x10) != 0)
      {
        uint64_t v12 = (unsigned char *)*((void *)a1 + 108);
        unsigned int v13 = *((unsigned __int8 *)a1 + 873);
      }
      else
      {
        int v11 = *((unsigned __int8 *)a1 + 873);
        uint64_t v12 = (unsigned char *)*((void *)a1 + 108);
        unsigned int v13 = 7;
        if (v11 != 7)
        {
          *v12 &= -2 << v11;
          uint64_t v12 = (unsigned char *)(*((void *)a1 + 108) + 1);
          *((void *)a1 + 108) = v12;
          *((unsigned char *)a1 + 873) = 7;
        }
      }
      unint64_t v14 = &v12[-v10];
      *((void *)a1 + 99) += v14;
      *((unsigned char *)a1 + 802) = v13;
      *((void *)a1 + 104) = v9 - v13 + 8 * (void)v14;
    }
    *((unsigned char *)a1 + 196) = 0;
    return *a1;
  }
  return result;
}

void sub_24B48E9B0(uint64_t a1, unsigned __int8 *a2, __int16 *a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a1 + 808);
  *(void *)(a1 + 808) = a2;
  unsigned int v7 = *a2;
  if (v7 <= 0x3F)
  {
    switch(*a2)
    {
      case 1u:
        sub_24B48C8A0((char *)a1, *(unsigned char *)a3 != 0);
        goto LABEL_363;
      case 2u:
        uint64_t v44 = *(void *)(*((void *)a2 + 1) + 8);
        switch(v44)
        {
          case 4:
            goto LABEL_202;
          case 2:
            int v45 = *a3;
            break;
          case 1:
            int v45 = *(char *)a3;
            break;
          default:
LABEL_202:
            int v45 = *(_DWORD *)a3;
            break;
        }
        if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
        {
          int v141 = *(unsigned __int8 *)(a1 + 873);
          if (v141 != 7)
          {
            *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v141;
            *(unsigned char *)(a1 + 873) = 7;
          }
        }
        *(void *)&long long v170 = 0;
        goto LABEL_289;
      case 3u:
        uint64_t v46 = *(int *)a3;
        if (!v46) {
          goto LABEL_125;
        }
        *(void *)&long long v170 = *((void *)a3 + 1);
        *((void *)&v170 + 1) = v46;
        goto LABEL_250;
      case 4u:
        uint64_t v47 = *(int *)a3;
        if (v47)
        {
          *(void *)&long long v170 = *((void *)a3 + 1);
          *((void *)&v170 + 1) = v47;
          goto LABEL_261;
        }
LABEL_125:
        if ((*(unsigned char *)(v5 + 824) & 0x40) != 0)
        {
          int v85 = *(unsigned __int8 *)(v5 + 873);
          if (v85 != 7)
          {
            *(unsigned char *)(*(void *)(v5 + 864))++ &= 510 << v85;
            *(unsigned char *)(v5 + 873) = 7;
          }
        }
        sub_24B48CD70((char *)v5, 0);
        goto LABEL_363;
      case 5u:
        goto LABEL_363;
      case 6u:
        if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
        {
          int v48 = *(unsigned __int8 *)(a1 + 873);
          if (v48 != 7)
          {
            *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v48;
            *(unsigned char *)(a1 + 873) = 7;
          }
        }
        uint64_t v49 = *(void *)(a1 + 864);
        uint64_t v50 = *(void *)(a1 + 856);
        sub_24B48CF44(a1, 1uLL);
        uint64_t v51 = *((int *)a3 + 4);
        uint64_t v52 = *(void *)a3;
        if (*(void *)a3) {
          uint64_t v52 = *(int *)(v52 + 8);
        }
        char v53 = 0;
        uint64_t v54 = v49 - v50;
        uint64_t v55 = 40 * v52;
        long long v56 = a3;
        while (1)
        {
          long long v56 = *(__int16 **)v56;
          if (!v56) {
            break;
          }
          char v57 = v53;
          char v53 = 1;
          if (v57)
          {
            uint64_t v52 = *((int *)v56 + 2);
            break;
          }
        }
        unint64_t v58 = v52 + v55;
        if (((v52 + v55) & 0xFFFFFF80) != 0) {
          sub_24B4A103C(v5, 28);
        }
        sub_24B48CD70((char *)v5, v58);
        if (v51 >= 3)
        {
          uint64_t v59 = 2;
          uint64_t v60 = 3;
          do
          {
            int v61 = *(uint64_t ***)a3;
            uint64_t v62 = v60;
            if (*(void *)a3)
            {
              while (--v62)
              {
                int v61 = (uint64_t **)*v61;
                if (!v61) {
                  goto LABEL_84;
                }
              }
              unint64_t v58 = *((int *)v61 + 2);
            }
LABEL_84:
            if (v58 >= 0x80)
            {
              uint64_t v64 = 0;
              unint64_t v65 = v58;
              do
              {
                unint64_t v66 = v65 >> 14;
                v65 >>= 7;
                v64 += 7;
              }
              while (v66);
              for (; v64; v64 -= 7)
                sub_24B48CD70((char *)v5, (v58 >> v64) | 0x80);
              unsigned __int8 v63 = v58 & 0x7F;
            }
            else
            {
              unsigned __int8 v63 = v58;
            }
            sub_24B48CD70((char *)v5, v63);
            ++v59;
            ++v60;
          }
          while (v59 != v51);
        }
        uint64_t v67 = *(void *)(v5 + 856);
        unint64_t v68 = *(void *)(v5 + 864) - v67 + ~v54;
        if (v68 > 0x7F)
        {
          if (*(unsigned char *)(v5 + 873) == 7) {
            sub_24B48D268((void *)v5, v68);
          }
          else {
            sub_24B48D8E8(v5, v68);
          }
        }
        else
        {
          long long v69 = (unsigned char *)(v67 + v54);
          uint64_t v70 = *(unsigned __int8 *)(v5 + 873);
          if (v70 == 7)
          {
            *long long v69 = v68;
          }
          else
          {
            *v69 |= v68 >> (7 - v70);
            v69[1] |= v68 << (*(unsigned char *)(v5 + 873) + 1);
          }
        }
        goto LABEL_363;
      case 7u:
      case 8u:
      case 9u:
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x11u:
      case 0x14u:
      case 0x15u:
      case 0x19u:
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Du:
      case 0x1Eu:
      case 0x1Fu:
        goto LABEL_373;
      case 0xAu:
        unint64_t v71 = *(unsigned __int8 *)a3;
        if (*((void *)a2 + 4) <= v71) {
          sub_24B4A103C(a1, 21);
        }
        unint64_t v72 = *((void *)a2 + 2);
        if (v72 == -1)
        {
          LODWORD(v170) = v71;
          int v73 = *((_DWORD *)a2 + 8);
          goto LABEL_209;
        }
        if (v72 > v71)
        {
          sub_24B48C8A0((char *)v5, 0);
          LODWORD(v170) = v71;
          int v73 = *((_DWORD *)a2 + 4);
LABEL_209:
          unsigned int v113 = v73 - 1;
          goto LABEL_308;
        }
        sub_24B48C8A0((char *)v5, 1);
        sub_24B492FEC((char *)v5, v71 - *((void *)a2 + 2));
        goto LABEL_363;
      case 0x10u:
        if (a2[40])
        {
          uint64_t v109 = *(void *)(a1 + 864);
          uint64_t v110 = *(void *)(a1 + 856);
          char v111 = *(unsigned char *)(a1 + 873);
          sub_24B48C8A0((char *)a1, 0);
          unint64_t v112 = *((void *)a2 + 9);
          if (v112)
          {
            long long v170 = 0uLL;
            *(void *)&long long v171 = 0;
            if (v112 >> 16) {
              sub_24B49312C(v5, (uint64_t)&v170, v112);
            }
            else {
              sub_24B4930C4(v5, (uint64_t)&v170, v112);
            }
            sub_24B493348(v5, (uint64_t)&v170, a2, (uint64_t)a3);
          }
          else
          {
            sub_24B4936B8(v5, a2, (uint64_t)a3);
          }
          unint64_t v158 = *((void *)a2 + 10);
          if (v158)
          {
            long long v170 = 0uLL;
            *(void *)&long long v171 = 0;
            uint64_t v159 = *(void *)(v5 + 864);
            uint64_t v160 = *(void *)(v5 + 856);
            char v161 = *(unsigned char *)(v5 + 873);
            if (v158 < 0x41)
            {
              sub_24B48C9D0((char *)v5, v158 - 1, 7u);
              sub_24B4930C4(v5, (uint64_t)&v170, *((void *)a2 + 10));
            }
            else
            {
              sub_24B48C8A0((char *)v5, 1);
              sub_24B49312C(v5, (uint64_t)&v170, *((void *)a2 + 10));
            }
            if (sub_24B4937EC(v5, (uint64_t)&v170, (uint64_t)a2, (uint64_t)a3))
            {
              *(unsigned char *)(*(void *)(v5 + 856) + v109 - v110) |= 1 << v111;
            }
            else
            {
              uint64_t v163 = *(void *)(v5 + 856);
              *(void *)(v5 + 864) = v163 + v159 - v160;
              *(unsigned char *)(v5 + 873) = v161;
              *(unsigned char *)(v163 + v159 - v160) &= -2 << v161;
            }
          }
        }
        else
        {
          unint64_t v74 = *((void *)a2 + 9);
          if (v74)
          {
            long long v170 = 0uLL;
            *(void *)&long long v171 = 0;
            if (v74 >> 16) {
              sub_24B49312C(a1, (uint64_t)&v170, v74);
            }
            else {
              sub_24B4930C4(a1, (uint64_t)&v170, v74);
            }
            sub_24B493348(v5, (uint64_t)&v170, a2, (uint64_t)a3);
          }
          else
          {
            sub_24B4936B8(a1, a2, (uint64_t)a3);
          }
        }
        goto LABEL_363;
      case 0x12u:
      case 0x13u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x1Au:
        *((void *)&v171 + 1) = 0;
        switch(v7)
        {
          case 0x12u:
            uint64_t v8 = *(void *)a3;
            size_t v9 = strlen(*(const char **)a3);
            switch(v9)
            {
              case 1uLL:
                goto LABEL_125;
              case 0x801uLL:
                goto LABEL_391;
              case 0uLL:
                goto LABEL_392;
            }
            *(void *)&long long v170 = v8 + 1;
            *((void *)&v170 + 1) = v9 - 1;
            char v10 = 4;
            int v11 = " 0123456789";
            char v12 = 1;
            uint64_t v13 = 11;
            goto LABEL_124;
          case 0x13u:
            long long v77 = *(const char **)a3;
            size_t v78 = strlen(*(const char **)a3);
            if (!v78) {
              goto LABEL_392;
            }
            size_t v79 = v78 - 1;
            if (v78 == 2049) {
              goto LABEL_391;
            }
            goto LABEL_120;
          case 0x16u:
            long long v77 = *(const char **)a3;
            size_t v80 = strlen(*(const char **)a3);
            if (!v80) {
              goto LABEL_392;
            }
            size_t v79 = v80 - 1;
            if (v80 == 2049) {
              goto LABEL_391;
            }
            goto LABEL_120;
          case 0x17u:
            long long v77 = *(const char **)a3;
            size_t v81 = strlen(*(const char **)a3);
            if (!v81) {
              goto LABEL_392;
            }
            size_t v79 = v81 - 1;
            if (v81 == 2049) {
              goto LABEL_391;
            }
            goto LABEL_120;
          case 0x18u:
            long long v77 = *(const char **)a3;
            size_t v82 = strlen(*(const char **)a3);
            if (!v82) {
              goto LABEL_392;
            }
            size_t v79 = v82 - 1;
            if (v82 == 2049) {
              goto LABEL_391;
            }
            goto LABEL_120;
          case 0x1Au:
            long long v77 = *(const char **)a3;
            size_t v83 = strlen(*(const char **)a3);
            if (!v83) {
              goto LABEL_392;
            }
            size_t v79 = v83 - 1;
            if (v83 == 2049) {
              goto LABEL_391;
            }
LABEL_120:
            if (!v79) {
              goto LABEL_125;
            }
            char v12 = 0;
            int v11 = 0;
            uint64_t v13 = 0;
            *(void *)&long long v170 = v77 + 1;
            *((void *)&v170 + 1) = v79;
            if ((*(unsigned char *)(v5 + 824) & 0x40) != 0) {
              char v10 = 8;
            }
            else {
              char v10 = 7;
            }
LABEL_124:
            BYTE9(v171) = v12;
            *(void *)&long long v172 = v11;
            *((void *)&v172 + 1) = v13;
            BYTE8(v171) = v10;
            long long v84 = sub_24B492DD4;
            break;
          default:
            goto LABEL_393;
        }
        goto LABEL_262;
      case 0x20u:
        uint64_t v75 = *((void *)a2 + 1);
        switch(*(_DWORD *)(v75 + 48))
        {
          case 1:
            int v76 = *(unsigned __int8 *)a3;
            break;
          case 2:
            int v76 = *a3;
            break;
          default:
            int v76 = *(_DWORD *)a3;
            break;
        }
        unint64_t v147 = *((void *)a2 + 4);
        if (v147)
        {
          uint64_t v148 = *((void *)a2 + 4);
          uint64_t v149 = (void *)*((void *)a2 + 3);
          while (*((unsigned char *)v149 + 8) == 5 || v149[2] != v76)
          {
            v149 += 4;
            if (!--v148)
            {
              uint64_t v149 = (void *)*((void *)a2 + 3);
              break;
            }
          }
          uint64_t v150 = (char *)a3 + *(void *)(v75 + 40);
          uint64_t v151 = (uint64_t)v149 - *((void *)a2 + 3);
          int v153 = (uint64_t *)(a2 + 16);
          unint64_t v152 = *((void *)a2 + 2);
          if (v152 == -1)
          {
            if (v147 < 2) {
              goto LABEL_358;
            }
            LODWORD(v170) = (unint64_t)v151 >> 5;
            unsigned int v156 = v147 - 1;
            goto LABEL_331;
          }
          unint64_t v154 = v151 >> 5;
        }
        else
        {
          uint64_t v150 = (char *)a3 + *(void *)(v75 + 40);
          int v153 = (uint64_t *)(a2 + 16);
          unint64_t v152 = *((void *)a2 + 2);
          if (v152 == -1)
          {
            uint64_t v149 = (void *)*((void *)a2 + 3);
            goto LABEL_358;
          }
          unint64_t v154 = 0;
          uint64_t v149 = (void *)*((void *)a2 + 3);
        }
        if (v154 >= v152)
        {
          sub_24B48C8A0((char *)a1, 1);
          sub_24B492FEC((char *)v5, v154 - *v153);
          if (!v149) {
            sub_24B4A103C(v5, 44);
          }
          unint64_t v157 = *(void *)(v5 + 712);
          if (v157 < 0x40)
          {
            *(void *)(v5 + 8 * v157 + 200) = v149;
            *(void *)(v5 + 712) = v157 + 1;
            uint64_t v144 = *v149;
            a1 = v5;
            uint64_t v143 = (uint64_t)v150;
LABEL_328:
            sub_24B494068(a1, v144, v143);
            goto LABEL_362;
          }
LABEL_393:
          sub_24B4A10C0(v5, 15);
        }
        sub_24B48C8A0((char *)a1, 0);
        uint64_t v155 = *v153;
        if (*v153 >= 2)
        {
          LODWORD(v170) = v154;
          unsigned int v156 = v155 - 1;
LABEL_331:
          sub_24B491C7C((char *)v5, v156, (int *)&v170);
        }
LABEL_358:
        if (!v149) {
          sub_24B4A103C(v5, 44);
        }
        unint64_t v162 = *(void *)(v5 + 712);
        if (v162 < 0x40)
        {
          *(void *)(v5 + 8 * v162 + 200) = v149;
          *(void *)(v5 + 712) = v162 + 1;
          sub_24B48E9B0(v5, *v149, v150);
LABEL_362:
          --*(void *)(v5 + 712);
          goto LABEL_363;
        }
        goto LABEL_393;
      default:
        if (v7 != 48) {
          goto LABEL_373;
        }
        *((void *)&v172 + 1) = 0;
        int v40 = **((_DWORD **)a2 + 1);
        int v41 = (int *)a3;
        if (v40 == 182) {
          goto LABEL_55;
        }
        if (v40 != 181) {
          goto LABEL_393;
        }
        int v41 = (int *)(a3 + 8);
LABEL_55:
        uint64_t v42 = *v41;
        *(void *)&long long v170 = a3;
        *((void *)&v170 + 1) = v42;
        *((void *)&v171 + 1) = 0;
        *(void *)&long long v172 = a2;
        unint64_t v43 = *(void *)(a1 + 712);
        if (v43 >= 0x40) {
          goto LABEL_393;
        }
        *(void *)(a1 + 8 * v43 + 200) = a2;
        *(void *)(a1 + 712) = v43 + 1;
        *(void *)&long long v171 = sub_24B49566C;
        sub_24B48E498(a1, (uint64_t)&v170);
        goto LABEL_362;
    }
  }
  if (*a2 > 0x55u)
  {
    if (*a2 > 0x6Fu)
    {
      if (*a2 <= 0x9Fu)
      {
        if (v7 != 112)
        {
          if (v7 != 128) {
            goto LABEL_373;
          }
          goto LABEL_32;
        }
        long long v171 = 0u;
        long long v172 = 0u;
        unsigned __int8 v34 = a2[24];
        int v35 = **((_DWORD **)a2 + 1);
        char v36 = (int *)a3;
        if (v35 != 182)
        {
          if (v35 != 181) {
            goto LABEL_393;
          }
          char v36 = (int *)(a3 + 8);
        }
        unint64_t v37 = *v36;
        *(void *)&long long v170 = a3;
        *((void *)&v170 + 1) = v37;
        *(void *)&long long v172 = a2;
        if (a2[25] == 1)
        {
          if (*((void *)a2 + 4) > v37 || (v34 & 0x80) != 0 && *((void *)a2 + 5) < v37)
          {
            sub_24B48C8A0((char *)a1, 1);
            unint64_t v38 = *(void *)(v5 + 712);
            if (v38 > 0x3F) {
              goto LABEL_393;
            }
            char v39 = (void *)(v5 + 712);
            *(void *)(v5 + 8 * v38 + 200) = a2;
            *(void *)(v5 + 712) = v38 + 1;
            goto LABEL_274;
          }
          sub_24B48C8A0((char *)a1, 0);
        }
        else
        {
          sub_24B496DC4(a1, (uint64_t)a2, v37);
        }
        unint64_t v136 = *(void *)(v5 + 712);
        if (v136 > 0x3F) {
          goto LABEL_393;
        }
        char v39 = (void *)(v5 + 712);
        *(void *)(v5 + 8 * v136 + 200) = a2;
        *(void *)(v5 + 712) = v136 + 1;
        if ((v34 & 0x80) == 0) {
          goto LABEL_274;
        }
        if ((v34 & 2) != 0)
        {
          unint64_t v139 = *((void *)a2 + 4);
          if (!v139) {
            goto LABEL_275;
          }
          if (!(v139 >> 16))
          {
LABEL_354:
            sub_24B49566C(v5, v139, (uint64_t)&v170);
            goto LABEL_275;
          }
        }
        else
        {
          unint64_t v137 = *((void *)a2 + 5);
          if (!(v137 >> 16))
          {
            int v138 = *((_DWORD *)a2 + 8);
            LODWORD(v167) = v37 - v138;
            sub_24B491C7C((char *)v5, v137 - v138, (int *)&v167);
            unint64_t v139 = *((void *)&v170 + 1);
            goto LABEL_354;
          }
        }
LABEL_274:
        *(void *)&long long v171 = sub_24B49566C;
        sub_24B48E498(v5, (uint64_t)&v170);
LABEL_275:
        --*v39;
        goto LABEL_363;
      }
      if (v7 == 160)
      {
LABEL_32:
        sub_24B48E9B0(a1, *((void *)a2 + 2), a3);
        goto LABEL_363;
      }
      if (v7 != 162) {
        goto LABEL_373;
      }
      unsigned int v23 = a2[16];
      switch(v23)
      {
        case 1u:
          uint64_t v24 = *(int *)a3 + 0x80000000;
          break;
        case 3u:
          int v115 = *(const char **)a3;
          if ((unint64_t)(*(void *)a3 - 0x100000000) < 0xFFFFFFFE00000000) {
            sub_24B4A103C(a1, 18);
          }
          uint64_t v24 = (uint64_t)(v115 + 0x100000000);
          if ((*(unsigned char *)(v5 + 824) & 0x40) == 0) {
            goto LABEL_231;
          }
          goto LABEL_236;
        case 2u:
          uint64_t v24 = *(unsigned int *)a3;
          break;
        default:
          uint64_t v24 = *(void *)a3;
          if (v23 == 4 && (unint64_t)v24 >> 33 || v23 == 16 && (unint64_t)v24 >> 39) {
            sub_24B4A103C(a1, 18);
          }
          break;
      }
      if ((*(unsigned char *)(v5 + 824) & 0x40) == 0)
      {
        if (v23 < 3)
        {
LABEL_235:
          __int16 v117 = (char *)v5;
          unint64_t v118 = v24;
          unsigned int v119 = 32;
LABEL_306:
          sub_24B48C9D0(v117, v118, v119);
          goto LABEL_363;
        }
LABEL_231:
        if (v23 == 16) {
          unsigned int v116 = 7;
        }
        else {
          unsigned int v116 = 1;
        }
        sub_24B48C9D0((char *)v5, v24 >> 32, v116);
        goto LABEL_235;
      }
LABEL_236:
      if (v23 < 3) {
        unsigned __int8 v120 = 2;
      }
      else {
        unsigned __int8 v120 = 3;
      }
      int v121 = __clz(v24 | 1);
      if (v24) {
        int v122 = 64;
      }
      else {
        int v122 = 63;
      }
      unsigned int v123 = v122 - v121;
      if (v122 == v121)
      {
        unsigned __int8 v124 = 1;
      }
      else if ((v123 & 7) != 0)
      {
        unsigned __int8 v124 = (v123 >> 3) + 1;
      }
      else
      {
        unsigned __int8 v124 = v123 >> 3;
      }
      sub_24B48C9D0((char *)v5, v124 - 1, v120);
      int v145 = *(unsigned __int8 *)(v5 + 873);
      if (v145 != 7)
      {
        *(unsigned char *)(*(void *)(v5 + 864))++ &= 510 << v145;
        *(unsigned char *)(v5 + 873) = 7;
      }
      if (v123 >= 0x21)
      {
        sub_24B48C9D0((char *)v5, v24 >> 32, 8u);
        --v124;
      }
      unsigned int v119 = 8 * (v124 & 0x1F);
      __int16 v117 = (char *)v5;
      unint64_t v118 = v24;
      goto LABEL_306;
    }
    if (v7 != 86 && v7 != 90)
    {
      if (v7 != 96) {
LABEL_373:
      }
        sub_24B4A10C0(a1, 16);
      goto LABEL_32;
    }
LABEL_22:
    int v167 = 0;
    unint64_t v168 = 0;
    uint64_t v169 = 0;
    unsigned __int8 v18 = a2[32];
    switch(v7 & 0x1F)
    {
      case 0x12u:
        int64_t v19 = *(const char **)a3;
        uint64_t v20 = (void *)(*(void *)a3 + 1);
        int v167 = v20;
        size_t v21 = strlen(v19);
        if (!v21) {
          goto LABEL_392;
        }
        size_t v22 = v21 - 1;
        unint64_t v168 = v21 - 1;
        LOBYTE(v169) = 1;
        if (v21 == 2049) {
          goto LABEL_391;
        }
        goto LABEL_143;
      case 0x13u:
        unint64_t v86 = *(const char **)a3;
        uint64_t v20 = (void *)(*(void *)a3 + 1);
        int v167 = v20;
        size_t v87 = strlen(v86);
        if (!v87) {
          goto LABEL_392;
        }
        size_t v22 = v87 - 1;
        unint64_t v168 = v87 - 1;
        LOBYTE(v169) = 1;
        if (v87 == 2049) {
          goto LABEL_391;
        }
        goto LABEL_143;
      case 0x16u:
        unint64_t v88 = *(const char **)a3;
        uint64_t v20 = (void *)(*(void *)a3 + 1);
        int v167 = v20;
        size_t v89 = strlen(v88);
        if (!v89) {
          goto LABEL_392;
        }
        size_t v22 = v89 - 1;
        unint64_t v168 = v89 - 1;
        LOBYTE(v169) = 1;
        if (v89 == 2049) {
          goto LABEL_391;
        }
        goto LABEL_143;
      case 0x17u:
        unint64_t v90 = *(const char **)a3;
        uint64_t v20 = (void *)(*(void *)a3 + 1);
        int v167 = v20;
        size_t v91 = strlen(v90);
        if (!v91) {
          goto LABEL_392;
        }
        size_t v22 = v91 - 1;
        unint64_t v168 = v91 - 1;
        LOBYTE(v169) = 1;
        if (v91 == 2049) {
          goto LABEL_391;
        }
        goto LABEL_143;
      case 0x18u:
        uint64_t v92 = *(const char **)a3;
        uint64_t v20 = (void *)(*(void *)a3 + 1);
        int v167 = v20;
        size_t v93 = strlen(v92);
        if (!v93) {
          goto LABEL_392;
        }
        size_t v22 = v93 - 1;
        unint64_t v168 = v93 - 1;
        LOBYTE(v169) = 1;
        if (v93 == 2049) {
          goto LABEL_391;
        }
        goto LABEL_143;
      case 0x1Au:
        int v94 = *(const char **)a3;
        uint64_t v20 = (void *)(*(void *)a3 + 1);
        int v167 = v20;
        size_t v95 = strlen(v94);
        if (!v95) {
LABEL_392:
        }
          sub_24B4A10C0(v5, 24);
        size_t v22 = v95 - 1;
        unint64_t v168 = v95 - 1;
        LOBYTE(v169) = 1;
        if (v95 == 2049) {
LABEL_391:
        }
          sub_24B4A10C0(v5, 42);
LABEL_143:
        long long v171 = 0u;
        long long v172 = 0u;
        long long v170 = 0u;
        if (a2[33] == 1)
        {
          if (v22 < *((void *)a2 + 5) || (v18 & 0x80) != 0 && *((void *)a2 + 6) < v22)
          {
            sub_24B48C8A0((char *)v5, 1);
            unsigned __int8 v18 = 0;
            *(void *)&long long v170 = v20;
            *((void *)&v170 + 1) = v22;
            goto LABEL_160;
          }
          sub_24B48C8A0((char *)v5, 0);
        }
        else
        {
          sub_24B496CC8(v5, (uint64_t)a2, &v167);
          uint64_t v20 = v167;
          size_t v22 = v168;
        }
        *(void *)&long long v170 = v20;
        *((void *)&v170 + 1) = v22;
        uint64_t v96 = *((void *)a2 + 3);
        if (v96)
        {
          uint64_t v97 = *((void *)a2 + 2);
          *(void *)&long long v172 = v97;
          *((void *)&v172 + 1) = v96;
          unsigned int v98 = (v96 - 1);
          if ((_BYTE)v96 == 1)
          {
            LOBYTE(v99) = 0;
            BYTE8(v171) = 0;
            if ((*(unsigned char *)(v5 + 824) & 0x40) == 0) {
              goto LABEL_170;
            }
            unsigned int v99 = 0;
            unsigned int v101 = 1;
          }
          else
          {
            LOBYTE(v99) = 0;
            do
            {
              LOBYTE(v99) = v99 + 1;
              BOOL v100 = v98 > 1;
              v98 >>= 1;
            }
            while (v100);
            BYTE8(v171) = v99;
            if ((*(unsigned char *)(v5 + 824) & 0x40) == 0) {
              goto LABEL_170;
            }
            LOBYTE(v101) = 1;
            unsigned __int8 v102 = v99;
            do
            {
              unsigned int v103 = v102;
              v102 >>= 1;
              LOBYTE(v101) = 2 * v101;
            }
            while (v103 > 1);
            unsigned int v101 = v101;
            unsigned int v99 = v99;
          }
          if (v101 >> 1 >= v99) {
            LOBYTE(v99) = v101 >> 1;
          }
          else {
            LOBYTE(v99) = v101;
          }
          BYTE8(v171) = v99;
LABEL_170:
          if (*(unsigned __int8 *)(v96 + v97 - 1) > ~(-1 << v99))
          {
            BYTE9(v171) = 1;
            goto LABEL_173;
          }
LABEL_172:
          BYTE9(v171) = 0;
LABEL_173:
          if ((v18 & 0x80) == 0) {
            goto LABEL_174;
          }
          if ((v18 & 2) != 0)
          {
            unint64_t v107 = *((void *)a2 + 5);
            if (!v107) {
              goto LABEL_175;
            }
            if (v107 <= 2)
            {
LABEL_186:
              sub_24B492DD4((char *)v5, v107, (char **)&v170);
              goto LABEL_175;
            }
            if (!(v107 >> 16))
            {
              if ((*(unsigned char *)(v5 + 824) & 0x40) != 0 && v107 * v99 >= 0x11)
              {
                int v140 = *(unsigned __int8 *)(v5 + 873);
                if (v140 != 7)
                {
                  *(unsigned char *)(*(void *)(v5 + 864))++ &= 510 << v140;
                  *(unsigned char *)(v5 + 873) = 7;
                  unint64_t v107 = *((void *)a2 + 5);
                }
              }
              goto LABEL_186;
            }
          }
          else
          {
            uint64_t v104 = *((void *)a2 + 5);
            uint64_t v105 = *((void *)a2 + 6) - v104;
            if (!((unint64_t)(v105 + 1) >> 16))
            {
              int v166 = v22 - v104;
              sub_24B491C7C((char *)v5, v105, &v166);
              if ((*(unsigned char *)(v5 + 824) & 0x40) != 0)
              {
                int v106 = *(unsigned __int8 *)(v5 + 873);
                if (v106 != 7)
                {
                  *(unsigned char *)(*(void *)(v5 + 864))++ &= 510 << v106;
                  *(unsigned char *)(v5 + 873) = 7;
                }
              }
              unint64_t v107 = v168;
              goto LABEL_186;
            }
          }
LABEL_174:
          *(void *)&long long v171 = sub_24B492DD4;
          sub_24B48E498(v5, (uint64_t)&v170);
LABEL_175:
          if (!(_BYTE)v169 && v168) {
            free(v167);
          }
          goto LABEL_363;
        }
        if ((*a2 & 0x1F) == 0x12)
        {
          *(void *)&long long v172 = " 0123456789";
          *((void *)&v172 + 1) = 11;
          WORD4(v171) = 260;
          LOBYTE(v99) = 4;
          goto LABEL_173;
        }
LABEL_160:
        long long v172 = 0uLL;
        if ((*(void *)(v5 + 824) & 0x40) != 0) {
          LOBYTE(v99) = 8;
        }
        else {
          LOBYTE(v99) = 7;
        }
        BYTE8(v171) = v99;
        goto LABEL_172;
      default:
        goto LABEL_393;
    }
  }
  switch(*a2)
  {
    case '@':
      uint64_t v14 = *((void *)a2 + 1);
      int64_t v15 = (uint64_t *)*((void *)a2 + 3);
      uint64_t v16 = *((void *)a2 + 4);
      switch(*(_DWORD *)(v14 + 48))
      {
        case 1:
          int v17 = *(unsigned __int8 *)a3;
          break;
        case 2:
          int v17 = *a3;
          break;
        default:
          int v17 = *(_DWORD *)a3;
          break;
      }
      if (!v16) {
        goto LABEL_363;
      }
      while (v15[2] != v17)
      {
        v15 += 3;
        if (!--v16) {
          goto LABEL_363;
        }
      }
      unint64_t v142 = *(void *)(a1 + 712);
      if (v142 >= 0x40) {
        goto LABEL_393;
      }
      uint64_t v143 = (uint64_t)a3 + *(void *)(v14 + 40);
      *(void *)(a1 + 8 * v142 + 200) = v15;
      *(void *)(a1 + 712) = v142 + 1;
      uint64_t v144 = *v15;
      goto LABEL_328;
    case 'A':
      goto LABEL_373;
    case 'B':
      unsigned __int8 v25 = a2[16];
      uint64_t v26 = *(void *)(*((void *)a2 + 1) + 8);
      if (v25)
      {
        if (v26 != 4)
        {
          if (v26 != 2)
          {
            if (v26 == 1)
            {
              int v27 = *(char *)a3;
              goto LABEL_194;
            }
            goto LABEL_193;
          }
          int v27 = *a3;
          goto LABEL_194;
        }
      }
      else if (v26 != 4)
      {
        if (v26 != 2)
        {
          if (v26 == 1)
          {
            int v27 = *(unsigned __int8 *)a3;
            goto LABEL_194;
          }
          goto LABEL_193;
        }
        int v27 = (unsigned __int16)*a3;
LABEL_194:
        LODWORD(v167) = v27;
        if (a2[17] == 1)
        {
          if ((v25 & 0x20) != 0 && *((void *)a2 + 3) > v27 || (v25 & 8) != 0 && *((void *)a2 + 4) < v27)
          {
            sub_24B48C8A0((char *)a1, 1);
LABEL_214:
            if ((*(unsigned char *)(v5 + 824) & 0x40) != 0)
            {
              int v114 = *(unsigned __int8 *)(v5 + 873);
              if (v114 != 7)
              {
                *(unsigned char *)(*(void *)(v5 + 864))++ &= 510 << v114;
                *(unsigned char *)(v5 + 873) = 7;
              }
            }
            *(void *)&long long v170 = 0;
            int v45 = (int)v167;
LABEL_289:
            LOBYTE(v170) = v45 < 0;
            DWORD1(v170) = v45 ^ (v45 >> 31);
            sub_24B491B14((char *)v5, (uint64_t)&v170);
            goto LABEL_363;
          }
          int v108 = v25 & 0x20;
          sub_24B48C8A0((char *)a1, 0);
        }
        else
        {
          sub_24B496C44(a1, (uint64_t)a2, (int *)&v167);
          int v108 = v25 & 0x20;
        }
        if (v108)
        {
          if ((v25 & 0x80) != 0)
          {
            int v146 = *((_DWORD *)a2 + 6);
            LODWORD(v170) = v167 - v146;
            unsigned int v113 = *((_DWORD *)a2 + 8) - v146;
LABEL_308:
            sub_24B491C7C((char *)v5, v113, (int *)&v170);
          }
          else
          {
            LODWORD(v170) = v167 - *((_DWORD *)a2 + 6);
            sub_24B491F4C(v5, (unsigned int *)&v170);
          }
          goto LABEL_363;
        }
        goto LABEL_214;
      }
LABEL_193:
      int v27 = *(_DWORD *)a3;
      goto LABEL_194;
    case 'C':
      long long v170 = 0uLL;
      *(void *)&long long v171 = 0;
      unsigned __int8 v28 = a2[16];
      uint64_t v29 = *((void *)a3 + 1);
      unint64_t v30 = *(int *)a3;
      if (a2[17] == 1)
      {
        if (*((void *)a2 + 3) > v30 || (a2[16] & 0x80) != 0 && *((void *)a2 + 4) < v30)
        {
          sub_24B48C8A0((char *)a1, 1);
          *(void *)&long long v170 = v29;
          *((void *)&v170 + 1) = v30;
          goto LABEL_250;
        }
        sub_24B48C8A0((char *)a1, 0);
      }
      else
      {
        sub_24B496C7C(a1, (uint64_t)a2, v30);
      }
      *(void *)&long long v170 = v29;
      *((void *)&v170 + 1) = v30;
      if ((v28 & 0x80) != 0)
      {
        if ((v28 & 2) != 0)
        {
          unint64_t v129 = *((void *)a2 + 3);
          if (!v129) {
            goto LABEL_363;
          }
          if (v129 > 0x10)
          {
            if (v129 >> 16) {
              goto LABEL_250;
            }
            if ((*(unsigned char *)(v5 + 824) & 0x40) != 0)
            {
              int v164 = *(unsigned __int8 *)(v5 + 873);
              if (v164 != 7)
              {
                *(unsigned char *)(*(void *)(v5 + 864))++ &= 510 << v164;
                *(unsigned char *)(v5 + 873) = 7;
                unint64_t v129 = *((void *)a2 + 3);
              }
            }
          }
          int v128 = (char *)v5;
        }
        else
        {
          unint64_t v125 = *((void *)a2 + 4);
          if (v125 >> 16) {
            goto LABEL_250;
          }
          int v126 = *((_DWORD *)a2 + 6);
          LODWORD(v167) = v30 - v126;
          sub_24B491C7C((char *)v5, v125 - v126, (int *)&v167);
          if ((*(unsigned char *)(v5 + 824) & 0x40) != 0)
          {
            int v127 = *(unsigned __int8 *)(v5 + 873);
            if (v127 != 7)
            {
              *(unsigned char *)(*(void *)(v5 + 864))++ &= 510 << v127;
              *(unsigned char *)(v5 + 873) = 7;
            }
          }
          int v128 = (char *)v5;
          unint64_t v129 = v30;
        }
        sub_24B4922D4(v128, v129, (char **)&v170);
        goto LABEL_363;
      }
LABEL_250:
      long long v84 = sub_24B4922D4;
      goto LABEL_262;
    case 'D':
      long long v170 = 0uLL;
      *(void *)&long long v171 = 0;
      unsigned __int8 v31 = a2[16];
      char v32 = (unsigned __int8 *)*((void *)a3 + 1);
      unint64_t v33 = *(int *)a3;
      if (a2[17] == 1)
      {
        if (*((void *)a2 + 3) > v33 || (a2[16] & 0x80) != 0 && *((void *)a2 + 4) < v33)
        {
          sub_24B48C8A0((char *)a1, 1);
          *(void *)&long long v170 = v32;
          *((void *)&v170 + 1) = v33;
          goto LABEL_261;
        }
        sub_24B48C8A0((char *)a1, 0);
      }
      else
      {
        sub_24B496C7C(a1, (uint64_t)a2, v33);
      }
      *(void *)&long long v170 = v32;
      *((void *)&v170 + 1) = v33;
      if ((v31 & 0x80) == 0) {
        goto LABEL_261;
      }
      if ((v31 & 2) != 0)
      {
        size_t v134 = *((void *)a2 + 3);
        if (!v134) {
          goto LABEL_363;
        }
        if (v134 > 2)
        {
          if (v134 >> 16) {
            goto LABEL_261;
          }
          if ((*(unsigned char *)(v5 + 824) & 0x40) != 0)
          {
            int v165 = *(unsigned __int8 *)(v5 + 873);
            if (v165 != 7)
            {
              *(unsigned char *)(*(void *)(v5 + 864))++ &= 510 << v165;
              *(unsigned char *)(v5 + 873) = 7;
              size_t v134 = *((void *)a2 + 3);
              char v32 = (unsigned __int8 *)v170;
            }
          }
        }
        int v135 = (char *)v5;
        int v133 = v32;
LABEL_351:
        sub_24B48D0F4(v135, v133, v134);
        goto LABEL_363;
      }
      unint64_t v130 = *((void *)a2 + 4);
      if (!(v130 >> 16))
      {
        int v131 = *((_DWORD *)a2 + 6);
        LODWORD(v167) = v33 - v131;
        sub_24B491C7C((char *)v5, v130 - v131, (int *)&v167);
        if ((*(unsigned char *)(v5 + 824) & 0x40) != 0)
        {
          int v132 = *(unsigned __int8 *)(v5 + 873);
          if (v132 != 7)
          {
            *(unsigned char *)(*(void *)(v5 + 864))++ &= 510 << v132;
            *(unsigned char *)(v5 + 873) = 7;
          }
        }
        size_t v134 = *((void *)&v170 + 1);
        int v133 = (unsigned __int8 *)v170;
        int v135 = (char *)v5;
        goto LABEL_351;
      }
LABEL_261:
      long long v84 = sub_24B49299C;
LABEL_262:
      *(void *)&long long v171 = v84;
      sub_24B48E498(v5, (uint64_t)&v170);
LABEL_363:
      *(void *)(v5 + 808) = v6;
      return;
    default:
      if (v7 - 82 < 2) {
        goto LABEL_22;
      }
      goto LABEL_373;
  }
}

void sub_24B4901AC(unint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a1 + 808);
  *(void *)(a1 + 808) = a2;
  unsigned int v9 = *a2;
  if (v9 > 0x3F)
  {
    if (*a2 > 0x55u)
    {
      if (*a2 > 0x6Fu)
      {
        if (*a2 <= 0x9Fu)
        {
          if (v9 != 112)
          {
            if (v9 != 128) {
              goto LABEL_390;
            }
LABEL_60:
            sub_24B4901AC(a1, *((void *)a2 + 2), a3, a4);
            goto LABEL_375;
          }
          long long v168 = (unint64_t)a3;
          long long v169 = 0uLL;
          *(void *)&long long v170 = a2;
          *((void *)&v170 + 1) = a4;
          unint64_t v45 = *(void *)(a1 + 712);
          if (v45 >= 0x40) {
            goto LABEL_391;
          }
          *(void *)(a1 + 8 * v45 + 200) = a2;
          *(void *)(a1 + 712) = v45 + 1;
          if (a2[25] == 1 && sub_24B48C964(a1) == 1) {
            goto LABEL_88;
          }
          int v46 = (char)a2[24];
          if ((v46 & 0x80000000) == 0) {
            goto LABEL_88;
          }
          if ((v46 & 2) != 0)
          {
            unint64_t v104 = *((void *)a2 + 4);
            if (!v104) {
              goto LABEL_89;
            }
            if (!(v104 >> 16))
            {
LABEL_371:
              sub_24B49576C(a1, v104, (uint64_t)&v168);
LABEL_89:
              --*(void *)(a1 + 712);
              if (!a2[25]) {
                sub_24B496DC4(a1, (uint64_t)a2, *((unint64_t *)&v169 + 1));
              }
              goto LABEL_375;
            }
          }
          else
          {
            unint64_t v103 = *((void *)a2 + 5);
            if (!(v103 >> 16))
            {
              LODWORD(v165) = 0;
              sub_24B492018(a1, v103 - *((_DWORD *)a2 + 8), (int *)&v165);
              unint64_t v104 = *((void *)a2 + 4) + v165;
              *((void *)&v168 + 1) = v104;
              goto LABEL_371;
            }
          }
LABEL_88:
          *(void *)&long long v169 = sub_24B49576C;
          sub_24B48E70C(a1, (uint64_t)&v168);
          goto LABEL_89;
        }
        if (v9 == 160) {
          goto LABEL_60;
        }
        if (v9 == 162)
        {
          unsigned int v33 = a2[16];
          if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
          {
            if (v33 < 3) {
              unsigned int v82 = 2;
            }
            else {
              unsigned int v82 = 3;
            }
            unint64_t v83 = sub_24B48CB84(a1, v82);
            int v84 = *(unsigned __int8 *)(a1 + 873);
            if (v84 != 7)
            {
              *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v84;
              *(unsigned char *)(a1 + 873) = 7;
            }
            if (v83 == 4) {
              unint64_t v85 = sub_24B48CE94(a1) << 32;
            }
            else {
              unint64_t v85 = 0;
            }
          }
          else
          {
            if (v33 < 3)
            {
              unint64_t v35 = 0;
            }
            else
            {
              if (v33 == 16) {
                unsigned int v34 = 7;
              }
              else {
                unsigned int v34 = 1;
              }
              unint64_t v35 = sub_24B48CB84(a1, v34) << 32;
            }
            unint64_t v85 = sub_24B48CB84(a1, 0x20u) + v35;
          }
          unint64_t v143 = v85 - 0x80000000;
          if (v33 == 3) {
            v85 -= 0x100000000;
          }
          if (v33 == 1) {
            unint64_t v85 = v143;
          }
          int v144 = a2[16];
          if (v144 != 3 && (v144 == 2 || v144 == 1)) {
            *(_DWORD *)a3 = v85;
          }
          else {
            *(void *)a3 = v85;
          }
          if (v33 == 1)
          {
            if (v85 == (int)v85) {
              goto LABEL_375;
            }
          }
          else if ((v33 != 2 || !HIDWORD(v85)) {
                 && (v33 != 3 || v85 - 0x100000000 >= 0xFFFFFFFE00000000)
          }
                 && (v33 != 4 || !(v85 >> 33))
                 && (v33 != 16 || !(v85 >> 39)))
          {
            goto LABEL_375;
          }
          uint64_t v106 = a1;
          int v107 = 18;
LABEL_374:
          sub_24B4A103C(v106, v107);
          goto LABEL_375;
        }
LABEL_390:
        sub_24B4A10C0(a1, 16);
      }
      if (v9 != 86 && v9 != 90)
      {
        if (v9 == 96)
        {
          sub_24B4901AC(a1, *((void *)a2 + 2), a3, 0);
          size_t v21 = sub_24B49727C(a1, 0x18uLL);
          void *v21 = a2;
          v21[1] = a3;
          v21[2] = *(void *)a4;
          *(void *)a4 = v21;
          goto LABEL_375;
        }
        goto LABEL_390;
      }
LABEL_38:
      uint64_t v167 = 0;
      long long v169 = 0u;
      long long v170 = 0u;
      long long v168 = 0u;
      if (a2[33] == 1 && sub_24B48C964(a1) == 1)
      {
        *((void *)&v170 + 1) = 0;
        if ((*(void *)(a1 + 824) & 0x40) != 0) {
          char v25 = 8;
        }
        else {
          char v25 = 7;
        }
        BYTE8(v169) = v25;
        goto LABEL_152;
      }
      uint64_t v26 = *((void *)a2 + 3);
      if (v26)
      {
        *(void *)&long long v170 = *((void *)a2 + 2);
        *((void *)&v170 + 1) = v26;
        unsigned int v27 = (v26 - 1);
        if ((_BYTE)v26 == 1)
        {
          unsigned __int8 v28 = 0;
          BYTE8(v169) = 0;
          if ((*(unsigned char *)(a1 + 824) & 0x40) == 0) {
            goto LABEL_151;
          }
          unsigned __int8 v30 = 1;
        }
        else
        {
          unsigned __int8 v28 = 0;
          do
          {
            ++v28;
            BOOL v29 = v27 > 1;
            v27 >>= 1;
          }
          while (v29);
          BYTE8(v169) = v28;
          if ((*(unsigned char *)(a1 + 824) & 0x40) == 0)
          {
LABEL_151:
            int v73 = (char)a2[32];
            if ((v73 & 0x80000000) == 0)
            {
LABEL_152:
              *(void *)&long long v169 = sub_24B492EB4;
              sub_24B48E70C(a1, (uint64_t)&v168);
LABEL_153:
              if (*((void *)&v170 + 1)
                && *(unsigned __int8 *)(*((void *)&v170 + 1) + v170 - 1) > ~(-1 << SBYTE8(v169)))
              {
                uint64_t v75 = *((void *)&v168 + 1);
                unint64_t v74 = (unsigned char *)v168;
                if (*((void *)&v168 + 1))
                {
                  while (v74)
                  {
                    unsigned char *v74 = *(unsigned char *)(v170 + (char)*v74);
                    ++v74;
                    if (!--v75) {
                      goto LABEL_158;
                    }
                  }
                  goto LABEL_384;
                }
                uint64_t v76 = 0;
              }
              else
              {
LABEL_158:
                uint64_t v76 = *((void *)&v168 + 1);
                unint64_t v74 = (unsigned char *)v168;
              }
              uint64_t v166 = v76;
              if (v74)
              {
                int v165 = v74;
                switch(*a2 & 0x1F)
                {
                  case 0x12:
                    if (v76) {
                      goto LABEL_177;
                    }
                    malloc_type_id_t v77 = 2364759556;
                    goto LABEL_301;
                  case 0x13:
                    if (v76) {
                      goto LABEL_177;
                    }
                    malloc_type_id_t v77 = 636702409;
                    goto LABEL_301;
                  case 0x16:
                    if (v76) {
                      goto LABEL_177;
                    }
                    malloc_type_id_t v77 = 3756785102;
                    goto LABEL_301;
                  case 0x17:
                    if (v76) {
                      goto LABEL_177;
                    }
                    malloc_type_id_t v77 = 1241086440;
                    goto LABEL_301;
                  case 0x18:
                    if (v76) {
                      goto LABEL_177;
                    }
                    malloc_type_id_t v77 = 1840963905;
                    goto LABEL_301;
                  case 0x1A:
                    if (v76)
                    {
LABEL_177:
                      v74[v76] = 0;
                      *(void *)a3 = v74 - 1;
                      int v81 = 1;
                    }
                    else
                    {
                      malloc_type_id_t v77 = 3522706990;
LABEL_301:
                      int v145 = malloc_type_calloc(1uLL, 2uLL, v77);
                      int v81 = 0;
                      _WORD *v145 = 0;
                      *(void *)a3 = v145;
                      *(unsigned char *)int v145 = 86;
                      *(unsigned char *)(*(void *)a3 + 1) = 0;
                    }
                    LOBYTE(v167) = v81;
                    *(void *)(a1 + 880) = 0;
                    if (!a2[33])
                    {
                      sub_24B496CC8(a1, (uint64_t)a2, &v165);
                      int v81 = v167;
                      uint64_t v76 = v166;
                    }
                    if (!v81 && v76) {
                      free(v165);
                    }
                    break;
                  default:
                    goto LABEL_391;
                }
                goto LABEL_375;
              }
LABEL_384:
              sub_24B4A10C0(a1, 44);
            }
            if ((v73 & 2) != 0)
            {
              unint64_t v79 = *((void *)a2 + 5);
              if (!v79) {
                goto LABEL_153;
              }
              if (v79 > 2)
              {
                if (v79 >> 16) {
                  goto LABEL_152;
                }
                if ((*(unsigned char *)(a1 + 824) & 0x40) != 0 && v79 * v28 >= 0x11)
                {
                  int v159 = *(unsigned __int8 *)(a1 + 873);
                  if (v159 != 7)
                  {
                    *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v159;
                    *(unsigned char *)(a1 + 873) = 7;
                    unint64_t v79 = *((void *)a2 + 5);
                  }
                }
              }
            }
            else
            {
              uint64_t v78 = *((void *)a2 + 6) - *((void *)a2 + 5);
              if ((unint64_t)(v78 + 1) >> 16) {
                goto LABEL_152;
              }
              unsigned int v164 = 0;
              sub_24B492018(a1, v78, (int *)&v164);
              unint64_t v79 = *((void *)a2 + 5) + v164;
              *((void *)&v168 + 1) = v79;
              if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
              {
                int v80 = *(unsigned __int8 *)(a1 + 873);
                if (v80 != 7)
                {
                  *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v80;
                  *(unsigned char *)(a1 + 873) = 7;
                  unint64_t v79 = *((void *)&v168 + 1);
                }
              }
            }
            sub_24B492EB4(a1, v79, (uint64_t *)&v168);
            goto LABEL_153;
          }
          unsigned __int8 v30 = 1;
          unsigned __int8 v31 = v28;
          do
          {
            unsigned int v32 = v31;
            v31 >>= 1;
            v30 *= 2;
          }
          while (v32 > 1);
        }
        unsigned __int8 v71 = v30;
        unsigned int v72 = v30 >> 1;
        if (v72 >= v28) {
          unsigned __int8 v28 = v72;
        }
        else {
          unsigned __int8 v28 = v71;
        }
      }
      else if ((*a2 & 0x1F) == 0x12)
      {
        *(void *)&long long v170 = " 0123456789";
        *((void *)&v170 + 1) = 11;
        unsigned __int8 v28 = 4;
      }
      else
      {
        *((void *)&v170 + 1) = 0;
        if ((*(void *)(a1 + 824) & 0x40) != 0) {
          unsigned __int8 v28 = 8;
        }
        else {
          unsigned __int8 v28 = 7;
        }
      }
      BYTE8(v169) = v28;
      goto LABEL_151;
    }
    switch(*a2)
    {
      case '@':
        uint64_t v13 = *(void *)a4;
        if (!*(void *)a4) {
          goto LABEL_23;
        }
        while (1)
        {
          uint64_t v14 = (unsigned __int8 **)(a2 + 16);
          do
          {
            int64_t v15 = *v14;
            uint64_t v16 = *v14;
            int v17 = *v16;
            uint64_t v14 = (unsigned __int8 **)(v16 + 16);
          }
          while (v17 == 128);
          if (v15 == *(unsigned __int8 **)v13) {
            break;
          }
          uint64_t v13 = *(void *)(v13 + 16);
          if (!v13)
          {
LABEL_23:
            uint64_t v18 = *(void *)(a1 + 864);
            char v19 = *(unsigned char *)(a1 + 873);
            uint64_t v20 = sub_24B49727C(a1, 0x28uLL);
            *(void *)uint64_t v20 = v18;
            v20[8] = v19;
            *((void *)v20 + 2) = a2;
            *((void *)v20 + 3) = a3;
            *((void *)v20 + 4) = *(void *)(a4 + 8);
            *(void *)(a4 + 8) = v20;
            goto LABEL_24;
          }
        }
        *(void *)&long long v168 = 0;
        uint64_t v93 = sub_24B495A54(a1, (uint64_t)a2, *(unsigned __int8 **)(v13 + 8), &v168);
        if (v93)
        {
          int v94 = (uint64_t *)v93;
          uint64_t v95 = *((void *)a2 + 1);
          sub_24B48BE00(*(unsigned int *)(v95 + 48), (unsigned char *)a3, *(_DWORD *)(v93 + 16));
          unint64_t v96 = *(void *)(a1 + 712);
          if (v96 < 0x40)
          {
            uint64_t v67 = a3 + *(void *)(v95 + 40);
            *(void *)(a1 + 8 * v96 + 200) = v94;
            *(void *)(a1 + 712) = v96 + 1;
            uint64_t v68 = *v94;
            uint64_t v69 = a1;
            uint64_t v70 = 0;
            goto LABEL_207;
          }
LABEL_391:
          sub_24B4A10C0(a1, 15);
        }
        uint64_t v106 = a1;
        int v107 = 39;
        goto LABEL_374;
      case 'A':
        goto LABEL_390;
      case 'B':
        unsigned __int8 v36 = a2[16];
        if (a2[17] != 1) {
          goto LABEL_66;
        }
        if (sub_24B48C964(a1) == 1) {
          goto LABEL_394;
        }
        unsigned __int8 v36 = a2[16];
LABEL_66:
        if ((v36 & 0x20) != 0)
        {
          LODWORD(v168) = 0;
          if ((v36 & 0x80) != 0) {
            sub_24B492018(a1, *((_DWORD *)a2 + 8) - *((_DWORD *)a2 + 6), (int *)&v168);
          }
          else {
            sub_24B49222C(a1, &v168);
          }
          uint64_t v38 = *((void *)a2 + 3) + v168;
        }
        else
        {
LABEL_394:
          if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
          {
            int v37 = *(unsigned __int8 *)(a1 + 873);
            if (v37 != 7)
            {
              *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v37;
              *(unsigned char *)(a1 + 873) = 7;
            }
          }
          *(void *)&long long v168 = 0;
          sub_24B491BEC(a1, (uint64_t)&v168);
          LODWORD(v38) = DWORD1(v168);
        }
        LODWORD(v165) = v38;
        uint64_t v161 = *(void *)(*((void *)a2 + 1) + 8);
        switch(v161)
        {
          case 4:
            *(_DWORD *)a3 = v38;
            break;
          case 2:
            *(_WORD *)a3 = v38;
            break;
          case 1:
            *(unsigned char *)a3 = v38;
            break;
          default:
            *(void *)a3 = (int)v38;
            break;
        }
        if (!a2[17]) {
          sub_24B496C44(a1, (uint64_t)a2, (int *)&v165);
        }
        goto LABEL_375;
      case 'C':
        long long v168 = 0uLL;
        *(void *)&long long v169 = 0;
        if (a2[17] == 1 && sub_24B48C964(a1) == 1) {
          goto LABEL_74;
        }
        int v39 = (char)a2[16];
        if ((v39 & 0x80000000) == 0) {
          goto LABEL_74;
        }
        if ((v39 & 2) != 0)
        {
          size_t v98 = *((void *)a2 + 3);
          if (!v98)
          {
LABEL_80:
            unint64_t v42 = *((void *)&v168 + 1);
            uint64_t v43 = v168;
            BOOL v124 = *((void *)&v168 + 1) == 0;
            BOOL v44 = *((void *)&v168 + 1) != 0;
            *(void *)(a1 + 880) = 0;
            if (v124) {
              uint64_t v43 = 0;
            }
            *(void *)(a3 + 8) = v43;
            *(_DWORD *)a3 = v42;
            *(_DWORD *)(a3 + 4) = 8 * v44;
            if (!a2[17]) {
              sub_24B496C7C(a1, (uint64_t)a2, v42);
            }
            goto LABEL_375;
          }
          if (v98 <= 0x10)
          {
LABEL_365:
            sub_24B4925E8(a1, v98, (uint64_t)&v168);
            goto LABEL_80;
          }
          if (!(v98 >> 16))
          {
            if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
            {
              int v162 = *(unsigned __int8 *)(a1 + 873);
              if (v162 != 7)
              {
                *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v162;
                *(unsigned char *)(a1 + 873) = 7;
                size_t v98 = *((void *)a2 + 3);
              }
            }
            goto LABEL_365;
          }
        }
        else
        {
          unint64_t v97 = *((void *)a2 + 4);
          if (!(v97 >> 16))
          {
            LODWORD(v165) = 0;
            sub_24B492018(a1, v97 - *((_DWORD *)a2 + 6), (int *)&v165);
            size_t v98 = *((void *)a2 + 3) + v165;
            *((void *)&v168 + 1) = v98;
            if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
            {
              int v99 = *(unsigned __int8 *)(a1 + 873);
              if (v99 != 7)
              {
                *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v99;
                *(unsigned char *)(a1 + 873) = 7;
                size_t v98 = *((void *)&v168 + 1);
              }
            }
            goto LABEL_365;
          }
        }
LABEL_74:
        int v40 = sub_24B4925E8;
        goto LABEL_79;
      case 'D':
        long long v168 = 0uLL;
        *(void *)&long long v169 = 0;
        if (a2[17] == 1 && sub_24B48C964(a1) == 1) {
          goto LABEL_78;
        }
        int v41 = (char)a2[16];
        if ((v41 & 0x80000000) == 0) {
          goto LABEL_78;
        }
        if ((v41 & 2) != 0)
        {
          size_t v101 = *((void *)a2 + 3);
          if (!v101) {
            goto LABEL_80;
          }
          if (v101 <= 2) {
            goto LABEL_368;
          }
          if (!(v101 >> 16))
          {
            if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
            {
              int v163 = *(unsigned __int8 *)(a1 + 873);
              if (v163 != 7)
              {
                *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v163;
                *(unsigned char *)(a1 + 873) = 7;
                size_t v101 = *((void *)a2 + 3);
              }
            }
            goto LABEL_368;
          }
        }
        else
        {
          unint64_t v100 = *((void *)a2 + 4);
          if (!(v100 >> 16))
          {
            LODWORD(v165) = 0;
            sub_24B492018(a1, v100 - *((_DWORD *)a2 + 6), (int *)&v165);
            size_t v101 = *((void *)a2 + 3) + v165;
            *((void *)&v168 + 1) = v101;
            if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
            {
              int v102 = *(unsigned __int8 *)(a1 + 873);
              if (v102 != 7)
              {
                *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v102;
                *(unsigned char *)(a1 + 873) = 7;
                size_t v101 = *((void *)&v168 + 1);
              }
            }
LABEL_368:
            sub_24B4929DC(a1, v101, (uint64_t)&v168);
            goto LABEL_80;
          }
        }
LABEL_78:
        int v40 = sub_24B4929DC;
LABEL_79:
        *(void *)&long long v169 = v40;
        sub_24B48E70C(a1, (uint64_t)&v168);
        goto LABEL_80;
      default:
        if (v9 - 82 < 2) {
          goto LABEL_38;
        }
        goto LABEL_390;
    }
  }
  switch(*a2)
  {
    case 1u:
      *(unsigned char *)a3 = sub_24B48C964(a1) != 0;
      goto LABEL_375;
    case 2u:
      if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
      {
        int v48 = *(unsigned __int8 *)(a1 + 873);
        if (v48 != 7)
        {
          *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v48;
          *(unsigned char *)(a1 + 873) = 7;
        }
      }
      *(void *)&long long v168 = 0;
      sub_24B491BEC(a1, (uint64_t)&v168);
      LOBYTE(v49) = BYTE4(v168);
      uint64_t v50 = *(void *)(*((void *)a2 + 1) + 8);
      switch(v50)
      {
        case 4:
          *(_DWORD *)a3 = DWORD1(v168);
          break;
        case 2:
          *(_WORD *)a3 = WORD2(v168);
          break;
        case 1:
          goto LABEL_110;
        default:
          *(void *)a3 = SDWORD1(v168);
          break;
      }
      goto LABEL_375;
    case 3u:
      long long v168 = 0uLL;
      uint64_t v51 = sub_24B4925E8;
      goto LABEL_104;
    case 4u:
      long long v168 = 0uLL;
      uint64_t v51 = sub_24B4929DC;
LABEL_104:
      *(void *)&long long v169 = v51;
      sub_24B48E70C(a1, (uint64_t)&v168);
      int v53 = DWORD2(v168);
      uint64_t v52 = v168;
      BOOL v124 = *((void *)&v168 + 1) == 0;
      BOOL v54 = *((void *)&v168 + 1) != 0;
      *(void *)(a1 + 880) = 0;
      if (v124) {
        uint64_t v52 = 0;
      }
      *(void *)(a3 + 8) = v52;
      *(_DWORD *)a3 = v53;
      *(_DWORD *)(a3 + 4) = 8 * v54;
      goto LABEL_375;
    case 5u:
      *(_DWORD *)a3 = 0;
      goto LABEL_375;
    case 6u:
      if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
      {
        int v58 = *(unsigned __int8 *)(a1 + 873);
        if (v58 != 7)
        {
          *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v58;
          *(unsigned char *)(a1 + 873) = 7;
        }
      }
      unsigned int v59 = sub_24B48CE94(a1);
      if (v59 >= 0xC1)
      {
        --*(void *)(a1 + 864);
        unsigned int v60 = *(unsigned __int8 *)(a1 + 873);
        if (v60 == 7)
        {
          unint64_t v61 = sub_24B48D5FC(a1);
          sub_24B492C00(a1, v61, a3);
          if (*(unsigned __int8 *)(a1 + 873) <= 6u)
          {
            ++*(void *)(a1 + 864);
            *(unsigned char *)(a1 + 873) = 7;
          }
          sub_24B48D268((void *)a1, v61);
        }
        else
        {
          uint64_t v146 = sub_24B48DFC4(a1);
          sub_24B492C00(a1, v146, a3);
          if (*(unsigned __int8 *)(a1 + 873) < v60) {
            ++*(void *)(a1 + 864);
          }
          *(unsigned char *)(a1 + 873) = v60;
          sub_24B48D8E8(a1, v146);
        }
        goto LABEL_375;
      }
      if ((v59 & 0xC0) == 0x80)
      {
        uint64_t v87 = sub_24B48CE94(a1) & 0xFFFF80FF | ((v59 & 0x7F) << 8);
        uint64_t v88 = a1;
LABEL_316:
        sub_24B492C00(v88, v87, a3);
        goto LABEL_375;
      }
      if ((v59 & 0x80) == 0)
      {
        uint64_t v147 = v59 & 0x7F;
        if ((v59 & 0x7F) == 0) {
          sub_24B4A103C(a1, 26);
        }
        uint64_t v88 = a1;
        uint64_t v87 = v147;
        goto LABEL_316;
      }
      uint64_t v106 = a1;
      int v107 = 26;
      goto LABEL_374;
    case 7u:
    case 8u:
    case 9u:
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x11u:
    case 0x14u:
    case 0x15u:
    case 0x19u:
    case 0x1Bu:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
      goto LABEL_390;
    case 0xAu:
      int v165 = 0;
      if (*((void *)a2 + 2) == -1)
      {
        LODWORD(v168) = 0;
        int v89 = *((_DWORD *)a2 + 8);
      }
      else
      {
        if (sub_24B48C964(a1) == 1)
        {
          sub_24B493068(a1, (unint64_t *)&v165);
          int v49 = v165 + *((_DWORD *)a2 + 4);
LABEL_110:
          *(unsigned char *)a3 = v49;
          goto LABEL_375;
        }
        LODWORD(v168) = 0;
        int v89 = *((_DWORD *)a2 + 4);
      }
      sub_24B492018(a1, v89 - 1, (int *)&v168);
      unsigned int v105 = v168;
      *(unsigned char *)a3 = v168;
      if (*((void *)a2 + 4) > (unint64_t)v105) {
        goto LABEL_375;
      }
      uint64_t v106 = a1;
      int v107 = 21;
      goto LABEL_374;
    case 0x10u:
      int v165 = 0;
      uint64_t v166 = 0;
      uint64_t v55 = (void **)a4;
      unsigned __int8 v56 = a2[40];
      if ((v56 & 0x10) != 0)
      {
        if (a4) {
          int v165 = *(void **)a4;
        }
        uint64_t v55 = &v165;
      }
      if (v56) {
        int v57 = sub_24B48C964(a1);
      }
      else {
        int v57 = 0;
      }
      unint64_t v86 = *((void *)a2 + 9);
      if (v86)
      {
        long long v168 = 0uLL;
        *(void *)&long long v169 = 0;
        if (v86 >> 16) {
          sub_24B4942B0(a1, (uint64_t)&v168);
        }
        else {
          sub_24B49424C(a1, (uint64_t)&v168, v86);
        }
        uint64_t v108 = *((void *)a2 + 6);
        if (v108)
        {
          uint64_t v109 = *((void *)a2 + 2);
          unint64_t v110 = a1 + 200;
          while (2)
          {
            switch(*(unsigned char *)(v109 + 8))
            {
              case 0:
                goto LABEL_229;
              case 1:
                sub_24B495154(a1, (unsigned __int8 **)&v168);
LABEL_229:
                unint64_t v111 = *(void *)(a1 + 712);
                if (v111 >= 0x40) {
                  goto LABEL_391;
                }
                uint64_t v112 = a3 + *(void *)(*(void *)(*((void *)a2 + 1) + 24) + 24 * *(void *)(v109 + 16) + 8);
                *(void *)(v110 + 8 * v111) = v109;
                unint64_t v113 = v111 + 1;
                goto LABEL_237;
              case 2:
                int v114 = sub_24B495154(a1, (unsigned __int8 **)&v168);
                uint64_t v115 = *(void *)(*((void *)a2 + 1) + 24);
                uint64_t v116 = *(void *)(v109 + 16);
                if (!v114)
                {
                  *(unsigned char *)(a3 + **(void **)(v115 + 24 * v116 + 16)) = 0;
                  goto LABEL_241;
                }
                uint64_t v117 = v115 + 24 * v116;
                uint64_t v118 = *(void *)(v117 + 8);
                *(unsigned char *)(a3 + **(void **)(v117 + 16)) = 1;
                unint64_t v119 = *(void *)(a1 + 712);
                if (v119 >= 0x40) {
                  goto LABEL_391;
                }
                goto LABEL_236;
              case 3:
                int v120 = sub_24B495154(a1, (unsigned __int8 **)&v168);
                uint64_t v121 = *((void *)a2 + 1);
                uint64_t v122 = *(void *)(v121 + 24) + 24 * *(void *)(v109 + 16);
                if (v120)
                {
                  uint64_t v118 = *(void *)(v122 + 8);
                  *(unsigned char *)(a3 + **(void **)(v122 + 16)) = 1;
                  unint64_t v119 = *(void *)(a1 + 712);
                  if (v119 >= 0x40) {
                    goto LABEL_391;
                  }
LABEL_236:
                  uint64_t v112 = a3 + v118;
                  *(void *)(v110 + 8 * v119) = v109;
                  unint64_t v113 = v119 + 1;
LABEL_237:
                  *(void *)(a1 + 712) = v113;
                  sub_24B4901AC(a1, *(void *)v109, v112, v55);
                  --*(void *)(a1 + 712);
                }
                else
                {
                  *(unsigned char *)(a3 + **(void **)(v122 + 16)) = 0;
                  unsigned int v123 = (uint64_t *)(*(void *)(v121 + 24) + 24 * *(void *)(v109 + 16));
                  sub_24B48BE70((unsigned int *)(a3 + v123[1]), *(unsigned int **)(v123[2] + 8), 10, *v123);
                }
LABEL_241:
                if ((void)v169) {
                  BOOL v124 = 0;
                }
                else {
                  BOOL v124 = BYTE9(v168) == 1;
                }
                if (v124) {
                  sub_24B4951C4((unsigned __int8 **)&v168);
                }
                v109 += 32;
                if (!--v108) {
                  break;
                }
                continue;
              case 5:
                sub_24B495154(a1, (unsigned __int8 **)&v168);
                goto LABEL_241;
              default:
                goto LABEL_241;
            }
            break;
          }
        }
        uint64_t v125 = *((void *)a2 + 8);
        if (v125)
        {
          uint64_t v126 = *((void *)a2 + 4);
          unint64_t v127 = a1 + 200;
          while (2)
          {
            switch(*(unsigned char *)(v126 + 8))
            {
              case 0:
                goto LABEL_252;
              case 1:
                sub_24B495154(a1, (unsigned __int8 **)&v168);
LABEL_252:
                unint64_t v128 = *(void *)(a1 + 712);
                if (v128 >= 0x40) {
                  goto LABEL_391;
                }
                uint64_t v129 = a3 + *(void *)(*(void *)(*((void *)a2 + 1) + 24) + 24 * *(void *)(v126 + 16) + 8);
                *(void *)(v127 + 8 * v128) = v126;
                unint64_t v130 = v128 + 1;
                goto LABEL_260;
              case 2:
                int v131 = sub_24B495154(a1, (unsigned __int8 **)&v168);
                uint64_t v132 = *(void *)(*((void *)a2 + 1) + 24);
                uint64_t v133 = *(void *)(v126 + 16);
                if (!v131)
                {
                  *(unsigned char *)(a3 + **(void **)(v132 + 24 * v133 + 16)) = 0;
                  goto LABEL_264;
                }
                uint64_t v134 = v132 + 24 * v133;
                uint64_t v135 = *(void *)(v134 + 8);
                *(unsigned char *)(a3 + **(void **)(v134 + 16)) = 1;
                unint64_t v136 = *(void *)(a1 + 712);
                if (v136 >= 0x40) {
                  goto LABEL_391;
                }
                goto LABEL_259;
              case 3:
                int v137 = sub_24B495154(a1, (unsigned __int8 **)&v168);
                uint64_t v138 = *((void *)a2 + 1);
                uint64_t v139 = *(void *)(v138 + 24) + 24 * *(void *)(v126 + 16);
                if (v137)
                {
                  uint64_t v135 = *(void *)(v139 + 8);
                  *(unsigned char *)(a3 + **(void **)(v139 + 16)) = 1;
                  unint64_t v136 = *(void *)(a1 + 712);
                  if (v136 >= 0x40) {
                    goto LABEL_391;
                  }
LABEL_259:
                  uint64_t v129 = a3 + v135;
                  *(void *)(v127 + 8 * v136) = v126;
                  unint64_t v130 = v136 + 1;
LABEL_260:
                  *(void *)(a1 + 712) = v130;
                  sub_24B4901AC(a1, *(void *)v126, v129, v55);
                  --*(void *)(a1 + 712);
                }
                else
                {
                  *(unsigned char *)(a3 + **(void **)(v139 + 16)) = 0;
                  int v140 = (uint64_t *)(*(void *)(v138 + 24) + 24 * *(void *)(v126 + 16));
                  sub_24B48BE70((unsigned int *)(a3 + v140[1]), *(unsigned int **)(v140[2] + 8), 10, *v140);
                }
LABEL_264:
                if ((void)v169) {
                  BOOL v141 = 0;
                }
                else {
                  BOOL v141 = BYTE9(v168) == 1;
                }
                if (v141) {
                  sub_24B4951C4((unsigned __int8 **)&v168);
                }
                v126 += 32;
                if (!--v125) {
                  break;
                }
                continue;
              case 5:
                sub_24B495154(a1, (unsigned __int8 **)&v168);
                goto LABEL_264;
              default:
                goto LABEL_264;
            }
            break;
          }
        }
      }
      else
      {
        sub_24B49442C(a1, a2, a3, (uint64_t)v55);
      }
      if (v57 == 1)
      {
        long long v168 = 0uLL;
        *(void *)&long long v169 = 0;
        if (sub_24B48C964(a1) == 1)
        {
          sub_24B4942B0(a1, (uint64_t)&v168);
        }
        else
        {
          unint64_t v148 = sub_24B48CB84(a1, 6u);
          *(void *)&long long v168 = *(void *)(a1 + 864);
          WORD4(v168) = *(unsigned __int8 *)(a1 + 873);
          char v149 = v148 + 1;
          *(void *)&long long v169 = v148 + 1;
          sub_24B48D06C(a1, (v148 + 1) >> 3);
          sub_24B48CB84(a1, v149 & 7);
        }
        if (!*((void *)a2 + 10) || sub_24B49456C(a1, (uint64_t)&v168, a2, a3, (uint64_t)v55)) {
          sub_24B494DF8(a1, (uint64_t)&v168);
        }
      }
      else
      {
        uint64_t v142 = *((void *)a2 + 7);
        if (v142) {
          sub_24B494E70(a1, a2, v142, a3);
        }
      }
      if ((a2[40] & 0x10) != 0)
      {
        uint64_t v150 = v166;
        if (v166)
        {
          sub_24B494F84(a1, (uint64_t *)&v165);
          uint64_t v150 = v166;
        }
        if (a4)
        {
          if (v150)
          {
            uint64_t v151 = (void *)(a4 + 8);
            uint64_t v152 = *(void *)(a4 + 8);
            if (v152)
            {
              do
              {
                uint64_t v153 = v152;
                uint64_t v152 = *(void *)(v152 + 32);
              }
              while (v152);
              uint64_t v151 = (void *)(v153 + 32);
            }
            *uint64_t v151 = v150;
          }
          if (!*(void *)a4) {
            *(void *)a4 = v165;
          }
        }
        else
        {
          if (v150) {
            sub_24B4A103C(a1, 38);
          }
          while (1)
          {
            uint64_t v160 = v165;
            if (!v165) {
              break;
            }
            int v165 = (void *)*((void *)v165 + 2);
            sub_24B49731C(a1, v160, 24);
          }
        }
      }
      goto LABEL_375;
    case 0x12u:
    case 0x13u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x1Au:
      long long v169 = 0u;
      long long v170 = 0u;
      long long v168 = 0u;
      if (v9 == 18)
      {
        BYTE8(v169) = 4;
        *(void *)&long long v169 = sub_24B492EB4;
        sub_24B48E70C(a1, (uint64_t)&v168);
        uint64_t v10 = *((void *)&v168 + 1);
        if (!*((void *)&v168 + 1)) {
          goto LABEL_34;
        }
        int v11 = (char *)v168;
        do
        {
          if (*v11) {
            char v12 = *v11 + 47;
          }
          else {
            char v12 = 32;
          }
          *v11++ = v12;
          --v10;
        }
        while (v10);
      }
      else
      {
        if ((*(void *)(a1 + 824) & 0x40) != 0) {
          char v22 = 8;
        }
        else {
          char v22 = 7;
        }
        BYTE8(v169) = v22;
        *(void *)&long long v169 = sub_24B492EB4;
        sub_24B48E70C(a1, (uint64_t)&v168);
      }
      uint64_t v10 = *((void *)&v168 + 1);
LABEL_34:
      uint64_t v23 = v168;
      switch(*a2 & 0x1F)
      {
        case 0x12:
          if (v10) {
            goto LABEL_141;
          }
          malloc_type_id_t v24 = 3998012216;
          goto LABEL_202;
        case 0x13:
          if (v10) {
            goto LABEL_141;
          }
          malloc_type_id_t v24 = 2427040028;
          goto LABEL_202;
        case 0x16:
          if (v10) {
            goto LABEL_141;
          }
          malloc_type_id_t v24 = 3692221067;
          goto LABEL_202;
        case 0x17:
          if (v10) {
            goto LABEL_141;
          }
          malloc_type_id_t v24 = 2699246459;
          goto LABEL_202;
        case 0x18:
          if (v10) {
            goto LABEL_141;
          }
          malloc_type_id_t v24 = 828715913;
          goto LABEL_202;
        case 0x1A:
          if (v10)
          {
LABEL_141:
            *(unsigned char *)(v168 + v10) = 0;
            *(void *)a3 = v23 - 1;
          }
          else
          {
            malloc_type_id_t v24 = 4203528122;
LABEL_202:
            uint64_t v92 = malloc_type_calloc(1uLL, 2uLL, v24);
            _WORD *v92 = 0;
            *(void *)a3 = v92;
            *(unsigned char *)uint64_t v92 = 86;
            *(unsigned char *)(*(void *)a3 + 1) = 0;
          }
          *(void *)(a1 + 880) = 0;
          break;
        default:
          goto LABEL_391;
      }
      goto LABEL_375;
    case 0x20u:
      *(void *)&long long v168 = 0;
      uint64_t v62 = *((void *)a2 + 3);
      if (*((void *)a2 + 2) == -1)
      {
        uint64_t v90 = *((void *)a2 + 4);
        if ((unint64_t)v90 < 2)
        {
LABEL_333:
          unsigned int v91 = 0;
LABEL_334:
          uint64_t v154 = v91;
          if (*((void *)a2 + 4) <= (unint64_t)v91) {
            sub_24B4A103C(a1, 37);
          }
          uint64_t v155 = v62 + 32 * v154;
          if (*(unsigned char *)(v155 + 8) != 5)
          {
            uint64_t v156 = *((void *)a2 + 1);
            sub_24B48BE00(*(unsigned int *)(v156 + 48), (unsigned char *)a3, *(_DWORD *)(v155 + 16));
            unint64_t v157 = *(void *)(a1 + 712);
            if (v157 < 0x40)
            {
              uint64_t v158 = a3 + *(void *)(v156 + 40);
              *(void *)(a1 + 8 * v157 + 200) = v155;
              *(void *)(a1 + 712) = v157 + 1;
              sub_24B4901AC(a1, *(void *)v155, v158, a4);
              goto LABEL_340;
            }
            goto LABEL_391;
          }
LABEL_337:
          uint64_t v106 = a1;
          int v107 = 37;
          goto LABEL_374;
        }
LABEL_199:
        LODWORD(v165) = 0;
        sub_24B492018(a1, v90 - 1, (int *)&v165);
        unsigned int v91 = v165;
        goto LABEL_334;
      }
      if (!sub_24B48C964(a1))
      {
        uint64_t v90 = *((void *)a2 + 2);
        if (v90 < 2) {
          goto LABEL_333;
        }
        goto LABEL_199;
      }
      sub_24B493068(a1, (unint64_t *)&v168);
      unint64_t v63 = *((void *)a2 + 2) + v168;
      if (v63 < *((void *)a2 + 4))
      {
        uint64_t v64 = v62 + 32 * v63;
        if (*(unsigned char *)(v64 + 8) != 5)
        {
          uint64_t v65 = *((void *)a2 + 1);
          sub_24B48BE00(*(unsigned int *)(v65 + 48), (unsigned char *)a3, *(_DWORD *)(v64 + 16));
          unint64_t v66 = *(void *)(a1 + 712);
          if (v66 < 0x40)
          {
            uint64_t v67 = a3 + *(void *)(v65 + 40);
            *(void *)(a1 + 8 * v66 + 200) = v64;
            *(void *)(a1 + 712) = v66 + 1;
            uint64_t v68 = *(void *)v64;
            uint64_t v69 = a1;
            uint64_t v70 = a4;
LABEL_207:
            sub_24B4952DC(v69, v68, v67, v70);
LABEL_340:
            --*(void *)(a1 + 712);
            goto LABEL_375;
          }
          goto LABEL_391;
        }
        goto LABEL_337;
      }
      sub_24B48BE00(*(unsigned int *)(*((void *)a2 + 1) + 48), (unsigned char *)a3, v63);
LABEL_24:
      sub_24B49555C(a1);
LABEL_375:
      *(void *)(a1 + 808) = v8;
      return;
    default:
      if (v9 != 48) {
        goto LABEL_390;
      }
      *(void *)&long long v168 = a3;
      *((void *)&v169 + 1) = 0;
      *(void *)&long long v170 = a2;
      *((void *)&v170 + 1) = a4;
      unint64_t v47 = *(void *)(a1 + 712);
      if (v47 >= 0x40) {
        goto LABEL_391;
      }
      *(void *)(a1 + 8 * v47 + 200) = a2;
      *(void *)(a1 + 712) = v47 + 1;
      *((void *)&v168 + 1) = 0;
      *(void *)&long long v169 = sub_24B49576C;
      sub_24B48E70C(a1, (uint64_t)&v168);
      goto LABEL_340;
  }
}

char *sub_24B491B14(char *a1, uint64_t a2)
{
  unsigned int v4 = *(_DWORD *)(a2 + 4);
  if (v4 >= 0x80)
  {
    if (v4 >= 0x8000)
    {
      if (v4 >= 0x800000)
      {
        sub_24B48CD70(a1, 4u);
        unsigned int v5 = *(_DWORD *)(a2 + 4);
        if (*(unsigned char *)a2)
        {
          unsigned int v5 = ~v5;
          *(_DWORD *)(a2 + 4) = v5;
        }
      }
      else
      {
        if (*(unsigned char *)a2)
        {
          unsigned int v4 = 0xFFFFFF - v4;
          *(_DWORD *)(a2 + 4) = v4;
        }
        unsigned int v5 = v4 | 0x3000000;
      }
      unsigned int v6 = 32;
    }
    else
    {
      if (*(unsigned char *)a2)
      {
        unsigned int v4 = 0xFFFF - v4;
        *(_DWORD *)(a2 + 4) = v4;
      }
      unsigned int v5 = v4 | 0x20000;
      unsigned int v6 = 24;
    }
  }
  else
  {
    if (*(unsigned char *)a2)
    {
      unsigned int v4 = 255 - v4;
      *(_DWORD *)(a2 + 4) = v4;
    }
    unsigned int v5 = v4 | 0x100;
    unsigned int v6 = 16;
  }
  return sub_24B48C9D0(a1, v5, v6);
}

unint64_t sub_24B491BEC(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = sub_24B48CE94(a1);
  if (v4 - 5 <= 0xFFFFFFFB) {
    sub_24B4A103C(a1, 24);
  }
  char v5 = 8 * v4;
  unint64_t result = sub_24B48CB84(a1, (8 * v4));
  *(_DWORD *)(a2 + 4) = result;
  if (v4 <= 3 && (result & (128 << (v5 - 8))) != 0) {
    *(_DWORD *)(a2 + 4) = (-1 << v5) | result;
  }
  return result;
}

char *sub_24B491C7C(char *result, unsigned int a2, int *a3)
{
  unsigned int v4 = result;
  if ((result[824] & 0x40) != 0)
  {
    if (!a2) {
      return result;
    }
    if (a2 > 0xFE)
    {
      if (a2 == 255)
      {
        int v9 = result[873];
        if (v9 == 7)
        {
          uint64_t v10 = (char *)*((void *)result + 108);
        }
        else
        {
          **((unsigned char **)result + 108) &= 510 << v9;
          uint64_t v10 = (char *)(*((void *)result + 108) + 1);
          *((void *)result + 108) = v10;
          result[873] = 7;
        }
        if (v10 == *((char **)result + 106))
        {
          uint64_t v13 = *((void *)result + 105);
          uint64_t v14 = *((void *)result + 107) - v13;
          int64_t v15 = &v10[-v13];
          unint64_t result = sub_24B4AF2B0((uint64_t)result, 1);
          *((void *)v4 + 105) = result;
          uint64_t v10 = &v15[(void)result];
          *((void *)v4 + 106) = &v15[(void)result + 1];
          *((void *)v4 + 107) = &result[v14];
          *((void *)v4 + 108) = &v15[(void)result];
        }
        *uint64_t v10 = *a3;
      }
      else
      {
        if (HIWORD(a2))
        {
          int v16 = *a3;
          unsigned int v17 = 64 - (__clz(a2 | 1) | 0x20);
          if ((v17 & 7) != 0) {
            char v18 = (v17 >> 3) + 1;
          }
          else {
            char v18 = v17 >> 3;
          }
          unsigned int v19 = 32 - __clz((v18 - 1) & 0xFE | 1);
          if (v16) {
            int v20 = 64;
          }
          else {
            int v20 = 63;
          }
          unsigned int v21 = __clz(v16 | 1) | 0x20;
          if (((v20 - v21) & 7) != 0) {
            unsigned int v22 = ((v20 - v21) >> 3) + 1;
          }
          else {
            unsigned int v22 = (v20 - v21) >> 3;
          }
          if (v20 == v21) {
            int v23 = 1;
          }
          else {
            int v23 = v22;
          }
          sub_24B48C9D0(result, v23 - 1, v19);
          int v24 = v4[873];
          if (v24 != 7)
          {
            *(unsigned char *)(*((void *)v4 + 108))++ &= 510 << v24;
            v4[873] = 7;
          }
          unint64_t v7 = *a3;
          unsigned int v8 = 8 * (v23 & 0x1F);
          goto LABEL_34;
        }
        int v11 = result[873];
        if (v11 == 7)
        {
          char v12 = (char *)*((void *)result + 108);
        }
        else
        {
          **((unsigned char **)result + 108) &= 510 << v11;
          char v12 = (char *)(*((void *)result + 108) + 1);
          *((void *)result + 108) = v12;
          result[873] = 7;
        }
        uint64_t v25 = *((void *)result + 106);
        if (v25 - (uint64_t)v12 <= 1)
        {
          uint64_t v26 = 2 - (v25 - (void)v12);
          uint64_t v27 = *((void *)result + 105);
          uint64_t v28 = *((void *)result + 107) - v27;
          BOOL v29 = &v12[-v27];
          uint64_t v30 = v25 - v27;
          unint64_t result = sub_24B4AF2B0((uint64_t)result, v26);
          *((void *)v4 + 105) = result;
          *((void *)v4 + 106) = &result[v30 + v26];
          *((void *)v4 + 107) = &result[v28];
          char v12 = &v29[(void)result];
          *((void *)v4 + 108) = &v29[(void)result];
        }
        *char v12 = BYTE1(*a3);
        uint64_t v31 = *((void *)v4 + 108);
        *((void *)v4 + 108) = v31 + 1;
        *(unsigned char *)(v31 + 1) = *a3;
      }
      ++*((void *)v4 + 108);
      return result;
    }
    unsigned int v8 = 32 - __clz(a2 | 1);
    unint64_t v7 = *a3;
  }
  else
  {
    char v5 = __clz(a2 | 1);
    if (a2) {
      char v6 = 32;
    }
    else {
      char v6 = 31;
    }
    unint64_t v7 = *a3;
    unsigned int v8 = (v6 - v5);
  }
LABEL_34:
  return sub_24B48C9D0(v4, v7, v8);
}

char *sub_24B491F4C(uint64_t a1, unsigned int *a2)
{
  if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
  {
    int v4 = *(unsigned __int8 *)(a1 + 873);
    if (v4 != 7)
    {
      *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v4;
      *(unsigned char *)(a1 + 873) = 7;
    }
  }
  unsigned int v5 = *a2;
  if (*a2 >= 0x100)
  {
    if (v5 >= 0x10000)
    {
      if (HIBYTE(v5))
      {
        sub_24B48CD70((char *)a1, 4u);
        unsigned int v6 = *a2;
      }
      else
      {
        unsigned int v6 = v5 | 0x3000000;
      }
      unsigned int v7 = 32;
    }
    else
    {
      unsigned int v6 = v5 | 0x20000;
      unsigned int v7 = 24;
    }
  }
  else
  {
    unsigned int v6 = v5 | 0x100;
    unsigned int v7 = 16;
  }
  return sub_24B48C9D0((char *)a1, v6, v7);
}

uint64_t sub_24B492018(uint64_t result, unsigned int a2, int *a3)
{
  uint64_t v4 = result;
  if ((*(unsigned char *)(result + 824) & 0x40) == 0)
  {
    char v5 = __clz(a2 | 1);
    if (a2) {
      char v6 = 32;
    }
    else {
      char v6 = 31;
    }
    unsigned int v7 = (v6 - v5);
    goto LABEL_26;
  }
  if (!a2)
  {
    *a3 = 0;
    return result;
  }
  if (a2 <= 0xFE)
  {
    unsigned int v7 = 32 - __clz(a2 | 1);
LABEL_26:
    unint64_t result = sub_24B48CB84(v4, v7);
    *a3 = result;
    return result;
  }
  if (a2 == 255)
  {
    int v8 = *(unsigned __int8 *)(result + 873);
    if (v8 == 7)
    {
      int v9 = *(unsigned __int8 **)(result + 864);
    }
    else
    {
      **(unsigned char **)(result + 864) &= 510 << v8;
      int v9 = (unsigned __int8 *)(*(void *)(result + 864) + 1);
      *(void *)(result + 864) = v9;
      *(unsigned char *)(result + 873) = 7;
    }
    if (v9 == *(unsigned __int8 **)(result + 856))
    {
      unint64_t result = sub_24B48C80C(result, 1);
      int v9 = *(unsigned __int8 **)(v4 + 864);
    }
    int v13 = *v9;
    char v12 = v9 + 1;
    *a3 = v13;
  }
  else
  {
    if (HIWORD(a2))
    {
      unsigned int v14 = 64 - (__clz(a2 | 1) | 0x20);
      if ((v14 & 7) != 0) {
        char v15 = (v14 >> 3) + 1;
      }
      else {
        char v15 = v14 >> 3;
      }
      int v16 = sub_24B48CB84(result, 32 - __clz((v15 - 1) & 0xFE | 1));
      *a3 = v16;
      int v17 = *(unsigned __int8 *)(v4 + 873);
      if (v17 != 7)
      {
        *(unsigned char *)(*(void *)(v4 + 864))++ &= 510 << v17;
        *(unsigned char *)(v4 + 873) = 7;
        int v16 = *a3;
      }
      unsigned int v7 = (8 * v16 + 8) & 0xF8;
      goto LABEL_26;
    }
    int v10 = *(unsigned __int8 *)(result + 873);
    if (v10 == 7)
    {
      int v11 = *(unsigned __int8 **)(result + 864);
    }
    else
    {
      **(unsigned char **)(result + 864) &= 510 << v10;
      int v11 = (unsigned __int8 *)(*(void *)(result + 864) + 1);
      *(void *)(result + 864) = v11;
      *(unsigned char *)(result + 873) = 7;
    }
    uint64_t v18 = *(void *)(result + 856) - (void)v11;
    if (v18 <= 1)
    {
      unint64_t result = sub_24B48C80C(result, 2 - v18);
      int v11 = *(unsigned __int8 **)(v4 + 864);
    }
    int v19 = *v11;
    *a3 = v19 << 8;
    *(void *)(v4 + 864) = v11 + 1;
    *a3 = v11[1] | (v19 << 8);
    char v12 = v11 + 2;
  }
  *(void *)(v4 + 864) = v12;
  return result;
}

unint64_t sub_24B49222C(uint64_t a1, _DWORD *a2)
{
  if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
  {
    int v4 = *(unsigned __int8 *)(a1 + 873);
    if (v4 != 7)
    {
      *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v4;
      *(unsigned char *)(a1 + 873) = 7;
    }
  }
  char v5 = sub_24B48CE94(a1);
  if ((v5 - 5) <= 0xFBu) {
    sub_24B4A103C(a1, 24);
  }
  unint64_t result = sub_24B48CB84(a1, 8 * (v5 & 0x1Fu));
  *a2 = result;
  return result;
}

char *sub_24B4922D4(char *result, unint64_t a2, char **a3)
{
  int v4 = result;
  unsigned int v5 = a2 & 7;
  char v6 = *a3;
  unsigned int v7 = *a3;
  if (a2 >= 8)
  {
    unint64_t v9 = a2 >> 3;
    int v10 = result[873];
    int v11 = (char *)*((void *)result + 108);
    char v12 = &v11[a2 >> 3];
    if (v10 == 7)
    {
      unint64_t v13 = *((void *)result + 106);
      if ((unint64_t)v12 > v13)
      {
        uint64_t v14 = (uint64_t)&v11[v9 - v13];
        uint64_t v15 = *((void *)result + 105);
        uint64_t v16 = *((void *)result + 107) - v15;
        int v17 = &v11[-v15];
        uint64_t v18 = v13 - v15;
        unint64_t result = sub_24B4AF2B0((uint64_t)result, v14);
        *((void *)v4 + 105) = result;
        *((void *)v4 + 106) = &result[v18 + v14];
        *((void *)v4 + 107) = &result[v16];
        int v11 = &v17[(void)result];
        *((void *)v4 + 108) = &v17[(void)result];
      }
      uint64_t v19 = 0;
      if (v9 <= 1) {
        uint64_t v20 = 1;
      }
      else {
        uint64_t v20 = a2 >> 3;
      }
      do
      {
        *int v11 = 0;
        for (int i = 7; i != -1; --i)
        {
          char v22 = *v7++;
          **((unsigned char **)v4 + 108) |= v22 << i;
        }
        ++v19;
        int v11 = (char *)(*((void *)v4 + 108) + 1);
        *((void *)v4 + 108) = v11;
      }
      while (v19 != v20);
    }
    else
    {
      int v23 = v12 + 1;
      unint64_t v24 = *((void *)result + 106);
      if ((unint64_t)v23 > v24)
      {
        uint64_t v25 = (uint64_t)&v11[v9 - v24 + 1];
        uint64_t v26 = *((void *)result + 105);
        uint64_t v27 = *((void *)result + 107) - v26;
        uint64_t v43 = &v11[-v26];
        uint64_t v28 = v24 - v26;
        unint64_t result = sub_24B4AF2B0((uint64_t)result, v25);
        *((void *)v4 + 105) = result;
        *((void *)v4 + 106) = &result[v28 + v25];
        *((void *)v4 + 107) = &result[v27];
        int v11 = &v43[(void)result];
        *((void *)v4 + 108) = &v43[(void)result];
        LOBYTE(v10) = v4[873];
      }
      int v29 = 0;
      int v30 = 0;
      if ((((_BYTE)v10 + 1) & 0xFE) != 0) {
        uint64_t v31 = (v10 + 1);
      }
      else {
        uint64_t v31 = 1;
      }
      do
      {
        int v32 = *v7++;
        v30 |= v32 << (v29-- + 7);
      }
      while (-(int)v31 != v29);
      unsigned int v7 = &v6[v31];
      *v11 |= v30 >> (7 - v10);
      unsigned int v33 = (unsigned char *)(*((void *)v4 + 108) + 1);
      *((void *)v4 + 108) = v33;
      if (v9 != 1)
      {
        uint64_t v34 = 0;
        do
        {
          unsigned char *v33 = 0;
          for (int j = 7; j != -1; --j)
          {
            char v36 = *v7++;
            **((unsigned char **)v4 + 108) |= v36 << j;
          }
          ++v34;
          unsigned int v33 = (unsigned char *)(*((void *)v4 + 108) + 1);
          *((void *)v4 + 108) = v33;
        }
        while (v34 != v9 - 1);
      }
      unsigned char *v33 = 0;
      if (v4[873] <= 6u)
      {
        uint64_t v37 = 0;
        int v38 = 7;
        do
          **((unsigned char **)v4 + 108) |= v7[v37++] << v38--;
        while (7 - v4[873] > (int)v37);
        v7 += v37;
      }
    }
    unint64_t v39 = (unint64_t)&a3[1][-a2];
    *a3 += a2;
    a3[1] = (char *)v39;
  }
  if (v5)
  {
    int v40 = 0;
    unint64_t v41 = 0;
    do
    {
      int v42 = *v7++;
      v41 |= (v42 << (v40-- + 7));
    }
    while (-v5 != v40);
    return sub_24B48C9D0(v4, v41 >> (8 - v5), v5);
  }
  return result;
}

void sub_24B4925E8(uint64_t a1, size_t size, uint64_t a3)
{
  if (size <= 0x10000)
  {
    if (size)
    {
      uint64_t v6 = *(unsigned __int8 *)(a1 + 872);
      if (v6 == 7) {
        unint64_t v7 = *(unsigned __int8 *)(a1 + 873) + 8 * (*(void *)(a1 + 856) - *(void *)(a1 + 864)) - 7;
      }
      else {
        unint64_t v7 = *(unsigned __int8 *)(a1 + 873) - v6 + 8 * (~*(void *)(a1 + 864) + *(void *)(a1 + 856));
      }
      BOOL v8 = size >= v7;
      size_t v9 = size - v7;
      if (v9 != 0 && v8)
      {
        if ((v9 & 7) != 0) {
          uint64_t v10 = (v9 >> 3) + 1;
        }
        else {
          uint64_t v10 = v9 >> 3;
        }
        sub_24B48C80C(a1, v10);
      }
      int v11 = *(void **)a3;
      if (*(void *)a3)
      {
        int v40 = *(void **)a3;
        char v12 = *(void **)(a1 + 944);
        if (v12 && (unint64_t v13 = (void *)*v12) != 0 && (v14 = (uint64_t (*)(void, size_t))v13[1]) != 0)
        {
          uint64_t v15 = (void *)v14(*v13, *(void *)(a3 + 8) + size);
        }
        else
        {
          uint64_t v15 = malloc_type_calloc(1uLL, *(void *)(a3 + 8) + size, 0x16D83DAuLL);
          bzero(v15, *(void *)(a3 + 8) + size);
        }
        *(void *)a3 = v15;
        memcpy(v15, v11, *(void *)(a3 + 8));
        uint64_t v16 = *(void **)(a1 + 944);
        if (v16 && (int v17 = (void *)*v16) != 0 && (v18 = (void (*)(void, void **))v17[2]) != 0) {
          v18(*v17, &v40);
        }
        else {
          free(v11);
        }
        uint64_t v20 = *(void **)a3;
        uint64_t v19 = *(void *)(a3 + 8);
        unsigned int v21 = (unsigned char *)(*(void *)a3 + v19);
        *(void *)(a3 + 8) = v19 + size;
      }
      else
      {
        char v22 = *(void **)(a1 + 944);
        if (v22 && (v23 = (void *)*v22) != 0 && (unint64_t v24 = (uint64_t (*)(void, size_t))v23[1]) != 0)
        {
          uint64_t v20 = (void *)v24(*v23, size);
        }
        else
        {
          uint64_t v20 = malloc_type_calloc(1uLL, size, 0x16D83DAuLL);
          bzero(v20, size);
        }
        *(void *)a3 = v20;
        *(void *)(a3 + 8) = size;
        unsigned int v21 = v20;
      }
      *(void *)(a1 + 880) = v20;
      if (size >= 8)
      {
        size_t v25 = size >> 3;
        int v26 = *(unsigned __int8 *)(a1 + 873);
        if (v26 == 7)
        {
          do
          {
            for (int i = 7; i != -1; --i)
              *v21++ = (**(unsigned __int8 **)(a1 + 864) >> i) & 1;
            ++*(void *)(a1 + 864);
            --v25;
          }
          while (v25);
        }
        else
        {
          int v28 = 0;
          unsigned int v29 = (**(unsigned __int8 **)(a1 + 864) << (7 - v26));
          do
          {
            *v21++ = (v29 >> (7 - v28++)) & 1;
            unsigned int v30 = *(unsigned __int8 *)(a1 + 873);
          }
          while (v30 >= v28);
          ++*(void *)(a1 + 864);
          if (size >= 0x10)
          {
            do
            {
              for (int j = 7; j != -1; --j)
                *v21++ = (**(unsigned __int8 **)(a1 + 864) >> j) & 1;
              --v25;
              ++*(void *)(a1 + 864);
            }
            while (v25 > 1);
            unsigned int v30 = *(unsigned __int8 *)(a1 + 873);
          }
          if (v30 <= 6)
          {
            uint64_t v32 = 0;
            int v33 = 7;
            do
              v21[v32++] = (**(unsigned __int8 **)(a1 + 864) >> v33--) & 1;
            while (7 - *(unsigned __int8 *)(a1 + 873) > (int)v32);
            v21 += v32;
          }
        }
      }
      if ((size & 7) != 0)
      {
        int v34 = sub_24B48CB84(a1, size & 7);
        unint64_t v35 = 0;
        unsigned int v36 = (v34 << (8 - (size & 7))) & 0xFE;
        uint64x2_t v37 = (uint64x2_t)vdupq_n_s64((size & 7) - 1);
        char v38 = 7;
        do
        {
          int32x2_t v39 = vmovn_s64((int64x2_t)vcgeq_u64(v37, (uint64x2_t)vorrq_s8((int8x16_t)vdupq_n_s64(v35), (int8x16_t)xmmword_24B4BFBF0)));
          if (v39.i8[0]) {
            v21[v35] = (v36 >> v38) & 1;
          }
          if (v39.i8[4]) {
            v21[v35 + 1] = (v36 >> (v38 - 1)) & 1;
          }
          v35 += 2;
          v38 -= 2;
        }
        while ((((size & 7) + 1) & 0xE) != v35);
      }
    }
  }
  else
  {
    sub_24B4A103C(a1, 41);
  }
}

char *sub_24B49299C(char *a1, size_t __n, uint64_t a3)
{
  unint64_t result = sub_24B48D0F4(a1, *(unsigned __int8 **)a3, __n);
  size_t v6 = *(void *)(a3 + 8) - __n;
  *(void *)a3 += __n;
  *(void *)(a3 + 8) = v6;
  return result;
}

void sub_24B4929DC(uint64_t a1, size_t size, uint64_t a3)
{
  if (size <= 0x10000)
  {
    size_t v4 = size;
    if (size)
    {
      size_t v6 = *(void **)(a1 + 944);
      if (*(void *)a3)
      {
        if (v6 && (unint64_t v7 = (void *)*v6) != 0 && (v8 = (uint64_t (*)(void, size_t))v7[1]) != 0)
        {
          size_t v9 = (char *)v8(*v7, *(void *)(a3 + 8) + size);
        }
        else
        {
          size_t v9 = (char *)malloc_type_calloc(1uLL, *(void *)(a3 + 8) + size, 0x6F337D7DuLL);
          bzero(v9, *(void *)(a3 + 8) + v4);
        }
        memcpy(v9, *(const void **)a3, *(void *)(a3 + 8));
        uint64_t v10 = *(void **)(a1 + 944);
        if (v10 && (int v11 = (void *)*v10) != 0 && (v12 = (void (*)(void, uint64_t))v11[2]) != 0) {
          v12(*v11, a3);
        }
        else {
          free(*(void **)a3);
        }
        uint64_t v13 = *(void *)(a3 + 8);
        uint64_t v14 = &v9[v13];
        *(void *)a3 = v9;
        *(void *)(a3 + 8) = v13 + v4;
      }
      else
      {
        if (v6 && (uint64_t v15 = (void *)*v6) != 0 && (v16 = (uint64_t (*)(void, size_t))v15[1]) != 0)
        {
          size_t v9 = (char *)v16(*v15, size);
        }
        else
        {
          size_t v9 = (char *)malloc_type_calloc(1uLL, size, 0x6F337D7DuLL);
          bzero(v9, v4);
        }
        *(void *)a3 = v9;
        *(void *)(a3 + 8) = v4;
        uint64_t v14 = v9;
      }
      *(void *)(a1 + 880) = v9;
      int v17 = *(const void **)(a1 + 864);
      uint64_t v18 = *(void *)(a1 + 856) - (void)v17;
      if (*(unsigned char *)(a1 + 873) == 7)
      {
        BOOL v19 = __OFSUB__(v4, v18);
        uint64_t v20 = v4 - v18;
        if (!((v20 < 0) ^ v19 | (v20 == 0)))
        {
          sub_24B48C80C(a1, v20);
          int v17 = *(const void **)(a1 + 864);
        }
        memcpy(v14, v17, v4);
        *(void *)(a1 + 864) += v4;
      }
      else
      {
        BOOL v19 = __OFSUB__(v4, v18);
        uint64_t v21 = v4 - v18;
        if (v21 < 0 == v19) {
          sub_24B48C80C(a1, v21 + 1);
        }
        do
        {
          *uint64_t v14 = **(unsigned __int8 **)(a1 + 864) << (7 - *(unsigned char *)(a1 + 873));
          char v22 = (unsigned __int8 *)(*(void *)(a1 + 864) + 1);
          *(void *)(a1 + 864) = v22;
          *v14++ |= *v22 >> (*(unsigned char *)(a1 + 873) + 1);
          --v4;
        }
        while (v4);
      }
    }
  }
  else
  {
    sub_24B4A103C(a1, 41);
  }
}

_DWORD *sub_24B492C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v6 = sub_24B48CE94(a1);
  if ((v6 & 0x80) != 0) {
    sub_24B4A103C(a1, 28);
  }
  unint64_t v7 = malloc_type_calloc(1uLL, 0x10uLL, 0x10200403A5D3213uLL);
  v7[1] = v6 / 0x28u;
  *unint64_t v7 = 0;
  if (*(void *)a3)
  {
    **(void **)(a3 + 8) = v7;
    ++*(_DWORD *)(a3 + 16);
  }
  else
  {
    *(void *)a3 = v7;
    *(_DWORD *)(a3 + 16) = 1;
  }
  uint64_t v8 = a2 - 1;
  *(void *)(a3 + 8) = v7;
  *(_DWORD *)(a3 + 20) = 8;
  unint64_t result = malloc_type_calloc(1uLL, 0x10uLL, 0x10200403A5D3213uLL);
  result[2] = v6 % 0x28u;
  result[3] = 0;
  *(void *)unint64_t result = 0;
  if (*(void *)a3)
  {
    **(void **)(a3 + 8) = result;
    ++*(_DWORD *)(a3 + 16);
  }
  else
  {
    *(void *)a3 = result;
    *(_DWORD *)(a3 + 16) = 1;
  }
  *(void *)(a3 + 8) = result;
  for (*(_DWORD *)(a3 + 20) = 8; v8; v8 -= v12)
  {
    char v10 = sub_24B48CE94(a1);
    int v11 = v10 & 0x7F;
    if (v10 < 0)
    {
      unint64_t v13 = 1;
      do
      {
        char v14 = sub_24B48CE94(a1);
        int v11 = v14 & 0x7F | (v11 << 7);
        uint64_t v12 = v13 + 1;
        if ((v14 & 0x80) == 0) {
          break;
        }
      }
      while (v13++ < 5);
    }
    else
    {
      uint64_t v12 = 1;
    }
    unint64_t result = malloc_type_calloc(1uLL, 0x10uLL, 0x10200403A5D3213uLL);
    result[2] = v11;
    result[3] = 0;
    *(void *)unint64_t result = 0;
    if (*(void *)a3)
    {
      **(void **)(a3 + 8) = result;
      int v16 = *(_DWORD *)(a3 + 16) + 1;
    }
    else
    {
      *(void *)a3 = result;
      int v16 = 1;
    }
    *(void *)(a3 + 8) = result;
    *(_DWORD *)(a3 + 16) = v16;
    *(_DWORD *)(a3 + 20) = 8;
  }
  return result;
}

char *sub_24B492DD4(char *result, uint64_t a2, char **a3)
{
  uint64_t v4 = a2;
  unsigned int v5 = result;
  if (*((unsigned char *)a3 + 25) == 1)
  {
    if (a2)
    {
      unsigned __int8 v6 = *a3;
      do
      {
        unint64_t v7 = a3[4];
        int v8 = *v6;
        if (*v7 == v8)
        {
          unint64_t v9 = 0;
        }
        else
        {
          char v10 = 0;
          int v11 = (unsigned __int8 *)(v7 + 1);
          while (a3[5] != v10)
          {
            unint64_t v9 = (unint64_t)(v10 + 1);
            int v12 = (v10++)[(void)v11];
            if (v12 == v8) {
              goto LABEL_11;
            }
          }
          unint64_t v9 = (unint64_t)a3[5];
        }
LABEL_11:
        unint64_t result = sub_24B48C9D0(v5, v9, *((unsigned __int8 *)a3 + 24));
        unsigned __int8 v6 = *a3 + 1;
        *a3 = v6;
        --v4;
      }
      while (v4);
    }
  }
  else if (a2)
  {
    unint64_t v13 = *a3;
    do
    {
      unint64_t result = sub_24B48C9D0(v5, *v13, *((unsigned __int8 *)a3 + 24));
      unint64_t v13 = *a3 + 1;
      *a3 = v13;
      --v4;
    }
    while (v4);
  }
  return result;
}

unint64_t sub_24B492EB4(unint64_t result, unint64_t a2, uint64_t *a3)
{
  uint64_t v3 = result;
  if (a2 < 0x801)
  {
    unint64_t v4 = a2;
    if (a2)
    {
      if (*a3)
      {
        unsigned __int8 v6 = (void *)(*a3 - 1);
        unint64_t v7 = malloc_type_calloc(1uLL, a3[1] + a2 + 2, 0xEA7AB5EDuLL);
        bzero(v7, a3[1] + v4 + 2);
        *a3 = (uint64_t)v7;
        memcpy(v7, v6, a3[1]);
        free(v6);
        uint64_t v8 = *a3;
        uint64_t v9 = a3[1];
        uint64_t v10 = *a3 + 1;
        int v11 = (unsigned char *)(v10 + v9);
        *a3 = v10;
        a3[1] = v9 + v4;
      }
      else
      {
        int v12 = malloc_type_calloc(1uLL, a2 + 2, 0xEA7AB5EDuLL);
        bzero(v12, v4 + 2);
        *a3 = (uint64_t)v12;
        *int v12 = 86;
        uint64_t v8 = *a3;
        int v11 = (unsigned char *)(*a3 + 1);
        *a3 = (uint64_t)v11;
        a3[1] = v4;
      }
      *(void *)(v3 + 880) = v8;
      do
      {
        unint64_t result = sub_24B48CB84(v3, *((unsigned __int8 *)a3 + 24));
        *v11++ = result;
        --v4;
      }
      while (v4);
    }
  }
  else
  {
    return sub_24B4A103C(result, 41);
  }
  return result;
}

char *sub_24B492FEC(char *a1, unint64_t a2)
{
  unsigned int v2 = a2;
  if (a2 > 0x3E)
  {
    sub_24B48C8A0(a1, 1);
    unsigned int v5 = v2;
    return sub_24B491F4C((uint64_t)a1, &v5);
  }
  else
  {
    return sub_24B48C9D0(a1, a2, 7u);
  }
}

unint64_t sub_24B493068(uint64_t a1, unint64_t *a2)
{
  if (sub_24B48C964(a1))
  {
    unsigned int v5 = 0;
    sub_24B49222C(a1, &v5);
    unint64_t result = v5;
  }
  else
  {
    unint64_t result = sub_24B48CB84(a1, 6u);
  }
  *a2 = result;
  return result;
}

char *sub_24B4930C4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char v3 = a3;
  *(void *)a2 = *(void *)(a1 + 864) - *(void *)(a1 + 856);
  *(unsigned char *)(a2 + 8) = *(unsigned char *)(a1 + 873);
  *(void *)(a2 + 16) = a3 + 1;
  sub_24B48CF44(a1, a3 >> 3);
  return sub_24B48C9D0((char *)a1, 0, v3 & 7);
}

char *sub_24B49312C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = a3;
  if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
  {
    int v6 = *(unsigned __int8 *)(a1 + 873);
    if (v6 != 7)
    {
      *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v6;
      *(unsigned char *)(a1 + 873) = 7;
    }
  }
  *(void *)(a2 + 16) = 0;
  if (a3 >= 0x10000)
  {
    do
    {
      sub_24B48CD70((char *)a1, 0xC4u);
      if (!*(void *)(a2 + 16))
      {
        *(void *)a2 = *(void *)(a1 + 864) - *(void *)(a1 + 856);
        *(unsigned char *)(a2 + 8) = *(unsigned char *)(a1 + 873);
        *(void *)(a2 + 16) = 0x10000;
      }
      sub_24B48CF44(a1, 0x2000uLL);
      v3 -= 0x10000;
    }
    while (v3 >> 16);
  }
  unint64_t v7 = v3 - 49152;
  if (v3 > 0xC000)
  {
    sub_24B48CD70((char *)a1, 0xC3u);
    if (!*(void *)(a2 + 16))
    {
      *(void *)a2 = *(void *)(a1 + 864) - *(void *)(a1 + 856);
      *(unsigned char *)(a2 + 8) = *(unsigned char *)(a1 + 873);
      *(void *)(a2 + 16) = 49152;
    }
    uint64_t v8 = a1;
    size_t v9 = 6144;
LABEL_20:
    sub_24B48CF44(v8, v9);
    unint64_t v3 = v7;
    goto LABEL_21;
  }
  if (v3 >= 0x8000)
  {
    sub_24B48CD70((char *)a1, 0xC2u);
    if (!*(void *)(a2 + 16))
    {
      *(void *)a2 = *(void *)(a1 + 864) - *(void *)(a1 + 856);
      *(unsigned char *)(a2 + 8) = *(unsigned char *)(a1 + 873);
      *(void *)(a2 + 16) = 0x8000;
    }
    sub_24B48CF44(a1, 0x1000uLL);
    v3 -= 0x8000;
  }
  unint64_t v7 = v3 - 0x4000;
  if (v3 >= 0x4000)
  {
    sub_24B48CD70((char *)a1, 0xC1u);
    if (!*(void *)(a2 + 16))
    {
      *(void *)a2 = *(void *)(a1 + 864) - *(void *)(a1 + 856);
      *(unsigned char *)(a2 + 8) = *(unsigned char *)(a1 + 873);
      *(void *)(a2 + 16) = 0x4000;
    }
    uint64_t v8 = a1;
    size_t v9 = 2048;
    goto LABEL_20;
  }
LABEL_21:
  if (v3 > 0x7F) {
    sub_24B48C9D0((char *)a1, v3 | 0x8000, 0x10u);
  }
  else {
    sub_24B48CD70((char *)a1, v3);
  }
  if (!*(void *)(a2 + 16))
  {
    *(void *)a2 = *(void *)(a1 + 864) - *(void *)(a1 + 856);
    *(unsigned char *)(a2 + 8) = *(unsigned char *)(a1 + 873);
    *(void *)(a2 + 16) = v3;
  }
  sub_24B48CF44(a1, v3 >> 3);
  return sub_24B48C9D0((char *)a1, 0, v3 & 7);
}

uint64_t sub_24B493348(uint64_t result, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = a3[6];
  if (v8)
  {
    uint64_t v9 = a3[2];
    do
    {
      switch(*(unsigned char *)(v9 + 8))
      {
        case 0:
          goto LABEL_5;
        case 1:
          sub_24B493ECC(v7, a2, 1);
LABEL_5:
          unint64_t v10 = *(void *)(v7 + 712);
          if (v10 >= 0x40) {
            goto LABEL_32;
          }
          uint64_t v11 = a4 + *(void *)(*(void *)(a3[1] + 24) + 24 * *(void *)(v9 + 16) + 8);
          goto LABEL_13;
        case 2:
          uint64_t v12 = *(void *)(a3[1] + 24);
          uint64_t v13 = *(void *)(v9 + 16);
          if (*(unsigned char *)(a4 + **(void **)(v12 + 24 * v13 + 16)) != 1) {
            goto LABEL_14;
          }
          uint64_t v14 = *(void *)(v12 + 24 * v13 + 8);
          sub_24B493ECC(v7, a2, 1);
          unint64_t v10 = *(void *)(v7 + 712);
          if (v10 >= 0x40) {
            goto LABEL_32;
          }
          goto LABEL_12;
        case 3:
          uint64_t v15 = *(void *)(a3[1] + 24);
          uint64_t v16 = *(void *)(v9 + 16);
          if (*(unsigned char *)(a4 + **(void **)(v15 + 24 * v16 + 16)) != 1) {
            goto LABEL_14;
          }
          uint64_t v14 = *(void *)(v15 + 24 * v16 + 8);
          sub_24B493ECC(v7, a2, 1);
          unint64_t v10 = *(void *)(v7 + 712);
          if (v10 >= 0x40) {
LABEL_32:
          }
            sub_24B4A10C0(v7, 15);
LABEL_12:
          uint64_t v11 = a4 + v14;
LABEL_13:
          *(void *)(v7 + 200 + 8 * v10) = v9;
          *(void *)(v7 + 712) = v10 + 1;
          unint64_t result = sub_24B48E9B0(v7, *(void *)v9, v11);
          --*(void *)(v7 + 712);
          break;
        case 5:
LABEL_14:
          unint64_t result = sub_24B493ECC(v7, a2, 0);
          break;
        default:
          break;
      }
      v9 += 32;
      --v8;
    }
    while (v8);
  }
  uint64_t v17 = a3[8];
  if (v17)
  {
    uint64_t v18 = a3[4];
    while (2)
    {
      switch(*(unsigned char *)(v18 + 8))
      {
        case 0:
          goto LABEL_20;
        case 1:
          sub_24B493ECC(v7, a2, 1);
LABEL_20:
          unint64_t v19 = *(void *)(v7 + 712);
          if (v19 >= 0x40) {
            goto LABEL_32;
          }
          uint64_t v20 = a4 + *(void *)(*(void *)(a3[1] + 24) + 24 * *(void *)(v18 + 16) + 8);
          goto LABEL_28;
        case 2:
          uint64_t v21 = *(void *)(a3[1] + 24);
          uint64_t v22 = *(void *)(v18 + 16);
          if (*(unsigned char *)(a4 + **(void **)(v21 + 24 * v22 + 16)) != 1) {
            goto LABEL_29;
          }
          uint64_t v23 = *(void *)(v21 + 24 * v22 + 8);
          sub_24B493ECC(v7, a2, 1);
          unint64_t v19 = *(void *)(v7 + 712);
          if (v19 >= 0x40) {
            goto LABEL_32;
          }
          goto LABEL_27;
        case 3:
          uint64_t v24 = *(void *)(a3[1] + 24);
          uint64_t v25 = *(void *)(v18 + 16);
          if (*(unsigned char *)(a4 + **(void **)(v24 + 24 * v25 + 16)) != 1) {
            goto LABEL_29;
          }
          uint64_t v23 = *(void *)(v24 + 24 * v25 + 8);
          sub_24B493ECC(v7, a2, 1);
          unint64_t v19 = *(void *)(v7 + 712);
          if (v19 >= 0x40) {
            goto LABEL_32;
          }
LABEL_27:
          uint64_t v20 = a4 + v23;
LABEL_28:
          *(void *)(v7 + 200 + 8 * v19) = v18;
          *(void *)(v7 + 712) = v19 + 1;
          unint64_t result = sub_24B48E9B0(v7, *(void *)v18, v20);
          --*(void *)(v7 + 712);
LABEL_30:
          v18 += 32;
          if (!--v17) {
            return result;
          }
          continue;
        case 5:
LABEL_29:
          unint64_t result = sub_24B493ECC(v7, a2, 0);
          goto LABEL_30;
        default:
          goto LABEL_30;
      }
    }
  }
  return result;
}

uint64_t sub_24B4936B8(uint64_t result, void *a2, uint64_t a3)
{
  uint64_t v5 = result;
  uint64_t v6 = a2[6];
  if (v6)
  {
    uint64_t v7 = (uint64_t *)a2[2];
    unint64_t v8 = *(void *)(result + 712);
    while (v8 < 0x40)
    {
      uint64_t v9 = a3 + *(void *)(*(void *)(a2[1] + 24) + 24 * v7[2] + 8);
      *(void *)(v5 + 200 + 8 * v8) = v7;
      *(void *)(v5 + 712) = v8 + 1;
      uint64_t v10 = *v7;
      v7 += 4;
      unint64_t result = sub_24B48E9B0(v5, v10, v9);
      unint64_t v8 = *(void *)(v5 + 712) - 1;
      *(void *)(v5 + 712) = v8;
      if (!--v6) {
        goto LABEL_5;
      }
    }
LABEL_10:
    sub_24B4A10C0(v5, 15);
  }
LABEL_5:
  uint64_t v11 = a2[8];
  if (v11)
  {
    uint64_t v12 = (uint64_t *)a2[4];
    unint64_t v13 = *(void *)(v5 + 712);
    while (v13 < 0x40)
    {
      uint64_t v14 = a3 + *(void *)(*(void *)(a2[1] + 24) + 24 * v12[2] + 8);
      *(void *)(v5 + 200 + 8 * v13) = v12;
      *(void *)(v5 + 712) = v13 + 1;
      uint64_t v15 = *v12;
      v12 += 4;
      unint64_t result = sub_24B48E9B0(v5, v15, v14);
      unint64_t v13 = *(void *)(v5 + 712) - 1;
      *(void *)(v5 + 712) = v13;
      if (!--v11) {
        return result;
      }
    }
    goto LABEL_10;
  }
  return result;
}

BOOL sub_24B4937EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a3 + 56);
  if (v4)
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = *(void **)(a3 + 24);
    uint64_t v64 = a1 + 200;
    while (2)
    {
      switch(*((unsigned char *)v11 + 8))
      {
        case 0:
        case 1:
          uint64_t v12 = *(void *)(*(void *)(v6 + 8) + 24);
          uint64_t v13 = v11[2];
          if (*(unsigned char *)(a4 + **(void **)(v12 + 24 * v13 + 16)) != 1) {
            goto LABEL_14;
          }
          uint64_t v14 = *(void *)(v12 + 24 * v13 + 8);
          sub_24B493ECC(a1, v7, 1);
          unint64_t v15 = *(void *)(a1 + 712);
          if (v15 >= 0x40) {
            goto LABEL_72;
          }
          *(void *)(v64 + 8 * v15) = v11;
          *(void *)(a1 + 712) = v15 + 1;
          sub_24B494068(a1, *v11, a4 + v14);
          --*(void *)(a1 + 712);
          ++v10;
          goto LABEL_13;
        case 2:
          uint64_t v16 = *(void *)(*(void *)(v6 + 8) + 24);
          uint64_t v17 = v11[2];
          if (*(unsigned char *)(a4 + **(void **)(v16 + 24 * v17 + 16)) != 1) {
            goto LABEL_14;
          }
          uint64_t v18 = *(void *)(v16 + 24 * v17 + 8);
          sub_24B493ECC(a1, v7, 1);
          unint64_t v19 = *(void *)(a1 + 712);
          if (v19 >= 0x40) {
            goto LABEL_72;
          }
          goto LABEL_12;
        case 3:
          uint64_t v20 = *(void *)(*(void *)(v6 + 8) + 24);
          uint64_t v21 = v11[2];
          if (*(unsigned char *)(a4 + **(void **)(v20 + 24 * v21 + 16)) != 1) {
            goto LABEL_14;
          }
          uint64_t v18 = *(void *)(v20 + 24 * v21 + 8);
          sub_24B493ECC(a1, v7, 1);
          unint64_t v19 = *(void *)(a1 + 712);
          if (v19 >= 0x40) {
            goto LABEL_72;
          }
LABEL_12:
          *(void *)(v64 + 8 * v19) = v11;
          *(void *)(a1 + 712) = v19 + 1;
          sub_24B494068(a1, *v11, a4 + v18);
          --*(void *)(a1 + 712);
          ++v9;
LABEL_13:
          uint64_t v6 = a3;
          goto LABEL_15;
        case 4:
          uint64_t v61 = v9;
          uint64_t v22 = v11[2];
          memset(v65, 0, sizeof(v65));
          uint64_t v23 = v11[2];
          if (v23)
          {
            unint64_t v24 = 0;
            uint64_t v25 = (unsigned __int8 *)(v11 + 5);
            do
            {
              int v26 = *v25;
              v25 += 32;
              if (v26) {
                ++v24;
              }
              --v23;
            }
            while (v23);
          }
          else
          {
            unint64_t v24 = 0;
          }
          if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
          {
            int v28 = *(unsigned __int8 *)(a1 + 873);
            uint64_t v27 = *(unsigned char **)(a1 + 864);
            int v62 = 7;
            if (v28 != 7)
            {
              *v27 &= 510 << v28;
              uint64_t v27 = (unsigned char *)(*(void *)(a1 + 864) + 1);
              *(void *)(a1 + 864) = v27;
              *(unsigned char *)(a1 + 873) = 7;
            }
          }
          else
          {
            uint64_t v27 = *(unsigned char **)(a1 + 864);
            int v62 = *(unsigned __int8 *)(a1 + 873);
          }
          uint64_t v29 = *(void *)(a1 + 856);
          sub_24B48CF44(a1, 1uLL);
          if (v24 >> 16) {
            sub_24B49312C(a1, (uint64_t)v65, v24);
          }
          else {
            sub_24B4930C4(a1, (uint64_t)v65, v24);
          }
          v4 -= v22;
          unint64_t v30 = (unint64_t)&v27[-v29];
          uint64_t v31 = v11[2];
          if (v31)
          {
            unsigned int v59 = (unsigned char *)v30;
            uint64_t v60 = v10;
            uint64_t v32 = 0;
            uint64_t v33 = 0;
            uint64_t v34 = 0;
            unint64_t v35 = 0;
            unsigned int v36 = v11 + 4;
            while (2)
            {
              switch(*((unsigned char *)v36 + 8))
              {
                case 0:
                case 1:
                  uint64_t v37 = *(void *)(*(void *)(v6 + 8) + 24);
                  uint64_t v38 = v36[2];
                  if (*(unsigned char *)(a4 + **(void **)(v37 + 24 * v38 + 16)) == 1)
                  {
                    unint64_t v39 = *(void *)(a1 + 712);
                    if (v39 >= 0x40) {
LABEL_72:
                    }
                      sub_24B4A10C0(a1, 15);
                    uint64_t v40 = a4 + *(void *)(v37 + 24 * v38 + 8);
                    *(void *)(v64 + 8 * v39) = v36;
                    *(void *)(a1 + 712) = v39 + 1;
                    sub_24B48E9B0(a1, *v36, v40);
                    --*(void *)(a1 + 712);
                    if (*((unsigned char *)v36 + 8) == 1) {
                      sub_24B493ECC(a1, (uint64_t)v65, 1);
                    }
                    ++v33;
                  }
                  else
                  {
                    ++v34;
                  }
LABEL_47:
                  ++v35;
                  v36 += 4;
                  if (v35 < v11[2]) {
                    continue;
                  }
                  LODWORD(v31) = v32 != 0;
                  uint64_t v11 = v36 - 4;
                  if (!v34)
                  {
                    unint64_t v30 = (unint64_t)v59;
                    uint64_t v10 = v60;
                    goto LABEL_53;
                  }
                  unint64_t v30 = (unint64_t)v59;
                  uint64_t v10 = v60;
                  if (!v32) {
                    goto LABEL_53;
                  }
                  sub_24B4A103C(a1, 33);
                  unsigned int v47 = v62;
                  break;
                case 2:
                  uint64_t v45 = *(void *)(*(void *)(v6 + 8) + 24);
                  uint64_t v46 = v36[2];
                  if (*(unsigned char *)(a4 + **(void **)(v45 + 24 * v46 + 16)) != 1) {
                    goto LABEL_45;
                  }
                  uint64_t v43 = *(void *)(v45 + 24 * v46 + 8);
                  sub_24B493ECC(a1, (uint64_t)v65, 1);
                  unint64_t v44 = *(void *)(a1 + 712);
                  if (v44 < 0x40) {
                    goto LABEL_44;
                  }
                  goto LABEL_72;
                case 3:
                  uint64_t v41 = *(void *)(*(void *)(v6 + 8) + 24);
                  uint64_t v42 = v36[2];
                  if (*(unsigned char *)(a4 + **(void **)(v41 + 24 * v42 + 16)) != 1) {
                    goto LABEL_45;
                  }
                  uint64_t v43 = *(void *)(v41 + 24 * v42 + 8);
                  sub_24B493ECC(a1, (uint64_t)v65, 1);
                  unint64_t v44 = *(void *)(a1 + 712);
                  if (v44 >= 0x40) {
                    goto LABEL_72;
                  }
LABEL_44:
                  *(void *)(v64 + 8 * v44) = v36;
                  *(void *)(a1 + 712) = v44 + 1;
                  sub_24B48E9B0(a1, *v36, a4 + v43);
                  --*(void *)(a1 + 712);
                  ++v32;
                  uint64_t v6 = a3;
                  goto LABEL_47;
                case 5:
LABEL_45:
                  sub_24B493ECC(a1, (uint64_t)v65, 0);
                  goto LABEL_47;
                default:
                  goto LABEL_72;
              }
              break;
            }
          }
          else
          {
            uint64_t v33 = 0;
LABEL_53:
            unsigned int v47 = v62;
            if (!v33 && !v31)
            {
              uint64_t v48 = *(void *)(a1 + 856);
              *(void *)(a1 + 864) = v48 + v30;
              *(unsigned char *)(a1 + 873) = v62;
              *(unsigned char *)(v48 + v30) &= 510 << v62;
              uint64_t v7 = a2;
              sub_24B493ECC(a1, a2, 0);
              uint64_t v9 = v61;
              goto LABEL_15;
            }
          }
          uint64_t v49 = *(void *)(a1 + 864);
          uint64_t v50 = (unsigned char *)(v49 - *(void *)(a1 + 856));
          unsigned int v51 = *(unsigned __int8 *)(a1 + 873);
          BOOL v52 = v51 >= v47;
          unsigned __int8 v53 = v51 - v47;
          if (v52)
          {
            unint64_t v54 = (unint64_t)&v50[~v30];
            if (!v54) {
              goto LABEL_64;
            }
            sub_24B48C9D0((char *)a1, 0, v53);
          }
          else
          {
            sub_24B48C9D0((char *)a1, 0, (v53 + 8));
            unint64_t v54 = (unint64_t)&v50[-v30];
            if (v50 == (unsigned char *)v30)
            {
              uint64_t v49 = *(void *)(a1 + 864);
LABEL_64:
              *(void *)(a1 + 864) = v49 - 1;
              sub_24B48C9D0((char *)a1, 0x100uLL, 0x10u);
              goto LABEL_69;
            }
          }
          if (v54 > 0x7F)
          {
            if (*(unsigned char *)(a1 + 873) == 7) {
              sub_24B48D268((void *)a1, v54);
            }
            else {
              sub_24B48D8E8(a1, v54);
            }
          }
          else
          {
            uint64_t v55 = (unsigned char *)(*(void *)(a1 + 856) + v30);
            uint64_t v56 = *(unsigned __int8 *)(a1 + 873);
            if (v56 == 7)
            {
              *uint64_t v55 = v54;
            }
            else
            {
              *v55 |= v54 >> (7 - v56);
              v55[1] |= v54 << (*(unsigned char *)(a1 + 873) + 1);
            }
          }
LABEL_69:
          uint64_t v7 = a2;
          sub_24B493ECC(a1, a2, 1);
          uint64_t v9 = v61 + 1;
LABEL_15:
          v11 += 4;
          if (!--v4) {
            return (v10 | v9) != 0;
          }
          continue;
        case 5:
LABEL_14:
          sub_24B493ECC(a1, v7, 0);
          goto LABEL_15;
        default:
          goto LABEL_72;
      }
    }
  }
  uint64_t v10 = 0;
  uint64_t v9 = 0;
  return (v10 | v9) != 0;
}

uint64_t sub_24B493ECC(uint64_t result, uint64_t a2, char a3)
{
  *(unsigned char *)(*(void *)(result + 856) + *(void *)a2) |= a3 << *(unsigned char *)(a2 + 8);
  char v3 = *(unsigned char *)(a2 + 8);
  if (v3)
  {
    uint64_t v4 = (uint64_t *)(a2 + 16);
    uint64_t v5 = *(void *)(a2 + 16);
    *(unsigned char *)(a2 + 8) = v3 - 1;
    *(void *)(a2 + 16) = --v5;
    if (v5) {
      return result;
    }
    uint64_t v8 = (v3 - 1);
    uint64_t v6 = *(void *)a2;
    if ((v3 - 1) != 7)
    {
      int v12 = 0;
      uint64_t v9 = *(void *)(result + 856);
      int v13 = *(unsigned __int8 *)(v9 + v6) << (8 - v3);
      uint64_t v11 = v6 + 1;
      *(void *)a2 = v11;
      int v10 = (*(unsigned __int8 *)(v9 + v11) >> v3) | v13;
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v9 = *(void *)(result + 856);
    LOBYTE(v10) = *(unsigned char *)(v9 + v6);
    uint64_t v11 = v6 + 1;
    *(void *)a2 = v11;
    LOBYTE(v8) = 7;
    int v12 = 1;
LABEL_9:
    switch((char)v10)
    {
      case -63:
        uint64_t v14 = 0x4000;
        goto LABEL_21;
      case -62:
        uint64_t v14 = 0x8000;
        goto LABEL_21;
      case -61:
        uint64_t v14 = 49152;
        goto LABEL_21;
      case -60:
        uint64_t v14 = 0x10000;
        goto LABEL_21;
      default:
        if ((v10 & 0xC0) == 0x80)
        {
          uint64_t v15 = (v10 & 0x7F) << 8;
          *uint64_t v4 = v15;
          int v16 = *(unsigned __int8 *)(v9 + v11);
          if (v12)
          {
            *(void *)a2 = v11 + 1;
          }
          else
          {
            uint64_t v17 = v11 + 1;
            *(void *)a2 = v17;
            int v16 = (*(unsigned __int8 *)(v9 + v17) >> (v8 + 1)) | (v16 << (7 - v8));
          }
          uint64_t v14 = v16 | (unint64_t)v15;
        }
        else
        {
          if ((v10 & 0x80) != 0) {
            return sub_24B4A103C(result, 26);
          }
          uint64_t v14 = v10 & 0x7F;
        }
LABEL_21:
        *uint64_t v4 = v14;
        return result;
    }
  }
  uint64_t v6 = *(void *)a2 + 1;
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = 7;
  uint64_t v4 = (uint64_t *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 16) - 1;
  *(void *)(a2 + 16) = v7;
  if (!v7) {
    goto LABEL_7;
  }
  return result;
}

char *sub_24B494068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = *(unsigned __int8 *)(a1 + 873);
  unsigned int v7 = v6;
  if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
  {
    unsigned int v7 = 7;
    if (v6 != 7)
    {
      *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v6;
      *(unsigned char *)(a1 + 873) = 7;
    }
  }
  uint64_t v8 = *(void *)(a1 + 864) - *(void *)(a1 + 856);
  sub_24B48CF44(a1, 1uLL);
  sub_24B48E9B0(a1, a2, a3);
  uint64_t v9 = *(void *)(a1 + 864);
  uint64_t v10 = v9 - *(void *)(a1 + 856);
  unsigned int v11 = *(unsigned __int8 *)(a1 + 873);
  BOOL v12 = v11 >= v7;
  unsigned __int8 v13 = v11 - v7;
  if (v12)
  {
    unint64_t v15 = v10 + ~v8;
    if (!v15) {
      goto LABEL_12;
    }
    unint64_t result = sub_24B48C9D0((char *)a1, 0, v13);
  }
  else
  {
    unint64_t result = sub_24B48C9D0((char *)a1, 0, (v13 + 8));
    unint64_t v15 = v10 - v8;
    if (!v15)
    {
      uint64_t v9 = *(void *)(a1 + 864);
LABEL_12:
      *(void *)(a1 + 864) = v9 - 1;
      return sub_24B48C9D0((char *)a1, 0x100uLL, 0x10u);
    }
  }
  if (v15 > 0x7F)
  {
    if (*(unsigned char *)(a1 + 873) == 7)
    {
      return (char *)sub_24B48D268((void *)a1, v15);
    }
    else
    {
      return (char *)sub_24B48D8E8(a1, v15);
    }
  }
  else
  {
    int v16 = (unsigned char *)(*(void *)(a1 + 856) + v8);
    uint64_t v17 = *(unsigned __int8 *)(a1 + 873);
    if (v17 == 7)
    {
      *int v16 = v15;
    }
    else
    {
      *v16 |= v15 >> (7 - v17);
      v16[1] |= v15 << (*(unsigned char *)(a1 + 873) + 1);
    }
  }
  return result;
}

unint64_t sub_24B49424C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char v3 = a3;
  *(void *)a2 = *(void *)(a1 + 864);
  *(unsigned char *)(a2 + 8) = *(unsigned char *)(a1 + 873);
  *(unsigned char *)(a2 + 9) = 0;
  *(void *)(a2 + 16) = a3 + 1;
  sub_24B48D06C(a1, a3 >> 3);
  return sub_24B48CB84(a1, v3 & 7);
}

uint64_t sub_24B4942B0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
  {
    int v4 = *(unsigned __int8 *)(a1 + 873);
    if (v4 != 7)
    {
      *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v4;
      *(unsigned char *)(a1 + 873) = 7;
    }
  }
  *(void *)a2 = 0;
  do
  {
    char v5 = sub_24B48CE94(a1);
    if ((v5 + 63) >= 4u)
    {
      char v7 = v5;
      if ((v5 & 0xC0) == 0x80)
      {
        int v8 = sub_24B48CE94(a1);
        unint64_t v6 = v8 & 0xFFFF80FF | ((v7 & 0x7F) << 8);
        if (!*(void *)a2)
        {
          *(void *)a2 = *(void *)(a1 + 864);
          *(_WORD *)(a2 + 8) = *(unsigned __int8 *)(a1 + 873);
          *(void *)(a2 + 16) = v6;
        }
        sub_24B48CB84(a1, v8 & 7);
      }
      else if (v5 < 0)
      {
        sub_24B4A103C(a1, 26);
        unint64_t v6 = 0;
      }
      else
      {
        unint64_t v9 = v5 & 0x7F;
        if (!*(void *)a2)
        {
          *(void *)a2 = *(void *)(a1 + 864);
          *(_WORD *)(a2 + 8) = *(unsigned __int8 *)(a1 + 873);
          *(void *)(a2 + 16) = v9;
        }
        sub_24B48CB84(a1, v5 & 7);
        unint64_t v6 = v9 >> 3;
      }
    }
    else
    {
      unint64_t v6 = ((unint64_t)(v5 + 63) << 11) + 2048;
    }
    if (!*(void *)a2)
    {
      *(void *)a2 = *(void *)(a1 + 864);
      *(unsigned char *)(a2 + 8) = *(unsigned char *)(a1 + 873);
      *(unsigned char *)(a2 + 9) = 1;
      *(void *)(a2 + 16) = 8 * v6;
    }
    uint64_t result = sub_24B48D06C(a1, v6);
  }
  while (v6 > 0x7FF);
  return result;
}

uint64_t sub_24B49442C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = a2[6];
  if (v8)
  {
    unint64_t v9 = (uint64_t *)a2[2];
    unint64_t v10 = *(void *)(result + 712);
    while (v10 < 0x40)
    {
      uint64_t v11 = a3 + *(void *)(*(void *)(a2[1] + 24) + 24 * v9[2] + 8);
      *(void *)(v7 + 200 + 8 * v10) = v9;
      *(void *)(v7 + 712) = v10 + 1;
      uint64_t v12 = *v9;
      v9 += 4;
      uint64_t result = sub_24B4901AC(v7, v12, v11, a4);
      unint64_t v10 = *(void *)(v7 + 712) - 1;
      *(void *)(v7 + 712) = v10;
      if (!--v8) {
        goto LABEL_5;
      }
    }
LABEL_10:
    sub_24B4A10C0(v7, 15);
  }
LABEL_5:
  uint64_t v13 = a2[8];
  if (v13)
  {
    uint64_t v14 = (uint64_t *)a2[4];
    unint64_t v15 = *(void *)(v7 + 712);
    while (v15 < 0x40)
    {
      uint64_t v16 = a3 + *(void *)(*(void *)(a2[1] + 24) + 24 * v14[2] + 8);
      *(void *)(v7 + 200 + 8 * v15) = v14;
      *(void *)(v7 + 712) = v15 + 1;
      uint64_t v17 = *v14;
      v14 += 4;
      uint64_t result = sub_24B4901AC(v7, v17, v16, a4);
      unint64_t v15 = *(void *)(v7 + 712) - 1;
      *(void *)(v7 + 712) = v15;
      if (!--v13) {
        return result;
      }
    }
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_24B49456C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a3[7];
  uint64_t v6 = 1;
  if (!v5) {
    return v6;
  }
  uint64_t v7 = a5;
  uint64_t v12 = 0;
  uint64_t v13 = a3[3];
  uint64_t v72 = 0;
  uint64_t v73 = a1 + 200;
  while (2)
  {
    switch(*(unsigned char *)(v13 + 8))
    {
      case 0:
      case 1:
        int v14 = sub_24B495154(a1, (unsigned __int8 **)a2);
        uint64_t v15 = *(void *)(a3[1] + 24);
        uint64_t v16 = *(void *)(v13 + 16);
        if (v14)
        {
          uint64_t v17 = v15 + 24 * v16;
          uint64_t v18 = *(void *)(v17 + 8);
          *(unsigned char *)(a4 + **(void **)(v17 + 16)) = 1;
          unint64_t v19 = *(void *)(a1 + 712);
          if (v19 >= 0x40) {
            goto LABEL_104;
          }
          *(void *)(v73 + 8 * v19) = v13;
          *(void *)(a1 + 712) = v19 + 1;
          sub_24B4952DC(a1, *(void *)v13, a4 + v18, v7);
          --*(void *)(a1 + 712);
        }
        else
        {
          *(unsigned char *)(a4 + **(void **)(v15 + 24 * v16 + 16)) = 0;
          ++v72;
        }
        goto LABEL_31;
      case 2:
        int v20 = sub_24B495154(a1, (unsigned __int8 **)a2);
        uint64_t v21 = *(void *)(a3[1] + 24);
        uint64_t v22 = *(void *)(v13 + 16);
        if (!v20)
        {
          *(unsigned char *)(a4 + **(void **)(v21 + 24 * v22 + 16)) = 0;
          goto LABEL_31;
        }
        uint64_t v23 = v21 + 24 * v22;
        uint64_t v24 = *(void *)(v23 + 8);
        *(unsigned char *)(a4 + **(void **)(v23 + 16)) = 1;
        unint64_t v25 = *(void *)(a1 + 712);
        if (v25 >= 0x40) {
          goto LABEL_104;
        }
        goto LABEL_12;
      case 3:
        int v26 = sub_24B495154(a1, (unsigned __int8 **)a2);
        uint64_t v27 = a3[1];
        uint64_t v28 = *(void *)(v27 + 24) + 24 * *(void *)(v13 + 16);
        if (!v26)
        {
          *(unsigned char *)(a4 + **(void **)(v28 + 16)) = 0;
          uint64_t v33 = (uint64_t *)(*(void *)(v27 + 24) + 24 * *(void *)(v13 + 16));
          sub_24B48BE70((unsigned int *)(a4 + v33[1]), *(unsigned int **)(v33[2] + 8), 10, *v33);
          goto LABEL_31;
        }
        uint64_t v24 = *(void *)(v28 + 8);
        *(unsigned char *)(a4 + **(void **)(v28 + 16)) = 1;
        unint64_t v25 = *(void *)(a1 + 712);
        if (v25 >= 0x40) {
LABEL_104:
        }
          sub_24B4A10C0(a1, 15);
LABEL_12:
        *(void *)(v73 + 8 * v25) = v13;
        *(void *)(a1 + 712) = v25 + 1;
        sub_24B4952DC(a1, *(void *)v13, a4 + v24, v7);
        --*(void *)(a1 + 712);
        goto LABEL_13;
      case 4:
        v5 -= *(void *)(v13 + 16);
        uint64_t v71 = v12;
        if (!sub_24B495154(a1, (unsigned __int8 **)a2))
        {
          uint64_t v34 = *(void *)(v13 + 16);
          if (v34)
          {
            while (2)
            {
              switch(*(unsigned char *)(v13 + 40))
              {
                case 0:
                case 5:
                  goto LABEL_29;
                case 1:
                case 2:
                  *(unsigned char *)(a4 + **(void **)(*(void *)(a3[1] + 24) + 24 * *(void *)(v13 + 48) + 16)) = 0;
                  goto LABEL_29;
                case 3:
                  uint64_t v35 = a3[1];
                  *(unsigned char *)(a4 + **(void **)(*(void *)(v35 + 24) + 24 * *(void *)(v13 + 48) + 16)) = 0;
                  unsigned int v36 = (uint64_t *)(*(void *)(v35 + 24) + 24 * *(void *)(v13 + 48));
                  sub_24B48BE70((unsigned int *)(a4 + v36[1]), *(unsigned int **)(v36[2] + 8), 10, *v36);
LABEL_29:
                  v13 += 32;
                  if (!--v34) {
                    break;
                  }
                  continue;
                default:
                  goto LABEL_104;
              }
              break;
            }
          }
          uint64_t v12 = v71;
          goto LABEL_31;
        }
        uint64_t v75 = 0;
        unint64_t v76 = 0;
        unint64_t v74 = 0;
        uint64_t v29 = *(void *)(v13 + 16);
        if (v29)
        {
          unint64_t v30 = 0;
          uint64_t v31 = (unsigned __int8 *)(v13 + 40);
          do
          {
            int v32 = *v31;
            v31 += 32;
            if (v32) {
              ++v30;
            }
            --v29;
          }
          while (v29);
        }
        else
        {
          unint64_t v30 = 0;
        }
        if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
        {
          int v37 = *(unsigned __int8 *)(a1 + 873);
          if (v37 != 7)
          {
            *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v37;
            *(unsigned char *)(a1 + 873) = 7;
          }
        }
        unsigned int v38 = sub_24B48CE94(a1);
        if (v38 >= 0xC1)
        {
          uint64_t v39 = *(void *)(a1 + 864) - 1;
          *(void *)(a1 + 864) = v39;
          int v40 = *(unsigned __int8 *)(a1 + 873);
          unsigned int v66 = v40;
          if (v40 == 7)
          {
            unint64_t v41 = sub_24B48D5FC(a1);
            int v42 = -1;
          }
          else
          {
            unint64_t v41 = sub_24B48DFC4(a1);
            int v42 = v40;
          }
          unint64_t v68 = v41;
          unint64_t v70 = v39 + v41;
          goto LABEL_50;
        }
        char v43 = v38;
        if ((v38 & 0xC0) == 0x80)
        {
          int v44 = sub_24B48CE94(a1);
          int v42 = 0;
          unint64_t v68 = v44 & 0xFFFF80FF | ((v43 & 0x7F) << 8);
          unint64_t v45 = *(void *)(a1 + 864) + v68;
LABEL_49:
          unint64_t v70 = v45;
          unsigned int v66 = *(unsigned __int8 *)(a1 + 873);
          goto LABEL_50;
        }
        if ((v38 & 0x80) == 0)
        {
          int v42 = 0;
          unint64_t v68 = v38 & 0x7F;
          unint64_t v45 = *(void *)(a1 + 864) + v68;
          goto LABEL_49;
        }
        unsigned int v66 = v38;
        sub_24B4A103C(a1, 26);
        int v42 = 0;
        unint64_t v70 = 0;
        unint64_t v68 = 0;
LABEL_50:
        uint64_t v7 = a5;
        int v69 = v42;
        if (v30 >> 16)
        {
          sub_24B4942B0(a1, (uint64_t)&v74);
        }
        else
        {
          unint64_t v74 = *(unsigned __int8 **)(a1 + 864);
          LOWORD(v75) = *(unsigned __int8 *)(a1 + 873);
          unint64_t v76 = v30 + 1;
          sub_24B48D06C(a1, v30 >> 3);
          sub_24B48CB84(a1, v30 & 7);
        }
        uint64_t v46 = *(void *)(v13 + 16);
        if (v46)
        {
          uint64_t v47 = v13 + 32;
          while (2)
          {
            switch(*(unsigned char *)(v47 + 8))
            {
              case 0:
                uint64_t v48 = a4 + *(void *)(*(void *)(a3[1] + 24) + 24 * *(void *)(v47 + 16) + 8);
                goto LABEL_59;
              case 1:
                sub_24B495154(a1, &v74);
                uint64_t v49 = *(void *)(a3[1] + 24);
                uint64_t v50 = *(void *)(v47 + 16);
                uint64_t v48 = a4 + *(void *)(v49 + 24 * v50 + 8);
                if (*(unsigned char *)(v47 + 8) == 1) {
                  *(unsigned char *)(a4 + **(void **)(v49 + 24 * v50 + 16)) = 1;
                }
LABEL_59:
                unint64_t v51 = *(void *)(a1 + 712);
                if (v51 >= 0x40) {
                  goto LABEL_104;
                }
                *(void *)(v73 + 8 * v51) = v47;
                unint64_t v52 = v51 + 1;
                goto LABEL_67;
              case 2:
                int v53 = sub_24B495154(a1, &v74);
                uint64_t v54 = *(void *)(a3[1] + 24);
                uint64_t v55 = *(void *)(v47 + 16);
                if (!v53)
                {
                  *(unsigned char *)(a4 + **(void **)(v54 + 24 * v55 + 16)) = 0;
                  goto LABEL_71;
                }
                uint64_t v56 = v54 + 24 * v55;
                uint64_t v57 = *(void *)(v56 + 8);
                *(unsigned char *)(a4 + **(void **)(v56 + 16)) = 1;
                unint64_t v58 = *(void *)(a1 + 712);
                if (v58 >= 0x40) {
                  goto LABEL_104;
                }
                goto LABEL_66;
              case 3:
                int v59 = sub_24B495154(a1, &v74);
                uint64_t v60 = a3[1];
                uint64_t v61 = *(void *)(v60 + 24) + 24 * *(void *)(v47 + 16);
                if (v59)
                {
                  uint64_t v57 = *(void *)(v61 + 8);
                  *(unsigned char *)(a4 + **(void **)(v61 + 16)) = 1;
                  unint64_t v58 = *(void *)(a1 + 712);
                  if (v58 >= 0x40) {
                    goto LABEL_104;
                  }
LABEL_66:
                  uint64_t v48 = a4 + v57;
                  *(void *)(v73 + 8 * v58) = v47;
                  unint64_t v52 = v58 + 1;
LABEL_67:
                  *(void *)(a1 + 712) = v52;
                  sub_24B4901AC(a1, *(void *)v47, v48, a5);
                  --*(void *)(a1 + 712);
                }
                else
                {
                  *(unsigned char *)(a4 + **(void **)(v61 + 16)) = 0;
                  int v62 = (uint64_t *)(*(void *)(v60 + 24) + 24 * *(void *)(v47 + 16));
                  sub_24B48BE70((unsigned int *)(a4 + v62[1]), *(unsigned int **)(v62[2] + 8), 10, *v62);
                }
LABEL_71:
                if (v76) {
                  BOOL v63 = 0;
                }
                else {
                  BOOL v63 = BYTE1(v75) == 1;
                }
                if (v63) {
                  sub_24B4951C4(&v74);
                }
                v47 += 32;
                if (--v46) {
                  continue;
                }
                uint64_t v13 = v47 - 32;
                break;
              case 5:
                sub_24B495154(a1, &v74);
                goto LABEL_71;
              default:
                goto LABEL_71;
            }
            break;
          }
        }
        uint64_t v12 = v71;
        if (v69 < 1)
        {
          if (v69 < 0)
          {
            if (*(unsigned __int8 *)(a1 + 873) <= 6u)
            {
              ++*(void *)(a1 + 864);
              *(unsigned char *)(a1 + 873) = 7;
            }
            sub_24B48D268((void *)a1, v68);
            if ((uint64_t)(v70 - *(void *)(a1 + 864)) >= 1) {
LABEL_95:
            }
              sub_24B4A103C(a1, 26);
          }
          else
          {
            if ((uint64_t)(v70 - *(void *)(a1 + 864)) >= 2) {
              sub_24B4A103C(a1, 26);
            }
            unint64_t v64 = *(void *)(a1 + 856);
            if (v70 > v64 || v66 != 7 && v70 == v64) {
              sub_24B4A103C(a1, 26);
            }
            *(void *)(a1 + 864) = v70;
            *(unsigned char *)(a1 + 873) = v66;
          }
        }
        else
        {
          if (*(unsigned __int8 *)(a1 + 873) < v69) {
            ++*(void *)(a1 + 864);
          }
          *(unsigned char *)(a1 + 873) = v69;
          sub_24B48D8E8(a1, v68);
          if ((uint64_t)(v70 - *(void *)(a1 + 864)) >= 2) {
            goto LABEL_95;
          }
        }
LABEL_13:
        ++v12;
LABEL_31:
        --v5;
        if (!*(void *)(a2 + 16))
        {
          if (*(unsigned char *)(a2 + 9) != 1) {
            goto LABEL_97;
          }
          sub_24B4951C4((unsigned __int8 **)a2);
        }
        v13 += 32;
        if (v5) {
          continue;
        }
LABEL_97:
        if (v72 && v12) {
          sub_24B4A103C(a1, 33);
        }
        if (!v5) {
          return 1;
        }
        sub_24B494E70(a1, a3, v5, a4);
        return 0;
      case 5:
        sub_24B495154(a1, (unsigned __int8 **)a2);
        goto LABEL_31;
      default:
        goto LABEL_104;
    }
  }
}

uint64_t sub_24B494DF8(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(void *)(a2 + 16)) {
    goto LABEL_4;
  }
LABEL_2:
  if (*(unsigned char *)(a2 + 9) == 1) {
    uint64_t result = (uint64_t)sub_24B4951C4((unsigned __int8 **)a2);
  }
LABEL_4:
  while (*(void *)(a2 + 16) || *(unsigned char *)(a2 + 9) == 1)
  {
    uint64_t result = sub_24B495154(v3, (unsigned __int8 **)a2);
    if (result) {
      uint64_t result = sub_24B49555C(v3);
    }
    if (!*(void *)(a2 + 16)) {
      goto LABEL_2;
    }
  }
  return result;
}

uint64_t sub_24B494E70(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = result;
  uint64_t v8 = (void *)(a2[3] - 32 * a3 + 32 * a2[7] + 16);
  do
  {
    unsigned int v9 = *((unsigned __int8 *)v8 - 8);
    if (v9 > 5) {
      sub_24B4A10C0(v7, 15);
    }
    int v10 = 1 << v9;
    if ((v10 & 0x31) == 0)
    {
      if ((v10 & 6) != 0)
      {
        *(unsigned char *)(a4 + **(void **)(*(void *)(a2[1] + 24) + 24 * *v8 + 16)) = 0;
      }
      else
      {
        uint64_t v11 = a2[1];
        *(unsigned char *)(a4 + **(void **)(*(void *)(v11 + 24) + 24 * *v8 + 16)) = 0;
        uint64_t v12 = (uint64_t *)(*(void *)(v11 + 24) + 24 * *v8);
        uint64_t result = sub_24B48BE70((unsigned int *)(a4 + v12[1]), *(unsigned int **)(v12[2] + 8), 10, *v12);
      }
    }
    v8 += 4;
    --v5;
  }
  while (v5);
  return result;
}

void sub_24B494F84(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a1 + 200;
  do
  {
    uint64_t v5 = (void *)a2[1];
    if (!v5) {
      return;
    }
    int v6 = 0;
    uint64_t v7 = (void *)a2[1];
    do
    {
      uint64_t v8 = *a2;
      unsigned int v9 = (unsigned __int8 **)(v7[2] + 16);
      do
      {
        int v10 = *v9;
        uint64_t v11 = *v9;
        int v12 = *v11;
        unsigned int v9 = (unsigned __int8 **)(v11 + 16);
      }
      while (v12 == 128);
      if (!v8) {
        goto LABEL_14;
      }
      while (v10 != *(unsigned __int8 **)v8)
      {
LABEL_10:
        uint64_t v8 = *(void *)(v8 + 16);
        if (!v8) {
          goto LABEL_14;
        }
      }
      uint64_t v22 = 0;
      uint64_t v13 = sub_24B495A54(a1, v7[2], *(unsigned __int8 **)(v8 + 8), &v22);
      if (!v13)
      {
        sub_24B4A103C(a1, 39);
        goto LABEL_10;
      }
      int v14 = (uint64_t *)v13;
      uint64_t v15 = *(void *)(a1 + 864);
      char v16 = *(unsigned char *)(a1 + 873);
      *(void *)(a1 + 864) = *v7;
      *(unsigned char *)(a1 + 873) = *((unsigned char *)v7 + 8);
      uint64_t v17 = *(void *)(v7[2] + 8);
      sub_24B48BE00(*(unsigned int *)(v17 + 48), (unsigned char *)v7[3], *(_DWORD *)(v13 + 16));
      unint64_t v18 = *(void *)(a1 + 712);
      if (v18 >= 0x40) {
        sub_24B4A10C0(a1, 15);
      }
      uint64_t v19 = v7[3] + *(void *)(v17 + 40);
      *(void *)(v4 + 8 * v18) = v14;
      *(void *)(a1 + 712) = v18 + 1;
      sub_24B4952DC(a1, *v14, v19, 0);
      --*(void *)(a1 + 712);
      *(void *)(a1 + 864) = v15;
      *(unsigned char *)(a1 + 873) = v16;
      *uint64_t v7 = 0;
LABEL_14:
      if (*v7)
      {
        int v20 = (void *)v7[4];
        uint64_t v5 = v7;
      }
      else
      {
        uint64_t v21 = v7[4];
        if (v7 == (void *)a2[1])
        {
          a2[1] = v21;
          sub_24B49731C(a1, v7, 40);
          int v20 = (void *)a2[1];
          int v6 = 1;
          uint64_t v5 = v20;
        }
        else
        {
          v5[4] = v21;
          sub_24B49731C(a1, v7, 40);
          int v20 = (void *)v5[4];
          int v6 = 1;
        }
      }
      uint64_t v7 = v20;
    }
    while (v20);
  }
  while (v6);
}

uint64_t sub_24B495154(uint64_t a1, unsigned __int8 **a2)
{
  if (!a2[2]) {
    sub_24B4A103C(a1, 40);
  }
  unsigned int v3 = **a2;
  char v4 = *((unsigned char *)a2 + 8);
  if (v4)
  {
    char v5 = v4 - 1;
  }
  else
  {
    ++*a2;
    char v5 = 7;
  }
  *((unsigned char *)a2 + 8) = v5;
  --a2[2];
  return (v3 >> v4) & 1;
}

unsigned __int8 **sub_24B4951C4(unsigned __int8 **result)
{
  int v1 = *((unsigned __int8 *)result + 8);
  if (v1 == 7)
  {
    unsigned int v2 = *result + 1;
    LOBYTE(v3) = **result;
    *uint64_t result = v2;
  }
  else
  {
    int v4 = **result << (7 - v1);
    unsigned int v2 = *result + 1;
    *uint64_t result = v2;
    int v3 = (*v2 >> (v1 + 1)) | v4;
  }
  switch((char)v3)
  {
    case -63:
      uint64_t v5 = 0x4000;
      goto LABEL_9;
    case -62:
      uint64_t v5 = 0x8000;
      goto LABEL_9;
    case -61:
      uint64_t v5 = 49152;
      goto LABEL_9;
    case -60:
      uint64_t v5 = 0x10000;
LABEL_9:
      result[2] = (unsigned __int8 *)v5;
      break;
    default:
      if ((v3 & 0xC0) == 0x80)
      {
        unint64_t v6 = (v3 & 0x7F) << 8;
        result[2] = (unsigned __int8 *)v6;
        if (v1 == 7)
        {
          LOBYTE(v7) = *v2;
          *uint64_t result = v2 + 1;
        }
        else
        {
          int v9 = *v2 << (7 - v1);
          *uint64_t result = v2 + 1;
          int v7 = (v2[1] >> (v1 + 1)) | v9;
        }
        uint64_t v8 = (unsigned __int8 *)(v7 | v6);
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(v3 & 0x7F);
      }
      result[2] = v8;
      *((unsigned char *)result + 9) = 0;
      break;
  }
  return result;
}

uint64_t sub_24B4952DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
  {
    int v8 = *(unsigned __int8 *)(a1 + 873);
    if (v8 != 7)
    {
      *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v8;
      *(unsigned char *)(a1 + 873) = 7;
    }
  }
  unsigned int v9 = sub_24B48CE94(a1);
  if (v9 >= 0xC1)
  {
    --*(void *)(a1 + 864);
    unsigned int v10 = *(unsigned __int8 *)(a1 + 873);
    if (v10 == 7)
    {
      unint64_t v11 = sub_24B48D5FC(a1);
      if (*(void *)(a1 + 864) + v11 > *(void *)(a1 + 856)) {
        sub_24B4A103C(a1, 43);
      }
      sub_24B4901AC(a1, a2, a3, a4);
      if (*(unsigned __int8 *)(a1 + 873) <= 6u)
      {
        ++*(void *)(a1 + 864);
        *(unsigned char *)(a1 + 873) = 7;
      }
      return sub_24B48D268((void *)a1, v11);
    }
    else
    {
      unint64_t v14 = sub_24B48DFC4(a1);
      if (*(void *)(a1 + 864) + v14 > *(void *)(a1 + 856)) {
        sub_24B4A103C(a1, 43);
      }
      sub_24B4901AC(a1, a2, a3, a4);
      if (*(unsigned __int8 *)(a1 + 873) < v10) {
        ++*(void *)(a1 + 864);
      }
      *(unsigned char *)(a1 + 873) = v10;
      return sub_24B48D8E8(a1, v14);
    }
  }
  if ((v9 & 0xC0) == 0x80)
  {
    unint64_t v13 = *(void *)(a1 + 864) + (sub_24B48CE94(a1) & 0xFFFF80FF | ((v9 & 0x7F) << 8));
LABEL_24:
    char v15 = *(unsigned char *)(a1 + 873);
    if (v13 > *(void *)(a1 + 856)) {
      sub_24B4A103C(a1, 43);
    }
    uint64_t result = sub_24B4901AC(a1, a2, a3, a4);
    if ((uint64_t)(v13 - *(void *)(a1 + 864)) >= 2) {
      uint64_t result = sub_24B4A103C(a1, 26);
    }
    *(void *)(a1 + 864) = v13;
    *(unsigned char *)(a1 + 873) = v15;
    return result;
  }
  if ((v9 & 0x80) == 0)
  {
    unint64_t v13 = *(void *)(a1 + 864) + (v9 & 0x7F);
    goto LABEL_24;
  }
  return sub_24B4A103C(a1, 26);
}

uint64_t sub_24B49555C(uint64_t a1)
{
  while (1)
  {
    if ((*(unsigned char *)(a1 + 824) & 0x40) != 0)
    {
      int v2 = *(unsigned __int8 *)(a1 + 873);
      if (v2 != 7)
      {
        *(unsigned char *)(*(void *)(a1 + 864))++ &= 510 << v2;
        *(unsigned char *)(a1 + 873) = 7;
      }
    }
    char v3 = sub_24B48CE94(a1);
    unsigned int v4 = (v3 + 63);
    if (v4 >= 4) {
      break;
    }
    unsigned int v5 = (v4 << 14) + 0x4000;
LABEL_8:
    uint64_t result = sub_24B48D06C(a1, v5);
    if (!(v5 >> 14)) {
      return result;
    }
  }
  if ((v3 & 0xC0) == 0x80)
  {
    unsigned int v5 = sub_24B48CE94(a1) & 0xFFFF80FF | ((v3 & 0x7F) << 8);
    goto LABEL_8;
  }
  if (v3 < 0)
  {
    sub_24B4A103C(a1, 26);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = v3 & 0x7F;
  }
  return sub_24B48D06C(a1, v7);
}

uint64_t sub_24B49566C(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(a3 + 24);
  unint64_t v6 = v5 + a2;
  if (v5 < v5 + a2)
  {
    uint64_t v7 = result;
    do
    {
      uint64_t v8 = *(void *)(a3 + 32);
      uint64_t v9 = *(void *)(v8 + 8);
      if (*(_DWORD *)v9 == 181)
      {
        unint64_t v11 = **(void ***)a3;
        if (!v11) {
          goto LABEL_14;
        }
        uint64_t v12 = -1;
        while (v5 != ++v12)
        {
          unint64_t v11 = (void *)*v11;
          if (!v11) {
            goto LABEL_14;
          }
        }
        unsigned int v10 = (char *)v11 + *(void *)(v9 + 40);
        if (!v10) {
          goto LABEL_14;
        }
      }
      else
      {
        if (*(_DWORD *)v9 != 182) {
          sub_24B4A10C0(v7, 15);
        }
        unsigned int v10 = (char *)(*(void *)a3 + *(void *)(v9 + 40) + *(void *)(*(void *)(v9 + 24) + 8) * v5);
        if (!v10) {
          goto LABEL_14;
        }
      }
      uint64_t result = sub_24B48E9B0(v7, *(void *)(v8 + 16), v10);
      unint64_t v5 = *(void *)(a3 + 24);
LABEL_14:
      *(void *)(a3 + 24) = ++v5;
    }
    while (v5 < v6);
  }
  *(void *)(a3 + 8) -= a2;
  return result;
}

void sub_24B49576C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(a3 + 24);
  unint64_t v6 = v5 + a2;
  uint64_t v7 = *(void ***)(a3 + 40);
  if (v7)
  {
    uint64_t v33 = 0;
    int v32 = *v7;
    if (v5 < v6)
    {
      do
      {
        uint64_t v8 = *(void *)(a3 + 32);
        uint64_t v9 = *(void *)(v8 + 8);
        if (*(_DWORD *)v9 == 181)
        {
          uint64_t v12 = *(void **)(a1 + 944);
          if (v12 && (unint64_t v13 = (void *)*v12) != 0 && (v14 = (uint64_t (*)(void, void))v13[1]) != 0)
          {
            char v15 = (void *)v14(*v13, *(void *)(v9 + 32));
          }
          else
          {
            char v15 = malloc_type_calloc(1uLL, *(void *)(v9 + 32), 0x45103692uLL);
            bzero(v15, *(void *)(v9 + 32));
          }
          *char v15 = 0;
          char v16 = *(void **)a3;
          if (**(void **)a3)
          {
            *(void *)v16[1] = v15;
            ++*((_DWORD *)v16 + 4);
          }
          else
          {
            *char v16 = v15;
            *((_DWORD *)v16 + 4) = 1;
          }
          v16[1] = v15;
          unint64_t v11 = (char *)v15 + *(void *)(v9 + 40);
          *((_DWORD *)v16 + 5) = 8;
          uint64_t v8 = *(void *)(a3 + 32);
        }
        else
        {
          if (*(_DWORD *)v9 != 182) {
            goto LABEL_39;
          }
          unsigned int v10 = *(_DWORD **)a3;
          *unsigned int v10 = **(_DWORD **)a3 + 1;
          unint64_t v11 = (char *)v10 + *(void *)(v9 + 40) + *(void *)(*(void *)(v9 + 24) + 8) * v5;
        }
        sub_24B4901AC(a1, *(void *)(v8 + 16), v11, &v32);
        while (1)
        {
          uint64_t v17 = v32;
          uint64_t v18 = *(void *)(a3 + 40);
          if (v32 == *(void **)v18) {
            break;
          }
          int v32 = (void *)*((void *)v32 + 2);
          sub_24B49731C(a1, v17, 24);
        }
        unint64_t v5 = *(void *)(a3 + 24) + 1;
        *(void *)(a3 + 24) = v5;
      }
      while (v5 < v6);
      if (v33)
      {
        uint64_t v21 = *(void *)(v18 + 8);
        uint64_t v19 = (void *)(v18 + 8);
        uint64_t v20 = v21;
        if (v21)
        {
          do
          {
            uint64_t v22 = v20;
            uint64_t v20 = *(void *)(v20 + 32);
          }
          while (v20);
          uint64_t v19 = (void *)(v22 + 32);
        }
        *uint64_t v19 = v33;
      }
    }
  }
  else
  {
    for (; v5 < v6; *(void *)(a3 + 24) = v5)
    {
      uint64_t v23 = *(void *)(a3 + 32);
      uint64_t v24 = *(void *)(v23 + 8);
      if (*(_DWORD *)v24 == 181)
      {
        uint64_t v27 = *(void **)(a1 + 944);
        if (v27 && (v28 = (void *)*v27) != 0 && (uint64_t v29 = (uint64_t (*)(void, void))v28[1]) != 0)
        {
          unint64_t v30 = (void *)v29(*v28, *(void *)(v24 + 32));
        }
        else
        {
          unint64_t v30 = malloc_type_calloc(1uLL, *(void *)(v24 + 32), 0xF0DEBC9DuLL);
          bzero(v30, *(void *)(v24 + 32));
        }
        *unint64_t v30 = 0;
        uint64_t v31 = *(void **)a3;
        if (**(void **)a3)
        {
          *(void *)v31[1] = v30;
          ++*((_DWORD *)v31 + 4);
        }
        else
        {
          *uint64_t v31 = v30;
          *((_DWORD *)v31 + 4) = 1;
        }
        v31[1] = v30;
        int v26 = (char *)v30 + *(void *)(v24 + 40);
        *((_DWORD *)v31 + 5) = 8;
        uint64_t v23 = *(void *)(a3 + 32);
      }
      else
      {
        if (*(_DWORD *)v24 != 182) {
LABEL_39:
        }
          sub_24B4A10C0(a1, 15);
        unint64_t v25 = *(_DWORD **)a3;
        _DWORD *v25 = **(_DWORD **)a3 + 1;
        int v26 = (char *)v25 + *(void *)(v24 + 40) + *(void *)(*(void *)(v24 + 24) + 8) * v5;
      }
      sub_24B4901AC(a1, *(void *)(v23 + 16), v26, 0);
      unint64_t v5 = *(void *)(a3 + 24) + 1;
    }
  }
}

uint64_t sub_24B495A54(uint64_t a1, uint64_t a2, unsigned __int8 *a3, void *a4)
{
  unsigned int v4 = a4;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = v8;
  for (int i = (unsigned __int8 **)(a2 + 16); ; int i = (unsigned __int8 **)(v11 + 16))
  {
    uint64_t v11 = (uint64_t)*i;
    int v12 = **i;
    if (v12 != 96 && v12 != 160 && v12 != 128) {
      break;
    }
  }
  switch(v12 & 0x1F)
  {
    case 1:
      if (!v8) {
        goto LABEL_80;
      }
      while (*(void *)(v7 + 8) != *a3)
      {
        v7 += 24;
        if (!--v9) {
          goto LABEL_80;
        }
      }
      goto LABEL_91;
    case 2:
      uint64_t v13 = *(void *)(*(void *)(v11 + 8) + 8);
      switch(v13)
      {
        case 4:
          goto LABEL_85;
        case 2:
          int v14 = *(__int16 *)a3;
          if (!v8) {
            goto LABEL_80;
          }
          break;
        case 1:
          int v14 = (char)*a3;
          if (!v8) {
            goto LABEL_80;
          }
          break;
        default:
LABEL_85:
          int v14 = *(_DWORD *)a3;
          if (!v8) {
            goto LABEL_80;
          }
          break;
      }
      while (**(_DWORD **)(v7 + 8) != v14)
      {
        v7 += 24;
        if (!--v9) {
          goto LABEL_80;
        }
      }
      goto LABEL_91;
    case 3:
      if (!v8) {
        goto LABEL_80;
      }
      char v15 = (const void *)*((void *)a3 + 1);
      size_t v16 = *(int *)a3;
      while (2)
      {
        uint64_t v17 = *(const char **)(v7 + 8);
        size_t v18 = strlen(v17);
        if (v18 == 2048) {
          goto LABEL_92;
        }
        if (v18 != v16) {
          goto LABEL_24;
        }
        if (v16)
        {
          uint64_t v19 = sub_24B49727C(a1, v16);
          memcpy(v19, v17, v16);
          for (uint64_t j = 0; j != v16; ++j)
            *((unsigned char *)v19 + j) -= 48;
          int v21 = memcmp(v19, v15, v16);
          sub_24B49731C(a1, v19, v16);
          if (v21)
          {
LABEL_24:
            v7 += 24;
            if (!--v9) {
              goto LABEL_80;
            }
            continue;
          }
        }
        goto LABEL_91;
      }
    case 4:
      if (!v8) {
        goto LABEL_80;
      }
      __s2 = (void *)*((void *)a3 + 1);
      size_t v22 = *(int *)a3;
      while (2)
      {
        uint64_t v23 = *(const char **)(v7 + 8);
        size_t v24 = strlen(v23) + 1;
        if (v24 >> 1 == 2048) {
          goto LABEL_92;
        }
        if (v24 >> 1 != v22) {
          goto LABEL_43;
        }
        if (v24 >= 2)
        {
          unint64_t v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
          if ((v24 & 0xFFFFFFFFFFFFFFFELL) != 0)
          {
            int v26 = sub_24B49727C(a1, v22);
            unint64_t v27 = 0;
            uint64_t v28 = v26;
            do
            {
              unsigned int v29 = v23[v27];
              if (v29 >= 0x41) {
                char v30 = 9;
              }
              else {
                char v30 = 0;
              }
              char v31 = v30 + v29;
              unsigned char *v28 = 16 * v31;
              unsigned int v32 = v23[v27 + 1];
              if (v32 >= 0x41) {
                char v33 = -55;
              }
              else {
                char v33 = -48;
              }
              *v28++ = (v33 + v32) | (16 * v31);
              v27 += 2;
            }
            while (v27 < v25);
          }
          else
          {
            int v26 = 0;
          }
          int v34 = memcmp(v26, __s2, v22);
          sub_24B49731C(a1, v26, v22);
          unsigned int v4 = a4;
          if (v34)
          {
LABEL_43:
            v7 += 24;
            if (!--v9) {
              goto LABEL_80;
            }
            continue;
          }
        }
        goto LABEL_91;
      }
    case 5:
      goto LABEL_83;
    case 6:
      if (!v8) {
        goto LABEL_80;
      }
      while (1)
      {
        uint64_t v35 = (void *)(*(uint64_t (**)(uint64_t))(v7 + 8))(a1);
        int v36 = sub_24B496004(v35, (uint64_t ***)a3);
        sub_24B496084(a1, (unsigned __int8 *)v11, v35);
        if (v36) {
          goto LABEL_91;
        }
        v7 += 24;
        if (!--v9) {
          goto LABEL_80;
        }
      }
    case 0xA:
      if (!v8) {
        goto LABEL_80;
      }
      while (*(void *)(v7 + 8) != *a3)
      {
        v7 += 24;
        if (!--v9) {
          goto LABEL_80;
        }
      }
      goto LABEL_91;
    case 0x12:
      uint64_t v39 = *(uint64_t ***)a3;
      size_t v40 = strlen(*(const char **)a3);
      if (!v40) {
        goto LABEL_95;
      }
      size_t v41 = v40 - 1;
      if (v40 == 2049) {
        goto LABEL_92;
      }
      goto LABEL_74;
    case 0x13:
      uint64_t v39 = *(uint64_t ***)a3;
      size_t v42 = strlen(*(const char **)a3);
      if (!v42) {
        goto LABEL_95;
      }
      size_t v41 = v42 - 1;
      if (v42 == 2049) {
        goto LABEL_92;
      }
      goto LABEL_74;
    case 0x16:
      uint64_t v39 = *(uint64_t ***)a3;
      size_t v43 = strlen(*(const char **)a3);
      if (!v43) {
        goto LABEL_95;
      }
      size_t v41 = v43 - 1;
      if (v43 == 2049) {
        goto LABEL_92;
      }
      goto LABEL_74;
    case 0x17:
      uint64_t v39 = *(uint64_t ***)a3;
      size_t v44 = strlen(*(const char **)a3);
      if (!v44) {
        goto LABEL_95;
      }
      size_t v41 = v44 - 1;
      if (v44 == 2049) {
        goto LABEL_92;
      }
      goto LABEL_74;
    case 0x18:
      uint64_t v39 = *(uint64_t ***)a3;
      size_t v45 = strlen(*(const char **)a3);
      if (!v45) {
        goto LABEL_95;
      }
      size_t v41 = v45 - 1;
      if (v45 == 2049) {
        goto LABEL_92;
      }
      goto LABEL_74;
    case 0x1A:
      uint64_t v39 = *(uint64_t ***)a3;
      size_t v46 = strlen(*(const char **)a3);
      if (!v46) {
LABEL_95:
      }
        sub_24B4A10C0(a1, 24);
      size_t v41 = v46 - 1;
      if (v46 == 2049) {
        goto LABEL_92;
      }
LABEL_74:
      uint64_t v47 = (char *)v39 + 1;
      if (!v8) {
        goto LABEL_80;
      }
      while (1)
      {
        size_t v48 = strlen(*(const char **)(v7 + 8));
        if (v48 == 2048) {
LABEL_92:
        }
          sub_24B4A10C0(a1, 42);
        if (v48 == v41 && (!v41 || !memcmp(*(const void **)(v7 + 8), v47, v41))) {
          break;
        }
        v7 += 24;
        if (!--v9) {
          goto LABEL_80;
        }
      }
LABEL_83:
      *unsigned int v4 = v8 - v9;
      if (!v9) {
        return 0;
      }
      return v7;
    default:
      if (!v8) {
        goto LABEL_80;
      }
      break;
  }
  do
  {
    int v37 = (const void **)(*(uint64_t (**)(uint64_t))(v7 + 8))(a1);
    int v38 = sub_24B496410(a1, (void *)v11, v37, a3);
    sub_24B496084(a1, (unsigned __int8 *)v11, v37);
    if (v38)
    {
LABEL_91:
      *unsigned int v4 = *(void *)(a2 + 32) - v9;
      return v7;
    }
    v7 += 24;
    --v9;
  }
  while (v9);
LABEL_80:
  *unsigned int v4 = *(void *)(a2 + 32);
  return 0;
}

uint64_t sub_24B496004(void *a1, uint64_t ***a2)
{
  unint64_t v2 = a1[1];
  uint64_t v3 = *((int *)a2 + 4);
  if (v2 == v3)
  {
    if (!v3) {
      return 1;
    }
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    if (v2 <= 1) {
      unint64_t v2 = 1;
    }
    for (uint64_t i = 1; ; ++i)
    {
      uint64_t v7 = i;
      uint64_t v8 = *a2;
      if (*a2)
      {
        while (--v7)
        {
          uint64_t v8 = (uint64_t **)*v8;
          if (!v8) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = *((int *)v8 + 2);
      }
LABEL_11:
      if (*(void *)(*a1 + 8 * v4) != v5) {
        break;
      }
      if (++v4 == v2) {
        return 1;
      }
    }
  }
  return 0;
}

void sub_24B496084(uint64_t a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v5 = a1;
  while (1)
  {
    unsigned int v6 = *a2;
    if (v6 <= 0x6F) {
      break;
    }
    if (v6 != 128 && v6 != 160)
    {
      if (v6 != 112) {
        goto LABEL_57;
      }
LABEL_35:
      if (a3[1])
      {
        unint64_t v18 = 0;
        do
        {
          sub_24B496084(v5, *((void *)a2 + 2), *(void *)(*a3 + 8 * v18++));
          unint64_t v19 = a3[1];
        }
        while (v18 < v19);
        uint64_t v20 = 8 * v19;
      }
      else
      {
        uint64_t v20 = 0;
      }
      int v21 = (void *)*a3;
LABEL_52:
      sub_24B49731C(v5, v21, v20);
LABEL_53:
      a1 = v5;
      uint64_t v7 = a3;
      uint64_t v8 = 16;
      goto LABEL_54;
    }
LABEL_8:
    a2 = (unsigned __int8 *)*((void *)a2 + 2);
  }
  if (*a2 <= 0x55u)
  {
    if (*a2 > 0x2Fu)
    {
      switch(*a2)
      {
        case '@':
          uint64_t v9 = *((void *)a2 + 3);
          unsigned int v10 = (void *)*a3;
          uint64_t v11 = 24 * a3[1];
LABEL_33:
          sub_24B496084(a1, *(void *)(v9 + v11), v10);
          goto LABEL_53;
        case 'A':
          goto LABEL_57;
        case 'B':
LABEL_19:
          uint64_t v7 = a3;
          uint64_t v8 = 4;
          goto LABEL_54;
        case 'C':
        case 'D':
          goto LABEL_11;
        default:
          if (v6 - 82 < 2) {
            goto LABEL_11;
          }
          if (v6 != 48) {
            goto LABEL_57;
          }
          goto LABEL_35;
      }
    }
    switch(*a2)
    {
      case 1u:
        uint64_t v7 = a3;
        uint64_t v8 = 1;
        goto LABEL_54;
      case 2u:
        goto LABEL_19;
      case 3u:
      case 4u:
      case 0x12u:
      case 0x13u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x1Au:
        goto LABEL_11;
      case 5u:
        return;
      case 6u:
        goto LABEL_51;
      case 0xAu:
        uint64_t v7 = a3;
        uint64_t v8 = 8;
        goto LABEL_54;
      case 0x10u:
        int v12 = (void *)*a3;
        unint64_t v13 = *((void *)a2 + 6);
        if (v13)
        {
          unint64_t v14 = 0;
          char v15 = (void *)*((void *)a2 + 2);
          do
          {
            if (*v12)
            {
              sub_24B496084(v5, *v15, *v12);
              unint64_t v13 = *((void *)a2 + 6);
            }
            v15 += 4;
            ++v12;
            ++v14;
          }
          while (v14 < v13);
          uint64_t v17 = (unint64_t *)(a2 + 56);
          unint64_t v16 = *((void *)a2 + 7);
          if (!v16)
          {
LABEL_46:
            unint64_t v25 = *((void *)a2 + 8);
            if (v25)
            {
              unint64_t v26 = 0;
              unint64_t v27 = (void *)*((void *)a2 + 4);
              do
              {
                uint64_t v28 = v12[v26];
                if (v28)
                {
                  sub_24B496084(v5, *v27, v28);
                  unint64_t v25 = *((void *)a2 + 8);
                }
                v27 += 4;
                ++v26;
              }
              while (v26 < v25);
            }
LABEL_51:
            int v21 = (void *)*a3;
            uint64_t v20 = 8 * a3[1];
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v17 = (unint64_t *)(a2 + 56);
          unint64_t v16 = *((void *)a2 + 7);
          if (!v16) {
            goto LABEL_51;
          }
        }
        unint64_t v22 = 0;
        uint64_t v23 = (unsigned __int8 *)(*((void *)a2 + 3) + 8);
        do
        {
          if (*v12)
          {
            sub_24B496084(v5, *((void *)v23 - 1), *v12);
            unint64_t v16 = *v17;
          }
          int v24 = *v23;
          v23 += 32;
          v12 += v24 != 4;
          ++v22;
        }
        while (v22 < v16);
        goto LABEL_46;
      case 0x20u:
        uint64_t v9 = *((void *)a2 + 3);
        unsigned int v10 = (void *)*a3;
        uint64_t v11 = 32 * a3[1];
        goto LABEL_33;
      default:
        goto LABEL_57;
    }
  }
  if (v6 == 96) {
    goto LABEL_8;
  }
  if (v6 != 86 && v6 != 90) {
LABEL_57:
  }
    sub_24B4A10C0(a1, 16);
LABEL_11:
  if (!*((unsigned char *)a3 + 16)) {
    sub_24B49731C(a1, (void *)*a3, a3[1]);
  }
  a1 = v5;
  uint64_t v7 = a3;
  uint64_t v8 = 24;
LABEL_54:
  sub_24B49731C(a1, v7, v8);
}

uint64_t sub_24B496410(uint64_t a1, void *a2, const void **a3, unsigned __int8 *a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t v7 = a1;
  unsigned int v8 = *(unsigned __int8 *)a2;
  if (v8 <= 0x3F)
  {
    switch(*(unsigned char *)a2)
    {
      case 1:
        int v9 = *a4;
        int v10 = *(unsigned __int8 *)a3;
        return v10 == v9;
      case 2:
        goto LABEL_31;
      case 3:
      case 4:
        goto LABEL_14;
      case 5:
        return 1;
      case 6:
        uint64_t result = sub_24B496004(a3, (uint64_t ***)a4);
        if (!result) {
          return result;
        }
        return 1;
      case 7:
      case 8:
      case 9:
      case 0xB:
      case 0xC:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x11:
      case 0x14:
      case 0x15:
      case 0x19:
      case 0x1B:
      case 0x1C:
      case 0x1D:
      case 0x1E:
      case 0x1F:
        goto LABEL_110;
      case 0xA:
        return *a3 == (const void *)*a4;
      case 0x10:
        size_t v44 = (uint64_t *)*a3;
        return (!a2[6] || sub_24B496AF4(a1, a2, 1, &v44, (uint64_t)a4))
            && (!a2[7] || sub_24B496AF4(v7, a2, 2, &v44, (uint64_t)v4))
            && (!a2[8] || sub_24B496AF4(v7, a2, 3, &v44, (uint64_t)v4));
      case 0x12:
        uint64_t v11 = *a3;
        int v12 = a3[1];
        unint64_t v13 = *(uint64_t ***)a4;
        size_t v14 = strlen(*(const char **)a4);
        if (v14)
        {
          size_t v15 = v14 - 1;
          if (v14 == 2049)
          {
            int v16 = 42;
            break;
          }
          return !memcmp(v11, (char *)v13 + 1, v15) && v12 == (const void *)v15;
        }
        int v16 = 24;
        break;
      case 0x13:
        uint64_t v11 = *a3;
        int v12 = a3[1];
        unint64_t v13 = *(uint64_t ***)a4;
        size_t v20 = strlen(*(const char **)a4);
        if (v20)
        {
          size_t v15 = v20 - 1;
          if (v20 != 2049) {
            return !memcmp(v11, (char *)v13 + 1, v15) && v12 == (const void *)v15;
          }
          int v16 = 42;
        }
        else
        {
          int v16 = 24;
        }
        break;
      case 0x16:
        uint64_t v11 = *a3;
        int v12 = a3[1];
        unint64_t v13 = *(uint64_t ***)a4;
        size_t v21 = strlen(*(const char **)a4);
        if (v21)
        {
          size_t v15 = v21 - 1;
          if (v21 != 2049) {
            return !memcmp(v11, (char *)v13 + 1, v15) && v12 == (const void *)v15;
          }
          int v16 = 42;
        }
        else
        {
          int v16 = 24;
        }
        break;
      case 0x17:
        uint64_t v11 = *a3;
        int v12 = a3[1];
        unint64_t v13 = *(uint64_t ***)a4;
        size_t v36 = strlen(*(const char **)a4);
        if (v36)
        {
          size_t v15 = v36 - 1;
          if (v36 != 2049) {
            return !memcmp(v11, (char *)v13 + 1, v15) && v12 == (const void *)v15;
          }
          int v16 = 42;
        }
        else
        {
          int v16 = 24;
        }
        break;
      case 0x18:
        uint64_t v11 = *a3;
        int v12 = a3[1];
        unint64_t v13 = *(uint64_t ***)a4;
        size_t v37 = strlen(*(const char **)a4);
        if (v37)
        {
          size_t v15 = v37 - 1;
          if (v37 != 2049) {
            return !memcmp(v11, (char *)v13 + 1, v15) && v12 == (const void *)v15;
          }
          int v16 = 42;
        }
        else
        {
          int v16 = 24;
        }
        break;
      case 0x1A:
        uint64_t v11 = *a3;
        int v12 = a3[1];
        unint64_t v13 = *(uint64_t ***)a4;
        size_t v22 = strlen(*(const char **)a4);
        if (v22)
        {
          size_t v15 = v22 - 1;
          if (v22 != 2049) {
            return !memcmp(v11, (char *)v13 + 1, v15) && v12 == (const void *)v15;
          }
          int v16 = 42;
        }
        else
        {
          int v16 = 24;
        }
        break;
      case 0x20:
        uint64_t v39 = a2[1];
        switch(*(_DWORD *)(v39 + 48))
        {
          case 1:
            int v40 = *a4;
            break;
          case 2:
            int v40 = *(__int16 *)a4;
            break;
          default:
            int v40 = *(_DWORD *)a4;
            break;
        }
        uint64_t v42 = a2[4];
        if (!v42) {
          return 0;
        }
        for (uint64_t i = (void *)(a2[3] + 16); *((unsigned char *)i - 8) == 5 || *i != v40; i += 4)
        {
          uint64_t result = 0;
          if (!--v42) {
            return result;
          }
        }
        if (a3[1] != (const void *)v40) {
          return 0;
        }
        a4 += *(void *)(v39 + 40);
        uint64_t v18 = *(i - 2);
        goto LABEL_102;
      default:
        if (v8 == 48) {
          goto LABEL_39;
        }
        goto LABEL_110;
    }
    sub_24B4A10C0(v7, v16);
  }
  if (*(unsigned __int8 *)a2 <= 0x5Fu)
  {
    switch(*(unsigned char *)a2)
    {
      case '@':
        uint64_t v24 = a2[1];
        uint64_t v25 = a2[4];
        switch(*(_DWORD *)(v24 + 48))
        {
          case 1:
            int v26 = *a4;
            break;
          case 2:
            int v26 = *(__int16 *)a4;
            break;
          default:
            int v26 = *(_DWORD *)a4;
            break;
        }
        if (!v25) {
          return 0;
        }
        size_t v41 = (void *)(a2[3] + 16);
        break;
      case 'A':
        goto LABEL_110;
      case 'B':
LABEL_31:
        uint64_t v23 = *(void *)(a2[1] + 8);
        switch(v23)
        {
          case 4:
            goto LABEL_37;
          case 2:
            int v9 = *(__int16 *)a4;
            break;
          case 1:
            int v9 = (char)*a4;
            break;
          default:
LABEL_37:
            int v9 = *(_DWORD *)a4;
            break;
        }
        int v10 = *(_DWORD *)a3;
        return v10 == v9;
      case 'C':
      case 'D':
LABEL_14:
        size_t v17 = (size_t)a3[1];
        return v17 == *(_DWORD *)a4 && !memcmp(*v5, *((const void **)a4 + 1), v17);
      default:
        JUMPOUT(0);
    }
    while (*v41 != v26)
    {
      uint64_t result = 0;
      v41 += 3;
      if (!--v25) {
        return result;
      }
    }
    if (a3[1] != (const void *)v26) {
      return 0;
    }
    a4 += *(void *)(v24 + 40);
    uint64_t v18 = *(v41 - 2);
LABEL_102:
    a3 = (const void **)*a3;
    a1 = v7;
    goto LABEL_20;
  }
  if (*(unsigned __int8 *)a2 > 0x7Fu)
  {
    if (v8 != 128 && v8 != 160) {
LABEL_110:
    }
      sub_24B4A10C0(a1, 16);
LABEL_19:
    uint64_t v18 = a2[2];
LABEL_20:
    uint64_t result = sub_24B496410(a1, v18, a3, a4);
    if (!result) {
      return result;
    }
    return 1;
  }
  if (v8 == 96) {
    goto LABEL_19;
  }
  if (v8 != 112) {
    goto LABEL_110;
  }
LABEL_39:
  int v27 = *(_DWORD *)a2[1];
  uint64_t v28 = (int *)a4;
  if (v27 != 182)
  {
    if (v27 != 181) {
LABEL_105:
    }
      sub_24B4A10C0(v7, 15);
    uint64_t v28 = (int *)(a4 + 16);
  }
  unsigned int v29 = (const void *)*v28;
  if (a3[1] != v29) {
    return 0;
  }
  if (!v29) {
    return 1;
  }
  uint64_t v30 = 0;
  for (uint64_t j = 1; ; ++j)
  {
    uint64_t v32 = a2[1];
    if (*(_DWORD *)v32 == 182)
    {
      uint64_t v35 = (char *)v4 + *(void *)(v32 + 40) + *(void *)(*(void *)(v32 + 24) + 8) * v30;
    }
    else
    {
      if (*(_DWORD *)v32 != 181) {
        goto LABEL_105;
      }
      char v33 = (void *)*v4;
      uint64_t v34 = j;
      if (*v4)
      {
        while (--v34)
        {
          char v33 = (void *)*v33;
          if (!v33) {
            goto LABEL_50;
          }
        }
        uint64_t v35 = (char *)v33 + *(void *)(v32 + 40);
      }
      else
      {
LABEL_50:
        uint64_t v35 = 0;
      }
    }
    uint64_t result = sub_24B496410(v7, a2[2], *((void *)*v5 + v30), v35);
    if (!result) {
      break;
    }
    if ((const void *)++v30 == v29) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_24B496AF4(uint64_t a1, void *a2, int a3, uint64_t **a4, uint64_t a5)
{
  uint64_t v5 = a2 + 3;
  unsigned int v6 = a2 + 7;
  uint64_t v7 = a2 + 4;
  unsigned int v8 = a2 + 8;
  if (a3 == 1)
  {
    uint64_t v7 = a2 + 2;
    unsigned int v8 = a2 + 6;
  }
  if (a3 != 2)
  {
    uint64_t v5 = v7;
    unsigned int v6 = v8;
  }
  uint64_t v9 = *v6;
  if (!*v6) {
    return 1;
  }
  for (uint64_t i = (void *)(*v5 + 16); ; i += 4)
  {
    unsigned int v16 = *((unsigned __int8 *)i - 8);
    if (v16 < 2)
    {
      if (a3 != 2)
      {
        uint64_t v19 = a5 + *(void *)(*(void *)(a2[1] + 24) + 24 * *i + 8);
        uint64_t v20 = *(i - 2);
        uint64_t v18 = **a4;
LABEL_18:
        uint64_t result = sub_24B496410(a1, v20, v18, v19);
        if (!result) {
          return result;
        }
        goto LABEL_19;
      }
    }
    else if (v16 != 2 && v16 != 3)
    {
      goto LABEL_19;
    }
    uint64_t v17 = *(void *)(a2[1] + 24);
    uint64_t v18 = **a4;
    if (*(unsigned char *)(a5 + **(void **)(v17 + 24 * *i + 16)) == 1)
    {
      if (!v18) {
        return 0;
      }
      uint64_t v19 = a5 + *(void *)(v17 + 24 * *i + 8);
      uint64_t v20 = *(i - 2);
      goto LABEL_18;
    }
    if (v18) {
      break;
    }
LABEL_19:
    ++*a4;
    if (!--v9) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_24B496C44(uint64_t result, uint64_t a2, int *a3)
{
  if ((*(unsigned char *)(a2 + 16) & 0x20) != 0 && *(void *)(a2 + 24) > *a3
    || (*(unsigned char *)(a2 + 16) & 8) != 0 && *(void *)(a2 + 32) < *a3)
  {
    return sub_24B4A103C(result, 18);
  }
  return result;
}

uint64_t sub_24B496C7C(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (*(void *)(a2 + 24) > a3 || *(char *)(a2 + 16) < 0 && *(void *)(a2 + 32) < a3) {
    return sub_24B4A103C(result, 19);
  }
  return result;
}

uint64_t sub_24B496CC8(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v5 = result;
  uint64_t v7 = a3 + 1;
  unint64_t v6 = a3[1];
  if (v6 < *(void *)(a2 + 40) || *(char *)(a2 + 32) < 0 && *(void *)(a2 + 48) < v6) {
    uint64_t result = sub_24B4A103C(result, 19);
  }
  if (*(void *)(a2 + 24) && *v7)
  {
    uint64_t v8 = 0;
    uint64_t v9 = *(unsigned __int8 **)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    while (1)
    {
      if (*(void *)(a2 + 24))
      {
        int v11 = *(unsigned __int8 *)(*a3 + v8);
        if (v11 != *v9) {
          break;
        }
      }
      uint64_t v12 = 0;
LABEL_11:
      if (v12 == v10) {
        return sub_24B4A103C(v5, 20);
      }
      if (++v8 == *v7) {
        return result;
      }
    }
    uint64_t v12 = 0;
    while (v10 - 1 != v12)
    {
      int v13 = v9[++v12];
      if (v11 == v13) {
        goto LABEL_11;
      }
    }
    return sub_24B4A103C(v5, 20);
  }
  return result;
}

uint64_t sub_24B496DC4(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (*(void *)(a2 + 32) > a3 || *(char *)(a2 + 24) < 0 && *(void *)(a2 + 40) < a3) {
    return sub_24B4A103C(result, 19);
  }
  return result;
}

void sub_24B496E14(uint64_t a1)
{
  sub_24B4AA64C(a1);
  JUMPOUT(0x24C5D2700);
}

uint64_t sub_24B496E4C(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  if (*(void *)(a1 + 8))
  {
    unint64_t v2 = (void *)sub_24B4A4C30();
    uint64_t v3 = *(unsigned int *)(*(void *)(a1 + 8) + 376);
    return sub_24B4A5AFC(v2, v3);
  }
  else
  {
    uint64_t v5 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v6[0] = 67109120;
      v6[1] = 513;
      _os_log_error_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v6, 8u);
    }
    return 0;
  }
}

void sub_24B496F44(uint64_t a1)
{
  __p[3] = *(void **)MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    *(_DWORD *)(v1 + 64) = 1;
    *(_WORD *)(v1 + 72) = *(_DWORD *)(v1 + 376);
    uint64_t v3 = sub_24B4AB040();
    sub_24B4AB4A8(v3, *(void *)(a1 + 8) + 80, *(_DWORD *)(*(void *)(a1 + 8) + 596));
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = sub_24B4AB040();
    uint64_t v6 = sub_24B4ABD9C(v5, *(_DWORD *)(v4 + 376));
    uint64_t v7 = *(void *)(a1 + 8);
    if (!v6) {
      goto LABEL_16;
    }
    uint64_t v8 = v6;
    if (v7 + 264 == v6 + 392)
    {
      *(unsigned char *)(v7 + 288) = *(unsigned char *)(v6 + 416);
      *(unsigned char *)(v7 + 296) = *(unsigned char *)(v6 + 424);
    }
    else
    {
      sub_24B3EAC0C((void *)(v7 + 264), *(char **)(v6 + 392), *(char **)(v6 + 400), *(void *)(v6 + 400) - *(void *)(v6 + 392));
      *(unsigned char *)(v7 + 288) = *(unsigned char *)(v8 + 416);
      *(unsigned char *)(v7 + 296) = *(unsigned char *)(v8 + 424);
      sub_24B3EAC0C((void *)(v7 + 304), *(char **)(v8 + 432), *(char **)(v8 + 440), *(void *)(v8 + 440) - *(void *)(v8 + 432));
      sub_24B3EAC0C((void *)(v7 + 328), *(char **)(v8 + 456), *(char **)(v8 + 464), *(void *)(v8 + 464) - *(void *)(v8 + 456));
      sub_24B3EAC0C((void *)(v7 + 352), *(char **)(v8 + 480), *(char **)(v8 + 488), *(void *)(v8 + 488) - *(void *)(v8 + 480));
      uint64_t v7 = *(void *)(a1 + 8);
    }
    *(_DWORD *)(v7 + 68) = 1;
    if (*(_DWORD *)(v8 + 20) == 1)
    {
      int v9 = *(unsigned __int8 *)(v8 + 24);
      uint64_t v10 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        __p[0] = (void *)0x30204000100;
        _os_log_error_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)__p, 8u);
      }
      if (v9 == 12)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        *(void *)(v11 + 64) = *(void *)(v8 + 56);
        *(_WORD *)(v11 + 72) = *(_WORD *)(v8 + 64);
        *(unsigned char *)(v11 + 80) = *(unsigned char *)(v8 + 72);
        sub_24B48BD54(v11 + 88, v8 + 80);
        if (v11 + 64 != v8 + 56)
        {
          sub_24B3EAC0C((void *)(v11 + 264), *(char **)(v8 + 256), *(char **)(v8 + 264), *(void *)(v8 + 264) - *(void *)(v8 + 256));
          *(unsigned char *)(v11 + 288) = *(unsigned char *)(v8 + 280);
          *(unsigned char *)(v11 + 296) = *(unsigned char *)(v8 + 288);
          sub_24B3EAC0C((void *)(v11 + 304), *(char **)(v8 + 296), *(char **)(v8 + 304), *(void *)(v8 + 304) - *(void *)(v8 + 296));
          sub_24B3EAC0C((void *)(v11 + 328), *(char **)(v8 + 320), *(char **)(v8 + 328), *(void *)(v8 + 328) - *(void *)(v8 + 320));
          sub_24B3EAC0C((void *)(v11 + 352), *(char **)(v8 + 344), *(char **)(v8 + 352), *(void *)(v8 + 352) - *(void *)(v8 + 344));
        }
      }
      sub_24B4AA6E4(a1, 7, *(void *)(a1 + 8));
      uint64_t v12 = sub_24B4A85B0(*(void *)(a1 + 8));
      uint64_t v13 = (uint64_t)v12;
      if (v12)
      {
        *(unsigned char *)(v12[5] + 456) = v9;
        *(_DWORD *)(v12[5] + 4) = 1;
        sub_24B48B4AC((uint64_t)v12);
        sub_24B3E39F4(__p, 0xBB8uLL);
        v14[0] = __p;
        v14[1] = 0;
        char v15 = 0;
        sub_24B48BBCC(v13);
        (*(void (**)(uint64_t, void *))(*(void *)v13 + 32))(v13, v14);
        sub_24B48B960(v13);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
      }
    }
    else
    {
LABEL_16:
      sub_24B4AA6E4(a1, 2, v7);
    }
  }
}

void sub_24B497258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_24B49727C(uint64_t a1, size_t a2)
{
  uint64_t v4 = malloc_type_calloc(1uLL, 0x18uLL, 0x10A0040319E9F20uLL);
  v4[1] = 0;
  v4[2] = 0;
  *uint64_t v4 = 0;
  v4[2] = *(void *)(a1 + 728);
  uint64_t v5 = malloc_type_calloc(1uLL, a2, 0x38E200F4uLL);
  bzero(v5, a2);
  *uint64_t v4 = v5;
  v4[1] = a2;
  if (!v5)
  {
    free(v4);
    sub_24B4A10C0(a1, 1);
  }
  *(void *)(a1 + 728) = v4;
  return v5;
}

void sub_24B49731C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(a1 + 728);
  if (!v3) {
    goto LABEL_12;
  }
  if ((void *)*v3 != a2)
  {
    do
    {
      uint64_t v4 = v3;
      uint64_t v3 = (void *)v3[2];
      if (!v3) {
        goto LABEL_12;
      }
    }
    while ((void *)*v3 != a2);
    if (v3[1] == a3)
    {
      uint64_t v5 = v4 + 2;
      goto LABEL_9;
    }
LABEL_12:
    sub_24B4A10C0(a1, 15);
  }
  if (v3[1] != a3) {
    goto LABEL_12;
  }
  uint64_t v5 = (void *)(a1 + 728);
LABEL_9:
  *uint64_t v5 = v3[2];
  free(a2);
  free(v3);
}

uint64_t sub_24B4973E4(uint64_t a1, unsigned __int8 *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_11:
    sub_24B47D810(v8, v6, v7, "asn1PD_SuplNotificationType");
    return v5;
  }
  unsigned __int8 v10 = 0;
  if (v4) {
    uint64_t v8 = sub_24B47F19C(a1, &v10);
  }
  else {
    uint64_t v8 = sub_24B47DB4C(a1, 0, 4u, &v10);
  }
  uint64_t v5 = v8;
  if (v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  if (v10 > 4u)
  {
    uint64_t v5 = 4;
    *(unsigned char *)(a1 + 16) = 4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = 4;
    goto LABEL_11;
  }
  uint64_t v5 = 0;
  *a2 = v10;
  return v5;
}

uint64_t sub_24B4974C4(uint64_t a1, unsigned __int8 *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  unsigned __int8 v10 = 0;
  if (v5)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
LABEL_11:
    sub_24B47D810(v8, v6, v7, "asn1PD_EncodingType");
    return v5;
  }
  if (v4) {
    uint64_t v8 = sub_24B47F19C(a1, &v10);
  }
  else {
    uint64_t v8 = sub_24B47DB4C(a1, 0, 2u, &v10);
  }
  uint64_t v5 = v8;
  if (v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  if (v10 > 2u)
  {
    uint64_t v5 = 4;
    *(unsigned char *)(a1 + 16) = 4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = 4;
    goto LABEL_11;
  }
  uint64_t v5 = 0;
  *a2 = v10;
  return v5;
}

uint64_t sub_24B4975A4(uint64_t a1, unsigned __int8 *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  unsigned __int8 v11 = 0;
  if (v5)
  {
    sub_24B47D810(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_FormatIndicator");
LABEL_7:
    int v7 = *(_DWORD *)(a1 + 8);
    int v8 = *(_DWORD *)(a1 + 12);
    unsigned int v9 = v5;
    goto LABEL_8;
  }
  if (v4) {
    uint64_t v6 = sub_24B47F19C(a1, &v11);
  }
  else {
    uint64_t v6 = sub_24B47DB4C(a1, 0, 7u, &v11);
  }
  uint64_t v5 = v6;
  if (v6) {
    goto LABEL_7;
  }
  if (v11 <= 7u)
  {
    uint64_t v5 = 0;
    *a2 = v11;
    return v5;
  }
  uint64_t v5 = 4;
  *(unsigned char *)(a1 + 16) = 4;
  int v7 = *(_DWORD *)(a1 + 8);
  int v8 = *(_DWORD *)(a1 + 12);
  unsigned int v9 = 4;
LABEL_8:
  sub_24B47D810(v9, v7, v8, "asn1PD_FormatIndicator");
  return v5;
}

uint64_t sub_24B497688(uint64_t a1, unsigned __int8 *a2)
{
  unsigned __int8 v7 = 0;
  uint64_t v4 = sub_24B47DB4C(a1, 0, 1u, &v7);
  if (v7 >= 2u)
  {
    uint64_t v5 = 4;
    *(unsigned char *)(a1 + 16) = 4;
    sub_24B47D810(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SLPMode");
  }
  else
  {
    uint64_t v5 = v4;
    *a2 = v7;
    if (!v4) {
      return v5;
    }
  }
  sub_24B47D810(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SLPMode");
  return v5;
}

uint64_t sub_24B497728(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 0x40u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_MAC");
  }
  return v3;
}

uint64_t sub_24B49777C(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 0x80u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_KeyIdentity");
  }
  return v3;
}

uint64_t sub_24B4977D0(uint64_t a1, unint64_t *a2)
{
  int v6 = 0;
  sub_24B47DDC8(a1, 1, 0x32u, &v6);
  sub_24B47E048(a1, 8 * v6, a2, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Notification_requestorId");
  }
  return v4;
}

uint64_t sub_24B49784C(uint64_t a1, unint64_t *a2)
{
  int v6 = 0;
  sub_24B47DDC8(a1, 1, 0x32u, &v6);
  sub_24B47E048(a1, 8 * v6, a2, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Notification_clientName");
  }
  return v4;
}

uint64_t sub_24B4978C8(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_15:
    sub_24B47D810(v8, v6, v7, "asn1PD_Notification");
    return v5;
  }
  int v9 = v4;
  *(_DWORD *)a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 4) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 8) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 12) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 16) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  uint64_t v8 = sub_24B4973E4(a1, (unsigned __int8 *)(a2 + 20));
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v8 = sub_24B4974C4(a1, (unsigned __int8 *)(a2 + 21));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    uint64_t v8 = sub_24B4977D0(a1, (unint64_t *)(a2 + 24));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    uint64_t v8 = sub_24B4975A4(a1, (unsigned __int8 *)(a2 + 48));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 12))
  {
    uint64_t v8 = sub_24B49784C(a1, (unint64_t *)(a2 + 56));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 16))
  {
    uint64_t v8 = sub_24B4975A4(a1, (unsigned __int8 *)(a2 + 80));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (!v9) {
    return 0;
  }
  uint64_t v8 = sub_24B47BB60(a1, a2);
  uint64_t v5 = v8;
  if (v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  return v5;
}

uint64_t sub_24B497B4C(uint64_t a1)
{
  *(_DWORD *)(a1 + 108) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_WORD *)(a1 + 44) = -1;
  *(unsigned char *)(a1 + 72) = -1;
  *(unsigned char *)(a1 + 104) = -1;
  *(_OWORD *)(a1 + 112) = 0u;
  *(unsigned char *)(a1 + 112) = -1;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  bzero((void *)(a1 + 232), 0x250uLL);
  *(unsigned char *)(a1 + 592) = -1;
  *(_OWORD *)(a1 + 684) = 0u;
  *(_OWORD *)(a1 + 700) = 0u;
  *(void *)(a1 + 728) = 0;
  *(_OWORD *)(a1 + 736) = 0u;
  *(_DWORD *)(a1 + 752) = 0;
  *(void *)(a1 + 760) = 0;
  *(_OWORD *)(a1 + 768) = 0u;
  *(_DWORD *)(a1 + 784) = 0;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(_OWORD *)(a1 + 656) = 0u;
  *(_OWORD *)(a1 + 665) = 0u;
  *(void *)(a1 + 808) = 0;
  *(_DWORD *)(a1 + 816) = 0;
  *(_OWORD *)(a1 + 792) = 0u;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 20) = 9;
  *(unsigned char *)(a1 + 224) = 0;
  return a1;
}

uint64_t sub_24B497C2C(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_15:
    sub_24B47D810(v8, v6, v7, "asn1PD_SUPLINIT");
    return v5;
  }
  int v9 = v4;
  *(_DWORD *)a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 4) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 8) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 12) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 16) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  uint64_t v8 = sub_24B49EFE0(a1, (unsigned __int8 *)(a2 + 20));
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v8 = sub_24B4978C8(a1, a2 + 24);
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    uint64_t v8 = sub_24B4A9474(a1, a2 + 112);
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    uint64_t v8 = sub_24B49F120(a1, a2 + 200);
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  uint64_t v8 = sub_24B497688(a1, (unsigned __int8 *)(a2 + 224));
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  if (*(_DWORD *)(a2 + 12))
  {
    uint64_t v8 = sub_24B497728(a1, (unint64_t *)(a2 + 232));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 16))
  {
    uint64_t v8 = sub_24B49777C(a1, (unint64_t *)(a2 + 256));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (!v9) {
    return 0;
  }
  uint64_t v8 = sub_24B47AF34(a1, a2);
  uint64_t v5 = v8;
  if (v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  return v5;
}

uint64_t sub_24B497ED8(uint64_t a1)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  uint64_t v2 = a1 + 32;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  uint64_t v3 = sub_24B47D534();
  int v4 = atomic_load((unsigned __int8 *)(v3 + 1));
  BOOL v5 = v4 == 255;
  uint64_t v6 = 1;
  if (v5) {
    uint64_t v6 = 2;
  }
  unsigned __int8 v7 = atomic_load((unsigned __int8 *)(v3 + v6));
  *(_WORD *)(a1 + 40) = -1;
  *(unsigned char *)(a1 + 34) = v7;
  *(_WORD *)(a1 + 35) = 0;
  *(void *)(a1 + 48) = 0;
  sub_24B4A9ECC(a1 + 56);
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = 0;
  sub_24B3E39F4((void *)(a1 + 392), 4uLL);
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = 0;
  *(unsigned char *)(a1 + 416) = -1;
  *(_DWORD *)(a1 + 20) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_WORD *)(a1 + 40) = 1;
  uint64_t v8 = (char *)operator new(0x338uLL, MEMORY[0x263F8C180]);
  int v9 = v8;
  if (v8)
  {
    *((_DWORD *)v8 + 27) = 0;
    *(_OWORD *)(v8 + 24) = 0u;
    *((_DWORD *)v8 + 10) = 0;
    *((void *)v8 + 6) = 0;
    *(_OWORD *)(v8 + 56) = 0u;
    *((void *)v8 + 10) = 0;
    *(_OWORD *)(v8 + 88) = 0u;
    *((_WORD *)v8 + 22) = -1;
    v8[72] = -1;
    v8[104] = -1;
    *((_OWORD *)v8 + 7) = 0u;
    *((_OWORD *)v8 + 8) = 0u;
    v8[112] = -1;
    *((_OWORD *)v8 + 12) = 0u;
    *((_OWORD *)v8 + 13) = 0u;
    *((_OWORD *)v8 + 10) = 0u;
    *((_OWORD *)v8 + 11) = 0u;
    *((_OWORD *)v8 + 9) = 0u;
    bzero(v8 + 232, 0x250uLL);
    v9[592] = -1;
    *(_OWORD *)(v9 + 684) = 0u;
    *(_OWORD *)(v9 + 700) = 0u;
    *((void *)v9 + 91) = 0;
    *((_OWORD *)v9 + 46) = 0u;
    *((_DWORD *)v9 + 188) = 0;
    *((void *)v9 + 95) = 0;
    *((_OWORD *)v9 + 48) = 0u;
    *((_DWORD *)v9 + 196) = 0;
    *((_OWORD *)v9 + 38) = 0u;
    *((_OWORD *)v9 + 39) = 0u;
    *((_OWORD *)v9 + 40) = 0u;
    *((_OWORD *)v9 + 41) = 0u;
    *(_OWORD *)(v9 + 665) = 0u;
    *((void *)v9 + 101) = 0;
    *((_DWORD *)v9 + 204) = 0;
    *(_OWORD *)(v9 + 792) = 0u;
    *(void *)int v9 = 0;
    *((void *)v9 + 1) = 0;
    *((_DWORD *)v9 + 4) = 0;
    v9[20] = 9;
    v9[224] = 0;
  }
  *(void *)(a1 + 48) = v9;
  unsigned __int8 v10 = operator new(8uLL, MEMORY[0x263F8C180]);
  if (v10) {
    *unsigned __int8 v10 = v2;
  }
  *(void *)(a1 + 8) = v10;
  return a1;
}

void sub_24B4980B4(_Unwind_Exception *a1)
{
  BOOL v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 376) = v5;
    operator delete(v5);
  }
  sub_24B4980EC(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_24B4980EC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 312);
  if (v2)
  {
    *(void *)(a1 + 320) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *(void **)(a1 + 288);
  if (v3)
  {
    *(void *)(a1 + 296) = v3;
    operator delete(v3);
  }
  int v4 = *(void **)(a1 + 264);
  if (v4)
  {
    *(void *)(a1 + 272) = v4;
    operator delete(v4);
  }
  BOOL v5 = *(void **)(a1 + 224);
  if (v5)
  {
    *(void *)(a1 + 232) = v5;
    operator delete(v5);
  }
  sub_24B4989A8(a1 + 48);
  sub_24B49CA78((unsigned __int16 *)(a1 + 8));
  return a1;
}

uint64_t sub_24B498160(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2) {
    MEMORY[0x24C5D2700](v2, 0x20C4093837F09);
  }
  *(void *)(a1 + 8) = 0;
  sub_24B4A6E04(a1 + 504);
  uint64_t v3 = *(void **)(a1 + 480);
  if (v3)
  {
    *(void *)(a1 + 488) = v3;
    operator delete(v3);
  }
  int v4 = *(void **)(a1 + 456);
  if (v4)
  {
    *(void *)(a1 + 464) = v4;
    operator delete(v4);
  }
  BOOL v5 = *(void **)(a1 + 432);
  if (v5)
  {
    *(void *)(a1 + 440) = v5;
    operator delete(v5);
  }
  uint64_t v6 = *(void **)(a1 + 392);
  if (v6)
  {
    *(void *)(a1 + 400) = v6;
    operator delete(v6);
  }
  unsigned __int8 v7 = *(void **)(a1 + 368);
  if (v7)
  {
    *(void *)(a1 + 376) = v7;
    operator delete(v7);
  }
  uint64_t v8 = *(void **)(a1 + 344);
  if (v8)
  {
    *(void *)(a1 + 352) = v8;
    operator delete(v8);
  }
  int v9 = *(void **)(a1 + 320);
  if (v9)
  {
    *(void *)(a1 + 328) = v9;
    operator delete(v9);
  }
  unsigned __int8 v10 = *(void **)(a1 + 296);
  if (v10)
  {
    *(void *)(a1 + 304) = v10;
    operator delete(v10);
  }
  unsigned __int8 v11 = *(void **)(a1 + 256);
  if (v11)
  {
    *(void *)(a1 + 264) = v11;
    operator delete(v11);
  }
  sub_24B4989A8(a1 + 80);
  sub_24B49CA78((unsigned __int16 *)(a1 + 40));
  return a1;
}

uint64_t sub_24B498250(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  v20[0] = 0;
  __p[1] = 0;
  uint64_t v22 = 0;
  __p[0] = 0;
  __int16 v23 = 7275;
  uint64_t v8 = sub_24B4AF924();
  uint64_t v9 = sub_24B4AFC64(v8, (uint64_t)v20, a3, a4);
  if (v9)
  {
    unsigned __int8 v10 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 67109120;
      int v25 = 515;
      _os_log_error_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    }
    goto LABEL_14;
  }
  uint64_t v11 = sub_24B47D534();
  int v12 = atomic_load((unsigned __int8 *)(v11 + 1));
  BOOL v13 = v12 == 255;
  uint64_t v14 = 1;
  if (v13) {
    uint64_t v14 = 2;
  }
  int v15 = atomic_load((unsigned __int8 *)(v11 + v14));
  if (v15 == 1)
  {
    unsigned int v16 = (char **)(a1 + 368);
LABEL_9:
    sub_24B4AE3EC(__p, v16, (void **)a2);
    goto LABEL_10;
  }
  uint64_t v17 = sub_24B4AB040();
  unsigned int v16 = (char **)(a1 + 368);
  if (*(_DWORD *)(v17 + 40)) {
    goto LABEL_9;
  }
  sub_24B4AE790(__p, v16, (void **)a2);
LABEL_10:
  unint64_t v18 = *(void *)(a2 + 8) - *(void *)a2;
  if (v18 > 7)
  {
    if (v18 != 8) {
      *(void *)(a2 + 8) = *(void *)a2 + 8;
    }
  }
  else
  {
    sub_24B3E3AC4((unint64_t *)a2, 8 - v18);
  }
LABEL_14:
  if (SHIBYTE(v22) < 0) {
    operator delete(__p[0]);
  }
  return v9;
}

void sub_24B4983E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B498404(uint64_t a1, uint64_t a2, const void **a3)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  std::string __p = 0;
  int v38 = 0;
  uint64_t v39 = 0;
  BOOL v5 = a3 + 1;
  sub_24B47A720(&__p, *a3, (uint64_t)a3[1], (unsigned char *)a3[1] - (unsigned char *)*a3);
  v35[0] = &__p;
  v35[1] = 0;
  char v36 = 0;
  v34[0] = v35;
  v34[1] = a1 + 32;
  uint64_t v6 = (char *)*a3;
  unsigned __int8 v7 = *v5;
  if (v6 != *v5)
  {
    size_t v8 = v7 - v6;
    unint64_t v9 = *(void *)(a1 + 384);
    unsigned __int8 v10 = *(char **)(a1 + 368);
    if (v9 - (unint64_t)v10 >= v7 - v6)
    {
      uint64_t v14 = *(unsigned char **)(a1 + 376);
      size_t v15 = v14 - v10;
      if (v14 - v10 < v8)
      {
        unsigned int v16 = &v6[v15];
        if (v14 != v10)
        {
          memmove(*(void **)(a1 + 368), v6, v15);
          unsigned __int8 v10 = *(char **)(a1 + 376);
        }
        if (v7 != v16) {
          memmove(v10, v16, v7 - v16);
        }
        uint64_t v17 = &v10[v7 - v16];
        goto LABEL_21;
      }
    }
    else
    {
      if (v10)
      {
        *(void *)(a1 + 376) = v10;
        operator delete(v10);
        unint64_t v9 = 0;
        *(void *)(a1 + 368) = 0;
        *(void *)(a1 + 376) = 0;
        *(void *)(a1 + 384) = 0;
      }
      if ((v8 & 0x8000000000000000) != 0) {
        sub_24B3E3AAC();
      }
      uint64_t v11 = 2 * v9;
      if (2 * v9 <= v8) {
        uint64_t v11 = v7 - v6;
      }
      if (v9 >= 0x3FFFFFFFFFFFFFFFLL) {
        size_t v12 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v12 = v11;
      }
      sub_24B3E3A68((void *)(a1 + 368), v12);
      unsigned __int8 v10 = *(char **)(a1 + 376);
    }
    memmove(v10, v6, v8);
    uint64_t v17 = &v10[v8];
LABEL_21:
    *(void *)(a1 + 376) = v17;
    goto LABEL_22;
  }
  BOOL v13 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)long long buf = 67109120;
    int v41 = 513;
    _os_log_error_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
LABEL_22:
  int v18 = sub_24B49D0F0((uint64_t)v34);
  if (*(_WORD *)(a1 + 40) == 1)
  {
    if (v18)
    {
      uint64_t v19 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 67109120;
        int v41 = 770;
        _os_log_error_impl(&dword_24B3DE000, v19, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      }
      char v20 = 3;
      goto LABEL_43;
    }
    uint64_t v23 = *(void *)(a1 + 48);
    LOBYTE(v24) = *(unsigned char *)(a1 + 34);
    if (*(_DWORD *)(v23 + 308)) {
      int v24 = *(_DWORD *)(v23 + 816);
    }
    if (!sub_24B47D668(*(unsigned __int8 *)(a1 + 34), v24))
    {
      uint64_t v26 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 67109120;
        int v41 = 515;
        _os_log_error_impl(&dword_24B3DE000, v26, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      }
      char v20 = 10;
      goto LABEL_43;
    }
    if (*(_DWORD *)(a1 + 56))
    {
      int v25 = qword_26B17C488;
      if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
LABEL_35:
        char v20 = 12;
LABEL_43:
        *(unsigned char *)(a1 + 24) = v20;
        goto LABEL_44;
      }
      *(_DWORD *)long long buf = 67109120;
      int v41 = 515;
    }
    else
    {
      if (*(unsigned char *)(v23 + 224))
      {
        int v27 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 67109120;
          int v41 = 515;
          _os_log_error_impl(&dword_24B3DE000, v27, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
        }
        char v20 = 13;
        goto LABEL_43;
      }
      if (*(unsigned char *)(v23 + 20) == 9 && !*(_DWORD *)v23)
      {
        uint64_t v32 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 67109120;
          int v41 = 515;
          _os_log_error_impl(&dword_24B3DE000, v32, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
        }
        char v20 = 4;
        goto LABEL_43;
      }
      if (*(_DWORD *)(a1 + 60))
      {
        if (!*(void *)(a1 + 8)) {
          goto LABEL_45;
        }
        uint64_t v30 = *(void *)(a1 + 48);
        if (*(unsigned __int8 *)(v30 + 20) - 11 > 1 || *(_DWORD *)(v30 + 304))
        {
          if (*(_DWORD *)(v30 + 300) != 1 || !*(unsigned char *)(v30 + 720)) {
            goto LABEL_45;
          }
          char v31 = 20;
        }
        else
        {
          char v31 = 7;
        }
        *(unsigned char *)(a1 + 24) = v31;
        char v33 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 67109120;
          int v41 = 515;
          _os_log_error_impl(&dword_24B3DE000, v33, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
        }
LABEL_44:
        *(_DWORD *)(a1 + 20) = 1;
LABEL_45:
        int v28 = sub_24B4AB040();
        sub_24B4AC8F0(v28, a1 + 392, a1 + 32);
        __int16 v22 = 0;
        goto LABEL_46;
      }
      int v25 = qword_26B17C488;
      if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
        goto LABEL_35;
      }
      *(_DWORD *)long long buf = 67109120;
      int v41 = 515;
    }
    _os_log_error_impl(&dword_24B3DE000, v25, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    goto LABEL_35;
  }
  size_t v21 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)long long buf = 67109120;
    int v41 = 515;
    _os_log_error_impl(&dword_24B3DE000, v21, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
  __int16 v22 = -5;
LABEL_46:
  if (__p)
  {
    int v38 = __p;
    operator delete(__p);
  }
  return v22;
}

void sub_24B49897C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B4989A8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 152);
  if (v2)
  {
    *(void *)(a1 + 160) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *(void **)(a1 + 128);
  if (v3)
  {
    *(void *)(a1 + 136) = v3;
    operator delete(v3);
  }
  int v4 = *(void **)(a1 + 96);
  if (v4)
  {
    *(void *)(a1 + 104) = v4;
    operator delete(v4);
  }
  BOOL v5 = *(void **)(a1 + 72);
  if (v5)
  {
    *(void *)(a1 + 80) = v5;
    operator delete(v5);
  }
  uint64_t v6 = *(void **)(a1 + 48);
  if (v6)
  {
    *(void *)(a1 + 56) = v6;
    operator delete(v6);
  }
  unsigned __int8 v7 = *(void **)(a1 + 24);
  if (v7)
  {
    *(void *)(a1 + 32) = v7;
    operator delete(v7);
  }
  size_t v8 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + 8) = v8;
    operator delete(v8);
  }
  return a1;
}

uint64_t sub_24B498A3C(uint64_t a1, unsigned __int8 *a2)
{
  int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_Status", buf, 2u);
  }
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    unsigned int v8 = *(unsigned __int8 *)(a1 + 16);
LABEL_10:
    sub_24B47D810(v8, v6, v7, "asn1PE_Status");
    goto LABEL_11;
  }
  unsigned int v9 = *a2;
  if (v9 >= 3)
  {
    uint64_t v5 = 4;
    *(unsigned char *)(a1 + 16) = 4;
    sub_24B47D810(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_Status");
    goto LABEL_9;
  }
  uint64_t v5 = sub_24B47DAA4(a1, 0, 2, v9);
  if (v5)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    unsigned int v8 = v5;
    goto LABEL_10;
  }
LABEL_11:
  unsigned __int8 v10 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)size_t v12 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_Status", v12, 2u);
  }
  return v5;
}

uint64_t sub_24B498B84(uint64_t a1, unsigned __int16 *a2)
{
  int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_UARFCN", buf, 2u);
  }
  uint64_t v5 = sub_24B47DAA4(a1, 0, 0x3FFF, *a2);
  uint64_t v6 = v5;
  if (v5) {
    sub_24B47D810(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_UARFCN");
  }
  int v7 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_UARFCN", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_24B498C74(uint64_t a1, unsigned __int8 *a2)
{
  int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int v28 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_FrequencyInfo", v28, 2u);
  }
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    unsigned int v8 = *(unsigned __int8 *)(a1 + 16);
LABEL_38:
    sub_24B47D810(v8, v6, v7, "asn1PE_FrequencyInfo");
    goto LABEL_39;
  }
  unsigned int v9 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int v28 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_FrequencyInfo_modeSpecificInfo", v28, 2u);
  }
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_FrequencyInfo_modeSpecificInfo");
LABEL_37:
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    unsigned int v8 = v5;
    goto LABEL_38;
  }
  uint64_t v10 = sub_24B47DAA4(a1, 0, 1, *a2);
  if (!v10)
  {
    if (*a2 != 1)
    {
      if (*a2)
      {
        uint64_t v5 = 4;
        *(unsigned char *)(a1 + 16) = 4;
        sub_24B47D810(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_FrequencyInfo_modeSpecificInfo");
        goto LABEL_32;
      }
      BOOL v13 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)int v28 = 0;
        _os_log_debug_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_FrequencyInfoFDD", v28, 2u);
      }
      sub_24B47D9A0((uint64_t **)a1, 0);
      uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_FrequencyInfoFDD");
        uint64_t v14 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)int v28 = 0;
          size_t v15 = "#gpsd,#supl Leaving asn1PE_FrequencyInfoFDD, EncodeBoolean failed";
LABEL_26:
          _os_log_debug_impl(&dword_24B3DE000, v14, OS_LOG_TYPE_DEBUG, v15, v28, 2u);
          goto LABEL_32;
        }
        goto LABEL_32;
      }
      sub_24B47D9A0((uint64_t **)a1, *((_DWORD *)a2 + 1));
      uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_FrequencyInfoFDD");
        uint64_t v14 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)int v28 = 0;
          size_t v15 = "#gpsd,#supl Leaving asn1PE_FrequencyInfoFDD, encode UARFCN failed";
          goto LABEL_26;
        }
LABEL_32:
        int v11 = *(_DWORD *)(a1 + 8);
        int v12 = *(_DWORD *)(a1 + 12);
        LODWORD(v10) = v5;
        goto LABEL_33;
      }
      if (*((_DWORD *)a2 + 1) && (uint64_t v24 = sub_24B498B84(a1, (unsigned __int16 *)a2 + 4), v24))
      {
        uint64_t v5 = v24;
        int v25 = *(_DWORD *)(a1 + 8);
        int v26 = *(_DWORD *)(a1 + 12);
      }
      else
      {
        uint64_t v24 = sub_24B498B84(a1, (unsigned __int16 *)a2 + 5);
        uint64_t v5 = v24;
        if (!v24)
        {
LABEL_48:
          char v20 = qword_26B17C488;
          if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_31;
          }
          *(_WORD *)int v28 = 0;
          int v27 = "#gpsd,#supl Leaving asn1PE_FrequencyInfoFDD";
LABEL_51:
          _os_log_debug_impl(&dword_24B3DE000, v20, OS_LOG_TYPE_DEBUG, v27, v28, 2u);
LABEL_31:
          if (!v5) {
            goto LABEL_34;
          }
          goto LABEL_32;
        }
        int v25 = *(_DWORD *)(a1 + 8);
        int v26 = *(_DWORD *)(a1 + 12);
      }
      sub_24B47D810(v24, v25, v26, "asn1PE_FrequencyInfoFDD");
      goto LABEL_48;
    }
    unsigned int v16 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)int v28 = 0;
      _os_log_debug_impl(&dword_24B3DE000, v16, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_FrequencyInfoTDD", v28, 2u);
    }
    sub_24B47D9A0((uint64_t **)a1, 0);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      int v17 = *(_DWORD *)(a1 + 8);
      int v18 = *(_DWORD *)(a1 + 12);
      LODWORD(v19) = *(unsigned __int8 *)(a1 + 16);
    }
    else
    {
      uint64_t v19 = sub_24B498B84(a1, (unsigned __int16 *)a2 + 6);
      uint64_t v5 = v19;
      if (!v19)
      {
LABEL_30:
        char v20 = qword_26B17C488;
        if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_31;
        }
        *(_WORD *)int v28 = 0;
        int v27 = "#gpsd,#supl Leaving asn1PE_FrequencyInfoTDD";
        goto LABEL_51;
      }
      int v17 = *(_DWORD *)(a1 + 8);
      int v18 = *(_DWORD *)(a1 + 12);
    }
    sub_24B47D810(v19, v17, v18, "asn1PE_FrequencyInfoTDD");
    goto LABEL_30;
  }
  uint64_t v5 = v10;
  int v11 = *(_DWORD *)(a1 + 8);
  int v12 = *(_DWORD *)(a1 + 12);
LABEL_33:
  sub_24B47D810(v10, v11, v12, "asn1PE_FrequencyInfo_modeSpecificInfo");
LABEL_34:
  size_t v21 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int v28 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v21, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_FrequencyInfo_modeSpecificInfo", v28, 2u);
  }
  if (v5) {
    goto LABEL_37;
  }
LABEL_39:
  __int16 v22 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int v28 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v22, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_FrequencyInfo", v28, 2u);
  }
  return v5;
}

uint64_t sub_24B49910C(uint64_t a1, unsigned __int16 *a2)
{
  int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CPICH_Ec_N0", buf, 2u);
  }
  uint64_t v5 = sub_24B47DAA4(a1, 0, 63, *a2);
  uint64_t v6 = v5;
  if (v5) {
    sub_24B47D810(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CPICH_Ec_N0");
  }
  int v7 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CPICH_Ec_N0", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_24B4991FC(uint64_t a1, unsigned __int16 *a2)
{
  int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CPICH_RSCP", buf, 2u);
  }
  uint64_t v5 = sub_24B47DAA4(a1, 0, 127, *a2);
  uint64_t v6 = v5;
  if (v5) {
    sub_24B47D810(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CPICH_RSCP");
  }
  int v7 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CPICH_RSCP", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_24B4992EC(uint64_t a1, unsigned __int8 *a2)
{
  int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_Pathloss", buf, 2u);
  }
  uint64_t v5 = sub_24B47DAA4(a1, 46, 173, *a2);
  uint64_t v6 = v5;
  if (v5) {
    sub_24B47D810(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_Pathloss");
  }
  int v7 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_Pathloss", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_24B4993DC(uint64_t a1, unsigned __int8 *a2)
{
  int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CellParametersID", buf, 2u);
  }
  uint64_t v5 = sub_24B47DAA4(a1, 0, 127, *a2);
  uint64_t v6 = v5;
  if (v5) {
    sub_24B47D810(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellParametersID");
  }
  int v7 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CellParametersID", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_24B4994CC(uint64_t a1, unsigned __int8 *a2)
{
  int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_TGSN", buf, 2u);
  }
  uint64_t v5 = sub_24B47DAA4(a1, 0, 14, *a2);
  uint64_t v6 = v5;
  if (v5) {
    sub_24B47D810(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_TGSN");
  }
  int v7 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leavinb asn1PE_TGSN", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_24B4995BC(uint64_t a1, unsigned __int16 *a2)
{
  int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_PrimaryCCPCH_RSCP", buf, 2u);
  }
  uint64_t v5 = sub_24B47DAA4(a1, 0, 127, *a2);
  uint64_t v6 = v5;
  if (v5) {
    sub_24B47D810(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PrimaryCCPCH_RSCP");
  }
  int v7 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = 0;
    _os_log_debug_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_PrimaryCCPCH_RSCP", (uint8_t *)v9, 2u);
  }
  return v6;
}

uint64_t sub_24B4996AC(uint64_t a1, _DWORD *a2)
{
  int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)size_t v15 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_TimeslotISCP_List", v15, 2u);
  }
  uint64_t v5 = sub_24B47DAA4(a1, 1, 14, a2[2] - *a2);
  if (v5)
  {
    uint64_t v6 = v5;
    sub_24B47D810(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_TimeslotISCP_List");
    return v6;
  }
  uint64_t v7 = *(void *)a2;
  unsigned int v8 = qword_26B17C488;
  if (*((void *)a2 + 1) == *(void *)a2)
  {
LABEL_18:
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      v13[0] = 0;
      _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_TimeslotISCP_List", (uint8_t *)v13, 2u);
    }
    return 0;
  }
  unint64_t v9 = 0;
  while (1)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_TimeslotISCP", buf, 2u);
    }
    uint64_t v10 = sub_24B47DAA4(a1, 0, 127, *(unsigned __int8 *)(v7 + v9));
    uint64_t v6 = v10;
    if (v10) {
      sub_24B47D810(v10, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_TimeslotISCP");
    }
    unsigned int v8 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
      break;
    }
    if (v6) {
      goto LABEL_16;
    }
LABEL_13:
    ++v9;
    uint64_t v7 = *(void *)a2;
    if (v9 >= *((void *)a2 + 1) - *(void *)a2) {
      goto LABEL_18;
    }
  }
  *(_WORD *)unsigned int v16 = 0;
  _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_TimeslotISCP", v16, 2u);
  unsigned int v8 = qword_26B17C488;
  if (!v6) {
    goto LABEL_13;
  }
LABEL_16:
  sub_24B47D810(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_TimeslotISCP_List");
  int v11 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v14 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_TimeslotISCP_List", v14, 2u);
  }
  return v6;
}

uint64_t sub_24B499904(uint64_t a1, uint64_t *a2)
{
  int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_MeasuredResultsList", buf, 2u);
  }
  uint64_t v5 = sub_24B47DAA4(a1, 1, 8, -1227133513 * ((unint64_t)(a2[1] - *a2) >> 3));
  if (v5)
  {
    uint64_t v6 = v5;
    sub_24B47D810(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResultsList");
    uint64_t v7 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
      return v6;
    }
    *(_WORD *)long long buf = 0;
LABEL_163:
    _os_log_debug_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_MeasuredResultsList", buf, 2u);
    return v6;
  }
  uint64_t v8 = *a2;
  unint64_t v9 = qword_26B17C488;
  if (a2[1] == *a2) {
    goto LABEL_148;
  }
  unint64_t v10 = 0;
  do
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_MeasuredResults", buf, 2u);
    }
    int v11 = (int *)(v8 + 56 * v10);
    sub_24B47D9A0((uint64_t **)a1, *v11);
    uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResults");
      BOOL v63 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        goto LABEL_160;
      }
      goto LABEL_161;
    }
    sub_24B47D9A0((uint64_t **)a1, v11[1]);
    uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResults");
      BOOL v63 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        goto LABEL_160;
      }
      goto LABEL_161;
    }
    sub_24B47D9A0((uint64_t **)a1, v11[2]);
    uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResults");
      BOOL v63 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        goto LABEL_160;
      }
LABEL_161:
      sub_24B47D810(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResultsList");
      uint64_t v7 = qword_26B17C488;
      if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
        return v6;
      }
      *(_WORD *)long long buf = 0;
      goto LABEL_163;
    }
    if (*v11)
    {
      uint64_t v12 = sub_24B498C74(a1, (unsigned __int8 *)(v8 + 56 * v10 + 12));
      if (v12)
      {
        uint64_t v6 = v12;
        sub_24B47D810(v12, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResults");
        goto LABEL_161;
      }
    }
    if (v11[1])
    {
      BOOL v13 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_debug_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_UTRA_CarrierRSSI", buf, 2u);
      }
      uint64_t v14 = sub_24B47DAA4(a1, 0, 127, *(unsigned __int8 *)(v8 + 56 * v10 + 28));
      uint64_t v6 = v14;
      if (v14) {
        sub_24B47D810(v14, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_UTRA_CarrierRSSI");
      }
      size_t v15 = qword_26B17C488;
      if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        if (v6) {
          goto LABEL_158;
        }
        goto LABEL_22;
      }
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v15, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_UTRA_CarrierRSSI", buf, 2u);
      if (v6)
      {
LABEL_158:
        sub_24B47D810(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResults");
        BOOL v63 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)long long buf = 0;
LABEL_160:
          _os_log_debug_impl(&dword_24B3DE000, v63, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_MeasuredResults", buf, 2u);
        }
        goto LABEL_161;
      }
    }
LABEL_22:
    if (!v11[2])
    {
      uint64_t v6 = 0;
      goto LABEL_137;
    }
    unsigned int v16 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v16, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CellMeasuredResultsList", buf, 2u);
    }
    int v17 = (uint64_t *)(v8 + 56 * v10 + 32);
    uint64_t v18 = sub_24B47DAA4(a1, 1, 32, -1171354717 * ((unint64_t)(*(void *)(v8 + 56 * v10 + 40) - *v17) >> 3));
    if (v18)
    {
      uint64_t v6 = v18;
      sub_24B47D810(v18, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResultsList");
      uint64_t v19 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_27;
      }
      goto LABEL_28;
    }
    uint64_t v20 = *v17;
    size_t v21 = qword_26B17C488;
    if (*(void *)(v8 + 56 * v10 + 40) == *(void *)(v8 + 56 * v10 + 32))
    {
LABEL_134:
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_debug_impl(&dword_24B3DE000, v21, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CellMeasuredResultsList", buf, 2u);
      }
      uint64_t v6 = 0;
      goto LABEL_137;
    }
    unint64_t v22 = 0;
    uint64_t v23 = 32;
    while (1)
    {
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_debug_impl(&dword_24B3DE000, v21, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CellMeasuredResults", buf, 2u);
      }
      sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(v20 + v23 - 32));
      uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16)) {
        break;
      }
      if (*(_DWORD *)(v20 + v23 - 32))
      {
        uint64_t v24 = sub_24B47DAA4(a1, 0, 0xFFFFFFF, *(_DWORD *)(v20 + v23 - 28));
        if (v24)
        {
          uint64_t v6 = v24;
          int v25 = *(_DWORD *)(a1 + 8);
          int v26 = *(_DWORD *)(a1 + 12);
          goto LABEL_87;
        }
      }
      int v27 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_debug_impl(&dword_24B3DE000, v27, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CellMeasuredResults_modeSpecificInfo", buf, 2u);
      }
      uint64_t v28 = sub_24B47DAA4(a1, 0, 1, *(char *)(v20 + v23 - 24));
      if (v28)
      {
        uint64_t v6 = v28;
        int v29 = *(_DWORD *)(a1 + 8);
        int v30 = *(_DWORD *)(a1 + 12);
LABEL_83:
        sub_24B47D810(v28, v29, v30, "asn1PE_CellMeasuredResults_modeSpecificInfo");
        goto LABEL_84;
      }
      int v31 = *(unsigned __int8 *)(v20 + v23 - 24);
      if (v31 == 255)
      {
        uint64_t v6 = 1;
        *(unsigned char *)(a1 + 16) = 1;
        int v36 = *(_DWORD *)(a1 + 8);
        int v37 = *(_DWORD *)(a1 + 12);
        unsigned int v38 = 1;
        goto LABEL_57;
      }
      if (v31 != 1)
      {
        if (*(unsigned char *)(v20 + v23 - 24))
        {
          uint64_t v6 = 4;
          *(unsigned char *)(a1 + 16) = 4;
          int v36 = *(_DWORD *)(a1 + 8);
          int v37 = *(_DWORD *)(a1 + 12);
          unsigned int v38 = 4;
LABEL_57:
          sub_24B47D810(v38, v36, v37, "asn1PE_CellMeasuredResults_modeSpecificInfo");
          goto LABEL_82;
        }
        uint64_t v32 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)long long buf = 0;
          _os_log_debug_impl(&dword_24B3DE000, v32, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CellMeasuredResults_modeSpecificInfo_fdd", buf, 2u);
        }
        sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(v20 + v23 - 16));
        uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
        if (*(unsigned char *)(a1 + 16))
        {
          sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_fdd");
          uint64_t v33 = qword_26B17C488;
          if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_82;
          }
LABEL_49:
          *(_WORD *)long long buf = 0;
          uint64_t v34 = v33;
          uint64_t v35 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_fdd, encode BOOL failed";
LABEL_81:
          _os_log_debug_impl(&dword_24B3DE000, v34, OS_LOG_TYPE_DEBUG, v35, buf, 2u);
          goto LABEL_82;
        }
        sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(v20 + v23 - 12));
        uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
        if (*(unsigned char *)(a1 + 16))
        {
          sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_fdd");
          uint64_t v33 = qword_26B17C488;
          if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_82;
          }
          goto LABEL_49;
        }
        sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(v20 + v23 - 8));
        uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
        if (*(unsigned char *)(a1 + 16))
        {
          sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_fdd");
          uint64_t v41 = qword_26B17C488;
          if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_82;
          }
          *(_WORD *)long long buf = 0;
          uint64_t v34 = v41;
          uint64_t v35 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_fdd, encode CPICH_info failed";
          goto LABEL_81;
        }
        uint64_t v65 = v20 + v23;
        uint64_t v42 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)long long buf = 0;
          _os_log_debug_impl(&dword_24B3DE000, v42, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_PrimaryCPICH_Info", buf, 2u);
        }
        uint64_t v43 = sub_24B47DAA4(a1, 0, 511, *(unsigned __int16 *)(v20 + v23 - 4));
        uint64_t v6 = v43;
        if (v43) {
          sub_24B47D810(v43, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PrimaryCPICH_Info");
        }
        size_t v44 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)long long buf = 0;
          _os_log_debug_impl(&dword_24B3DE000, v44, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_PrimaryCPICH_Info", buf, 2u);
          if (v6)
          {
LABEL_76:
            sub_24B47D810(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_fdd");
            uint64_t v45 = qword_26B17C488;
            if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
              goto LABEL_82;
            }
            *(_WORD *)long long buf = 0;
            uint64_t v34 = v45;
            uint64_t v35 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_fdd, encode cpich_ec_n0 failed";
            goto LABEL_81;
          }
        }
        else if (v6)
        {
          goto LABEL_76;
        }
        if (*(_DWORD *)(v20 + v23 - 16))
        {
          uint64_t v54 = sub_24B49910C(a1, (unsigned __int16 *)(v20 + v23 - 2));
          if (v54)
          {
            uint64_t v6 = v54;
            sub_24B47D810(v54, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_fdd");
            uint64_t v55 = qword_26B17C488;
            if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
              goto LABEL_82;
            }
            *(_WORD *)long long buf = 0;
            uint64_t v34 = v55;
            uint64_t v35 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_fdd, encode cpich_rsrp failed";
            goto LABEL_81;
          }
        }
        if (*(_DWORD *)(v65 - 12))
        {
          uint64_t v56 = sub_24B4991FC(a1, (unsigned __int16 *)(v20 + v23));
          if (v56)
          {
            uint64_t v6 = v56;
            int v57 = *(_DWORD *)(a1 + 8);
            int v58 = *(_DWORD *)(a1 + 12);
            goto LABEL_121;
          }
        }
        if (*(_DWORD *)(v65 - 8))
        {
          uint64_t v56 = sub_24B4992EC(a1, (unsigned __int8 *)(v20 + v23 + 2));
          uint64_t v6 = v56;
          if (v56)
          {
            int v57 = *(_DWORD *)(a1 + 8);
            int v58 = *(_DWORD *)(a1 + 12);
LABEL_121:
            sub_24B47D810(v56, v57, v58, "asn1PE_CellMeasuredResults_modeSpecificInfo_fdd");
          }
        }
        else
        {
          uint64_t v6 = 0;
        }
        uint64_t v59 = qword_26B17C488;
        if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_124;
        }
        *(_WORD *)long long buf = 0;
        uint64_t v60 = v59;
        uint64_t v61 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_fdd";
        goto LABEL_133;
      }
      uint64_t v39 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_debug_impl(&dword_24B3DE000, v39, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_CellMeasuredResults_modeSpecificInfo_tdd", buf, 2u);
      }
      sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(v20 + v23 + 8));
      uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
        uint64_t v40 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_80;
        }
LABEL_82:
        int v29 = *(_DWORD *)(a1 + 8);
        int v30 = *(_DWORD *)(a1 + 12);
        LODWORD(v28) = v6;
        goto LABEL_83;
      }
      uint64_t v67 = v20 + v23;
      sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(v20 + v23 + 12));
      uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
        uint64_t v40 = qword_26B17C488;
        if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_82;
        }
        goto LABEL_80;
      }
      sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(v67 + 16));
      uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
        uint64_t v40 = qword_26B17C488;
        if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_82;
        }
LABEL_80:
        *(_WORD *)long long buf = 0;
        uint64_t v34 = v40;
        uint64_t v35 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_tdd";
        goto LABEL_81;
      }
      uint64_t v66 = v20 + v23;
      sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(v20 + v23 + 20));
      uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
        uint64_t v40 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_80;
        }
        goto LABEL_82;
      }
      uint64_t v47 = sub_24B4993DC(a1, (unsigned __int8 *)(v66 + 24));
      uint64_t v6 = v47;
      if (v47 || !*(_DWORD *)(v20 + v23 + 8))
      {
        sub_24B47D810(v47, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
        uint64_t v53 = qword_26B17C488;
        if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_124;
        }
      }
      else
      {
        uint64_t v48 = sub_24B4994CC(a1, (unsigned __int8 *)(v20 + v23 + 25));
        uint64_t v6 = v48;
        if (v48 || !*(_DWORD *)(v67 + 12))
        {
          sub_24B47D810(v48, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
          uint64_t v53 = qword_26B17C488;
          if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_124;
          }
        }
        else
        {
          uint64_t v49 = sub_24B4995BC(a1, (unsigned __int16 *)(v20 + v23 + 26));
          uint64_t v6 = v49;
          if (!v49 && *(_DWORD *)(v67 + 16))
          {
            uint64_t v50 = sub_24B4992EC(a1, (unsigned __int8 *)(v20 + v23 + 28));
            uint64_t v6 = v50;
            if (v50 || !*(_DWORD *)(v66 + 20))
            {
              int v51 = *(_DWORD *)(a1 + 8);
              int v52 = *(_DWORD *)(a1 + 12);
LABEL_129:
              sub_24B47D810(v50, v51, v52, "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
            }
            else
            {
              uint64_t v50 = sub_24B4996AC(a1, (_DWORD *)(v20 + v23 + 32));
              uint64_t v6 = v50;
              if (v50)
              {
                int v51 = *(_DWORD *)(a1 + 8);
                int v52 = *(_DWORD *)(a1 + 12);
                goto LABEL_129;
              }
            }
            uint64_t v53 = qword_26B17C488;
            if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
              goto LABEL_124;
            }
            goto LABEL_131;
          }
          sub_24B47D810(v49, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults_modeSpecificInfo_tdd");
          uint64_t v53 = qword_26B17C488;
          if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_124;
          }
        }
      }
LABEL_131:
      *(_WORD *)long long buf = 0;
      uint64_t v60 = v53;
      uint64_t v61 = "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo_tdd";
LABEL_133:
      _os_log_debug_impl(&dword_24B3DE000, v60, OS_LOG_TYPE_DEBUG, v61, buf, 2u);
LABEL_124:
      if (v6) {
        goto LABEL_82;
      }
LABEL_84:
      size_t v46 = qword_26B17C488;
      if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        if (!v6) {
          goto LABEL_88;
        }
LABEL_86:
        int v25 = *(_DWORD *)(a1 + 8);
        int v26 = *(_DWORD *)(a1 + 12);
        LODWORD(v24) = v6;
LABEL_87:
        sub_24B47D810(v24, v25, v26, "asn1PE_CellMeasuredResults");
        goto LABEL_88;
      }
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v46, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CellMeasuredResults_modeSpecificInfo", buf, 2u);
      if (v6) {
        goto LABEL_86;
      }
LABEL_88:
      size_t v21 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_debug_impl(&dword_24B3DE000, v21, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CellMeasuredResults", buf, 2u);
        size_t v21 = qword_26B17C488;
        if (v6) {
          goto LABEL_144;
        }
      }
      else if (v6)
      {
        goto LABEL_144;
      }
      ++v22;
      uint64_t v20 = *v17;
      v23 += 88;
      if (v22 >= 0x2E8BA2E8BA2E8BA3 * ((v17[1] - *v17) >> 3)) {
        goto LABEL_134;
      }
    }
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResults");
    int v62 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v62, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CellMeasuredResults", buf, 2u);
    }
LABEL_144:
    sub_24B47D810(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_CellMeasuredResultsList");
    uint64_t v19 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
LABEL_27:
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v19, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_CellMeasuredResultsList", buf, 2u);
    }
LABEL_28:
    sub_24B47D810(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_MeasuredResults");
LABEL_137:
    unint64_t v9 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_MeasuredResults", buf, 2u);
      unint64_t v9 = qword_26B17C488;
    }
    if (v6) {
      goto LABEL_161;
    }
    ++v10;
    uint64_t v8 = *a2;
  }
  while (v10 < 0x6DB6DB6DB6DB6DB7 * ((a2[1] - *a2) >> 3));
LABEL_148:
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_MeasuredResultsList", buf, 2u);
  }
  return 0;
}

uint64_t sub_24B49A9DC(uint64_t a1, uint64_t a2)
{
  int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v14 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_WcdmaCellInformation", v14, 2u);
  }
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
    uint64_t v6 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t v14 = 0;
LABEL_24:
      _os_log_debug_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_WcdmaCellInformation", v14, 2u);
    }
  }
  else
  {
    sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)a2);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
      uint64_t v6 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t v14 = 0;
        goto LABEL_24;
      }
    }
    else
    {
      sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 4));
      uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
        uint64_t v6 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)uint64_t v14 = 0;
          goto LABEL_24;
        }
      }
      else
      {
        sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 8));
        uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
        if (*(unsigned char *)(a1 + 16))
        {
          sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
          uint64_t v6 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)uint64_t v14 = 0;
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t v7 = sub_24B47DAA4(a1, 0, 999, *(unsigned __int16 *)(a2 + 12));
          if (v7)
          {
            uint64_t v5 = v7;
            sub_24B47D810(v7, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
            uint64_t v6 = qword_26B17C488;
            if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
            {
              *(_WORD *)uint64_t v14 = 0;
              goto LABEL_24;
            }
          }
          else
          {
            uint64_t v8 = sub_24B47DAA4(a1, 0, 999, *(unsigned __int16 *)(a2 + 14));
            if (v8)
            {
              uint64_t v5 = v8;
              sub_24B47D810(v8, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
              uint64_t v6 = qword_26B17C488;
              if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
              {
                *(_WORD *)uint64_t v14 = 0;
                goto LABEL_24;
              }
            }
            else
            {
              uint64_t v9 = sub_24B47DAA4(a1, 0, 0xFFFFFFF, *(_DWORD *)(a2 + 16));
              if (v9)
              {
                uint64_t v5 = v9;
                sub_24B47D810(v9, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
                uint64_t v6 = qword_26B17C488;
                if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
                {
                  *(_WORD *)uint64_t v14 = 0;
                  goto LABEL_24;
                }
              }
              else
              {
                if (*(_DWORD *)a2)
                {
                  uint64_t v11 = sub_24B498C74(a1, (unsigned __int8 *)(a2 + 20));
                  if (v11)
                  {
                    uint64_t v5 = v11;
                    sub_24B47D810(v11, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
                    uint64_t v6 = qword_26B17C488;
                    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
                      return v5;
                    }
                    *(_WORD *)uint64_t v14 = 0;
                    goto LABEL_24;
                  }
                }
                if (*(_DWORD *)(a2 + 4))
                {
                  uint64_t v12 = sub_24B47DAA4(a1, 0, 511, *(unsigned __int16 *)(a2 + 36));
                  if (v12)
                  {
                    uint64_t v5 = v12;
                    sub_24B47D810(v12, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
                    uint64_t v6 = qword_26B17C488;
                    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
                      return v5;
                    }
                    *(_WORD *)uint64_t v14 = 0;
                    goto LABEL_24;
                  }
                }
                if (*(_DWORD *)(a2 + 8))
                {
                  uint64_t v13 = sub_24B499904(a1, (uint64_t *)(a2 + 40));
                  uint64_t v5 = v13;
                  if (v13) {
                    sub_24B47D810(v13, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_WcdmaCellInformation");
                  }
                }
                else
                {
                  uint64_t v5 = 0;
                }
                uint64_t v6 = qword_26B17C488;
                if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
                {
                  *(_WORD *)uint64_t v14 = 0;
                  goto LABEL_24;
                }
              }
            }
          }
        }
      }
    }
  }
  return v5;
}

uint64_t sub_24B49AE04(uint64_t a1, uint64_t *a2)
{
  int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v18 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_NMR", v18, 2u);
  }
  uint64_t v5 = sub_24B47DAA4(a1, 1, 15, -1431655765 * ((unint64_t)(a2[1] - *a2) >> 2));
  if (v5)
  {
    uint64_t v6 = v5;
    sub_24B47D810(v5, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_NMR");
    uint64_t v7 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t v18 = 0;
LABEL_31:
      _os_log_debug_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_NMR", v18, 2u);
    }
  }
  else
  {
    uint64_t v8 = *a2;
    uint64_t v9 = qword_26B17C488;
    if (a2[1] == *a2)
    {
LABEL_21:
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t v18 = 0;
        _os_log_debug_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_NMR", v18, 2u);
      }
      return 0;
    }
    else
    {
      uint64_t v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)uint64_t v18 = 0;
          _os_log_debug_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Entered asn1PE_NMRelement", v18, 2u);
        }
        sub_24B47D9A0((uint64_t **)a1, 0);
        uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
        if (*(unsigned char *)(a1 + 16))
        {
          sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_NMRelement");
          unsigned int v16 = qword_26B17C488;
          if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_29;
          }
          *(_WORD *)uint64_t v18 = 0;
          goto LABEL_34;
        }
        uint64_t v12 = sub_24B47DAA4(a1, 0, 1023, *(_DWORD *)(v8 + v10));
        if (v12)
        {
          uint64_t v6 = v12;
          sub_24B47D810(v12, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_NMRelement");
          unsigned int v16 = qword_26B17C488;
          if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_29;
          }
          *(_WORD *)uint64_t v18 = 0;
          goto LABEL_34;
        }
        uint64_t v13 = v8 + v10;
        uint64_t v14 = sub_24B47DAA4(a1, 0, 63, *(_DWORD *)(v13 + 4));
        if (v14) {
          break;
        }
        uint64_t v15 = sub_24B47DAA4(a1, 0, 63, *(_DWORD *)(v13 + 8));
        uint64_t v6 = v15;
        if (v15) {
          sub_24B47D810(v15, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_NMRelement");
        }
        uint64_t v9 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)uint64_t v18 = 0;
          _os_log_debug_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_NMRelement", v18, 2u);
          uint64_t v9 = qword_26B17C488;
          if (v6) {
            goto LABEL_29;
          }
        }
        else if (v6)
        {
          goto LABEL_29;
        }
        ++v11;
        uint64_t v8 = *a2;
        v10 += 12;
        if (v11 >= 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 2)) {
          goto LABEL_21;
        }
      }
      uint64_t v6 = v14;
      sub_24B47D810(v14, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_NMRelement");
      unsigned int v16 = qword_26B17C488;
      if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_29;
      }
      *(_WORD *)uint64_t v18 = 0;
LABEL_34:
      _os_log_debug_impl(&dword_24B3DE000, v16, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving asn1PE_NMRelement", v18, 2u);
LABEL_29:
      sub_24B47D810(v6, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_NMR");
      uint64_t v7 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t v18 = 0;
        goto LABEL_31;
      }
    }
  }
  return v6;
}

uint64_t sub_24B49B1CC(uint64_t a1, uint64_t a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_15:
    sub_24B47D810(v7, v5, v6, "asn1PE_GsmCellInformation");
    return v4;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)a2);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 4));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 999, *(unsigned __int16 *)(a2 + 8));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 999, *(unsigned __int16 *)(a2 + 10));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 0xFFFF, *(unsigned __int16 *)(a2 + 12));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 0xFFFF, *(unsigned __int16 *)(a2 + 14));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v7 = sub_24B49AE04(a1, (uint64_t *)(a2 + 16));
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (!*(_DWORD *)(a2 + 4)) {
    return 0;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 255, *(unsigned __int8 *)(a2 + 40));
  uint64_t v4 = v7;
  if (v7)
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  return v4;
}

uint64_t sub_24B49B3B0(uint64_t a1)
{
  if (*(unsigned char *)a1 == 4)
  {
    uint64_t v2 = *(void *)(a1 + 144);
    if (v2)
    {
      uint64_t v9 = (void **)(v2 + 144);
      sub_24B49BF00(&v9);
      uint64_t v3 = *(void **)(v2 + 112);
      if (v3)
      {
        *(void *)(v2 + 120) = v3;
        operator delete(v3);
      }
      uint64_t v4 = *(void **)(v2 + 80);
      if (v4)
      {
        *(void *)(v2 + 88) = v4;
        operator delete(v4);
      }
      int v5 = *(void **)(v2 + 56);
      if (v5)
      {
        *(void *)(v2 + 64) = v5;
        operator delete(v5);
      }
      int v6 = *(void **)(v2 + 32);
      if (v6)
      {
        *(void *)(v2 + 40) = v6;
        operator delete(v6);
      }
      MEMORY[0x24C5D2700](v2, 0x1030C40753A10ABLL);
      *(void *)(a1 + 144) = 0;
    }
  }
  uint64_t v9 = (void **)(a1 + 96);
  sub_24B49C010(&v9);
  uint64_t v7 = *(void **)(a1 + 24);
  if (v7)
  {
    *(void *)(a1 + 32) = v7;
    operator delete(v7);
  }
  return a1;
}

uint64_t sub_24B49B47C(uint64_t a1, unsigned __int8 *a2)
{
  int v4 = *a2;
  sub_24B47D9A0((uint64_t **)a1, v4 == 4);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
  }
  else if (v4 == 4)
  {
    if (*((void *)a2 + 18))
    {
      uint64_t v8 = sub_24B47A4A4(a1, (uint64_t)a2);
      uint64_t v5 = v8;
      if (!v8) {
        return v5;
      }
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      uint64_t v5 = 1;
      LODWORD(v8) = 1;
    }
  }
  else
  {
    uint64_t v8 = sub_24B47DAA4(a1, 0, 2, *a2 - 1);
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      uint64_t v5 = 0;
      switch(*a2)
      {
        case 0u:
        case 3u:
          uint64_t v5 = 1;
          *(unsigned char *)(a1 + 16) = 1;
          int v10 = *(_DWORD *)(a1 + 8);
          int v11 = *(_DWORD *)(a1 + 12);
          unsigned int v12 = 1;
          goto LABEL_19;
        case 1u:
          uint64_t v13 = sub_24B49B1CC(a1, (uint64_t)(a2 + 8));
          goto LABEL_16;
        case 2u:
          uint64_t v13 = sub_24B49A9DC(a1, (uint64_t)(a2 + 56));
LABEL_16:
          uint64_t v5 = v13;
          if (!v13) {
            return v5;
          }
          goto LABEL_20;
        case 4u:
          return v5;
        default:
          uint64_t v5 = 4;
          *(unsigned char *)(a1 + 16) = 4;
          int v10 = *(_DWORD *)(a1 + 8);
          int v11 = *(_DWORD *)(a1 + 12);
          unsigned int v12 = 4;
LABEL_19:
          sub_24B47D810(v12, v10, v11, "asn1PE_CellInfo");
LABEL_20:
          int v6 = *(_DWORD *)(a1 + 8);
          int v7 = *(_DWORD *)(a1 + 12);
          LODWORD(v8) = v5;
          break;
      }
    }
  }
  sub_24B47D810(v8, v6, v7, "asn1PE_CellInfo");
  return v5;
}

uint64_t sub_24B49B64C(uint64_t a1, unsigned __int8 *a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_7:
    sub_24B47D810(v7, v5, v6, "asn1PE_LocationId");
    return v4;
  }
  uint64_t v7 = sub_24B49B47C(a1, a2);
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  uint64_t v7 = sub_24B498A3C(a1, a2 + 152);
  uint64_t v4 = v7;
  if (v7)
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  return v4;
}

uint64_t sub_24B49B6F8(uint64_t a1, uint64_t a2)
{
  v72[1] = *(void ***)MEMORY[0x263EF8340];
  if (*(unsigned char *)a1 == 4)
  {
    uint64_t v4 = *(void *)(a1 + 144);
    if (v4)
    {
      v72[0] = (void **)(v4 + 144);
      sub_24B49BF00(v72);
      int v5 = *(void **)(v4 + 112);
      if (v5)
      {
        *(void *)(v4 + 120) = v5;
        operator delete(v5);
      }
      int v6 = *(void **)(v4 + 80);
      if (v6)
      {
        *(void *)(v4 + 88) = v6;
        operator delete(v6);
      }
      uint64_t v7 = *(void **)(v4 + 56);
      if (v7)
      {
        *(void *)(v4 + 64) = v7;
        operator delete(v7);
      }
      uint64_t v8 = *(void **)(v4 + 32);
      if (v8)
      {
        *(void *)(v4 + 40) = v8;
        operator delete(v8);
      }
      MEMORY[0x24C5D2700](v4, 0x1030C40753A10ABLL);
      *(void *)(a1 + 144) = 0;
    }
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  switch(*(unsigned char *)a2)
  {
    case 0:
      uint64_t v9 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        v72[0] = (void **)0x20304000100;
        goto LABEL_38;
      }
      return a1;
    case 1:
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      if (a1 == a2) {
        goto LABEL_65;
      }
      uint64_t v33 = *(char **)(a1 + 24);
      uint64_t v34 = *(char **)(a2 + 24);
      uint64_t v35 = *(unsigned char **)(a2 + 32);
      size_t v36 = v35 - v34;
      unint64_t v37 = 0xAAAAAAAAAAAAAAABLL * ((v35 - v34) >> 2);
      uint64_t v38 = *(void *)(a1 + 40);
      if (0xAAAAAAAAAAAAAAABLL * ((v38 - (uint64_t)v33) >> 2) < v37)
      {
        if (v33)
        {
          *(void *)(a1 + 32) = v33;
          operator delete(v33);
          uint64_t v38 = 0;
          *(void *)(a1 + 24) = 0;
          *(void *)(a1 + 32) = 0;
          *(void *)(a1 + 40) = 0;
        }
        if (v37 > 0x1555555555555555) {
          sub_24B3E3AAC();
        }
        unint64_t v39 = 0xAAAAAAAAAAAAAAABLL * (v38 >> 2);
        uint64_t v40 = 2 * v39;
        if (2 * v39 <= v37) {
          uint64_t v40 = 0xAAAAAAAAAAAAAAABLL * ((v35 - v34) >> 2);
        }
        if (v39 >= 0xAAAAAAAAAAAAAAALL) {
          unint64_t v41 = 0x1555555555555555;
        }
        else {
          unint64_t v41 = v40;
        }
        if (v41 > 0x1555555555555555) {
          sub_24B3E3AAC();
        }
        uint64_t v42 = (char *)operator new(12 * v41);
        uint64_t v33 = v42;
        *(void *)(a1 + 32) = v42;
        uint64_t v43 = (void **)(a1 + 32);
        *(void *)(a1 + 24) = v42;
        *(void *)(a1 + 40) = &v42[12 * v41];
        if (v35 != v34) {
          memcpy(v42, v34, v35 - v34);
        }
        goto LABEL_64;
      }
      uint64_t v43 = (void **)(a1 + 32);
      size_t v44 = *(unsigned char **)(a1 + 32);
      if (0xAAAAAAAAAAAAAAABLL * ((v44 - v33) >> 2) >= v37)
      {
        if (v35 == v34) {
          goto LABEL_64;
        }
        size_t v46 = *(void **)(a1 + 24);
        uint64_t v47 = *(char **)(a2 + 24);
        goto LABEL_63;
      }
      uint64_t v45 = &v34[4 * ((v44 - v33) >> 2)];
      if (v44 != v33)
      {
        memmove(*(void **)(a1 + 24), *(const void **)(a2 + 24), v44 - v33);
        uint64_t v33 = (char *)*v43;
      }
      size_t v36 = v35 - v45;
      if (v35 != v45)
      {
        size_t v46 = v33;
        uint64_t v47 = v45;
LABEL_63:
        memmove(v46, v47, v36);
      }
LABEL_64:
      char *v43 = &v33[v36];
LABEL_65:
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      return a1;
    case 2:
      uint64_t v17 = *(void *)(a2 + 56);
      int v18 = *(_DWORD *)(a2 + 64);
      *(_DWORD *)(a1 + 64) = v18;
      *(void *)(a1 + 56) = v17;
      *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 76) = *(_OWORD *)(a2 + 76);
      *(_WORD *)(a1 + 92) = *(_WORD *)(a2 + 92);
      if (a1 == a2 || v18 != 1) {
        return a1;
      }
      uint64_t v19 = *(void *)(a1 + 112);
      size_t v21 = (void **)(a1 + 96);
      uint64_t v20 = *(void *)(a1 + 96);
      uint64_t v23 = *(long long **)(a2 + 96);
      unint64_t v22 = *(long long **)(a2 + 104);
      unint64_t v24 = 0x6DB6DB6DB6DB6DB7 * (((char *)v22 - (char *)v23) >> 3);
      if (0x6DB6DB6DB6DB6DB7 * ((v19 - v20) >> 3) >= v24)
      {
        if (0x6DB6DB6DB6DB6DB7 * ((*(void *)(a1 + 104) - v20) >> 3) >= v24)
        {
          uint64_t v50 = sub_24B49C7F8(v23, v22, *(void *)(a1 + 96));
          uint64_t v51 = *(void *)(a1 + 104);
          if (v51 != v50)
          {
            do
            {
              uint64_t v52 = v51 - 56;
              v72[0] = (void **)(v51 - 24);
              sub_24B49C08C(v72);
              uint64_t v51 = v52;
            }
            while (v52 != v50);
          }
          *(void *)(a1 + 104) = v50;
          return a1;
        }
        uint64_t v48 = (long long *)((char *)v23 + 8 * ((*(void *)(a1 + 104) - v20) >> 3));
        sub_24B49C7F8(v23, v48, *(void *)(a1 + 96));
        uint64_t v32 = sub_24B49C4CC(a1 + 112, v48, v22, *(void *)(a1 + 104));
      }
      else
      {
        if (v20)
        {
          uint64_t v25 = *(void *)(a1 + 104);
          int v26 = *(void **)(a1 + 96);
          if (v25 != v20)
          {
            do
            {
              uint64_t v27 = v25 - 56;
              v72[0] = (void **)(v25 - 24);
              sub_24B49C08C(v72);
              uint64_t v25 = v27;
            }
            while (v27 != v20);
            int v26 = *v21;
          }
          *(void *)(a1 + 104) = v20;
          operator delete(v26);
          uint64_t v19 = 0;
          NSObject *v21 = 0;
          *(void *)(a1 + 104) = 0;
          *(void *)(a1 + 112) = 0;
        }
        if (v24 > 0x492492492492492) {
          sub_24B3E3AAC();
        }
        unint64_t v28 = 0x6DB6DB6DB6DB6DB7 * (v19 >> 3);
        uint64_t v29 = 2 * v28;
        if (2 * v28 <= v24) {
          uint64_t v29 = 0x6DB6DB6DB6DB6DB7 * (((char *)v22 - (char *)v23) >> 3);
        }
        if (v28 >= 0x249249249249249) {
          unint64_t v30 = 0x492492492492492;
        }
        else {
          unint64_t v30 = v29;
        }
        if (v30 > 0x492492492492492) {
          sub_24B3E3AAC();
        }
        int v31 = (char *)operator new(56 * v30);
        *(void *)(a1 + 96) = v31;
        *(void *)(a1 + 104) = v31;
        *(void *)(a1 + 112) = &v31[56 * v30];
        uint64_t v32 = sub_24B49C4CC(a1 + 112, v23, v22, (uint64_t)v31);
      }
      *(void *)(a1 + 104) = v32;
      return a1;
    case 3:
      uint64_t v9 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        v72[0] = (void **)0x20304000100;
LABEL_38:
        _os_log_error_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v72, 8u);
      }
      return a1;
    case 4:
      int v10 = (char *)operator new(0xA8uLL, MEMORY[0x263F8C180]);
      if (!v10)
      {
        *(void *)(a1 + 144) = 0;
        return a1;
      }
      int v11 = v10;
      *((void *)v10 + 1) = 0;
      unsigned int v12 = v10 + 8;
      *((_OWORD *)v10 + 2) = 0u;
      uint64_t v13 = v10 + 32;
      *((void *)v11 + 18) = 0;
      *((void *)v11 + 19) = 0;
      *((void *)v11 + 20) = 0;
      *((void *)v11 + 2) = 0;
      *((_DWORD *)v11 + 6) = 0;
      *((_OWORD *)v11 + 3) = 0u;
      *((_OWORD *)v11 + 4) = 0u;
      *((_OWORD *)v11 + 5) = 0u;
      *(_OWORD *)(v11 + 90) = 0u;
      *((void *)v11 + 15) = 0;
      *((void *)v11 + 16) = 0;
      *((void *)v11 + 14) = 0;
      *((_DWORD *)v11 + 34) = 0;
      *(_WORD *)int v11 = -1;
      *(void *)(a1 + 144) = v11;
      uint64_t v14 = *(void *)(a2 + 144);
      if (!v14) {
        return a1;
      }
      *(_WORD *)int v11 = *(_WORD *)v14;
      *unsigned int v12 = *(_OWORD *)(v14 + 8);
      *((_DWORD *)v11 + 6) = *(_DWORD *)(v14 + 24);
      uint64_t v15 = v11;
      if (v11 != (char *)v14)
      {
        sub_24B3EAC0C(v13, *(char **)(v14 + 32), *(char **)(v14 + 40), *(void *)(v14 + 40) - *(void *)(v14 + 32));
        sub_24B3EAC0C((void *)v11 + 7, *(char **)(v14 + 56), *(char **)(v14 + 64), *(void *)(v14 + 64) - *(void *)(v14 + 56));
        sub_24B3EAC0C((void *)v11 + 10, *(char **)(v14 + 80), *(char **)(v14 + 88), *(void *)(v14 + 88) - *(void *)(v14 + 80));
        int v11 = *(char **)(a2 + 144);
        uint64_t v16 = *(void *)(a1 + 144);
        *(_WORD *)(v16 + 104) = *((_WORD *)v11 + 52);
        if ((char *)v16 == v11)
        {
          uint64_t v15 = v11;
        }
        else
        {
          sub_24B3EAC0C((void *)(v16 + 112), *((char **)v11 + 14), *((char **)v11 + 15), *((void *)v11 + 15) - *((void *)v11 + 14));
          uint64_t v15 = *(char **)(a2 + 144);
          int v11 = *(char **)(a1 + 144);
        }
      }
      v11[136] = v15[136];
      *(unsigned char *)(*(void *)(a1 + 144) + 137) = *(unsigned char *)(*(void *)(a2 + 144) + 137);
      uint64_t v53 = *(void *)(a2 + 144);
      uint64_t v54 = *(void *)(a1 + 144);
      *(_WORD *)(v54 + 138) = *(_WORD *)(v53 + 138);
      if (v54 == v53) {
        return a1;
      }
      uint64_t v55 = *(void *)(v54 + 160);
      uint64_t v56 = (void **)(v54 + 144);
      int v57 = *(void **)(v54 + 144);
      uint64_t v59 = *(int **)(v53 + 144);
      int v58 = *(int **)(v53 + 152);
      unint64_t v60 = ((char *)v58 - (char *)v59) >> 7;
      if (v60 <= (v55 - (uint64_t)v57) >> 7)
      {
        unint64_t v68 = (uint64_t)(*(void *)(v54 + 152) - (void)v57) >> 7;
        if (v68 >= v60)
        {
          uint64_t v70 = sub_24B49C3B4(v59, v58, *(void *)(v54 + 144));
          for (uint64_t i = *(void **)(v54 + 152); i != (void *)v70; sub_24B49BF98(v54 + 160, i))
            i -= 16;
          *(void *)(v54 + 152) = v70;
          return a1;
        }
        int v69 = &v59[32 * v68];
        sub_24B49C3B4(v59, v69, *(void *)(v54 + 144));
        uint64_t v67 = sub_24B49C130(v54 + 160, (uint64_t)v69, (uint64_t)v58, *(void *)(v54 + 152));
      }
      else
      {
        if (v57)
        {
          uint64_t v61 = *(void **)(v54 + 152);
          int v62 = *(void **)(v54 + 144);
          if (v61 != v57)
          {
            do
            {
              v61 -= 16;
              sub_24B49BF98(v54 + 160, v61);
            }
            while (v61 != v57);
            int v62 = *v56;
          }
          *(void *)(v54 + 152) = v57;
          operator delete(v62);
          uint64_t v55 = 0;
          __int16 *v56 = 0;
          *(void *)(v54 + 152) = 0;
          *(void *)(v54 + 160) = 0;
        }
        if ((char *)v58 - (char *)v59 < 0) {
          sub_24B3E3AAC();
        }
        uint64_t v63 = v55 >> 6;
        if (v55 >> 6 <= v60) {
          uint64_t v63 = ((char *)v58 - (char *)v59) >> 7;
        }
        if ((unint64_t)v55 >= 0x7FFFFFFFFFFFFF80) {
          unint64_t v64 = 0x1FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v64 = v63;
        }
        if (v64 >> 57) {
          sub_24B3E3AAC();
        }
        uint64_t v65 = (char *)sub_24B49C494(v54 + 160, v64);
        *(void *)(v54 + 144) = v65;
        *(void *)(v54 + 152) = v65;
        *(void *)(v54 + 160) = &v65[128 * v66];
        uint64_t v67 = sub_24B49C130(v54 + 160, (uint64_t)v59, (uint64_t)v58, (uint64_t)v65);
      }
      *(void *)(v54 + 152) = v67;
      return a1;
    default:
      return a1;
  }
}

void sub_24B49BEC8(_Unwind_Exception *a1)
{
  *(void *)(v2 + 152) = v1;
  _Unwind_Resume(a1);
}

void sub_24B49BED0(_Unwind_Exception *a1)
{
  *(void *)(v2 + 152) = v1;
  _Unwind_Resume(a1);
}

void sub_24B49BED8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 104) = v2;
  _Unwind_Resume(a1);
}

void sub_24B49BEE0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 104) = v2;
  _Unwind_Resume(a1);
}

void sub_24B49BF00(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = v1[1];
    int v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 16;
        sub_24B49BF98((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      int v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_24B49BF98(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)a2[11];
  if (v3)
  {
    a2[12] = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)a2[8];
  if (v4)
  {
    a2[9] = v4;
    operator delete(v4);
  }
  int v5 = (void *)a2[5];
  if (v5)
  {
    a2[6] = v5;
    operator delete(v5);
  }
  int v6 = (void *)a2[2];
  if (v6)
  {
    a2[3] = v6;
    operator delete(v6);
  }
}

void sub_24B49C010(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    int v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        int v6 = v4 - 56;
        uint64_t v7 = (void **)(v4 - 24);
        sub_24B49C08C(&v7);
        uint64_t v4 = v6;
      }
      while (v6 != v2);
      int v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_24B49C08C(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_24B49C0E0((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_24B49C0E0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 88)
  {
    uint64_t v4 = *(void **)(i - 24);
    if (v4)
    {
      *(void *)(i - 16) = v4;
      operator delete(v4);
    }
  }
  a1[1] = v2;
}

uint64_t sub_24B49C130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  if (a2 != a3)
  {
    uint64_t v6 = a2 + 8;
    do
    {
      uint64_t v8 = v6 - 8;
      int v7 = *(_DWORD *)(v6 - 8);
      *(_WORD *)(v4 + 4) = *(_WORD *)(v6 - 4);
      *(_DWORD *)uint64_t v4 = v7;
      sub_24B49C1EC(v4 + 8, (int *)v6);
      uint64_t v9 = *(void *)(v6 + 104);
      *(_DWORD *)(v4 + 120) = *(_DWORD *)(v6 + 112);
      *(void *)(v4 + 112) = v9;
      uint64_t v4 = v11 + 128;
      v11 += 128;
      v6 += 128;
    }
    while (v8 + 128 != a3);
  }
  return v4;
}

void sub_24B49C1D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_24B49C1EC(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)a1 = v4;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  sub_24B49C2D4((void *)(a1 + 8), *((const void **)a2 + 1), *((void *)a2 + 2), *((void *)a2 + 2) - *((void *)a2 + 1));
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  sub_24B49C2D4((void *)(a1 + 32), *((const void **)a2 + 4), *((void *)a2 + 5), *((void *)a2 + 5) - *((void *)a2 + 4));
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  sub_24B47A720((void *)(a1 + 56), *((const void **)a2 + 7), *((void *)a2 + 8), *((void *)a2 + 8) - *((void *)a2 + 7));
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  sub_24B47A720((void *)(a1 + 80), *((const void **)a2 + 10), *((void *)a2 + 11), *((void *)a2 + 11) - *((void *)a2 + 10));
  return a1;
}

void sub_24B49C290(_Unwind_Exception *a1)
{
  sub_24B3E6D28(v1);
  _Unwind_Resume(a1);
}

void *sub_24B49C2D4(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    uint64_t v6 = result;
    uint64_t result = sub_24B3E3A68(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_24B49C334(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B49C350(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = *(void **)(a1 + 8);
    uint64_t v2 = *(void ***)(a1 + 16);
    int v4 = *v2;
    int v5 = (void *)*v3;
    if (*v2 != (void *)*v3)
    {
      uint64_t v6 = *(void *)a1;
      do
      {
        v4 -= 16;
        sub_24B49BF98(v6, v4);
      }
      while (v4 != v5);
    }
  }
  return a1;
}

uint64_t sub_24B49C3B4(int *a1, int *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = 0;
    uint64_t v6 = a1 + 12;
    do
    {
      uint64_t v7 = a3 + v5 * 4;
      size_t v8 = (char **)&v6[v5];
      int v10 = &v6[v5 - 12];
      int v9 = *v10;
      *(_WORD *)(v7 + 4) = v6[v5 - 11];
      *(_DWORD *)uint64_t v7 = v9;
      *(_DWORD *)(v7 + 8) = v6[v5 - 10];
      if ((int *)(a3 + v5 * 4) != v10)
      {
        sub_24B3EAC0C((void *)(v7 + 16), *(v8 - 4), *(v8 - 3), *(v8 - 3) - *(v8 - 4));
        sub_24B3EAC0C((void *)(v7 + 40), *(v8 - 1), *v8, *v8 - *(v8 - 1));
        sub_24B3EAC0C((void *)(v7 + 64), v8[2], v8[3], v8[3] - v8[2]);
        sub_24B3EAC0C((void *)(v7 + 88), v8[5], v8[6], v8[6] - v8[5]);
      }
      uint64_t v11 = *(void *)&v6[v5 + 16];
      *(_WORD *)(v7 + 120) = v6[v5 + 18];
      *(void *)(v7 + 112) = v11;
      v5 += 32;
    }
    while (v10 + 32 != a2);
    a3 += v5 * 4;
  }
  return a3;
}

void *sub_24B49C494(uint64_t a1, unint64_t a2)
{
  if (a2 >> 57) {
    sub_24B3E8068();
  }
  return operator new(a2 << 7);
}

uint64_t sub_24B49C4CC(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v13 = a4;
  v14[0] = a4;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = v14;
  char v12 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      long long v7 = *v6;
      *(_OWORD *)(v4 + 13) = *(long long *)((char *)v6 + 13);
      *(_OWORD *)uint64_t v4 = v7;
      *(void *)(v4 + 32) = 0;
      *(void *)(v4 + 40) = 0;
      *(void *)(v4 + 48) = 0;
      uint64_t v8 = *((void *)v6 + 4);
      uint64_t v9 = *((void *)v6 + 5);
      v14[1] = v4 + 32;
      char v15 = 0;
      if (v9 != v8)
      {
        sub_24B49C5F0((void *)(v4 + 32), 0x2E8BA2E8BA2E8BA3 * ((v9 - v8) >> 3));
        *(void *)(v4 + 40) = sub_24B49C648(v4 + 48, v8, v9, *(void *)(v4 + 40));
        uint64_t v4 = v14[0];
      }
      v4 += 56;
      v14[0] = v4;
      uint64_t v6 = (long long *)((char *)v6 + 56);
    }
    while (v6 != a3);
  }
  char v12 = 1;
  sub_24B49C788((uint64_t)v11);
  return v4;
}

void sub_24B49C5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15)
{
}

char *sub_24B49C5F0(void *a1, unint64_t a2)
{
  if (a2 >= 0x2E8BA2E8BA2E8BBLL) {
    sub_24B3E3AAC();
  }
  uint64_t v3 = 88 * a2;
  uint64_t result = (char *)operator new(88 * a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[v3];
  return result;
}

uint64_t sub_24B49C648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v14 = a4;
  uint64_t v15 = a4;
  v12[0] = a1;
  v12[1] = &v14;
  _DWORD v12[2] = &v15;
  char v13 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *(void *)uint64_t v4 = *(void *)v6;
      *(unsigned char *)(v4 + 8) = *(unsigned char *)(v6 + 8);
      long long v7 = *(_OWORD *)(v6 + 16);
      *(_DWORD *)(v4 + 32) = *(_DWORD *)(v6 + 32);
      *(_OWORD *)(v4 + 16) = v7;
      long long v8 = *(_OWORD *)(v6 + 40);
      uint64_t v9 = *(void *)(v6 + 53);
      *(void *)(v4 + 64) = 0;
      int v10 = (void *)(v4 + 64);
      *(void *)((char *)v10 - 11) = v9;
      *(_OWORD *)(v10 - 3) = v8;
      v10[1] = 0;
      _DWORD v10[2] = 0;
      sub_24B47A720(v10, *(const void **)(v6 + 64), *(void *)(v6 + 72), *(void *)(v6 + 72) - *(void *)(v6 + 64));
      uint64_t v4 = v15 + 88;
      v15 += 88;
      v6 += 88;
    }
    while (v6 != a3);
  }
  char v13 = 1;
  sub_24B49C728((uint64_t)v12);
  return v4;
}

void sub_24B49C714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_24B49C728(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = **(void **)(a1 + 8);
    for (uint64_t i = **(void **)(a1 + 16); i != v3; i -= 88)
    {
      uint64_t v5 = *(void **)(i - 24);
      if (v5)
      {
        *(void *)(i - 16) = v5;
        operator delete(v5);
      }
    }
  }
  return a1;
}

uint64_t sub_24B49C788(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v2 = **(void **)(a1 + 8);
    uint64_t v3 = **(void **)(a1 + 16);
    if (v3 != v2)
    {
      do
      {
        uint64_t v4 = v3 - 56;
        uint64_t v6 = (void **)(v3 - 24);
        sub_24B49C08C(&v6);
        uint64_t v3 = v4;
      }
      while (v4 != v2);
    }
  }
  return a1;
}

uint64_t sub_24B49C7F8(long long *a1, long long *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    for (uint64_t i = a1; i != a2; uint64_t i = (long long *)((char *)i + 56))
    {
      long long v6 = *i;
      *(_OWORD *)(a3 + 13) = *(long long *)((char *)i + 13);
      *(_OWORD *)a3 = v6;
      if ((long long *)a3 != i)
      {
        long long v8 = (void **)(a3 + 32);
        uint64_t v7 = *(void *)(a3 + 32);
        uint64_t v10 = *((void *)i + 4);
        uint64_t v9 = *((void *)i + 5);
        unint64_t v11 = 0x2E8BA2E8BA2E8BA3 * ((v9 - v10) >> 3);
        uint64_t v12 = *(void *)(a3 + 48);
        if (0x2E8BA2E8BA2E8BA3 * ((v12 - v7) >> 3) >= v11)
        {
          if (0x2E8BA2E8BA2E8BA3 * ((*(void *)(a3 + 40) - v7) >> 3) >= v11)
          {
            uint64_t v18 = sub_24B49C9DC(*((char ***)i + 4), *((char ***)i + 5), v7);
            for (uint64_t j = *(void *)(a3 + 40); j != v18; j -= 88)
            {
              uint64_t v20 = *(void **)(j - 24);
              if (v20)
              {
                *(void *)(j - 16) = v20;
                operator delete(v20);
              }
            }
            *(void *)(a3 + 40) = v18;
            goto LABEL_22;
          }
          uint64_t v17 = (char **)(v10 + 8 * ((*(void *)(a3 + 40) - v7) >> 3));
          sub_24B49C9DC(*((char ***)i + 4), v17, v7);
          uint64_t v16 = sub_24B49C648(a3 + 48, (uint64_t)v17, v9, *(void *)(a3 + 40));
        }
        else
        {
          if (v7)
          {
            sub_24B49C0E0((uint64_t *)(a3 + 32));
            operator delete(*v8);
            uint64_t v12 = 0;
            *long long v8 = 0;
            *(void *)(a3 + 40) = 0;
            *(void *)(a3 + 48) = 0;
          }
          if (v11 > 0x2E8BA2E8BA2E8BALL) {
            sub_24B3E3AAC();
          }
          unint64_t v13 = 0x2E8BA2E8BA2E8BA3 * (v12 >> 3);
          uint64_t v14 = 2 * v13;
          if (2 * v13 <= v11) {
            uint64_t v14 = 0x2E8BA2E8BA2E8BA3 * ((v9 - v10) >> 3);
          }
          if (v13 >= 0x1745D1745D1745DLL) {
            unint64_t v15 = 0x2E8BA2E8BA2E8BALL;
          }
          else {
            unint64_t v15 = v14;
          }
          sub_24B49C5F0((void *)(a3 + 32), v15);
          uint64_t v16 = sub_24B49C648(a3 + 48, v10, v9, *(void *)(a3 + 40));
        }
        *(void *)(a3 + 40) = v16;
      }
LABEL_22:
      a3 += 56;
    }
  }
  return a3;
}

void sub_24B49C9CC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 40) = v2;
  _Unwind_Resume(a1);
}

void sub_24B49C9D4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 40) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_24B49C9DC(char **a1, char **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1 + 8;
    do
    {
      long long v6 = v5 - 8;
      *(void *)a3 = *(v5 - 8);
      *(unsigned char *)(a3 + 8) = *((unsigned char *)v5 - 56);
      long long v7 = *((_OWORD *)v5 - 3);
      *(_DWORD *)(a3 + 31) = *(_DWORD *)((char *)v5 - 33);
      *(_OWORD *)(a3 + 16) = v7;
      long long v8 = *(_OWORD *)(v5 - 3);
      *(void *)(a3 + 53) = *(char **)((char *)v5 - 11);
      *(_OWORD *)(a3 + 40) = v8;
      if ((char **)a3 != v5 - 8) {
        sub_24B3EAC0C((void *)(a3 + 64), *v5, v5[1], v5[1] - *v5);
      }
      a3 += 88;
      v5 += 11;
    }
    while (v6 + 11 != a2);
  }
  return a3;
}

unsigned __int16 *sub_24B49CA78(unsigned __int16 *a1)
{
  v16[1] = *(void ***)MEMORY[0x263EF8340];
  switch(*a1)
  {
    case 1u:
      uint64_t v2 = (void *)*((void *)a1 + 1);
      if (!v2) {
        goto LABEL_25;
      }
      uint64_t v3 = (uint64_t)sub_24B49D944(v2);
      unsigned int v4 = -861440881;
      goto LABEL_17;
    case 2u:
    case 3u:
      goto LABEL_5;
    case 4u:
      uint64_t v6 = *((void *)a1 + 1);
      if (!v6) {
        goto LABEL_25;
      }
      uint64_t v3 = sub_24B49DA44(v6);
      unsigned int v4 = -2009602957;
      goto LABEL_17;
    case 5u:
      uint64_t v7 = *((void *)a1 + 1);
      if (!v7) {
        goto LABEL_25;
      }
      sub_24B48BC40(v7 + 152);
      v16[0] = (void **)(v7 + 120);
      sub_24B49DB08(v16);
      v16[0] = (void **)(v7 + 96);
      sub_24B49DB08(v16);
      long long v8 = *(void **)(v7 + 64);
      if (v8)
      {
        *(void *)(v7 + 72) = v8;
        operator delete(v8);
      }
      uint64_t v9 = *(void **)(v7 + 40);
      if (v9)
      {
        *(void *)(v7 + 48) = v9;
        operator delete(v9);
      }
      uint64_t v10 = *(void **)(v7 + 16);
      if (v10)
      {
        *(void *)(v7 + 24) = v10;
        operator delete(v10);
      }
      uint64_t v3 = v7;
      unsigned int v4 = -1737996582;
LABEL_17:
      uint64_t v11 = v4 | 0x1030C4000000000;
      goto LABEL_24;
    case 6u:
      uint64_t v12 = (void *)*((void *)a1 + 1);
      if (!v12) {
        goto LABEL_25;
      }
      unint64_t v13 = (void *)v12[58];
      if (v13)
      {
        v12[59] = v13;
        operator delete(v13);
      }
      sub_24B48BC40((uint64_t)(v12 + 12));
      uint64_t v14 = (void *)v12[3];
      if (v14)
      {
        v12[4] = v14;
        operator delete(v14);
      }
      uint64_t v3 = (uint64_t)v12;
      uint64_t v11 = 0x1010C40F88FA712;
LABEL_24:
      MEMORY[0x24C5D2700](v3, v11);
LABEL_25:
      *((void *)a1 + 1) = 0;
      break;
    default:
      if (*a1 != 0xFFFF)
      {
LABEL_5:
        uint64_t v5 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          v16[0] = (void **)0x20304000100;
          _os_log_error_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v16, 8u);
        }
      }
      break;
  }
  return a1;
}

uint64_t sub_24B49CC6C(uint64_t *a1)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(unsigned char *)(v2 + 16) = 0;
  *(void *)(v2 + 8) = 0;
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 8);
  unsigned int v5 = 0x8000;
  do
  {
    sub_24B47D9A0((uint64_t **)v3, 0);
    BOOL v6 = v5 > 1;
    v5 >>= 1;
  }
  while (v6);
  uint64_t v7 = *(unsigned __int8 *)(v3 + 16);
  if (v7)
  {
    long long v8 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v36[0]) = 0;
      _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PE_UlpPdu, error in encoding version", (uint8_t *)v36, 2u);
    }
LABEL_15:
    sub_24B47D810(v7, *(_DWORD *)(*a1 + 8), *(_DWORD *)(*a1 + 12), "asn1PE_UlpPdu");
    return v7;
  }
  uint64_t v9 = *a1;
  uint64_t v10 = (unsigned __int8 *)a1[1];
  uint64_t v11 = sub_24B47DAA4(*a1, 0, 255, v10[2]);
  if (v11)
  {
    uint64_t v7 = v11;
    int v12 = *(_DWORD *)(v9 + 8);
    int v13 = *(_DWORD *)(v9 + 12);
    goto LABEL_13;
  }
  uint64_t v11 = sub_24B47DAA4(v9, 0, 255, v10[3]);
  if (v11)
  {
    uint64_t v7 = v11;
    int v12 = *(_DWORD *)(v9 + 8);
    int v13 = *(_DWORD *)(v9 + 12);
    goto LABEL_13;
  }
  uint64_t v11 = sub_24B47DAA4(v9, 0, 255, v10[4]);
  if (v11)
  {
    uint64_t v7 = v11;
    int v12 = *(_DWORD *)(v9 + 8);
    int v13 = *(_DWORD *)(v9 + 12);
LABEL_13:
    sub_24B47D810(v11, v12, v13, "asn1PE_Version");
    uint64_t v14 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v36[0]) = 0;
      _os_log_debug_impl(&dword_24B3DE000, v14, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PE_UlpPdu, error in encoding sessionId", (uint8_t *)v36, 2u);
    }
    goto LABEL_15;
  }
  uint64_t v16 = sub_24B4A9F80(*a1, a1[1] + 24);
  if (v16)
  {
    uint64_t v7 = v16;
    uint64_t v17 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v36[0]) = 0;
      _os_log_debug_impl(&dword_24B3DE000, v17, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PE_UlpPdu, error in encoding", (uint8_t *)v36, 2u);
    }
    goto LABEL_15;
  }
  uint64_t v18 = *a1;
  uint64_t v19 = a1[1];
  sub_24B47D9A0((uint64_t **)*a1, 0);
  uint64_t v7 = *(unsigned __int8 *)(v18 + 16);
  if (*(unsigned char *)(v18 + 16))
  {
    int v20 = *(_DWORD *)(v18 + 8);
    int v21 = *(_DWORD *)(v18 + 12);
    LODWORD(v22) = *(unsigned __int8 *)(v18 + 16);
    goto LABEL_41;
  }
  uint64_t v22 = sub_24B47DAA4(v18, 0, 7, *(unsigned __int16 *)(v19 + 8) - 1);
  if (v22)
  {
    uint64_t v7 = v22;
    int v20 = *(_DWORD *)(v18 + 8);
    int v21 = *(_DWORD *)(v18 + 12);
    goto LABEL_41;
  }
  int v23 = *(unsigned __int16 *)(v19 + 8);
  switch(v23)
  {
    case 6:
      uint64_t v24 = sub_24B47F418(v18, *(void *)(v19 + 16));
      break;
    case 5:
      uint64_t v24 = sub_24B4A0E80(v18, *(void *)(v19 + 16));
      break;
    case 4:
      uint64_t v24 = sub_24B49E06C(v18, *(void *)(v19 + 16));
      break;
    default:
      uint64_t v7 = 1;
      sub_24B47D810(1u, *(_DWORD *)(v18 + 8), *(_DWORD *)(v18 + 12), "asn1PE_UlpMessage");
      goto LABEL_40;
  }
  uint64_t v7 = v24;
  if (v24)
  {
LABEL_40:
    int v20 = *(_DWORD *)(v18 + 8);
    int v21 = *(_DWORD *)(v18 + 12);
    LODWORD(v22) = v7;
LABEL_41:
    sub_24B47D810(v22, v20, v21, "asn1PE_UlpMessage");
    uint64_t v33 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v36[0]) = 0;
      _os_log_debug_impl(&dword_24B3DE000, v33, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PE_UlpPdu, error in encoding ULP message", (uint8_t *)v36, 2u);
    }
    goto LABEL_15;
  }
  uint64_t v25 = *a1;
  int v27 = *(_DWORD *)(*a1 + 8);
  int v26 = *(_DWORD *)(*a1 + 12);
  if (v26) {
    unsigned __int16 v28 = v27 + 1;
  }
  else {
    unsigned __int16 v28 = *(_DWORD *)(*a1 + 8);
  }
  *(_WORD *)a1[1] = v28;
  *(void *)(v25 + 8) = v4;
  uint64_t v7 = sub_24B47DAA4(v25, 0, 0xFFFF, v28);
  uint64_t v29 = *a1;
  if (!v7)
  {
    *(_DWORD *)(v29 + 8) = v27;
    *(_DWORD *)(v29 + 12) = v26;
  }
  unint64_t v30 = *(unint64_t **)v29;
  unint64_t v31 = *(unsigned __int16 *)a1[1];
  unint64_t v32 = v30[1] - *v30;
  if (v31 <= v32)
  {
    if (v31 < v32) {
      v30[1] = *v30 + v31;
    }
  }
  else
  {
    sub_24B3E3AC4(v30, v31 - v32);
  }
  uint64_t v34 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    int v35 = *(unsigned __int16 *)a1[1];
    v36[0] = 67109120;
    v36[1] = v35;
    _os_log_debug_impl(&dword_24B3DE000, v34, OS_LOG_TYPE_DEBUG, "#gpsd,#supl lengh of encoded message %d", (uint8_t *)v36, 8u);
  }
  return v7;
}

uint64_t sub_24B49D0F0(uint64_t a1)
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)a1;
  *(unsigned char *)(v2 + 16) = 0;
  *(void *)(v2 + 8) = 0;
  uint64_t v3 = sub_24B47DC20(*(void *)a1, 0, 0xFFFFu, *(_WORD **)(a1 + 8));
  if (v3)
  {
    uint64_t v4 = v3;
    unsigned int v5 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PD_UlpPdu, decoding version failed", buf, 2u);
    }
LABEL_13:
    sub_24B47D810(v4, *(_DWORD *)(*(void *)a1 + 8), *(_DWORD *)(*(void *)a1 + 12), "asn1PD_UlpPdu");
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(unsigned char **)(a1 + 8);
  uint64_t v8 = sub_24B47DB4C(*(void *)a1, 0, 0xFFu, v7 + 2);
  if (v8)
  {
    uint64_t v4 = v8;
    int v9 = *(_DWORD *)(v6 + 8);
    int v10 = *(_DWORD *)(v6 + 12);
    goto LABEL_11;
  }
  uint64_t v8 = sub_24B47DB4C(v6, 0, 0xFFu, v7 + 3);
  if (v8)
  {
    uint64_t v4 = v8;
    int v9 = *(_DWORD *)(v6 + 8);
    int v10 = *(_DWORD *)(v6 + 12);
    goto LABEL_11;
  }
  uint64_t v8 = sub_24B47DB4C(v6, 0, 0xFFu, v7 + 4);
  if (v8)
  {
    uint64_t v4 = v8;
    int v9 = *(_DWORD *)(v6 + 8);
    int v10 = *(_DWORD *)(v6 + 12);
LABEL_11:
    sub_24B47D810(v8, v9, v10, "asn1PD_Version");
    uint64_t v11 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PD_UlpPdu, decoding session ID failed", buf, 2u);
    }
    goto LABEL_13;
  }
  uint64_t v14 = sub_24B4AA06C(*(void *)a1, *(void *)(a1 + 8) + 24);
  if (v14)
  {
    uint64_t v4 = v14;
    unint64_t v15 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v15, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PD_UlpPdu, decoding ULP message failed", buf, 2u);
    }
    goto LABEL_13;
  }
  uint64_t v16 = *(void *)a1;
  uint64_t v17 = *(void *)(a1 + 8);
  int v18 = sub_24B47DA28(*(uint64_t ***)a1);
  uint64_t v4 = *(unsigned __int8 *)(v16 + 16);
  if (*(unsigned char *)(v16 + 16))
  {
LABEL_28:
    uint64_t v22 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v22, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PD_UlpPdu, decoding failed", buf, 2u);
    }
    sub_24B47D810(v4, *(_DWORD *)(*(void *)a1 + 8), *(_DWORD *)(*(void *)a1 + 12), "asn1PD_UlpPdu");
    goto LABEL_14;
  }
  if (!v18)
  {
    int v50 = 0;
    uint64_t v19 = sub_24B47DDC8(v16, 0, 7u, &v50);
    uint64_t v4 = v19;
    if (v19)
    {
      int v20 = *(_DWORD *)(v16 + 8);
      int v21 = *(_DWORD *)(v16 + 12);
      goto LABEL_27;
    }
    __int16 v23 = v50;
    __int16 v24 = v50 + 1;
    if (v50 + 1 != *(unsigned __int16 *)(v17 + 8))
    {
      switch(*(_WORD *)(v17 + 8))
      {
        case 1:
          int v26 = (void *)(v17 + 16);
          uint64_t v25 = *(void **)(v17 + 16);
          if (!v25) {
            goto LABEL_53;
          }
          uint64_t v27 = (uint64_t)sub_24B49D944(v25);
          unsigned int v28 = -861440881;
          goto LABEL_45;
        case 4:
          int v26 = (void *)(v17 + 16);
          uint64_t v29 = *(void *)(v17 + 16);
          if (!v29) {
            goto LABEL_53;
          }
          uint64_t v27 = sub_24B49DA44(v29);
          unsigned int v28 = -2009602957;
          goto LABEL_45;
        case 5:
          int v26 = (void *)(v17 + 16);
          unint64_t v30 = *(void **)(v17 + 16);
          if (!v30) {
            goto LABEL_53;
          }
          sub_24B48BC40((uint64_t)(v30 + 19));
          *(void *)long long buf = v30 + 15;
          sub_24B49DB08((void ***)buf);
          *(void *)long long buf = v30 + 12;
          sub_24B49DB08((void ***)buf);
          unint64_t v31 = (void *)v30[8];
          if (v31)
          {
            v30[9] = v31;
            operator delete(v31);
          }
          unint64_t v32 = (void *)v30[5];
          if (v32)
          {
            v30[6] = v32;
            operator delete(v32);
          }
          uint64_t v33 = (void *)v30[2];
          if (v33)
          {
            v30[3] = v33;
            operator delete(v33);
          }
          uint64_t v27 = (uint64_t)v30;
          unsigned int v28 = -1737996582;
LABEL_45:
          uint64_t v34 = v28 | 0x1030C4000000000;
          break;
        case 6:
          int v26 = (void *)(v17 + 16);
          int v35 = *(void **)(v17 + 16);
          if (!v35) {
            goto LABEL_53;
          }
          size_t v36 = (void *)v35[58];
          if (v36)
          {
            v35[59] = v36;
            operator delete(v36);
          }
          sub_24B48BC40((uint64_t)(v35 + 12));
          uint64_t v37 = (void *)v35[3];
          if (v37)
          {
            v35[4] = v37;
            operator delete(v37);
          }
          uint64_t v27 = (uint64_t)v35;
          uint64_t v34 = 0x1010C40F88FA712;
          break;
        default:
          goto LABEL_54;
      }
      MEMORY[0x24C5D2700](v27, v34);
LABEL_53:
      void *v26 = 0;
    }
LABEL_54:
    *(_WORD *)(v17 + 8) = v24;
    if (v23 == 5)
    {
      uint64_t v41 = *(void *)(v17 + 16);
      if (!v41)
      {
        uint64_t v42 = (char *)operator new(0x1E8uLL, MEMORY[0x263F8C180]);
        if (!v42)
        {
          *(void *)(v17 + 16) = 0;
          uint64_t v49 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)long long buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = 1537;
            goto LABEL_87;
          }
LABEL_85:
          uint64_t v4 = 2;
          *(unsigned char *)(v16 + 16) = 2;
          goto LABEL_28;
        }
        uint64_t v41 = (uint64_t)v42;
        *(void *)uint64_t v42 = 0;
        *((_DWORD *)v42 + 2) = 0;
        *((void *)v42 + 4) = 0;
        *((void *)v42 + 5) = 0;
        *((void *)v42 + 3) = 0;
        v42[60] = -1;
        *((void *)v42 + 8) = 0;
        *((_DWORD *)v42 + 18) = 0;
        v42[76] = -1;
        *((_WORD *)v42 + 39) = 0;
        v42[80] = 0;
        *((_DWORD *)v42 + 14) = 0;
        *((void *)v42 + 6) = 0;
        *((void *)v42 + 11) = 255;
        *((_DWORD *)v42 + 4) = 0;
        *((void *)v42 + 59) = 0;
        *((void *)v42 + 60) = 0;
        *((void *)v42 + 58) = 0;
        *(_OWORD *)(v42 + 441) = 0u;
        *((_OWORD *)v42 + 26) = 0u;
        *((_OWORD *)v42 + 27) = 0u;
        *((_OWORD *)v42 + 24) = 0u;
        *((_OWORD *)v42 + 25) = 0u;
        *((_OWORD *)v42 + 22) = 0u;
        *((_OWORD *)v42 + 23) = 0u;
        *((_OWORD *)v42 + 20) = 0u;
        *((_OWORD *)v42 + 21) = 0u;
        *((_OWORD *)v42 + 18) = 0u;
        *((_OWORD *)v42 + 19) = 0u;
        *((_OWORD *)v42 + 16) = 0u;
        *((_OWORD *)v42 + 17) = 0u;
        *((_OWORD *)v42 + 14) = 0u;
        *((_OWORD *)v42 + 15) = 0u;
        *((_OWORD *)v42 + 12) = 0u;
        *((_OWORD *)v42 + 13) = 0u;
        *((_OWORD *)v42 + 10) = 0u;
        *((_OWORD *)v42 + 11) = 0u;
        *((_OWORD *)v42 + 8) = 0u;
        *((_OWORD *)v42 + 9) = 0u;
        *((_OWORD *)v42 + 6) = 0u;
        *((_OWORD *)v42 + 7) = 0u;
        *(void *)(v17 + 16) = v42;
      }
      uint64_t v40 = sub_24B47F590(v16, v41);
    }
    else
    {
      if (v23 != 4)
      {
        if (v23)
        {
          *(unsigned char *)(v16 + 16) = 4;
          sub_24B47D810(4u, *(_DWORD *)(v16 + 8), *(_DWORD *)(v16 + 12), "asn1PD_UlpMessage");
          uint64_t v4 = 4;
          goto LABEL_79;
        }
        uint64_t v38 = *(void *)(v17 + 16);
        if (v38) {
          goto LABEL_60;
        }
        unint64_t v39 = operator new(0x338uLL, MEMORY[0x263F8C180]);
        if (v39)
        {
          uint64_t v38 = (uint64_t)v39;
          *(void *)(v17 + 16) = sub_24B497B4C((uint64_t)v39);
LABEL_60:
          uint64_t v40 = sub_24B497C2C(v16, v38);
          goto LABEL_69;
        }
        *(void *)(v17 + 16) = 0;
        uint64_t v49 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = 1537;
LABEL_87:
          _os_log_error_impl(&dword_24B3DE000, v49, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
          goto LABEL_85;
        }
        goto LABEL_85;
      }
      uint64_t v43 = *(_DWORD **)(v17 + 16);
      if (!v43)
      {
        size_t v44 = (char *)operator new(0x200uLL, MEMORY[0x263F8C180]);
        if (!v44)
        {
          *(void *)(v17 + 16) = 0;
          uint64_t v49 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)long long buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = 1537;
            goto LABEL_87;
          }
          goto LABEL_85;
        }
        uint64_t v43 = v44;
        *(_OWORD *)(v44 + 136) = 0u;
        *(_OWORD *)(v44 + 120) = 0u;
        *(_OWORD *)(v44 + 104) = 0u;
        *(_OWORD *)(v44 + 88) = 0u;
        *(_OWORD *)(v44 + 72) = 0u;
        *(_OWORD *)(v44 + 56) = 0u;
        *(_OWORD *)(v44 + 40) = 0u;
        *(_OWORD *)(v44 + 24) = 0u;
        *(_OWORD *)(v44 + 8) = 0u;
        v44[144] = -1;
        *(_OWORD *)(v44 + 168) = 0u;
        *(_OWORD *)(v44 + 184) = 0u;
        *(_OWORD *)(v44 + 200) = 0u;
        *(_OWORD *)(v44 + 216) = 0u;
        *(_OWORD *)(v44 + 232) = 0u;
        *(_OWORD *)(v44 + 248) = 0u;
        *(_OWORD *)(v44 + 152) = 0u;
        *((void *)v44 + 63) = 0;
        *(_OWORD *)(v44 + 408) = 0u;
        *(_OWORD *)(v44 + 424) = 0u;
        *(_OWORD *)(v44 + 440) = 0u;
        *(_OWORD *)(v44 + 456) = 0u;
        *(_OWORD *)(v44 + 472) = 0u;
        *(_OWORD *)(v44 + 488) = 0u;
        *(_OWORD *)(v44 + 264) = 0u;
        *(_OWORD *)(v44 + 280) = 0u;
        *(_OWORD *)(v44 + 296) = 0u;
        *(_OWORD *)(v44 + 312) = 0u;
        *(_OWORD *)(v44 + 328) = 0u;
        *(_OWORD *)(v44 + 344) = 0u;
        *(_OWORD *)(v44 + 360) = 0u;
        *(_OWORD *)(v44 + 376) = 0u;
        *(_OWORD *)(v44 + 392) = 0u;
        *(_DWORD *)size_t v44 = 0;
        *(void *)(v17 + 16) = v44;
      }
      uint64_t v40 = sub_24B4A0F2C(v16, v43);
    }
LABEL_69:
    uint64_t v4 = v40;
    if (!v40) {
      goto LABEL_70;
    }
LABEL_79:
    sub_24B47D810(v4, *(_DWORD *)(v16 + 8), *(_DWORD *)(v16 + 12), "asn1PD_UlpMessage");
    goto LABEL_28;
  }
  sub_24B47EDE0(v16);
  if (v19)
  {
    uint64_t v4 = v19;
    int v20 = *(_DWORD *)(v16 + 8);
    int v21 = *(_DWORD *)(v16 + 12);
LABEL_27:
    sub_24B47D810(v19, v20, v21, "asn1PD_UlpMessage");
    goto LABEL_28;
  }
LABEL_70:
  int v46 = *(_DWORD *)(*(void *)a1 + 8);
  int v45 = *(_DWORD *)(*(void *)a1 + 12);
  if (v45) {
    int v47 = v46 + 1;
  }
  else {
    int v47 = *(_DWORD *)(*(void *)a1 + 8);
  }
  if (v47 == **(unsigned __int16 **)(a1 + 8)) {
    return 0;
  }
  uint64_t v48 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v48, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplMessage::asn1PD_UlpPdu, message length check failed", buf, 2u);
    int v46 = *(_DWORD *)(*(void *)a1 + 8);
    int v45 = *(_DWORD *)(*(void *)a1 + 12);
  }
  sub_24B47D810(6u, v46, v45, "asn1PD_UlpPdu");
  uint64_t v4 = 6;
LABEL_14:
  int v12 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)long long buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = 770;
    _os_log_error_impl(&dword_24B3DE000, v12, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
  return v4;
}

void *sub_24B49D944(void *a1)
{
  uint64_t v2 = (void *)a1[95];
  if (v2)
  {
    a1[96] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[91];
  if (v3)
  {
    a1[92] = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)a1[82];
  if (v4)
  {
    a1[83] = v4;
    operator delete(v4);
  }
  unsigned int v5 = (void *)a1[79];
  if (v5)
  {
    a1[80] = v5;
    operator delete(v5);
  }
  uint64_t v6 = (void *)a1[76];
  if (v6)
  {
    a1[77] = v6;
    operator delete(v6);
  }
  if (a1[49])
  {
    sub_24B47A6D0(a1 + 49);
    operator delete((void *)a1[49]);
  }
  uint64_t v7 = (void *)a1[32];
  if (v7)
  {
    a1[33] = v7;
    operator delete(v7);
  }
  uint64_t v8 = (void *)a1[29];
  if (v8)
  {
    a1[30] = v8;
    operator delete(v8);
  }
  int v9 = (void *)a1[22];
  if (v9)
  {
    a1[23] = v9;
    operator delete(v9);
  }
  int v10 = (void *)a1[19];
  if (v10)
  {
    a1[20] = v10;
    operator delete(v10);
  }
  uint64_t v11 = (void *)a1[16];
  if (v11)
  {
    a1[17] = v11;
    operator delete(v11);
  }
  int v12 = (void *)a1[10];
  if (v12)
  {
    a1[11] = v12;
    operator delete(v12);
  }
  int v13 = (void *)a1[6];
  if (v13)
  {
    a1[7] = v13;
    operator delete(v13);
  }
  return a1;
}

uint64_t sub_24B49DA44(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 1280);
  if (v2)
  {
    *(void *)(a1 + 1288) = v2;
    operator delete(v2);
  }
  sub_24B48BC40(a1 + 920);
  int v9 = (void **)(a1 + 888);
  sub_24B49DB08(&v9);
  int v9 = (void **)(a1 + 864);
  sub_24B49DB08(&v9);
  uint64_t v3 = *(void **)(a1 + 832);
  if (v3)
  {
    *(void *)(a1 + 840) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void **)(a1 + 808);
  if (v4)
  {
    *(void *)(a1 + 816) = v4;
    operator delete(v4);
  }
  unsigned int v5 = *(void **)(a1 + 784);
  if (v5)
  {
    *(void *)(a1 + 792) = v5;
    operator delete(v5);
  }
  sub_24B48BC40(a1 + 408);
  uint64_t v6 = *(void **)(a1 + 336);
  if (v6)
  {
    *(void *)(a1 + 344) = v6;
    operator delete(v6);
  }
  sub_24B49B3B0(a1 + 168);
  uint64_t v7 = *(void **)(a1 + 144);
  if (v7)
  {
    *(void *)(a1 + 152) = v7;
    operator delete(v7);
  }
  return a1;
}

void sub_24B49DB08(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_24B47C38C((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

uint64_t sub_24B49DB5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_24B47DAA4(a1, 1, 31, (unint64_t)(a2[1] - *a2) >> 3);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
LABEL_14:
    sub_24B47D810(v4, v6, v7, "asn1PE_SatelliteInfo");
    return v5;
  }
  uint64_t v8 = *a2;
  if (a2[1] != *a2)
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      sub_24B47D9A0((uint64_t **)a1, 0);
      uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        int v12 = *(_DWORD *)(a1 + 8);
        int v13 = *(_DWORD *)(a1 + 12);
        LODWORD(v11) = *(unsigned __int8 *)(a1 + 16);
        goto LABEL_13;
      }
      uint64_t v11 = sub_24B47DAA4(a1, 0, 63, *(_DWORD *)(v8 + v9));
      if (v11)
      {
        uint64_t v5 = v11;
        int v12 = *(_DWORD *)(a1 + 8);
        int v13 = *(_DWORD *)(a1 + 12);
        goto LABEL_13;
      }
      uint64_t v11 = sub_24B47DAA4(a1, 0, 255, *(_DWORD *)(v8 + v9 + 4));
      if (v11) {
        break;
      }
      ++v10;
      uint64_t v8 = *a2;
      v9 += 8;
      if (v10 >= (a2[1] - *a2) >> 3) {
        return 0;
      }
    }
    uint64_t v5 = v11;
    int v12 = *(_DWORD *)(a1 + 8);
    int v13 = *(_DWORD *)(a1 + 12);
LABEL_13:
    sub_24B47D810(v11, v12, v13, "asn1PE_SatelliteInfoElement");
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v4) = v5;
    goto LABEL_14;
  }
  return 0;
}

uint64_t sub_24B49DCA4(uint64_t a1, uint64_t a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_13:
    sub_24B47D810(v7, v5, v6, "asn1PE_NavigationModel");
    return v4;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)a2);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_13;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 1023, *(unsigned __int16 *)(a2 + 4));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 167, *(unsigned __int8 *)(a2 + 6));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 31, *(unsigned __int8 *)(a2 + 7));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 10, *(unsigned __int8 *)(a2 + 8));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  if (!*(_DWORD *)a2) {
    return 0;
  }
  uint64_t v7 = sub_24B49DB5C(a1, (uint64_t *)(a2 + 16));
  uint64_t v4 = v7;
  if (v7)
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  return v4;
}

uint64_t sub_24B49DE24(uint64_t a1, int *a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
LABEL_23:
    sub_24B47D810(v7, v5, v6, "asn1PE_RequestedAssistData");
    return v4;
  }
  sub_24B47D9A0((uint64_t **)a1, *a2);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_24B47D9A0((uint64_t **)a1, a2[1]);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_24B47D9A0((uint64_t **)a1, a2[2]);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_24B47D9A0((uint64_t **)a1, a2[3]);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_24B47D9A0((uint64_t **)a1, a2[4]);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_24B47D9A0((uint64_t **)a1, a2[5]);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_24B47D9A0((uint64_t **)a1, a2[6]);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_24B47D9A0((uint64_t **)a1, a2[7]);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_24B47D9A0((uint64_t **)a1, a2[8]);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  sub_24B47D9A0((uint64_t **)a1, a2[9]);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_23;
  }
  if (!*a2) {
    return 0;
  }
  return sub_24B49DCA4(a1, (uint64_t)(a2 + 10));
}

uint64_t sub_24B49E06C(uint64_t a1, uint64_t a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_13:
    sub_24B47D810(v7, v5, v6, "asn1PE_SUPLPOSINIT");
    return v4;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)a2);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_13;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 4));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_13;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 8));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_13;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 12));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_13;
  }
  uint64_t v7 = sub_24B4AA48C(a1, a2 + 16);
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v7 = sub_24B49DE24(a1, (int *)(a2 + 88));
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_13;
    }
  }
  uint64_t v7 = sub_24B49B64C(a1, (unsigned __int8 *)(a2 + 168));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  if (*(_DWORD *)(a2 + 4))
  {
    uint64_t v7 = sub_24B4A08B8(a1, (int *)(a2 + 328));
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_13;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    uint64_t v7 = sub_24B4A0E80(a1, a2 + 768);
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_13;
    }
  }
  if (!*(_DWORD *)(a2 + 12)) {
    return 0;
  }
  return sub_24B47F1F8(a1, (void *)(a2 + 1280));
}

uint64_t sub_24B49E28C(uint64_t a1)
{
  *(void *)a1 = &unk_26FE860B0;
  if (*(_WORD *)(a1 + 32) == 5)
  {
    uint64_t v2 = *(void *)(a1 + 40);
    if (v2)
    {
      sub_24B48BC40(v2 + 152);
      uint64_t v7 = (void **)(v2 + 120);
      sub_24B49DB08(&v7);
      uint64_t v7 = (void **)(v2 + 96);
      sub_24B49DB08(&v7);
      uint64_t v3 = *(void **)(v2 + 64);
      if (v3)
      {
        *(void *)(v2 + 72) = v3;
        operator delete(v3);
      }
      uint64_t v4 = *(void **)(v2 + 40);
      if (v4)
      {
        *(void *)(v2 + 48) = v4;
        operator delete(v4);
      }
      int v5 = *(void **)(v2 + 16);
      if (v5)
      {
        *(void *)(v2 + 24) = v5;
        operator delete(v5);
      }
      MEMORY[0x24C5D2700](v2, 0x1030C40986846DALL);
    }
    *(void *)(a1 + 40) = 0;
  }
  return sub_24B4AA64C(a1);
}

void sub_24B49E364(uint64_t a1)
{
  sub_24B49E28C(a1);
  JUMPOUT(0x24C5D2700);
}

uint64_t sub_24B49E39C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 360);
}

void sub_24B49E3A4(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 360))
  {
    uint64_t v2 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::UpdateState, next state Supl_Pos_Recd", buf, 2u);
    }
    int v3 = 5;
LABEL_9:
    sub_24B4AA6E4(a1, v3, *(void *)(a1 + 8));
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 20))
  {
    uint64_t v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)int v5 = 0;
      _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::UpdateState, next state Supl_End_Recd", v5, 2u);
    }
    int v3 = 7;
    goto LABEL_9;
  }
LABEL_10:
  *(_DWORD *)(a1 + 360) = 0;
  *(_DWORD *)(a1 + 20) = 0;
}

uint64_t sub_24B49E484(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = *MEMORY[0x263EF8340];
  if (sub_24B4AAEA4(a1, a2))
  {
    uint64_t v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(__p) = 0;
      _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, error in processing SUPL message", (uint8_t *)&__p, 2u);
      uint64_t v4 = qword_26B17C488;
    }
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      std::string __p = (void *)0x20304000100;
      _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&__p, 8u);
    }
    int v5 = 3;
  }
  else
  {
    uint64_t v6 = sub_24B4AB040();
    uint64_t v7 = *(void *)(a1 + 8);
    if (sub_24B4AC45C(v6, *(unsigned __int16 *)(v7 + 72), *(unsigned __int16 *)(a1 + 56))
      && sub_24B4AC514(v6, (unsigned __int8 *)(v7 + 80), (unsigned __int8 *)(a1 + 64)))
    {
      int v5 = 0;
      int v8 = 0;
    }
    else
    {
      uint64_t v9 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(__p) = 0;
        _os_log_debug_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, SET session ID validation failed", (uint8_t *)&__p, 2u);
        uint64_t v9 = qword_26B17C488;
      }
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        std::string __p = (void *)0x20304000100;
        _os_log_error_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&__p, 8u);
      }
      int v8 = 1;
      int v5 = 12;
    }
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = sub_24B4AB040();
    BOOL v12 = sub_24B4AC388(v11, a1 + 248, v10 + 264);
    uint64_t v13 = sub_24B4AB040();
    int v14 = sub_24B4ABF28(v13, (unsigned __int8 *)(a1 + 272), (void *)(v10 + 288));
    if (!v12 || !v14)
    {
      unint64_t v15 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(__p) = 0;
        _os_log_debug_impl(&dword_24B3DE000, v15, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, SLP session ID validation failed", (uint8_t *)&__p, 2u);
        unint64_t v15 = qword_26B17C488;
      }
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        std::string __p = (void *)0x20304000100;
        _os_log_error_impl(&dword_24B3DE000, v15, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&__p, 8u);
      }
      int v8 = 1;
      int v5 = 12;
    }
    int v16 = *(unsigned __int8 *)(a1 + 26);
    uint64_t v17 = sub_24B47D534();
    int v18 = atomic_load((unsigned __int8 *)(v17 + 1));
    BOOL v19 = v18 == 255;
    uint64_t v20 = 1;
    if (v19) {
      uint64_t v20 = 2;
    }
    int v21 = atomic_load((unsigned __int8 *)(v17 + v20));
    if (v16 == v21 || *(_WORD *)(a1 + 32) != 5)
    {
      if (!v8)
      {
        int v28 = *(unsigned __int16 *)(a1 + 32);
        if (v28 == 6)
        {
          int v35 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
          {
            LOWORD(__p) = 0;
            _os_log_debug_impl(&dword_24B3DE000, v35, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, received SUPL END Message", (uint8_t *)&__p, 2u);
          }
          *(_DWORD *)(a1 + 20) = 1;
          (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);
          size_t v36 = sub_24B4A85B0(*(void *)(a1 + 8));
          (*(void (**)(void *, uint64_t))(*v36 + 40))(v36, a2);
        }
        else
        {
          if (v28 != 5)
          {
            uint64_t v37 = qword_26B17C488;
            if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
            {
              LOWORD(__p) = 0;
              _os_log_debug_impl(&dword_24B3DE000, v37, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, received unexpected Message", (uint8_t *)&__p, 2u);
              uint64_t v37 = qword_26B17C488;
            }
            if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
            {
              std::string __p = (void *)0x20204000100;
              _os_log_error_impl(&dword_24B3DE000, v37, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&__p, 8u);
            }
            int v5 = 2;
            goto LABEL_32;
          }
          uint64_t v29 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
          {
            LOWORD(__p) = 0;
            _os_log_debug_impl(&dword_24B3DE000, v29, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, received SUPL POS Message", (uint8_t *)&__p, 2u);
          }
          uint64_t v30 = sub_24B4B1200();
          int v31 = *(_DWORD *)(*(void *)(a1 + 8) + 376);
          size_t v44 = 0;
          v45[0] = 0;
          LODWORD(__p) = v31;
          char v46 = -1;
          *(void *)&v45[1] = 4;
          v45[3] = 0;
          sub_24B4B21B4(v30, (unsigned int *)&__p);
          unint64_t v32 = (uint64_t *)sub_24B4A113C();
          int v33 = sub_24B4A126C(v32, *(void *)(a1 + 40), *(void *)(a1 + 8));
          if (v33 == -7)
          {
            uint64_t v38 = qword_26B17C488;
            if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
            {
              LOWORD(__p) = 0;
              _os_log_debug_impl(&dword_24B3DE000, v38, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, ProcessPosPayload returned failure", (uint8_t *)&__p, 2u);
            }
            int v5 = 8;
            goto LABEL_32;
          }
          if ((_WORD)v33)
          {
            unint64_t v39 = qword_26B17C488;
            if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
            {
              LOWORD(__p) = 0;
              _os_log_debug_impl(&dword_24B3DE000, v39, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, ProcessPosPayload returned failure", (uint8_t *)&__p, 2u);
            }
            int v5 = 0;
            goto LABEL_32;
          }
          uint64_t v34 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
          {
            LOWORD(__p) = 0;
            _os_log_debug_impl(&dword_24B3DE000, v34, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, ProcessPosPayload returned success", (uint8_t *)&__p, 2u);
          }
          *(_DWORD *)(a1 + 360) = 1;
          (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);
        }
        return 1;
      }
    }
    else
    {
      uint64_t v22 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(__p) = 0;
        _os_log_debug_impl(&dword_24B3DE000, v22, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, protocol version validation failed", (uint8_t *)&__p, 2u);
        uint64_t v22 = qword_26B17C488;
      }
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        std::string __p = (void *)0x20304000100;
        _os_log_error_impl(&dword_24B3DE000, v22, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&__p, 8u);
      }
      int v5 = 10;
    }
  }
LABEL_32:
  __int16 v23 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(__p) = 0;
    _os_log_debug_impl(&dword_24B3DE000, v23, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosInitSent::ProcessSuplPos, sending SUPL END Message", (uint8_t *)&__p, 2u);
  }
  if (v5 == 12)
  {
    uint64_t v24 = *(void *)(a1 + 8);
    *(void *)(v24 + 64) = *(void *)(a1 + 48);
    *(_WORD *)(v24 + 72) = *(_WORD *)(a1 + 56);
    *(unsigned char *)(v24 + 80) = *(unsigned char *)(a1 + 64);
    sub_24B48BD54(v24 + 88, a1 + 72);
    if (v24 + 64 != a1 + 48)
    {
      sub_24B3EAC0C((void *)(v24 + 264), *(char **)(a1 + 248), *(char **)(a1 + 256), *(void *)(a1 + 256) - *(void *)(a1 + 248));
      *(unsigned char *)(v24 + 288) = *(unsigned char *)(a1 + 272);
      *(unsigned char *)(v24 + 296) = *(unsigned char *)(a1 + 280);
      sub_24B3EAC0C((void *)(v24 + 304), *(char **)(a1 + 288), *(char **)(a1 + 296), *(void *)(a1 + 296) - *(void *)(a1 + 288));
      sub_24B3EAC0C((void *)(v24 + 328), *(char **)(a1 + 312), *(char **)(a1 + 320), *(void *)(a1 + 320) - *(void *)(a1 + 312));
      sub_24B3EAC0C((void *)(v24 + 352), *(char **)(a1 + 336), *(char **)(a1 + 344), *(void *)(a1 + 344) - *(void *)(a1 + 336));
    }
  }
  *(_DWORD *)(a1 + 20) = 1;
  (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);
  uint64_t v25 = sub_24B4A85B0(*(void *)(a1 + 8));
  *(unsigned char *)(v25[5] + 456) = v5;
  *(_DWORD *)(v25[5] + 4) = 1;
  sub_24B3E39F4(&__p, 0xBB8uLL);
  v41[0] = &__p;
  v41[1] = 0;
  char v42 = 0;
  (*(void (**)(void *, void *))(*v25 + 32))(v25, v41);
  sub_24B48B960((uint64_t)v25);
  int v26 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v40 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v26, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving SuplPosInitSent::ProcessSuplPos", v40, 2u);
  }
  if (__p)
  {
    size_t v44 = __p;
    operator delete(__p);
  }
  return 0;
}

void sub_24B49ECC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B49ECE4(uint64_t a1)
{
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1 + 48))(a1)) {
    return 0;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

void *sub_24B49ED24(const char *a1, int a2, int a3, size_t size)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v7 = a3;
  uint64_t result = malloc_type_calloc(a3, size, 0xC27E8167uLL);
  if (!result)
  {
    uint64_t v9 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 134218498;
      size_t v10 = v7 * size;
      size_t v15 = v10;
      __int16 v16 = 2080;
      uint64_t v17 = a1;
      __int16 v18 = 1024;
      int v19 = a2;
      _os_log_error_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_ERROR, "#gpsd #supl gnssOsa_Calloc allocation failed Size,%lu,Fn,%s,Line,%d", buf, 0x1Cu);
    }
    else
    {
      size_t v10 = v7 * size;
    }
    snprintf((char *)buf, 0x400uLL, "Size,%lu,Fn,%s,Line,%d", v10, a1, a2);
    uint64_t v11 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)BOOL v12 = 136315138;
      uint64_t v13 = buf;
      _os_log_error_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_ERROR, "%s", v12, 0xCu);
    }
    __assert_rtn("gnssOsa_Calloc", "agpsmacosa.cpp", 34, "false && \"Memory allocation failure\"");
  }
  return result;
}

void *sub_24B49EEAC(uint64_t a1, int a2, void *__dst, unsigned int a4, void *__src, size_t __n)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  if (__dst && __src)
  {
    if (a4 >= __n)
    {
      size_t v10 = __dst;
      memcpy(__dst, __src, __n);
      return v10;
    }
    int v8 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v12 = 136315394;
      uint64_t v13 = a1;
      __int16 v14 = 1024;
      int v15 = a2;
      uint64_t v9 = "#gpsd #supl memcpy_s invalid input Caller,%s,line,%d";
LABEL_11:
      _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, v9, (uint8_t *)&v12, 0x12u);
    }
  }
  else
  {
    int v8 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v12 = 136315394;
      uint64_t v13 = a1;
      __int16 v14 = 1024;
      int v15 = a2;
      uint64_t v9 = "#gpsd #supl memcpy_s failure Caller,%s,line,%d";
      goto LABEL_11;
    }
  }
  return 0;
}

uint64_t sub_24B49EFE0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  unsigned __int8 v9 = 0;
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    if (v4)
    {
      uint64_t v5 = sub_24B47F19C(a1, &v9);
      v9 += 10;
      if (v5) {
        return v5;
      }
    }
    else
    {
      uint64_t v5 = sub_24B47DB4C(a1, 0, 9u, &v9);
      if (v5) {
        return v5;
      }
    }
    int v6 = v9;
    if (v9 > 0x10u)
    {
      uint64_t v5 = 4;
      *(unsigned char *)(a1 + 16) = 4;
      sub_24B47D810(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosMethod");
    }
    else
    {
      *a2 = v9;
      uint64_t v7 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)long long buf = 67174657;
        int v11 = v6;
        _os_log_debug_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl asn1PD_PosMethod, posMethod %{private}d", buf, 8u);
      }
      return 0;
    }
  }
  return v5;
}

uint64_t sub_24B49F120(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_11:
    sub_24B47D810(v8, v6, v7, "asn1PD_QoP");
    return v5;
  }
  int v9 = v4;
  *(_DWORD *)a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  *(_DWORD *)(a2 + 4) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  *(_DWORD *)(a2 + 8) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_11;
  }
  uint64_t v8 = sub_24B47DB4C(a1, 0, 0x7Fu, (unsigned char *)(a2 + 12));
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v8 = sub_24B47DB4C(a1, 0, 0x7Fu, (unsigned char *)(a2 + 13));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_11;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    uint64_t v8 = sub_24B47DDC8(a1, 0, 0xFFFFu, (_DWORD *)(a2 + 16));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_11;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    uint64_t v8 = sub_24B47DB4C(a1, 0, 7u, (unsigned char *)(a2 + 20));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_11;
    }
  }
  if (!v9) {
    return 0;
  }
  return sub_24B47ED0C(a1);
}

uint64_t sub_24B49F304(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_24B47EA88(a1, 0, 255, *(_DWORD *)(a2 + 8) - *(_DWORD *)a2, (void *)a2, 0);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_UTCTime");
  }
  return v4;
}

uint64_t sub_24B49F368(uint64_t a1, unint64_t *a2)
{
  int v6 = 0;
  sub_24B47DDC8(a1, 0, 0xFFu, &v6);
  sub_24B47E904(a1, 7 * v6, 7, a2);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_UTCTime");
  }
  return v4;
}

uint64_t sub_24B49F3E8(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_24B47DAA4(a1, 0, 127, *a2);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
LABEL_5:
    sub_24B47D810(v4, v6, v7, "asn1PE_PositionEstimate_uncertainty");
    return v5;
  }
  uint64_t v4 = sub_24B47DAA4(a1, 0, 127, a2[1]);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_5;
  }
  int v9 = a2[2];
  return sub_24B47DAA4(a1, 0, 180, v9);
}

uint64_t sub_24B49F4A4(uint64_t a1, unsigned char *a2)
{
  uint64_t v4 = sub_24B47DB4C(a1, 0, 0x7Fu, a2);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
LABEL_5:
    sub_24B47D810(v4, v6, v7, "asn1PD_PositionEstimate_uncertainty");
    return v5;
  }
  uint64_t v4 = sub_24B47DB4C(a1, 0, 0x7Fu, a2 + 1);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_5;
  }
  return sub_24B47DB4C(a1, 0, 0xB4u, a2 + 2);
}

uint64_t sub_24B49F560(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_13:
    sub_24B47D810(v7, v5, v6, "asn1PE_AltitudeInfo");
    return v4;
  }
  unsigned int v8 = *a2;
  if (v8 >= 2)
  {
    if (v8 == 255)
    {
      uint64_t v4 = 1;
      *(unsigned char *)(a1 + 16) = 1;
      int v10 = *(_DWORD *)(a1 + 8);
      int v11 = *(_DWORD *)(a1 + 12);
      unsigned int v12 = 1;
    }
    else
    {
      uint64_t v4 = 4;
      *(unsigned char *)(a1 + 16) = 4;
      int v10 = *(_DWORD *)(a1 + 8);
      int v11 = *(_DWORD *)(a1 + 12);
      unsigned int v12 = 4;
    }
    sub_24B47D810(v12, v10, v11, "asn1PE_AltitudeInfo_altitudeDirection");
    goto LABEL_12;
  }
  uint64_t v4 = sub_24B47DAA4(a1, 0, 1, *a2);
  int v9 = qword_26B17C488;
  if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    if (!v4) {
      goto LABEL_6;
    }
LABEL_12:
    sub_24B47D810(v4, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_AltitudeInfo_altitudeDirection");
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = v4;
    goto LABEL_13;
  }
  v15[0] = 67174657;
  v15[1] = v8;
  _os_log_debug_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl asn1PE_AltitudeInfo_altitudeDirection, value = %{private}d", (uint8_t *)v15, 8u);
  if (v4) {
    goto LABEL_12;
  }
LABEL_6:
  uint64_t v7 = sub_24B47DAA4(a1, 0, 0x7FFF, *((unsigned __int16 *)a2 + 1));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_13;
  }
  int v14 = a2[4];
  return sub_24B47DAA4(a1, 0, 127, v14);
}

uint64_t sub_24B49F768(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_10:
    sub_24B47D810(v8, v6, v7, "asn1PD_AltitudeInfo");
    return v5;
  }
  int v9 = v4;
  unsigned __int8 v14 = 0;
  uint64_t v10 = sub_24B47DB4C(a1, 0, 1u, &v14);
  if (v10)
  {
    uint64_t v5 = v10;
    int v11 = *(_DWORD *)(a1 + 8);
    int v12 = *(_DWORD *)(a1 + 12);
LABEL_9:
    sub_24B47D810(v10, v11, v12, "asn1PD_AltitudeInfo_altitudeDirection");
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_10;
  }
  if (v14 >= 2u)
  {
    uint64_t v5 = 4;
    *(unsigned char *)(a1 + 16) = 4;
    int v11 = *(_DWORD *)(a1 + 8);
    int v12 = *(_DWORD *)(a1 + 12);
    LODWORD(v10) = 4;
    goto LABEL_9;
  }
  *(unsigned char *)a2 = v14;
  uint64_t v8 = sub_24B47DC20(a1, 0, 0x7FFFu, (_WORD *)(a2 + 2));
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_10;
  }
  uint64_t v8 = sub_24B47DB4C(a1, 0, 0x7Fu, (unsigned char *)(a2 + 4));
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_10;
  }
  if (!v9) {
    return 0;
  }
  return sub_24B47ED0C(a1);
}

uint64_t sub_24B49F8D8(uint64_t a1, unsigned __int8 a2)
{
  if (a2 >= 2u)
  {
    if (a2 == 255)
    {
      uint64_t v3 = 1;
      *(unsigned char *)(a1 + 16) = 1;
      int v4 = *(_DWORD *)(a1 + 8);
      int v5 = *(_DWORD *)(a1 + 12);
      unsigned int v6 = 1;
    }
    else
    {
      uint64_t v3 = 4;
      *(unsigned char *)(a1 + 16) = 4;
      int v4 = *(_DWORD *)(a1 + 8);
      int v5 = *(_DWORD *)(a1 + 12);
      unsigned int v6 = 4;
    }
    sub_24B47D810(v6, v4, v5, "asn1PE_PositionEstimate_latitudeSign");
  }
  else
  {
    uint64_t v3 = sub_24B47DAA4(a1, 0, 1, a2);
    if (!v3) {
      return v3;
    }
  }
  sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PositionEstimate_latitudeSign");
  return v3;
}

uint64_t sub_24B49F984(uint64_t a1, unsigned __int8 *a2)
{
  unsigned __int8 v9 = 0;
  uint64_t v4 = sub_24B47DB4C(a1, 0, 1u, &v9);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
LABEL_6:
    sub_24B47D810(v4, v6, v7, "asn1PD_PositionEstimate_latitudeSign");
    return v5;
  }
  if (v9 > 1u)
  {
    uint64_t v5 = 4;
    *(unsigned char *)(a1 + 16) = 4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v4) = 4;
    goto LABEL_6;
  }
  uint64_t v5 = 0;
  *a2 = v9;
  return v5;
}

uint64_t sub_24B49FA24(uint64_t a1, uint64_t a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_9:
    sub_24B47D810(v7, v5, v6, "asn1PE_PositionEstimate");
    return v4;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)a2);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 4));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 8));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  uint64_t v4 = sub_24B49F8D8(a1, *(unsigned char *)(a2 + 12));
  if (v4) {
    return v4;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 0x7FFFFF, *(_DWORD *)(a2 + 16));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  uint64_t v7 = sub_24B47DAA4(a1, -8388608, 0x7FFFFF, *(_DWORD *)(a2 + 20));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v7 = sub_24B49F3E8(a1, (unsigned __int8 *)(a2 + 24));
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    uint64_t v7 = sub_24B47DAA4(a1, 0, 100, *(unsigned __int8 *)(a2 + 27));
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (!*(_DWORD *)(a2 + 8)) {
    return 0;
  }
  return sub_24B49F560(a1, (unsigned __int8 *)(a2 + 28));
}

uint64_t sub_24B49FC14(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_15:
    sub_24B47D810(v8, v6, v7, "asn1PD_PositionEstimate");
    return v5;
  }
  int v9 = v4;
  *(_DWORD *)a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 4) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  *(_DWORD *)(a2 + 8) = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_15;
  }
  uint64_t v8 = sub_24B49F984(a1, (unsigned __int8 *)(a2 + 12));
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  uint64_t v8 = sub_24B47DDC8(a1, 0, 0x7FFFFFu, (_DWORD *)(a2 + 16));
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  uint64_t v8 = sub_24B47DCF4(a1, -8388608, 0x7FFFFF, (_DWORD *)(a2 + 20));
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v8 = sub_24B49F4A4(a1, (unsigned char *)(a2 + 24));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 4))
  {
    uint64_t v8 = sub_24B47DB4C(a1, 0, 0x64u, (unsigned char *)(a2 + 27));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (*(_DWORD *)(a2 + 8))
  {
    uint64_t v8 = sub_24B49F768(a1, a2 + 28);
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_15;
    }
  }
  if (!v9) {
    return 0;
  }
  return sub_24B47ED0C(a1);
}

uint64_t sub_24B49FE40(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 9u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horvel_bearing");
  }
  return v3;
}

uint64_t sub_24B49FE94(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 0x10u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horvel_horspeed");
  }
  return v3;
}

uint64_t sub_24B49FEE8(uint64_t a1, unint64_t *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_7:
    sub_24B47D810(v8, v6, v7, "asn1PD_Horvel");
    return v5;
  }
  int v9 = v4;
  uint64_t v8 = sub_24B49FE40(a1, a2);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  uint64_t v8 = sub_24B49FE94(a1, a2 + 3);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  if (!v9) {
    return 0;
  }
  return sub_24B47ED0C(a1);
}

uint64_t sub_24B49FFC0(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 1u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandvervel_verdirect");
  }
  return v3;
}

uint64_t sub_24B4A0014(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 9u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandvervel_bearing");
  }
  return v3;
}

uint64_t sub_24B4A0068(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 0x10u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandvervel_horspeed");
  }
  return v3;
}

uint64_t sub_24B4A00BC(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 8u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandvervel_verspeed");
  }
  return v3;
}

uint64_t sub_24B4A0110(uint64_t a1, unint64_t *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_11:
    sub_24B47D810(v8, v6, v7, "asn1PD_Horandvervel");
    return v5;
  }
  int v9 = v4;
  uint64_t v8 = sub_24B49FFC0(a1, a2);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  uint64_t v8 = sub_24B4A0014(a1, a2 + 3);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  uint64_t v8 = sub_24B4A0068(a1, a2 + 6);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  uint64_t v8 = sub_24B4A00BC(a1, a2 + 9);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_11;
  }
  if (!v9) {
    return 0;
  }
  return sub_24B47ED0C(a1);
}

uint64_t sub_24B4A0238(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 9u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horveluncert_bearing");
  }
  return v3;
}

uint64_t sub_24B4A028C(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 0x10u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horveluncert_horspeed");
  }
  return v3;
}

uint64_t sub_24B4A02E0(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 8u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horveluncert_uncertspeed");
  }
  return v3;
}

uint64_t sub_24B4A0334(uint64_t a1, unint64_t *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_9:
    sub_24B47D810(v8, v6, v7, "asn1PD_Horveluncert");
    return v5;
  }
  int v9 = v4;
  uint64_t v8 = sub_24B4A0238(a1, a2);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  uint64_t v8 = sub_24B4A028C(a1, a2 + 3);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  uint64_t v8 = sub_24B4A02E0(a1, a2 + 6);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  if (!v9) {
    return 0;
  }
  return sub_24B47ED0C(a1);
}

uint64_t sub_24B4A0434(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 8u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandveruncert_verspeed");
  }
  return v3;
}

uint64_t sub_24B4A0488(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 8u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandveruncert_horuncertspeed");
  }
  return v3;
}

uint64_t sub_24B4A04DC(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 8u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandveruncert_veruncertspeed");
  }
  return v3;
}

uint64_t sub_24B4A0530(uint64_t a1, unint64_t *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_15:
    sub_24B47D810(v8, v6, v7, "asn1PD_Horandveruncert");
    return v5;
  }
  int v9 = v4;
  sub_24B47E048(a1, 1u, a2, 0);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandveruncert_verdirect");
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_15;
  }
  sub_24B47E048(a1, 9u, a2 + 3, 0);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandveruncert_bearing");
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_15;
  }
  sub_24B47E048(a1, 0x10u, a2 + 6, 0);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_Horandveruncert_horspeed");
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_15;
  }
  uint64_t v8 = sub_24B4A0434(a1, a2 + 9);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  uint64_t v8 = sub_24B4A0488(a1, a2 + 12);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  uint64_t v8 = sub_24B4A04DC(a1, a2 + 15);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_15;
  }
  if (!v9) {
    return 0;
  }
  return sub_24B47ED0C(a1);
}

void sub_24B4A0714(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
LABEL_3:
    sub_24B47D810(v7, v5, v6, "asn1PD_Velocity");
    return;
  }
  if (!v4)
  {
    __int16 v14 = 0;
    unsigned int v7 = sub_24B47DC20(a1, 0, 3u, &v14);
    if (v7)
    {
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      int v8 = v14;
      *(unsigned char *)a2 = v14;
      switch(v8)
      {
        case 0:
          int v9 = sub_24B49FEE8(a1, (unint64_t *)(a2 + 8));
          goto LABEL_17;
        case 1:
          int v9 = sub_24B4A0110(a1, (unint64_t *)(a2 + 56));
          goto LABEL_17;
        case 2:
          int v9 = sub_24B4A0334(a1, (unint64_t *)(a2 + 152));
          goto LABEL_17;
        case 3:
          int v9 = sub_24B4A0530(a1, (unint64_t *)(a2 + 224));
LABEL_17:
          int v10 = v9;
          if (!v9) {
            return;
          }
          goto LABEL_21;
        default:
          if (v8 == 255)
          {
            int v10 = 1;
            *(unsigned char *)(a1 + 16) = 1;
            int v11 = *(_DWORD *)(a1 + 8);
            int v12 = *(_DWORD *)(a1 + 12);
            unsigned int v13 = 1;
          }
          else
          {
            int v10 = 4;
            *(unsigned char *)(a1 + 16) = 4;
            int v11 = *(_DWORD *)(a1 + 8);
            int v12 = *(_DWORD *)(a1 + 12);
            unsigned int v13 = 4;
          }
          sub_24B47D810(v13, v11, v12, "asn1PD_Velocity");
LABEL_21:
          int v5 = *(_DWORD *)(a1 + 8);
          int v6 = *(_DWORD *)(a1 + 12);
          unsigned int v7 = v10;
          break;
      }
    }
    goto LABEL_3;
  }
  sub_24B47EDE0(a1);
}

uint64_t sub_24B4A08B8(uint64_t a1, int *a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_7:
    sub_24B47D810(v7, v5, v6, "asn1PE_Position");
    return v4;
  }
  sub_24B47D9A0((uint64_t **)a1, *a2);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_7;
  }
  uint64_t v7 = sub_24B49F304(a1, (uint64_t)(a2 + 2));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  return sub_24B49FA24(a1, (uint64_t)(a2 + 8));
}

uint64_t sub_24B4A098C(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_9:
    sub_24B47D810(v8, v6, v7, "asn1PD_Position");
    return v5;
  }
  int v9 = v4;
  *(_DWORD *)a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  uint64_t v8 = sub_24B49F368(a1, (unint64_t *)(a2 + 8));
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  uint64_t v8 = sub_24B49FC14(a1, a2 + 32);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  if (*(_DWORD *)a2)
  {
    sub_24B4A0714(a1, a2 + 72);
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_9;
    }
  }
  if (!v9) {
    return 0;
  }
  return sub_24B47ED0C(a1);
}

uint64_t sub_24B4A0AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_24B47E324(a1, 1, 0x2000, *(_DWORD *)(a2 + 8) - *(_DWORD *)a2, (void *)a2, 0, 0);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PosPayLoad_rrlpPayload");
  }
  return v4;
}

uint64_t sub_24B4A0B28(uint64_t a1, unint64_t *a2)
{
  int v6 = 0;
  sub_24B47DDC8(a1, 1, 0x2000u, &v6);
  sub_24B47E048(a1, 8 * v6, a2, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosPayLoad_rrlpPayload");
  }
  return v4;
}

uint64_t sub_24B4A0BA4(uint64_t a1, unsigned __int16 *a2)
{
  sub_24B47D9A0((uint64_t **)a1, *a2 > 3u);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_3;
  }
  unsigned int v9 = *a2;
  if (v9 < 4)
  {
    uint64_t v7 = sub_24B47DAA4(a1, 0, 2, v9 - 1);
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_3;
    }
    int v10 = *a2;
    if (v10 != 1)
    {
      if (v10 == 3)
      {
        uint64_t v4 = sub_24B4A0AC0(a1, (uint64_t)(a2 + 28));
        if (!v4) {
          return v4;
        }
        goto LABEL_17;
      }
      if (v10 != 2)
      {
        uint64_t v4 = 4;
        *(unsigned char *)(a1 + 16) = 4;
        int v5 = *(_DWORD *)(a1 + 8);
        int v6 = *(_DWORD *)(a1 + 12);
        LODWORD(v7) = 4;
        goto LABEL_3;
      }
    }
    uint64_t v4 = 1;
    *(unsigned char *)(a1 + 16) = 1;
    sub_24B47D810(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PosPayLoad");
LABEL_17:
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = v4;
    goto LABEL_3;
  }
  if (*((void *)a2 + 10))
  {
    uint64_t v7 = sub_24B47C06C(a1, a2);
    uint64_t v4 = v7;
    if (!v7) {
      return v4;
    }
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    uint64_t v4 = 1;
    LODWORD(v7) = 1;
  }
LABEL_3:
  sub_24B47D810(v7, v5, v6, "asn1PE_PosPayLoad");
  return v4;
}

uint64_t sub_24B4A0D28(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_3;
  }
  if (!v4)
  {
    unsigned __int16 v11 = 0;
    uint64_t v8 = sub_24B47DC20(a1, 0, 2u, &v11);
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_3;
    }
    int v10 = v11;
    *(_WORD *)a2 = v11 + 1;
    if (v10)
    {
      if (v10 == 2)
      {
        uint64_t v5 = sub_24B4A0B28(a1, (unint64_t *)(a2 + 56));
        if (!v5) {
          return v5;
        }
        goto LABEL_15;
      }
      if (v10 != 1)
      {
        uint64_t v5 = 4;
        *(unsigned char *)(a1 + 16) = 4;
        int v6 = *(_DWORD *)(a1 + 8);
        int v7 = *(_DWORD *)(a1 + 12);
        LODWORD(v8) = 4;
        goto LABEL_3;
      }
    }
    uint64_t v5 = 1;
    *(unsigned char *)(a1 + 16) = 1;
    sub_24B47D810(1u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_PosPayLoad");
LABEL_15:
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = v5;
    goto LABEL_3;
  }
  uint64_t v8 = sub_24B47BCB4(a1, a2);
  uint64_t v5 = v8;
  if (!v8) {
    return v5;
  }
  int v6 = *(_DWORD *)(a1 + 8);
  int v7 = *(_DWORD *)(a1 + 12);
LABEL_3:
  sub_24B47D810(v8, v6, v7, "asn1PD_PosPayLoad");
  return v5;
}

uint64_t sub_24B4A0E80(uint64_t a1, uint64_t a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
LABEL_5:
    sub_24B47D810(v7, v5, v6, "asn1PE_SUPLPOS");
    return v4;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)a2);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_5;
  }
  return sub_24B4A0BA4(a1, (unsigned __int16 *)(a2 + 8));
}

uint64_t sub_24B4A0F2C(uint64_t a1, _DWORD *a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_7:
    sub_24B47D810(v8, v6, v7, "asn1PD_SUPLPOS");
    return v5;
  }
  int v9 = v4;
  *a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_7;
  }
  uint64_t v8 = sub_24B4A0D28(a1, (uint64_t)(a2 + 2));
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  if (*a2)
  {
    sub_24B4A0714(a1, (uint64_t)(a2 + 36));
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      goto LABEL_7;
    }
  }
  if (!v9) {
    return 0;
  }
  uint64_t v8 = sub_24B47ED0C(a1);
  uint64_t v5 = v8;
  if (v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  return v5;
}

uint64_t sub_24B4A103C(uint64_t result, int a2)
{
  *(_DWORD *)uint64_t result = a2;
  if (*(unsigned char *)(result + 196))
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void **)(result + 880);
    if (v3)
    {
      int v4 = *(void **)(v2 + 944);
      if (v4 && (uint64_t v5 = (void *)*v4) != 0 && (v6 = (void (*)(void, uint64_t))v5[2]) != 0) {
        v6(*v5, v2 + 880);
      }
      else {
        free(v3);
      }
      *(void *)(v2 + 880) = 0;
    }
    longjmp((int *)(v2 + 4), a2);
  }
  return result;
}

void sub_24B4A10C0(uint64_t a1, int a2)
{
  if (!a1 || (*(_DWORD *)a1 = a2, !*(unsigned char *)(a1 + 196))) {
    exit(a2);
  }
  int v4 = *(void **)(a1 + 880);
  if (v4)
  {
    uint64_t v5 = *(void **)(a1 + 944);
    if (v5 && (int v6 = (void *)*v5) != 0 && (v7 = (void (*)(void, uint64_t))v6[2]) != 0) {
      v7(*v6, a1 + 880);
    }
    else {
      free(v4);
    }
    *(void *)(a1 + 880) = 0;
  }
  longjmp((int *)(a1 + 4), a2);
}

uint64_t sub_24B4A113C()
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  if (qword_26B17C3F8 != -1) {
    dispatch_once(&qword_26B17C3F8, &unk_26FE86100);
  }
  uint64_t result = qword_26B17C3F0;
  if (!qword_26B17C3F0)
  {
    uint64_t v1 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v2 = 136315138;
      uint64_t v3 = "GetInstance";
      _os_log_error_impl(&dword_24B3DE000, v1, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v2, 0xCu);
    }
    __assert_rtn("GetInstance", "SuplPosPayloadHandler.cpp", 56, "false && \"Memory allocation failure\"");
  }
  return result;
}

void *sub_24B4A1234()
{
  uint64_t result = operator new(0x18uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    *uint64_t result = 0;
    result[1] = 0;
    result[2] = 0;
  }
  qword_26B17C3F0 = (uint64_t)result;
  return result;
}

uint64_t sub_24B4A126C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = *MEMORY[0x263EF8340];
  if (a2 && a3)
  {
    std::string __p = 0;
    uint64_t v38 = 0;
    char v40 = 0;
    uint64_t v39 = 0;
    sub_24B4A1BBC(a1);
    BOOL v6 = *(unsigned __int8 *)(a3 + 380) == 2;
    int v41 = *(_DWORD *)(a3 + 376);
    BOOL v42 = v6;
    int v7 = *(unsigned __int16 *)(a2 + 8);
    if (v7 != 4)
    {
      if (v7 != 3)
      {
        int v10 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = 770;
          _os_log_error_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
          int v10 = qword_26B17C488;
        }
        if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_36;
        }
        *(_WORD *)long long buf = 0;
        goto LABEL_86;
      }
      uint64_t v8 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, payload type RRLP", buf, 2u);
      }
      uint64_t v9 = sub_24B4AF924();
      if (sub_24B4AFE44(v9, *(_DWORD *)(a3 + 596)))
      {
        int v10 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)long long buf = 0;
          _os_log_debug_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, RRLP on LTE not supported", buf, 2u);
          int v10 = qword_26B17C488;
        }
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = 515;
          _os_log_error_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
          int v10 = qword_26B17C488;
        }
        if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_36;
        }
        *(_WORD *)long long buf = 0;
LABEL_86:
        _os_log_debug_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving SuplPosPayloadHandler::ProcessPosPayload", buf, 2u);
LABEL_36:
        __int16 v12 = -7;
        goto LABEL_73;
      }
      char v40 = 1;
      if (&__p == (void **)(a2 + 64))
      {
        int v26 = 0;
        uint64_t v25 = 0;
      }
      else
      {
        sub_24B3EAC0C(&__p, *(char **)(a2 + 64), *(char **)(a2 + 72), *(void *)(a2 + 72) - *(void *)(a2 + 64));
        uint64_t v25 = __p;
        int v26 = v38;
      }
      sub_24B47CB4C((uint64_t)v25, v26 - v25);
      if (*(_WORD *)(a2 + 8) == 4) {
        sub_24B4B0220((uint64_t)&__p);
      }
      goto LABEL_72;
    }
    unsigned int v13 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, payload type LPP", buf, 2u);
    }
    if (!*(_DWORD *)(a2 + 88))
    {
      uint64_t v24 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_debug_impl(&dword_24B3DE000, v24, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, LPP payload not present", buf, 2u);
        uint64_t v24 = qword_26B17C488;
      }
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = 515;
        _os_log_error_impl(&dword_24B3DE000, v24, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
        uint64_t v24 = qword_26B17C488;
      }
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_debug_impl(&dword_24B3DE000, v24, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving SuplPosPayloadHandler::ProcessPosPayload", buf, 2u);
      }
      goto LABEL_68;
    }
    uint64_t v14 = sub_24B4AF924();
    if (!sub_24B4AFE44(v14, *(_DWORD *)(a3 + 596)))
    {
      int v10 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_debug_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, LPP received in non-LTE", buf, 2u);
        int v10 = qword_26B17C488;
      }
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = 515;
        _os_log_error_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
        int v10 = qword_26B17C488;
      }
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_36;
      }
      *(_WORD *)long long buf = 0;
      goto LABEL_86;
    }
    char v40 = 3;
    int v15 = operator new(0x38uLL, MEMORY[0x263F8C180]);
    if (v15)
    {
      v15[6] = 0;
      *((_OWORD *)v15 + 1) = 0u;
      *((_OWORD *)v15 + 2) = 0u;
      *(_OWORD *)int v15 = 0u;
      *a1 = (uint64_t)v15;
      uint64_t v17 = *(void *)(a2 + 96);
      uint64_t v16 = *(void *)(a2 + 104);
      if (v16 != v17)
      {
        uint64_t v18 = 0;
        unint64_t v19 = 0;
        do
        {
          uint64_t v20 = v17 + v18;
          if (*(void *)(v17 + v18) != *(void *)(v17 + v18 + 8))
          {
            ++*((unsigned char *)a1 + 8);
            uint64_t v21 = *a1;
            uint64_t v22 = *(void **)(*a1 + 16);
            if ((unint64_t)v22 >= *(void *)(*a1 + 24))
            {
              uint64_t v23 = sub_24B47C3E4((uint64_t *)(v21 + 8), v20);
            }
            else
            {
              *uint64_t v22 = 0;
              v22[1] = 0;
              v22[2] = 0;
              sub_24B47A720(v22, *(const void **)v20, *(void *)(v20 + 8), *(void *)(v20 + 8) - *(void *)v20);
              uint64_t v23 = (uint64_t)(v22 + 3);
              *(void *)(v21 + 16) = v22 + 3;
            }
            *(void *)(v21 + 16) = v23;
            sub_24B47CB4C(*(void *)(*(void *)(*a1 + 8) + v18), *(void *)(*(void *)(*a1 + 8) + v18 + 8) - *(void *)(*(void *)(*a1 + 8) + v18));
            uint64_t v17 = *(void *)(a2 + 96);
            uint64_t v16 = *(void *)(a2 + 104);
          }
          ++v19;
          v18 += 24;
        }
        while (v19 < 0xAAAAAAAAAAAAAAABLL * ((v16 - v17) >> 3));
      }
    }
    else
    {
      *a1 = 0;
      uint64_t v27 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_debug_impl(&dword_24B3DE000, v27, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::CopyLppPayLoad, mem allocation failed", buf, 2u);
        uint64_t v27 = qword_26B17C488;
      }
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = 1537;
        _os_log_error_impl(&dword_24B3DE000, v27, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      }
    }
    int v28 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v28, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, calling ProcessLppPayload", buf, 2u);
    }
    if (*a1)
    {
      int v29 = *(_DWORD *)(a3 + 376);
      uint64_t v30 = *(void *)(sub_24B4A4C30() + 24);
      if (v30)
      {
        while (*(_DWORD *)v30 != v29)
        {
          uint64_t v30 = *(void *)(v30 + 8);
          if (!v30) {
            goto LABEL_61;
          }
        }
        if (*((char *)a1 + 8) >= 1)
        {
          uint64_t v33 = 0;
          unint64_t v34 = 0;
          while (1)
          {
            uint64_t v35 = *a1;
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(*a1 + 16) - *(void *)(*a1 + 8)) >> 3) <= v34) {
              break;
            }
            int v47 = 0;
            BOOL v48 = 0;
            char v46 = 0;
            size_t v44 = 0;
            uint64_t v45 = 0;
            *(void *)long long buf = 0;
            size_t v36 = (char **)(*(void *)(v35 + 8) + v33);
            if (v36 != (char **)buf) {
              sub_24B3EAC0C(buf, *v36, v36[1], v36[1] - *v36);
            }
            char v46 = 3;
            int v47 = v29;
            BOOL v48 = v6;
            sub_24B4B0220((uint64_t)buf);
            if (*(void *)buf)
            {
              size_t v44 = *(void **)buf;
              operator delete(*(void **)buf);
            }
            __int16 v12 = 0;
            ++v34;
            v33 += 24;
            if ((uint64_t)v34 >= *((char *)a1 + 8)) {
              goto LABEL_73;
            }
          }
        }
LABEL_72:
        __int16 v12 = 0;
LABEL_73:
        if (__p)
        {
          uint64_t v38 = __p;
          operator delete(__p);
        }
        return v12;
      }
LABEL_61:
      int v31 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v29;
        _os_log_error_impl(&dword_24B3DE000, v31, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::ProcessLppPayload, session not found %d", buf, 8u);
        int v31 = qword_26B17C488;
      }
      if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
      {
LABEL_68:
        __int16 v12 = -1;
        goto LABEL_73;
      }
      *(_DWORD *)long long buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = 513;
    }
    else
    {
      int v31 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)long long buf = 0;
        _os_log_error_impl(&dword_24B3DE000, v31, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::ProcessLppPayload, m_lppReqParams NULL", buf, 2u);
        int v31 = qword_26B17C488;
      }
      if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
        goto LABEL_68;
      }
      *(_DWORD *)long long buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = 513;
    }
    _os_log_error_impl(&dword_24B3DE000, v31, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    goto LABEL_68;
  }
  unsigned __int16 v11 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)long long buf = 0;
    _os_log_error_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosPayload, suplpos or session NULL", buf, 2u);
    unsigned __int16 v11 = qword_26B17C488;
  }
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)long long buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = 513;
    _os_log_error_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
  return -1;
}

void sub_24B4A1B78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  if (a10) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_24B4A1BBC(void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *result;
  if (*result)
  {
    uint64_t v4 = (void **)(v2 + 32);
    sub_24B49DB08(&v4);
    uint64_t v4 = (void **)(v2 + 8);
    sub_24B49DB08(&v4);
    uint64_t result = (void *)MEMORY[0x24C5D2700](v2, 0x1020C401E2BB44DLL);
  }
  *uint64_t v1 = 0;
  uint64_t v3 = v1[2];
  if (v3)
  {
    uint64_t v4 = (void **)(v3 + 32);
    sub_24B49DB08(&v4);
    uint64_t v4 = (void **)(v3 + 8);
    sub_24B49DB08(&v4);
    uint64_t result = (void *)MEMORY[0x24C5D2700](v3, 0x1020C401E2BB44DLL);
  }
  void v1[2] = 0;
  *((unsigned char *)v1 + 8) = 0;
  return result;
}

void sub_24B4A1C70(uint64_t a1, char **a2, int a3, uint64_t a4)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v4 = qword_26B17C488;
  if (a4)
  {
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v14[0]) = 0;
      _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosResponse, update state to Supl_Pos_Recd", (uint8_t *)v14, 2u);
    }
    uint64_t v8 = sub_24B4A85B0(a4);
    sub_24B4AA6E4((uint64_t)v8, 5, a4);
    uint64_t v9 = sub_24B4A85B0(a4);
    uint64_t v10 = (uint64_t)v9;
    unsigned __int16 v11 = *a2;
    __int16 v12 = a2[1];
    if (*a2 != v12)
    {
      *(_WORD *)(v9[5] + 8) = 3;
      unsigned int v13 = (char **)(v9[5] + 64);
      if (v13 != a2) {
        sub_24B3EAC0C(v13, v11, v12, v12 - v11);
      }
    }
    sub_24B4A42B8(v10, a3);
  }
  else
  {
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v14[0]) = 0;
      _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::ProcessPosResponse, session NULL", (uint8_t *)v14, 2u);
      uint64_t v4 = qword_26B17C488;
    }
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      v14[0] = 67109120;
      v14[1] = 513;
      _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v14, 8u);
    }
  }
}

uint64_t sub_24B4A1E10(uint64_t a1, int a2, char a3)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v5 = *(void *)(sub_24B4A4C30() + 24);
  if (v5)
  {
    while (*(_DWORD *)v5 != a2)
    {
      uint64_t v5 = *(void *)(v5 + 8);
      if (!v5) {
        goto LABEL_4;
      }
    }
    buf[0] = 0;
    uint64_t v21 = 0;
    int v22 = -1;
    uint64_t v23 = 0;
    *(void *)uint64_t v25 = 0;
    uint64_t v24 = 0;
    *(void *)((char *)&v25[1] + 1) = 0;
    *(void *)&v25[5] = 0;
    v25[7] = 0;
    uint64_t v26 = -1;
    uint64_t v27 = 0;
    __int16 v28 = 0;
    __int16 v29 = -1;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    v32[0] = 0;
    *(void *)((char *)v32 + 6) = 0;
    memset(&v32[2], 0, 24);
    char v33 = 1;
    uint64_t v8 = *(void *)(sub_24B4AF924() + 16);
    if (v8)
    {
      while (*(_DWORD *)v8 != *(_DWORD *)(v5 + 588))
      {
        uint64_t v8 = *(void *)(v8 + 8);
        if (!v8) {
          goto LABEL_14;
        }
      }
      sub_24B49B6F8((uint64_t)buf, v8 + 56);
    }
LABEL_14:
    unsigned __int16 v10 = *(_WORD *)(v5 + 512);
    uint64_t v11 = *(void *)(v5 + 520);
    __int16 v12 = 0;
    unsigned int v13 = 0;
    uint64_t v14 = 0;
    sub_24B47A720(&v12, *(const void **)(v5 + 528), *(void *)(v5 + 536), *(void *)(v5 + 536) - *(void *)(v5 + 528));
    std::string __p = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    sub_24B47A720(&__p, *(const void **)(v5 + 552), *(void *)(v5 + 560), *(void *)(v5 + 560) - *(void *)(v5 + 552));
    char v18 = *(unsigned char *)(v5 + 576);
    sub_24B4B0750(a2, a3, &v10);
    if (__p)
    {
      uint64_t v16 = __p;
      operator delete(__p);
    }
    if (v12)
    {
      unsigned int v13 = v12;
      operator delete(v12);
    }
    sub_24B49B3B0((uint64_t)buf);
    return 0;
  }
  else
  {
LABEL_4:
    BOOL v6 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::ProcessLppAdReq, session NULL", buf, 2u);
      BOOL v6 = qword_26B17C488;
    }
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 67109120;
      int v20 = 513;
      _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    }
    return -1;
  }
}

void sub_24B4A2060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
}

void *sub_24B4A20A0(void *a1)
{
  uint64_t v2 = (void *)a1[5];
  if (v2)
  {
    a1[6] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[2];
  if (v3)
  {
    a1[3] = v3;
    operator delete(v3);
  }
  return a1;
}

void sub_24B4A20E4(uint64_t a1, uint64_t a2)
{
  v26[5] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24B4A4C30();
  int v5 = *(_DWORD *)(a2 + 28);
  uint64_t v6 = *(void *)(v4 + 24);
  if (!v6)
  {
LABEL_4:
    int v7 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      LODWORD(v26[0]) = 67109120;
      HIDWORD(v26[0]) = v5;
      _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::HandleLppPosResponseFromStack, session not found %d", (uint8_t *)v26, 8u);
      int v7 = qword_26B17C488;
    }
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      return;
    }
    v26[0] = 0x20104000100;
LABEL_8:
    _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v26, 8u);
    return;
  }
  while (*(_DWORD *)v6 != v5)
  {
    uint64_t v6 = *(void *)(v6 + 8);
    if (!v6) {
      goto LABEL_4;
    }
  }
  uint64_t v8 = v6 - 8;
  *(_DWORD *)(v6 + 416) = *(_DWORD *)(a2 + 32);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned char *)(a2 + 24))
  {
    unsigned __int16 v10 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      LODWORD(v26[0]) = 67109120;
      HIDWORD(v26[0]) = v9;
      _os_log_error_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::HandleLppPosResponseFromStack, lppstatus %d", (uint8_t *)v26, 8u);
      unsigned __int16 v10 = qword_26B17C488;
    }
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      v26[0] = 0x20304000100;
      _os_log_error_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v26, 8u);
    }
    uint64_t v11 = sub_24B4A85B0(v8);
    sub_24B4AA6E4((uint64_t)v11, 5, v8);
    __int16 v12 = sub_24B4A85B0(v8);
    sub_24B4A4858((uint64_t)v12, *(uint64_t **)(a1 + 16));
    sub_24B4A42B8((uint64_t)v12, 1);
    sub_24B4A1BBC((void *)a1);
    return;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (*(void *)a2 == v13) {
    return;
  }
  sub_24B47CB4C(*(void *)a2, v13 - *(void *)a2);
  uint64_t v14 = *(void **)(a1 + 16);
  if (v14) {
    goto LABEL_20;
  }
  uint64_t v15 = operator new(0x38uLL, MEMORY[0x263F8C180]);
  if (v15)
  {
    uint64_t v14 = v15;
    v15[6] = 0;
    *((_OWORD *)v15 + 1) = 0u;
    *((_OWORD *)v15 + 2) = 0u;
    *(_OWORD *)uint64_t v15 = 0u;
    *(void *)(a1 + 16) = v15;
LABEL_20:
    *(_DWORD *)uint64_t v14 = 1;
    uint64_t v16 = (void *)v14[1];
    uint64_t v17 = (void *)v14[2];
    if (v17 == v16)
    {
      if ((void *)v14[3] == v17)
      {
        v26[4] = v14 + 3;
        int v22 = operator new(0x18uLL);
        v26[0] = v22;
        v26[1] = v22;
        v22[1] = 0;
        v22[2] = 0;
        *int v22 = 0;
        void v26[2] = v22 + 3;
        v26[3] = v22 + 3;
        sub_24B47C4F8(v14 + 1, v26);
        sub_24B47C6DC((uint64_t)v26);
      }
      else
      {
        *uint64_t v17 = 0;
        v17[1] = 0;
        v17[2] = 0;
        _DWORD v14[2] = v17 + 3;
      }
    }
    else if (0xAAAAAAAAAAAAAAABLL * (v17 - v16) >= 2)
    {
      char v18 = v16 + 3;
      if (v17 != v16 + 3)
      {
        unint64_t v19 = (void *)v14[2];
        do
        {
          uint64_t v21 = (void *)*(v19 - 3);
          v19 -= 3;
          int v20 = v21;
          if (v21)
          {
            *(v17 - 2) = v20;
            operator delete(v20);
          }
          uint64_t v17 = v19;
        }
        while (v19 != v18);
      }
      _DWORD v14[2] = v18;
    }
    uint64_t v23 = *(void **)(*(void *)(a1 + 16) + 8);
    if (v23 != (void *)a2) {
      sub_24B3EAC0C(v23, *(char **)a2, *(char **)(a2 + 8), *(void *)(a2 + 8) - *(void *)a2);
    }
    uint64_t v24 = sub_24B4A85B0(v8);
    sub_24B4AA6E4((uint64_t)v24, 5, v8);
    uint64_t v25 = sub_24B4A85B0(v8);
    sub_24B4A4858((uint64_t)v25, *(uint64_t **)(a1 + 16));
    sub_24B4A42B8((uint64_t)v25, 0);
    sub_24B4A1BBC((void *)a1);
    return;
  }
  *(void *)(a1 + 16) = 0;
  int v7 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    LOWORD(v26[0]) = 0;
    _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplPosPayloadHandler::HandleLppPosResponseFromStack, rsp params mem allocation failure", (uint8_t *)v26, 2u);
    int v7 = qword_26B17C488;
  }
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    v26[0] = 0x60104000100;
    goto LABEL_8;
  }
}

void sub_24B4A2520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_24B4A253C(unsigned __int16 *a1, _DWORD *a2)
{
  v39[37] = *MEMORY[0x263EF8340];
  sub_24B3E3128(__p, "gps_set_gps_time");
  uint64_t v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v31 = __p;
    if (__p[23] < 0) {
      uint64_t v31 = *(unsigned char **)__p;
    }
    __src[0] = 136315138;
    *(void *)&__src[1] = v31;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Entered %s", (uint8_t *)__src, 0xCu);
  }
  if ((__p[23] & 0x80000000) != 0) {
    operator delete(*(void **)__p);
  }
  uint64_t v5 = 2;
  do
  {
    uint64_t v6 = &__src[v5];
    *(_WORD *)uint64_t v6 = -1;
    *((unsigned char *)v6 + 2) = -1;
    *(void *)(v6 + 1) = -1;
    *((unsigned char *)v6 + 12) = -1;
    v5 += 4;
  }
  while (v6 + 4 != &__src[66]);
  int v7 = *((_DWORD *)a1 + 1);
  __src[0] = v7;
  int v8 = *a1;
  LOWORD(__src[1]) = *a1;
  LOBYTE(__src[66]) = *((unsigned char *)a1 + 2);
  __src[67] = 1;
  __src[68] = 2 * (*a2 != 0);
  __src[69] = a2[2];
  int v9 = *((unsigned __int8 *)a1 + 8);
  BYTE2(__src[1]) = *((unsigned char *)a1 + 8);
  HIBYTE(__src[1]) = *((unsigned char *)a1 + 72);
  unsigned int v10 = HIBYTE(__src[1]);
  if (HIBYTE(__src[1]))
  {
    unint64_t v11 = 0;
    uint64_t v12 = 16 * HIBYTE(__src[1]);
    uint64_t v13 = a1 + 40;
    do
    {
      uint64_t v14 = &__src[v11 / 4];
      *((unsigned char *)v14 + 10) = *(v13 - 6);
      int v15 = *(v13 - 1);
      v14[3] = *(v13 - 2);
      unsigned __int8 v14[4] = v15;
      *((unsigned char *)v14 + 20) = *v13;
      *((_WORD *)v14 + 4) = *((_WORD *)v13 - 2);
      v11 += 16;
      v13 += 8;
    }
    while (v12 != v11);
  }
  uint64_t v16 = qword_26B17C488;
  char v33 = a2;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string __p = 67109888;
    *(_DWORD *)&__p[4] = v7;
    *(_WORD *)&__p[8] = 1024;
    *(_DWORD *)&__p[10] = v9;
    *(_WORD *)&__p[14] = 1024;
    *(_DWORD *)&__p[16] = v8;
    *(_WORD *)&__p[20] = 1024;
    *(_DWORD *)&__p[22] = v10;
    _os_log_debug_impl(&dword_24B3DE000, v16, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp gpsTow,%u,GpsTowUncK,%u,GpsWeek,%u,,NumTowAssist,%u", __p, 0x1Au);
    unsigned int v10 = HIBYTE(__src[1]);
    if (!HIBYTE(__src[1])) {
      goto LABEL_15;
    }
  }
  else if (!v10)
  {
    goto LABEL_15;
  }
  unint64_t v17 = 0;
  char v18 = qword_26B17C488;
  unint64_t v19 = (unsigned __int8 *)&__src[2] + 2;
  do
  {
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      int v20 = *v19;
      int v21 = *(_DWORD *)(v19 + 2);
      int v22 = *(_DWORD *)(v19 + 6);
      int v23 = v19[10];
      int v24 = *((unsigned __int16 *)v19 - 1);
      *(_DWORD *)std::string __p = 134219264;
      *(void *)&__p[4] = v17;
      *(_WORD *)&__p[12] = 1024;
      *(_DWORD *)&__p[14] = v20;
      *(_WORD *)&__p[18] = 1024;
      *(_DWORD *)&__p[20] = v21;
      *(_WORD *)&__p[24] = 1024;
      *(_DWORD *)&__p[26] = v22;
      *(_WORD *)&__p[30] = 1024;
      LODWORD(v39[0]) = v23;
      WORD2(v39[0]) = 1024;
      *(_DWORD *)((char *)v39 + 6) = v24;
      _os_log_impl(&dword_24B3DE000, v18, OS_LOG_TYPE_DEFAULT, "Index,%zu,Satid,%u,antiSpoof,%u,Alert,%u,tlmRes,%u,tlmWord,%u", __p, 0x2Au);
      char v18 = qword_26B17C488;
      unsigned int v10 = HIBYTE(__src[1]);
    }
    ++v17;
    v19 += 16;
  }
  while (v17 < v10);
LABEL_15:
  uint64_t v25 = *((void *)a1 + 26);
  if (v25) {
    MEMORY[0x24C5D26D0](v25, 0x1000C80737C248BLL);
  }
  *((void *)a1 + 26) = 0;
  uint64_t v26 = sub_24B4B1200();
  memcpy(__dst, __src, sizeof(__dst));
  memmove((void *)(v26 + 144), __src, 0x118uLL);
  uint64_t v27 = *(NSObject **)(v26 + 96);
  *(void *)std::string __p = MEMORY[0x263EF8330];
  *(void *)&__p[8] = 3221225472;
  *(void *)&__p[16] = sub_24B4B55C4;
  *(void *)&__p[24] = &unk_2652DD030;
  v39[0] = v26;
  memcpy(&v39[1], __dst, 0x118uLL);
  dispatch_async(v27, __p);
  int v28 = v33[2];
  uint64_t v29 = sub_24B4B1200();
  *(_DWORD *)&__p[20] = 0;
  *(void *)&__p[8] = 0;
  *(void *)&__p[24] = 0;
  *(_DWORD *)std::string __p = v28;
  LOBYTE(v39[0]) = -1;
  *(_DWORD *)&__p[16] = 35;
  sub_24B4B21B4(v29, (unsigned int *)__p);
  sub_24B3E3128(__p, "gps_set_gps_time");
  uint64_t v30 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    unint64_t v32 = __p;
    if (__p[23] < 0) {
      unint64_t v32 = *(unsigned char **)__p;
    }
    *(_DWORD *)long long buf = 136315138;
    size_t v36 = v32;
    _os_log_debug_impl(&dword_24B3DE000, v30, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Leaving %s", buf, 0xCu);
  }
  if ((__p[23] & 0x80000000) != 0) {
    operator delete(*(void **)__p);
  }
}

void sub_24B4A29B4(unsigned __int8 *a1, _DWORD *a2)
{
  uint64_t v78 = *MEMORY[0x263EF8340];
  sub_24B3E3128(&__p, "gps_set_based_aid");
  uint64_t v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    p_p = &__p;
    if (SBYTE7(v75) < 0) {
      p_p = __p;
    }
    __src[0] = 136315138;
    *(void *)&__src[1] = p_p;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Entered %s", (uint8_t *)__src, 0xCu);
  }
  if (SBYTE7(v75) < 0) {
    operator delete(__p);
  }
  LOBYTE(__src[0]) = -1;
  uint64_t v5 = 1;
  *(void *)&long long v6 = 0x8000000080000000;
  *((void *)&v6 + 1) = 0x8000000080000000;
  do
  {
    int v7 = &__src[v5];
    *(_OWORD *)int v7 = xmmword_24B4BC200;
    *((_OWORD *)v7 + 1) = v6;
    *((_OWORD *)v7 + 2) = xmmword_24B4BC210;
    *((void *)v7 + 6) = 0x8000800080008000;
    v7[14] = 0x80000000;
    *((_WORD *)v7 + 30) = -1;
    v7[16] = -1;
    *((unsigned char *)v7 + 68) = 127;
    v7[18] = -1;
    v5 += 24;
    *((unsigned char *)v7 + 76) = -1;
  }
  while (v7 + 24 != &__src[385]);
  *(void *)&__src[385] = -1;
  __src[387] = -1;
  if (*a1)
  {
    int v69 = a2;
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    LOBYTE(__src[0]) = *a1;
    uint64_t v10 = 96;
    do
    {
      unint64_t v11 = a1;
      uint64_t v12 = *((void *)a1 + 1);
      uint64_t v13 = v12 + v10;
      uint64_t v14 = &__src[v8];
      *((unsigned char *)v14 + 64) = *(unsigned char *)(v12 + v10 - 94);
      *((unsigned char *)v14 + 60) = *(unsigned char *)(v12 + v10 - 96);
      *((unsigned char *)v14 + 65) = *(unsigned char *)(v12 + v10 - 92);
      *((unsigned char *)v14 + 61) = *(unsigned char *)(v12 + v10 - 91);
      unsigned int v15 = *(unsigned __int8 *)(v12 + v10 - 90);
      if (v15 >= 0x3F) {
        LOBYTE(v15) = 63;
      }
      *((unsigned char *)v14 + 62) = v15;
      v14[17] = *(unsigned __int8 *)(v13 - 86);
      *((_WORD *)v14 + 18) = *(_WORD *)(v13 - 88);
      *((_WORD *)v14 + 19) = *(_WORD *)(v13 - 66);
      *(_OWORD *)(v14 + 21) = *(_OWORD *)(v13 - 84);
      int v16 = *(__int16 *)(v13 - 68);
      int v17 = *(unsigned __int16 *)(v13 - 68);
      *((unsigned char *)v14 + 72) = *(_WORD *)(v13 - 68);
      int v18 = *(unsigned __int16 *)(v13 - 64);
      *((unsigned char *)v14 + 63) = v18;
      if (v16 > 127)
      {
        unint64_t v19 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          LODWORD(__p) = 67109120;
          HIDWORD(__p) = v17;
          _os_log_error_impl(&dword_24B3DE000, v19, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp ephem_tgd,%d", (uint8_t *)&__p, 8u);
          uint64_t v12 = *((void *)v11 + 1);
          int v18 = *(unsigned __int16 *)(v12 + v10 - 64);
        }
      }
      else
      {
        *((unsigned char *)v14 + 72) = v17;
      }
      if ((__int16)v18 > 127)
      {
        int v20 = &qword_26B17C000;
        int v21 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          LODWORD(__p) = 67109120;
          HIDWORD(__p) = v18;
          _os_log_error_impl(&dword_24B3DE000, v21, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp ephem_af2,%d", (uint8_t *)&__p, 8u);
          uint64_t v12 = *((void *)v11 + 1);
        }
      }
      else
      {
        *((unsigned char *)v14 + 63) = v18;
        int v20 = &qword_26B17C000;
      }
      int v22 = (_WORD *)(v12 + v10);
      __int16 v23 = *(_WORD *)(v12 + v10 - 62);
      int v24 = &__src[v8];
      *((_WORD *)v24 + 20) = v23;
      v14[1] = *((_DWORD *)v22 - 15);
      *(_DWORD *)((char *)v24 + 42) = *((_DWORD *)v22 - 14);
      v24[2] = *((_DWORD *)v22 - 13);
      *((_WORD *)v24 + 23) = *(v22 - 24);
      *((_WORD *)v24 + 24) = *(v22 - 20);
      v24[3] = *((_DWORD *)v22 - 11);
      v24[4] = *((_DWORD *)v22 - 9);
      *((_WORD *)v24 + 25) = *(v22 - 16);
      v24[19] = *((unsigned __int8 *)v22 - 30);
      *((unsigned char *)v24 + 80) = *((unsigned char *)v22 - 29);
      *((_WORD *)v24 + 26) = *(v22 - 14);
      *((_WORD *)v24 + 27) = *(v22 - 10);
      v24[5] = *((_DWORD *)v22 - 6);
      v24[6] = *((_DWORD *)v22 - 4);
      *((_WORD *)v24 + 29) = *v22;
      *((_WORD *)v24 + 28) = *(v22 - 6);
      *(void *)(v24 + 7) = *((void *)v22 - 1);
      uint64_t v25 = v20[145];
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(__p) = 0;
        _os_log_debug_impl(&dword_24B3DE000, v25, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp NavModel", (uint8_t *)&__p, 2u);
        uint64_t v25 = v20[145];
      }
      a1 = v11;
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        int v26 = *((unsigned __int8 *)v14 + 65);
        int v27 = *((unsigned __int8 *)v14 + 61);
        int v28 = *((unsigned __int8 *)v14 + 62);
        int v29 = v14[17];
        int v30 = *((unsigned __int16 *)v14 + 18);
        int v31 = *((unsigned __int16 *)v14 + 19);
        int v32 = v14[21];
        int v33 = v14[22];
        LODWORD(__p) = 67111168;
        HIDWORD(__p) = v9;
        LOWORD(v74) = 1024;
        *(_DWORD *)((char *)&v74 + 2) = v26;
        HIWORD(v74) = 1024;
        LODWORD(v75) = v27;
        WORD2(v75) = 1024;
        *(_DWORD *)((char *)&v75 + 6) = v28;
        WORD5(v75) = 1024;
        HIDWORD(v75) = v29;
        LOWORD(v76) = 1024;
        *(_DWORD *)((char *)&v76 + 2) = v30;
        HIWORD(v76) = 1024;
        v77[0] = v31;
        LOWORD(v77[1]) = 1024;
        *(_DWORD *)((char *)&v77[1] + 2) = v32;
        HIWORD(v77[2]) = 1024;
        v77[3] = v33;
        _os_log_impl(&dword_24B3DE000, v25, OS_LOG_TYPE_DEFAULT, "SatId,%u,EphemCodeOnL2,%u,EphemURA,%u,EphemSvHealth,%u,Epheml2pFlag,%u,EphemIodc,%u,EphemToc,%u,Reserved1,%u,Reserved2,%u", (uint8_t *)&__p, 0x38u);
        uint64_t v25 = v20[145];
      }
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        int v34 = v14[23];
        int v35 = v14[24];
        int v36 = *((char *)v14 + 72);
        int v37 = *((char *)v14 + 63);
        int v38 = *((__int16 *)v24 + 20);
        int v39 = v14[1];
        int v40 = *((__int16 *)v24 + 21);
        int v41 = *((__int16 *)v24 + 22);
        int v42 = v24[2];
        int v43 = *((__int16 *)v24 + 23);
        LODWORD(__p) = 67111424;
        HIDWORD(__p) = v34;
        LOWORD(v74) = 1024;
        *(_DWORD *)((char *)&v74 + 2) = v35;
        HIWORD(v74) = 1024;
        LODWORD(v75) = v36;
        WORD2(v75) = 1024;
        *(_DWORD *)((char *)&v75 + 6) = v37;
        WORD5(v75) = 1024;
        HIDWORD(v75) = v38;
        LOWORD(v76) = 1024;
        *(_DWORD *)((char *)&v76 + 2) = v39;
        HIWORD(v76) = 1024;
        v77[0] = v40;
        LOWORD(v77[1]) = 1024;
        *(_DWORD *)((char *)&v77[1] + 2) = v41;
        HIWORD(v77[2]) = 1024;
        v77[3] = v42;
        LOWORD(v77[4]) = 1024;
        *(_DWORD *)((char *)&v77[4] + 2) = v43;
        _os_log_impl(&dword_24B3DE000, v25, OS_LOG_TYPE_DEFAULT, "Reserved3,%u,Reserved4,%u,EphemTgd,%d,EphemAf2,%d,EphemAf1,%d,EphemAf0,%d,EphemCrs,%d,EphemDeltaN,%d,EphemMo,%d,EphemCuc,%d", (uint8_t *)&__p, 0x3Eu);
        uint64_t v25 = v20[145];
      }
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        int v44 = *((__int16 *)v24 + 24);
        int v45 = v24[3];
        int v46 = v24[4];
        int v47 = *((unsigned __int16 *)v24 + 25);
        int v48 = v24[19];
        int v49 = *((unsigned __int8 *)v24 + 80);
        int v50 = *((__int16 *)v24 + 26);
        int v51 = *((__int16 *)v24 + 27);
        int v52 = v24[5];
        int v53 = v24[6];
        int v54 = *((__int16 *)v24 + 29);
        int v55 = *((__int16 *)v24 + 28);
        int v56 = v24[7];
        int v57 = v24[8];
        LODWORD(__p) = 67112448;
        HIDWORD(__p) = v44;
        LOWORD(v74) = 1024;
        *(_DWORD *)((char *)&v74 + 2) = v45;
        HIWORD(v74) = 1024;
        LODWORD(v75) = v46;
        WORD2(v75) = 1024;
        *(_DWORD *)((char *)&v75 + 6) = v47;
        WORD5(v75) = 1024;
        HIDWORD(v75) = v48;
        LOWORD(v76) = 1024;
        *(_DWORD *)((char *)&v76 + 2) = v49;
        HIWORD(v76) = 1024;
        v77[0] = v50;
        LOWORD(v77[1]) = 1024;
        *(_DWORD *)((char *)&v77[1] + 2) = v51;
        HIWORD(v77[2]) = 1024;
        v77[3] = v52;
        LOWORD(v77[4]) = 1024;
        *(_DWORD *)((char *)&v77[4] + 2) = v53;
        HIWORD(v77[5]) = 1024;
        v77[6] = v54;
        LOWORD(v77[7]) = 1024;
        *(_DWORD *)((char *)&v77[7] + 2) = v55;
        HIWORD(v77[8]) = 1024;
        v77[9] = v56;
        LOWORD(v77[10]) = 1024;
        *(_DWORD *)((char *)&v77[10] + 2) = v57;
        _os_log_impl(&dword_24B3DE000, v25, OS_LOG_TYPE_DEFAULT, "EphemCus,%d,Epheme,%u,EphemAPowerhalf,%u,EphemToe,%u,EphemFitFlag,%u,EphemAODO,%u,EphemCic,%d,EphemCis,%d,EphemOmegaA0,%d,EphemIo,%d,EphemIdot,%d,EphemCrc,%d,EphemW,%d,EphemOmegaAdot,%d", (uint8_t *)&__p, 0x56u);
      }
      ++v9;
      v8 += 24;
      v10 += 100;
    }
    while (v9 < *v11);
    __src[385] = 1;
    __src[386] = 2 * (*v69 != 0);
    __src[387] = v69[2];
    uint64_t v58 = sub_24B4B1200();
    uint64_t v59 = *(NSObject **)(v58 + 96);
    std::string __p = (void *)MEMORY[0x263EF8330];
    uint64_t v74 = 3221225472;
    *(void *)&long long v75 = sub_24B4B557C;
    *((void *)&v75 + 1) = &unk_2652DD010;
    uint64_t v76 = v58;
    memcpy(v77, __src, sizeof(v77));
    dispatch_async(v59, &__p);
    int v60 = v69[2];
    uint64_t v61 = sub_24B4B1200();
    uint64_t v74 = 0;
    LODWORD(__p) = v60;
    LOBYTE(v76) = -1;
    long long v75 = 0x25uLL;
    sub_24B4B21B4(v61, (unsigned int *)&__p);
    uint64_t v62 = *((void *)v11 + 1);
    if (v62) {
      MEMORY[0x24C5D26D0](v62, 0x1000C80A2FAA732);
    }
    *((void *)v11 + 1) = 0;
    sub_24B3E3128(&__p, "gps_set_based_aid");
    uint64_t v63 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v64 = &__p;
      if (SBYTE7(v75) < 0) {
        unint64_t v64 = __p;
      }
      *(_DWORD *)long long buf = 136315138;
      uint64_t v71 = v64;
LABEL_47:
      _os_log_debug_impl(&dword_24B3DE000, v63, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Leaving %s", buf, 0xCu);
    }
  }
  else
  {
    uint64_t v65 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      LOWORD(__p) = 0;
      _os_log_error_impl(&dword_24B3DE000, v65, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp Zero Satellites", (uint8_t *)&__p, 2u);
    }
    uint64_t v66 = *((void *)a1 + 1);
    if (v66) {
      MEMORY[0x24C5D26D0](v66, 0x1000C80A2FAA732);
    }
    *((void *)a1 + 1) = 0;
    sub_24B3E3128(&__p, "gps_set_based_aid");
    uint64_t v63 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v68 = &__p;
      if (SBYTE7(v75) < 0) {
        unint64_t v68 = __p;
      }
      *(_DWORD *)long long buf = 136315138;
      uint64_t v71 = v68;
      goto LABEL_47;
    }
  }
  if (SBYTE7(v75) < 0) {
    operator delete(__p);
  }
}

void sub_24B4A3230(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  sub_24B3E3128(&__p, "gps_set_gnss_ref_loc");
  uint64_t v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    p_p = &__p;
    if (SBYTE7(v40) < 0) {
      p_p = __p;
    }
    *(_DWORD *)long long buf = 136315138;
    int v37 = p_p;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Entered %s", buf, 0xCu);
  }
  if (SBYTE7(v40) < 0) {
    operator delete(__p);
  }
  int v5 = *(unsigned __int16 *)(a1 + 10);
  if (v5 == 9)
  {
    int v6 = *(_DWORD *)(a1 + 16);
    int v34 = *(_DWORD *)(a1 + 20);
    int v7 = *(unsigned __int8 *)(a1 + 12);
    unsigned int v8 = *(_DWORD *)(a1 + 28);
    if (HIWORD(v8))
    {
      uint64_t v13 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        LODWORD(__p) = 67109120;
        HIDWORD(__p) = v8;
        _os_log_error_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp altitude,%u", (uint8_t *)&__p, 8u);
        unsigned int v8 = *(_DWORD *)(a1 + 28);
      }
      LOWORD(v9) = -1;
    }
    else
    {
      int v9 = *(_DWORD *)(a1 + 28);
    }
    unsigned __int16 v33 = v9;
    if (*(unsigned __int8 *)(a1 + 24) <= 0x45u) {
      int v14 = 69;
    }
    else {
      int v14 = *(unsigned __int8 *)(a1 + 24);
    }
    if (*(unsigned __int8 *)(a1 + 25) <= 0x45u) {
      int v15 = 69;
    }
    else {
      int v15 = *(unsigned __int8 *)(a1 + 25);
    }
    int v16 = *(unsigned __int8 *)(a1 + 26);
    int v17 = *(unsigned __int8 *)(a1 + 32);
    int v18 = *(unsigned __int8 *)(a1 + 33);
    unint64_t v19 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(__p) = 0;
      _os_log_impl(&dword_24B3DE000, v19, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp Shape Type is Ellipsoid Point Uncertain Altitude", (uint8_t *)&__p, 2u);
      unint64_t v19 = qword_26B17C488;
    }
    int v20 = v7;
    uint64_t v21 = *(void *)&v6 & 0x7FFFFFLL;
    int v22 = (v8 >> 15) & 1;
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      std::string __p = (void *)0x904010B01;
      LOWORD(v39) = 1025;
      *(_DWORD *)((char *)&v39 + 2) = v20 != 0;
      HIWORD(v39) = 1025;
      LODWORD(v40) = v21;
      WORD2(v40) = 1025;
      *(_DWORD *)((char *)&v40 + 6) = v34;
      WORD5(v40) = 1025;
      HIDWORD(v40) = v33;
      LOWORD(v41) = 1025;
      *(_DWORD *)((char *)&v41 + 2) = v14;
      HIWORD(v41) = 1025;
      *(_DWORD *)int v42 = v15;
      *(_WORD *)&v42[4] = 1025;
      *(_DWORD *)&v42[6] = v16;
      *(_WORD *)&v42[10] = 1025;
      int v43 = (v8 >> 15) & 1;
      __int16 v44 = 1025;
      *(_DWORD *)int v45 = v17;
      *(_WORD *)&_DWORD v45[4] = 1025;
      int v46 = v18;
      _os_log_impl(&dword_24B3DE000, v19, OS_LOG_TYPE_DEFAULT, "v_ShapeType,%{private}u,v_SignOfLat,%{private}u,v_Latitude,%{private}u,v_Longitude,%{private}u,v_Altitude,%{private}u,v_UncertSemiMajor,%{private}u,v_UncertSemiMinor,%{private}u,v_AxisBearing,%{private}u,v_DirectOfAlt,%{private}u,v_UncertAltitude,%{private}u,v_Confidence,%{private}u", (uint8_t *)&__p, 0x44u);
    }
    BOOL v23 = *a3 != 0;
    int v24 = a3[2];
    uint64_t v25 = sub_24B4B1200();
    uint64_t v26 = 256;
    if (!v20) {
      uint64_t v26 = 0;
    }
    unint64_t v27 = (v21 << 32) | ((unint64_t)v33 << 16) | 9 | v26;
    *(void *)(v25 + 112) = v27;
    *(_DWORD *)(v25 + 120) = v34;
    *(unsigned char *)(v25 + 124) = v22;
    *(unsigned char *)(v25 + 125) = v14;
    *(unsigned char *)(v25 + 126) = v15;
    *(unsigned char *)(v25 + 127) = v16;
    *(unsigned char *)(v25 + 128) = v17;
    *(unsigned char *)(v25 + 129) = v18;
    *(_DWORD *)(v25 + 132) = 1;
    *(_DWORD *)(v25 + 136) = 2 * v23;
    *(_DWORD *)(v25 + 140) = v24;
    int v28 = *(NSObject **)(v25 + 96);
    std::string __p = (void *)MEMORY[0x263EF8330];
    uint64_t v39 = 3221225472;
    *(void *)&long long v40 = sub_24B4B560C;
    *((void *)&v40 + 1) = &unk_2652DD050;
    uint64_t v41 = v25;
    *(void *)int v42 = v27;
    *(_DWORD *)&v42[8] = v34;
    LOBYTE(v43) = v22;
    BYTE1(v43) = v14;
    BYTE2(v43) = v15;
    HIBYTE(v43) = v16;
    LOBYTE(v44) = v17;
    HIBYTE(v44) = v18;
    *(_DWORD *)&v45[2] = 1;
    int v46 = 2 * v23;
    int v47 = v24;
    dispatch_async(v28, &__p);
    int v29 = a3[2];
    uint64_t v30 = sub_24B4B1200();
    uint64_t v39 = 0;
    LODWORD(__p) = v29;
    LOBYTE(v41) = -1;
    long long v40 = 0x24uLL;
    sub_24B4B21B4(v30, (unsigned int *)&__p);
    sub_24B3E3128(&__p, "gps_set_gnss_ref_loc");
    unint64_t v11 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_29;
    }
    int v32 = &__p;
    if (SBYTE7(v40) < 0) {
      int v32 = __p;
    }
    *(_DWORD *)long long buf = 136315138;
    int v37 = v32;
LABEL_38:
    _os_log_debug_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Leaving %s", buf, 0xCu);
    goto LABEL_29;
  }
  uint64_t v10 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    LODWORD(__p) = 67109120;
    HIDWORD(__p) = v5;
    _os_log_error_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp Shape,%u", (uint8_t *)&__p, 8u);
  }
  sub_24B3E3128(&__p, "gps_set_gnss_ref_loc");
  unint64_t v11 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v12 = &__p;
    if (SBYTE7(v40) < 0) {
      uint64_t v12 = __p;
    }
    *(_DWORD *)long long buf = 136315138;
    int v37 = v12;
    goto LABEL_38;
  }
LABEL_29:
  if (SBYTE7(v40) < 0) {
    operator delete(__p);
  }
}

uint64_t sub_24B4A3740(uint64_t a1, unsigned __int16 *a2, _DWORD *a3)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  sub_24B3E3128(__p, "gps_gnss_start_based_mode");
  int v5 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v8 = __p;
    if (v11 < 0) {
      unsigned int v8 = (void **)__p[0];
    }
    *(_DWORD *)long long buf = 136315138;
    uint64_t v13 = v8;
    _os_log_debug_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Entered %s", buf, 0xCu);
  }
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  sub_24B4A38BC(a2, a3, 4);
  sub_24B3E3128(__p, "gps_gnss_start_based_mode");
  int v6 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    int v9 = __p;
    if (v11 < 0) {
      int v9 = (void **)__p[0];
    }
    *(_DWORD *)long long buf = 136315138;
    uint64_t v13 = v9;
    _os_log_debug_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Leaving %s", buf, 0xCu);
  }
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  return 4;
}

void sub_24B4A38BC(unsigned __int16 *a1, _DWORD *a2, int a3)
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  sub_24B3E3128(&__p, "sendPositionReq");
  int v6 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    p_p = &__p;
    if (SBYTE7(v40) < 0) {
      p_p = __p;
    }
    *(_DWORD *)long long buf = 136315138;
    int v37 = p_p;
    _os_log_debug_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Entered %s", buf, 0xCu);
  }
  if (SBYTE7(v40) < 0) {
    operator delete(__p);
  }
  int v7 = *a1;
  if (a3 != 4)
  {
    if (a3 == 2)
    {
      int v34 = 0;
      int v11 = 0;
      int v12 = 0;
      int v13 = 0;
      int v10 = 0;
      unsigned int v8 = 0;
    }
    else
    {
      if (a3 == 1) {
        goto LABEL_7;
      }
      int v34 = 0;
      int v11 = 0;
      int v12 = 0;
      int v13 = 0;
      int v10 = 0;
      unsigned int v8 = -1;
    }
LABEL_31:
    int v17 = qword_26B17C488;
    if (a1[26])
    {
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(__p) = 0;
        _os_log_impl(&dword_24B3DE000, v17, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp AGPS constellation requested", (uint8_t *)&__p, 2u);
        int v17 = qword_26B17C488;
      }
      int v35 = 1;
    }
    else
    {
      int v35 = 0;
    }
    int v18 = *((_DWORD *)a1 + 9);
    BOOL v19 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
    if (v18 == 1)
    {
      if (v19)
      {
        LOWORD(__p) = 0;
        _os_log_impl(&dword_24B3DE000, v17, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp UE can request for additional assistance data", (uint8_t *)&__p, 2u);
      }
      int v33 = 0;
    }
    else
    {
      if (v19)
      {
        LOWORD(__p) = 0;
        _os_log_impl(&dword_24B3DE000, v17, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp UE cannot request for additional assistance data", (uint8_t *)&__p, 2u);
      }
      int v33 = 1;
    }
    int v20 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(__p) = 67175169;
      HIDWORD(__p) = v8;
      LOWORD(v39) = 1025;
      *(_DWORD *)((char *)&v39 + 2) = v34;
      HIWORD(v39) = 1025;
      LODWORD(v40) = 255;
      _os_log_debug_impl(&dword_24B3DE000, v20, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,v_LocInfoType,%{private}u,v_LocShapeTypes,%{private}u,v_VelReqType,%{private}u", (uint8_t *)&__p, 0x14u);
      int v20 = qword_26B17C488;
    }
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      std::string __p = (void *)0x104010701;
      LOWORD(v39) = 1025;
      *(_DWORD *)((char *)&v39 + 2) = v10;
      HIWORD(v39) = 1025;
      LODWORD(v40) = v13;
      WORD2(v40) = 1025;
      *(_DWORD *)((char *)&v40 + 6) = v12;
      WORD5(v40) = 1025;
      HIDWORD(v40) = v11;
      LOWORD(v41) = 1025;
      *(_DWORD *)((char *)&v41 + 2) = v7;
      HIWORD(v41) = 1025;
      int v42 = v35;
      _os_log_impl(&dword_24B3DE000, v20, OS_LOG_TYPE_DEFAULT, "ReportingAmount,%{private}u,HorAccuracy,%{private}u,HorAccConfidence,%{private}u,VertAccuracy,%{private}u,VertAccConfidence,%{private}u,RespTime,%{private}u,requestedGnss,%{private}u", (uint8_t *)&__p, 0x2Cu);
    }
    if (v8)
    {
      unsigned int v21 = v8;
      if (v8 >= 3)
      {
        BOOL v23 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          std::string __p = (void *)-4227858176;
          _os_log_error_impl(&dword_24B3DE000, v23, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp LocInfoType,%u", (uint8_t *)&__p, 8u);
        }
        unsigned int v22 = 0;
      }
      else
      {
        unsigned int v22 = 29;
      }
    }
    else
    {
      unsigned int v21 = 0;
      unsigned int v22 = 32;
    }
    BOOL v24 = *a2 != 0;
    int v25 = a2[2];
    uint64_t v26 = sub_24B4B1200();
    unint64_t v27 = *(NSObject **)(v26 + 96);
    std::string __p = (void *)MEMORY[0x263EF8330];
    uint64_t v39 = 3221225472;
    *(void *)&long long v40 = sub_24B4B5648;
    *((void *)&v40 + 1) = &unk_2652DD070;
    uint64_t v41 = v26;
    LOWORD(v42) = 0;
    unsigned int v43 = v21;
    __int16 v44 = v7;
    char v45 = v10;
    int v46 = -1;
    char v47 = v13;
    char v48 = v12;
    char v49 = v11;
    int v50 = -1;
    int v51 = v33;
    __int16 v52 = v35;
    char v53 = v34;
    __int16 v54 = 511;
    int v55 = 2 * v24;
    int v56 = v25;
    dispatch_async(v27, &__p);
    uint64_t v28 = sub_24B4B1200();
    uint64_t v39 = 0;
    LODWORD(__p) = v25;
    LOBYTE(v41) = v10;
    long long v40 = v22;
    sub_24B4B21B4(v28, (unsigned int *)&__p);
    sub_24B3E3128(&__p, "sendPositionReq");
    int v29 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      int v32 = &__p;
      if (SBYTE7(v40) < 0) {
        int v32 = __p;
      }
      *(_DWORD *)long long buf = 136315138;
      int v37 = v32;
      _os_log_debug_impl(&dword_24B3DE000, v29, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Leaving %s", buf, 0xCu);
    }
    if (SBYTE7(v40) < 0) {
      operator delete(__p);
    }
    return;
  }
LABEL_7:
  if (a3 == 1) {
    unsigned int v8 = 2;
  }
  else {
    unsigned int v8 = 1;
  }
  unsigned int v9 = *((_DWORD *)a1 + 1);
  if (v9 + 1 >= 2) {
    int v10 = (int)(log((double)v9 / 10.0 + 1.0) * 10.5 + 0.5);
  }
  else {
    int v10 = 0;
  }
  if (*((unsigned __int8 *)a1 + 20) == 255) {
    int v13 = 0;
  }
  else {
    int v13 = *((unsigned __int8 *)a1 + 20);
  }
  if (*((_DWORD *)a1 + 6) == 1)
  {
    unsigned int v14 = *((_DWORD *)a1 + 7);
    if (v14 + 1 >= 2) {
      int v12 = (int)(log((double)v14 / 10.0 + 1.0) * 10.5 + 0.5);
    }
    else {
      int v12 = 0;
    }
    if (*((unsigned __int8 *)a1 + 32) == 255) {
      int v11 = 0;
    }
    else {
      int v11 = *((unsigned __int8 *)a1 + 32);
    }
  }
  else
  {
    int v11 = 0;
    int v12 = 0;
  }
  int v15 = 0;
  int v16 = *((unsigned __int8 *)a1 + 48);
  if (!*((unsigned char *)a1 + 48) || v16 == 255) {
    goto LABEL_30;
  }
  if ((v16 & 0xB7) != 0)
  {
    int v15 = v16 & 0x37;
LABEL_30:
    int v34 = v15;
    goto LABEL_31;
  }
  uint64_t v30 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    LODWORD(__p) = 67109120;
    HIDWORD(__p) = v16;
    _os_log_error_impl(&dword_24B3DE000, v30, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#posp Shape,%u not supported", (uint8_t *)&__p, 8u);
  }
}

uint64_t sub_24B4A3EE4(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24B4AA55C(a1);
  *(void *)uint64_t v2 = &unk_26FE86130;
  *(_DWORD *)(v2 + 360) = 1;
  *(unsigned char *)(v2 + 16) = 5;
  *(_WORD *)(v2 + 32) = 5;
  uint64_t v3 = (char *)operator new(0x200uLL, MEMORY[0x263F8C180]);
  if (v3)
  {
    *(_OWORD *)(v3 + 136) = 0u;
    *(_OWORD *)(v3 + 120) = 0u;
    *(_OWORD *)(v3 + 104) = 0u;
    *(_OWORD *)(v3 + 88) = 0u;
    *(_OWORD *)(v3 + 72) = 0u;
    *(_OWORD *)(v3 + 56) = 0u;
    *(_OWORD *)(v3 + 40) = 0u;
    *(_OWORD *)(v3 + 24) = 0u;
    v3[144] = -1;
    *(_OWORD *)(v3 + 8) = 0u;
    *(_OWORD *)(v3 + 168) = 0u;
    *(_OWORD *)(v3 + 184) = 0u;
    *(_OWORD *)(v3 + 200) = 0u;
    *(_OWORD *)(v3 + 216) = 0u;
    *(_OWORD *)(v3 + 232) = 0u;
    *(_OWORD *)(v3 + 248) = 0u;
    *((void *)v3 + 63) = 0;
    *(_OWORD *)(v3 + 152) = 0u;
    *(_OWORD *)(v3 + 408) = 0u;
    *(_OWORD *)(v3 + 424) = 0u;
    *(_OWORD *)(v3 + 440) = 0u;
    *(_OWORD *)(v3 + 456) = 0u;
    *(_OWORD *)(v3 + 472) = 0u;
    *(_OWORD *)(v3 + 488) = 0u;
    *(_OWORD *)(v3 + 264) = 0u;
    *(_OWORD *)(v3 + 280) = 0u;
    *(_OWORD *)(v3 + 296) = 0u;
    *(_OWORD *)(v3 + 312) = 0u;
    *(_OWORD *)(v3 + 328) = 0u;
    *(_OWORD *)(v3 + 344) = 0u;
    *(_OWORD *)(v3 + 360) = 0u;
    *(_OWORD *)(v3 + 376) = 0u;
    *(_OWORD *)(v3 + 392) = 0u;
    *(_DWORD *)uint64_t v3 = 0;
    *(void *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 364) = 0;
  }
  else
  {
    *(void *)(a1 + 40) = 0;
    uint64_t v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v6[0] = 67109120;
      v6[1] = 1537;
      _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v6, 8u);
    }
  }
  return a1;
}

uint64_t sub_24B4A4078(uint64_t a1)
{
  *(void *)a1 = &unk_26FE86130;
  if (*(_WORD *)(a1 + 32) == 5)
  {
    uint64_t v2 = *(void *)(a1 + 40);
    if (v2)
    {
      sub_24B48BC40(v2 + 152);
      uint64_t v7 = (void **)(v2 + 120);
      sub_24B49DB08(&v7);
      uint64_t v7 = (void **)(v2 + 96);
      sub_24B49DB08(&v7);
      uint64_t v3 = *(void **)(v2 + 64);
      if (v3)
      {
        *(void *)(v2 + 72) = v3;
        operator delete(v3);
      }
      uint64_t v4 = *(void **)(v2 + 40);
      if (v4)
      {
        *(void *)(v2 + 48) = v4;
        operator delete(v4);
      }
      int v5 = *(void **)(v2 + 16);
      if (v5)
      {
        *(void *)(v2 + 24) = v5;
        operator delete(v5);
      }
      MEMORY[0x24C5D2700](v2, 0x1030C40986846DALL);
    }
    *(void *)(a1 + 40) = 0;
  }
  return sub_24B4AA64C(a1);
}

void sub_24B4A4150(uint64_t a1)
{
  sub_24B4A4078(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B4A4188(uint64_t a1, char a2)
{
  *(_DWORD *)(a1 + 20) = 1;
  (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);
  uint64_t v4 = sub_24B4A85B0(*(void *)(a1 + 8));
  *(unsigned char *)(v4[5] + 456) = a2;
  *(_DWORD *)(v4[5] + 4) = 1;
  sub_24B3E39F4(__p, 0xBB8uLL);
  v5[0] = __p;
  v5[1] = 0;
  char v6 = 0;
  (*(void (**)(void *, void *))(*v4 + 32))(v4, v5);
  sub_24B48B960((uint64_t)v4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

void sub_24B4A4270(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4A4290(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 364))
  {
    int v1 = 6;
  }
  else
  {
    if (!*(_DWORD *)(a1 + 20)) {
      return;
    }
    int v1 = 7;
  }
  sub_24B4AA6E4(a1, v1, *(void *)(a1 + 8));
}

void sub_24B4A42B8(uint64_t a1, int a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  *(_DWORD *)(a1 + 360) = 0;
  if (a2)
  {
    if (*(_DWORD *)(*(void *)(a1 + 8) + 424) == 1)
    {
      sub_24B4A4188(a1, 4);
    }
    return;
  }
  sub_24B3E39F4(__p, 0xBB8uLL);
  v8[0] = (uint64_t)__p;
  v8[1] = 0;
  char v9 = 0;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3)
  {
    uint64_t v4 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      goto LABEL_18;
    }
    *(_DWORD *)long long buf = 67109120;
    int v12 = 513;
    goto LABEL_14;
  }
  *(void *)(a1 + 48) = *(void *)(v3 + 64);
  *(_WORD *)(a1 + 56) = *(_WORD *)(v3 + 72);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(v3 + 80);
  sub_24B48BD54(a1 + 72, v3 + 88);
  if (a1 + 48 != v3 + 64)
  {
    sub_24B3EAC0C((void *)(a1 + 248), *(char **)(v3 + 264), *(char **)(v3 + 272), *(void *)(v3 + 272) - *(void *)(v3 + 264));
    *(unsigned char *)(a1 + 272) = *(unsigned char *)(v3 + 288);
    *(unsigned char *)(a1 + 280) = *(unsigned char *)(v3 + 296);
    sub_24B3EAC0C((void *)(a1 + 288), *(char **)(v3 + 304), *(char **)(v3 + 312), *(void *)(v3 + 312) - *(void *)(v3 + 304));
    sub_24B3EAC0C((void *)(a1 + 312), *(char **)(v3 + 328), *(char **)(v3 + 336), *(void *)(v3 + 336) - *(void *)(v3 + 328));
    sub_24B3EAC0C((void *)(a1 + 336), *(char **)(v3 + 352), *(char **)(v3 + 360), *(void *)(v3 + 360) - *(void *)(v3 + 352));
  }
  v7[0] = (uint64_t)v8;
  v7[1] = a1 + 24;
  if (!sub_24B49CC6C(v7))
  {
    uint64_t v5 = sub_24B4B1200();
    int v6 = *(_DWORD *)(*(void *)(a1 + 8) + 376);
    uint64_t v13 = 0;
    v14[0] = 0;
    *(_DWORD *)long long buf = v6;
    char v15 = -1;
    *(void *)&v14[1] = 5;
    v14[3] = 0;
    sub_24B4B21B4(v5, (unsigned int *)buf);
    if (sub_24B4AAF40(a1, v8) && *(_DWORD *)(*(void *)(a1 + 8) + 424) == 1)
    {
      *(_DWORD *)(a1 + 364) = 1;
      (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);
    }
    goto LABEL_18;
  }
  uint64_t v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)long long buf = 67109120;
    int v12 = 770;
LABEL_14:
    _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
LABEL_18:
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

void sub_24B4A4554(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B4A4580()
{
  return 1;
}

uint64_t sub_24B4A4588(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  sub_24B4AAEA4(a1, a2);
  uint64_t v4 = sub_24B4AB040();
  BOOL v5 = sub_24B4AC45C(v4, *(unsigned __int16 *)(*(void *)(a1 + 8) + 72), *(unsigned __int16 *)(a1 + 56));
  if (!v5)
  {
    int v6 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      unsigned int v21 = 67109120;
      int v22 = 515;
      _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v21, 8u);
    }
  }
  uint64_t v7 = *(void *)(a1 + 8) + 264;
  uint64_t v8 = sub_24B4AB040();
  if (!sub_24B4AC388(v8, a1 + 248, v7))
  {
    int v11 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      unsigned int v21 = 67109120;
      int v22 = 515;
      _os_log_error_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v21, 8u);
    }
    goto LABEL_11;
  }
  if (!v5)
  {
LABEL_11:
    uint64_t v12 = *(void *)(a1 + 8);
    *(void *)(v12 + 64) = *(void *)(a1 + 48);
    *(_WORD *)(v12 + 72) = *(_WORD *)(a1 + 56);
    *(unsigned char *)(v12 + 80) = *(unsigned char *)(a1 + 64);
    sub_24B48BD54(v12 + 88, a1 + 72);
    if (v12 + 64 != a1 + 48)
    {
      sub_24B3EAC0C((void *)(v12 + 264), *(char **)(a1 + 248), *(char **)(a1 + 256), *(void *)(a1 + 256) - *(void *)(a1 + 248));
      *(unsigned char *)(v12 + 288) = *(unsigned char *)(a1 + 272);
      *(unsigned char *)(v12 + 296) = *(unsigned char *)(a1 + 280);
      sub_24B3EAC0C((void *)(v12 + 304), *(char **)(a1 + 288), *(char **)(a1 + 296), *(void *)(a1 + 296) - *(void *)(a1 + 288));
      sub_24B3EAC0C((void *)(v12 + 328), *(char **)(a1 + 312), *(char **)(a1 + 320), *(void *)(a1 + 320) - *(void *)(a1 + 312));
      sub_24B3EAC0C((void *)(v12 + 352), *(char **)(a1 + 336), *(char **)(a1 + 344), *(void *)(a1 + 344) - *(void *)(a1 + 336));
    }
    uint64_t v13 = a1;
    char v14 = 12;
    goto LABEL_14;
  }
  int v9 = *(unsigned __int16 *)(a1 + 32);
  if (v9 == 5)
  {
    uint64_t v16 = sub_24B4B1200();
    unsigned int v17 = *(_DWORD *)(*(void *)(a1 + 8) + 376);
    uint64_t v23 = 0;
    v24[0] = 0;
    unsigned int v21 = v17;
    char v25 = -1;
    *(void *)&v24[1] = 4;
    v24[3] = 0;
    sub_24B4B21B4(v16, &v21);
    int v18 = (uint64_t *)sub_24B4A113C();
    int v19 = sub_24B4A126C(v18, *(void *)(a1 + 40), *(void *)(a1 + 8));
    if (!v19) {
      return 0;
    }
    int v20 = (unsigned __int16)v19;
    uint64_t v13 = a1;
    if (v20 == 65529) {
      char v14 = 8;
    }
    else {
      char v14 = 0;
    }
    goto LABEL_14;
  }
  if (v9 != 6)
  {
    uint64_t v13 = a1;
    char v14 = 2;
LABEL_14:
    sub_24B4A4188(v13, v14);
    return 0;
  }
  *(_DWORD *)(a1 + 20) = 1;
  (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);
  int v10 = sub_24B4A85B0(*(void *)(a1 + 8));
  (*(void (**)(void *, uint64_t))(*v10 + 40))(v10, a2);
  return 0;
}

void sub_24B4A4858(uint64_t a1, uint64_t *a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  if (a2)
  {
    uint64_t v2 = *(void *)(a1 + 40);
    if (v2)
    {
      *(_WORD *)(v2 + 8) = 4;
      *(_DWORD *)(*(void *)(a1 + 40) + 88) = 1;
      uint64_t v3 = *(uint64_t **)(a1 + 40);
      if (v3 + 11 != a2)
      {
        uint64_t v5 = a2[1];
        uint64_t v4 = a2[2];
        uint64_t v6 = v3[14];
        unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 3);
        uint64_t v8 = (char **)v3[12];
        if (0xAAAAAAAAAAAAAAABLL * ((v6 - (uint64_t)v8) >> 3) < v7)
        {
          int v9 = (void **)(v3 + 12);
          if (v8)
          {
            sub_24B47C38C(v3 + 12);
            operator delete(*v9);
            uint64_t v6 = 0;
            *int v9 = 0;
            v3[13] = 0;
            v3[14] = 0;
          }
          if (v7 > 0xAAAAAAAAAAAAAAALL) {
            goto LABEL_27;
          }
          unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 3);
          uint64_t v11 = 2 * v10;
          if (2 * v10 <= v7) {
            uint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 3);
          }
          unint64_t v12 = v10 >= 0x555555555555555 ? 0xAAAAAAAAAAAAAAALL : v11;
          if (v12 > 0xAAAAAAAAAAAAAAALL) {
LABEL_27:
          }
            sub_24B3E3AAC();
          uint64_t v13 = sub_24B47C570((uint64_t)(v3 + 14), v12);
          v3[12] = (uint64_t)v13;
          v3[13] = (uint64_t)v13;
          v3[14] = (uint64_t)&v13[3 * v14];
          char v15 = sub_24B4A4AB4((uint64_t)(v3 + 14), v5, v4, v13);
          goto LABEL_19;
        }
        if (0xAAAAAAAAAAAAAAABLL * ((v3[13] - (uint64_t)v8) >> 3) < v7)
        {
          unsigned int v17 = (char **)(v5 + 8 * ((v3[13] - (uint64_t)v8) >> 3));
          sub_24B4A4BCC((char **)a2[1], v17, v8);
          char v15 = sub_24B4A4AB4((uint64_t)(v3 + 14), (uint64_t)v17, v4, (void *)v3[13]);
LABEL_19:
          v3[13] = (uint64_t)v15;
          return;
        }
        int v18 = sub_24B4A4BCC((char **)a2[1], (char **)a2[2], v8);
        int v19 = (char **)v3[13];
        if (v19 != v18)
        {
          int v20 = (char **)v3[13];
          do
          {
            int v22 = *(v20 - 3);
            v20 -= 3;
            unsigned int v21 = v22;
            if (v22)
            {
              *(v19 - 2) = v21;
              operator delete(v21);
            }
            int v19 = v20;
          }
          while (v20 != v18);
        }
        v3[13] = (uint64_t)v18;
      }
    }
  }
  else
  {
    uint64_t v16 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v23[0] = 67109120;
      v23[1] = 515;
      _os_log_error_impl(&dword_24B3DE000, v16, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v23, 8u);
    }
  }
}

void sub_24B4A4AA4(_Unwind_Exception *a1)
{
  *(void *)(v2 + 104) = v1;
  _Unwind_Resume(a1);
}

void sub_24B4A4AAC(_Unwind_Exception *a1)
{
  *(void *)(v2 + 104) = v1;
  _Unwind_Resume(a1);
}

void *sub_24B4A4AB4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = a4;
  unint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  uint64_t v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *uint64_t v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      sub_24B47A720(v4, *(const void **)v6, *(void *)(v6 + 8), *(void *)(v6 + 8) - *(void *)v6);
      uint64_t v4 = v11 + 3;
      v11 += 3;
      v6 += 24;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_24B4A4B64((uint64_t)v8);
  return v4;
}

void sub_24B4A4B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_24B4A4B64(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v2 = **(void **)(a1 + 8);
    uint64_t v3 = **(void **)(a1 + 16);
    if (v3 != v2)
    {
      uint64_t v4 = **(void **)(a1 + 16);
      do
      {
        uint64_t v6 = *(void **)(v4 - 24);
        v4 -= 24;
        uint64_t v5 = v6;
        if (v6)
        {
          *(void *)(v3 - 16) = v5;
          operator delete(v5);
        }
        uint64_t v3 = v4;
      }
      while (v4 != v2);
    }
  }
  return a1;
}

char **sub_24B4A4BCC(char **a1, char **a2, char **a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a1;
    do
    {
      if (v5 != a3) {
        sub_24B3EAC0C(a3, *v5, v5[1], v5[1] - *v5);
      }
      v5 += 3;
      a3 += 3;
    }
    while (v5 != a2);
  }
  return a3;
}

uint64_t sub_24B4A4C30()
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  if (qword_26B17C408 != -1) {
    dispatch_once(&qword_26B17C408, &unk_26FE86178);
  }
  uint64_t result = qword_26B17C400;
  if (!qword_26B17C400)
  {
    uint64_t v1 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v2 = 136315138;
      uint64_t v3 = "GetInstance";
      _os_log_error_impl(&dword_24B3DE000, v1, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v2, 0xCu);
    }
    __assert_rtn("GetInstance", "SuplProvider.cpp", 60, "false && \"Memory allocation failure\"");
  }
  return result;
}

void *sub_24B4A4D28()
{
  uint64_t result = operator new(0x38uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    *uint64_t result = &unk_26FE861A8;
    result[1] = 0;
    *((_OWORD *)result + 1) = 0u;
    *((_OWORD *)result + 2) = 0u;
    result[6] = 0;
  }
  qword_26B17C400 = (uint64_t)result;
  return result;
}

uint64_t sub_24B4A4D80(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t v5 = *(void *)(a1 + 24);
  if (v5)
  {
    while (*(_DWORD *)v5 != *(_DWORD *)(a3 + 4))
    {
      uint64_t v5 = *(void *)(v5 + 8);
      if (!v5) {
        goto LABEL_4;
      }
    }
    sub_24B4A8B6C(v5 - 8, a4);
  }
  else
  {
LABEL_4:
    uint64_t v6 = sub_24B4AB040();
    sub_24B4ABE2C(v6, *(_DWORD *)(a3 + 4));
    unint64_t v7 = (void *)sub_24B4A113C();
    sub_24B480554((uint64_t)off_2697C5530, *(_DWORD *)(a3 + 4));
    sub_24B4A1BBC(v7);
    uint64_t v8 = sub_24B4B1200();
    char v9 = *(NSObject **)(v8 + 80);
    if (v9)
    {
      dispatch_source_cancel(v9);
      *(void *)(v8 + 80) = 0;
    }
    unint64_t v10 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v12[0] = 67109120;
      v12[1] = 513;
      _os_log_error_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v12, 8u);
    }
  }
  return 0;
}

uint64_t sub_24B4A4E9C(uint64_t a1, int a2, int a3, uint64_t *a4, int a5)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  unint64_t v10 = operator new(0x258uLL, MEMORY[0x263F8C180]);
  if (v10)
  {
    uint64_t v11 = (uint64_t)v10;
    sub_24B4A7BD8((uint64_t)v10, a2, a3, a4);
    uint64_t v12 = v11 + 8;
    uint64_t v13 = *(void *)(a1 + 24);
    while (v13)
    {
      uint64_t v14 = v13;
      uint64_t v13 = *(void *)(v13 + 8);
      if (!v13)
      {
        *(void *)(v14 + 8) = v12;
        *(void *)(v11 + 16) = 0;
        if (!a5) {
          return 0;
        }
        goto LABEL_11;
      }
    }
    *(void *)(v11 + 16) = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = v12;
    if (!a5) {
      return 0;
    }
LABEL_11:
    sub_24B4A7ED4(v11);
    sub_24B4A7F30(v11);
    return 0;
  }
  else
  {
    char v15 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v18[0] = 67109120;
      v18[1] = 1537;
      _os_log_error_impl(&dword_24B3DE000, v15, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v18, 8u);
    }
    return -2;
  }
}

void sub_24B4A4FE4(_Unwind_Exception *a1)
{
  MEMORY[0x24C5D26F0](v1, MEMORY[0x263F8C180]);
  _Unwind_Resume(a1);
}

void sub_24B4A5000(uint64_t a1, int a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = a1 + 8;
    uint64_t v4 = v2;
    while (*(_DWORD *)v4 != a2)
    {
      uint64_t v4 = *(void *)(v4 + 8);
      if (!v4) {
        goto LABEL_5;
      }
    }
    uint64_t v6 = v4 - 8;
    while (*(_DWORD *)v2 != a2)
    {
      uint64_t v2 = *(void *)(v2 + 8);
      if (!v2) {
        goto LABEL_13;
      }
    }
    sub_24B4B01D0(v3, v2);
LABEL_13:
    unint64_t v7 = *(void (**)(uint64_t))(*(void *)v6 + 8);
    v7(v6);
  }
  else
  {
LABEL_5:
    uint64_t v5 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v8[0] = 67109120;
      v8[1] = 513;
      _os_log_error_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v8, 8u);
    }
  }
}

void sub_24B4A5148(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 24);
  if (v3)
  {
    while (*(_DWORD *)v3 != a2)
    {
      uint64_t v3 = *(void *)(v3 + 8);
      if (!v3) {
        goto LABEL_4;
      }
    }
    sub_24B4A8434(v3 - 8, a3);
  }
  else
  {
LABEL_4:
    uint64_t v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v5[0] = 67109120;
      v5[1] = 513;
      _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v5, 8u);
    }
  }
}

void sub_24B4A5248(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 24);
  if (v3)
  {
    while (*(_DWORD *)v3 != a2)
    {
      uint64_t v3 = *(void *)(v3 + 8);
      if (!v3) {
        goto LABEL_4;
      }
    }
    sub_24B4A8724(v3 - 8, a3);
  }
  else
  {
LABEL_4:
    uint64_t v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v5[0] = 67109120;
      v5[1] = 513;
      _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v5, 8u);
    }
  }
}

void sub_24B4A5348(uint64_t a1, int a2, char **a3)
{
  uint64_t v58 = *MEMORY[0x263EF8340];
  uint64_t v6 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    int64_t v17 = a3[1] - *a3;
    *(_DWORD *)long long buf = 67109376;
    int v33 = a2;
    unsigned __int16 v34 = 2048;
    int64_t v35 = v17;
    _os_log_debug_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Data received Session id %d, size %lu", buf, 0x12u);
  }
  uint64_t v7 = *(void *)(a1 + 24);
  if (!v7)
  {
LABEL_6:
    uint64_t v8 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplProvider::ReceiveDataInd session not found", buf, 2u);
      uint64_t v8 = qword_26B17C488;
    }
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      return;
    }
    *(_DWORD *)long long buf = 67109120;
    int v33 = 513;
    goto LABEL_28;
  }
  while (*(_DWORD *)v7 != a2)
  {
    uint64_t v7 = *(void *)(v7 + 8);
    if (!v7) {
      goto LABEL_6;
    }
  }
  uint64_t v9 = a3[1];
  if (*a3 == v9)
  {
    uint64_t v8 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplProvider::ReceiveDataInd data empty", buf, 2u);
      uint64_t v8 = qword_26B17C488;
    }
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      return;
    }
    *(_DWORD *)long long buf = 67109120;
    int v33 = 514;
LABEL_28:
    _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    return;
  }
  sub_24B4A6444(a1 + 32, *(char **)(a1 + 40), *a3, v9, v9 - *a3);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(const void **)(a1 + 32);
  if ((unint64_t)(v10 - (void)v11) > 1)
  {
    unsigned __int16 v24 = 0;
    sub_24B4A58CC(v11, v10, &v24);
    uint64_t v14 = *(const void **)(a1 + 32);
    uint64_t v15 = *(void *)(a1 + 40);
    size_t v16 = v15 - (void)v14;
    if (v15 - (uint64_t)v14 >= (unint64_t)v24)
    {
      if (v16 < 0xBB9)
      {
        uint64_t v28 = 0;
        int v29 = 0;
        uint64_t v30 = 0;
        sub_24B47A720(&v28, v14, v15, v16);
        sub_24B4A58CC(v28, (uint64_t)v29, &v31);
        v26[0] = &v28;
        v26[1] = 5;
        char v27 = 0;
        sub_24B4A9ECC((uint64_t)buf);
        if (sub_24B4AA06C((uint64_t)v26, (uint64_t)buf))
        {
          uint64_t v19 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)char v25 = 0;
            _os_log_debug_impl(&dword_24B3DE000, v19, OS_LOG_TYPE_DEBUG, "#gpsd,#supl, decoding of session ID failed", v25, 2u);
          }
          int v20 = 0;
          int v21 = 0;
        }
        else
        {
          int v20 = v34;
          int v21 = *(_DWORD *)buf;
        }
        if (v56)
        {
          uint64_t v57 = v56;
          operator delete(v56);
        }
        if (v54)
        {
          int v55 = v54;
          operator delete(v54);
        }
        if (v52)
        {
          char v53 = v52;
          operator delete(v52);
        }
        if (v50)
        {
          int v51 = v50;
          operator delete(v50);
        }
        if (v48)
        {
          char v49 = v48;
          operator delete(v48);
        }
        if (v46)
        {
          char v47 = v46;
          operator delete(v46);
        }
        if (v44)
        {
          char v45 = v44;
          operator delete(v44);
        }
        if (v42)
        {
          unsigned int v43 = v42;
          operator delete(v42);
        }
        if (v40)
        {
          uint64_t v41 = v40;
          operator delete(v40);
        }
        if (__p)
        {
          uint64_t v39 = __p;
          operator delete(__p);
        }
        if (v36)
        {
          int v37 = v36;
          operator delete(v36);
        }
        if (v28)
        {
          int v29 = v28;
          operator delete(v28);
        }
        if (v21)
        {
          uint64_t v22 = *(void *)(a1 + 24);
          if (v22)
          {
            while (*(_DWORD *)v22 != v20)
            {
              uint64_t v22 = *(void *)(v22 + 8);
              if (!v22) {
                goto LABEL_62;
              }
            }
            uint64_t v7 = v22;
          }
          else
          {
LABEL_62:
            uint64_t v23 = qword_26B17C488;
            if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)long long buf = 67109120;
              int v33 = 513;
              _os_log_error_impl(&dword_24B3DE000, v23, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
            }
          }
        }
        sub_24B4A87CC(v7 - 8, (void *)(a1 + 32));
      }
      else
      {
        int v18 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)long long buf = 0;
          _os_log_debug_impl(&dword_24B3DE000, v18, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplProvider::ReceiveDataInd buffer size more than SUPL_ENCODE_BUFFER_SIZE", buf, 2u);
          int v18 = qword_26B17C488;
        }
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 67109120;
          int v33 = 514;
          _os_log_error_impl(&dword_24B3DE000, v18, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
        }
      }
      *(void *)(a1 + 40) = *(void *)(a1 + 32);
    }
    else
    {
      uint64_t v12 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        uint64_t v13 = "#gpsd,#supl SuplProvider::ReceiveDataInd buffer size less than message length, waiting for other fragments";
        goto LABEL_21;
      }
    }
  }
  else
  {
    uint64_t v12 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      uint64_t v13 = "#gpsd,#supl SuplProvider::ReceiveDataInd buffer size < 2 bytes, wait for more messages";
LABEL_21:
      _os_log_debug_impl(&dword_24B3DE000, v12, OS_LOG_TYPE_DEBUG, v13, buf, 2u);
    }
  }
}

void sub_24B4A5894(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_24B4A58CC(const void *a1, uint64_t a2, _WORD *a3)
{
  std::string __p = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  sub_24B47A720(&__p, a1, a2, a2 - (void)a1);
  v6[0] = &__p;
  v6[1] = 0;
  char v7 = 0;
  if (sub_24B47DC20((uint64_t)v6, 0, 0xFFFFu, a3))
  {
    uint64_t v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl, decoding of message length failed", v5, 2u);
    }
  }
  if (__p)
  {
    uint64_t v9 = __p;
    operator delete(__p);
  }
}

void sub_24B4A5988(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4A59A4(uint64_t a1, unsigned int a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  sub_24B4AEF68();
  if (a2 > 0xFFFE)
  {
    LOBYTE(v6) = 0;
    int v7 = a2 - 0xFFFF;
    (**(void (***)(uint64_t, void, int *, uint64_t))a1)(a1, 0, &v6, 1);
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 24);
    if (v4)
    {
      while (*(_DWORD *)v4 != a2)
      {
        uint64_t v4 = *(void *)(v4 + 8);
        if (!v4) {
          goto LABEL_5;
        }
      }
      sub_24B4A8858(v4 - 8);
    }
    else
    {
LABEL_5:
      uint64_t v5 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        int v6 = 67109120;
        int v7 = 513;
        _os_log_error_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v6, 8u);
      }
    }
  }
}

uint64_t sub_24B4A5AFC(void *a1, uint64_t a2)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v4 = a1[3];
  if (v4)
  {
    uint64_t v5 = a1[3];
    while (*(_DWORD *)v5 != a2)
    {
      uint64_t v5 = *(void *)(v5 + 8);
      if (!v5) {
        goto LABEL_5;
      }
    }
    v18[0] = 0;
    memset(&v19, 0, sizeof(v19));
    unsigned __int16 v20 = 7275;
    uint64_t v7 = sub_24B4AF924();
    if (sub_24B4AFC64(v7, (uint64_t)v18, a2, *(_DWORD *)(v5 + 588)))
    {
      uint64_t v8 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 67109120;
        int v24 = 770;
        _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      }
      uint64_t v9 = a1[3];
      if (v9)
      {
        while (*(_DWORD *)v9 != a2)
        {
          uint64_t v9 = *(void *)(v9 + 8);
          if (!v9) {
            goto LABEL_22;
          }
        }
        a1[5] = a1[4];
      }
LABEL_22:
      sub_24B4A5000((uint64_t)a1, a2);
      uint64_t v10 = 0;
    }
    else
    {
      int v27 = 0;
      int v28 = 0;
      memset(&v25, 0, sizeof(v25));
      unsigned __int16 v26 = 0;
      unsigned int v11 = (v18[0] - 1);
      if (v11 >= 4)
      {
        uint64_t v13 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int v21 = 67109120;
          int v22 = 515;
          _os_log_error_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", v21, 8u);
        }
        LOBYTE(v12) = 0;
      }
      else
      {
        unsigned int v12 = 0x2030301u >> (8 * v11);
      }
      buf[0] = v12;
      std::string::operator=(&v25, &v19);
      unsigned __int16 v26 = v20;
      int v14 = *(_DWORD *)(v5 + 588);
      int v27 = 0;
      int v28 = v14;
      uint64_t v15 = sub_24B4B1200();
      if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
        sub_24B4A6624(&__p, v19.__r_.__value_.__l.__data_, v19.__r_.__value_.__l.__size_);
      }
      else {
        std::string __p = v19;
      }
      sub_24B4B1A4C(v15, (uint64_t *)&__p, v20, a2);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v25.__r_.__value_.__l.__data_);
      }
      uint64_t v10 = 1;
    }
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v19.__r_.__value_.__l.__data_);
    }
  }
  else
  {
LABEL_5:
    int v6 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 67109120;
      int v24 = 2305;
      _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      uint64_t v4 = a1[3];
    }
    while (v4)
    {
      if (*(_DWORD *)v4 == a2)
      {
        a1[5] = a1[4];
        break;
      }
      uint64_t v4 = *(void *)(v4 + 8);
    }
    sub_24B4A5000((uint64_t)a1, a2);
    return 0;
  }
  return v10;
}

void sub_24B4A5E08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4A5E5C(uint64_t a1, int a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2)
  {
    while (*(_DWORD *)v2 != a2)
    {
      uint64_t v2 = *(void *)(v2 + 8);
      if (!v2) {
        goto LABEL_4;
      }
    }
    uint64_t v5 = sub_24B4B1200();
    int v6 = *(NSObject **)(v5 + 80);
    if (v6)
    {
      dispatch_source_cancel(v6);
      *(void *)(v5 + 80) = 0;
    }
    sub_24B4A5000(a1, *(_DWORD *)(v2 + 368));
    sub_24B47D71C();
  }
  else
  {
LABEL_4:
    uint64_t v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v7[0] = 67109120;
      v7[1] = 513;
      _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v7, 8u);
    }
  }
}

BOOL sub_24B4A5F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 24);
  if (v3)
  {
    while (*(_DWORD *)v3 != a2)
    {
      uint64_t v3 = *(void *)(v3 + 8);
      if (!v3) {
        goto LABEL_4;
      }
    }
    uint64_t v8 = sub_24B4B1200();
    sub_24B4B183C(v8, a2, a3);
    return 1;
  }
  else
  {
LABEL_4:
    int v6 = qword_26B17C488;
    BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
    if (result)
    {
      v9[0] = 67109120;
      v9[1] = 513;
      _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v9, 8u);
      return 0;
    }
  }
  return result;
}

void *sub_24B4A6068(void *a1)
{
  uint64_t v2 = (void *)a1[36];
  if (v2)
  {
    a1[37] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[33];
  if (v3)
  {
    a1[34] = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)a1[30];
  if (v4)
  {
    a1[31] = v4;
    operator delete(v4);
  }
  uint64_t v5 = (void *)a1[25];
  if (v5)
  {
    a1[26] = v5;
    operator delete(v5);
  }
  sub_24B4989A8((uint64_t)(a1 + 3));
  return a1;
}

uint64_t sub_24B4A60D4(uint64_t a1, int a2, uint64_t a3)
{
  __p[4] = *(void **)MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)(a1 + 24);
  if (v3)
  {
    while (*(_DWORD *)v3 != a2)
    {
      uint64_t v3 = *(void *)(v3 + 8);
      if (!v3) {
        goto LABEL_4;
      }
    }
    memset(__p, 0, 25);
    long long v10 = 0u;
    *(_OWORD *)uint64_t v9 = 0u;
    if (a3)
    {
      LOWORD(v8[0]) = *(_WORD *)a3;
      v9[0] = *(void **)(a3 + 8);
      if (v8 != (_DWORD *)a3)
      {
        sub_24B3EAC0C(&v9[1], *(char **)(a3 + 16), *(char **)(a3 + 24), *(void *)(a3 + 24) - *(void *)(a3 + 16));
        sub_24B3EAC0C(__p, *(char **)(a3 + 40), *(char **)(a3 + 48), *(void *)(a3 + 48) - *(void *)(a3 + 40));
      }
      LOBYTE(__p[3]) = *(unsigned char *)(a3 + 64);
    }
    LOWORD(v8[0]) = 1;
    sub_24B4A8AF0(v3 - 8, (uint64_t)v8);
    sub_24B4A7ED4(v3 - 8);
    sub_24B4A7F30(v3 - 8);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if (v9[1])
    {
      *(void **)&long long v10 = v9[1];
      operator delete(v9[1]);
    }
    return 0;
  }
  else
  {
LABEL_4:
    uint64_t v5 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v8[0] = 67109120;
      v8[1] = 513;
      _os_log_error_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v8, 8u);
    }
    return -3;
  }
}

void sub_24B4A6250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_24B4A6264(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  if (!a2)
  {
    uint64_t v4 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    int v7 = 67109120;
    int v8 = 515;
LABEL_13:
    _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v7, 8u);
    return;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2)
  {
LABEL_5:
    uint64_t v4 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    int v7 = 67109120;
    int v8 = 513;
    goto LABEL_13;
  }
  while (*(_DWORD *)v2 != *(_DWORD *)(a2 + 28))
  {
    uint64_t v2 = *(void *)(v2 + 8);
    if (!v2) {
      goto LABEL_5;
    }
  }
  *(_DWORD *)(v2 + 416) = *(_DWORD *)(a2 + 32);
  uint64_t v5 = sub_24B4A113C();
  int v6 = *(unsigned __int8 *)(a2 + 24);
  sub_24B4A1C70(v5, (char **)a2, v6, v2 - 8);
}

void sub_24B4A63C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    do
    {
      uint64_t v3 = *(void *)(v1 + 8);
      v5[0] = 0;
      int v6 = *(_DWORD *)(v1 + 368);
      (**(void (***)(uint64_t, void, unsigned char *, void))a1)(a1, 0, v5, 0);
      uint64_t v1 = v3;
    }
    while (v3);
  }
  uint64_t v4 = sub_24B4AB040();
  sub_24B4AD84C(v4);
}

char *sub_24B4A6444(uint64_t a1, char *__dst, char *__src, char *a4, uint64_t a5)
{
  uint64_t v5 = __dst;
  if (a5 < 1) {
    return v5;
  }
  uint64_t v6 = a5;
  int v7 = __src;
  long long v10 = *(char **)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9 - (uint64_t)v10 < a5)
  {
    unsigned int v11 = *(char **)a1;
    uint64_t v12 = (uint64_t)&v10[a5 - *(void *)a1];
    if (v12 < 0) {
      sub_24B3E3AAC();
    }
    uint64_t v13 = (char *)(__dst - v11);
    unint64_t v14 = v9 - (void)v11;
    if (2 * v14 > v12) {
      uint64_t v12 = 2 * v14;
    }
    if (v14 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v15 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v15 = v12;
    }
    if (v15) {
      size_t v16 = operator new(v15);
    }
    else {
      size_t v16 = 0;
    }
    unsigned __int16 v26 = &v13[(void)v16];
    int v27 = &v13[(void)v16 + v6];
    int v28 = v26;
    do
    {
      char v29 = *v7++;
      *v28++ = v29;
      --v6;
    }
    while (v6);
    uint64_t v30 = *(char **)a1;
    if (*(char **)a1 == v5)
    {
      int v32 = v26;
    }
    else
    {
      __int16 v31 = v5;
      int v32 = v26;
      do
      {
        char v33 = *--v31;
        *--int v32 = v33;
      }
      while (v31 != v30);
      long long v10 = *(char **)(a1 + 8);
    }
    unsigned __int16 v34 = (char *)v16 + v15;
    if (v10 != v5) {
      memmove(v27, v5, v10 - v5);
    }
    int64_t v35 = *(char **)a1;
    *(void *)a1 = v32;
    *(void *)(a1 + 8) = &v27[v10 - v5];
    *(void *)(a1 + 16) = v34;
    if (v35) {
      operator delete(v35);
    }
    return v26;
  }
  uint64_t v17 = v10 - __dst;
  if (v10 - __dst >= a5)
  {
    int v18 = &__src[a5];
    unsigned __int16 v20 = *(char **)(a1 + 8);
LABEL_17:
    int v21 = &v5[v6];
    int v22 = &v20[-v6];
    uint64_t v23 = v20;
    if (&v20[-v6] < v10)
    {
      int64_t v24 = &v10[v6] - v20;
      uint64_t v23 = v20;
      do
      {
        char v25 = *v22++;
        *v23++ = v25;
        --v24;
      }
      while (v24);
    }
    *(void *)(a1 + 8) = v23;
    if (v20 != v21) {
      memmove(&v5[v6], v5, v20 - v21);
    }
    if (v18 != v7) {
      memmove(v5, v7, v18 - v7);
    }
    return v5;
  }
  int v18 = &__src[v17];
  int64_t v19 = a4 - &__src[v17];
  if (a4 != &__src[v17]) {
    memmove(*(void **)(a1 + 8), &__src[v17], a4 - &__src[v17]);
  }
  unsigned __int16 v20 = &v10[v19];
  *(void *)(a1 + 8) = &v10[v19];
  if (v17 >= 1) {
    goto LABEL_17;
  }
  return v5;
}

void *sub_24B4A6624(unsigned char *__dst, void *__src, unint64_t a3)
{
  uint64_t v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_24B3E3080();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    int v8 = operator new(v6 + 1);
    v5[1] = a3;
    _DWORD v5[2] = v7 | 0x8000000000000000;
    *uint64_t v5 = v8;
    uint64_t v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }
  return memmove(v5, __src, a3 + 1);
}

void sub_24B4A66C4(_DWORD *a1, int a2, int a3, int a4, int a5)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  long long v10 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v12[0]) = 0;
    _os_log_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Entered SuplTimer::Init", (uint8_t *)v12, 2u);
  }
  *a1 = a2;
  a1[2] = a5;
  unsigned int v11 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    v12[0] = 67109632;
    v12[1] = a2;
    __int16 v13 = 1024;
    int v14 = a5;
    __int16 v15 = 1024;
    int v16 = a3;
    _os_log_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, requestID,%u,Timertype,%u,User Type,%u", (uint8_t *)v12, 0x14u);
    unsigned int v11 = qword_26B17C488;
  }
  a1[3] = a4;
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v12[0]) = 0;
    _os_log_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Leaving SuplTimer::Init", (uint8_t *)v12, 2u);
  }
}

void sub_24B4A6824(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  uint64_t v2 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Entered SuplTimer::Start", buf, 2u);
  }
  uint64_t v3 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, -7);
  if (!v3)
  {
    uint64_t v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, timer queueAttr", buf, 2u);
    }
  }
  uint64_t v5 = dispatch_queue_create("TimerQueue", v3);
  *(void *)(a1 + 24) = v5;
  if (!v5)
  {
    uint64_t v14 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_WORD *)long long buf = 0;
    uint64_t v12 = "#gpsd,#supl, Queue creation failed";
LABEL_16:
    __int16 v13 = v14;
    goto LABEL_17;
  }
  dispatch_source_t v6 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, v5);
  *(void *)(a1 + 16) = v6;
  if (!v6)
  {
    uint64_t v14 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    *(_WORD *)long long buf = 0;
    uint64_t v12 = "#gpsd,#supl, fStopCompletedTimer NULL";
    goto LABEL_16;
  }
  uint64_t v7 = v6;
  dispatch_time_t v8 = dispatch_time(0, 1000000000 * *(unsigned int *)(a1 + 12));
  dispatch_source_set_timer(v7, v8, 0xFFFFFFFFFFFFFFFFLL, 0x1DCD6500uLL);
  uint64_t v9 = *(NSObject **)(a1 + 16);
  handler[0] = MEMORY[0x263EF8330];
  handler[1] = 3221225472;
  handler[2] = sub_24B4A6ACC;
  handler[3] = &unk_265293AF8;
  handler[4] = a1;
  dispatch_source_set_event_handler(v9, handler);
  *(_DWORD *)(a1 + 4) = 1;
  dispatch_resume(*(dispatch_object_t *)(a1 + 16));
  long long v10 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)long long buf = 67109120;
    int v17 = v11;
    _os_log_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, timer started for %d", buf, 8u);
    long long v10 = qword_26B17C488;
  }
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    uint64_t v12 = "#gpsd,#supl, Leaving SuplTimer::Start";
    __int16 v13 = v10;
LABEL_17:
    _os_log_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_DEFAULT, v12, buf, 2u);
  }
}

void sub_24B4A6ACC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int **)(a1 + 32);
  uint64_t v2 = *v1;
  uint64_t v3 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Entered SuplTimer::OnTimer", buf, 2u);
    uint64_t v3 = qword_26B17C488;
  }
  if (v1[1])
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)dispatch_source_t v6 = 0;
      _os_log_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, SuplTimer::OnTimer, timer running", v6, 2u);
    }
    uint64_t v4 = sub_24B4A4C30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 48))(v4, v2);
    uint64_t v3 = qword_26B17C488;
  }
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Leaving SuplTimer::OnTimer", v5, 2u);
  }
}

void sub_24B4A6BEC(uint64_t a1)
{
  uint64_t v2 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Entered SuplTimer::Stop", buf, 2u);
    uint64_t v2 = qword_26B17C488;
  }
  if (*(_DWORD *)(a1 + 4))
  {
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)dispatch_source_t v6 = 0;
      _os_log_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, timer running", v6, 2u);
    }
    uint64_t v3 = *(NSObject **)(a1 + 24);
    if (v3)
    {
      dispatch_release(v3);
      *(void *)(a1 + 24) = 0;
    }
    uint64_t v4 = *(NSObject **)(a1 + 16);
    if (v4)
    {
      dispatch_source_cancel(v4);

      *(void *)(a1 + 16) = 0;
    }
    *(_DWORD *)(a1 + 4) = 0;
    uint64_t v2 = qword_26B17C488;
  }
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Leaving SuplTimer::Stop", v5, 2u);
  }
}

void sub_24B4A6D08(uint64_t a1, int a2)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  uint64_t v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = a2;
    _os_log_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Entered SuplTimer::SetTimeout %d", (uint8_t *)v6, 8u);
  }
  if (*(_DWORD *)(a1 + 4)) {
    sub_24B4A6BEC(a1);
  }
  *(_DWORD *)(a1 + 12) = a2;
  uint64_t v5 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v6[0]) = 0;
    _os_log_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Leaving SuplTimer::SetTimeout", (uint8_t *)v6, 2u);
  }
}

void sub_24B4A6E04(uint64_t a1)
{
  uint64_t v2 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Entered SuplTimer::Release", buf, 2u);
  }
  if (*(_DWORD *)(a1 + 4))
  {
    sub_24B4A6BEC(a1);
  }
  else
  {
    uint64_t v3 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)dispatch_source_t v6 = 0;
      _os_log_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, timer not running", v6, 2u);
    }
  }
  uint64_t v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl, Leaving SuplTimer::Release", v5, 2u);
  }
}

uint64_t sub_24B4A6F00(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24B4AA55C(a1);
  *(void *)uint64_t v2 = &unk_26FE86218;
  *(_DWORD *)(v2 + 360) = 0;
  *(unsigned char *)(v2 + 16) = 3;
  *(_WORD *)(v2 + 32) = 4;
  uint64_t v3 = (char *)operator new(0x518uLL, MEMORY[0x263F8C180]);
  if (!v3)
  {
    *(void *)(a1 + 40) = 0;
    uint64_t v5 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return a1;
    }
    int v7 = 67109120;
    int v8 = 1537;
LABEL_9:
    _os_log_error_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v7, 8u);
    return a1;
  }
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  *((_OWORD *)v3 + 1) = xmmword_24B4BFCA0;
  *((void *)v3 + 4) = 1;
  *((_DWORD *)v3 + 10) = 0;
  *(void *)(v3 + 60) = 0;
  *(void *)(v3 + 76) = 0;
  *(void *)(v3 + 68) = 0;
  *((_DWORD *)v3 + 21) = 0;
  v3[44] = 2;
  *((void *)v3 + 6) = 0;
  *((_DWORD *)v3 + 14) = 0;
  *((void *)v3 + 22) = 0;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_OWORD *)(v3 + 136) = 0u;
  *(_OWORD *)(v3 + 152) = 0u;
  v3[168] = 0;
  *((_DWORD *)v3 + 46) = -1;
  *(void *)(v3 + 204) = 0;
  *(void *)(v3 + 209) = 0;
  *(void *)(v3 + 188) = 0;
  *(void *)(v3 + 196) = 0;
  *((void *)v3 + 28) = 0;
  *((_DWORD *)v3 + 58) = 0;
  *(void *)(v3 + 236) = -1;
  *((void *)v3 + 31) = 0;
  *((_WORD *)v3 + 128) = 0;
  *((_WORD *)v3 + 130) = -1;
  *((void *)v3 + 34) = 0;
  *((void *)v3 + 35) = 0;
  *(void *)(v3 + 286) = 0;
  *((void *)v3 + 33) = 0;
  *((void *)v3 + 38) = 0;
  *((void *)v3 + 39) = 0;
  *((void *)v3 + 37) = 0;
  v3[320] = 1;
  *((void *)v3 + 43) = 0;
  *((void *)v3 + 44) = 0;
  *((void *)v3 + 42) = 0;
  v3[372] = -1;
  *((_DWORD *)v3 + 96) = 0;
  *((void *)v3 + 47) = 0;
  v3[388] = -1;
  *((_WORD *)v3 + 195) = 0;
  v3[392] = 0;
  *((_DWORD *)v3 + 92) = 0;
  *((void *)v3 + 45) = 0;
  *((void *)v3 + 50) = 255;
  *(_OWORD *)(v3 + 408) = 0u;
  *(_OWORD *)(v3 + 424) = 0u;
  *(_OWORD *)(v3 + 440) = 0u;
  *(_OWORD *)(v3 + 456) = 0u;
  *(_OWORD *)(v3 + 472) = 0u;
  *(_OWORD *)(v3 + 488) = 0u;
  *(_OWORD *)(v3 + 504) = 0u;
  *(_OWORD *)(v3 + 520) = 0u;
  *(_OWORD *)(v3 + 536) = 0u;
  *(_OWORD *)(v3 + 552) = 0u;
  *(_OWORD *)(v3 + 568) = 0u;
  *(_OWORD *)(v3 + 584) = 0u;
  *(_OWORD *)(v3 + 600) = 0u;
  *(_OWORD *)(v3 + 616) = 0u;
  *(_OWORD *)(v3 + 632) = 0u;
  *(_OWORD *)(v3 + 648) = 0u;
  *(_OWORD *)(v3 + 664) = 0u;
  *(_OWORD *)(v3 + 680) = 0u;
  *(_OWORD *)(v3 + 696) = 0u;
  *(_OWORD *)(v3 + 712) = 0u;
  *(_OWORD *)(v3 + 728) = 0u;
  *(_OWORD *)(v3 + 744) = 0u;
  *((void *)v3 + 95) = 0;
  *((_DWORD *)v3 + 82) = 0;
  *(_OWORD *)(v3 + 904) = 0u;
  *(_OWORD *)(v3 + 776) = 0u;
  *(_OWORD *)(v3 + 792) = 0u;
  *(_OWORD *)(v3 + 808) = 0u;
  *(_OWORD *)(v3 + 824) = 0u;
  *(_OWORD *)(v3 + 840) = 0u;
  *(_OWORD *)(v3 + 856) = 0u;
  *(_OWORD *)(v3 + 872) = 0u;
  *(_OWORD *)(v3 + 888) = 0u;
  v3[912] = -1;
  *((_DWORD *)v3 + 192) = 0;
  *(_OWORD *)(v3 + 936) = 0u;
  *(_OWORD *)(v3 + 952) = 0u;
  *(_OWORD *)(v3 + 968) = 0u;
  *(_OWORD *)(v3 + 984) = 0u;
  *(_OWORD *)(v3 + 1000) = 0u;
  *(_OWORD *)(v3 + 1016) = 0u;
  *(_OWORD *)(v3 + 1032) = 0u;
  *(_OWORD *)(v3 + 1048) = 0u;
  *(_OWORD *)(v3 + 1064) = 0u;
  *(_OWORD *)(v3 + 1080) = 0u;
  *(_OWORD *)(v3 + 1096) = 0u;
  *(_OWORD *)(v3 + 1112) = 0u;
  *(_OWORD *)(v3 + 1128) = 0u;
  *(_OWORD *)(v3 + 1144) = 0u;
  *(_OWORD *)(v3 + 1160) = 0u;
  *(_OWORD *)(v3 + 920) = 0u;
  *(_OWORD *)(v3 + 1176) = 0u;
  *(_OWORD *)(v3 + 1192) = 0u;
  *(_OWORD *)(v3 + 1208) = 0u;
  *(_OWORD *)(v3 + 1224) = 0u;
  *(_OWORD *)(v3 + 1240) = 0u;
  *(_OWORD *)(v3 + 1256) = 0u;
  *(_OWORD *)(v3 + 1272) = 0u;
  *(_OWORD *)(v3 + 1288) = 0u;
  *(void *)(a1 + 40) = v3;
  uint64_t v4 = operator new(1uLL, MEMORY[0x263F8C180]);
  if (!v4)
  {
    *(void *)(a1 + 368) = 0;
    uint64_t v5 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return a1;
    }
    int v7 = 67109120;
    int v8 = 1537;
    goto LABEL_9;
  }
  *(void *)(a1 + 368) = v4;
  return a1;
}

uint64_t sub_24B4A7200(uint64_t a1)
{
  *(void *)a1 = &unk_26FE86218;
  if (*(_WORD *)(a1 + 32) == 4)
  {
    uint64_t v2 = *(void *)(a1 + 40);
    if (v2)
    {
      uint64_t v3 = sub_24B49DA44(v2);
      MEMORY[0x24C5D2700](v3, 0x1030C408837E473);
    }
    *(void *)(a1 + 40) = 0;
    uint64_t v4 = *(void *)(a1 + 368);
    if (v4) {
      MEMORY[0x24C5D2700](v4, 0xC400A2AC0F1);
    }
    *(void *)(a1 + 368) = 0;
  }
  return sub_24B4AA64C(a1);
}

void sub_24B4A72A0(uint64_t a1)
{
  sub_24B4A7200(a1);
  JUMPOUT(0x24C5D2700);
}

void sub_24B4A72D8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 360))
  {
    *(_DWORD *)(a1 + 360) = 0;
    uint64_t v2 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t v3 = 0;
      _os_log_debug_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplResponseRecd::UpdateState, update state to Supl_PosInit_Sent", v3, 2u);
    }
    sub_24B4AA6E4(a1, 4, *(void *)(a1 + 8));
  }
}

uint64_t sub_24B4A7360(uint64_t a1)
{
  uint64_t v111 = *MEMORY[0x263EF8340];
  sub_24B3E39F4(v51, 0xBB8uLL);
  v49[0] = (uint64_t)v51;
  v49[1] = 0;
  char v50 = 0;
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    *(_OWORD *)(v2 + 16) = *(_OWORD *)(v3 + 448);
    long long v4 = *(_OWORD *)(v3 + 464);
    long long v5 = *(_OWORD *)(v3 + 480);
    long long v6 = *(_OWORD *)(v3 + 496);
    *(void *)(v2 + 80) = *(void *)(v3 + 512);
    *(_OWORD *)(v2 + 48) = v5;
    *(_OWORD *)(v2 + 64) = v6;
    *(_OWORD *)(v2 + 32) = v4;
  }
  else
  {
    int v16 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
    *(_DWORD *)long long buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = 513;
    _os_log_error_impl(&dword_24B3DE000, v16, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    __int16 v52 = *(_WORD *)(v7 + 520);
    uint64_t v53 = *(void *)(v7 + 528);
    __int16 v54 = 0;
    int v55 = 0;
    uint64_t v56 = 0;
    sub_24B47A720(&v54, *(const void **)(v7 + 536), *(void *)(v7 + 544), *(void *)(v7 + 544) - *(void *)(v7 + 536));
    uint64_t v57 = 0;
    uint64_t v58 = 0;
    uint64_t v59 = 0;
    sub_24B47A720(&v57, *(const void **)(v7 + 560), *(void *)(v7 + 568), *(void *)(v7 + 568) - *(void *)(v7 + 560));
    char v8 = *(unsigned char *)(v7 + 584);
    char v60 = v8;
    if (v52 == 1)
    {
      unsigned int v9 = (v53 >> 6) & 1;
      unsigned int v10 = (v53 >> 4) & 1;
      unsigned int v11 = (v53 >> 3) & 1;
      unsigned int v12 = (v53 >> 5) & 1;
      int v13 = v53 & 1;
      unsigned int v14 = (v53 >> 2) & 1;
      unsigned int v15 = (v53 >> 1) & 1;
    }
    else
    {
      unsigned int v9 = 0;
      unsigned int v10 = 0;
      unsigned int v11 = 0;
      unsigned int v12 = 0;
      int v13 = 0;
      unsigned int v14 = 0;
      unsigned int v15 = 0;
    }
    if ((v10 | v9 | v11 | v12 | v13 | v14 | v15) == 1)
    {
      *(_DWORD *)uint64_t v2 = 1;
      *(_DWORD *)(v2 + 112) = v12;
      *(_DWORD *)(v2 + 116) = v9;
      *(_DWORD *)(v2 + 124) = v11;
      *(_DWORD *)(v2 + 108) = v10;
      *(_DWORD *)(v2 + 96) = v15;
      *(_DWORD *)(v2 + 100) = v14;
      *(_DWORD *)(v2 + 92) = v13;
      if (v11)
      {
        *(_DWORD *)(v2 + 88) = 1;
        goto LABEL_16;
      }
    }
    else if (v11)
    {
LABEL_16:
      *(_WORD *)(v2 + 132) = WORD2(v53);
      *(unsigned char *)(v2 + 134) = BYTE6(v53);
      *(unsigned char *)(v2 + 136) = v8;
      int v17 = HIBYTE(v53);
      *(unsigned char *)(v2 + 135) = HIBYTE(v53);
      if (v17)
      {
        unint64_t v18 = 0;
        *(_DWORD *)(v2 + 128) = 1;
        int64_t v19 = *(uint64_t **)(v2 + 144);
        *(void *)(v2 + 152) = v19;
        do
        {
          uint64_t v20 = *((unsigned __int8 *)v54 + v18);
          uint64_t v21 = *((unsigned __int8 *)v57 + v18);
          unint64_t v22 = *(void *)(v2 + 160);
          if ((unint64_t)v19 >= v22)
          {
            uint64_t v23 = *(void **)(v2 + 144);
            uint64_t v24 = v19 - v23;
            unint64_t v25 = v24 + 1;
            if ((unint64_t)(v24 + 1) >> 61) {
              sub_24B3E3AAC();
            }
            uint64_t v26 = v22 - (void)v23;
            if (v26 >> 2 > v25) {
              unint64_t v25 = v26 >> 2;
            }
            if ((unint64_t)v26 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v27 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v27 = v25;
            }
            if (v27)
            {
              if (v27 >> 61) {
                sub_24B3E8068();
              }
              int v28 = (char *)operator new(8 * v27);
            }
            else
            {
              int v28 = 0;
            }
            char v29 = &v28[8 * v24];
            *(void *)char v29 = v20 | (v21 << 32);
            uint64_t v30 = (uint64_t *)(v29 + 8);
            if (v19 != v23)
            {
              do
              {
                uint64_t v31 = *--v19;
                *((void *)v29 - 1) = v31;
                v29 -= 8;
              }
              while (v19 != v23);
              int64_t v19 = *(uint64_t **)(v2 + 144);
            }
            *(void *)(v2 + 144) = v29;
            *(void *)(v2 + 152) = v30;
            *(void *)(v2 + 160) = &v28[8 * v27];
            if (v19) {
              operator delete(v19);
            }
            int64_t v19 = v30;
          }
          else
          {
            *v19++ = v20 | (v21 << 32);
          }
          *(void *)(v2 + 152) = v19;
          if (v18 > 0x1C) {
            break;
          }
          ++v18;
        }
        while (v18 < HIBYTE(v53));
      }
    }
    uint64_t v32 = sub_24B4AF924();
    if (sub_24B4AFE44(v32, *(_DWORD *)(*(void *)(a1 + 8) + 596)))
    {
      sub_24B47C38C((uint64_t *)(v2 + 864));
      sub_24B47C990(*(void *)(a1 + 368), a1 + 32);
      sub_24B47C770(*(void *)(a1 + 368), a1 + 32, *(void *)(a1 + 8));
    }
    uint64_t v33 = *(void *)(a1 + 8);
    if (v33)
    {
      if ((*(unsigned char *)(v33 + 380) & 0xFE) != 2) {
        goto LABEL_54;
      }
      *(_DWORD *)(a1 + 48) = 1;
      *(_WORD *)(a1 + 56) = *(_DWORD *)(v33 + 376);
      uint64_t v34 = sub_24B4AB040();
      sub_24B4AB4A8(v34, a1 + 64, *(_DWORD *)(*(void *)(a1 + 8) + 596));
      uint64_t v35 = sub_24B4AB040();
      sub_24B4AB61C(v35, *(void *)(a1 + 40) + 168, *(_DWORD *)(*(void *)(a1 + 8) + 596));
      uint64_t v36 = *(void *)(a1 + 8);
      uint64_t v37 = sub_24B4AB040();
      uint64_t v38 = sub_24B4ABD9C(v37, *(_DWORD *)(v36 + 376));
      uint64_t v39 = v38;
      if (v38)
      {
        if (*(_DWORD *)(*(void *)(v38 + 48) + 8) == 1)
        {
          *(_WORD *)long long buf = -254;
          LODWORD(v64) = 0;
          WORD2(v64) = 0;
          int v65 = 0;
          LOWORD(v66) = 0;
          HIDWORD(v66) = 0;
          LOWORD(v67) = 0;
          int v68 = 0;
          __int16 v69 = 0;
          int v70 = 0;
          __int16 v71 = 0;
          int v72 = 0;
          __int16 v73 = 0;
          int v74 = 0;
          __int16 v75 = 0;
          __int16 v76 = 0;
          int v77 = 0;
          __int16 v78 = 0;
          int v79 = 0;
          __int16 v80 = 0;
          int v81 = 0;
          __int16 v82 = 0;
          int v83 = 0;
          __int16 v84 = 0;
          int v85 = 0;
          __int16 v86 = 0;
          int v87 = 0;
          __int16 v88 = 0;
          __int16 v89 = 0;
          int v90 = 0;
          __int16 v91 = 0;
          int v92 = 0;
          __int16 v93 = 0;
          int v94 = 0;
          __int16 v95 = 0;
          *(_DWORD *)((char *)v96 + 3) = 0;
          v96[0] = 0;
          v96[2] = 0;
          __int16 v97 = 0;
          int v98 = 0;
          __int16 v99 = 0;
          int v100 = 0;
          __int16 v101 = 0;
          int v102 = 0;
          __int16 v103 = 0;
          int v104 = 0;
          __int16 v105 = 0;
          __int16 v109 = 0;
          int v110 = 0;
          int v107 = 0;
          v108[0] = 0;
          *(void *)((char *)v108 + 7) = 0;
          std::string __p = 0;
          uint64_t v40 = sub_24B4AB040();
          sub_24B4AD1DC(v40, (uint64_t)buf);
          uint64_t v41 = sub_24B4AB040();
          if (sub_24B4AD004(v41, *(void *)(v39 + 48) + 200, (uint64_t)buf))
          {
            int v42 = sub_24B4AB040();
            sub_24B4ACB40(v42, v2 + 328, (uint64_t)buf);
            *(_DWORD *)(v2 + 4) = 1;
          }
          if (__p)
          {
            int v107 = __p;
            operator delete(__p);
          }
        }
        if (sub_24B498250(v39, v2 + 1280, *(unsigned int *)(*(void *)(a1 + 8) + 376), *(_DWORD *)(*(void *)(a1 + 8) + 596)))
        {
          unsigned int v43 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)long long buf = 0;
            _os_log_debug_impl(&dword_24B3DE000, v43, OS_LOG_TYPE_DEBUG, "#gpsd,#supl FillHash failed in PrepareSuplPosInit", buf, 2u);
            unsigned int v43 = qword_26B17C488;
          }
          if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)long long buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = 770;
            _os_log_error_impl(&dword_24B3DE000, v43, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
          }
        }
      }
      *(_DWORD *)(v2 + 12) = 1;
      uint64_t v33 = *(void *)(a1 + 8);
      if (v33)
      {
LABEL_54:
        *(void *)(a1 + 48) = *(void *)(v33 + 64);
        *(_WORD *)(a1 + 56) = *(_WORD *)(v33 + 72);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(v33 + 80);
        sub_24B48BD54(a1 + 72, v33 + 88);
        if (a1 + 48 != v33 + 64)
        {
          sub_24B3EAC0C((void *)(a1 + 248), *(char **)(v33 + 264), *(char **)(v33 + 272), *(void *)(v33 + 272) - *(void *)(v33 + 264));
          *(unsigned char *)(a1 + 272) = *(unsigned char *)(v33 + 288);
          *(unsigned char *)(a1 + 280) = *(unsigned char *)(v33 + 296);
          sub_24B3EAC0C((void *)(a1 + 288), *(char **)(v33 + 304), *(char **)(v33 + 312), *(void *)(v33 + 312) - *(void *)(v33 + 304));
          sub_24B3EAC0C((void *)(a1 + 312), *(char **)(v33 + 328), *(char **)(v33 + 336), *(void *)(v33 + 336) - *(void *)(v33 + 328));
          sub_24B3EAC0C((void *)(a1 + 336), *(char **)(v33 + 352), *(char **)(v33 + 360), *(void *)(v33 + 360) - *(void *)(v33 + 352));
        }
      }
    }
    *(void *)long long buf = v49;
    uint64_t v64 = a1 + 24;
    if (sub_24B49CC6C((uint64_t *)buf))
    {
      __int16 v44 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t v61 = 0;
        _os_log_debug_impl(&dword_24B3DE000, v44, OS_LOG_TYPE_DEBUG, "#gpsd,#supl encoding failed in PrepareSuplPosInit", v61, 2u);
        __int16 v44 = qword_26B17C488;
      }
      if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)uint64_t v61 = 67109120;
        int v62 = 770;
        _os_log_error_impl(&dword_24B3DE000, v44, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", v61, 8u);
      }
    }
    *(_DWORD *)(*(void *)(a1 + 8) + 424) = 1;
    if (v57)
    {
      uint64_t v58 = v57;
      operator delete(v57);
    }
    if (v54)
    {
      int v55 = v54;
      operator delete(v54);
    }
    goto LABEL_65;
  }
  int v16 = qword_26B17C488;
LABEL_9:
  if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)long long buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = 513;
    _os_log_error_impl(&dword_24B3DE000, v16, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
  }
LABEL_65:
  uint64_t v45 = sub_24B4B1200();
  int v46 = *(_DWORD *)(*(void *)(a1 + 8) + 376);
  uint64_t v64 = 0;
  int v65 = 0;
  *(_DWORD *)long long buf = v46;
  LOBYTE(v68) = -1;
  uint64_t v66 = 3;
  int v67 = 0;
  sub_24B4B21B4(v45, (unsigned int *)buf);
  if (sub_24B4AAF40(a1, v49)) {
    *(_DWORD *)(a1 + 360) = 1;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);
  uint64_t v47 = *(unsigned int *)(a1 + 360);
  if (v51[0])
  {
    v51[1] = v51[0];
    operator delete(v51[0]);
  }
  return v47;
}

void sub_24B4A7B5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_24B4A7BD8(uint64_t a1, int a2, int a3, uint64_t *a4)
{
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)a1 = &unk_26FE86270;
  *(_OWORD *)(a1 + 24) = 0u;
  uint64_t v8 = a1 + 24;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  sub_24B4A9ECC(a1 + 64);
  *(unsigned char *)(a1 + 380) = -1;
  *(unsigned char *)(a1 + 384) = -1;
  *(_OWORD *)(a1 + 388) = 0u;
  *(_OWORD *)(a1 + 404) = 0u;
  *(void *)(a1 + 420) = 0;
  *(_OWORD *)(a1 + 448) = xmmword_24B4BFCA0;
  *(void *)(a1 + 464) = 1;
  *(_DWORD *)(a1 + 472) = 0;
  *(_DWORD *)(a1 + 516) = 0;
  *(void *)(a1 + 492) = 0;
  *(void *)(a1 + 508) = 0;
  *(void *)(a1 + 500) = 0;
  *(unsigned char *)(a1 + 476) = 2;
  *(void *)(a1 + 480) = 0;
  *(_DWORD *)(a1 + 488) = 0;
  *(void *)(a1 + 584) = 0;
  *(_OWORD *)(a1 + 520) = 0u;
  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_DWORD *)(a1 + 376) = a3;
  uint64_t v9 = *a4;
  *(_DWORD *)(a1 + 388) = *((_DWORD *)a4 + 2);
  *(void *)(a1 + 380) = v9;
  *(void *)(a1 + 432) = 0;
  *(_DWORD *)(a1 + 596) = a2;
  *(void *)(a1 + 24) = a1;
  sub_24B47D210(v8, a1 + 448, a2);
  *(_DWORD *)(a1 + 8) = a3;
  sub_24B47D3B4(v8, a2);
  *(_DWORD *)(a1 + 592) = 0;
  *(_DWORD *)(sub_24B4AB040() + 280) = a2;
  *(void *)(a1 + 440) = 0;
  return a1;
}

void sub_24B4A7D20(_Unwind_Exception *exception_object)
{
  v1[3] = 0;
  uint64_t v3 = (void *)v1[4];
  if (v3)
  {
    v1[5] = v3;
    operator delete(v3);
  }
  void v1[2] = 0;
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B4A7D5C(uint64_t a1)
{
  *(void *)a1 = &unk_26FE86270;
  uint64_t v2 = sub_24B4AB040();
  if (v2) {
    sub_24B4ABE2C(v2, *(_DWORD *)(a1 + 376));
  }
  sub_24B4A6E04(a1 + 392);
  uint64_t v3 = *(void *)(a1 + 432);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *(void *)(a1 + 432) = 0;
  uint64_t v4 = *(void *)(a1 + 440);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *(void *)(a1 + 440) = 0;
  long long v5 = *(void **)(a1 + 560);
  if (v5)
  {
    *(void *)(a1 + 568) = v5;
    operator delete(v5);
  }
  long long v6 = *(void **)(a1 + 536);
  if (v6)
  {
    *(void *)(a1 + 544) = v6;
    operator delete(v6);
  }
  uint64_t v7 = *(void **)(a1 + 352);
  if (v7)
  {
    *(void *)(a1 + 360) = v7;
    operator delete(v7);
  }
  uint64_t v8 = *(void **)(a1 + 328);
  if (v8)
  {
    *(void *)(a1 + 336) = v8;
    operator delete(v8);
  }
  uint64_t v9 = *(void **)(a1 + 304);
  if (v9)
  {
    *(void *)(a1 + 312) = v9;
    operator delete(v9);
  }
  unsigned int v10 = *(void **)(a1 + 264);
  if (v10)
  {
    *(void *)(a1 + 272) = v10;
    operator delete(v10);
  }
  sub_24B4989A8(a1 + 88);
  *(void *)(a1 + 24) = 0;
  unsigned int v11 = *(void **)(a1 + 32);
  if (v11)
  {
    *(void *)(a1 + 40) = v11;
    operator delete(v11);
  }
  *(void *)(a1 + 16) = 0;
  return a1;
}

void sub_24B4A7E9C(uint64_t a1)
{
  sub_24B4A7D5C(a1);
  JUMPOUT(0x24C5D2700);
}

uint64_t sub_24B4A7ED4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 380) >= 2u)
  {
    uint64_t v1 = (_DWORD *)(a1 + 392);
    int v2 = *(_DWORD *)(a1 + 376);
    int v3 = *(_DWORD *)(sub_24B4AB040() + 24);
    if (v3) {
      int v4 = v3;
    }
    else {
      int v4 = 11;
    }
    sub_24B4A66C4(v1, v2, 0, v4, 0);
  }
  return 0;
}

void sub_24B4A7F30(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24B4AB040();
  if (!v2)
  {
    uint64_t v7 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    *(_DWORD *)long long buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = 513;
    goto LABEL_11;
  }
  int v3 = *(unsigned __int8 *)(a1 + 380);
  if (!*(unsigned char *)(a1 + 380))
  {
    uint64_t v8 = *(void *)(a1 + 432);
    if (v8)
    {
      sub_24B4AA6E4(v8, 7, a1);
      uint64_t v9 = *(void **)(a1 + 432);
      *(unsigned char *)(v9[5] + 456) = 18;
      *(_DWORD *)(v9[5] + 4) = 1;
      sub_24B3E39F4(buf, 0xBB8uLL);
      v18[0] = buf;
      v18[1] = 0;
      char v19 = 0;
      sub_24B48BBCC((uint64_t)v9);
      (*(void (**)(void *, void *))(*v9 + 32))(v9, v18);
      sub_24B48B960((uint64_t)v9);
      if (*(void *)buf)
      {
        uint64_t v21 = *(void **)buf;
        operator delete(*(void **)buf);
      }
      return;
    }
    uint64_t v7 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    *(_DWORD *)long long buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = 1028;
LABEL_11:
    _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    return;
  }
  if (v3 == 1)
  {
    uint64_t v10 = *(void *)(a1 + 432);
    if (v10) {
      goto LABEL_19;
    }
    unsigned int v11 = operator new(0x168uLL, MEMORY[0x263F8C180]);
    unsigned int v12 = v11;
    if (v11)
    {
      sub_24B4AA55C((uint64_t)v11);
      *unsigned int v12 = &unk_26FE86070;
    }
    sub_24B4A8A08(a1, (uint64_t)v12);
    uint64_t v10 = *(void *)(a1 + 432);
    if (v10)
    {
LABEL_19:
      sub_24B4AA6E4(v10, 7, a1);
      uint64_t v13 = *(void *)(a1 + 432);
      sub_24B48B960(v13);
    }
    else
    {
      uint64_t v7 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = 1537;
        goto LABEL_11;
      }
    }
  }
  else if (v3 == 3)
  {
    int v4 = (_DWORD *)v2;
    uint64_t v5 = sub_24B4ABD9C(v2, *(_DWORD *)(a1 + 376));
    if (v5 && !*(_DWORD *)(v5 + 20))
    {
      sub_24B4AC888(v4, a1 + 448, *(unsigned __int8 *)(*(void *)(v5 + 48) + 20), *(_DWORD *)(a1 + 596));
    }
    else
    {
      long long v6 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = 513;
        _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
      }
    }
    unsigned int v15 = operator new(0x168uLL, MEMORY[0x263F8C180]);
    int v16 = v15;
    if (v15)
    {
      sub_24B4AA55C((uint64_t)v15);
      *int v16 = &unk_26FE86070;
    }
    sub_24B4A8A08(a1, (uint64_t)v16);
    uint64_t v17 = *(void *)(a1 + 432);
    if (v17)
    {
      sub_24B4AA6E4(v17, 0, a1);
      return;
    }
    uint64_t v7 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = 1537;
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v14 = *(void *)(a1 + 432);
    sub_24B47CFA4((uint64_t *)(a1 + 24), (unsigned char *)(a1 + 380), v14, a1 + 448);
  }
}

void sub_24B4A8338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  MEMORY[0x24C5D26F0](v14, MEMORY[0x263F8C180]);
  _Unwind_Resume(a1);
}

void sub_24B4A8378(uint64_t a1, int a2)
{
  if (a2 == 6)
  {
    if (*(_DWORD *)(a1 + 424) != 1) {
      return;
    }
    uint64_t v2 = a1 + 392;
    int v3 = *(_DWORD *)(sub_24B4AB040() + 32);
    BOOL v4 = v3 == 0;
    int v5 = 10;
    goto LABEL_7;
  }
  if (a2 == 4)
  {
    if (*(_DWORD *)(a1 + 424) != 1) {
      return;
    }
    uint64_t v2 = a1 + 392;
    int v3 = *(_DWORD *)(sub_24B4AB040() + 28);
    BOOL v4 = v3 == 0;
    int v5 = 11;
LABEL_7:
    if (v4) {
      int v6 = v5;
    }
    else {
      int v6 = v3;
    }
    sub_24B4A6D08(v2, v6);
    sub_24B4A6824(v2);
    return;
  }
  uint64_t v7 = a1 + 392;
  sub_24B4A6BEC(v7);
}

void sub_24B4A8434(uint64_t a1, unsigned int a2)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24B4B1200();
  unsigned int v5 = *(_DWORD *)(a1 + 376);
  uint64_t v12 = 0;
  uint64_t v14 = 0;
  v11[0] = v5;
  char v15 = -1;
  uint64_t v13 = a2;
  sub_24B4B21B4(v4, v11);
  if (a2 == 6)
  {
    int v6 = *(void (**)(void))(*sub_24B4A85B0(a1) + 16);
    v6();
  }
  else
  {
    uint64_t v7 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v11[0] = 67109120;
      v11[1] = 514;
      _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v11, 8u);
    }
    uint64_t v8 = sub_24B4A4C30();
    *(void *)(v8 + 40) = *(void *)(v8 + 32);
    uint64_t v9 = (void *)sub_24B4A113C();
    sub_24B480554((uint64_t)off_2697C5530, *(_DWORD *)(a1 + 376));
    sub_24B4A1BBC(v9);
    uint64_t v10 = sub_24B4A4C30();
    sub_24B4A5E5C(v10, *(_DWORD *)(a1 + 376));
  }
}

void *sub_24B4A85B0(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(a1 + 432);
  if (!v1)
  {
    int v3 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v7 = 67109120;
      int v8 = 513;
      _os_log_error_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v7, 8u);
    }
    uint64_t v4 = operator new(0x168uLL, MEMORY[0x263F8C180]);
    uint64_t v1 = v4;
    if (v4)
    {
      sub_24B4AA55C((uint64_t)v4);
      *uint64_t v1 = &unk_26FE86070;
      *(void *)(a1 + 432) = v1;
    }
    else
    {
      *(void *)(a1 + 432) = 0;
      unsigned int v5 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        int v7 = 67109120;
        int v8 = 1537;
        _os_log_error_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v7, 8u);
        return *(void **)(a1 + 432);
      }
    }
  }
  return v1;
}

void sub_24B4A8708(_Unwind_Exception *a1)
{
  MEMORY[0x24C5D26F0](v1, MEMORY[0x263F8C180]);
  _Unwind_Resume(a1);
}

void sub_24B4A8724(uint64_t a1, unsigned int a2)
{
  int v4 = *(_DWORD *)(a1 + 376);
  uint64_t v5 = *(void *)(a1 + 432);
  if (v5 && *(unsigned char *)(v5 + 16) != 7)
  {
    sub_24B4AA6E4(v5, 7, a1);
    sub_24B48B960(*(void *)(a1 + 432));
  }
  uint64_t v6 = sub_24B4B1200();
  unsigned int v7 = *(_DWORD *)(a1 + 376);
  uint64_t v10 = 0;
  uint64_t v12 = 0;
  unsigned int v9 = v7;
  char v13 = -1;
  uint64_t v11 = a2;
  sub_24B4B21B4(v6, &v9);
  uint64_t v8 = sub_24B4A4C30();
  sub_24B4A5E5C(v8, v4);
}

uint64_t sub_24B4A87CC(uint64_t result, void *a2)
{
  if (*a2 != a2[1])
  {
    uint64_t v2 = result;
    sub_24B4A6BEC(result + 392);
    *(_DWORD *)(sub_24B4AB040() + 280) = *(_DWORD *)(v2 + 596);
    int v3 = *(uint64_t (**)(void))(*sub_24B4A85B0(v2) + 40);
    return v3();
  }
  return result;
}

void sub_24B4A8858(uint64_t a1)
{
  __p[3] = *(void **)MEMORY[0x263EF8340];
  if (*(void *)(a1 + 432))
  {
    if (*(_DWORD *)(a1 + 396) != 1)
    {
      uint64_t v2 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        __p[0] = (void *)0x40404000100;
        _os_log_error_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)__p, 8u);
      }
    }
    *(_DWORD *)(a1 + 396) = 0;
    sub_24B3E39F4(__p, 0xBB8uLL);
    v4[0] = __p;
    v4[1] = 0;
    char v5 = 0;
    sub_24B4AA6E4(*(void *)(a1 + 432), 7, a1);
    (*(void (**)(void, void *))(**(void **)(a1 + 432) + 32))(*(void *)(a1 + 432), v4);
    sub_24B48B960(*(void *)(a1 + 432));
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }
  else
  {
    int v3 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      __p[0] = (void *)0x20104000100;
      _os_log_error_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)__p, 8u);
    }
  }
}

void sub_24B4A89E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

void sub_24B4A8A08(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  if (a2)
  {
    uint64_t v4 = *(void *)(a1 + 440);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *(void *)(a1 + 432);
    *(void *)(a1 + 432) = a2;
    *(void *)(a1 + 440) = v5;
  }
  else
  {
    uint64_t v6 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v7[0] = 67109120;
      v7[1] = 515;
      _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v7, 8u);
    }
  }
}

uint64_t sub_24B4A8AF0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)(a1 + 520) = *(_WORD *)a2;
  *(void *)(a1 + 528) = *(void *)(a2 + 8);
  if (a1 + 520 != a2)
  {
    sub_24B3EAC0C((void *)(a1 + 536), *(char **)(a2 + 16), *(char **)(a2 + 24), *(void *)(a2 + 24) - *(void *)(a2 + 16));
    sub_24B3EAC0C((void *)(a1 + 560), *(char **)(a2 + 40), *(char **)(a2 + 48), *(void *)(a2 + 48) - *(void *)(a2 + 40));
  }
  *(unsigned char *)(a1 + 584) = *(unsigned char *)(a2 + 64);
  return sub_24B47D2F4((_DWORD *)(a1 + 24));
}

void sub_24B4A8B6C(uint64_t a1, int a2)
{
  __p[3] = *(void **)MEMORY[0x263EF8340];
  uint64_t v4 = *(void *)(a1 + 432);
  if (v4) {
    goto LABEL_5;
  }
  uint64_t v5 = operator new(0x168uLL, MEMORY[0x263F8C180]);
  uint64_t v6 = v5;
  if (v5)
  {
    sub_24B4AA55C((uint64_t)v5);
    *uint64_t v6 = &unk_26FE86070;
  }
  sub_24B4A8A08(a1, (uint64_t)v6);
  uint64_t v4 = *(void *)(a1 + 432);
  if (v4)
  {
LABEL_5:
    sub_24B4AA6E4(v4, 7, a1);
    unsigned int v7 = *(void **)(a1 + 432);
    if (!a2)
    {
      *(unsigned char *)(v7[5] + 456) = 18;
      *(_DWORD *)(v7[5] + 4) = 1;
      sub_24B3E39F4(__p, 0xBB8uLL);
      v11[0] = __p;
      v11[1] = 0;
      char v12 = 0;
      sub_24B48BBCC((uint64_t)v7);
      (*(void (**)(void *, void *))(*v7 + 32))(v7, v11);
      if (__p[0])
      {
        __p[1] = __p[0];
        operator delete(__p[0]);
      }
    }
    sub_24B48B960((uint64_t)v7);
  }
  else
  {
    uint64_t v8 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      __p[0] = (void *)0x60104000100;
      _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)__p, 8u);
    }
    unsigned int v9 = (void *)sub_24B4A113C();
    sub_24B480554((uint64_t)off_2697C5530, *(_DWORD *)(a1 + 376));
    sub_24B4A1BBC(v9);
    uint64_t v10 = sub_24B4A4C30();
    sub_24B4A5E5C(v10, *(_DWORD *)(a1 + 376));
  }
}

void sub_24B4A8D44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  MEMORY[0x24C5D26F0](v14, MEMORY[0x263F8C180]);
  _Unwind_Resume(a1);
}

uint64_t sub_24B4A8D80(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24B47DAA4(a1, 0, 1, *a2 - 1);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
LABEL_3:
    sub_24B47D810(v4, v6, v7, "asn1PE_IPAddress");
    return v5;
  }
  int v9 = *a2;
  if (v9 == 2)
  {
    uint64_t v5 = sub_24B47E324(a1, 0, 0, 16, (void *)a2 + 4, 1, 0);
    if (!v5) {
      return v5;
    }
    char v15 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      int v18 = 67109120;
      int v19 = v5;
      _os_log_debug_impl(&dword_24B3DE000, v15, OS_LOG_TYPE_DEBUG, "#gpsd,#supl asn1PE_IPAddress_ipv6Address, encoding error %d", (uint8_t *)&v18, 8u);
    }
    int v11 = *(_DWORD *)(a1 + 8);
    int v12 = *(_DWORD *)(a1 + 12);
    char v13 = "asn1PE_IPAddress_ipv6Address";
    unsigned int v14 = v5;
LABEL_15:
    sub_24B47D810(v14, v11, v12, v13);
    uint64_t v16 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v18 = 67109120;
      int v19 = v5;
      _os_log_error_impl(&dword_24B3DE000, v16, OS_LOG_TYPE_ERROR, "#gpsd,#supl asn1PE_IPAddress, encoding error %d", (uint8_t *)&v18, 8u);
    }
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v4) = v5;
    goto LABEL_3;
  }
  if (v9 == 1)
  {
    uint64_t v5 = sub_24B47E324(a1, 0, 0, 4, (void *)a2 + 1, 1, 0);
    if (!v5) {
      return v5;
    }
    uint64_t v10 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v18 = 67109120;
      int v19 = v5;
      _os_log_error_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_ERROR, "#gpsd,#supl asn1PE_IPAddress_ipv4Address, encoding error %d", (uint8_t *)&v18, 8u);
    }
    int v11 = *(_DWORD *)(a1 + 8);
    int v12 = *(_DWORD *)(a1 + 12);
    char v13 = "asn1PE_IPAddress_ipv4Address";
    unsigned int v14 = v5;
    goto LABEL_15;
  }
  uint64_t v17 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    LOWORD(v18) = 0;
    _os_log_error_impl(&dword_24B3DE000, v17, OS_LOG_TYPE_ERROR, "#gpsd,#supl asn1PE_IPAddress, invalid IP addr type", (uint8_t *)&v18, 2u);
  }
  sub_24B47D810(0, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_IPAddress");
  return 0;
}

uint64_t sub_24B4A9014(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  unsigned __int8 v19 = 0;
  uint64_t v4 = sub_24B47DB4C(a1, 0, 1u, &v19);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 67109120;
      int v21 = v5;
      _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "#gpsd,#supl asn1PD_IPAddress, encoding error %d", buf, 8u);
    }
    int v7 = *(_DWORD *)(a1 + 8);
    int v8 = *(_DWORD *)(a1 + 12);
    unsigned int v9 = v5;
    goto LABEL_5;
  }
  int v11 = v19;
  *(unsigned char *)a2 = v19 + 1;
  if (v11 == 1)
  {
    sub_24B47E048(a1, 0x80u, (unint64_t *)(a2 + 32), 0);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (!*(unsigned char *)(a1 + 16)) {
      return v5;
    }
    uint64_t v17 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 67109120;
      int v21 = v5;
      _os_log_debug_impl(&dword_24B3DE000, v17, OS_LOG_TYPE_DEBUG, "#gpsd,#supl asn1PD_IPAddress_ipv6Address, decoing error %d", buf, 8u);
    }
    int v13 = *(_DWORD *)(a1 + 8);
    int v14 = *(_DWORD *)(a1 + 12);
    char v15 = "asn1PD_IPAddress_ipv6Address";
    unsigned int v16 = v5;
LABEL_17:
    sub_24B47D810(v16, v13, v14, v15);
    int v18 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 67109120;
      int v21 = v5;
      _os_log_error_impl(&dword_24B3DE000, v18, OS_LOG_TYPE_ERROR, "#gpsd,#supl asn1PD_IPAddress, encoding error %d", buf, 8u);
    }
    int v7 = *(_DWORD *)(a1 + 8);
    int v8 = *(_DWORD *)(a1 + 12);
    unsigned int v9 = v5;
    goto LABEL_5;
  }
  if (!v11)
  {
    sub_24B47E048(a1, 0x20u, (unint64_t *)(a2 + 8), 0);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
    if (!*(unsigned char *)(a1 + 16)) {
      return v5;
    }
    int v12 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 67109120;
      int v21 = v5;
      _os_log_error_impl(&dword_24B3DE000, v12, OS_LOG_TYPE_ERROR, "#gpsd,#supl asn1PD_IPAddress_ipv4Address, decoding error %d", buf, 8u);
    }
    int v13 = *(_DWORD *)(a1 + 8);
    int v14 = *(_DWORD *)(a1 + 12);
    char v15 = "asn1PD_IPAddress_ipv4Address";
    unsigned int v16 = v5;
    goto LABEL_17;
  }
  int v7 = *(_DWORD *)(a1 + 8);
  int v8 = *(_DWORD *)(a1 + 12);
  uint64_t v5 = 4;
  unsigned int v9 = 4;
LABEL_5:
  sub_24B47D810(v9, v7, v8, "asn1PD_IPAddress");
  return v5;
}

uint64_t sub_24B4A92A0(uint64_t a1, unint64_t *a2)
{
  int v6 = 0;
  uint64_t v3 = sub_24B47E6C4(a1, 1, 0xFFu, &v6, a2, 0x40u, (uint64_t)"-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", 0);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_FQDN");
  }
  return v4;
}

uint64_t sub_24B4A9314(uint64_t a1, unsigned __int8 *a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
  }
  else
  {
    uint64_t v7 = sub_24B47DAA4(a1, 0, 1, *a2 - 1);
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      int v9 = *a2;
      switch(v9)
      {
        case 1:
          uint64_t v4 = sub_24B4A8D80(a1, a2 + 8);
          if (!v4) {
            return v4;
          }
          break;
        case 255:
          int v5 = *(_DWORD *)(a1 + 8);
          int v6 = *(_DWORD *)(a1 + 12);
          uint64_t v4 = 1;
          LODWORD(v7) = 1;
          goto LABEL_5;
        case 2:
          uint64_t v10 = sub_24B47E3B0(a1, 1, 0xFFu, *((_DWORD *)a2 + 18) - *((_DWORD *)a2 + 16), (void *)a2 + 8, 64, (uint64_t)"-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", 0);
          uint64_t v4 = v10;
          if (!v10) {
            return v4;
          }
          sub_24B47D810(v10, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_FQDN");
          break;
        default:
          int v5 = *(_DWORD *)(a1 + 8);
          int v6 = *(_DWORD *)(a1 + 12);
          uint64_t v4 = 4;
          LODWORD(v7) = 4;
          goto LABEL_5;
      }
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      LODWORD(v7) = v4;
    }
  }
LABEL_5:
  sub_24B47D810(v7, v5, v6, "asn1PE_SLPAddress");
  return v4;
}

uint64_t sub_24B4A9474(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
  }
  else if (v4)
  {
    sub_24B47EDE0(a1);
    uint64_t v5 = v8;
    if (!v8) {
      return v5;
    }
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
  }
  else
  {
    unsigned __int8 v11 = 0;
    uint64_t v8 = sub_24B47DB4C(a1, 0, 1u, &v11);
    if (v8)
    {
      uint64_t v5 = v8;
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
    }
    else
    {
      int v10 = v11;
      *(unsigned char *)a2 = v11 + 1;
      if (v10 != 254)
      {
        if (v10 == 1)
        {
          uint64_t v8 = sub_24B4A92A0(a1, (unint64_t *)(a2 + 64));
        }
        else
        {
          if (v10)
          {
            int v6 = *(_DWORD *)(a1 + 8);
            int v7 = *(_DWORD *)(a1 + 12);
            uint64_t v5 = 4;
            LODWORD(v8) = 4;
            goto LABEL_3;
          }
          uint64_t v8 = sub_24B4A9014(a1, a2 + 8);
        }
        uint64_t v5 = v8;
        if (!v8) {
          return v5;
        }
        int v6 = *(_DWORD *)(a1 + 8);
        int v7 = *(_DWORD *)(a1 + 12);
        goto LABEL_3;
      }
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      uint64_t v5 = 1;
      LODWORD(v8) = 1;
    }
  }
LABEL_3:
  sub_24B47D810(v8, v6, v7, "asn1PD_SLPAddress");
  return v5;
}

uint64_t sub_24B4A95C4(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_24B47E324(a1, 0, 0, 8, a2, 1, 1);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_SETId_msisdn");
  }
  return v4;
}

uint64_t sub_24B4A9624(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 0x40u, a2, 1);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SETId_msisdn");
  }
  return v3;
}

uint64_t sub_24B4A9678(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_24B47E324(a1, 0, 0, 8, a2, 1, 0);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_SETId_mdn");
  }
  return v4;
}

uint64_t sub_24B4A96D8(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 0x40u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SETId_mdn");
  }
  return v3;
}

uint64_t sub_24B4A972C(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_24B47DEA0(a1, 0, 0, 0x22u, a2, 1);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_SETId_min");
  }
  return v4;
}

uint64_t sub_24B4A9788(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 0x22u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SETId_min");
  }
  return v3;
}

uint64_t sub_24B4A97DC(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_24B47E324(a1, 0, 0, 8, a2, 1, 1);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_SETId_imsi");
  }
  return v4;
}

uint64_t sub_24B4A983C(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 0x40u, a2, 1);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SETId_imsi");
  }
  return v3;
}

uint64_t sub_24B4A9890(uint64_t a1, unsigned __int8 *a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_17:
    sub_24B47D810(v7, v5, v6, "asn1PE_SETId");
    return v4;
  }
  uint64_t v7 = sub_24B47DAA4(a1, 0, 5, *a2 - 1);
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_17;
  }
  switch(*a2)
  {
    case 1u:
      uint64_t v7 = sub_24B4A95C4(a1, (void *)a2 + 1);
      break;
    case 2u:
      uint64_t v7 = sub_24B4A9678(a1, (void *)a2 + 4);
      break;
    case 3u:
      uint64_t v7 = sub_24B4A972C(a1, (void *)a2 + 7);
      break;
    case 4u:
      uint64_t v7 = sub_24B4A97DC(a1, (void *)a2 + 10);
      break;
    case 5u:
      uint64_t v7 = sub_24B47EA88(a1, 1, 1000, *((_DWORD *)a2 + 28) - *((_DWORD *)a2 + 26), (void *)a2 + 13, 0);
      break;
    case 6u:
      uint64_t v7 = sub_24B4A8D80(a1, a2 + 128);
      break;
    default:
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      if (*a2 == 255)
      {
        uint64_t v4 = 1;
        LODWORD(v7) = 1;
      }
      else
      {
        uint64_t v4 = 4;
        LODWORD(v7) = 4;
      }
      goto LABEL_17;
  }
  uint64_t v4 = v7;
  if (v7)
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_17;
  }
  return v4;
}

uint64_t sub_24B4A9A38(uint64_t a1, uint64_t a2)
{
  int v4 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    LODWORD(v8) = *(unsigned __int8 *)(a1 + 16);
LABEL_3:
    sub_24B47D810(v8, v6, v7, "asn1PD_SETId");
    return v5;
  }
  if (v4)
  {
    sub_24B47EDE0(a1);
    uint64_t v5 = v8;
    if (!v8) {
      return v5;
    }
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_3;
  }
  __int16 v12 = 0;
  uint64_t v8 = sub_24B47DC20(a1, 0, 5u, &v12);
  if (v8)
  {
    uint64_t v5 = v8;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_3;
  }
  int v10 = v12;
  *(unsigned char *)a2 = v12 + 1;
  switch(v10)
  {
    case 0:
      uint64_t v8 = sub_24B4A9624(a1, (unint64_t *)(a2 + 8));
      break;
    case 1:
      uint64_t v8 = sub_24B4A96D8(a1, (unint64_t *)(a2 + 32));
      break;
    case 2:
      uint64_t v8 = sub_24B4A9788(a1, (unint64_t *)(a2 + 56));
      break;
    case 3:
      uint64_t v8 = sub_24B4A983C(a1, (unint64_t *)(a2 + 80));
      break;
    case 4:
      int v11 = 0;
      uint64_t v8 = sub_24B47EB14(a1, 1, 0x3E8u, &v11, (unint64_t *)(a2 + 104), 0);
      break;
    case 5:
      uint64_t v8 = sub_24B4A9014(a1, a2 + 128);
      break;
    default:
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a1 + 12);
      if (v10 == 254)
      {
        uint64_t v5 = 1;
        LODWORD(v8) = 1;
      }
      else
      {
        uint64_t v5 = 4;
        LODWORD(v8) = 4;
      }
      goto LABEL_3;
  }
  uint64_t v5 = v8;
  if (v8)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_3;
  }
  return v5;
}

uint64_t sub_24B4A9C10(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_24B47E324(a1, 0, 0, 4, a2, 1, 0);
  uint64_t v4 = v3;
  if (v3) {
    sub_24B47D810(v3, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_SlpSessionID_sessionID");
  }
  return v4;
}

uint64_t sub_24B4A9C70(uint64_t a1, unint64_t *a2)
{
  sub_24B47E048(a1, 0x20u, a2, 0);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16)) {
    sub_24B47D810(*(unsigned __int8 *)(a1 + 16), *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PD_SlpSessionID_sessionID");
  }
  return v3;
}

uint64_t sub_24B4A9CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24B4A9C10(a1, (void *)a2);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
LABEL_5:
    sub_24B47D810(v4, v6, v7, "asn1PE_SlpSessionID");
    return v5;
  }
  uint64_t v4 = sub_24B4A9314(a1, (unsigned __int8 *)(a2 + 24));
  uint64_t v5 = v4;
  if (v4)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_5;
  }
  return v5;
}

uint64_t sub_24B4A9D40(uint64_t a1, unint64_t *a2)
{
  uint64_t v4 = sub_24B4A9C70(a1, a2);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
LABEL_5:
    sub_24B47D810(v4, v6, v7, "asn1PD_SlpSessionID");
    return v5;
  }
  uint64_t v4 = sub_24B4A9474(a1, (uint64_t)(a2 + 3));
  uint64_t v5 = v4;
  if (v4)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_5;
  }
  return v5;
}

uint64_t sub_24B4A9DBC(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_24B47DAA4(a1, 0, 0xFFFF, *(unsigned __int16 *)a2);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
LABEL_5:
    sub_24B47D810(v4, v6, v7, "asn1PE_SetSessionID");
    return v5;
  }
  uint64_t v4 = sub_24B4A9890(a1, a2 + 8);
  uint64_t v5 = v4;
  if (v4)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_5;
  }
  return v5;
}

uint64_t sub_24B4A9E44(uint64_t a1, _WORD *a2)
{
  uint64_t v4 = sub_24B47DC20(a1, 0, 0xFFFFu, a2);
  if (v4)
  {
    uint64_t v5 = v4;
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
LABEL_5:
    sub_24B47D810(v4, v6, v7, "asn1PD_SetSessionID");
    return v5;
  }
  uint64_t v4 = sub_24B4A9A38(a1, (uint64_t)(a2 + 4));
  uint64_t v5 = v4;
  if (v4)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v7 = *(_DWORD *)(a1 + 12);
    goto LABEL_5;
  }
  return v5;
}

uint64_t sub_24B4A9ECC(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(unsigned char *)(a1 + 16) = -1;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(_WORD *)(a1 + 8) = 0;
  sub_24B3E39F4((void *)(a1 + 200), 4uLL);
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(unsigned char *)(a1 + 224) = -1;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(void *)(a1 + 304) = 0;
  *(void *)a1 = 0;
  return a1;
}

void sub_24B4A9F6C(_Unwind_Exception *a1)
{
  sub_24B4989A8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_24B4A9F80(uint64_t a1, uint64_t a2)
{
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)a2);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_5:
    sub_24B47D810(v7, v5, v6, "asn1PE_SessionID");
    return v4;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 4));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_5;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v7 = sub_24B4A9DBC(a1, (unsigned __int8 *)(a2 + 8));
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_5;
    }
  }
  if (!*(_DWORD *)(a2 + 4)) {
    return 0;
  }
  return sub_24B4A9CC4(a1, a2 + 200);
}

uint64_t sub_24B4AA06C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a2 = sub_24B47DA28((uint64_t **)a1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_5:
    sub_24B47D810(v7, v5, v6, "asn1PD_SessionID");
    return v4;
  }
  int v8 = sub_24B47DA28((uint64_t **)a1);
  *(_DWORD *)(a2 + 4) = v8;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_5;
  }
  if (*(_DWORD *)a2)
  {
    uint64_t v7 = sub_24B4A9E44(a1, (_WORD *)(a2 + 8));
    if (v7)
    {
      uint64_t v4 = v7;
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      goto LABEL_5;
    }
    int v8 = *(_DWORD *)(a2 + 4);
  }
  if (!v8) {
    return 0;
  }
  return sub_24B4A9D40(a1, (unint64_t *)(a2 + 200));
}

uint64_t sub_24B4AA158(uint64_t a1, int *a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
  }
  else
  {
    sub_24B47D9A0((uint64_t **)a1, *a2);
    uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
    if (*(unsigned char *)(a1 + 16))
    {
      int v5 = *(_DWORD *)(a1 + 8);
      int v6 = *(_DWORD *)(a1 + 12);
      unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
    }
    else
    {
      sub_24B47D9A0((uint64_t **)a1, a2[1]);
      uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
      if (*(unsigned char *)(a1 + 16))
      {
        int v5 = *(_DWORD *)(a1 + 8);
        int v6 = *(_DWORD *)(a1 + 12);
        unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
      }
      else
      {
        sub_24B47D9A0((uint64_t **)a1, a2[2]);
        uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
        if (*(unsigned char *)(a1 + 16))
        {
          int v5 = *(_DWORD *)(a1 + 8);
          int v6 = *(_DWORD *)(a1 + 12);
          unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
        }
        else
        {
          sub_24B47D9A0((uint64_t **)a1, a2[3]);
          uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
          if (*(unsigned char *)(a1 + 16))
          {
            int v5 = *(_DWORD *)(a1 + 8);
            int v6 = *(_DWORD *)(a1 + 12);
            unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
          }
          else
          {
            sub_24B47D9A0((uint64_t **)a1, a2[4]);
            uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
            if (*(unsigned char *)(a1 + 16))
            {
              int v5 = *(_DWORD *)(a1 + 8);
              int v6 = *(_DWORD *)(a1 + 12);
              unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
            }
            else
            {
              sub_24B47D9A0((uint64_t **)a1, a2[5]);
              uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
              if (!*(unsigned char *)(a1 + 16))
              {
                sub_24B47D9A0((uint64_t **)a1, a2[6]);
                return *(unsigned __int8 *)(a1 + 16);
              }
              int v5 = *(_DWORD *)(a1 + 8);
              int v6 = *(_DWORD *)(a1 + 12);
              unsigned int v7 = *(unsigned __int8 *)(a1 + 16);
            }
          }
        }
      }
    }
  }
  sub_24B47D810(v7, v5, v6, "asn1PE_PosTechnology");
  return v4;
}

uint64_t sub_24B4AA2CC(uint64_t a1, unsigned __int8 *a2)
{
  unsigned int v3 = *a2;
  if (v3 >= 3)
  {
    uint64_t v4 = 4;
    *(unsigned char *)(a1 + 16) = 4;
    sub_24B47D810(4u, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PrefMethod");
  }
  else
  {
    uint64_t v4 = sub_24B47DAA4(a1, 0, 2, v3);
    if (!v4) {
      return v4;
    }
  }
  sub_24B47D810(v4, *(_DWORD *)(a1 + 8), *(_DWORD *)(a1 + 12), "asn1PE_PrefMethod");
  return v4;
}

uint64_t sub_24B4AA350(uint64_t a1, uint64_t a2)
{
  sub_24B47D9A0((uint64_t **)a1, vmaxv_u16((uint16x4_t)vmovn_s32(vtstq_s32(*(int32x4_t *)(a2 + 12), *(int32x4_t *)(a2 + 12)))) & 1);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_9:
    sub_24B47D810(v7, v5, v6, "asn1PE_PosProtocol");
    return v4;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)a2);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 4));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  sub_24B47D9A0((uint64_t **)a1, *(_DWORD *)(a2 + 8));
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
    goto LABEL_9;
  }
  if ((vmaxv_u16((uint16x4_t)vmovn_s32(vtstq_s32(*(int32x4_t *)(a2 + 12), *(int32x4_t *)(a2 + 12)))) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = sub_24B47B858(a1, a2);
  uint64_t v4 = v7;
  if (v7)
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_9;
  }
  return v4;
}

uint64_t sub_24B4AA48C(uint64_t a1, uint64_t a2)
{
  sub_24B47D9A0((uint64_t **)a1, 0);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    LODWORD(v7) = *(unsigned __int8 *)(a1 + 16);
LABEL_7:
    sub_24B47D810(v7, v5, v6, "asn1PE_SETCapabilities");
    return v4;
  }
  uint64_t v7 = sub_24B4AA158(a1, (int *)a2);
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  uint64_t v7 = sub_24B4AA2CC(a1, (unsigned __int8 *)(a2 + 28));
  if (v7)
  {
    uint64_t v4 = v7;
    int v5 = *(_DWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 12);
    goto LABEL_7;
  }
  return sub_24B4AA350(a1, a2 + 32);
}

uint64_t sub_24B4AA55C(uint64_t a1)
{
  *(void *)a1 = &unk_26FE862C8;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = -1;
  *(_OWORD *)(a1 + 36) = 0u;
  *(_OWORD *)(a1 + 52) = 0u;
  *(_OWORD *)(a1 + 68) = 0u;
  *(_OWORD *)(a1 + 84) = 0u;
  *(_OWORD *)(a1 + 100) = 0u;
  *(_OWORD *)(a1 + 116) = 0u;
  *(_OWORD *)(a1 + 132) = 0u;
  *(_OWORD *)(a1 + 148) = 0u;
  *(_OWORD *)(a1 + 164) = 0u;
  *(_OWORD *)(a1 + 180) = 0u;
  *(_OWORD *)(a1 + 196) = 0u;
  *(_OWORD *)(a1 + 212) = 0u;
  *(_OWORD *)(a1 + 228) = 0u;
  *(_OWORD *)(a1 + 244) = 0u;
  *(_DWORD *)(a1 + 356) = 0;
  *(_OWORD *)(a1 + 20) = 0u;
  *(_OWORD *)(a1 + 260) = 0u;
  *(_OWORD *)(a1 + 276) = 0u;
  *(_OWORD *)(a1 + 292) = 0u;
  *(_OWORD *)(a1 + 308) = 0u;
  *(_OWORD *)(a1 + 324) = 0u;
  *(_OWORD *)(a1 + 340) = 0u;
  uint64_t v2 = sub_24B47D534();
  int v3 = atomic_load((unsigned __int8 *)(v2 + 1));
  BOOL v4 = v3 == 255;
  uint64_t v5 = 1;
  if (v4) {
    uint64_t v5 = 2;
  }
  unsigned __int8 v6 = atomic_load((unsigned __int8 *)(v2 + v5));
  *(_WORD *)(a1 + 32) = -1;
  *(unsigned char *)(a1 + 26) = v6;
  *(_WORD *)(a1 + 27) = 0;
  *(void *)(a1 + 40) = 0;
  sub_24B4A9ECC(a1 + 48);
  return a1;
}

void sub_24B4AA638(_Unwind_Exception *a1)
{
  sub_24B49CA78(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_24B4AA64C(uint64_t a1)
{
  *(void *)a1 = &unk_26FE862C8;
  *(void *)(a1 + 8) = 0;
  uint64_t v2 = *(void **)(a1 + 336);
  if (v2)
  {
    *(void *)(a1 + 344) = v2;
    operator delete(v2);
  }
  int v3 = *(void **)(a1 + 312);
  if (v3)
  {
    *(void *)(a1 + 320) = v3;
    operator delete(v3);
  }
  BOOL v4 = *(void **)(a1 + 288);
  if (v4)
  {
    *(void *)(a1 + 296) = v4;
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(a1 + 248);
  if (v5)
  {
    *(void *)(a1 + 256) = v5;
    operator delete(v5);
  }
  sub_24B4989A8(a1 + 72);
  sub_24B49CA78((unsigned __int16 *)(a1 + 32));
  return a1;
}

void sub_24B4AA6E4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  int v3 = qword_26B17C488;
  if (a3)
  {
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = *(unsigned __int8 *)(a1 + 16);
      int v24 = 67109376;
      int v25 = v7;
      __int16 v26 = 1024;
      int v27 = a2;
      _os_log_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl Current State,%u -> New State,%u", (uint8_t *)&v24, 0xEu);
    }
    if (*(unsigned __int8 *)(a1 + 16) == a2)
    {
      int v8 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        LOWORD(v24) = 0;
        int v9 = "#gpsd,#supl Leaving SuplState::UpdateState, current state and new state same";
LABEL_7:
        _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, v9, (uint8_t *)&v24, 2u);
      }
    }
    else
    {
      switch(a2)
      {
        case 0:
          int v10 = operator new(0x168uLL, MEMORY[0x263F8C180]);
          if (v10)
          {
            int v11 = v10;
            sub_24B4AA55C((uint64_t)v10);
            *int v11 = &unk_26FE86070;
            sub_24B4A8A08(a3, (uint64_t)v11);
            v11[1] = a3;
            (*(void (**)(void *))(*v11 + 24))(v11);
          }
          else
          {
            int v8 = qword_26B17C488;
            if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
            {
              int v24 = 67109120;
              int v25 = 1537;
              _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v24, 8u);
              int v8 = qword_26B17C488;
            }
            if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
            {
              LOWORD(v24) = 0;
              int v9 = "#gpsd,#supl Leaving SuplState::UpdateState, mem alloc failure";
              goto LABEL_7;
            }
          }
          break;
        case 2:
          int v14 = operator new(0x178uLL, MEMORY[0x263F8C180]);
          if (v14)
          {
            char v15 = v14;
            sub_24B4A6F00((uint64_t)v14);
            sub_24B4A6BEC(a3 + 392);
            sub_24B4A8A08(a3, (uint64_t)v15);
            v15[1] = a3;
            (*(void (**)(void *))(*v15 + 24))(v15);
          }
          else
          {
            int v8 = qword_26B17C488;
            if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
            {
              int v24 = 67109120;
              int v25 = 1537;
              _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v24, 8u);
              int v8 = qword_26B17C488;
            }
            if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
            {
              LOWORD(v24) = 0;
              int v9 = "#gpsd,#supl Leaving SuplState::UpdateState, mem alloc failure";
              goto LABEL_7;
            }
          }
          break;
        case 4:
          unsigned int v16 = operator new(0x170uLL, MEMORY[0x263F8C180]);
          if (v16)
          {
            uint64_t v17 = (uint64_t)v16;
            sub_24B4AA55C((uint64_t)v16);
            *(void *)uint64_t v17 = &unk_26FE860B0;
            *(unsigned char *)(v17 + 16) = 4;
            *(_DWORD *)(v17 + 360) = 0;
            sub_24B4A8378(a3, 4);
            sub_24B4A8A08(a3, v17);
            *(void *)(v17 + 8) = a3;
            (*(void (**)(uint64_t))(*(void *)v17 + 24))(v17);
          }
          else
          {
            int v8 = qword_26B17C488;
            if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
            {
              int v24 = 67109120;
              int v25 = 1537;
              _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v24, 8u);
              int v8 = qword_26B17C488;
            }
            if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
            {
              LOWORD(v24) = 0;
              int v9 = "#gpsd,#supl Leaving SuplState::UpdateState, mem alloc failure";
              goto LABEL_7;
            }
          }
          break;
        case 5:
          int v18 = operator new(0x170uLL, MEMORY[0x263F8C180]);
          if (v18)
          {
            unsigned __int8 v19 = v18;
            sub_24B4A3EE4((uint64_t)v18);
            sub_24B4A6BEC(a3 + 392);
            sub_24B4A8A08(a3, (uint64_t)v19);
            v19[1] = a3;
            (*(void (**)(void *))(*v19 + 24))(v19);
          }
          else
          {
            int v8 = qword_26B17C488;
            if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
            {
              int v24 = 67109120;
              int v25 = 1537;
              _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v24, 8u);
              int v8 = qword_26B17C488;
            }
            if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
            {
              LOWORD(v24) = 0;
              int v9 = "#gpsd,#supl Leaving SuplState::UpdateState, memalloc failure";
              goto LABEL_7;
            }
          }
          break;
        case 6:
          uint64_t v20 = operator new(0x170uLL, MEMORY[0x263F8C180]);
          if (v20)
          {
            uint64_t v21 = (uint64_t)v20;
            sub_24B4AA55C((uint64_t)v20);
            *(void *)uint64_t v21 = &unk_26FE860B0;
            *(unsigned char *)(v21 + 16) = 4;
            *(_DWORD *)(v21 + 360) = 0;
            sub_24B4A8378(a3, 6);
            sub_24B4A8A08(a3, v21);
            *(void *)(v21 + 8) = a3;
            (*(void (**)(uint64_t))(*(void *)v21 + 24))(v21);
          }
          else
          {
            int v8 = qword_26B17C488;
            if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
            {
              int v24 = 67109120;
              int v25 = 1537;
              _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v24, 8u);
              int v8 = qword_26B17C488;
            }
            if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
            {
              LOWORD(v24) = 0;
              int v9 = "#gpsd,#supl Leaving SuplState::UpdateState, memalloc failure";
              goto LABEL_7;
            }
          }
          break;
        case 7:
          uint64_t v22 = operator new(0x190uLL, MEMORY[0x263F8C180]);
          if (v22)
          {
            uint64_t v23 = v22;
            sub_24B48B2B0((uint64_t)v22);
            sub_24B4A6BEC(a3 + 392);
            sub_24B4A8A08(a3, (uint64_t)v23);
            v23[1] = a3;
            (*(void (**)(void *))(*v23 + 24))(v23);
          }
          else
          {
            int v8 = qword_26B17C488;
            if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
            {
              int v24 = 67109120;
              int v25 = 1537;
              _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v24, 8u);
              int v8 = qword_26B17C488;
            }
            if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
            {
              LOWORD(v24) = 0;
              int v9 = "#gpsd,#supl Leaving SuplState::UpdateState, mem alloc failure";
              goto LABEL_7;
            }
          }
          break;
        default:
          uint64_t v12 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
          {
            int v24 = 67109120;
            int v25 = 515;
            int v13 = v12;
            goto LABEL_26;
          }
          break;
      }
    }
  }
  else if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    int v24 = 67109120;
    int v25 = 515;
    int v13 = v3;
LABEL_26:
    _os_log_error_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v24, 8u);
  }
}

void sub_24B4AAE4C(_Unwind_Exception *a1)
{
  MEMORY[0x24C5D26F0](v1, MEMORY[0x263F8C180]);
  _Unwind_Resume(a1);
}

uint64_t sub_24B4AAEA4(uint64_t a1, uint64_t a2)
{
  std::string __p = 0;
  int v9 = 0;
  uint64_t v10 = 0;
  sub_24B47A720(&__p, *(const void **)a2, *(void *)(a2 + 8), *(void *)(a2 + 8) - *(void *)a2);
  v6[0] = &__p;
  v6[1] = 0;
  char v7 = 0;
  v5[0] = v6;
  v5[1] = a1 + 24;
  int v3 = sub_24B49D0F0((uint64_t)v5);
  if (__p)
  {
    int v9 = __p;
    operator delete(__p);
  }
  if (v3) {
    return 0xFFFFFFFFLL;
  }
  else {
    return 0;
  }
}

void sub_24B4AAF24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_24B4AAF40(uint64_t a1, uint64_t *a2)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  if (*(void *)(a1 + 8))
  {
    uint64_t v4 = sub_24B4A4C30();
    uint64_t v5 = *(unsigned int *)(*(void *)(a1 + 8) + 376);
    uint64_t v6 = *a2;
    return sub_24B4A5F88(v4, v5, v6);
  }
  else
  {
    int v8 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v9[0] = 67109120;
      v9[1] = 513;
      _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v9, 8u);
    }
    return 0;
  }
}

uint64_t sub_24B4AB040()
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  if (qword_26B17C418 != -1) {
    dispatch_once(&qword_26B17C418, &unk_26FE86308);
  }
  uint64_t result = qword_26B17C410;
  if (!qword_26B17C410)
  {
    uint64_t v1 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v2 = 136315138;
      int v3 = "GetInstance";
      _os_log_error_impl(&dword_24B3DE000, v1, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v2, 0xCu);
    }
    __assert_rtn("GetInstance", "SuplUtils.cpp", 66, "false && \"Memory allocation failure\"");
  }
  return result;
}

void sub_24B4AB138()
{
  uint64_t v0 = (char *)operator new(0x130uLL, MEMORY[0x263F8C180]);
  if (v0)
  {
    *((_OWORD *)v0 + 17) = 0u;
    *((_OWORD *)v0 + 18) = 0u;
    *((_OWORD *)v0 + 15) = 0u;
    *((_OWORD *)v0 + 16) = 0u;
    *((_OWORD *)v0 + 13) = 0u;
    *((_OWORD *)v0 + 14) = 0u;
    *((_OWORD *)v0 + 11) = 0u;
    *((_OWORD *)v0 + 12) = 0u;
    *((_OWORD *)v0 + 9) = 0u;
    *((_OWORD *)v0 + 10) = 0u;
    *((_OWORD *)v0 + 7) = 0u;
    *((_OWORD *)v0 + 8) = 0u;
    *((_OWORD *)v0 + 5) = 0u;
    *((_OWORD *)v0 + 6) = 0u;
    *((_OWORD *)v0 + 4) = 0u;
    *((_OWORD *)v0 + 1) = 0u;
    *((_OWORD *)v0 + 2) = 0u;
    *(_OWORD *)uint64_t v0 = 0u;
    *((_OWORD *)v0 + 3) = 0u;
    *((_DWORD *)v0 + 9) = 1;
    *((_WORD *)v0 + 24) = -254;
    *((_WORD *)v0 + 34) = 0;
    *((_WORD *)v0 + 42) = 0;
    *((_WORD *)v0 + 50) = 0;
    v0[113] = 0;
    *((_WORD *)v0 + 64) = 0;
    *((_WORD *)v0 + 72) = 0;
    *((_WORD *)v0 + 80) = 0;
    *((_WORD *)v0 + 86) = 0;
    *((_WORD *)v0 + 94) = 0;
    *((_DWORD *)v0 + 48) = 0;
    *(_DWORD *)(v0 + 195) = 0;
    *((_WORD *)v0 + 106) = 0;
    *((_WORD *)v0 + 114) = 0;
    *((_DWORD *)v0 + 69) = 0;
    *((void *)v0 + 31) = 0;
    *((void *)v0 + 32) = 0;
    *((void *)v0 + 30) = 0;
    *(void *)(v0 + 263) = 0;
    *((void *)v0 + 36) = 0x100000001;
    *((_DWORD *)v0 + 74) = 1;
  }
  qword_26B17C410 = (uint64_t)v0;
  sub_24B4B0C90();
}

uint64_t sub_24B4AB20C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  __int16 v15 = -1;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  std::string __p = 0;
  if (*(_WORD *)a3 != 1)
  {
    char v7 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplUtils::SetSETInfo, invalid SET ID type", buf, 2u);
      char v7 = qword_26B17C488;
    }
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      return -4;
    }
    *(_DWORD *)long long buf = 67109120;
    int v20 = 514;
    goto LABEL_27;
  }
  uint64_t v5 = *(char **)(a3 + 16);
  uint64_t v6 = *(char **)(a3 + 8);
  if ((unint64_t)(v5 - v6) >= 9)
  {
    char v7 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "#gpsd,#supl SuplUtils::SetSETInfo, SET ID IMSI length > max limit", buf, 2u);
      char v7 = qword_26B17C488;
    }
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      return -4;
    }
    *(_DWORD *)long long buf = 67109120;
    int v20 = 514;
LABEL_27:
    _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    return -4;
  }
  if (&v15 == (__int16 *)a3)
  {
    int v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_24B3EAC0C(&__p, v6, v5, v5 - v6);
    int v9 = (char *)__p;
    uint64_t v10 = v17;
  }
  buf[0] = -1;
  uint64_t v11 = v10 - v9;
  if ((unint64_t)(v10 - v9) > 7)
  {
    if (v11 != 8)
    {
      uint64_t v17 = v9 + 8;
LABEL_20:
      unint64_t v12 = 0;
      do
      {
        v9[v12] = (v9[v12] >> 4) | (16 * v9[v12]);
        ++v12;
        int v9 = (char *)__p;
      }
      while (v12 < v17 - (unsigned char *)__p);
      goto LABEL_22;
    }
  }
  else
  {
    sub_24B4ADA18(&__p, 8 - v11, buf);
    int v9 = (char *)__p;
    uint64_t v10 = v17;
  }
  if (v10 != v9) {
    goto LABEL_20;
  }
LABEL_22:
  __int16 v15 = *(_WORD *)a3;
  int v13 = (char *)sub_24B4AF924();
  sub_24B4AFFC0(v13, a2, (uint64_t)&v15);
  if (__p)
  {
    uint64_t v17 = __p;
    operator delete(__p);
  }
  return 0;
}

void sub_24B4AB488(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4AB4A8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  __int16 v9 = -1;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  std::string __p = 0;
  uint64_t v5 = (void *)sub_24B4AF924();
  sub_24B4B005C(v5, a3, (uint64_t)&v9);
  if (v9 == 1)
  {
    *(unsigned char *)a2 = 4;
    if ((void **)(a2 + 80) != &__p) {
      sub_24B3EAC0C((void *)(a2 + 80), (char *)__p, v11, v11 - (unsigned char *)__p);
    }
    buf[0] = -1;
    uint64_t v6 = *(void *)(a2 + 80);
    unint64_t v7 = *(void *)(a2 + 88) - v6;
    if (v7 > 7)
    {
      if (v7 != 8) {
        *(void *)(a2 + 88) = v6 + 8;
      }
    }
    else
    {
      sub_24B4ADA18((void *)(a2 + 80), 8 - v7, buf);
    }
  }
  else
  {
    int v8 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 67109120;
      int v14 = 514;
      _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", buf, 8u);
    }
  }
  if (__p)
  {
    uint64_t v11 = (char *)__p;
    operator delete(__p);
  }
}

void sub_24B4AB5FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B4AB61C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t result = sub_24B4AF924();
  uint64_t v6 = *(void *)(result + 16);
  if (v6)
  {
    while (*(_DWORD *)v6 != a3)
    {
      uint64_t v6 = *(void *)(v6 + 8);
      if (!v6) {
        return result;
      }
    }
    return sub_24B49B6F8(a2, v6 + 56);
  }
  return result;
}

uint64_t sub_24B4AB684(uint64_t a1, uint64_t a2, const void **a3, unsigned int a4)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  int v8 = operator new(0x218uLL, MEMORY[0x263F8C180]);
  if (v8)
  {
    uint64_t v9 = (uint64_t)v8;
    sub_24B497ED8((uint64_t)v8);
    if (sub_24B498404(v9, a2, a3))
    {
      uint64_t v10 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        unsigned int v35 = 67109120;
        int v36 = 770;
        _os_log_error_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v35, 8u);
      }
      uint64_t v11 = sub_24B4B1200();
      int v12 = sub_24B4ABAA4(*(unsigned __int8 *)(*(void *)(v9 + 48) + 20));
      uint64_t v37 = 0;
      uint64_t v38 = 0x200000000;
      unsigned int v35 = a4;
      char v41 = -1;
      int v39 = v12;
      int v40 = 0;
      sub_24B4B21B4(v11, &v35);
      uint64_t v13 = sub_24B498160(v9);
      MEMORY[0x24C5D2700](v13, 0x1030C40AE74B18ELL);
      return -1;
    }
    else
    {
      unsigned int v16 = *(uint64_t **)(v9 + 8);
      if (v16)
      {
        uint64_t v17 = *v16;
        if (v17)
        {
          if (*(_DWORD *)(*(void *)(v17 + 16) + 108))
          {
            uint64_t v18 = sub_24B4A4C30();
            sub_24B4A63C0(v18);
          }
        }
      }
      *(_DWORD *)uint64_t v9 = a4;
      *(_DWORD *)(v9 + 4) = a2;
      *(_DWORD *)(v9 + 16) = 1;
      unsigned __int8 v19 = operator new(0x18uLL, MEMORY[0x263F8C180]);
      if (v19)
      {
        v19[1] = 0;
        v19[2] = v9;
        *(_DWORD *)unsigned __int8 v19 = a4;
        uint64_t v20 = *(void *)(a1 + 16);
        while (v20)
        {
          uint64_t v21 = v20;
          uint64_t v20 = *(void *)(v20 + 8);
          if (!v20)
          {
            *(void *)(v21 + 8) = v19;
            v19[1] = 0;
            goto LABEL_24;
          }
        }
        v19[1] = *(void *)(a1 + 16);
        *(void *)(a1 + 16) = v19;
LABEL_24:
        uint64_t v26 = sub_24B4AEF68();
        int v27 = sub_24B4AF08C(v26, *(_DWORD *)v9);
        uint64_t v28 = sub_24B4AB040();
        if (*(_WORD *)(v28 + 44)) {
          int v29 = *(unsigned __int16 *)(v28 + 44);
        }
        else {
          int v29 = 260;
        }
        sub_24B4A66C4((_DWORD *)(v9 + 504), v27, 0, v29, 1);
        sub_24B4A6824(v9 + 504);
        uint64_t v30 = sub_24B4B1200();
        int v31 = sub_24B4ABAA4(*(unsigned __int8 *)(*(void *)(v9 + 48) + 20));
        uint64_t v37 = 0;
        uint64_t v38 = 0x100000000;
        unsigned int v35 = a4;
        char v41 = -1;
        int v39 = v31;
        int v40 = 0;
        sub_24B4B21B4(v30, &v35);
        uint64_t v32 = *(void *)(sub_24B4AF924() + 16);
        if (!v32) {
          goto LABEL_33;
        }
        while (*(_DWORD *)v32 != a2)
        {
          uint64_t v32 = *(void *)(v32 + 8);
          if (!v32) {
            goto LABEL_33;
          }
        }
        if (sub_24B4AFE94(v32))
        {
          sub_24B4ABBEC(a1);
        }
        else
        {
LABEL_33:
          uint64_t v33 = sub_24B4B1200();
          sub_24B4B114C(v33);
        }
        return 0;
      }
      else
      {
        uint64_t v22 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          unsigned int v35 = 67109120;
          int v36 = 1537;
          _os_log_error_impl(&dword_24B3DE000, v22, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v35, 8u);
          uint64_t v22 = qword_26B17C488;
        }
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          unsigned int v35 = 67109120;
          int v36 = 1537;
          _os_log_error_impl(&dword_24B3DE000, v22, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v35, 8u);
        }
        uint64_t v23 = sub_24B4B1200();
        int v24 = sub_24B4ABAA4(*(unsigned __int8 *)(*(void *)(v9 + 48) + 20));
        uint64_t v37 = 0;
        uint64_t v38 = 0x200000000;
        unsigned int v35 = a4;
        char v41 = -1;
        int v39 = v24;
        int v40 = 0;
        sub_24B4B21B4(v23, &v35);
        uint64_t v25 = sub_24B498160(v9);
        MEMORY[0x24C5D2700](v25, 0x1030C40AE74B18ELL);
        return -2;
      }
    }
  }
  else
  {
    uint64_t v15 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      unsigned int v35 = 67109120;
      int v36 = 513;
      _os_log_error_impl(&dword_24B3DE000, v15, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v35, 8u);
    }
    return -3;
  }
}

void sub_24B4ABA80(_Unwind_Exception *a1)
{
  MEMORY[0x24C5D26F0](v1, MEMORY[0x263F8C180]);
  _Unwind_Resume(a1);
}

uint64_t sub_24B4ABAA4(unsigned int a1)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (a1 >= 0x11)
  {
    int v2 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v5[0]) = 0;
      _os_log_error_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_ERROR, "Position Method", (uint8_t *)v5, 2u);
    }
    uint64_t v1 = 0;
  }
  else
  {
    uint64_t v1 = dword_24B4BFD38[(char)a1];
  }
  int v3 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_INFO))
  {
    v5[0] = 67109120;
    v5[1] = v1;
    _os_log_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_INFO, "Position Method,%u", (uint8_t *)v5, 8u);
    int v3 = qword_26B17C488;
  }
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v5[0]) = 0;
    _os_log_debug_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving SuplUtils::ConvertPosMethod", (uint8_t *)v5, 2u);
  }
  return v1;
}

void sub_24B4ABBEC(uint64_t a1)
{
  for (uint64_t i = *(void *)(a1 + 16); i; uint64_t i = *(void *)(i + 8))
  {
    uint64_t v3 = *(void *)(i + 16);
    if (v3)
    {
      if (*(_DWORD *)(v3 + 16) == 1)
      {
        *(_DWORD *)(v3 + 16) = 0;
        uint64_t v4 = sub_24B4A4C30();
        if (v4)
        {
          uint64_t v5 = v4;
          BYTE4(v14) = -1;
          int v15 = 0;
          LOBYTE(v14) = 3;
          uint64_t v6 = *(void *)(i + 16);
          unint64_t v7 = *(uint64_t **)(v6 + 8);
          if (v7)
          {
            uint64_t v8 = *v7;
            if (v8)
            {
              if (*(_DWORD *)(*(void *)(v8 + 16) + 108)) {
                LOBYTE(v14) = 2;
              }
            }
          }
          uint64_t v9 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
          {
            __int16 v10 = 0;
            _os_log_debug_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplUtils::ProcessWaitingSuplInits, calling InitSessionNode", (uint8_t *)&v10, 2u);
            uint64_t v6 = *(void *)(i + 16);
          }
          sub_24B4A4E9C(v5, *(_DWORD *)(v6 + 4), *(_DWORD *)v6, &v14, 0);
          long long v12 = 0u;
          memset(__p, 0, 25);
          long long v11 = 0u;
          __int16 v10 = 1;
          LODWORD(v11) = 56;
          (*(void (**)(uint64_t, void, __int16 *))(*(void *)v5 + 8))(v5, **(unsigned int **)(i + 16), &v10);
          if (__p[0])
          {
            __p[1] = __p[0];
            operator delete(__p[0]);
          }
          if (*((void *)&v11 + 1))
          {
            *(void *)&long long v12 = *((void *)&v11 + 1);
            operator delete(*((void **)&v11 + 1));
          }
        }
      }
    }
    if (!*(void *)(a1 + 16)) {
      break;
    }
  }
}

void sub_24B4ABD88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_24B4ABD9C(uint64_t a1, int a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    while (*(_DWORD *)v2 != a2)
    {
      uint64_t v2 = *(void *)(v2 + 8);
      if (!v2) {
        goto LABEL_4;
      }
    }
    return *(void *)(v2 + 16);
  }
  else
  {
LABEL_4:
    uint64_t v3 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_debug_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving SuplUtils::GetSuplInitRecd, nullptr", v5, 2u);
    }
    return 0;
  }
}

void sub_24B4ABE2C(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    do
    {
      if (*(_DWORD *)v4 == a2)
      {
        while (*(_DWORD *)v3 != a2)
        {
          uint64_t v3 = *(void *)(v3 + 8);
          if (!v3) {
            goto LABEL_11;
          }
        }
        sub_24B4B01D0(a1, v3);
LABEL_11:
        uint64_t v6 = *(void *)(v4 + 16);
        if (v6)
        {
          uint64_t v7 = sub_24B498160(v6);
          MEMORY[0x24C5D2700](v7, 0x1030C40AE74B18ELL);
        }
        *(void *)(v4 + 8) = 0;
        *(void *)(v4 + 16) = 0;
        JUMPOUT(0x24C5D2700);
      }
      uint64_t v4 = *(void *)(v4 + 8);
    }
    while (v4);
  }
  uint64_t v5 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v8 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving SuplUtils::DeleteSuplInitRecd, nullptr", v8, 2u);
  }
}

uint64_t sub_24B4ABF28(uint64_t a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  int v5 = *(unsigned __int8 *)a3;
  if (v5 == *a2)
  {
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v7 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v23 = 67109120;
      int v24 = 515;
      _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v23, 8u);
      uint64_t v7 = qword_26B17C488;
    }
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v23) = 0;
      _os_log_debug_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEBUG, "#gpsd,#supl Leaving SuplUtils::ValidateSlpId, SLP id type not matching", (uint8_t *)&v23, 2u);
    }
    uint64_t v6 = 0;
    int v5 = *a2;
  }
  if (v5 == 255)
  {
    uint64_t v14 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return v6;
    }
    int v23 = 67109120;
    int v24 = 515;
    goto LABEL_29;
  }
  if (v5 != 2)
  {
    if (v5 == 1)
    {
      int v8 = a2[8];
      if (v8 == 2)
      {
        uint64_t v18 = (const void *)a3[5];
        size_t v19 = a3[6] - (void)v18;
        uint64_t v20 = (const void *)*((void *)a2 + 5);
        if (v19 != *((void *)a2 + 6) - (void)v20 || memcmp(v18, v20, v19))
        {
          long long v12 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
          {
            int v23 = 67109120;
            int v24 = 515;
            _os_log_error_impl(&dword_24B3DE000, v12, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v23, 8u);
            long long v12 = qword_26B17C488;
          }
          if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
            return 0;
          }
          LOWORD(v23) = 0;
          uint64_t v13 = "#gpsd,#supl Leaving SuplUtils::ValidateSlpId, SLP id IPv6 not matching";
          goto LABEL_36;
        }
      }
      else if (v8 == 1)
      {
        uint64_t v9 = (const void *)a3[2];
        size_t v10 = a3[3] - (void)v9;
        long long v11 = (const void *)*((void *)a2 + 2);
        if (v10 != *((void *)a2 + 3) - (void)v11 || memcmp(v9, v11, v10))
        {
          long long v12 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
          {
            int v23 = 67109120;
            int v24 = 515;
            _os_log_error_impl(&dword_24B3DE000, v12, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v23, 8u);
            long long v12 = qword_26B17C488;
          }
          if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
            return 0;
          }
          LOWORD(v23) = 0;
          uint64_t v13 = "#gpsd,#supl Leaving SuplUtils::ValidateSlpId, SLP id IPv4 not matching";
LABEL_36:
          _os_log_debug_impl(&dword_24B3DE000, v12, OS_LOG_TYPE_DEBUG, v13, (uint8_t *)&v23, 2u);
          return 0;
        }
      }
      else
      {
        uint64_t v22 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          int v23 = 67109120;
          int v24 = 514;
          _os_log_error_impl(&dword_24B3DE000, v22, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v23, 8u);
          uint64_t v22 = qword_26B17C488;
        }
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
        {
          LOWORD(v23) = 0;
          _os_log_debug_impl(&dword_24B3DE000, v22, OS_LOG_TYPE_DEBUG, "#gpsd,#supl SuplUtils::ValidateSlpId, SLP id IpAddr type out of range", (uint8_t *)&v23, 2u);
        }
      }
      return v6;
    }
    uint64_t v14 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return v6;
    }
    int v23 = 67109120;
    int v24 = 514;
LABEL_29:
    _os_log_error_impl(&dword_24B3DE000, v14, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v23, 8u);
    return v6;
  }
  int v15 = (const void *)a3[8];
  size_t v16 = a3[9] - (void)v15;
  uint64_t v17 = (const void *)*((void *)a2 + 8);
  if (v16 != *((void *)a2 + 9) - (void)v17 || memcmp(v15, v17, v16))
  {
    long long v12 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v23 = 67109120;
      int v24 = 515;
      _os_log_error_impl(&dword_24B3DE000, v12, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v23, 8u);
      long long v12 = qword_26B17C488;
    }
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      return 0;
    }
    LOWORD(v23) = 0;
    uint64_t v13 = "#gpsd,#supl SuplUtils::ValidateSlpId, SLP id FQDN data not matching";
    goto LABEL_36;
  }
  return v6;
}

BOOL sub_24B4AC388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  size_t v4 = *(void *)(a2 + 8) - *(void *)a2;
  if (v4 == *(void *)(a3 + 8) - *(void *)a3 && !memcmp(*(const void **)a2, *(const void **)a3, v4)) {
    return 1;
  }
  int v5 = qword_26B17C488;
  BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
  if (result)
  {
    v7[0] = 67109120;
    v7[1] = 515;
    _os_log_error_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v7, 8u);
    return 0;
  }
  return result;
}

BOOL sub_24B4AC45C(uint64_t a1, int a2, int a3)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (a2 == a3) {
    return 1;
  }
  size_t v4 = qword_26B17C488;
  BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
  if (result)
  {
    v5[0] = 67109120;
    v5[1] = 515;
    _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v5, 8u);
    return 0;
  }
  return result;
}

BOOL sub_24B4AC514(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  int v3 = *a2;
  if (v3 == *a3)
  {
    switch(*a2)
    {
      case 1u:
        size_t v4 = (const void *)*((void *)a2 + 1);
        size_t v5 = *((void *)a2 + 2) - (void)v4;
        uint64_t v6 = (const void *)*((void *)a3 + 1);
        if (v5 == *((void *)a3 + 2) - (void)v6 && !memcmp(v4, v6, v5)) {
          return 1;
        }
        uint64_t v7 = qword_26B17C488;
        BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
        if (result)
        {
          int v14 = 67109120;
          int v15 = 515;
          goto LABEL_9;
        }
        return result;
      case 2u:
      case 3u:
      case 5u:
        goto LABEL_11;
      case 4u:
        size_t v10 = (const void *)*((void *)a2 + 10);
        size_t v11 = *((void *)a2 + 11) - (void)v10;
        long long v12 = (const void *)*((void *)a3 + 10);
        if (v11 == *((void *)a3 + 11) - (void)v12 && !memcmp(v10, v12, v11)) {
          return 1;
        }
        uint64_t v7 = qword_26B17C488;
        BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
        if (!result) {
          return result;
        }
        int v14 = 67109120;
        int v15 = 515;
        goto LABEL_9;
      case 6u:
        int v13 = a2[128];
        if (v13 == a3[128])
        {
          if ((v13 - 1) < 2) {
            return 1;
          }
          uint64_t v7 = qword_26B17C488;
          BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
          if (result)
          {
            int v14 = 67109120;
            int v15 = 515;
            goto LABEL_9;
          }
          return result;
        }
        uint64_t v7 = qword_26B17C488;
        BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
        if (!result) {
          return result;
        }
        int v14 = 67109120;
        int v15 = 515;
        goto LABEL_9;
      default:
        if (v3 == 255)
        {
LABEL_11:
          uint64_t v9 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
          {
            int v14 = 67109120;
            int v15 = 770;
            _os_log_error_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v14, 8u);
          }
          return 1;
        }
        uint64_t v7 = qword_26B17C488;
        BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
        if (!result) {
          return result;
        }
        int v14 = 67109120;
        int v15 = 515;
        break;
    }
    goto LABEL_9;
  }
  uint64_t v7 = qword_26B17C488;
  BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
  if (result)
  {
    int v14 = 67109120;
    int v15 = 515;
LABEL_9:
    _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v14, 8u);
    return 0;
  }
  return result;
}

double sub_24B4AC814(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_24B4AF924();
  BOOL v7 = sub_24B4AFE44(v6, a3);
  BOOL v8 = 0;
  *(_DWORD *)(a2 + 36) = 0;
  if (!*(_DWORD *)(a1 + 296)) {
    BOOL v8 = *(_DWORD *)(a1 + 284) == 1;
  }
  if (!v7) {
    BOOL v8 = 0;
  }
  *(_DWORD *)a2 = v8;
  double result = *(double *)(a1 + 288);
  *(double *)(a2 + 4) = result;
  *(_DWORD *)(a2 + 40) = 0;
  *(_DWORD *)(a2 + 32) = 0;
  return result;
}

void sub_24B4AC888(_DWORD *a1, uint64_t a2, int a3, int a4)
{
  if (a1[72] == 1) {
    *(unsigned char *)(a2 + 28) = 1;
  }
  if ((a3 & 0xFFFFFFFD) == 0 && !a1[74] && a1[71] == 1) {
    *(unsigned char *)(a2 + 28) = 0;
  }
}

void sub_24B4AC8F0(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  if (a3 + 224 != a2) {
    sub_24B3EAC0C((void *)a2, *(char **)(a3 + 224), *(char **)(a3 + 232), *(void *)(a3 + 232) - *(void *)(a3 + 224));
  }
  int v5 = *(unsigned __int8 *)(a3 + 248);
  *(unsigned char *)(a2 + 24) = v5;
  if (v5 == 255)
  {
    size_t v11 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    int v12 = 67109120;
    int v13 = 515;
    goto LABEL_25;
  }
  if (v5 == 2)
  {
    if (a2 == a3 + 224) {
      return;
    }
    BOOL v7 = *(char **)(a3 + 312);
    BOOL v8 = *(char **)(a3 + 320);
    uint64_t v9 = (void *)(a2 + 88);
    unint64_t v10 = v8 - v7;
    goto LABEL_13;
  }
  if (v5 != 1)
  {
    size_t v11 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      return;
    }
    int v12 = 67109120;
    int v13 = 514;
    goto LABEL_25;
  }
  *(unsigned char *)(a2 + 32) = *(unsigned char *)(a3 + 256);
  int v6 = *(unsigned __int8 *)(a3 + 256);
  if (v6 == 2)
  {
    if (a2 != a3 + 224)
    {
      BOOL v7 = *(char **)(a3 + 288);
      BOOL v8 = *(char **)(a3 + 296);
      uint64_t v9 = (void *)(a2 + 64);
LABEL_20:
      unint64_t v10 = v8 - v7;
LABEL_13:
      sub_24B3EAC0C(v9, v7, v8, v10);
    }
  }
  else
  {
    if (v6 == 1)
    {
      if (a2 == a3 + 224) {
        return;
      }
      BOOL v7 = *(char **)(a3 + 264);
      BOOL v8 = *(char **)(a3 + 272);
      uint64_t v9 = (void *)(a2 + 40);
      goto LABEL_20;
    }
    size_t v11 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v12 = 67109120;
      int v13 = 514;
LABEL_25:
      _os_log_error_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v12, 8u);
    }
  }
}

void sub_24B4ACB40(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  if (!a2)
  {
    BOOL v7 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v17 = 67109120;
      int v18 = 515;
      _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v17, 8u);
    }
    return;
  }
  *(_DWORD *)a2 = 0;
  unsigned int v4 = *(unsigned __int8 *)(a3 + 1);
  if (v4 <= 0xA)
  {
    if (((1 << v4) & 0x523) != 0) {
      goto LABEL_4;
    }
    if (v4 == 3)
    {
      int v13 = *(_DWORD *)(a3 + 32);
      *(_DWORD *)(a2 + 48) = v13;
      *(_DWORD *)(a2 + 52) = *(_DWORD *)(a3 + 40);
      *(unsigned char *)(a2 + 44) = (v13 & 0x800000) != 0;
      *(_DWORD *)(a2 + 40) = 0;
      *(unsigned char *)(a2 + 58) = *(unsigned char *)(a3 + 64);
      *(unsigned char *)(a2 + 56) = *(_DWORD *)(a3 + 48);
      *(unsigned char *)(a2 + 57) = *(_DWORD *)(a3 + 56);
      *(void *)(a2 + 32) = 0x100000001;
      int v12 = (unsigned char *)(a3 + 65);
LABEL_27:
      int v15 = (unint64_t *)(a2 + 8);
      uint64_t v14 = *(unsigned char **)(a2 + 8);
      *(unsigned char *)(a2 + 59) = *v12;
      unint64_t v16 = *(void *)(a2 + 16) - (void)v14;
      if (v16 > 0xC)
      {
        if (v16 != 13) {
          *(void *)(a2 + 16) = v14 + 13;
        }
      }
      else
      {
        sub_24B3E3AC4(v15, 13 - v16);
        uint64_t v14 = (unsigned char *)*v15;
      }
      *uint64_t v14 = (*(_WORD *)(a3 + 216) / 0xAu - 10 * ((6554 * (*(unsigned __int16 *)(a3 + 216) / 0xAu)) >> 16)) | 0x30;
      *(unsigned char *)(*v15 + 1) = (*(_WORD *)(a3 + 216) % 0xAu) | 0x30;
      *(unsigned char *)(*v15 + 2) = (*(unsigned char *)(a3 + 218) / 0xAu
                            - 10 * ((unsigned __int16)(26 * (*(unsigned __int8 *)(a3 + 218) / 0xAu)) >> 8)) | 0x30;
      *(unsigned char *)(*v15 + 3) = (*(unsigned char *)(a3 + 218) % 0xAu) | 0x30;
      *(unsigned char *)(*v15 + 4) = (*(unsigned char *)(a3 + 219) / 0xAu
                            - 10 * ((unsigned __int16)(26 * (*(unsigned __int8 *)(a3 + 219) / 0xAu)) >> 8)) | 0x30;
      *(unsigned char *)(*v15 + 5) = (*(unsigned char *)(a3 + 219) % 0xAu) | 0x30;
      *(unsigned char *)(*v15 + 6) = (*(unsigned char *)(a3 + 220) / 0xAu
                            - 10 * ((unsigned __int16)(26 * (*(unsigned __int8 *)(a3 + 220) / 0xAu)) >> 8)) | 0x30;
      *(unsigned char *)(*v15 + 7) = (*(unsigned char *)(a3 + 220) % 0xAu) | 0x30;
      *(unsigned char *)(*v15 + 8) = (*(unsigned char *)(a3 + 221) / 0xAu
                            - 10 * ((unsigned __int16)(26 * (*(unsigned __int8 *)(a3 + 221) / 0xAu)) >> 8)) | 0x30;
      *(unsigned char *)(*v15 + 9) = (*(unsigned char *)(a3 + 221) % 0xAu) | 0x30;
      *(unsigned char *)(*v15 + 10) = (*(unsigned char *)(a3 + 222) / 0xAu
                             - 10 * ((unsigned __int16)(26 * (*(unsigned __int8 *)(a3 + 222) / 0xAu)) >> 8)) | 0x30;
      *(unsigned char *)(*v15 + 11) = (*(unsigned char *)(a3 + 222) % 0xAu) | 0x30;
      *(unsigned char *)(*v15 + 12) = 90;
      return;
    }
    if (v4 == 9)
    {
      *(unsigned char *)(a2 + 44) = (*(_DWORD *)(a2 + 48) & 0x800000) != 0;
      *(_DWORD *)(a2 + 48) = *(_DWORD *)(a3 + 68) & 0x7FFFFF;
      *(_DWORD *)(a2 + 52) = *(_DWORD *)(a3 + 76);
      unsigned int v8 = *(unsigned __int16 *)(a3 + 84);
      int v9 = *(_DWORD *)(a3 + 108);
      if (v8 != 0xFFFF && v9 != 255) {
        *(_DWORD *)(a2 + 40) = 1;
      }
      *(unsigned char *)(a2 + 64) = v9;
      *(unsigned char *)(a2 + 60) = v8 >> 15;
      *(_WORD *)(a2 + 62) = v8 & 0x7FFF;
      int v10 = *(_DWORD *)(a3 + 92);
      int v11 = *(_DWORD *)(a3 + 100);
      if (v10 != 255 && v11 != 255 && *(unsigned __int8 *)(a3 + 116) != 255) {
        *(_DWORD *)(a2 + 32) = 1;
      }
      *(unsigned char *)(a2 + 58) = *(unsigned char *)(a3 + 116);
      *(unsigned char *)(a2 + 56) = v10;
      *(unsigned char *)(a2 + 57) = v11;
      *(_DWORD *)(a2 + 36) = 1;
      int v12 = (unsigned char *)(a3 + 117);
      goto LABEL_27;
    }
  }
  if (v4 == 255)
  {
LABEL_4:
    int v5 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v17 = 67109120;
      int v18 = 770;
      _os_log_error_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v17, 8u);
      int v5 = qword_26B17C488;
    }
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v17) = 0;
      int v6 = "#gpsd,#supl Leaving SuplUtils::ConvertLocEstimatetoAsn1Position, invalid/unsupported shape type";
LABEL_8:
      _os_log_debug_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_DEBUG, v6, (uint8_t *)&v17, 2u);
      return;
    }
    return;
  }
  int v5 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    int v17 = 67109120;
    int v18 = 515;
    _os_log_error_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&v17, 8u);
    int v5 = qword_26B17C488;
  }
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v17) = 0;
    int v6 = "#gpsd,#supl Leaving SuplUtils::ConvertLocEstimatetoAsn1Position, invalid shape type";
    goto LABEL_8;
  }
}

BOOL sub_24B4AD004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)a3 == 2)
  {
    int v3 = qword_26B17C488;
    BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_INFO);
    if (!result) {
      return result;
    }
    __int16 v15 = 0;
    int v5 = "Last know position fix is not valid";
    int v6 = (uint8_t *)&v15;
    goto LABEL_10;
  }
  if (*(unsigned char *)(a3 + 1) != 9)
  {
    int v3 = qword_26B17C488;
    BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_INFO);
    if (!result) {
      return result;
    }
    *(_WORD *)long long buf = 0;
    int v5 = "Last know position shape type is not valid";
    int v6 = buf;
    goto LABEL_10;
  }
  if (*(_DWORD *)(a3 + 92) > *(unsigned __int8 *)(a2 + 12))
  {
    int v3 = qword_26B17C488;
    BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_INFO);
    if (!result) {
      return result;
    }
    __int16 v13 = 0;
    int v5 = "stored semiminor axis is not valid";
    int v6 = (uint8_t *)&v13;
    goto LABEL_10;
  }
  if (*(_DWORD *)a2 == 1 && *(_DWORD *)(a3 + 108) > *(unsigned __int8 *)(a2 + 13))
  {
    int v3 = qword_26B17C488;
    BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_INFO);
    if (result)
    {
      __int16 v12 = 0;
      int v5 = "vertical accuracy is not valid";
      int v6 = (uint8_t *)&v12;
LABEL_10:
      _os_log_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_INFO, v5, v6, 2u);
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a2 + 4) != 1) {
      return 1;
    }
    unint64_t v9 = sub_24B4761A8();
    HIDWORD(v10) = 1041313291;
    LODWORD(v10) = *(_DWORD *)(a3 + 228);
    if (1000 * *(_DWORD *)(a2 + 16) >= -((double)v10 - (double)v9 * 0.000000001 * 1000.0)) {
      return 1;
    }
    int v3 = qword_26B17C488;
    BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_INFO);
    if (result)
    {
      __int16 v11 = 0;
      int v5 = "maxlocation age is not valid";
      int v6 = (uint8_t *)&v11;
      goto LABEL_10;
    }
  }
  return result;
}

uint64_t sub_24B4AD1DC(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a2 = *(_WORD *)(a1 + 48);
  long long v4 = *(_OWORD *)(a1 + 56);
  long long v5 = *(_OWORD *)(a1 + 72);
  long long v6 = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 104);
  *(_OWORD *)(a2 + 40) = v6;
  *(_OWORD *)(a2 + 24) = v5;
  *(_OWORD *)(a2 + 8) = v4;
  long long v7 = *(_OWORD *)(a1 + 120);
  long long v8 = *(_OWORD *)(a1 + 136);
  long long v9 = *(_OWORD *)(a1 + 152);
  *(_OWORD *)(a2 + 120) = *(_OWORD *)(a1 + 168);
  *(_OWORD *)(a2 + 104) = v9;
  *(_OWORD *)(a2 + 88) = v8;
  *(_OWORD *)(a2 + 72) = v7;
  long long v10 = *(_OWORD *)(a1 + 184);
  long long v11 = *(_OWORD *)(a1 + 200);
  long long v12 = *(_OWORD *)(a1 + 216);
  *(void *)(a2 + 184) = *(void *)(a1 + 232);
  *(_OWORD *)(a2 + 168) = v12;
  *(_OWORD *)(a2 + 152) = v11;
  *(_OWORD *)(a2 + 136) = v10;
  if (a1 + 48 != a2) {
    sub_24B4AD8D8((void *)(a2 + 192), *(char **)(a1 + 240), *(char **)(a1 + 248), (uint64_t)(*(void *)(a1 + 248) - *(void *)(a1 + 240)) >> 4);
  }
  *(_OWORD *)(a2 + 216) = *(_OWORD *)(a1 + 264);
  return 0;
}

unsigned __int8 *sub_24B4AD298(unsigned __int8 *result, char *__str)
{
  int v2 = *result;
  if (v2 == 1)
  {
    int v5 = result[8];
    if (v5 == 2)
    {
      *((_DWORD *)__str + 64) = 2;
      long long v6 = (unsigned __int8 *)*((void *)result + 5);
      return (unsigned __int8 *)snprintf(__str, 0x100uLL, "%d.%d.%d.%d.%d.%d.%d.%d.%d.%d.%d.%d.%d.%d.%d.%d", *v6, v6[1], v6[2], v6[3], v6[4], v6[5]);
    }
    else if (v5 == 1)
    {
      *((_DWORD *)__str + 64) = 1;
      return (unsigned __int8 *)snprintf(__str, 0x100uLL, "%d.%d.%d.%d");
    }
  }
  else if (v2 == 2)
  {
    *((_DWORD *)__str + 64) = 3;
    int v3 = (unsigned char *)*((void *)result + 8);
    long long v4 = (unsigned char *)*((void *)result + 9);
    if (v4 != v3)
    {
      return (unsigned __int8 *)memmove(__str, v3, v4 - v3);
    }
  }
  else
  {
    *((_DWORD *)__str + 64) = 0;
  }
  return result;
}

uint64_t sub_24B4AD3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v54 = *MEMORY[0x263EF8340];
  if (*(void *)a3 != *(void *)(a3 + 8))
  {
    LOWORD(buf) = 0;
    uint64_t v6 = sub_24B47D534();
    int v7 = atomic_load((unsigned __int8 *)(v6 + 1));
    BOOL v8 = v7 == 255;
    uint64_t v9 = 1;
    if (v8) {
      uint64_t v9 = 2;
    }
    unsigned __int8 v10 = atomic_load((unsigned __int8 *)(v6 + v9));
    BYTE2(buf) = v10;
    *(_WORD *)((char *)&buf + 3) = 0;
    unsigned __int16 v28 = -1;
    uint64_t v29 = 0;
    sub_24B4A9ECC((uint64_t)v30);
    std::string __p = 0;
    int v23 = 0;
    uint64_t v24 = 0;
    sub_24B47A720(&__p, *(const void **)a3, *(void *)(a3 + 8), *(void *)(a3 + 8) - *(void *)a3);
    v20[0] = &__p;
    v20[1] = 0;
    char v21 = 0;
    v19[0] = v20;
    v19[1] = &buf;
    if (sub_24B49D0F0((uint64_t)v19) || v28 != 1)
    {
      unint64_t v16 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)uint64_t v25 = 67109120;
        int v26 = 515;
        _os_log_error_impl(&dword_24B3DE000, v16, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", v25, 8u);
      }
      __int16 v15 = -5;
      goto LABEL_43;
    }
    uint64_t v11 = v29;
    *(unsigned char *)(a4 + 5) = *(unsigned char *)(v29 + 224) == 0;
    *(unsigned char *)(a4 + 6) = BYTE2(buf);
    *(_WORD *)(a4 + 7) = *(_WORD *)((char *)&buf + 3);
    *(_DWORD *)(a4 + 12) = sub_24B4ABAA4(*(unsigned __int8 *)(v11 + 20));
    *(_DWORD *)(a4 + 272) = 0;
    if (v30[1] == 1) {
      sub_24B4AD298(v47, (char *)(a4 + 16));
    }
    *(_DWORD *)(a4 + 536) = 0;
    if (*(_DWORD *)(v11 + 292) == 1) {
      sub_24B4AD298((unsigned __int8 *)(v11 + 592), (char *)(a4 + 280));
    }
    *(_DWORD *)(a4 + 800) = 0;
    if (*(_DWORD *)(v11 + 4) == 1) {
      sub_24B4AD298((unsigned __int8 *)(v11 + 112), (char *)(a4 + 544));
    }
    *(unsigned char *)(a4 + 808) = *(_DWORD *)(v11 + 108) != 0;
    *(_DWORD *)(a4 + 812) = 0;
    if (*(_DWORD *)v11 == 1)
    {
      unsigned int v12 = *(unsigned __int8 *)(v11 + 44);
      if (v12 <= 4) {
        *(_DWORD *)(a4 + 812) = v12 + 1;
      }
    }
    *(unsigned char *)(a4 + 816) = 0;
    if (*(_DWORD *)(v11 + 304))
    {
      int v13 = *(_DWORD *)(v11 + 792);
      if (v13 == 1) {
        *(unsigned char *)(a4 + 816) = 1;
      }
      else {
        LOBYTE(v13) = 0;
      }
      if (*(_DWORD *)(v11 + 796) == 1)
      {
        LOBYTE(v13) = v13 | 2;
        *(unsigned char *)(a4 + 816) = v13;
      }
      if (*(_DWORD *)(v11 + 800) == 1)
      {
        LOBYTE(v13) = v13 | 4;
        *(unsigned char *)(a4 + 816) = v13;
      }
      if (*(_DWORD *)(v11 + 804) == 1)
      {
        LOBYTE(v13) = v13 | 8;
        *(unsigned char *)(a4 + 816) = v13;
      }
      if (*(_DWORD *)(v11 + 808) == 1)
      {
        LOBYTE(v13) = v13 | 0x10;
        *(unsigned char *)(a4 + 816) = v13;
      }
      if (*(_DWORD *)(v11 + 812) == 1) {
        *(unsigned char *)(a4 + 816) = v13 | 0x20;
      }
    }
    *(unsigned char *)(a4 + 817) = 0;
    if (*(_DWORD *)(v11 + 8) == 1)
    {
      *(unsigned char *)(a4 + 817) = 1;
      *(_WORD *)(a4 + 820) = *(_WORD *)(v11 + 212);
      *(_DWORD *)(a4 + 824) = *(_DWORD *)(v11 + 216);
      *(unsigned char *)(a4 + 828) = *(unsigned char *)(v11 + 220);
    }
    *(_DWORD *)(a4 + 832) = 0;
    if (*(_DWORD *)(v11 + 288) == 1)
    {
      int v17 = *(unsigned __int8 *)(v11 + 584);
      if (v17 == 1)
      {
LABEL_41:
        *(_DWORD *)(a4 + 832) = v17;
        goto LABEL_42;
      }
      if (!*(unsigned char *)(v11 + 584))
      {
        int v17 = 2;
        goto LABEL_41;
      }
    }
LABEL_42:
    __int16 v15 = 0;
    *(unsigned char *)(a4 + 4) = 1;
LABEL_43:
    if (__p)
    {
      int v23 = __p;
      operator delete(__p);
    }
    if (v52)
    {
      uint64_t v53 = v52;
      operator delete(v52);
    }
    if (v50)
    {
      int v51 = v50;
      operator delete(v50);
    }
    if (v48)
    {
      char v49 = v48;
      operator delete(v48);
    }
    if (v45)
    {
      int v46 = v45;
      operator delete(v45);
    }
    if (v43)
    {
      __int16 v44 = v43;
      operator delete(v43);
    }
    if (v41)
    {
      uint64_t v42 = v41;
      operator delete(v41);
    }
    if (v39)
    {
      int v40 = v39;
      operator delete(v39);
    }
    if (v37)
    {
      uint64_t v38 = v37;
      operator delete(v37);
    }
    if (v35)
    {
      int v36 = v35;
      operator delete(v35);
    }
    if (v33)
    {
      uint64_t v34 = v33;
      operator delete(v33);
    }
    if (v31)
    {
      uint64_t v32 = v31;
      operator delete(v31);
    }
    sub_24B49CA78(&v28);
    return v15;
  }
  uint64_t v14 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    uint64_t buf = 0x20304000100;
    _os_log_error_impl(&dword_24B3DE000, v14, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)&buf, 8u);
  }
  return -5;
}

void sub_24B4AD7E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if (__p) {
    operator delete(__p);
  }
  sub_24B4980EC((uint64_t)&a19);
  _Unwind_Resume(a1);
}

void sub_24B4AD824(uint64_t a1, unsigned int a2, _DWORD *a3)
{
  if (a2 > 0x17) {
    int v3 = 0;
  }
  else {
    int v3 = dword_24B4BFD7C[(char)a2];
  }
  *a3 = v3;
}

void sub_24B4AD84C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    do
    {
      uint64_t v3 = *(void *)(v1 + 8);
      if (*(void *)(v1 + 16))
      {
        uint64_t v4 = sub_24B4A4C30();
        sub_24B4A5E5C(v4, **(_DWORD **)(v1 + 16));
        int v5 = (void *)sub_24B4A113C();
        sub_24B480554((uint64_t)off_2697C5530, **(_DWORD **)(v1 + 16));
        sub_24B4A1BBC(v5);
        sub_24B4ABE2C(a1, **(_DWORD **)(v1 + 16));
      }
      uint64_t v1 = v3;
    }
    while (v3);
  }
}

void *sub_24B4AD8D8(void *result, char *__src, char *a3, unint64_t a4)
{
  uint64_t v6 = __src;
  int v7 = result;
  uint64_t v8 = result[2];
  uint64_t v9 = (char *)*result;
  if (a4 > (v8 - *result) >> 4)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *int v7 = 0;
      v7[1] = 0;
      _DWORD v7[2] = 0;
    }
    if (a4 >> 60) {
      goto LABEL_23;
    }
    uint64_t v10 = v8 >> 3;
    if (v8 >> 3 <= a4) {
      uint64_t v10 = a4;
    }
    unint64_t v11 = (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0 ? 0xFFFFFFFFFFFFFFFLL : v10;
    if (v11 >> 60) {
LABEL_23:
    }
      sub_24B3E3AAC();
    BOOL result = operator new(16 * v11);
    uint64_t v9 = (char *)result;
    *int v7 = result;
    v7[1] = result;
    _DWORD v7[2] = &result[2 * v11];
    size_t v12 = a3 - v6;
    if (v12) {
      BOOL result = memcpy(result, v6, v12);
    }
    int v13 = (void **)(v7 + 1);
    goto LABEL_22;
  }
  int v13 = (void **)(result + 1);
  uint64_t v14 = (unsigned char *)result[1];
  unint64_t v15 = (v14 - v9) >> 4;
  if (v15 >= a4)
  {
    size_t v12 = a3 - __src;
    if (a3 == __src) {
      goto LABEL_22;
    }
    int v17 = (void *)*result;
LABEL_21:
    BOOL result = memmove(v17, __src, v12);
    goto LABEL_22;
  }
  unint64_t v16 = &__src[16 * v15];
  if (v14 != v9)
  {
    BOOL result = memmove((void *)*result, __src, v14 - v9);
    uint64_t v9 = (char *)*v13;
  }
  size_t v12 = a3 - v16;
  if (v12)
  {
    int v17 = v9;
    long long __src = v16;
    goto LABEL_21;
  }
LABEL_22:
  *int v13 = &v9[v12];
  return result;
}

void sub_24B4ADA18(void *a1, unint64_t a2, unsigned char *a3)
{
  unint64_t v4 = a2;
  int v7 = (unsigned char *)a1[1];
  uint64_t v6 = a1[2];
  if (v6 - (uint64_t)v7 >= a2)
  {
    if (a2)
    {
      int v13 = &v7[a2];
      do
      {
        *v7++ = *a3;
        --v4;
      }
      while (v4);
      int v7 = v13;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = &v7[-*a1];
    unint64_t v9 = (unint64_t)&v8[a2];
    if ((uint64_t)&v8[a2] < 0) {
      sub_24B3E3AAC();
    }
    unint64_t v10 = v6 - *a1;
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v11 = v9;
    }
    if (v11) {
      size_t v12 = operator new(v11);
    }
    else {
      size_t v12 = 0;
    }
    uint64_t v14 = &v8[(void)v12];
    unint64_t v15 = &v8[(void)v12 + v4];
    unint64_t v16 = &v8[(void)v12];
    do
    {
      *v16++ = *a3;
      --v4;
    }
    while (v4);
    int v17 = (unsigned char *)*a1;
    if (v7 != (unsigned char *)*a1)
    {
      do
      {
        char v18 = *--v7;
        *--uint64_t v14 = v18;
      }
      while (v7 != v17);
      int v7 = (unsigned char *)*a1;
    }
    *a1 = v14;
    a1[1] = v15;
    a1[2] = (char *)v12 + v11;
    if (v7)
    {
      operator delete(v7);
    }
  }
}

void sub_24B4ADB44(char **a1, unsigned int *a2, unint64_t *a3)
{
  uint64_t v6 = *a1;
  int v7 = a1[1];
  unint64_t v8 = v7 - *a1;
  if (((v8 + 9) & 0x3F) != 0) {
    unsigned int v9 = ((v8 + 9) >> 6) + 1;
  }
  else {
    unsigned int v9 = (v8 + 9) >> 6;
  }
  *a2 = v9;
  if (a3 != (unint64_t *)a1)
  {
    sub_24B3EAC0C(a3, v6, v7, v8);
    unsigned int v9 = *a2;
  }
  unint64_t v10 = v9 << 6;
  unint64_t v11 = *a3;
  unint64_t v12 = a3[1] - *a3;
  if (v10 <= v12)
  {
    if (v10 < v12) {
      a3[1] = v11 + v10;
    }
  }
  else
  {
    sub_24B3E3AC4(a3, v10 - v12);
    unint64_t v11 = *a3;
  }
  *(unsigned char *)(v11 + (*((_DWORD *)a1 + 2) - *(_DWORD *)a1)) = 0x80;
  unint64_t v13 = 8 * (a1[1] - *a1);
  if (v13)
  {
    unsigned int v14 = *a2 << 6;
    if (v14)
    {
      unsigned int v15 = v14 - 1;
      do
      {
        *(unsigned char *)(*a3 + v15) = v13;
        if (v13 < 0x100) {
          break;
        }
        v13 >>= 8;
      }
      while ((unint64_t)v15--);
    }
  }
}

uint64_t *sub_24B4ADC28(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  if (v2 != *result)
  {
    uint64_t v4 = 0;
    unsigned __int8 v5 = 0;
    do
    {
      unsigned int v6 = *(_DWORD *)(v3 + 4 * v4);
      if (v6)
      {
        uint64_t v7 = (4 * v5) | 3;
        do
        {
          *(unsigned char *)(*a2 + v7) = v6;
          BOOL v9 = v7-- != 0;
          if (v6 < 0x100) {
            break;
          }
          v6 >>= 8;
        }
        while (v9);
        uint64_t v3 = *result;
        uint64_t v2 = result[1];
      }
      uint64_t v4 = ++v5;
    }
    while (v5 < (unint64_t)((v2 - v3) >> 2));
  }
  return result;
}

void sub_24B4ADC8C(uint64_t a1, char **a2, void *a3)
{
  unsigned int v6 = operator new(0x14uLL);
  v56[1] = (uint64_t)(v6 + 5);
  char v56[2] = (uint64_t)(v6 + 5);
  v6[4] = -1009589776;
  *(_OWORD *)unsigned int v6 = xmmword_24B4BFDDC;
  v56[0] = (uint64_t)v6;
  unsigned int v55 = 0;
  std::string __p = 0;
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  sub_24B4ADB44(a2, &v55, (unint64_t *)&__p);
  int v51 = a3;
  uint64_t v7 = v55;
  if (v55)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      uint64_t v59 = 0;
      sub_24B4AEB34(&v57, (char *)__p + 64 * v8, (uint64_t)__p + 64 * v8 + 64);
      unint64_t v10 = v57;
      uint64_t v9 = v58;
      unint64_t v11 = operator new(0x140uLL);
      uint64_t v12 = 0;
      v11[18] = 0u;
      v11[19] = 0u;
      v11[16] = 0u;
      v11[17] = 0u;
      v11[14] = 0u;
      v11[15] = 0u;
      v11[12] = 0u;
      v11[13] = 0u;
      v11[10] = 0u;
      v11[11] = 0u;
      char v11[8] = 0u;
      v11[9] = 0u;
      v11[6] = 0u;
      v11[7] = 0u;
      v11[4] = 0u;
      v11[5] = 0u;
      void v11[2] = 0u;
      void v11[3] = 0u;
      unint64_t v13 = v10;
      *unint64_t v11 = 0u;
      v11[1] = 0u;
      while (4 * v12 + 4 <= (unint64_t)(v9 - (void)v10))
      {
        uint64_t v14 = 0;
        int v15 = 0;
        do
          int v15 = v13[v14++] | (v15 << 8);
        while (v14 != 4);
        *((_DWORD *)v11 + v12++) = v15;
        v13 += 4;
        if (v12 == 16)
        {
          for (uint64_t i = 0; i != 256; i += 4)
          {
            HIDWORD(v17) = *(_DWORD *)((char *)v11 + i + 32) ^ *(_DWORD *)((char *)v11 + i + 52) ^ *(_DWORD *)((char *)v11 + i + 8) ^ *(_DWORD *)((char *)v11 + i);
            LODWORD(v17) = HIDWORD(v17);
            *(_DWORD *)((char *)v11 + i + 64) = v17 >> 31;
          }
          uint64_t v18 = 0;
          int v19 = v6[1];
          int v21 = v6[3];
          int v20 = v6[4];
          int v22 = v20;
          int v23 = v6[2];
          int v24 = v21;
          int v25 = v23;
          int v26 = v19;
          int v27 = *v6;
          do
          {
            int v28 = v27;
            int v29 = v25;
            int v30 = v24;
            HIDWORD(v31) = v27;
            LODWORD(v31) = v27;
            int v32 = v22 + (v26 & v25) + (v24 & ~v26) + (v31 >> 27) + 1518500249;
            HIDWORD(v31) = v26;
            LODWORD(v31) = v26;
            int v25 = v31 >> 2;
            int v27 = v32 + *(_DWORD *)((char *)v11 + v18);
            v18 += 4;
            int v22 = v24;
            int v24 = v29;
            int v26 = v28;
          }
          while (v18 != 80);
          uint64_t v33 = 0;
          do
          {
            int v34 = v27;
            int v35 = v25;
            int v36 = v29;
            HIDWORD(v37) = v27;
            LODWORD(v37) = v27;
            int v38 = v30 + (v25 ^ v29 ^ v28) + (v37 >> 27) + 1859775393;
            HIDWORD(v37) = v28;
            LODWORD(v37) = v28;
            int v25 = v37 >> 2;
            int v27 = v38 + *(_DWORD *)((char *)v11 + v33 + 80);
            v33 += 4;
            int v30 = v29;
            int v29 = v35;
            int v28 = v34;
          }
          while (v33 != 80);
          uint64_t v39 = 0;
          do
          {
            int v40 = v27;
            int v41 = v25;
            HIDWORD(v42) = v27;
            LODWORD(v42) = v27;
            int v43 = v35;
            int v44 = v36 + (v42 >> 27) + ((v41 | v35) & v34 | v41 & v35) - 1894007588;
            HIDWORD(v42) = v34;
            LODWORD(v42) = v34;
            int v25 = v42 >> 2;
            int v27 = v44 + *(_DWORD *)((char *)v11 + v39 + 160);
            v39 += 4;
            int v36 = v35;
            int v35 = v41;
            int v34 = v40;
          }
          while (v39 != 80);
          uint64_t v45 = 0;
          do
          {
            int v46 = v27;
            int v47 = v25;
            int v48 = v41;
            HIDWORD(v49) = v27;
            LODWORD(v49) = v27;
            int v50 = v43 + (v25 ^ v41 ^ v40) + (v49 >> 27) - 899497514;
            HIDWORD(v49) = v40;
            LODWORD(v49) = v40;
            int v25 = v49 >> 2;
            int v27 = v50 + *(_DWORD *)((char *)v11 + v45 + 240);
            v45 += 4;
            int v43 = v41;
            int v41 = v47;
            int v40 = v46;
          }
          while (v45 != 80);
          *v6 += v27;
          v6[1] = v46 + v19;
          void v6[2] = v25 + v23;
          v6[3] = v47 + v21;
          v6[4] = v48 + v20;
          break;
        }
      }
      operator delete(v11);
      if (v10) {
        operator delete(v10);
      }
      ++v8;
    }
    while (v8 != v7);
  }
  sub_24B4ADC28(v56, (void *)a1);
  if (v51 != (void *)a1) {
    sub_24B3EAC0C(v51, *(char **)a1, *(char **)(a1 + 8), *(void *)(a1 + 8) - *(void *)a1);
  }
  if (__p)
  {
    uint64_t v53 = __p;
    operator delete(__p);
  }
  operator delete(v6);
}

void sub_24B4AE014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  operator delete(v12);
  _Unwind_Resume(a1);
}

void sub_24B4AE050(uint64_t a1, char **a2, void *a3)
{
  unsigned int v6 = operator new(0x20uLL);
  v56[1] = (uint64_t)(v6 + 2);
  char v56[2] = (uint64_t)(v6 + 2);
  *unsigned int v6 = xmmword_24B4BFEF0;
  v6[1] = unk_24B4BFF00;
  v56[0] = (uint64_t)v6;
  unsigned int v55 = 0;
  std::string __p = 0;
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  sub_24B4ADB44(a2, &v55, (unint64_t *)&__p);
  uint64_t v49 = a1;
  int v50 = a3;
  uint64_t v7 = v55;
  if (v55)
  {
    uint64_t v8 = 0;
    uint64_t v51 = v55;
    do
    {
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      uint64_t v59 = 0;
      sub_24B4AEB34(&v57, (char *)__p + 64 * v8, (uint64_t)__p + 64 * v8 + 64);
      uint64_t v9 = v57;
      uint64_t v10 = v58;
      unint64_t v11 = operator new(0x100uLL);
      v11[12] = xmmword_24B4BFEB0;
      v11[13] = unk_24B4BFEC0;
      v11[14] = xmmword_24B4BFED0;
      v11[15] = unk_24B4BFEE0;
      char v11[8] = xmmword_24B4BFE70;
      v11[9] = unk_24B4BFE80;
      v11[10] = xmmword_24B4BFE90;
      v11[11] = unk_24B4BFEA0;
      v11[4] = xmmword_24B4BFE30;
      v11[5] = unk_24B4BFE40;
      v11[6] = xmmword_24B4BFE50;
      v11[7] = unk_24B4BFE60;
      *unint64_t v11 = xmmword_24B4BFDF0;
      v11[1] = unk_24B4BFE00;
      void v11[2] = xmmword_24B4BFE10;
      void v11[3] = unk_24B4BFE20;
      uint64_t v12 = operator new(0x140uLL);
      uint64_t v13 = 0;
      v12[18] = 0u;
      v12[19] = 0u;
      uint8_t v12[16] = 0u;
      v12[17] = 0u;
      v12[14] = 0u;
      v12[15] = 0u;
      v12[12] = 0u;
      v12[13] = 0u;
      v12[10] = 0u;
      v12[11] = 0u;
      v12[8] = 0u;
      v12[9] = 0u;
      v12[6] = 0u;
      v12[7] = 0u;
      uint8_t v12[4] = 0u;
      v12[5] = 0u;
      _DWORD v12[2] = 0u;
      void v12[3] = 0u;
      uint64_t v14 = v9;
      *uint64_t v12 = 0u;
      v12[1] = 0u;
      while (4 * v13 + 4 <= (unint64_t)(v10 - (void)v9))
      {
        uint64_t v15 = 0;
        int v16 = 0;
        do
          int v16 = v14[v15++] | (v16 << 8);
        while (v15 != 4);
        *((_DWORD *)v12 + v13++) = v16;
        v14 += 4;
        if (v13 == 16)
        {
          uint64_t v17 = 0;
          uint64_t v18 = (char *)v12 + 36;
          int v19 = *(_DWORD *)v12;
          do
          {
            HIDWORD(v20) = *(_DWORD *)&v18[v17 + 20];
            LODWORD(v20) = HIDWORD(v20);
            int v21 = (v20 >> 17) ^ __ROR4__(HIDWORD(v20), 19) ^ (HIDWORD(v20) >> 10);
            HIDWORD(v20) = *(_DWORD *)&v18[v17 - 32];
            LODWORD(v20) = HIDWORD(v20);
            *(_DWORD *)&v18[v17 + 28] = *(_DWORD *)&v18[v17]
                                      + v19
                                      + v21
                                      + ((v20 >> 7) ^ __ROR4__(HIDWORD(v20), 18) ^ (HIDWORD(v20) >> 3));
            v17 += 4;
            int v19 = HIDWORD(v20);
          }
          while (v17 != 192);
          uint64_t v22 = 0;
          unsigned int v23 = *((_DWORD *)v6 + 1);
          int v24 = *((_DWORD *)v6 + 4);
          int v25 = *((_DWORD *)v6 + 5);
          int v26 = *((_DWORD *)v6 + 6);
          int v27 = *((_DWORD *)v6 + 7);
          int v28 = v27;
          int v29 = v26;
          int v30 = v25;
          int v31 = v24;
          unsigned int v33 = *((_DWORD *)v6 + 2);
          unsigned int v32 = *((_DWORD *)v6 + 3);
          unsigned int v34 = v32;
          unsigned int v35 = v33;
          unsigned int v36 = v23;
          unsigned int v37 = *(_DWORD *)v6;
          do
          {
            unsigned int v38 = v37;
            unsigned int v39 = v36;
            unsigned int v40 = v35;
            int v41 = v31;
            int v42 = v30;
            int v43 = v29;
            HIDWORD(v44) = v31;
            LODWORD(v44) = v31;
            int v45 = (v44 >> 6) ^ __ROR4__(v31, 11);
            unint64_t v46 = __PAIR64__(v37, __ROR4__(v31, 25));
            int v47 = (v31 & v30) + v28 + (v29 & ~v31) + *(_DWORD *)((char *)v11 + v22) + (v45 ^ v46);
            LODWORD(v46) = v37;
            int v48 = v47 + *(_DWORD *)((char *)v12 + v22);
            int v31 = v48 + v34;
            unsigned int v37 = ((v46 >> 2) ^ __ROR4__(v37, 13) ^ __ROR4__(v37, 22)) + ((v39 ^ v40) & v37 ^ v39 & v40) + v48;
            v22 += 4;
            int v28 = v29;
            int v29 = v30;
            int v30 = v41;
            unsigned int v34 = v40;
            unsigned int v35 = v36;
            unsigned int v36 = v38;
          }
          while (v22 != 256);
          *(_DWORD *)v6 += v37;
          *((_DWORD *)v6 + 1) = v38 + v23;
          *((_DWORD *)v6 + 2) = v39 + v33;
          *((_DWORD *)v6 + 3) = v40 + v32;
          *((_DWORD *)v6 + 4) = v31 + v24;
          *((_DWORD *)v6 + 5) = v41 + v25;
          *((_DWORD *)v6 + 6) = v42 + v26;
          *((_DWORD *)v6 + 7) = v43 + v27;
          uint64_t v7 = v51;
          break;
        }
      }
      operator delete(v12);
      operator delete(v11);
      if (v9) {
        operator delete(v9);
      }
      ++v8;
    }
    while (v8 != v7);
  }
  sub_24B4ADC28(v56, (void *)v49);
  if (v50 != (void *)v49) {
    sub_24B3EAC0C(v50, *(char **)v49, *(char **)(v49 + 8), *(void *)(v49 + 8) - *(void *)v49);
  }
  if (__p)
  {
    uint64_t v53 = __p;
    operator delete(__p);
  }
  operator delete(v6);
}

void sub_24B4AE3A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  operator delete(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_24B4AE3EC(void **__src, char **a2, void **a3)
{
  unsigned __int8 v5 = (char *)__src;
  int v30 = 0;
  int v31 = 0;
  uint64_t v32 = 0;
  unint64_t v6 = *((unsigned __int8 *)__src + 23);
  if ((v6 & 0x80) != 0)
  {
    unint64_t v6 = (unint64_t)__src[1];
    if (v6 - 1 < 0x100)
    {
      if (v6 <= 0x40)
      {
        unsigned __int8 v5 = (char *)*__src;
        goto LABEL_19;
      }
LABEL_7:
      sub_24B3E39F4(&v27, 0x14uLL);
      char v29 = 20;
      int v7 = v5[23];
      if (v7 >= 0) {
        uint64_t v8 = v5;
      }
      else {
        uint64_t v8 = *(char **)v5;
      }
      if (v7 >= 0) {
        size_t v9 = v5[23];
      }
      else {
        size_t v9 = *((void *)v5 + 1);
      }
      unint64_t v20 = 0;
      uint64_t v21 = 0;
      std::string __p = 0;
      sub_24B4AEBB8((char *)&__p, v8, &v8[v9], v9);
      sub_24B4ADC8C((uint64_t)&v27, (char **)&__p, &v30);
      if (__p)
      {
        unint64_t v20 = __p;
        operator delete(__p);
      }
      if (v27)
      {
        int v28 = v27;
        operator delete(v27);
      }
      goto LABEL_23;
    }
    return -1;
  }
  if (!*((unsigned char *)__src + 23)) {
    return -1;
  }
  if (v6 >= 0x41) {
    goto LABEL_7;
  }
LABEL_19:
  sub_24B4AEC2C(&v30, v5, &v5[v6], v6);
  uint64_t v11 = v31 - v30;
  if ((unint64_t)(v31 - v30) > 0x3F)
  {
    if (v11 != 64) {
      int v31 = v30 + 64;
    }
  }
  else
  {
    sub_24B3E3AC4((unint64_t *)&v30, 64 - v11);
  }
LABEL_23:
  sub_24B3E39F4(&v25, 0x40uLL);
  for (uint64_t i = 0; i != 64; ++i)
    *((unsigned char *)v25 + i) = v30[i] ^ 0x36;
  sub_24B4A6444((uint64_t)&v25, (char *)__dst, *a2, a2[1], a2[1] - *a2);
  sub_24B3E39F4(&v27, 0x14uLL);
  char v29 = 20;
  sub_24B3E39F4(&v23, 0x14uLL);
  sub_24B4ADC8C((uint64_t)&v27, (char **)&v25, &v23);
  sub_24B3E39F4(&__p, 0x14uLL);
  unsigned __int8 v22 = 20;
  sub_24B3E39F4(&v17, 0x40uLL);
  for (uint64_t j = 0; j != 64; ++j)
    *((unsigned char *)v17 + j) = v30[j] ^ 0x5C;
  sub_24B4AED58((uint64_t)&v17, (char *)v18, (char *)v23, v24, v24 - (unsigned char *)v23);
  sub_24B3E39F4(&v15, v22);
  sub_24B4ADC8C((uint64_t)&__p, (char **)&v17, &v15);
  if (&v15 != a3) {
    sub_24B3EAC0C(a3, (char *)v15, v16, v16 - (unsigned char *)v15);
  }
  if (v15)
  {
    int v16 = (char *)v15;
    operator delete(v15);
  }
  if (v17)
  {
    uint64_t v18 = v17;
    operator delete(v17);
  }
  if (__p)
  {
    unint64_t v20 = __p;
    operator delete(__p);
  }
  if (v23)
  {
    int v24 = (char *)v23;
    operator delete(v23);
  }
  if (v27)
  {
    int v28 = v27;
    operator delete(v27);
  }
  if (v25)
  {
    __dst = v25;
    operator delete(v25);
  }
  if (v30)
  {
    int v31 = v30;
    operator delete(v30);
  }
  return 0;
}

void sub_24B4AE6A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  if (__p) {
    operator delete(__p);
  }
  int v26 = *(void **)(v24 - 88);
  if (v26)
  {
    *(void *)(v24 - 80) = v26;
    operator delete(v26);
  }
  int v27 = *(void **)(v24 - 56);
  if (v27)
  {
    *(void *)(v24 - 48) = v27;
    operator delete(v27);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B4AE790(void **__src, char **a2, void **a3)
{
  unsigned __int8 v5 = (char *)__src;
  int v30 = 0;
  int v31 = 0;
  uint64_t v32 = 0;
  unint64_t v6 = *((unsigned __int8 *)__src + 23);
  if ((v6 & 0x80) != 0)
  {
    unint64_t v6 = (unint64_t)__src[1];
    if (v6 - 1 < 0x100)
    {
      if (v6 <= 0x40)
      {
        unsigned __int8 v5 = (char *)*__src;
        goto LABEL_19;
      }
LABEL_7:
      sub_24B3E39F4(&v27, 0x20uLL);
      char v29 = 32;
      int v7 = v5[23];
      if (v7 >= 0) {
        uint64_t v8 = v5;
      }
      else {
        uint64_t v8 = *(char **)v5;
      }
      if (v7 >= 0) {
        size_t v9 = v5[23];
      }
      else {
        size_t v9 = *((void *)v5 + 1);
      }
      unint64_t v20 = 0;
      uint64_t v21 = 0;
      std::string __p = 0;
      sub_24B4AEBB8((char *)&__p, v8, &v8[v9], v9);
      sub_24B4AE050((uint64_t)&v27, (char **)&__p, &v30);
      if (__p)
      {
        unint64_t v20 = __p;
        operator delete(__p);
      }
      if (v27)
      {
        int v28 = v27;
        operator delete(v27);
      }
      goto LABEL_23;
    }
    return -1;
  }
  if (!*((unsigned char *)__src + 23)) {
    return -1;
  }
  if (v6 >= 0x41) {
    goto LABEL_7;
  }
LABEL_19:
  sub_24B4AEC2C(&v30, v5, &v5[v6], v6);
  uint64_t v11 = v31 - v30;
  if ((unint64_t)(v31 - v30) > 0x3F)
  {
    if (v11 != 64) {
      int v31 = v30 + 64;
    }
  }
  else
  {
    sub_24B3E3AC4((unint64_t *)&v30, 64 - v11);
  }
LABEL_23:
  sub_24B3E39F4(&v25, 0x40uLL);
  for (uint64_t i = 0; i != 64; ++i)
    *((unsigned char *)v25 + i) = v30[i] ^ 0x36;
  sub_24B4A6444((uint64_t)&v25, (char *)__dst, *a2, a2[1], a2[1] - *a2);
  sub_24B3E39F4(&v27, 0x20uLL);
  char v29 = 32;
  sub_24B3E39F4(&v23, 0x20uLL);
  sub_24B4AE050((uint64_t)&v27, (char **)&v25, &v23);
  sub_24B3E39F4(&__p, 0x20uLL);
  unsigned __int8 v22 = 32;
  sub_24B3E39F4(&v17, 0x40uLL);
  for (uint64_t j = 0; j != 64; ++j)
    *((unsigned char *)v17 + j) = v30[j] ^ 0x5C;
  sub_24B4AED58((uint64_t)&v17, (char *)v18, (char *)v23, v24, v24 - (unsigned char *)v23);
  sub_24B3E39F4(&v15, v22);
  sub_24B4AE050((uint64_t)&__p, (char **)&v17, &v15);
  if (&v15 != a3) {
    sub_24B3EAC0C(a3, (char *)v15, v16, v16 - (unsigned char *)v15);
  }
  if (v15)
  {
    int v16 = (char *)v15;
    operator delete(v15);
  }
  if (v17)
  {
    uint64_t v18 = v17;
    operator delete(v17);
  }
  if (__p)
  {
    unint64_t v20 = __p;
    operator delete(__p);
  }
  if (v23)
  {
    uint64_t v24 = (char *)v23;
    operator delete(v23);
  }
  if (v27)
  {
    int v28 = v27;
    operator delete(v27);
  }
  if (v25)
  {
    __dst = v25;
    operator delete(v25);
  }
  if (v30)
  {
    int v31 = v30;
    operator delete(v30);
  }
  return 0;
}

void sub_24B4AEA48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  if (__p) {
    operator delete(__p);
  }
  int v26 = *(void **)(v24 - 88);
  if (v26)
  {
    *(void *)(v24 - 80) = v26;
    operator delete(v26);
  }
  int v27 = *(void **)(v24 - 56);
  if (v27)
  {
    *(void *)(v24 - 48) = v27;
    operator delete(v27);
  }
  _Unwind_Resume(exception_object);
}

char *sub_24B4AEB34(void *a1, const void *a2, uint64_t a3)
{
  BOOL result = (char *)operator new(0x40uLL);
  int v7 = result;
  *a1 = result;
  a1[1] = result;
  a1[2] = result + 64;
  size_t v8 = a3 - (void)a2;
  if (v8) {
    BOOL result = (char *)memmove(result, a2, v8);
  }
  a1[1] = &v7[v8];
  return result;
}

void sub_24B4AEB9C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_24B4AEBB8(char *result, char *a2, char *a3, size_t __sz)
{
  if (__sz)
  {
    unint64_t v6 = result;
    BOOL result = sub_24B3E3A68(result, __sz);
    int v7 = (unsigned char *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      char v8 = *a2++;
      *v7++ = v8;
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_24B4AEC10(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_24B4AEC2C(void *result, char *__src, char *a3, unint64_t a4)
{
  unint64_t v6 = __src;
  int v7 = result;
  unint64_t v8 = result[2];
  size_t v9 = (unsigned char *)*result;
  if (v8 - *result >= a4)
  {
    uint64_t v14 = (unsigned char *)result[1];
    if (v14 - v9 >= a4)
    {
      size_t v18 = a3 - __src;
      if (a3 != __src) {
        BOOL result = memmove((void *)*result, __src, v18);
      }
      uint64_t v12 = &v9[v18];
    }
    else
    {
      uint64_t v15 = &__src[v14 - v9];
      if (v14 != v9)
      {
        BOOL result = memmove((void *)*result, __src, v14 - v9);
        size_t v9 = (unsigned char *)v7[1];
      }
      uint64_t v12 = v9;
      if (v15 != a3)
      {
        uint64_t v12 = v9;
        int v16 = v9;
        do
        {
          char v17 = *v15++;
          *v16++ = v17;
          ++v12;
        }
        while (v15 != a3);
      }
    }
  }
  else
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      unint64_t v8 = 0;
      *int v7 = 0;
      v7[1] = 0;
      _DWORD v7[2] = 0;
    }
    uint64_t v10 = 2 * v8;
    if (2 * v8 <= a4) {
      uint64_t v10 = a4;
    }
    if (v8 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v11 = v10;
    }
    BOOL result = sub_24B3E3A68(v7, v11);
    uint64_t v12 = (unsigned char *)v7[1];
    while (v6 != a3)
    {
      char v13 = *v6++;
      *v12++ = v13;
    }
  }
  v7[1] = v12;
  return result;
}

void sub_24B4AED58(uint64_t a1, char *__dst, char *__src, char *a4, uint64_t a5)
{
  if (a5 < 1) {
    return;
  }
  uint64_t v5 = a5;
  unint64_t v6 = __src;
  uint64_t v10 = *(unsigned char **)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9 - (uint64_t)v10 < a5)
  {
    size_t v11 = *(char **)a1;
    uint64_t v12 = (uint64_t)&v10[a5 - *(void *)a1];
    if (v12 < 0) {
      sub_24B3E3AAC();
    }
    char v13 = (char *)(__dst - v11);
    unint64_t v14 = v9 - (void)v11;
    if (2 * v14 > v12) {
      uint64_t v12 = 2 * v14;
    }
    if (v14 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v15 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v15 = v12;
    }
    if (v15) {
      int v16 = operator new(v15);
    }
    else {
      int v16 = 0;
    }
    int v26 = &v13[(void)v16];
    int v27 = &v13[(void)v16 + v5];
    int v28 = v26;
    do
    {
      char v29 = *v6++;
      *v28++ = v29;
      --v5;
    }
    while (v5);
    int v30 = *(char **)a1;
    if (*(char **)a1 != __dst)
    {
      int v31 = __dst;
      do
      {
        char v32 = *--v31;
        *--int v26 = v32;
      }
      while (v31 != v30);
      uint64_t v10 = *(unsigned char **)(a1 + 8);
    }
    unsigned int v33 = (char *)v16 + v15;
    if (v10 != __dst) {
      memmove(v27, __dst, v10 - __dst);
    }
    unsigned int v34 = *(char **)a1;
    *(void *)a1 = v26;
    *(void *)(a1 + 8) = &v27[v10 - __dst];
    *(void *)(a1 + 16) = v33;
    if (v34)
    {
      operator delete(v34);
    }
    return;
  }
  uint64_t v17 = v10 - __dst;
  if (v10 - __dst >= a5)
  {
    size_t v18 = &__src[a5];
    unint64_t v20 = *(unsigned char **)(a1 + 8);
LABEL_17:
    uint64_t v21 = &__dst[v5];
    unsigned __int8 v22 = &v20[-v5];
    unsigned int v23 = v20;
    if (&v20[-v5] < v10)
    {
      uint64_t v24 = (char *)(&v10[v5] - v20);
      unsigned int v23 = v20;
      do
      {
        char v25 = *v22++;
        *v23++ = v25;
        --v24;
      }
      while (v24);
    }
    *(void *)(a1 + 8) = v23;
    if (v20 != v21) {
      memmove(&__dst[v5], __dst, v20 - v21);
    }
    if (v18 != v6)
    {
      memmove(__dst, v6, v18 - v6);
    }
    return;
  }
  size_t v18 = &__src[v17];
  int64_t v19 = a4 - &__src[v17];
  if (a4 != &__src[v17]) {
    memmove(*(void **)(a1 + 8), &__src[v17], a4 - &__src[v17]);
  }
  unint64_t v20 = &v10[v19];
  *(void *)(a1 + 8) = &v10[v19];
  if (v17 >= 1) {
    goto LABEL_17;
  }
}

uint64_t sub_24B4AEF68()
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  if (qword_26B17C428 != -1) {
    dispatch_once(&qword_26B17C428, &unk_26FE86328);
  }
  uint64_t result = qword_26B17C420;
  if (!qword_26B17C420)
  {
    uint64_t v1 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v2 = 136315138;
      uint64_t v3 = "GetInstance";
      _os_log_error_impl(&dword_24B3DE000, v1, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v2, 0xCu);
    }
    __assert_rtn("GetInstance", "LcsUtils.cpp", 63, "false && \"Memory allocation failure\"");
  }
  return result;
}

void *sub_24B4AF060()
{
  uint64_t result = operator new(1uLL, MEMORY[0x263F8C180]);
  qword_26B17C420 = (uint64_t)result;
  return result;
}

uint64_t sub_24B4AF08C(uint64_t a1, int a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  uint64_t v2 = (a2 + 0xFFFF);
  uint64_t v3 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_INFO))
  {
    v5[0] = 67109120;
    v5[1] = v2;
    _os_log_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_INFO, "GenerateReqIdForSessionTimer  New sessionTimerrquestID[%d] is generated", (uint8_t *)v5, 8u);
  }
  return v2;
}

uint64_t sub_24B4AF134(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (*(unsigned char *)(v2 + 752)) {
    sub_24B4A10C0(v2, 9);
  }
  if (!*(unsigned char *)(v2 + 803))
  {
    free(*(void **)(v2 + 760));
    uint64_t v2 = *a1;
  }
  free((void *)v2);
  *a1 = 0;
  return 0;
}

uint64_t sub_24B4AF188(uint64_t *a1, uint64_t *a2)
{
  if (!a2) {
    return 6;
  }
  uint64_t v4 = malloc_type_calloc(1uLL, 0x3C0uLL, 0x10F0040998F192CuLL);
  bzero(v4 + 2, 0x3BCuLL);
  uint64_t result = 0;
  *a1 = (uint64_t)v4;
  *(_DWORD *)uint64_t v4 = 0;
  v4[361] = -1;
  *((void *)v4 + 91) = 0;
  *(void *)(*a1 + 736) = 0;
  *(void *)(*a1 + 744) = 0;
  uint64_t v6 = *a1;
  *(unsigned char *)(v6 + 752) = 0;
  *(void *)(v6 + 824) = 2080;
  *(void *)(v6 + 832) = 0;
  *(void *)(v6 + 880) = 0;
  *(void *)(*a1 + 944) = 0;
  uint64_t v7 = *a1;
  *(unsigned char *)(v7 + 888) = 0;
  *(void *)(v7 + 896) = 0;
  uint64_t v8 = *a1;
  *(_WORD *)(v8 + 906) = 0;
  *(unsigned char *)(v8 + 904) = 0;
  *(unsigned char *)(v8 + 928) = 0;
  *(void *)(v8 + 936) = 0;
  *(void *)(*a1 + 936) = 0;
  uint64_t v9 = *a1;
  uint64_t v10 = *a1 + 736;
  *(_OWORD *)(v10 + 56) = xmmword_24B4BFF30;
  *(_OWORD *)(v10 + 40) = unk_24B4BFF20;
  *(_OWORD *)(v10 + 24) = xmmword_24B4BFF10;
  uint64_t v11 = *a2;
  *(void *)(v9 + 768) = *a2 + a2[1];
  *(void *)(v10 + 24) = v11;
  *(void *)(v10 + 56) = v11;
  *(void *)(v10 + 40) = v11;
  *(void *)(v9 + 784) = v11 + a2[2];
  *(unsigned char *)(v9 + 803) = 1;
  return result;
}

char *sub_24B4AF2B0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 803)) {
    sub_24B4A10C0(a1, 7);
  }
  size_t v3 = *(void *)(a1 + 768) - *(void *)(a1 + 760) + a2;
  uint64_t v4 = (char *)malloc_type_calloc(1uLL, v3, 0x30938752uLL);
  bzero(v4, v3);
  if (!v4) {
    sub_24B4A10C0(a1, 1);
  }
  memcpy(v4, *(const void **)(a1 + 760), *(void *)(a1 + 768) - *(void *)(a1 + 760));
  uint64_t v5 = *(void **)(a1 + 760);
  *(void *)(a1 + 776) = &v4[*(void *)(a1 + 776) - (void)v5];
  *(void *)(a1 + 784) = &v4[*(void *)(a1 + 784) - (void)v5];
  *(void *)(a1 + 792) = &v4[*(void *)(a1 + 792) - (void)v5];
  free(v5);
  *(void *)(a1 + 760) = v4;
  *(void *)(a1 + 768) = &v4[v3];
  return v4;
}

uint64_t sub_24B4AF388(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 752)) {
    sub_24B4A10C0(a1, 8);
  }
  uint64_t v1 = *(void *)(a1 + 760);
  *(void *)(a1 + 776) = v1;
  *(void *)(a1 + 784) = v1;
  *(void *)(a1 + 792) = v1;
  *(_WORD *)(a1 + 800) = 1799;
  *(unsigned char *)(a1 + 802) = 7;
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 752) = 2;
  return 0;
}

uint64_t sub_24B4AF3DC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 752)) {
    sub_24B4A10C0(a1, 8);
  }
  *(void *)(a1 + 792) = *(void *)(a1 + 776);
  *(unsigned char *)(a1 + 802) = *(unsigned char *)(a1 + 800);
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 752) = 1;
  return 0;
}

uint64_t sub_24B4AF420(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 752) != 1) {
    sub_24B4A10C0(a1, 11);
  }
  if (!a2) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 802) != 7) {
    sub_24B4A10C0(a1, 15);
  }
  uint64_t result = *(void *)(a1 + 792);
  uint64_t v5 = *(void *)(a1 + 784) - result;
  if (a2 > v5)
  {
    uint64_t v6 = *(void (**)(uint64_t, void))(a1 + 736);
    if (v6)
    {
      v6(a1, (a2 - v5));
      uint64_t result = *(void *)(a1 + 792);
      uint64_t v5 = *(void *)(a1 + 784) - result;
    }
    if (*(unsigned char *)(a1 + 801) != 7) {
      ++v5;
    }
    if (v5 < a2) {
      sub_24B4A10C0(a1, 12);
    }
  }
  *(void *)(a1 + 792) = result + a2;
  return result;
}

uint64_t sub_24B4AF4F4(unsigned int *a1, void *a2)
{
  bzero(a2, 0xA28uLL);
  return sub_24B48E834(a1, byte_2652DCF70, (uint64_t)a2);
}

uint64_t sub_24B4AF544(unsigned int *a1, _DWORD *a2)
{
  *a2 = 0;
  return sub_24B48E834(a1, byte_2652D5450, (uint64_t)a2);
}

uint64_t sub_24B4AF558(unsigned int *a1, void *a2)
{
  *a2 = 0;
  a2[1] = 0;
  return sub_24B48E834(a1, byte_2652D4DA0, (uint64_t)a2);
}

uint64_t sub_24B4AF56C(unsigned int *a1, __int16 *a2)
{
  return sub_24B48C6A4(a1, byte_2652DCF70, a2);
}

uint64_t sub_24B4AF57C(unsigned int a1, unsigned int a2, uint64_t a3, unsigned int a4, uint64_t a5, int *a6, uint64_t a7, void **a8, uint64_t a9)
{
  if (a8)
  {
    unint64_t v14 = *a8;
    if (*a8)
    {
      if (!*v14 || !v14[1] || !v14[2]) {
        return 15;
      }
    }
  }
  uint64_t v23 = 0;
  v24[0] = a3;
  v24[1] = a4;
  v24[2] = a4;
  sub_24B4AF188(&v23, v24);
  uint64_t v15 = v23;
  *(void *)(v23 + 944) = a8;
  v24[0] = v15;
  sub_24B4AF3DC(v15);
  if (a1 == 13) {
    goto LABEL_9;
  }
  *(void *)(v15 + 824) = 2064;
  if (a1 > 0x1D) {
    goto LABEL_21;
  }
  if (((1 << a1) & 0x24000023) == 0)
  {
    if (a1 == 4)
    {
      if (a2 > 7) {
        goto LABEL_9;
      }
      if (byte_2697C5528)
      {
        uint64_t v18 = 0;
        int64_t v19 = byte_26FE86348;
        uint64_t v16 = 15;
        while (1)
        {
          int v20 = *v19;
          v19 += 16;
          if (v20 == a2) {
            break;
          }
          if (byte_2697C5528 == ++v18) {
            goto LABEL_10;
          }
        }
      }
      else
      {
        LODWORD(v18) = 0;
      }
      if (v18 == byte_2697C5528) {
        goto LABEL_9;
      }
      unsigned __int8 v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))&byte_26FE86348[16 * v18 + 8];
      if (!v22) {
        goto LABEL_9;
      }
      uint64_t v16 = v22(v15, a5, a9);
      if (!a6) {
        goto LABEL_10;
      }
      int v21 = *(unsigned __int8 *)(v15 + 800)
          - *(unsigned __int8 *)(v15 + 802)
          + 8 * (*(_DWORD *)(v15 + 792) - *(_DWORD *)(v15 + 776));
LABEL_23:
      *a6 = v21;
      goto LABEL_10;
    }
LABEL_21:
    uint64_t v16 = 15;
    if (!a6) {
      goto LABEL_10;
    }
    int v21 = 0;
    goto LABEL_23;
  }
LABEL_9:
  uint64_t v16 = 15;
LABEL_10:
  if (*(unsigned char *)(v15 + 752) != 1) {
    sub_24B4A10C0(v15, 10);
  }
  *(unsigned char *)(v15 + 752) = 0;
  sub_24B4AF134(v24);
  return v16;
}

uint64_t sub_24B4AF72C(int a1, unsigned int a2, uint64_t *a3, _DWORD *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a6) {
    return 15;
  }
  *a3 = 0;
  if (a5) {
    *a5 = 0;
  }
  if (a4) {
    *a4 = 0;
  }
  if (a1 != 4) {
    return 15;
  }
  uint64_t v28 = 0;
  char v29 = &unk_2697C5630;
  int64x2_t v30 = vdupq_n_s64(0x1000uLL);
  sub_24B4AF188(&v28, (uint64_t *)&v29);
  uint64_t v14 = v28;
  *(void *)(v28 + 944) = 0;
  char v29 = (void *)v14;
  sub_24B4AF388(v14);
  if (a2 >= 8)
  {
    if (*(unsigned char *)(v14 + 752) == 2)
    {
      int64_t v19 = (unsigned char *)(v14 + 752);
      uint64_t v18 = 15;
LABEL_35:
      *int64_t v19 = 0;
LABEL_36:
      sub_24B4AF134((uint64_t *)&v29);
      return v18;
    }
LABEL_38:
    sub_24B4A10C0(v14, 10);
  }
  if (byte_2697C5529)
  {
    uint64_t v15 = 0;
    uint64_t v16 = byte_26FE86378;
    while (1)
    {
      int v17 = *v16;
      v16 += 16;
      if (v17 == a2) {
        break;
      }
      if (byte_2697C5529 == ++v15) {
        goto LABEL_21;
      }
    }
  }
  else
  {
    LODWORD(v15) = 0;
  }
  if (v15 != byte_2697C5529)
  {
    int v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))&byte_26FE86378[16 * v15 + 8];
    if (v20)
    {
      uint64_t v18 = v20(v14, a6, a8);
      if (!v14) {
        return v18;
      }
      goto LABEL_22;
    }
  }
LABEL_21:
  uint64_t v18 = 15;
  if (v14)
  {
LABEL_22:
    if (*(unsigned char *)(v14 + 752) == 2)
    {
      int64_t v19 = (unsigned char *)(v14 + 752);
      *(unsigned char *)(v14 + 752) = 0;
      if (!a5 || v18) {
        goto LABEL_36;
      }
      sub_24B4AF3DC(v14);
      uint64_t v21 = *(void *)(v14 + 784);
      uint64_t v22 = *(void *)(v14 + 776);
      if (a4)
      {
        int v23 = v21 - v22;
        unsigned int v24 = *(unsigned __int8 *)(v14 + 800);
        unsigned int v25 = *(unsigned __int8 *)(v14 + 801);
        *a4 = v24 - v25 + 8 * v23;
      }
      else
      {
        unsigned int v24 = *(unsigned __int8 *)(v14 + 800);
        unsigned int v25 = *(unsigned __int8 *)(v14 + 801);
        int v23 = v21 - v22;
      }
      if (v24 > v25) {
        ++v23;
      }
      *a5 = v23;
      uint64_t v26 = sub_24B4AF420(v14, v23);
      if (*a5 && v26) {
        *a3 = v26;
      }
      if (*v19 == 1)
      {
        uint64_t v18 = 0;
        goto LABEL_35;
      }
    }
    goto LABEL_38;
  }
  return v18;
}

uint64_t sub_24B4AF924()
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  if (qword_26B17C438 != -1) {
    dispatch_once(&qword_26B17C438, &unk_26FE86388);
  }
  uint64_t result = qword_26B17C430;
  if (!qword_26B17C430)
  {
    uint64_t v1 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v2 = 136315138;
      size_t v3 = "GetInstance";
      _os_log_error_impl(&dword_24B3DE000, v1, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v2, 0xCu);
    }
    __assert_rtn("GetInstance", "SimUtils.cpp", 50, "false && \"Memory allocation failure\"");
  }
  return result;
}

void *sub_24B4AFA1C()
{
  uint64_t result = operator new(0x18uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    *(_DWORD *)uint64_t result = 0;
    result[1] = 0;
    result[2] = 0;
  }
  qword_26B17C430 = (uint64_t)result;
  return result;
}

char *sub_24B4AFA54(uint64_t a1, int a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    unsigned int v5 = 0;
    uint64_t v6 = *(void *)(a1 + 16);
    do
    {
      ++v5;
      uint64_t v6 = *(void *)(v6 + 8);
    }
    while (v6);
    if (v5 >= 3)
    {
      uint64_t v7 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        __int16 v14 = 0;
        uint64_t v8 = "No slots available for storing SimId";
        uint64_t v9 = (uint8_t *)&v14;
LABEL_17:
        _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, v8, v9, 2u);
        return 0;
      }
      return 0;
    }
  }
  uint64_t result = (char *)operator new(0x100uLL, MEMORY[0x263F8C180]);
  if (!result)
  {
    uint64_t v7 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      __int16 v13 = 0;
      uint64_t v8 = "NULL Data";
      uint64_t v9 = (uint8_t *)&v13;
      goto LABEL_17;
    }
    return 0;
  }
  *((_OWORD *)result + 4) = 0u;
  *((_OWORD *)result + 5) = 0u;
  *((_OWORD *)result + 12) = 0u;
  *((_OWORD *)result + 13) = 0u;
  *((_OWORD *)result + 10) = 0u;
  *((_OWORD *)result + 11) = 0u;
  *((_OWORD *)result + 8) = 0u;
  *((_OWORD *)result + 9) = 0u;
  *((_OWORD *)result + 6) = 0u;
  *((_OWORD *)result + 7) = 0u;
  *((_OWORD *)result + 2) = 0u;
  *((_OWORD *)result + 3) = 0u;
  *(_OWORD *)uint64_t result = 0u;
  *((_OWORD *)result + 1) = 0u;
  *((_WORD *)result + 24) = 7275;
  *((_DWORD *)result + 16) = 0;
  *((_DWORD *)result + 18) = -1;
  *(void *)(result + 97) = 0;
  *(void *)(result + 92) = 0;
  *(void *)(result + 84) = 0;
  *(void *)(result + 76) = 0;
  *((_DWORD *)result + 29) = 0;
  *(void *)(result + 124) = -1;
  *((_WORD *)result + 72) = 0;
  *((_WORD *)result + 74) = -1;
  *((void *)result + 20) = 0;
  *((void *)result + 21) = 0;
  *(void *)(result + 174) = 0;
  *((void *)result + 19) = 0;
  *((void *)result + 23) = 0;
  *((void *)result + 24) = 0;
  *((void *)result + 25) = 0;
  result[208] = 1;
  *((void *)result + 28) = 0;
  *((void *)result + 29) = 0;
  *((_WORD *)result + 112) = -1;
  *((void *)result + 30) = 0;
  *((void *)result + 31) = 0;
  uint64_t v11 = v4;
  *(_DWORD *)uint64_t result = a2;
  while (v11)
  {
    uint64_t v12 = v11;
    uint64_t v11 = *(void *)(v11 + 8);
    if (!v11)
    {
      *(void *)(v12 + 8) = result;
      *((void *)result + 1) = 0;
      return result;
    }
  }
  *((void *)result + 1) = v4;
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24B4AFBF0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = *(char **)(a1 + 16);
  if (v4)
  {
    while (*(_DWORD *)v4 != a2)
    {
      uint64_t v4 = (char *)*((void *)v4 + 1);
      if (!v4) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    uint64_t v4 = sub_24B4AFA54(a1, a2);
    if (!v4) {
      return -1;
    }
  }
  v4[16] = *(unsigned char *)a3;
  std::string::operator=((std::string *)v4 + 1, (const std::string *)(a3 + 8));
  __int16 v5 = 0;
  *((_WORD *)v4 + 24) = *(_WORD *)(a3 + 32);
  return v5;
}

uint64_t sub_24B4AFC64(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_15:
    uint64_t v8 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      v10[0] = 67109120;
      v10[1] = 515;
      _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "#gpsd #supl Error code %d", (uint8_t *)v10, 8u);
    }
    return -1;
  }
  while (*(_DWORD *)v4 != a4)
  {
    uint64_t v4 = *(void *)(v4 + 8);
    if (!v4) {
      goto LABEL_15;
    }
  }
  memset(&__p, 0, sizeof(__p));
  __int16 v12 = 7275;
  LOBYTE(v10[0]) = *(unsigned char *)(v4 + 16);
  std::string::operator=(&__p, (const std::string *)(v4 + 24));
  __int16 v12 = *(_WORD *)(v4 + 48);
  if (!LOBYTE(v10[0])
    || ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
      ? (std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]))
      : (std::string::size_type size = __p.__r_.__value_.__l.__size_),
        !size))
  {
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    goto LABEL_15;
  }
  *(unsigned char *)a2 = v10[0];
  std::string::operator=((std::string *)(a2 + 8), &__p);
  *(_WORD *)(a2 + 32) = v12;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_24B4AFDCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B4AFDE8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    while (*(_DWORD *)v4 != a2)
    {
      uint64_t v4 = *(void *)(v4 + 8);
      if (!v4) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    uint64_t result = (uint64_t)sub_24B4AFA54(a1, a2);
    uint64_t v4 = result;
    if (!result) {
      return result;
    }
  }
  sub_24B49B6F8(v4 + 56, a3);
  uint64_t result = mach_continuous_time();
  *(_DWORD *)(v4 + 216) = 0;
  return result;
}

BOOL sub_24B4AFE44(uint64_t a1, int a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  while (*(_DWORD *)v2 != a2)
  {
    uint64_t v2 = *(void *)(v2 + 8);
    if (!v2) {
      return 0;
    }
  }
  return *(unsigned char *)(v2 + 56) == 4 && (size_t v3 = *(_WORD **)(v2 + 200)) != 0 && *v3 == 3;
}

uint64_t sub_24B4AFE94(uint64_t a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a1 + 56))
  {
    uint64_t v11 = qword_26B17C498;
    BOOL v12 = os_log_type_enabled((os_log_t)qword_26B17C498, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v12) {
      return result;
    }
    LOWORD(v13[0]) = 0;
    uint64_t v8 = "CellInfo";
    uint64_t v9 = v11;
    uint32_t v10 = 2;
    goto LABEL_7;
  }
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  LODWORD(v3) = *(_DWORD *)(a1 + 216);
  unsigned int v4 = -((double)v3 - Current * 1000.0);
  if (v4 >= 0x1389)
  {
    uint64_t v5 = qword_26B17C498;
    BOOL v6 = os_log_type_enabled((os_log_t)qword_26B17C498, OS_LOG_TYPE_DEFAULT);
    uint64_t result = 0;
    if (!v6) {
      return result;
    }
    v13[0] = 67109120;
    v13[1] = v4;
    uint64_t v8 = "time diff is greater than 5000 millisecs value,%d";
    uint64_t v9 = v5;
    uint32_t v10 = 8;
LABEL_7:
    _os_log_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)v13, v10);
    return 0;
  }
  return 1;
}

char *sub_24B4AFFC0(char *result, int a2, uint64_t a3)
{
  uint64_t v4 = *((void *)result + 2);
  if (!v4)
  {
LABEL_4:
    uint64_t result = sub_24B4AFA54((uint64_t)result, a2);
    if (!result) {
      return result;
    }
    *((_WORD *)result + 112) = *(_WORD *)a3;
    if (result + 224 == (char *)a3) {
      return result;
    }
    uint64_t v5 = result + 232;
    goto LABEL_9;
  }
  while (*(_DWORD *)v4 != a2)
  {
    uint64_t v4 = *(void *)(v4 + 8);
    if (!v4) {
      goto LABEL_4;
    }
  }
  *(_WORD *)(v4 + 224) = *(_WORD *)a3;
  if (v4 + 224 != a3)
  {
    uint64_t v5 = (void *)(v4 + 232);
LABEL_9:
    BOOL v6 = *(char **)(a3 + 8);
    uint64_t v7 = *(char **)(a3 + 16);
    return (char *)sub_24B3EAC0C(v5, v6, v7, v7 - v6);
  }
  return result;
}

void *sub_24B4B005C(void *result, int a2, uint64_t a3)
{
  uint64_t v3 = result[2];
  if (v3)
  {
    while (*(_DWORD *)v3 != a2)
    {
      uint64_t v3 = *(void *)(v3 + 8);
      if (!v3) {
        return result;
      }
    }
    *(_WORD *)a3 = *(_WORD *)(v3 + 224);
    if (v3 + 224 != a3) {
      return sub_24B3EAC0C((void *)(a3 + 8), *(char **)(v3 + 232), *(char **)(v3 + 240), *(void *)(v3 + 240) - *(void *)(v3 + 232));
    }
  }
  return result;
}

void sub_24B4B00A4(uint64_t a1, char *a2)
{
  sub_24B3E3128(&__p, "NULLFileName");
  if (a2)
  {
    sub_24B3E3128(&__str, a2);
    p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_str = &__str;
    }
    std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __str.__r_.__value_.__l.__size_;
    }
    uint64_t v5 = (char *)&p_str[-1].__r_.__value_.__r.__words[2] + 7;
    do
    {
      if (!size) {
        goto LABEL_14;
      }
      int v6 = v5[size--];
    }
    while (v6 != 92 && v6 != 47);
    if (size == -1)
    {
LABEL_14:
      std::string::operator=(&__p, &__str);
      goto LABEL_15;
    }
    std::string::basic_string(&v7, &__str, size + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v10);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = v7;
LABEL_15:
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_24B4B0198(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B4B01D0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2) {
    BOOL v3 = v2 == a2;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    if (v2)
    {
      *(void *)(result + 16) = *(void *)(v2 + 8);
      *(void *)(v2 + 8) = 0;
    }
  }
  else
  {
    do
    {
      uint64_t v4 = v2;
      uint64_t v2 = *(void *)(v2 + 8);
      if (v2) {
        BOOL v5 = v2 == a2;
      }
      else {
        BOOL v5 = 1;
      }
    }
    while (!v5);
    if (v2) {
      *(void *)(v4 + 8) = *(void *)(v2 + 8);
    }
  }
  if (a2) {
    *(void *)(a2 + 8) = 0;
  }
  return result;
}

void sub_24B4B0220(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8) - *(_DWORD *)a1;
  BOOL v3 = sub_24B49ED24("SuplLppExecutePosReq", 28, 1, v2);
  unsigned int v4 = *(_DWORD *)(a1 + 8) - *(void *)a1;
  sub_24B49EEAC((uint64_t)"SuplLppExecutePosReq", 30, v3, v4, *(void **)a1, v4);
  BOOL v5 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int v6 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_DEBUG, "#posp,#lpp, Calling lpp_t_supl_pos_trigger", v6, 2u);
  }
  sub_24B47CB4C((uint64_t)v3, v2);
  sub_24B47FF00((uint64_t)off_2697C5530, *(_DWORD *)(a1 + 28), *(unsigned char *)(a1 + 32), v2, v3);
  if (v3) {
    MEMORY[0x24C5D2700](v3, 0x1000C4077774924);
  }
}

void sub_24B4B0330(int a1, uint64_t a2, void *a3)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  BOOL v5 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp AID_RQD_MSG  ", buf, 2u);
  }
  *(void *)uint64_t buf = 0x8000000080000000;
  *(void *)&uint8_t buf[8] = 0xFFFF00007FFFFFFFLL;
  *(_WORD *)uint64_t v11 = 255;
  *(_WORD *)&char v11[8] = -1;
  v11[10] = -1;
  *(_DWORD *)&void v11[2] = -1;
  v11[6] = -1;
  memset(&v11[11], 0, 32);
  sub_24B49EEAC((uint64_t)"SuplLppExecuteAidRequest", 68, buf, 0x3Cu, a3, 0x3CuLL);
  v8[0] = *(_OWORD *)buf;
  v8[1] = *(_OWORD *)v11;
  v9[0] = *(_OWORD *)&v11[16];
  *(_OWORD *)((char *)v9 + 12) = *(_OWORD *)&v11[28];
  memset(v7, 0, sizeof(v7));
  memset(v6, 0, sizeof(v6));
  sub_24B480590((uint64_t)off_2697C5530, v8, v7, 1, 0x100000002, a1, (uint64_t)v6);
}

void sub_24B4B0488(int a1, int a2, uint64_t a3)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  sub_24B3E3128(__p, "SuplLppExecutePosRsp");
  int v6 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v15 = __p;
    if (SBYTE3(v20) < 0) {
      uint64_t v15 = *(unsigned char **)__p;
    }
    int v17 = 136315138;
    uint64_t v18 = v15;
    _os_log_debug_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Entered %s", (uint8_t *)&v17, 0xCu);
  }
  if (SBYTE3(v20) < 0) {
    operator delete(*(void **)__p);
  }
  std::string v7 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string __p = 67109120;
    *(_DWORD *)&__p[4] = a2;
    _os_log_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEFAULT, "LPP Sub Msg Type,%u", __p, 8u);
  }
  if ((a2 & 0xFFFFFFFD) != 0)
  {
    uint64_t v8 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string __p = 0;
      _os_log_error_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_ERROR, "LPP message", __p, 2u);
    }
  }
  else
  {
    long long v35 = 0u;
    long long v36 = 0u;
    long long v34 = 0u;
    *(_OWORD *)&v25[20] = 0u;
    long long v33 = 0u;
    long long v32 = 0u;
    long long v31 = 0u;
    long long v30 = 0u;
    long long v29 = 0u;
    long long v28 = 0u;
    long long v27 = 0u;
    long long v26 = 0u;
    long long v9 = *(_OWORD *)(a3 + 80);
    long long v23 = *(_OWORD *)(a3 + 64);
    long long v24 = v9;
    *(_OWORD *)unsigned int v25 = *(_OWORD *)(a3 + 96);
    long long v10 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)&__p[4] = *(_OWORD *)a3;
    long long v20 = v10;
    long long v11 = *(_OWORD *)(a3 + 48);
    long long v21 = *(_OWORD *)(a3 + 32);
    BOOL v12 = *(_WORD *)a3 != 0;
    char v13 = *(unsigned char *)(a3 + 117);
    *(_DWORD *)std::string __p = 1;
    *(void *)&v25[13] = *(void *)(a3 + 109);
    long long v22 = v11;
    v25[21] = v13;
    LOBYTE(v34) = v13;
    DWORD1(v34) = 2 * v12;
    *(void *)&long long v35 = -1;
    *((void *)&v35 + 1) = 0xFFFF7FFFFFFFFFFFLL;
    *(void *)&long long v36 = -1;
    sub_24B4806CC((uint64_t)off_2697C5530, (int *)__p, 0x100000002, a1);
  }
  sub_24B3E3128(__p, "SuplLppExecutePosRsp");
  uint64_t v14 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v16 = __p;
    if (SBYTE3(v20) < 0) {
      uint64_t v16 = *(unsigned char **)__p;
    }
    int v17 = 136315138;
    uint64_t v18 = v16;
    _os_log_debug_impl(&dword_24B3DE000, v14, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Leaving %s", (uint8_t *)&v17, 0xCu);
  }
  if (SBYTE3(v20) < 0) {
    operator delete(*(void **)__p);
  }
}

void sub_24B4B0750(int a1, char a2, unsigned __int16 *a3)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_24B3E3128(__p, "SuplLppExecuteAdReq");
  int v6 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v18 = __p;
    if (v21 < 0) {
      uint64_t v18 = (void **)__p[0];
    }
    *(_DWORD *)uint64_t buf = 136315138;
    long long v23 = v18;
    _os_log_debug_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Entered %s", buf, 0xCu);
  }
  if (v21 < 0) {
    operator delete(__p[0]);
  }
  std::string v7 = (char *)operator new(0x68uLL, MEMORY[0x263F8C180]);
  if (v7)
  {
    *(void *)std::string v7 = 0x8000000080000000;
    *((void *)v7 + 1) = 0xFFFF00007FFFFFFFLL;
    *((_WORD *)v7 + 8) = 255;
    *((_WORD *)v7 + 12) = -1;
    v7[26] = -1;
    *(_DWORD *)(v7 + 18) = -1;
    v7[22] = -1;
    *(_OWORD *)(v7 + 27) = 0u;
    *(_OWORD *)(v7 + 43) = 0u;
    int v8 = *a3;
    v7[96] = v8;
    if (v8 == 1)
    {
      *(_OWORD *)std::string v7 = 0uLL;
      *((_OWORD *)v7 + 1) = 0uLL;
      *(_OWORD *)(v7 + 44) = 0uLL;
      *((_OWORD *)v7 + 2) = 0uLL;
      *((_WORD *)v7 + 6) = *((_DWORD *)a3 + 2);
      *((_WORD *)v7 + 7) = a3[6];
      v7[16] = *((unsigned char *)a3 + 14);
      uint64_t v9 = *((unsigned __int8 *)a3 + 15);
      v7[17] = v9;
      v7[18] = *((unsigned char *)a3 + 64);
      if (v9)
      {
        long long v10 = (char *)*((void *)a3 + 5);
        long long v11 = v7 + 43;
        BOOL v12 = (char *)*((void *)a3 + 2);
        do
        {
          char v13 = *v10++;
          *long long v11 = v13;
          char v14 = *v12++;
          *(v11 - 16) = v14;
          ++v11;
          --v9;
        }
        while (v9);
      }
    }
    sub_24B4800F4((uint64_t)off_2697C5530, a1, a2, 1, (uint64_t)v7, 0, 0);
    sub_24B3E3128(__p, "SuplLppExecuteAdReq");
    uint64_t v15 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v16 = __p;
      if (v21 < 0) {
        uint64_t v16 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t buf = 136315138;
      long long v23 = v16;
LABEL_25:
      _os_log_debug_impl(&dword_24B3DE000, v15, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Leaving %s", buf, 0xCu);
    }
  }
  else
  {
    int v17 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      LOWORD(__p[0]) = 0;
      _os_log_error_impl(&dword_24B3DE000, v17, OS_LOG_TYPE_ERROR, "GNSS Aid Req", (uint8_t *)__p, 2u);
    }
    sub_24B3E3128(__p, "SuplLppExecuteAdReq");
    uint64_t v15 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      int64_t v19 = __p;
      if (v21 < 0) {
        int64_t v19 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t buf = 136315138;
      long long v23 = v19;
      goto LABEL_25;
    }
  }
  if (v21 < 0) {
    operator delete(__p[0]);
  }
}

void sub_24B4B0A44(int a1, char a2)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  sub_24B3E3128(__p, "SuplLppExecuteCapReq");
  unsigned int v4 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    int v6 = __p;
    if (v9 < 0) {
      int v6 = (void **)__p[0];
    }
    *(_DWORD *)uint64_t buf = 136315138;
    long long v11 = v6;
    _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Entered %s", buf, 0xCu);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  sub_24B480368((uint64_t)off_2697C5530, a1, a2);
  sub_24B3E3128(__p, "SuplLppExecuteCapReq");
  BOOL v5 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    std::string v7 = __p;
    if (v9 < 0) {
      std::string v7 = (void **)__p[0];
    }
    *(_DWORD *)uint64_t buf = 136315138;
    long long v11 = v7;
    _os_log_debug_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#posp Leaving %s", buf, 0xCu);
  }
  if (v9 < 0) {
    operator delete(__p[0]);
  }
}

void sub_24B4B0BC0(int a1, int a2, uint64_t a3, int a4)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  std::string v7 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    v9[0] = 67109376;
    v9[1] = a1;
    __int16 v10 = 1024;
    int v11 = a2;
    _os_log_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp updating PLMN info,%d,%d", (uint8_t *)v9, 0xEu);
  }
  int v8 = off_2697C5530;
  *((_WORD *)off_2697C5530 + 40) = a1;
  *((_WORD *)v8 + 41) = a2;
  *((_DWORD *)v8 + 21) = a4;
}

void sub_24B4B0C90()
{
  uint64_t v0 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl(&dword_24B3DE000, v0, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp LPP Initialization Fn", buf, 2u);
  }
  uint64_t v1 = off_2697C5530;
  sub_24B47FE50((uint64_t)off_2697C5530);
  long long v2 = *v1;
  long long v3 = v1[1];
  long long v4 = v1[3];
  xmmword_2697C5560 = v1[2];
  unk_2697C5570 = v4;
  xmmword_2697C5540 = v2;
  *(_OWORD *)algn_2697C5550 = v3;
  long long v5 = v1[4];
  long long v6 = v1[5];
  long long v7 = v1[6];
  qword_2697C55B0 = *((void *)v1 + 14);
  xmmword_2697C5590 = v6;
  unk_2697C55A0 = v7;
  xmmword_2697C5580 = v5;
  long long v8 = *(long long *)((char *)v1 + 152);
  long long v9 = *(long long *)((char *)v1 + 136);
  unk_2697C55B8 = *(long long *)((char *)v1 + 120);
  unk_2697C55C8 = v9;
  unk_2697C55D8 = v8;
  long long v10 = *(long long *)((char *)v1 + 184);
  long long v11 = *(long long *)((char *)v1 + 200);
  long long v12 = *(long long *)((char *)v1 + 216);
  unk_2697C55E8 = *(long long *)((char *)v1 + 168);
  unk_2697C5618 = v12;
  unk_2697C5608 = v11;
  unk_2697C55F8 = v10;
  char v13 = off_2697C5530;
  *((_WORD *)off_2697C5530 + 4) = 1537;
  *((_DWORD *)v13 + 1) = 2;
  *((unsigned char *)v13 + 105) = 1;
  *((_DWORD *)v13 + 22) = -1;
  *(unsigned char *)char v13 = 1;
  *((_WORD *)v13 + 26) = 1;
  *((unsigned char *)v13 + 50) = 3;
  *((_WORD *)v13 + 22) = 257;
  *((unsigned char *)v13 + 61) = 1;
  *((_WORD *)v13 + 32) = 257;
  *((unsigned char *)v13 + 66) = 0;
  *(_WORD *)((char *)v13 + 59) = 32;
  char v14 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_24B3DE000, v14, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#posp LPP Initialization complete", v15, 2u);
    char v13 = off_2697C5530;
  }
  *((_DWORD *)v13 + 27) = 3;
  *((_DWORD *)v13 + 22) = 0xFFFF;
  *((void *)v13 + 10) = 10815105;
}

void sub_24B4B0E24(uint64_t a1, uint64_t a2)
{
  void v11[3] = *MEMORY[0x263EF8340];
  if (!*(void *)(a2 + 24))
  {
    long long v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long v9 = 0;
      _os_log_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,Null parameter Leaving setSuplProtoLocationIdNeededReport", v9, 2u);
    }
  }
  sub_24B4B64B8((uint64_t)v9, a2);
  uint64_t v5 = a1 + 32;
  if (v9 != (uint8_t *)(a1 + 32))
  {
    long long v6 = v10;
    uint64_t v7 = *(void *)(a1 + 56);
    if (v10 == v9)
    {
      if (v7 == v5)
      {
        (*(void (**)(uint8_t *, void *))(*(void *)v9 + 24))(v9, v11);
        (*(void (**)(uint8_t *))(*(void *)v10 + 32))(v10);
        long long v10 = 0;
        (*(void (**)(void, uint8_t *))(**(void **)(a1 + 56) + 24))(*(void *)(a1 + 56), v9);
        (*(void (**)(void))(**(void **)(a1 + 56) + 32))(*(void *)(a1 + 56));
        *(void *)(a1 + 56) = 0;
        long long v10 = v9;
        (*(void (**)(void *, uint64_t))(v11[0] + 24))(v11, a1 + 32);
        (*(void (**)(void *))(v11[0] + 32))(v11);
      }
      else
      {
        (*(void (**)(uint8_t *, uint64_t))(*(void *)v9 + 24))(v9, a1 + 32);
        (*(void (**)(uint8_t *))(*(void *)v10 + 32))(v10);
        long long v10 = *(uint8_t **)(a1 + 56);
      }
      *(void *)(a1 + 56) = v5;
    }
    else if (v7 == v5)
    {
      (*(void (**)(uint64_t, uint8_t *))(*(void *)v5 + 24))(a1 + 32, v9);
      (*(void (**)(void))(**(void **)(a1 + 56) + 32))(*(void *)(a1 + 56));
      *(void *)(a1 + 56) = v10;
      long long v10 = v9;
    }
    else
    {
      long long v10 = *(uint8_t **)(a1 + 56);
      *(void *)(a1 + 56) = v6;
    }
  }
  sub_24B3E8C10(v9);
  long long v8 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long v9 = 0;
    _os_log_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,Leaving setSuplProtoLocationIdNeededReport", v9, 2u);
  }
}

void sub_24B4B1140(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_24B3E0E90(a1);
  }
  _Unwind_Resume(a1);
}

void *sub_24B4B114C(uint64_t a1)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  sub_24B4B64B8((uint64_t)v2, a1 + 32);
  if (!v3) {
    sub_24B3E364C();
  }
  (*(void (**)(uint64_t))(*(void *)v3 + 48))(v3);
  return sub_24B3E8C10(v2);
}

void sub_24B4B11E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

uint64_t sub_24B4B1200()
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  if (qword_26B17C448 != -1) {
    dispatch_once(&qword_26B17C448, &unk_26FE863A8);
  }
  uint64_t result = qword_26B17C440;
  if (!qword_26B17C440)
  {
    uint64_t v1 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v2 = 136315138;
      uint64_t v3 = "GetInstance";
      _os_log_error_impl(&dword_24B3DE000, v1, OS_LOG_TYPE_ERROR, "%s", (uint8_t *)&v2, 0xCu);
    }
    __assert_rtn("GetInstance", "SuplBridge.mm", 92, "false && \"Memory allocation failure\"");
  }
  return result;
}

char *sub_24B4B12F8()
{
  uint64_t result = (char *)operator new(0x1A8uLL, MEMORY[0x263F8C180]);
  uint64_t v1 = (uint64_t)result;
  if (result)
  {
    *(_OWORD *)(result + 152) = 0u;
    int v2 = result + 152;
    *((void *)result + 3) = 0;
    *((void *)result + 7) = 0;
    *((void *)result + 8) = 0;
    *((_DWORD *)result + 18) = 0;
    *((_OWORD *)result + 5) = 0u;
    *((_OWORD *)result + 6) = 0u;
    *((void *)result + 14) = -1;
    *((void *)result + 15) = 0xFFFFFFFF7FFFFFFFLL;
    *((_WORD *)result + 64) = -1;
    *(void *)(result + 132) = -1;
    *(void *)(result + 140) = -1;
    *((_DWORD *)result + 37) = -1;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 248) = 0u;
    do
    {
      *(_WORD *)int v2 = -1;
      v2[2] = -1;
      *(void *)(v2 + 4) = -1;
      v2[12] = -1;
      v2 += 16;
    }
    while (v2 != result + 408);
    result[408] = -1;
    *((_DWORD *)result + 103) = -1;
    *((void *)result + 52) = -1;
    uint64_t v3 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
    uint64_t result = (char *)dispatch_queue_create("com.gnss.suplq", v3);
    *(void *)(v1 + 88) = result;
  }
  qword_26B17C440 = v1;
  return result;
}

void sub_24B4B140C(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(a1 + 40);
  uintptr_t data = dispatch_source_get_data(*(dispatch_source_t *)(a1 + 32));
  if (!data) {
    return;
  }
  uintptr_t v3 = data;
  if ((*(unsigned int (**)(void))(**(void **)(v1 + 64) + 32))(*(void *)(v1 + 64)) == -3)
  {
    uint64_t v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      LOWORD(__p) = 0;
      _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "#gpsd,#supl,readSocketData,Invalid Session while Reading", (uint8_t *)&__p, 2u);
    }
    uint64_t v5 = sub_24B4A4C30();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)v5 + 32))(v5, *(unsigned int *)(v1 + 72), 14);
    return;
  }
  std::string __p = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  long long v6 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 134217984;
    uintptr_t v18 = v3;
    _os_log_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,readSocketData,Bytes on Sock,%llu", buf, 0xCu);
  }
  int v7 = (*(uint64_t (**)(void, void **))(**(void **)(v1 + 64) + 8))(*(void *)(v1 + 64), &__p);
  int v8 = v7;
  if (v7 == -4)
  {
    uint64_t v9 = 11;
  }
  else
  {
    if (v7 != -3)
    {
      long long v12 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)uint64_t buf = 67109120;
        LODWORD(v18) = v8;
        _os_log_error_impl(&dword_24B3DE000, v12, OS_LOG_TYPE_ERROR, "#gpsd,#supl,readSocketData,Byte written,%d", buf, 8u);
        long long v12 = qword_26B17C488;
      }
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 67109120;
        LODWORD(v18) = v15 - __p;
        _os_log_impl(&dword_24B3DE000, v12, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#in,readSocketData,Socket read buf size,%u,continue to process supl", buf, 8u);
      }
      uint64_t v13 = sub_24B4A4C30();
      (*(void (**)(uint64_t, void, void **))(*(void *)v13 + 40))(v13, *(unsigned int *)(v1 + 72), &__p);
      goto LABEL_20;
    }
    uint64_t v9 = 10;
  }
  long long v10 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)uint64_t buf = 67109120;
    LODWORD(v18) = v9;
    _os_log_error_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_ERROR, "#gpsd,#supl,readSocketData,Socket read fail , disconnecting,%u", buf, 8u);
  }
  uint64_t v11 = sub_24B4A4C30();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)v11 + 32))(v11, *(unsigned int *)(v1 + 72), v9);
LABEL_20:
  if (__p)
  {
    uint64_t v15 = __p;
    operator delete(__p);
  }
}

void sub_24B4B171C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4B1744(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uintptr_t v3 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v7 = 0;
    _os_log_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,readSocketData,cancel called,disconnecting supl", v7, 2u);
  }
  *(_DWORD *)(v2 + 72) = 0;
  unsigned int v4 = (*(uint64_t (**)(void))(**(void **)(v2 + 64) + 24))(*(void *)(v2 + 64));
  if (v4 < 0xFFFFFFFB) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = dword_24B4C6570[v4 + 5];
  }
  uint64_t v6 = sub_24B4A4C30();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)v6 + 32))(v6, *(unsigned int *)(v2 + 72), v5);
  dispatch_release(*(dispatch_object_t *)(a1 + 32));
}

void sub_24B4B183C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 64) + 32))(*(void *)(a1 + 64)) == -3)
  {
    uint64_t v5 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v12) = 0;
      _os_log_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,writeDataToSocket,Invalid Socket during Write", (uint8_t *)&v12, 2u);
    }
LABEL_11:
    long long v10 = *(void (**)(void))(*(void *)sub_24B4A4C30() + 32);
    v10();
    return;
  }
  int v6 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 64) + 16))(*(void *)(a1 + 64), a3);
  if (v6 == -3)
  {
    int v8 = 12;
LABEL_9:
    uint64_t v9 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 67109120;
      int v13 = v8;
      _os_log_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,writeDataToSocket,Socket write,%u", (uint8_t *)&v12, 8u);
    }
    goto LABEL_11;
  }
  int v7 = v6;
  if (v6 == -4)
  {
    int v8 = 13;
    goto LABEL_9;
  }
  uint64_t v11 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    int v12 = 67109120;
    int v13 = v7;
    _os_log_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,writeDataToSocket,Byte written,%d", (uint8_t *)&v12, 8u);
  }
}

uint64_t sub_24B4B1A4C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  int v6 = (uint64_t **)a2;
  uint64_t v24 = *MEMORY[0x263EF8340];
  int v8 = *(uint64_t (****)(void, void **, uint64_t))(a1 + 64);
  if (*((char *)a2 + 23) < 0)
  {
    sub_24B4A6624(__p, (void *)*a2, a2[1]);
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a2;
    uint64_t v20 = a2[2];
  }
  int v9 = (**v8)(v8, __p, a3);
  if (SHIBYTE(v20) < 0) {
    operator delete(__p[0]);
  }
  long long v10 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)v6 + 23) < 0) {
      int v6 = (uint64_t **)*v6;
    }
    uint64_t v11 = "FAILURE";
    *(_DWORD *)uint64_t buf = 136315906;
    *(void *)&uint8_t buf[4] = v6;
    *(_WORD *)&uint8_t buf[12] = 1024;
    if (v9 == -2) {
      uint64_t v11 = "SUCCESS";
    }
    *(_DWORD *)&buf[14] = a3;
    *(_WORD *)&buf[18] = 2080;
    *(void *)&unsigned char buf[20] = v11;
    *(_WORD *)&buf[28] = 1024;
    *(_DWORD *)&buf[30] = v9;
    _os_log_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#input,ConnectToServer,Connection fqdn,%s,%u,status,%s,%d", buf, 0x22u);
  }
  switch(v9)
  {
    case -5:
      uint64_t v12 = 7;
      break;
    case -4:
      uint64_t v12 = 9;
      break;
    case -3:
      uint64_t v12 = 8;
      break;
    case -2:
      *(_DWORD *)(a1 + 72) = a4;
      int v13 = (*(uint64_t (**)(void))(**(void **)(a1 + 64) + 32))(*(void *)(a1 + 64));
      uint64_t v14 = dispatch_source_create(MEMORY[0x263EF83E8], v13, 0, *(dispatch_queue_t *)(a1 + 88));
      if (v14)
      {
        uint64_t v15 = v14;
        *(void *)(a1 + 80) = v14;
        *(void *)uint64_t buf = MEMORY[0x263EF8330];
        *(void *)&uint8_t buf[8] = 3221225472;
        *(void *)&uint8_t buf[16] = sub_24B4B140C;
        *(void *)&buf[24] = &unk_2652DCFF0;
        *(void *)&buf[32] = v14;
        uint64_t v23 = a1;
        dispatch_source_set_event_handler(v14, buf);
        handler[0] = MEMORY[0x263EF8330];
        handler[1] = 3221225472;
        handler[2] = sub_24B4B1744;
        handler[3] = &unk_2652DCFF0;
        handler[4] = v15;
        void handler[5] = a1;
        dispatch_source_set_cancel_handler(v15, handler);
        dispatch_resume(v15);
      }
      else
      {
        uint64_t v16 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_error_impl(&dword_24B3DE000, v16, OS_LOG_TYPE_ERROR, "#gpsd,#supl,readSocketData,SUPL Socket read failed", buf, 2u);
        }
      }
      uint64_t v12 = 6;
      break;
    case -1:
      uint64_t v12 = 5;
      break;
    default:
      uint64_t v12 = 0;
      break;
  }
  uint64_t v17 = sub_24B4A4C30();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v17 + 24))(v17, a4, v12);
}

void sub_24B4B1D84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B4B1DBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  char v4 = 1;
  int v5 = *(_DWORD *)(v1 + 72);
  uint64_t v2 = *(uint64_t (***)(void))sub_24B4A4C30();
  return (*v2)();
}

void sub_24B4B1E34(uint8_t *a1, uint64_t a2)
{
  void v8[3] = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 24))
  {
    sub_24B4B6550((uint64_t)v6, a2);
    if (v6 != a1)
    {
      uintptr_t v3 = v7;
      char v4 = (uint8_t *)*((void *)a1 + 3);
      if (v7 == v6)
      {
        if (v4 == a1)
        {
          (*(void (**)(uint8_t *, void *))(*(void *)v6 + 24))(v6, v8);
          (*(void (**)(uint8_t *))(*(void *)v7 + 32))(v7);
          int v7 = 0;
          (*(void (**)(void, uint8_t *))(**((void **)a1 + 3) + 24))(*((void *)a1 + 3), v6);
          (*(void (**)(void))(**((void **)a1 + 3) + 32))(*((void *)a1 + 3));
          *((void *)a1 + 3) = 0;
          int v7 = v6;
          (*(void (**)(void *, uint8_t *))(v8[0] + 24))(v8, a1);
          (*(void (**)(void *))(v8[0] + 32))(v8);
        }
        else
        {
          (*(void (**)(uint8_t *, uint8_t *))(*(void *)v6 + 24))(v6, a1);
          (*(void (**)(uint8_t *))(*(void *)v7 + 32))(v7);
          int v7 = (uint8_t *)*((void *)a1 + 3);
        }
        *((void *)a1 + 3) = a1;
      }
      else if (v4 == a1)
      {
        (*(void (**)(uint8_t *, uint8_t *))(*(void *)a1 + 24))(a1, v6);
        (*(void (**)(void))(**((void **)a1 + 3) + 32))(*((void *)a1 + 3));
        *((void *)a1 + 3) = v7;
        int v7 = v6;
      }
      else
      {
        int v7 = (uint8_t *)*((void *)a1 + 3);
        *((void *)a1 + 3) = v3;
      }
    }
    sub_24B3E86CC(v6);
  }
  else
  {
    int v5 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v6 = 0;
      _os_log_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_DEFAULT, "StatusReport callback NULL", v6, 2u);
    }
  }
}

void sub_24B4B2104(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_24B3E0E90(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_24B4B2110(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  __int16 v15 = 0;
  *(void *)&v18[7] = 0;
  *(void *)&v18[3] = 0;
  uint64_t v2 = *(void *)(v1 + 104);
  v9[0] = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
  v9[1] = xmmword_24B4C6550;
  __asm { FMOV            V0.2D, #-1.0 }
  _DWORD v9[2] = _Q0;
  long long v12 = _Q0;
  unint64_t v13 = 0xBFF0000000000000;
  uint64_t v14 = 0;
  *(void *)&v16[14] = 0;
  *(_OWORD *)uint64_t v16 = *(unint64_t *)v18;
  int v17 = -1;
  uint64_t result = *(void *)(v2 + 496);
  if (result) {
    return (*(uint64_t (**)(uint64_t, _OWORD *))(*(void *)result + 48))(result, v9);
  }
  return result;
}

void sub_24B4B21B4(uint64_t a1, unsigned int *a2)
{
  uint64_t v73 = *MEMORY[0x263EF8340];
  *((void *)&v46 + 1) = 0;
  long long v47 = xmmword_24B4C6560;
  int64x2_t v48 = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
  __asm { FMOV            V0.2D, #-1.0 }
  long long v49 = _Q0;
  *(void *)&long long v50 = 0xBFF0000000000000;
  WORD4(v50) = 0;
  BYTE10(v50) = 0;
  HIDWORD(v50) = 0;
  int64x2_t v51 = v48;
  long long v52 = xmmword_24B4C6550;
  *(void *)&long long v53 = 0xBFF0000000000000;
  WORD4(v53) = -1;
  LODWORD(v54) = -1;
  WORD2(v54) = -1;
  *((void *)&v54 + 1) = 0xBFF0000000000000;
  *(void *)&long long v46 = *a2;
  sub_24B4B2C34(a2[6], (_DWORD *)&v46 + 1);
  int v9 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v11 = a2[4];
    unsigned int v10 = a2[5];
    unsigned int v12 = a2[7];
    *(_DWORD *)uint64_t buf = 67109632;
    *(_DWORD *)&uint8_t buf[4] = v10;
    *(_WORD *)&uint8_t buf[8] = 1024;
    *(_DWORD *)&buf[10] = v11;
    *(_WORD *)&buf[14] = 1024;
    *(_DWORD *)&uint8_t buf[16] = v12;
    _os_log_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#out,sendSuplStatusReport,SUPL Event,%u,SessionStatus,%u,SuplEndCause,%u", buf, 0x14u);
  }
  switch(a2[5])
  {
    case 1u:
      int v13 = 1;
      goto LABEL_12;
    case 2u:
      uint64_t v14 = *(NSObject **)(a1 + 96);
      *(void *)uint64_t buf = MEMORY[0x263EF8330];
      *(void *)&uint8_t buf[8] = 3221225472;
      *(void *)&uint8_t buf[16] = sub_24B4B2110;
      double v67 = COERCE_DOUBLE(&unk_265293AF8);
      *(void *)int v68 = a1;
      dispatch_async(v14, buf);
      goto LABEL_6;
    case 3u:
      int v13 = 13;
      goto LABEL_12;
    case 6u:
      int v13 = 30;
      goto LABEL_12;
    case 7u:
      int v13 = 29;
LABEL_12:
      DWORD2(v46) = v13;
      break;
    default:
LABEL_6:
      if (!DWORD2(v46))
      {
        switch(a2[4])
        {
          case 5u:
          case 8u:
            int v13 = 3;
            goto LABEL_12;
          case 6u:
            int v13 = 2;
            goto LABEL_12;
          case 7u:
            int v13 = 5;
            goto LABEL_12;
          case 9u:
            int v13 = 4;
            goto LABEL_12;
          case 0xAu:
            int v13 = 6;
            goto LABEL_12;
          case 0xBu:
            int v13 = 7;
            goto LABEL_12;
          case 0xCu:
            int v13 = 8;
            goto LABEL_12;
          case 0xDu:
            int v13 = 9;
            goto LABEL_12;
          case 0xEu:
            int v13 = 12;
            goto LABEL_12;
          case 0xFu:
            int v13 = 11;
            goto LABEL_12;
          case 0x10u:
            int v13 = 10;
            goto LABEL_12;
          case 0x12u:
          case 0x19u:
            int v13 = 26;
            goto LABEL_12;
          case 0x13u:
          case 0x1Au:
            int v13 = 20;
            goto LABEL_12;
          case 0x14u:
          case 0x1Bu:
            int v13 = 27;
            goto LABEL_12;
          case 0x15u:
          case 0x1Cu:
            int v13 = 21;
            goto LABEL_12;
          case 0x16u:
            int v13 = 28;
            goto LABEL_12;
          case 0x17u:
            int v13 = 22;
            goto LABEL_12;
          case 0x1Du:
            int v13 = 17;
            goto LABEL_12;
          case 0x1Eu:
            int v13 = 18;
            goto LABEL_12;
          case 0x1Fu:
            int v13 = 19;
            goto LABEL_12;
          case 0x20u:
            int v13 = 23;
            goto LABEL_12;
          case 0x21u:
            int v13 = 24;
            goto LABEL_12;
          case 0x22u:
            int v13 = 25;
            goto LABEL_12;
          case 0x23u:
            DWORD2(v46) = 14;
            BYTE9(v50) = 1;
            break;
          case 0x24u:
            DWORD2(v46) = 15;
            BYTE10(v50) = 1;
            break;
          case 0x25u:
            DWORD2(v46) = 16;
            BYTE8(v50) = 1;
            break;
          default:
            goto LABEL_13;
        }
      }
      break;
  }
LABEL_13:
  if (a2[7] <= 0x16) {
    HIDWORD(v46) = a2[7];
  }
  unsigned int v15 = *((unsigned __int8 *)a2 + 32);
  if (v15 == 255) {
    double v16 = -1.0;
  }
  else {
    double v16 = (pow(1.1, (double)v15) + -1.0) * 10.0;
  }
  *(double *)&long long v47 = v16;
  uint64_t v17 = *((void *)a2 + 1);
  if (v17 && *(_DWORD *)(v17 + 20) == 1)
  {
    unsigned int v18 = *(_DWORD *)(v17 + 36);
    if (v18 >> 23)
    {
      double v19 = 1.79769313e308;
    }
    else
    {
      double v19 = -((double)v18 * 90.0 * 0.00000011920929);
      if (*(_DWORD *)(v17 + 32) != 2) {
        double v19 = (double)v18 * 90.0 * 0.00000011920929;
      }
    }
    *((double *)&v47 + 1) = v19;
    int v20 = *(_DWORD *)(v17 + 40);
    if ((v20 + 0x800000) >> 24)
    {
      double v21 = 1.79769313e308;
    }
    else
    {
      if ((v20 & 0x800000) != 0) {
        v20 |= 0xFF000000;
      }
      double v21 = (double)v20 * 360.0 * 0.0000000596046448;
    }
    double v22 = (double)*(unsigned __int16 *)(v17 + 44);
    if (*(_DWORD *)(v17 + 52) == 2) {
      double v22 = -v22;
    }
    if (*(__int16 *)(v17 + 44) < 0) {
      double v22 = 1.79769313e308;
    }
    *(double *)v48.i64 = v21;
    *(double *)&v48.i64[1] = v22;
    unsigned int v23 = *(unsigned __int8 *)(v17 + 46);
    if (v23 != 255) {
      *(double *)&long long v49 = (double)v23;
    }
    unsigned int v24 = *(unsigned __int8 *)(v17 + 47);
    if (v24 != 255) {
      *((double *)&v49 + 1) = (double)v24;
    }
    unsigned int v25 = *(unsigned __int8 *)(v17 + 56);
    if (v25 != 255) {
      *(double *)&long long v50 = (double)v25;
    }
  }
  if (BYTE10(v50))
  {
    unsigned int v26 = *(_DWORD *)(a1 + 116);
    if (v26 >> 23)
    {
      double v27 = 1.79769313e308;
    }
    else if (*(unsigned char *)(a1 + 113))
    {
      double v27 = -((double)v26 * 90.0 * 0.00000011920929);
    }
    else
    {
      double v27 = (double)v26 * 90.0 * 0.00000011920929;
    }
    int v28 = *(unsigned __int8 *)(a1 + 124);
    *(double *)v51.i64 = v27;
    int v29 = *(_DWORD *)(a1 + 120);
    if ((v29 + 0x800000) >> 24)
    {
      double v30 = 1.79769313e308;
    }
    else
    {
      if ((v29 & 0x800000) != 0) {
        v29 |= 0xFF000000;
      }
      double v30 = (double)v29 * 360.0 * 0.0000000596046448;
    }
    double v31 = (double)*(unsigned __int16 *)(a1 + 114);
    if (v28) {
      double v31 = -v31;
    }
    if (*(__int16 *)(a1 + 114) < 0) {
      double v32 = 1.79769313e308;
    }
    else {
      double v32 = v31;
    }
    *(double *)&v51.i64[1] = v30;
    *(double *)&long long v52 = v32;
    unsigned int v33 = *(unsigned __int8 *)(a1 + 125);
    double v34 = -1.0;
    double v35 = -1.0;
    if (v33 != 255) {
      double v35 = (pow(1.1, (double)v33) + -1.0) * 10.0;
    }
    *(double *)&long long v53 = v35;
    unsigned int v36 = *(unsigned __int8 *)(a1 + 126);
    if (v36 != 255) {
      double v34 = (pow(1.025, (double)v36) + -1.0) * 45.0;
    }
    *((double *)&v52 + 1) = v34;
    int v37 = *(unsigned __int8 *)(a1 + 129);
    if (v37 != 255)
    {
      BYTE8(v53) = *(unsigned char *)(a1 + 129);
      BYTE9(v53) = v37;
    }
    unsigned int v38 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 134284801;
      *(double *)&uint8_t buf[4] = v27;
      *(_WORD *)&uint8_t buf[12] = 2049;
      *(double *)&buf[14] = v30;
      *(_WORD *)&buf[22] = 2049;
      double v67 = v32;
      *(_WORD *)int v68 = 2049;
      *(double *)&v68[2] = v35;
      __int16 v69 = 2049;
      double v70 = v34;
      __int16 v71 = 1025;
      int v72 = BYTE8(v53);
      _os_log_debug_impl(&dword_24B3DE000, v38, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#process,sendSuplStatusReport, RefLocLat,%{private}.7lf,Long,%{private}.7lf,Alt,%{private}.2lf,HorUnc,%{private}.f,VerUnc,%{private}.f,conf,%{private}.d", buf, 0x3Au);
    }
  }
  if (BYTE9(v50))
  {
    if (*(unsigned __int16 *)(a1 + 148) <= 0x3FFu) {
      WORD2(v54) = *(_WORD *)(a1 + 148);
    }
    unsigned int v39 = *(_DWORD *)(a1 + 144);
    if (v39 <= 0x240C83FF) {
      LODWORD(v54) = v39 / 0x3E8;
    }
    int v40 = WORD2(v54);
    if (v39 != -1 && WORD2(v54) != 0xFFFF && *(unsigned __int8 *)(a1 + 150) != 255) {
      *((void *)&v54 + 1) = 0;
    }
    int v41 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 67109632;
      *(_DWORD *)&uint8_t buf[4] = v40;
      *(_WORD *)&uint8_t buf[8] = 1024;
      *(_DWORD *)&buf[10] = v54;
      *(_WORD *)&buf[14] = 2048;
      *(void *)&uint8_t buf[16] = *((void *)&v54 + 1);
      _os_log_impl(&dword_24B3DE000, v41, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#process,sendSuplStatusReport,Week,%u,TowSec,%u,TowUnc,%.3lf", buf, 0x18u);
    }
  }
  if (*(void *)((char *)&v46 + 4)
    || HIDWORD(v46)
    || fabs(*(double *)&v47 + 1.0) >= 2.22044605e-16
    || fabs(*((double *)&v47 + 1) + -1.79769313e308) >= 2.22044605e-16
    || fabs(*(double *)v48.i64 + -1.79769313e308) >= 2.22044605e-16
    || fabs(*(double *)&v48.i64[1] + -1.79769313e308) >= 2.22044605e-16
    || fabs(*(double *)&v49 + 1.0) >= 2.22044605e-16
    || fabs(*((double *)&v49 + 1) + 1.0) >= 2.22044605e-16
    || fabs(*(double *)&v50 + 1.0) >= 2.22044605e-16)
  {
    sub_24B4B6550((uint64_t)buf, a1);
    if (v67 == 0.0)
    {
      unint64_t v44 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
      {
        v45[0] = 0;
        _os_log_impl(&dword_24B3DE000, v44, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,sendSuplStatusReport,SuplStatusReportCB is NULL", (uint8_t *)v45, 2u);
      }
    }
    else
    {
      int v43 = *(NSObject **)(a1 + 96);
      block[0] = MEMORY[0x263EF8330];
      block[1] = 3321888768;
      block[2] = sub_24B4B2C54;
      block[3] = &unk_26FE863C8;
      sub_24B4B6550((uint64_t)v56, (uint64_t)buf);
      long long v63 = v52;
      long long v64 = v53;
      long long v65 = v54;
      int64x2_t v59 = v48;
      long long v60 = v49;
      long long v61 = v50;
      int64x2_t v62 = v51;
      long long v57 = v46;
      long long v58 = v47;
      dispatch_async(v43, block);
      sub_24B3E86CC(v56);
    }
    sub_24B3E86CC(buf);
  }
  else
  {
    int v42 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl(&dword_24B3DE000, v42, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#out,sendSuplStatusReport,No Status report, returning", buf, 2u);
    }
  }
}

void sub_24B4B2AEC(_Unwind_Exception *a1)
{
  sub_24B3E86CC((void *)(v1 - 176));
  _Unwind_Resume(a1);
}

void sub_24B4B2BA8(uint64_t a1, unsigned int a2, int a3, int a4, int a5, long long *a6)
{
  int v13 = 0;
  int v14 = 0;
  unsigned int v12 = a2;
  char v18 = -1;
  int v15 = a3;
  int v16 = a4;
  int v17 = a5;
  if (a6)
  {
    int v8 = sub_24B49ED24("SendSuplMsgStatus", 416, 1, 0x78uLL);
    int v13 = v8;
    if (!v8) {
      return;
    }
    long long v9 = *a6;
    long long v10 = a6[1];
    long long v11 = a6[2];
    uint8_t v8[16] = *((_DWORD *)a6 + 12);
    *((_OWORD *)v8 + 2) = v10;
    *((_OWORD *)v8 + 3) = v11;
    *((_OWORD *)v8 + 1) = v9;
  }
  sub_24B4B21B4(a1, &v12);
}

uint64_t sub_24B4B2C34(uint64_t result, _DWORD *a2)
{
  if ((result - 1) <= 0x10) {
    *a2 = dword_24B4C6584[(int)result - 1];
  }
  return result;
}

void sub_24B4B2C54(uint64_t a1)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2) {
    sub_24B3E364C();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 48))(v2, a1 + 64);
  uintptr_t v3 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v4 = *(void *)(a1 + 96);
    uint64_t v5 = *(void *)(a1 + 104);
    uint64_t v6 = *(void *)(a1 + 112);
    uint64_t v7 = *(void *)(a1 + 120);
    uint64_t v8 = *(void *)(a1 + 128);
    int v10 = *(_DWORD *)(a1 + 64);
    int v9 = *(_DWORD *)(a1 + 68);
    int v11 = *(_DWORD *)(a1 + 72);
    int v12 = *(_DWORD *)(a1 + 76);
    uint64_t v13 = *(void *)(a1 + 80);
    uint64_t v14 = *(void *)(a1 + 88);
    if (*(unsigned char *)(a1 + 136)) {
      int v15 = 84;
    }
    else {
      int v15 = 70;
    }
    if (*(unsigned char *)(a1 + 137)) {
      int v16 = 84;
    }
    else {
      int v16 = 70;
    }
    if (*(unsigned char *)(a1 + 138)) {
      int v17 = 84;
    }
    else {
      int v17 = 70;
    }
    int v18 = 134286849;
    uint64_t v19 = v14;
    __int16 v20 = 2049;
    uint64_t v21 = v4;
    __int16 v22 = 2049;
    uint64_t v23 = v5;
    __int16 v24 = 2049;
    uint64_t v25 = v6;
    __int16 v26 = 2049;
    uint64_t v27 = v7;
    __int16 v28 = 2049;
    uint64_t v29 = v8;
    __int16 v30 = 1024;
    int v31 = v9;
    __int16 v32 = 1024;
    int v33 = v11;
    __int16 v34 = 1024;
    int v35 = v10;
    __int16 v36 = 1024;
    int v37 = v12;
    __int16 v38 = 2048;
    uint64_t v39 = v13;
    __int16 v40 = 1024;
    int v41 = v15;
    __int16 v42 = 1024;
    int v43 = v16;
    __int16 v44 = 1024;
    int v45 = v17;
    _os_log_debug_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#process,sendSuplStatusReport,Lat,%{private}.7f,Long,%{private}.7f,Alt,%{private}.2f,SemMaj,%{private}.f,SemMin,%{private}.f,UncAlt,%{private}.f,PosMethod,%u,Status,%u,SessionId,%u,endCause,%u,HACC,%f,ephProvided,%c,refTimeProvided,%c,refLocProvided,%c", (uint8_t *)&v18, 0x72u);
  }
}

uint64_t sub_24B4B2DE4(uint64_t a1, uint64_t a2)
{
  return sub_24B4B6550(a1 + 32, a2 + 32);
}

void *sub_24B4B2DF0(uint64_t a1)
{
  return sub_24B3E86CC((void *)(a1 + 32));
}

BOOL sub_24B4B2DF8(char **a1)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  int64_t v2 = a1[1] - *a1;
  uintptr_t v3 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 134217984;
    int64_t v12 = v2;
    _os_log_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_DEFAULT, "#gpsd,#process,validateSuplInit,SUPL INIT len,%zd", (uint8_t *)&v11, 0xCu);
  }
  if ((unint64_t)(v2 - 0x10000) > 0xFFFFFFFFFFFF0004)
  {
    uint64_t v9 = __rev16(*(unsigned __int16 *)*a1);
    if (v2 == v9) {
      return 1;
    }
    uint64_t v10 = qword_26B17C488;
    BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
    if (result)
    {
      int v11 = 134218240;
      int64_t v12 = v2;
      __int16 v13 = 1024;
      int v14 = v9;
      uint64_t v6 = "#gpsd,#supl,#in,validateSuplInit,SuplInit Len,%zd mismatches SuplInitHadrLen,%u";
      uint64_t v7 = v10;
      uint32_t v8 = 18;
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v4 = qword_26B17C488;
    BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
    if (result)
    {
      int v11 = 134217984;
      int64_t v12 = v2;
      uint64_t v6 = "#gpsd,#supl,#in,validateSuplInit,Invalid SUPL INIT message length,%zd";
      uint64_t v7 = v4;
      uint32_t v8 = 12;
LABEL_11:
      _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, v6, (uint8_t *)&v11, v8);
      return 0;
    }
  }
  return result;
}

void sub_24B4B2F78(char *__s1, unint64_t *a2)
{
  uintptr_t v3 = __s1;
  uint64_t v24 = *MEMORY[0x263EF8340];
  if (__s1 && (int v4 = strnlen(__s1, 0x100uLL), (v4 & 0xFFFFFEFF) == 0))
  {
    uint64_t v21 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      int v22 = 67109120;
      int v23 = v4;
      _os_log_error_impl(&dword_24B3DE000, v21, OS_LOG_TYPE_ERROR, "#gpsd,#supl,convertStringIPtoVect,Wrong IP address len,%u", (uint8_t *)&v22, 8u);
    }
  }
  else
  {
    uint64_t v5 = (unsigned char *)a2[1];
    do
    {
      unint64_t v6 = a2[2];
      if ((unint64_t)v5 >= v6)
      {
        unint64_t v7 = *a2;
        uint32_t v8 = &v5[-*a2];
        unint64_t v9 = (unint64_t)(v8 + 1);
        if ((uint64_t)(v8 + 1) < 0) {
          sub_24B3E3AAC();
        }
        unint64_t v10 = v6 - v7;
        if (2 * v10 > v9) {
          unint64_t v9 = 2 * v10;
        }
        if (v10 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v11 = v9;
        }
        if (v11) {
          int64_t v12 = (char *)operator new(v11);
        }
        else {
          int64_t v12 = 0;
        }
        __int16 v13 = &v8[(void)v12];
        int v14 = &v8[(void)v12];
        *int v14 = 0;
        uint64_t v15 = v14 + 1;
        if (v5 != (unsigned char *)v7)
        {
          int v16 = &v5[~v7];
          do
          {
            char v17 = *--v5;
            (v16--)[(void)v12] = v17;
          }
          while (v5 != (unsigned char *)v7);
          uint64_t v5 = (unsigned char *)*a2;
          __int16 v13 = v12;
        }
        *a2 = (unint64_t)v13;
        a2[1] = (unint64_t)v15;
        a2[2] = (unint64_t)&v12[v11];
        if (v5) {
          operator delete(v5);
        }
        uint64_t v5 = v15;
      }
      else
      {
        *v5++ = 0;
      }
      a2[1] = (unint64_t)v5;
    }
    while (*v3++);
    uint64_t v19 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      int v20 = v5 - *(_DWORD *)a2;
      int v22 = 67109120;
      int v23 = v20;
      _os_log_impl(&dword_24B3DE000, v19, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,convertStringIPtoVect,IPVectorSize,%u", (uint8_t *)&v22, 8u);
    }
  }
}

void sub_24B4B3170(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  if (!a1) {
    goto LABEL_13;
  }
  int v4 = strnlen((const char *)a1, 0x100uLL);
  if ((v4 & 0xFFFFFEFF) == 0)
  {
    uint64_t v7 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT)) {
      return;
    }
    LODWORD(v12) = 67109120;
    DWORD1(v12) = v4;
    uint32_t v8 = "#gpsd,#supl,length of SLP address ,%u";
    unint64_t v9 = v7;
    goto LABEL_15;
  }
  int v5 = *(_DWORD *)(a1 + 256);
  if (v5 == 1 || v5 == 2)
  {
    *(_DWORD *)(a2 + 4) = v5;
    sub_24B4B2F78((char *)a1, (unint64_t *)(a2 + 32));
LABEL_12:
    *(unsigned char *)a2 = 1;
    goto LABEL_13;
  }
  if (v5 == 3)
  {
    *(_DWORD *)(a2 + 4) = 3;
    sub_24B3E3128(&v12, (char *)a1);
    unint64_t v6 = (void **)(a2 + 8);
    if (*(char *)(a2 + 31) < 0) {
      operator delete(*v6);
    }
    *(_OWORD *)unint64_t v6 = v12;
    *(void *)(a2 + 24) = v13;
    goto LABEL_12;
  }
LABEL_13:
  uint64_t v10 = qword_26B17C488;
  if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT)) {
    return;
  }
  int v11 = *(_DWORD *)(a2 + 4);
  LODWORD(v12) = 67109120;
  DWORD1(v12) = v11;
  uint32_t v8 = "#gpsd,#supl,SLPType,%u";
  unint64_t v9 = v10;
LABEL_15:
  _os_log_impl(&dword_24B3DE000, v9, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&v12, 8u);
}

uint64_t sub_24B4B32EC(uint64_t a1, char **a2, uint64_t a3)
{
  uint64_t v61 = *MEMORY[0x263EF8340];
  if (sub_24B4B2DF8(a2))
  {
    char v54 = 0;
    int v55 = 0;
    __int16 v56 = 0;
    *(void *)uint64_t buf = 0;
    char v35 = 0;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    long long v49 = 0u;
    long long v50 = 0u;
    memset(v51, 0, sizeof(v51));
    memset(v52, 0, 261);
    memset(v53, 0, 261);
    __int16 v57 = -1;
    int v58 = -1;
    unsigned __int8 v59 = -1;
    int v60 = 0;
    std::string __p = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    if (&__p != (void **)a2) {
      sub_24B3EAC0C(&__p, *a2, a2[1], a2[1] - *a2);
    }
    uint64_t v5 = sub_24B4AB040();
    int v6 = sub_24B4AD3C4(v5, 0, (uint64_t)&__p, (uint64_t)buf);
    if (v6) {
      BOOL v7 = 1;
    }
    else {
      BOOL v7 = buf[4] == 0;
    }
    uint64_t v8 = !v7;
    if (v7)
    {
      int v18 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int16 v26 = 67109120;
        int v27 = v6;
        _os_log_error_impl(&dword_24B3DE000, v18, OS_LOG_TYPE_ERROR, "#gpsd,#supl,SUPL INIT Decode failed %u", v26, 8u);
      }
      goto LABEL_36;
    }
    sub_24B4B2C34(v36, (_DWORD *)a3);
    if (HIBYTE(v56))
    {
      *(unsigned char *)(a3 + 4) = 1;
      int v9 = v57;
      *(unsigned char *)(a3 + 5) = v57;
      int v10 = HIBYTE(v57);
      *(unsigned char *)(a3 + 6) = HIBYTE(v57);
      unsigned __int16 v11 = v58;
      *(_WORD *)(a3 + 8) = v58;
      int v12 = v59;
      *(unsigned char *)(a3 + 10) = v59;
      uint64_t v13 = qword_26B17C488;
      if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_21;
      }
      *(_DWORD *)__int16 v26 = 67109888;
      int v27 = v9;
      __int16 v28 = 1024;
      int v29 = v10;
      __int16 v30 = 1024;
      int v31 = v11;
      __int16 v32 = 1024;
      int v33 = v12;
      uint64_t v14 = "#gpsd,#supl,coming from supl,HAcc,%u,VAcc,%u,LocAge,%u,Delay,%u";
      uint64_t v15 = v13;
      uint32_t v16 = 26;
    }
    else
    {
      uint64_t v19 = qword_26B17C488;
      if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_21;
      }
      *(_WORD *)__int16 v26 = 0;
      uint64_t v14 = "#gpsd,#supl,No Qop vals";
      uint64_t v15 = v19;
      uint32_t v16 = 2;
    }
    _os_log_impl(&dword_24B3DE000, v15, OS_LOG_TYPE_DEFAULT, v14, v26, v16);
LABEL_21:
    if (v53[64]) {
      sub_24B4B3170((uint64_t)v53, a3 + 16);
    }
    if (v54)
    {
      *(_WORD *)(a3 + 72) = 257;
    }
    else
    {
      int v20 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int16 v26 = 0;
        _os_log_impl(&dword_24B3DE000, v20, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,Not an emergency session", v26, 2u);
      }
    }
    if (v52[64]) {
      sub_24B4B3170((uint64_t)v52, a3 + 80);
    }
    if (v60)
    {
      if (v60 == 1)
      {
        int v21 = 2;
        goto LABEL_35;
      }
      if (v60 == 2)
      {
        int v21 = 1;
LABEL_35:
        *(_DWORD *)(a3 + 136) = v21;
LABEL_36:
        if (__p)
        {
          uint64_t v24 = __p;
          operator delete(__p);
        }
        return v8;
      }
    }
    *(_DWORD *)(a3 + 136) = 0;
    goto LABEL_36;
  }
  char v17 = qword_26B17C488;
  uint64_t v8 = 0;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl(&dword_24B3DE000, v17, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#input,validate SUPL INIT failed", buf, 2u);
    return 0;
  }
  return v8;
}

void sub_24B4B36D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4B36F0(uint64_t a1, uint64_t a2, __int16 *a3, _DWORD *a4)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  *a4 = 1;
  long long v37 = 0;
  long long v38 = 0;
  uint64_t v39 = 0;
  sub_24B47A720(&v37, *(const void **)a2, *(void *)(a2 + 8), *(void *)(a2 + 8) - *(void *)a2);
  __int16 v29 = *a3;
  if (*((char *)a3 + 31) < 0)
  {
    sub_24B4A6624(&v30, *((void **)a3 + 1), *((void *)a3 + 2));
  }
  else
  {
    long long v30 = *(_OWORD *)(a3 + 4);
    uint64_t v31 = *((void *)a3 + 3);
  }
  char v32 = *((unsigned char *)a3 + 32);
  if (*((char *)a3 + 63) < 0)
  {
    sub_24B4A6624(&v33, *((void **)a3 + 5), *((void *)a3 + 6));
  }
  else
  {
    long long v33 = *(_OWORD *)(a3 + 20);
    uint64_t v34 = *((void *)a3 + 7);
  }
  long long v35 = *((_OWORD *)a3 + 4);
  uint64_t v36 = *((void *)a3 + 10);
  uint64_t v7 = HIBYTE(v31);
  unint64_t v8 = *((void *)&v30 + 1);
  if (v31 < 0) {
    uint64_t v7 = *((void *)&v30 + 1);
  }
  if (!v7)
  {
    *a4 = 4;
    uint64_t v12 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      goto LABEL_43;
    }
    *(_WORD *)uint64_t buf = 0;
    unsigned __int16 v11 = "#gpsd,#supl,#input,SLP Address not provisioned";
    goto LABEL_22;
  }
  if (v34 >= 0) {
    unint64_t v9 = HIBYTE(v34);
  }
  else {
    unint64_t v9 = *((void *)&v33 + 1);
  }
  if (!v9)
  {
    *a4 = 4;
    uint64_t v12 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      goto LABEL_43;
    }
    *(_WORD *)uint64_t buf = 0;
    unsigned __int16 v11 = "#gpsd,#supl,#input,IMSI not provisioned";
    goto LABEL_22;
  }
  if (SHIBYTE(v31) < 0 && *((void *)&v30 + 1) >= 0x100uLL)
  {
    *a4 = 4;
    uint64_t v10 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      goto LABEL_43;
    }
    *(_DWORD *)uint64_t buf = 134217984;
    unint64_t v41 = v8;
    unsigned __int16 v11 = "#gpsd,#supl,#input,Invalid SLP Address length,%lu";
LABEL_26:
    uint64_t v13 = v10;
    uint32_t v14 = 12;
    goto LABEL_27;
  }
  if (v9 >= 0x10)
  {
    *a4 = 4;
    uint64_t v10 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      goto LABEL_43;
    }
    *(_DWORD *)uint64_t buf = 134217984;
    unint64_t v41 = v9;
    unsigned __int16 v11 = "#gpsd,#supl,#input,Invalid IMSI Len,%lu";
    goto LABEL_26;
  }
  if (!sub_24B4B2DF8(&v37))
  {
    *a4 = 4;
    uint64_t v12 = qword_26B17C488;
    if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
      goto LABEL_43;
    }
    *(_WORD *)uint64_t buf = 0;
    unsigned __int16 v11 = "#gpsd,#supl,#input,Invalide SUPL INIT";
LABEL_22:
    uint64_t v13 = v12;
    uint32_t v14 = 2;
LABEL_27:
    _os_log_error_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_ERROR, v11, buf, v14);
    goto LABEL_43;
  }
  uint64_t v15 = *(NSObject **)(a1 + 88);
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 3321888768;
  v16[2] = sub_24B4B3B78;
  v16[3] = &unk_26FE863F8;
  v16[4] = a1;
  char v17 = 0;
  int v18 = 0;
  uint64_t v19 = 0;
  sub_24B47A720(&v17, v37, (uint64_t)v38, v38 - v37);
  __int16 v20 = v29;
  if (SHIBYTE(v31) < 0)
  {
    sub_24B4A6624(&v21, (void *)v30, *((unint64_t *)&v30 + 1));
  }
  else
  {
    long long v21 = v30;
    uint64_t v22 = v31;
  }
  char v23 = v32;
  if (SHIBYTE(v34) < 0)
  {
    sub_24B4A6624(&__p, (void *)v33, *((unint64_t *)&v33 + 1));
  }
  else
  {
    long long __p = v33;
    uint64_t v25 = v34;
  }
  long long v26 = v35;
  uint64_t v27 = v36;
  __int16 v28 = a4;
  dispatch_async(v15, v16);
  if (SHIBYTE(v25) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v22) < 0) {
    operator delete((void *)v21);
  }
  if (v17)
  {
    int v18 = v17;
    operator delete(v17);
  }
LABEL_43:
  if (SHIBYTE(v34) < 0) {
    operator delete((void *)v33);
  }
  if (SHIBYTE(v31) < 0) {
    operator delete((void *)v30);
  }
  if (v37)
  {
    long long v38 = v37;
    operator delete(v37);
  }
}

void sub_24B4B3AFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a14) {
    operator delete(a14);
  }
  sub_24B3E765C((uint64_t)&a32);
  long long v40 = *(void **)(v38 - 120);
  if (v40)
  {
    *(void *)(v38 - 112) = v40;
    operator delete(v40);
  }
  _Unwind_Resume(a1);
}

void sub_24B4B3B78(uint64_t a1)
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  int64_t v2 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(_DWORD *)(a1 + 48) - *(_DWORD *)(a1 + 40);
    *(_DWORD *)uint64_t buf = 67109120;
    *(_DWORD *)long long v44 = v3;
    _os_log_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#input,SUPL INIT Len,%u", buf, 8u);
    int64_t v2 = qword_26B17C488;
  }
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = (void *)(a1 + 72);
    if (*(char *)(a1 + 95) < 0) {
      int v4 = (void *)*v4;
    }
    int v5 = *(unsigned __int16 *)(a1 + 64);
    if (*(unsigned char *)(a1 + 96)) {
      int v6 = 84;
    }
    else {
      int v6 = 70;
    }
    uint64_t v7 = (void *)(a1 + 104);
    if (*(char *)(a1 + 127) < 0) {
      uint64_t v7 = (void *)*v7;
    }
    if (*(unsigned char *)(a1 + 136)) {
      int v8 = 84;
    }
    else {
      int v8 = 70;
    }
    *(_DWORD *)uint64_t buf = 136381699;
    *(void *)long long v44 = v4;
    *(_WORD *)&v44[8] = 1025;
    *(_DWORD *)&v44[10] = v5;
    *(_WORD *)&v44[14] = 1025;
    *(_DWORD *)&v44[16] = v6;
    *(_WORD *)long long v45 = 2081;
    *(void *)&v45[2] = v7;
    __int16 v46 = 1025;
    int v47 = v8;
    _os_log_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#input,SLP,%{private}.s,%{private}.u,MSA,%{private}.c,IMSI,%{private}.s,HeloEnabled,%{private}.c", buf, 0x28u);
  }
  buf[0] = 0;
  *(void *)long long v45 = 0;
  *(_OWORD *)&v44[4] = 0uLL;
  *(_WORD *)&__int16 v45[8] = *(_WORD *)(a1 + 64);
  std::string::operator=((std::string *)&v44[4], (const std::string *)(a1 + 72));
  std::string::operator=((std::string *)&v44[4], (const std::string *)(a1 + 72));
  int v9 = *(unsigned __int16 *)&v45[8];
  if (*(unsigned __int16 *)&v45[8] - 7277 <= 0xFFFFFFFD)
  {
    uint64_t v10 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t v38 = 67109120;
      int v39 = v9;
      _os_log_impl(&dword_24B3DE000, v10, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#input,Non Standard Port, %u", v38, 8u);
    }
  }
  buf[0] = 2;
  uint64_t v11 = sub_24B4AF924();
  sub_24B4AFBF0(v11, 0, (uint64_t)buf);
  uint64_t v12 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v38 = 0;
    _os_log_impl(&dword_24B3DE000, v12, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#input,SetSlpInfo done", v38, 2u);
  }
  long long v40 = 0;
  unint64_t v41 = 0;
  uint64_t v42 = 0;
  *(_WORD *)uint64_t v38 = 1;
  if (*(char *)(a1 + 127) < 0)
  {
    sub_24B4A6624(__p, *(void **)(a1 + 104), *(void *)(a1 + 112));
    uint64_t v13 = (char *)v40;
    uint32_t v14 = v41;
  }
  else
  {
    uint64_t v13 = 0;
    uint32_t v14 = 0;
    *(_OWORD *)long long __p = *(_OWORD *)(a1 + 104);
    uint64_t v35 = *(void *)(a1 + 120);
  }
  if (v35 >= 0) {
    uint64_t v15 = (char *)HIBYTE(v35);
  }
  else {
    uint64_t v15 = (char *)__p[1];
  }
  LOBYTE(v31) = -1;
  unint64_t v16 = v14 - v13;
  if (v16 > 7)
  {
    if (v16 != 8) {
      unint64_t v41 = v13 + 8;
    }
  }
  else
  {
    sub_24B4ADA18(&v40, 8 - v16, &v31);
  }
  if (v15)
  {
    unint64_t v17 = 0;
    unint64_t v18 = 0;
    uint64_t v19 = v15 - 1;
    while (1)
    {
      if (SHIBYTE(v35) < 0)
      {
        __int16 v20 = (void **)__p[0];
        unsigned int v21 = *((unsigned __int8 *)__p[0] + v18) - 48;
        if (v21 >= 0xA) {
          LOBYTE(v21) = -1;
        }
        if (v19 != (char *)v18)
        {
          uint64_t v22 = v18 + 1;
LABEL_42:
          char v23 = *((unsigned char *)v20 + v22) - 48;
          if ((v23 & 0xFEu) >= 0xA) {
            char v23 = -1;
          }
          goto LABEL_44;
        }
      }
      else
      {
        __int16 v20 = __p;
        unsigned int v21 = *((unsigned __int8 *)__p + v18) - 48;
        if (v21 >= 0xA) {
          LOBYTE(v21) = -1;
        }
        if (v19 != (char *)v18)
        {
          uint64_t v22 = v18 | 1;
          goto LABEL_42;
        }
      }
      char v23 = -1;
LABEL_44:
      *((unsigned char *)v40 + v17) = v21 | (16 * v23);
      v18 += 2;
      if (v18 < (unint64_t)v15 && v17++ < 7) {
        continue;
      }
      break;
    }
  }
  if (SHIBYTE(v35) < 0) {
    operator delete(__p[0]);
  }
  uint64_t v25 = sub_24B4AB040();
  sub_24B4AB20C(v25, 0, (uint64_t)v38);
  long long v26 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v31) = 0;
    _os_log_impl(&dword_24B3DE000, v26, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#in,SetSETInfo done", (uint8_t *)&v31, 2u);
  }
  uint64_t v31 = 0;
  char v32 = 0;
  uint64_t v33 = 0;
  if (&v31 != (void **)(a1 + 40)) {
    sub_24B3EAC0C(&v31, *(char **)(a1 + 40), *(char **)(a1 + 48), *(void *)(a1 + 48) - *(void *)(a1 + 40));
  }
  uint64_t v27 = sub_24B4AB040();
  int v28 = sub_24B4AB684(v27, 0, (const void **)&v31, 1u);
  if (v28)
  {
    **(_DWORD **)(a1 + 152) = 7;
    __int16 v29 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t v36 = 67109120;
      int v37 = v28;
      _os_log_error_impl(&dword_24B3DE000, v29, OS_LOG_TYPE_ERROR, "#gpsd,#supl,ProcessSuplMtlrMessage returned error %u", v36, 8u);
    }
  }
  else
  {
    long long v30 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_24B3DE000, v30, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,ProcessSuplMtlrMessage success", v36, 2u);
    }
  }
  if (v31)
  {
    char v32 = v31;
    operator delete(v31);
  }
  if (v40)
  {
    unint64_t v41 = v40;
    operator delete(v40);
  }
  if ((v45[7] & 0x80000000) != 0) {
    operator delete(*(void **)&v44[4]);
  }
}

void sub_24B4B406C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a23) {
    operator delete(a23);
  }
  if (*(char *)(v24 - 49) < 0) {
    operator delete(*(void **)(v24 - 72));
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_24B4B40D0(__n128 *a1, uint64_t a2)
{
  a1[2].n128_u64[1] = 0;
  a1[3].n128_u64[0] = 0;
  int v4 = &a1[2].n128_i8[8];
  a1[3].n128_u64[1] = 0;
  sub_24B47A720(&a1[2].n128_u64[1], *(const void **)(a2 + 40), *(void *)(a2 + 48), *(void *)(a2 + 48) - *(void *)(a2 + 40));
  *((_WORD *)v4 + 12) = *(_WORD *)(a2 + 64);
  if (*(char *)(a2 + 95) < 0)
  {
    sub_24B4A6624(v4 + 32, *(void **)(a2 + 72), *(void *)(a2 + 80));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 72);
    *((void *)v4 + 6) = *(void *)(a2 + 88);
    *((_OWORD *)v4 + 2) = v5;
  }
  a1[6].n128_u8[0] = *(unsigned char *)(a2 + 96);
  int v6 = &a1[6].n128_u8[8];
  if (*(char *)(a2 + 127) < 0)
  {
    sub_24B4A6624(v6, *(void **)(a2 + 104), *(void *)(a2 + 112));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 104);
    a1[7].n128_u64[1] = *(void *)(a2 + 120);
    *(_OWORD *)int v6 = v7;
  }
  __n128 result = *(__n128 *)(a2 + 128);
  a1[9].n128_u64[0] = *(void *)(a2 + 144);
  a1[8] = result;
  return result;
}

void sub_24B4B4198(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 95) < 0) {
    operator delete(*v3);
  }
  long long v5 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 48) = v5;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4B41CC(uint64_t a1)
{
  if (*(char *)(a1 + 127) < 0) {
    operator delete(*(void **)(a1 + 104));
  }
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  int64_t v2 = *(void **)(a1 + 40);
  if (v2)
  {
    *(void *)(a1 + 48) = v2;
    operator delete(v2);
  }
}

uint64_t sub_24B4B4234(uint64_t a1, unint64_t *a2, unsigned int a3, unsigned int a4, unsigned int a5, int a6)
{
  unsigned int v8 = a4;
  unsigned int v9 = a3;
  uint64_t v40 = *MEMORY[0x263EF8340];
  BOOL v11 = a3 < 0x3E8 && a4 < 0x3E8 && a5 >> 28 == 0;
  uint64_t v12 = v11;
  if (v11)
  {
    uint64_t v15 = *(unsigned char **)(a1 + 56);
    unint64_t v16 = (unsigned char **)(a1 + 56);
    unint64_t v17 = *(void *)(a1 + 64) - (void)v15;
    unsigned int v31 = v12;
    if (v17 > 3)
    {
      if (v17 != 4) {
        *(void *)(a1 + 64) = v15 + 4;
      }
    }
    else
    {
      sub_24B3E3AC4((unint64_t *)(a1 + 56), 4 - v17);
      uint64_t v15 = *v16;
    }
    unsigned int v20 = 0;
    *uint64_t v15 = a5 >> 20;
    *(unsigned char *)(*(void *)(a1 + 56) + 1) = a5 >> 12;
    *(unsigned char *)(*(void *)(a1 + 56) + 2) = a5 >> 4;
    *(unsigned char *)(*(void *)(a1 + 56) + 3) = 16 * a5;
    *(unsigned char *)(*(void *)(a1 + 56) + 3) >>= 4;
    do
    {
      do
      {
        unsigned int v21 = v20;
        char v22 = v9;
        unsigned int v23 = (unsigned __int16)v9;
        LOWORD(v9) = (unsigned __int16)v9 / 0xAu;
        buf[0] = v22 - 10 * v9;
        sub_24B4B62A0(a1 + 8, *(char **)(a1 + 8), (char *)buf);
        unsigned int v20 = v21 + 1;
      }
      while (v23 > 9);
    }
    while (v21 < 2);
    int v24 = 0;
    do
    {
      do
      {
        char v25 = v8;
        int v26 = v24;
        unsigned int v27 = (unsigned __int16)v8;
        LOWORD(v8) = (unsigned __int16)v8 / 0xAu;
        buf[0] = v25 - 10 * v8;
        sub_24B4B62A0(a1 + 32, *(char **)(a1 + 32), (char *)buf);
        int v24 = v26 - 1;
      }
      while (v27 > 9);
    }
    while (!v26);
    *(_DWORD *)a1 = 1;
    int v28 = (unsigned char *)*a2;
    unint64_t v29 = a2[1] - *a2;
    if (v29 > 1)
    {
      uint64_t v12 = v31;
      if (v29 != 2) {
        a2[1] = (unint64_t)(v28 + 2);
      }
    }
    else
    {
      sub_24B3E3AC4(a2, 2 - v29);
      int v28 = (unsigned char *)*a2;
      uint64_t v12 = v31;
    }
    unsigned char *v28 = BYTE1(a6);
    *(unsigned char *)(*a2 + 1) = a6;
  }
  else
  {
    unint64_t v18 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 67109888;
      unsigned int v33 = v9;
      __int16 v34 = 1024;
      unsigned int v35 = v8;
      __int16 v36 = 1024;
      unsigned int v37 = a5;
      __int16 v38 = 1024;
      int v39 = a6;
      _os_log_error_impl(&dword_24B3DE000, v18, OS_LOG_TYPE_ERROR, "#gpsd,#supl,Either MCC %d, MNC %d, CID %d, TAC %d is not in range", buf, 0x1Au);
    }
  }
  return v12;
}

void *sub_24B4B44B8(void *a1)
{
  int64_t v2 = (void *)a1[11];
  if (v2)
  {
    a1[12] = v2;
    operator delete(v2);
  }
  int v3 = (void *)a1[8];
  if (v3)
  {
    a1[9] = v3;
    operator delete(v3);
  }
  int v4 = (void *)a1[5];
  if (v4)
  {
    a1[6] = v4;
    operator delete(v4);
  }
  long long v5 = (void *)a1[2];
  if (v5)
  {
    a1[3] = v5;
    operator delete(v5);
  }
  return a1;
}

void sub_24B4B451C(uint64_t a1, int *a2)
{
  int v3 = *(NSObject **)(a1 + 88);
  v4[0] = MEMORY[0x263EF8330];
  v4[1] = 3321888768;
  void v4[2] = sub_24B4B4678;
  v4[3] = &unk_26FE86428;
  int v5 = *a2;
  long long v7 = 0;
  uint64_t v8 = 0;
  int v6 = 0;
  sub_24B3E7F48(&v6, *((const void **)a2 + 1), *((void *)a2 + 2), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 2));
  unsigned int v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  sub_24B3E809C(&v9, *((const void **)a2 + 4), *((void *)a2 + 5), (uint64_t)(*((void *)a2 + 5) - *((void *)a2 + 4)) >> 4);
  long long __p = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  sub_24B3E8194(&__p, *((const void **)a2 + 7), *((void *)a2 + 8), (uint64_t)(*((void *)a2 + 8) - *((void *)a2 + 7)) >> 5);
  dispatch_async(v3, v4);
  if (__p)
  {
    uint64_t v13 = __p;
    operator delete(__p);
  }
  if (v9)
  {
    uint64_t v10 = v9;
    operator delete(v9);
  }
  if (v6)
  {
    long long v7 = v6;
    operator delete(v6);
  }
}

void sub_24B4B4644(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  if (a14) {
    operator delete(a14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B4B4678(uint64_t a1)
{
  uint64_t v126 = *MEMORY[0x263EF8340];
  v99[0] = 0;
  uint64_t v100 = 0;
  LODWORD(v101[0]) = -1;
  *(void *)((char *)v101 + 4) = 0;
  memset((char *)&v101[2] + 4, 0, 13);
  *(void *)((char *)&v101[1] + 4) = 0;
  v101[5] = 0;
  int v102 = 0;
  uint64_t v103 = -1;
  uint64_t v104 = 0;
  __int16 v105 = 0;
  __int16 v106 = -1;
  uint64_t v107 = 0;
  uint64_t v108 = 0;
  v109[0] = 0;
  *(void *)((char *)v109 + 6) = 0;
  v109[2] = 0;
  v109[3] = 0;
  int v110 = 0;
  char v111 = 1;
  int v2 = *(_DWORD *)(a1 + 32);
  if (v2 != 5)
  {
    if (v2 == 2)
    {
      v99[0] = 2;
      uint64_t v11 = *(void *)(a1 + 88);
      uint64_t v12 = *(void *)(a1 + 96) - v11;
      if (v12)
      {
        unint64_t v13 = v12 >> 5;
        if (v13 <= 1) {
          unint64_t v13 = 1;
        }
        while (!*(unsigned char *)v11)
        {
          v11 += 32;
          if (!--v13) {
            goto LABEL_16;
          }
        }
        unsigned int v16 = *(unsigned __int16 *)(v11 + 2);
        LOWORD(v103) = *(_WORD *)(v11 + 2);
        unsigned int v14 = *(unsigned __int16 *)(v11 + 4);
        WORD1(v103) = *(_WORD *)(v11 + 4);
        unsigned int v15 = *(_DWORD *)(v11 + 12);
        HIDWORD(v103) = v15;
        unsigned int v83 = *(unsigned __int16 *)(v11 + 16);
        if (v83 > 0x1FF)
        {
          int v92 = qword_26B17C488;
          if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)uint64_t buf = 67109120;
            unsigned int v124 = v83;
            _os_log_error_impl(&dword_24B3DE000, v92, OS_LOG_TYPE_ERROR, "#gpsd,#supl,,Invalid PSC,%u", buf, 8u);
            unsigned int v16 = (unsigned __int16)v103;
            unsigned int v14 = WORD1(v103);
            unsigned int v15 = HIDWORD(v103);
          }
        }
        else
        {
          __int16 v106 = *(_WORD *)(v11 + 16);
        }
      }
      else
      {
LABEL_16:
        unsigned int v14 = 0xFFFF;
        unsigned int v15 = -1;
        unsigned int v16 = 0xFFFF;
      }
      unint64_t v17 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 67109632;
        unsigned int v124 = v16;
        *(_WORD *)uint64_t v125 = 1024;
        *(_DWORD *)&v125[2] = v14;
        *(_WORD *)&v125[6] = 1024;
        *(_DWORD *)&v125[8] = v15;
        _os_log_impl(&dword_24B3DE000, v17, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,WCDMA Serving,%u,%u,%u", buf, 0x14u);
        unsigned int v16 = (unsigned __int16)v103;
        unsigned int v14 = WORD1(v103);
        unsigned int v15 = HIDWORD(v103);
      }
      if (v16 <= 0x3E7 && v14 <= 0x3E7 && !(v15 >> 28)) {
        goto LABEL_119;
      }
      uint64_t v18 = qword_26B17C488;
      if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
        goto LABEL_119;
      }
      *(_WORD *)uint64_t buf = 0;
      uint64_t v19 = "#gpsd,#supl,Error in WCDMA Serving Cell Info";
    }
    else
    {
      if (v2 != 1) {
        goto LABEL_119;
      }
      v99[0] = 1;
      v101[0] = -1;
      uint64_t v3 = *(void *)(a1 + 64);
      uint64_t v4 = *(void *)(a1 + 72) - v3;
      if (v4)
      {
        unint64_t v5 = v4 >> 4;
        if (v5 <= 1) {
          unint64_t v5 = 1;
        }
        int v6 = (_DWORD *)(v3 + 8);
        while (!*((unsigned char *)v6 - 8))
        {
          v6 += 4;
          if (!--v5) {
            goto LABEL_10;
          }
        }
        LOBYTE(v101[4]) = -1;
        unsigned int v10 = *((unsigned __int16 *)v6 - 3);
        LOWORD(v101[0]) = *((_WORD *)v6 - 3);
        unsigned int v9 = *((unsigned __int16 *)v6 - 2);
        WORD1(v101[0]) = *((_WORD *)v6 - 2);
        int v8 = (unsigned __int16)*v6;
        WORD2(v101[0]) = *v6;
        int v84 = v6[1];
        int v7 = (unsigned __int16)v84;
        HIWORD(v101[0]) = v84;
      }
      else
      {
LABEL_10:
        int v7 = 0xFFFF;
        int v8 = 0xFFFF;
        unsigned int v9 = 0xFFFF;
        unsigned int v10 = 0xFFFF;
      }
      int v85 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 67175425;
        unsigned int v124 = v10;
        *(_WORD *)uint64_t v125 = 1025;
        *(_DWORD *)&v125[2] = v9;
        *(_WORD *)&v125[6] = 1025;
        *(_DWORD *)&v125[8] = v8;
        *(_WORD *)&v125[12] = 1025;
        *(_DWORD *)&v125[14] = v7;
        _os_log_impl(&dword_24B3DE000, v85, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,GSM Serving,%{private}.u,%{private}.u,%{private}.u,%{private}.u", buf, 0x1Au);
        unsigned int v10 = LOWORD(v101[0]);
        unsigned int v9 = WORD1(v101[0]);
      }
      if (v10 <= 0x3E7 && v9 < 0x3E8) {
        goto LABEL_119;
      }
      uint64_t v18 = qword_26B17C488;
      if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
        goto LABEL_119;
      }
      *(_WORD *)uint64_t buf = 0;
      uint64_t v19 = "#gpsd,#supl,Invalid GSM Serving Cell Info";
    }
    __int16 v86 = v18;
    uint32_t v87 = 2;
    goto LABEL_115;
  }
  v99[0] = 4;
  unsigned int v20 = (char *)operator new(0xA8uLL, MEMORY[0x263F8C180]);
  unsigned int v21 = v20;
  if (v20)
  {
    *((void *)v20 + 18) = 0;
    *((void *)v20 + 19) = 0;
    *((void *)v20 + 20) = 0;
    *((void *)v20 + 1) = 0;
    *((void *)v20 + 2) = 0;
    *((_DWORD *)v20 + 6) = 0;
    *((_OWORD *)v20 + 2) = 0u;
    *((_OWORD *)v20 + 3) = 0u;
    *((_OWORD *)v20 + 4) = 0u;
    *((_OWORD *)v20 + 5) = 0u;
    *(_OWORD *)(v20 + 90) = 0u;
    *((void *)v20 + 15) = 0;
    *((void *)v20 + 16) = 0;
    *((void *)v20 + 14) = 0;
    *((_DWORD *)v20 + 34) = 0;
    *(_WORD *)unsigned int v20 = -1;
  }
  int v110 = v20;
  *(_WORD *)unsigned int v20 = 3;
  uint64_t v22 = *(void *)(a1 + 40);
  if (*(void *)(a1 + 48) == v22) {
    goto LABEL_119;
  }
  uint64_t v23 = 0;
  unint64_t v24 = 0;
  __int16 v97 = v20 + 56;
  int v98 = v20 + 32;
  __int16 v95 = v20 + 112;
  unint64_t v96 = v20 + 80;
  uint64_t v93 = (uint64_t)(v20 + 160);
  int v94 = (int64x2_t *)(v20 + 144);
  while (!*(unsigned char *)(v22 + 28 * v24))
  {
    if (v23 <= 7)
    {
      *(_DWORD *)uint64_t buf = 0;
      LOWORD(v124) = 0;
      *(_DWORD *)uint64_t v125 = 0;
      memset(&v125[8], 0, 106);
      if (*(unsigned __int16 *)(v22 + 28 * v24 + 16) <= 0x1F7u)
      {
        LOWORD(v124) = *(_WORD *)(v22 + 28 * v24 + 16);
        if (*(unsigned __int8 *)(v22 + 28 * v24 + 18) <= 0x61u)
        {
          v125[112] = *(unsigned char *)(v22 + 28 * v24 + 18);
          *(_DWORD *)&v125[104] = 1;
        }
        if (*(unsigned __int8 *)(v22 + 28 * v24 + 19) <= 0x22u)
        {
          v125[113] = *(unsigned char *)(v22 + 28 * v24 + 19);
          *(_DWORD *)&v125[108] = 1;
        }
        *(_DWORD *)uint64_t buf = sub_24B4B4234((uint64_t)v125, (unint64_t *)&v125[80], *(unsigned __int16 *)(v22 + 28 * v24 + 2), *(unsigned __int16 *)(v22 + 28 * v24 + 4), *(_DWORD *)(v22 + 28 * v24 + 12), *(unsigned __int16 *)(v22 + 28 * v24 + 8));
        unint64_t v30 = *((void *)v21 + 19);
        unint64_t v29 = *((void *)v21 + 20);
        if (v30 >= v29)
        {
          uint64_t v56 = (uint64_t)(v30 - v94->i64[0]) >> 7;
          if ((unint64_t)(v56 + 1) >> 57) {
            sub_24B3E3AAC();
          }
          uint64_t v57 = v29 - v94->i64[0];
          uint64_t v58 = v57 >> 6;
          if (v57 >> 6 <= (unint64_t)(v56 + 1)) {
            uint64_t v58 = v56 + 1;
          }
          if ((unint64_t)v57 >= 0x7FFFFFFFFFFFFF80) {
            unint64_t v59 = 0x1FFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v59 = v58;
          }
          *(void *)uint64_t v116 = v93;
          if (v59) {
            int v60 = (char *)sub_24B49C494(v93, v59);
          }
          else {
            int v60 = 0;
          }
          uint64_t v61 = &v60[128 * v56];
          *(void *)uint64_t v115 = v60;
          *(void *)&v115[8] = v61;
          *(void *)&v115[16] = v61;
          *(void *)&v115[24] = &v60[128 * v59];
          int v62 = *(_DWORD *)buf;
          *((_WORD *)v61 + 2) = v124;
          *(_DWORD *)uint64_t v61 = v62;
          sub_24B49C1EC((uint64_t)(v61 + 8), (int *)v125);
          uint64_t v63 = *(void *)&v125[104];
          *((_DWORD *)v61 + 30) = *(_DWORD *)&v125[112];
          *((void *)v61 + 14) = v63;
          uint64_t v64 = *(void *)&v115[8];
          uint64_t v33 = *(void *)&v115[16] + 128;
          *(void *)&v115[16] += 128;
          uint64_t v66 = *((void *)v21 + 18);
          unint64_t v65 = *((void *)v21 + 19);
          if (v65 == v66)
          {
            int64x2_t v72 = vdupq_n_s64(v65);
          }
          else
          {
            uint64_t v67 = 0;
            do
            {
              uint64_t v68 = v64 + v67;
              uint64_t v69 = v65 + v67;
              int v70 = *(_DWORD *)(v65 + v67 - 128);
              *(_WORD *)(v68 - 124) = *(_WORD *)(v65 + v67 - 124);
              *(_DWORD *)(v68 - 128) = v70;
              *(_DWORD *)(v68 - 120) = *(_DWORD *)(v65 + v67 - 120);
              *(void *)(v68 - 104) = 0;
              *(void *)(v68 - 96) = 0;
              *(void *)(v68 - 112) = 0;
              *(_OWORD *)(v68 - 112) = *(_OWORD *)(v65 + v67 - 112);
              *(void *)(v68 - 96) = *(void *)(v65 + v67 - 96);
              *(void *)(v69 - 112) = 0;
              *(void *)(v69 - 104) = 0;
              *(void *)(v69 - 96) = 0;
              *(void *)(v68 - 88) = 0;
              *(void *)(v68 - 80) = 0;
              *(void *)(v68 - 72) = 0;
              *(_OWORD *)(v68 - 88) = *(_OWORD *)(v65 + v67 - 88);
              *(void *)(v68 - 72) = *(void *)(v65 + v67 - 72);
              *(void *)(v69 - 88) = 0;
              *(void *)(v69 - 80) = 0;
              *(void *)(v69 - 72) = 0;
              *(void *)(v68 - 64) = 0;
              *(void *)(v68 - 56) = 0;
              *(void *)(v68 - 48) = 0;
              *(_OWORD *)(v68 - 64) = *(_OWORD *)(v65 + v67 - 64);
              *(void *)(v68 - 48) = *(void *)(v65 + v67 - 48);
              *(void *)(v69 - 64) = 0;
              *(void *)(v69 - 56) = 0;
              *(void *)(v69 - 48) = 0;
              *(void *)(v68 - 40) = 0;
              *(void *)(v68 - 32) = 0;
              *(void *)(v68 - 24) = 0;
              *(_OWORD *)(v68 - 40) = *(_OWORD *)(v65 + v67 - 40);
              *(void *)(v68 - 24) = *(void *)(v65 + v67 - 24);
              *(void *)(v69 - 40) = 0;
              *(void *)(v69 - 32) = 0;
              *(void *)(v69 - 24) = 0;
              uint64_t v71 = *(void *)(v65 + v67 - 16);
              *(_DWORD *)(v68 - 8) = *(_DWORD *)(v65 + v67 - 8);
              *(void *)(v68 - 16) = v71;
              v67 -= 128;
            }
            while (v65 + v67 != v66);
            int64x2_t v72 = *v94;
            uint64_t v33 = *(void *)&v115[16];
            v64 += v67;
          }
          *((void *)v21 + 18) = v64;
          *((void *)v21 + 19) = v33;
          *(int64x2_t *)&v115[8] = v72;
          uint64_t v73 = *((void *)v21 + 20);
          *((void *)v21 + 20) = *(void *)&v115[24];
          *(void *)&v115[24] = v73;
          *(void *)uint64_t v115 = v72.i64[0];
          sub_24B4B65E8((uint64_t)v115);
        }
        else
        {
          int v31 = *(_DWORD *)buf;
          *(_WORD *)(v30 + 4) = v124;
          *(_DWORD *)unint64_t v30 = v31;
          sub_24B49C1EC(v30 + 8, (int *)v125);
          uint64_t v32 = *(void *)&v125[104];
          *(_DWORD *)(v30 + 120) = *(_DWORD *)&v125[112];
          *(void *)(v30 + 112) = v32;
          uint64_t v33 = v30 + 128;
          *((void *)v21 + 19) = v33;
        }
        *((void *)v21 + 19) = v33;
        int v74 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v75 = *(void *)(a1 + 40) + 28 * v24;
          int v76 = *(unsigned __int16 *)(v75 + 2);
          int v77 = *(unsigned __int16 *)(v75 + 4);
          int v78 = *(unsigned __int16 *)(v75 + 16);
          int v79 = *(unsigned __int8 *)(v75 + 18);
          int v80 = *(unsigned __int8 *)(v75 + 19);
          int v82 = *(_DWORD *)(v75 + 8);
          int v81 = *(_DWORD *)(v75 + 12);
          LODWORD(v75) = *(_DWORD *)(v75 + 24);
          *(_DWORD *)uint64_t v115 = 134285569;
          *(void *)&v115[4] = v24;
          *(_WORD *)&v115[12] = 1025;
          *(_DWORD *)&v115[14] = v76;
          *(_WORD *)&v115[18] = 1025;
          *(_DWORD *)&v115[20] = v77;
          *(_WORD *)&v115[24] = 1025;
          *(_DWORD *)&v115[26] = v81;
          *(_WORD *)&v115[30] = 1025;
          *(_DWORD *)uint64_t v116 = v78;
          *(_WORD *)&v116[4] = 1025;
          *(_DWORD *)&v116[6] = v79;
          __int16 v117 = 1025;
          int v118 = v80;
          __int16 v119 = 1025;
          int v120 = v82;
          __int16 v121 = 1025;
          int v122 = v75;
          _os_log_impl(&dword_24B3DE000, v74, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,LTE neighbor,%{private}.zd,MCC %{private}.u,MNC %{private}.u,CI %{private}.u,PCI %{private}.u,RSRP %{private}.u,RSRQ %{private}.u,TAC %{private}.u,DLFREQ %{private}.u", v115, 0x3Cu);
        }
        uint64_t v23 = (v23 + 1);
        if (*(void *)&v125[80])
        {
          *(void *)&v125[88] = *(void *)&v125[80];
          operator delete(*(void **)&v125[80]);
        }
      }
      if (*(void *)&v125[56])
      {
        *(void *)&v125[64] = *(void *)&v125[56];
        operator delete(*(void **)&v125[56]);
      }
      if (*(void *)&v125[32])
      {
        *(void *)&v125[40] = *(void *)&v125[32];
        operator delete(*(void **)&v125[32]);
      }
      if (*(void *)&v125[8])
      {
        *(void *)&v125[16] = *(void *)&v125[8];
        operator delete(*(void **)&v125[8]);
      }
    }
LABEL_75:
    ++v24;
    uint64_t v22 = *(void *)(a1 + 40);
    if (v24 >= 0x6DB6DB6DB6DB6DB7 * ((*(void *)(a1 + 48) - v22) >> 2))
    {
      if (*((void *)v21 + 18) != *((void *)v21 + 19)) {
        *((_DWORD *)v21 + 5) = 1;
      }
      goto LABEL_119;
    }
  }
  unsigned int v25 = *(unsigned __int16 *)(v22 + 28 * v24 + 16);
  if (v25 < 0x1F8)
  {
    *(_DWORD *)uint64_t buf = 0;
    memset(v125, 0, 72);
    long long __p = 0;
    unint64_t v113 = 0;
    uint64_t v114 = 0;
    if (sub_24B4B4234((uint64_t)buf, (unint64_t *)&__p, *(unsigned __int16 *)(v22 + 28 * v24 + 2), *(unsigned __int16 *)(v22 + 28 * v24 + 4), *(_DWORD *)(v22 + 28 * v24 + 12), *(unsigned __int16 *)(v22 + 28 * v24 + 8)))
    {
      *((_WORD *)v21 + 52) = *(_WORD *)(*(void *)(a1 + 40) + 28 * v24 + 16);
      *((_DWORD *)v21 + 6) = *(_DWORD *)buf;
      sub_24B3EAC0C(v98, *(char **)v125, *(char **)&v125[8], *(void *)&v125[8] - *(void *)v125);
      sub_24B3EAC0C(v97, *(char **)&v125[24], *(char **)&v125[32], *(void *)&v125[32] - *(void *)&v125[24]);
      sub_24B3EAC0C(v96, *(char **)&v125[48], *(char **)&v125[56], *(void *)&v125[56] - *(void *)&v125[48]);
      sub_24B3EAC0C(v95, (char *)__p, v113, v113 - (unsigned char *)__p);
      uint64_t v26 = v23;
      v21[136] = -1;
      uint64_t v27 = *(void *)(a1 + 40);
      unsigned int v28 = *(unsigned __int8 *)(v27 + 28 * v24 + 18);
      if (v28 > 0x61)
      {
        unsigned int v37 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)uint64_t v115 = 67174657;
          *(_DWORD *)&v115[4] = v28;
          _os_log_error_impl(&dword_24B3DE000, v37, OS_LOG_TYPE_ERROR, "#gpsd,#supl,Invalid Rsrp,%{private}.u", v115, 8u);
          uint64_t v27 = *(void *)(a1 + 40);
        }
      }
      else
      {
        v21[136] = v28;
        *((_DWORD *)v21 + 2) = 1;
      }
      v21[137] = -1;
      unsigned int v38 = *(unsigned __int8 *)(v27 + 28 * v24 + 19);
      if (v38 > 0x22)
      {
        int v39 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)uint64_t v115 = 67174657;
          *(_DWORD *)&v115[4] = v38;
          _os_log_error_impl(&dword_24B3DE000, v39, OS_LOG_TYPE_ERROR, "#gpsd,#supl,Invalid Rsrq,%{private}.u", v115, 8u);
          uint64_t v27 = *(void *)(a1 + 40);
        }
      }
      else
      {
        v21[137] = v38;
        *((_DWORD *)v21 + 3) = 1;
      }
      *((_WORD *)v21 + 69) = -1;
      int v40 = *(_DWORD *)(v27 + 28 * v24 + 20);
      if (v40 > 1282)
      {
        unint64_t v41 = qword_26B17C488;
        if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t v115 = 67174657;
          *(_DWORD *)&v115[4] = v40;
          _os_log_impl(&dword_24B3DE000, v41, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,Invalid TA,%{private}.d", v115, 8u);
          uint64_t v27 = *(void *)(a1 + 40);
        }
      }
      else
      {
        *((_WORD *)v21 + 69) = v40;
        *((_DWORD *)v21 + 4) = 1;
      }
      uint64_t v42 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v43 = v27 + 28 * v24;
        int v44 = *(unsigned __int16 *)(v43 + 2);
        int v45 = *(unsigned __int16 *)(v43 + 16);
        uint64_t v47 = v43 + 8;
        LODWORD(v43) = *(_DWORD *)(v43 + 8);
        int v46 = *(_DWORD *)(v47 + 4);
        *(_DWORD *)uint64_t v115 = 67175425;
        *(_DWORD *)&v115[4] = v44;
        *(_WORD *)&v115[8] = 1025;
        *(_DWORD *)&v115[10] = v46;
        *(_WORD *)&v115[14] = 1025;
        *(_DWORD *)&v115[16] = v45;
        *(_WORD *)&v115[20] = 1025;
        *(_DWORD *)&v115[22] = v43;
        _os_log_impl(&dword_24B3DE000, v42, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#input,LTE Serving,%{private}u,%{private}u,%{private}u,%{private}u", v115, 0x1Au);
        uint64_t v27 = *(void *)(a1 + 40);
      }
      unsigned int v48 = *(unsigned __int16 *)(v27 + 28 * v24 + 2);
      if (v48 >= 0x3E8)
      {
        long long v49 = qword_26B17C498;
        if (os_log_type_enabled((os_log_t)qword_26B17C498, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t v115 = 67174657;
          *(_DWORD *)&v115[4] = v48;
          _os_log_impl(&dword_24B3DE000, v49, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,LTE MCC, %{private}u", v115, 8u);
          uint64_t v27 = *(void *)(a1 + 40);
        }
      }
      long long v50 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
      {
        int v51 = *(unsigned __int16 *)(v27 + 28 * v24 + 4);
        *(_DWORD *)uint64_t v115 = 67174657;
        *(_DWORD *)&v115[4] = v51;
        _os_log_impl(&dword_24B3DE000, v50, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,LTE Serving,MNC %{private}u", v115, 8u);
        uint64_t v27 = *(void *)(a1 + 40);
      }
      uint64_t v23 = v26;
      unsigned int v52 = *(unsigned __int16 *)(v27 + 28 * v24 + 4);
      if (v52 <= 0x3E7)
      {
        uint64_t v53 = *(unsigned int *)(v27 + 28 * v24 + 12);
        if (!(v53 >> 28)
          && *(unsigned __int16 *)(v27 + 28 * v24 + 16) <= 0x1F7u
          && *(_DWORD *)(v27 + 28 * v24 + 8) < 0x10000u)
        {
          sub_24B4B0BC0(*(unsigned __int16 *)(v27 + 28 * v24 + 2), v52, v53, v52 > 0x63);
          char v55 = 1;
LABEL_66:
          if (__p)
          {
            unint64_t v113 = (char *)__p;
            operator delete(__p);
          }
          if (*(void *)&v125[48])
          {
            *(void *)&v125[56] = *(void *)&v125[48];
            operator delete(*(void **)&v125[48]);
          }
          if (*(void *)&v125[24])
          {
            *(void *)&v125[32] = *(void *)&v125[24];
            operator delete(*(void **)&v125[24]);
          }
          if (*(void *)v125)
          {
            *(void *)&v125[8] = *(void *)v125;
            operator delete(*(void **)v125);
          }
          if ((v55 & 1) == 0) {
            goto LABEL_119;
          }
          goto LABEL_75;
        }
      }
      uint64_t v54 = qword_26B17C488;
      if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
      {
LABEL_65:
        char v55 = 0;
        goto LABEL_66;
      }
      *(_WORD *)uint64_t v115 = 0;
      unsigned int v35 = v54;
      __int16 v36 = "#gpsd,#supl,invalid LTE Serving Cell Info";
    }
    else
    {
      uint64_t v34 = qword_26B17C488;
      if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
        goto LABEL_65;
      }
      *(_WORD *)uint64_t v115 = 0;
      unsigned int v35 = v34;
      __int16 v36 = "#gpsd,#supl,ConvertIntValsToASN1T_CellGlobalIdEUTRA function returned error";
    }
    _os_log_error_impl(&dword_24B3DE000, v35, OS_LOG_TYPE_ERROR, v36, v115, 2u);
    goto LABEL_65;
  }
  uint64_t v88 = qword_26B17C488;
  if (!os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR)) {
    goto LABEL_119;
  }
  *(_DWORD *)uint64_t buf = 67109120;
  unsigned int v124 = v25;
  uint64_t v19 = "#gpsd,#supl,Physical Cell Id Out of Range %d";
  __int16 v86 = v88;
  uint32_t v87 = 8;
LABEL_115:
  _os_log_error_impl(&dword_24B3DE000, v86, OS_LOG_TYPE_ERROR, v19, buf, v87);
LABEL_119:
  uint64_t v89 = sub_24B4AF924();
  sub_24B4AFDE8(v89, 0, (uint64_t)v99);
  uint64_t v90 = sub_24B4AB040();
  sub_24B4ABBEC(v90);
  return sub_24B49B3B0((uint64_t)v99);
}

void sub_24B4B53D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *__p,uint64_t a45,uint64_t a46,char a47)
{
  if (__p)
  {
    a45 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_24B3E6D28((void *)(v47 - 240));
  sub_24B49B3B0((uint64_t)&a24);
  _Unwind_Resume(a1);
}

void *sub_24B4B5438(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  sub_24B3E7F48((void *)(a1 + 40), *(const void **)(a2 + 40), *(void *)(a2 + 48), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a2 + 48) - *(void *)(a2 + 40)) >> 2));
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  sub_24B3E809C((void *)(a1 + 64), *(const void **)(a2 + 64), *(void *)(a2 + 72), (uint64_t)(*(void *)(a2 + 72) - *(void *)(a2 + 64)) >> 4);
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  return sub_24B3E8194((void *)(a1 + 88), *(const void **)(a2 + 88), *(void *)(a2 + 96), (uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 5);
}

void sub_24B4B54E0(_Unwind_Exception *exception_object)
{
  unint64_t v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 72) = v5;
    operator delete(v5);
  }
  int v6 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 48) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4B5514(void *a1)
{
  int v2 = (void *)a1[11];
  if (v2)
  {
    a1[12] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[8];
  if (v3)
  {
    a1[9] = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)a1[5];
  if (v4)
  {
    a1[6] = v4;
    operator delete(v4);
  }
}

double sub_24B4B557C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 104);
  memcpy(v3, (const void *)(a1 + 40), sizeof(v3));
  *(void *)&double result = sub_24B4BA0FC(v1, v3).n128_u64[0];
  return result;
}

double sub_24B4B55C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 104);
  memcpy(__dst, (const void *)(a1 + 40), sizeof(__dst));
  *(void *)&double result = sub_24B4BA320(v1, __dst).n128_u64[0];
  return result;
}

double sub_24B4B560C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 104);
  long long v2 = *(_OWORD *)(a1 + 56);
  v4[0] = *(_OWORD *)(a1 + 40);
  v4[1] = v2;
  *(void *)&double result = sub_24B4BA418(v1, (int *)v4).n128_u64[0];
  return result;
}

BOOL sub_24B4B5648(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 104);
  long long v2 = *(_OWORD *)(a1 + 56);
  long long v4 = *(_OWORD *)(a1 + 40);
  v5[0] = v2;
  *(_OWORD *)((char *)v5 + 12) = *(_OWORD *)(a1 + 68);
  return sub_24B4B72C0(v1, (uint64_t)&v4, 2);
}

void *sub_24B4B5690(uint64_t a1, _DWORD *a2)
{
  uint64_t v175 = *MEMORY[0x263EF8340];
  int v3 = a2[2];
  int v4 = a2[3];
  int v5 = a2[4];
  int v6 = a2[5];
  int v7 = *((unsigned __int16 *)a2 + 12);
  int v8 = *((unsigned __int8 *)a2 + 26);
  int v63 = a2[8];
  int v64 = a2[9];
  int v66 = *((unsigned __int16 *)a2 + 20);
  int v67 = *((unsigned __int8 *)a2 + 42);
  int v69 = a2[16];
  int v71 = a2[23];
  int v73 = *((unsigned __int8 *)a2 + 102);
  int v75 = a2[24];
  int v83 = *((unsigned __int16 *)a2 + 50);
  int v85 = *((unsigned __int8 *)a2 + 104);
  int v77 = *((unsigned __int8 *)a2 + 103);
  int v79 = *((unsigned __int8 *)a2 + 105);
  int v81 = *((unsigned __int8 *)a2 + 106);
  int v9 = a2[68];
  int v58 = *((unsigned __int16 *)a2 + 141);
  int v59 = *((unsigned __int16 *)a2 + 138);
  int v60 = *((unsigned __int8 *)a2 + 284);
  int v61 = *((unsigned __int16 *)a2 + 139);
  int v56 = *((unsigned __int8 *)a2 + 290);
  int v57 = *((unsigned __int16 *)a2 + 140);
  int v49 = *((unsigned __int16 *)a2 + 146);
  int v50 = *((unsigned __int16 *)a2 + 147);
  int v51 = *((unsigned __int16 *)a2 + 143);
  int v52 = *((unsigned __int8 *)a2 + 296);
  int v53 = *((unsigned __int8 *)a2 + 298);
  int v54 = *((unsigned __int16 *)a2 + 144);
  int v55 = *((unsigned __int8 *)a2 + 299);
  int v10 = a2[75];
  uint64_t v11 = qword_26B17C488;
  BOOL v12 = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (!v12) {
      goto LABEL_7;
    }
    LOWORD(buf) = 0;
    unint64_t v13 = "#gpsd,#supl,#out,posReport, sessionProtocol = SUPL";
  }
  else
  {
    if (!v12) {
      goto LABEL_7;
    }
    LOWORD(buf) = 0;
    unint64_t v13 = "#gpsd,#supl,#out,posReport, sessionProtocol = CPlane";
  }
  _os_log_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&buf, 2u);
LABEL_7:
  unsigned int v14 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf) = 67113729;
    HIDWORD(buf) = v5;
    __int16 v141 = 1024;
    int v142 = v4;
    __int16 v143 = 1024;
    int v144 = v7;
    __int16 v145 = 1024;
    *(_DWORD *)uint64_t v146 = v6;
    *(_WORD *)&v146[4] = 1024;
    *(_DWORD *)&v146[6] = v8;
    __int16 v147 = 1024;
    int v148 = v63;
    __int16 v149 = 1024;
    int v150 = v64;
    __int16 v151 = 1024;
    int v152 = v66;
    __int16 v153 = 1024;
    int v154 = v67;
    __int16 v155 = 1025;
    int v156 = v69;
    __int16 v157 = 1025;
    int v158 = v71;
    __int16 v159 = 1025;
    int v160 = v75;
    __int16 v161 = 1025;
    int v162 = v73;
    __int16 v163 = 1025;
    int v164 = v77;
    __int16 v165 = 1025;
    int v166 = v83;
    __int16 v167 = 1025;
    int v168 = v79;
    __int16 v169 = 1024;
    int v170 = v81;
    __int16 v171 = 1025;
    int v172 = v85;
    __int16 v173 = 1024;
    int v174 = v10;
    _os_log_debug_impl(&dword_24B3DE000, v14, OS_LOG_TYPE_DEBUG, "#gpsd,#supl,#out,posReport,sessionId,%u,posProtocol,%u,gpsWeek,%u,gpsTow,%u,gpsTimeUncertainty,%u,gpsTODPresent,%d,gpsTODMsec,%u,gpsTODFrac,%u,gpsTODUnc,%u,shapeType,%{private}u,latitude,%{private}u,longitude,%{private}u,Majoraxis,%{private}u,Minoraxis,%{private}u,altitude,%{private}u,uncertainAltitude,%{private}u,confidence,%u,orientationAngle,%{private}u,technologySource,%u", (uint8_t *)&buf, 0x74u);
  }
  switch(v9)
  {
    case 0:
      uint64_t v15 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(buf) = 67174913;
        HIDWORD(buf) = v59;
        __int16 v141 = 1025;
        int v142 = v61;
        unsigned int v16 = "#gpsd,#supl,#out,HorizontalWithVerticalVelocity,posReport,bearing,%{private}u,horizontalSpeed,%{private}u";
        unint64_t v17 = v15;
        uint32_t v18 = 14;
        goto LABEL_49;
      }
      break;
    case 1:
      uint64_t v19 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(buf) = 67175169;
        HIDWORD(buf) = v57;
        __int16 v141 = 1025;
        int v142 = v58;
        __int16 v143 = 1025;
        int v144 = v60;
        unsigned int v16 = "#gpsd,#supl,#out,HorizontalWithVerticalVelocity,posReport,bearing,%{private}u,horizontalSpeed,%{private}u,"
              "verticalSpeed,%{private}u";
        goto LABEL_16;
      }
      break;
    case 2:
      uint64_t v19 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(buf) = 67175169;
        HIDWORD(buf) = v51;
        __int16 v141 = 1025;
        int v142 = v54;
        __int16 v143 = 1025;
        int v144 = v56;
        unsigned int v16 = "#gpsd,#supl,#out,HorizontalVelocityWithUncertainty,posReport,bearing,%{private}u,horizontalSpeed,%{private"
              "}u,horizUncertaintySpeed,%{private}u";
LABEL_16:
        unint64_t v17 = v19;
        uint32_t v18 = 20;
        goto LABEL_49;
      }
      break;
    case 3:
      uint64_t v20 = qword_26B17C488;
      if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(buf) = 67175681;
        HIDWORD(buf) = v49;
        __int16 v141 = 1025;
        int v142 = v50;
        __int16 v143 = 1024;
        int v144 = v52;
        __int16 v145 = 1025;
        *(_DWORD *)uint64_t v146 = v53;
        *(_WORD *)&v146[4] = 1025;
        *(_DWORD *)&v146[6] = v55;
        unsigned int v16 = "#gpsd,#supl,#out,HorizontalWithVerticalVelocityAndUncertainty,posReport,bearing,%{private}u,horizontalSpee"
              "d,%{private}u,verticalSpeed,%u,horizUncertaintySpeed,%{private}u,vertUncertaintySpeed,%{private}u";
        unint64_t v17 = v20;
        uint32_t v18 = 32;
LABEL_49:
        _os_log_debug_impl(&dword_24B3DE000, v17, OS_LOG_TYPE_DEBUG, v16, (uint8_t *)&buf, v18);
      }
      break;
    default:
      break;
  }
  if (*a2) {
    __int16 v21 = 5;
  }
  else {
    __int16 v21 = 0;
  }
  unsigned int v22 = a2[5] % 0xDBBA00u;
  if (a2[3]) {
    unsigned int v22 = a2[5];
  }
  unsigned int v23 = a2[23];
  __int16 v24 = *((_WORD *)a2 + 50);
  if (a2[8])
  {
    int v8 = a2[9];
    LOWORD(v4) = *((_WORD *)a2 + 20);
    LOBYTE(v66) = *((unsigned char *)a2 + 42);
  }
  uint64_t v25 = a1;
  int v26 = a2[24];
  unsigned int v27 = v24 & 0x7FFF;
  unsigned int v28 = v24;
  int v84 = a2[23];
  unsigned int v86 = v22;
  int v80 = v26;
  BOOL v82 = a2[7] == 1;
  unsigned int v88 = v27;
  char v76 = *((unsigned char *)a2 + 105);
  char v78 = *((unsigned char *)a2 + 102);
  int v72 = (v23 >> 23) & 1;
  char v74 = *((unsigned char *)a2 + 103);
  if (*a2)
  {
    uint64_t v68 = 0xFFFFFFFFLL;
    int v29 = 20;
    double v30 = -1.0;
    double v31 = 1.79769313e308;
    double v32 = -1.0;
    double v33 = -1.0;
    double v34 = 1.79769313e308;
    double v35 = 1.79769313e308;
    goto LABEL_43;
  }
  unsigned int v36 = v23 >> 23;
  if ((v23 >> 23))
  {
    if (!v36)
    {
      double v37 = (double)v23 * 90.0;
      double v38 = -0.00000011920929;
      goto LABEL_32;
    }
LABEL_33:
    double v35 = 1.79769313e308;
    goto LABEL_34;
  }
  if (v36) {
    goto LABEL_33;
  }
  double v37 = (double)v23 * 90.0;
  double v38 = 0.00000011920929;
LABEL_32:
  double v35 = v37 * v38;
LABEL_34:
  if ((v26 + 0x800000) >> 24)
  {
    double v34 = 1.79769313e308;
  }
  else
  {
    signed int v39 = v26 | 0xFF000000;
    if ((v26 & 0x800000) == 0) {
      signed int v39 = a2[24];
    }
    double v34 = (double)v39 * 360.0 * 0.0000000596046448;
  }
  if (v24 >= 0) {
    double v31 = (double)v27;
  }
  else {
    double v31 = -(double)v27;
  }
  double v33 = (double)*((unsigned __int8 *)a2 + 102);
  double v32 = (double)*((unsigned __int8 *)a2 + 103);
  double v30 = (double)*((unsigned __int8 *)a2 + 105);
  HIDWORD(v40) = 2;
  LODWORD(v40) = a2[4];
  uint64_t v68 = v40;
  int v29 = 18;
LABEL_43:
  char v41 = *((unsigned char *)a2 + 26);
  int v42 = a2[16];
  char v43 = *((unsigned char *)a2 + 104);
  char v70 = *((unsigned char *)a2 + 106);
  sub_24B4B6550((uint64_t)&buf, v25);
  if (*(void *)&v146[2])
  {
    __int16 v62 = v4;
    __int16 v65 = v21;
    int v44 = *(NSObject **)(v25 + 96);
    block[0] = MEMORY[0x263EF8330];
    block[1] = 3321888768;
    block[2] = sub_24B4B5F5C;
    block[3] = &unk_26FE863C8;
    sub_24B4B6550((uint64_t)v120, (uint64_t)&buf);
    v120[4] = v68;
    int v45 = (v28 >> 15) & 1;
    int v121 = v29;
    int v122 = 0;
    unint64_t v123 = 0xBFF0000000000000;
    double v124 = v35;
    double v125 = v34;
    double v126 = v31;
    double v127 = v33;
    double v128 = v32;
    double v129 = v30;
    __int16 v130 = 0;
    char v131 = 0;
    int v132 = 0;
    int64x2_t v133 = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
    long long v134 = xmmword_24B4C6550;
    unint64_t v135 = 0xBFF0000000000000;
    __int16 v136 = -1;
    int v137 = -1;
    __int16 v138 = -1;
    unint64_t v139 = 0xBFF0000000000000;
    dispatch_async(v44, block);
    int v46 = *(NSObject **)(v25 + 88);
    v89[0] = MEMORY[0x263EF8330];
    v89[1] = 3221225472;
    v89[2] = sub_24B4B60E8;
    v89[3] = &unk_2652DD090;
    memcpy(v90, a2, sizeof(v90));
    __int16 v91 = v65;
    unsigned int v92 = v86;
    char v93 = v41;
    BOOL v94 = v82;
    __int16 v95 = v42;
    char v96 = v72;
    int v97 = v84;
    int v98 = v80;
    char v99 = v78;
    char v100 = v74;
    char v101 = v43;
    char v102 = v45;
    unsigned int v103 = v88;
    char v104 = v76;
    char v105 = v70;
    uint64_t v106 = 0xFFFFFFFFLL;
    char v107 = -1;
    uint64_t v108 = 0xFF00000000;
    char v109 = -1;
    int v110 = 0;
    char v111 = -1;
    int v112 = v8;
    __int16 v113 = v62;
    char v114 = v66;
    char v115 = 1;
    int v116 = 1;
    __int16 v117 = 1;
    dispatch_async(v46, v89);
    sub_24B3E86CC(v120);
  }
  else
  {
    uint64_t v47 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v118 = 0;
      _os_log_impl(&dword_24B3DE000, v47, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,SuplStatusReportCB is NULL", v118, 2u);
    }
  }
  return sub_24B3E86CC(&buf);
}

void sub_24B4B5F30(_Unwind_Exception *a1)
{
}

void sub_24B4B5F5C(uint64_t a1)
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2) {
    sub_24B3E364C();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 48))(v2, a1 + 64);
  int v3 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 96);
    uint64_t v5 = *(void *)(a1 + 104);
    uint64_t v6 = *(void *)(a1 + 112);
    uint64_t v7 = *(void *)(a1 + 120);
    uint64_t v8 = *(void *)(a1 + 128);
    int v10 = *(_DWORD *)(a1 + 64);
    int v9 = *(_DWORD *)(a1 + 68);
    int v11 = *(_DWORD *)(a1 + 72);
    int v12 = *(_DWORD *)(a1 + 76);
    uint64_t v13 = *(void *)(a1 + 80);
    uint64_t v14 = *(void *)(a1 + 88);
    if (*(unsigned char *)(a1 + 136)) {
      int v15 = 84;
    }
    else {
      int v15 = 70;
    }
    if (*(unsigned char *)(a1 + 137)) {
      int v16 = 84;
    }
    else {
      int v16 = 70;
    }
    if (*(unsigned char *)(a1 + 138)) {
      int v17 = 84;
    }
    else {
      int v17 = 70;
    }
    int v18 = 134286849;
    uint64_t v19 = v14;
    __int16 v20 = 2049;
    uint64_t v21 = v4;
    __int16 v22 = 2049;
    uint64_t v23 = v5;
    __int16 v24 = 2049;
    uint64_t v25 = v6;
    __int16 v26 = 2049;
    uint64_t v27 = v7;
    __int16 v28 = 2049;
    uint64_t v29 = v8;
    __int16 v30 = 1024;
    int v31 = v9;
    __int16 v32 = 1024;
    int v33 = v11;
    __int16 v34 = 1024;
    int v35 = v10;
    __int16 v36 = 1024;
    int v37 = v12;
    __int16 v38 = 2048;
    uint64_t v39 = v13;
    __int16 v40 = 1024;
    int v41 = v15;
    __int16 v42 = 1024;
    int v43 = v16;
    __int16 v44 = 1024;
    int v45 = v17;
    _os_log_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_DEFAULT, "#gpsd,#supl,#out, Lat,%{private}.6f,Long,%{private}.6f,Alt,%{private}.2f,SemMaj,%{private}.f,SemMin,%{private}.f,UncAlt,%{private}.f,PosMethod,%u,Status,%u,SessionId,%u,endCause,%u,HACC,%f,ephProvided,%c,refTimeProvided,%c,refLocProvided,%c", (uint8_t *)&v18, 0x72u);
  }
}

void sub_24B4B60E8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 44) == 2)
  {
    int v1 = *(_DWORD *)(a1 + 48);
    uint64_t v8 = *(void *)(a1 + 456);
    long long v2 = *(_OWORD *)(a1 + 424);
    v7[4] = *(_OWORD *)(a1 + 408);
    v7[5] = v2;
    v7[6] = *(_OWORD *)(a1 + 440);
    long long v3 = *(_OWORD *)(a1 + 360);
    v7[0] = *(_OWORD *)(a1 + 344);
    v7[1] = v3;
    long long v4 = *(_OWORD *)(a1 + 392);
    long long v7[2] = *(_OWORD *)(a1 + 376);
    v7[3] = v4;
    sub_24B4B0488(v1, 0, (uint64_t)v7);
  }
  else
  {
    uint64_t v5 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v6 = 0;
      _os_log_error_impl(&dword_24B3DE000, v5, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#out,Invalid posProtocol in Pos Response", v6, 2u);
    }
  }
}

void sub_24B4B61A0(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(_DWORD *)(v1 + 12) == 2)
  {
    char v2 = *(unsigned char *)(v1 + 56);
    char v3 = *(unsigned char *)(v1 + 24);
    int v4 = *(_DWORD *)(v1 + 16);
    int v5 = *(_DWORD *)(v1 + 20);
    unint64_t v8 = 0x8000000080000000;
    int v9 = 0x7FFFFFFF;
    int v10 = v5;
    char v11 = v3;
    char v12 = 0;
    char v13 = v2;
    int v14 = -1;
    __int16 v15 = -1;
    char v16 = -1;
    long long v17 = 0u;
    long long v18 = 0u;
    sub_24B4B0330(v4, 1, &v8);
  }
  else
  {
    uint64_t v6 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t v7 = 0;
      _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "#gpsd,#supl,#out,Invalid posProtocol in Aid request", v7, 2u);
    }
  }
}

void sub_24B4B62A0(uint64_t a1, char *__src, char *a3)
{
  char v3 = a3;
  uint64_t v6 = *(char **)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    int v10 = *(char **)a1;
    uint64_t v11 = (uint64_t)&v6[-*(void *)a1 + 1];
    if (v11 < 0) {
      sub_24B3E3AAC();
    }
    uint64_t v12 = __src - v10;
    unint64_t v13 = v7 - (void)v10;
    if (2 * v13 > v11) {
      uint64_t v11 = 2 * v13;
    }
    if (v13 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v14 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v14 = v11;
    }
    if (v14) {
      __int16 v15 = (char *)operator new(v14);
    }
    else {
      __int16 v15 = 0;
    }
    char v16 = &v15[v12];
    long long v17 = &v15[v14];
    if (v12 == v14)
    {
      if (v12 < 1)
      {
        if ((unint64_t)(2 * v12) <= 1) {
          size_t v19 = 1;
        }
        else {
          size_t v19 = 2 * v12;
        }
        __int16 v20 = (char *)operator new(v19);
        char v16 = &v20[v19 >> 2];
        long long v17 = &v20[v19];
        if (v15)
        {
          operator delete(v15);
          int v10 = *(char **)a1;
        }
      }
      else
      {
        if (v12 + 1 >= 0) {
          uint64_t v18 = v12 + 1;
        }
        else {
          uint64_t v18 = v12 + 2;
        }
        v16 -= v18 >> 1;
      }
    }
    *char v16 = *v3;
    uint64_t v21 = v16 + 1;
    if (v10 != __src)
    {
      __int16 v22 = __src;
      do
      {
        char v23 = *--v22;
        *--char v16 = v23;
      }
      while (v22 != v10);
    }
    __int16 v24 = *(unsigned char **)(a1 + 8);
    uint64_t v25 = v24 - __src;
    if (v24 != __src) {
      memmove(v21, __src, v24 - __src);
    }
    __int16 v26 = *(char **)a1;
    *(void *)a1 = v16;
    *(void *)(a1 + 8) = &v21[v25];
    *(void *)(a1 + 16) = v17;
    if (v26)
    {
      operator delete(v26);
    }
  }
  else if (__src == v6)
  {
    *long long __src = *a3;
    *(void *)(a1 + 8) = __src + 1;
  }
  else
  {
    unint64_t v8 = __src + 1;
    if (v6)
    {
      *uint64_t v6 = *(v6 - 1);
      int v9 = v6 + 1;
    }
    else
    {
      int v9 = 0;
    }
    *(void *)(a1 + 8) = v9;
    if (v6 != v8) {
      memmove(__src + 1, __src, v6 - v8);
    }
    if (__src <= v3 && *(void *)(a1 + 8) > (unint64_t)v3) {
      ++v3;
    }
    *long long __src = *v3;
  }
}

void sub_24B4B64A0(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24B4B64B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_24B4B6550(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_24B4B65E8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(void *)(a1 + 16) = i - 128;
    sub_24B49BF98(v4, (void *)(i - 128));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_24B4B663C(uint64_t a1)
{
  *(void *)a1 = 0xFFFFFFFF00000000;
  *(_WORD *)(a1 + 8) = -1;
  *(void *)(a1 + 16) = 0;
  *(_WORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 44) = 0;
  *(_WORD *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 50) = -1;
  *(_DWORD *)(a1 + 52) = -1;
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = -1;
  *(_DWORD *)(a1 + 80) = 0x7FFFFFFF;
  *(void *)(a1 + 92) = -1;
  *(_DWORD *)(a1 + 100) = -1;
  *(_DWORD *)(a1 + 160) = 0;
  uint64_t v2 = a1 + 160;
  uint64_t v3 = a1 + 284;
  *(_WORD *)(a1 + 88) = -1;
  *(_DWORD *)(a1 + 84) = -1;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 104) = 0;
  *(_WORD *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0x401C000000000000;
  *(void *)(a1 + 144) = 0;
  *(unsigned char *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 164) = 0;
  *(void *)(a1 + 168) = -1;
  *(void *)(a1 + 176) = -1;
  *(_WORD *)(a1 + 184) = 0;
  *(unsigned char *)(a1 + 186) = -1;
  *(void *)(a1 + 188) = -1;
  *(void *)(a1 + 195) = -1;
  *(void *)(a1 + 204) = 0xFFFFFFFF00000004;
  *(_WORD *)(a1 + 212) = -1;
  *(unsigned char *)(a1 + 214) = -1;
  *(_DWORD *)(a1 + 216) = -1;
  *(_WORD *)(a1 + 220) = 0;
  *(void *)(a1 + 224) = 0x7FFFFFFF000000FFLL;
  *(_DWORD *)(a1 + 232) = 0x7FFFFFFF;
  *(unsigned char *)(a1 + 236) = -1;
  *(_OWORD *)(a1 + 240) = xmmword_24B4BC220;
  *(_DWORD *)(a1 + 263) = -1;
  *(_DWORD *)(a1 + 256) = 0x7FFFFFFF;
  *(_DWORD *)(a1 + 260) = -1;
  *(void *)(a1 + 268) = 0x7FFFFFFF7FFFFFFFLL;
  *(_WORD *)(a1 + 280) = -1;
  *(_DWORD *)(a1 + 276) = -1;
  *(void *)&long long v4 = 0x8000000080000000;
  *((void *)&v4 + 1) = 0x8000000080000000;
  *(_OWORD *)(a1 + 284) = v4;
  *(_WORD *)(a1 + 300) = -1;
  *(unsigned char *)(a1 + 304) = -1;
  memset_pattern16((void *)(a1 + 308), &unk_24B4BC240, 0x78uLL);
  *(unsigned char *)(v2 + 268) = -1;
  *(_DWORD *)(v2 + 272) = 255;
  *(void *)(v3 + 168) = -1;
  *(void *)(v2 + 276) = -1;
  *(void *)(v2 + 283) = -1;
  *(_DWORD *)(v2 + 300) = 0;
  *(void *)(v2 + 304) = 0;
  *(void *)(v2 + 336) = 0;
  *(void *)(v2 + 368) = 0;
  *(void *)(v2 + 400) = 0;
  *(void *)(v2 + 432) = 0;
  *(void *)(v2 + 464) = 0;
  *(void *)(v2 + 496) = 0;
  *(void *)(v2 + 528) = 0;
  *(void *)(v2 + 560) = 0;
  *(void *)(sub_24B4B1200() + 104) = a1;
  return a1;
}

void sub_24B4B67DC(_Unwind_Exception *a1)
{
  sub_24B3EA858(v1 + 87);
  sub_24B3EA614(v1 + 83);
  sub_24B4BAA4C(v1 + 79);
  sub_24B3E9FE4(v1 + 75);
  sub_24B3E9D20(v1 + 71);
  sub_24B3E92C0(v1 + 67);
  sub_24B4BA9C8(v1 + 63);
  sub_24B4BA944(v1 + 59);
  _Unwind_Resume(a1);
}

void *sub_24B4B6844(void *a1)
{
  return a1;
}

void sub_24B4B68A8(uint64_t a1, int a2, int a3, double a4)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  *(unsigned char *)(a1 + 128) = a2;
  *(unsigned char *)(a1 + 129) = a3;
  *(double *)(a1 + 136) = a4;
  unint64_t v7 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    v8[0] = 67175169;
    v8[1] = a2;
    __int16 v9 = 1025;
    int v10 = a3;
    __int16 v11 = 2049;
    double v12 = a4;
    _os_log_debug_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEBUG, "SessionHandler,helo,%{private}d,earlyreturn,%{private}d,targetvunc,%{private}f.02", (uint8_t *)v8, 0x18u);
  }
}

void sub_24B4B6988(uint64_t a1)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  *(double *)(a1 + 120) = (double)sub_24B4761A8() * 0.000000001;
  int v2 = *(_DWORD *)(a1 + 164);
  if (v2)
  {
    int v3 = *(_DWORD *)(a1 + 52);
    int v4 = *(unsigned __int8 *)(a1 + 264) >> (v3 == 1);
    int v5 = *(_DWORD *)a1;
    BOOL v6 = *(_DWORD *)(a1 + 56) == 2;
    v17[0] = *(_DWORD *)(a1 + 160);
    v17[1] = v2;
    v17[2] = v6;
    v17[3] = v3;
    _DWORD v17[4] = v5;
    long long v20 = *(_OWORD *)(a1 + 212);
    long long v21 = *(_OWORD *)(a1 + 228);
    long long v22 = *(_OWORD *)(a1 + 244);
    int v23 = *(_DWORD *)(a1 + 260);
    long long v18 = *(_OWORD *)(a1 + 180);
    long long v19 = *(_OWORD *)(a1 + 196);
    char v24 = v4;
    *(_OWORD *)&v36[15] = *(_OWORD *)(a1 + 456);
    long long v7 = *(_OWORD *)(a1 + 441);
    long long v35 = *(_OWORD *)(a1 + 425);
    *(_OWORD *)__int16 v36 = v7;
    long long v29 = *(_OWORD *)(a1 + 329);
    long long v28 = *(_OWORD *)(a1 + 313);
    long long v27 = *(_OWORD *)(a1 + 297);
    long long v26 = *(_OWORD *)(a1 + 281);
    long long v33 = *(_OWORD *)(a1 + 393);
    long long v32 = *(_OWORD *)(a1 + 377);
    long long v31 = *(_OWORD *)(a1 + 361);
    long long v30 = *(_OWORD *)(a1 + 345);
    long long v34 = *(_OWORD *)(a1 + 409);
    long long v25 = *(_OWORD *)(a1 + 265);
    long long v8 = *(_OWORD *)(a1 + 80);
    v15[4] = *(_OWORD *)(a1 + 64);
    v15[5] = v8;
    uint64_t v16 = *(void *)(a1 + 96);
    long long v9 = *(_OWORD *)(a1 + 16);
    v15[0] = *(_OWORD *)a1;
    v15[1] = v9;
    long long v10 = *(_OWORD *)(a1 + 48);
    _DWORD v15[2] = *(_OWORD *)(a1 + 32);
    v15[3] = v10;
    sub_24B4B6BC8((int *)a1, (uint64_t)v17, (uint64_t)v15);
  }
  else
  {
    sub_24B4B6EE0((int *)a1);
  }
  __int16 v11 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    double v14 = *(double *)(a1 + 112);
    double v13 = *(double *)(a1 + 120);
    *(_DWORD *)uint64_t buf = 134218496;
    double v38 = v13 - v14;
    __int16 v39 = 2048;
    double v40 = v14;
    __int16 v41 = 2048;
    double v42 = v13;
    _os_log_debug_impl(&dword_24B3DE000, v11, OS_LOG_TYPE_DEBUG, "SessionHandler,#out,TTFF,%f,starttime,%.2f,endtime,%.2f", buf, 0x20u);
  }
  buf[0] = 0;
  uint64_t v12 = *(void *)(a1 + 688);
  if (!v12) {
    sub_24B3E364C();
  }
  (*(void (**)(uint64_t, uint8_t *))(*(void *)v12 + 48))(v12, buf);
  sub_24B4B718C((void *)a1);
}

uint64_t sub_24B4B6BC8(int *a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = memcpy(__dst, (const void *)a2, sizeof(__dst));
  sub_24B4B9C78((uint64_t)v6, __dst);
  long long v7 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_DEBUG, "SessionHandler,#out,setPositionReportAndSendSummaryReport", buf, 2u);
  }
  if (*(_DWORD *)(a2 + 8))
  {
    uint64_t v8 = sub_24B4B1200();
    memcpy(v38, (const void *)a2, sizeof(v38));
    sub_24B4B5690(v8, v38);
  }
  else
  {
    uint64_t v9 = *((void *)a1 + 78);
    if (v9) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)v9 + 48))(v9, a2);
    }
  }
  unsigned int v10 = *(_DWORD *)(a2 + 92);
  int v11 = *(_DWORD *)(a2 + 96);
  int v12 = *(__int16 *)(a2 + 100);
  unsigned int v13 = *(unsigned __int8 *)(a2 + 102);
  unsigned int v14 = *(unsigned __int8 *)(a2 + 105);
  int v35 = *(_DWORD *)(a2 + 8);
  int v36 = *(_DWORD *)(a2 + 300);
  uint64_t v37 = *(void *)(a2 + 304);
  unsigned int v15 = *(unsigned __int16 *)(a3 + 8);
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v17 = *(void *)(a3 + 32);
  uint64_t v18 = *(int *)(a3 + 52);
  char v19 = *(unsigned char *)(a3 + 64);
  long long v20 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v20, OS_LOG_TYPE_DEBUG, "SessionHandler,#out,setSummaryReport", buf, 2u);
  }
  if (v12 >= 0) {
    double v23 = (double)(v12 & 0x7FFF);
  }
  else {
    double v23 = -(double)(v12 & 0x7FFF);
  }
  double v24 = -1.0;
  double v25 = -1.0;
  if (v13 != 255) {
    double v25 = (pow(1.1, (double)v13) + -1.0) * 10.0;
  }
  double v26 = (double)v11 * 0.0000107288373;
  if (v14 != 255) {
    double v24 = (pow(1.025, (double)v14) + -1.0) * 45.0;
  }
  double v27 = *((double *)a1 + 15) - *((double *)a1 + 14);
  if (v35) {
    int v28 = 2;
  }
  else {
    int v28 = 1;
  }
  if (v35) {
    int v29 = 3;
  }
  else {
    int v29 = 1;
  }
  if (v18 > 4) {
    int v30 = 0;
  }
  else {
    int v30 = dword_24B4C6C6C[v18];
  }
  char v31 = *((unsigned char *)a1 + 128);
  char v32 = *((unsigned char *)a1 + 63);
  int v33 = *a1;
  *(double *)uint64_t buf = (double)v10 * 0.0000107288373;
  double v41 = v26 + v26;
  double v42 = v23;
  double v43 = v25;
  double v44 = v24;
  double v45 = v27;
  int v46 = v36;
  int v47 = 2;
  int v48 = v28;
  int v49 = v30;
  double v50 = (double)v15;
  uint64_t v51 = v16;
  uint64_t v52 = v17;
  int v53 = v29;
  int v54 = 1;
  char v55 = v31;
  char v56 = v32;
  unint64_t v57 = ((unint64_t)(v19 & 4) << 17) | (4 * (v19 & 3));
  uint64_t v58 = v37;
  int v59 = v33;
  uint64_t result = *((void *)a1 + 62);
  if (result)
  {
    v21.n128_f64[0] = (double)v10 * 0.0000107288373;
    v22.n128_f64[0] = v26 + v26;
    return (*(uint64_t (**)(uint64_t, uint8_t *, __n128, __n128))(*(void *)result + 48))(result, buf, v21, v22);
  }
  return result;
}

void sub_24B4B6EE0(int *a1)
{
  *(void *)long long __src = 0;
  *(void *)&__src[8] = -1;
  *(void *)&__src[16] = -1;
  *(_WORD *)&__src[24] = 0;
  __src[26] = -1;
  *(void *)&__src[28] = -1;
  *(void *)&__src[35] = -1;
  *(void *)&__src[44] = 0xFFFFFFFF00000004;
  *(_WORD *)&__src[52] = -1;
  __src[54] = -1;
  *(_DWORD *)&__src[56] = -1;
  *(_WORD *)&__src[60] = 0;
  *(void *)&__src[64] = 0x7FFFFFFF000000FFLL;
  *(_DWORD *)&_DWORD __src[72] = 0x7FFFFFFF;
  __src[76] = -1;
  *(_OWORD *)&__src[80] = xmmword_24B4BC220;
  *(void *)&__src[96] = 0xFFFFFFFF7FFFFFFFLL;
  *(_DWORD *)&__src[103] = -1;
  *(void *)&__src[108] = 0x8000000080000000;
  *(_DWORD *)&__src[116] = -1;
  *(_WORD *)&__src[120] = -1;
  *(void *)&long long v2 = 0x8000000080000000;
  *((void *)&v2 + 1) = 0x8000000080000000;
  *(_OWORD *)&__src[124] = v2;
  *(_WORD *)&__src[140] = -1;
  __src[144] = -1;
  memset_pattern16(&__src[148], &unk_24B4BC240, 0x78uLL);
  __src[268] = -1;
  *(_DWORD *)&__src[272] = 255;
  *(void *)&__src[292] = -1;
  *(void *)&__src[276] = -1;
  *(void *)&__src[283] = -1;
  *(_DWORD *)&__src[300] = 0;
  *(void *)&__src[304] = 0;
  if (*a1)
  {
    int v4 = a1[13];
    int v3 = a1[14];
    *(_DWORD *)&__src[16] = *a1;
    unint64_t v5 = 0x8FFFFFFFCLL;
    *(void *)long long __src = 0x8FFFFFFFCLL;
    *(_DWORD *)&__src[8] = v3 != 1;
    *(_DWORD *)&__src[12] = v4;
    if (v3 == 1)
    {
      uint64_t v8 = *((void *)a1 + 78);
      if (!v8 || ((*(void (**)(uint64_t, unsigned char *))(*(void *)v8 + 48))(v8, __src), !*(_DWORD *)&__src[8]))
      {
        int v10 = 1;
        int v9 = 1;
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v6 = sub_24B4B1200();
      memcpy(__dst, __src, sizeof(__dst));
      sub_24B4B5690(v6, __dst);
    }
    int v9 = 2;
    int v10 = 3;
LABEL_10:
    uint64_t v11 = a1[13];
    if (v11 > 4) {
      int v12 = 0;
    }
    else {
      int v12 = dword_24B4C6C6C[v11];
    }
    LOWORD(v5) = *((_WORD *)a1 + 4);
    uint64_t v13 = *((void *)a1 + 2);
    uint64_t v14 = *((void *)a1 + 4);
    char v15 = *((unsigned char *)a1 + 128);
    char v16 = *((unsigned char *)a1 + 63);
    unint64_t v17 = ((unint64_t)(a1[16] & 4) << 17) | (4 * (a1[16] & 3));
    int v18 = *a1;
    v25[0] = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
    v25[1] = xmmword_24B4C6550;
    __asm { FMOV            V3.2D, #-1.0 }
    v25[2] = _Q3;
    uint64_t v26 = 0;
    int v27 = v9;
    int v28 = v12;
    double v29 = (double)v5;
    uint64_t v30 = v13;
    uint64_t v31 = v14;
    int v32 = v10;
    int v33 = 11;
    char v34 = v15;
    char v35 = v16;
    unint64_t v36 = v17;
    uint64_t v37 = 0;
    int v38 = v18;
    uint64_t v24 = *((void *)a1 + 62);
    if (v24) {
      (*(void (**)(uint64_t, _OWORD *))(*(void *)v24 + 48))(v24, v25);
    }
    return;
  }
  long long v7 = qword_26B17C488;
  if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_error_impl(&dword_24B3DE000, v7, OS_LOG_TYPE_ERROR, "SessionHandler,#out,sendPosMethodFailure,no active session", buf, 2u);
  }
}

void sub_24B4B718C(void *a1)
{
  a1[14] = 0;
  a1[15] = 0;
  *(void *)long long __src = 0;
  *(void *)&__src[8] = -1;
  *(void *)&__src[16] = -1;
  *(_WORD *)&__src[24] = 0;
  __src[26] = -1;
  *(void *)&__src[28] = -1;
  *(void *)&__src[35] = -1;
  *(void *)&__src[44] = 0xFFFFFFFF00000004;
  *(_WORD *)&__src[52] = -1;
  __src[54] = -1;
  *(_DWORD *)&__src[56] = -1;
  *(_WORD *)&__src[60] = 0;
  *(void *)&__src[64] = 0x7FFFFFFF000000FFLL;
  *(_DWORD *)&_DWORD __src[72] = 0x7FFFFFFF;
  __src[76] = -1;
  *(_OWORD *)&__src[80] = xmmword_24B4BC220;
  *(void *)&__src[96] = 0xFFFFFFFF7FFFFFFFLL;
  *(_DWORD *)&__src[103] = -1;
  *(void *)&__src[108] = 0x8000000080000000;
  *(_DWORD *)&__src[116] = -1;
  *(_WORD *)&__src[120] = -1;
  *(void *)&long long v2 = 0x8000000080000000;
  *((void *)&v2 + 1) = 0x8000000080000000;
  *(_OWORD *)&__src[124] = v2;
  *(_WORD *)&__src[140] = -1;
  *(void *)&__src[144] = 255;
  memset_pattern16(&__src[148], &unk_24B4BC240, 0x78uLL);
  __src[268] = -1;
  *(_DWORD *)&__src[272] = 255;
  *(void *)&__src[276] = -1;
  *(void *)&__src[283] = -1;
  *(void *)&__src[292] = -1;
  *(_DWORD *)&__src[300] = 0;
  *(void *)&__src[304] = 0;
  memcpy(a1 + 20, __src, 0x138uLL);
  sub_24B4B9BA8((uint64_t)a1);
  sub_24B4B9808((uint64_t)a1);
}

BOOL sub_24B4B72C0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  if (*(_WORD *)a2)
  {
    uint64_t v6 = qword_26B17C498;
    if (os_log_type_enabled((os_log_t)qword_26B17C498, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEFAULT, "SessionHandler,#input,nilrPositionRequest,Periodic Sessions", buf, 2u);
    }
  }
  int v7 = *(_DWORD *)(a2 + 4);
  if (v7 != -1)
  {
    int v8 = *(unsigned __int16 *)(a2 + 8);
    if ((v8 - 1) >= 0x80)
    {
      uint64_t v10 = qword_26B17C488;
      BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
      if (result)
      {
        *(_WORD *)uint64_t buf = 0;
        int v12 = "SessionHandler,#input,nilrPositionRequest,Invalid responseTime";
        goto LABEL_28;
      }
      return result;
    }
    __int16 v9 = *(_WORD *)(a2 + 28);
    if ((v9 & 1) == 0)
    {
      uint64_t v10 = qword_26B17C488;
      BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
      if (result)
      {
        *(_WORD *)uint64_t buf = 0;
        int v12 = "SessionHandler,#input,nilrPositionRequest,Invalid requestedGnss,should be GPS only";
LABEL_28:
        unint64_t v17 = v10;
        uint32_t v18 = 2;
LABEL_29:
        _os_log_error_impl(&dword_24B3DE000, v17, OS_LOG_TYPE_ERROR, v12, buf, v18);
        return 0;
      }
      return result;
    }
    int v13 = *(_DWORD *)(a2 + 36);
    if (v13 == -1)
    {
      uint64_t v10 = qword_26B17C488;
      BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
      if (result)
      {
        *(_WORD *)uint64_t buf = 0;
        int v12 = "SessionHandler,#input,nilrPositionRequest,Invalid pos protocol";
        goto LABEL_28;
      }
      return result;
    }
    int v14 = *(char *)(a2 + 10);
    if (v14 < 0)
    {
      uint64_t v10 = qword_26B17C488;
      BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
      if (result)
      {
        *(_WORD *)uint64_t buf = 0;
        int v12 = "SessionHandler,#input,nilrPositionRequest,Invalid HAcc";
        goto LABEL_28;
      }
      return result;
    }
    int v15 = *(_DWORD *)(a2 + 20);
    if (v15)
    {
      if (*(char *)(a2 + 17) < 0)
      {
        uint64_t v10 = qword_26B17C488;
        BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
        if (result)
        {
          *(_WORD *)uint64_t buf = 0;
          int v12 = "SessionHandler,#input,#nilr,nilrPositionRequest,Invalid VAcc";
          goto LABEL_28;
        }
        return result;
      }
      if (*(unsigned __int8 *)(a2 + 18) >= 0x65u)
      {
        uint64_t v10 = qword_26B17C488;
        BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
        if (result)
        {
          *(_WORD *)uint64_t buf = 0;
          int v12 = "SessionHandler,#input,#nilr,nilrPositionRequest,Invalid VConf";
          goto LABEL_28;
        }
        return result;
      }
    }
    unsigned int v16 = *(unsigned __int8 *)(a2 + 16);
    if (v16 >= 0x65)
    {
      uint64_t v10 = qword_26B17C488;
      BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
      if (result)
      {
        *(_WORD *)uint64_t buf = 0;
        int v12 = "SessionHandler,#input,#nilr,nilrPositionRequest,Invalid HConf";
        goto LABEL_28;
      }
      return result;
    }
    int v19 = *(unsigned __int8 *)(a2 + 30);
    if (*(unsigned char *)(a2 + 30) && (v19 & 0xB7) == 0)
    {
      uint64_t v20 = qword_26B17C488;
      BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
      if (result)
      {
        *(_DWORD *)uint64_t buf = 67109120;
        int v48 = v19;
        int v12 = "SessionHandler,#input,#nilr,nilrPositionRequest,ShapeType Not Supported, %u";
        unint64_t v17 = v20;
        uint32_t v18 = 8;
        goto LABEL_29;
      }
      return result;
    }
    int v21 = *(_DWORD *)(a2 + 40);
    if (*(_DWORD *)a1 == v21)
    {
      *(_DWORD *)(a1 + 4) = v7;
      *(_WORD *)(a1 + 8) = v8;
      long double v22 = pow(1.1, (double)v14);
      double v23 = -1.0;
      *(long double *)(a1 + 16) = (v22 + -1.0) * 10.0;
      *(unsigned char *)(a1 + 24) = *(_DWORD *)(a2 + 12) != 0;
      *(unsigned char *)(a1 + 25) = v16;
      unsigned int v24 = *(unsigned __int8 *)(a2 + 17);
      if (v24 != 255) {
        double v23 = (pow(1.025, (double)v24) + -1.0) * 45.0;
      }
      *(double *)(a1 + 32) = v23;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 18);
      *(_DWORD *)(a1 + 44) = v15;
      *(_WORD *)(a1 + 48) = v9;
      *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 31);
      *(_DWORD *)(a1 + 52) = v13;
      *(_DWORD *)(a1 + 56) = a3;
      long long v25 = *(_OWORD *)(a1 + 80);
      _DWORD v45[4] = *(_OWORD *)(a1 + 64);
      v45[5] = v25;
      uint64_t v46 = *(void *)(a1 + 96);
      long long v26 = *(_OWORD *)(a1 + 16);
      v45[0] = *(_OWORD *)a1;
      v45[1] = v26;
      long long v27 = *(_OWORD *)(a1 + 48);
      v45[2] = *(_OWORD *)(a1 + 32);
      v45[3] = v27;
      sub_24B4B7A50((int *)v45);
      goto LABEL_55;
    }
    if (*(_DWORD *)a1)
    {
      int v28 = qword_26B17C480;
      BOOL v29 = os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG);
      if (!v13)
      {
        if (v29)
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_debug_impl(&dword_24B3DE000, v28, OS_LOG_TYPE_DEBUG, "SessionHandler,#input,#nilr,nilrPositionRequest,RRLP session. Updating only session ID", buf, 2u);
          int v21 = *(_DWORD *)(a2 + 40);
        }
        *(_DWORD *)a1 = v21;
        goto LABEL_55;
      }
      if (v29)
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_debug_impl(&dword_24B3DE000, v28, OS_LOG_TYPE_DEBUG, "SessionHandler,#input,#nilr,nilrPositionRequest,delete the existing active session", buf, 2u);
      }
      *(void *)a1 = 0xFFFFFFFF00000000;
      *(_WORD *)(a1 + 8) = -1;
      *(void *)(a1 + 16) = 0;
      *(_WORD *)(a1 + 24) = 0;
      *(void *)(a1 + 32) = 0;
      *(unsigned char *)(a1 + 40) = 0;
      *(_DWORD *)(a1 + 44) = 0;
      *(_WORD *)(a1 + 48) = 0;
      *(unsigned char *)(a1 + 50) = -1;
      *(_DWORD *)(a1 + 52) = -1;
      *(void *)(a1 + 56) = 0;
      *(unsigned char *)(a1 + 64) = 0;
      *(_DWORD *)(a1 + 68) = 0;
      *(void *)(a1 + 72) = -1;
      *(void *)(a1 + 92) = -1;
      *(_DWORD *)(a1 + 100) = -1;
      *(_WORD *)(a1 + 88) = -1;
      *(_DWORD *)(a1 + 80) = 0x7FFFFFFF;
      *(_DWORD *)(a1 + 84) = -1;
      int v30 = *(_DWORD *)(a2 + 4);
      __int16 v31 = *(_WORD *)(a2 + 8);
      int v14 = *(unsigned __int8 *)(a2 + 10);
      *(_DWORD *)a1 = *(_DWORD *)(a2 + 40);
      *(_DWORD *)(a1 + 4) = v30;
      *(_WORD *)(a1 + 8) = v31;
      if (v14 == 255)
      {
        double v32 = -1.0;
LABEL_48:
        *(double *)(a1 + 16) = v32;
        *(unsigned char *)(a1 + 24) = *(_DWORD *)(a2 + 12) != 0;
        *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 16);
        unsigned int v33 = *(unsigned __int8 *)(a2 + 17);
        if (v33 == 255) {
          double v34 = -1.0;
        }
        else {
          double v34 = (pow(1.025, (double)v33) + -1.0) * 45.0;
        }
        *(double *)(a1 + 32) = v34;
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 18);
        *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 20);
        *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 28);
        *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 31);
        *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 36);
        *(_DWORD *)(a1 + 56) = a3;
LABEL_55:
        if (*(_DWORD *)(a2 + 20))
        {
          unsigned int v35 = *(unsigned __int8 *)(a2 + 17);
          if (*(unsigned char *)(a2 + 17))
          {
            unint64_t v36 = qword_26B17C480;
            if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
            {
              *(_WORD *)uint64_t buf = 0;
              _os_log_debug_impl(&dword_24B3DE000, v36, OS_LOG_TYPE_DEBUG, "SessionHandler,#nilr,nilrPositionRequest,update target vertical uncertainty to minimum", buf, 2u);
              unsigned int v35 = *(unsigned __int8 *)(a2 + 17);
            }
            if (v35 == 255) {
              double v37 = -1.0;
            }
            else {
              double v37 = (pow(1.025, (double)v35) + -1.0) * 45.0;
            }
            if (v37 >= *(double *)(a1 + 136)) {
              double v37 = *(double *)(a1 + 136);
            }
            *(double *)(a1 + 136) = v37;
          }
        }
        if (*(unsigned char *)(a1 + 64) != 7 && *(_DWORD *)(a2 + 24))
        {
          int v38 = qword_26B17C480;
          if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)uint64_t buf = 0;
            _os_log_debug_impl(&dword_24B3DE000, v38, OS_LOG_TYPE_DEBUG, "SessionHandler,#nilr,nilrPositionRequest,requesting additional assistance", buf, 2u);
          }
          sub_24B4B7B5C(a1);
          if (!*(_DWORD *)(a2 + 36)) {
            *(unsigned char *)(a1 + 62) = 1;
          }
        }
        buf[0] = 1;
        uint64_t v39 = *(void *)(a1 + 688);
        if (!v39) {
          sub_24B3E364C();
        }
        (*(void (**)(uint64_t, uint8_t *))(*(void *)v39 + 48))(v39, buf);
        sub_24B4B7EBC(a1, *(unsigned __int8 *)(a2 + 8));
        double v40 = qword_26B17C480;
        if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
        {
          int v41 = *(unsigned __int8 *)(a1 + 129);
          uint64_t v42 = *(void *)(a1 + 16);
          uint64_t v43 = *(void *)(a1 + 32);
          unint64_t v44 = sub_24B4761A8();
          *(_DWORD *)uint64_t buf = 67109889;
          int v48 = v41;
          __int16 v49 = 2049;
          uint64_t v50 = v42;
          __int16 v51 = 2049;
          uint64_t v52 = v43;
          __int16 v53 = 2048;
          double v54 = (double)v44 * 0.000000001;
          _os_log_debug_impl(&dword_24B3DE000, v40, OS_LOG_TYPE_DEBUG, "SessionHandler,#nilr,nilrPositionRequest,config,early_return=%d,hacc=%{private}.6f,vacc=%{private}.6f,startTime=%.6f", buf, 0x26u);
        }
        return 1;
      }
    }
    else
    {
      *(_DWORD *)a1 = v21;
      *(_DWORD *)(a1 + 4) = v7;
      *(_WORD *)(a1 + 8) = v8;
    }
    double v32 = (pow(1.1, (double)v14) + -1.0) * 10.0;
    goto LABEL_48;
  }
  uint64_t v10 = qword_26B17C488;
  BOOL result = os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR);
  if (result)
  {
    *(_WORD *)uint64_t buf = 0;
    int v12 = "SessionHandler,#input,nilrPositionRequest,Invalid Methodtype";
    goto LABEL_28;
  }
  return result;
}

void sub_24B4B7A50(int *a1)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  long long v2 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    int v3 = *a1;
    int v4 = a1[1];
    int v5 = *((unsigned __int16 *)a1 + 4);
    uint64_t v6 = *((void *)a1 + 2);
    uint64_t v7 = *((void *)a1 + 4);
    int v8 = a1[13];
    int v9 = a1[14];
    int v10 = a1[11];
    int v11 = *((unsigned __int8 *)a1 + 24);
    v12[0] = 67176705;
    v12[1] = v3;
    __int16 v13 = 1025;
    int v14 = v4;
    __int16 v15 = 1025;
    int v16 = v5;
    __int16 v17 = 2049;
    uint64_t v18 = v6;
    __int16 v19 = 2049;
    uint64_t v20 = v7;
    __int16 v21 = 1024;
    int v22 = v8;
    __int16 v23 = 1024;
    int v24 = v9;
    __int16 v25 = 1025;
    int v26 = v10;
    __int16 v27 = 1025;
    int v28 = v11;
    _os_log_debug_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEBUG, "SessionHandler,#logFix,session info id=%{private}u,method=%{private}u,respTime=%{private}d,hacc=%{private}.6f,vacc=%{private}.6f,posProto=%d,sesnType=%d,vertRequested=%{private}d,velRequested=%{private}d", (uint8_t *)v12, 0x40u);
  }
}

void sub_24B4B7B5C(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  int v31 = 0;
  unsigned __int8 v32 = 0;
  unint64_t v33 = -1;
  int v34 = -1;
  unsigned __int16 v35 = 0;
  int v36 = -1;
  char v37 = -1;
  memset(v38, 0, 14);
  v38[14] = -1;
  memset(&v38[15], 0, 14);
  long long v2 = &v41;
  uint64_t v3 = 112;
  char v39 = -1;
  uint64_t v4 = 262;
  char v40 = 0;
  do
  {
    *(_DWORD *)long long v2 = 5;
    *((_WORD *)v2 + 2) = 0;
    uint64_t v5 = v3;
    *((unsigned char *)v2 + 6) = -1;
    do
    {
      uint64_t v6 = (char *)&v31 + v5;
      *uint64_t v6 = -1;
      *((_DWORD *)v6 + 1) = -1;
      v5 += 8;
    }
    while (v6 + 8 != (char *)(v2 + 16));
    *((_DWORD *)v2 + 32) = -1;
    *((_WORD *)v2 + 66) = -1;
    *(_DWORD *)((char *)v2 + 134) = -256;
    *(uint64_t *)((char *)v2 + 138) = 0;
    v2[18] = 0;
    *((_DWORD *)v2 + 38) = -1;
    uint64_t v7 = v4;
    *((unsigned char *)v2 + 156) = -1;
    do
    {
      int v8 = (char *)&v31 + v7;
      *int v8 = -1;
      *((_WORD *)v8 + 1) = -1;
      v7 += 4;
    }
    while (v8 + 4 != (char *)v2 + 218);
    *(_DWORD *)((char *)v2 + 218) = -1;
    v2 += 28;
    v3 += 224;
    v4 += 224;
  }
  while (v2 != &v42);
  int v9 = *(_DWORD *)a1;
  if (!*(_DWORD *)a1)
  {
    int v16 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v18) = 0;
      _os_log_error_impl(&dword_24B3DE000, v16, OS_LOG_TYPE_ERROR, "SessionHandler,#process,requestAdditionalAssistance,no active session", (uint8_t *)&v18, 2u);
    }
    return;
  }
  unsigned int v10 = *(_DWORD *)(a1 + 52);
  BOOL v11 = *(_DWORD *)(a1 + 56) != 1;
  unint64_t v33 = __PAIR64__(v10, v11);
  int v34 = v9;
  int v31 = -8;
  int v12 = v32 | 1;
  v32 |= 1u;
  char v13 = *(unsigned char *)(a1 + 64);
  if (v13)
  {
    if ((*(unsigned char *)(a1 + 64) & 2) != 0) {
      goto LABEL_10;
    }
LABEL_18:
    v35 |= 0x20u;
    if ((v13 & 4) != 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  v35 |= 0x40u;
  if ((v13 & 2) == 0) {
    goto LABEL_18;
  }
LABEL_10:
  if ((v13 & 4) == 0) {
LABEL_11:
  }
    v35 |= 8u;
LABEL_12:
  char v39 = 3;
  int v36 = 0;
  int v14 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(v18) = 67177217;
    HIDWORD(v18) = v35;
    uint64_t v19 = 0x401FFFFFFF80401;
    LODWORD(v20) = v12;
    WORD2(v20) = 1025;
    *(_DWORD *)((char *)&v20 + 6) = v9;
    WORD5(v20) = 1025;
    HIDWORD(v20) = v10;
    LOWORD(v21) = 1025;
    *(_DWORD *)((char *)&v21 + 2) = v11;
    HIWORD(v21) = 1024;
    int v22 = 0;
    __int16 v23 = 1024;
    int v24 = 0;
    __int16 v25 = 1024;
    int v26 = v35;
    __int16 v27 = 1024;
    int v28 = 0;
    __int16 v29 = 1024;
    int v30 = 3;
    _os_log_debug_impl(&dword_24B3DE000, v14, OS_LOG_TYPE_DEBUG, "SessionHandler,#out,requestAdditionalAssistance,%{private}d,result,%{private}d,responseType,%{private}d,sessionId,%{private}u,posProtocol,%{private}d,sessionProtocol,%{private}d.gToe,%d,gWeek,%d,aidMask,%d,numOfSats,%d,toeLimit,%d", (uint8_t *)&v18, 0x44u);
    if (v33) {
      goto LABEL_14;
    }
  }
  else if (v11)
  {
LABEL_14:
    __int16 v15 = *(NSObject **)(sub_24B4B1200() + 88);
    uint64_t v18 = MEMORY[0x263EF8330];
    uint64_t v19 = 3221225472;
    *(void *)&long long v20 = sub_24B4B61A0;
    *((void *)&v20 + 1) = &unk_265293AF8;
    __int16 v21 = &v31;
    dispatch_async(v15, &v18);
    return;
  }
  uint64_t v17 = *(void *)(a1 + 656);
  if (v17) {
    (*(void (**)(uint64_t, int *))(*(void *)v17 + 48))(v17, &v31);
  }
}

void sub_24B4B7EBC(uint64_t a1, unsigned int a2)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  sub_24B4B9808(a1);
  if (a2 <= 2) {
    unsigned __int8 v4 = a2;
  }
  else {
    unsigned __int8 v4 = a2 - 2;
  }
  if (!*(void *)(a1 + 104))
  {
    uint64_t v5 = dispatch_source_create(MEMORY[0x263EF8400], 0, 0, *(dispatch_queue_t *)(a1 + 144));
    *(void *)(a1 + 104) = v5;
    uint64_t v6 = qword_26B17C480;
    BOOL v7 = os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG);
    if (v5)
    {
      if (v7)
      {
        *(_DWORD *)uint64_t buf = 67109120;
        int v12 = v4;
        _os_log_debug_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEBUG, "SessionHandler,#input,created timer,starting timer for,%d,seconds", buf, 8u);
        uint64_t v5 = *(NSObject **)(a1 + 104);
      }
      dispatch_time_t v8 = dispatch_time(0, 1000000000 * v4);
      dispatch_source_set_timer(v5, v8, 0xFFFFFFFFFFFFFFFFLL, 0x1DCD6500uLL);
      *(double *)(a1 + 112) = (double)sub_24B4761A8() * 0.000000001;
      int v9 = *(NSObject **)(a1 + 104);
      handler[0] = MEMORY[0x263EF8330];
      handler[1] = 3221225472;
      handler[2] = sub_24B4B989C;
      handler[3] = &unk_265293AF8;
      handler[4] = a1;
      dispatch_source_set_event_handler(v9, handler);
      dispatch_resume(*(dispatch_object_t *)(a1 + 104));
    }
    else if (v7)
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_DEBUG, "SessionHandler,fTimer NULL", buf, 2u);
    }
  }
}

void sub_24B4B8084(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 24))
  {
    sub_24B4BAAD0((uint64_t)v8, a2);
    BOOL v11 = 0;
    uint64_t v3 = v9;
    if (v9)
    {
      unsigned __int8 v4 = (uint8_t *)operator new(0x28uLL);
      uint64_t v5 = v4;
      *(void *)unsigned __int8 v4 = &unk_26FE86468;
      if (v3 == v8)
      {
        *((void *)v4 + 4) = v4 + 8;
        (*(void (**)(void *))(v8[0] + 24))(v8);
      }
      else
      {
        *((void *)v4 + 4) = v3;
        int v9 = 0;
      }
      BOOL v11 = v5;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v7 = a1 + 472;
    if (buf != (uint8_t *)(a1 + 472))
    {
      if (*(void *)(a1 + 496) == v7)
      {
        (*(void (**)(uint64_t, uint8_t *))(*(void *)v7 + 24))(v7, buf);
        (*(void (**)(void))(**(void **)(a1 + 496) + 32))(*(void *)(a1 + 496));
        *(void *)(a1 + 496) = v11;
        BOOL v11 = buf;
      }
      else
      {
        BOOL v11 = *(uint8_t **)(a1 + 496);
        *(void *)(a1 + 496) = v5;
      }
    }
    sub_24B4BA944(buf);
    sub_24B3E893C(v8);
  }
  else
  {
    uint64_t v6 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "SessionHandler EmergencySessionSummaryReportCb NULL callback pointer ", buf, 2u);
    }
  }
}

void sub_24B4B8254(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_24B3E0E90(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4B8284(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 24))
  {
    sub_24B4BADA4((uint64_t)v8, a2);
    BOOL v11 = 0;
    uint64_t v3 = v9;
    if (v9)
    {
      unsigned __int8 v4 = (uint8_t *)operator new(0x28uLL);
      uint64_t v5 = v4;
      *(void *)unsigned __int8 v4 = &unk_26FE86558;
      if (v3 == v8)
      {
        *((void *)v4 + 4) = v4 + 8;
        (*(void (**)(void *))(v8[0] + 24))(v8);
      }
      else
      {
        *((void *)v4 + 4) = v3;
        int v9 = 0;
      }
      BOOL v11 = v5;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v7 = a1 + 504;
    if (buf != (uint8_t *)(a1 + 504))
    {
      if (*(void *)(a1 + 528) == v7)
      {
        (*(void (**)(uint64_t, uint8_t *))(*(void *)v7 + 24))(v7, buf);
        (*(void (**)(void))(**(void **)(a1 + 528) + 32))(*(void *)(a1 + 528));
        *(void *)(a1 + 528) = v11;
        BOOL v11 = buf;
      }
      else
      {
        BOOL v11 = *(uint8_t **)(a1 + 528);
        *(void *)(a1 + 528) = v5;
      }
    }
    sub_24B4BA9C8(buf);
    sub_24B3E8F20(v8);
  }
  else
  {
    uint64_t v6 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "SessionHandler NavModelCb NULL callback pointer", buf, 2u);
    }
  }
}

void sub_24B4B8454(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_24B3E0E90(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4B8484(uint64_t a1, void *a2)
{
  void v10[3] = *MEMORY[0x263EF8340];
  uint64_t v3 = (void *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      int v9 = v8;
      (*(void (**)(void *, uint8_t *))(*a2 + 24))(a2, v8);
    }
    else
    {
      int v9 = (uint8_t *)(*(uint64_t (**)(void *))(*v3 + 16))(v3);
    }
    uint64_t v5 = a1 + 536;
    if (v8 != (uint8_t *)(a1 + 536))
    {
      uint64_t v6 = v9;
      uint64_t v7 = *(void *)(a1 + 560);
      if (v9 == v8)
      {
        if (v7 == v5)
        {
          (*(void (**)(uint8_t *, void *))(*(void *)v8 + 24))(v8, v10);
          (*(void (**)(uint8_t *))(*(void *)v9 + 32))(v9);
          int v9 = 0;
          (*(void (**)(void, uint8_t *))(**(void **)(a1 + 560) + 24))(*(void *)(a1 + 560), v8);
          (*(void (**)(void))(**(void **)(a1 + 560) + 32))(*(void *)(a1 + 560));
          *(void *)(a1 + 560) = 0;
          int v9 = v8;
          (*(void (**)(void *, uint64_t))(v10[0] + 24))(v10, a1 + 536);
          (*(void (**)(void *))(v10[0] + 32))(v10);
        }
        else
        {
          (*(void (**)(uint8_t *, uint64_t))(*(void *)v8 + 24))(v8, a1 + 536);
          (*(void (**)(uint8_t *))(*(void *)v9 + 32))(v9);
          int v9 = *(uint8_t **)(a1 + 560);
        }
        *(void *)(a1 + 560) = v5;
      }
      else if (v7 == v5)
      {
        (*(void (**)(uint64_t, uint8_t *))(*(void *)v5 + 24))(a1 + 536, v8);
        (*(void (**)(void))(**(void **)(a1 + 560) + 32))(*(void *)(a1 + 560));
        *(void *)(a1 + 560) = v9;
        int v9 = v8;
      }
      else
      {
        int v9 = *(uint8_t **)(a1 + 560);
        *(void *)(a1 + 560) = v6;
      }
    }
    sub_24B3E92C0(v8);
  }
  else
  {
    unsigned __int8 v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)dispatch_time_t v8 = 0;
      _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "SessionHandler RefTimeCb NULL callback pointer", v8, 2u);
    }
  }
}

void sub_24B4B87C4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_24B3E0E90(a1);
}

void sub_24B4B87D0(uint64_t a1, void *a2)
{
  void v10[3] = *MEMORY[0x263EF8340];
  uint64_t v3 = (void *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      int v9 = v8;
      (*(void (**)(void *, uint8_t *))(*a2 + 24))(a2, v8);
    }
    else
    {
      int v9 = (uint8_t *)(*(uint64_t (**)(void *))(*v3 + 16))(v3);
    }
    uint64_t v5 = a1 + 568;
    if (v8 != (uint8_t *)(a1 + 568))
    {
      uint64_t v6 = v9;
      uint64_t v7 = *(void *)(a1 + 592);
      if (v9 == v8)
      {
        if (v7 == v5)
        {
          (*(void (**)(uint8_t *, void *))(*(void *)v8 + 24))(v8, v10);
          (*(void (**)(uint8_t *))(*(void *)v9 + 32))(v9);
          int v9 = 0;
          (*(void (**)(void, uint8_t *))(**(void **)(a1 + 592) + 24))(*(void *)(a1 + 592), v8);
          (*(void (**)(void))(**(void **)(a1 + 592) + 32))(*(void *)(a1 + 592));
          *(void *)(a1 + 592) = 0;
          int v9 = v8;
          (*(void (**)(void *, uint64_t))(v10[0] + 24))(v10, a1 + 568);
          (*(void (**)(void *))(v10[0] + 32))(v10);
        }
        else
        {
          (*(void (**)(uint8_t *, uint64_t))(*(void *)v8 + 24))(v8, a1 + 568);
          (*(void (**)(uint8_t *))(*(void *)v9 + 32))(v9);
          int v9 = *(uint8_t **)(a1 + 592);
        }
        *(void *)(a1 + 592) = v5;
      }
      else if (v7 == v5)
      {
        (*(void (**)(uint64_t, uint8_t *))(*(void *)v5 + 24))(a1 + 568, v8);
        (*(void (**)(void))(**(void **)(a1 + 592) + 32))(*(void *)(a1 + 592));
        *(void *)(a1 + 592) = v9;
        int v9 = v8;
      }
      else
      {
        int v9 = *(uint8_t **)(a1 + 592);
        *(void *)(a1 + 592) = v6;
      }
    }
    sub_24B3E9D20(v8);
  }
  else
  {
    unsigned __int8 v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)dispatch_time_t v8 = 0;
      _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "SessionHandler RefLocationCb NULL callback pointer", v8, 2u);
    }
  }
}

void sub_24B4B8B10(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_24B3E0E90(a1);
}

void sub_24B4B8B1C(uint64_t a1, void *a2)
{
  void v10[3] = *MEMORY[0x263EF8340];
  uint64_t v3 = (void *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      int v9 = v8;
      (*(void (**)(void *, uint8_t *))(*a2 + 24))(a2, v8);
    }
    else
    {
      int v9 = (uint8_t *)(*(uint64_t (**)(void *))(*v3 + 16))(v3);
    }
    uint64_t v5 = a1 + 600;
    if (v8 != (uint8_t *)(a1 + 600))
    {
      uint64_t v6 = v9;
      uint64_t v7 = *(void *)(a1 + 624);
      if (v9 == v8)
      {
        if (v7 == v5)
        {
          (*(void (**)(uint8_t *, void *))(*(void *)v8 + 24))(v8, v10);
          (*(void (**)(uint8_t *))(*(void *)v9 + 32))(v9);
          int v9 = 0;
          (*(void (**)(void, uint8_t *))(**(void **)(a1 + 624) + 24))(*(void *)(a1 + 624), v8);
          (*(void (**)(void))(**(void **)(a1 + 624) + 32))(*(void *)(a1 + 624));
          *(void *)(a1 + 624) = 0;
          int v9 = v8;
          (*(void (**)(void *, uint64_t))(v10[0] + 24))(v10, a1 + 600);
          (*(void (**)(void *))(v10[0] + 32))(v10);
        }
        else
        {
          (*(void (**)(uint8_t *, uint64_t))(*(void *)v8 + 24))(v8, a1 + 600);
          (*(void (**)(uint8_t *))(*(void *)v9 + 32))(v9);
          int v9 = *(uint8_t **)(a1 + 624);
        }
        *(void *)(a1 + 624) = v5;
      }
      else if (v7 == v5)
      {
        (*(void (**)(uint64_t, uint8_t *))(*(void *)v5 + 24))(a1 + 600, v8);
        (*(void (**)(void))(**(void **)(a1 + 624) + 32))(*(void *)(a1 + 624));
        *(void *)(a1 + 624) = v9;
        int v9 = v8;
      }
      else
      {
        int v9 = *(uint8_t **)(a1 + 624);
        *(void *)(a1 + 624) = v6;
      }
    }
    sub_24B3E9FE4(v8);
  }
  else
  {
    unsigned __int8 v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)dispatch_time_t v8 = 0;
      _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "SessionHandler PosResponseCb NULL callback pointer", v8, 2u);
    }
  }
}

void sub_24B4B8E5C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_24B3E0E90(a1);
}

void sub_24B4B8E68(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 24))
  {
    sub_24B4BB070((uint64_t)v8, a2);
    BOOL v11 = 0;
    uint64_t v3 = v9;
    if (v9)
    {
      unsigned __int8 v4 = (uint8_t *)operator new(0x28uLL);
      uint64_t v5 = v4;
      *(void *)unsigned __int8 v4 = &unk_26FE86648;
      if (v3 == v8)
      {
        *((void *)v4 + 4) = v4 + 8;
        (*(void (**)(void *))(v8[0] + 24))(v8);
      }
      else
      {
        *((void *)v4 + 4) = v3;
        int v9 = 0;
      }
      BOOL v11 = v5;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t v7 = a1 + 632;
    if (buf != (uint8_t *)(a1 + 632))
    {
      if (*(void *)(a1 + 656) == v7)
      {
        (*(void (**)(uint64_t, uint8_t *))(*(void *)v7 + 24))(v7, buf);
        (*(void (**)(void))(**(void **)(a1 + 656) + 32))(*(void *)(a1 + 656));
        *(void *)(a1 + 656) = v11;
        BOOL v11 = buf;
      }
      else
      {
        BOOL v11 = *(uint8_t **)(a1 + 656);
        *(void *)(a1 + 656) = v5;
      }
    }
    sub_24B4BAA4C(buf);
    sub_24B3EA38C(v8);
  }
  else
  {
    uint64_t v6 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_error_impl(&dword_24B3DE000, v6, OS_LOG_TYPE_ERROR, "SessionHandler AssistanceNeededReportCb NULL callback pointer", buf, 2u);
    }
  }
}

void sub_24B4B9038(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_24B3E0E90(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B4B9068(uint64_t a1, void *a2)
{
  void v10[3] = *MEMORY[0x263EF8340];
  uint64_t v3 = (void *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      int v9 = v8;
      (*(void (**)(void *, uint8_t *))(*a2 + 24))(a2, v8);
    }
    else
    {
      int v9 = (uint8_t *)(*(uint64_t (**)(void *))(*v3 + 16))(v3);
    }
    uint64_t v5 = a1 + 664;
    if (v8 != (uint8_t *)(a1 + 664))
    {
      uint64_t v6 = v9;
      uint64_t v7 = *(void *)(a1 + 688);
      if (v9 == v8)
      {
        if (v7 == v5)
        {
          (*(void (**)(uint8_t *, void *))(*(void *)v8 + 24))(v8, v10);
          (*(void (**)(uint8_t *))(*(void *)v9 + 32))(v9);
          int v9 = 0;
          (*(void (**)(void, uint8_t *))(**(void **)(a1 + 688) + 24))(*(void *)(a1 + 688), v8);
          (*(void (**)(void))(**(void **)(a1 + 688) + 32))(*(void *)(a1 + 688));
          *(void *)(a1 + 688) = 0;
          int v9 = v8;
          (*(void (**)(void *, uint64_t))(v10[0] + 24))(v10, a1 + 664);
          (*(void (**)(void *))(v10[0] + 32))(v10);
        }
        else
        {
          (*(void (**)(uint8_t *, uint64_t))(*(void *)v8 + 24))(v8, a1 + 664);
          (*(void (**)(uint8_t *))(*(void *)v9 + 32))(v9);
          int v9 = *(uint8_t **)(a1 + 688);
        }
        *(void *)(a1 + 688) = v5;
      }
      else if (v7 == v5)
      {
        (*(void (**)(uint64_t, uint8_t *))(*(void *)v5 + 24))(a1 + 664, v8);
        (*(void (**)(void))(**(void **)(a1 + 688) + 32))(*(void *)(a1 + 688));
        *(void *)(a1 + 688) = v9;
        int v9 = v8;
      }
      else
      {
        int v9 = *(uint8_t **)(a1 + 688);
        *(void *)(a1 + 688) = v6;
      }
    }
    sub_24B3EA614(v8);
  }
  else
  {
    unsigned __int8 v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)dispatch_time_t v8 = 0;
      _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "SessionHandler setNilrSessionIndicationCb NULL callback pointer", v8, 2u);
    }
  }
}

void sub_24B4B93A8(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_24B3E0E90(a1);
}

void sub_24B4B93B4(uint64_t a1, void *a2)
{
  void v10[3] = *MEMORY[0x263EF8340];
  uint64_t v3 = (void *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      int v9 = v8;
      (*(void (**)(void *, uint8_t *))(*a2 + 24))(a2, v8);
    }
    else
    {
      int v9 = (uint8_t *)(*(uint64_t (**)(void *))(*v3 + 16))(v3);
    }
    uint64_t v5 = a1 + 696;
    if (v8 != (uint8_t *)(a1 + 696))
    {
      uint64_t v6 = v9;
      uint64_t v7 = *(void *)(a1 + 720);
      if (v9 == v8)
      {
        if (v7 == v5)
        {
          (*(void (**)(uint8_t *, void *))(*(void *)v8 + 24))(v8, v10);
          (*(void (**)(uint8_t *))(*(void *)v9 + 32))(v9);
          int v9 = 0;
          (*(void (**)(void, uint8_t *))(**(void **)(a1 + 720) + 24))(*(void *)(a1 + 720), v8);
          (*(void (**)(void))(**(void **)(a1 + 720) + 32))(*(void *)(a1 + 720));
          *(void *)(a1 + 720) = 0;
          int v9 = v8;
          (*(void (**)(void *, uint64_t))(v10[0] + 24))(v10, a1 + 696);
          (*(void (**)(void *))(v10[0] + 32))(v10);
        }
        else
        {
          (*(void (**)(uint8_t *, uint64_t))(*(void *)v8 + 24))(v8, a1 + 696);
          (*(void (**)(uint8_t *))(*(void *)v9 + 32))(v9);
          int v9 = *(uint8_t **)(a1 + 720);
        }
        *(void *)(a1 + 720) = v5;
      }
      else if (v7 == v5)
      {
        (*(void (**)(uint64_t, uint8_t *))(*(void *)v5 + 24))(a1 + 696, v8);
        (*(void (**)(void))(**(void **)(a1 + 720) + 32))(*(void *)(a1 + 720));
        *(void *)(a1 + 720) = v9;
        int v9 = v8;
      }
      else
      {
        int v9 = *(uint8_t **)(a1 + 720);
        *(void *)(a1 + 720) = v6;
      }
    }
    sub_24B3EA858(v8);
  }
  else
  {
    unsigned __int8 v4 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)dispatch_time_t v8 = 0;
      _os_log_error_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_ERROR, "SessionHandler setBestFixHandlerCb NULL callback pointer", v8, 2u);
    }
  }
}

void sub_24B4B96F4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_24B3E0E90(a1);
}

void sub_24B4B9700(int *a1, double a2)
{
  int v3 = *a1;
  if (*a1)
  {
    uint64_t v4 = a1[13];
    if (a1[14] == 1) {
      int v5 = 1;
    }
    else {
      int v5 = 3;
    }
    if (a1[14] == 1) {
      int v6 = 1;
    }
    else {
      int v6 = 2;
    }
    if (v4 > 4) {
      int v7 = 0;
    }
    else {
      int v7 = dword_24B4C6C6C[v4];
    }
    LOWORD(a2) = *((_WORD *)a1 + 4);
    uint64_t v8 = *((void *)a1 + 2);
    uint64_t v9 = *((void *)a1 + 4);
    char v10 = *((unsigned char *)a1 + 128);
    char v11 = *((unsigned char *)a1 + 63);
    unint64_t v12 = ((unint64_t)(a1[16] & 4) << 17) | (4 * (a1[16] & 3));
    v19[0] = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
    v19[1] = xmmword_24B4C6550;
    __asm { FMOV            V3.2D, #-1.0 }
    void v19[2] = _Q3;
    uint64_t v20 = 0;
    int v21 = v6;
    int v22 = v7;
    double v23 = (double)*(unint64_t *)&a2;
    uint64_t v24 = v8;
    uint64_t v25 = v9;
    int v26 = v5;
    int v27 = 3;
    char v28 = v10;
    char v29 = v11;
    unint64_t v30 = v12;
    uint64_t v31 = 0;
    int v32 = v3;
    uint64_t v18 = *((void *)a1 + 62);
    if (v18) {
      (*(void (**)(uint64_t, _OWORD *))(*(void *)v18 + 48))(v18, v19);
    }
  }
  sub_24B4B718C(a1);
}

void sub_24B4B9808(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(a1 + 104);
  if (v1)
  {
    int v3 = qword_26B17C480;
    if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_debug_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_DEBUG, "SessionHandler,#input,cancel the ongoing timer", v4, 2u);
      uint64_t v1 = *(NSObject **)(a1 + 104);
    }
    dispatch_source_cancel(v1);

    *(void *)(a1 + 104) = 0;
  }
}

void sub_24B4B989C(uint64_t a1)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(int **)(a1 + 32);
  uint64_t v2 = *((void *)v1 + 90);
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 48))(v2);
    *((double *)v1 + 15) = (double)sub_24B4761A8() * 0.000000001;
    if (*((unsigned char *)v1 + 62) && !v1[13])
    {
      uint64_t v21 = qword_26B17C480;
      if (!os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
      {
LABEL_15:
        LOBYTE(v49) = 0;
        uint64_t v22 = *((void *)v1 + 86);
        if (!v22) {
          sub_24B3E364C();
        }
        (*(void (**)(uint64_t, int *))(*(void *)v22 + 48))(v22, &v49);
        sub_24B4B718C(v1);
        return;
      }
      *(_WORD *)uint64_t buf = 0;
      uint64_t v17 = "SessionHandler,#out,no response for RRLP additional AD.Not sending POS response";
      uint64_t v18 = buf;
      uint64_t v19 = v21;
      uint32_t v20 = 2;
    }
    else
    {
      int v3 = v1[41];
      if (v3)
      {
        int v4 = v1[13];
        int v5 = *((unsigned __int8 *)v1 + 264) >> (v4 == 1);
        int v6 = *v1;
        BOOL v7 = v1[14] == 2;
        *(_DWORD *)uint64_t buf = v1[40];
        int v26 = v3;
        BOOL v27 = v7;
        int v28 = v4;
        long long v32 = *(_OWORD *)(v1 + 53);
        long long v33 = *(_OWORD *)(v1 + 57);
        long long v34 = *(_OWORD *)(v1 + 61);
        int v8 = v1[65];
        int v29 = v6;
        int v35 = v8;
        long long v30 = *(_OWORD *)(v1 + 45);
        long long v31 = *(_OWORD *)(v1 + 49);
        char v36 = v5;
        *(_OWORD *)((char *)v48 + 15) = *(_OWORD *)(v1 + 114);
        long long v9 = *(_OWORD *)((char *)v1 + 441);
        long long v47 = *(_OWORD *)((char *)v1 + 425);
        v48[0] = v9;
        long long v42 = *(_OWORD *)((char *)v1 + 345);
        long long v43 = *(_OWORD *)((char *)v1 + 361);
        long long v44 = *(_OWORD *)((char *)v1 + 377);
        long long v45 = *(_OWORD *)((char *)v1 + 393);
        long long v38 = *(_OWORD *)((char *)v1 + 281);
        long long v39 = *(_OWORD *)((char *)v1 + 297);
        long long v40 = *(_OWORD *)((char *)v1 + 313);
        long long v41 = *(_OWORD *)((char *)v1 + 329);
        long long v37 = *(_OWORD *)((char *)v1 + 265);
        long long v46 = *(_OWORD *)((char *)v1 + 409);
        long long v10 = *((_OWORD *)v1 + 5);
        v23[4] = *((_OWORD *)v1 + 4);
        v23[5] = v10;
        uint64_t v24 = *((void *)v1 + 12);
        long long v11 = *((_OWORD *)v1 + 1);
        v23[0] = *(_OWORD *)v1;
        v23[1] = v11;
        long long v12 = *((_OWORD *)v1 + 3);
        _DWORD v23[2] = *((_OWORD *)v1 + 2);
        v23[3] = v12;
        sub_24B4B6BC8(v1, buf, v23);
      }
      else
      {
        sub_24B4B6EE0(v1);
      }
      uint64_t v14 = qword_26B17C480;
      if (!os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_15;
      }
      double v16 = *((double *)v1 + 14);
      double v15 = *((double *)v1 + 15);
      int v49 = 134218496;
      double v50 = v15 - v16;
      __int16 v51 = 2048;
      double v52 = v16;
      __int16 v53 = 2048;
      double v54 = v15;
      uint64_t v17 = "SessionHandler,#out,TTFF,%f,starttime,%.2f,endtime,%.2f";
      uint64_t v18 = (uint8_t *)&v49;
      uint64_t v19 = v14;
      uint32_t v20 = 32;
    }
    _os_log_debug_impl(&dword_24B3DE000, v19, OS_LOG_TYPE_DEBUG, v17, v18, v20);
    goto LABEL_15;
  }
  uint64_t v13 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_debug_impl(&dword_24B3DE000, v13, OS_LOG_TYPE_DEBUG, "SessionHandler,callback NULL. Sending POS method failure", buf, 2u);
  }
  sub_24B4B6EE0(v1);
}

double sub_24B4B9BA8(uint64_t a1)
{
  uint64_t v2 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int v4 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEBUG, "SessionHandler,#process,clearSessionAssistanceRecvd", v4, 2u);
  }
  *(void *)a1 = 0xFFFFFFFF00000000;
  *(_WORD *)(a1 + 8) = -1;
  *(void *)(a1 + 16) = 0;
  *(_WORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 44) = 0;
  *(_WORD *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 50) = -1;
  *(_DWORD *)(a1 + 52) = -1;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 72) = -1;
  double result = NAN;
  *(void *)(a1 + 92) = -1;
  *(_DWORD *)(a1 + 100) = -1;
  *(_WORD *)(a1 + 88) = -1;
  *(_DWORD *)(a1 + 80) = 0x7FFFFFFF;
  *(_DWORD *)(a1 + 84) = -1;
  return result;
}

void sub_24B4B9C78(uint64_t a1, int *a2)
{
  uint64_t v88 = *MEMORY[0x263EF8340];
  int v3 = a2[2];
  int v4 = qword_26B17C480;
  BOOL v5 = os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG);
  if (v3)
  {
    if (!v5) {
      goto LABEL_5;
    }
    LOWORD(v44) = 0;
    int v6 = "SessionHandler,#out,posReport,sessionProtocol = SUPL";
  }
  else
  {
    if (!v5) {
      goto LABEL_5;
    }
    LOWORD(v44) = 0;
    int v6 = "SessionHandler,#out,posReport,sessionProtocol = CPlane";
  }
  _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, v6, (uint8_t *)&v44, 2u);
LABEL_5:
  int v7 = a2[68];
  int v8 = qword_26B17C480;
  if (v7 == 3)
  {
    if (!os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_17;
    }
    int v9 = *((unsigned __int16 *)a2 + 146);
    int v10 = *((unsigned __int16 *)a2 + 147);
    int v11 = *((unsigned __int8 *)a2 + 296);
    int v12 = *((unsigned __int8 *)a2 + 298);
    int v13 = *((unsigned __int8 *)a2 + 299);
    int v44 = 67175681;
    int v45 = v9;
    __int16 v46 = 1025;
    int v47 = v10;
    __int16 v48 = 1025;
    int v49 = v11;
    __int16 v50 = 1025;
    int v51 = v12;
    __int16 v52 = 1025;
    int v53 = v13;
    _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, "SessionHandler,#out,posReport,kVelocityTypeHorizontalWithVerticalVelocityAndUncertainty,bearing  ,%{private}u,horizontalSpeed,%{private}u,verticalSpeed,%{private}u,horizUncertaintySpeed,%{private}u,vertUncertaintySpeed,%{private}u", (uint8_t *)&v44, 0x20u);
    int v7 = a2[68];
    int v8 = qword_26B17C480;
  }
  if (v7 == 2)
  {
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_17;
    }
    int v14 = *((unsigned __int16 *)a2 + 143);
    int v15 = *((unsigned __int16 *)a2 + 144);
    int v16 = *((unsigned __int8 *)a2 + 290);
    int v44 = 67175169;
    int v45 = v14;
    __int16 v46 = 1025;
    int v47 = v15;
    __int16 v48 = 1025;
    int v49 = v16;
    _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, "SessionHandler,#out,posReport,kVelocityTypeHorizontalVelocityWithUncertainty,bearing ,%{private}u,horizontalSpeed,%{private}u,horizUncertaintySpeed,%{private}u", (uint8_t *)&v44, 0x14u);
    int v7 = a2[68];
    int v8 = qword_26B17C480;
  }
  if (v7 == 1)
  {
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_17;
    }
    int v17 = *((unsigned __int16 *)a2 + 140);
    int v18 = *((unsigned __int16 *)a2 + 141);
    int v19 = *((unsigned __int8 *)a2 + 284);
    int v44 = 67175169;
    int v45 = v17;
    __int16 v46 = 1025;
    int v47 = v18;
    __int16 v48 = 1025;
    int v49 = v19;
    _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, "SessionHandler,#out,posReport,kVelocityTypeHorizontalWithVerticalVelocity,bearing,%{private}u,horizontalSpeed,%{private}u,verticalSpeed,%{private}u", (uint8_t *)&v44, 0x14u);
    int v7 = a2[68];
    int v8 = qword_26B17C480;
  }
  if (!v7 && os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
  {
    int v42 = *((unsigned __int16 *)a2 + 138);
    int v43 = *((unsigned __int16 *)a2 + 139);
    int v44 = 67174913;
    int v45 = v42;
    __int16 v46 = 1025;
    int v47 = v43;
    _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, "SessionHandler,,#out,posReport,kVelocityTypeHorizontalWithVerticalVelocity,bearing,%{private}u,horizontalSpeed,%{private}u", (uint8_t *)&v44, 0xEu);
    int v8 = qword_26B17C480;
  }
LABEL_17:
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
  {
    int v20 = *a2;
    int v22 = a2[3];
    int v21 = a2[4];
    int v23 = *((unsigned __int16 *)a2 + 12);
    int v24 = a2[5];
    int v25 = *((unsigned __int8 *)a2 + 26);
    int v27 = a2[8];
    int v26 = a2[9];
    int v28 = *((unsigned __int16 *)a2 + 20);
    int v29 = *((unsigned __int8 *)a2 + 42);
    int v30 = a2[16];
    int v31 = a2[23];
    int v32 = a2[24];
    int v33 = *((unsigned __int8 *)a2 + 102);
    int v34 = *((unsigned __int8 *)a2 + 103);
    int v35 = *((unsigned __int16 *)a2 + 50);
    int v36 = *((unsigned __int8 *)a2 + 105);
    int v37 = *((unsigned __int8 *)a2 + 106);
    int v38 = *((unsigned __int8 *)a2 + 104);
    int v39 = a2[68];
    int v40 = a2[75];
    int v41 = a2[7];
    int v44 = 67114497;
    int v45 = v20;
    __int16 v46 = 1024;
    int v47 = v21;
    __int16 v48 = 1024;
    int v49 = v22;
    __int16 v50 = 1024;
    int v51 = v23;
    __int16 v52 = 1024;
    int v53 = v24;
    __int16 v54 = 1024;
    int v55 = v25;
    __int16 v56 = 1024;
    int v57 = v27;
    __int16 v58 = 1024;
    int v59 = v26;
    __int16 v60 = 1024;
    int v61 = v28;
    __int16 v62 = 1024;
    int v63 = v29;
    __int16 v64 = 1024;
    int v65 = v30;
    __int16 v66 = 1025;
    int v67 = v31;
    __int16 v68 = 1025;
    int v69 = v32;
    __int16 v70 = 1025;
    int v71 = v33;
    __int16 v72 = 1025;
    int v73 = v34;
    __int16 v74 = 1025;
    int v75 = v35;
    __int16 v76 = 1025;
    int v77 = v36;
    __int16 v78 = 1025;
    int v79 = v37;
    __int16 v80 = 1024;
    int v81 = v38;
    __int16 v82 = 1024;
    int v83 = v39;
    __int16 v84 = 1024;
    int v85 = v40;
    __int16 v86 = 1024;
    int v87 = v41;
    _os_log_debug_impl(&dword_24B3DE000, v8, OS_LOG_TYPE_DEBUG, "SessionHandler,#out,posReport,result,%u,sessionId,%u,posProtocol,%u,gpsWeek,%u,gpsTow,%u,gpsTimeUncertainty,%u,gpsTODPresent,%d,gpsTODMsec,%u,gpsTODFrac,%u,gpsTODUnc,%u,shapeType,%u,latitude,%{private}u,longitude,%{private}u,Major axis,%{private}u,Minor axis,%{private}u,altitude,%{private}u,uncertainAltitude,%{private}u,confidence,%{private}u,orientationAngle,%u,velocityType,%u,technologySource,%u,fixType,%u", (uint8_t *)&v44, 0x86u);
  }
}

void sub_24B4BA068(uint64_t a1, int a2)
{
  if (*(_DWORD *)a1)
  {
    int v2 = *(unsigned __int8 *)(a1 + 64) | a2;
    *(unsigned char *)(a1 + 64) |= a2;
    if (v2 != 7 && !*(_DWORD *)(a1 + 52)) {
      *(unsigned char *)(a1 + 62) = 0;
    }
  }
  else
  {
    int v3 = qword_26B17C488;
    if (os_log_type_enabled((os_log_t)qword_26B17C488, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int v4 = 0;
      _os_log_error_impl(&dword_24B3DE000, v3, OS_LOG_TYPE_ERROR, "SessionHandler,#process,#nilrPosRequest no active session", v4, 2u);
    }
  }
}

__n128 sub_24B4BA0FC(uint64_t a1, int *a2)
{
  sub_24B4BA1F4(a1, a2[387], a2[386], a2[385]);
  if (*(void *)(a1 + 528))
  {
    sub_24B4BA068(a1, 4);
    int v4 = qword_26B17C480;
    if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "SessionHandler,#input,inject nav model", buf, 2u);
    }
    uint64_t v5 = *(void *)(a1 + 528);
    if (!v5) {
      sub_24B3E364C();
    }
    (*(void (**)(uint64_t, int *))(*(void *)v5 + 48))(v5, a2);
  }
  long long v6 = *(_OWORD *)(a1 + 80);
  void v10[4] = *(_OWORD *)(a1 + 64);
  v10[5] = v6;
  uint64_t v11 = *(void *)(a1 + 96);
  long long v7 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v7;
  long long v8 = *(_OWORD *)(a1 + 48);
  _DWORD v10[2] = *(_OWORD *)(a1 + 32);
  void v10[3] = v8;
  sub_24B4B7A50((int *)v10);
  return result;
}

void sub_24B4BA1F4(uint64_t a1, int a2, int a3, int a4)
{
  if (*(_DWORD *)a1)
  {
    int v4 = qword_26B17C480;
    if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v6[0]) = 0;
      _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "SessionHandler,addSessionInfo,session already exists", (uint8_t *)v6, 2u);
    }
  }
  else
  {
    __int16 v22 = -1;
    int v5 = 2 * (a4 == 1);
    *(_DWORD *)a1 = a2;
    *(_DWORD *)(a1 + 4) = -1;
    if (!a4) {
      int v5 = 1;
    }
    *(_WORD *)(a1 + 8) = -1;
    *(void *)(a1 + 16) = 0;
    *(_WORD *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(unsigned char *)(a1 + 40) = 0;
    *(_DWORD *)(a1 + 44) = 0;
    *(_WORD *)(a1 + 48) = 0;
    *(unsigned char *)(a1 + 50) = -1;
    *(_DWORD *)(a1 + 52) = a3;
    *(_DWORD *)(a1 + 56) = v5;
    *(void *)(a1 + 60) = 0;
    *(_DWORD *)(a1 + 68) = 0;
    *(void *)(a1 + 72) = -1;
    *(_WORD *)(a1 + 88) = -1;
    *(_DWORD *)(a1 + 80) = 0x7FFFFFFF;
    *(_DWORD *)(a1 + 84) = -1;
    *(void *)(a1 + 92) = -1;
    *(_DWORD *)(a1 + 100) = -1;
    v6[0] = a2;
    v6[1] = -1;
    __int16 v7 = -1;
    uint64_t v8 = 0;
    __int16 v9 = 0;
    uint64_t v10 = 0;
    char v11 = 0;
    int v12 = 0;
    __int16 v13 = 0;
    char v14 = -1;
    int v15 = a3;
    int v16 = v5;
    uint64_t v17 = 0;
    int v18 = 0;
    uint64_t v19 = -1;
    int v20 = 0x7FFFFFFF;
    int v21 = -1;
    uint64_t v23 = -1;
    int v24 = -1;
    sub_24B4B7A50(v6);
  }
}

__n128 sub_24B4BA320(uint64_t a1, int *a2)
{
  sub_24B4BA1F4(a1, a2[69], a2[68], a2[67]);
  if (*(void *)(a1 + 560))
  {
    sub_24B4BA068(a1, 1);
    int v4 = qword_26B17C480;
    if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "SessionHandler,#input,inject ref time", buf, 2u);
    }
    uint64_t v5 = *(void *)(a1 + 560);
    if (!v5) {
      sub_24B3E364C();
    }
    (*(void (**)(uint64_t, int *))(*(void *)v5 + 48))(v5, a2);
  }
  long long v6 = *(_OWORD *)(a1 + 80);
  void v10[4] = *(_OWORD *)(a1 + 64);
  v10[5] = v6;
  uint64_t v11 = *(void *)(a1 + 96);
  long long v7 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v7;
  long long v8 = *(_OWORD *)(a1 + 48);
  _DWORD v10[2] = *(_OWORD *)(a1 + 32);
  void v10[3] = v8;
  sub_24B4B7A50((int *)v10);
  return result;
}

__n128 sub_24B4BA418(uint64_t a1, int *a2)
{
  sub_24B4BA1F4(a1, a2[7], a2[6], a2[5]);
  if (*(void *)(a1 + 592))
  {
    sub_24B4BA068(a1, 2);
    int v4 = qword_26B17C480;
    if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_debug_impl(&dword_24B3DE000, v4, OS_LOG_TYPE_DEBUG, "SessionHandler,#input,inject ref location", buf, 2u);
    }
    uint64_t v5 = *(void *)(a1 + 592);
    if (!v5) {
      sub_24B3E364C();
    }
    (*(void (**)(uint64_t, int *))(*(void *)v5 + 48))(v5, a2);
  }
  long long v6 = *(_OWORD *)(a1 + 80);
  void v10[4] = *(_OWORD *)(a1 + 64);
  v10[5] = v6;
  uint64_t v11 = *(void *)(a1 + 96);
  long long v7 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v7;
  long long v8 = *(_OWORD *)(a1 + 48);
  _DWORD v10[2] = *(_OWORD *)(a1 + 32);
  void v10[3] = v8;
  sub_24B4B7A50((int *)v10);
  return result;
}

void *sub_24B4BA50C(uint64_t a1, uint64_t a2)
{
  unsigned char v5[4] = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_24B4B1200();
  sub_24B4B64B8((uint64_t)v5, a2);
  sub_24B4B0E24(v3, (uint64_t)v5);
  return sub_24B3E8C10(v5);
}

void sub_24B4BA588(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_24B3E8C10((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_24B4BA5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_24B4B1200();
  int v4 = *(_DWORD *)a2;
  long long v6 = 0;
  uint64_t v7 = 0;
  uint64_t v5 = 0;
  sub_24B3E7F48(&v5, *(const void **)(a2 + 8), *(void *)(a2 + 16), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2));
  long long v8 = 0;
  __int16 v9 = 0;
  uint64_t v10 = 0;
  sub_24B3E809C(&v8, *(const void **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 4);
  long long __p = 0;
  int v12 = 0;
  uint64_t v13 = 0;
  sub_24B3E8194(&__p, *(const void **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 5);
  sub_24B4B451C(v3, &v4);
  if (__p)
  {
    int v12 = __p;
    operator delete(__p);
  }
  if (v8)
  {
    __int16 v9 = v8;
    operator delete(v8);
  }
  if (v5)
  {
    long long v6 = v5;
    operator delete(v5);
  }
}

void sub_24B4BA68C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

void sub_24B4BA6D0(int *a1)
{
  uint64_t v2 = sub_24B4B1200();
  uint64_t v3 = *(NSObject **)(v2 + 88);
  block[0] = MEMORY[0x263EF8330];
  block[1] = 3221225472;
  block[2] = sub_24B4B1DBC;
  block[3] = &unk_265293AF8;
  void block[4] = v2;
  dispatch_async(v3, block);
  int v5 = *a1;
  if (*a1)
  {
    uint64_t v6 = a1[13];
    if (a1[14] == 1) {
      int v7 = 1;
    }
    else {
      int v7 = 3;
    }
    if (a1[14] == 1) {
      int v8 = 1;
    }
    else {
      int v8 = 2;
    }
    if (v6 > 4) {
      int v9 = 0;
    }
    else {
      int v9 = dword_24B4C6C6C[v6];
    }
    LOWORD(v4) = *((_WORD *)a1 + 4);
    uint64_t v10 = *((void *)a1 + 2);
    uint64_t v11 = *((void *)a1 + 4);
    char v12 = *((unsigned char *)a1 + 128);
    char v13 = *((unsigned char *)a1 + 63);
    unint64_t v14 = ((unint64_t)(a1[16] & 4) << 17) | (4 * (a1[16] & 3));
    v21[0] = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
    v21[1] = xmmword_24B4C6550;
    __asm { FMOV            V3.2D, #-1.0 }
    v21[2] = _Q3;
    uint64_t v22 = 0;
    int v23 = v8;
    int v24 = v9;
    double v25 = (double)v4;
    uint64_t v26 = v10;
    uint64_t v27 = v11;
    int v28 = v7;
    int v29 = 2;
    char v30 = v12;
    char v31 = v13;
    unint64_t v32 = v14;
    uint64_t v33 = 0;
    int v34 = v5;
    uint64_t v20 = *((void *)a1 + 62);
    if (v20) {
      (*(void (**)(uint64_t, _OWORD *))(*(void *)v20 + 48))(v20, v21);
    }
  }
  sub_24B4B718C(a1);
}

void *sub_24B4BA838(uint64_t a1, uint64_t a2)
{
  unsigned char v5[4] = *MEMORY[0x263EF8340];
  uint64_t v3 = (uint8_t *)sub_24B4B1200();
  sub_24B4B6550((uint64_t)v5, a2);
  sub_24B4B1E34(v3, (uint64_t)v5);
  return sub_24B3E86CC(v5);
}

void sub_24B4BA8B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_24B3E86CC((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_24B4BA8D0(uint64_t a1)
{
  uint64_t v2 = qword_26B17C480;
  if (os_log_type_enabled((os_log_t)qword_26B17C480, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)unint64_t v4 = 0;
    _os_log_debug_impl(&dword_24B3DE000, v2, OS_LOG_TYPE_DEBUG, "SessionHandler,#process,deleteGnssData", v4, 2u);
  }
  return sub_24B4B9BA8(a1);
}

void *sub_24B4BA944(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_24B4BA9C8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_24B4BAA4C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_24B4BAAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_24B4BAB68(void *a1)
{
  *a1 = &unk_26FE86468;
  sub_24B3E893C(a1 + 1);
  return a1;
}

void sub_24B4BABAC(void *a1)
{
  *a1 = &unk_26FE86468;
  sub_24B3E893C(a1 + 1);
  JUMPOUT(0x24C5D2700);
}

void *sub_24B4BAC10(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x28uLL);
  *uint64_t v2 = &unk_26FE86468;
  sub_24B4BAAD0((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_24B4BAC64(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_24B4BAC78(uint64_t a1, void *a2)
{
  *a2 = &unk_26FE86468;
  return sub_24B4BAAD0((uint64_t)(a2 + 1), a1 + 8);
}

void *sub_24B4BACA4(uint64_t a1)
{
  return sub_24B3E893C((void *)(a1 + 8));
}

void sub_24B4BACAC(void *a1)
{
  sub_24B3E893C(a1 + 1);
  operator delete(a1);
}

uint64_t sub_24B4BACE8(uint64_t a1, _OWORD *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  long long v3 = a2[5];
  void v8[4] = a2[4];
  v8[5] = v3;
  long long v4 = a2[7];
  v8[6] = a2[6];
  v8[7] = v4;
  long long v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  long long v6 = a2[3];
  _DWORD v8[2] = a2[2];
  void v8[3] = v6;
  if (!v2) {
    sub_24B3E364C();
  }
  return (*(uint64_t (**)(uint64_t, _OWORD *))(*(void *)v2 + 48))(v2, v8);
}

uint64_t sub_24B4BAD58(uint64_t a1, uint64_t a2)
{
  if (sub_24B3E867C(a2, (uint64_t)&unk_26FE86510)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_24B4BAD98()
{
  return &unk_26FE86510;
}

uint64_t sub_24B4BADA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_24B4BAE3C(void *a1)
{
  *a1 = &unk_26FE86558;
  sub_24B3E8F20(a1 + 1);
  return a1;
}

void sub_24B4BAE80(void *a1)
{
  *a1 = &unk_26FE86558;
  sub_24B3E8F20(a1 + 1);
  JUMPOUT(0x24C5D2700);
}

void *sub_24B4BAEE4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x28uLL);
  *uint64_t v2 = &unk_26FE86558;
  sub_24B4BADA4((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_24B4BAF38(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_24B4BAF4C(uint64_t a1, void *a2)
{
  *a2 = &unk_26FE86558;
  return sub_24B4BADA4((uint64_t)(a2 + 1), a1 + 8);
}

void *sub_24B4BAF78(uint64_t a1)
{
  return sub_24B3E8F20((void *)(a1 + 8));
}

void sub_24B4BAF80(void *a1)
{
  sub_24B3E8F20(a1 + 1);
  operator delete(a1);
}

uint64_t sub_24B4BAFBC(uint64_t a1, const void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  memcpy(v4, a2, sizeof(v4));
  if (!v2) {
    sub_24B3E364C();
  }
  return (*(uint64_t (**)(uint64_t, unsigned char *))(*(void *)v2 + 48))(v2, v4);
}

uint64_t sub_24B4BB024(uint64_t a1, uint64_t a2)
{
  if (sub_24B3E867C(a2, (uint64_t)&unk_26FE86600)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_24B4BB064()
{
  return &unk_26FE86600;
}

uint64_t sub_24B4BB070(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_24B4BB108(void *a1)
{
  *a1 = &unk_26FE86648;
  sub_24B3EA38C(a1 + 1);
  return a1;
}

void sub_24B4BB14C(void *a1)
{
  *a1 = &unk_26FE86648;
  sub_24B3EA38C(a1 + 1);
  JUMPOUT(0x24C5D2700);
}

void *sub_24B4BB1B0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x28uLL);
  *uint64_t v2 = &unk_26FE86648;
  sub_24B4BB070((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_24B4BB204(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_24B4BB218(uint64_t a1, void *a2)
{
  *a2 = &unk_26FE86648;
  return sub_24B4BB070((uint64_t)(a2 + 1), a1 + 8);
}

void *sub_24B4BB244(uint64_t a1)
{
  return sub_24B3EA38C((void *)(a1 + 8));
}

void sub_24B4BB24C(void *a1)
{
  sub_24B3EA38C(a1 + 1);
  operator delete(a1);
}

uint64_t sub_24B4BB288(uint64_t a1, const void *a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 32);
  memcpy(v4, a2, sizeof(v4));
  if (!v2) {
    sub_24B3E364C();
  }
  return (*(uint64_t (**)(uint64_t, unsigned char *))(*(void *)v2 + 48))(v2, v4);
}

uint64_t sub_24B4BB31C(uint64_t a1, uint64_t a2)
{
  if (sub_24B3E867C(a2, (uint64_t)&unk_26FE866F0)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

void *sub_24B4BB35C()
{
  return &unk_26FE866F0;
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x270EE4278]();
  return result;
}

CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks)
{
  return (CFArrayRef)MEMORY[0x270EE42F0](allocator, values, numValues, callBacks);
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return (CFDataRef)MEMORY[0x270EE47C8](allocator, bytes, length);
}

void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer)
{
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFDictionaryRef)MEMORY[0x270EE4908](allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

CFStringRef CFErrorCopyDescription(CFErrorRef err)
{
  return (CFStringRef)MEMORY[0x270EE49A0](err);
}

CFIndex CFErrorGetCode(CFErrorRef err)
{
  return MEMORY[0x270EE49D0](err);
}

CFErrorDomain CFErrorGetDomain(CFErrorRef err)
{
  return (CFErrorDomain)MEMORY[0x270EE49D8](err);
}

void CFReadStreamClose(CFReadStreamRef stream)
{
}

CFErrorRef CFReadStreamCopyError(CFReadStreamRef stream)
{
  return (CFErrorRef)MEMORY[0x270EE4D78](stream);
}

CFTypeRef CFReadStreamCopyProperty(CFReadStreamRef stream, CFStreamPropertyKey propertyName)
{
  return (CFTypeRef)MEMORY[0x270EE4D80](stream, propertyName);
}

CFStreamStatus CFReadStreamGetStatus(CFReadStreamRef stream)
{
  return MEMORY[0x270EE4DA0](stream);
}

Boolean CFReadStreamHasBytesAvailable(CFReadStreamRef stream)
{
  return MEMORY[0x270EE4DB0](stream);
}

Boolean CFReadStreamOpen(CFReadStreamRef stream)
{
  return MEMORY[0x270EE4DB8](stream);
}

CFIndex CFReadStreamRead(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength)
{
  return MEMORY[0x270EE4DC0](stream, buffer, bufferLength);
}

Boolean CFReadStreamSetClient(CFReadStreamRef stream, CFOptionFlags streamEvents, CFReadStreamClientCallBack clientCB, CFStreamClientContext *clientContext)
{
  return MEMORY[0x270EE4DD0](stream, streamEvents, clientCB, clientContext);
}

void CFReadStreamSetDispatchQueue(CFReadStreamRef stream, dispatch_queue_t q)
{
}

Boolean CFReadStreamSetProperty(CFReadStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue)
{
  return MEMORY[0x270EE4DE0](stream, propertyName, propertyValue);
}

void CFRelease(CFTypeRef cf)
{
}

void CFStreamCreatePairWithSocketToHost(CFAllocatorRef alloc, CFStringRef host, UInt32 port, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream)
{
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x270EE50E0](alloc, cStr, *(void *)&encoding);
}

const char *__cdecl CFStringGetCStringPtr(CFStringRef theString, CFStringEncoding encoding)
{
  return (const char *)MEMORY[0x270EE5180](theString, *(void *)&encoding);
}

void CFWriteStreamClose(CFWriteStreamRef stream)
{
}

CFErrorRef CFWriteStreamCopyError(CFWriteStreamRef stream)
{
  return (CFErrorRef)MEMORY[0x270EE5520](stream);
}

CFTypeRef CFWriteStreamCopyProperty(CFWriteStreamRef stream, CFStreamPropertyKey propertyName)
{
  return (CFTypeRef)MEMORY[0x270EE5528](stream, propertyName);
}

CFStreamStatus CFWriteStreamGetStatus(CFWriteStreamRef stream)
{
  return MEMORY[0x270EE5548](stream);
}

Boolean CFWriteStreamOpen(CFWriteStreamRef stream)
{
  return MEMORY[0x270EE5558](stream);
}

Boolean CFWriteStreamSetClient(CFWriteStreamRef stream, CFOptionFlags streamEvents, CFWriteStreamClientCallBack clientCB, CFStreamClientContext *clientContext)
{
  return MEMORY[0x270EE5568](stream, streamEvents, clientCB, clientContext);
}

void CFWriteStreamSetDispatchQueue(CFWriteStreamRef stream, dispatch_queue_t q)
{
}

Boolean CFWriteStreamSetProperty(CFWriteStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue)
{
  return MEMORY[0x270EE5578](stream, propertyName, propertyValue);
}

CFIndex CFWriteStreamWrite(CFWriteStreamRef stream, const UInt8 *buffer, CFIndex bufferLength)
{
  return MEMORY[0x270EE5590](stream, buffer, bufferLength);
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return (SecCertificateRef)MEMORY[0x270EFD7E0](allocator, data);
}

SecPolicyRef SecPolicyCreateBasicX509(void)
{
  return (SecPolicyRef)MEMORY[0x270EFDB48]();
}

BOOL SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef *error)
{
  return MEMORY[0x270EFDD60](trust, error);
}

OSStatus SecTrustSetAnchorCertificates(SecTrustRef trust, CFArrayRef anchorCertificates)
{
  return MEMORY[0x270EFDDA8](trust, anchorCertificates);
}

OSStatus SecTrustSetPolicies(SecTrustRef trust, CFTypeRef policies)
{
  return MEMORY[0x270EFDDE0](trust, policies);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(wireless_diagnostics::google::protobuf::MessageLite *this, const void *a2)
{
  return MEMORY[0x270F9AC10](this, a2);
}

void wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(wireless_diagnostics::google::protobuf::MessageLite *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::GoogleOnceInitImpl()
{
  return MEMORY[0x270F9AC48]();
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9AC78](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  return MEMORY[0x270F9AC80](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  return MEMORY[0x270F9AC88](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  return MEMORY[0x270F9AC90](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  return MEMORY[0x270F9AC98](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9ACA0](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9ACB8](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9ACC0](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x270F9ACE0](this);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(wireless_diagnostics::google::protobuf::io::CodedOutputStream *this)
{
  return MEMORY[0x270F9AD10](this);
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage()
{
  return MEMORY[0x270F9AD78]();
}

void wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage(wireless_diagnostics::google::protobuf::internal::LogMessage *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<()
{
  return MEMORY[0x270F9AD88]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=()
{
  return MEMORY[0x270F9ADA8]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::VerifyVersion(wireless_diagnostics::google::protobuf::internal *this, uint64_t a2, uint64_t a3, const char *a4)
{
  return MEMORY[0x270F9AEF0](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString()
{
  return MEMORY[0x270F9AEF8]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes()
{
  return MEMORY[0x270F9AF00]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, float a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF08](this, a2, a4, a3);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF18](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF20](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, double a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF28](this, a2, a4, a3);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString()
{
  return MEMORY[0x270F9AF40]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF48](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF50](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, const wireless_diagnostics::google::protobuf::MessageLite *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AF68](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline()
{
  return MEMORY[0x270F9AF80]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes()
{
  return MEMORY[0x270F9AF90]();
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  return MEMORY[0x270F9AF98](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AFA0](this, a2, a3, a4);
}

uint64_t wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum(wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, uint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  return MEMORY[0x270F9AFA8](this, a2, a3, a4);
}

void wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0(wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *this)
{
}

uint64_t wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  return MEMORY[0x270F9AFC8](this);
}

uint64_t wireless_diagnostics::google::protobuf::MessageLite::SerializeToArray(wireless_diagnostics::google::protobuf::MessageLite *this, void *a2)
{
  return MEMORY[0x270F9B010](this, a2);
}

uint64_t wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(wireless_diagnostics::google::protobuf::io::CodedInputStream *this)
{
  return MEMORY[0x270F9B038](this);
}

uint64_t std::stringbuf::str()
{
  return MEMORY[0x270F98268]();
}

const std::locale::facet *__cdecl std::locale::use_facet(const std::locale *this, std::locale::id *a2)
{
  return (const std::locale::facet *)MEMORY[0x270F982E8](this, a2);
}

std::locale std::ios_base::getloc(const std::ios_base *this)
{
  return (std::locale)MEMORY[0x270F982F8](this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x270F98330](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x270F98428](this);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x270F98498](this, __s);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x270F984A0](this, __s, __n);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x270F984B8](this, __s);
}

std::string *__cdecl std::string::insert(std::string *this, std::string::size_type __pos, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x270F984E0](this, __pos, __s);
}

std::string *__cdecl std::string::basic_string(std::string *this, const std::string *__str, std::string::size_type __pos, std::string::size_type __n, std::allocator<char> *__a)
{
  return (std::string *)MEMORY[0x270F98548](this, __str, __pos, __n, __a);
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return (std::string *)MEMORY[0x270F98560](this, __str);
}

uint64_t std::ostream::sentry::sentry()
{
  return MEMORY[0x270F98758]();
}

uint64_t std::ostream::sentry::~sentry()
{
  return MEMORY[0x270F98760]();
}

uint64_t std::ostream::operator<<()
{
  return MEMORY[0x270F987A8]();
}

{
  return MEMORY[0x270F987B8]();
}

uint64_t std::iostream::~basic_iostream()
{
  return MEMORY[0x270F98870]();
}

uint64_t std::streambuf::basic_streambuf()
{
  return MEMORY[0x270F988A8]();
}

uint64_t std::streambuf::~streambuf()
{
  return MEMORY[0x270F988B0]();
}

void std::condition_variable::notify_one(std::condition_variable *this)
{
}

void std::condition_variable::__do_timed_wait(std::condition_variable *this, std::unique_lock<std::mutex> *__lk, std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long long, std::ratio<1, 1000000000>>> a3)
{
}

void std::condition_variable::~condition_variable(std::condition_variable *this)
{
}

void std::__throw_system_error(int __ev, const char *__what_arg)
{
}

void std::mutex::lock(std::mutex *this)
{
}

void std::mutex::unlock(std::mutex *this)
{
}

void std::mutex::~mutex(std::mutex *this)
{
}

std::chrono::steady_clock::time_point std::chrono::steady_clock::now(void)
{
  return (std::chrono::steady_clock::time_point)MEMORY[0x270F98C18]();
}

std::chrono::system_clock::time_point std::chrono::system_clock::now(void)
{
  return (std::chrono::system_clock::time_point)MEMORY[0x270F98C28]();
}

void std::locale::~locale(std::locale *this)
{
}

void std::ios_base::__set_badbit_and_consider_rethrow(std::ios_base *this)
{
}

void std::ios_base::init(std::ios_base *this, void *__sb)
{
}

void std::ios_base::clear(std::ios_base *this, std::ios_base::iostate __state)
{
}

uint64_t std::ios::~ios()
{
  return MEMORY[0x270F98DE8]();
}

std::string *__cdecl std::to_string(std::string *__return_ptr retstr, int __val)
{
  return (std::string *)MEMORY[0x270F98E08](retstr, *(void *)&__val);
}

void std::exception::~exception(std::exception *this)
{
}

void std::terminate(void)
{
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete(void *__p, const std::nothrow_t *a2)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz, const std::nothrow_t *a2)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x270F98EC0](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x270F98ED8](a1);
}

void __cxa_end_catch(void)
{
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_guard_abort(__guard *a1)
{
}

int __cxa_guard_acquire(__guard *a1)
{
  return MEMORY[0x270F98F10](a1);
}

void __cxa_guard_release(__guard *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

void *__dynamic_cast(const void *lpsrc, const struct __class_type_info *lpstype, const struct __class_type_info *lpdtype, ptrdiff_t s2d)
{
  return (void *)MEMORY[0x270F98F30](lpsrc, lpstype, lpdtype, s2d);
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x270ED9458](attr, *(void *)&qos_class, *(void *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x270ED9460](label, attr);
}

void dispatch_release(dispatch_object_t object)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x270ED9510](type, handle, mask, queue);
}

uintptr_t dispatch_source_get_data(dispatch_source_t source)
{
  return MEMORY[0x270ED9518](source);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x270ED95A8](when, delta);
}

void exit(int a1)
{
}

void free(void *a1)
{
}

long double log(long double __x)
{
  MEMORY[0x270EDA0A8](__x);
  return result;
}

void longjmp(jmp_buf a1, int a2)
{
}

uint64_t mach_continuous_time(void)
{
  return MEMORY[0x270EDA158]();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return MEMORY[0x270EDA288](info);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA388](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA390](size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x270EDA498](__b, *(void *)&__c, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x270EDA9A0](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

long double pow(long double __x, long double __y)
{
  MEMORY[0x270EDACF8](__x, __y);
  return result;
}

int setjmp(jmp_buf a1)
{
  return MEMORY[0x270EDB3F8](a1);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x270EDB510](__str, __size, __format);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x270EDB5B0](__s1, __s2);
}

char *__cdecl strcpy(char *__dst, const char *__src)
{
  return (char *)MEMORY[0x270EDB5C0](__dst, __src);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x270EDB610](__s);
}

size_t strnlen(const char *__s1, size_t __n)
{
  return MEMORY[0x270EDB658](__s1, __n);
}